- DOI: https://doi.org/10.3390/s19153287
  analysis: '>'
  authors:
  - Paula Fraga‐Lamas
  - Mikel Celaya-Echarri
  - Peio López-Iturri
  - Luis Castedo
  - Leyre Azpilicueta
  - Erik Aguirre
  - Manuel Suárez-Albela
  - Francisco Falcone
  - Tiago M. Fernández‐Caramés
  citation_count: 49
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nDesign and Experimental Validation of a LoRaWAN\n\
    Fog Computing Based Architecture for\nIoT Enabled Smart Campus Applications †\n\
    Paula Fraga-Lamas 1,*\n, Mikel Celaya-Echarri 2\n, Peio Lopez-Iturri 3,4\n, Luis\
    \ Castedo 1\n,\nLeyre Azpilicueta 2\n, Erik Aguirre 3\n, Manuel Suárez-Albela\
    \ 1\n, Francisco Falcone 3,4\nand\nTiago M. Fernández-Caramés 1,*\n1\nDepartment\
    \ of Computer Engineering, Faculty of Computer Science, Centro de investigación\
    \ CITIC,\nUniversidade da Coruña, 15071 A Coruña, Spain\n2\nSchool of Engineering\
    \ and Sciences, Tecnologico de Monterrey, 64849 Monterrey, NL, Mexico\n3\nDepartment\
    \ of Electric, Electronic and Communication Engineering, Public University of\
    \ Navarre,\n31006 Pamplona, Spain\n4\nInstitute for Smart Cities, Public University\
    \ of Navarre, 31006 Pamplona, Spain\n*\nCorrespondence: paula.fraga@udc.es (P.F.-L.);\
    \ tiago.fernandez@udc.es (T.M.F.-C.);\nTel.: +34-981-167-000 (ext. 6051) (P.F.-L.)\n\
    †\nThis paper is an extended version of our paper published in Fraga-Lamas, P.;\
    \ Celaya-Echarri, M.;\nLopez-Iturri, P.; Fernández-Caramés, T.M.; Azpilicueta,\
    \ L.; Aguirre, E.; Suárez-Albela, M.; Falcone, F.;\nCastedo, L. Analysis, Design\
    \ and Empirical Validation of a Smart Campus based on LoRaWAN.\nIn Proceedings\
    \ of the 5th International Electronic Conference on Sensors and Applications,\n\
    15–30 November 2018.\nReceived: 28 June 2019; Accepted: 23 July 2019; Published:\
    \ 26 July 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\
    \a\nAbstract:\nA smart campus is an intelligent infrastructure where smart sensors\
    \ and actuators\ncollaborate to collect information and interact with the machines,\
    \ tools, and users of a university\ncampus. As in a smart city, a smart campus\
    \ represents a challenging scenario for Internet of Things\n(IoT) networks, especially\
    \ in terms of cost, coverage, availability, latency, power consumption, and\n\
    scalability. The technologies employed so far to cope with such a scenario are\
    \ not yet able to\nmanage simultaneously all the previously mentioned demanding\
    \ requirements. Nevertheless, recent\nparadigms such as fog computing, which extends\
    \ cloud computing to the edge of a network, make\npossible low-latency and location-aware\
    \ IoT applications. Moreover, technologies such as Low-Power\nWide-Area Networks\
    \ (LPWANs) have emerged as a promising solution to provide low-cost and\nlow-power\
    \ consumption connectivity to nodes spread throughout a wide area. Speciﬁcally,\
    \ the\nLong-Range Wide-Area Network (LoRaWAN) standard is one of the most recent\
    \ developments,\nreceiving attention both from industry and academia. In this\
    \ article, the use of a LoRaWAN fog\ncomputing-based architecture is proposed\
    \ for providing connectivity to IoT nodes deployed in\na campus of the University\
    \ of A Coruña (UDC), Spain. To validate the proposed system, the\nsmart campus\
    \ has been recreated realistically through an in-house developed 3D Ray-Launching\n\
    radio-planning simulator that is able to take into consideration even small details,\
    \ such as trafﬁc lights,\nvehicles, people, buildings, urban furniture, or vegetation.\
    \ The developed tool can provide accurate\nradio propagation estimations within\
    \ the smart campus scenario in terms of coverage, capacity, and\nenergy efﬁciency\
    \ of the network. The results obtained with the planning simulator can then be\n\
    compared with empirical measurements to assess the operating conditions and the\
    \ system accuracy.\nSpeciﬁcally, this article presents experiments that show the\
    \ accurate results obtained by the planning\nsimulator in the largest scenario\
    \ ever built for it (a campus that covers an area of 26,000 m2), which are\ncorroborated\
    \ with empirical measurements. Then, how the tool can be used to design the deployment\n\
    of LoRaWAN infrastructure for three smart campus outdoor applications is explained:\
    \ a mobility\npattern detection system, a smart irrigation solution, and a smart\
    \ trafﬁc-monitoring deployment.\nSensors 2019, 19, 3287; doi:10.3390/s19153287\n\
    www.mdpi.com/journal/sensors\nSensors 2019, 19, 3287\n2 of 30\nConsequently, the\
    \ presented results provide guidelines to smart campus designers and developers,\n\
    and for easing LoRaWAN network deployment and research in other smart campuses\
    \ and large\nenvironments such as smart cities.\nKeywords: IoT; smart campus;\
    \ sustainability; fog computing; outdoor applications; LPWAN;\nLoRaWAN; 3D Ray-Launching;\
    \ smart cities; Wireless Sensor Networks (WSN)\n1. Introduction\nA smart campus\
    \ is an infrastructure similar to a smart city that makes use of Internet of Things\n\
    (IoT) solutions [1–6] to connect, monitor, control, optimize, and automate the\
    \ systems of a university.\nToday, a smart campus represents a challenging scenario\
    \ for IoT networks, especially in terms cost,\ncoverage, availability, latency,\
    \ security, power consumption, and scalability.\nThe area covered by a campus\
    \ varies substantially depending on the university, its location,\nthe ﬁnancial\
    \ endowment, and the year of founding. For example, Berry College (Floyd County,\n\
    Georgia, United States), is often considered the largest contiguous rural campus\
    \ in the world: it covers\n27,000 acres (109.26 km2) [7] of land. Other examples\
    \ are the suburban/urban campuses of Duke\nUniversity (Durham, NC, USA), which\
    \ are deployed on 9350 acres (37.83 km2) [8], and the campus\nof Stanford University\
    \ (Stanford, CA, USA), which covers 8180 acres (33 km2) [9]. Regardless of\ntheir\
    \ initial surface area, it is common that campuses grow considerably as time goes\
    \ by [10], hence\ninstitutions usually devise long-term sustainability plans to\
    \ envision their growth in the future [11–13].\nWhen a campus provides smart IoT\
    \ services, it is necessary to provide communications\nconnectivity to IoT nodes\
    \ and gateways. Such a connectivity can be provided in a quite straightforward\n\
    way indoors thanks to the use of popular technologies such as Wi-Fi, but, outdoors,\
    \ technology selection\nbecomes more complex, since it is not only necessary to\
    \ provide good coverage and a cost-effective\ndeployment, but also to decrease\
    \ the communications energy consumption to maximize IoT node\nbattery life.\n\
    To tackle such an issue in wide areas, a set of technologies grouped under the\
    \ term Low-Power\nWide Area Network (LPWAN) seem to be a good selection, since,\
    \ in comparison to other previous\ntechnologies, they provide a wider area communications\
    \ range and reduced energy consumption.\nIn fact, LPWAN technologies have emerged\
    \ as an enabling technology for IoT and Machine-to-Machine\n(M2M) communications\
    \ [14] mainly due to their capabilities related to range, cost, power consumption,\n\
    and capacity. Examples of such technologies are NB-IoT [15], SigFox [16], Ingenu\
    \ [17], Weightless [18]\nor LoRaWAN [19] (a detailed comparison of these and other\
    \ LPWAN technologies is given later\nin Section 2.2).\nIn the case of LoRaWAN,\
    \ it is gaining momentum from both industry and academia [20–22].\nLoRaWAN deﬁnes\
    \ a communications protocol and a system architecture for the network. In addition,\n\
    it uses LoRa for its physical layer [23], which is able to create long-range communications\
    \ links\nand makes use of a Chirp Spread Spectrum (CSS) modulation that conserves\
    \ the power features\nof Frequency Shifting Keying (FSK) while increasing its\
    \ communications range. All these features\nmake LoRaWAN a good candidate for\
    \ providing wireless communications to outdoor IoT nodes in a\nsmart campus.\n\
    Traditionally, gateways connect the IoT nodes with the cloud and among them. The\
    \ cloud\nis basically one or more servers with large computational power, communication,\
    \ and storing\ncapabilities that receives, processes, and analyzes the data collected\
    \ from the IoT nodes by performing\ncomputational-intensive tasks. Although cloud-based\
    \ solutions are appropriate at a small scale, when\nthe number of IoT nodes grows\
    \ signiﬁcantly and, consequently, the network trafﬁc they generate,\ncongestion\
    \ may lead to increasing latency responses and slower data processing. Among the\
    \ different\nalternatives to confront this challenge and to guarantee a ﬂexible,\
    \ scalable, robust, secure, and\nSensors 2019, 19, 3287\n3 of 30\nenergy-efﬁcient\
    \ deployment of IoT networks, the design and implementation of a fog computing\n\
    architecture was chosen. Fog computing supports physically distributed, low-latency\
    \ (e.g., real-time\nor quasi real-time responses) and location-aware applications\
    \ that decrease the network trafﬁc and\nthe computational load of traditional\
    \ cloud computing systems by processing in the IoT nodes most\nof the data generated\
    \ by their sensors and actuators and unburdening the higher layers from data\n\
    processing [24].\nFurthermore, when designing a smart campus, it is necessary\
    \ to plan how LoRaWAN gateways\nand nodes are deployed to guarantee good IoT node\
    \ coverage while minimizing the number of\ngateways (i.e., minimizing the smart\
    \ campus communications infrastructure cost). The problem is that\nthere are only\
    \ a few examples of academic and commercial tools that create such a planning\
    \ [25,26], so\ndevelopers have to adapt tools previously optimized for other technologies\
    \ (e.g., Wi-Fi [27]) or have to\ncarry out tedious empirical measurements throughout\
    \ the campus [28,29].\nThis article confronts the mentioned challenges by designing\
    \ and implementing a cost-efﬁcient,\nscalable, and low-power consumption LoRaWAN\
    \ fog computing-based architecture for wide areas.\nSpeciﬁcally, the system was\
    \ designed with the aim of developing novel latency-sensitive IoT outdoor\napplications\
    \ that create more sustainable and intelligent campuses. The following are the\
    \ main\ncontributions of the article, which as of writing, have not been found\
    \ together in the literature:\n•\nTo establish the basics, it presents the main\
    \ characteristics of the so-called smart campuses\ntogether with a detailed review\
    \ of the state of the art of the main and the latest communications\narchitectures\
    \ and technologies, previous academic deployments, novel potential LPWAN\napplications\
    \ and relevant tools for radio propagation modeling and planning.\n•\nIt thoroughly\
    \ details the design, implementation, and practical evaluation of a scalable\n\
    LPWAN-based communications architecture for supporting the smart campus IoT applications.\n\
    •\nThe article presents the 3D modeling of a real 26,000 m2 campus whose LoRaWAN\
    \ wireless\npropagation characteristics are evaluated with an in-house developed\
    \ 3D Ray-launching\nradio-planning simulator. The results obtained by such a simulator\
    \ are validated by comparing\nthem with empirical LoRaWAN measurements obtained\
    \ throughout the campus.\n•\nIt details how the radio-planning tool can be used\
    \ to design the deployment of LoRaWAN\ninfrastructure for three smart campus applications:\
    \ a mobility pattern detection system, a smart\nirrigation solution, and a smart\
    \ trafﬁc-monitoring deployment.\nThus, it demonstrates the\nusefulness of the\
    \ proposed tools and methodology, which are able to provide fast guidelines to\n\
    smart campus designers and developers, and that can also be used for easing LoRaWAN\
    \ network\ndeployment and research in other large environments such as smart cities.\n\
    The rest of this article is structured as follows. Section 2 reviews the state\
    \ of the art on smart\ncampuses: their characteristics, technologies, architectures,\
    \ previous relevant deployments, potential\napplications, and the previous work\
    \ on modeling and planning a smart campus. Section 3 details the\narchitecture\
    \ of the proposed system and the characteristics of the LoRaWAN testbed implementation.\n\
    Section 4 describes the proposed planning simulator and the analyzed scenario.\
    \ Section 5 is dedicated\nto the experiments. Finally, Section 6 presents the\
    \ main discussion on the lessons learned from these\nexperiences, while Section\
    \ 7 is devoted to the conclusions.\n2. Related Work\n2.1. Characteristics of a\
    \ Smart Campus\nIt is ﬁrst important to note that in the literature, some authors\
    \ use the term smart campus to refer\nto digital online platforms to manage learning\
    \ content [30,31] or to strategies or solutions to increase\nthe smartness of\
    \ the students [32–34]. In this article, the term smart campus is used for referring\
    \ to the\nhardware infrastructure and software that provides smart services and\
    \ applications to the campus\nusers (i.e., to students and to the university staff).\
    \ In this regard, a smart campus, such as a smart city,\ncan be modeled along\
    \ six different smart ﬁelds [35]:\nSensors 2019, 19, 3287\n4 of 30\n•\nSmart governance.\
    \ It provides users with mechanisms to participate in decision-making or in\n\
    public services.\n•\nSmart people. It deals with social issues, including the\
    \ engagement in campus events and\nlearning activities.\n•\nSmart mobility. This\
    \ ﬁeld is related to the accessibility of the campus, including the use of efﬁcient,\n\
    clean, safe, and intelligent transport means.\n•\nSmart environment. It contemplates\
    \ the monitoring and protection of the environment, as well as\nthe sustainable\
    \ management of the available resources.\n•\nSmart living. The technologies used\
    \ in these ﬁelds can monitor diverse living aspects in the\ncampus facilities,\
    \ such as personal safety [36], health [37] or crowd sensing [38].\n•\nSmart economy.\
    \ It is related to the competitiveness of the campus in terms of entrepreneurship,\n\
    innovation, or productivity.\nThese smart campus ﬁelds can be further reﬁned to\
    \ determine speciﬁc smart services and solutions\nthat should be ideally provided\
    \ by a smart campus [39]:\n•\nSmart living services:\nroom occupation, classroom/lab\
    \ equipment access control, health\nmonitoring and alert services, classroom attendance\
    \ systems, teaching interaction services, or\ncontext-aware applications (e.g.,\
    \ guidance or navigation solutions).\n•\nSmart environment solutions: they include\
    \ solutions for monitoring waste, water consumption,\nair quality (e.g., pollution)\
    \ or the status of the campus green areas.\n•\nSmart energy systems: they control\
    \ and monitor the production, distribution, and consumption\nof energy in a campus.\n\
    These novel smart services and solutions make use of a growing number of enabling\
    \ technologies,\nbeing the most relevant represented in Figure 1.\n \nSmart\n\
    campus\n \n \nSmart mobility, \nITS \n \n \nSmart \nbuildings \n \n \n \nSmart\n\
    payments \n \n \n \nSmart cities \n \nSmart  \nconsumption \n \n \nUser  \nprofiling \n\
     \n \nContext­aware \napplications \n \n \nClassroom \natendance \n \nInfrastructure \n\
    monitoring \n \nHealth \nmonitoring \n \n \nSmart  \n governance \nCloud and  \n\
    edge \n computing Integration  \nsystems \nSimulation\nsoftware \nBlockchain\n\
    Artificial \nintelligence \nAugmented\nand virtual\nreality \nUAVs,\nautonomous\n\
    vehicles \nCybersecurity\nCyber­physical\nsystems\nIoT\n \nSmart energy, \nsmart grid \n\
    Figure 1. Most relevant enabling technologies and applications in a smart campus.\n\
    Sensors 2019, 19, 3287\n5 of 30\n2.2. Smart Campus Communications Architectures\
    \ and Technologies\nIn the literature, different approaches to smart campus architectures\
    \ can be found, but it seems\nthat two main paradigms drive clearly the most popular\
    \ designs: IoT and cloud computing [40].\nFor instance, a cloud-based smart campus\
    \ architecture is presented in [41]. In such a work the authors\nstate that they\
    \ were able to build their smart campus platform within three months thanks to\
    \ the use of\nCommercial Off-The-Shelf (COTS) hardware and Microsoft Azure cloud\
    \ services. Regarding IoT, it has\nbeen suggested as a tool to be considered in\
    \ the architecture of a smart campus to ease the development\nof learning applications,\
    \ access control systems, smart grids or water management systems [42,43].\nNonetheless,\
    \ cloud computing and IoT solutions are often helped by Big Data techniques and\
    \ Service\nOriented Architecture (SOA) architectures, since they ease the processing\
    \ and analysis of the collected\ndata [44,45].\nSome authors have suggested alternative\
    \ paradigms for developing smart campuses. For example,\nin [46] a sort of opportunistic\
    \ communications architecture called Floating Content is proposed that\nshares\
    \ data through infrastructure-less services. The idea is essentially based on\
    \ the ability of each\nFloating Content node to produce information that is shared\
    \ with the interested users within a limited\nphysical area. Other researchers\
    \ propose similar architectures, but including enhancements in aspects\nsuch as\
    \ security [47].\nOther proposals revolve around the application of the Edge Computing\
    \ paradigm and its\nsub-types (e.g., Mobile Edge Computing, Fog Computing), which\
    \ have been previously applied\nto other ﬁelds [48,49]. Essentially, Edge Computing\
    \ ofﬂoads the cloud from a relevant amount of\nprocessing and communications transactions,\
    \ delegating such tasks to devices that are closer to the IoT\nnodes. In this\
    \ way, such edge devices not only ofﬂoad the cloud, but are also able to reduce\
    \ latency\nresponse and provide location-aware services [50]. For example, in\
    \ [51] the authors propose to enhance\na smart campus architecture by including\
    \ Edge Computing devices to provide trustworthy content\ncaching and bandwidth\
    \ allocation services to mobile users. Similarly, the authors of [52] harness\n\
    street lighting to embed Edge Computing node hardware to provide different smart\
    \ campus services.\nThe Mobile Edge Computing paradigm is used in [53], where\
    \ the authors present a smart campus\nplatform called WiCloud whose servers are\
    \ accessed through mobile phone base stations or wireless\naccess points. Furthermore,\
    \ other authors propose the use of fog computing nodes to improve user\nexperience\
    \ [54].\nDifferent wireless technologies have been used to interconnect IoT nodes\
    \ with smart campus\nplatforms. For instance, BLE and ZigBee were used in [41]\
    \ to provide both short and medium range\ncommunications, although ZigBee nodes\
    \ can be used as relays to cover very long distances. For this\nlatter reason,\
    \ in [55] the authors make use of a ZigBee mesh network to interconnect the nodes\
    \ of their\ncampus smart grid.\nWi-Fi has also been suggested for providing connectivity\
    \ [56], although the proposed applications\nare usually restricted to indoor locations\
    \ and nearby places. Bluetooth beacons give more freedom to\ncertain outdoor applications\
    \ [57], but they require deploying dense networks that may be difﬁcult to\nmanage\
    \ [58].\nMobile phone communications technologies (2G/3G/4G) have also been used\
    \ in the literature [59],\nbut in most cases just for the convenience of being\
    \ already embedded into smartphones. 5G is currently\nstill being tested, but\
    \ some researchers have already proposed its use for providing fast communications\n\
    and low-latency responses to smart campus platforms [60].\nAlthough 5G technologies\
    \ seem to have a bright future, as of writing, LPWANs are arguably\none of the\
    \ best alternatives for providing long-range and low-power communications. There\
    \ are\ndifferent LPWAN technologies such as SigFox [16], Random Phase Multiple\
    \ Access (RPMA) [17],\nWeightless [18], NB-IoT [15], Telensa [61] or NB-Fi [62].\
    \ Among such technologies, NB-IoT, SigFox and\nLoRa/LoRaWAN are currently the\
    \ most popular (their main characteristics are shown in Table 1).\nSensors 2019,\
    \ 19, 3287\n6 of 30\nTable 1. Comparison of the three most popular LPWAN technologies.\n\
    Technology\nOperating\nFrequency\nModulation Maximum\nRange\nSpeed\nMax. Payload\n\
    Bandwidth\nMain\nCharacteristics\nNB-IoT\nLTE in-band,\nguard-band\nQPSK\n<35\
    \ km\n<250 kbit/s 1500 bytes\n180 kHz\nLow power\nand wide-area\ncoverage\nSigFox\n\
    868–902 MHz\nDBPSK\n50 km\n100 kbit/s\n12 bytes\n0.1 kHz\nGlobal cellular\nnetwork\n\
    LoRa,\nLoRaWAN\nDiverse UHF ISM\n(Industrial, Scientiﬁc,\nMedical) bands (e.g.,\n\
    863–870 MHz and\n433 MHz in Europe)\nCSS\n<15 km\n0.25–50 kbit/s\n51–222 bytes\n\
    125 kHz\nLow power\nand wide\nrange\nThere are several recent studies on the performance\
    \ of LoRa/LoRaWAN technology for certain\nscenarios, but only a few describe real-world\
    \ LoRaWAN deployments explicitly aimed at providing\ncommunications to a smart\
    \ campus. For instance, Loriot et al. [63] conducted LoRaWAN measurements\nin\
    \ a French campus both outdoors and indoors and showed that the technology can\
    \ provide good\nperformance over the major part of the campus. Another development\
    \ is presented in [64], where\nthe authors set up a LoRaWAN-based air quality\
    \ system in their campus. Other interesting paper\nis [65], which details the\
    \ design of a LoRa mesh network system within a campus. Finally, in [66]\nthe\
    \ authors brieﬂy describe a smart campus platform that includes a LoRaWAN network\
    \ to support\nfaculty research projects.\n2.3. Smart Campus Deployments\nDespite\
    \ the existence of many well-documented smart campus applications, there are only\
    \ a few\nacademic articles that describe in detail the deployment of real smart\
    \ campuses.\nFor instance, in [67] an overview of the neOCampus of the Toulouse\
    \ III Paul Sabatier University\n(France) is given. Such a smart campus runs different\
    \ projects to make use of collaborative Wi-Fi, it\nprovides an open-data platform,\
    \ it fosters the reduction of the ecological footprint related to human\nactivities\
    \ and it aims for protecting the biodiversity of the campus.\nAnother interesting\
    \ smart campus is detailed in [56], where an IoT platform deployed across\ndifferent\
    \ engineering schools of the Universidad Politécnica de Madrid in its Moncloa\
    \ Campus (Spain)\nis described. Such an IoT platform is based on a cloud that\
    \ provides services that follow the SOA\nparadigm. Two main applications are implemented:\
    \ one for monitoring people ﬂows and another for\nenvironmental monitoring.\n\
    The Sapienza smart campus (Italy) roadmap is described in [68]. Such a paper is\
    \ interesting since,\nalthough it is a theoretical approach, it indicates how\
    \ to structure the services to be provided by the\nsmart campus infrastructure\
    \ to scale it appropriately.\nIn [45] the author gives details on the Birmingham\
    \ City University smart campus (United\nKingdom). The smart campus platform integrates\
    \ diverse business systems and smart building\nprotocols thanks to an Enterprise\
    \ Service Bus (ESB) and to the use of a SOA architecture, which\nprovides scalability,\
    \ ﬂexibility, and service orchestration.\nIn the United States, an example of\
    \ smart campus can be found in West Texas A&M University [66].\nAccording to the\
    \ authors, the smart campus is based on the IoT principles and covers an area\
    \ of\n176 acres, requiring connecting more than 42 different buildings. The described\
    \ project is focused\non two main tasks: to foster IoT collaboration and to provide\
    \ an appropriate security framework.\nThe proposed system has already supported\
    \ diverse IoT projects, such as a LoRaWAN pilot for\nmonitoring environmental\
    \ conditions or an OpenCV-based smart parking system.\nSensors 2019, 19, 3287\n\
    7 of 30\nFinally, a smart campus for Wuhan University of Technology (China) is\
    \ proposed in [69]. In such\na paper the authors depict an architecture based\
    \ on the IoT paradigm and in cloud-computing\ninfrastructure that supports multiple\
    \ applications.\n2.4. Potential Smart Campus LPWAN Applications\nAlthough a smart\
    \ campus can support multiple indoor applications [70], in general, in such\n\
    environments IoT nodes have access to power outlets and their communications can\
    \ be usually\neasily handled with already common communications transceivers (e.g.,\
    \ Wi-Fi, Bluetooth, Ethernet).\nIn contrast, this article focuses on the challenging\
    \ environments that arise outdoors due the usual\ndependency on batteries to run\
    \ IoT nodes and the need for exchanging data at relatively long distances\n(at\
    \ least several hundred meters and up to 2 km), where LPWAN devices outperform\
    \ other popular\ncommunications technologies.\nThe following are some of the most\
    \ relevant outdoor applications that have already been\nimplemented by using LPWAN\
    \ technologies:\n•\nSmart mobility and intelligent transport services. These applications\
    \ require ubiquitous outdoor\ncoverage to provide continuous data streams. For\
    \ instance, in [71] researchers of Soochow\nUniversity (China) propose the deployment\
    \ of different smart mobility applications for their\ncampuses, which include\
    \ automatic vehicle access systems, a parking guidance service, a bus\ntracking\
    \ system, or a bicycle rental service. Other authors also proposed similar solutions\n\
    for providing campus services for smart parking [72], electric mobility [73,74],\
    \ smart electric\ncharging [75], the use of autonomous vehicles [76] or bus tracking\
    \ [77].\n•\nSmart energy and smart grid monitoring. Certain energy sources (e.g.,\
    \ renewable sources such\nas photo-voltaic panels or windmills) and smart grid\
    \ components may be in remote locations,\nso it would be helpful to make use of\
    \ LPWAN technologies to monitor them. For this reason, in\nrecent years, special\
    \ attention has been given to smart campus microgrids [78], smart grids [79]\n\
    and smart energy systems [80].\n•\nResource consumption efﬁciency monitoring.\n\
    These ﬁelds include waste collection [81],\nwater management [82], energy monitoring\
    \ [83], power consumption optimization [84] and\nsustainability [5].\n•\nCampus\
    \ user proﬁling. It is interesting for the campus managers to determine user patterns\
    \ and\nbehaviors to optimize the provided services. Thus, user proﬁling can be\
    \ helpful to obtain mobility\npatterns, student daily walks, user activities,\
    \ or social interactions, which can be obtained through\nopportunistic messaging\
    \ apps [85], Wi-Fi monitoring [86] or on-board mobile phone sensors [87].\n•\n\
    Outdoor guidance and context-aware applications. This kind of systems are usually\
    \ based on\nsensors and actuators spread throughout the campus and help people\
    \ to reach their destination.\nThere are examples in the literature of systems\
    \ for guiding hearing and visually impaired\npeople [88] or for navigating through\
    \ the campus paths [89]. There are also augmented reality\nguidance applications\
    \ [90], but it is important to note that LPWAN technologies could only help\n\
    in small packet exchanges (e.g., for transmitting certain telemetry or positioning\
    \ data), since the\nreal-time multimedia content that can be demanded by augmented\
    \ reality applications requires\nhigh-speed rates to preserve a good user experience.\n\
    •\nClassroom attendance. Some university events are carried out outdoors, what\
    \ makes it difﬁcult to\ncontrol classroom attendance. To tackle such an issue,\
    \ some researchers have proposed different\nsensor-based student monitoring systems\
    \ that can be repurposed to be used outdoors [91].\n•\nInfrastructure monitoring.\
    \ It is possible to monitor remotely the status of certain assets that are\nscattered\
    \ throughout the campus. For example, some authors presented smart campus solutions\n\
    for managing campus greenhouses [92] or for monitoring high power lines with Unmanned\n\
    Aerial Vehicles (UAVs) [93].\n•\nRemote health monitoring. Smart campus technologies\
    \ receive medical data in real time [94] or\nfor measuring student stress [95].\
    \ Some researchers have even proposed to monitor the health of\nthe campus trees\
    \ [96].\nSensors 2019, 19, 3287\n8 of 30\n2.5. Smart Campus Modeling and Planning\
    \ Simulators\nA smart campus is similar to an urban microenvironment where different\
    \ buildings coexist with\nstreets, open areas, parking lots, trees, benches, or\
    \ people, among others. Different propagation channel\nmodels have been presented\
    \ in the literature to characterize electromagnetic propagation phenomena\nin\
    \ this type of scenarios, ranging from empirical methods to deterministic methods\
    \ based on Ray\nTracing (RT) or Ray-Launching (RL) approaches.\nEmpirical methods\
    \ are based on measurements and their subsequent linear regression analysis.\n\
    These methods are accurate for scenarios with the same characteristics as the\
    \ real measurements,\nbut their main disadvantages are the lack of scalability\
    \ and the expensive cost in time and resources\nthat is required to perform a\
    \ measurement campaign. For example, in [97,98] empirical path loss\nmodels in\
    \ a typical university campus are proposed for a frequency of 1800 MHz. The authors\
    \ of [99]\npresent a spatially consistent street-by-street path loss model for\
    \ a 28 GHz channel in a micro-cell\nurban environment. The main drawback of these\
    \ results is that the suitability of these models for path\nloss prediction has\
    \ yet to be conﬁrmed by the literature in other campuses.\nOn the other hand,\
    \ deterministic methods are based on Maxwell’s equations, which provide\naccurate\
    \ propagation predictions. These approaches usually consider the three-dimensional\
    \ geometry\nof the environment and model all propagation phenomena in the considered\
    \ scenario. Their main\ndrawback is the required computational time, which may\
    \ not be afforded in large and complex\nscenarios. For this reason, RT or RL techniques,\
    \ which are based on Geometrical Optics (GO) and\nthe Uniform Theory of Diffraction\
    \ (UTD), have been widely used for radio propagation purposes\nas an accurate\
    \ approximation of full-wave deterministic techniques.\nFor example, the authors\n\
    of [100] modeled the dominant propagation mechanisms using advanced RT simulations\
    \ in an urban\nmicroenvironment at 2.1 GHz, showing that diffuse scattering plays\
    \ a key role in urban propagation.\nIn addition, in [101] the importance of scattering\
    \ when analyzing outdoor environments in the\npresence of trees is reported. In\
    \ [102,103] the authors present propagation analyses (at 949.2 MHz\nand 2162.6\
    \ MHz, respectively) that make use of RT tools in a university campus with a Universal\n\
    Mobile Telecommunications System (UMTS) base station placed on rooftops. Similarly,\
    \ in [104],\nthe radio-planning analysis of a Wi-Fi network in a university campus\
    \ is presented using an RT\napproach. In addition, it has also been reported in\
    \ the literature the calibration of RT simulators\nfor millimeter-wave propagation\
    \ analyses based on the measured results in a university campus\nat 28 GHz [105]\
    \ and 38 GHz [106]. However, all the presented works are focused on micro-cellular\n\
    environments and on analyzing the wireless propagation channel between a base\
    \ station at a certain\nheight in a building and a client in a pedestrian street.\
    \ In this work, a radio wave propagation analysis\nfor the connectivity of IoT\
    \ LoRaWAN-based nodes by means of an in-house developed RL algorithm\nis reported\
    \ (which is later detailed in Section 4).\n2.6. Key Findings\nAfter analyzing\
    \ the state of art, it is clear that a smart campus faces similar challenges to\
    \ smart\ncities and that they share certain use cases and communications technologies.\
    \ Table 2 summarizes the\ncharacteristics of the most relevant smart campuses\
    \ and related solutions, and compares them with\nthe proposed system for the University\
    \ of A Coruña.\nAs can be observed, the systems in the table make use of diverse\
    \ short-range and long-range\ncommunications technologies, multiple sensors and\
    \ actuators, different hardware and software\nplatforms, and provide services\
    \ for several practical use cases. Although some systems provide\na holistic approach\
    \ to a smart campus, devising potential outdoor use cases and applications, their\n\
    implementations are mainly focused on environmental aspects, missing other smart\
    \ ﬁelds such as the\nones deﬁned in Section 2.1.\nSensors 2019, 19, 3287\n9 of\
    \ 30\nTable 2. Comparison of the main features of the most relevant deployed smart\
    \ campuses and related solutions.\nSmart\nCampus\nArea\nAccess\nTechnology\nSensors\
    \ and\nActuators\nIoT\nHardware\nPlatform\nSoftware\nPlatform\nUse Cases\nFog\
    \ Computing\nCapabilities\nNetwork\nPlanning\nSustainable\nDevelopment Goals\n\
    (SDGs) [107], KPIs\nor Results\nSchool of\nSTEM,\nUniversity\nof\nWashington\n\
    Bothell\n(United\nStates) [41]\n-\nZigbee, BLE,\n6LowPAN\nSensor Tag 2.0\n(accelerometer,\n\
    magnetometer,\ngyroscope,\nlight,\nhumidity\nobject and\nambient\ntemperature,\n\
    microphone)\nCOTS\nhardware,\nArduino\nAWS, Microsoft\nAzure cloud\nservices\n\
    -\nNo\nNo\nBuilt in 3 months, it\nincludes monthly\ncloud service bill\nQA\nHigher\n\
    Education\n(QAHE),\nUniversity\nof\nBusiness\nand\nTechnology,\nBirmingham\n(United\n\
    Kingdom)\n[42]\n-\n-\nNFC and\nRFID tags, QR\ncodes\nWearables\nCisco Physical\n\
    Access Control\ntechnology\nLearning\napplications,\naccess control\nsystems\n\
    No\nNo\nDeliver high quality\nservices, protect the\nenvironment, and\nsave costs\n\
    Tennessee\nState\nUniversity,\nNashville\n(United\nStates) [43]\n-\n-\n-\n-\n\
    -\nSurvey on\nintelligent\nbuildings,\nsmart grid,\nlearning\nenvironment,\nwaste\
    \ and\nwater\nmanagement\nand other\napplications\nNo\nNo\n-\nSensors 2019, 19,\
    \ 3287\n10 of 30\nTable 2. Cont.\nSmart\nCampus\nArea\nAccess\nTechnology\nSensors\
    \ and\nActuators\nIoT\nHardware\nPlatform\nSoftware\nPlatform\nUse Cases\nFog\
    \ Computing\nCapabilities\nNetwork\nPlanning\nSustainable\nDevelopment Goals\n\
    (SDGs) [107], KPIs\nor Results\nNorthwestern\nPolytechnical\nUniversity\n(China)\n\
    [44]\n-\nWi-Fi,\nBluetooth\nBuilt-in\nsmartphone\nsensors\n-\nAndroid 2.1\nplatform,\
    \ Big\nData techniques\nand SOA\nWhere2Study,\nI-Sensing\n(participatory\nsensing),\n\
    BlueShare\n(media\nsharing\napplication)\nNo\nNo\n-\nBirmingham\nCity\nUniversity\n\
    (United\nKingdom)\n[45]\nTwo\ncampuses\nof circa\n18,000\nand\n24,000 m2,\nrespectively\n\
    -\n-\n-\nMicrosoft’s\nBizTalk Server as\nESB, SOA\nBusiness\nsystems,\nsmart\n\
    buildings\nNo\nNo\nCost savings;\nimproved energy\nrating from F to B;\n40% reduction\
    \ in CO2\nemissions\nIMDEA\nNetworks\nInstitute\n(Spain)\n[46]\n-\nWi-Fi,\nBluetooth\n\
    -\n-\nMobility\nmodel\nOpportunistic\nFloating Content (FC)\ncommunication\nparadigm\n\
    No\nPerformance of the\nservice in terms of\ncontent persistence,\navailability\
    \ and\nefﬁciency\nUniversity\nof Oradea\n(Romania)\n[47]\n-\n4G, Zigbee\n-\nRFID\
    \ labels,\nmobile\ndevices,\nsensor\nequipment\nPrivate/public\ncloud with\nsteganography\n\
    No. Only\narchitecture\ndesign\nNo\nNo\n-\n[51]\n-\n-\n-\nEdge\ncomputing\ndevices\n\
    Network model\nand bandwidth\nallocation scheme\nfor mobile users\nTrustworthy\n\
    content\ncaching\nEdge caching reverse\nauction game and\nbandwidth allocation\n\
    for multiple contents\nin Mobile Social\nNetworks\nNo\nResource efﬁciency\nSensors\
    \ 2019, 19, 3287\n11 of 30\nTable 2. Cont.\nSmart\nCampus\nArea\nAccess\nTechnology\n\
    Sensors and\nActuators\nIoT\nHardware\nPlatform\nSoftware\nPlatform\nUse Cases\n\
    Fog Computing\nCapabilities\nNetwork\nPlanning\nSustainable\nDevelopment Goals\n\
    (SDGs) [107], KPIs\nor Results\n[52]\n-\nMESH Wi-Fi\nEnvironmental\nsensors, IP\n\
    cameras,\nemergency\nbuttons\n-\nNeural network\nlearning\nalgorithms\nStreet\
    \ lighting\nEdge Computing\nNo\nWorkload prediction\naccuracy, resource\nmanagement\n\
    dashboard\nWiCloud\n[53]\n-\nWi-Fi\n-\nServers,\nmobile phone\nbase stations\n\
    or wireless\naccess points\nNetwork\nFunctions\nVirtualization\n(NFV),\nSoftware-Deﬁned\n\
    Network (SDN)\nSemantic\ninformation\nanalysis,\nsmart class\nMobile Edge\nComputing\
    \ paradigm\nNo\nHistorical data\nWiP [54]\n-\n3G/4G/5G,\nWi-Fi\nSmartcam,\nsmart\
    \ cards,\nlight and\ntemperature\nsensor,\nsmartphone,\ntablet,\nsmartwatch\n\
    -\n-\nEnergy\nconsumption\nsavings,\nvirtual\nsupport to\nstudents,\naugmented\n\
    reality for\nmuseum\ncollections\nYes\nNo\n-\nSmart CEI\nMoncloa,\nUniversidad\n\
    Politécnica\nde Madrid\n(Spain)\n[56]\n5.5 km2,\n144\nbuildings,\ndaily\nﬂow\n\
    up to\n120,000\npeople\nWi-Fi,\nEthernet\nSmart Citizen\nKit (SCK)\nRaspberry\
    \ Pi,\nArduino\nCloud, SOA\nparadigm\nSmart\nemergency\nmanagement\nand trafﬁc\n\
    restriction\nNo\nNo\nDashboard with\nhistorical data\nSensors 2019, 19, 3287\n\
    12 of 30\nTable 2. Cont.\nSmart\nCampus\nArea\nAccess\nTechnology\nSensors and\n\
    Actuators\nIoT\nHardware\nPlatform\nSoftware\nPlatform\nUse Cases\nFog Computing\n\
    Capabilities\nNetwork\nPlanning\nSustainable\nDevelopment Goals\n(SDGs) [107],\
    \ KPIs\nor Results\nWest Texas\nA&M\nUniversity\n(United\nStates) [66]\n176\n\
    acres\n(0.71 km2)\ncampus\nthat\nconnects\n42\nbuildings\nand a\n2393\nacres\n\
    (9.68 km2)\nworking\nranch\nLoRAWAN,\n4G/LTE\nTemperature,\nair pressure,\nrelative\n\
    humidity and\npartial\nconcentrations\nArduino\nNIST\nCybersecurity\nFramework,\n\
    standards such as\nCOBIT and ISO\nConnect cattle\nacross the\nfeed yard;\nmonitor\n\
    environmental\nconditions for\nnetwork\nequipment;\ncampus-wide\nenvironmental\n\
    monitoring\nsystem; water\nirrigation;\nsmart parking\n(GPS data, 800\nvideo\n\
    surveillance\ncameras and\nOpenCV-based)\nNo\nNo\n-\nSapienza\nsmart\ncampus,\n\
    University\nof Rome\n(Italy) [68]\n-\nN/A\nN/A\nN/A\nTheoretical and\nmethodological\n\
    framework\nLiving,\neconomy,\nenergy,\nenvironment\nand mobility\nNo\nNo\nSet\
    \ of smart campus\nindicators and\nincidence matrix\nWuhan\nUniversity\nof\nTechnology\n\
    (China)\n[69]\n-\nCable,\nwireless,\n3G/4G\nPerception\nlayer with\nRFID, cameras\n\
    and sensors\n-\nFramework\ndesign, cloud\ncomputing and\nvirtualization\n(Oracle\
    \ 10G RAC)\nLearning and\nliving\nNo\nNo\n-\nSensors 2019, 19, 3287\n13 of 30\n\
    Table 2. Cont.\nSmart\nCampus\nArea\nAccess\nTechnology\nSensors and\nActuators\n\
    IoT\nHardware\nPlatform\nSoftware\nPlatform\nUse Cases\nFog Computing\nCapabilities\n\
    Network\nPlanning\nSustainable\nDevelopment Goals\n(SDGs) [107], KPIs\nor Results\n\
    Wisdom\nCampus,\nSoochow\nUniversity\n(China)\n[71]\n4058\nacres\n(16.42 km2),\n\
    5263\nstaff\nand\nmore\nthan\n50,000\npeople\n-\n-\n-\n-\nAutomatic\nvehicle access\n\
    systems,\nparking\nguidance\nservice, bus\ntracking\nsystem and\nbicycle rental\n\
    service\nNo\nNo\n-\nIISc\ncampus\n[82]\n2 km\n× 1\nkm\nsub-GHz\nradios\nLow-cost\n\
    ultrasonic\nwater level\nsensors, solar\npanels\nMicrocontroller\nTI\nMSP432P401R\n\
    -\nWater\nmanagement\nNo\nNo\nRSSI and Packet\nError Rate (PER)\nperformance,\
    \ power\nbudget\nOttawa\nCity and\nAPEC\ncampus\n[104]\n-\nWi-Fi\n-\n-\n-\n-\n\
    No\nRT\napproach\nMeasurements and\npredictions of Path\nLoss\nUniversitas\nIndonesia\n\
    [106]\nUrban\narea\n800 MHz,\n2.3 GHz, and\n38 GHz\n-\n-\nRT simulators for\n\
    millimeter-wave\npropagation\nanalyses based on\nthe measured\nresults in a\n\
    university\ncampus\n-\nNo\nRT\napproach\nand\nphysical\noptic\nnear-to-far\nﬁeld\n\
    methods\nPath Loss models\nUniversity\nof A\nCoruña\n(This\nwork)\n26,000 m2\n\
    LoRaWAN\n-\nIoT nodes and\nSBCs\n(Raspberry\nPi 3)\nSimulations\nScalable\narchitecture\n\
    for multiple\noutdoor use\ncases\nYes\nYes (3D\nRL)\nPlanning simulator\nand empirical\n\
    validation\nSensors 2019, 19, 3287\n14 of 30\nIn addition, only a few solutions\
    \ consider the use of fog computing, and even less made use of\nnetwork planning\
    \ tools. In comparison, the solution proposed in this article is one of the few\
    \ academic\nsolutions that deploys LoRaWAN infrastructure. Moreover, the proposed\
    \ smart campus is almost the\nonly one conceived from scratch to harness the beneﬁts\
    \ of fog computing.\nRegarding the efﬁciency in the network deployment in terms\
    \ of cost, coverage, and the overall\nenergy consumption, most of the academic\
    \ papers do not give any insight regarding the heterogeneous\nnetwork planning,\
    \ although in some cases it is speciﬁed that it is low cost (without further details).\n\
    Just a couple of systems give details for the hardware used to build the demonstrator\
    \ at the level that\nis described later in this paper in Section 3.\n3. Design\
    \ and Implementation of the Smart Campus System\n3.1. Architecture for Outdoor\
    \ Applications\nThe proposed communications architecture is depicted in Figure\
    \ 2. As can be observed, it\ncomprises three different layers. The layer at the\
    \ bottom consists of the different IoT LoRaWAN\nnodes that are deployed throughout\
    \ the campus. Such nodes communicate with LoRaWAN gateways\nthat comprise the\
    \ Fog Layer, since they also act as fog computing gateways, thus providing fast\n\
    location-aware responses to the LoRaWAN node requests. Every fog gateway is essentially\
    \ a Single\nBoard Computer (SBC) that embeds Ethernet, Wi-Fi, and Bluetooth interfaces\
    \ besides a LoRaWAN\ntransceiver. Finally, the top layer is the cloud, where user\
    \ applications run together with data\nstorage services.\nFog Layer\nOther LoRaWAN\
    \ Fog Gateways\nSBC\nSBC\n…\nSBC\nMain Gateway\nLoRaWAN \nFog Gateway\nSBC\nFog\
    \ Services\nSmart Campus\nCloud\nRemote Users\nNode Layer\n…\nLoRaWAN Node\nLoRaWAN\
    \ Node\nLoRaWAN Node\nFigure 2. Proposed LoRaWAN-based smart campus architecture.\n\
    Sensors 2019, 19, 3287\n15 of 30\n3.2. Operational Requirements for Outdoor Applications\n\
    To cover potential smart campus outdoor applications, a set of operational requirements\
    \ grouped\nby capabilities was deﬁned, including:\n•\nCoverage capabilities. The\
    \ coverage of the smart campus should be maximized. The typically\nexpected coverage\
    \ should be around 1 km2 considering both Line-of-Sight (LoS) and\nNo-Line-of-Sight\
    \ (NLoS) scenarios.\n•\nRobustness capabilities. The system should provide robustness\
    \ to signal interference and/or loss\nof network operation. The network should\
    \ provide redundancy and thus be robust against single\npoints of failure.\n•\n\
    Supported services and applications. The previously mentioned applications (in\
    \ Section 2.4)\nshould be supported. Quality of Service (QoS) requirements should\
    \ include support for high-peak\nrate demand, latency-sensitive trafﬁc, and location-aware\
    \ IoT applications. A transmission speed\nof up to 50 Kbps should be expected.\n\
    •\nDeployment features and cost. It should be expected that the deployment will\
    \ depend largely on\nlow-cost IoT nodes resource-constrained in terms of memory,\
    \ battery, computing capabilities, and\nenergy consumption.\n•\nNetwork topology.\
    \ The network architecture should support Point-To-Multipoint (PMP) and\nPoint-to-Point\
    \ (PtP) links. The system should be capable of establishing ad-hoc networking\
    \ for\nspeciﬁc scenarios (i.e., by using star or mesh topologies).\n3.3. LoRaWAN\
    \ Testbed Implementation\nA LoRaWAN network consisting on a gateway and several\
    \ nodes was deployed. A RisingHF\nRHF0M301 module [108] installed on a Raspberry\
    \ Pi 3 was selected as gateway. Such a module\nis equipped with a dual digital\
    \ radio front-end interface with a typical sensitivity of −137 dBm.\nThe module\
    \ is capable of simultaneous dual-band operation and supports Adaptive Data Rate\
    \ (ADR),\nautomatically changing between LoRa spreading factors. It can use a\
    \ maximum of 10 channels: 8 multi\nSpreading Factor (SF) channels (SF7 to SF12\
    \ with 125 KHz of bandwidth), one FSK channel and\none LoRa channel. Another interesting\
    \ feature of the module is its ability to operate with negative\nSignal-to-Noise\
    \ Ratios (SNRs), with a Co-Channel Rejection (CCR) of up to 9 dB. It also supports\n\
    LoRaWAN classes A, B, and C and its maximum output power is 24.5 dBm.\nA 0 dBi\
    \ antenna was used for the tests. The module is installed on a Raspberry Pi 3\
    \ using the\nprovided bridge (RHF4T002). To access the LoRaWAN RFID module, conﬁgure\
    \ the node, and access\nthe message and the transmission parameters, the following\
    \ software was installed on the Raspberry\nPi 3: Raspbian Stretch (Linux raspberrypi\
    \ 4.14.70-v7+), LoRa Gateway v5.0.1, LoRa Packet Forwarder\nv4.0.1 and LoRaWAN-Server\
    \ v0.6.0.\nThe LoRa gateway was conﬁgured as follows:\n•\nCoding Rate: 4/5.\n\
    •\nRX1 delay: 1.\n•\nRX2 delay: 2.\n•\nPower: 14 dBm.\n•\nRX Frequency: 869.5\
    \ MHz.\nA RisingHF RHF76-052 module [109] was used by the LoRaWAN nodes (one of\
    \ such nodes can\nbe observed on the right of Figure 3). The module has a maximum\
    \ sensitivity of −139 dBm with\nspreading factor 12 (SF12) and 125 kHz of bandwidth,\
    \ channels (0–2) at 868.1, 868.3 and 868.5 MHz,\nand a maximum output power of\
    \ 14 dBm. During the experiments presented in this paper, the module\nmade use\
    \ of the pre-installed wired antenna.\nSensors 2019, 19, 3287\n16 of 30\nUSRP\
    \ B210\nLoRAWAN\nReceiver\nLaptop Acting As Data-Logger \nand Spectrum Analyzer\n\
    Figure 3. LoRaWAN IoT node during the empirical measurement campaign.\n4. LoRaWAN\
    \ Planning Simulator Setup\n4.1. Planning Simulator\nThe in-house developed 3D\
    \ Ray-Launching (3D-RL) technique is based on GO and the Uniform\nTheory of Diffraction\
    \ (UTD). The ﬁrst step of such a technique is the creation of the scenario under\n\
    analysis, which should consider all the obstacles within it, such as buildings,\
    \ vehicles, vegetation,\nor people. This design phase is essential for obtaining\
    \ accurate results for the real environment. Once\nthe scenario is properly created,\
    \ the frequency of operation, number of reﬂections, radiation pattern of\nthe\
    \ transceivers and angular and spatial resolution can be ﬁxed as input parameters\
    \ in the algorithm\nfor simulation. Then, the whole scenario is divided into a\
    \ 3D mesh of cuboids, in which all the\nelectromagnetic phenomena are saved during\
    \ simulation, emulating the electromagnetic propagation\nof the real waves. A\
    \ detailed description of the inner-workings of the 3D-RL tool is out of the scope\
    \ of\nthis article, but the interested reader can ﬁnd further information in [110].\n\
    It is worth pointing out that smart campus ecosystems are challenging environments\
    \ in terms\nof radio propagation analysis due to their large dimensions as well\
    \ as for the multipath propagation,\nwhich is caused by the multiple obstacles\
    \ within them. Hence, to achieve a good trade-off between\nsimulation computational\
    \ cost and result accuracy, it is important to determine the optimal parameters\n\
    for the number of reﬂections and the angular and spatial resolution of the RL\
    \ algorithm. For such\na purpose, an analysis of the optimal input parameters\
    \ for the RL tool applied in large complex\nenvironments is presented in [111].\
    \ Such previous results have been considered to obtain the simulation\nparameters\
    \ for the proposed smart campus scenario and the ﬁnal values are summarized in\
    \ Table 3.\nTable 3. 3D Ray-Launching parameters.\nParameter\nValue\nOperation\
    \ frequency\n868.3 MHz\nOutput power level\n14 dBm\nPermitted reﬂections\n6\n\
    Cuboid resolution\n4 m × 4 m × 2 m\nLaunched ray resolution\n1o\nAntenna type\
    \ and gain\nMonopole, 0 dBi\n4.2. Scenario under Analysis\nThis article presents\
    \ a case study conducted in the northwest of Spain at the Campus of Elviña of\n\
    the University of A Coruña. The campus covers an area of 26,000 m2 and includes\
    \ elements typically\nfound in an urban environment, such as buildings of different\
    \ heights, sidewalks, roads, green areas,\nSensors 2019, 19, 3287\n17 of 30\n\
    trees, and cars, among others. Due to the large size of the environment to be\
    \ analyzed, two different\nscenarios were created for the simulations (in Figure\
    \ 4), which correspond to the two scenarios\ndelimited by a green and a red rectangle\
    \ in the real scenario shown in Figure 5. It must be noted\nthat the two rectangular\
    \ scenarios were selected within the campus (red on the left and green on the\n\
    right) to cover eight faculties. The rectangular shape is required by the 3D Ray-Launching\
    \ simulator.\nThe points marked as M, A, Q, R correspond to different reception\
    \ distances from the transmitter (T).\nTo obtain accurate results, the created\
    \ scenarios include the urban elements previously mentioned.\nFurthermore, realistic\
    \ object sizes as well as material properties (permittivity and conductivity)\
    \ were\ntaken into account. For the experiments, the LoRaWAN gateway explained\
    \ in Section 3.3 was placed\nat the spot indicated by the red dot in the two images\
    \ shown in Figure 4. Please note that the location\ncorresponds to a single position,\
    \ which is in the third ﬂoor of the faculty of Computer Science (located\nin the\
    \ intersection of the two rectangles of Figure 5, marked in such a Figure with\
    \ a blue T).\n(a)\n(b)\nFigure 4. Simulated scenarios of the smart campus. (a)\
    \ Red scenario; (b) Green scenario.\nFigure 5. Aerial view of the Campus of Elviña,\
    \ with the areas delimited for smart campus applications\n(Source: c⃝2019 Google).\n\
    5. Experiments\n5.1. Empirical Validation: LoRaWAN Testbed\nTo evaluate LoRaWAN\
    \ performance in a real campus, the testbed described in Section 3.3 was\ndeployed\
    \ in the Campus of Elviña. A measurement campaign was designed and carried out\
    \ to\nvalidate the chosen hardware and the simulation results provided by the\
    \ 3D Ray-Launching algorithm.\nThe performed tests consisted on transmitting packets\
    \ from the LoRaWAN node to the gateway from\ndifferent spots throughout the campus\
    \ using acknowledgment messages. Figure 6 shows such spots\n(in yellow) together\
    \ with the LoRaWAN gateway location (in red) for one of the two parts of the\n\
    evaluated campus. The transmitter was placed near a window inside a building,\
    \ at a height of 3.5 m\nfrom the street ground level. In contrast, all the measurement\
    \ spots were located outdoors, at a height\nof 0.5 m. For every of the previously\
    \ mentioned spots, the Received Signal Strength Indicator (RSSI)\nSensors 2019,\
    \ 19, 3287\n18 of 30\nand Signal-to-Noise Ratio (SNR) values were recorded both\
    \ at the LoRaWAN gateway and at the device\nthat acted as a node. A Debian Virtual\
    \ machine was connected to the LoRaWAN-server WebSocket\nendpoint. Nodes were\
    \ connected through an USB port and programmed to send a 6-byte payload ten\n\
    times. The ﬁrmware of the LoRaWAN node uses the USB port to create a serial interface\
    \ and write\nthe SNR and RSSI of the received acknowledgment. With this setup,\
    \ the LoRaWAN node was moved\nto different spots and at each of them the RSSI\
    \ and SNR values of the gateway and the node were\nrecorded for a total of ten\
    \ packages per location.\nTo test for possible interference in the used Industrial,\
    \ Scientiﬁc and Medical (ISM) sub-band,\na USRP B210 [112] with the same 0 dBi\
    \ antenna used by the LoRaWAN gateway was connected to a\nlaptop that acted both\
    \ as data-logger and spectrum analyzer (such a measurement setup is shown\nin\
    \ Figure 3). As an example, the result of one of the analysis during the empirical\
    \ measurements is\nshown in Figure 7, when the system was conﬁgured to monitor\
    \ a central frequency of 868.3 MHz with\na sampling rate of 1 MHz.\nFigure 6.\
    \ Empirical measurement points in the Green Scenario (Source: c⃝2019 Google).\n\
    Figure 7. State of the radio spectrum during the performed empirical measurements.\n\
    Sensors 2019, 19, 3287\n19 of 30\nFigure 8. Comparison between empirical measurements\
    \ and 3D-Ray-Launching simulation results.\nAfter the measurement campaign within\
    \ the campus, Radio Frequency (RF) power level\nestimations for the whole volume\
    \ of the scenario were obtained with the aid of the 3D Ray-Launching\nsimulation\
    \ tool. The transmitter element was placed at the same position of the real LoRaWAN\n\
    gateway (the red dot in Figure 6) and, using the simulation parameters shown in\
    \ Table 3, a simulation\nwas launched. The comparison between the measured RF\
    \ power values and the simulation estimations\nis depicted in Figure 8. As can\
    \ be seen in the Figure, the obtained estimations follow the tendency of\nthe\
    \ measured values, obtaining a mean error of 0.53 dB with a standard deviation\
    \ of 3.39 dB (taking\ninto account the 19 measurement points of Figure 6). The\
    \ standard deviation is higher than the usual\nvalues provided by the 3D Ray-Launching.\
    \ This effect could be due to size of the scenario (and the\nchosen simulation\
    \ parameters such as cuboid size and launched ray resolution), since it is the\
    \ largest\nscenario simulated so far by the developed 3D Ray-Launching tool. In\
    \ addition, it must be noted the\nfact that measurements were based on RSSI values\
    \ provided by the motes, which inherently add a\nreceived RF power level error.\
    \ Nonetheless, the simulation results are accurate, and the simulation tool\n\
    is validated satisfactorily. Regarding the results, it is worth noting the low\
    \ RF power levels measured\nin several points of the scenario. The RF power level\
    \ in many of these points is lower than −100 dBm,\nwhich is the typical ZigBee\
    \ sensitivity. However, one of the advantages of the selected LoRaWAN\ndevices\
    \ is that their sensitivity is much lower (in the usual operating conditions,\
    \ up to −137 dBm), as\ncan it be observed in Table 4. Thus, the radio link budget\
    \ for LoRaWAN has a higher margin, which\nmeans that longer communication distances\
    \ can be achieved.\nTable 4. Sensitivity values for LoRaWAN devices at 868 MHz.\n\
    LoRaWAN Device\nSensitivity\nSeeeduino LoRaWAN\n−137 dBm\nSeeeduino LoRa/GPS Shield\
    \ for Arduino with LoRa BEE\n−148 dBm\nDragino LoRa Shield\n−148 dBm\nGrove—LoRa\
    \ Radio\n−148 dBm\nDF Robot’s LoRa MESH Radio Module\n−148 dBm\nArduino MKR WAN\
    \ 1300\n−135.5 dBm\nAdafruit RFM95W LoRa Radio Transceiver\n−148 dBm\nAdafruit\
    \ Feather 32u4 RFM95 LoRa Radio\n−148 dBm\nMicrochip LoRa Mote RN2483\n−148 dBm\n\
    The Things Network TTN-UN-868\n−148 dBm\nThe Things Network TTN-ND-868\n−148 dBm\n\
    Sensors 2019, 19, 3287\n20 of 30\n5.2. Planning of Smart Campus Use Cases\nOnce\
    \ the presented 3D Ray-Launching simulation tool was validated by comparing the\
    \ simulation\nresults with the measurements, three different outdoor use cases\
    \ were proposed for the smart campus\nenvironment, where LoRaWAN would have direct\
    \ connectivity with a gateway:\n•\nCrowdsensing/Mobility pattern detection. The\
    \ purple dots depicted in Figure 9 represent the\nlocation of SBC-type devices\
    \ (e.g., Raspberry Pi) that act as Bluetooth and Wi-Fi sniffers that will\nhelp\
    \ to determine the mobility patterns of the users that move throughout the campus,\
    \ what will\noptimize the deployed location-based services. In the same way, the\
    \ devices could also help in\ncrowdsensing tasks in certain areas.\n•\nSmart irrigation.\
    \ In this case, due to the location of the campus green areas, devices will be\n\
    deployed only in one of the modeled scenarios. The device locations are represented\
    \ by yellow\ndots shown in Figure 10. The aim of this system is to remotely control\
    \ and automate the irrigation\nof green areas where the deployment of wired infrastructure\
    \ to control the valves is very expensive\nor even unfeasible.\n•\nSmart trafﬁc\
    \ monitoring. To detect vehicular trafﬁc, sensors are deployed at the points represented\n\
    by blue dots in Figure 11. In this way, the trafﬁc behavior within the campus\
    \ can be analyzed and\nthe degree of parking occupancy could be inferred. Sustainability\
    \ and ecological measurements to\nboost public transportation, to optimize routes\
    \ and resources, and to adapt to real-time demand\ncould be taken.\nFigure 9.\
    \ Aerial view of the spots monitored in the mobility pattern detection use case\
    \ (Source:\nc⃝2019 Google).\nFigure 10. Aerial view of the smart irrigation monitoring\
    \ spots (Source: c⃝2019 Google).\nSensors 2019, 19, 3287\n21 of 30\nFigure 11.\
    \ Aerial view of the spots monitored for the smart trafﬁc use case (Source: c⃝2019\
    \ Google).\nTo validate the three mentioned smart campus use cases, 3D Ray-Launching\
    \ simulations were\nlaunched for the proposed device locations. As an example,\
    \ Figure 12 shows the estimated RF power\ndistribution for bi-dimensional planes\
    \ at two different heights (ground level and building’s third ﬂoor\nlevel -at\
    \ the gateway’s height) for the smart irrigation use case (in Figure 12a, where\
    \ the transmitter is\nat the center of the Green scenario) and the smart trafﬁc-monitoring\
    \ case (Figure 12b, transmitter at the\nfurthest point of the Red Scenario). The\
    \ used simulation parameters are also those shown in Table 3.\nAs can be observed\
    \ in Figure 12, the transmitter location (marked as a white circle with a T) and\
    \ the\nmorphology of the scenario (mainly the building location) greatly affect\
    \ wireless signal propagation.\nNevertheless, the estimated RF signal strength\
    \ is quite high, taking into account the sensitivity of the\nemployed LoRaWAN\
    \ devices (i.e., −137 dBm) and the fact that the most common sensitivity value\
    \ is\n−148 dBm (see Table 4).\nTo determine whether the chosen gateway location\
    \ will comply with the required sensitivity\nfor the proposed LoRaWAN node locations,\
    \ 3D Ray-Launching simulation results were performed.\nAs an example, Figure 13\
    \ summarizes the sensitivity analysis carried out for the use case illustrated\n\
    in Figure 12b (i.e., for the furthest LoRaWAN node deployed for the smart trafﬁc-monitoring\
    \ use\ncase). Speciﬁcally, Figure 13a shows the estimations obtained when the\
    \ transmitter is operating at\n20 dBm for different heights: ground level, third\
    \ ﬂoor, and fourth ﬂoor. Figure 13b presents the same\nresults, but for a lower\
    \ transmission power (5 dBm). Finally, Figure 14 depicts the results for the\n\
    sensitivity analysis based on the results obtained when transmitting at 5 dBm.\
    \ This last Figure shows\nthe areas and spots of the scenario that comply (dark\
    \ blue) and do not comply (light blue) with the\nselected sensitivity value (in\
    \ this case, the typical −148 dBm). The results show that for the case of\ntransmitting\
    \ at 20 dBm, there is no problem in terms of sensitivity threshold, but for the\
    \ case of using\n5 dBm, potential problems with this threshold appear within the\
    \ building where the gateway is placed\n(this represented by the light blue surfaces\
    \ at the top and left sides of the bi-dimensional planes).\nTherefore, a trade-off\
    \ decision should be made to choose a transmission power level that ensures good\n\
    sensitivity and, at the same time, the optimization of the energy consumption\
    \ of the deployed motes.\nIn fact, the results show that the gateway location\
    \ could be improved by moving it from the third ﬂoor\nto the fourth ﬂoor. Thus,\
    \ the deployment of the LoRaWAN network can be optimized by the presented\n3D\
    \ Ray-Launching algorithm in relation to its coverage and the overall energy consumption\
    \ of the\nwireless communications system.\nSensors 2019, 19, 3287\n22 of 30\n\
    (a)\n(b)\nFigure 12. Bi-dimensional planes of the estimated RF power distribution\
    \ for two different heights.\n(a) Green scenario; (b) Red scenario.\n(a)\n(b)\n\
    Figure 13. Bi-dimensional planes of the estimated RF power distribution for two\
    \ different heights.\n(a) transmission power 20 dBm, (b) transmission power 5\
    \ dBm.\nSensors 2019, 19, 3287\n23 of 30\nFigure 14. Bi-dimensional planes of\
    \ the estimated RF power distribution for three different heights:\nsensitivity\
    \ fulﬁllment (threshold = −148 dBm).\n6. Discussion\nThe results presented in\
    \ the previous section indicate the impact that the campus scenario has in\nradio-planning\
    \ analysis and hence, in the determination of the optimal network layout. It must\
    \ be\nﬁrst pointed out that the obtained results are hard to generalize, since\
    \ the analyzed campus scenarios\nhave particular characteristics that make them\
    \ almost unique. Such characteristics include the size of\nthe campus or the distribution\
    \ of elements within it (mainly the buildings and their size and material\nproperties),\
    \ which have a great impact on radio signal propagation. Moreover, the topology\
    \ of the\ndeployed wireless network (i.e., the location of the nodes) has also\
    \ a great inﬂuence on wireless\ncommunications performance. Therefore, the proposed\
    \ methodology and solution have been validated\nin the presented paper, but it\
    \ has to be noted that site-speciﬁc assessments are needed (that is, the\nresults\
    \ obtained for a speciﬁc campus environment cannot be generalized for any other\
    \ campus\nscenario). Nonetheless, some aspects and results can be generalized\
    \ up to a point (e.g., the received RF\npower for LoS situations), which are discussed\
    \ in the following paragraphs.\nOne of the advantages in the use of LoRaWAN transceivers\
    \ is their inherent low sensitivity values\n(in the range of −135.5 dBm to −148\
    \ dBm), which improve the reception range in comparison to other\ntechnologies.\
    \ In all the observed simulation and measurement results, the received power levels\
    \ are\nabove −120 dBm, providing a sound margin to consider additional losses,\
    \ such as the ones due to the\nvariable fading related to user movements or to\
    \ the dynamic elements within the campus.\nIn the speciﬁc outdoor applications\
    \ considered for the smart campus, non-directional antennas\nprovide adequate\
    \ functionality, given the fact that theoretically, users and nodes can be located\
    \ at any\ngiven location within the scenario. Nonetheless, in certain applications\
    \ directional antennas may be\nhelpful (e.g., in telemetry applications where\
    \ the receiver is static, Yagi-Uda, helical or patch array\nantennas could be\
    \ used), increasing received power levels, thus improving the communications range.\n\
    As can be observed in the experimental results, a coverage level of 20 dBm is\
    \ appropriate for all\nthe considered scenarios. However, it is desirable to reduce\
    \ transmission power to reduce overall\nSensors 2019, 19, 3287\n24 of 30\nenergy\
    \ consumption as well as potential interference. For certain applications, tailored\
    \ antennas may\nbe considered during the network planning and the deployment phases.\n\
    The presented measurement results indicate that mainly due to the characteristics\
    \ of the scenario,\nthere is an appropriate coverage for a linear distance of\
    \ 450 m with LoS (measurement point #16) and\n330 m with NLoS (measurement point\
    \ #19). The obtained results conclude that the location of the\ngateway is appropriate\
    \ in terms of coverage estimation when there is LoS and in most situations where\n\
    there is NLoS. The latter case requires in-depth analysis of the potential locations\
    \ of the nodes, in order\nto consider effective losses related to building penetration,\
    \ which on average can vary from 7 dB to\nover 25 dB depending on the building\
    \ and wall structure [113].\nIn terms of capacity, LoRa/LoRaWAN provides a transmission\
    \ speed of up to 50 Kbps, which\nis enough for a wide range of remote monitoring\
    \ applications where users send small amounts of\ninformation or where nodes are\
    \ polled with a moderate periodicity (i.e., several seconds) to provide\ninformation\
    \ from sensors. Speciﬁc applications (e.g., real-time image monitoring) that require\
    \ higher\nbandwidths can make use of alternative wireless technologies that can\
    \ coexist together with the\nproposed LoRaWAN network.\n7. Conclusions\nAfter\
    \ a thorough review of the state of the art on the most relevant aspects related\
    \ to the\ndeployment of smart campuses, this work detailed the design and deployment\
    \ of a LoRaWAN\nIoT-based infrastructure able to provide novel applications in\
    \ a smart campus. The architecture\nproposed the deployment of fog computing nodes\
    \ throughout the campus to support physically\ndistributed, low-latency, and location-aware\
    \ applications that decrease the network trafﬁc and the\ncomputational load of\
    \ traditional cloud computing systems.\nTo evaluate the proposed system,\na campus\
    \ of the University of A Coruña was recreated realistically through an in-house\
    \ developed\n3D Ray-Launching radio-planning simulator. Such a tool was tested\
    \ by comparing its output with\nempirical measurements, showing a good accuracy.\
    \ The proposed solution meets the established\noperational requirements:\n•\n\
    The provided coverage is roughly 1 km2.\n•\nThe system provides robustness against\
    \ signal losses and interference by being able to deploy\nredundant gateways.\n\
    •\nThe use of fog computing nodes supports low-latency and location-aware IoT\
    \ applications.\n•\nThe maximum provided transmission speed reaches 50 Kbps.\n\
    •\nThe system has been devised to make use of low-cost resource-constrained IoT\
    \ nodes.\n•\nThe network topology support both PMP and PtP links.\nIn addition,\
    \ three practical smart campus applications were designed and evaluated with the\n\
    planning simulator (a mobility pattern detection system, a smart irrigation solution,\
    \ and a smart\ntrafﬁc-monitoring deployment), showing that the tool is able to\
    \ provide useful guidelines and insights\nto future smart campus designers and\
    \ developers.\nAuthor Contributions: P.F.-L., P.L.-I. and T.M.F.-C. conceived\
    \ and designed the experiments; T.M.F.-C., M.S.-A.\nand P.F.-L. performed the\
    \ experiments; M.C.-E., P.L.-I. and L.A. created the scenario and performed the\
    \ simulations;\nP.L.-I., E.A. and F.F. processed the simulation results; T.M.F.-C.,\
    \ P.L.-I. and P.F.-L. analyzed the data; P.F.-L., T.M.F.-C.,\nP.L.-I., L.A. and\
    \ L.C. wrote the paper.\nFunding: This work has been funded by the Xunta de Galicia\
    \ (ED431C 2016-045, ED431G/01), the Agencia Estatal\nde Investigación of Spain\
    \ (TEC2016-75067-C4-1-R) and ERDF funds of the EU (AEI/FEDER, UE).\nConﬂicts of\
    \ Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nFortes,\
    \ S.; Santoyo-Ramón, J.A.; Palacios, D.; Baena, E.; Mora-García, R.; Medina, M.;\
    \ Mora, P.; Barco, R. The\nCampus as a Smart City: University of Málaga Environmental,\
    \ Learning, and Research Approaches. Sensors\n2019, 19, 1349. [CrossRef] [PubMed]\n\
    Sensors 2019, 19, 3287\n25 of 30\n2.\nAbuarqoub, A.; Abusaimeh, H.; Hammoudeh,\
    \ M.; Uliyan, D.; Abu-Hashem, M.A.; Murad, S.; Al-Fayez, F.\nA survey on internet\
    \ of things enabled smart campus applications. In Proceedings of the International\n\
    Conference on Future Networks and Distributed Systems, Cambridge, UK, 19–20 July\
    \ 2017; p. 50.\n3.\nHernández-Rojas, D.L.; Fernández-Caramés, T.M.; Fraga-Lamas,\
    \ P.; Escudero, C.J. Design and Practical\nEvaluation of a Family of Lightweight\
    \ Protocols for Heterogeneous Sensing through BLE Beacons in IoT\nTelemetry Applications.\
    \ Sensors 2018, 18, 57. [CrossRef] [PubMed]\n4.\nSivanathan, A.; Sherratt, D.;\
    \ Gharakheili, H.H.; Radford, A.; Wijenayake, C.; Vishwanath, A.; Sivaraman, V.\n\
    Characterizing and classifying IoT trafﬁc in smart cities and campuses. In Proceedings\
    \ of the 2017 IEEE\nConference on Computer Communications Workshops (INFOCOM WKSHPS),\
    \ Atlanta, GA, USA, 1–4 May\n2017; pp. 559–564.\n5.\nBates, O.; Friday, A. Beyond\
    \ Data in the Smart City: Repurposing Existing Campus IoT. IEEE Pervasive\nComput.\
    \ 2017, 16, 54–60. [CrossRef]\n6.\nFroiz-Míguez, I.; Fernández-Caramés, T.M.;\
    \ Fraga-Lamas, P.; Castedo, L. Design, Implementation and\nPractical Evaluation\
    \ of an IoT Home Automation System for Fog Computing Applications Based on MQTT\n\
    and ZigBee-WiFi Sensor Nodes. Sensors 2018, 18, 2660. [CrossRef] [PubMed]\n7.\n\
    Berry College Ofﬁcial Web Page on Its Campus Extension. Available online: https://www.berry.edu/\n\
    eaglecam/learn/ (accessed on 31 March 2019).\n8.\nDuke University Ofﬁcial Web\
    \ Page on Its Campus Extension. Available online: https://today.duke.edu/\n2011/11/onlinemaplaunch\
    \ (accessed on 31 March 2019).\n9.\nStanford University Web Page on the Extension\
    \ of Its Lands. Available online: https://facts.stanford.edu/\nabout/lands/ (accessed\
    \ on 31 March 2019).\n10.\nGumprecht, B. The campus as a public space in the American\
    \ college town. J. Hist. Geogr. 2007, 33, 72–103.\n[CrossRef]\n11.\nNational Institute\
    \ for Education Policy Reseach, Guide to the Creation of a Strategic Campus Master\
    \ Plan.\nAvailable online: https://www.nier.go.jp/shisetsu/pdf/e-masterplan.pdf\
    \ (accessed on 31 March 2019).\n12.\nPrinceton\nUniversity\nCampus\nPlan.\nAvailable\n\
    online:\nhttps://pr.princeton.edu/doc/\nPrincetonCampusPlan2017.pdf (accessed\
    \ on 31 March 2019).\n13.\nWollongong Campus Master Plan. Available online: https://www.uow.edu.au/content/groups/public/\n\
    @web/@pmcd/@smc/documents/doc/uow220188.pdf (accessed on 31 March 2019).\n14.\n\
    Sanchez-Iborra, R.; Cano, M.-D. State of the Art in LP-WAN Solutions for Industrial\
    \ IoT Services. Sensors\n2016, 16, 708. [CrossRef]\n15.\n3GPP Completed the Standardization\
    \ of NB-IOT. Available online: http://www.3gpp.org/news-events/\n3gpp-news/1785-nb_iot_complete\
    \ (accessed on 31 March 2019).\n16.\nSigfox Ofﬁcial Webpage. Available online:\
    \ https://www.sigfox.com/ (accessed on 31 March 2019).\n17.\nIngenu Ofﬁcial Webpage.\
    \ Available online: https://www.ingenu.com/ (accessed on 31 March 2019).\n18.\n\
    Weightless Ofﬁcial Webpage. Available online: http://www.weightless.org/ (accessed\
    \ on 31 March 2019).\n19.\nLoRa-Alliance. LoRaWAN What is it? A Technical Overview\
    \ of LoRa and LoRaWAN; White Paper; The LoRa\nAlliance: San Ramon, CA, USA, 2015.\n\
    20.\nAdelantado, F.; Vilajosana, X.; Tuset-Peiro, P.; Martinez, B.; Melia-Segui,\
    \ J.; Watteyne, T. Understanding the\nLimits of LoRaWAN. IEEE Commun. Mag. 2017,\
    \ 55, 34–40. [CrossRef]\n21.\nYang, G.; Liang, H. A Smart Wireless Paging Sensor\
    \ Network for Elderly Care Application Using LoRaWAN.\nIEEE Sens. J. 2018, 22,\
    \ 9441–9448. [CrossRef]\n22.\nLuvisotto, M.; Tramarin, F.; Vangelista, L.; Vitturi,\
    \ S. On the Use of LoRaWAN for Indoor Industrial IoT\nApplications. Wirel. Commun.\
    \ Mob. Comput. 2018, 18. [CrossRef]\n23.\nSemtech AN 120022 LoRa Modulation Basics,\
    \ May 2015. Available online: https://www.semtech.com/\nuploads/documents/an1200.22.pdf\
    \ (accessed on 31 March 2019).\n24.\nSuárez-Albela, M.; Fernández-Caramés, T.;\
    \ Fraga-Lamas, P.; Castedo, L. A Practical Evaluation of a\nHigh-Security Energy-Efﬁcient\
    \ Gateway for IoT Fog Computing Applications.\nSensors 2017, 17, 1978.\n[CrossRef]\n\
    25.\nWang, S.; Chen, Y.-R.; Chen, T.-Y.; Chang, C.-H.; Cheng, Y.-H.; Hsu, C.-C.;\
    \ Lin, Y.-B. Performance of\nLoRa-Based IoT Applications on Campus. In Proceedings\
    \ of the 2017 IEEE 86th Vehicular Technology\nConference (VTC-Fall), Toronto,\
    \ ON, Canada, 24–27 September 2017; pp. 1–6.\nSensors 2019, 19, 3287\n26 of 30\n\
    26.\nCesana, M.; Redondi, A.; Ort‘ın, J. A Framework for Planning LoRaWan Networks.\
    \ In Proceedings of the\n2018 IEEE 29th Annual International Symposium on Personal,\
    \ Indoor and Mobile Radio Communications\n(PIMRC), Bologna, Italy, 9–12 September\
    \ 2018; pp. 1–7.\n27.\nSadowski, S.; Spachos, P. RSSI-Based Indoor Localization\
    \ with the Internet of Things. IEEE Access 2018, 6,\n30149–30161. [CrossRef]\n\
    28.\nCasino, F.; Azpilicueta, L.; Lopez-Iturri, P.; Aguirre, E.; Falcone, F.;\
    \ Solanas, A. Optimized Wireless\nChannel Characterization in Large Complex Environments\
    \ by Hybrid Ray Launching-Collaborative Filtering\nApproach. IEEE Antennas Wirel.\
    \ Propag. Lett. 2017, 16, 780–783. [CrossRef]\n29.\nVargas, C.E.O.; Silva, M.M.;\
    \ Arnez, J.J.A.; Mello, L.D.S. Initial Results of Millimeter Wave Outdoor\nPropagation\
    \ Measurements in a Campus Environment. In Proceedings of the 2018 IEEE-APS Topical\n\
    Conference on Antennas and Propagation in Wireless Communications (APWC), Cartagena\
    \ de Indias,\nColombia, 10–14 September 2018; pp. 901–904.\n30.\nChen, X.; Jin,\
    \ R.; Suh, K.; Wang, B.; Wei, W. Network performance of smart mobile handhelds\
    \ in a university\ncampus Wi-Fi network. In Proceedings of the 2012 Internet Measurement\
    \ Conference, Boston, MA, USA,\n14–16 November 2012; pp. 315–328.\n31.\nAtif,\
    \ Y.; Mathew, S.S.; Lakas, A. Building a smart campus to support ubiquitous learning.\
    \ J. Ambient. Intell.\nHumaniz. Comput. 2015, 6, 223–238. [CrossRef]\n32.\nHirsch,\
    \ B.; Ng, J.W. Education beyond the cloud: Anytime-anywhere learning in a smart\
    \ campus\nenvironment. In Proceedings of the 2011 IEEE International Conference\
    \ for Internet Technology and\nSecured Transactions, Abu Dhabi, UAE, 11–14 December\
    \ 2011; pp. 718–723.\n33.\nBakken, J.P.; Uskov, V.L.; Penumatsa, A.; Doddapaneni,\
    \ A. Smart universities, smart classrooms and students\nwith disabilities. In\
    \ Smart Education and e-Learning; Springer: Cham, Switzerland, 2016; pp. 15–27.\n\
    34.\nKwok, L.F. A vision for the development of i-campus. Smart Learn. Environ.\
    \ 2015, 2, 1–12. [CrossRef]\n35.\nVienna University of Technology, University\
    \ of Ljubljana, Delft University of Technology, Technical Report:\nSmart Cities,\
    \ Ranking of European Medium-Size Cities, 2007. Available online: http://www.smart-cities.\n\
    eu/download/smart_cities_ﬁnal_report.pdf (accessed on 31 March 2019).\n36.\nWu,\
    \ F.; Rüdiger, C.; Redouté, J.; Yuce, M.R. WE-Safe: A wearable IoT sensor node\
    \ for safety applications\nvia LoRa. In Proceedings of the 2018 IEEE 4th World\
    \ Forum on Internet of Things (WF-IoT), Singapore,\n5–8 February 2018; pp. 144–148.\n\
    37.\nBlanco-Novoa, O.; Fernández-Caramés, T.M.; Fraga-Lamas, P.; Castedo, L. A\
    \ Cost-Effective IoT System for\nMonitoring Indoor Radon Gas Concentration. Sensors\
    \ 2018, 18, 2198. [CrossRef] [PubMed]\n38.\nFernández-Caramés, T.M.; Fraga-Lamas,\
    \ P.\nDesign of a Fog Computing, Blockchain and IoT-Based\nContinuous Glucose\
    \ Monitoring System for Crowdsourcing mHealth. Proceedings 2019, 4, 37. [CrossRef]\n\
    39.\nPompei, L.; Mattoni, B.; Bisegna, F.; Nardecchia, F.; Fichera, A.; Gagliano,\
    \ A.; Pagano, A. Composite\nIndicators for Smart Campus: Data Analysis Method.\
    \ In Proceedings of the IEEE International Conference\non Environment and Electrical\
    \ Engineering and the IEEE Industrial and Commercial Power Systems Europe,\nPalermo,\
    \ Italy, 12–15 June 2018.\n40.\nCao, J.; Li, Z.; Luo, Q.; Hao, Q.; Jiang, T. Research\
    \ on the Construction of Smart University Campus Based on\nBig Data and Cloud\
    \ Computing. In Proceedings of the International Conference on Engineering Simulation\n\
    and Intelligent Control (ESAIC), Changsha, China, 10–11 August 2018.\n41.\nHaghi,\
    \ A.; Burney, K.; Kidd, F.S.; Valiente, L.; Peng, Y. Fast-paced development of\
    \ a smart campus IoT\nplatform. In Proceedings of the Global Internet of Things\
    \ Summit, Geneva, Switzerland, 6–9 June 2017.\n42.\nMajeed, A.; Ali, M. How Internet-of-Things\
    \ (IoT) making the university campuses smart? QA higher\neducation (QAHE) perspective.\
    \ In Proceedings of the IEEE 8th Annual Computing and Communication\nWorkshop\
    \ and Conference (CCWC), Las Vegas, NV, USA, 8–10 January 2018.\n43.\nAlghamdi,\
    \ A.; Shetty, S. Survey Toward a Smart Campus Using the Internet of Things. In\
    \ Proceedings of\nthe IEEE 4th International Conference on Future Internet of\
    \ Things and Cloud (FiCloud), Vienna, Austria,\n22–24 August 2016.\n44.\nYu, Z.;\
    \ Liang, Y.; Xu, B.; Yang, Y.; Guo, B. Towards a Smart Campus with Mobile Social\
    \ Networking.\nIn Proceedings of the International Conference on Internet of Things\
    \ and 4th International Conference on\nCyber, Physical and Social Computing, Dalian,\
    \ China, 19–22 October 2011.\n45.\nHipwell, S. Developing smart campuses — A working\
    \ model. In Proceedings of the International Conference\non Intelligent Green\
    \ Building and Smart Grid (IGBSG), Taipei, Taiwan, 23–25 April 2014.\nSensors\
    \ 2019, 19, 3287\n27 of 30\n46.\nAli, S.; Rizzo, G.; Mancuso, V.; Marsan, M.A.\
    \ Persistence and availability of ﬂoating content in a campus\nenvironment. In\
    \ Proceedings of the IEEE Conference on Computer Communications, Hong Kong, China,\n\
    26 April–1 May 2015.\n47.\nPopescu, D.E.; Prada, M.F.; Dodescu, A.; Hemanth, D.J.;\
    \ Bungau, C. A secure conﬁdent cloud computing\narchitecture solution for a smart\
    \ campus. In Proceedings of the 7th International Conference on Computers\nCommunications\
    \ and Control (ICCCC), Oradea, Romania, 8–12 May 2018.\n48.\nMarjanovi´c, M.;\
    \ Antoni´c, A.; Žarko, I.P. Edge Computing Architecture for Mobile Crowdsensing.\
    \ IEEE Access\n2018, 6, 10662–10674. [CrossRef]\n49.\nFernández-Caramés, T.M.;\
    \ Fraga-Lamas, P.; Suárez-Albela, M.; Díaz-Bouza, M. A Fog Computing Based\nCyber-Physical\
    \ System for the Automation of Pipe-Related Tasks in the Industry 4.0 Shipyard.\
    \ Sensors 2018,\n18, 1961. [CrossRef]\n50.\nFernández-Caramés, T.M.; Fraga-Lamas,\
    \ P.; Suárez-Albela, M.; Vilar-Montesinos, M. A Fog Computing and\nCloudlet Based\
    \ Augmented Reality System for the Industry 4.0 Shipyard. Sensors 2018, 18, 1798.\
    \ [CrossRef]\n51.\nXu, Q.; Su, Z.; Wang, Y.; Dai, M. A Trustworthy Content Caching\
    \ and Bandwidth Allocation Scheme with\nEdge Computing for Smart Campus. IEEE\
    \ Access 2018, 6, 63868–63879. [CrossRef]\n52.\nChang, Y.; Lai, Y. Campus Edge\
    \ Computing Network Based on IoT Street Lighting Nodes. IEEE Syst. J. 2018,\n\
    doi.10.1109/JSYST.2018.2873430. [CrossRef]\n53.\nLiu, Y.; Shou, G.; Hu, Y.; Guo,\
    \ Z.; Li, H.; Beijing, F.P.; Seah, H.S. Towards a smart campus:\nInnovative applications\
    \ with WiCloud platform based on mobile edge computing. In Proceedings of\nthe\
    \ 12th International Conference on Computer Science and Education (ICCSE), Houston,\
    \ TX, USA,\n22–25 Auguat 2017.\n54.\nAgate, V.; Concone, F.; Ferraro, P. WiP:\
    \ Smart Services for an Augmented Campus. In Proceedings of the\nIEEE International\
    \ Conference on Smart Computing (SMARTCOMP), Taormina, Italy, 18–20 July 2018.\n\
    55.\nGhosh, A.; Chakraborty, N. Design of smart grid in an University Campus using\
    \ ZigBee mesh networks.\nIn Proceedings of the IEEE 1st International Conference\
    \ on Power Electronics, Intelligent Control and Energy\nSystems (ICPEICES), Delhi,\
    \ India, 4–6 July 2016.\n56.\nAlvarez-Campana, M.; López, G.; Vázquez, E.; Villagrá,\
    \ V.A.; Berrocal, J. Smart CEI Moncloa: An IoT-based\nPlatform for People Flow\
    \ and Environmental Monitoring on a Smart University Campus. Sensors 2017,\n17,\
    \ 12. [CrossRef] [PubMed]\n57.\nBai, S.; Chiu, C.; Hsu, J.; Leu, J. Campus-wide\
    \ wireless indoor positioning with hybrid iBeacon and Wi-Fi\nsystem. In Proceedings\
    \ of the 6th International Symposium on Next Generation Electronics (ISNE), Keelung,\n\
    Taiwan, 23–24 May 2017.\n58.\nWang, M.; Brassil, J. Managing large scale, ultra-dense\
    \ beacon deployments in smart campuses.\nIn Proceedings of the IEEE Conference\
    \ on Computer Communications Workshops (INFOCOM WKSHPS),\nHong Kong, China, 26\
    \ April–1 May 2015.\n59.\nHan, T.-D.; Cheong, C.; Ann, J.-W.; Kim, J.-Y.; Yoon,\
    \ H.-M.; Lee, C.-S.; Shin, H.-G.; Lee, Y.-J.; Yook, H.-M.;\nJeon, M.-H.; et al.\
    \ Implementation of new services to support ubiquitous computing for campus life.\n\
    In Proceedings of the Second IEEE Workshop on Software Technologies for Future\
    \ Embedded and Ubiquitous\nSystems, Vienna, Austria, 12 May 2004.\n60.\nXu, X.;\
    \ Li, D.; Sun, M.; Yang, S.; Yu, S.; Manogaran, G.; Mastorakis, G.; Mavromoustakis,\
    \ C.X. Research\non Key Technologies of Smart Campus Teaching Platform Based on\
    \ 5G Network. IEEE Access 2019, 7,\n20664–20675. [CrossRef]\n61.\nTelensa Ultra\
    \ Narrow Band (UNB) Ofﬁcial Webpage.\nAvailable online: https://www.telensa.com/\n\
    technology#top (accessed on 31 March 2019).\n62.\nWaviot NB-Fi Ofﬁcial Webpage.\
    \ Available online: https://waviot.com/technology/what-is-nb-ﬁ (accessed\non 31\
    \ March 2019).\n63.\nLoriot, M.; Aljer, A.; Shahrour, I. Analysis of the use of\
    \ LoRaWan technology in a large-scale smart city\ndemonstrator. In Proceedings\
    \ of the 2017 Sensors Networks Smart and Emerging Technologies (SENSET),\nBeirut,\
    \ Lebanon, 12–14 September 2017; pp. 1–4.\n64.\nWang, S.; Zou, J.; Chen, Y.; Hsu,\
    \ C.; Cheng, Y.; Chang, C. Long-Term Performance Studies of a\nLoRaWAN-Based PM2.5\
    \ Application on Campus. In Proceedings of the 2018 IEEE 87th Vehicular Technology\n\
    Conference (VTC Spring), Porto, Portugal, 3–6 June 2018; pp. 1–5.\nSensors 2019,\
    \ 19, 3287\n28 of 30\n65.\nLee, H.; Ke, K. Monitoring of Large-Area IoT Sensors\
    \ Using a LoRa Wireless Mesh Network System: Design\nand Evaluation. IEEE Trans.\
    \ Instrum. Meas. 2018, 67, 2177–2187. [CrossRef]\n66.\nWebb, J.; Hume, D. Campus\
    \ IoT collaboration and governance using the NIST cybersecurity framework.\nIn\
    \ Proceedings of the Living in the Internet of Things: Cybersecurity of the IoT,\
    \ London, UK, 28–29 March\n2018.\n67.\nVerstaevel, N.; Boes, J.; Gleizes, M. From\
    \ smart campus to smart cities issues of the smart revolution.\nIn Proceedings\
    \ of the IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted\n\
    Computed, Scalable Computing & Communications, Cloud & Big Data Computing, Internet\
    \ of People and\nSmart City Innovation, San Francisco, CA, USA, 4–8 August 2017.\n\
    68.\nPagliaro, F.; Mattoni, B.; Gugliermenti, F.; Bisegna, F.; Azzaro, B.; Tomei,\
    \ F.; Catucci, S. A roadmap toward\nthe development of Sapienza Smart Campus.\
    \ In Proceedings of the IEEE 16th International Conference on\nEnvironment and\
    \ Electrical Engineering (EEEIC), Florence, Italy, 7–10 June 2016.\n69.\nGuo,\
    \ M.; Zhang, Y. The research of smart campus based on Internet of Things & cloud\
    \ computing.\nIn Proceedings of the 11th International Conference on Wireless\
    \ Communications, Networking and Mobile\nComputing (WiCOM 2015), Shanghai, China,\
    \ 21–23 September 2015.\n70.\nMuhamad, W.; Kurniawan, N.B.; Suhardi; Yazid, S.\
    \ Smart campus features, technologies, and applications:\nA systematic literature\
    \ review. In Proceedings of the International Conference on Information Technology\n\
    Systems and Innovation (ICITSI), Bandung, Indonesia, 23–24 October 2017.\n71.\n\
    Hengliang, T.; Chuanrong, C. The Construction of Intelligent Transportation System\
    \ Based on the\nConstruction of Wisdom Campus—Take Soochow University as an Example.\
    \ In Proceedings of the Eighth\nInternational Conference on Measuring Technology\
    \ and Mechatronics Automation (ICMTMA), Macau,\nChina, 11–12 March 2016.\n72.\n\
    Bandara, H.M.A.P.K.; Jayalath, J.D.C.; Rodrigo, A.R.S.P.; Bandaranayake, A.U.;\
    \ Maraikar, Z.; Ragel, R.G.\nSmart campus phase one: Smart parking sensor network.\
    \ In Proceedings of the Manufacturing & Industrial\nEngineering Symposium (MIES),\
    \ Colombo, Sri Lanka, 22 October 2016.\n73.\nBracco, S.; Brenna, M.; Delfmo, F.;\
    \ Foiadelli, F.; Longo, M. Preliminary study on electric mobility applied to a\n\
    University Campus in North Italy. In Proceedings of the 6th International Conference\
    \ on Clean Electrical\nPower (ICCEP), Santa Margherita Ligure, Italy, 27–29 June\
    \ 2017.\n74.\nBrenna, M.; Foiadelli, F.; Longo, M.; Bracco, S.; Delﬁno, F. Sustainable\
    \ electric mobility analysis in the\nSavona Campus of the University of Genoa.\
    \ In Proceedings of the IEEE 16th International Conference on\nEnvironment and\
    \ Electrical Engineering (EEEIC), Florence, Italy, 7–10 June 2016.\n75.\nYagcitekin,\
    \ B.; Uzunoglu, M.; Ocal, B.; Turan, E.; Tunc, A. Development of Smart Charging\
    \ Strategies for\nElectric Vehicles in a Campus Area. In Proceedings of the European\
    \ Modelling Symposium, Manchester, UK,\n20–22 November 2013.\n76.\nBásaca-Preciado,\
    \ L.C.; Orozco-Garcia, N.A.; Terrazas-Gaynor, J.M.; Moreno-Partida, A.S.; Rosete-Beas,O.A.;\n\
    Rizzo-Aguirre, J.; Martinez-Grijalva, L.F.; Ponce-Camacho, M.A. Intelligent Transportation\
    \ Scheme for\nAutonomous Vehicle in Smart Campus. In Proceedings of the 44th Annual\
    \ Conference of the IEEE Industrial\nElectronics Society, Washington, DC, USA,\
    \ 21–23 October 2018.\n77.\nChit, S.M.; Chaw, L.Y.; Thong, C.L.; Lee, C.Y. A pilot\
    \ study: Shuttle bus tracker app for campus users.\nIn Proceedings of the International\
    \ Conference on Research and Innovation in Information Systems (ICRIIS),\nLangkawi,\
    \ Malaysia, 10 August 2017.\n78.\nBracco, S.; Delﬁno, F.; Laiolo, P.; Rossi, M.\
    \ The Smart City Energy infrastructures at the Savona Campus of\nthe University\
    \ of Genoa. In Proceedings of the AEIT International Annual Conference (AEIT),\
    \ Capri, Italy,\n5–7 October 2016.\n79.\nSharma, H.; Kaur, G. Optimization and\
    \ simulation of smart grid distributed generation: A case study\nof university\
    \ campus. In Proceedings of the IEEE Smart Energy Grid Engineering (SEGE), Oshawa,\
    \ ON,\nCanada, 21–24 August 2016.\n80.\nLazaroiu, G.C.; Dumbrava, V.; Costoiu,\
    \ M.; Teliceanu, M.; Roscia, M. Smart campus-an energy integrated\napproach. In\
    \ Proceedings of the International Conference on Renewable Energy Research and\
    \ Applications\n(ICRERA), Palermo, Italy, 22–25 November 2015.\nSensors 2019,\
    \ 19, 3287\n29 of 30\n81.\nPagliaro, F.; Mattoni, B.; Ponzo, V.; Corona, G.; Nardecchia,\
    \ F.; Bisegna, F.; Gugliermetti, F. Sapienza smart\ncampus: From the matrix approach\
    \ to the applicative analysis of an optimized garbage collection system.\nIn Proceedings\
    \ of the IEEE International Conference on Environment and Electrical Engineering\
    \ and the\nIEEE Industrial and Commercial Power Systems Europe, Milan, Italy,\
    \ 6–9 June 2017.\n82.\nVerma, P.; Kumar, A.; Rathod, N.; Jain, P.; Mallikarjun,\
    \ S.; Subramanian, R.; Amrutur, B.; Kumar, M.S.M.;\nSundaresan, R. Towards an\
    \ IoT based water management system for a campus. In Proceedings of the IEEE\n\
    First International Smart Cities Conference (ISC2), Guadalajara, Mexico, 25–28\
    \ October 2015.\n83.\nLiu, R.; Kuo, C.; Yang, C.; Chen, S.; Liu, J. On Construction\
    \ of an Energy Monitoring Service Using Big Data\nTechnology for Smart Campus.\
    \ In Proceedings of the 7th International Conference on Cloud Computing and\n\
    Big Data (CCBD), Macau, China, 16–18 November 2016.\n84.\nLazaroiu, G.C.; Dumbrava,\
    \ V.; Costoiu, M.; Teliceanu, M.; Roscia, M. Energy-informatic-centric smart campus.\n\
    In Proceedings of the IEEE 16th International Conference on Environment and Electrical\
    \ Engineering (EEEIC),\nFlorence, Italy, 7–10 June 2016.\n85.\nBacanli, S.S.;\
    \ Solmaz, G.; Turgut, D. Opportunistic Message Broadcasting in Campus Environments.\n\
    In Proceedings of the IEEE Global Communications Conference (GLOBECOM), San Diego,\
    \ CA, USA,\n6–10 December 2015.\n86.\nZhang, S.; Li, X. Mobility patterns of human\
    \ population among university campuses. In Proceedings of the\nIEEE Asia Paciﬁc\
    \ Conference on Circuits and Systems, Jeju, Korea, 25–28 October 2016.\n87.\n\
    Concone, F.; Ferraro, P.; Lo Re, G. Towards a Smart Campus Through Participatory\
    \ Sensing. In Proceedings\nof the IEEE International Conference on Smart Computing\
    \ (SMARTCOMP), Taormina, Italy, 18–20 June 2018.\n88.\nBilgi, S.; Ozturk, O.;\
    \ Gulnerman, A.G. Navigation system for blind, hearing and visually impaired people\n\
    in ITU Ayazaga campus. In Proceedings of the International Conference on Computing\
    \ Networking and\nInformatics (ICCNI), Lagos, Nigeria, 29–31 October 2017.\n89.\n\
    Yong, Q.; Cheng, B.; Xing, Y. A Novel Quantum Ant Colony Algorithm Used for Campus\
    \ Path.\nIn Proceedings of the IEEE International Conference on Computational\
    \ Science and Engineering (CSE)\nand IEEE International Conference on Embedded\
    \ and Ubiquitous Computing (EUC), Guangzhou, China,\n21–24 July 2017.\n90.\nÖzcan,\
    \ U.; Arslan, A.; ˙Ilkyaz, M.; Karaarslan, E. An augmented reality application\
    \ for smart campus\nurbanization: MSKU campus prototype. In Proceedings of the\
    \ 5th International Istanbul Smart Grid and\nCities Congress and Fair (ICSG),\
    \ Istanbul, Turkey, 19–21 April 2017.\n91.\nSutjarittham, T.; Habibi Gharakheili,\
    \ H.; Kanhere, S.S.; Sivaraman, V. Data-Driven Monitoring and\nOptimization of\
    \ Classroom Usage in a Smart Campus. In Proceedings of the17th ACM/IEEE International\n\
    Conference on Information Processing in Sensor Networks (IPSN), Porto, Portugal,\
    \ 11–13 April 2018.\n92.\nLiang, T.; Tsai, C. Application of Intelligent Monitoring\
    \ System in Campus Greenhouse. In Proceedings of\nthe International Conference\
    \ on Information, Communication and Engineering (ICICE), Xiamen, China,\n17–20\
    \ November 2017.\n93.\nLu, J.; Xu, X.; Li, X.; Li, L.; Chang, C.-C.; Feng, X.;\
    \ Zhang, S. Detection of Bird’s Nest in High Power Lines in\nthe Vicinity of Remote\
    \ Campus Based on Combination Features and Cascade Classiﬁer. IEEE Access 2018,\
    \ 6,\n39063–39071. [CrossRef]\n94.\nLiang, Y.; Chen, Z. Intelligent and Real-Time\
    \ Data Acquisition for Medical Monitoring in Smart Campus.\nIEEE Access 2018,\
    \ 6, 74836-74846. [CrossRef]\n95.\nGjoreski, M.; Gjoreski, H.; Lutrek, M.; Gams,\
    \ M. Automatic Detection of Perceived Stress in Campus Students\nUsing Smartphones.\
    \ In Proceedings of the International Conference on Intelligent Environments,\
    \ Prague,\nCzech Republic, 15–17 July 2015.\n96.\nPérez, L.E.; Pardiñas-Mir, J.A.;\
    \ Guerra, O.; de la Mora, J.; Pimienta, M.; Hernández, N.; de Atocha Lopez, M.\n\
    A wireless sensor network system: For monitoring trees’ health related parameters\
    \ in a university campus.\nIn Proceedings of the 12th International Joint Conference\
    \ on e-Business and Telecommunications (ICETE),\nColmar, France, 20–22 July 2015.\n\
    97.\nPopoola, S.I.; Atayero, A.A.; Popoola, O.A. Comparative assessment of data\
    \ obtained using empirical models\nfor path loss predictions in a university campus\
    \ environment. Data Brief 2018, 18, 380–393. [CrossRef]\n98.\nPopoola, S.I.; Atayero,\
    \ A.A.; Arausi, O.D.; Matthews, V.O. Path loss dataset for modeling radio wave\n\
    propagation in smart campus environment. Data Brief 2018, 17, 1062–1073. [CrossRef]\n\
    Sensors 2019, 19, 3287\n30 of 30\n99.\nKarttunen, A.; Molisch, A.F.; Hur, S.;\
    \ Park, J.; Zhang, C.J. Spatially Consistent Street-by-Street Path Loss\nModel\
    \ for 28-GHz Channels in Micro Cell Urban Environments. IEEE Trans. Wirel. Commun.\
    \ 2017, 16,\n7538–7550. [CrossRef]\n100. Fuschini, F.; El-Sallabi, H.; Degli-Esposti,\
    \ V.; Vuokko, L.; Guiducci, D.; Vainikainen, P. Analysis of Multipath\nPropagation\
    \ in Urban Environment Through Multidimensional Measurements and Advanced Ray\
    \ Tracing\nSimulation. IEEE Trans. Antennas Propag. 2008, 56, 848–857. [CrossRef]\n\
    101. Mani, F.; Oestges, C. A Ray Based Method to Evaluate Scattering by Vegetation\
    \ Elements. IEEE Trans.\nAntennas Propag. 2012, 60, 4006–4009. [CrossRef]\n102.\
    \ Chio, C.H.; Pang, C.K.; Ting, S.W.; Tam, K.W. Field prediction in urban environment\
    \ using ray tracing.\nIn Proceedings of the 2013 IEEE Antennas and Propagation\
    \ Society International Symposium (APSURSI),\nOrlando, FL, USA, 7–13 July 2013;\
    \ pp. 1926–1927.\n103. Un, L.K.; Chio, C.; Ting, S. Mobile communication site\
    \ planning in campus using ray tracing. In Proceedings\nof the 2014 IEEE Antennas\
    \ and Propagation Society International Symposium (APSURSI), Memphis, TN,\nUSA,\
    \ 6–11 July 2014; pp. 959–960.\n104. Thirumaraiselvan, P.; Jayashri, S. Modeling\
    \ of Wi-Fi signal propagation under tree canopy in a college\ncampus. In Proceedings\
    \ of the 2016 International Conference on Communication and Signal Processing\n\
    (ICCSP), Melmaruvathur, India, 24 November 2016; pp. 2273–2277.\n105. Wei, S.;\
    \ Ai, B.; He, D.; Guan, K.; Wang, L.; Zhong, Z. Calibration of ray-tracing simulator\
    \ for millimeter-wave\noutdoor communications. In Proceedings of the 2017 IEEE\
    \ International Symposium on Antennas and\nPropagation & USNC/URSI National Radio\
    \ Science Meeting, San Diego, CA, USA, 9–14 July 2017;\npp. 1907–1908.\n106. Fathurrahman,\
    \ S.Z.; Rahardjo, E.T. Coverage of Radio Wave Propagation at UI Campus Surrounding\
    \ Using\nRay Tracing and Physical Optics Near to Far Field Method. In Proceedings\
    \ of the TENCON 2018—IEEE\nRegion 10 Conference, Jeju, Korea, 28–31 October 2018;\
    \ pp. 1123–1126.\n107. UN Sustainable Development Goals. Available online: https://sustainabledevelopment.un.org/\
    \ (accessed\non 14 July 2019).\n108. RHF0M301 LoRaWAN Module Datasheet. Available\
    \ online: https://www.robotshop.com/media/ﬁles/\npdf/915mhz-lora-gateway-raspberry-pi-hat-datasheet1.pdf\
    \ (accessed on 31 March 2019).\n109. LoRaWAN Module RHF76-052 Datasheet. Available\
    \ online: https://fccid.io/2AJUZ76052/User-Manual/\nUsers-Manual-3211050.pdf (accessed\
    \ on 31 March 2019).\n110. Azpilicueta, L.; Rawat, M.; Rawat, K.; Ghannouchi,\
    \ F.; Falcone, F. Convergence Analysis in Deterministic 3D\nRay Launching Radio\
    \ Channel Estimation in Complex Environments. ACES J. 2014, 29, 256–271.\n111.\
    \ Azpilicueta, L.; Lopez-Iturri, P.; Aguirre, E.; Vargas-Rosales, C.; León, A.;\
    \ Falcone, F. Inﬂuence of Meshing\nAdaption in Convergence Performance of Deterministic\
    \ Ray Launching Estimation in Indoor Scenarios. J.\nElectromagn. Waves Appl. 2017,\
    \ 31, 544–559. [CrossRef]\n112. Ettus Research USRP B210.\nAvailable online:\n\
    https://www.ettus.com/product/details/UB210-KIT\n(accessed on 31 March 2019).\n\
    113. Allen, K.C.; DeMinco, N.; Hoffman, J.R.; Lo, Y.; Papazian, P.B. Building\
    \ Penetration Loss Measurements at\n900 MHz, 11.4 GHz, and 28.8 GHz; NTIA Report\
    \ 94-306; U.S. Department of Commerce: Washington, DC,\nUSA, 1994.\nc⃝ 2019 by\
    \ the authors. Licensee MDPI, Basel, Switzerland. This article is an open access\n\
    article distributed under the terms and conditions of the Creative Commons Attribution\n\
    (CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/19/15/3287/pdf?version=1564127748
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Design and Experimental Validation of a LoRaWAN Fog Computing Based Architecture
    for IoT Enabled Smart Campus Applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.23919/fruct.2018.8588086
  analysis: '>'
  authors:
  - Ivan Zyrianoff
  - Alexandre Heideker
  - Dener Silva
  - Carlos Kamienski
  citation_count: 15
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2018 23rd Conference of Open ... Scalability
    of an Internet of Things Platform for Smart Water Management for Agriculture Publisher:
    IEEE Cite This PDF Ivan Zyrianoff; Alexandre Heideker; Dener Silva; Carlos Kamienski
    All Authors 15 Cites in Papers 402 Full Text Views Abstract Document Sections
    I. Introduction II. Background and Related Work III. Smart Water Management Platform
    IV. Research Design and Methods V. Results Show Full Outline Authors Figures References
    Citations Keywords Metrics Abstract: The emergence of a new breed of smart applications
    requires middleware platforms that enable the rapid development of IoT-based solutions,
    which can be hosted partially in fog nodes, as well as in a traditional cloud
    datacenter. Currently, there is no scalable de facto open IoT platform but the
    European Commission is pushing FIWARE to fill this gap. We analyzed the performance
    of FIWARE under different platform configurations comparing fog/cloud and cloud-only
    scenarios for precision irrigation in smart farming. Our results reveal interesting
    and non-intuitive findings, such as that fog computing does not always improve
    the overall system performance and in some cases it even makes it worse. Also,
    the network between the farm and the cloud datacenter causes some unexpected differences
    between different scenarios. Published in: 2018 23rd Conference of Open Innovations
    Association (FRUCT) Date of Conference: 13-16 November 2018 Date Added to IEEE
    Xplore: 27 December 2018 ISBN Information: Print on Demand(PoD) ISSN: 2305-7254
    DOI: 10.23919/FRUCT.2018.8588086 Publisher: IEEE Conference Location: Bologna,
    Italy SECTION I. Introduction The Internet of Things (IoT) [15] and the billions
    of sensors that will be deployed in the next decade [5], as well as novel associated
    technological breakthroughs, have been enabling the emergence of a new breed of
    smart applications and services for the benefic or our society in different domains
    or verticals, such as smart farming, smart cities, smart healthcare and smart
    industries. Building interoperable IoT services and applications requires a set
    of middleware components and system development, deployment and operation tools
    and platforms, In order to avoid developing extremely focused and vertical IoT
    applications not able to interact with other applications, common and generic
    middleware services used by different application domains become necessary. The
    widespread availability of IoT-based applications requires adequate platforms
    for both development and operation phases. The former for releasing developers
    from the need of mastering different technologies outside their core business
    and that do not add value to the process [7]. The latter for freeing organizations
    from the need of deploying and testing customized platforms for supporting the
    operation of IoT-based applications. There are some IoT platforms available today,
    both open source and proprietary [4]. There is a tradeoff in the deployment of
    such platforms, which traditionally are hosted in cloud datacenters, but are slowly
    considered to be partially moved to edge infrastructure closer to the users, which
    is known as fog computing [2]. Although many IoT platforms exist today, the arena
    is not clear regarding the suitability of them for the different deployment scenarios
    for different smart applications. IoT tools and platforms must provide an end-to-end
    treatment for the data path, since data is generated by sensors, transmitted to
    the storage place, processed by smart algorithms, decisions are made, which fire
    actions that are finally forwarded to actuators as commands aimed at changing
    some configuration. Also, scalability is a major concern for IoT platforms. It
    has been shown that different architectural choices of IoT platforms affect system
    scalability and that automatic real time decision-making is feasible in an environment
    composed of dozens of thousands of sensors continuously transmitting data [16].
    Currently, there is no scalable de facto open IoT platform but the European Commission
    is pushing FIWARE to fill this gap. The SWAMP project develops and assesses an
    IoT-based smart water management platform for precision irrigation in agriculture
    with a hands-on approach that focuses on pilots in Italy, Spain and Brazil [9].
    The same underlying platform can be customized to different pilots considering
    different countries, climate, soil, and crops. The SWAMP platform may be implemented
    in a range of deployment configurations involving both cloud and fog environments.
    In this paper, we analyze the performance of FIWARE under different platform configurations
    comparing fog/cloud and cloud-only scenarios for precision irrigation using one
    of the SWAMP pilots as the evaluation scenario. Experiments consisted simulated
    sensors sending messages to FIWARE, deployed both in a fog/cloud and a cloud-only
    configuration mode. We performed experiments with a large number of probes simultaneously
    sending messages to the platform, in order to verify and understand it scalability.
    Security and privacy aspects are key components for making it possible to emergence
    of a true market for such IoT platforms for precision irrigation, such as SWAMP
    [8]. However, these aspects have not been evaluated here since they are outside
    the scope of this paper that focuses on performance and scalability of the FIWARE
    Platform when configured for the needs of SWAMP. Our results reveal interesting
    and non-intuitive outcomes, such as, that fog computing does not always improve
    the overall system performance. In some cases, the addition of a fog processing
    nodes even proved to worsen the performance. An important and unexpected factor
    in the experiments was the impact of the network. Initially, we believed that
    the network would equally impact both configurations (fog/cloud and cloud-only).
    However, the impact was much higher in the fog/cloud configuration. In the remainder
    of the paper, section II presents background and related work. Section III introduces
    SWAMP and the two scenarios for the MATOPIBA pilot. Section IV provides a detailed
    view of research design and methods. The key results are presented in section
    V, followed by discussion of lessons learned in section VI. Finally, section VII
    draws some conclusions and propose relevant future work. SECTION II. Background
    and Related Work This section introduces related background and related work.
    A. IoT and Fog Computing Fog computing is a fairly new paradigm aimed at dealing
    with challenges related to the huge amount of data that inevitably will be generated
    with the increasing utilization of IoT-based systems [2]. It solves serious problems
    such as decreasing latency from real time applications, decreasing data traffic
    between the network edge and core, and softening the processing burden of the
    cloud by performing load balancing. The metaphor comes from the fact that fog
    is a cloud but closer to the ground and to the people [13]. The fog is based on
    a highly virtualized platform that provides computing, storage and communication
    services between users and the datacenter where the cloud is hosted [1], by bringing
    services from the cloud closer to the users. Since its inception the fog has been
    envisioned for operating together with the cloud for making it possible to implement
    IoT-based smart applications. In other words, fog and IoT are related yet independent
    concepts, as the fog can deal with a broader variety of applications and IoT does
    need the fog to come true. A new technological trend that has been used for implementing
    the fog is container-based virtualization that provides a lightweight alternative
    to the traditional hypervisors [12]. Containers do not emulate the underlying
    hardware. Rather, the virtualized OS communicates directly with the host OS, which
    makes the appropriate calls to the real hardware. Lightweight virtualization minimizes
    the use of computational resources of the host machine, since there is no need
    to duplicate the operating system. B. The FIWARE Platform The FIWARE platform
    (fiware.org) has been attraction general attention for being a worldwide open
    source solution fostered and funded by the European Commission under Horizon 2020
    program. It is comprised of a series of software components called Generic Enablers
    (GE) that perform functions needed in a different variety of IoT-based applications
    for smart societies, focusing in cities, farming, industry, healthcare and sustainability.
    GEs can be used to build different applications that exchange information through
    a REST API following the OMA NGSI standard (openmobilealliance.org/release/NGSI),
    based on JSON. The central aspect of the FIWARE NGSI Context Management information
    model is the concept of entities and their attributes. Among the many GEs available
    by the FIWARE, some are considered the key enablers for smart applications. Here
    we only introduce the ones cited and used in our paper. Orion Context Broker:
    Orion is a publish/subscribe context broker, which makes it the main FIWARE GE
    and the heart of the platform. Orion provides an interface where clients can register
    entities and their attributes as well as producers/consumers of those entities.
    Orion only stores the latest version of entity attributes and it needs to work
    together with other GEs or applications in order to maintain historical data.
    Orion is available in fiware-orion.readthedocs.io. IDAS and IoT Agents: IDAS is
    an implementation of the Device Backend Management GE that comprises many IoT
    Agents that map data coming from sensors and going to actuators to the FIWARE
    NGSI information model to be stored in Orion and further processed by other GEs
    or external applications. Since low power sensors do not possess computing, storage
    and transmission capabilities for speaking NGSI, they use different IoT protocols
    such as MQTT, CoAP, Ultralight or LoRaWAN transport, which are converted into/from
    NGSI by IoT Agents. IDAS is available in catalogueserver.fiware.org/enablers/backend-device-managementidas.
    STH Comet: Short Time Historic, also known as Comet, works with Orion storing
    entity data as a time series that can be further used by applications or other
    GEs. STH Comet is available in fiware-sth-comet.readthedocs.io. The use of FIWARE
    by any organization or developer involves the installation of its GEs in an appropriate
    infrastructure where it can run, which might be standalone machines, public clouds
    or preferentially a private cloud using the OpenStack cloud manager. FIWARE has
    been used as a computing platform for many IoT-based applications, such as farming
    and environment [14]. Also, many large scale projects use FIWARE for IoT in agriculture,
    such as IoF2020 (iof2020.eu), as well as startups such as Breeze (breeze-technologies.de),
    Hop Ubiquitous (hopu.eu) and Agricolus (agricolus.com). C. Related Work Scalability
    is a major concern for IoT platforms. Numbers vary but in general it is forecasted
    that in the beginning of the 2020’s there will be about 30 billion connected devices
    [5]. It has been shown that different architectural choices of IoT platforms affect
    system scalability and that automatic real time decision-making is feasible in
    an environment composed of dozens of thousands of sensors continuously transmitting
    data [16]. The performance of FIWARE has been calling the attention its user community.
    A comprehensive study that proposes qualitative and quantitative metrics and evaluates
    the performance of various IoT platforms is presented by da Cruz et al. (2018)
    [4]. From 11 platforms analyzed by the qualitative approach, 5 were selected for
    the quantitative performance analysis, including FIWARE. However, since they adopted
    a generic approach, they did not go into the specifics of FIWARE-only a single
    Orion + STH platform configuration was considered – and they did not evaluate
    different infrastructures (as fog computing). Martínez et al. (2016) [11] gives
    a detailed description of the architecture of a testbed of the FIWARE platform
    configured for the precision agriculture domain, which differs from our approach,
    because their test application connects directly to FIWARE using NGSI JSON interface,
    while we included an IoT Agent for MQTT using a scalable IoT sensor simulator
    for generating synthetic data. Lastly, Cardoso et al. (2017) [3] compared the
    performance of FIWARE and their own implementation of ETSI M2M, under different
    running conditions, which makes it difficult to understand the tradeoffs of each
    platform. In this paper, we differ from previous work by evaluating five configurations
    of FIWARE and focusing on the scenarios of smart irrigation in agriculture from
    the SWAMP project [9]. SECTION III. Smart Water Management Platform The primary
    objective of the SWAMP project is to develop IoT based methods and approaches
    for smart water management in precision irrigation domain and to pilot them in
    four places, two pilots in Europe (Italy and Spain) and two pilots in Brazil [9],
    more information can be found in swampproject.org. Also, it is aimed at improving
    precision irrigation by increasing the awareness of the condition of the crop,
    by monitoring the field based on crop status and environment, and to adjust the
    irrigation prescription map accordingly. A. SWAMP Pilots The four SWAMP pilots
    are based on the similar technical solutions and deal with different crops and
    have different primary goals. CBEC Pilot (Bologna/Italy): the main objective of
    the Consorzio di Bonifica Emilia Centrale (CBEC) pilot is optimizing water distribution
    to the farms. Intercrop Pilot (Cartagena/Spain): Intercrop Iberica addresses several
    challenges since production is in a dry area and its primary goal is making a
    rational use of water. Guaspari Pilot (Espírito Santo do Pinhal / Brazil): The
    Guaspari Winery transfers the wine grape harvesting to the winter season (June-August)
    using irrigation techniques. The main goal for Guaspari is improving wine quality.
    MATOPIBA Pilot (Barreiras/Brazil): The Rio das Pedras Farm is located in the MATOPIBA
    region, and irrigation is mostly performed by center pivots. The main pilot goal
    is to implement and evaluate a smart irrigation system based on Variable Rate
    Irrigation (VRI) for center pivots in soybean production and save energy used
    in irrigation. The SWAMP project is developing a high-precision smart irrigation
    system concept for agriculture. The fundamental idea is to enable optimizations
    of irrigation, water distribution, and consumption based on a holistic analysis
    that collects information from all aspects of the system including even the natural
    water cycle and the cumulated knowledge related to growing particular plants.
    It results in savings to all parties as it guarantees the availability of water
    in situations where water supply is limited and also prevents over- and under-irrigation.
    A fundamental idea in SWAMP is to facilitate the replication of water management
    systems built on top of its platform with minimum redesign and redevelopment.
    Different layers of the architecture have components that are more generic and
    thus less difficult to be ported to other pilots, whereas others are more application-specific
    and thus require new development efforts whenever a new pilot is conceived. B.
    SWAMP MATOPIBA Scenario In this paper we will evaluate the performance of FIWARE
    when configured for the SWAMP MATOPIBA scenario depicted in Fig. 1 , which represents
    the center-pivot with variable-rate irrigation pilot. The scenario captures both
    the farm and SWAMP Platform viewpoints and represents a future vision and not
    the current situation. A center pivot irrigates a circular agricultural plot of
    100 hectares that alternates soybeans and cotton. The plot is further divided
    into different management zones, identified before the crop season and based on
    differences in the soil properties. Two general types of sensors collect data
    for the SWAMP system: a) stationary sensors within the soil at the root system
    depth that continuously measure metrics such as temperature and moisture, and;
    b) drones acting as flying sensors equipped with thermal/multispectral cameras
    or working as data mules by collecting sensor data and transmitting to the farm’s
    office. The center pivot is electrified to make it able to control the variable
    rate irrigation sprinklers (actuators) and thus it can also be equipped with processing
    and communication capabilities. No special energy harvesting is predicted for
    the sensing devices. We developed multiparametric probes for soil sensing, which
    include moisture, temperature and electrical conductivity sensors at three depths
    from the soil surface. Sampling and transmission rates will be adjusted from a
    few minutes up to hours, according to the time of the day and the application
    requirements. This way, the probe sensing electronics combined with ZigBee or
    LoRaWAN will be powered by extended lifespan batteries. The key difference between
    Fig. 1(a) and Fig. 1(b) is that the former includes a distributed fog/cloud configuration
    of the platform whereas the latter is solely based on the cloud for hosting all
    software components. Depending on different variables - such as farmers interest,
    availability of infrastructure, intended responsiveness to delay, robustness to
    disconnections, and cost/effectiveness – one or the other scenario may be more
    or less appropriate. For the MATOPIBA pilot, the preferred solution is the fog-based
    one, for providing autonomous processing capacity to the farm as it is located
    in a region where Internet connections may suffer periods of instability. Anyway,
    we evaluate both approaches because the cloud-based one might be used as well.
    In Fig. 1(a) both the center pivot and drones are deemed Field Fog Nodes (FFN)
    for the SWAMP architecture. Notably, the FFN at the center pivot acts as a sensor
    aggregation point and as a distributor of actuator commands received from the
    SWAMP system. FFNs communicate with the nearest fixed attachment point of the
    SWAMP platform, which usually is an on-premises Typically, when sensors are powered
    with LoRaWAN, the FFN will host the LoRaWAN Gateway and possibly the LoRaWAN Server
    and other supplementary features. The Fog Hub is located in the farm’s office.
    SWAMP allows FFNs to communicate directly with the platform running in the cloud,
    whenever this is the preferred deployment choice. The FFNs send data directly
    to the SWAMP platform located in the Fog Hub at the farm’s offices via different
    wireless technologies, which in Fig. 1(a) is WiFi. For this scenario, the functions
    performed by the SWAMP architecture are divided up into local fog and remote cloud
    components. Heavy processing, such as irrigation models and analytics using smart
    algorithms (i.e., machine learning), is performed in the cloud. External information
    is fed to the platform, such as crop yield models, meteorological data and historical
    data. On the other hand, Fig. 1(b) depicts a scenario where no fog is available
    and data generated by sensors are sent directly to the cloud via a typical cellular
    technology that might be 3G/4G or even NB-IoT. Fig. 1. SWAMP MATOPIBA scenario;
    a) Fog-cloud; b) Cloud-only Show All SECTION IV. Research Design and Methods A.
    Evaluation Scenario and Environment One of the main goals of this paper is to
    compare fog/cloud and cloud-only based approaches for smart water management.
    Therefore, based on the SWAMP MATOPIBA pilot specification ( Section 3), we designed
    a FIWARE-based IoT platform that involves obtaining sensor data values up to the
    point of they are transparently consumed by an application that can be deployed
    in the cloud and/or in the fog. The software modules depicted in Fig.3 and Fig.4
    are implemented by lightweight virtualization of Docker containers, including
    the FIWARE modules, whose container images can easily be obtained in that format.
    The other modules of this scenario are: SenSE: the Sensor Simulating Environment
    (SenSE, is an open-source large-scale IoT sensor data generator able to abstract
    real devices and to model different complex scenarios, such as smart farms [16].
    The tool is a traffic workload generator that emulates a huge number of heterogeneous
    sensors representing tens of thousands of IoT sensors sending data simultaneously
    via a typical IoT protocol (e.g., MQTT). Although the sensors are synthetic, the
    traffic is real. In our scenarios, SenSE generates probe data and represents the
    fog field node that forward sensor data to the platform. The source code can be
    download from github.com/ivanzy/SenSE-Sensor-Simulation-Environment. Mosquitto:
    Eclipse Mosquitto is an open source MQTT message broker. Available in mosquitto.org.
    MongoDB: a document-oriented NoSQL database. Available in mongodb.com. Consumer:
    Consumer is a special purpose Express.js web application that subscribes in Orion
    and receives sensor data from the probes. When Orion sends a message to the consumer’s
    API, a timestamp is recorded and is subtracted from the timestamp of the message,
    in such a way we obtain the elapsed time between the generation of the message
    until it reaches the Consumer. The sequence of processing steps and data flow
    starting from the sensor data generation and ending at the consumer is shown in
    Fig. 2. This data flow is deployed in both fog and cloud-only scenarios, depicted
    in Fig. 1. SenSE generates sensor (probe) data and sends it to Mosquitto MQTT
    broker; IoT Agent receives the probe messages from the MQTT broker, stores it
    in MongoDB, translates them to the NGSI format, and finally sends it to Orion
    through HTTP protocol; Orion Context Broker receives NGSI data from the IoT Agent,
    updates entity values, stores them in MongoDB, and sends them to the subscribed
    applications through HTTP protocol and structured as NGSI; Data is delivered to
    the consumer, which stores it and calculates the elapsed since the message was
    generated in the probe (by SenSE), the consumer is subscribed to be notified from
    all probe sensors updates. Fig. 2. Processing steps and data flow Show All In
    the cloud-only experiments ( Fig.3) the sensor data is directed sent to the cloud,
    where all modules are in the same physical machine. Since both Orion and IoT Agent
    are in the same VM, both use the same MongoDB instance. In the fog experiments,
    the first two steps of processing occur in the fog node, which means that the
    MQTT broker and the IoT Agent run in the edge device, and the Orion and Consumer
    are executed in a VM in the cloud. This configuration needs a MongoDB instance
    in each machine, where the fog hosts the IoT Agent and cloud hosts Orion and the
    Consumer. In order to fully understand the evaluation scenario, one needs to comprehend
    the data model of the probe messages. We adopted the Ultralight 2.0 (UL) protocol
    – a lightweight text based protocol aimed to constrained devices and communications
    where the bandwidth and device memory may be limited resources [6]. Each probe
    consists of a set of seven sensors of three different types: Three soil temperature
    sensors in different depths; Three soil moisture sensors in different depths;
    One soil electrical conductivity sensor. Each probe sends a message every 10 minutes
    using the UL protocol over MQTT. The structure of each message is: t1|v|t2|v|t3|v|m1|v|m2|v|m3|v|c|v|ts|v
    View Source where: t1, t2, t3: temperature sensors in different depths; m1, m2,
    m3: moisture sensors in different depths; c: electrical conductivity of the soil;
    ts: timestamp of message generation; v: value of the metric. Fig.3 and Fig.4 show
    the two evaluation scenarios, cloud-only and fog/cloud, respectively. We performed
    the experiments in a lab testbed – all the VMs in the same LAN - and using a network
    emulator (WANem – available to download at wanem.sourceforge.net) to consider
    the impact of network parameters between the place where the data is generated
    (in the farm, where the sensors and fog nodes are located) and the place it is
    processed (the cloud, usually located in some datacenters placed in big cities).
    Although the case where the machines representing the fog and the cloud are in
    the same LAN does not adequately portray the reality, it is important to further
    understand the behavior of the IoT platform and what are the impacts of a constrained
    network. Fig. 3. Cloud/Only FIWARE-SWAMP Evaluation Scenarios – with and without
    WAN Show All Fig. 4. Fog/Cloud FIWARE-SWAMP Evaluation Scenarios – with and without
    WAN Show All The experiments were performed in a private cloud environment implemented
    with OpenStack in a lab testbed. As the experiments were in our own private cloud,
    we could assure that they did not suffer from outside interference from other
    virtual machines running in the same physical servers. Both fog and cloud were
    implemented using virtual machines (VM) in OpenStack, though with very different
    configurations. We used the standard Amazon AWS VM configurations: cloud VM equivalent
    to a t2.medium instance (2vCPU - 4GB of RAM) and the fog VMs (both fog field node
    and fog hub) equivalent to a t2.small instance (1vCPU – 2 GB RAM). Our cloud was
    composed by 6 machines with the following configuration: Intel(R) Xeon(R) CPU
    E3-1240 V2 @ 3.40GHz - 8 cores and GB of RAM. Two different physical machines
    were used. B. Metrics There are two different metric used in our experiments:
    Average elapsed time: the average time elapsed since a sensor data point is generated
    in the probe until it reaches the consumer application. Basically, we are interested
    in the time elapsed since the data is collected until it is ready to be used by
    another application – such as a dashboard or an analytics module; System metrics:
    CPU and memory usage per Docker container, which allows us to observed each application,
    obtained by docker stats command every 5 seconds. C. Experiments Experiments consisted
    of SenSE simulating probes and sending messages to the IoT platform, running in
    the cloud-only configuration or in the fog/cloud configuration. We performed experiments
    with a large number of probes simultaneously sending messages to the platform,
    in order to verify and understand it scalability. Table I shows the factors and
    levels used in the performance analysis. Our experiments varied all factors with
    all levels, consisting of 16 different possibilities. Each experiment took 2 minutes
    and was replicated 30 times, totalizing 16 hours of running experiments. The asymptotic
    confidence intervals were calculated with a confidence level of 99%. Table I Factors
    and Levels To configure the emulated WAN, we tried to replicate a connection from
    a farm to a cloud. Therefore, we made a simple experiment in order to obtain the
    parameters used in the network emulator by pinging a public cloud using a 4G connection,
    and next we estimated the parameters as a 10 Mbps connection with 45ms of delay
    time and 5ms of jitter. SECTION V. Results The results for the elapsed time in
    all configurations are depicted in Fig.5, wherein one can observe the effect of
    increasing the workload in the fog/cloud and cloud-only scenarios. The platform
    remained stable during almost all experiments, except for the ones performed with
    a workload of 15,000 probes - that we consider being a very high workload. The
    high confidence interval in those experiments reveals this instability. Regarding
    the comparison between the experiments with the presence of the fog and the ones
    with only the cloud, it is essential to analyze networking issues. First we analyze
    those configurations without the network effects (no WANEm emulator), and next
    the impact of the WAN in the experiments. It is important to reinforce that experiments
    without considering the impact of the network are only for a baseline comparison
    and do not reflect real scenarios. In the experiments using a local network, the
    two approaches had equivalent results, since neither the fog nor the cloud were
    overloaded. The difference between the two approaches –fog and cloud - is that
    in the fog case some software modules (Docker containers) were moved to another
    machine (representing the fog), there was no improvement in the overall performance
    of the system when the cloud was not overloaded. Therefore, our experiments revealed
    that performing load balancing between two different machines does not improve
    the performance of the system. In the case where the cloud is overloaded (15,000
    probes), distributing the processing to another machine (the fog) should have
    improved the overall performance of the system. However, the results show that
    there is an overlap between the confidence interval of the experiments with fog
    and cloud with 15000 probes, with the fog experiments having a slightly better
    performance. This occurs due to the limited computational resources of the machine
    that represents the edge device, so that when the workload increases the fog node
    becomes the bottleneck. Experiments with the network emulator (WANem) had results
    that did not confirm our intuition. In the scenarios with a low workload (1,000
    and 5,000 probes), the cloud approach has a significant better performance than
    the fog. This occurs because in the cloud experiments the network traffic was
    composed of small MQTT packets, which did not impose a major constrain to the
    network. However, in the fog experiments the MQTT traffic is only send to the
    fog, which sends a very verbose NGSI/HTTP traffic via the network to the cloud.
    This traffic suffers much more with the network constrains (latency and limited
    bandwidth). Anyway, there is a clear trade-off between the cloud and fog approaches
    when processing becomes the bottleneck, instead of the network. The almost perfect
    balance occurs with experiments with 10,000 probes, in which both approaches achieved
    the same performance. For higher workloads, the fog has a slightly better performance
    than the cloud. The system metrics – RAM and CPU usage - for the cloud-only experiments
    are depicted in Fig. 6 and Fig. 7, for the fog/cloud experiments are showed in
    Fig. 8 and Fig. 9. Since the workload in the system is very similar with and without
    the network, we opted to portrait only the results performed considering the network,
    since they illustrate the whole set of experiments. The experiments using the
    fog approach, there were two MongoDB instances - in the fog to help the IoT Agent
    and in the cloud connected to Orion - are identified as Mongo-fog and Mongo-cloud
    respectively. Analyzing Fig. 6 and Fig. 8, it becomes clear that the container
    that demands more processing and it is the potential bottleneck of the system
    is MongoDB. Also, when comparing the cloud-only and fog/cloud results for the
    CPU usage, it is possible to infer that Orion imposes a higher workload in, since
    when the IoT Agent is on the fog node, MongoDB in the cloud has only an approximately
    20% decrease of CPU usage. Unlike the CPU usage, the memory usage has a stable
    behavior, even with the increase of the workload, as shown by Fig.7 for the cloud
    experiments, and in Fig. 9 for the fog experiments. However, there is also a decrease
    of approximately 20% of memory usage when the IoT-Agent is moved to the fog, with
    its own instance of MongoDB. Fig. 5. Response time for the cloud and fog configurations
    Show All Fig. 6. CPU usage in the cloud-only experiments Show All Fig. 7. Memory
    usage in the cloud-only experiments Show All Fig. 8. CPU usage in the fog/cloud
    experiments Show All Fig. 9. Memory usage in the fog/cloud experiments Show All
    SECTION VI. Discussion The experiments were successful in replicating a large-scale
    smart farm environment considering the number of sensors. Also, they showed that
    fog computing does not always improve the overall system performance. However,
    there are complex issues to evaluated in opting for a cloud or a fog approach
    beyond simply adding a machine in the edge of the network. There is a non-trivial
    trade-off between the given application, the available infrastructure and the
    system workload. In the SWAMP scenarios, we expect a smaller number of sensors,
    due to costs and farm sizes, and therefore the experiments that better represent
    real case scenarios are the ones with 1,000 and 5,000 probes. In those cases,
    the addition of a fog processing node proved to be a downgrade regarding performance.
    Nevertheless, the fog has others benefits that compensate the lack of performance.
    In farms in the inward countryside of Brazil, when there is Internet connectivity,
    it is frequently unstable and limited, suffering from frequent disconnections.
    In this case, the fog node is responsible to store sensor data and keep a subset
    of services online when there is no connection to the Internet. An important and
    unexpected factor in the experiments was the impact of the network. Initially,
    we believed that the network would equally impact both configurations fog and
    cloud). However, the impact was much higher in the fog configuration. This happens
    because the traffic of JSON/HTTP packets suffer more from network constrains than
    the lightweight UL 2.0 MQTT traffic. Therefore, when deploying a solution in a
    real environment, there is the need to analyze if the gain in processing part
    of the data in another device (the fog) will overcome the limitations imposed
    by the network. Another solution is to use a lightweight protocol when sending
    the data to the cloud form the fog. This set of experiments created higher awareness
    about the scalability tradeoffs of the FIWARE IoT platform. A major concern is
    regarding the default database used by Orion and the IoT Agent (i.e. MongoDB)
    that was the major bottleneck of the experiments. It is a known fact that MongoDB
    does scale as well as other NoSQL databases, such as Cassandra [10]. In the FIWARE
    documentation, there is no guide or configuration regarding using a different
    database for both software and it seems that they were hardcoded for working with
    MongoDB. FIWARE could potentially increase its scalability if it allows the of
    more efficient databases other than MongoDB. Another solution is to place MongoDB
    in a dedicated machine. Although FIWARE has a scalability ceiling due to MongoDB,
    it is suitable for most of the IoT scenarios in smart farms, being capable to
    handle 10,000 probes without major performance issues. It is proven to be a reliable
    tool with several advantages. It provides a standard communication format between
    all services in a given system through the NGSI information model. FIWARE also
    provides a transparent way to applications – such as dashboards and analytics
    – to consume sensor data. The IoT Agent can handle data from different sensors
    and translate them to a standard NGSI and automatically send this data to Orion,
    whose API is very flexible and able to add new sensors on-the-fly. Orion also
    proved to be a reliable and useful tool to manage context information, as it stores
    the last data point of each attribute and provides a simple API to consult it.
    Also, by using the subscribe operation in Orion, applications do not need to perform
    polling in the interesting devices. Rather, when data is changed, Orion notifies
    the subscribed application. SECTION VII. Conclusion We analyzed the performance
    of FIWARE under different platform configurations comparing fog/cloud and cloud-only
    scenarios for precision irrigation using one of the SWAMP pilots as the evaluation
    scenario. Our results reveal non-intuitive outcomes, such as, that fog computing
    does not always improve the overall system performance. In some cases, the addition
    of a fog processing nodes even proved to worsen the performance. Also, the network
    between the farm and the cloud datacenter causes some unexpected differences between
    different scenarios. The results presented in this paper reveal the tip of the
    iceberg. In order to fully understand the tradeoffs involved in using IoT platforms
    and particularly FIWARE, we need to broaden our scope and perform experiments
    in different configurations, pilots and in scenarios beyond smart farming. Authors
    Figures References Citations Keywords Metrics More Like This IoT based Irrigation
    and Water Logging monitoring system using Arduino and Cloud Computing 2019 International
    Conference on Vision Towards Emerging Trends in Communication and Networking (ViTECoN)
    Published: 2019 A Smart Manufacturing Service System Based on Edge Computing,
    Fog Computing, and Cloud Computing IEEE Access Published: 2019 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Scalability of an Internet of Things Platform for Smart Water Management
    for Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/ecsa-6-06540
  analysis: '>'
  authors:
  - Paula Fraga‐Lamas
  - Mikel Celaya-Echarri
  - Leyre Azpilicueta
  - Peio López-Iturri
  - Francisco Falcone
  - Tiago M. Fernández‐Caramés
  citation_count: 21
  full_citation: '>'
  full_text: ">\nproceedings\nProceedings\nDesign and Empirical Validation of a LoRaWAN\
    \ IoT\nSmart Irrigation System †\nPaula Fraga-Lamas 1,2,*\n, Mikel Celaya-Echarri\
    \ 3\n, Leyre Azpilicueta 3\n, Peio Lopez-Iturri 4,5\n,\nFrancisco Falcone 4,5\n\
    and Tiago M. Fernández-Caramés 1,2,*\n1\nDepartment of Computer Engineering, Faculty\
    \ of Computer Science, Universidade da Coruña,\n15071 A Coruña, Spain\n2\nCentro\
    \ de investigación CITIC, Universidade da Coruña, 15071 A Coruña, Spain\n3\nSchool\
    \ of Engineering and Sciences, Tecnologico de Monterrey, 64849 Monterrey, NL,\
    \ Mexico;\nmikelcelaya@gmail.com (M.C.-E.); leyre.azpilicueta@tec.mx (L.A.)\n\
    4\nDepartment of Electric, Electronic and Communication Engineering, Public University\
    \ of Navarre,\n31006 Pamplona, Spain; peio.lopez@unavarra.es (P.L.-I.); francisco.falcone@unavarra.es\
    \ (F.F.)\n5\nInstitute for Smart Cities, Public University of Navarre, 31006 Pamplona,\
    \ Spain\n*\nCorrespondence: paula.fraga@udc.es (P.F.-L.); tiago.fernandez@udc.es\
    \ (T.M.F.-C.);\nTel.: +34-981167000 (ext. 6051) (P.F.-L.)\n†\nPresented at the\
    \ 6th International Electronic Conference on Sensors and Applications, 15–30 November\
    \ 2019;\nAvailable online: https://ecsa-6.sciforum.net/.\nPublished: 14 November\
    \ 2019\nAbstract: In some parts of the world, climate change has led to periods\
    \ of drought that require managing\nefﬁciently the scarce water and energy resources.\
    \ This paper proposes an IoT smart irrigation system\nspeciﬁcally designed for\
    \ urban areas where remote IoT devices have no direct access to the Internet or\
    \ to\nthe electrical grid, and where wireless communications are difﬁcult due\
    \ to the existence of long distances\nand multiple obstacles. To tackle such issues,\
    \ this paper proposes a LoRaWAN-based architecture that\nprovides long distance\
    \ and communications with reduced power consumption. Speciﬁcally, the proposed\n\
    system consists of IoT nodes that collect sensor data and send them to local fog\
    \ computing nodes or\nto a remote cloud, which determine an irrigation schedule\
    \ that considers factors such as the weather\nforecast or the moist detected by\
    \ nearby nodes. It is essential to deploy the IoT nodes in locations within\n\
    the provided coverage range and that guarantee good speed rates and reduced energy\
    \ consumption.\nDue to this reason, this paper describes the use of an in-house\
    \ 3D-ray launching radio-planning tool to\ndetermine the best locations for IoT\
    \ nodes on a real medium-scale scenario (a university campus) that\nwas modeled\
    \ with precision, including obstacles such as buildings, vegetation, or vehicles.\
    \ The obtained\nsimulation results were compared with empirical measurements to\
    \ assess the operating conditions and\nthe radio planning tool accuracy. Thus,\
    \ it is possible to optimize the wireless network topology and the\noverall performance\
    \ of the network in terms of coverage, cost, and energy consumption.\nKeywords:\
    \ IoT; LP-WAN; LoRaWAN; 3D-ray launching; fog computing; smart cities; Wireless\
    \ Sensor\nNetworks (WSN); smart irrigation; sustainability; urban areas\n1. Introduction\n\
    The United Nations Convention to Combat Desertiﬁcation (UNCCD) [1] claims that\
    \ 1.8 billion people\nwill experience absolute water scarcity and two-thirds of\
    \ the world will be living under water-stressed\nconditions by 2025. Moreover,\
    \ the demand for water is expected to increase by 50% with a projection of\nProceedings\
    \ 2019, 42, 62; doi:10.3390/ecsa-6-06540\nwww.mdpi.com/journal/proceedings\nProceedings\
    \ 2019, 42, 62\n2 of 6\n68% of the world’s population living in urban areas by\
    \ 2050. As a result, drought is considered one of\nthe most widespread natural\
    \ disasters causing short- and long-term impacts on economy, sustainability\n\
    and ecology. To mitigate these effects, three main pillars should be considered\
    \ [1]: drought early warning\nand monitoring systems, vulnerability and risk assessment,\
    \ and drought risk mitigation measures. This\narticle focuses on the last pillar\
    \ by proposing the development of sustainable irrigation schedules for\nurban\
    \ environments.\nIoT is gaining momentum as a key enabler technology in smart\
    \ agriculture. For instance, in [2],\nthe authors examined the main current trends\
    \ in research and revealed that there are still numerous open\nissues. With the\
    \ IoT adoption, the efﬁciency of irrigation methods is expected to increase mainly\
    \ due to\nthe incorporation of Decision Support Systems (DSSs) [3–5]. For instance,\
    \ in [3], the authors presented a\nDSS that was evaluated on three sensor nodes,\
    \ which communicated with a gateway either directly or\nthrough multi-hop communications.\
    \ The used transceivers are based on the Xbee protocol and can reach a\n500 m\
    \ range, which is a relatively low coverage area in certain outdoor scenarios.\
    \ In addition, the paper\nprovides no further details on the communications architecture.\n\
    The use of wireless communications in the ﬁeld of precision agriculture, especially\
    \ in urban\nenvironments, presents several technical challenges (e.g., the need\
    \ for long-range communications, long\nbattery life, high network capacity, and\
    \ cost-effectiveness) that can be in part overcome with Low-Power\nWide Area Networks\
    \ (LPWAN) technologies such as Sigfox, Ingenu, NB-IoT, DASH7, Weightless,\nor\
    \ LoRaWAN (Long-Range Wide Area Network). Speciﬁcally, in the last years, the\
    \ LoRaWAN standard\nhas received attention both from industry and academia in\
    \ the so-called smart scenarios [6].\nLoRaWAN has already been used in smart irrigation\
    \ systems. For example, Usmonov et al. [7]\npresented a LoRaWAN-based cost-effective\
    \ wireless control system for drip irrigation. The proposed\ncentralized solution\
    \ focuses on the design of a simple protocol that eliminates the need for gateways\n\
    and network servers by using a master station to relay packets between the control\
    \ application and the\ndeployed end-device nodes. Another interesting work was\
    \ proposed by Gloria et al. [5], who presented a\nwireless sensor network controlled\
    \ by a single gateway (broker) that is in constant communication with\nan online\
    \ server that uses LoRa peer-to-peer connections. In such a work, Message Queuing\
    \ Telemetry\nTransport (MQTT) via a WiFi connection is used for exchanging messages\
    \ between the server and the nodes.\nIt is also worth pointing the work in [8],\
    \ which details the design and implementation of a LoRaWAN\nsmart irrigation system\
    \ in a typical urban environment of Beijing. The communications distance between\n\
    the irrigation node and the gateway is up to 8 km, covering an area of up to 2\
    \ km2. In addition, the article\nprovides energy-consumption results that consider\
    \ different operating modes of the end nodes.\nIn contrast to the previously mentioned\
    \ articles, which are mainly focused on DSS capabilities or on\nthe system design,\
    \ this paper presents an IoT LPWAN smart irrigation system with a fog computing-based\n\
    architecture whose node and gateway locations can be optimized in urban areas\
    \ thanks to the help of an\nin-house developed 3D-ray launching radio planning\
    \ simulator.\n2. Design of the System\n2.1. Communications Architecture\nFigure\
    \ 1 shows the communications architecture of the proposed system, which is composed\
    \ by three\nmain layers:\n•\nIoT Layer. It consists of smart irrigation IoT nodes\
    \ that exchange information with local gateways of\nthe fog computing layer. IoT\
    \ nodes essentially send information obtained by their sensors and receive\nremote\
    \ irrigation commands from either fog computing gateways or the cloud.\nProceedings\
    \ 2019, 42, 62\n3 of 6\n•\nFog Computing Layer. Its fog computing gateways provide\
    \ the deployed IoT nodes with fog and\nsensor fusion services, which are location-aware,\
    \ reduce latency response, and decrease the cloud\ncommunications load [9].\n\
    •\nRemote Service Layer. It collects the data of the system through the cloud,\
    \ which stores them in\na database and processes them to be shown in a user-friendly\
    \ way to remote users. In addition,\nthe remote services of this layer can make\
    \ use of third-party services such as weather forecasts when\ndeciding irrigation\
    \ schedules.\nRemote Users\nIoT Node Layer\nMain Gateway\n…\nLocal Gateway\nFog\
    \ Services\nSensor Fusion \nServices\nFog Computing Layer\nNode 2\nNode 1\nNode\
    \ N\nLocal Gateway\nFog Services\nSensor Fusion \nServices\nCloud\nRemote Services\n\
    Management\nSubsystem\nDatabase\nInternet or \nIntranet\nRemote Service Layer\n\
    …\nNode 2\nNode 1\nNode N\nThird-Party Services\nWeather Forecast\nFigure 1. Communications\
    \ architecture of the proposed system.\nProceedings 2019, 42, 62\n4 of 6\n3. Campus\
    \ Radio Channel Analysis\nThe characterization of the radio channel within different\
    \ scenarios is the previous task to the\noptimized deployment of wireless nodes.\
    \ For that purpose, empirical models are usually employed, which\ngive rapid results\
    \ but with high errors, since they are very site-speciﬁc. In this paper, measurements\
    \ as well\nas simulations by means of an in-house developed 3D-Ray Launching (3D-RL)\
    \ deterministic algorithm\nwere performed in the 868 MHz band to characterize\
    \ the radio channel within a university campus with the\naim of optimizing the\
    \ wireless network deployment. The implemented algorithm is based on geometrical\n\
    optics (GO) and geometrical theory of diffraction (GTD). The code was programmed\
    \ in Matlab and a deep\ndescription on the simulation process can be found in\
    \ [10].\nIt is worth noting that the proposed smart irrigation system could present\
    \ some limitations regarding\nits LoRaWAN node deployment. On the one hand, the\
    \ position of the near-ground nodes depends on\nthe access to the water supply\
    \ and on the surface to irrigate. On the other hand, the deployment of the\nLoRaWAN\
    \ gateway can be optimized, since it has to be deployed inside a building, but\
    \ the location can be\ndetermined based on radio planning analysis. For such a\
    \ purpose, the scenario was modeled in 3D for its\nsimulation with the 3D-RL tool\
    \ (see Figure 2, left). To obtain accurate RF power distribution estimations,\n\
    the simulation scenario was created in as much detail as possible, thus including\
    \ the most relevant\nelements that may inﬂuence electromagnetic propagation (e.g.,\
    \ buildings, roads, trees, and vehicles) and\ntheir speciﬁc material properties\
    \ (permittivity and conductivity). Then, the input parameters of the 3D-RL\ntool\
    \ were carefully selected, including the operation frequency, the transmitter\
    \ and receiver radiation\npattern, the number of permitted reﬂections and the\
    \ ray angular/spatial resolution.\nIt is important to note that scenarios such\
    \ as the one modeled for this paper are especially challenging\nin terms of radio\
    \ propagation analysis by deterministic methods due to their large dimensions\
    \ and the\nnumerous obstacles that interact with the propagating wave. To obtain\
    \ accurate simulation results in a\nlimited amount of time, it is necessary to\
    \ set correctly the number of reﬂections and the angular/spatial\nresolution parameters\
    \ through a proper analysis [11]. The resulting parameters for the scenario under\n\
    analysis are indicated in Table 1.\nTable 1. 3D-RL tool parameters.\nParameter\n\
    Value\nOperation frequency\n868.3 MHz\nOutput power level\n14 dBm\nPermitted reﬂections\n\
    6\nCuboid resolution\n4 m × 4 m × 4 m\nLaunched ray resolution\n1o\nAntenna type\
    \ and gain\nMonopole, 0 dBi\nThe initially deployed near-ground LoRaWAN nodes\
    \ are depicted in Figure 2 (left), represented as\nyellow circles. The simulations\
    \ performed for each node provide the information required to optimize the\nLoRaWAN\
    \ gateway location. Since the 3D-RL tool provides the RF power distribution of\
    \ the whole\nscenario, it is possible to optimize the deployment considering all\
    \ the elements of such a scenario.\nFor example, Figure 2 (right) shows bi-dimensional\
    \ planes of the RF power distribution estimations\nfor node 7 at the ground level\
    \ (simulating an irrigation node) and in the building on the fourth ﬂoor level\n\
    (simulating a fog computing node or a gateway). Since the typical sensitivity\
    \ of a LoRaWAN device goes\nfrom −130 to −148 dBm, a ﬁrst approximation regarding\
    \ the gateway optimum location can be easily\nextracted from the simulation results.\n\
    Proceedings 2019, 42, 62\n5 of 6\nFigure 2. Campus scenario modeled for the 3D-RL\
    \ simulations (left). Bi-dimensional planes of RF power\ndistribution estimations\
    \ for node 7 (right): (a) at ground level; and (b) at fourth ﬂoor level.\nTo validate\
    \ the simulation results, they were compared with the empirical results obtained\
    \ during a\nprevious measurement campaign [6]. As can be observed in Figure 3,\
    \ the simulation and empirical results\nare really close, obtaining a mean error\
    \ of 0.53 dB and a standard deviation of 3.39 dB.\nFigure 3. Comparison between\
    \ measurements and 3D-RL simulations within the scenario under analysis.\n4. Conclusions\n\
    This paper presents a LoRaWAN and fog computing-based architecture for deploying\
    \ smart irrigation\nsystems. The proposed system consists of IoT nodes that exchange\
    \ data with local fog computing nodes\nand with a remote cloud in order to determine\
    \ when to irrigate. To decide where to place the LoRaWAN\nIoT nodes and gateways,\
    \ an in-house 3D-ray launching radio-planning tool was used in conjunction with\n\
    an accurate 3D model of the simulated scenario (a university campus). The obtained\
    \ simulation results\nwere compared with empirical measurements, showing the good\
    \ accuracy of the used radio planning tool.\nProceedings 2019, 42, 62\n6 of 6\n\
    As a consequence, the accuracy of the simulation tool was validated, whose results\
    \ can provide useful\nguidelines for the network planning phases prior to the\
    \ deployment of LoRaWAN nodes and gateways in\nsimilar urban deployments.\nAuthor\
    \ Contributions: P.F.-L., T.M.F.-C., and P.L.-I. conceived of and designed the\
    \ experiments; T.M.F.-C., and P.F.-L.\nperformed the experiments; M.C.-E., P.L.-I.,\
    \ and L.A. created the scenario and performed the simulations; P.L.-I. and\nF.F.\
    \ processed the simulation results; T.M.F.-C., P.L.-I., and P.F.-L. analyzed the\
    \ data; and P.F.-L., M.C.-E., L.A., P.L.-I.,\nF.F., and T.M.F.-C., wrote the paper.\
    \ All authors have read and agreed to the published version of the manuscript.\n\
    Funding: This work was funded by Xunta de Galicia (ED431C 2016-045, ED431G/01)\
    \ and Ministerio de Ciencia,\nInnovación y Universidades, Gobierno de España (MCIU/AEI/FEDER,UE),\
    \ Project RTI2018-095499-B-C31.\nConﬂicts of Interest: The authors declare no\
    \ conﬂict of interest.\nReferences\n1.\nUN Water 2014. Available online: https://www.unccd.int/issues/land-and-drought\
    \ (accessed on 14 October 2019).\n2.\nAyaz, M.; Ammad-Uddin, M.; Sharif, Z.; Mansour,\
    \ A.; Aggoune, E.H.M. Internet-of-Things (IoT)-Based Smart\nAgriculture: Toward\
    \ Making the Fields Talk. IEEE Access 2019, 7, 129551–129583.\n3.\nKhan, R.; Ali,\
    \ I.; Zakarya, M.; Ahmad, M.; Imran, M.; Shoaib, M. Technology-Assisted Decision\
    \ Support System\nfor Efﬁcient Water Utilization: A Real-Time Testbed for Irrigation\
    \ Using Wireless Sensor Networks. IEEE Access\n2018, 6, 25686-25697, .\n4.\nPérez-Expósito,\
    \ J.; Fernández-Caramés, T.M.; Fraga-Lamas, P.; Castedo, L. VineSens: An Eco-Smart\
    \ Decision-Support\nViticulture System. Sensors 2017, 17, 465.\n5.\nGloria, A.;\
    \ Dionisio, C.; Simões, G.; Sebastião, P.; Souto, N. WSN Application for Sustainable\
    \ Water Management\nin Irrigation Systems. In Proceedings of the 2019 IEEE 5th\
    \ World Forum on Internet of Things (WF-IoT),\nLimerick, Ireland, 15–18 April\
    \ 2019; pp. 833–836.\n6.\nFraga-Lamas, P.; Celaya-Echarri, M.; Lopez-Iturri, P.;\
    \ Castedo, L.; Azpilicueta, L.; Aguirre, E.; Suárez-Albela, M.;\nFalcone, F.;\
    \ Fernández-Caramés, T.M. Design and Experimental Validation of a LoRaWAN Fog\
    \ Computing Based\nArchitecture for IoT Enabled Smart Campus Applications. Sensors\
    \ 2019, 19, 3287.\n7.\nUsmonov, M.; Gregoretti, F. Design and implementation of\
    \ a LoRa based wireless control for drip irrigation\nsystems. In Proceedings of\
    \ the 2017 2nd International Conference on Robotics and Automation Engineering\n\
    (ICRAE), Shanghai, China, 29–31 December 2017; pp. 248–253.\n8.\nZhao, W.; Lin,\
    \ S.; Han, J.; Xu, R.; Hou, L. Design and Implementation of Smart Irrigation System\
    \ Based on LoRa.\nIn Proceedings of the 2017 IEEE Globecom Workshops (GC Wkshps),\
    \ Singapore, 4–8 December 2017; pp. 1–6.\n9.\nFernández-Caramés, T.M.; Fraga-Lamas,\
    \ P.; Suárez-Albela, M.; Vilar-Montesinos, M. A Fog Computing and\nCloudlet Based\
    \ Augmented Reality System for the Industry 4.0 Shipyard. Sensors 2018, 18, 1798.\n\
    10.\nAzpilicueta, L.; Rawat, M.; Rawat, K.; Ghannouchi, F.; Falcone, F. Convergence\
    \ Analysis in Deterministic 3D Ray\nLaunching Radio Channel Estimation in Complex\
    \ Environments. ACES J. 2014, 29, 256–271.\n11.\nAzpilicueta, L.; Lopez-Iturri,\
    \ P.; Aguirre, E.; Vargas-Rosales, C.; León, A.; Falcone, F. Inﬂuence of Meshing\n\
    Adaption in Convergence Performance of Deterministic Ray Launching Estimation\
    \ in Indoor Scenarios.\nJ. Electromagn. Waves Appl. 2017, 31, 544–559.\nc⃝ 2019\
    \ by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access\n\
    article distributed under the terms and conditions of the Creative Commons Attribution\
    \ (CC\nBY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://www.mdpi.com/2504-3900/42/1/62/pdf?version=1587443453
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: Design and Empirical Validation of a LoRaWAN IoT Smart Irrigation System
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2019.2924045
  analysis: '>'
  authors:
  - Vikas Hassija
  - Vinay Chamola
  - Vikas Saxena
  - Divyansh Jain
  - Pranav Goyal
  - Biplab Sikdar
  citation_count: 825
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals & Magazines
    >IEEE Access >Volume: 7 A Survey on IoT Security: Application Areas, Security
    Threats, and Solution Architectures Publisher: IEEE Cite This PDF Vikas Hassija;
    Vinay Chamola; Vikas Saxena; Divyansh Jain; Pranav Goyal; Biplab Sikdar All Authors
    826 Cites in Papers 63869 Full Text Views Open Access Comment(s) Under a Creative
    Commons License Abstract Document Sections I. Introduction II. Security Critical
    Application Areas of IoT III. Sources of Security Threats in IoT Applications
    IV. Improvements and Enhancements Required for Upcoming IoT Applications V. IoT
    Security Using Blockchain Show Full Outline Authors Figures References Citations
    Keywords Metrics Abstract: The Internet of Things (IoT) is the next era of communication.
    Using the IoT, physical objects can be empowered to create, receive, and exchange
    data in a seamless manner. Various IoT applications focus on automating different
    tasks and are trying to empower the inanimate physical objects to act without
    any human intervention. The existing and upcoming IoT applications are highly
    promising to increase the level of comfort, efficiency, and automation for the
    users. To be able to implement such a world in an ever-growing fashion requires
    high security, privacy, authentication, and recovery from attacks. In this regard,
    it is imperative to make the required changes in the architecture of the IoT applications
    for achieving end-to-end secure IoT environments. In this paper, a detailed review
    of the security-related challenges and sources of threat in the IoT applications
    is presented. After discussing the security issues, various emerging and existing
    technologies focused on achieving a high degree of trust in the IoT applications
    are discussed. Four different technologies, blockchain, fog computing, edge computing,
    and machine learning, to increase the level of security in IoT are discussed.
    This paper presents a detailed survey of IoT security. First of all the security
    critical IoT applications are discussed. Next, the security threats at different
    layers i...View more Published in: IEEE Access ( Volume: 7) Page(s): 82721 - 82743
    Date of Publication: 20 June 2019 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2019.2924045
    Publisher: IEEE Funding Agency: Authors Figures References Citations Keywords
    Metrics More Like This A Survey on Security and Privacy Issues in Edge-Computing-Assisted
    Internet of Things IEEE Internet of Things Journal Published: 2021 The Performance
    Evaluation of Blockchain-Based Security and Privacy Systems for the Internet of
    Things: A Tutorial IEEE Internet of Things Journal Published: 2021 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08742551.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Survey on IoT Security: Application Areas, Security Threats, and Solution
    Architectures'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2017/9324035
  analysis: '>'
  authors:
  - Pallavi Sethi
  - Smruti R. Sarangi
  citation_count: 907
  full_citation: '>'
  full_text: ">\nReview Article\nInternet of Things: Architectures, Protocols, and\
    \ Applications\nPallavi Sethi and Smruti R. Sarangi\nDepartment of Computer Science,\
    \ IIT Delhi, New Delhi, India\nCorrespondence should be addressed to Smruti R.\
    \ Sarangi; srsarangi@cse.iitd.ac.in\nReceived 12 August 2016; Accepted 18 December\
    \ 2016; Published 26 January 2017\nAcademic Editor: Rajesh Khanna\nCopyright ©\
    \ 2017 Pallavi Sethi and Smruti R. Sarangi. This is an open access article distributed\
    \ under the Creative Commons\nAttribution License, which permits unrestricted\
    \ use, distribution, and reproduction in any medium, provided the original work\
    \ is\nproperly cited.\nThe Internet of Things (IoT) is defined as a paradigm in\
    \ which objects equipped with sensors, actuators, and processors\ncommunicate\
    \ with each other to serve a meaningful purpose. In this paper, we survey state-of-the-art\
    \ methods, protocols, and\napplications in this new emerging area. This survey\
    \ paper proposes a novel taxonomy for IoT technologies, highlights some of\nthe\
    \ most important technologies, and profiles some applications that have the potential\
    \ to make a striking difference in human\nlife, especially for the differently\
    \ abled and the elderly. As compared to similar survey papers in the area, this\
    \ paper is far more\ncomprehensive in its coverage and exhaustively covers most\
    \ major technologies spanning from sensors to applications.\n1. Introduction\n\
    Today the Internet has become ubiquitous, has touched\nalmost every corner of\
    \ the globe, and is affecting human life in\nunimaginable ways. However, the journey\
    \ is far from over. We\nare now entering an era of even more pervasive connectivity\n\
    where a very wide variety of appliances will be connected to\nthe web. We are\
    \ entering an era of the “Internet of Things”\n(abbreviated as IoT). This term\
    \ has been defined by different\nauthors in many different ways. Let us look at\
    \ two of the most\npopular definitions. Vermesan et al. [1] define the Internet\n\
    of Things as simply an interaction between the physical and\ndigital worlds. The\
    \ digital world interacts with the physical\nworld using a plethora of sensors\
    \ and actuators. Another\ndefinition by Pe˜na-L´opez et al. [2] defines the Internet\
    \ of\nThings as a paradigm in which computing and networking\ncapabilities are\
    \ embedded in any kind of conceivable object.\nWe use these capabilities to query\
    \ the state of the object and to\nchange its state if possible. In common parlance,\
    \ the Internet\nof Things refers to a new kind of world where almost all\nthe\
    \ devices and appliances that we use are connected to a\nnetwork. We can use them\
    \ collaboratively to achieve complex\ntasks that require a high degree of intelligence.\n\
    For this intelligence and interconnection, IoT devices are\nequipped with embedded\
    \ sensors, actuators, processors, and\ntransceivers. IoT is not a single technology;\
    \ rather it is an\nagglomeration of various technologies that work together in\n\
    tandem.\nSensors and actuators are devices, which help in interact-\ning with\
    \ the physical environment. The data collected by the\nsensors has to be stored\
    \ and processed intelligently in order to\nderive useful inferences from it. Note\
    \ that we broadly define\nthe term sensor; a mobile phone or even a microwave\
    \ oven\ncan count as a sensor as long as it provides inputs about its\ncurrent\
    \ state (internal state + environment). An actuator is a\ndevice that is used\
    \ to effect a change in the environment such\nas the temperature controller of\
    \ an air conditioner.\nThe storage and processing of data can be done on the\n\
    edge of the network itself or in a remote server. If any prepro-\ncessing of data\
    \ is possible, then it is typically done at either\nthe sensor or some other proximate\
    \ device. The processed\ndata is then typically sent to a remote server. The storage\n\
    and processing capabilities of an IoT object are also restricted\nby the resources\
    \ available, which are often very constrained\ndue to limitations of size, energy,\
    \ power, and computational\ncapability. As a result the main research challenge\
    \ is to\nensure that we get the right kind of data at the desired level\nof accuracy.\
    \ Along with the challenges of data collection,\nand handling, there are challenges\
    \ in communication as\nwell. The communication between IoT devices is mainly\n\
    wireless because they are generally installed at geographically\ndispersed locations.\
    \ The wireless channels often have high\nHindawi\nJournal of Electrical and Computer\
    \ Engineering\nVolume 2017, Article ID 9324035, 25 pages\nhttps://doi.org/10.1155/2017/9324035\n\
    2\nJournal of Electrical and Computer Engineering\nApplication \nlayer\nNetwork\n\
    layer\nPerception\nlayer\nBusiness layer\nApplication layer\nProcessing layer\n\
    Transport layer\nPerception layer\nA\nB\nFigure 1: Architecture of IoT (A: three\
    \ layers) (B: five layers).\nrates of distortion and are unreliable. In this scenario\
    \ reliably\ncommunicating data without too many retransmissions is an\nimportant\
    \ problem and thus communication technologies\nare integral to the study of IoT\
    \ devices.\nNow, after processing the received data, some action\nneeds to be\
    \ taken on the basis of the derived inferences. The\nnature of actions can be\
    \ diverse. We can directly modify the\nphysical world through actuators. Or we\
    \ may do something\nvirtually. For example, we can send some information to other\n\
    smart things.\nThe process of effecting a change in the physical world\nis often\
    \ dependent on its state at that point of time. This\nis called context awareness.\
    \ Each action is taken keeping in\nconsideration the context because an application\
    \ can behave\ndifferently in different contexts. For example, a person may\nnot\
    \ like messages from his office to interrupt him when he is\non vacation.\nSensors,\
    \ actuators, compute servers, and the commu-\nnication network form the core infrastructure\
    \ of an IoT\nframework. However, there are many software aspects that\nneed to\
    \ be considered. First, we need a middleware that can\nbe used to connect and\
    \ manage all of these heterogeneous\ncomponents. We need a lot of standardization\
    \ to connect\nmany different devices. We shall discuss methods to exchange\ninformation\
    \ and prevailing standards in Section 7.\nThe Internet of Things finds various\
    \ applications in health\ncare, fitness, education, entertainment, social life,\
    \ energy\nconservation, environment monitoring, home automation,\nand transport\
    \ systems. We shall focus on these application\nareas in Section 9. We shall find\
    \ that, in all these application\nareas, IoT technologies have significantly been\
    \ able to reduce\nhuman effort and improve the quality of life.\n2. Architecture\
    \ of IoT\nThere is no single consensus on architecture for IoT, which\nis agreed\
    \ universally. Different architectures have been pro-\nposed by different researchers.\n\
    2.1. Three- and Five-Layer Architectures. The most basic\narchitecture is a three-layer\
    \ architecture [3–5] as shown in\nFigure 1. It was introduced in the early stages\
    \ of research in\nthis area. It has three layers, namely, the perception, network,\n\
    and application layers.\n(i) The perception layer is the physical layer, which\
    \ has\nsensors for sensing and gathering information about\nthe environment. It\
    \ senses some physical parameters\nor identifies other smart objects in the environment.\n\
    (ii) The network layer is responsible for connecting to\nother smart things, network\
    \ devices, and servers. Its\nfeatures are also used for transmitting and processing\n\
    sensor data.\n(iii) The application layer is responsible for delivering\napplication\
    \ specific services to the user. It defines\nvarious applications in which the\
    \ Internet of Things\ncan be deployed, for example, smart homes, smart\ncities,\
    \ and smart health.\nThe three-layer architecture defines the main idea of the\n\
    Internet of Things, but it is not sufficient for research on\nIoT because research\
    \ often focuses on finer aspects of the\nInternet of Things. That is why, we have\
    \ many more layered\narchitectures proposed in the literature. One is the five-\n\
    layer architecture, which additionally includes the processing\nand business layers\
    \ [3–6]. The five layers are perception,\ntransport, processing, application,\
    \ and business layers (see\nFigure 1). The role of the perception and application\
    \ layers\nis the same as the architecture with three layers. We outline\nthe function\
    \ of the remaining three layers.\n(i) The transport layer transfers the sensor\
    \ data from\nthe perception layer to the processing layer and vice\nversa through\
    \ networks such as wireless, 3G, LAN,\nBluetooth, RFID, and NFC.\n(ii) The processing\
    \ layer is also known as the middleware\nlayer. It stores, analyzes, and processes\
    \ huge amounts\nof data that comes from the transport layer. It can\nmanage and\
    \ provide a diverse set of services to the\nlower layers. It employs many technologies\
    \ such as\ndatabases, cloud computing, and big data processing\nmodules.\nJournal\
    \ of Electrical and Computer Engineering\n3\n(iii) The business layer manages\
    \ the whole IoT system,\nincluding applications, business and profit models,\n\
    and users’ privacy. The business layer is out of the\nscope of this paper. Hence,\
    \ we do not discuss it\nfurther.\nAnother architecture proposed by Ning and Wang\
    \ [7] is\ninspired by the layers of processing in the human brain. It\nis inspired\
    \ by the intelligence and ability of human beings\nto think, feel, remember, make\
    \ decisions, and react to the\nphysical environment. It is constituted of three\
    \ parts. First is\nthe human brain, which is analogous to the processing and\n\
    data management unit or the data center. Second is the spinal\ncord, which is\
    \ analogous to the distributed network of data\nprocessing nodes and smart gateways.\
    \ Third is the network\nof nerves, which corresponds to the networking components\n\
    and sensors.\n2.2. Cloud and Fog Based Architectures. Let us now discuss\ntwo\
    \ kinds of systems architectures: cloud and fog computing\n(see the reference\
    \ architectures in [8]). Note that this classifi-\ncation is different from the\
    \ classification in Section 2.1, which\nwas done on the basis of protocols.\n\
    In particular, we have been slightly vague about the nature\nof data generated\
    \ by IoT devices, and the nature of data\nprocessing. In some system architectures\
    \ the data processing\nis done in a large centralized fashion by cloud computers.\n\
    Such a cloud centric architecture keeps the cloud at the\ncenter, applications\
    \ above it, and the network of smart things\nbelow it [9]. Cloud computing is\
    \ given primacy because it\nprovides great flexibility and scalability. It offers\
    \ services such\nas the core infrastructure, platform, software, and storage.\n\
    Developers can provide their storage tools, software tools,\ndata mining, and\
    \ machine learning tools, and visualization\ntools through the cloud.\nLately,\
    \ there is a move towards another system archi-\ntecture, namely, fog computing\
    \ [10–12], where the sensors\nand network gateways do a part of the data processing\
    \ and\nanalytics. A fog architecture [13] presents a layered approach\nas shown\
    \ in Figure 2, which inserts monitoring, prepro-\ncessing, storage, and security\
    \ layers between the physical\nand transport layers. The monitoring layer monitors\
    \ power,\nresources, responses, and services. The preprocessing layer\nperforms\
    \ filtering, processing, and analytics of sensor data.\nThe temporary storage\
    \ layer provides storage functionalities\nsuch as data replication, distribution,\
    \ and storage. Finally, the\nsecurity layer performs encryption/decryption and\
    \ ensures\ndata integrity and privacy. Monitoring and preprocessing are\ndone\
    \ on the edge of the network before sending data to the\ncloud.\nOften the terms\
    \ “fog computing” and “edge computing”\nare used interchangeably. The latter term\
    \ predates the former\nand is construed to be more generic. Fog computing originally\n\
    termed by Cisco refers to smart gateways and smart sensors,\nwhereas edge computing\
    \ is slightly more penetrative in nature.\nThis paradigm envisions adding smart\
    \ data preprocessing\ncapabilities to physical devices such as motors, pumps,\
    \ or\nlights. The aim is to do as much of preprocessing of data\nas possible in\
    \ these devices, which are termed to be at the\nStorage layer \nPreprocessing\
    \ layer \nMonitoring layer \nPhysical layer\nSecurity layer\nTransport layer\n\
    Figure 2: Fog architecture of a smart IoT gateway.\nedge of the network. In terms\
    \ of the system architecture,\nthe architectural diagram is not appreciably different\
    \ from\nFigure 2. As a result, we do not describe edge computing\nseparately.\n\
    Finally, the distinction between protocol architectures\nand system architectures\
    \ is not very crisp. Often the protocols\nand the system are codesigned. We shall\
    \ use the generic 5-\nlayer IoT protocol stack (architectural diagram presented\
    \ in\nFigure 2) for both the fog and cloud architectures.\n2.3. Social IoT. Let\
    \ us now discuss a new paradigm: social IoT\n(SIoT). Here, we consider social\
    \ relationships between objects\nthe same way as humans form social relationships\
    \ (see [14]).\nHere are the three main facets of an SIoT system:\n(i) The SIoT\
    \ is navigable. We can start with one device\nand navigate through all the devices\
    \ that are con-\nnected to it. It is easy to discover new devices and\nservices\
    \ using such a social network of IoT devices.\n(ii) A need of trustworthiness\
    \ (strength of the relation-\nship) is present between devices (similar to friends\
    \ on\nFacebook).\n(iii) We can use models similar to studying human social\nnetworks\
    \ to also study the social networks of IoT\ndevices.\n2.3.1. Basic Components.\
    \ In a typical social IoT setting, we\ntreat the devices and services as bots\
    \ where they can set up\nrelationships between them and modify them over time.\
    \ This\nwill allow us to seamlessly let the devices cooperate among\neach other\
    \ and achieve a complex task.\nTo make such a model work, we need to have many\n\
    interoperating components. Let us look at some of the major\ncomponents in such\
    \ a system.\n(1) ID: we need a unique method of object identifica-\ntion. An ID\
    \ can be assigned to an object based on\ntraditional parameters such as the MAC\
    \ ID, IPv6\nID, a universal product code, or some other custom\nmethod.\n4\nJournal\
    \ of Electrical and Computer Engineering\n(2) Metainformation: along with an ID,\
    \ we need some\nmetainformation about the device that describes its\nform and\
    \ operation. This is required to establish\nappropriate relationships with the\
    \ device and also\nappropriately place it in the universe of IoT devices.\n(3)\
    \ Security controls: this is similar to “friend list” set-\ntings on Facebook.\
    \ An owner of a device might place\nrestrictions on the kinds of devices that\
    \ can connect\nto it. These are typically referred to as owner controls.\n(4)\
    \ Service discovery: such kind of a system is like\na service cloud, where we\
    \ need to have dedicated\ndirectories that store details of devices providing\n\
    certain kinds of services. It becomes very important\nto keep these directories\
    \ up to date such that devices\ncan learn about other devices.\n(5) Relationship\
    \ management: this module manages rela-\ntionships with other devices. It also\
    \ stores the types\nof devices that a given device should try to connect\nwith\
    \ based on the type of services provided. For\nexample, it makes sense for a light\
    \ controller to make\na relationship with a light sensor.\n(6) Service composition:\
    \ this module takes the social IoT\nmodel to a new level. The ultimate goal of\
    \ having such\na system is to provide better integrated services to\nusers. For\
    \ example, if a person has a power sensor\nwith her air conditioner and this device\
    \ establishes\na relationship with an analytics engine, then it is\npossible for\
    \ the ensemble to yield a lot of data about\nthe usage patterns of the air conditioner.\
    \ If the social\nmodel is more expansive, and there are many more\ndevices, then\
    \ it is possible to compare the data with\nthe usage patterns of other users and\
    \ come up with\neven more meaningful data. For example, users can\nbe told that\
    \ they are the largest energy consumers in\ntheir community or among their Facebook\
    \ friends.\n2.3.2. Representative Architecture. Most architectures pro-\nposed\
    \ for the SIoT have a server side architecture as well.\nThe server connects to\
    \ all the interconnected components,\naggregates (composes) the services, and\
    \ acts as a single point\nof service for users.\nThe server side architecture\
    \ typically has three layers. The\nfirst is the base layer that contains a database\
    \ that stores details\nof all the devices, their attributes, metainformation,\
    \ and their\nrelationships. The second layer (Component layer) contains\ncode\
    \ to interact with the devices, query their status, and use\na subset of them\
    \ to effect a service. The topmost layer is the\napplication layer, which provides\
    \ services to the users.\nOn the device (object) side, we broadly have two layers.\n\
    The first is the object layer, which allows a device to connect to\nother devices,\
    \ talk to them (via standardized protocols), and\nexchange information. The object\
    \ layer passes information to\nthe social layer. The social layer manages the\
    \ execution of\nusers’ applications, executes queries, and interacts with the\n\
    application layer on the server.\n3. Taxonomy\nLet us now propose taxonomy for\
    \ research in IoT tech-\nnologies (see Figure 3). Our taxonomy is based on the\n\
    architectural elements of IoT as presented in Section 2.\nThe first architectural\
    \ component of IoT is the perception\nlayer. It collects data using sensors, which\
    \ are the most\nimportant drivers of the Internet of Things [15]. There are\n\
    various types of sensors used in diverse IoT applications.\nThe most generic sensor\
    \ available today is the smartphone.\nThe smartphone itself has many types of\
    \ sensors embedded\nin it [16] such as the location sensor (GPS), movement\nsensors\
    \ (accelerometer, gyroscope), camera, light sensor,\nmicrophone, proximity sensor,\
    \ and magnetometer. These are\nbeing heavily used in different IoT applications.\
    \ Many other\ntypes of sensors are beginning to be used such as sensors for\n\
    measuring temperature, pressure, humidity, medical param-\neters of the body,\
    \ chemical and biochemical substances, and\nneural signals. A class of sensors\
    \ that stand out is infrared\nsensors that predate smartphones. They are now being\
    \ used\nwidely in many IoT applications: IR cameras, motion detec-\ntors, measuring\
    \ the distance to nearby objects, presence of\nsmoke and gases, and as moisture\
    \ sensors. We shall discuss\nthe different types of sensors used in IoT applications\
    \ in\nSection 5.\nSubsequently, we shall discuss related work in data pre-\nprocessing.\
    \ Such applications (also known as fog comput-\ning applications) mainly filter\
    \ and summarize data before\nsending it on the network. Such units typically have\
    \ a little\namount of temporary storage, a small processing unit, and\nsome security\
    \ features.\nThe next architectural component that we shall discuss\nis communication.\
    \ We shall discuss related work (in Sec-\ntion 7) on different communication technologies\
    \ used for\nthe Internet of Things. Different entities communicate over\nthe network\
    \ [17–19] using a diverse set of protocols and\nstandards. The most common communication\
    \ technologies\nfor short range low power communication protocols are\nRFID (Radio\
    \ Frequency Identification) and NFC (Near Field\nCommunication). For the medium\
    \ range, they are Bluetooth,\nZigbee, and WiFi. Communication in the IoT world\
    \ requires\nspecial networking protocols and mechanisms. Therefore,\nnew mechanisms\
    \ and protocols have been proposed and\nimplemented for each layer of the networking\
    \ stack, accord-\ning to the requirements imposed by IoT devices.\nWe shall subsequently\
    \ look at two kinds of software com-\nponents: middleware and applications. The\
    \ middleware cre-\nates an abstraction for the programmer such that the details\n\
    of the hardware can be hidden. This enhances interoperability\nof smart things\
    \ and makes it easy to offer different kinds of\nservices [20]. There are many\
    \ commercial and open source\nofferings for providing middleware services to IoT\
    \ devices.\nSome examples are OpenIoT [21], MiddleWhere [22], Hydra\n[23], FiWare\
    \ [24], and Oracle Fusion Middleware. Finally, we\ndiscuss the applications of\
    \ IoT in Section 9. We primarily\nfocus on home automation, ambient assisted living,\
    \ health\nand fitness, smart vehicular systems, smart cities, smart\nenvironments,\
    \ smart grids, social life, and entertainment.\nJournal of Electrical and Computer\
    \ Engineering\n5\nHealth and fitness\nHome automation\nSocial life &\nentertainment\n\
    Applications\nNear field\ncommunication\nWireless sensor\nnetworks\nCommunication\n\
    (networking)\nMiddleware\nMedical sensors\nMobile phone\nsensors\nPerception\n\
    (sensors)\nSmart transport\nSmart environment\nPreprocessing\nChemical/\nbiosensors\n\
    Internet Protocol\nfor smart objects\nSmart\nagriculture\nLow power\nLink layer\n\
    Adaptation layer\nRouting Protocol\nApplication Protocol\nEnergy\nconservation\n\
    Supply chain\nand logistics\nInfrared sensors\nEnvironmental\nsensors\nLocation\
    \ sensor\nMovement sensors\nCamera\nMicrophone\nLight sensor\nProximity sensor\n\
    Magnetometer\nNeural sensors\nService oriented\nEvent based\nSemantic based\n\
    Database oriented\nApplication specific\nLow power WiFi\nZigbee\nBluetooth low\n\
    energy\nLow power\ntechnologies\nRFID and WSN\nintegration\nRFID\nFigure 3: Taxonomy\
    \ of research in IoT technologies.\n4. Related Survey Papers\nOur taxonomy describes\
    \ the technologies in the IoT domain\nand is classified on the basis of architectural\
    \ layers. We\nhave tried to cover all subareas and recent technologies in\nour\
    \ taxonomy. There have been many survey papers on the\nInternet of Things in the\
    \ past. Table 1 shows how our survey\nis different from other highly cited surveys\
    \ in the literature.\nLet us first consider our novel contributions. Our paper\n\
    looks at each and every layer in the IoT stack, and as a\nresult the presentation\
    \ is also far more balanced. A novel\naddition in our survey is that we have discussed\
    \ different IoT\narchitectures. This has not been discussed in prior surveys on\n\
    the Internet of Things. The architecture section also considers\nnewer paradigms\
    \ such as fog computing, which have also\nhitherto not been considered. Moreover,\
    \ our survey nicely\ncategorizes technologies based on the architectural layer\n\
    that they belong to. We have also thoroughly categorized\nthe network layer and\
    \ tried to consolidate almost all the\ntechnologies that are used in IoT systems.\
    \ Such kind of a\nthorough categorization and presentation of technologies is\n\
    novel to the best of our knowledge.\nAlong with these novel contributions our\
    \ survey is far\nmore comprehensive, detailed, and exhaustive as compared\nto\
    \ other surveys in the area. Most of the other surveys look\nat only one or two\
    \ types of sensors, whereas we describe\n9 types of sensors with many examples.\
    \ Other surveys\nare also fairly restricted when they discuss communication\n\
    technologies and applications. We have discussed many types\nof middleware technologies\
    \ as well. Prior works have not\ngiven middleware technologies this level of attention.\
    \ We\ncover 10 communication technologies in detail and consider\na large variety\
    \ of applications encompassing smart homes,\nhealth care, logistics, transport,\
    \ agriculture, environment,\nsmart cities, and green energy. No other survey in\
    \ this area\nprofiles so many technologies, applications, and use cases.\n5. Sensors\
    \ and Actuators\nAll IoT applications need to have one or more sensors to\ncollect\
    \ data from the environment. Sensors are essential\ncomponents of smart objects.\
    \ One of the most important\naspects of the Internet of Things is context awareness,\
    \ which\nis not possible without sensor technology. IoT sensors are\nmostly small\
    \ in size, have low cost, and consume less power.\nThey are constrained by factors\
    \ such as battery capacity and\nease of deployment. Schmidt and Van Laerhoven\
    \ [25] provide\nan overview of various types of sensors used for building\nsmart\
    \ applications.\n5.1. Mobile Phone Based Sensors. First of all, let us look at\n\
    the mobile phone, which is ubiquitous and has many types\nof sensors embedded\
    \ in it. In specific, the smartphone is\na very handy and user friendly device\
    \ that has a host of\nbuilt in communication and data processing features. With\n\
    the increasing popularity of smartphones among people,\nresearchers are showing\
    \ interest in building smart IoT solu-\ntions using smartphones because of the\
    \ embedded sensors\n[16, 26]. Some additional sensors can also be used depending\n\
    6\nJournal of Electrical and Computer Engineering\nTable 1: Comparison with other\
    \ surveys on the basis of topics covered.\nSurvey paper\nSensors\nFog computing\n\
    Middleware\nCommunication\nApplications\nOther\n“Internet of Things: A\nSurvey,”\
    \ Atzori et al.,\n2010\nRFID\nNot covered\nService oriented\narchitecture\nCommunication\n\
    standards, IEEE 802.15.4,\nWSN, Zigbee,\n6LoWPAN, NFC,\nWireless Hart, M2M,\n\
    EPC global, ROLL\nrouting\nSmart home, health,\nlogistics, transport,\nagriculture,\
    \ social,\nenvironment\nIssues related to security,\nprivacy, naming,\naddressing\n\
    “Internet of Things\n(IoT): A Vision,\nArchitectural Elements,\nand Future Directions,”\n\
    Gubbi et al., 2013\nRFID\nNot covered\nService oriented\narchitecture\nWSN, addressing\n\
    schemes\nPersonal and home,\nenterprise, utilities,\nmobile\nCloud centric IoT\n\
    “The Internet of\nThings—A Survey of\nTopics and Trends,”\nWhitmore et al., 2014\n\
    RFID\nNot covered\nSemantic middleware\nWSN, NFC, WSN\nSmart infrastructure,\n\
    health care, supply\nchains/logistics\nSecurity and plrivacy\nOur survey\nCovered\
    \ various types of\nsensors: environmental,\nmedical, neural,\nchemical, infrared,\n\
    mobile phone sensors,\nRFID\nFog computing/smart\ngateway layered\narchitecture\
    \ of IoT\nIssues addressed by\nmiddleware, types of\nmiddleware: event\nbased,\
    \ service based,\nsemantic, database,\napplication specific\nAll layers of IP\
    \ stack,\nprotocols and standards\nof each layer, IEEE\n802.15.4, 6LoWPAN,\nNFC,\
    \ ROLL routing,\nCOAP, MQTT, LPWAN,\nlow energy wireless\ncommunication\ntechnologies:\
    \ BLE,\nZigbee, RFID-WSN\nintegration\nSmart home, health,\nlogistics, transport,\n\
    social, environment,\nagriculture, energy\nVarious architectures of\nIoT\nJournal\
    \ of Electrical and Computer Engineering\n7\nupon the requirements. Applications\
    \ can be built on the\nsmartphone that uses sensor data to produce meaningful\n\
    results. Some of the sensors inside a modern smartphone are\nas follows.\n(1)\
    \ The accelerometer senses the motion and acceleration\nof a mobile phone. It\
    \ typically measures changes in\nvelocity of the smartphone in three dimensions.\
    \ There\nare many types of accelerometers [27].\nIn a mechanical accelerometer,\
    \ we have a seismic\nmass in a housing, which is tied to the housing\nwith a spring.\
    \ The mass takes time to move and is\nleft behind as the housing moves, so the\
    \ force in\nthe spring can be correlated with the acceleration.\nIn a capacitive\
    \ accelerometer, capacitive plates are\nused with the same setup. With a change\
    \ in velocity,\nthe mass pushes the capacitive plates together, thus\nchanging\
    \ the capacitance. The rate of change of\ncapacitance is then converted into acceleration.\
    \ In\na piezoelectric accelerometer, piezoelectric crystals\nare used, which when\
    \ squeezed generate an electric\nvoltage. The changes in voltage can be translated\
    \ into\nacceleration.\nThe data patterns captured by the accelerometer can\nbe\
    \ used to detect physical activities of the user such as\nrunning, walking, and\
    \ bicycling.\n(2) The gyroscope detects the orientation of the phone\nvery precisely.\
    \ Orientation is measured using capac-\nitive changes when a seismic mass moves\
    \ in a partic-\nular direction.\n(3) The camera and microphone are very powerful\
    \ sen-\nsors since they capture visual and audio information,\nwhich can then\
    \ be analyzed and processed to detect\nvarious types of contextual information.\
    \ For example,\nwe can infer a user’s current environment and the\ninteractions\
    \ that she is having. To make sense of the\naudio data, technologies such as voice\
    \ recognition\nand acoustic features can be exploited.\n(4) The magnetometer detects\
    \ magnetic fields. This can\nbe used as a digital compass and in applications\
    \ to\ndetect the presence of metals.\n(5) The GPS (Global Positioning System)\
    \ detects the\nlocation of the phone, which is one of the most\nimportant pieces\
    \ of contextual information for smart\napplications. The location is detected\
    \ using the prin-\nciple of trilateration [28]. The distance is measured\nfrom\
    \ three or more satellites (or mobile phone towers\nin the case of A-GPS) and\
    \ coordinates are computed.\n(6) The light sensor detects the intensity of ambient\
    \ light.\nIt can be used for setting the brightness of the screen\nand other applications\
    \ in which some action is to be\ntaken depending on the intensity of ambient light.\
    \ For\nexample, we can control the lights in a room.\n(7) The proximity sensor\
    \ uses an infrared (IR) LED,\nwhich emits IR rays. These rays bounce back when\n\
    they strike some object. Based on the difference in\ntime, we can calculate the\
    \ distance. In this way, the\ndistance to different objects from the phone can\
    \ be\nmeasured. For example, we can use it to determine\nwhen the phone is close\
    \ to the face while talking. It\ncan also be used in applications in which we\
    \ have\nto trigger some event when an object approaches the\nphone.\n(8) Some\
    \ smartphones such as Samsung’s Galaxy S4 also\nhave a thermometer, barometer,\
    \ and humidity sensor\nto measure the temperature, atmospheric pressure,\nand\
    \ humidity, respectively.\nWe have studied many smart applications that use sensor\n\
    data collected from smartphones. For example, activity detec-\ntion [29] is achieved\
    \ by applying machine learning algorithms\nto the data collected by smartphone\
    \ sensors. It detects activi-\nties such as running, going up and down stairs,\
    \ walking, driv-\ning, and cycling. The application is trained with patterns of\n\
    data using data sets recorded by sensors when these activities\nare being performed.\n\
    Many health and fitness applications are being built to\nkeep track of a person’s\
    \ health continuously using smart-\nphones. They keep track of users’ physical\
    \ activities, diet,\nexercises, and lifestyle to determine the fitness level and\n\
    give suggestions to the user accordingly. Wang et al. [30]\ndescribe a mobile\
    \ application that is based completely on a\nsmartphone. They use it to assess\
    \ the overall mental health\nand performance of a college student. To track the\
    \ location\nand activities in which the student is involved, activity\nrecognition\
    \ (accelerometer) and GPS data are used. To keep\na check on how much the student\
    \ sleeps, the accelerometer\nand light sensors are used. For social life and conversations,\n\
    audio data from a microphone is used. The application also\nconducts quick questionnaires\
    \ with the students to know\nabout their mood. All this data can be used to assess\
    \ the stress\nlevels, social life, behavior, and exercise patterns of a student.\n\
    Another application by McClernon and Choudhury [31]\ndetects when the user is\
    \ going to smoke using context\ninformation such as the presence of other smokers,\
    \ location,\nand associated activities. The sensors provide information\nrelated\
    \ to the user’s movement, location, visual images, and\nsurrounding sounds. To\
    \ summarize smartphone sensors are\nbeing used to study different kinds of human\
    \ behavior (see\n[32]) and to improve the quality of human life.\n5.2. Medical\
    \ Sensors. The Internet of Things can be really\nbeneficial for health care applications.\
    \ We can use sensors,\nwhich can measure and monitor various medical parameters\n\
    in the human body [33]. These applications can aim at\nmonitoring a patient’s\
    \ health when they are not in hospital or\nwhen they are alone. Subsequently,\
    \ they can provide real time\nfeedback to the doctor, relatives, or the patient.\
    \ McGrath and\nScanaill [34] have described in detail the different sensors that\n\
    can be worn on the body for monitoring a person’s health.\nThere are many wearable\
    \ sensing devices available in the\nmarket. They are equipped with medical sensors\
    \ that are\ncapable of measuring different parameters such as the heart\nrate,\
    \ pulse, blood pressure, body temperature, respiration\nrate, and blood glucose\
    \ levels [35]. These wearables include\n8\nJournal of Electrical and Computer\
    \ Engineering\nFigure 4: Smart watches and fitness trackers (source:https://www\n\
    .pebble.com/ and http://www.fitbit.com/).\nFigure 5: Embedded skin patches (source:\
    \ MC10 Electronics).\nsmart watches, wristbands, monitoring patches, and smart\n\
    textiles.\nMoreover, smart watches and fitness trackers are becom-\ning fairly\
    \ popular in the market as companies such as Apple,\nSamsung, and Sony are coming\
    \ up with very innovative\nfeatures. For example, a smart watch includes features\
    \ such\nas connectivity with a smartphone, sensors such as an\naccelerometer,\
    \ and a heart rate monitor (see Figure 4).\nAnother novel IoT device, which has\
    \ a lot of promise are\nmonitoring patches that are pasted on the skin. Monitoring\n\
    patches are like tattoos. They are stretchable and disposable\nand are very cheap.\
    \ These patches are supposed to be worn\nby the patient for a few days to monitor\
    \ a vital health\nparameter continuously [15]. All the electronic components\n\
    are embedded in these rubbery structures. They can even\ntransmit the sensed data\
    \ wirelessly. Just like a tattoo, these\npatches can be applied on the skin as\
    \ shown in Figure 5.\nOne of the most common applications of such patches is to\n\
    monitor blood pressure.\nA very important consideration here is the context [34].\n\
    The data collected by the medical sensors must be combined\nwith contextual information\
    \ such as physical activity. For\nexample, the heart rate depends on the context.\
    \ It increases\nwhen we exercise. In that case, we cannot infer abnormal\nheart\
    \ rate. Therefore, we need to combine data from different\nsensors for making\
    \ the correct inference.\nFigure 6: Brain sensing headband with embedded neurosensors\n\
    (source: http://www.choosemuse.com/).\n5.3. Neural Sensors. Today, it is possible\
    \ to understand\nneural signals in the brain, infer the state of the brain, and\n\
    train it for better attention and focus. This is known as\nneurofeedback [36]\
    \ (see Figure 6). The technology used for\nreading brain signals is called EEG\
    \ (Electroencephalography)\nor a brain computer interface. The neurons inside\
    \ the brain\ncommunicate electronically and create an electric field, which\n\
    can be measured from outside in terms of frequencies. Brain\nwaves can be categorized\
    \ into alpha, beta, gamma, theta, and\ndelta waves depending upon the frequency.\n\
    Based on the type of wave, it can be inferred whether\nthe brain is calm or wandering\
    \ in thoughts. This type of\nneurofeedback can be obtained in real time and can\
    \ be used\nto train the brain to focus, pay better attention towards things,\n\
    manage stress, and have better mental well-being.\n5.4. Environmental and Chemical\
    \ Sensors. Environmental\nsensors are used to sense parameters in the physical\
    \ environ-\nment such as temperature, humidity, pressure, water pollu-\ntion,\
    \ and air pollution. Parameters such as the temperature\nand pressure can be measured\
    \ with a thermometer and\nbarometer. Air quality can be measured with sensors,\
    \ which\nsense the presence of gases and other particulate matter in the\nair\
    \ (refer to Sekhar et al. [37] for more details).\nChemical sensors are used to\
    \ detect chemical and bio-\nchemical substances. These sensors consist of a recognition\n\
    element and a transducer. The electronic nose (e-nose) and\nelectronic tongue\
    \ (e-tongue) are technologies that can be\nused to sense chemicals on the basis\
    \ of odor and taste,\nrespectively [38]. The e-nose and e-tongue consist of an\
    \ array\nof chemical sensors coupled with advance pattern recognition\nsoftware.\
    \ The sensors inside the e-nose and e-tongue produce\ncomplex data, which is then\
    \ analyzed through pattern recog-\nnition to identify the stimulus.\nThese sensors\
    \ can be used in monitoring the pollution\nlevel in smart cities [39], keeping\
    \ a check on food quality\nin smart kitchens, testing food, and agricultural products\
    \ in\nsupply chain applications.\nJournal of Electrical and Computer Engineering\n\
    9\n5.5. Radio Frequency Identification (RFID). RFID is an iden-\ntification technology\
    \ in which an RFID tag (a small chip with\nan antenna) carries data, which is\
    \ read by a RFID reader. The\ntag transmits the data stored in it via radio waves.\
    \ It is similar\nto bar code technology. But unlike a traditional bar code, it\n\
    does not require line of sight communication between the tag\nand the reader and\
    \ can identify itself from a distance even\nwithout a human operator. The range\
    \ of RFID varies with the\nfrequency. It can go up to hundreds of meters.\nRFID\
    \ tags are of two types: active and passive. Active tags\nhave a power source\
    \ and passive tags do not have any power\nsource. Passive tags draw power from\
    \ the electromagnetic\nwaves emitted by the reader and are thus cheap and have\
    \ a\nlong lifetime [40, 41].\nThere are two types of RFID technologies: near and\
    \ far\n[40]. A near RFID reader uses a coil through which we pass\nalternating\
    \ current and generate a magnetic field. The tag has\na smaller coil, which generates\
    \ a potential due to the ambient\nchanges in the magnetic field. This voltage\
    \ is then coupled\nwith a capacitor to accumulate a charge, which then powers\n\
    up the tag chip. The tag can then produce a small magnetic\nfield that encodes\
    \ the signal to be transmitted, and this can\nbe picked up by the reader.\nIn\
    \ far RFID, there is a dipole antenna in the reader, which\npropagates EM waves.\
    \ The tag also has a dipole antenna on\nwhich an alternating potential difference\
    \ appears and it is\npowered up. It can then use this power to transmit messages.\n\
    RFID technology is being used in various applications\nsuch as supply chain management,\
    \ access control, identity\nauthentication, and object tracking. The RFID tag\
    \ is attached\nto the object to be tracked and the reader detects and records\n\
    its presence when the object passes by it. In this manner,\nobject movement can\
    \ be tracked and RFID can serve as a\nsearch engine for smart things.\nFor access\
    \ control, an RFID tag is attached to the\nauthorized object. For example, small\
    \ chips are glued to the\nfront of vehicles. When the car reaches a barricade\
    \ on which\nthere is a reader, it reads the tag data and decides whether it\n\
    is an authorized car. If yes, it opens automatically. RFID cards\nare issued to\
    \ the people, who can then be identified by a RFID\nreader and given access accordingly.\n\
    The low level data collected from the RFID tags can be\ntransformed into higher\
    \ level insights in IoT applications\n[42]. There are many user level tools available,\
    \ in which all the\ndata collected by particular RFID readers and data associated\n\
    with the RFID tags can be managed. The high level data can\nbe used to draw inferences\
    \ and take further action.\n5.6. Actuators. Let us look at some examples of actuators\
    \ that\nare used in the Internet of Things. An actuator is a device,\nwhich can\
    \ effect a change in the environment by converting\nelectrical energy into some\
    \ form of useful energy. Some\nexamples are heating or cooling elements, speakers,\
    \ lights,\ndisplays, and motors.\nThe actuators, which induce motion, can be classified\
    \ into\nthree categories, namely, electrical, hydraulic, and pneumatic\nactuators\
    \ depending on their operation. Hydraulic actuators\nfacilitate mechanical motion\
    \ using fluid or hydraulic power.\nPneumatic actuators use the pressure of compressed\
    \ air and\nelectrical ones use electrical energy.\nAs an example, we can consider\
    \ a smart home system,\nwhich consists of many sensors and actuators. The actuators\n\
    are used to lock/unlock the doors, switch on/off the lights or\nother electrical\
    \ appliances, alert users of any threats through\nalarms or notifications, and\
    \ control the temperature of a\nhome (via a thermostat).\nA sophisticated example\
    \ of an actuator used in IoT is\na digital finger, which is used to turn on/off\
    \ the switches\n(or anything which requires small motion) and is controlled\n\
    wirelessly.\n6. Preprocessing\nAs smart things collect huge amount of sensor data,\
    \ compute\nand storage resources are required to analyze, store, and\nprocess\
    \ this data. The most common compute and storage\nresources are cloud based because\
    \ the cloud offers massive\ndata handling, scalability, and flexibility. But this\
    \ will not be\nsufficient to meet the requirements of many IoT applications\n\
    because of the following reasons [43].\n(1) Mobility: most of the smart devices\
    \ are mobile. Their\nchanging location makes it difficult to communicate\nwith\
    \ the cloud data center because of changing net-\nwork conditions across different\
    \ locations.\n(2) Reliable and real time actuation: communicating with\nthe cloud\
    \ and getting back responses takes time.\nLatency sensitive applications, which\
    \ need real time\nresponses, may not be feasible with this model. Also,\nthe communication\
    \ may be lossy due to wireless links,\nwhich can lead to unreliable data.\n(3)\
    \ Scalability: more devices means more requests to the\ncloud, thereby increasing\
    \ the latency.\n(4) Power constraints: communication consumes a lot of\npower,\
    \ and IoT devices are battery powered. They\nthus cannot afford to communicate\
    \ all the time.\nTo solve the problem of mobility, researchers have pro-\nposed\
    \ mobile cloud computing (MCC) [44]. But there are\nstill problems associated\
    \ with latency and power. MCC also\nsuffers from mobility problems such as frequently\
    \ changing\nnetwork conditions due to which problems such as signal\nfading and\
    \ service degradation arise.\nAs a solution to these problems, we can bring some\n\
    compute and storage resources to the edge of the network\ninstead of relying on\
    \ the cloud for everything. This concept\nis known as fog computing [11, 45] (also\
    \ see Section 2.2).\nThe fog can be viewed as a cloud, which is close to the\n\
    ground. Data can be stored, processed, filtered, and analyzed\non the edge of\
    \ the network before sending it to the cloud\nthrough expensive communication\
    \ media. The fog and cloud\nparadigms go together. Both of them are required for\
    \ the\noptimal performance of IoT applications. A smart gateway\n[13] can be employed\
    \ between underlying networks and the\ncloud to realize fog computing as shown\
    \ in Figure 7.\nThe features of fog computing [11] are as follows:\n(1) Low latency:\
    \ less time is required to access computing\nand storage resources on fog nodes\
    \ (smart gateways).\n10\nJournal of Electrical and Computer Engineering\nSmart\
    \ devices\nSmart gateway\nLocal real time analysis \npreprocessing\nﬁltering\n\
    Cloud data center \nGlobal data analytics\nstorage\ndata\ndata\nFigure 7: Smart\
    \ gateway for preprocessing.\n(2) Location awareness: as the fog is located on\
    \ the edge\nof the network, it is aware of the location of the\napplications and\
    \ their context. This is beneficial as\ncontext awareness is an important feature\
    \ of IoT\napplications.\n(3) Distributed nodes: fog nodes are distributed unlike\n\
    centralized cloud nodes. Multiple fog nodes need to\nbe deployed in distributed\
    \ geographical areas in order\nto provide services to mobile devices in those\
    \ areas.\nFor example, in vehicular networks, deploying fog\nnodes at highways\
    \ can provide low latency data/video\nstreaming to vehicles.\n(4) Mobility: the\
    \ fog supports mobility as smart devices\ncan directly communicate with smart\
    \ gateways\npresent in their proximity.\n(5) Real time response: fog nodes can\
    \ give an immediate\nresponse unlike the cloud, which has a much greater\nlatency.\n\
    (6) Interaction with the cloud: fog nodes can further\ninteract with the cloud\
    \ and communicate only that\ndata, which is required to be sent to the cloud.\n\
    The tasks performed by a smart gateway [46] are col-\nlecting sensor data, preprocessing\
    \ and filtering collected\ndata, providing compute, storage and networking services\n\
    to IoT devices, communicating with the cloud and sending\nonly necessary data,\
    \ monitoring power consumption of IoT\ndevices, monitoring activities and services\
    \ of IoT devices, and\nensuring security and privacy of data. Some applications\
    \ of\nfog computing are as follows [10, 11]:\n(1) Smart vehicular networks: smart\
    \ traffic lights are\ndeployed as smart gateways to locally detect pedes-\ntrians\
    \ and vehicles through sensors, calculate their\ndistance and speed, and finally\
    \ infer traffic conditions.\nThis is used to warn oncoming vehicles. These sensors\n\
    also interact with neighboring smart traffic lights\nto perform traffic management\
    \ tasks. For example,\nif sensors detect an approaching ambulance, they\ncan change\
    \ the traffic lights to let the ambulance\npass first and also inform other lights\
    \ to do so. The\ndata collected by these smart traffic lights are locally\nanalyzed\
    \ in real time to serve real time needs of traffic\nmanagement. Further, data\
    \ from multiple gateways\nis combined and sent to the cloud for further global\n\
    analysis of traffic in the city.\n(2) Smart grid: the smart electrical grid facilitates\
    \ load\nbalancing of energy on the basis of usage and avail-\nability. This is\
    \ done in order to switch automatically\nto alternative sources of energy such\
    \ as solar and\nwind power. This balancing can be done at the edge\nof the network\
    \ using smart meters or microgrids\nconnected by smart gateways. These gateways\
    \ can\nanalyze and process data. They can then project future\nenergy demand,\
    \ calculate the availability and price of\npower, and supply power from both conventional\
    \ and\nalternative sources to consumers.\n7. Communication\nAs the Internet of\
    \ Things is growing very rapidly, there are a\nlarge number of heterogeneous smart\
    \ devices connecting to\nthe Internet. IoT devices are battery powered, with minimal\n\
    compute and storage resources. Because of their constrained\nnature, there are\
    \ various communication challenges involved,\nwhich are as follows [19]:\n(1)\
    \ Addressing and identification: since millions of smart\nthings will be connected\
    \ to the Internet, they will\nhave to be identified through a unique address,\
    \ on the\nbasis of which they communicate with each other. For\nthis, we need\
    \ a large addressing space, and a unique\naddress for each smart object.\n(2)\
    \ Low power communication: communication of data\nbetween devices is a power consuming\
    \ task, specially,\nwireless communication. Therefore, we need a solu-\ntion that\
    \ facilitates communication with low power\nconsumption.\n(3) Routing protocols\
    \ with low memory requirement and\nefficient communication patterns.\n(4) High\
    \ speed and nonlossy communication.\n(5) Mobility of smart things.\nIoT devices\
    \ typically connect to the Internet through\nthe IP (Internet Protocol) stack.\
    \ This stack is very complex\nand demands a large amount of power and memory from\n\
    the connecting devices. The IoT devices can also connect\nlocally through non-IP\
    \ networks, which consume less power,\nand connect to the Internet via a smart\
    \ gateway. Non-IP\ncommunication channels such as Bluetooth, RFID, and NFC\nare\
    \ fairly popular but are limited in their range (up to a\nfew meters). Therefore,\
    \ their applications are limited to small\npersonal area networks. Personal area\
    \ networks (PAN) are\nJournal of Electrical and Computer Engineering\n11\nbeing\
    \ widely used in IoT applications such as wearables\nconnected to smartphones.\
    \ For increasing the range of such\nlocal networks, there was a need to modify\
    \ the IP stack so as to\nfacilitate low power communication using the IP stack.\
    \ One\nof the solutions is 6LoWPAN, which incorporates IPv6 with\nlow power personal\
    \ area networks. The range of a PAN with\n6LoWPAN is similar to local area networks,\
    \ and the power\nconsumption is much lower.\nThe leading communication technologies\
    \ used in the IoT\nworld are IEEE 802.15.4, low power WiFi, 6LoWPAN, RFID,\nNFC,\
    \ Sigfox, LoraWAN, and other proprietary protocols for\nwireless networks.\n7.1.\
    \ Near Field Communication (NFC). Near Field Communi-\ncation [47–49] is a very\
    \ short range wireless communication\ntechnology, through which mobile devices\
    \ can interact with\neach other over a distance of few centimeters only. All types\
    \ of\ndata can be transferred between two NFC enabled devices in\nseconds by bringing\
    \ them close to each other. This technology\nis based on RFID. It uses variations\
    \ in the magnetic field\nto communicate data between two NFC enabled devices.\n\
    NFC operates over a frequency band of 13.56 MHz, which is\nthe same as high frequency\
    \ RFID. There are two modes of\noperation: active and passive. In the active mode,\
    \ both the\ndevices generate magnetic fields, while in the passive mode,\nonly\
    \ one device generates the field and the other uses load\nmodulation to transfer\
    \ the data. The passive mode is useful in\nbattery powered devices to optimize\
    \ energy use. One benefit\nof the requirement of close proximity between devices\
    \ is that\nit is useful for secure transactions such as payments. Finally,\nnote\
    \ that NFC can be used for two-way communication\nunlike RFID. Consequently, almost\
    \ all smartphones in the\nmarket today are NFC enabled.\n7.2. Wireless Sensor\
    \ Networks (WSN) Based on IP for Smart\nObjects. Many times, data from a single\
    \ sensor is not useful\nin monitoring large areas and complex activities. Different\n\
    sensor nodes need to interact with each other wirelessly. The\ndisadvantage of\
    \ non-IP technologies such as RFID, NFC,\nand Bluetooth is that their range is\
    \ very small. So, they\ncannot be used in many applications, where a large area\
    \ needs\nto be monitored through many sensor nodes deployed in\ndiverse locations.\
    \ A wireless sensor network (WSN) consists\nof tens to thousands of sensor nodes\
    \ connected using wireless\ntechnologies. They collect data about the environment\
    \ and\ncommunicate it to gateway devices that relay the information\nto the cloud\
    \ over the Internet. The communication between\nnodes in a WSN may be direct or\
    \ multihop. The sensor nodes\nare of a constrained nature, but gateway nodes have\
    \ suffi-\ncient power and processing resources. The popular network\ntopologies\
    \ used in a WSN are a star, a mesh, and a hybrid\nnetwork. Most of the communication\
    \ in WSN is based on the\nIEEE 802.15.4 standard (discussed in Section 7.3). There\
    \ are\nclearly a lot of protocols that can be used in IoT scenarios.\nLet us discuss\
    \ the design of a typical IoT network protocol\nstack with the most popular alternatives.\n\
    7.3. IoT Network Protocol Stack. The Internet Engineering\nTask Force (IETF) has\
    \ developed alternative protocols for\ncommunication between IoT devices using\
    \ IP because IP is a\nflexible and reliable standard [50, 51]. The Internet Protocol\n\
    for Smart Objects (IPSO) Alliance has published various\nwhite papers describing\
    \ alternative protocols and standards\nfor the layers of the IP stack and an additional\
    \ adaptation\nlayer, which is used for communication [51–54] between\nsmart objects.\n\
    (1) Physical and MAC Layer (IEEE 802.15.4). The IEEE\n802.15.4 protocol is designed\
    \ for enabling communication\nbetween compact and inexpensive low power embedded\n\
    devices that need a long battery life. It defines standards and\nprotocols for\
    \ the physical and link (MAC) layer of the IP\nstack. It supports low power communication\
    \ along with low\ncost and short range communication. In the case of such\nresource\
    \ constrained environments, we need a small frame\nsize, low bandwidth, and low\
    \ transmit power.\nTransmission requires very little power (maximum one\nmilliwatt),\
    \ which is only one percent of that used in WiFi or\ncellular networks. This limits\
    \ the range of communication.\nBecause of the limited range, the devices have\
    \ to operate\ncooperatively in order to enable multihop routing over\nlonger distances.\
    \ As a result, the packet size is limited to\n127 bytes only, and the rate of\
    \ communication is limited to\n250 kbps. The coding scheme in IEEE 802.15.4 has\
    \ built in\nredundancy, which makes the communication robust, allows\nus to detect\
    \ losses, and enables the retransmission of lost\npackets. The protocol also supports\
    \ short 16-bit link addresses\nto decrease the size of the header, communication\
    \ overheads,\nand memory requirements [55].\nReaders can refer to the survey by\
    \ Vasseur et al. [54]\nfor more information on different physical and link layer\n\
    technologies for communication between smart objects.\n(2) Adaptation Layer. IPv6\
    \ is considered the best protocol for\ncommunication in the IoT domain because\
    \ of its scalability\nand stability. Such bulky IP protocols were initially not\n\
    thought to be suitable for communication in scenarios with\nlow power wireless\
    \ links such as IEEE 802.15.4.\n6LoWPAN, an acronym for IPv6 over low power wireless\n\
    personal area networks, is a very popular standard for\nwireless communication.\
    \ It enables communication using\nIPv6 over the IEEE 802.15.4 [52] protocol. This\
    \ standard\ndefines an adaptation layer between the 802.15.4 link layer\nand the\
    \ transport layer. 6LoWPAN devices can communicate\nwith all other IP based devices\
    \ on the Internet. The choice\nof IPv6 is because of the large addressing space\
    \ available\nin IPv6. 6LoWPAN networks connect to the Internet via a\ngateway\
    \ (WiFi or Ethernet), which also has protocol support\nfor conversion between\
    \ IPv4 and IPv6 as today’s deployed\nInternet is mostly IPv4. IPv6 headers are\
    \ not small enough\nto fit within the small 127 byte MTU of the 802.15.4 standard.\n\
    Hence, squeezing and fragmenting the packets to carry\nonly the essential information\
    \ is an optimization that the\nadaptation layer performs.\nSpecifically, the adaptation\
    \ layer performs the following\nthree optimizations in order to reduce communication\
    \ over-\nhead [55]:\n12\nJournal of Electrical and Computer Engineering\n(i) Header\
    \ compression 6loWPAN defines header com-\npression of IPv6 packets for decreasing\
    \ the overhead\nof IPv6. Some of the fields are deleted because they\ncan be derived\
    \ from link level information or can be\nshared across packets.\n(ii) Fragmentation:\
    \ the minimum MTU size (maximum\ntransmission unit) of IPv6 is 1280 bytes. On\
    \ the other\nhand, the maximum size of a frame in IEEE 802.15.4\nis 127 bytes.\
    \ Therefore, we need to fragment the IPv6\npacket. This is done by the adaptation\
    \ layer.\n(iii) Link layer forwarding 6LoWPAN also supports mesh\nunder routing,\
    \ which is done at the link layer using\nlink level short addresses instead of\
    \ in the network\nlayer. This feature can be used to communicate within\na 6LoWPAN\
    \ network.\n(3) Network Layer. The network layer is responsible for\nrouting the\
    \ packets received from the transport layer. The\nIETF Routing over Low Power\
    \ and Lossy Networks (ROLL)\nworking group has developed a routing protocol (RPL)\
    \ for\nLow Power and Lossy Networks (LLNs) [53].\nFor such networks, RPL is an\
    \ open routing protocol,\nbased on distance vectors. It describes how a destination\n\
    oriented directed acyclic graph (DODAG) is built with\nthe nodes after they exchange\
    \ distance vectors. A set of\nconstraints and an objective function is used to\
    \ build the\ngraph with the best path [53]. The objective function and\nconstraints\
    \ may differ with respect to their requirements. For\nexample, constraints can\
    \ be to avoid battery powered nodes\nor to prefer encrypted links. The objective\
    \ function can aim\nto minimize the latency or the expected number of packets\n\
    that need to be sent.\nThe making of this graph starts from the root node. The\n\
    root starts sending messages to neighboring nodes, which\nthen process the message\
    \ and decide whether to join or not\ndepending upon the constraints and the objective\
    \ function.\nSubsequently, they forward the message to their neighbors.\nIn this\
    \ manner, the message travels till the leaf nodes and a\ngraph is formed. Now\
    \ all the nodes in the graph can send\npackets upwards hop by hop to the root.\
    \ We can realize a point\nto point routing algorithm as follows. We send packets\
    \ to a\ncommon ancestor, from which it travels downwards (towards\nleaves) to\
    \ reach the destination.\nTo manage the memory requirements of nodes, nodes are\n\
    classified into storing and nonstoring nodes depending upon\ntheir ability to\
    \ store routing information. When nodes are in a\nnonstoring mode and a downward\
    \ path is being constructed,\nthe route information is attached to the incoming\
    \ message\nand forwarded further till the root. The root receives the\nwhole path\
    \ in the message and sends a data packet along with\nthe path message to the destination\
    \ hop by hop. But there is\na trade-off here because nonstoring nodes need more\
    \ power\nand bandwidth to send additional route information as they\ndo not have\
    \ the memory to store routing tables.\n(4) Transport Layer. TCP is not a good\
    \ option for communi-\ncation in low power environments as it has a large overhead\n\
    owing to the fact that it is a connection oriented protocol.\nTherefore, UDP is\
    \ preferred because it is a connectionless\nprotocol and has low overhead.\n(5)\
    \ Application Layer. The application layer is responsible for\ndata formatting\
    \ and presentation. The application layer in\nthe Internet is typically based\
    \ on HTTP. However, HTTP is\nnot suitable in resource constrained environments\
    \ because\nit is fairly verbose in nature and thus incurs a large parsing\noverhead.\
    \ Many alternate protocols have been developed for\nIoT environments such as CoAP\
    \ (Constrained Application\nProtocol) and MQTT (Message Queue Telemetry Transport).\n\
    (a) Constrained Application Protocol: CoAP can be\nthought of as an alternative\
    \ to HTTP. It is used\nin most IoT applications [56, 57]. Unlike HTTP, it\nincorporates\
    \ optimizations for constrained applica-\ntion environments [50]. It uses the\
    \ EXI (Efficient\nXML Interchanges) data format, which is a binary\ndata format\
    \ and is far more efficient in terms of\nspace as compared to plain text HTML/XML.\
    \ Other\nsupported features are built in header compression,\nresource discovery,\
    \ autoconfiguration, asynchronous\nmessage exchange, congestion control, and support\n\
    for multicast messages. There are four types of mes-\nsages in CoAP: nonconfirmable,\
    \ confirmable, reset\n(nack), and acknowledgement. For reliable transmis-\nsion\
    \ over UDP, confirmable messages are used [58].\nThe response can be piggybacked\
    \ in the acknowledge-\nment itself. Furthermore, it uses DTLS (Datagram\nTransport\
    \ Layer Security) for security purposes.\n(b) Message Queue Telemetry Transport:\
    \ MQTT is a\npublish/subscribe protocol that runs over TCP. It was\ndeveloped\
    \ by IBM [59] primarily as a client/server\nprotocol. The clients are publishers/subscribers\
    \ and\nthe server acts as a broker to which clients connect\nthrough TCP. Clients\
    \ can publish or subscribe to a\ntopic. This communication takes place through\
    \ the\nbroker whose job is to coordinate subscriptions and\nalso authenticate\
    \ the client for security. MQTT is\na lightweight protocol, which makes it suitable\
    \ for\nIoT applications. But because of the fact that it runs\nover TCP, it cannot\
    \ be used with all types of IoT\napplications. Moreover, it uses text for topic\
    \ names,\nwhich increases its overhead.\nMQTT-S/MQTT-SN is an extension of MQTT\
    \ [60],\nwhich is designed for low power and low cost devices. It is\nbased on\
    \ MQTT but has some optimizations for WSNs as\nfollows [61]. The topic names are\
    \ replaced by topic IDs, which\nreduce the overheads of transmission. Topics do\
    \ not need\nregistration as they are preregistered. Messages are also split\n\
    so that only the necessary information is sent. Further, for\npower conservation,\
    \ there is an offline procedure for clients\nwho are in a sleep state. Messages\
    \ can be buffered and later\nread by clients when they wake up. Clients connect\
    \ to the\nbroker through a gateway device, which resides within the\nsensor network\
    \ and connects to the broker.\n7.4. Bluetooth Low Energy (BLE). Bluetooth Low\
    \ Energy, also\nknown as “Bluetooth Smart,” was developed by the Bluetooth\nJournal\
    \ of Electrical and Computer Engineering\n13\nSpecial Interest Group. It has a\
    \ relatively shorter range and\nconsumes lower energy as compared to competing\
    \ protocols.\nThe BLE protocol stack is similar to the stack used in classic\n\
    Bluetooth technology. It has two parts: controller and host.\nThe physical and\
    \ link layer are implemented in the controller.\nThe controller is typically a\
    \ SOC (System on Chip) with a\nradio. The functionalities of upper layers are\
    \ included in the\nhost [62]. BLE is not compatible with classic Bluetooth. Let\n\
    us look at the differences between classic Bluetooth and BLE\n[63, 64].\nThe main\
    \ difference is that BLE does not support data\nstreaming. Instead, it supports\
    \ quick transfer of small packets\nof data (packet size is small) with a data\
    \ rate of 1 Mbps.\nThere are two types of devices in BLE: master and slave.\n\
    The master acts as a central device that can connect to various\nslaves. Let us\
    \ consider an IoT scenario where a phone or PC\nserve as the master and mobile\
    \ devices such as a thermostat,\nfitness tracker, smart watch, or any monitoring\
    \ device act\nas slaves. In such cases, slaves must be very power efficient.\n\
    Therefore, to save energy, slaves are by default in sleep mode\nand wake up periodically\
    \ to receive packets from the master.\nIn classic Bluetooth, the connection is\
    \ on all the time even\nif no data transfer is going on. Additionally, it supports\
    \ 79\ndata channels (1 MHz channel bandwidth) and a data rate\nof 1 million symbols/s,\
    \ whereas, BLE supports 40 channels\nwith 2 MHz channel bandwidth (double of classic\
    \ Bluetooth)\nand 1 million symbols/s data rate. BLE supports low duty\ncycle\
    \ requirements as its packet size is small and the time\ntaken to transmit the\
    \ smallest packet is as small as 80 \U0001D707s. The\nBLE protocol stack supports\
    \ IP based communication also.\nAn experiment conducted by Siekkinen et al. [65]\
    \ recorded\nthe number of bytes transferred per Joule to show that BLE\nconsumes\
    \ far less energy as compared to competing protocols\nsuch as Zigbee. The energy\
    \ efficiency of BLE is 2.5 times better\nthan Zigbee.\n7.5. Low Power WiFi. The\
    \ WiFi alliance has recently devel-\noped “WiFi HaLow,” which is based on the\
    \ IEEE 802.11ah\nstandard. It consumes lower power than a traditional WiFi\ndevice\
    \ and also has a longer range. This is why this protocol\nis suitable for Internet\
    \ of Things applications. The range of\nWiFi HaLow is nearly twice that of traditional\
    \ WiFi.\nLike other WiFi devices, devices supporting WiFi HaLow\nalso support\
    \ IP connectivity, which is important for IoT\napplications. Let us look at the\
    \ specifications of the IEEE\n802.11ah standard [66, 67]. This standard was developed\
    \ to\ndeal with wireless sensor network scenarios, where devices\nare energy constrained\
    \ and require relatively long range\ncommunication. IEEE 802.11ah operates in\
    \ the sub-gigahertz\nband (900 MHz). Because of the relatively lower frequency,\n\
    the range is longer since higher frequency waves suffer from\nhigher attenuation.\
    \ We can extend the range (currently 1 km)\nby lowering the frequency further;\
    \ however, the data rate\nwill also be lower and thus the tradeoff is not justified.\n\
    IEEE 802.11ah is also designed to support large star shaped\nnetworks, where a\
    \ lot of stations are connected to a single\naccess point.\n7.6. Zigbee. It is\
    \ based on the IEEE 802.15.4 communication\nprotocol standard and is used for\
    \ personal area networks\nor PANs [68]. The IEEE 802.15.4 standard has low power\n\
    MAC and physical layers and has already been explained\nin Section 7.3. Zigbee\
    \ was developed by the Zigbee alliance,\nwhich works for reliable, low energy,\
    \ and cheap communi-\ncation solutions. The range of Zigbee device communication\n\
    is very small (10–100 meters). The details of the network and\napplication layers\
    \ are also specified by the Zigbee standard.\nUnlike BLE, the network layer here\
    \ provides for multihop\nrouting.\nThere are three types of devices in a Zigbee\
    \ network:\nFFD (Fully Functional Device), RFD (Reduced Functional\nDevice), and\
    \ one Zigbee coordinator. A FFD node can addi-\ntionally act as a router. Zigbee\
    \ supports star, tree, and mesh\ntopologies. The routing scheme depends on the\
    \ topology.\nOther features of Zigbee are discovery and maintenance of\nroutes,\
    \ support for nodes joining/leaving the network, short\n16-bit addresses, and\
    \ multihop routing.\nThe framework for communication and distributed appli-\n\
    cation development is provided by the application layer.\nThe application layer\
    \ consists of Application Objects (APO),\nApplication Sublayer (APS), and a Zigbee\
    \ Device Object\n(ZDO). APOs are spread over the network nodes. These are\npieces\
    \ of software, which control some underlying device\nhardware (examples: switch\
    \ and transducer). The device and\nnetwork management services are provided by\
    \ the ZDO,\nwhich are then used by the APOs. Data transfer services\nare provided\
    \ by the Application Sublayer to the APOs and\nZDO. It is responsible for secure\
    \ communication between the\nApplication Objects. These features can be used to\
    \ create a\nlarge distributed application.\n7.7. Integration of RFID and WSN.\
    \ RFID and wireless sensor\nnetworks (WSN) are both important technologies in\
    \ the IoT\ndomain. RFID can only be used for object identification, but\nWSNs\
    \ serve a far greater purpose. The two are very different\nbut merging them has\
    \ many advantages. The following\ncomponents can be added to RFID to enhance its\
    \ usability:\n(a) Sensing capabilities\n(b) Multihop communication\n(c) Intelligence\n\
    RFID is inexpensive and uses very little power. That is\nwhy its integration with\
    \ WSN is very useful. The integration\nis possible in the following ways [69,\
    \ 70]:\n(a) Integration of RFID tags with sensors: RFID tags\nwith sensing capabilities\
    \ are called sensor tags. These\nsensor tags sense data from the environment and\n\
    then the RFID reader can read this sensed data from\nthe tag. In such cases, simple\
    \ RFID protocols are\nused, where there is only single hop communication.\nRFID\
    \ sensing technologies can be further classified\non the basis of the power requirement\
    \ of sensor tags as\nexplained earlier in the section on RFIDs (active and\npassive)\
    \ (see Section 5.5).\n14\nJournal of Electrical and Computer Engineering\n(b)\
    \ Integration of RFID tags with WSN nodes: the com-\nmunication capabilities of\
    \ sensor tags are limited to a\nsingle hop. To extend its capabilities, the sensor\
    \ tag is\nequipped with a wireless transceiver, little bit of Flash\nmemory, and\
    \ computational capabilities such that it\ncan initiate communication with other\
    \ nodes and\nwireless devices. The nodes can in this fashion be used\nto form\
    \ a wireless mesh network. In such networks,\nsensor tags can communicate with\
    \ each other over a\nlarge range (via intermediate hops). With additional\nprocessing\
    \ capabilities at a node, we can reduce the\nnet amount of data communicated and\
    \ thus increase\nthe power efficiency of the WSN.\n(c) Integration of RFID readers\
    \ with WSN nodes: this\ntype of integration is also done to increase the range\n\
    of RFID tag readers. The readers are equipped with\nwireless transceivers and\
    \ microcontrollers so that\nthey can communicate with each other and therefore,\n\
    the tag data can reach a reader, which is not in the\nrange of that tag. It takes\
    \ advantage of multihop\ncommunication of wireless sensor network devices.\nThe\
    \ data from all the RFID readers in the network\nultimately reaches a central\
    \ gateway or base station\nthat processes the data or sends it to a remote server.\n\
    These kinds of integrated solutions have many applica-\ntions in a diverse set\
    \ of domains such as security, healthcare,\nand manufacturing.\n7.8. Low Power\
    \ Wide-Area-Networks (LPWAN). Let us now\ndiscuss a protocol for long range communication\
    \ in power\nconstrained devices. The LPWAN class of protocols is low bit-\nrate\
    \ communication technologies for such IoT scenarios.\nLet us now discuss some\
    \ of the most common technolo-\ngies in this area.\nNarrow band IoT: it is a technology\
    \ made for a large\nnumber of devices that are energy constrained. It is\nthus\
    \ necessary to reduce the bit rate. This protocol\ncan be deployed with both the\
    \ cellular phone GSM\nand LTE spectra. The downlink speeds vary between\n40 kbps\
    \ (LTE M2) and 10 Mbps (LTE category 1).\nSigfox: it is one more protocol that\
    \ uses narrow band\ncommunication (≈10 MHz). It uses free sections of\nthe radio\
    \ spectrum (ISM band) to transmit its data.\nInstead of 4G networks, Sigfox focuses\
    \ on using\nvery long waves. Thus, the range can increase to a\n1000 kms. Because\
    \ of this the energy for transmission\nis significantly lower (<0.1%) than contemporary\
    \ cell\nphones.\nAgain the cost is bandwidth. It can only transmit\n12 bytes per\
    \ message, and a device is limited to 140\nmessages per day. This is reasonable\
    \ for many kinds of\napplications: submarine applications, sending control\n(emergency)\
    \ codes, geolocation, monitoring remote\nlocations, and medical applications.\n\
    Weightless: it uses a differential binary phase shift\nkeying based method to\
    \ transmit narrow band sig-\nnals. To avoid interference, the protocol hops across\n\
    frequency bands (instead of using CSMA). It sup-\nports cryptographic encryption\
    \ and mobility. Along\nwith frequency hopping, two additional mechanisms\nare\
    \ used to reduce collisions. The downlink service\nuses time division multiple\
    \ access (TDMA) and the\nuplink service uses multiple subchannels that are first\n\
    allocated to transmitting nodes by contacting a cen-\ntral server. Some applications\
    \ include smart meters,\nvehicle tracking, health monitoring, and industrial\n\
    machine monitoring.\nNeul: this protocol operates in the sub-1 GHz band.\nIt uses\
    \ small chunks of the TV whitespace spectrum\nto create low cost and low power\
    \ networks with very\nhigh scalability. It has a 10 km range and uses the\nWeightless\
    \ protocol for communication.\nLoRaWAN: this protocol is similar to Sigfox. It\
    \ targets\nwide area network applications and is designed to be\na low power protocol.\
    \ Its data rates can vary from\n0.3 kbps to 50 kbps, and it can be used within\
    \ an\nurban or a suburban environment (2–5 kms range\nin a crowded urban area).\
    \ It was designed to serve\nas a standard for long range IoT protocols. It thus\n\
    has features to support multitenancy, enable multiple\napplications, and include\
    \ several different network\ndomains.\n7.9. Lightweight Application Layer Protocols.\
    \ Along with\nphysical and MAC layer protocols, we also need application\nlayer\
    \ protocols for IoT networks. These lightweight protocols\nneed to be able to\
    \ carry application messages, while simulta-\nneously reducing power as far as\
    \ possible.\nOMA Lightweight M2M (LWM2M) is one such protocol.\nIt defines the\
    \ communication protocol between a server and\na device. The devices often have\
    \ limited capabilities and are\nthus referred to as constrained devices. The main\
    \ aims of the\nOMA protocol are as follows:\n(1) Remote device management.\n(2)\
    \ Transferring service data/information between differ-\nent nodes in the LWM2M\
    \ network.\nAll the protocols in this class treat all the network\nresources as\
    \ objects. Such resources can be created, deleted,\nand remotely configured. These\
    \ devices have their unique\nlimitations and can use different kinds of protocols\
    \ for\ninternally representing information. The LWM2M protocol\nabstracts all\
    \ of this away and provides a convenient interface\nto send messages between a\
    \ generic LWM2M server and a\ndistributed set of LWM2M clients.\nThis protocol\
    \ is often used along with CoAP (Constrained\nApplication Protocol). It is an\
    \ application layer protocol\nthat allows constrained nodes such as sensor motes\
    \ or small\nembedded devices to communicate across the Internet. CoAP\nseamlessly\
    \ integrates with HTTP, yet it provides additional\nfacilities such as support\
    \ for multicast operations. It is ideally\nJournal of Electrical and Computer\
    \ Engineering\n15\nsuited for small devices because of its low overhead and\n\
    parsing complexity and reliance on UDP rather than TCP.\n8. Middleware\nUbiquitous\
    \ computing is the core of the Internet of Things,\nwhich means incorporating\
    \ computing and connectivity in\nall the things around us. Interoperability of\
    \ such heteroge-\nneous devices needs well-defined standards. But standard-\n\
    ization is difficult because of the varied requirements of\ndifferent applications\
    \ and devices. For such heterogeneous\napplications, the solution is to have a\
    \ middleware platform,\nwhich will abstract the details of the things for applications.\n\
    That is, it will hide the details of the smart things. It\nshould act as a software\
    \ bridge between the things and the\napplications. It needs to provide the required\
    \ services to the\napplication developers [20] so that they can focus more on\n\
    the requirements of applications rather than on interacting\nwith the baseline\
    \ hardware. To summarize, the middleware\nabstracts the hardware and provides\
    \ an Application Program-\nming Interface (API) for communication, data management,\n\
    computation, security, and privacy.\nThe challenges, which are addressed by any\
    \ IoT middle-\nware, are as follows: [20, 71, 72].\n(1) Interoperability and programming\
    \ abstractions: for\nfacilitating collaboration and information exchange\nbetween\
    \ heterogeneous devices, different types of\nthings can interact with each other\
    \ easily with the help\nof middleware services. Interoperability is of three\n\
    types: network, semantic, and syntactic. Network\ninteroperability deals with\
    \ heterogeneous interface\nprotocols for communication between devices. It\ninsulates\
    \ the applications from the intricacies of\ndifferent protocols. Syntactic interoperability\
    \ ensures\nthat applications are oblivious of different formats,\nstructures,\
    \ and encoding of data. Semantic interop-\nerability deals with abstracting the\
    \ meaning of data\nwithin a particular domain. It is loosely inspired by\nthe\
    \ semantic web.\n(2) Device discovery and management: this feature\nenables the\
    \ devices to be aware of all other devices\nin the neighborhood and the services\
    \ provided by\nthem. In the Internet of Things, the infrastructure is\nmostly\
    \ dynamic. The devices have to announce their\npresence and the services they\
    \ provide. The solution\nneeds to be scalable because the devices in an IoT\n\
    network can increase. Most solutions in this domain\nare loosely inspired by semantic\
    \ web technologies.\nThe middleware provides APIs to list the IoT devices,\ntheir\
    \ services, and capabilities. In addition, typically\nAPIs are provided to discover\
    \ devices based on their\ncapabilities. Finally, any IoT middleware needs to\n\
    perform load balancing, manage devices based on\ntheir levels of battery power,\
    \ and report problems in\ndevices to the users.\n(3) Scalability: a large number\
    \ of devices are expected to\ncommunicate in an IoT setup. Moreover, IoT appli-\n\
    cations need to scale due to ever increasing require-\nments. This should be managed\
    \ by the middleware\nby making required changes when the infrastructure\nscales.\n\
    (4) Big data and analytics: IoT sensors typically collect\na huge amount of data.\
    \ It is necessary to analyze\nall of this data in great detail. As a result a\
    \ lot of\nbig data algorithms are used to analyze IoT data.\nMoreover, it is possible\
    \ that due to the flimsy nature\nof the network some of the data collected might\
    \ be\nincomplete. It is necessary to take this into account\nand extrapolate data\
    \ by using sophisticated machine\nlearning algorithms.\n(5) Security and privacy:\
    \ IoT applications are mostly\nrelated to someone’s personal life or an industry.\n\
    Security and privacy issues need to be addressed in\nall such environments. The\
    \ middleware should have\nbuilt in mechanisms to address such issues, along with\n\
    user authentication, and the implementation of access\ncontrol.\n(6) Cloud services:\
    \ the cloud is an important part of an\nIoT deployment. Most of the sensor data\
    \ is analyzed\nand stored in a centralized cloud. It is necessary for\nIoT middleware\
    \ to seamlessly run on different types\nof clouds and to enable users to leverage\
    \ the cloud\nto get better insights from the data collected by the\nsensors.\n\
    (7) Context detection: the data collected from the sensors\nneeds to be used to\
    \ extract the context by applying\nvarious types of algorithms. The context can\
    \ subse-\nquently be used for providing sophisticated services\nto users.\nThere\
    \ are many middleware solutions available for the\nInternet of Things, which address\
    \ one or more of the\naforementioned issues. All of them support interoperabil-\n\
    ity and abstraction, which is the foremost requirement of\nmiddleware. Some examples\
    \ are Oracle’s Fusion Middleware,\nOpenIoT [21], MiddleWhere [22], and Hydra [23].\
    \ Middle-\nwares can be classified as follows on the basis of their design\n[72]:\n\
    (1) Event based: here, all the components interact with\neach other through events.\
    \ Each event has a type and\nsome parameters. Events are generated by producers\n\
    and received by the consumers. This can be viewed\nas a publish/subscribe architecture,\
    \ where entities can\nsubscribe for some event types and get notified for\nthose\
    \ events.\n(2) Service oriented: service oriented middlewares are\nbased on Service\
    \ Oriented Architectures (SOA), in\nwhich we have independent modules that provide\
    \ ser-\nvices through accessible interfaces. A service oriented\nmiddleware views\
    \ resources as service providers.\nIt abstracts the underlying resources through\
    \ a set\nof services that are used by applications. There is\n16\nJournal of Electrical\
    \ and Computer Engineering\na service repository, where services are published\n\
    by providers. The consumers can discover services\nfrom the repository and then\
    \ bind with the provider\nto access the service. Service oriented middleware\n\
    must have runtime support for advertising services\nby providers and support for\
    \ discovering and using\nservices by consumers.\nHYDRA [23] is a service oriented\
    \ middleware. It\nincorporates many software components, which are\nused in handling\
    \ various tasks required for the devel-\nopment of intelligent applications. Hydra\
    \ also pro-\nvides semantic interoperability using semantic web\ntechnologies.\
    \ It supports dynamic reconfiguration\nand self-management.\n(3) Database oriented:\
    \ in this approach, the network\nof IoT devices is considered as a virtual relational\n\
    database system. The database can then be queried\nby the applications using a\
    \ query language. There\nare easy to use interfaces for extracting data from\n\
    the database. This approach has issues with scaling\nbecause of its centralized\
    \ model.\n(4) Semantic: semantic middleware focuses on the inter-\noperation of\
    \ different types of devices, which commu-\nnicate using different formats of\
    \ data. It incorporates\ndevices with different data formats and ontologies and\n\
    ties all of them together in a common framework.\nThe framework is used for exchanging\
    \ data between\ndiverse types of devices. For a common semantic for-\nmat, we\
    \ need to have \U0001D441 adapters for communication\nbetween \U0001D441 devices\
    \ because; for each device, we need\nadapters to map \U0001D441 standards to one\
    \ abstract standard\n[73]. In such a semantic middleware [74], a semantic\nlayer\
    \ is introduced, in which there is a mapping from\neach resource to a software\
    \ layer for that resource.\nThe software layers then communicate with each\nother\
    \ using a mutually intelligible language (based\non the semantic web). This technique\
    \ allows multiple\nphysical resources to communicate even though they\ndo not\
    \ implement or understand the same protocols.\n(5) Application specific: this\
    \ type of middleware is used\nspecifically for an application domain for which\
    \ it\nis developed because the whole architecture of this\nmiddleware software\
    \ is fine-tuned on the basis of\nrequirements of the application. The application\
    \ and\nmiddleware are tightly coupled. These are not general\npurpose solutions.\n\
    8.1. Popular IoT Middleware\n8.1.1. FiWare. FiWare is a very popular IoT middleware\n\
    framework that is promoted by the EU. It has been designed\nkeeping smart cities,\
    \ logistics, and shop floor analytics in\nmind. FiWare contains a large body of\
    \ code, reusable mod-\nules, and APIs that have been contributed by thousands\
    \ of\nFiWare developers. Any application developer can take a\nsubset of these\
    \ components and build his/her IoT application.\nA typical IoT application has\
    \ many producers of data\n(sensors), a set of servers to process the data, and\
    \ a set\nof actuators. FiWare refers to the information collected by\nsensors\
    \ as context information. It defines generic REST APIs\nto capture the context\
    \ from different scenarios. All the context\ninformation is sent to a dedicated\
    \ service called a context\nbroker. FiWare provides APIs to store the context\
    \ and also\nquery it. Moreover, any application can register itself as a\ncontext\
    \ consumer, and it can request the context broker for\ninformation. It also supports\
    \ the publish-subscribe paradigm.\nSubsequently, the context can be supplied to\
    \ systems using\ncontext adapters whose main role is to transform the data (the\n\
    context) based on the requirements of the destination nodes.\nMoreover, FiWare\
    \ defines a set of SNMP APIs via which we\ncan control the behavior of IoT devices\
    \ and also configure\nthem.\nThe target applications are provided APIs to analyze,\n\
    query, and mine the information that is collected from the\ncontext broker. Additionally,\
    \ with advanced visualization\nAPIs, it is possible to create and deploy feature\
    \ rich applica-\ntions very quickly.\n8.1.2. OpenIoT. OpenIoT is another popular\
    \ open source\ninitiative. It has 7 different components. At the lowest level,\n\
    we have a physical plane. It collects data from IoT devices\nand also does some\
    \ preprocessing of data. It has different\nAPIs to interface with different types\
    \ of physical nodes and\nget information from them.\nThe next plane is the virtualized\
    \ plane, which has 3\ncomponents. We first have the scheduler, which manages the\n\
    streams of data generated by devices. It primarily assigns\nthem to resources\
    \ and takes care of their QoS requirements.\nThe data storage component manages\
    \ the storage and archival\nof data streams. Finally, the service delivery component\n\
    processes the streams. It has several roles. It combines\ndata streams, preprocesses\
    \ them, and tracks some statistics\nassociated with these streams such as the\
    \ number of unique\nrequests or the size of each request.\nThe uppermost layer,\
    \ that is, the application layer, also\nhas 3 components: request definition,\
    \ request presentation,\nand configuration. The request definition component helps\n\
    us create requests to be sent to the IoT sensors and storage\nlayers. It can be\
    \ used to fetch and query data. The request\npresentation component creates mashups\
    \ of data by issuing\ndifferent queries to the storage layer, and finally the\
    \ configu-\nration component helps us configure the IoT devices.\n9. Applications\
    \ of IoT\nThere are a diverse set of areas in which intelligent applica-\ntions\
    \ have been developed. All of these applications are not\nyet readily available;\
    \ however, preliminary research indicates\nthe potential of IoT in improving the\
    \ quality of life in our soci-\nety. Some uses of IoT applications are in home\
    \ automation,\nfitness tracking, health monitoring, environment protection,\n\
    smart cities, and industrial settings.\n9.1. Home Automation. Smart homes are\
    \ becoming more\npopular today because of two reasons. First, the sensor\nand\
    \ actuation technologies along with wireless sensor net-\nworks have significantly\
    \ matured. Second, people today trust\nJournal of Electrical and Computer Engineering\n\
    17\nSecurity\nEnergy\nconservation\nHassle-free\nlifestyle\nEntertainment\nAutomatic\
    \ operation\nof appliances\nGas sensors\nSmoke\nsensors\nHealth\nCare\nSmart\n\
    meters\nSmart\nThermostat\nCommunication\nwith smart grid\nRemote\nmonitoring\n\
    Smart\nlocks\nSmart\nirrigation\nSmart\nTV\nSecurity\ncameras\nFigure 8: Block\
    \ diagram of a smart home system.\ntechnology to address their concerns about\
    \ their quality of\nlife and security of their homes (see Figure 8).\nIn smart\
    \ homes, various sensors are deployed, which\nprovide intelligent and automated\
    \ services to the user. They\nhelp in automating daily tasks and help in maintaining\
    \ a\nroutine for individuals who tend to be forgetful. They help\nin energy conservation\
    \ by turning off lights and electronic\ngadgets automatically. We typically use\
    \ motion sensors for\nthis purpose. Motion sensors can be additionally used for\n\
    security also.\nFor example, the project, MavHome [75], provides an\nintelligent\
    \ agent, which uses various prediction algorithms\nfor doing automated tasks in\
    \ response to user triggered events\nand adapts itself to the routines of the\
    \ inhabitants. Predic-\ntion algorithms are used to predict the sequence of events\n\
    [76] in a home. A sequence matching algorithm maintains\nsequences of events in\
    \ a queue and also stores their frequency.\nThen a prediction is made using the\
    \ match length and\nfrequency. Other algorithms used by similar applications use\n\
    compression based prediction and Markov models.\nEnergy conservation in smart\
    \ homes [77] is typically\nachieved through sensors and context awareness. The\
    \ sen-\nsors collect data from the environment (light, temperature,\nhumidity,\
    \ gas, and fire events). This data from heterogeneous\nsensors is fed to a context\
    \ aggregator, which forwards the\ncollected data to the context aware service\
    \ engine. This engine\nselects services based on the context. For example, an\
    \ appli-\ncation can automatically turn on the AC when the humidity\nrises. Or,\
    \ when there is a gas leak, it can turn all the lights off.\nSmart home applications\
    \ are really beneficial for the\nelderly and differently abled. Their health is\
    \ monitored and\nrelatives are informed immediately in case of emergencies.\n\
    Floors are equipped with pressure sensors, which track the\nmovement of an individual\
    \ across the smart home and also\nhelp in detecting if a person has fallen down.\
    \ In smart homes,\nCCTV cameras can be used to record events of interest. These\n\
    can then be used for feature extraction to find out what is\ngoing on.\nIn specific,\
    \ fall detection applications in smart environ-\nments [78–80] are useful for\
    \ detecting if elderly people have\nfallen down. Yu et al. [80] use computer vision\
    \ based tech-\nniques for analyzing postures of the human body. Sixsmith\net al.\
    \ [79] used low cost infrared sensor array technology,\nwhich can provide information\
    \ such as the location, size,\nand velocity of a target object. It detects dynamics\
    \ of a fall\nby analyzing the motion patterns and also detects inactivity\nand\
    \ compares it with activity in the past. Neural networks\nare employed and sample\
    \ data is provided to the system for\nvarious types of falls. Many smartphone\
    \ based applications\nare also available, which detect a fall on the basis of\
    \ readings\nfrom the accelerometer and gyroscope data.\nThere are many challenges\
    \ and issues with regard to smart\nhome applications [81]. The most important\
    \ is security and\nprivacy [82] since all the data about the events taking place\
    \ in\nthe home is being recorded. If the security and trustworthi-\nness of the\
    \ system are not guaranteed, an intruder may attack\nthe system and may make the\
    \ system behave maliciously.\nSmart home systems are supposed to notify the owners\
    \ in case\nthey detect such abnormalities. This is possible using AI and\nmachine\
    \ learning algorithms, and researchers have already\nstarted working in this direction\
    \ [83]. Reliability is also an\nissue since there is no system administrator to\
    \ monitor the\nsystem.\n9.2. Smart Cities\n9.2.1. Smart Transport. Smart transport\
    \ applications can\nmanage daily traffic in cities using sensors and intelligent\n\
    information processing systems. The main aim of intelligent\ntransport systems\
    \ is to minimize traffic congestion, ensure\n18\nJournal of Electrical and Computer\
    \ Engineering\nDatacenter\nGateway\nSend status to cloud\nabout availability\n\
    Search for nearest\navailable parking\nParking space with sensors\nFigure 9: Block\
    \ diagram of a smart parking system.\neasy and hassle-free parking, and avoid\
    \ accidents by prop-\nerly routing traffic and spotting drunk drivers. The sensor\n\
    technologies governing these types of applications are GPS\nsensors for location,\
    \ accelerometers for speed, gyroscopes for\ndirection, RFIDs for vehicle identification,\
    \ infrared sensors\nfor counting passengers and vehicles, and cameras for record-\n\
    ing vehicle movement and traffic. There are many types of\napplications in this\
    \ area (refer to [84]):\n(1) Traffic surveillance and management applications:\n\
    vehicles are connected by a network to each other,\nthe cloud, and to a host of\
    \ IoT devices such as GPS\nsensors, RFID devices, and cameras. These devices\n\
    can estimate traffic conditions in different parts of the\ncity. Custom applications\
    \ can analyze traffic patterns\nso that future traffic conditions can be estimated.\
    \ Yu et\nal. [85] implement a vehicle tracking system for traffic\nsurveillance\
    \ using video sequences captured on the\nroads.\nTraffic congestion detection\
    \ can also be implemented\nusing smartphone sensors such as accelerometers\n[86]\
    \ and GPS sensors. These applications can detect\nmovement patterns of the vehicle\
    \ while the user is\ndriving. Such kind of information is already being\ncollected\
    \ by Google maps and users are using it to\nroute around potentially congested\
    \ areas of the city.\n(2) Applications to ensure safety: smart transport does\n\
    not only imply managing traffic conditions. It also\nincludes safety of people\
    \ travelling in their vehicles,\nwhich up till now was mainly in the hands of\
    \ drivers.\nThere are many IoT applications developed to help\ndrivers become\
    \ safer drivers. Such applications mon-\nitor driving behavior of drivers and\
    \ help them drive\nsafely by detecting when they are feeling drowsy or\ntired\
    \ and helping them to cope with it or suggesting\nrest [87, 88]. Technologies\
    \ used in such applications\nare face detection, eye movement detection, and\n\
    pressure detection on the steering (to measure the\ngrip of the driver’s hands\
    \ on the steering).\nA smartphone application, which estimates the\ndriver’s driving\
    \ behavior using smartphone sensors\nsuch as the accelerometer, gyroscope, GPS,\
    \ and cam-\nera, has been proposed by Eren et al. [89]. It can\ndecide whether\
    \ the driving is safe or rash by analyzing\nthe sensor data.\n(3) Intelligent\
    \ parking management (see Figure 9): in a\nsmart transportation system, parking\
    \ is completely\nhassle free as one can easily check on the Internet to\nfind\
    \ out which parking lot has free spaces. Such lots\nuse sensors to detect if the\
    \ slots are free or occupied by\nvehicles. This data is then uploaded to a central\
    \ server.\n(4) Smart traffic lights: traffic lights equipped with sens-\ning,\
    \ processing, and communication capabilities are\ncalled smart traffic lights.\
    \ These lights sense the\ntraffic congestion at the intersection and the amount\n\
    of traffic going each way. This information can be\nanalyzed and then sent to\
    \ neighboring traffic lights\nor a central controller. It is possible to use this\n\
    information creatively. For example, in an emergency\nsituation the traffic lights\
    \ can preferentially give way\nto an ambulance. When the smart traffic light senses\n\
    an ambulance coming, it clears the path for it and\nalso informs neighboring lights\
    \ about it. Technologies\nused in these lights are cameras, communication tech-\n\
    nologies, and data analysis modules. Such systems\nhave already been deployed\
    \ in Rio De Janeiro.\n(5) Accident detection applications: a smartphone appli-\n\
    cation designed by White et al. [90] detects the occur-\nrence of an accident\
    \ with the help of an accelerometer\nand acoustic data. It immediately sends this\
    \ informa-\ntion along with the location to the nearest hospital.\nJournal of\
    \ Electrical and Computer Engineering\n19\nSome additional situational information\
    \ such as on-\nsite photographs is also sent so that the first respon-\nders know\
    \ about the whole scenario and the degree of\nmedical help that is required.\n\
    9.2.2. Smart Water Systems. Given the prevailing amount of\nwater scarcity in\
    \ most parts of the world, it is very important\nto manage our water resources\
    \ efficiently. As a result most\ncities are opting for smart solutions that place\
    \ a lot of meters\non water supply lines and storm drains. A good reference\n\
    in this area is the paper by Hauber-Davidson and Idris [91].\nThey describe various\
    \ designs for smart water meters. These\nmeters can be used to measure the degree\
    \ of water inflow and\noutflow and to identify possible leaks. Smart water metering\n\
    systems are also used in conjunction with data from weather\nsatellites and river\
    \ water sensors. They can also help us predict\nflooding.\n9.2.3. Examples of\
    \ Smart Cities. Barcelona and Stockholm\nstand out in the list of smart cities.\
    \ Barcelona has a CityOS\nproject, where it aims to create a single virtualized\
    \ OS for\nall the smart devices and services offered within the city.\nBarcelona\
    \ has mainly focused on smart transportation (as\ndiscussed in Section 9.2.1)\
    \ and smart water. Smart transporta-\ntion is implemented using a network of sensors,\
    \ centralized\nanalysis, and smart traffic lights. On similar lines Barcelona\n\
    has sensors on most of its storm drains, water storage tanks,\nand water supply\
    \ lines. This information is integrated with\nweather and usage information. The\
    \ result of all of this is\na centralized water planning strategy. The city is\
    \ able to\nestimate the water requirements in terms of domestic usage\nand industrial\
    \ usage and for activities such as landscaping and\ngardening.\nStockholm started\
    \ way back in 1994, and its first step in\nthis direction was to install an extensive\
    \ fiber optic system.\nSubsequently, the city added thousands of sensors for smart\n\
    traffic and smart water management applications. Stockholm\nwas one of the first\
    \ cities to implement congestion charging.\nUsers were charged money, when they\
    \ drove into congested\nareas. This was enabled by smart traffic technologies.\
    \ Since\nthe city has a solid network backbone, it is very easy to\ndeploy sensors\
    \ and applications. For example, recently the\ncity created a smart parking system,\
    \ where it is possible to\neasily locate parking spots nearby. Parking lots have\
    \ sensors,\nwhich let a server know about their usage. Once a driver\nqueries\
    \ the server with her/his GPS location, she/he is guided\nto the nearest parking\
    \ lot with free slots. Similar innovations\nhave taken place in the city’s smart\
    \ buildings, snow clearance,\nand political announcement systems.\n9.3. Social\
    \ Life and Entertainment. Social life and entertain-\nment play an important role\
    \ in an individual’s life. Many\napplications have been developed, which keep\
    \ track of such\nhuman activities. The term “opportunistic IoT” [92] refers\n\
    to information sharing among opportunistic devices (devices\nthat seek to make\
    \ contact with other devices) based on\nmovement and availability of contacts\
    \ in the vicinity. Personal\ndevices such as tablets, wearables, and mobile phones\
    \ have\nsensing and short range communication capabilities. People\ncan find and\
    \ interact with each other when there is a common\npurpose.\nCircle Sense [93]\
    \ is an application, which detects social\nactivities of a person with the help\
    \ of various types of sensor\ndata. It identifies the social circle of a person\
    \ by analyzing\nthe patterns of social activities and the people present in\n\
    those activities. Various types of social activities and the set\nof people participating\
    \ in those activities are identified. It\nuses location sensors to find out where\
    \ the person is and\nuses Bluetooth for searching people around her. The system\n\
    has built in machine learning algorithms, and it gradually\nimproves its behavior\
    \ with learning.\nAffective computing [94] is a technology, which recog-\nnizes,\
    \ understands, stimulates, and responds to the emotions\nof human beings. There\
    \ are many parameters, which are\nconsidered while dealing with human affects\
    \ such as facial\nexpressions, speech, body gestures, hand movements, and\nsleep\
    \ patterns. These are analyzed to figure out how a person\nis feeling. The utterance\
    \ of emotional keywords is identified\nby voice recognition and the quality of\
    \ voice by looking at\nacoustic features of speech.\nOne of the applications of\
    \ affective computing is Camy,\nan artificial pet dog [95], which is designed\
    \ to interact with\nhuman beings and show affection and emotions. Many sen-\n\
    sors and actuators are embedded in it. It provides emotional\nsupport to the owner,\
    \ encourages playful and active behavior,\nrecognizes its owner, and shows love\
    \ for her and increases\nthe owner’s communication with other people. Based on\
    \ the\nowner’s mood, Camy interacts with the owner and gives her\nsuggestions.\n\
    Logmusic [96] is an entertainment application, which\nrecommends music on the\
    \ basis of the context, such as the\nweather, temperature, time, and location.\n\
    9.4. Health and Fitness. IoT appliances have proven really\nbeneficial in the\
    \ health and wellness domains. Many wearable\ndevices are being developed, which\
    \ monitor a person’s health\ncondition (see Figure 10).\nHealth applications make\
    \ independent living possible for\nthe elderly and patients with serious health\
    \ conditions. Cur-\nrently, IoT sensors are being used to continuously monitor\n\
    and record their health conditions and transmit warnings in\ncase any abnormal\
    \ indicators are found. If there is a minor\nproblem, the IoT application itself\
    \ may suggest a prescription\nto the patient.\nIoT applications can be used in\
    \ creating an Electronic\nHealth Record (EHR), which is a record of all the medical\n\
    details of a person. It is maintained by the health system. An\nEHR can be used\
    \ to record allergies, surges in blood sugar\nand blood pressure.\nStress recognition\
    \ applications are also fairly popular\n[97]. They can be realized using smartphone\
    \ sensors. Wang\net al. describe an application [30], which measures the stress\n\
    level of a college student and is installed on the student’s\nsmartphone. It senses\
    \ the locations the student visits during\nthe whole day, the amount of physical\
    \ activity, amount of\nsleep and rest, and her/his interaction and relationships\
    \ with\nother people (audio data and calls). In addition, it also\nconducts surveys\
    \ with the student by randomly popping up\n20\nJournal of Electrical and Computer\
    \ Engineering\nSmart devices with sensors: connected to \ngateway device (e.g.,\
    \ a smartphone)\nUser/patient\nGet health information\nfrom cloud\nSend data to\
    \ and from cloud,\nPerforms some processing on data \nDatacenter\nPerforms data\
    \ analysis on\nmeasurements of sensors\nMonitor\nuser’s health\nAnalyze the \n\
    measure-\nments\nSend feedback \nto cloud/ \npatient\nFigure 10: Block diagram\
    \ of a smart healthcare system.\na question in the smartphone. Using all of this\
    \ data and\nanalyzing it intelligently, the level of stress and academic\nperformance\
    \ can be measured.\nIn the fitness sector, we have applications that monitor\n\
    how fit we are based on our daily activity level. Smartphone\naccelerometer data\
    \ can be used for activity detection by\napplying complex algorithms. For example,\
    \ we can measure\nthe number of steps taken and the amount of exercise done\n\
    by using fitness trackers. Fitness trackers are available in the\nmarket as wearables\
    \ to monitor the fitness level of an indi-\nvidual. In addition, gym apparatus\
    \ can be fitted with sensors\nto count the number of times an exercise is performed.\
    \ For\nexample, a smart mat [98] can count the number of exercise\nsteps performed\
    \ on it. This is implemented using pressure\nsensors on the mat and then by analyzing\
    \ the patterns of\npressure, and the shape of the contact area.\n9.5. Smart Environment\
    \ and Agriculture. Environmental\nparameters such as temperature and humidity\
    \ are important\nfor agricultural production. Sensors are used by farmers in\n\
    the field to measure such parameters and this data can be\nused for efficient\
    \ production. One application is automated\nirrigation according to weather conditions.\n\
    Production using greenhouses [99] is one of the main\napplications of IoT in agriculture.\
    \ Environmental parameters\nmeasured in terms of temperature, soil information,\
    \ and\nhumidity are measured in real time and sent to a server for\nanalysis.\
    \ The results are then used to improve crop quality and\nyield.\nPesticide residues\
    \ in crop production are detected using\nan Acetylcholinesterase biosensor [100].\
    \ This data is saved\nand analyzed for extracting useful information such as the\n\
    sample size, time, location, and amount of residues. We can\nJournal of Electrical\
    \ and Computer Engineering\n21\nthus maintain the quality of the crop. Moreover,\
    \ a QR code\ncan be used to uniquely identify a carton of farm produce.\nConsumers\
    \ can scan the QR code and check the amount\nof pesticides in it (via a centralized\
    \ database) online before\nbuying.\nAir pollution is an important concern today\
    \ because it is\nchanging the climate of the earth and degrading air quality.\n\
    Vehicles cause a lot of air pollution. An IoT application\nproposed by Manna et\
    \ al. [39] monitors air pollution on the\nroads. It also tracks vehicles that\
    \ cause an undue amount of\npollution. Electrochemical toxic gas sensors can also\
    \ be used\nto measure air pollution. Vehicles are identified by RFID tags.\nRFID\
    \ readers are placed on both sides of the road along with\nthe gas sensors. With\
    \ this approach it is possible to identify\nand take action against polluting\
    \ vehicles.\n9.6. Supply Chain and Logistics. IoT tries to simplify real\nworld\
    \ processes in business and information systems [101].\nThe goods in the supply\
    \ chain can be tracked easily from\nthe place of manufacture to the final places\
    \ of distribution\nusing sensor technologies such as RFID and NFC. Real\ntime\
    \ information is recorded and analyzed for tracking.\nInformation about the quality\
    \ and usability of the product can\nalso be saved in RFID tags attached with the\
    \ shipments.\nBo and Guangwen [102] explain an information transmis-\nsion system\
    \ for supply chain management, which is based\non the Internet of Things. RFID\
    \ tags uniquely identify a\nproduct automatically and a product information network\n\
    is created to transmit this information in real time along\nwith location information.\
    \ This system helps in automatic\ncollection and analysis of all the information\
    \ related to supply\nchain management, which may help examine past demand\nand\
    \ come up with a forecast of future demand. Supply chain\ncomponents can get access\
    \ to real time data and all of this\ninformation can be analyzed to get useful\
    \ insights. This will\nin the long run improve the performance of supply chain\n\
    systems.\n9.7. Energy Conservation. The smart grid is information and\ncommunication\
    \ technology enabled modern electricity gen-\neration, transmission, distribution,\
    \ and consumption system\n[103].\nTo make electric power generation, transmission,\
    \ and\ndistribution smart, the concept of smart grids adds intel-\nligence at\
    \ each step and also allows the two-way flow of\npower (back from the consumer\
    \ to the supplier). This can\nsave a lot of energy and help consumers better understand\n\
    the flow of power and dynamic pricing. In a smart grid,\npower generation is distributed.\
    \ There are sensors deployed\nthroughout the system to monitor everything. It\
    \ is actually a\ndistributed network of microgrids [104]. Microgrids generate\n\
    power to meet demands of local sites and transmit back\nthe surplus energy to\
    \ the central grid. Microgrids can also\ndemand energy from the central grid in\
    \ case of a shortfall.\nTwo-way flow of power also benefits consumers, who are\n\
    also using their own generated energy occasionally (say, solar,\nor wind power);\
    \ the surplus power can be transmitted back so\nthat it is not wasted. The user\
    \ will also get paid for that power.\nSome of the IoT applications in a smart\
    \ grid are online\nmonitoring of transmission lines for disaster prevention and\n\
    efficient use of power in smart homes by having a smart meter\nfor monitoring\
    \ energy consumption [105].\nSmart meters read and analyze consumption patterns\
    \ of\npower at regular and peak load times. This information is\nthen sent to\
    \ the server and also made available to the user. The\ngeneration is then set\
    \ according to the consumption patterns.\nIn addition, the user can adjust her/his\
    \ use so as to reduce\ncosts. Smart power appliances can leverage this information\n\
    and operate when the prices are low.\n10. Design Considerations in an IoT System\n\
    Now, that we have profiled most of the IoT technologies, let\nus look at some\
    \ of the design considerations for designing a\npractical IoT network.\nThe first\
    \ consideration is the design of the sensors. Even\nthough there might not be\
    \ much of a choice regarding\nthe sensors, there is definitely a lot of choice\
    \ regarding\nthe processing and networking capabilities that are bundled\nalong\
    \ with the sensors. Our choices range from small sub-\nmW boards meant for sensor\
    \ motes to Arduino or Atom\nboards that consume 300–500 mW of power. This choice\n\
    depends on the degree of analytics and data preprocessing\nthat we want to perform\
    \ at the sensor itself. Secondly, there\nis an issue of logistics also. To create\
    \ a sub-mW board, we\nneed board design expertise, and this might not be readily\n\
    available. Hence, it might be advisable to bundle a sensor with\ncommercially\
    \ available embedded processor kits.\nThe next important consideration is communication.\
    \ In\nIoT nodes, power is the most dominant issue. The power\nrequired to transmit\
    \ and receive messages is a major fraction\nof the overall power, and as a result\
    \ a choice of the networking\ntechnology is vital. The important factors that\
    \ we need\nto consider are the distance between the sender and the\nreceiver,\
    \ the nature of obstacles, signal distortion, ambient\nnoise, and governmental\
    \ regulations. Based on these key\nfactors, we need to choose a given wireless\
    \ networking\nprotocol. For example, if we just need to communicate\ninside a\
    \ small building, we can use Zigbee, whereas if we\nneed communication in a smart\
    \ city, we should choose\nSigfox or LoraWAN. In addition, often there are significant\n\
    constraints on the frequency and the power that can be spent\nin transmission.\
    \ These limitations are mainly imposed by\ngovernment agencies. An apt decision\
    \ needs to be made by\ntaking all of these factors into account.\nLet us then\
    \ come to the middleware. The first choice that\nneeds to be made is to choose\
    \ between an open source mid-\ndleware such as FiWare or a proprietary solution.\
    \ There are\npros and cons of both. It is true that open source middleware\nis\
    \ in theory more flexible; however, they may have limited\nsupport for IoT devices.\
    \ We ideally want a middleware\nsolution to interoperate with all kinds of communication\n\
    protocols and devices; however, that might not be the case.\nHence, if we need\
    \ strict compatibility with certain devices and\nprotocols, a proprietary solution\
    \ is better. Nevertheless, open\nsource offerings have cost advantages and are\
    \ sometimes\neasier to deploy. We also need to choose the communication\n22\n\
    Journal of Electrical and Computer Engineering\nprotocol and ensure that it is\
    \ compatible with the firewalls\nin the organizations involved. In general choosing\
    \ a protocol\nbased on HTTP is the best from this point of view. We also\nneed\
    \ to choose between TCP and UDP. UDP is always better\nfrom the point of view\
    \ of power consumption. Along with\nthese considerations, we also need to look\
    \ at options to store\nsensor data streams, querying languages, and support for\n\
    generating dynamic alerts.\nFinally, let us consider the application layer. Most\
    \ IoT\nframeworks provide significant amount of support for cre-\nating the application\
    \ layer. This includes data mining, data\nprocessing, and visualization APIs.\
    \ Creating mashups and\ndashboards of data is nowadays very easy to do given the\n\
    extensive support provided by IoT frameworks. Nevertheless,\nhere the tradeoff\
    \ is between the features provided and the\nresources that are required. We do\
    \ not need a very heavy\nframework if we do not desire a lot of features. This\
    \ call needs\nto be taken by the application developers.\n11. Conclusion\nIn this\
    \ survey paper we presented a survey of the current\ntechnologies used in the\
    \ IoT domain as of 2016. Currently,\nthis field is in a very nascent stage. The\
    \ technologies in\nthe core infrastructure layers are showing signs of maturity.\n\
    However, a lot more needs to happen in the areas of IoT\napplications and communication\
    \ technologies. These fields\nwill definitely mature and impact human life in\
    \ inconceivable\nways over the next decade.\nCompeting Interests\nThe authors\
    \ declare that there is no conflict of interests\nregarding the publication of\
    \ this paper.\nReferences\n[1] O. Vermesan, P. Friess, P. Guillemin et al., “Internet\
    \ of things\nstrategic research roadmap,” in Internet of Things: Global Tech-\n\
    nological and Societal Trends, vol. 1, pp. 9–52, 2011.\n[2] I. Pe˜na-L´opez, Itu\
    \ Internet Report 2005: The Internet of Things,\n2005.\n[3] I. Mashal, O. Alsaryrah,\
    \ T.-Y. Chung, C.-Z. Yang, W.-H. Kuo,\nand D. P. Agrawal, “Choices for interaction\
    \ with things on Inter-\nnet and underlying issues,” Ad Hoc Networks, vol. 28,\
    \ pp. 68–\n90, 2015.\n[4] O. Said and M. Masud, “Towards internet of things: survey\
    \ and\nfuture vision,” International Journal of Computer Networks, vol.\n5, no.\
    \ 1, pp. 1–17, 2013.\n[5] M. Wu, T.-J. Lu, F.-Y. Ling, J. Sun, and H.-Y. Du, “Research\n\
    on the architecture of internet of things,” in Proceedings of the\n3rd International\
    \ Conference on Advanced Computer Theory and\nEngineering (ICACTE ’10), vol. 5,\
    \ pp. V5-484–V5-487, IEEE,\nChengdu, China, August 2010.\n[6] R. Khan, S. U. Khan,\
    \ R. Zaheer, and S. Khan, “Future internet:\nthe internet of things architecture,\
    \ possible applications and key\nchallenges,” in Proceedings of the 10th International\
    \ Conference\non Frontiers of Information Technology (FIT ’12), pp. 257–260,\n\
    December 2012.\n[7] H. Ning and Z. Wang, “Future internet of things architecture:\n\
    like mankind neural system or social organization framework?”\nIEEE Communications\
    \ Letters, vol. 15, no. 4, pp. 461–463, 2011.\n[8] M. Weyrich and C. Ebert, “Reference\
    \ architectures for the\ninternet of things,” IEEE Software, vol. 33, no. 1, pp.\
    \ 112–116, 2016.\n[9] J. Gubbi, R. Buyya, S. Marusic, and M. Palaniswami, “Internet\n\
    of Things (IoT): a vision, architectural elements, and future\ndirections,” Future\
    \ Generation Computer Systems, vol. 29, no. 7,\npp. 1645–1660, 2013.\n[10] F.\
    \ Bonomi, R. Milito, P. Natarajan, and J. Zhu, “Fog computing:\na platform for\
    \ internet of things and analytics,” in Big Data and\nInternet of Things: A Road\
    \ Map for Smart Environments, pp. 169–\n186, Springer, Berlin, Germany, 2014.\n\
    [11] F. Bonomi, R. Milito, J. Zhu, and S. Addepalli, “Fog computing\nand its role\
    \ in the internet of things,” in Proceedings of the 1st\nACM MCC Workshop on Mobile\
    \ Cloud Computing, pp. 13–16,\n2012.\n[12] I. Stojmenovic and S. Wen, “The fog\
    \ computing paradigm:\nscenarios and security issues,” in Proceedings of the Federated\n\
    Conference on Computer Science and Information Systems (Fed-\nCSIS ’14), pp. 1–8,\
    \ IEEE, Warsaw, Poland, September 2014.\n[13] M. Aazam and E.-N. Huh, “Fog computing\
    \ and smart gateway\nbased communication for cloud of things,” in Proceedings\
    \ of the\n2nd IEEE International Conference on Future Internet of Things\nand\
    \ Cloud (FiCloud ’14), pp. 464–470, Barcelona, Spain, August\n2014.\n[14] L. Atzori,\
    \ A. Iera, and G. Morabito, “SIoT: giving a social struc-\nture to the internet\
    \ of things,” IEEE Communications Letters,\nvol. 15, no. 11, pp. 1193–1195, 2011.\n\
    [15] M. Swan, “Sensor mania! The internet of things, wearable\ncomputing, objective\
    \ metrics, and the quantified self 2.0,” Jour-\nnal of Sensor and Actuator Networks,\
    \ vol. 1, no. 3, pp. 217–253,\n2012.\n[16] N. D. Lane, E. Miluzzo, H. Lu, D. Peebles,\
    \ T. Choudhury, and A.\nT. Campbell, “A survey of mobile phone sensing,” IEEE\
    \ Com-\nmunications Magazine, vol. 48, no. 9, pp. 140–150, 2010.\n[17] L. Atzori,\
    \ A. Iera, and G. Morabito, “The Internet of Things: a\nsurvey,” Computer Networks,\
    \ vol. 54, no. 15, pp. 2787–2805, 2010.\n[18] A. Whitmore, A. Agarwal, and L.\
    \ Da Xu, “The internet of\nthings—a survey of topics and trends,” Information\
    \ Systems\nFrontiers, vol. 17, no. 2, pp. 261–274, 2015.\n[19] D. Zeng, S. Guo,\
    \ and Z. Cheng, “The web of things: a survey,”\nJournal of Communications, vol.\
    \ 6, no. 6, pp. 424–438, 2011.\n[20] S. Bandyopadhyay, M. Sengupta, S. Maiti,\
    \ and S. Dutta, “Role\nof middleware for internet of things: a study ,” International\n\
    Journal of Computer Science & Engineering Survey, vol. 2, no.\n3, pp. 94–105,\
    \ 2011.\n[21] J. Soldatos, N. Kefalakis, M. Hauswirth et al., “Openiot: open\n\
    source internet of-things in the cloud,” in Interoperability and\nOpen-Source\
    \ Solutions for the Internet of Things: International\nWorkshop, FP7 OpenIoT Project,\
    \ Held in Conjunction with Soft-\nCOM 2014, Split, Croatia, September 18, 2014,\
    \ Invited Papers, vol.\n9001 of Lecture Notes in Computer Science, pp. 13–25,\
    \ Springer,\nBerlin, Germany, 2015.\n[22] A. Ranganathan, J. Al-Muhtadi, S. Chetan,\
    \ R. Campbell, and\nM. D. Mickunas, “Middlewhere: a middleware for location\n\
    awareness in ubiquitous computing applications,” in ACM/IFIP/\nUSENIX International\
    \ Conference on Distributed Systems Plat-\nforms and Open Distributed Processing\
    \ Middleware 2004, pp.\n397–416, Springer, New York, NY, USA, 2004.\nJournal of\
    \ Electrical and Computer Engineering\n23\n[23] M. Eisenhauer, P. Rosengren, and\
    \ P. Antolin, “A development\nplatform for integrating wireless devices and sensors\
    \ into ambi-\nent intelligence systems,” in Proceedings of the 6th IEEE Annual\n\
    Communications Society Conference on Sensor, Mesh and Ad Hoc\nCommunications and\
    \ Networks Workshops (SECON Workshops\n’09), pp. 1–3, IEEE, Rome, Italy, June\
    \ 2009.\n[24] T. Zahariadis, A. Papadakis, F. Alvarez et al., “FIWARE lab:\nmanaging\
    \ resources and services in a cloud federation support-\ning future internet applications,”\
    \ in Proceedings of the 7th IEEE/\nACM International Conference on Utility and\
    \ Cloud Computing\n(UCC ’14), pp. 792–799, IEEE, London, UK, December 2014.\n\
    [25] A. Schmidt and K. Van Laerhoven, “How to build smart\nappliances?” IEEE Personal\
    \ Communications, vol. 8, no. 4, pp.\n66–71, 2001.\n[26] W. Z. Khan, Y. Xiang,\
    \ M. Y. Aalsalem, and Q. Arshad, “Mobile\nphone sensing systems: a survey,” IEEE\
    \ Communications Sur-\nveys & Tutorials, vol. 15, no. 1, pp. 402–427, 2013.\n\
    [27] Accelerometers, Chris Woodford, http://www.explainthatstuff\n.com/accelerometers.html.\n\
    [28] How Do Global Positioning Systems, or GPS, Work?, 2005,\nhttps://www.nasa.gov/audience/foreducators/topnav/materials/\n\
    listbytype/How Do Global Positioning Systems.html#\n.VmxoY5Ph5z0.\n[29] A. Anjum\
    \ and M. U. Ilyas, “Activity recognition using smart-\nphone sensors,” in Proceedings\
    \ of the IEEE 10th Consumer Com-\nmunications and Networking Conference (CCNC\
    \ ’13), pp. 914–\n919, Las Vegas, Nev, USA, January 2013.\n[30] R. Wang, F. Chen,\
    \ Z. Chen et al., “Studentlife: assessing mental\nhealth, academic performance\
    \ and behavioral trends of college\nstudents using smartphones,” in Proceedings\
    \ of the ACM Inter-\nnational Joint Conference on Pervasive and Ubiquitous Com-\n\
    puting (UbiComp ’14), pp. 3–14, Seattle, Wash, USA, September\n2014.\n[31] F.\
    \ J. McClernon and R. R. Choudhury, “I am your smartphone,\nand i know you are\
    \ about to smoke: the application of mobile\nsensing and computing approaches\
    \ to smoking research and\ntreatment,” Nicotine and Tobacco Research, vol. 15,\
    \ no. 10, pp.\n1651–1654, 2013.\n[32] L. Pei, R. Guinness, R. Chen et al., “Human\
    \ behavior cognition\nusing smartphone sensors,” Sensors, vol. 13, no. 2, pp.\
    \ 1402–1424,\n2013.\n[33] N. Bui and M. Zorzi, “Health care applications: a solution\n\
    based on the internet of things,” in Proceedings of the 4th Inter-\nnational Symposium\
    \ on Applied Sciences in Biomedical and Com-\nmunication Technologies (ISABEL\
    \ ’11), ACM, Barcelona, Spain,\nOctober 2011.\n[34] M. J. McGrath and C. N. Scanaill,\
    \ “Body-worn, ambient, and\nconsumer sensing for health applications,” in Sensor\
    \ Technolo-\ngies, pp. 181–216, Springer, 2013.\n[35] A. Pantelopoulos and N.\
    \ G. Bourbakis, “A survey on wearable\nsensor-based systems for health monitoring\
    \ and prognosis,”\nIEEE Transactions on Systems, Man and Cybernetics Part C:\n\
    Applications and Reviews, vol. 40, no. 1, pp. 1–12, 2010.\n[36] J. H. Gruzelier,\
    \ “EEG-neurofeedback for optimising perfor-\nmance. I: a review of cognitive and\
    \ affective outcome in healthy\nparticipants,” Neuroscience and Biobehavioral\
    \ Reviews, vol. 44,\npp. 124–141, 2014.\n[37] P. K. Sekhar, E. L. Brosha, R. Mukundan,\
    \ and F. H. Garzon,\n“Chemical sensors for environmental monitoring and home-\n\
    land security,” The Electrochemical Society Interface, vol. 19, no.\n4, pp. 35–40,\
    \ 2010.\n[38] N. Bhattacharyya and R. Bandhopadhyay, “Electronic nose\nand electronic\
    \ tongue,” in Nondestructive Evaluation of Food\nQuality, pp. 73–100, Springer,\
    \ Berlin, Germany, 2010.\n[39] S. Manna, S. S. Bhunia, and N. Mukherjee, “Vehicular\
    \ pollution\nmonitoring using IoT,” in International Conference on Recent\nAdvances\
    \ and Innovations in Engineering, ICRAIE 2014, ind,\nMay 2014.\n[40] R. Want,\
    \ “An introduction to RFID technology,” IEEE Pervasive\nComputing, vol. 5, no.\
    \ 1, pp. 25–33, 2006.\n[41] X. Zhu, S. K. Mukhopadhyay, and H. Kurata, “A review\
    \ of\nRFID technology and its managerial applications in different\nindustries,”\
    \ Journal of Engineering and Technology Management,\nvol. 29, no. 1, pp. 152–167,\
    \ 2012.\n[42] E. Welbourne, L. Battle, G. Cole et al., “Building the internet\n\
    of things using RFID: the RFID ecosystem experience,” IEEE\nInternet Computing,\
    \ vol. 13, no. 3, pp. 48–55, 2009.\n[43] M. Yannuzzi, R. Milito, R. Serral-Gracia,\
    \ D. Montero, and M.\nNemirovsky, “Key ingredients in an IoT recipe: fog computing,\n\
    cloud computing, and more fog computing,” in Proceedings\nof the IEEE 19th International\
    \ Workshop on Computer Aided\nModeling and Design of Communication Links and Networks\n\
    (CAMAD ’14), pp. 325–329, Athens, Greece, December 2014.\n[44] H. T. Dinh, C.\
    \ Lee, D. Niyato, and P. Wang, “A survey of mobile\ncloud computing: architecture,\
    \ applications, and approaches,”\nWireless Communications and Mobile Computing,\
    \ vol. 13, no. 18,\npp. 1587–1611, 2013.\n[45] I. Stojmenovic, “Fog computing:\
    \ a cloud to the ground support\nfor smart things and machine-to-machine networks,”\
    \ in Pro-\nceedings of the Australasian Telecommunication Networks and\nApplications\
    \ Conference (ATNAC ’14), pp. 117–122, Melbourne,\nAustralia, November 2014.\n\
    [46] M. Aazam, P. P. Hung, and E.-N. Huh, “Smart gateway based\ncommunication\
    \ for cloud of things,” in Proceedings of the 9th\nIEEE International Conference\
    \ on Intelligent Sensors, Sensor\nNetworks and Information Processing (IEEE ISSNIP\
    \ ’14), IEEE,\nApril 2014.\n[47] P. Agrawal and S. Bhuraria, “Near field communication,”\
    \ SET-\nLabs Bridfings, vol. 10, no. 1, pp. 67–74, 2012.\n[48] V. Coskun, B. Ozdenizci,\
    \ and K. Ok, “A survey on near field\ncommunication (NFC) technology,” Wireless\
    \ Personal Commu-\nnications, vol. 71, no. 3, pp. 2259–2294, 2013.\n[49] K. Curran,\
    \ A. Millar, and C. Mc Garvey, “Near Field Com-\nmunication,” International Journal\
    \ of Electrical and Computer\nEngineering (IJECE), vol. 2, no. 3, 2012.\n[50]\
    \ Z. Sheng, S. Yang, Y. Yu, A. Vasilakos, J. Mccann, and K.\nLeung, “A survey\
    \ on the ietf protocol suite for the internet of\nthings: standards, challenges,\
    \ and opportunities,” IEEE Wireless\nCommunications, vol. 20, no. 6, pp. 91–98,\
    \ 2013.\n[51] J. P. Vasseur and A. Dunkels, “Ip for smart objects,” White Paper\n\
    1, IPSO Alliance, 2008.\n[52] D. Culler and S. Chakrabarti, “6lowpan: incorporating\
    \ IEEE\n802.15. 4 into the IP architecture, IPSO Alliance,” White Paper,\n2009.\n\
    [53] J. Vasseur, N. Agarwal, J. Hui, Z. Shelby, P. Bertrand, and C.\nChauvenet,\
    \ “Rpl: the ip routing protocol designed for low power\nand lossy networks,” Internet\
    \ Protocol for Smart Objects (IPSO)\nAlliance 36, 2011.\n[54] J. P. Vasseur, C.\
    \ P. Bertrand, B. Aboussouan et al., “A survey of\nseveral low power link layers\
    \ for IP smart objects,” White Paper,\nIPSO Alliance, 2010.\n24\nJournal of Electrical\
    \ and Computer Engineering\n[55] J. W. Hui and D. E. Culler, “Extending IP to\
    \ low-power, wireless\npersonal area networks,” IEEE Internet Computing, vol.\
    \ 12, no.\n4, pp. 37–45, 2008.\n[56] W. Colitti, K. Steenhaut, N. De Caro, B.\
    \ Buta, and V. Dobrota,\n“Evaluation of constrained application protocol for wireless\n\
    sensor networks,” in Proceedings of the 18th IEEE Workshop on\nLocal and Metropolitan\
    \ Area Networks (LANMAN ’11), pp. 1–6,\nIEEE, Chapel Hill, NC, USA, October 2011.\n\
    [57] Z. Shelby, K. Hartke, and C. Bormann, “The constrained\napplication protocol\
    \ (CoAP),” Tech. Rep., IETF, 2014.\n[58] B. C. Villaverde, D. Pesch, R. De Paz\
    \ Alberola, S. Fedor, and\nM. Boubekeur, “Constrained application protocol for\
    \ low power\nembedded networks: a survey,” in Proceedings of the 6th Interna-\n\
    tional Conference on Innovative Mobile and Internet Services in\nUbiquitous Computing\
    \ (IMIS ’12), pp. 702–707, Palermo, Italy,\nJuly 2012.\n[59] D. Locke, “MQ telemetry\
    \ transport (MQTT) v3. 1 protocol\nspecification,” IBM developerWorks Technical\
    \ Library, 2010,\nhttp://www.ibm.com/developerworks/webservices/library/ws-\n\
    mqtt/index.html.\n[60] U. Hunkeler, H. L. Truong, and A. Stanford-Clark, “MQTT-S—\n\
    a publish/subscribe protocol for wireless sensor networks,” in\nProceedings of\
    \ the 3rd IEEE/Create-Net International Conference\non Communication System Software\
    \ and Middleware (COM-\nSWARE ’08), pp. 791–798, Bangalore, India, January 2008.\n\
    [61] A. Stanford-Clark and H. Linh Truon, “MQTT for sensor\nnetworks (MQTT-S)\
    \ protocol specification,” International Busi-\nness Machines Corporation Version\
    \ 1, 2008.\n[62] C. Gomez, J. Oller, and J. Paradells, “Overview and evaluation\n\
    of bluetooth low energy: an emerging low-power wireless\ntechnology,” Sensors,\
    \ vol. 12, no. 9, pp. 11734–11753, 2012.\n[63] K.-H. Chang, “Bluetooth: a viable\
    \ solution for IoT? [Industry\nPerspectives],” IEEE Wireless Communications, vol.\
    \ 21, no. 6, pp.\n6–7, 2014.\n[64] C. F. Hughes, Bluetooth low energy [Ph.D. thesis],\
    \ Arizona State\nUniversity, 2015.\n[65] M. Siekkinen, M. Hiienkari, J. K. Nurminen,\
    \ and J. Nieminen,\n“How low energy is bluetooth low energy? Comparative mea-\n\
    surements with ZigBee/802.15.4,” in Proceedings of the IEEE\nWireless Communications\
    \ and Networking Conference Work-\nshops (WCNCW ’12), pp. 232–237, Paris, France,\
    \ April 2012.\n[66] B. Shanmuga Sundaram, “A quantitative analysis of 802.11ah\n\
    wireless standard,” International Journal of Latest Research in\nEngineering and\
    \ Technology, vol. 2, 2016.\n[67] W. Sun, M. Choi, and S. Choi, “Ieee 802.11 ah:\
    \ a long range 802.11\nwlan at sub 1 ghz,” Journal of ICT Standardization, vol.\
    \ 1, no. 1,\npp. 83–108, 2013.\n[68] P. Baronti, P. Pillai, V. W. C. Chook, S.\
    \ Chessa, A. Gotta, and Y.\nF. Hu, “Wireless sensor networks: a survey on the\
    \ state of the\nart and the 802.15.4 and ZigBee standards,” Computer Commu-\n\
    nications, vol. 30, no. 7, pp. 1655–1695, 2007.\n[69] H. Liu, M. Bolic, A. Nayak,\
    \ and I. Stojmenovi´c, “Taxonomy\nand challenges of the integration of RFID and\
    \ wireless sensor\nnetworks,” IEEE Network, vol. 22, no. 6, pp. 26–32, 2008.\n\
    [70] A. Mitrokotsa and C. Douligeris, “Integrated RFID and sensor\nnetworks: architectures\
    \ and applications,” in RFID and Sensor\nNetworks: Architectures, Protocols, Security\
    \ and Integrations, pp.\n511–535, Auerbach Publications, 2009.\n[71] M. A. Chaqfeh\
    \ and N. Mohamed, “Challenges in middleware\nsolutions for the internet of things,”\
    \ in Proceedings of the\n13th International Conference on Collaboration Technologies\
    \ and\nSystems (CTS ’12), pp. 21–26, Denver, Colo, USA, May 2012.\n[72] M. A.\
    \ Razzaque, M. Milojevic-Jevric, A. Palade, and S. Cla,\n“Middleware for internet\
    \ of things: a survey,” IEEE Internet of\nThings Journal, vol. 3, no. 1, pp. 70–95,\
    \ 2016.\n[73] Z. Song, A. A. C´ardenas, and R. Masuoka, “Semantic mid-\ndleware\
    \ for the internet of things,” in Proceedings of the 2nd\nInternational Internet\
    \ of Things Conference (IoT ’10), December\n2010.\n[74] A. Katasonov, O. Kaykova,\
    \ O. Khriyenko, S. Nikitin, and\nV. Terziyan, “Smart semantic middleware for the\
    \ internet of\nthings,” in Proceedings of the 5th International Conference on\n\
    Informatics in Control, Automation and Robotics (ICINCO ’08),\npp. 169–178, Funchal,\
    \ Portugal, May 2008.\n[75] D. J. Cook, M. Youngblood, E. O. Heierman III et al.,\n\
    “MavHome: an agent-based smart home,” in Proceedings of the\n1st IEEE International\
    \ Conference on Pervasive Computing and\nCommunications (PerCom ’03), pp. 521–524,\
    \ March 2003.\n[76] S. K. Das, D. J. Cook, A. Bhattacharya, E. O. Heierman III,\
    \ and\nT.-Y. Lin, “The role of prediction algorithms in the MavHome\nsmart home\
    \ architecture,” IEEE Wireless Communications, vol.\n9, no. 6, pp. 77–84, 2002.\n\
    [77] D.-M. Han and J.-H. Lim, “Design and implementation of smart\nhome energy\
    \ management systems based on ZigBee,” IEEE\nTransactions on Consumer Electronics,\
    \ vol. 56, no. 3, pp. 1417–\n1425, 2010.\n[78] N. Noury, T. Herv´e, V. Rialle\
    \ et al., “Monitoring behavior\nin home using a smart fall sensor and position\
    \ sensors,” in\nProceedings of the 1st Annual International IEEE-EMBS Special\n\
    Topic Conference on Microtechnologies in Medicine and Biology\n(MMB ’00), pp.\
    \ 607–610, Lyon, France, October 2000.\n[79] A. Sixsmith and N. Johnson, “A smart\
    \ sensor to detect the falls\nof the elderly,” IEEE Pervasive Computing, vol.\
    \ 3, no. 2, pp. 42–\n47, 2004.\n[80] M. Yu, A. Rhuma, S. M. Naqvi, L. Wang, and\
    \ J. Chambers, “A\nposture recognition-based fall detection system for monitoring\n\
    an elderly person in a smart home environment,” IEEE Trans-\nactions on Information\
    \ Technology in Biomedicine, vol. 16, no. 6,\npp. 1274–1286, 2012.\n[81] W. Keith\
    \ Edwards and R. E. Grinter, “At home with ubiquitous\ncomputing: seven challenges,”\
    \ in Ubicomp 2001: Ubiquitous\nComputing, pp. 256–272, Springer, 2001.\n[82] R.\
    \ J. Robles and T.-H. Kim, “A Review on security in smart\nhome development,”\
    \ International Journal of Smart Home, vol.\n15, 2010.\n[83] R. J. Robles, T.-H.\
    \ Kim, D. Cook, and S. Das, “A review on\nsecurity in smart home development,”\
    \ International Journal of\nAdvanced Science and Technology, vol. 15, 2010.\n\
    [84] G. Dimitrakopoulos, “Intelligent transportation systems based\non internet-connected\
    \ vehicles: fundamental research areas and\nchallenges,” in Proceedings of the\
    \ 11th International Conference\non ITS Telecommunications (ITST ’11), pp. 145–151,\
    \ IEEE, Saint\nPetersburg, Russia, August 2011.\n[85] S.-H. Yu, J.-W. Hsieh, Y.-S.\
    \ Chen, and W.-F. Hu, “An automatic\ntraffic surveillance system for vehicle tracking\
    \ and classifica-\ntion,” in Image Analysis, pp. 379–386, Springer, 2003.\n[86]\
    \ M. Lv, L. Chen, G. Chen, and D. Zhang, “Detecting traffic\ncongestions using\
    \ cell phone accelerometers,” in Proceedings of\nthe International Joint Conference\
    \ on Pervasive and Ubiquitous\nComputing (UbiComp ’14), pp. 107–110, Seattle,\
    \ Wash, USA,\nSeptember 2014.\n[87] W. Hu, X. Hu, J.-Q. Deng et al., “Mood-fatigue\
    \ analyzer: towards\ncontext-aware mobile sensing applications for safe driving,”\n\
    Journal of Electrical and Computer Engineering\n25\nin Proceedings of the 1st\
    \ ACM Workshop on Middleware for\nContext-Aware Applications in the IoT (M4IOT\
    \ ’14), pp. 19–24,\nACM, Bordeaux, France, December 2014.\n[88] H. Singh, J. S.\
    \ Bhatia, and J. Kaur, “Eye tracking based driver\nfatigue monitoring and warning\
    \ system,” in Proceedings of the\nIndia International Conference on Power Electronics\
    \ (IICPE ’10),\npp. 1–6, New Delhi, India, January 2011.\n[89] H. Eren, S. Makinist,\
    \ E. Akin, and A. Yilmaz, “Estimating\ndriving behavior by a smartphone,” in Proceedings\
    \ of the IEEE\nIntelligent Vehicles Symposium (IV ’12), pp. 234–239, Madrid,\n\
    Spain, June 2012.\n[90] J. White, C. Thompson, H. Turner, B. Dougherty, and D.\
    \ C.\nSchmidt, “WreckWatch: automatic traffic accident detection\nand notification\
    \ with smartphones,” Mobile Networks and Appli-\ncations, vol. 16, no. 3, pp.\
    \ 285–303, 2011.\n[91] G. Hauber-Davidson and E. Idris, “Smart water metering,”\n\
    Water, vol. 33, no. 3, pp. 56–59, 2006.\n[92] B. Guo, D. Zhang, Z. Wang, Z. Yu,\
    \ and X. Zhou, “Opportunistic\nIoT: Exploring the harmonious interaction between\
    \ human\nand the internet of things,” Journal of Network and Computer\nApplications,\
    \ vol. 36, no. 6, pp. 1531–1539, 2013.\n[93] G. Liang, J. Cao, and W. Zhu, “CircleSense:\
    \ a pervasive comput-\ning system for recognizing social activities,” in Proceedings\
    \ of the\n11th IEEE International Conference on Pervasive Computing and\nCommunications\
    \ (PerCom ’13), pp. 201–206, IEEE, San Diego,\nCalif, USA, March 2013.\n[94] R.\
    \ W. Picard and R. Picard, Affective Computing, vol. 252, MIT\nPress, Cambridge,\
    \ UK, 1997.\n[95] Y.-K. Row and T.-J. Nam, “CAMY: applying a pet dog analogy\n\
    to everyday ubicomp products,” in Proceedings of the ACM\nInternational Joint\
    \ Conference on Pervasive and Ubiquitous\nComputing (UbiComp ’14), pp. 63–74,\
    \ Seattle, Wash, USA,\nSeptember 2014.\n[96] M. Lee and J.-D. Cho, “Logmusic:\
    \ context-based social music\nrecommendation service on mobile device,” in Proceedings\
    \ of\nthe ACM International Joint Conference on Pervasive and Ubiq-\nuitous Computing\
    \ (UbiComp ’14), pp. 95–98, Seattle, Wash,\nUSA, September 2014.\n[97] K. Frank,\
    \ P. Robertson, M. Gross, and K. Wiesner, “Sensor-\nbased identification of human\
    \ stress levels,” in Proceedings of\nthe IEEE International Conference on Pervasive\
    \ Computing and\nCommunications Workshops (PerCom Workshops ’13), pp. 127–\n132,\
    \ San Diego, Calif, USA, March 2013.\n[98] M. Sundholm, J. Cheng, B. Zhou, A.\
    \ Sethi, and P. Lukowicz,\n“Smart-mat: recognizing and counting gym exercises\
    \ with low-\ncost resistive pressure sensing matrix,” in Proceedings of the\n\
    ACM International Joint Conference on Pervasive and Ubiq-\nuitous Computing (UbiComp\
    \ ’14), pp. 373–382, Seattle, Wash,\nUSA, September 2014.\n[99] J.-C. Zhao, J.-F.\
    \ Zhang, Y. Feng, and J.-X. Guo, “The study\nand application of the IOT technology\
    \ in agriculture,” in Pro-\nceedings of the 3rd IEEE International Conference\
    \ on Computer\nScience and Information Technology (ICCSIT ’10), pp. 462–465,\n\
    Chengdu, China, July 2010.\n[100] G. Zhao, Y. Guo, X. Sun, and X. Wang, “A system\
    \ for pesticide\nresidues detection and agricultural products traceability based\n\
    on acetylcholinesterase biosensor and internet of things,” Inter-\nnational Journal\
    \ of Electrochemical Science, vol. 10, no. 4, pp.\n3387–3399, 2015.\n[101] P.\
    \ Ferreira, R. Martinho, and D. Domingos, “Iot-aware business\nprocesses for logistics:\
    \ limitations of current approaches,” in\nProceedings of the Inforum Conference,\
    \ vol. 3, pp. 612–613, 2010.\n[102] Y. Bo and H. Guangwen, “Supply chain information\
    \ transmis-\nsion based on RFID and internet of things,” in Proceedings\nof the\
    \ Second ISECS International Colloquium on Computing,\nCommunication, Control,\
    \ and Management (CCCM ’09), pp.\n166–169, Sanya, China, August 2009.\n[103] S.\
    \ Karnouskos, “The cooperative internet of things enabled\nsmart grid,” in Proceedings\
    \ of the 14th IEEE International Sym-\nposium on Consumer Electronics (ISCE ’10),\
    \ pp. 7–10, June 2010.\n[104] H. Farhangi, “The path of the smart grid,” IEEE\
    \ Power and\nEnergy Magazine, vol. 8, no. 1, pp. 18–28, 2010.\n[105] J. Liu, X.\
    \ Li, X. Chen, Y. Zhen, and L. Zeng, “Applications of\ninternet of things on smart\
    \ grid in China,” in Proceedings of\nthe 13th International Conference on Advanced\
    \ Communication\nTechnology: Smart Service Innovation through Mobile Interactiv-\n\
    ity (ICACT ’11), pp. 13–17, February 2011.\nInternational Journal of\nAerospace\n\
    Engineering\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\n\
    Robotics\nJournal of\nHindawi Publishing Corporation\nhttp://www.hindawi.com\n\
    Volume 2014\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\n\
    \ Active and Passive  \nElectronic Components\nControl Science\nand Engineering\n\
    Journal of\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\n\
    \ International Journal of\n Rotating\nMachinery\nHindawi Publishing Corporation\n\
    http://www.hindawi.com\nVolume 2014\nHindawi Publishing Corporation \nhttp://www.hindawi.com\n\
    \ Journal of\nEngineering\nVolume 2014\nSubmit your manuscripts at\nhttps://www.hindawi.com\n\
    VLSI Design\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\n\
    Hindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\nShock and\
    \ Vibration\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\n\
    Civil Engineering\nAdvances in\nAcoustics and Vibration\nAdvances in\nHindawi\
    \ Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\nHindawi Publishing\
    \ Corporation\nhttp://www.hindawi.com\nVolume 2014\nElectrical and Computer \n\
    Engineering\nJournal of\nAdvances in\nOptoElectronics\nHindawi Publishing Corporation\
    \ \nhttp://www.hindawi.com\nVolume 2014\nThe Scientific \nWorld Journal\nHindawi\
    \ Publishing Corporation \nhttp://www.hindawi.com\nVolume 2014\nSensors\nJournal\
    \ of\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\nModelling\
    \ & \nSimulation \nin Engineering\nHindawi Publishing Corporation \nhttp://www.hindawi.com\n\
    Volume 2014\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\n\
    Chemical Engineering\nInternational Journal of\n Antennas and\nPropagation\nInternational\
    \ Journal of\nHindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\n\
    Hindawi Publishing Corporation\nhttp://www.hindawi.com\nVolume 2014\nNavigation\
    \ and \n Observation\nInternational Journal of\nHindawi Publishing Corporation\n\
    http://www.hindawi.com\nVolume 2014\nDistributed\nSensor Networks\nInternational\
    \ Journal of\n"
  inline_citation: '>'
  journal: Journal of Electrical and Computer Engineering
  limitations: '>'
  pdf_link: http://downloads.hindawi.com/journals/jece/2017/9324035.pdf
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Things: Architectures, Protocols, and Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2019.2949703
  analysis: '>'
  authors:
  - Muhammad Shoaib Farooq
  - Shamyla Riaz
  - Adnan Abid
  - Kamran Abid
  - Muhammad Naeem
  citation_count: 441
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathZoom.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals & Magazines
    >IEEE Access >Volume: 7 A Survey on the Role of IoT in Agriculture for the Implementation
    of Smart Farming Publisher: IEEE Cite This PDF Muhammad Shoaib Farooq; Shamyla
    Riaz; Adnan Abid; Kamran Abid; Muhammad Azhar Naeem All Authors 442 Cites in Papers
    48545 Full Text Views Open Access Comment(s) Under a Creative Commons License
    Abstract Document Sections I. Introduction II. Major Components and Relevant Technologies
    for IoT Based Smart Farming III. IoT Agricultural Networks IV. IoT Agriculture
    Applications V. IoT Agricultural Security Show Full Outline Authors Figures References
    Citations Keywords Metrics Abstract: Internet of things (IoT) is a promising technology
    which provides efficient and reliable solutions towards the modernization of several
    domains. IoT based solutions are being developed to automatically maintain and
    monitor agricultural farms with minimal human involvement. The article presents
    many aspects of technologies involved in the domain of IoT in agriculture. It
    explains the major components of IoT based smart farming. A rigorous discussion
    on network technologies used in IoT based agriculture has been presented, that
    involves network architecture and layers, network topologies used, and protocols.
    Furthermore, the connection of IoT based agriculture systems with relevant technologies
    including cloud computing, big data storage and analytics has also been presented.
    In addition, security issues in IoT agriculture have been highlighted. A list
    of smart phone based and sensor based applications developed for different aspects
    of farm management has also been presented. Lastly, the regulations and policies
    made by several countries to standardize IoT based agriculture have been presented
    along with few available success stories. In the end, some open research issues
    and challenges in IoT agriculture field have been presented. Topic: New Technologies
    for Smart Farming 4.0: Research Challenges and Opportunities IOT Agricultural
    Trends. Published in: IEEE Access ( Volume: 7) Page(s): 156237 - 156271 Date of
    Publication: 25 October 2019 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2019.2949703
    Publisher: IEEE CCBY - IEEE is not the copyright holder of this material. Please
    follow the instructions via https://creativecommons.org/licenses/by/4.0/ to obtain
    full-text articles and stipulations in the API documentation. SECTION I. Introduction
    The concept of IoT caught attention in 1999, by means of Auto-ID center at MIT
    and its relevant market investigation publications. Basically, IoT is an integration
    of multiple devices which communicate, sense and interact with their internal
    and external states through the embedded technology that IoT contain [1]. IoT
    has become the megatrend for next generation technologies which can impact the
    whole business spectrum with extended benefits which are advanced connectivity
    of end devices, system and services. IoT offers appropriate solutions for multiple
    applications such as smart health care, smart cities, security, retail, traffic
    congestion industrial control and agriculture [3]. A significant amount of work
    has been done regarding IoT technology in agricultural area to develop smart farming
    solutions [4]. IoT has brought a great revolution in agriculture environment by
    examining multiple complications and challenges in farming [5]. Now a days, with
    the advancement of technology it has been expected that by using IoT agriculturalists
    and technologists are finding out the solution of those problems which farmer
    are facing such as shortages of water, cost management and productivity issues
    [6], [7]. State-of-the-art IoT technologies have detected all these issues and
    provide solutions to increase productivity while lowering the cost. Efforts made
    on wireless sensors networks enable us to collect data from sensing devices and
    send it to the main servers [8]. Data collected through sensors gives information
    about different environmental condition to monitor the whole system properly.
    Monitoring the environmental conditions or crop productivity is not only the factor
    for the evaluation of crop but there are many other factors which effect the crops’
    productivity, e.g. field management, soil and crop monitoring, movement of an
    unwanted object, attacks of wild animals, and thefts etc. [9], [10]. Moreover,
    IoT provides a well-organized scheduling of restricted resources which makes sure
    that the best use of IoT enhances the productivity. Figure 1 shows a schematic
    diagram showing the agricultural trends which provide easy and cost effective
    interactions through a secure and unblemished connectivity across individual Greenhouse,
    Livestock, Farmer, and Field monitoring. Whereby, the IoT agricultural networks
    using the wireless devices enable real time crop and animal monitoring. The figure
    shows that two sensor kits (Libelium Smart Agriculture Xtreme IoT Vertical Kit
    and Crop/Plant Monitoring Sensor Kit) have been implemented which monitor the
    soil moisture, leaf wetness, temperature, humidity, productivity, and air flow.
    While, MooMonitor sensor monitors the animal health, fertility, feeding, ruminating
    and resting. The agricultural servers, gateways, and agriculture database play
    an important role to store agriculture records and provide on demand agricultural
    services to authorized users. FIGURE 1. Agricultural trends. Show All As a whole,
    in agriculture field there are multiple applications, protocols and prototypes.
    IoT agriculture research trends include network platform, network architecture,
    applications, security, and challenges among others [28]–[30]. Moreover, in many
    countries and organizations over globe different IoT policies and guidelines have
    been implemented in agriculture field. However in IoT agricultural environment
    a reasonable amount of work has been done and there is a need of thorough study
    on IoT in agriculture context to understand the current research status. To transform
    agriculture technologies via IoT innovation this paper analyzes various issues
    and trends in IoT smart farming. In this research as a contribution following
    IoT agricultural techniques have been added from literature: Present major components
    of IoT based smart farming along with relevant technologies in Section II. Section
    III presents a rigorous discussion on network architecture of IoT that involves
    network architecture and layers, network topologies used; and devices and protocols
    used in agriculture IoT. Different application domains and relevant smart phone
    and sensor based applications have been discussed in Section IV. The security
    and privacy issues in IoT based agriculture have been discussed in Section V.
    The industrial trends have been discussed in Section VI that provides the details
    related to top technology industries investing in this area. The IoT agricultural
    policies made by different countries for the standardization of IoT based agriculture
    have been discussed in Section VII. This section also presents few success stories
    in this area. Lastly, the open issues and challenges to improve IoT based agricultural
    technologies from many aspects have been presented in Section VIII. SECTION II.
    Major Components and Relevant Technologies for IoT Based Smart Farming A. Major
    Components of IoT Based Smart Farming IoT based smart farming consist of four
    major components as shown in Figure 2. FIGURE 2. Major components of IoT based
    smart farming. Show All These four major components are physical structure, data
    acquisition, data processing, and data analytics. The physical structure is the
    most important factor for precision agriculture to avoid any unwanted happening.
    Whole system is designed in such a way which controls the sensors, actuators,
    and devices. A sensor performs multiple tasks like soil sensing, temperature sensing,
    weather sensing, light sensing, and moisture sensing. Similarly devices perform
    many control functions like, node discovery, device identification and naming
    services etc. All these functions are performed by any device or sensor which
    is controlled through a microcontroller. This controlling operation is performed
    by any remote device or a computer which is connected through the Internet. Data
    Acquisition is further divided into two sub components namely: IoT data acquisition
    and standard data acquisition. Whereby, the IoT data acquisition component consists
    of seven protocols that are Message Queuing Telemetry Transport (MQTT), Websocket,
    Advanced Message Queuing Protocol (AMQP), Node, Constrained Application Protocol
    (CoAP), Data Distribution Service (DDS), and Hyper Text Transfer Protocol (HTTP).
    Depending on the requirements and condition more protocols can be used for the
    implementation of smart farming. Whereas, in the standard data acquisition ZigBee,
    WIFI, Long Range Wide Area Network (LoraWan), SigFox and ISOBUS protocols have
    been used. Data processing consists of multiple features that are image or video
    processing, data loading, decision support system, and data mining as shown in
    Figure 2. According to the system requirements any feature may be added that may
    work in parallel to provide other services. Data analytics consists of two main
    features that are monitoring and controlling. Monitoring involves three main application
    in smart agriculture that are Live Stock Monitoring, Field Monitoring, and Green
    house Monitoring. IoT enables farmers to monitor livestock via multiple sensors
    which are used to monitor different animal’s diseases like temperature, heart
    rate, and digestion etc [11]. Whereas field monitoring applications intend to
    report different conditions of field like soil richness, temperature, humidity,
    gas, pressure (air pressure and water pressure), and crop disease monitoring [12],
    [13]. A smart greenhouse design eliminates the manual intervention and measures
    different climate parameters by intelligent IoT devices and sensors according
    to plants requirements [14]–[16]. B. Iotagricultural Relevant Technologies A Large
    number of technologies are being used in IoT agricultural solutions due to which
    it is hard to make an explicit of all those due to which our discussion focused
    on several core technologies which have played a vital role to modernize the IoT
    agricultural services. 1) Cloud and Edge Computing Collaboration of IoT and cloud
    computing in agriculture provides pervasive access to shared resources. To meet
    various agricultural needs upon request over network and execute operations cloud
    computing plays vital role [17]. Cloud based software architecture has been proposed
    which process and retrieve information and agricultural tasks in a more accurate
    way [18], [19]. In the field of IoT edge computing is considered as a solution
    to facilitate data processing at the source of data generation which are sensors,
    actuators and many other embedded devices. Edge computing or fog computing are
    measured as the backbone of cloud computing. This technology is deployed according
    to the features and requirements of smart farming [20]. 2) Big Data Analytics
    and Machine Learning Big data consist of a large amount of essential which are
    generated by agricultural sensors. Big data analysis provides different and efficient
    crop monitoring methods at different stages [21]. A good systematic review on
    big data analysis in agriculture has been presented [22]. Neural networks are
    very famous because they provide optimal solutions at a very high speed. Intrusion
    detection has been realized by using advance principles and technology of neural
    network. On the other hand most important feature of neural network is that they
    provide detection module and data training [23]. By using deep neural networks
    an IoT based hydroponic system has been developed [24]. 3) Communication Networks
    and Protocols IoT agricultural network consist of different kinds of long ranges
    and short ranges networks for communications. Several IoT networks technologies
    help to design a crop or field monitoring sensors and devices [25]. Communication
    protocols are the backbone of IoT agricultural network system and applications
    [26]. They are used to exchange all agricultural data or information over the
    network. 4) Robotics Multiple Agribots have been developed for the purpose of
    smart farming which are minimizing the amount of farmers by increasing the speed
    of work through advance techniques. Agribots performs elementary functions like
    weeding, spraying and sowing etc. All these robots are controlled by using IoT
    to increase the crop productivity and efficient resource utilization. A multi
    sensor robotics approach has been proposed for characterization and ground mapping
    [27]. SECTION III. IoT Agricultural Networks IoT agricultural network or IoT network
    for agriculture is one of the vital elements of IoT in agriculture. It helps to
    monitor agriculture data and facilitate the transmission and reception of agriculture
    data. As shown in Figure 3, the framework consists of IoT agricultural network
    architecture, IoT agricultural network platform and IoT agricultural network topologies
    and protocols. FIGURE 3. IoT agricultural network. Show All A. IoT Agricultural
    Neworkt Architecture The IoT agricultural network is the main factor of IoT in
    agriculture field [31]. IoT Agricultural network architecture suggests an outline
    for the specification of an IoT agricultural network physical elements as well
    as their working principles, and techniques. Most of the IoT applications usually
    follow the four layer architecture (Network Layer, Application layer, Physical
    and Mac Layer and Transport Layer) due to the popularity and interoperability
    of IP as suggested by Naik [32]. After reviewing these four layers protocol we
    have also survey two more approaches that are IPv6 and 6LoWPAN as shown in Figure
    4. This layer is the final level of abstraction which allows the development of
    multiple user applications. At this layer deployed communication protocols monitor
    different agricultural parameters such as weather information, soil moisture values,
    irrigation monitoring etc. FIGURE 4. Layer structure of the 6LoWPAN. Show All
    1) Application Layer Due to the energy constraints and stringent computation involved
    by the IoT devices there are many lightweight protocols on application layer such
    as CoAP, MQTT, AMQP, and HTTP. These protocols can be increased or decreased according
    to the system requirement. CoAP protocol runs on UDP and works on the principle
    of request or response architecture [33]. AMQP protocol runs over the TCP protocol
    by following publish/subscribe architecture asynchronously and use TSL/SSL for
    security assurance. MQTT is a bandwidth-efficient protocol which uses little battery
    power and designed for receiving and transmitting sensor information [34]. HTTP
    is a well known web messaging protocol which based on the request/response architecture
    [35]. Runs over TCP and does not define any QoS, uses TSL/SSL for security purpose.
    2) Transport Layer This layer is also called host to host transport layer, and
    is directly transferred from IP to IoT domain. The main task of network layer
    is to collect and encapsulate the agricultural information which is obtained through
    sensor layer. There are two protocols that are transmission control protocol (TCP)
    and user datagram protocol (UDP). TCP is a connection oriented protocol which
    ensures the reliability of delivered data. TCP data transmission speed is low
    as compare to UDP. UDP is a connection less protocol which does not ensure reliability
    of data. Its data transmission speed is high as compared to TCP. Both of these
    protocols are used in different applications because their choices depend upon
    the requirements of application. 3) Network Layer This layer is an indispensable
    technology for precision farming and responsible to transmit agricultural information
    at application layer. IP is the major choice with the existing two versions that
    are IPv4 and IPv6. IPv4 came into existence due to increasing the large number
    of addressable devices. Whereas, invention of IPv6 was expected which gradually
    establish on all networking devices. Routing protocol for Low Power and Lossy
    Networks (RPL) is considered as the main protocol while applying routing on 6LoWPAN
    [36]. RPL consist of distance vector routing protocol which uses Destination Oriented
    Directed Acyclic Graphs (DODAG) to specify routes. To support different flows
    of traffic RPL modify itself according to network speed and acknowledge routing
    metrics such as status of the battery used in device, link quality, and higher
    computational cost exchange. 4) Adaptation Layer Adaptation Layer (AL) aim is
    to ensure the interoperability, and implement fragmentation, compression and reassembly
    mechanism. Although AL attained many advances but still there is a complexity
    for IPv6 supporting because its direct use on IoT devices is not considered reasonable.
    Usually clashes were seen with constraints which are associated with IoT devices.
    That’s why, 6LoWPAN made a big effort in order to decrease the limitations of
    IPv6 and make it suitable for IoT devices. Sensors and devices use IPv6 and 6LoWPAN
    to transmit data over IEEE 802.15.4 protocol in IoT agricultural network. 5) Physical
    and Mac Layers This is the bottom most layer in agriculture network archichture
    which is responsible to sense and actuate different agricultural parametrs. Within
    physical and MAC layer IEEE 802.15.4 is one of the most popular standard which
    was designed for low cost, low consumption and low complexity [37]. This standard
    was adopted by many protocols like Wireless HART, ZigBee and ISA100. IEEE802.15.4
    mainly operates in ISM band of 2.4 GHz. Furthermore, it also operate 915 MHz (in
    United Nations of American) 868 MHz (in European countries) and supports up to
    250 kbps data rates. However literature shows some significant limitation of later
    approaches, which are regarding to mobility and network formation [38]. EPC-Global
    (designed for RFID technologies) [39] and Z-wave (particularly designed for domotics)
    [40] have also been used as alternative of IEEE 802.15.4 to exchange information
    directly from internt protocol (IP). B. IoT Agricultural Network Platform IoT
    agricultural network platform refers to both the big data analytics model and
    cloud model. 1) Big Data Analytics Big data analysis applied to find out the required
    and meaningful information from the large amount of data from different data formates.
    The crop disease control and crop growth models build on the basis of farm data.
    Big data analysis also provides decision support services to farmers for crop
    productivity and optimal cost analysis. Figure 5 shows IoT agricultural network
    platform based on big data analytics. The proposed network platform consists of
    six components namely: i) Farmer/User experience, ii) Big Data analysis, iii)
    Sensing and monitoring, iv) Storage services, v) Communication protocols, and
    vi) Physical implementations. This platform provides access to the IoT backbone,
    and helps collecting information about soil fertility, weather conditioning, moisturization,
    and online crop monitoring etc. FIGURE 5. IoT agricultural network platform based
    on big data analysis. Show All a: Farmer Experience Farmer experience layer is
    designed to help the farmers to monitor crop productivity in multiple ways such
    as, for effective growth of crops farmers are awared by identifying the appropriateness
    of fertile selection. Climate conditions, crops growth conditions, soil quality,
    or cattle health monitoring helps the farmers to track the state of their business
    and mitigate the lower production risks. b: Predictive Analysis This analysis
    makes the whole environment smarter by the combination of smart farming market
    intelligence and IoT technology. The major task of predictive analysis is to analyze,
    explore and process the agricultural information for digital awareness. Predictive
    analysis is made to check the probabilistic chance of crop productivity up to
    the next season. Here different detecting devices are applied to check the, Crop
    disease, weather conditions, and estimate the profit/loss on the basis of crop
    productivity. Predictive analysis facilitates the farm to understand the optimal
    time for planting & harvesting and various farm management techniques. c: Multicultural
    Analysis Elaborates the multiple forms of agriculture. In this analysis big data
    analysis minimize the risk of crop destruction according to scientific ways. To
    enhance the growth rate of water featured Botanic Aquaculture layer is equipped
    with big data. Other multicultural techniques like Citriculture, Horticulture
    and Floriculture avail direct benefits when enabled with big data analysis. It
    is helpful for decision making related to crop or plants seasonal growth, and
    pest control. Vermiculture is used for the cultivation of earthworms. Arboriculture
    is basically used for the cultivation of woody plants. Olericulture is an application
    which is used for the prediction and measure the growth rate of different vegetables.
    d: Sensing and Monitoring Sensing and monitoring analysis is made by applying
    different sensing and monitoring devices. Sensors sense data and store the crop
    disease information. Data which is processed through multiple resources is automatically
    achieved by sensing layer. Ststistical analysis has been made on data received
    from sensors in order to actuate the disease. Farmers obtain necessary information
    such as ph value, temperature, soil moisture and humidity through web and message
    service. Real time image and video monitoring on data helps the farmer to gat
    timely and accurate information. e: Communication Protocols Communication protocols
    collect and encapsulate agricultural data. To process and transmit data by using
    these protocols have been considered as the nerve center of IoT in agriculture.
    These protocols consist of internet related technologies like WIFI, LoraWan and
    Code Division Multiple Access (CDMA) technologies. ZigBee is considered as the
    main enabler for communication over long distances when third party service providers
    such as Long-Term Evolution (LTE), CDMA or Global System for Mobile (GSM) are
    not available. f: Storage Services Farmers’ store crop related information to
    make better analysis in future and use stored information in multiple seasons
    for more productivity. g: Physical Implementations Multiple sensors, different
    types of actuators and microcontrollers are implemented physically to monitore
    different agricultural applications. Many other network equipments also implemented
    at physical layer like switches, routers and gateways are included. At this layer
    whole environmental conditions are sensed and then actuate according to a predefined
    instructions. Microcontroller plays the supervisor role and performs networking
    related operations and some other functionality which are done by sensors and
    actuators. An IoT based functional frame work is shown in figure 6. The functional
    framework shows that how agriculturists and farmers can access multiple databases
    with the assistance of support layer from application layer. Business layer contains
    all necessary operation which are important for any IoT farm. Data acquisition
    layer provides connection with session layer through IoT protocols like MQTT,
    AMQP and COAP etc. FIGURE 6. Functional framework for an agricultural information
    service model. Show All 2) Cloud Infrastructure Cloud provides a large amount
    of storage through large virtualized servers which are connected together to perform
    necessary action. A cloud based IoT design has been presented in [41] for precision
    farming. In which IoT techniques are applied to analyze and manage data from farms
    through sensors and devices to generate information for decision making. Design
    recommendations for IoT agricultural network on the basis of Cloud is shown in
    Figure 7. FIGURE 7. IoT agricultural network platform based on cloud. Show All
    Platform has been proposed on the basis of four layers which are Cloud Storage,
    Gateway, Fog Computing and hardware modules. Cloud storage layer centerlized the
    all agricultural related data such as weather related, soil, fertilization, crop
    and agricultural marketing in the cloud and provides on demand resources through
    networked infrastructure. Analyics resources and web services are also installed
    on cloud or internet which are accessible by cloud services. Most of the devices
    or sensors are not designed in such a way which can connect with internet for
    the purpose of data sharing. To resolve this data sharing problem local gateways
    are designed which act as bridge between all hardware devices and sensors for
    connectivity, security and controllability. Implementation of gateway in greenhouse
    or field improves the ability of automation and control the real time greenhouse
    monitoring system. Hardware modules and cloud services are distributed whereas
    resources are integrated through fog computing. Fog computing reduces the computational
    load of cloud and ensures the real time processing. Basic purpose of fog computing
    in this proposed network platform is to leverage the on demand scalability of
    cloud computing resources by taking the advantage of both cloud and edge computing.
    In hardware modules multiple actuators, sensors, microcontrollers and central
    processing unit have been implemented to monitor and sense various agricultural
    variables. Hardware modules are distributed in global or local networks and used
    to create services or processes. For the implementation of smart farming fast
    response time and capability to exchange information is necessary. Both of these
    requirements (fast response time and capability to exchange information) are fulfilled
    by two protocols that are Representational State Transfer (REST) and Message Queuing
    Telemetry Transport (MQTT). Instead of using big data center distributed system
    is more effective for smart farming because it breaks up large computation into
    easy and smaller tasks like: Crop, Temperature, nutrients, energy, climate, moisture
    of soil etc. C. IoT Agricultural Network Topology and Protocols IoT agricultural
    network topology shows the arrangement of multiple elements of an IoT Agricultural
    network and represents an ideal scenario for smart farming. Figure 8 described
    how heterogeneous computing grid collects necessary sensor data by using multiple
    sensing devices such as moisture sensor, humidity sensor, temperature sensor,
    gas sensor, ph sensor, ultra violet sensor etc and forms an IoT agricultural network
    topology. FIGURE 8. Conceptual illustration of IoT-based ubiquitous agricultural
    solutions. Show All This ubiquitous Agricultural solution transforms the storage
    capacity of multiple electronic devices like Smartphone, Laptops, and agricultural
    terminals into hybrid computing grids. Figure 9 visualize a scenario in which
    multiple crop parameters are monitored by implementing agricultural devices and
    sensors in all over the field. FIGURE 9. Farm remote monitoring in agriculture.
    Show All Sensed data is then analyzed and stored, and stored data from multiple
    sensors and devices becomes useful for aggregation. On the basis of aggregation
    and analysis agriculturists/farmer can monitor the different crop variables in
    all over the field from anywhere. Moreover, topology consists of a proper network
    configuration for the streaming of agricultural videos. For example figure 9 support
    the streaming of pests via an interconnected network with an internet protocol
    (IP), GSM, WiMAX and access service network gateway. 1) Low Power WSN Topology
    Figure 10 shows a topology in which low power wireless sensor network has been
    designed to monitor and control the various farming factors. In this topology
    ZigBee is being used for data transmission which consists of multiple end devices
    and router to propagate the information on larger distances. End devices which
    are scattered in the field consist of different kind of sensors such as temperature,
    gas, humidity, soil, Motion detector, PH, UV, PIR sensors and a microcontroller.
    FIGURE 10. Low power WSN topology. Show All End devices are directly connected
    to the router and controller, where controller communicates with base station
    by using serial port to analyze the received information. According to software
    monitoring perspective each end device is properly initialized and attached sensors
    are activated in an appropriate way. Once the sensors are activated then each
    device follows the router to connect in the same way according to which they have
    been designed. After confirmation end device may connect to the WSN by using identical
    key. Data which is collected through sensors is send to the base station which
    takes analysis on received data. When the sensors attached with end devices are
    being read then data is transmitted via ZigBee to the Controller or router. Major
    advantage of this net topology is its bi-directional communication by using ZigBee.
    2) IoT Protocols for Agriculture There are many IoT communication protocols which
    are widely used in agriculture for the purpose of smart farming. By using these
    protocols farmers can communicate in a more convenient way and make more efficient
    decisions for smart farming to enhance and monitor the growth of crop. Most common
    wireless protocols which are being used named: IEEE 802.11 WIFI, 2G/3G/4 G-Mobile
    Communications Standards, LoraWan, WiMax, Low Rate Wireless Personal Area Networks,
    Bluetooth, RFID, and ZigBee. Comparison of all these wireless protocols is given
    in Table 1. TABLE 1 Comparison of Existing Wireless Protocols a: IEEE 802.11 WiFi
    IEEE 802.11 is a compilation of communication standards Wireless Local Area Network
    that is 802.11a, 802.11b, 802.11g, 802.11n and 802.11ac. All these standards operate
    in different bandwidths that are 5 GHz, 2.2GHz, 2.4/5 GHz, 60 GHz and 5 GHz. Data
    transfer range of these standards is from 1Mb/s to 7 Gb/s. Its communication range
    is from 20 m to 100 m [42]. A wifi based wireless sensor network in IoT has been
    discussed for smart agriculture [43]. b: LoraWan LoraWan is a long range communication
    protocol which is developed by an open and non-profit association namely Lora
    TM Alliance. The main purpose of this LoraWan protocol is to assure the interoperability
    between multiple operators [44]. To improve agricultural productivity and anticipate
    the problems a framework has been presented in [45] whose component based on Lora
    and ARIMA technology. c: WiMax Data transfer range of Worldwide Interoperability
    for microwave access is from 1.5 Mb/s to 1 Gb/s. But now a days with the advancement
    of technology data transfer rate has been changed [46]. WiMax provides broadband
    multi access connectivity that includes fixed, portable, nomadic and mobile communication
    through wired or wireless connectivity. Both WiFi and WiMax technologies have
    been deployed in Ministry of Food and Agriculture, Ghana (MOFA) which enables
    user to connect either WiMax networks or building Wifi [47]. d: 2G/3G/4G-Mobile
    Communications Standards There are multiple generations of Mobile Communication
    Standards consist of Second Generation, Third Generation, and Fourth Generation.
    IoT devices Communicate by using these standards over cellular networks. Through
    the use of mobile communication farmer can detect temporal variability across
    their fiels and monitor crop yield, soil and climate conditions [48]. e: LR-WPAN
    Low Rate Wireless Personal Area Networks figure out the specification of high
    level communication standards like ZigBee. Data transfer rate of LR-WPAN consist
    of 40 Kb/s-250 Kb/s. The major property of this standard is that it provides low
    speed and low cost communication services [49]. LR-WPAN is mostly used for indoor
    agriculture such as home garden or in small farms. f: RFID RFID works on the principal
    by assigning a unique number individually to each object in order to record information.
    RFID consists of readers, host and tags where tags receive and transmit radio
    waves due to which it is also known as responder. RFI tags consist of active tags
    and passive tags which are available in different sizes and shapes. Passive tag
    is more advantageous as compare to active tag because it is cheap than active
    tags. Tags have unique ID number and environmental information such as moisture
    level, temperature condition, and humidity etc. These tags are embedded and attached
    in multiple objects to identify that object. g: ZigBee ZigBee is on the top of
    IEEE 802 standards created by ZigBee Alliance. It is a set of specifications for
    device to device network having low power data rates. With the advancement of
    technology and increasing the demand of throughput there is a need of faster and
    low power consumption technology. These requirements are fulfilled by more established
    technologies which provides faster data transfer. In agriculture environment IoT
    sensors sense the data and transfer it towards remote server. After sensing, collected
    data is analyzd for decisions making [50]. h: MQTT MQTT is a messaging protocol
    in IoT which is mainly designed for remote connections. It’s a bandwidth efficient
    protocol and uses little battery power. MQTT is used for continuous analysis and
    deploy a smart system for agriculture sector. A low cost web based IoT solution
    has been presented by using MQTT for monitoring, tracking and analyzing agricultural
    data and collect knowledge from field ambience and improve environmental conditions
    [51]. By using MQTT a low cost irrigation system has been proposed for receiving
    and transmitting sensor information [52]. i: SigFox It’s a low data rate and an
    ultra narrowband wireless cellular network which is appropriate for IoT and machine
    type communications [53]. To construct a geo location system SigFox network was
    used which localize animals pasture of the whole summer [54]. System proposed
    in [55] helps the farmers to locate their cattle’s position and increase their
    productivity. j: Bluetooth Bluetooth is a low power and low range Personal Area
    Network which is best for short range mobile communication. There are many IoT
    agricultural devices which are bluetooth enabled such as Farmnote Air gateway
    and color sensor work with bluetooth enabled sensors. Bluetooth has ubiquitous
    nature due to which it is considered as an appropriate technology for multi-tier
    agricultural applications [56]. SECTION IV. IoT Agriculture Applications IoT agriculture
    system applied as an array of wide variety of fields such as, Precision farming,
    livestock monitoring, and greenhouse monitoring. Agriculture applications have
    been categorized into three sections: IoT agricultural applications, Smartphone
    based applications and sensor based applications. IoT and sensor based applications
    categorization has been illustrated in figure 11 which is framed by reviewing
    the today’s available IoT solutions in agriculture. FIGURE 11. IoT structure in
    agriculture. Show All A. IoT Agricultural Application Domains There are number
    of IoT agriculture applications which are being used to create more efficient
    resources for agriculture productivity. Main domains of IoT agriculture applications
    are precision farming, livestock monitoring, greenhouse monitoring and agricultural
    drones. The following subsection consists of various types of agricultural applications.
    1) Precision Farming Precision farming helps the farmers to improve, automate
    and optimize all feasible directions in order to enhance the agricultural productivity
    and make cropping system smart [57]. Different IoT sensors are deployed to measure
    soil quality, weather conditions, moisture level, and effectively plan to optimize
    harvesting techniques. To enhance the crop production a correlation analysis between
    agricultural environment information and crop statistical analysis has been developed
    to collect crop data [28]. In [58] an IoT based platforms has been developed for
    precision agriculture and ecological monitoring. IoT based weather forecasts helps
    to optimize productivity and take anticipatory analysis to prevent the crop from
    damage. Multiple monitoring devices/sensors are used to predict pest behavior,
    plant or crop growth and address any pending pest issue before they damage crop.
    Ranchers use IoT based irrigation solutions to manage and analyze crop irrigation
    requirements. In [59] a remote agricultural monitoring platform has been presented
    on the basis of monitored data. A conceptual architecture based on cyber systems
    and software defined setworks has been presented in [60] for precision farming.
    IoT base Precision farming consist of multiple monitroing and controling applications
    such as climate conditions monitoring, soil patterns monitoring, pest and crop
    disease monitoring, irrigation, determine optimal time to plant and harvest and
    tracking/tracing. a: Climate Conditions Monitoring In agriculture it is the most
    important to monitor weather conditions continuously so that future activities
    can be planed accordingly. Weather stations are the most popular gadgets in the
    field of agriculture which are used to monitor different climte conditions. Weather
    parameters which are being monitored include temperature, humidity, wind direction,
    and air pressure etc. Located across the field, weather stations collect the environmental
    data and send it to the cloud server. Collected data is used for weather analysis
    to map climate conditions, and provide new insights to take required actions to
    improve agricultural productivity. US Food and Agriculture Organization (FAO)
    has been defined a weather related approach called Climate Smart Agriculture (CSA)
    which helps the user to transform agriculture system by identifying climate conditions
    [61]. A wireless sensor network has been deployed by using IoT technology to monitor
    weather changes by integrating the sensors and devices [62]. b: Soil Patterns
    Soil monitoring has become one of the most demanding practices in agriculture
    field for both industries and farmers. In soil monitoring there are many environmental
    issues which affects on crop production. If hese kinds of issues are identified
    data accurately then the farming patterns and processes can be understand easily.
    Soil patterns which are being monitored consists of Soil Humidity, moisture, fertilization
    and temperature. Soil humidity and moisture sensors are deployed to monitor the
    moisture content in soil [63]. An adequate amount of fertilization in the field
    also increase crop yield [64]. Soil monitoring test report increase crop productivity
    and recommends an appropriate fertilization solutions to farmer [65]. Moreover,
    identification of contaminated soil by using IoT technologies protect the field
    from over fertilization and crop loss. c: Pest and Crop Disease Monitoring Root
    causes of revenue and production losses are crop diseases. Due to the boom of
    IoT agricultural system has been changed into digital system which helps the farmer
    to make informed decisions. Prediction of crop diseases at early stages helps
    the farmers to generate more revenue by saving crop from pest attacks. IoT protect
    crop in multiple ways by detecting different diseases and prevent crop from animal
    attacks. An IoT based monitoring system has been presented in [66] to monitor
    the wheat diseases, pest and weeds. Crop raiding is the biggest issue due to contraction
    of cultivated land into different wildlife haunts. In [67] a monitoring and repelling
    system for the protection of crop against wild animals attack has been presented.
    Detection of crop disease at early stages is very challenging in the field of
    agriculture. Because to detect crop or leaf disease a team of experts is called,
    which is expensive and time taking process. Whereas, automatic detection of diseases
    is very beneficial, accurate and cheaper for farmer as compared to manual observation
    by experts. Image processing technique also plays a vital role for the earlier
    detection of plant disease [68]. A crop disease detection scenario has been shown
    in figure 12. FIGURE 12. Disease detection scenario. Show All Sensed raw data
    via sensing devices is converted into usable format via remote server and then
    stored into database which is displayed through a user interface. After getting
    data multiple data mining models are applied for disease (bacterial, fungal, viral
    etc) analysis. d: Irrigation Monitoring System IoT improve the current irrigation
    system in a more innovative way. A farmer can optimize irrigation system in multiple
    ways by monitoring weather conditions and soil conditions. IoT technology monitor
    irrigation system in four ways like weather forecasting data, control and monitor
    whole field from anywhere, Ethernet connection and WIFI. This modern irrigation
    system facilitates the farmers by installing multiple sensors, reducing farmers
    monthly irrigation cost, and limit water resources [69]. In [70] an intelligent
    irrigation management system has been presented by using Maching learning and
    open source technologies which sense different soil and weather parametrs. An
    IoT based Low cost irrigation system has been designed in [71] which uses HTTP
    and MQTT protocols to inform the user. Water quality is monitored by sensor nodes
    which are empowered with wireless communication. IoT technology measure both physical
    and chemical constraints of ph, dissolved, temperature, conductivity and oxygen
    [72]. Gathered data about water management system is viewed on internet by using
    cloud computing services. Recently multiple IoT irrigation platforms have been
    developed to control the water consumption in the field. In [73] a simple irrigation
    system has been developed by using WSN. In more advance system users can control
    the process of irrigation through cellular technologies. Likewise, system is proposed
    in [75] in which user transfer sensors data via cellular technologies to a database
    system. e: Determine the Optimal Time to Plant and Harvest IoT increase operational
    efficiency and enhance the crop productivity by determining the best possible
    time to harvest and plant. IoT amalgamate multiple existing technologies like
    cloud computing applications, end user applications, wireless sensor networks
    (WSN’s) and Radio Frequency Identification (RFID) to determine the accurate time
    of weeding and seeding [76]. f: Tracking and Tracing IoT provides informative
    data to agricultural companies for better decisions making such as planning, managing
    and connect with business partners intelligently by saving money and time. In
    growing environment soil, air, water, fertilizers, and pesticides conditions are
    monitored by RFID and Global Positioning System (GPS). GPS system is used to find
    the exact location of agriculture field and monitor various agricultural parameters
    by using wireless communication networks. In [77] an architecture has been develop
    which remotely monitor the soil condition and soil structure as per requirement
    of crops culture. In this structure ZigBee is connected with other devices like
    content management system (CMS), Global System for Mobile (GSM) and General Packet
    Radio Service (GPRS) by using Wireless sensor networks to monitor and realize
    real time data checking. GPS provides interface to interact with ARM (an intelligent
    monitoring system to achieve functions like SMS/MMS) and gives an alarm to farm
    manager when an unwanted changes occur and helps the farmers to take corrective
    action. Although it’s operational and maintenance cost is high but it is widely
    used in agriculture due to its exact location monitoring and tracking property.
    g: Farm Management System The adoption of smart farming is correspondingly increasing
    the amount of productivity by reducing the environmental impact but this smart
    farming technique can be possible via Farm Management System (FMS). FMS is a key
    element for processing, planning, and decision making for the purpose of smart
    farming [78]. An integrated FMS allows the farmers to monitor the entire where
    whole data is collected via WSN, GSM modules and microcontroller. An identifier
    is used on the sensors and devices in all over the farm which gives the proper
    knowledge of fertilization, weather data, automatic buffer zone width monitoring,
    and automatic detail record is generated according to per day activities of farm.
    This whole information is stored in the computer in standard format and can be
    accessible via cell phone or internet for further processing. To optimize the
    use of water resources an automated irrigation and monitoring system is used [73].
    Apart from irrigation system farm is also protected from pest and animal intrusion
    [66], [67]. h: Agricultural Drones Drones are defined as Unmanned Aerial Vehicles
    (UAVs) which are being utilized in agriculture to improve various practices of
    farming. These flying devices are controlled remotely by remote control or autonomously
    programmed. Agricultural processes which are performed by drones are crop health
    assessment, spraying, screening, planting, scouting reports, measurement of nitrogen
    in wheat and analysis of soil conditions. Drones facilitate the farmers via integration
    with Geographic Information Systems (GIS) mapping, and crop health imaging. Drones
    are mostly deployed in large farms where issues related to bacteria fungus are
    difficult to handle and require regular monitoring. In the area of agriculture
    pesticides and fertilizers are very important for crop yield [65], [66]. Agricultural
    drones are carrying out this job efficiently because of its high speed and effectiveness
    in the spraying operation. In addition they also deployed to monitor forests,
    livestock and aquaculture. An organization Precision Hawk is using drones for
    valuable data gathering through sensors for surveying mapping, and imaging of
    agricultural land. They perform in-flight monitoring, farmers enters the detail
    about which field to survey and select a ground resolution. An IoT based Farm
    management information system approch has been developed to meet the bussiness
    objectives [29]. Agricultural drones are integrated with GPS devices cameras and
    sensors to monitor crop health, like planting, crop spraying, screening and analysis
    of soil. There are many other advantages of drone’s utilization like crop health
    imaging, plant counting, amount of nitrogen in wheat, plant height, drainage mapping,
    and weed pressure etc. 2) Greenhouse Monitoring In greenhouse plants are grown
    under controlled environment. This glasshouse technology provides benefits to
    growing plants anytime anywhere by monitoring appropriate environmental conditions.
    Cultivation of greenhouse is more intense, therefore in terms of controlling and
    monitoring it requires high precision. To monitor environmental or weather conditions
    there have been several studies on the applications of WSN’s in greenhouse. Recent
    studies shows that how IoT can be implemented in greenhouse to minimize the human
    resources, accumulate energy and provides direct link of greenhouse from ranchers
    to customers. Most of the studies have focused only on remote monitoring and localized
    [14]–[16]. In addition, for the purpose of high precision there have been a lot
    of studies which integrates meta-processing structure with data to transfer it
    on remote infrastructures through internet. By applying well evaluated crop models,
    assessment of the crop status helps the ranchers to take better decisions [80].
    In Figure 13 a Wireless Sensor Network (WSN) has been implemented to monitor the
    greenhouse environment. Whole network is divided into multi parts which processes
    the data and gives feedback. FIGURE 13. WSN for monitoring greenhouse environment.
    Show All Data can be obtained by corresponding sensors and detectors and then
    transferred to the main server for processing. In physical implementation the
    major components are the sensors and network for accurate data transmission. Growers
    setup the different monitoring devices and sensors according to the specific requirements
    and track or record the required information. Agriculturists make better decisions
    by analyzing the received information and achieve specific goals by obtaining
    optimal data. There are many IoT based greenhouse applications such as water management,
    plant monitoring, and climate monitoring etc. a: Water Management To measure the
    exact amount of required water in greenhouses is a key problem. Smart sensors
    are implemented which are controlled by applying multiple IoT techniques to avoid
    from excessive use of water. In greenhouses water management is carried out by
    using automatic drip irrigation which works by following soil mositure threshhold
    that is set accordingly [81]. b: Plant Monitoring IoT sensors and cameras creates
    ideal environment for plants by monitoring the state of plants regularly and generates
    an alert if any problem is recognizable. On the other side, cloud based IoT solutions
    store the sensed data and view it periodically which is helpful for growers to
    ensure that all plants obtains ideal attention in the greenhouse [82]. c: Climate
    Monitoring There are many parameters which are combined to maintain and create
    an ideal environment for plants within strict limits such as, the maintenance
    of ventilation, temperature, carbon dioxide, and oxygen level. This can be made
    possible by deploying IoT enabled greenhouse where smart devices and sensors share
    their information for strong decision making [81]. 3) Livestock Monitoring Optimal
    environment or weather circumstances which absorbs excessive amount of climate
    conditions leaves negative impact on the productivity of animals that is a serious
    issue for many researchers [83]. Whereas, due to increasing the demand of high
    quality dairy products precision livestock also considered as the major concern.
    Each year ranchers lose a large amount of profit because of animals illness. But
    IoT based livestock management solutions helps the farmers to improve the farming
    principles, livestock conditions and dairy products [11]. Just like crop monitoring
    sensors, different livestock monitoring sensors are also attached to the animals
    to monitor their log performance. Livestock monitoring factors varies on the categories
    of animals under consideration such as conductivity of milk, pest attack, humidity,
    and water quality. By tagging RFID to individual animal allow farmers to track
    their location, thereby preventing animal from theft. Connected sensors and wearables
    in the livestock allow the farmer to monitor overall animals’ activities and data
    streamed to the cloud directly helps the farmers to identify the issues. Cowlar
    and SCR by Allflex are using smart agriculture sensors to monitor animals health,
    activity, temperature, nutrition and collect information on each individual as
    well as about the herd [84], [85]. In the field of livestock several studies have
    been realized. Wireless Sensor have been used which are most advantageous for
    large farm as well as for hazardous gas monitoring. An IoT based livestock scenario
    is shown in Figure 14. FIGURE 14. IoT based livestock scenario. Show All In the
    field different IoT sensing devices have been deployed to monitor the weather
    conditions via weather station and sense other activities in the field by all
    other data sources which have been implemented in the whole farm. Sensed data
    is stored on the cloud server, which user can use for decision making. User can
    interact remotely by using multiple smart devices (Laptops, Tablets, and Mobile
    etc.). Some IoT base applications of livestock monitoring have discussed below:
    a: Animal Temperature Monitoring Identification of disease symptoms and prevention
    is the major function for animal health monitoring. Normal body temperature of
    dogs is 38.3°C-39.2°C and cow’s is 38.5°C-39.5°C. When the body temperature is
    increased or decreased from the normal body temperature then it indicates that
    animal is suffering from any disease [86]. b: Heat Stress Level Heat stress decreases
    the cow’s milk productivity with same dietary input, due to which farmers face
    the cost production issues. In summer season moisture content becomes low due
    to which stress level in animals increased, because of this animal can also die.
    c: Physical Gesture Recognition Gesture analysis can be made by using IoT animal
    monitoring devices. Animal’s gesture behavior is classified into different groups
    such as in cattle, this behavior is consisting of two classes that are traveling
    and stationary. Traveling behavior consists of animal’s walking, running and grazing
    whereas stationary behavior is animal’s sitting, sleeping and standing. d: Rumination
    Rumination monitor the digested food by animal and it is detected by mounting
    a monitoring device in the animal’s (cows) nose. In this way farmer can get accurate
    indication about animal’s health. e: Heart Rate Measurement of heart rate is an
    indirect method which impacts due to the agitation and stress that cow have. Normal
    heart rate of cow is 43 to 84 bpm whereas calf’s normal heart rate is 100 to 140
    bpm. By using IoT devices and sensors heart rate can be monitored constantly.
    f: GPS Based Monitoring GPS system is used to obtain the specification of farm
    and sends the monitored parameters to central monitoring station by using wireless
    sensor network. To prevent animals from theft, wild attacks or weather conditions
    a repelling system has been provided by using wireless technologies like Zigbee,
    WIFI, and LoWPAN [88]. B. Agricultural Solutions by Using Smart Phones From the
    last few years it has been observed that integration of electronic devices with
    smartphones innovate the technology world and smartphones are taken as a driver
    of IoT. To make smart phones versatile in agriculture field various hardware and
    software have been designed. A good (but not complete) survey of smart phone apps
    providing agricultural solutions has been presented [98]. Figure 15 showing a
    classification illustration of smart phone apps for smart farming. Morever, there
    is a number of recent apps which are serving similar functionalties. All smart
    phone apps which are elaborated in figure 15 discussed in tabular form with a
    small description of each. These smart phone apps are not limited; developers
    from all over the world have developed many e-Farming apps therefore, this paper
    highlighted some selected apps which have been discussed according to their popularity.
    FIGURE 15. Smartphone applications for agriculture. Show All C. IoT Devices and
    Sensors in Agriculture In today’s modern world everything needs to be automatic
    with less man power by consuming less time. Sensor is such a device which can
    fulfill this requirement by detecting same input from the existing physical environment
    and responds back. User set some setting over sensing devices to perform their
    task without the involvement of human. There are some major IoT sensors like:
    Motion Detector, PIR, Soil Moisture, Temperature, Humidity, Barometric Pressure,
    Ultra Violet, PH, and gas sensor. In Table 3 various sensor based agricultural
    applications, their operations and IoT association have been discussed but table
    2 pay attention only on smart phone agricultural apps. TABLE 2 Smartphone Agricultural
    Applications Description TABLE 3 IoT Sensor Based Applications in Agriculture
    SECTION V. IoT Agricultural Security In the coming years agricultural sector is
    expected to witness the extensive acceptance of IoT and grow through the new e-farming
    IoT applications and devices. These agricultural applications and devices are
    expected to deal with a large amount of sensitive data. Due to the distributed
    nature of IoT a single security protocol is not sufficient therefore, leakage
    of information is a major security concern [107]. If we adopt IoT fully in the
    field of agriculture then it will be more critical to analyze and identify the
    distinctive features of privacy and security like different security requirements
    and threat models in the perspective of Agriculture. On the basis of literature
    some security issues has been presented in Figure 16. FIGURE 16. IoT security
    issues in agriculture. Show All A. Security Requirements IoT based smart farming
    security requirements are similar to standard security scenario. Therefore, to
    achieve a secure farming solution we have need to pay attention on the following
    security requirements: Confidentiality: Agricultural information or personal data
    relevant to it should be accessible only by authorized users. Integrity: Here
    integrity means received and stored data or content is not changed. Authentication:
    Authentication means peer devices should have an identity to which it is communicating.
    Data Freshness: It consists of key freshness and data freshness because IoT agricultural
    networks sometime provides varying measurements, therefore it is necessary to
    ensure that every message is fresh. Non Repudiation: Its means a node can never
    deny to send a message that sent earlier. Authorization: Here authorization means
    for network or any other resources only authorized devices are allowed. Self Healing:
    If any device in an IoT based agricultural network fail or out of energy then
    other devices in the network should be able to provide security to some extent.
    B. Security Challenges Security of IoT based smart farming mainly consists of
    three basic requirements that are Authentication, access control and confidentiality
    of the stakeholders. Whereas, at the perception layer network must be secured
    from external attacks and in the network layer aggregation of the data should
    be secured. Authorize specific entities ensures that only authorized user can
    access data from application layer [28]. The most common issue of security in
    the perception layer is physical security that is the security of hardware and
    information acquisition security [108]. Here physical security is very important
    because all the devices are deployed in an open field. That’s why a single security
    protocol is not enough because IoT devices may be implemented in a diverse environment.
    Another major security issue is leakage of information, this information consist
    of location and sensitive data. Security countermeasures consist of data encryption,
    jamming, blocker tags use, modification in tag frequency, and tag destruction
    strategy. There is a difference between sensor nodes and RFID tags that’s’ why
    while implementing encryption algorithm, intrusion detection policies, key distribution
    and routing policies, hardware restrictions should keep in mind [109]. In IoT
    concept data flows from an end device towards gateway, during this process data
    also uploaded to other platform such as cloud infrastructure. There are multiple
    security policies exist for sensor nodes like identity authentication, data filtering,
    cryptographic algorithm, data flow control mechanisms etc. Cheating, wiretapping,
    replay attacks and tampering are also security threats. Due to which, confidentiality,
    authentication and integrity should be must employed while data acquisitions phase
    [17]. C. Stack Challenges Middleware layer also plays a vital role in IoT to increase
    security. Middleware stands in between application layer and network layer which
    is responsible to process data and provide interface for communication between
    these layers. Middleware layer requires secure and confidential data storage.
    Secure transmission via wireless medium is very challenging in IoT deployment
    due to which IoT based architecture is at risk like vulnerability, denial of services,
    illegal access, and many virus injects. In this way data integrity and confidentiality
    is affected by such attacks. According to IoT vision application layer is one
    of the top most layers and closely related to the cloud due to its computation
    resources and storage nature. Security issue at application layer and cloud are
    very similar such as data security, backup, recovery and privacy. Therefore, access
    rights of the data, information and ownership for physical users, machines and
    organizations should manage and administered by a control mechanisms. D. Threat
    Model Both IoT agricultural devices and networks are at risk because of increasing
    attack surface. IoT agricultural threat model consist of three scenarios. First
    one is cloud networks, second is native networks expansion and third is cloud
    services. Threat may be generates from internal or external network. If an attack
    is arise from an agriculture device then it will be considered as one of the more
    severe attack. Because it is very difficult to detect the malicious device within
    the network. In addition an adversary may attack on an agriculture device and
    network and use power device like mobile, laptop or tablet or may be same kind
    of IoT devices to penetrate the network. E. Attack Taxonomy There are many types
    of attacks in IoT paradigm due to which an attacker may attack by adopting a method
    on future or existing IoT agriculture devices and networks. In IoT agricultural
    field threat may be tangible, predictable or unpredictable. In this paper existing
    and possible threats are classified on the basis of three key factors: which are
    Information Disruption, Host, and networks. 1) Attacks on the Basis of Information
    Disruptions Stored agricultural data may be analyzed or manipulated by a hacker
    to provide wrong information. Such attacks consist of Interruption (denial of
    services), Interception (threaten data privacy and confidentiality), Modification
    (unauthorized access to the agricultural data), Fabrication and replay. 2) Attacks
    on the Basis of Host Properties Host properties attacks occure in two forms namely:
    hardware compromise (attacker may attact on device program code data or keys and
    reprogram the devices with malicious code) and software compromise (attacker may
    take the advantage of software vulnerabilities and glitches like operating system,
    applications software and system software). 3) Attacks on the Basis of Networks
    Properties Two types of attacks can be arised on basis of networks properties.
    Namely: standard protocol compromise (to threat service availability like integrity
    and authenticity where attacker deviates from standard protocols) and network
    protocol stack (consist of different types of vulnerabilities). F. Reference Security
    Model for IoT Based Agriculture IoT agricultural paradigms are not yet strong
    but continued to build up due to which currently it is difficult to discover all
    possible threats and vulnerabilities in IoT agricultural field. However, when
    experts find the security solution to solve the apparent security threats at that
    point they should have the ability to mitigate the hidden security issues. To
    accomplish a security solution, security checks should be deployed with dynamic
    properties. Consider a framework in which security mechanism consist of different
    systems which can detect and prevent IoT agricultural system from attacks. Now
    consider, that an attacker generate a new type of attack on agricultural applications
    devices and networks to steal agricultural information integrity. In such conditions
    existing security techniques should indentify this new attack by using dynamic
    algorithm. A security model presented in Figure 17 has been discussed to resolve
    these issue. The model is illustrated with its three security systems: protection
    system is designed to mitigate the attack while, dignosing system collects activity
    data from agricultural applications, networks, nodes and analyzes detected agricultural
    data. Reaction system is designed to help the agricultural entities survive all
    types of attacks. FIGURE 17. An intelligent collaborative security model for smart
    farming. Show All FIGURE 18. Selected IoT agricultural products. Show All Whole
    system has been designed by following dynamic algorithms. To prevent from present,
    probable and hidden attacks this system has strong collaboration. Upon intrusion
    detection system issues an operation command and store in reaction system after
    that share their anomaly diagnosing experience with protection system to prevent
    from further attacks. Operation command receive response from identification service,
    reaction system remove the system failure risks and after that pass out its experience
    with other two systems that are protection and diagnosing systems. In this way
    a complete inter collaboration system is accomplished. SECTION VI. IoT Agricultural
    Industry Trends and Practices The IoT in agriculture field has experienced a burst
    of creativity, activity, venture capital firms and exciting entrepreneurs. The
    space becomes visible as an active group of large firms and new start ups that
    are willing to become the part of what may be a giant market and technologies.
    In this section an extensive record of some products and technologies has been
    provided for a good understanding of IoT position in agriculture field. 3D Crop
    Sensor Array with PAR Addon can be mounted on any location, to monitor temperature,
    humidity and carbon dioxide in the farm [110]. EC-1 Controller monitors the environmental
    conditions and then programs them to control the environment by turning off and
    on devices [111]. Arable Mark is the first device which links the global weather
    data within the field observations developed by Arable. With the unprecedented
    ground truth accuracy device makes informed decisions and deliveres real time
    monitoring information to the palm of user’s hand [112]. Growlink designed Growlink
    one controller to deliver smart farming experience. It has highest processing
    power and components quality to coordinate with multiple sensors and devices in
    all over the farm. This device is simply all in one and farmers can expand the
    system according to their requirements by adding additional microcontroller via
    IP networks [113]. Easternpeak offers an IoT GreenIQ agricultural device which
    control irrigation and saves water of your garden’s lawn from anywhere. Growers
    can save up to 50% outdoor water bills by using a GreenIQ smart sprinklers controller
    [114]. Grofit provides a climate monitoring device based on Bluetooth and its
    transmission range is up to 200 m in all over field. This device also provide
    data log which store maximum 30 days measurements. Growers can monitor air humidity,
    real time air temperature and sun radiations by using this device [115]. MeteoHelix
    weather station designed by allmeteo which provides reliable, stable and open
    meteorological solutions according to weather requirements. This weather station
    provides multiple features like temperature, humidity, atmospheric pressure, dew
    point, sun radiations, and solar radiations measurement [116]. Leaf Wetness sensor
    is developed by Smart Element which determine the wetness of leaf by electrical
    resistance on the surface of sensor. It is used to measure wet and dry time on
    the leaf surface [117]. Swip Track Micro locates any moving object in all over
    the field that may be any farming machine, vehicle or engines [118]. Waspmote
    Plug & Sense! Smart Agriculture Xtreme is a sensor node which provides more reliable
    and accurate information about weather. This sensor measures the wind and rainfall
    condition via optical technology. The presence of fertilizers and soil morphology
    can be analyzed through this sensor by measuring the oxygen level, water content,
    and soil water potential [119]. SKY – Lora Weather Station can easily communicate
    to nearby master sensor through LoRa [120]. This is suitable for those locations
    where there is nearby connectivity. This weather station can send data up to 600
    meter away to a master sensor which has WIFI connection. Pycno has been developed
    a Pulse IoT automation sensor which comes in a self-sustained package powered
    by a tiny solar panel [121]. Sensor is WIFI and LoRa enabled device which has
    multiprotocol port in the bottom. In future Pulse Automation Sensor and Pycno
    soil sensor will be integrated to actuate devices and talk with each other in
    the field. CropX Starter Kit – Soil Temperature 24/7 is a real-time soil-temperature
    monitoring Sensor. This sensor has direct cellular connection and better accuracy
    which provides advance sensing capabilities [122]. Some top technologies firm’s
    trends and directions are highlighted in Table 4. TABLE 4 IoT Agricultural Trends
    and Directions of Some Well Known Technology Industries SECTION VII. IoT Smart
    Farming Policies and Success Stories A. Policies Many countries have understood
    the importance of IoT and facilitating through its advance monitoring techniques.
    Government of different countries is seizing the IoT opportunity and investing
    maximum to boost up the crop productivity. Adaptation of IoT technology in different
    countries has been discussed in this section. 1) Australia Government of Australia
    has invested AU$ 134 million to boost up farming. Due to this large investment
    a center was created by a private company in Sidney to implement IoT technologies
    for Smart farming [150]. In 2014 an Innovative Network for Precision Agriculture
    System was established for the purpose of a collaborative frame work to create
    a national agenda in Australian agriculture. In terms of privacy and security,
    in 2015 an American farm Bureau took the lead in establishing a privacy and security
    set for farm data [151]. 2) Ireland Irish Farmer’s Association (IFA) Launched
    a program for agriculturists to reduce the cost, to improve the soil quality and
    guides the farmer how to save water and energy by adopting new technologies [8].
    When the farmers follow these instructions the results were very positive and
    encouraging. Companies saved almost 8700 euro, 10% reduction in green house gas
    emission, 21% savings in pasture management and 47% saving was achieved by Soil
    Fertility. In 2016 a nationwide SigFox network was launched by VT-Networks Ireland
    which provides solution for tracking security sensors and farm assets [153]. 3)
    France Ministry of Agriculture in France has become the partner of the Agriculture
    Innovation Project 2025. The basic aim of this project is to increase the strengthen
    of agricultural land, monitor the climate conditions and create incubators to
    improve agriculture field in France. Ministry of agriculture also share the collected
    data with farmer’s to propose new solution in the field of Agriculture [154].
    French agriculture is administrated by European Union (EU) rules and supported
    through a policy called Common Agriculture Policy (CAP). A new CAP framework was
    defined in 2015 at EU level for next five years which is beneficial for different
    agro ecology projects for farming. 4) China In 2016 china launched its 13th five
    years plan to integrate IoT in the field of agriculture to enhance profitability
    [156]. Project has been started in different eight provinces, with multiple products,
    technologies and 426 applications. Data was collected from multiple provincial
    and national level data centers. Moreover, NB-IoT App by Huawei company in china
    transforming the agriculture in a more efficient and an innovative way. NB-IoT
    provides low cost agriculture solutions as compare to cellular network where gateway
    implementation is not necessary. Huawei NB-IoT has large number of connections
    and wide coverage due to which it can resolve issue of scattered agricultural
    data [157]. 5) Malaysia Agricultural policy in Malaysia was established in two
    periods of time policy before and after independence 1948–1957 and 1957–2020 [158].
    The purpose of the policy was to enhance the growth of crop and decrease the poverty.
    Multiple solutions have been created by Malaysian Institute of Microelectronic
    System (MIMOS) which are best for agriculture development. A sensor named Mi-MSCANT
    PH has been developed by MIMOS to gather environmental data. An agricultural framework
    has been developed by MIMOS to integrate IoT technologies which create a bonding
    between suppliers, traders, and agricultural producers mutually in unified manners.
    This framework utilizes technologies named Micro Electro Mechanical System (MEMS)
    and WSN which automatically collect environmental data [159]. 6) USA USA has funded
    million Dollars to generate new agricultural technologies to fulfill the necessary
    requirements of energy and food. National Institute of Food and Agriculture worked
    on a project that is Internet-of-Ag-Things and develop sensing technologies for
    smart farming practices. The major purpose of this project is to develop precision
    technologies to enhance the efficiency of agriculture industries and make better
    use of water, fertilizers and organic food [160]. The U.S. Department of Agriculture
    (USDA) has started a project to address water management challenges and develop
    new solution for those issues which are affecting agriculture. Technology experts
    are using USDA datasets to improve and design agricultural services [161]. 7)
    Thailand In Thailand National Electronics and Computer Technology Center (NECTEC)
    applying innovative IT technologies for the purpose of smart farming and their
    major focus is on four agricultural products including Rubber, Rice, Sugar and
    Cassava [162]. The major concern of this movement is to increase the agricultural
    productivity and facilitate the farmers in all rural areas of Thailand [163].
    Faculty of Science and Technology at Thammasat University developed an IoT-based
    irrigation control system which helps the grower to preset watering cycle timing
    in advance. A smart farm service provider namely; FarmD Asia was established in
    2015 to boost up the agricultural productivity by its flagship products. FarmD
    Asia has also designed a pesticides aerial drone which covers upto eight acres
    land in single fly. National Science and Technology Development Agency (NSTDA)
    launched Agricultural System Integrator (ASI) program which was primarily designed
    for farmers to start and run smart farm successfully [164]. 8) India Different
    IoT policies have been formulated by Indian government in order to leverage the
    strength of their agricultural field in all over the world. Indians basic purpose
    is to monitor the earth density, soil conditions, temperature and alerts the farmers
    to control pest related issues. In 2015 a policy on IoT in India was released
    by Ministry of Communication and Information Technology to transform digital landscape
    by using IoT [165]. 9) Philippine Philippines have used the remote sensing techniques
    to increase the production of rice. They are also using ground data processing
    and satellite imagery techniques to generate more information on different agricultural
    conditions. University of Southeastern Philippines (USeP) proposed an intelligent
    solution to monitor crop heat stress by using IoT technology with the collaboration
    of Western Mindanao State University (WMSU). In this project research team is
    on the brink with an effective technology counter heat stress which helps the
    farmer to get maximum benefit with the fewest inputs [166]. B. Food and Agriculture
    Organization of United NATIONSNN Food and Agriculture Organization of United Nations
    (FAO) is an e-agricultural organization which follows the international efforts
    to fulfill the deficiency of food in all over 130 countries worldwide. FAO predicted
    that there is a most probability that world population will reach 9.8 billion
    by 2050 therefore, it is necessary to increase the food production 70% by 2050
    to fulfils the growing demand of food through the utilization of IoT technology.
    Mitsubishi Corporation (MC) and Vegetalia, changing Japanese agricultural sector
    by their join forces through AI and IoT. By using tensiometer sensors Tevatronic
    develops an autonomous irrigation system which is placed in the ground near the
    plants for monitoring. From the last 74 years FAO has been changed the agricultural
    world by launching its top ten achievements given in table 5 [167]. TABLE 5 Top
    10 E-Agricultural Strategies of FAO C. IoT Agriculture Success Stories This research
    indicates that there have been several tools and techniques which helps the farmers
    to improve the crop productivity in a more innovative ways. Some IoT agriculture
    relevant technologies have been discussed in section I which provides additional
    tools to the farmers or agriculturists to increase the crop yield. Section III
    describes the different IoT and Smartphone based applications which facilitate
    the farmers to enhance the agriculture productivity by providing extended benefits.
    However over the globe governments are seizing the IoT opportunities in agriculture
    by making large investment. There are many pilot projects which reflects a great
    potential in the future of IoT in agriculture at country level such as china,
    India, Malaysia, Thailand, Taiwan etc. Therefore, in this research we have also
    discussed the results of some pilot projects conducted and being executed in different
    countries. Table 6 prepresents the success stories of these pilot projects in
    different countries with the main IoT agricultural applications (precision farming,
    greenhouse, and livestock). TABLE 6 IoT Agriculture Success Stories SECTION VIII.
    IoT Agricultural Challenges Many researchers have worked on IoT agriculture system
    and solve multiple technological issues and architectural problems by implementing
    and designing various IoT agricultural solutions. Moreover, according to the research
    point of view in the literature, there are also several open issues and challenges
    which are needed to address successfully [57]. There are many challenges which
    are linkage with IoT smart farming deployment and applications. This research
    has identified some explored and unexplored IoT agricultural issues and challenges.
    A. Hardware Challenges Several challenges arise in IoT agricultural setup. First
    of all the equipments which exists at the perception layer are directly expose
    to harsh environmental experience such as, rain, high level temperature, extreme
    humidity, hard winds, and many other possible dangers which destroy electronic
    circuits. End devices works consistently for a long period by depending on inadequate
    batteries power resources. So, a suitable programming tools and less power potential
    is necessary because in case of any program failure instantly battery replacement
    is complicated especially in a large scale open field [144]. B. Networking Challenges
    These challenges are not only for the hardware implementations, but also exist
    at the network layer. Due to high cost of wiring, wireless communication is most
    important for the deployment of IoT based agriculture. Physical deployment shows
    that accepted transceivers performance is exaggerated by human presence, temperature,
    humidity and many other barriers inside the space where wireless device or node
    wants to communicate. Due to which there should use most reliable and robust technologies
    to transfer data according to the environmental challenges and rural conditions
    [8]. A detailed analysis on IoT agriculture networking challenges and issues is
    given [145]. C. IoT Agricultural Platforms IoT agricultural architecture is more
    complicated as compare to other IoT end devices and requires real time monitoring
    system with additional stringent requirements. For this a tailored computing platform
    is needed with run time libraries. A service oriented approach (SOA) can also
    take to build a suitable platform; such services can be exploited by using different
    API’s. In addition, appropriate frameworks and libraries should be developed so
    that agricultural developers can make resourceful use of available document, classes,
    codes and other useful data. D. Other Technical Issues 1) Interfernce To implement
    smart farming a large number of IoT devices are deployed for agricultural purpose
    that creates hindrance especially for those IoT devices which are using unlicensed
    spectrum like Sogfox, ZigBee, LoRa, and WIFI. These technical issues reduce the
    reliability and loss of data. Moreover, unnecessary interference can be eliminated
    by using IoT devices with licensed spectrum. But, among the IoT devices which
    are using cellular licensed spectrum the reprocess of non-orthogonal multiple
    access method can create hindrance because of restricted pilot assignment in cellular
    band. 2) Reliability In agriculture field mostly the IoT devices are deployed
    in an open environment. Due to which there may occur some inconsiderate environmental
    impacts which may cause the communication failure as well as degradation of deployed
    sensors. Therefore, physical safety of IoT devices and system is necessary to
    secure the expensive gadgets from unauthorized user and severe attacks like weather
    conditions or theft. 3) Scalability Billions of IoT devices have been increased
    gradually, due to which more devices are getting connected. Therefor, large number
    of gateways and protocols are needed to support IoT devices. Moreover, IoT agricultural
    back end databases and network applications should be reliable and scalable because
    with the addition of diverse application related operations becomes more complex.
    Therefore, design a highly scalable security scheme and an intelligent IoT system
    for each end device. 4) Resource Optimization Farmers need optimization of resources
    to measure how many IoT devices, gateways, size of cloud storage, and amount of
    transmitted data is required. Due to different farm sizes and variables like crop
    or livestock monitoring resource optimization has become challenging because there
    is a need of different sensors and devices to perform each function. Therefore,
    this will require complex mathematical models and algorithms are required to determine
    the resource allocation for maximum agriculture productivity. 5) Cost Analysis
    and Lack Knwoledge of Technology In the field of agriculture profit margin is
    very important, there is a need of stability the trade-off between the deployments
    of IoT enabling technologies. When an IoT system is deployed the cost of implementations
    are very high like IoT devices/Sensors, gateways, and base station infrastructure.
    After that maintenance cost also important for the use of central services which
    are necessary for IoT devices management, data collection, and information sharing
    among all other services. Moreover, the major factor of slowing IoT in rural areas
    is basically the lack knowledge of IoT and its applications. This is the main
    problem because majority of ranchers is uneducated and lives in rural areas. Therefor,
    it is most important to overcome these obstacles by educating farmers in order
    to generate more revnue [7]. 6) Deployment of LPWA Technologies There is a large
    number of IoT devices in Agriculture scenario, and such devices should liable
    to be heterogeneous in the context of their transmit, receive, sleep, and deep
    sleep along with others. In the terms of power requirements each communication
    layer confronts a supplementary challenge. For example, to confirm the service
    accessibility at MAC layer to find a low power device discovery protocol is a
    difficult task. 7) Universal Platform Adaptation of IoT in agriculture will shift
    from just specific crop to a standard platform which can support multiple smart
    farming applications for crop productivity. This standard platform creates a system
    which can be easily modified to support multiple agricultural applications ranging
    from monitoring to managing. This kind of platform will be free from any kind
    of geographical limitations work as an enabler in IoT agriculture system. 8) Mobility
    IoT agricultural network should have the capability to hold up and maintain the
    farmers mobility. So, that they can connect their farms from anywhere at any time
    [146]. 9) Quality of Service (QOS) Recent studies on QoS highlight that at each
    layer of IoT architecture QoS is required [147] [148]. The ability to make sure
    that devices which needs to transmit sensitive information will be capable to
    do this by using IoT technology without any barrier is still an open research
    issue. There is a need to do more work by providing a mechanism that guarantees
    QoS throughout IoT network layers. E. The Business Model IoT agricultural business
    approach is not still vigorous because it consists of a set of essential elements
    with the latest requirements like new operational policies and processes to transform
    the organizational structure. F. Organizational Challenges When talk about food
    organizations and agricultural sectors, is mean the exchange of information and
    goods transportation. IoT is renovating this whole business process by providing
    reliable and accurate delivery of all products and materials [1]. At the circumference
    of network to store and process the data cloud computing provides highest quality
    of services like efficient storage, computational resources, and application development
    tools for hardware diagnostic. That’s why cloud computing is an ideal accompaniment
    in the world of IoT technologies. At the end of the network a large amount of
    data is produced which needs high cost to transfer towards cloud in terms of latency
    and money [18]. Due to which it is a serious issue because of workload and optimal
    balancing. On the other hand fog computing also the cloud computing extension
    which expanding cloud technologies like tools, and the application development
    scope [149]. SECTION IX. Conclusion All over the globe researchers are exploring
    technological solutions to enhance the agriculture productivity in a way that
    complements existing services by deploying IoT technology. In this article, we
    have presented a comprehensive survey on the state-of-the-art for IoT in agriculture.
    To this end, we discuss agricultural network architecture, platform, and topology
    which help to access to IoT backbone and facilitates farmers to enhance the crop
    productivity. In addition, this article provides an extensive overview on current
    and continuing advances in IoT agricultural applications, devices/sensors, communication
    protocols and many innovative technologies. This research considers various IoT
    agricultural challenges and security requirements for the better understanding
    of IoT smart farming security. Furthermore, many important dimensions of IoT based
    agricultural including technologies, industries trends and countries policies
    have been also been presented to facilitate various stake holders. Government
    has started patronizing IoT in agriculture and it is anticipated that soon IoT
    in agriculture will revamp the conventional farming method. It is also clear that
    many big organizations have started investing and developing new techniques for
    farm management system using IoT. Finally, it is expected that this comprehensive
    survey results into a very useful piece of information for researchers, professionals,
    agriculturists and policy makers who are participating and working in IoT field
    and agricultural technologies. Authors Figures References Citations Keywords Metrics
    More Like This Smart Monitoring Agriculture Based on Internet of Things 2018 2nd
    East Indonesia Conference on Computer and Information Technology (EIConCIT) Published:
    2018 Monitoring of Soil Moisture and Atmospheric Sensors with Internet of Things
    (IoT) Applied in Precision Agriculture 2020 XIV Technologies Applied to Electronics
    Teaching Conference (TAEE) Published: 2020 Show More IEEE Personal Account CHANGE
    USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile
    Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS
    Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT
    Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use |
    Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy
    A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08883163.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: A Survey on the Role of IoT in Agriculture for the Implementation of Smart
    Farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.2970143
  analysis: '>'
  authors:
  - Adil Rasheed
  - Omer San
  - Trond Kvamsdal
  citation_count: 733
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Personal Sign In * Required *Email Address *Password Forgot Password?
    Sign In Don''t have a Personal Account? Create an IEEE Account now. Create Account
    Learn more about personalization features. IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/08972429.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Digital Twin: Values, Challenges and Enablers From a Modeling Perspective'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.biosystemseng.2017.09.007
  analysis: '>'
  authors:
  - A. Tzounis
  - Ν. Katsoulas
  - Thomas Bartzanas
  - C. Kittas
  citation_count: 527
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Keywords 1. Introduction and motivation 2. Internet of Things
    enabling technologies 3. Internet of Things hardware, platforms and sensors in
    agriculture 4. Applications in agriculture 5. Discussion 6. Conclusion References
    Show full outline Cited by (571) Figures (9) Show 3 more figures Tables (2) Table
    1 Table 2 Biosystems Engineering Volume 164, December 2017, Pages 31-48 Review
    Internet of Things in agriculture, recent advances and future challenges Author
    links open overlay panel Antonis Tzounis a, Nikolaos Katsoulas a, Thomas Bartzanas
    b, Constantinos Kittas a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.biosystemseng.2017.09.007
    Get rights and content Highlights • IoT and Cloud solutions introduced in agriculture
    are presented. • Widely used sensors in agricultural deployments are surveyed.
    • The potential of interoperable software use and adoption of IoT is discussed.
    • Ongoing challenges and future perspectives of IoT in agriculture are discussed.
    The increasing demand for food, both in terms of quantity and quality, has raised
    the need for intensification and industrialisation of the agricultural sector.
    The “Internet of Things” (IoT) is a highly promising family of technologies which
    is capable of offering many solutions towards the modernisation of agriculture.
    Scientific groups and research institutions, as well as the industry, are in a
    race trying to deliver more and more IoT products to the agricultural business
    stakeholders, and, eventually, lay the foundations to have a clear role when IoT
    becomes a mainstream technology. At the same time Cloud Computing, which is already
    very popular, and Fog Computing provide sufficient resources and solutions to
    sustain, store and analyse the huge amounts of data generated by IoT devices.
    The management and analysis of IoT data (“Big Data”) can be used to automate processes,
    predict situations and improve many activities, even in real-time. Moreover, the
    concept of interoperability among heterogeneous devices inspired the creation
    of the appropriate tools, with which new applications and services can be created
    and give an added value to the data flows produced at the edge of the network.
    The agricultural sector was highly affected by Wireless Sensor Network (WSN) technologies
    and is expected to be equally benefited by the IoT. In this article, a survey
    of recent IoT technologies, their current penetration in the agricultural sector,
    their potential value for future farmers and the challenges that IoT faces towards
    its propagation is presented. Previous article in issue Next article in issue
    Keywords Internet of thingsRFIDCloudWireless sensor networksFood supply chain
    1. Introduction and motivation The term “Internet of Things” (IoT) is a term first
    coined by a British visionary, Kevin Ashton, back in 1999. As the phrase “Internet
    of Things” reveals, the IoT paradigm will provide a technological universe, in
    which many physical objects or “Things”, such as sensors, everyday tools and equipment
    enhanced by computing power and networking capabilities will be able to play a
    role, either as single units or as a distributed collaborating swarm of heterogeneous
    devices. Agriculture is one of the sectors that is expected to be highly influenced
    by the advances in the domain of IoT. The Food and Agricultural Organization of
    the United Nation (FAO) predicts that the global population will reach 8 billion
    people by 2025 and 9.6 billion people by 2050 (FAO, 2009). This practically means
    that an increase of 70% in food production must be achieved by 2050 worldwide.
    The great increase in global population and the rising demand for high-quality
    products create the need for the modernisation and intensification of agricultural
    practices. At the same time, the need for high efficiency in the use of water
    and other resources is also mandatory. One of the most promising concepts, which
    is expected to contribute a lot to the required increase of food production in
    a sustainable way, is precision agriculture (PA) (Zhang, Wang, & Wang, 2002).
    Precision agriculture aims to optimise and improve agricultural processes to ensure
    maximum productivity and requires fast, reliable, distributed measurements in
    order to give growers a more detailed overview of the ongoing situation in their
    cultivation area, and/or coordinate the automated machinery in such way that optimises
    energy consumption, water use and the use of chemicals for pest control and plant
    growth. At a higher level, having gathered information from many heterogeneous
    systems, well-evaluated scientific knowledge can be organised in the form of smart
    algorithms to provide a better insight into the ongoing processes, do the reasoning
    of the current situation and make predictions based on heterogeneous inputs, produce
    early warnings about potential dangers that threaten the cultivars, and improved
    automated control signals, based on plant responses (Kacira et al., 2005, Körner
    and Van Straten, 2008). The algorithms required to handle the distributed data
    in real time are far too complicated to run locally on a low-power Wireless Sensor
    Network (WSN) node. However, in the context of IoT, all the objects will be interconnected,
    and therefore the computational overhead can be easily shifted to the cloud or
    be distributed among more than one interconnected devices. The greatly increasing
    interest in IoT in agriculture can be roughly seen in Fig. 1. The increase in
    the appearance of the term “IoT” along with the term “Agriculture” in the international
    scientific literature is rather indicative. These data motivated us to present
    an overview of the state-of-the-art research on IoT in its various forms, appearing
    in the agricultural sector, rather than a generic review. For this reason, a research
    methodology was adopted derived from the existing guidelines used by medical researchers,
    adapted and optimised for software engineering matters (Kitchenham, 2004). According
    to this methodology, a selection of recent literature was done, setting the year
    2010 as starting point. The 2010 starting point year was determined because it
    is then when a significant number of publications appeared. Moreover, technologies
    and approaches before 2010 are quite obsolete at the time of writing the present
    manuscript. Other selection criteria included the multidisciplinary nature of
    a publication. Works utilising more than one technology in order to synthesise
    their solutions were considered as IoT-oriented; for instance, cloud and embedded
    devices/wireless sensors, or, works that make use of more than one type of end
    devices (things) within the same network. Having none of the aforementioned restrictions,
    the reviewed literature area would be too wide and out of the scope of this work.
    Moreover, this paper seeks to present research that adopts newer architectures,
    closer to the principles of IoT. Download : Download high-res image (97KB) Download
    : Download full-size image Fig. 1. Evolution of the number of publications related
    to “IoT in Agriculture”, as they appear in Scopus. This paper begins with an introduction
    in the recent trends in the technologies, which represent the building blocks
    of IoT, such as the Radio Frequency Identification Radio Frequency Identification
    (RFID), wireless sensor networks, the addressing of the “things” in a common network,
    as well as the applications running on the cloud. Following the same categorisation,
    several works are presented, which incorporate one or more of the IoT aspects
    and focus on the agricultural sector. Some of the most popular hardware platforms,
    met in agricultural deployments, is also surveyed. The review closes with a discussion
    on future challenges and their effect on IoT spreading, which has effects on the
    adoption of IoT in the agricultural sector too. One of the goals of this work
    is to provide the members of a multidisciplinary community, such as the researchers
    working on deploying innovative monitoring, tracking, decision support and control
    systems, with a handful manuscript that summarises the latest advances in embedded
    devices, sensor modules, wireless communication technologies, programming paradigms
    and cloud services suitable, or optimised, for use in agriculture. Some of the
    most common keywords appearing in the presented literature are presented in Fig.
    2. High quality, peer reviewed conference and journal publications from the fields
    of computer and environmental sciences, engineering, as well as, decision, agricultural
    and biological sciences offered a rich repository of research works. Download
    : Download high-res image (323KB) Download : Download full-size image Fig. 2.
    Keyword distribution in the presented literature. 2. Internet of Things enabling
    technologies The structure of IoT is based on three layers; namely, the perception
    layer (sensing), the network layer (data transfer), and the application layer
    (data storage and manipulation). Despite great improvements, IoT is still evolving,
    trying to obtain its final shape, as can be seen in several reviews (Atzori et
    al., 2010, Botta et al., 2014, Gubbi et al., 2013, Miorandi et al., 2012). As
    the term “Internet” implies, networking capability is one of the core features
    of the IoT devices. The internet as we know it today is mostly an internet of
    human end-users, while the IoT will be an internet of non-human entities, therefore
    a lot of machine-to-machine (M2M) communication will take place. 2.1. Layer 1:
    the perception layer At the perception layer, we meet technologies such as WSN,
    RFID and, recently, Near Field Communications (NFC). There is some overlap between
    WSN and RFID technologies, since semi-passive and active RFID tags can also be
    regarded as wireless nodes with lower computational and storage capacity. Typically,
    a wireless sensor node consists of a processing module, usually a low-power microcontroller
    unit (MCU), one or more sensor modules (embedded or external analogue or digital
    sensing devices) and an RF communication module, usually supporting a low-power
    wireless communication technology (Fig. 3). Download : Download high-res image
    (202KB) Download : Download full-size image Fig. 3. The architecture of a typical
    wireless sensor node. Apart from monitoring and control during the production
    process, there is a need for monitoring, identification and tracking of agricultural
    and livestock products after harvest. WSNs are often met in several works related
    to monitoring and climate control of storage and logistics facilities. RFID technology
    is considered the first, and most basic, example of interconnected “Things”. RFID
    tags contain data in the form of the Electronic Product Code (EPC) and the RFID
    Readers are triggering, reading and manipulating a large number of tags. Offering
    object identification, tracking and data storage on active or passive (without
    the need for embedded power supply) tags, RFID and NFC technologies play an important
    role in the agricultural domain. Typical user scenarios include products or livestock
    monitoring, supply chain and quality control tracking and lifecycle assessment
    of agricultural products (Welbourne et al., 2009). 2.2. Layer 2: the network layer
    At the second layer of IoT, wireless sensor nodes interacting with physical objects
    and/or their environment, communicate with their neighbouring nodes or a gateway,
    building networks through which the data are usually forwarded towards a remote
    infrastructure for storage, further analysis, processing and dissemination of
    the valuable knowledge that can be extracted (Gubbi et al., 2013). When it comes
    to wireless communications, a large scientific literature has been created on
    sensor networks, addressing several problems, such as energy efficiency, networking
    features, scalability and robustness (Atzori et al., 2010). Communication protocols
    built over wireless standards, such as 802.15.4, facilitate the device networking
    and bridge the gap between the internet-enabled gateways and the end-nodes. Such
    protocols include ZigBee, ONE-NET, Sigfox, WirelessHART, ISA100.11a, and 6LowPan,
    to name a few (Suhonen, Kohvakka, Kaseva, Hämäläinen, & Hännikäinen, 2012). Bluetooth
    Low Energy (BLE), LoRa/LoRaWAN, DASH7 and low-power WiFi have also appeared in
    several deployments recently. 2.3. Layer 3: the application layer The application
    layer is the third layer of the IoT. It is of high importance and, in many ways,
    it is this that facilitates the realisation of the IoT. The application layer
    faces several issues which have to be resolved, such as the identification of
    the devices as unique entities. Identifying and addressing billions of devices
    around the globe will provide a direct, internet-like access and control over
    them through the future internet. The uniqueness of identity, reliability, persistence
    and scalability represent important features of the addressing schema (Gubbi et
    al., 2013). IPv6, with its internet mobility aspects, could alleviate some of
    the device identification problems and is expected to play a vital role in this
    field (Botta et al., 2014). However, the heterogeneous nature of wireless nodes,
    the variability of data types, concurrent operations and confluence of data from
    the devices amplifies the problem even further (Zorzi, Gluhak, Lange, & Bassi,
    2010). Meta-data and context-aware addressing, supplementary to IPv6, are expected
    to contribute a lot while dealing with the above-mentioned challenges (Kalmar,
    Vida, & Maliosz, 2013). Heterogeneity is another big challenge in the IoT world.
    The vision of IoT is to allow billions of devices, with great diversity in their
    technical specifications (form factor, power supply, environmental capabilities,
    compatibility with other devices), computing power, peripheral devices and networking
    subsystems to co-exist in one inter-network. Middleware is a software layer, composed
    of sub-layers located between the devices and the application layer, abstracting
    the device functionalities and technical specificities and providing developers
    with sets of more generic tools to build their applications (Fig. 4). Middleware
    has gained much attention due to its major role in simplifying the development
    of new services and the integration of legacy technologies into new ones (Atzori
    et al., 2010). Furthermore, middleware is the mechanism that combines the cloud
    infrastructure with a Service-Oriented Architecture (SOA) and the sensor networks
    in a generic manner, ready to provide appropriate tools for any type of deployment
    (Ghosh & Das, 2008). SOA approach benefits the enterprise by reducing the time
    invested in adapting itself to the changes imposed by the market and allows software
    and hardware reuse, since it is technology independent, when it comes to service
    implementations (Pasley, 2005). Future agricultural IoT interconnected devices
    may include sensors, connected machinery and vehicles, weather stations, internet
    gateways, network storage, RFID scanners, smartphones, tablets, wearables and
    many other devices. Download : Download high-res image (233KB) Download : Download
    full-size image Fig. 4. Software layers over heterogeneous devices and operating
    systems presenting how the Middleware layer serves in order to make it possible
    for a single/common application to run seamlessly on several platforms and operating
    systems. Finally, in order for the sensed data to have a real value for the end-user
    or another system (in case of M2M scenarios) they have to be stored, analysed,
    synthesised and presented in an understandable and intuitive manner. Big Data
    is one side-effect of the continuous data flow coming from billions of geo-distributed
    devices and has three dimensions, namely volume, variety and velocity (Beyer,
    2011). The Cloud with its virtually unlimited computational and storage capacity
    is the only technology capable of withstanding the IoT workload. In modern agricultural
    scenarios, stored data are automatically processed, corrected and used or combined
    under artificial intelligence algorithms, machine learning technologies, and decision-making
    systems based on models, in order to extract knowledge about phenomena, which
    cannot be directly measured. These systems can either propose the optimal tactic
    to the end-user, or produce the appropriate control signals for actuator devices,
    offering fully-automated sensing and control solutions. Plenty of studies have
    focussed on the standardisation of the IoT core technologies (Jazayeri et al.,
    2015, Sawant et al., 2014). The classical WSN/WSAN (Wireless Sensor-Actor Network)
    paradigm, i.e. distributed smart devices sensing and transferring data to a sink
    and/or driving one or more actuators, moves one step further towards interoperability
    of devices and objects. Other aspects of IoT include technologies that support
    the intercommunication among devices and/or end-users, as well as the platforms,
    the software, the hardware abstractions and the programming tools, over which
    developers and providers can build new applications and services (Atzori et al.,
    2010, Miorandi et al., 2012). The IoT paradigm is driven by the principles: “Anything
    communicates – anything is identified – anything interacts”. 3. Internet of Things
    hardware, platforms and sensors in agriculture 3.1. Low-power wireless sensor
    networks In the recent literature, a large number of embedded programmable devices
    have been used. Some are custom-built, while others are either commercial programmable
    boards or complete, closed-source sensing/monitoring solutions. Researchers choose
    their equipment depending on the research priorities set, or the main focus of
    each study. Commercial sensing solutions provide a number of features out of the
    box, allowing researchers to focus on other aspects of IoT deployments, like meta-processing,
    smart algorithms for monitoring and control, cloud interoperability, etc. (Edwards
    Murphy et al., 2015, Mamduh et al., 2012, Yu et al., 2011). Programmable, open
    solutions, on the other hand, provide developers the flexibility to have full
    control over the behaviour of the nodes and the network and program new peripheral
    devices to make them compatible with the nodes, like new sensor or actuator modules
    (Akshay et al., 2012; Wu, Li, Ma, Qiu, & He, 2012; Hou and Gao, 2010, Jayaraman
    et al., 2015a, Jimenez et al., 2012, Park and Park, 2011). The potential applications
    of IoT in agriculture cover a large number of scenarios. Barcelo-Ordinas, Chanet,
    Hou, & Garcia-Vidal (2016) categorise them in networks of scalar sensors, utilised
    in sensing and control of agricultural infrastructures, such as greenhouses, multimedia
    sensor networks for the remote image capturing and processing for the detection
    of insects and plant diseases, and tag-based networks (RFID, NFC) for product
    tracking and remote identification. Especially in the case of WSN in agriculture,
    the specific characteristics of the situation and the environment, in which the
    nodes will be deployed, should be taken into account. Crops, or other obstacles
    in farmlands whose positions may move, cause considerable interference in the
    communication between nodes. This varying movement of obstacles affects the connection
    quality of links, making it variable with space and time, affecting the deployment,
    routing, failure diagnosis, and other aspects of WSN. Harsh environmental factors
    such as temperature, humidity, rainfall and high solar radiation, the effect of
    shading by the plant leaves, as well as the noise produced by building structures,
    such as greenhouses, extend the spatiotemporal climatic variation, greatly affecting
    the links and communication quality among the nodes (Wang, Yang, & Mao, 2017).
    The periodic nature of the recorded phenomena in agricultural installations usually
    drive the development of the applications. This characteristic sets the requirements
    and provides opportunities for novel duty-cycle control, sampling scheduling,
    data reconstructions, as well as data storage and query, intelligent control,
    and so on (Ahonen et al., 2008, Mottola and Picco, 2011; Pawlowski et al., 2008).
    Therefore, the choice of the correct IoT platform to build a deployment could
    affect the overall success of the project. A summary of some of the popular programmable
    boards and embedded platforms used in recent deployments is presented in Table
    1. Table 1. Summary table of WSN/IoT embedded platforms. Platform name Microcontroller
    Transceiver Program, Data Memory Flash, EEPROM, Ext. Memory Programming IMote
    2.0 Marvell PXA271 ARM 11–400 MHz TI CC2420 IEEE 802.15.4/ZigBee compliant radio
    32 MB SRAM 32 MB C,.Net, NesC Iris Mote ATmega 1281 Atmel AT86RF230 802.15.4/ZigBee
    compliant radio 8 KB RAM 128 KB NesC, C TelosB/T-Mote Sky Texas Instruments MSP430
    microcontroller 250 kbit/s 2.4 GHz IEEE 802.15.4 Chipcon Wireless Transceiver
    8 KB RAM 48 KB NesC, C Zolertia Remote CC2538 ARM Cortex-M3 Dual Radio: 802.15.4/CC1200
    868/915 MHz 32 KB RAM 512 KB C, NesC Zolertia Z1 Texas Instruments MSP430 microcontroller
    Chipcon Wireless Transceiver 2.4 GHz IEEE 802.15.4 8 KB RAM 92 KB C, NesC WiSMote
    Texas Instruments MSP430 TI CC2520 2.4 GHz IEEE 802.15.4 16 KB 1–8 MB, 128, 192
    or 256 KB C Waspmote Atmel ATmega 1281 ZigBee/IEEE 802.15.4/DigiMesh/RF, 2.4 GHz/868
    MHz/915 MHz 8 KB SRAM 128 KB, 4 KB EEPROM, 2 GB SD card C, Processing Arduino
    Uno/Mega/Nano ATmega328P/ATmega168/ATmega328P External modules 2 KB SRAM/8 KB
    SRAM/2 KB SRAM 32 KB, 1 KB/256 KB, 4 KB/32 KB, 1 KB C, Processing Arduino Yun
    (2 processors) ATmega32U4/Atheros AR9331 Ethernet, Wifi 2.5 KB, 64 MB DDR2 1 KB/16
    MB C, Processing, Linux Raspberry Pi (various versions) ARMv6 (1-core, 700 MHz)/ARMv7
    (4-cores, 900 MHz)/ARMv8 (4-cores, 1.2 GHz) Onboard LAN, *Wifi/Bluetooth (*RPi
    3 only) 256 MB–1 GB SDRAM (@400 MHz) SD card Linux LoPy (2 processors) Xtensa
    (2-cores, 160 MHz) Onboard Wifi, SX1272 LoRa, Bluetooth (BLE) 256 KB 1 MB (internal)
    4 MB (external) MicroPython NodeMCU ESP8266/LX106 Onboard Wifi 20 KB RAM 4 MB
    Flash Lua, C, Processing, Python Arietta G25 ARMv9 (4-cores, 400 MHz) External
    Wifi adapter 128–256 MB RAM SD card Linux WIOT Board ATmega32U4 ESP8266 (for Wifi)
    Wifi 2.5 KB SRAM 32 KB, 1 KB C, Processing Intel Galileo/Edison Intel Quark X1000/Intel
    Atom External modules/Wifi/Bluetooth LE 256 MB RAM/1 GB RAM 8 MB, SD card/4 GB,
    SD card C, Processing/Linux 3.2. Widely used sensors and platform characteristics
    for agricultural Internet of Things/Wireless Sensor Network deployments Although
    many theoretical aspects of WSN have been extensively studied in literature, realistic
    IoT/WSN deployments in agricultural sector are quite demanding and remain a challenging
    task. Sensor modules need to be accurate enough, with the appropriate measuring
    range for the situation at hand, and shielded against environmental factors which
    can either create false readings or even destroy the sensor permanently. Due to
    the distributed nature of IoT, in cases of battery-operated nodes, placed in open
    fields or other agricultural facilities, replacing the power source can be a very
    difficult task, if not impossible. Therefore, very strict power constraints affect
    the selection of hardware and the low-power features of the selected peripheral
    devices are always considered when designing a new system. Software-wise the components
    which are to be integrated in order to implement the functionality of an end-device
    have to be carefully inspected. The final functional code requires deep embedded
    software engineering knowledge and sufficient testing to avoid failures in the
    field (Barrenetxea et al., 2008, Langendoen et al., 2006). . Other characteristics
    making a low-power, embedded device selectable for a deployment are its long-term
    stability, the number of digital and analogue inputs/outputs which determines
    the number of peripheral devices (sensors and actuators) that can be supported,
    the ability to be sustainable through power harvesting modules, and, the effort
    required for its programming. 3.3. Wireless communication protocols in agriculture
    The dominant wireless technologies in the domain of IoT are separated into seven
    main categories, namely, Global System for Mobile Communications (Groupe Spécial
    Mobile – GSM) offered by authorised operators, Wireless Personal Area Networks
    (WPAN), Wireless Regional Area Networks (Cognitive Radio/WRAN), Mesh, Point-to-Point
    (P2P) and Low-Power Wide-Area Network (LPN/LPWAN). GSM standard is further divided
    into GSM EDGE Radio Access Network (GERAN) and UMTS Terrestrial Radio Access Network
    (UTRAN). Numerous wireless devices have been developed upon the various wireless
    standards. As in many aspects of IoT, interoperability is the biggest challenge.
    Another challenge, which is common in the wireless communications, is the interference
    among devices that operate in the same band (Bluetooth, ZigBee and WiFi, for instance)
    or in neighbouring bands. An attempt to summarise the most popular IoT wireless
    standards is presented in Table 2. Table 2. Summary table of the most popular
    IoT wireless technologies. Wireless technology Wireless standard Network type
    Operating frequency Max. range Max data rate & power Security WiFi IEEE 802.11a,
    11b, 11g, 11n, 11ac, 11ad WLAN 2.4, 3.6, 5 GHz 60 GHz 100 m, 6–780 Mbps 6.75 Gbps
    at 60 GHz 1 Watt WEP, WPA, WPA2 Z-wave Z-wave Mesh 908.42 MHz 30 m 100 Kbps, 1
    mW Triple DES Bluetooth Bluetooth (Formerly IEEE 802.15.1) WPAN 2400–2483.5 MHz
    100 m 1–3 Mbps, 1 W 56/128 bit 6LowPAN IEEE 802.15.4 WPAN 908.42 MHz or 2400–2483.5
    MHz 100 m 250 Kbps, 1 mW 128 bit Thread IEEE 802.15.4 WPAN 2400–2483.5 MHz N/A
    N/A N/A Sigfox Sigfox WPAN 908.42 MHz 30–50 km 10–1000 bps N/A LoRaWAN LoRaWAN
    WPAN Various 2–15 km 0.3–50 kbps N/A BluetoothSmart (BLE) IoT Inter-connect WPAN
    2400–2483.5 MHz 100 m 1 Mbps, 10–500 mW 128 bit AES Zigbee IEEE 802.15.4 Mesh
    2400–2483.5 MHz 10 m 250 Kbps, 1 mW 128 bit THREAD IEEE 802.15.4, 6LoWPAN Mesh
    2400–2483.5 MHz 11 m 251 Kbps, 2 mW 128 bit AES RFID Many standards Point to Point
    13.56 MHz 1 m 423 Kbps, about 1 mW Possible NFC ISO/IEC 13157 Point to Point 13.56
    MHz 0.1m 424 Kbps, 1–2 mW Possible GPRS 3GPP GERAN GSM 850, 1900 MHz 25 km/10
    km 171 Kbps 2 W/1 W GEA2/GEA3/GEA4 EDGE 3GPP GERAN GSM 850/1900 MHz 26 km/10 km
    384 Kbps, 3 W/1 W A5/4, A5/3 HSDPA/HSUPA 3GPP UTRAN 850/1700/1900 MHz 27 km/10
    km 0.73–56 Mbps, 4 W/1 W USIM LTE 3GPP GERAN/UTRAN 700–2600 MHz 28 km/10 km 0.1–1
    Gbps, 5 W/1 W SNOW 3G Stream Cipher ANT+ ANT + Alliance WSN 2.4 GHz 100 m 1 Mbps,
    1 mW AES-128 Cognitive Radio IEEE 802.22 WG WRAN 54–862 MHz 100 km 24 Mbps, 1
    W AES-GCM Weightless-N/W Weightless SIG LPWAN 700/900 MHz 5 km 0.001–10 Mbps,
    40 mW/4 W 128 bit As can clearly be seen in Table 2, IoT wireless communications
    provide a wide variety of bandwidth, communication range, power consumption and
    security measures. The variety of technologies and standards, as well as the differentiation
    among the IoT projects and their specific requirements, hamper interoperability
    at the networking layer. When it comes to agricultural deployments, high temperature,
    and high humidity are two very common phenomena. Based on the observations of
    Bannister, Giorgetti, and Gupta (2008), temperature has a significant effect on
    the received signal strength (RSS) when it rises from 25 °C to 65 °C. Similar
    results were presented by Boano, Tsiftes, Voigt, Brown, and Roedig (2010). Furthermore,
    humidity can also be very high in agricultural deployments. In the case of open
    fields, the wireless nodes are directly exposed to rain or irrigation systems.
    In greenhouses, relative humidity can be over 80% for long periods too. Humidity
    has been shown to strongly affect radio wave propagation (Room and Tate, 2007,
    Thelen, 2004). Therefore, the number of nodes, the distance between them, the
    height of the antenna, and the operating frequency based on the desired size of
    messages are serious matters to be taken into consideration, when choosing a wireless
    transceiver for an agricultural deployment. 4. Applications in agriculture The
    general overview of IoT structural elements presented in Section 2 clearly reveals
    the great potential of these technologies in the domains of Agriculture and the
    recent trend of Precision Agriculture (PA). Recent advances in sensor technology,
    along with the miniaturisation of electronics and the great drop in their cost
    have contributed a lot to the technological evolution of traditional agriculture
    to precision and micro-precision agriculture (Kacira et al., 2005). Climate sensors,
    ground sensors, radiation sensors, weather stations (made of sensors) emphasise
    that it is all about sensors and sensor data flows, which are stored and used
    for monitoring, knowledge mining, reasoning, and control. Additionally, in recent
    years, there is an increasing demand for high quality and safe agricultural products.
    This trend has yielded the need for interoperable, distributed, robust, and accurate
    logistics traceability systems. The IoT family of technologies provides all the
    appropriate tools for building and maintaining such infrastructure and services,
    specially designed to support supply chains in agricultural and floricultural
    sectors (Verdouw, Beulens, & van der Vorst, 2013). 4.1. Agricultural monitoring
    and control Sensors, in the form of wired and wireless sensors, have been widely
    used in agriculture during the last decades. Sensing the environment in which
    production occurs, and, more recently, the responses of the plants to the climate
    (Nishina, 2015), is crucial for taking the correct and more precise decisions,
    optimising productivity and quality of the cultivars. The traditional WSN have
    recently evolved to IoT-friendly-WSN, by adopting more generic standards in terms
    of communication, allowing remote access to the internet and implementing smart
    algorithms for meta-processing of the data aiming to improve monitoring and/or
    control. Versatile devices, with high computational abilities, very convenient
    form factor and low cost, can nowadays be used, on batteries, and operate for
    long periods, with or without the assistance of power harvesting modules. In addition,
    modern embedded devices have sufficient resources to support more demanding sensors,
    such as image sensors, and the support of more sophisticated networking protocols,
    such TCP/IP, extending the traditional WSN networking capabilities. A rough classification
    of literature on monitoring and control could be: - Monitoring and, in some cases,
    creation of early warnings, via simplified rules. This includes multi-point monitoring
    for catching and absorbing climatic gradients in greenhouse cultivation (Katsoulas
    et al., 2017a, Tolle et al., 2005). - Monitoring, meta-processing (algorithm/model
    implementations on the server/cloud side) and control, including control suggestions
    to the user and fully automated control (Aiello, Giovino, Vallone, Catania, &
    Argento, 2017). - Monitoring using more computationally demanding sensors, such
    as image sensors and more powerful end-nodes. Captured images are used either
    for plain monitoring of the system, or utilised for image processing on-board,
    at the edge of the network (Fog computing) or on a cloud/server-based infrastructure
    (Katsoulas et al., 2016, Ravikanth et al., 2017, Senthilkumar et al., 2016). Sensing
    is of high importance in agriculture. WSNs have been widely used in climate and
    soil monitoring deployments both in open field and in controlled environment agriculture.
    4.2. Controlled environment agriculture Greenhouses have been shown to present
    significant climate variability, which affects the productivity of the plants
    (Kittas, Bartzanas, & Jaffrin, 2003), if not harming them. Greenhouse cultivation
    is more intense, therefore, in many cases, it requires higher precision in terms
    of monitoring and control (Fig. 4). Several studies have focussed only on localised
    and remote monitoring. In most cases data are stored and represented in various
    graphical ways (Wu et al., 2012; Jimenez et al., 2012; Katsoulas, Bartzanas, &
    Kittas, 2017; Yu et al., 2011, Zhao et al., 2010). In addition to the high-precision
    monitoring, there have been studies presenting systems which incorporate meta-processing
    procedures with data transferred on remote infrastructures through the internet.
    Utilising well-evaluated equations, crop and climate models, such systems produce
    assessments of the climate and/or crop status in order for the grower to take
    better decisions or get early warnings (Ferentinos et al., 2015, Fernandes et
    al., 2013, Hernandez and Park, 2011, Hu and Qian, 2011, Jiao et al., 2014, Katsoulas
    et al., 2017b, Ma et al., 2011, Suciu et al., 2015, Tuli et al., 2014, Yu and
    Zhang, 2013, Zhou et al., 2013). Agricultural-cloud IoT solutions for greenhouse
    monitoring and control are more and more common. End-nodes collect various data
    which are uploaded to a cloud infrastructure where these data are analysed deeply,
    in a faster way, at a lower cost, reliably and efficiently (Jiawen et al., 2013,
    Keerthi and Kodandaramaiah, 2015, Wang et al., 2013a). Since plant factories are
    becoming more popular in the wider frame of urban CEA in smart cities, there have
    been a number of studies focussing on artificial growth systems (Kozai and Fujiwara,
    2016, Lee and Yoe, 2015). Katsoulas, Bartzanas, et al. (2017) presented a system
    for online precise irrigation scheduling for greenhouses (OpIRIS) based on well-evaluated
    scientific knowledge organised in the form of a web application communicating
    with remote sensors installed in greenhouses. The system integrated industrial-grade
    climate sensors and machinery including fertigation valves/controllers and sensors
    for automatic drainage sampling and forwarding the data to the cloud infrastructure
    for further analysis. The system proved very accurate in predicting the crop water
    needs and provided growers with very efficient indications about when to irrigate
    and how much nutrient solution to apply. Similar attempts to automate irrigation
    have been based on an agricultural information cloud and a hardware combination
    of IOT and RFID (Tongke, 2013), the system achieving dynamic distribution of resource
    and load balancing. As a result, authors report high efficiency of resource use
    and significant improvement in water quality. There have also been studies that
    implement control of one or more of the actuator systems in greenhouses, such
    as climate, or, irrigation controllers, also known as WSANs (Moga et al., 2012,
    Sabri et al., 2011). The control can be done remotely in two ways. The first is
    manual control by the farmer. In these cases, system administrator, based on the
    suggestions made by a Decision Support System/Expert System, chooses to control
    the machinery. Applications in this monitoring and control category include Integrated
    Pest Management (IPM) (Chougule, Kumar, & Mukhopadhyay, 2016), remote monitoring,
    warning and control in open field (Chu et al., 2013, Dinh Le and Tan, 2015), and
    in controlled environment agriculture (Ferentinos et al., 2015, Pahuja et al.,
    2013, Qiu et al., 2013). There also plenty of studies attempting fully-automated
    control by communicating the control signals, produced after processing the sensed
    data, directly to the actuators succeeding a closed-loop control (Kassim et al.,
    2014, Nikolidakis et al., 2015, Rajaoarisoa et al., 2012, Yin et al., 2014, Yongheng
    and Feng, 2014). 4.3. Open-field agriculture In open-field deployments researchers
    usually measure climate conditions, but also focus a lot in soil monitoring. In
    many cases authors use more than one sensors in the ground, at different depths.
    Optimising irrigation by providing exactly as much water as the plant needs is
    the only way to preserve water, since all the extra amount or irrigation is either
    lost into the ground, or in the atmosphere through evaporation (Fig. 5) (Sivakumar,
    GunaSekaran, SelvaPrabhu, Kumaran, & Anandan, 2012). Optical sensors have been
    used for additional information on crop reflectance or remote temperature sensing,
    as well as, mapping of the situation in the field (Fisher and Kebede, 2010, Inoue
    et al., 2012, Moshou et al., 2011, O''Shaughnessy and Evett, 2010). Integration
    of IoT and Geographical Information Systems (GIS) has been proposed in cases where
    precision of mapping of the sensed data is important (Li et al., 2012, Wang et
    al., 2013b, Ye et al., 2013). Another aspect of WSNs in agriculture are the Underground
    Wireless Sensor networks, which present significant advantages, especially in
    open field applications (De Lima et al., 2010, Dong et al., 2013, Silva and Vuran,
    2010). Download : Download high-res image (188KB) Download : Download full-size
    image Fig. 5. A modern example of Cloud IoT solutions for climate monitoring and
    climate optimisation based on cloud analytics services. Data fusion is realised
    on the cloud. These data come from various sources, like sensors inside and outside
    the facilities, weather stations, historical data from data bases. User can interact
    remotely with the system through a wide variety of devices (laptops, tablets,
    smartphones, etc.). As mentioned earlier, the advances in embedded device technology
    have made very powerful platforms available at very convenient prices. This has
    given the chance to researchers to implement more sophisticated end-devices, such
    as Wireless Multimedia Sensor Networks, incorporating sensing nodes with much
    bigger computational capabilities, enough to support highly demanding peripheral
    devices, such as image sensors. This kind of node allows heavier local processing
    at the edge of the network, in fog-network-like manner. These works either use
    cameras for simple security or facility monitoring purposes (Cai et al., 2011,
    Zhang et al., 2011), or implement various image processing algorithms in order
    to track invading animals (Baranwal & Pushpendra, 2016), insects or other plant
    threats (Dang et al., 2013, Wang et al., 2014) and crop growth (Rodriguez de la
    Concepcion, Stefanelli, & Trinchero, 2014). 4.4. Livestock applications Several
    deployments have been realised in the fields of livestock. Optimal environment
    which absorbs extreme climate conditions known to have negative effects on animals
    productivity is a serious matter for many authors (Corkery et al., 2013, Ilapakurti
    and Vuppalapati, 2015, Wang and Lee, 2012, Zhang et al., 2016). Livestock IoT
    includes not only animal and animal climate monitoring and control, but, in some
    cases includes field monitoring for optimal feeding practices (Fig. 6) (Bhargava,
    Ivanov, & Donnelly, 2015). Another aspect of livestock IoT includes the instrumentation
    and analysis of beehives (Edwards Murphy et al., 2015). Wireless sensors have
    been used in animal tracking and behavioural analysis (Asikainen et al., 2013,
    Huircán et al., 2010, Jeong and Yoe, 2012, Kwong et al., 2012, Nadimi et al.,
    2012) as well as odour and hazardous gas monitoring (Mamduh et al., 2012). There
    are also studies that focus on optimising the performance of the equipment used
    in livestock deployment, based on the imposed challenges of the situation at hand
    (Jeong & Yoe, 2012). Download : Download high-res image (151KB) Download : Download
    full-size image Fig. 6. The fusion of small and large-scale sensor networks, drones,
    autonomous vehicles, robots and agri-machinery supported by cloud infrastructure
    in open-field cultivation. Download : Download high-res image (154KB) Download
    : Download full-size image Fig. 7. A modern IoT livestock paradigm. Sensors in
    the field and on the animals monitoring the climate conditions where the animals
    live, with weather stations and other data sources being used for optimal livestock
    overview. 4.5. Food supply chain tracking Modern agriculture tends to be more
    and more industrialised. Therefore, standardisation mechanisms at each step for
    the product, from the grower to the consumer, have to be adopted in order to assure
    food safety and quality (Fig. 8). This need has led to a growing interest in food
    supply chain traceability systems. Internet of Things (IoT) technologies include
    plenty of solutions to contribute greatly to the construction, support and maintenance
    of such systems. In the reviewed literature, solutions focus either on the business
    side of Food Supply Chain (FSC) or technology. There are some works, though, which
    attempt to propose solutions for both sides. Recent developments in e-commerce
    have given a boost to various Supply Chain research activity. In this review,
    however, a focus only on FSC was attempted, since they are optimised for food
    supplies. Download : Download high-res image (206KB) Download : Download full-size
    image Fig. 8. Schematic representation of the food supply chain from the production
    phase until the final consumer. RFID is the most common IoT technology found in
    Food Supply Chain (FSC). RFID tags, acting as enhanced barcodes, enable the tracking
    of agricultural products. Recent research, following the IoT paradigm, has combined
    more than one sensor to enrich the information of product status whenever this
    is recorded through its RFID (Maksimovic et al., 2015, Zhao et al., 2013). A common
    issue in IoT is its distributed nature and the asynchronous and heterogeneous
    flow of information. Therefore, naming is vital for the accurate and fast retrieval
    of information when it comes to FSC tracking services (Liu et al., 2015). The
    realisation of IoT-based infrastructure leads to the virtualisation of the supply
    chains, since physical proximity is no longer required (Verdouw et al., 2013).
    Various models analysing the FSC issues and the way IoT technologies tackle them
    appear in literature (Lianguang, 2014, Zhang, 2014). Technological evolution,
    combined with the increasing robustness and maturity of several technologies met
    in IoT, have given researchers the chance to develop complete systems, which incorporate
    sensing modules and software infrastructures. The software part of these systems
    is either hosted on cloud providers or shared among distributed shareholders.
    Complete systems offer automated services, intelligent schemes and automatic reasoning
    based on the measured phenomena and artificial intelligence (Chen, 2015, Jiang
    and Zhang, 2013, Xu et al., 2011). Other works present approaches on how to organise
    a complete FSC information management system (Li, Chen, & Zhu, 2013) or how to
    design the system in such a way that it maximises the economic profit (Pang, Chen,
    Han, & Zheng, 2015). 4.6. Internet of Things middleware and interoperability Interoperability
    at all levels is a key concept in the developing IoT world. Middleware is an approach
    that aims to facilitate interoperability (Fig. 9). The concept of interoperability
    in IoT can be expressed in many ways. Modern agriculture has evolved into a highly-intensive
    industry, expanding from the level of single grower up to international organisations.
    Therefore, agricultural-oriented IoT research offers literature in all aspects
    of interoperability, namely technical, syntactical, semantic and organisational
    interoperability . Download : Download high-res image (99KB) Download : Download
    full-size image Fig. 9. The dimensions of interoperability (Serrano et al., 2015).
    Technical interoperability is associated with hardware and software components,
    aiming to provide seamless exchange of information between systems (M2M). Syntactical
    interoperability has to do with data formats, i.e. the syntax that messages should
    have, in order to be exchanged between the systems, in the form of bit-tables
    or high level languages (HTML, XML, etc.). Semantic interoperability has a special
    value for end users, since it has to do with the human interpretation and understanding
    of the content produced by IoT systems. Finally, organisational interoperability
    is of high importance when it comes to IoT scalability. The ability to communicate
    effectively and transfer meaningful data, over highly varying systems and/or geographic
    regions is the key to success of distributed, global-IoT infrastructures (Serrano
    et al., 2015). Hu, Wang, She, and Wang (2011a) present a middleware to promote
    data (Technical) interoperability among various grain storage systems. Technical
    interoperability is the absolute basic type of interoperability a system must
    satisfy. At a higher level of intercommunication among systems, syntactical interoperability
    has to be implemented, in more generic, understandable and human-friendly messages.
    The incorporation of new, high-end, technologies, such as IoT, within a traditional
    productive sector, such as agriculture, and the trend of precision agriculture
    has given Semantic interoperability middleware an extra value. This is because
    Semantic interoperability middleware makes technology more intuitive and easier
    to understand, for both growers and agronomists (Jayaraman et al., 2015b, Sawant
    et al., 2014). Knowledge retrieval is a second feature of Semantic middleware.
    Data flows are organised and synthesised, allowing for better reasoning and management
    in agricultural (Perera et al., 2013, Yuan et al., 2013) and livestock (Saraswathi
    Sivamani, Park, Shin, Cho, & Cho, 2015) deployments. Moving one step further towards
    the realisation of large-scale national, or international cooperative deployments,
    organisational interoperability has been studied (Hu et al., 2011b, Sivamani et
    al., 2013). Providing the base for seamless cooperation between organisations
    presents numerous advantages, ranging from the technical level, for instance,
    quality improvement in sensing, reasoning and control systems by automatic exchange
    of knowledge between self-learning and self-improving systems, up to economic
    and business level by adapting the production rate according to market trends.
    4.7. Multi-layer deployments and commercial solutions IoT allows for the interoperability
    of the systems and organisations. Therefore, it makes it easier to interconnect
    systems involved in the various phases of a product''s lifecycle and several studies
    have presented systems which integrate numerous platforms that monitor, control
    and track agricultural products. Fu (2012) presents in short an intelligent agricultural
    system which could potentially be used in optimal melon and fruit production and
    management, as well as internet trading and supply chain tracking of organic goods.
    IoT concepts and technologies have been widely applied in many aspects of the
    transportation and storage of goods from the producer to the wholesale reseller
    to the consumer, from post-harvest treatment optimisation, storage facilities
    monitoring and management, and controlled environment shipping containers (Dittmer
    et al., 2012, Moon et al., 2015) to swarms of delivery drones (Yu, Subramanian,
    Ning, & Edwards, 2015), autonomous trucks and ships. IoT applications are there
    to drive future changes (Hribernik, Warden, Thoben, & Otthein, 2010). Several
    vendors have moved towards providing solutions either in the form of service or
    solutions that also include the hardware to do the monitoring. In all these cases
    cloud-based applications do the analysis of the data providing suggestions, warnings
    or control signals. These solutions do not only focus on large-scale production,
    but also on individual gardening and home production. Bitponics is cloud-based
    solution offering automated advisory services for garden care (Bitponics, 2016).
    Plantlink offers a solution for connecting garden to home users integrating sensors
    and irrigation controller in one network (Plantlink, 2016). Growtronix is a modular
    system that can monitor almost every aspect of indoor gardens and plant factories
    (Growtronix, 2016). Some promising smart greenhouse monitoring and control solutions
    are offered by Sensaphone, Monnit and GetSenso (GetSenso, 2016, Monnit, 2016,
    Sensaphone, 2016). These solutions aim to optimise climate in greenhouses minimising
    the risk of yield losses through a more optimal climate for the crops. In addition,
    Fieldclimate appears to be a rich platform providing both hardware (weather stations,
    sensor nodes) and cloud-based software solutions (weather forecast, irrigation
    management, disease models etc.) (FieldClimate, 2016). CropX is a complete system
    including field ground sensors measuring soil moisture and temperature, uploading
    the data to the cloud and offer a mapping and optimal irrigation planning as a
    service to the grower through a mobile application (CropX, 2016). Microsoft has
    recently launched its end-to-end IoT platform for agriculture. FarmBeats consists
    of UAV drones and sensors, connectivity support, and cloud infrastructure which
    includes machine learning-based backend analytics with predictive features, and
    cloud storage (Microsoft, 2015). 5. Discussion 5.1. Internet of Things hardware
    & software challenges in agriculture When it comes to IoT in agriculture, several
    challenges arise. Firstly, the equipment residing at the perception layer has
    to be exposed directly to harsh environmental phenomena, like high solar radiation,
    extreme temperatures, rain or high humidity, strong winds, vibrations and other
    dangers capable of destroying the electronic circuits. The end-devices will have
    to stay active and function reliably for long periods relying on the limited power
    resources of batteries. Therefore, appropriate programming tools and low-power
    capabilities are mandatory, since the frequent battery replacement or reset of
    the stations (in case of a program failure), for example in a large-scale open
    field deployment, is not easy. Power harvesting can be a solution to some extent,
    however, the power consumption has still to be within the power budget of small
    power harvesting modules (e.g. solar panels, wind turbines etc.). Furthermore,
    the large number of interconnected (in an internet-like manner) devices produces
    an incredibly large amount of data, which will soon be beyond the resource capacities
    of small-scale server infrastructures to handle (Atzori et al., 2010, Ziegeldorf
    et al., 2014). 5.2. Organisational challenges & interoperability When it comes
    to logistics for the food and agricultural sector, this infrastructure aims to
    facilitate the exchange of information and the transportation of goods, optimising
    the production process and the supply chain networks globally. IoT is gradually
    transforming business processes by providing more accurate and real-time visibility
    to the flow of materials and products (Lee & Lee, 2015). Cloud Computing provides
    high quality services, hardware-agnostic application development tools and sufficient
    storage and computational resources to store and process the data produced at
    the edge of the network. Therefore, it seems like an ideal complement for the
    IoT technologies towards the composition of “CloudIoT” paradigm (Botta et al.,
    2014). The huge amount of data produced at the edge of the network, however, can
    incur a severely high cost to be transferred to the cloud, both in terms of money
    and latency. Therefore, the optimal balancing between the edge storage and processing
    and the part of the workload that is to be done on the cloud is a serious matter.
    Fog Computing is an extension of the Cloud Computing paradigm, expanding cloud
    technologies and tools, as well as, the horizons of application development (Bonomi,
    Milito, Natarajan, & Zhu, 2014). 5.3. Networking challenges The characteristics
    of the environment do not only impose challenges to the hardware, but also to
    the network layer. Wireless communication is the most common in agricultural deployments,
    due to the lack of wiring costs. Environment is known to be one of the major factors
    which lead to low wireless link quality, through the multi-path propagation effects
    and its contribution to background noise (Wang et al., 2017). Real-world deployments
    have shown that the performance of popular transceivers is affected by temperature
    (Bannister et al., 2008, Boano et al., 2010), humidity (Thelen, 2004), human presence
    and other obstacles within the space in which a wireless node attempts to communicate.
    Therefore, data have to be transferred using robust and reliable technologies,
    according to the requirements and challenges of the rural environment. 5.4. Security
    challenges The transfer to an interconnected internet of “smart things” must ensure
    the security, authenticity, confidentiality and privacy of the stakeholders involved
    in this network. In other words, IoT must be secure against external attacks,
    in the perception layer, secure the aggregation of data in the network layer and
    offer specific guarantees that only authorised entities can access and modify
    data in the application layer. Security in IoT is summarised in three requirements:
    authentication, confidentiality and access control (Sicari, Rizzardi, Grieco,
    & Coen-Porisini, 2015). In the perception layer the most common security issues
    include information acquisition security and physical security of the hardware.
    The latter one is quite important in the case of agriculture, since the devices
    can be deployed in open fields and function without surveillance for long periods.
    Due to the distributed nature of IoT and the fact that its devices may be deployed
    in diverse environments, a single security protocol is, usually, not enough (Li,
    2012). RFID security issues are usually related to leakage of information, which
    can unveil the location and other sensitive data. Security countermeasures include
    data encryption, use of blocker tags, tag frequency modification, jamming and,
    finally, tag destruction policy, in other words the physical ending of a tag''s
    life (Matharu, Upadhyay, & Chaudhary, 2014). Sensor nodes differ from RFID tags,
    in the way that sensors are active and relate to dynamic properties of things.
    Therefore, encryption algorithms, key distribution policies, intrusion detection
    mechanisms and security routing policies have to be deployed, always keeping in
    mind the hardware restrictions of smart devices. In the current IoT concept, data
    flow from the end devices to a gateway, which is in charge of uploading these
    data to other infrastructures, such as the cloud. Various security policies for
    sensor terminals exist, including cryptographic algorithms, identity authentication
    mechanisms, data flow control policies, data filtering mechanisms etc. (Li, 2012).
    Moreover, the perception layer requires information acquisition security measures
    too. Wiretapping, tampering, cheating, and replay attacks are just a few of the
    security threats. Therefore, authenticity, confidentiality and data integrity
    have to be ensured during the phase of data acquisition, and key management protocols
    and secure routing policies should be adopted and sensor node authentication policies
    must be leveraged to prevent data access by unauthorised entities (Gou, Yan, Liu,
    & Li, 2013). 5.5. Stack challenges Middleware is another part of IoT presenting
    specific requirements for increased security, since it stands between the network
    and application layers and is responsible both for data processing and communication
    interface between these two layers. Security in the middleware layer requires
    confidentiality and secure data storage. Wireless medium is challenging, when
    it comes to security in transmissions, even for more sophisticated hardware than
    the platforms met in IoT deployments. Therefore, the IoT architecture can easily
    be exposed to risks, such as denial of service attacks, unauthorised access, man-in-the-middle
    attacks, and virus injections which target and affect confidentiality and data
    integrity. Authentication, intrusion detection, key management and negotiation
    mechanisms could possibly provide solutions against the network layer threats.
    Application layer is the top layer in the IoT vision. It is the place where enormous
    flows of data streams end, requiring increased storage and computational resources.
    This is why the application layer is so closely-related with the cloud. The security
    issues here are not very different from the security issues of the cloud itself,
    including data security, privacy, backup and recovery. Control mechanisms need
    to administer the privileges and ownership of data and manage the access rights
    to all, or part of the information, both for physical users and between machines,
    or even organisations. 5.6. Potential value of IoT in agriculture Internet of
    Things is rapidly evolving and many novel applications and services are emerging
    from it. A great amount of research is being conducting towards the integration
    of various heterogeneous systems, the security assurance at various levels of
    IoT and the analytics, which will give a better insight into the “Big Data” in
    order to optimise various business processes. National policy of governments around
    the world for increased production rate of fresh-cut vegetables and meat, at lower
    price, with higher quality standards, as well as, the consumers'' demand for transparency
    in the production cycle and the environmental footprint of the products they buy,
    provide IoT a huge field for development and diffusion. According to Bradley,
    Barbier, and Handler (2013), the estimates from 2013 to 2022 of potential IoT
    value vary significantly, ranging from a minimum of $1 trillion up to more than
    $15 trillion, not including the increased revenues, the benefits of cost reduction
    among companies and industries and the general economic activity due to IoT. Much
    of the added-value of IoT comes from the flexibility and the optimisation and
    precision that it introduces into the production processes of industry and production
    units of all types. Therefore, it is not so risky to forecast that agricultural
    sector processes at all levels will drastically change in the very near future.
    Obviously the economic numbers related to IoT are very big, tempting some very
    serious players to invest in it. Examples, like the recent purchase of Nest Labs,
    a company specialising in IoT for home automation, by Google for $3.2 billion
    in cash and the purchase of Jasper Technologies, developer of and IoT cloud platform,
    by Cisco for $1.4 billion, reveal the great potential of IoT and prove that it
    is highly attractive to big investors and behemoth technological firms. The partnership
    formation, however, is not so trivial. This is due to the fact that the companies
    involved in IoT invest in one or a few aspects of it, because of its wide nature.
    Therefore, sooner or later, they will have to cooperate with each other, putting
    aside any competition, or the notion of who is more important, in order to introduce
    some universal standards in the evolving IoT hype. 6. Conclusion When it comes
    to agriculture, IoT is expected to optimise the production by many means. Farmlands
    and greenhouses are about to move from precision to a micro-precision model of
    agricultural production. Distributed, pervasive computing and precise monitoring
    of the facilities will provide the optimal growing or living conditions for both
    vegetables and animals. Autonomous systems will be able not only to command the
    actuators in the most efficient way, optimising the utility and resource usage,
    but also to control the production in accordance to the market situation, maximising
    the profit and minimising the costs in every possible way. On the other hand,
    food supply chains, equipped with WSN and RFID equipment, will be able to monitor
    each stage in the life of a product, make automatic reasoning, in case of a faulty
    product and increase consumer''s feeling of safety, through a transparent product
    lifecycle information system. All the above is the optimistic approach of the
    IoT integration in agriculture. However, in this concept, plenty of individual
    players are about to participate. First of all, local networks have to be secured
    against interference from other networks, especially as these technologies reach
    their full potential. In a real IoT scenario, most of the players will use different
    equipment, with different technical specifications and/or sensor characteristics.
    Obviously, the interoperability, the filtering and the semantic annotation of
    the data, coming from each producer, has to be made to some extent. This is the
    only way in which the data, coming from vastly heterogeneous sources, can be used
    to optimise a shared decision support or expert system. Security, anonymity and
    control over the access rights on the information is vital for such a system to
    be adopted. In a wider perspective, many of the data related to business/institution
    strategic planning cannot be disclosed or retrieved by non-authorised entities,
    so that the market is safe against unorthodox tactics. References Ahonen et al.,
    2008 T. Ahonen, R. Virrankoski, M. Elmusrati, P.O. Box Greenhouse monitoring with
    wireless sensor network IEEE/ASME international conference on mechtronic and embedded
    systems and applications (2008), pp. 403-408, 10.1109/MESA.2008.4735744 View in
    ScopusGoogle Scholar Aiello et al., 2017 G. Aiello, I. Giovino, M. Vallone, P.
    Catania, A. Argento A decision support system based on multisensor data fusion
    for sustainable greenhouse management Journal of Cleaner Production (2017) (in
    press) https://doi.org/10.1016/j.jclepro.2017.02.197 Google Scholar Akshay et
    al., 2012 C. Akshay, N. Karnwal, K.A. Abhfeeth, R. Khandelwal, T. Govindraju,
    D. Ezhilarasi, et al. Wireless sensing and control for precision Green house management
    Proceedings of the international conference on sensing technology, ICST (2012),
    pp. 52-56, 10.1109/ICSensT.2012.6461735 View in ScopusGoogle Scholar Asikainen
    et al., 2013 M. Asikainen, K. Haataja, P. Toivanen Wireless indoor tracking of
    livestock for behavioral analysis 2013 9th international wireless communications
    and mobile computing conference, IWCMC 2013 (2013), pp. 1833-1838, 10.1109/IWCMC.2013.6583835
    View in ScopusGoogle Scholar Atzori et al., 2010 L. Atzori, A. Iera, G. Morabito
    The internet of things: A survey Computer Networks, 54 (15) (2010), pp. 2787-2805,
    10.1016/j.comnet.2010.05.010 View PDFView articleView in ScopusGoogle Scholar
    Bannister et al., 2008 K. Bannister, G. Giorgetti, S.K. Gupta Wireless sensor
    networking for hot applications: Effects of temperature on signal strength, data
    collection and localization Proceedings of the 5th workshop on embedded networked
    sensors (HotEmNets 2008) (2008), pp. 1-5 doi:10.1.1.139.5984 CrossRefView in ScopusGoogle
    Scholar Baranwal and Pushpendra, 2016 T. Baranwal, K.P. Pushpendra Development
    of IoT based smart security and monitoring devices for agriculture development
    of IoT based smart security and monitoring devices for agriculture Cloud system
    and big data engineering (confluence), 2016 6th international conference. IEEE,
    2016 (2016), pp. 597-602, 10.13140/RG.2.1.1449.8966 View in ScopusGoogle Scholar
    Barcelo-Ordinas et al., 2016 J.M. Barcelo-Ordinas, J.P. Chanet, K.-M. Hou, J.
    Garcia-Vidal A survey of wireless sensor technologies applied to precision agriculture
    Precision Agriculture, 13 (2016), pp. 801-808 Google Scholar Barrenetxea et al.,
    2008 G. Barrenetxea, F. Ingelrest, G. Schaefer, M. Vetterli The hitchhiker''s
    guide to successful wireless sensor network deployments Proceedings of the 6th
    ACM conference on embedded network sensor systems – SenSys ''08, ACM Press, New
    York, New York, USA (2008), pp. 43-56, 10.1145/1460412.1460418 View in ScopusGoogle
    Scholar Beyer, 2011 M. Beyer Gartner says solving “big data” challenge involves
    more than just managing volumes of data (2011) Retrieved from http://www.gartner.com/newsroom/id/1731916
    Google Scholar Bhargava et al., 2015 K. Bhargava, S. Ivanov, W. Donnelly Internet
    of nano things for dairy farming Proceedings of the second annual international
    conference on nanoscale computing and communication - NANOCOM'' 15 (2015), pp.
    1-2, 10.1145/2800795.2800830 Google Scholar Bitponics, 2016 Bitponics Bitponics
    connects your garden to the world (2016) Retrieved October 21, 2016, from http://www.bitponics.com/
    Google Scholar Boano et al., 2010 C.A. Boano, N. Tsiftes, T. Voigt, J. Brown,
    U. Roedig The impact of temperature on outdoor industrial sensornet applications
    IEEE Transactions on Industrial Informatics, 6 (3) (2010), pp. 451-459, 10.1109/TII.2009.2035111
    View in ScopusGoogle Scholar Bonomi et al., 2014 F. Bonomi, R. Milito, P. Natarajan,
    J. Zhu Fog computing: A platform for internet of things and analytics Studies
    in Computational Intelligence, 546 (2014), pp. 169-186, 10.1007/978-3-319-05029-4_7
    View in ScopusGoogle Scholar Botta et al., 2014 A. Botta, W. de Donato, V. Persico,
    A. Pescapé Integration of cloud computing and internet of things: A survey Future
    Generation Computer Systems, 56 (2014), pp. 684-700, 10.1016/j.future.2015.09.021
    Google Scholar Bradley et al., 2013 J. Bradley, J. Barbier, D. Handler Embracing
    the internet of everything to capture your share of $ 14. 4 trillion Cisco Ibsg
    Group (2013) Retrieved from http://www.cisco.com/web/about/ac79/docs/innov/IoE_Economy.pdf
    Google Scholar Cai et al., 2011 K. Cai, X. Liang, K. Wang Development of field
    information monitoring system based on the internet of things Intelligent computing
    and information science (Part I), Springer, Chongqing, China (2011), pp. 675-680
    CrossRefView in ScopusGoogle Scholar Chen, 2015 R.Y. Chen Autonomous tracing system
    for backward design in food supply chain Food Control, 51 (2015), pp. 70-84, 10.1016/j.foodcont.2014.11.004
    View PDFView articleView in ScopusGoogle Scholar Chougule et al., 2016 A. Chougule,
    J.V. Kumar, D. Mukhopadhyay Using IoT for integrated pest management Internet
    of things and applications (IOTA), International conference on. IEEE, 2016 (2016),
    pp. 17-22 CrossRefView in ScopusGoogle Scholar Chu et al., 2013 X. Chu, X. Cui,
    D. Li AISC 191-remote monitoring and control of agriculture Proceedings of the
    2012 international conference of modern computer science and applications, Springer
    Berlin Heidelberg (2013), pp. 623-627 CrossRefView in ScopusGoogle Scholar Corkery
    et al., 2013 G. Corkery, S. Ward, C. Kenny, P. Hemmingway Monitoring environmental
    parameters in poultry production facilities Computer aided processing engineering
    – CAPE forum 2013, Institute for Process and Particle Engineering, Graz University
    of Technology (2013), p. 10 Retrieved from http://hdl.handle.net/10197/4257 View
    in ScopusGoogle Scholar CropX, 2016 CropX CropX Inc. – CropX is a revolutionary
    software service, integrated with wireless sensors, which saves water and energy
    and boosts crop yield (2016) Retrieved from https://www.cropx.com/ Google Scholar
    Dang et al., 2013 K. Dang, H. Sun, J.P. Chanet, J. Garcia-Vidal, J.M. Barcelo-Ordinas,
    H.L. Shi, et al. Wireless multimedia sensor network for plant disease detections
    NICST''2103 new information communication science and technology for sustainable
    development: France-China international workshop, 18–20 Sept., (September), 6
    (2013) Retrieved from http://cemadoc.irstea.fr/cemoa/PUB00038985 Google Scholar
    De Lima et al., 2010 G.H.E.L. De Lima, L.C. E. Silva, P.F.R. Neto WSN as a tool
    for supporting agriculture in the precision irrigation 6th international conference
    on networking and services, ICNS 2010, includes LMPCNA 2010; INTENSIVE 2010 (2010),
    pp. 137-142, 10.1109/ICNS.2010.26 View in ScopusGoogle Scholar Dinh Le and Tan,
    2015 T. Dinh Le, D.H. Tan Design and deploy a wireless sensor network for precision
    agriculture 2015 2nd national foundation for science and technology development
    conference on information and computer science (NICS) (2015), pp. 294-299, 10.1109/NICS.2015.7302210
    View in ScopusGoogle Scholar Dittmer et al., 2012 P. Dittmer, M. Veigt, B. Scholz-Reiter,
    N. Heidmann, S. Paul The intelligent container as a part of the internet of things:
    A framework for quality-driven distribution for perishables Proceedings – 2012
    IEEE international conference on cyber technology in automation, control, and
    intelligent systems, CYBER 2012, IEEE (2012), pp. 209-214, 10.1109/CYBER.2012.6392555
    View in ScopusGoogle Scholar Dong et al., 2013 X. Dong, M.C. Vuran, S. Irmak Autonomous
    precision agriculture through integration of wireless underground sensor networks
    with center pivot irrigation systems Ad Hoc Networks, 11 (7) (2013), pp. 1975-1987,
    10.1016/j.adhoc.2012.06.012 View PDFView articleView in ScopusGoogle Scholar Edwards
    Murphy et al., 2015 F. Edwards Murphy, E. Popovici, P. Whelan, M. Magno Development
    of an heterogeneous wireless sensor network for instrumentation and analysis of
    beehives Instrumentation and measurement technology conference (I2MTC), 2015 IEEE
    international (2015), pp. 346-351, 10.1109/I2MTC.2015.7151292 View in ScopusGoogle
    Scholar FAO, 2009 FAO Global agriculture towards 2050 (2009) Retrieved August
    10, 2016, from http://www.fao.org/fileadmin/templates/wsfs/docs/Issues_papers/HLEF2050_Global_Agriculture.pdf
    Google Scholar Ferentinos et al., 2015 K.P. Ferentinos, N. Katsoulas, A. Tzounis,
    C. Kittas, T. Bartzanas A climate control methodology based on wireless sensor
    networks in greenhouses Acta Horticulturae, 1107 (2015), pp. 75-82, 10.17660/ActaHortic.2015.1107.9
    View in ScopusGoogle Scholar Fernandes et al., 2013 M.A. Fernandes, S.G. Matos,
    E. Peres, C.R. Cunha, J.A. López, P.J.S.G. Ferreira, et al. A framework for wireless
    sensor networks management for precision viticulture and agriculture based on
    IEEE 1451 standard Computers and Electronics in Agriculture, 95 (2013), pp. 19-30,
    10.1016/j.compag.2013.04.001 View PDFView articleView in ScopusGoogle Scholar
    FieldClimate, 2016 FieldClimate Fieldclimate platform – turning information into
    profits (2016) Retrieved October 21, 2016, from http://metos.at/tiki/ Google Scholar
    Fisher and Kebede, 2010 D.K. Fisher, H. Kebede A low-cost microcontroller-based
    system to monitor crop temperature and water status Computers and Electronics
    in Agriculture, 74 (1) (2010), pp. 168-173, 10.1016/j.compag.2010.07.006 View
    PDFView articleView in ScopusGoogle Scholar Fu, 2012 B. Fu Research on the agriculture
    intelligent system based on IOT Proceedings of 2012 international conference on
    image analysis and signal processing, IASP 2012(2012) (2012), pp. 386-389, 10.1109/IASP.2012.6425066
    Hangzhou, China View in ScopusGoogle Scholar GetSenso, 2016 GetSenso GetSenso
    solution for Greenhouse monitoring and automation (2016) Retrieved October 21,
    2016, from http://www.getsenso.com/iot-solution/greenhouse-monitoring/ Google
    Scholar Ghosh and Das, 2008 A. Ghosh, S.K. Das Coverage and connectivity issues
    in wireless sensor networks: A survey Pervasive and Mobile Computing, 4 (3) (2008),
    pp. 303-334, 10.1016/j.pmcj.2008.02.001 View PDFView articleView in ScopusGoogle
    Scholar Gou et al., 2013 Q. Gou, L. Yan, Y. Liu, Y. Li Construction and strategies
    in IoT security system 2013 IEEE international conference on green computing and
    communications and IEEE internet of things and IEEE cyber, physical and social
    computing, IEEE (2013), pp. 1129-1132, 10.1109/GreenCom-iThings-CPSCom.2013.195
    View in ScopusGoogle Scholar Growtronix, 2016 Growtronix Growtronix – the all
    in one Grow Room Automation and climate controller all from your android or iphone
    smartphone (2016) Retrieved October 21, 2016, from https://www.growtronix.com/cart/
    Google Scholar Gubbi et al., 2013 J. Gubbi, R. Buyya, S. Marusic, M. Palaniswami
    Internet of things (IoT): A vision, architectural elements, and future directions
    Future Generation Computer Systems, 29 (7) (2013), pp. 1645-1660, 10.1016/j.future.2013.01.010
    View PDFView articleView in ScopusGoogle Scholar Hernandez and Park, 2011 A. Hernandez,
    P. Park IEEE 802.15. 4 Implementation based on TKN15. 4 using TinyOS KTH electr.
    eng (2011), p. 64 Stockholm, Sweden Google Scholar Hou and Gao, 2010 J. Hou, Y.
    Gao Greenhouse wireless sensor network monitoring system design based on solar
    energy 2010 international conference on challenges in environmental science and
    computer engineering, Ieee, Wuhan, China (2010), pp. 475-479, 10.1109/CESCE.2010.274
    View in ScopusGoogle Scholar Hribernik et al., 2010 K.A. Hribernik, T. Warden,
    K.-D. Thoben, H. Otthein Logistics-an approach to connecting the information and
    material flows in autonomous cooperating logistics processes 12th international
    MITIP conference on information technology & innovation processes of the enterprises
    (2010), pp. 54-67 CrossRefGoogle Scholar Huircán et al., 2010 J.I. Huircán, C.
    Muñoz, H. Young, L. Von Dossow, J. Bustos, G. Vivallo, et al. ZigBee-based wireless
    sensor network localization for cattle monitoring in grazing fields Computers
    and Electronics in Agriculture, 74 (2) (2010), pp. 258-264, 10.1016/j.compag.2010.08.014
    View PDFView articleView in ScopusGoogle Scholar Hu and Qian, 2011 X. Hu, S. Qian
    IOT application system with crop growth models in facility agriculture Proceedings
    – 6th international conference on computer sciences and convergence information
    technology, ICCIT 2011 (2011), pp. 129-133 View in ScopusGoogle Scholar Hu et
    al., 2011a S. Hu, H. Wang, C. She, J. Wang A semantic middleware of grain storage
    internet IFIP advances in information and communication technology, Vol. 347 (2011),
    pp. 71-77, 10.1007/978-3-642-18369-0_8 View in ScopusGoogle Scholar Hu et al.,
    2011b S. Hu, H. Wang, C. She, J. Wang AgOnt: Ontology for agriculture internet
    of things IFIP advances in information and communication technology, Vol. 344
    (2011), pp. 131-137, 10.1007/978-3-642-18333-1_18 View in ScopusGoogle Scholar
    Ilapakurti and Vuppalapati, 2015 A. Ilapakurti, C. Vuppalapati Building an IoT
    framework for connected dairy 2015 IEEE first international conference on big
    data computing service and applications (2015), pp. 275-285, 10.1109/BigDataService.2015.39
    View in ScopusGoogle Scholar Inoue et al., 2012 Y. Inoue, E. Sakaiya, Y. Zhu,
    W. Takahashi Diagnostic mapping of canopy nitrogen content in rice based on hyperspectral
    measurements Remote Sensing of Environment, 126 (2012), pp. 210-221, 10.1016/j.rse.2012.08.026
    View PDFView articleView in ScopusGoogle Scholar Jayaraman et al., 2015a P.P.
    Jayaraman, D. Palmer, A. Zaslavsky, D. Georgakopoulos Do-it-yourself digital agriculture
    applications with semantically enhanced IoT platform 2015 IEEE tenth international
    conference on intelligent sensors, sensor networks and information processing
    (ISSNIP) (2015), pp. 1-6, 10.1109/ISSNIP.2015.7106951 Google Scholar Jayaraman
    et al., 2015b P. Jayaraman, D. Palmer, A. Zaslavsky, A. Salehi Addressing information
    processing needs of digital agriculture with OpenIoT platform (2015) And open-source
    Retrieved from http://link.springer.com/chapter/10.1007/978-3-319-16546-2_11 Google
    Scholar Jazayeri et al., 2015 M.A. Jazayeri, S.H.L. Liang, C.Y. Huang Implementation
    and evaluation of four interoperable open standards for the internet of things
    Sensors (Switzerland), 15 (9) (2015), pp. 24343-24373, 10.3390/s150924343 View
    in ScopusGoogle Scholar Jeong and Yoe, 2012 H. Jeong, H. Yoe Study on the sensor
    MAC protocol for environment monitoring of livestock farm Proceedings of the international
    conference on wireless networks (ICWN). The steering committee of the world congress
    in computer science, computer engineering and applied computing (WorldComp) (2012),
    p. 1 View in ScopusGoogle Scholar Jiang and Zhang, 2013 R. Jiang, Y. Zhang Research
    of agricultural information service platform based on internet of things 2013
    12th international symposium on distributed computing and applications to business,
    engineering & science (2013), pp. 176-180, 10.1109/DCABES.2013.39 View in ScopusGoogle
    Scholar Jiao et al., 2014 J. Jiao, H. Ma, Y. Qiao, Y. Du, W. Kong, Z. Wu Design
    of farm environmental monitoring system based on the internet of things Advanced
    Journal of Food Science and Technology, 6 (3) (2014), pp. 368-373 CrossRefView
    in ScopusGoogle Scholar Jiawen et al., 2013 Z. Jiawen, W. Xiangdong, L. Shujiang
    The embedded greenhouse control system design based on Qt and SQLite 2013 6th
    international conference on intelligent networks and intelligent systems (ICINIS
    2013), Ieee, Shenyang, China (2013), pp. 47-50, 10.1109/ICINIS.2013.19 Google
    Scholar Jimenez et al., 2012 A. Jimenez, S. Jimenez, P. Lozada, C. Jimenez Wireless
    sensors network in the efficient management of greenhouse crops 2012 ninth international
    conference on information technology – new generations, Ieee, Las Vegas, NV, USA
    (2012), pp. 680-685, 10.1109/ITNG.2012.136 View in ScopusGoogle Scholar Kacira
    et al., 2005 M. Kacira, S. Sase, L. Okushima, P.P. Ling Plant response-based sensing
    for control strategies in sustainable greenhouse production Journal of Agricultural
    Meteorology, 61 (1) (2005), pp. 15-22, 10.2480/agrmet.61.15 View in ScopusGoogle
    Scholar Kalmar et al., 2013 A. Kalmar, R. Vida, M. Maliosz Context-aware addressing
    in the internet of things using bloom filters 4th IEEE international conference
    on cognitive infocommunications, CogInfoCom 2013-proceedings (2013), pp. 487-492,
    10.1109/CogInfoCom.2013.6719296 View in ScopusGoogle Scholar Kassim et al., 2014
    M. Kassim, M. Rawidean, I. Mat, A.N. Harun Wireless sensor network in precision
    agriculture application 2014 international conference on computer, information
    and telecommunication systems (CITS) (2014), pp. 1-5, 10.1109/CITS.2014.6878963
    Google Scholar Katsoulas et al., 2016 N. Katsoulas, A. Elvanidi, K.P. Ferentinos,
    M. Kacira, T. Bartzanas, C. Kittas Crop reflectance monitoring as a tool for water
    stress detection in greenhouses: A review Biosystems Engineering, 151 (2016),
    pp. 374-398, 10.1016/j.biosystemseng.2016.10.003 View PDFView articleView in ScopusGoogle
    Scholar Katsoulas et al., 2017a N. Katsoulas, K.P. Ferentinos, A. Tzounis, T.
    Bartzanas, C. Kittas Spatially distributed greenhouse climate control based on
    wireless sensor network measurements Acta Horticulturae, 1154 (2017), pp. 111-120,
    10.17660/ActaHortic.2017.1154.15 Google Scholar Katsoulas et al., 2017b N. Katsoulas,
    T. Bartzanas, C. Kittas Online professional irrigation scheduling system for greenhouse
    crops Acta Horticulturae, 1154 (2017), pp. 221-228, 10.17660/ActaHortic.2017.1154.29
    View in ScopusGoogle Scholar Keerthi and Kodandaramaiah, 2015 V. Keerthi, G.N.
    Kodandaramaiah Cloud IoT based greenhouse monitoring system International Journal
    of Engineering Research and Applications, 5 (10) (2015), pp. 35-41 Google Scholar
    Kitchenham, 2004 B. Kitchenham Procedures for performing systematic reviews Keele
    University, Keele, UK (2004) 33 (TR/SE-0401), 28. doi:10.1.1.122.3308 Google Scholar
    Kittas et al., 2003 C. Kittas, T. Bartzanas, A. Jaffrin Temperature gradients
    in a partially shaded large greenhouse equipped with evaporative cooling pads
    Biosystems Engineering, 85 (1) (2003), pp. 87-94, 10.1016/S1537-5110(03)00018-7
    View PDFView articleView in ScopusGoogle Scholar Körner and Van Straten, 2008
    O. Körner, G. Van Straten Decision support for dynamic greenhouse climate control
    strategies Computers and Electronics in Agriculture, 60 (1) (2008), pp. 18-30,
    10.1016/j.compag.2007.05.005 View PDFView articleView in ScopusGoogle Scholar
    Kozai and Fujiwara, 2016 T. Kozai, K. Fujiwara Moving toward self-learning closed
    plant production systems LED lighting for urban agriculture, Springer Singapore,
    Singapore (2016), pp. 445-448, 10.1007/978-981-10-1848-0_32 View in ScopusGoogle
    Scholar Kwong et al., 2012 K.H. Kwong, T.-T. Wu, H.G. Goh, K. Sasloglou, B. Stephen,
    I. Glover, et al. Practical considerations for wireless sensor networks in cattle
    monitoring applications Computers and Electronics in Agriculture, 81 (2012), pp.
    33-44, 10.1016/j.compag.2011.10.013 View PDFView articleView in ScopusGoogle Scholar
    Langendoen et al., 2006 K. Langendoen, A. Baggio, O. Visser Murphy loves potatoes:
    Experiences from a pilot sensor network deployment in precision agriculture Proceedings
    20th IEEE international parallel & distributed processing symposium, Ieee, Rhodes
    Island, Greece (2006), p. 8, 10.1109/IPDPS.2006.1639412 Google Scholar Lee and
    Lee, 2015 I. Lee, K. Lee The internet of things (IoT): Applications, investments,
    and challenges for enterprises Business Horizons, 58 (4) (2015), pp. 431-440,
    10.1016/j.bushor.2015.03.008 View PDFView articleView in ScopusGoogle Scholar
    Lee and Yoe, 2015 M. Lee, H. Yoe Analysis of environmental stress factors using
    an artificial growth system and plant fitness optimization BioMed Research International,
    2015 (2015), pp. 1-6, 10.1155/2015/292543 View PDFView articleGoogle Scholar Li,
    2012 L. Li Study on security architecture in the internet of things 2012 international
    conference on measurement, information and control (MIC), Vol. 1, IEEE (2012),
    pp. 374-377 https://doi.org/978-1-4577-1604-1 Google Scholar Lianguang, 2014 M.
    Lianguang Study on supply-chain of agricultural products based on IOT 2014 sixth
    international conference on measuring technology and mechatronics automation (2014),
    pp. 627-631, 10.1109/ICMTMA.2014.153 Google Scholar Li et al., 2013 M. Li, G.
    Chen, Z. Zhu Information service system of agriculture IoT Automatika ‒ Journal
    for Control, Measurement, Electronics, Computing and Communications, 54 (4) (2013),
    pp. 415-426, 10.7305/automatika.54-4.413 Google Scholar Li et al., 2012 X. Li,
    L. Peng, C. Sun The application and forecast of geospatial information technology
    in agriculture internet of things 2012 2nd international conference on remote
    sensing, environment and transportation engineering, RSETE 2012-proceedings (2012),
    pp. 1-5, 10.1109/RSETE.2012.6260763 Google Scholar Liu et al., 2015 Y. Liu, H.
    Wang, J. Wang, K. Qian, N. Kong, K. Wang, et al. Enterprise-oriented IoT name
    service for agricultural product supply chain management International Journal
    of Distributed Sensor Networks, SAGE, 11 (8) (2015), pp. 1-12, 10.1155/2015/308165
    Google Scholar Maksimovic et al., 2015 M. Maksimovic, V. Vujovic, E. Omanovic
    A low cost internet of things solution for traceability and monitoring food safety
    during transportation Proceedings of the 7th international conference on information
    and communication technologies in agriculture, food and environment (HAICTA 2015)
    (2015), pp. 583-593 View in ScopusGoogle Scholar Mamduh et al., 2012 S.M. Mamduh,
    A.Y.M. Shakaff, S.M. Saad, K. Kamarudin, L.M. Kamarudin, A. Zakaria, et al. Odour
    and hazardous gas monitoring system for swiftlet farming using wireless sensor
    network (WSN) Chemical Engineering Transactions, 30 (2012), pp. 331-336, 10.3303/CET1230056
    View in ScopusGoogle Scholar Matharu et al., 2014 G.S. Matharu, P. Upadhyay, L.
    Chaudhary The internet of things: Challenges & security issues Proceedings – 2014
    international conference on emerging technologies, ICET 2014 (2014), pp. 54-59,
    10.1109/ICET.2014.7021016 View in ScopusGoogle Scholar Ma et al., 2011 J. Ma,
    X. Zhou, S. Li, Z. Li Connecting agriculture to the internet of things through
    sensor networks Proceedings – 2011 IEEE international conferences on internet
    of things and cyber, physical and social computing, iThings/CPSCom 2011 (2011),
    pp. 184-187, 10.1109/iThings/CPSCom.2011.32 View in ScopusGoogle Scholar Microsoft,
    2015 Microsoft FarmBeats: IoT for agriculture (2015) Retrieved from https://www.microsoft.com/en-us/research/project/farmbeats-iot-agriculture/
    Google Scholar Miorandi et al., 2012 D. Miorandi, S. Sicari, F. De Pellegrini,
    I. Chlamtac Internet of things: Vision, applications and research challenges Ad
    Hoc Networks, 10 (7) (2012), pp. 1497-1516, 10.1016/j.adhoc.2012.02.016 View PDFView
    articleView in ScopusGoogle Scholar Moga et al., 2012 D. Moga, D. Petreus, N.
    Stroia A low cost architecture for remote control and monitoring of greenhouse
    fields Proceedings of the 2012 7th IEEE conference on industrial electronics and
    applications, ICIEA 2012 (2012), pp. 1940-1944, 10.1109/ICIEA.2012.6361046 View
    in ScopusGoogle Scholar Monnit, 2016 Monnit Monnit remote monitoring solutions
    for the greenhouse monitoring! (2016) Retrieved October 21, 2016, from http://www.monnit.com/solutions/greenhouse-monitoring
    Google Scholar Moon et al., 2015 Y.-S. Moon, J.-W. Jung, S.-P. Choi, T.-H. Kim,
    B.-H. Lee, J.-J. Kim, et al. Real-time Reefer container monitoring system based
    on IoT Journal of the Korea Institute of Information and Communication Engineering,
    19 (3) (2015), pp. 629-635, 10.6109/jkiice.2015.19.3.629 Google Scholar Moshou
    et al., 2011 D. Moshou, C. Bravo, R. Oberti, J.S. West, H. Ramon, S. Vougioukas,
    et al. Intelligent multi-sensor system for the detection and treatment of fungal
    diseases in arable crops Biosystems Engineering, 108 (4) (2011), pp. 311-321,
    10.1016/j.biosystemseng.2011.01.003 View PDFView articleView in ScopusGoogle Scholar
    Mottola and Picco, 2011 L. Mottola, G. Pietro Picco Programming wireless sensor
    networks: Fundamental concepts and state of the art ACM Computing Surveys, 5 (2011),
    pp. 1-51, 10.1145/1922649.1922656 Google Scholar Nadimi et al., 2012 E.S. Nadimi,
    R.N. Jørgensen, V. Blanes-Vidal, S. Christensen Monitoring and classifying animal
    behavior using ZigBee-based mobile ad hoc wireless sensor networks and artificial
    neural networks Computers and Electronics in Agriculture, 82 (2012), pp. 44-54,
    10.1016/j.compag.2011.12.008 View PDFView articleView in ScopusGoogle Scholar
    Nikolidakis et al., 2015 S.A. Nikolidakis, D. Kandris, D.D. Vergados, C. Douligeris
    Energy efficient automated control of irrigation in agriculture by using wireless
    sensor networks Computers and Electronics in Agriculture, 113 (2015), pp. 154-163,
    10.1016/j.compag.2015.02.004 View PDFView articleView in ScopusGoogle Scholar
    Nishina, 2015 H. Nishina Development of speaking plant approach technique for
    intelligent greenhouse Agriculture and Agricultural Science Procedia, 3 (2015),
    pp. 9-13, 10.1016/j.aaspro.2015.01.004 View PDFView articleGoogle Scholar O''Shaughnessy
    and Evett, 2010 S.A. O''Shaughnessy, S.R. Evett Developing wireless sensor networks
    for monitoring crop canopy temperature using a moving sprinkler system as a platform
    Applied Engineering in Agriculture, 26 (2) (2010), pp. 331-341 View in ScopusGoogle
    Scholar Pahuja et al., 2013 R. Pahuja, H.K. Verma, M. Uddin A wireless sensor
    network for greenhouse climate control Pervasive Computing, IEEE, 12 (2013), pp.
    49-58 View in ScopusGoogle Scholar Pang et al., 2015 Z. Pang, Q. Chen, W. Han,
    L. Zheng Value-centric design of the internet-of-things solution for food supply
    chain: Value creation, sensor portfolio and information fusion Information Systems
    Frontiers, 17 (2) (2015), pp. 289-319, 10.1007/s10796-012-9374-9 View in ScopusGoogle
    Scholar Park and Park, 2011 D.-H. Park, J.-W. Park Wireless sensor network-based
    greenhouse environment monitoring and automatic control system for dew condensation
    prevention Sensors (Basel, Switzerland), 11 (4) (2011), pp. 3640-3651, 10.3390/s110403640
    View in ScopusGoogle Scholar Pasley, 2005 J. Pasley How BPEL and SOA are changing
    web services development IEEE Internet Computing, 9 (3) (2005), pp. 60-67, 10.1109/MIC.2005.56
    View in ScopusGoogle Scholar Pawlowski et al., 2008 A. Pawlowski, J.L. Guzm, F.
    Rodr, M. Berenguel, D. Lenguajes, D. Inform Event-based control and wireless sensor
    network for greenhouse diurnal temperature control: A simulated case study Emerging
    technologies and factory automation, 2008. ETFA 2008. IEEE international conference
    on (2008), pp. 500-507 CrossRefView in ScopusGoogle Scholar Perera et al., 2013
    C. Perera, A. Zaslavsky, M. Compton, P. Christen, D. Georgakopoulos Semantic-driven
    configuration of internet of things middleware Proceedings – 2013 9th international
    conference on semantics, knowledge and Grids, SKG 2013 (2013), pp. 66-73, 10.1109/SKG.2013.9
    View in ScopusGoogle Scholar Plantlink, 2016 Plantlink Plantlink Welcome to the
    connected plant world (2016) Retrieved October 21, 2016, from https://myplantlink.com/
    Google Scholar Qiu et al., 2013 T. Qiu, H. Xiao, P. Zhou Framework and case studies
    of intelligence monitoring platform in facility agriculture ecosystem 2013 2nd
    international conference on agro-geoinformatics: Information for sustainable agriculture,
    agro-geoinformatics 2013, IEEE (2013), pp. 522-525, 10.1109/Argo-Geoinformatics.2013.6621976
    Fairfax, VA, USA View in ScopusGoogle Scholar Rajaoarisoa et al., 2012 L.H. Rajaoarisoa,
    N.K. M''sirdi, J.F. Balmat Micro-climate optimal control for an experimental greenhouse
    automation 2nd international conference on communications computing and control
    applications, CCCA 2012, Vol. 3 (2012), pp. 1-6, 10.1109/CCCA.2012.6417903 Google
    Scholar Ravikanth et al., 2017 L. Ravikanth, D.S. Jayas, N.D.G. White, P.G. Fields,
    D.-W. Sun Extraction of spectral information from hyperspectral data and application
    of hyperspectral imaging for food and agricultural products Food and Bioprocess
    Technology, 10 (1) (2017), pp. 1-33, 10.1007/s11947-016-1817-8 Google Scholar
    Rodriguez de la Concepcion et al., 2014 A. Rodriguez de la Concepcion, R. Stefanelli,
    D. Trinchero A wireless sensor network platform optimized for assisted sustainable
    agriculture IEEE global humanitarian technology conference (GHTC 2014) (2014),
    pp. 159-165, 10.1109/GHTC.2014.6970276 Google Scholar Room and Tate, 2007 A. Room,
    R. Tate Results of wireless sensor network transceiver testing for agricultural
    applications 2007 ASABE annual international meeting, Minneapolis Convention Center,
    Minneapolis, Minnesota (2007) Retrieved from https://engineering.purdue.edu/∼mohtar/IET2007/073077.doc
    Google Scholar Sabri et al., 2011 N. Sabri, S.A. Aljunid, R.B. Ahmad, M.F. Malik,
    A. Yahya, R. Kamaruddin, et al. Wireless sensor actor networks ISWTA 2011-2011
    IEEE symposium on wireless technology and applications (2011), pp. 90-95, 10.1109/ISWTA.2011.6089387
    View in ScopusGoogle Scholar Sawant et al., 2014 S.A. Sawant, J. Adinarayana,
    S.S. Durbha KrishiSense: A semantically aware web enabled wireless sensor network
    system for precision agriculture applications International geoscience and remote
    sensing symposium (IGARSS) (2014), pp. 4090-4093, 10.1109/IGARSS.2014.6947385
    View in ScopusGoogle Scholar Sensaphone, 2016 Sensaphone Greenhouse remote monitoring
    systems (2016) Retrieved October 21, 2016, from http://www.sensaphone.com/industries/greenhouse.php
    Google Scholar Senthilkumar et al., 2016 T. Senthilkumar, D.S. Jayas, N.D.G. White,
    P.G. Fields, T. Gräfenhan Detection of fungal infection and ochratoxin A contamination
    in stored wheat using near-infrared hyperspectral imaging Journal of Stored Products
    Research, 65 (2016), pp. 30-39, 10.1016/j.jspr.2015.11.004 View PDFView articleView
    in ScopusGoogle Scholar Serrano et al., 2015 M. Serrano, P. Barnaghi, F. Carrez,
    P. Cousin, O. Vermesan, P. Friess Internet of things IoT semantic Interoperability:
    Research challenges Best practices, recommendations and next steps European research
    cluster on the internet of things (2015) Google Scholar Sicari et al., 2015 S.
    Sicari, A. Rizzardi, L.A. Grieco, A. Coen-Porisini Security, privacy and trust
    in internet of things: The road ahead Computer Networks, 76 (2015), pp. 146-164,
    10.1016/j.comnet.2014.11.008 View PDFView articleView in ScopusGoogle Scholar
    Silva and Vuran, 2010 A.R. Silva, M.C. Vuran (CPS)ˆ2: integration of center pivot
    systems with wireless underground sensor networks for autonomous precision agriculture
    Proceedings of the 1st ACM/IEEE international conference on cyber-physical systems,
    ACM (2010), pp. 79-88 Google Scholar Sivakumar et al., 2012 B. Sivakumar, P. GunaSekaran,
    T. SelvaPrabhu, P. Kumaran, D. Anandan The application of wireless sensor network
    in the irrigation area automatic system International Journal of Computer Technology
    and Applications VO – 03, 3 (1) (2012), p. 67 Retrieved from https://ezproxy.library.astate.edu/login?url=http://search.ebscohost.com/login.aspx?direct=true&db=edsdoj&AN=23e87153f377cf8110c05a75be4268b0&site=eds-live
    Google Scholar Sivamani et al., 2013 S. Sivamani, N. Bae, Y. Cho A smart service
    model based on ubiquitous sensor networks using vertical farm ontology International
    Journal of Distributed Sensor Networks, 2013 (2013), pp. 1-8, 10.1155/2013/161495
    Google Scholar Sivamani et al., 2015 S. Sivamani, J. Park, C. Shin, K. Cho, Y.
    Cho Towards an intelligent livestock farm management using OWL-based ontology
    model International Journal of Smart Home, 9 (4) (2015), pp. 251-266 CrossRefGoogle
    Scholar Suciu et al., 2015 G. Suciu, A. Vulpe, O. Fratu, V. Suciu M2M remote telemetry
    and cloud IoT big data processing in viticulture IWCMC 2015-11th international
    wireless communications and mobile computing conference (2015), pp. 1117-1121,
    10.1109/IWCMC.2015.7289239 Dubrovnik, Croatia View in ScopusGoogle Scholar Suhonen
    et al., 2012 J. Suhonen, M. Kohvakka, V. Kaseva, T.D. Hämäläinen, M.H. Hännikäinen
    Low-power wireless sensor networks: Protocols, services and applications 2012
    Springer (2012), 10.1007/978-1-4614-6381-8 Google Scholar Thelen, 2004 J. Thelen
    Radio wave propagation in potato fields Proceedings of the first workshop on wireless
    network measurements – WiNMee 2005, Vol. 2 (2004), p. 5 Google Scholar Tolle et
    al., 2005 G. Tolle, J. Polastre, R. Szewczyk, D. Culler, N. Turner, K. Tu, et
    al. A macroscope in the redwoods Proceedings of the 3rd international conference
    on Embedded networked sensor systems, ACM Press, New York, New York, USA (2005),
    pp. 51-63, 10.1145/1098918.1098925 View in ScopusGoogle Scholar Tongke, 2013 F.
    Tongke Smart agriculture based on cloud computing and IOT Journal of Convergence
    Information Technology (JCIT), 8 (2.26) (2013), pp. 210-216, 10.4156/jcit.vol8.issue2.26
    Google Scholar Tuli et al., 2014 A. Tuli, N. Hasteer, M. Sharma, A. Bansal Framework
    to leverage cloud for the modernization of the Indian agriculture system IEEE
    international conference on electro information technology (2014), pp. 109-115,
    10.1109/EIT.2014.6871748 View in ScopusGoogle Scholar Verdouw et al., 2013 C.N.
    Verdouw, A.J.M. Beulens, J.G.A.J. van der Vorst Virtualisation of floricultural
    supply chains: A review from an internet of things perspective Computers and Electronics
    in Agriculture, 99 (2013), pp. 160-175, 10.1016/j.compag.2013.09.006 View PDFView
    articleView in ScopusGoogle Scholar Wang et al., 2013a C.-H. Wang, C.-H. Chen,
    X.-Y. Zheng, C.-P. Chen, C.-L. Chuang, J.-A. Jiang An agricultural-cloud based
    greenhouse monitoring system EFITAWCCA-CIGR conference “sustainable agriculture
    through ICT innovation.” Turin, Italy (2013) Google Scholar Wang et al., 2014
    J. Wang, Y.-B. Chen, J.-P. Chanet An integrated survey in plant disease detection
    for precision agriculture using image processing and wireless multimedia sensor
    network an integrated survey in plant disease detection for precision agriculture
    Internatinal conference on advanced in computer, electrical and electronic engineering
    (ICACEEE 2014). Paris, France (2014) Google Scholar Wang et al., 2013b L. Wang,
    J. Xiong, Y. Du Study on the detection and warning system of rice disease based
    on the GIS and IOT in Jilin Province IFIP Advances in Information and Communication
    Technology, 393 (Part 2) (2013), pp. 168-176, 10.1007/978-3-642-36137-1 View PDFView
    articleGoogle Scholar Wang and Lee, 2012 S. Wang, K. Lee Application of a wireless
    sensor network (WSN) to enhance dairy farm management efficiency Asian federation
    for information technology in agriculture/world conference on computers in agriculture
    (2012), pp. 44-48 (Taipei, Taiwan) Google Scholar Wang et al., 2017 X. Wang, C.
    Yang, S. Mao TensorBeat: Tensor decomposition for monitoring multi-person breathing
    beats with commodity WiFi ACM transactions on intelligent systems and technology,
    2017 (2017), pp. 4207-4211, 10.1145/0000000.0000000 Google Scholar Welbourne et
    al., 2009 E. Welbourne, L. Battle, G. Cole, K. Gould, K. Rector, S. Raymer, et
    al. Building the internet of things using RFID: The RFID ecosystem experience
    IEEE Internet Computing, 13 (3) (2009), pp. 48-55, 10.1109/MIC.2009.52 View in
    ScopusGoogle Scholar Wu et al., 2012 F.-Q. Wu, L.-G. Li, X.-S. Ma, J. Qiu, X.-T.
    He Development of wireless monitor system on greenhouse environment based on GSM
    Future Control and Automation, 1 (2012), pp. 371-379 http://dx.doi.org/10.1007/978-3-642-31006-5_44
    View in ScopusGoogle Scholar Xu et al., 2011 L. Xu, S. Liu, D. Li Key technology
    of South Sea Pearl industry management information service platform based on the
    internet of things International conference on computer and computing technologies
    in agriculture, Springer, Berlin (2011), pp. 479-490 Retrieved from http://link.springer.com/chapter/10.1007/978-3-642-27281-3_54
    Google Scholar Ye et al., 2013 J. Ye, B. Chen, Q. Liu, Y. Fang A precision agriculture
    management system based on internet of things and WebGIS 2013 21st international
    conference on geoinformatics (2013), pp. 1-5, 10.1109/Geoinformatics.2013.6626173
    View in ScopusGoogle Scholar Yin et al., 2014 J. Yin, Y. Yang, H. Cao, Z. Zhang
    Greenhouse environmental monitoring and closed-loop control with crop growth model
    based on wireless sensors network Transactions of the Institute of Measurement
    and Control, 37 (1) (2014), pp. 50-62, 10.1177/0142331214531006 Google Scholar
    Yongheng and Feng, 2014 Z. Yongheng, Z. Feng Research on the smart wireless sensor
    perception system and its application based on internet of things Computer Modelling
    and New Technologies, 18 (1) (2014), pp. 44-51 View in ScopusGoogle Scholar Yuan
    et al., 2013 Y. Yuan, W. Zeng, Z. Zhang A semantic technology supported precision
    agriculture system: A case study for citrus fertilizing International conference
    on knowledge science, engineering and management, Vol. August, Springer, Berlin
    (2013), pp. 104-111, 10.1007/978-3-642-39787-5-9 View in ScopusGoogle Scholar
    Yu et al., 2015 J. Yu, N. Subramanian, K. Ning, D. Edwards Product delivery service
    provider selection and customer satisfaction in the era of internet of things:
    A Chinese e-retailers'' perspective International Journal of Production Economics,
    159 (2015), pp. 104-116, 10.1016/j.ijpe.2014.09.031 View PDFView articleView in
    ScopusGoogle Scholar Yu et al., 2011 P. Yu, X. Yong, P. Xi-Yuan GEMS: A WSN-based
    greenhouse environment monitoring system Conference record – IEEE instrumentation
    and measurement technology conference (2011), pp. 1000-1005, 10.1109/IMTC.2011.5944132
    View in ScopusGoogle Scholar Yu and Zhang, 2013 J. Yu, W. Zhang Study on agricultural
    condition monitoring and diagnosing of integrated platform based on the internet
    of things Computer and Computing Technologies in Agriculture VI, 392 (2013), pp.
    244-250, 10.1007/978-3-642-36124-1_30 View in ScopusGoogle Scholar Zhang, 2014
    G. Zhang Research on the optimization of agricultural supply chain based on internet
    of things 7th IFIP WG 5.14 international conference on computer and computing
    technologies in agriculture, CCTA 2013, Vol. 419 (2014), pp. 300-305 Retrieved
    from http://www.scopus.com/inward/record.url?eid=2-s2.0-84924412081&partnerID=40&md5=49bd138d492ad5ba0ca3080e6a6a8721
    CrossRefView in ScopusGoogle Scholar Zhang et al., 2016 J. Zhang, F. Kong, Z.
    Zhai, S. Han, J. Wu, M. Zhu Design and development of IOT monitoring equipment
    for open livestock environment International Journal of Simulation: Systems, Science
    and Technology, 17 (26) (2016), 10.5013/IJSSST.a.17.26.23 Google Scholar Zhang
    et al., 2011 J. Zhang, A. Li, J. Li, Q. Yang, C. Gang Research of real-time image
    acquisition system based on ARM 7 for agricultural environmental monitoring Remote
    sensing, environment and transportation engineering (RSETE), 2011 international
    conference on (2011), pp. 6216-6220, 10.1109/RSETE.2011.5965777 View in ScopusGoogle
    Scholar Zhang et al., 2002 N. Zhang, M. Wang, N. Wang Precision agriculture—a
    worldwide overview Computers and Electronics in Agriculture, 36 (2–3) (2002),
    pp. 113-132, 10.1016/S0168-1699(02)00096-0 View PDFView articleView in ScopusGoogle
    Scholar Zhao et al., 2013 G. Zhao, H. Yu, G. Wang, Y. Sui, L. Zhang Applied research
    of IOT and RFID technology in agricultural product traceability system IFIP Advances
    in Information and Communication Technology, 393 (Part 2) (2013), pp. 168-176,
    10.1007/978-3-642-36137-1 Google Scholar Zhao et al., 2010 J.C. Zhao, J.F. Zhang,
    Y. Feng, J.X. Guo The study and application of the IOT technology in agriculture
    Proceedings – 2010 3rd IEEE international Conference on computer Science and information
    technology, ICCSIT 2010, Vol. 2 (2010), pp. 462-465, 10.1109/ICCSIT.2010.5565120
    View in ScopusGoogle Scholar Zhou et al., 2013 L. Zhou, L. Song, C. Xie, J. Zhang
    Applications of internet of things in the facility agriculture IFIP Advances in
    Information and Communication Technology, 392 AICT (Part 1) (2013), pp. 297-303,
    10.1007/978-3-642-36124-1_36 View in ScopusGoogle Scholar Ziegeldorf et al., 2014
    J.H. Ziegeldorf, O.G. Morchon, K. Wehrle Privacy in the internet of things: Threats
    and challenges Security and Communication Networks, 7 (12) (2014), pp. 2728-2742,
    10.1002/sec.795 Google Scholar Zorzi et al., 2010 M. Zorzi, A. Gluhak, S. Lange,
    A. Bassi From today''s INTRAnet of things to a future INTERnet of things: A wireless-
    and mobility-related view IEEE Wireless Communications, 17 (6) (2010), pp. 44-51,
    10.1109/MWC.2010.5675777 View in ScopusGoogle Scholar Cited by (571) Cable-driven
    agribot prototype: Enabling precision agriculture through innovative design 2024,
    Smart Agricultural Technology Show abstract Segmentation-based quantification
    of Tuta absoluta''s damage on tomato plants 2024, Smart Agricultural Technology
    Show abstract Futuristic hospitality conceptualized: DASH - Decentralized Autonomous
    and Smart Hotel system 2024, Journal of Open Innovation: Technology, Market, and
    Complexity Show abstract Transforming ranching: Precision livestock management
    in the Internet of Things era 2024, Rangelands Show abstract Harvesting a sustainable
    future: An overview of smart agriculture''s role in social, economic, and environmental
    sustainability 2024, Journal of Cleaner Production Show abstract Laser-induced
    ultrasonic guided waves in water-stressed leaves 2024, Computers and Electronics
    in Agriculture Show abstract View all citing articles on Scopus View Abstract
    © 2017 IAgrE. Published by Elsevier Ltd. All rights reserved. Recommended articles
    Smart farming IoT platform based on edge and cloud computing Biosystems Engineering,
    Volume 177, 2019, pp. 4-17 Miguel A. Zamora-Izquierdo, …, Antonio F. Skarmeta
    View PDF A Creative IoT agriculture platform for cloud fog computing Sustainable
    Computing: Informatics and Systems, Volume 28, 2020, Article 100285 Tse-Chuan
    Hsu, …, Ching-Hsien Hsu View PDF Wireless sensor networks for agriculture: The
    state-of-the-art in practice and future challenges Computers and Electronics in
    Agriculture, Volume 118, 2015, pp. 66-84 Tamoghna Ojha, …, Narendra Singh Raghuwanshi
    View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 542
    Policy Citations: 5 Captures Readers: 1456 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Biosystems Engineering
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: Internet of Things in agriculture, recent advances and future challenges
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2018.2879579
  analysis: '>'
  authors:
  - Nurzaman Ahmed
  - Debashis De
  - Md. Iftekhar Hussain
  citation_count: 347
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Browse My Settings Help Institutional Sign In All Books Conferences
    Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals
    & Magazines >IEEE Internet of Things Journal >Volume: 5 Issue: 6 Internet of Things
    (IoT) for Smart Precision Agriculture and Farming in Rural Areas Publisher: IEEE
    Cite This PDF Nurzaman Ahmed; Debashis De; Iftekhar Hussain All Authors 339 Cites
    in Papers 8520 Full Text Views Abstract Document Sections I. Introduction II.
    IoT and Its Potential for Smart Farming and Agriculture III. Proposed Network
    Architecture for Smart Farming and Agriculture IV. Performance Analysis V. Conclusion
    Authors Figures References Citations Keywords Metrics Abstract: Internet of Things
    (IoT) gives a new dimension in the area of smart farming and agriculture domain.
    With the use of fog computing and WiFi-based long distance network in IoT, it
    is possible to connect the agriculture and farming bases situated in rural areas
    efficiently. To focus on the specific requirements, we propose a scalable network
    architecture for monitoring and controlling agriculture and farms in rural areas.
    Compared to the existing IoT-based agriculture and farming solutions, the proposed
    solution reduces network latency up to a certain extent. In this, a cross-layer-based
    channel access and routing solution for sensing and actuating is proposed. We
    analyze the network structure based on coverage range, throughput, and latency.
    Published in: IEEE Internet of Things Journal ( Volume: 5, Issue: 6, December
    2018) Page(s): 4890 - 4899 Date of Publication: 04 November 2018 ISSN Information:
    DOI: 10.1109/JIOT.2018.2879579 Publisher: IEEE Funding Agency: I. Introduction
    Farming and agriculture is the basis of human life which gives food, grains, and
    other raw materials. Technology holds a tremendous role in increasing production
    and decreasing extra manpower. Internet of Things (IoT) has opened up a suitable
    solution for smart farming and agriculture, however, it remains a dream till the
    connectivity is not reached to rural areas. The WiFi-based long distance (WiLD)
    network is successfully been used to connect the rural regions with low cost [1]–[3].
    With the extended range, for better and efficient IoT in such region, fog computing,
    and cloud computing solutions can be incorporated in WiFi devices [4], [5]. Sign
    in to Continue Reading Authors Figures References Citations Keywords Metrics More
    Like This An Intelligent Fault Tolerant Data Routing Scheme for Wireless Sensor
    Network-Assisted Industrial Internet of Things IEEE Transactions on Industrial
    Informatics Published: 2023 Internet of Things and Wireless Sensor Networks for
    Smart Agriculture Applications: A Survey IEEE Access Published: 2023 Show More
    IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Internet of Things (IoT) for Smart Precision Agriculture and Farming in Rural
    Areas
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2018.2844296
  analysis: '>'
  authors:
  - Olakunle Elijah
  - Tharek Abdul Rahman
  - Igbafe Orikumhi
  - Chee Yen Leow
  - Mohammad Nour Hindia
  citation_count: 797
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 5 Issue: 5 An Overview of Internet of Things (IoT) and Data Analytics
    in Agriculture: Benefits and Challenges Publisher: IEEE Cite This PDF Olakunle
    Elijah; Tharek Abdul Rahman; Igbafe Orikumhi; Chee Yen Leow; MHD Nour Hindia All
    Authors 798 Cites in Papers 19455 Full Text Views Abstract Document Sections I.
    Introduction II. IoT Ecosystem III. Application of IoT in Agriculture IV. IoT
    and Data Analytics in Agriculture V. Benefits Show Full Outline Authors Figures
    References Citations Keywords Metrics Footnotes Abstract: The surge in global
    population is compelling a shift toward smart agriculture practices. This coupled
    with the diminishing natural resources, limited availability of arable land, increase
    in unpredictable weather conditions makes food security a major concern for most
    countries. As a result, the use of Internet of Things (IoT) and data analytics
    (DA) are employed to enhance the operational efficiency and productivity in the
    agriculture sector. There is a paradigm shift from use of wireless sensor network
    (WSN) as a major driver of smart agriculture to the use of IoT and DA. The IoT
    integrates several existing technologies, such as WSN, radio frequency identification,
    cloud computing, middleware systems, and end-user applications. In this paper,
    several benefits and challenges of IoT have been identified. We present the IoT
    ecosystem and how the combination of IoT and DA is enabling smart agriculture.
    Furthermore, we provide future trends and opportunities which are categorized
    into technological innovations, application scenarios, business, and marketability.
    Published in: IEEE Internet of Things Journal ( Volume: 5, Issue: 5, October 2018)
    Page(s): 3758 - 3773 Date of Publication: 05 June 2018 ISSN Information: DOI:
    10.1109/JIOT.2018.2844296 Publisher: IEEE Funding Agency: SECTION I. Introduction
    The Internet of Things (IoT) has found its application in several areas, such
    as connected industry, smart-city [1], [2], smart-home [3] smart-energy, connected
    car [4], smart-agriculture [5], connected building and campus [6], health care
    [7], logistics [8], among other domains. IoT aims to integrate the physical world
    with the virtual world by using the Internet as the medium to communicate and
    exchange information [9]. IoT has been defined as a system of interrelated computing
    devices, mechanical and digital machines, objects, animals, or people that are
    provided with unique identifiers and the ability to transfer data over a network
    without requiring human-to-human or human-to-computer interaction. A key area
    of interest in this paper is the application of IoT in agriculture. The world
    population is estimated to be about 9.7 billion in 2050, as such there will be
    great demand for food. This coupled with the diminishing natural resources, arable
    land, unpredictable weather conditions make food security a major concern for
    most countries. The world is turning to the use of IoT combined with data analytics
    (DA) to meet the world’s food demands in the coming years [10]. It is predicted
    that IoT device installations in the agriculture sector will increase from 30
    million in 2015 to 75 million by 2020. The use of IoT and DA will enable smart
    agriculture which is expected to deliver high operational efficiency and high
    yield [11], [12]. Over the years, wireless sensor networks (WSNs) has been deployed
    for smart agriculture and food production with a focus on environmental monitoring,
    precision agriculture, machine and process control automation and traceability
    [13]–[18]. The capability of WSN to self-organize, self-configure, self-diagnosis,
    and self-heal has made it a good choice for smart agriculture and the food industry.
    The WSN is a system that comprise of radio frequency (RF) transceivers, sensors,
    microcontrollers and power sources [13]. However, with the emergency of IoT there
    has been a paradigm shift from the use of WSN for smart agriculture to IoT as
    the major driver of smart agriculture. The IoT integrates several technologies
    that already exist, such as WSN, RF identification, cloud computing, middleware
    systems and end-user applications [19]. The application of IoT in agriculture
    is about empowering farmers with the decision tools and automation technologies
    that seamlessly integrate products, knowledge and services for better productivity,
    quality, and profit. Recent surveys on the IoT in agriculture have focused on
    the challenges and constraints for large-scale pilots in entire supply chain in
    the agrifood sector [5], [20]. Some of the key issues addressed are the need for
    new business models, security and privacy, and data governance and ownership solution.
    Other related survey on smart agriculture have largely focused on the use of WSNs
    [21]. While these survey papers deal with the application of sensor technology
    and challenges in the application of IoT to the food supply chain, the communication
    technology were limited to conventional methods which employs low range communication
    technologies. In this paper, an extensive review of IoT in agriculture is carried
    out. The review includes a survey of published articles, white paper and existing
    solutions. The IoT ecosystem for agriculture is discussed in detail based on four
    major components which are IoT devices, communication technology, Internet, data
    storage, and processing. The application of IoT and DA and how it is enabling
    smart agriculture is presented. Furthermore, the benefits, challenges, open issues,
    future trends and opportunities are discussed. The organization of this paper
    is presented as follows. In Section II, the IoT ecosystem for agriculture, which
    consist of four major components: a) IoT devices; b) communication technology;
    c) Internet; and d) data are presented. Section III covers the classification
    of IoT application in agriculture. Key areas are considered: a) monitoring; b)
    tracking and tracing; c) agricultural machinery; d) precision agriculture; and
    e) greenhouse production. Section IV discusses the importance of IoT and DA. Six
    key areas are considered which are: a) prediction; b) storage management; c) decision
    making; d) farm management; e) precision farming; and f) insurance. In Section
    V, the benefits are highlighted. These include the use of IoT to promote community
    farming, safety and fraud prevention, competitive advantages, wealth creation,
    cost reduction, operational efficiency, awareness, and asset management. Section
    VI discusses several open issues and key challenges in the adoption of IoT in
    agriculture. The issues are identified and discussed under three main categories:
    a) business; b) technical; and c) sectoral. Section VII takes a look at the future
    trends and opportunities. Section VIII finally concludes this paper. SECTION II.
    IoT Ecosystem In this section, an overview of the IoT ecosystem for agriculture
    is presented. It consists of four major components which are: 1) IoT devices;
    2) communication technology; 3) Internet; and 4) data storage and processing.
    Fig. 1 illustrates the IoT ecosystem. The four major components are essential
    for any IoT application. The description of the IoT components as it relates to
    agriculture is provided as follows. Fig. 1. Illustration of IoT ecosystem for
    agriculture. Show All A. IoT Devices The IoT devices consist of embedded systems
    which interacts with sensors and actuators and requires wireless connectivity.
    These IoT devices are sometimes referred to as IoT sensors. Throughout this paper
    it is referred to as IoT device. The architecture of a typical IoT device for
    agriculture is shown in Fig. 2. The embedded system consists of field programmable
    gate arrays or microprocessor, communication modules, memory and input/output
    interfaces. Fig. 2. Architecture of IoT device. Show All The sensors are used
    to monitor and to measure different farm variables (example soil nutrients, weather
    data) and factors that affect production. The sensors can be classified into location
    sensors, optical sensors, mechanical sensors, electrochemical sensors, and airflow
    sensors [22]. These sensors are used to gather information, such as air temperature,
    soil temperature at various depths, rainfall, leaf wetness, chlorophyll, wind
    speed, dew point temperature, wind direction, relative humidity, solar radiation,
    and atmospheric pressure. Table I provides a summary of some of the sensors and
    their applications. There are key characteristics of IoT device that makes them
    suitable for agriculture purposes. They are: 1) power efficiency; 2) memory; 3)
    computational efficiency; 4) portability; 5) durability; 6) coverage; 7) reliability;
    and 8) cost. TABLE I Summary of Agriculture Sensors B. Communication Technology
    The communication technology plays a key role in the successful deployment of
    IoT systems. The existing communication technology can be classified based on
    standards, spectrum, and application scenarios. The communication standard can
    be grouped into short-range communication standard and long-range communication
    standard. The communication spectrum can be grouped into licensed and unlicensed
    spectrum. The IoT devices application scenarios can be based on sensors or backhaul
    network, and deployment scenarios [23]. 1) Spectrum: The unlicensed spectrum makes
    use of industrial scientific and medical RF band known as ISM band. The drawback
    to the use of the unlicensed spectrum are security issues, cost of infrastructure,
    and interference. Electromagnetic interference is generated by ISM IoT devices
    that interrupts radio communications that use the same frequency. On the other
    hand, the licensed spectrum which are allocated to the cellular network offers
    more efficient traffic management, less interference, better reliability, increased
    quality of service (QoS), high level of security, wider coverage and lesser cost
    of infrastructure to the users. The drawback to the use of licensed spectrum is
    cost of subscription for data transmission and transmit power consumption on the
    IoT devices. 2) Standard: There are so many existing standards for wireless communications,
    some of which have been listed in Table II. They can be classified into short-range
    and long-range communication standards. Examples of the short-range standards
    are near field communications-enabled devices, Bluetooth, ZigBee, Z-Wave, passive
    and active radio frequency identification (RFID) systems. The short-range standards
    can cover distances within 100 m. The long-range communication standards can cover
    distances up to 10 s of kilometers. The long-range communication standards are
    classified as the low power wide area (LPWA) (examples are LoRa, Sigfox, NB-IoT).
    The LPWA makes use of low power and can cover wide area [24], [25]. TABLE II Communication
    Technology 3) Application Scenario: The choice of communication technology also
    depends on applications of the IoT device. The communication technology can either
    be used for IoT devices that acts as nodes or as backhaul networks. The nodes
    transmit low data and cover very short distances with low power consumption. The
    backhaul network supports high data rates and can be used for very long distances.
    Some of the communication technologies support bi-directional link. The bi-directional
    link allows for forward error correction, handshaking for data reliability, encryption
    of data, over-the-air firmware updates, and communication between devices. In
    [26], the comparison of LoRa and NB-IoT shows that each technology has its advantages
    and disadvantages hence the most appropriate technology depends on the application.
    Furthermore, the choice of communication technology for the IoT device also depends
    on the type of topology to be deployed. There are different types of topology,
    such as peer-to-peer (P2P) or line, star, mesh, ring, tree, and bus topology.
    In each of these topologies, an IoT device plays different roles and different
    functions.1 The role can either be a personal area coordinator (PAN) or as an
    end device. The functions can be full function device (FFD) or a reduced function
    device (RFD). Fig. 3 illustrates two types of topologies and roles played. In
    the P2P topology, the PAN functions as FFD and starts the communication while
    the end devices can either function as an FFD or RFD. The end device which acts
    as FFD can have multiple connections while the end device that acts as RFD can
    only connect to one FFD and cannot connect to another RFD. The star topology consists
    of PAN that initiates the communication and accepts connection from other devices.
    The end devices can only establish connections with the PAN coordinator. Fig.
    3. Topology. (a) Peer-to-peer. (b) Star. Show All C. Internet The advancement
    in the field of wireless communication systems, mobile devices, and ubiquitous
    services has paved way for massive connectivity to the Internet. According to
    Machina research report, the number of connected agricultural devices is expected
    to grow from 13 million at the end of 2014 to 225 million by 2024 [27]. The Internet
    forms the core network layer, where paths are provided to carry and exchange data
    and network information between multiple subnetworks. The connection of IoT devices
    to the Internet enables data to be available anywhere and anytime. However, the
    transfer of data via the Internet requires adequate security, support of real
    time data and ease of accessibility. The Internet has paved way for cloud computing,
    where large data are gathered for storage and processing. Cloud computing involves
    the management of user interface, services, organizing and coordinating of network
    nodes, computing, and processing data [28]. To achieve the connectivity of heterogeneous
    systems and devices over the Internet, IoT middleware and connectivity protocols
    are being developed. Examples of the IoT middleware is the service-oriented architecture
    (SOA), cloud-based IoT middleware and actor-based IoT middleware which have been
    applied to support IoT [29], [30]. The SOA for IoT consist of multilayer architecture.
    Some of the proposed IoT architecture consist of the following layers: sensing,
    accessing, networking, middleware, and application layers. We refer readers to
    [29], [31], and [32] and the references therein for more details on the IoT architecture
    and technology. D. Data Storage and Processing Units Data driven agriculture involves
    the collection of enormous, dynamic, complex, and spatial data, which requires
    storage and processing [33]. The complexity of the data can range from structured
    to nonstructured data [11], [34] which can be in the form of text, images, audio,
    and video. The data can range from historical data, sensor data, live streamed
    data, business, and market related data. The use of cloud IoT platforms allow
    for big data collected from sensors to be stored in the cloud. This includes hosting
    of application that are critical in providing services and to manage end-to-end
    IoT architecture. Recently, edge or fog computing is advocated, where IoT devices
    and gateways carry out computation and analysis in order to reduce latency for
    critical applications, reduce cost and promote QoS [35], [36]. There are several
    agriculture management information systems that have been developed to manage
    the various forms of data [33]. Examples of some of the commercially available
    platforms are Onfarm systems, Farmobile, the silent herdsman platform, Cropx [37],
    Farmx [38], Easyfarm [39], KAA [40], and Farmlogs [41]. This platforms provide
    data storage, data management, and DA. Table III provides a summary of IoT solutions
    for agriculture. TABLE III Examples of IoT Solutions for Agriculture E. Summary
    In the deployment of IoT device, there are key technical parameters that needs
    to be considered. For wireless connectivity, the following parameters should be
    considered: the range of communication distance, data rate, battery life, mobility,
    latency, security and resilience, and cost of gateway modems. Among the communication
    technology, the LPWA is attracting so much interest [47] especially with the emergence
    of NB-IoT. The NB-IoT promises interesting features which include low device power
    consumption, ultralow device cost, simpler to implement, support of a massive
    number of low-throughput devices, long distance coverage and can support upload
    and download of data [48], [49]. There are several use cases of IoT in agriculture
    which have adopted the use of the IoT ecosystems discussed in this section. Some
    of these applications are discussed in Section III. SECTION III. Application of
    IoT in Agriculture There are several examples of application of IoT in agriculture.
    Examples of such use case are crop and livestock [50], [51], machinery [52], irrigation
    and water quality monitoring [53]–[60], weather monitoring [61], soil monitoring
    [61], [62], disease and pest control [63], [64], automation and precision [65].
    The application of IoT is discussed based on the following functions: monitoring,
    tracking and tracing, agriculture machinery, precision agriculture, and greenhouse
    production. A. Monitoring In agriculture several factors can be monitored, these
    factors depend on the sector of agriculture under considerations. The key factors
    to be monitored are highlighted and discussed as follows. 1) Crop Farming: In
    crop farming, there are several environmental factors that affect farm produce.
    Acquiring such data help to understand the patterns and process of the farm. Such
    data includes, the amount of rainfall, leaf wetness, temperature, humidity, soil
    moisture, salinity, climate, dry circle, solar radiation, pest movement, human
    activities, etc. [66]. The acquisition of such detailed record enables optimal
    decision making to improve the quality of the farm produce, minimize risk, and
    maximize profits. For instance, the solar radiation data gives information about
    the plants exposure to sunlight from, where the farmer can identify if the plants
    are properly exposed or over exposed. The soil moisture content gives information
    on the dampness of the soil which can help in controlling soil conditions and
    reduce the risk of plant diseases. Furthermore, timely and accurate weather forecasting
    data, such as, climatic changes and rainfall, can improve the productivity level.
    In addition, such data can help farmers in the planning stage and reduce the cost
    of labor. The farmers can also take corrective and preventive measures in advance
    based on the data provided. The pest movement data can be collected and remotely
    fed live to the farmers for pest control or used to provide advice to the farmers
    based on record tracking of pest attacks [67]. 2) Aquaponics: Aquaponics is the
    combination of aquaculture and hydroponics, where fish wastes are fed into plant
    farms to provide the essential nutrients required by the plants. In such farms,
    it is important to constantly monitor the water quality, water level, temperature
    levels, health of the fishes, salinity, pH level, humidity, and sunlight [68].
    The accurate data can improve the fish and plants yield as it allows nutrients
    transfer between the plants and fish. The data can also be used for automation
    purposes with less human intervention. 3) Forestry: Forestry plays an important
    role in the carbon cycle, and also harbor over two-thirds of world known species.
    The factors to be monitored in a forest includes; soil and air temperatures and
    humidity, and the different levels of gases, such as carbon monoxide, carbon dioxide,
    toluene, oxygen, hydrogen, methane, isobutane, ammonia, ethanol, hydrogen sulphide,
    and nitrogen dioxide [69]. These parameters can provide early warning and alert
    systems against veld fire in the forest and also help to monitor against diseases.
    4) Livestock Farming: The factors to be monitored in livestock depends on the
    types of animals under consideration [70]. For example, the conductivity of milk
    from buffaloes and cows can give information about the health state of the animals.
    Other factors are temperature, humidity, yield, pest attack, and water quality.
    The deployment and implementation solution also allow farmers to track and query
    the location of their livestock by tagging individual animal with RFID device,
    thereby preventing animal theft. Other areas, such as storage monitoring which
    includes water, fuel, and animals feeds can also be monitored, and the data can
    help the farmers to plan ahead and save cost. While several solutions have been
    provided in the area of monitoring, the adoption in small and medium scale farms
    are very much limited especially in developing countries due to lack of awareness
    and deployment cost. The potential to develop cost effective agricultural base
    IoT solutions is still a very open area. B. Tracking and Tracing IoT can also
    be applied in asset tracking to improve companies supply chain and logistics.
    IoT can provide data to enable agricultural companies to make better decisions,
    planning, intelligently connect with business partners, and save time and money.
    Information, such as location, asset identification can be tracked using RFID
    and cloud-based global positioning system (GPS) [8]. Tracking and tracing of agricultural
    product chain allows the consumer to know the complete history of the product,
    thereby improving the consumer’s trust on the product safety and health related
    issues. While tracking is the ability to capture, collect, and store data related
    to the supply chain from upstream to downstream, tracing allows the product to
    be distinguished from downstream to upstream. Tracking and tracing allows several
    data to be collected along the supply chain such that the consumer and other stakeholders
    are guaranteed on the origin, location, and life history of a product [71], [72].
    There are several factors that can be tracked which include the growing environment,
    production conditions, pest factors, management factors, storage conditions, transportation,
    and time to market. These factors can also pose direct or potential health risk
    to consumers. The significant factors which affects the growing environment are
    the soil, air, and water. The production conditions are influenced by the application
    of herbicides, fertilizers, pesticides. In addition, the type of feeds and vaccines
    administered to livestock can be tracked since they could directly cause health
    safety issues. Agricultural products can generally be affected by pest along the
    entire process, which could affect the quantity and quality of the product, tracking
    the products can help the farmers to improve the production and supply chain.
    A tracking and tracing systems should basically include: information input, storage,
    transfer, process, and output. The input information includes the data of the
    entire life cycle of the product, the geographical origin, the current position,
    destination, and the stakeholders involved in the entire supply chain [73]. The
    systems should also include memory to store the information over a period of time
    for research and development purposes. The information transfer refers to the
    process of unifying and standardizing the entire information. The tracking and
    tracing system should also be able to process the data collected and finally output
    it to everyone involved along the supply chain. The use of RFID in tracking from
    the production stage, processing, transportation, storage, distribution, sales
    and after sales services is highlighted in [74]. It provides the ability to collect,
    store, and analyze data over a long distance at a quick speed. C. Agricultural
    Machinery IoT-based agricultural machinery can help improve crop productivity
    and reduce grain losses. By proper mapping, use of GPS and global navigation satellite
    systems (GNSSs) the machinery can be operated in autopilot mode [52], [75]. The
    machines which include vehicles, unmanned aerial vehicles (UAVs) and robots can
    be remotely controlled based on the available information collected via the IoT
    system for precise and efficient application of resources to required farm areas
    [76]. The machinery can also collect data and such data can help farmers in mapping
    their field for planning programs, such as fertilizing, irrigation, nutrition
    [77]. For example, CLAAS, an agricultural machinery manufacturer has implemented
    IoT on their equipment, enabling their machinery to be operated in auto pilot
    mode [78]. Another solution is the Precisionhawk’s UAV sensors, which can provide
    farmers information, such as wind speed, air pressure, among other parameters
    [79]. The solution can also be used for imagery and mapping of agricultural plots.
    D. Precision Agriculture Precision agriculture can simply be defined as the collection
    of real-time data from farm variables2 and use of predictive analytics for smart
    decisions in order to maximize yields, minimize environmental impact, and reduce
    cost [80]. Precision agriculture relies on various technology, which include sensor
    nodes [81], [82], GPS and big DA to achieve improved crop yield. The smart decision
    achieved from the DA also results in less waste of resources, such as water in
    irrigation systems, fertilizer, pesticides, etc. Precision agriculture presents
    new challenges for researchers in the area of robotics, image processing, meteorological
    data sensing, etc. With the GPS and GNSS, farmers are able to locate precise location
    and map sites with several data variables, which are then used by variable rate
    technology to optimally distribute farm resources, such as seeding, spraying,
    and other services. Although precision agriculture technology can improve yield,
    it is essential to provide solutions that are easy to use by the farmers and also
    provide training to enable small and medium scale farmers benefit from the systems.
    E. Greenhouse Production Greenhouse also known as glasshouse technology is a technique,
    where plants are grown under controlled environment. It offers the benefit of
    growing any plant in any place at any time by providing suitable environmental
    conditions. Several studies have been carried out on the application of WSNs in
    greenhouse to monitor environmental conditions [83]–[85]. Recent works have shown
    how IoT can be applied to greenhouse in order to reduce human resource, save energy,
    increase efficiency in greenhouse-site monitoring, and direct connection of greenhouse
    farmers to customers [61], [66], [86]. SECTION IV. IoT and Data Analytics in Agriculture
    Accurate data analysis in farming plays a major role in improving the operational
    efficiency and increasing productivity. DA has been categorized into types based
    on requirement of IoT applications [87]. This includes real-time analytics, off-line
    analytics, memory-level analytics, business intelligence level analytics, and
    massive analytics [87]–[89]. The data consist of sensor data, audio, images, and
    video. Image processing has been extensively used in agriculture for various purposes
    ranging from detection of disease in leaf, stem, and fruit [90], quality of fruits
    [91], and weed detection and irrigation [76], [90], [92]–[94]. Recently, the combination
    of image processing and IoT in agriculture is being carried out to achieve higher
    quality produce and reduce crop failure. This involves the use of drones to capture
    aerial images at regular interval as well as monitoring of environmental factors
    using the IoT devices [76], [92], [94]. There are several DA methods which has
    been discussed in detail in [95]. The methods are categorized into classification,
    clustering, prediction, and association rule. The discussion of these methods
    is outside the scope of this paper. We discuss the importance of DA in agriculture
    and how DA can help in insurance, prediction, storage management, decision making,
    farm management, and precision farming. A. Prediction IoT provides big data that
    can be studied over time to estimate the present environmental conditions. The
    data collected across different types of networks sensors can be studied using
    DA and smart algorithm can be developed to predict the environmental changes and
    provide data driven solutions. Although IoT data can help in controlling various
    aspects of a farm, such as the irrigation systems, the data can also be used to
    predict and warn farmers against disease or extreme weather conditions, such as
    flood or drought [64]. For instance, in forestry, the sensors can be used to monitor
    fire outbreak or predict the region in a forest that provides high risk of fire
    outbreak. This information can help the firefighters to take preventive measures
    on the exact location. Other area of prediction includes early warning against
    natural disasters to improve emergency response [96]. B. Storage Management A
    large number of agricultural products are usually lost due to poor storage management
    system. While temperature, moisture and other environmental factors greatly affect
    the contamination of food products, insects, microorganism, rodent, etc. can affect
    the quality and quantity of the food products [97]. The use of IoT and DA in storage
    management systems can help to improve agricultural product storage [98]. Sensors
    can be deployed to monitor the storage facilities and environmental conditions.
    The data are sent to the cloud and analyzed. A self-automated decision system,
    which relies on the analyzed data can be deployed to adjust the environmental
    conditions. Moreover, a warning alert can be initiated to farmers when extreme
    conditions are reached or if pest are reported in the storage facility. In India,
    it is reported that about 35% to 40% of the fresh product are lost after harvesting
    due to several factors which includes spoilage or pest [97]. In [99], a cold storage
    management system is designed based on IoT technology, where the storage facility
    is operated at a controlled temperature. Although IoT can improve the agricultural
    storage facility, security should be embedded into such system to avoid product
    theft in case of power outages. C. Decision Decision making requires reliable
    information which can be obtained from sensors data. The large data obtained from
    sensor offers learning opportunities to improve decision making in constantly
    changing environmental conditions, such decision making can be over a short, medium,
    or long term. Automated decisions can be made from the IoT system when certain
    conditions are reached, therefore requiring less or no human interventions. Such
    automated decision could range from regulating the temperatures to the control
    of water supply from an irrigation system. For instance, in greenhouses the use
    of machine learning can help determine optimal conditions under which to grow
    a certain crop by observing the data acquired from sensors relating to nutrients,
    yield, growth, transpiration, color, taste, and retransplantation, light temperature
    pest levels and air quality. Policy making decision by government and all the
    stakeholders can also be enhanced by the amount of information obtained from DA,
    therefore it is important that the data is accurate, concise, complete, and in
    time. Several agricultural decision-making systems have been developed to enable
    farmers to make informed decision regarding their farms and livestock [100]. The
    DA provides decision on technical guidance to farmers, pests and diseases control
    and recommendation from remote expert guidance systems. D. Farm Management Integrated
    farm management system allows an entire farm to be monitored. Data are collected
    through a network of sensors including the on-body sensors in animals with a sole
    purpose of driving productivity. Three key factors which include risk management,
    cost, and productivity yield need to be managed with real time information and
    properly optimized to maximize productivity [13]. DA plays a major role to present
    the farmers and stake holders with large data that can be carefully studied to
    avoid unnecessary risk or implement preventive measures to improve productivity.
    DA also allow various farms to be connected and managed on a single platform,
    where information on scientific advances, production, marketing, farm management,
    recommendations and other related topics are disseminated to maximize productivity,
    yield, and revenue. E. Precise Application DA using measured data from sensors
    can enable precise application of chemicals and fertilizers to specific areas
    of the farm, this can improve the productivity while reducing the farming cost.
    Although precision farming systems have been deployed in farms in advanced countries,
    developing countries are beginning to adopt the technology especially in research
    farms [14]. However, the deployment cost, technology and awareness still limits
    the deployments of IoT-based precision farming systems in developing countries.
    In addition, most of the farms in developing countries are small scaled farms
    as such, most farmers do not see the need to apply such technology. Developing
    appropriate precision farming solutions for small farms still remains an open
    area for researcher and designers. Another advantage of DA in precision farming
    is its application in steering machinery using GPS and location data to precise
    locations in the farm thereby improving the farming efficiency when compared with
    human driven machines. This can save time, fuel and operational cost. F. Insurance
    Farmers are usually exposed to extreme weather conditions which could lead to
    poor harvest. However, with the implementation of IoT technology farmers can be
    insured with their crops and livestock. A network of sensors can be deployed,
    and monitoring can be achieved by remote unmanned stations. The data can be sent
    to the cloud and analyzed. The insurance policy can be embedded with a warning
    systems, where extreme weather conditions are predicted and the insured farmers
    are alerted by text messages. This can enable the farmers take precautionary approach
    to protect their farms. An added advantage of DA in insurance is the fact that
    the insurance companies have access to the data from the remote farms and can
    initiate an automated payout thought the IoT mobile payments systems when extreme
    conditions are observed. This can eliminate the need for lengthy claim process,
    where the insurance company needs to ascertain the extent of damage by visiting
    the farms. SECTION V. Benefits There are several benefits that can be derived
    from the use of IoT in agriculture. Some of the benefits have been mentioned in
    the discussion of application of IoT in Sections III and IV. However, we reiterate
    and summarize some of the benefits as follows. Community Farming: The use of IoT
    can help promote community farming especially in the rural areas. The IoT can
    be leveraged to promote services that allows the community to have a common data
    storage, share data and information, increase interaction between the farmers
    and agriculture experts [101]. Also, through the use of mobile apps and IoT facilities
    equipment can be shared within the community via free or paid services. Safety
    Control and Fraud Prevention: The challenge in the agriculture sector is not just
    limited to sufficient production but also the ability to ensure safe and nutritious
    food supply. There have been several reports in food fraud which includes adulteration,
    counterfeit, artificial enhancement [102]. This fraud poses health challenge and
    can have negative economic impact [103], [104]. Some of the components of food
    fraud discussed in [104] are product integrity, process integrity, people integrity,
    and data integrity can be addressed using IoT technology. IoT can be used to provide
    logistics traceability and qualitative traceability of food [105]. Competitive
    Advantages: The increase in demand for food and the use of innovative technology
    is expected to make the agriculture sector very competitive. Also, the enabling
    of data driven agriculture using IoT will open new direction in trading, monitoring,
    and marketing. The ability to lower costs, reduce wastage in application of farm
    inputs, such as fertilizer and pesticides increase productivity. The use of real-time
    data for decision making will provide the competitive advantage needed for farmers
    who adopt the IoT ecosystem. Wealth Creation and Distributions: The deployment
    of IoT will provide new business models, where the single farmers can avoid the
    exploitation of “middle men” and can be in direct relationship with the consumers
    [10] leading to higher profit. Cost Reduction and Wastage: One of the perceived
    advantages of IoT is the ability to monitor remotely devices and equipment [106].
    The application of IoT in agriculture will help to save time and money in inspecting
    large fields compared to personnel physically inspecting the field either via
    use of vehicles or walking. The ability to know when and where to apply pesticides
    or insecticides using IoT will reduce cost and wastage. Operational Efficiency:
    The operational efficiency not only relates to farmers but to decision makers
    related to agriculture sector, such as government and nongovernmental agencies.
    Data gathered from agriculture surveillance schemes via IoT can serve as a guide
    in agriculture interventions. Such interventions can be prevention of spread of
    diseases, veld fire outbreaks, compensation schemes and resource allocations.
    In addition, farmers can take advantage of IoT and DA to take accurate and timely
    decisions in terms of farm management and farm processes. The ability to automatically
    document health status of livestock or crop will provide efficient and effective
    diagnosis and prescription of medicine by veterinary or agriculture officer to
    farmers. This will help reduce loss. Also, with the use of IoT, supply chain of
    agri-food can be optimized. The use of the IoT in the supply chain will help to
    provide real time balancing between the demand and supply. Awareness: IoT is expected
    to drive low cost applications and access to wireless network services in the
    agriculture sector. To this end, information on markets, prices, services can
    be accessed via mobile apps. Also, government services and regulatory standard
    regarding different farm produce can be made readily available. In addition, consumers
    who are interested in organic products and fresh products can easily locate farmers
    or be alerted when fresh products are available. Asset Management: IoT will enable
    real time monitoring of farm assets and machinery against theft, replacement of
    parts, and for timely routine maintenance. SECTION VI. Open Issues and Key Challenges
    There are several challenges that are associated with deployment and application
    of IoT. Some of the challenges identified in the literature are security and privacy,
    data convergence and ownership, lack of interoperability, heterogeneity of IoT
    devices, uncertainty in business models [5], [107]. We discuss issues under three
    main headings which are business, technical, and sectoral issues. A. Business
    Issues The profit margin in the agriculture sector is very thin and as such there
    is the need to balance the tradeoff between the deployment of IoT enabling technology
    versus the potential profits. Hence, we discuss business issues related to the
    IoT deployment by considering cost and business models. 1) Cost: There are several
    cost associated with the deployment of IoT in agriculture which can be categorized
    into setup cost and running cost. The setup cost includes purchase of hardware
    (IoT devices, gateways, base station infrastructure). The running cost involves
    continuous subscription for use of centralized services or IoT platforms which
    provides data collection, management of IoT devices, sharing of information among
    other services. Other additional running cost are cost incurred from exchange
    of data between IoT devices, gateway and cloud server, energy, and maintenance.
    According to Turgut and Boloni [108] the success of IoT has to satisfy two conditions
    which are: 1) the customers are persuaded that the IoT devices provide a value
    that exceeds their physical and privacy costs and 2) the businesses involved in
    IoT will successfully make money. The first condition can be expressed as ( V
    s − C pri − C user h − C pay )>0 (1) View Source where V s is the perceived value
    of the user, C pri is the cost of loss of privacy, C user h cost of hardware and
    associated services and C pay is the payment for service charge and the second
    condition can be expressed as ( V info + R pay − C business h )>0 (2) View Source
    where V info is the value of information received, R pay is the direct payment
    received, and C business h is the business’s share of hardware and maintenance
    costs. From (2) while the value of information received is meant for provision
    of the services needed by the user, this can be commercially exploited by the
    service provider in the course of service provision. Although some of the IoT
    platform providers provide free subscription services with limited functionality,
    limited number of IoT devices that can be connected and limited amount of data
    that can saved. More functionality and services attract higher subscription fees.
    2) Business Models: Farmers would be interested in business models that supports
    revenue generation from the data accumulated from their farm using IoT technologies.
    Most of the existing IoT platforms service providers, provide free limited services
    and full services with different level of subscriptions. The data provided are
    exploited by the IoT service providers and this remains an area of contention
    by farmers for control and ownership of their data. 3) Lack of Adequate Knowledge:
    The lack of adequate knowledge of IoT and its application especially among farmers
    located in rural areas is a major factor slowing the adoption of IoT in agriculture.
    This is common in the developing countries where majority of the farmers are often
    found in the rural areas and are mostly uneducated. The farmer’s inability to
    use information could be a major barrier if human interventions are not available
    [12]. B. Technical Issues 1) Interference: The deployment of massive IoT devices
    for agricultural and other purposes will cause interference problems especially
    with the IoT devices using the unlicensed spectrum, such as ZigBee, Wi-Fi, Sigfox,
    and LoRa (see Table II). The interference caused can lead to loss of data and
    reduce the reliability of the IoT ecosystem. The technology to make IoT devices
    using the unlicensed spectrum interference proof will add to cost of the device.
    On the other hand, the use of IoT devices operating with licensed spectrum is
    expected to eliminate unnecessary interference. However, due to limited pilot
    assignment in the cellular band, the reuse of nonorthogonal multiple access scheme
    or frequency reuse can still cause interference amongst IoT devices using cellular
    licensed spectrum. 2) Security and Privacy: There are several security issues
    that needs to be addressed at different level of the IoT ecosystem. The lack of
    adequate security may lead to loss of data, bridge of privacy, and access to raw
    information about on-field parameters and other sensitive intellectual properties.
    This can compromise the competitive advantages of private farm owners. The IoT
    security and privacy issues have been discussed extensively in [106], [109], and
    [110]. According to the interview-based studies carried out by Asplund and Nadjm-Tehrani
    [106] on the attitudes and perception of IoT, security was considered a major
    obstacle in the deployment of IoT. There are several security issues that needs
    to be addressed at different level of the IoT ecosystem. In agriculture, the IoT
    devices are vulnerable to physical tampering, such as theft or attacks by predators
    and animals, change of physical address or link [110], [111]. In addition, for
    the IoT devices, it is difficult to implement complex and sophisticated algorithms
    due to limited memory, communication capabilities, and low energy consumption.
    The gateway can be prone to congestion attack, denial of service (DoS), and forwarding
    attacks. The security and position of location information and IoT enabled location-based
    service which are used for precision farming are exposed to attacks, such as device
    capture attack [109], [110], [112]. In the device capture attack, an attacker
    captures the IoT device and extracts cryptographic implementations and enjoy unrestricted
    access to the information stored in the device’s storage. Other higher communication
    layers can be vulnerable to DoS attacks, wireless signal jamming, and man in the
    middle attack [110]. In addition, the cloud servers can be prone to data tampering,
    unauthorized services which can affect automated processes in the farms. Other
    security treats that can affect the cloud infrastructure are session hijacking,
    cloud access control and database issues, hijacking attacks, logon abuse, and
    DoS [110]. 3) Choice of Technology: There are several IoT technologies that have
    been developed recently, some of which are still going through pilot test. The
    right choice of IoT technology is a big challenge because a lot of investment
    is required for deploying new technologies. Currently, it is difficult to tell
    which of the new IoT technologies will dominate the market. Many factors need
    to be considered, such as support for roaming, suitability of technology to small-scale,
    medium-scale and large-scale, suitability to different geographical location,
    soil types and climatic conditions. 4) Reliability: The IoT devices are expected
    to be deployed in out-door environment. This will expose the devices to harsh
    environmental conditions which may lead to degradation of deployed sensors with
    time as well as communication failures. The physical safety of the deployed IoT
    sensors and systems must be ensured in order to protect the costly equipment from
    severe weather conditions, such as flood and hurricanes. 5) Scalability: Billions
    of IoT devices are expected to be deployed in the agriculture sector. Existing
    gateways and protocols will need to support large number of IoT devices/nodes.
    For example, the Sigfox gateway can support up to 106, Ingenu 104, and LoRa 104
    nodes, respectively. This will require intelligent IoT management system for each
    node and identification numbers. 6) Localization: There are several factors that
    needs to be considered for deployment of IoT devices. Such factors include the
    ability for the IoT device to support place and play functionality, i.e., be placed
    anywhere and connected to the rest of the world with no (or minimal configuration
    or deploying additional devices, such as gateways) [113]. Other factors are the
    best position to place the IoT device that will provide adequate information and
    reliability without causing interference (or minimal interference). In addition,
    the ability to support IoT device roaming for nomadic IoT devices and deployment
    of static IoT devices in location without prior knowledge of the mobile IoT technology/infrastructure
    needs to be considered. 7) Optimization of Resources: Farmers need resources optimization
    mechanism to determine how many gateways, IoT devices, amount of transmitted data,
    size of cloud storage are needed in order to have a breakthrough in profit margins.
    This is particularly challenging due to different farm sizes and different type
    of sensors needed to monitor farm variables for specific crops or livestock. This
    will require development of complex algorithm and mathematical models to be able
    to determine optimal resource allocation while minimizing cost and maximizing
    agriculture produce and profits. C. Sectoral Issues 1) Regulatory Challenges:
    Regulation and legal frameworks regarding the control and ownership of farm data
    between farmers and data companies needs to be sorted out. The regulations may
    differ from countries to countries in terms of resource allocation (i.e., spectrum
    for cellular IoT), technical challenges, competition, data privacy, and security.
    Different regulations across regions or countries may affect the application of
    IoT in use cases, such as tracking and agri-food supply. 2) Interoperability:
    There are ongoing works on protocols and standards needed for billions of IoT
    devices to interoperate. This involves technical, syntactic, semantic, and organization
    interoperability [5], [9], [114]. The technical interoperability involves the
    development of protocols and infrastructure that enables the IoT devices to communicate
    [115]. It is usually associated with the hardware/software components of the IoT
    ecosystem. The syntactical interoperability is associated with data formats, such
    as extensible markup language (XML), java script object notation (JSON), comma
    separated variables, electronic data interchange as standard syntax for data sharing
    [5]. The semantic interoperability deals with the interpretation of contents exchanged
    between human. The organizational interoperability is the ability to effectively
    communicate and transfer data successfully across different infrastructure, geographic
    region and cultures. Thus, a key requirement here is that all systems provide
    export facilities or API access that return standard formats, typically XML or
    JSON, and where possible legacy systems are provided with appropriate interchange
    gateways. According to [116], interoperability can be achieved using three methods
    which are: 1) partnerships among product and service developers; 2) open and close
    standards, and 3) adaptors and mediator services. In order to achieve interoperability,
    groups, such as openconnectivity [117] are promoting interoperability in IoT.
    In addition, the use of adapter services, such as if this then that [118] that
    allows users to create powerful connections and chains of simple conditional statements
    are currently being used. It is important to note that some of these methods may
    not provide widely enabled interoperability among IoT devices due to scalability.
    More work is expected in promotion of open standards to achieve greater operability
    among billions of IoT devices and services. D. Summary The open issues and challenges
    discussed in this section can serve as a factor for the slow adoption of IoT in
    the agriculture sector if not well addressed. More reports are needed on the monetary
    benefits of adopting IoT in agriculture. The issues of privacy and security will
    continue to remain a top priority for farmers, although this is expected to change
    over time as people become use to IoT and its services. Also, as the cost of IoT
    devices and cost of data storage, processing, and transfer reduces with time small
    and medium scale farmers will be able to deploy the IoT systems. SECTION VII.
    Future Trends and Opportunities From our studies and review of current trends
    in the application of IoT in agriculture, we present the future trends based on
    the following areas: 1) technological innovations; 2) application scenarios; and
    3) business and marketability. A. Technological Innovation More and more IoT solutions
    will continue to emerge and this will introduce new and disruptive technologies
    especially in the agriculture sector. Some of the areas identified are discussed
    as follows. 1) Deployment of LPWA Technologies: The LPWA is expected to dominate
    the agriculture sector as this offers so many advantages, such as low power and
    long-range communication. The release of the 3GPP NB-IoT standard and adoption
    by many telco operators will attract many research interests in investigating
    the use of NB-IoT communication technologies. This will enable large-scale pilot
    test of IoT in agriculture [5]. 2) Universal Platform: The development of IoT
    platform for agriculture purpose will shift from just specific crops or livestock
    to a universal platform (also known as generic platform) that can support any
    kind of crop and livestock. This will allow a system that can be easily modified
    to support a variety of applications ranging from managing and monitoring of crops
    and livestock to selling of products to local stores and consumers. Such system
    will be free of any geographical and regional limitations and can serve as the
    enabler for many IoT in agriculture. 3) Security: The security of IoT device and
    end-to-end data security will continue to attract more research interest. More
    research work is needed in the development of IoT device that can support new
    security schemes, such as advanced signcryption algorithm [119]. The signcryption
    combines digital signature and data encryption to prevent eavesdropping and unauthorized
    modification on sensitive information. Security measures to prevent physical attackers
    and intruders from the IoT devices need to be investigated and new schemes developed.
    4) Spectral and Energy Efficiency: Different technologies, such as ultranarrowband
    channels (Sigfox and Telensa) and spread spectrum (LoRa and Ingenu) are adopted
    in order to achieve the LPWA requirements [120]. As more LPWA complaint solutions
    are being rolled out, new technologies that can support higher data, long distance
    coverage, high path-loss link budget, and extended battery life are required.
    Majority of the cellular NB-IoT systems currently support frequency bands which
    operates frequency division duplex modes. More work is expected in bands that
    operate the time division duplex modes. This will open up other research challenges,
    such as pilot contamination [121]. Although LPWA aims to achieve ten years battery
    life, energy efficient mechanism are still needed for IoT devices as the efficiency
    is highly dependent on the node usage [122]. There exist several algorithms that
    have been developed for energy efficiency in WSN, such as clustering and in-network
    processing algorithms [122]–[124]. Other energy efficient schemes for IoT, such
    as ability to predict the sleep interval of IoT devices-based upon their remaining
    battery level, their previous usage history, and quality of information required
    for a particular application as proposed in [125] can be further studied. The
    application of optimal wireless power transfer enabled IoT transceiver architectures,
    simultaneous wireless information and power transfer in IoT, energy harvesting
    IoT devices is expected to attract research interest. 5) Quality of Service: Existing
    study on the QoS of IoT shows that QoS is required in every layer of the IoT architecture
    [126], [127]. The ability to ensure that a device that needs to send critical
    data will be able to do so using IoT with any of the communication technology
    is still an open research area. The use of NB-IoT communication technology promises
    high QoS compared to LoRa [26]. More work needs to be done in providing mechanism
    that guarantees QoS throughout the different IoT network layers. 6) Artificial
    Intelligence and DA: More work is expected in the use of artificial intelligence
    to model crop growth and disease management based on farm data and climatic information.
    Example is the use of machine learning for recognition of disease from images
    uploaded via smartphones [128]. DA algorithms that can process large amount of
    data at a much faster rate compared to the IoT communication time are expected
    to be developed. 7) Privacy-Preservation: End-to-end privacy-preservation methods
    that allow the extraction of knowledge from data while preserving the privacy
    of individuals have been proposed to solve the issues relating to IoT data privacy
    violations [129]–[131]. Examples of the proposed methods designed to guarantee
    a certain level of privacy while maximizing the utility of the data have been
    classified based on data life-cycle phase at which the privacy-preservation is
    ensured [132]. The application of the proposed privacy-preservation methods and
    how it can further enhance the IoT penetration in the agriculture sector can be
    further researched. 8) Data Compression: As massive IoT devices are connected
    there will be need to develop advanced compressing and multiplexing techniques
    for exchange of data from hundred to thousands of sensors to a central location.
    This will be particularly needed for transmission of images and video data when
    NB-IoT cellular communication are employed. Multiplexing will also help in merging
    data from different farms to a single location providing backup, security and
    management from a single-point. 9) Real Time Monitoring: As hundreds of different
    types of sensors are to be deployed in the field for real time monitoring, a simple
    network management protocol must be devised to support communication between objects
    and server with less overhead possible. Current protocols are specially designed
    for network appliances and may cause heavy data traffic and overhead on the network
    as well as increase the power requirements for the IoT devices. B. Application
    Scenarios Currently, software platforms, IoT devices are being developed and research
    is ongoing on communication technologies that can deliver low cost IoT deployments.
    Most of the current work are on prototyping and testing based on small scale.
    Large-scale pilots are needed to evaluate the usability and usefulness of IoT
    technologies in agriculture [5]. Future work will see more of large-scale pilot
    in the entire supply chain and agri-food applications not only in the developed
    country but as well as developing countries in Asia and Africa. C. Business and
    Marketability 1) Cost Reduction: The optimized power consumption of the IoT devices,
    reduction in physical size, and massive production is expected to drop the cost
    of IoT solutions for agriculture. Future work will see development of cheaper
    sensors, research on combination of different deployment scenarios, exploring
    the use of combined licensed and unlicensed communication technology in order
    to minimize setup and operating cost. 2) Policies and Regulations: More work on
    policy enforcement and standardization in the use of IoT in agriculture are expected
    to be carried out. Involvement of government level or agriculture department must
    be ensured when working on policies and regulation regarding IoT in agriculture
    which may differ from region to region as discussed in Section VI-C. This will
    facilitate early adoption of IoT in agriculture. SECTION VIII. Conclusion An overview
    of IoT and DA in agriculture has been presented in this paper. Several areas related
    to the deployment of IoT in agriculture have been discussed in detail. The survey
    of literature shows that there are lots of work ongoing in development of IoT
    technology that can be used to increase operational efficiency and productivity
    of plant and livestock. The benefits of IoT and DA, and open challenges have been
    identified and discussed in this paper. IoT is expected to offer several benefits
    to the agriculture sector. However, there are still a number of issues to be addressed
    to make it affordable for small and medium-scale farmers. The key issues are security
    and cost. It is expected that as competition increases in the agriculture sector
    and favorable polices are being implemented the adoption rate of IoT in agriculture
    will increase accordingly. One major area that is likely to draw lot of research
    attention is the deployment of LPWA communication technology for agriculture purposes.
    The NB-IoT is expected to stand out among the LPWA technologies. This is because
    of the 3GPP open standard and adoption by the telco companies. ACKNOWLEDGMENT
    The authors would like to thank the feedback and contribution of A. D. McCole
    of Ericsson Malaysia, Sdn BhD, in the preparation of this paper and O. C. Obiageli
    of the Universiti Teknologi Malaysia, for helping to proofread this paper. Appendix
    Acronyms and Terms AbbreviationExpansion 3GPP 3rd Generation Partnership Project.
    AI Artificial intelligence. CSV Comma separated variables. DA Data analytics.
    DoS Denial of service. EDI Electronic data interchange. EE Energy efficiency.
    FDR Frequency domain reflectometry. FFD Full function device. FPGA Field programmable
    gate arrays. GNNS Global navigation satellite systems. GPS Global positioning
    system. IoT Internet of Things. JSON Java script object notation. ISM Industrial
    scientific medical. IP Image processing. LPWA Low power wide area. NB-IoT Narrowband-IoT.
    NFC Near field communication. P2P Peer-to-peer. PAN Personal area network. QoS
    Quality of service. RF Radio frequency. RFD Reduce function device. RFID Radio
    frequency identification. TDR Time domain reflectometry. UAV Unmanned aerial vehicles.
    WPAN Wireless personal area network. WHAN Wireless home area network. WLAN Wireless
    local area network. WSN Wireless sensor network. XML Extensible markup language.
    Authors Figures References Citations Keywords Metrics Footnotes More Like This
    Internet of Things and Wireless Sensor Networks for Smart Agriculture Applications:
    A Survey IEEE Access Published: 2023 Precision Agriculture Using Internet of Things
    and Wireless Sensor Networks 2023 International Conference on Disruptive Technologies
    (ICDT) Published: 2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'An Overview of Internet of Things (IoT) and Data Analytics in Agriculture:
    Benefits and Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2018.2866491
  analysis: '>'
  authors:
  - Ranesh Kumar Naha
  - Saurabh Garg
  - Dimitrios Georgakopoulos
  - Prem Prakash Jayaraman
  - Longxiang Gao
  - Yong Xiang
  - Rajiv Ranjan
  citation_count: 374
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Browse My Settings Help Institutional Sign In All Books Conferences
    Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals
    & Magazines >IEEE Access >Volume: 6 Fog Computing: Survey of Trends, Architectures,
    Requirements, and Research Directions Publisher: IEEE Cite This PDF Ranesh Kumar
    Naha; Saurabh Garg; Dimitrios Georgakopoulos; Prem Prakash Jayaraman; Longxiang
    Gao; Yong Xiang; Rajiv Ranjan All Authors 360 Cites in Papers 14369 Full Text
    Views Open Access Comment(s) Abstract Document Sections I. Introduction II. Overview
    of Fog Computing III. Difference Between Fog and Cloud Computing Paradigm IV.
    Related Paradigms and Technologies V. Architecture of Fog Computing Show Full
    Outline Authors Figures References Citations Keywords Metrics Abstract: Emerging
    technologies such as the Internet of Things (IoT) require latency-aware computation
    for real-time application processing. In IoT environments, connected things generate
    a huge amount of data, which are generally referred to as big data. Data generated
    from IoT devices are generally processed in a cloud infrastructure because of
    the on-demand services and scalability features of the cloud computing paradigm.
    However, processing IoT application requests on the cloud exclusively is not an
    efficient solution for some IoT applications, especially time-sensitive ones.
    To address this issue, Fog computing, which resides in between cloud and IoT devices,
    was proposed. In general, in the Fog computing environment, IoT devices are connected
    to Fog devices. These Fog devices are located in close proximity to users and
    are responsible for intermediate computation and storage. One of the key challenges
    in running IoT applications in a Fog computing environment are resource allocation
    and task scheduling. Fog computing research is still in its infancy, and taxonomy-based
    investigation into the requirements of Fog infrastructure, platform, and applications
    mapped to current research is still required. This survey will help the industry
    and research community synthesize and identify the requirements for Fog computing.
    This paper starts with an overview of Fog computing in which the definition of
    Fog computing, research trends, and the technical differences between Fog and
    cloud are reviewed. Then, we investigate numerous proposed Fog computing architectures
    and describe the components of these architectures in detail. From this, the role
    of each component will be defined, which will help in the deployment of Fog computing.
    Next, a taxonomy of Fog computing is proposed by considering the requirements
    of the Fog computing paradigm. We also discuss existing research works and gaps
    in resource allocation and scheduling, fault tolerance, simulation tools, and
    Fog-based microser... (Show More) Taxonomy of Fog computing based on the requirements.
    Published in: IEEE Access ( Volume: 6) Page(s): 47980 - 48009 Date of Publication:
    22 August 2018 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2018.2866491 Publisher:
    IEEE Funding Agency: SECTION I. Introduction Individuals and organizations are
    increasingly becoming dependent on computers and smart devices to deal with daily
    tasks. These devices are generating data via various sensors and applications.
    As a result, organizations are generating and storing huge amounts of data on
    a regular basis [1]. After the proliferation of IoT, data generated by sensors
    has increased enormously. With this sudden increase in the volume of data being
    produced and inability of conventional databases to process various forms of structured
    and unstructured data, big data analytics has attained great attention in recent
    years. Every organization is now prioritizing the analysis of collected data to
    extract useful insights in order to make important decisions [2]. Nowadays, organizations
    need a dynamic IT infrastructure because of the shift to cloud computing due to
    its accessibility, scalability, and pay-per-use features. The most common services
    provided by the cloud are known as Software as a Service (SaaS), Platform as a
    Service (PaaS), and Infrastructure as a Service (IaaS), all of which are heading
    towards Anything as a Service (XaaS) [3]. However, data generated from billions
    of sensors, referred to as big data, cannot be transferred and processed in the
    cloud. In addition, some IoT applications need to be processed faster than the
    cloud’s current capability. This problem can be solved by using the Fog computing
    paradigm, which harnesses the processing power of devices located near users (idle
    computing power) to support utilization of storage, processing, and networking
    at the edge [4]. Fog computing is a decentralized computing concept, which does
    not exclusively rely on any central component like cloud computing [5], [6]. It
    is able to overcome the high latency problem of the cloud by using idle resources
    of various devices near users. However, Fog computing relies on the cloud to do
    complex processing. Unlike cloud computing, Fog computing is a decentralized computing
    concept, where the many devices around us, which have computation capacity, are
    utilized. Currently, even a low- specification smartphone has processing capacity,
    sometimes with multiple cores. Hence, many devices like smartphones, switches,
    routers, base stations, and other network management devices equipped with processing
    power and storage capacity can act as Fog devices. The resources of these devices
    are idle outside of peak hours. Many research issues relating to Fog computing
    are emerging due to its ubiquitous connectivity and heterogeneous organization.
    In the Fog computing paradigm, key issues are the requirements and the deployment
    of Fog computing environment. This is because the devices that exist in Fog environments
    are heterogeneous: therefore, the question that arises is how will Fog computing
    tackle the new challenges of resource management and failure handling in such
    a heterogeneous environment? Hence, it is necessary to investigate the very basic
    requirements for all other related aspects such as deployment issues, simulations,
    resource management, fault tolerance, and services. Several reviews [5], [7]–[12]
    have been done on Fog computing. Here, we present the focus and survey domains
    of these review works in brief. Similar concepts of Fog computing, definitions,
    application scenarios, and numerous issues are described by one study [7]. Hu
    et al. [8] presented the hierarchical architecture of Fog computing and technologies
    like computing, communication, and storage technologies, namely resource management,
    security, and privacy protection that support Fog deployment and application.
    Baccarelli et al. [9] surveyed Fog computing and the Internet of Everything (IoE)
    with an integrated point of view of Fog computing and IoE. Varshney and Simmhan
    [10] reviewed various dimensions of application characteristics, system architecture,
    and platform abstractions of edge, Fog, and cloud ecosystems. Perera et al. [11]
    reviewed the Fog computing domain from the platform perspectives of developers
    and end users towards building a sustainable sensing infrastructure for smart
    city applications. Mahmud et al. [5] presented a taxonomy of Fog computing according
    to the identified challenges and its key features. The proposed taxonomy provides
    a classification of the existing works in Fog computing. Mouradian et al. [12]
    reviewed Fog architecture and algorithms based on six different evaluation criteria,
    namely heterogeneity, QoS management, scalability, mobility, federation, and interoperability.
    However, none of the studies had investigated taxonomy based on the requirements
    of infrastructure, platform, and application in Fog computing. Moreover, none
    of them comprehensively investigated fault tolerance, resource management, or
    microservices in Fog computing. We consider the aforementioned current issues
    and discuss these extensively and also highlight how cloud computing-related solutions
    could be employed in the Fog in some cases. The contributions of this review work
    can be summarized as follows: Present the research trends in Fog computing by
    investigating the number of published research works and search occurrences in
    Google Scholar. Review of several Fog computing architectures and presentation
    of a detailed architecture, as most of the previous researchers only presented
    high-level architecture. Present a taxonomy by considering the requirements of
    infrastructure, platform, and application in the Fog computing paradigm. Identify
    Fog computing research gaps in resource allocation and scheduling, fault tolerance,
    simulation tools, and Fog-based microservices. Address the limitations of current
    research works and some open issues in infrastructure, platform, and applications.
    From this survey, the industry and research community will be able to gain insight
    into the requirements for building a Fog computing environment with a better understanding
    of resource management in the Fog. The remainder of this paper is organized as
    follows: Section II surveys definitions and research trends in Fog computing.
    A technical comparison between Fog and cloud paradigms presents in section III.
    Section IV discusses computing paradigms similar to Fog computing. Section V presents
    related works on Fog computing architecture and discusses the components of the
    Fog computing architecture. Section VI shows the taxonomy of Fog computing by
    reviewing its requirements. Section VII presents various application dimension
    of Fog computing. Section VIII discusses current state-of-the-art Fog computing
    technology. Section IX presents open issues and future research direction. Section
    X concludes the paper. SECTION II. Overview of Fog Computing The term ‘Fog computing’
    was proposed in 2012 by researchers from Cisco Systems [13]. Processing application
    logic and data at the edge is not a new concept. The concept of Edge computation
    emerged around the 2000s [14], [15] and another similar concept, cloudlets, was
    introduced in 2009 [16]. Both Cloudlets and Fog computing are the advancements
    of a similar concept, which revolves around processing at the edge level. While
    cloudlets are applied in the mobile network, Fog computing is applied to connected
    things such as IoT, which plays into the concept of IoT [17]. Fog is both a virtualized
    and non-virtualized computing paradigm that provides networking, storage, and
    computation services amid cloud servers and IoT devices [4], [13]. However, these
    services are not completely located at the network edge. The Fog is a distributed
    computing approach that mainly focuses on facilitating applications, which require
    low latency services [18], Fog computing also supports non-latency aware services.
    It is obvious that using idle computation resources near the users will improve
    overall service performance, if the volume of processing were not that high. A
    huge number of heterogeneous nodes will be connected to the Fog. These nodes include
    sensors and actuators among others [13]. Computation is performed in Fog devices
    when necessary and storage facilities are also available for a short period of
    time, at least in most Fog devices. Time-sensitive computation in the Fog is done
    without the involvement of third parties, and in most cases, is done by the Fog
    processing devices. According to Yi et al. [7], the Fog computing paradigm supports
    the running of new services or basic network functions and applications in a sandboxed
    environment similar to cloudlets. However, the subject is still a research challenge
    because the question of how the Fog will provide these service still remains.
    In addition, will the Fog have cloud service providers or will it be like a single
    entity as a whole? Figure 1 shows a basic model of Fog Computing. Fog devices,
    Fog servers, and gateways are the basic computation components in the Fog environment.
    Any device that has computation, networking, and storage capabilities can act
    as a Fog device. These devices include set-top boxes, switches, routers, base
    stations, proxy servers or any other computing device. Fog servers that manage
    several Fog devices and Fog gateways are responsible for translation services
    between heterogeneous devices in the Fog computing environment. Fog gateways also
    provide translation services between IoT, Fog, and cloud layers. New challenges
    in this emerging computing paradigm have emerged in the past couple of years.
    FIGURE 1. A model of Fog computing. Show All In this section, we discuss the various
    definitions of Fog computing and define Fog computing from our point of view.
    In addition, we discuss and analyze research trends in Fog computing. Finally,
    we compare the technical differences between Fog computing and cloud computing.
    A. Definition of Fog Computing Fog computing is a distributed computing paradigm
    where processing is done at the edge of the network with seamless integration
    of the cloud infrastructure. It enables a computing facility for IoT environments
    or other latency sensitive application environments. It is estimated that about
    50 billion “things” will be connected to the Internet by 2020 [19]. Transferring
    all data from all connected devices for processing on the cloud will need massive
    amounts of bandwidth and storage. All devices are not connected to the controller
    via IP but connected by some other IoT industrial protocols. Because of this,
    a translation process is also needed for the processing or storing of information
    from IoT devices. Various researchers have defined Fog computing in different
    ways. Some examples are as follows: “Fog computing is a highly virtualized platform
    that provides compute, storage, and networking services between IoT devices and
    traditional cloud computing data centers, typically, but not exclusively located
    at the edge of network.” [13] “Fog computing is a scenario where a huge number
    of heterogeneous (wireless and sometimes autonomous) ubiquitous and decentralised
    devices communicate and potentially cooperate among them and with the network
    to perform storage and processing tasks without the intervention of third parties.
    These tasks can be for supporting basic network functions or new services and
    applications that run in a sandboxed environment. Users leasing part of their
    devices to host these services get incentives for doing so.” [20] “The term Fog
    computing or Edge Computing means that rather than hosting and working from a
    centralized cloud, Fog systems operate on network ends. It is a term for placing
    some processes and resources at the edge of the cloud, instead of establishing
    channels for cloud storage and utilization.” [21] The first definition of Fog
    computing was presented by Bonomi et al. [13], where they addressed the computing
    paradigm as a highly virtualized platform. However, some IoT devices such as smartphones
    are not virtualized but could also be a part of the Fog infrastructure, as some
    processing could still be done. According to Cisco [22], the Fog computing paradigm
    provides an ideal place to analyze most data near the devices that produce and
    act on that data instantaneously. The Fog is located near things that are able
    to process and act on the data generated. The devices that are within the Fog
    environment are known as Fog devices. These nodes can be deployed at any place
    with a connectivity to the network: on the power pole, on the factory floor, alongside
    the road, alongside the railway line, in a vehicle, inside a shopping mall, on
    an oil rig, etc. A device that has processing, storage, memory, and network capability
    can act as a Fog device. Although the Fog extends the cloud, technically it resides
    in between the cloud and IoT devices and handles processing and storage tasks
    in close proximity to the user. Yi et al. [7] stated that the definition given
    by Vaquero and Rodero-Merino [20] is debatable and a definition that can distinguish
    clearly between Fog computing and other related computing paradigms is still required.
    The definition given by IBM [21] represents Edge and Fog computing as the same
    computing paradigm. According to Shi et al. [23], Fog computing focuses more on
    the infrastructure side while edge computing focuses more on the things’ side.
    Furthermore, Edge computing is not spontaneously associated with any cloud-based
    services such as SaaS, IaaS, and PaaS [5]. In brief, Table 1 summarizes Fog definitions
    provided by various research works. TABLE 1 Summary of Fog Computing Definitions
    Considering the above definitions, we define Fog computing as follows: Fog computing
    is a distributed computing platform where most of the processing will be done
    by virtualized and non-virtualized end or edge devices. It is also associated
    with the cloud for non-latency-aware processing and long-term storage of useful
    data by residing in between users and the cloud. In our definition, we considered
    all devices with computing and storage capacity as Fog devices and also more precisely
    identified the role of the cloud in the Fog computing environment. B. Fog Computing
    Research Trends Growing attention towards processing data closer to the users
    has been observed among industries and the academia in the past few years. Handling
    IoT-generated data at the edge level will help improve overall processing time.
    In this section, we investigate Fog and other related technological trends for
    the past few years in the research community. According to the Gartner hype cycle,
    in July 2017 [24], the peak emerging technology is the smart home, which would
    perform better with the incorporation of the Fog computing environment. A Hype
    Cycle [24] represents common patterns of new trending technologies. Fog computing
    can also enable latency-aware smart home services in a more efficient and convenient
    way, especially for emergency response smart home applications. According to the
    Gartner hype cycle demonstration, some other influencing technologies include
    virtual assistants, autonomous vehicles, IoT platforms, smart robots, edge computing,
    and smart workspaces, which are required to support latency-aware applications.
    All these mentioned technologies could benefit from the support of the Fog computing
    paradigm due to latency sensitiveness, connectivity to the cloud, and edge-level
    data processing capability. Except for the autonomous vehicle technology, all
    other aforementioned technologies will reach the market adoption threshold in
    the next 10 years. Besides the hype cycle analysis, we analyzed the search occurrence
    of Fog and other related technologies in Google Scholar. In addition, the number
    of papers available in different digital libraries related to the Fog was also
    analyzed. Google Scholar search occurrences of various similar technologies to
    Fog were investigated in the past few years, as presented in Figure 2. According
    to the data, edge computing is the topmost searched item in Google Scholar compared
    to other similar technologies. However, the search trend decreased by more than
    three times in the past eight years for edge computing. Mobile cloud computing
    and mobile edge computing are the other two top-searched computing paradigm after
    edge computing. The lowest trend observed was for dew computing and Fog dew computing.
    While the trend for edge computing is decreasing, Fog computing related to scholarly
    searches is increasing year by year, and has increased by 2.5 times from 2010
    to 2017. This shows that Fog computing is the fastest growing research area in
    academia and will have a great impact on the industry as well. FIGURE 2. Search
    occurrence of similar technologies like the Fog in Google Scholar. Show All Fog
    computing topic search in the Web of Science shows that the number of scholarly
    articles has more than doubled between 2015 and 2016, as per Figure 3. The first
    paper with ‘Fog computing’ in its title was published in 2012. Since then, about
    564 journal and conference articles have been published on this topic in the four
    major digital libraries (Web of Science, Science Direct, IEEE Xplore, and ACM),
    as presented in Figure 4. Cloud computing first emerged in 2008 [25]. This shows
    that Fog computing publications have dramatically increased, as no study in this
    area was seen in the couple of years following the introduction of cloud computing
    research in 2008 (see Figure 5). FIGURE 3. No. of Fog computing-related papers
    in the Web of Science (as Feb 2018). Show All FIGURE 4. Number of publications
    with ”Fog computing” in the title in the four major digital libraries. Show All
    FIGURE 5. Published articles with the title cloud computing in the Web of Science.
    Show All From our observation, it is obvious that the interest in Fog computing
    research is rapidly increasing. Idle resources in the form of devices near users
    can be utilized within the Fog computing concept. Thus, a clear direction to market
    the adoption and technological development of Fog deployment has emerged. SECTION
    III. Difference Between Fog and Cloud Computing Paradigm Fog computing architectures
    are based on Fog clusters where multiple Fog devices participate to cooperate
    with the processing. On the other hand, datacenters are the main physical components
    of clouds. Because of this, cloud computing has high operational costs and energy
    consumption. By comparison, energy consumption and operation costs in the Fog
    computing paradigm is low. The Fog is located closer to the user, so the distance
    between users and Fog devices could be one or a few hops, which is also agreed
    by Hu et al. [8]. However, according to Mahmud et al. [26], the distance between
    users to the Fog is one or two hops. Again, Luan et al. [27] argued that the distance
    should be one hop with wireless connectivity. Yet, all agreed with the distance
    between the users to the cloud, which is a multi-hop distance. Due to the distance,
    communication latency for the cloud is always high compared to the Fog. The cloud
    is a more centralized approach while the Fog is a more distributed approach based
    on geographical orchestration [26]. Real-time Interaction is not possible for
    the cloud due to its high latency, but this problem can be easily resolved by
    Fog computing. On the other hand, the rate of failure in the Fog is high because
    of wireless connectivity, decentralized management, and power failure [26], [28]–[30].
    Most devices in Fog environments will be connected wirelessly since smart gadgets
    and handheld devices will be participating in Fog systems [31]. These devices,
    and other network management devices, are mostly decentralized. These devices
    could fail when software is not managed correctly. Users may not be aware of malicious
    software that could lead to device failure. Moreover, Fog processing could fail
    in other cases as well, for example, each Fog device is responsible for performing
    its own application processing. So, the IoT application processing in a Fog device
    always takes second priority. If the Fog device is fully utilized by the application
    of the device itself, then it will fail to do any Fog processing. Hence, the scheduling
    of applications and resources in the Fog is more complex. In addition, failure
    handling in the Fog is competitive because of power failure, which is only an
    issue because the devices run on battery power. Altogether, Table 2 shows the
    technical differences between the cloud and the Fog. TABLE 2 Technical Difference
    Between Fog and Cloud Definitely, it cannot be said that the Fog can replace the
    cloud. We cannot even conclude that the Fog is better than the cloud either, both
    contribute differently via fulfilling different perspectives and requirements.
    SECTION IV. Related Paradigms and Technologies Fog computing uses computing resources
    near underlying networks, located between the traditional cloud and edge devices,
    to provide better and faster application processing and services [13]. Several
    similar computing paradigms exist besides Fog computing such as Mobile Cloud Computing
    (MCC), Mobile-Edge Computing (MEC), Edge Computing, Dew Computing, and Fog-dew
    computing. In cloud computing, all IoT devices are directly connected to the cloud
    and computation totally depends on the cloud. However, all the above similar technologies
    do not exclusively depend on the cloud, but depend on some intermediate devices
    for computation; some of them do not even require a connection to the cloud. Figure
    6 shows the high-level architecture of these technologies. FIGURE 6. High level
    architecture of Mobile Cloud Computing (MCC), Mobile Edge Computing (MEC), Edge
    Computing (EC), Dew Computing (DC), Fog Computing (FC) and Fog Dew Computing (FDC).
    Show All A. Mobile Cloud Computing (MCC) Remote execution of offloaded mobile
    services is done with the support of MCC near end users [32], [33]. MCC overcomes
    the computational, energy, and storage resource limitation of smart mobile devices.
    Generally, a lightweight cloud server (cloudlet) is placed at the edge of the
    network [34] to overcome these issues. MCC is a mobile computing technology, which
    provides unrestricted functionality, mobility, and storage facility through heterogeneous
    network connectivity. This technology also provides unified elastic computing
    resources by following the pay-per-use model. It also provides access to data,
    application, and cloud via the Internet for mobile users. It is expected that
    this technology will be applied in education, urban and rural development, healthcare,
    and more realistic social networking in the future [32]. Nowadays, many computation-intensive
    applications are widely available, such as Augmented Reality, computer vision
    and graphics, speech recognition, machine learning, planning and decision-making,
    and natural language processing applications. However, simply designing powerful
    mobile devices will not meet the requirements for these applications [33]. Rather,
    the applications require edge processing as well as collaboration with the cloud
    for complex processing. Thus, mobile computing demands fundamental changes to
    cloud computing, for example, a low-latency middle tier, programming models to
    enable seamless remote execution, basic mobile cloud services such as presence
    services, cloud infrastructure optimization for mobile applications, memcache
    services, and so on [33]. The convergence of mobile cloud computing is predicated
    on a reliable, end-to-end network, and high bandwidth, which isdifficult to guarantee
    in harsh environments. One of the solutions to this deep-rooted problem is the
    VM-based cloudlets located at a closer location to the mobile device [34]. B.
    Mobile Edge Computing (MEC) MEC proposes the co-location of computing and storage
    resources at the base stations of cellular networks [35]. MEC could either be
    connected or disconnected to cloud datacenters in a remote location. Hence, MEC
    supports two- or three-tier hierarchical application deployments along with end
    mobile devices [36]. In a MEC ecosystem, a new device called the MEC server needs
    to be deployed near base station towers to provide processing and storage capabilities
    at the edge. Four participants are involved in this computing paradigm, which
    are the mobile end users, network operators, Internet infrastructure provider
    (InPs),and application service provider. Mobile end users are the main consumer
    of the system and request their service via user equipment (UE). Network operators
    manage and maintain the operation of base stations, mobile core network, and MEC
    servers. InPs maintain Internet connectivity and routers. Application service
    providers host the application services in the content delivery networks (CDN)
    or within a data centers. Processing of requests from the UE will search out the
    closest MEC. The MEC server is capable of processing user request instead of forwarding
    it to remote Internet services. In a case where it is not possible to process
    or complete a request at the MEC sever; the request will be forwarded to remote
    CDNs or data centers [35]. According to Klas [36], MEC is the evolution of mobile
    base stations. It is a natural development. It is a collaborative deployment of
    telecommunication and IT networking. This computing paradigm enables new vertical
    business segments and services to individual end users and enterprise consumers.
    Various services could be delivered through this computing paradigm including
    IoT, location services, augmented reality, caching service, video analytics, and
    local content distribution. It can deliver real-time low-latency access of local
    content or by caching content at the MEC server. However, the main limitation
    of this system is the installation of the MEC server, which is specifically dedicated
    to MEC services. Scaling is another big issue with the increase in resource demand
    over time. C. Edge Computing Edge devices or edge servers provide computation
    facilities in Edge computing. In general, edge computing does not spontaneously
    associate with any types of cloud-based services and concentrates more on the
    IoT device side [23]. One study defined the edge as any network or computing resource
    near the path between cloud data centers and data sources [23]. Any smart device
    or sensor could have data sources but the edge is different. For example, a cloudlet
    and a micro datacenter is the edge of the mobile application and cloud, whereas
    the IoT gateway is the edge between IoT sensors and cloud. Similarly, if a cloud
    application is running on a smartphone, then the smartphone is the edge of the
    application and the cloud [37]. The main motivation of edge computing is that
    the computation should be done at a closer location to the data sources. In the
    edge computing concept, things are not only consuming data but also produce data
    by taking part in processing. Edge devices can perform computation task from the
    cloud besides requesting services and content. Data storage, computing offloading,
    processing, and caching will be done by an edge node. The edge device is also
    capable of distributing requests and providing service on behalf of the cloud
    to the users. In such scenarios, edge devices need to be well designed to meet
    privacy requirements, reliability measures, and security concerns [23]. D. Dew
    Computing (DC) In the current computing hierarchy, Dew Computing [38] is situated
    at the ground level of the cloud and Fog computing environment [39]. DC goes beyond
    the concept of service, storage, and network, to a sub-platform, which is based
    on a microservice concept for which its computing hierarchy is vertically distributed
    [39]. The DC approach facilitates resources such as sensors, tablets, and smartphones
    that are seamlessly connected to a network. Because of this, DC covers a wide
    range of ad-hoc-based networking technologies [39]. Skala et al. [39] argued that
    DC is much more useful in everyday life compared to Fog computing. Fog supports
    IoT-based applications, which demand less latency and real-time capability and
    a dynamic network configuration while DC is microservice concept and thus is not
    dependent on any centralized device, server, or cloud. They provide an example
    in which DC could be integrated into a smart traffic control system, where data
    collection and processing units will be located in between the traffic signals.
    These units generate a collective overview of the current traffic conditions.
    In such a way, a car with low fuel will be notified before entering heavy congestion,
    or a hybrid car will be informed of switching to conventional fuel before approaching
    the congestion. As a result, cars with less fuel will be rescued from unwanted
    situations and hybrid cars could reduce exhaust smoke densities significantly.
    Although the concept is microservice-based, the processing is completed in Fog
    devices. In the Fog computing concept, it is not crucial that applications must
    be dependent on the cloud or require the storing of results in the cloud. On the
    other hand, if such traffic processing information were stored, it would help
    strategic decision-making to improve traffic management. Dew computing is an emerging
    research area and its goal is to use the full potential of cloud and local resources
    [40]. E. Fog-Dew Computing In the architecture of Fog-dew computing, IoT devices
    need not have an active Internet connection while being connected to the community
    server. The community server will interact with the cloud and is responsible for
    providing services to the IoT devices [41]. Cloud computing always needs an Internet
    connection, which is the main drawback of the cloud. While the cloud is unable
    to serve users without an Internet connection, Fog-dew computing facilitates offline
    services without an Internet connection. However, there are some exceptions. For
    example, the navigation app, Waze, allows users to navigate offline. This feature
    was also recently added to Google Maps. In this case, a map information file for
    a specific area is downloaded to the user device and allows users to navigate
    during an offline state. Another example is Google Drive and Dropbox, where users
    can delete, create, and update files and folders in offline mode and then sync
    once the device is connected to the Internet. However, these services are not
    purely offline-we may not rely on the Internet directly but we cannot completely
    ignore Internet connection. The situation becomes more complex when a single user
    uses multiple offline devices alongside the complexity that arises in a multiuser
    environment. Such situations could be mitigated with the help of Fog-dew computing.
    In summary, in the Fog computing paradigm, IoT devices are connected to the cloud
    via Fog devices. Fog devices are connected to the cloud through the core network.
    Fog computing is a combination of MEC and MCC [7] but the main goal of all Fog-related
    paradigms is to perform processing at the edge. These related paradigms differ
    from each other based on Internet and cloud connectivity. Also, the amount of
    processing that needs to be done at the edge differs based on service requirements.
    Furthermore, the type of devices that will be used for computation and storage
    purposes is also another issue. In summary, Table 3 shows the characteristics
    of the above-discussed related computing paradigms along with the Fog computing
    paradigm. TABLE 3 Summary of Similar Technologies Like Fog SECTION V. Architecture
    of Fog Computing For market adoption and deployment, Fog computing must have a
    standard architecture. There is no available standard architecture to date. However,
    many research works have presented Fog computing architectures. In this section,
    we firstly discuss the high-level architecture of Fog computing. Furthermore,
    we summarize some proposed architectures for Fog computing. Finally, we present
    a detailed architecture for Fog computing with a comprehensive description of
    each component of the architecture. A. High-Level Architecture of Fog Computing
    In high-level architecture, the Fog computing paradigm has three different layers,
    as shown in Figure 7. The most important layer is the Fog layer. This layer consists
    of all intermediate computing devices. Traditional virtualization technologies
    can be used at this plane, similar to the cloud. However, considering the resource
    availability, employing container-based virtualization is more appropriate. This
    layer accumulates sensor-generated data from the IoT layer and sends an actuation-related
    request after processing. Although it seems that the big data problem is solved
    by processing generated data at the edge level, billions of devices will create
    big data issue. In fact, it is possible to employ small- and medium-scale big
    data processing at this level. Many research works have been undertaken to process
    big data in the Fog plane [47]–[53]. FIGURE 7. High level Fog computing architecture.
    Show All The bottommost layer is the IoT plane, which consists of all connected
    devices. The devices on this plane perform the sensing and actuation process.
    For time-sensitive applications, processing should be done on the Fog plane exclusively
    while the cloud can perform other processing that is not time-sensitive. However,
    the Fog layer will manage what needs to be sent to the cloud and what should not.
    The users are able to get services from both the Fog and cloud based on their
    request. However, the cloud plane will manage complex processing and storage.
    B. Various Proposed Architectures for Fog Computing Layered representation is
    the best way to represent Fog architecture. Many works have been done to quantify
    the layer-based concept of Fog architecture [4], [27], [54]–[58]. From our review,
    we found that researchers have proposed three [27], [56]–[58], four [55], five
    [4], and six [54] layers in the Fog architecture. Everyone has their own justifications
    for their claims. If we ignored the user plane, it is obvious that Fog architecture
    could be defined as three different levels from the high level. As we proceed
    to the more implementation-type level, the number of layers in the architecture
    would vary, giving rise to five [4] and six [54] levels in the Fog computing layer.
    Aazam and Huh [54] presented six different layers based on specific tasks. On
    the other hand, Dastjerdi et al. [4] defined five different layers based on network
    perspective. Other high-level architectures in Fog computing were also presented
    by various researchers including the hierarchical Fog architecture [59], [60],
    OpenFog architecture [61], Fog network architecture [62], Fog architecture for
    Internet of energy [9], Fog computing Architecture based on nervous system [63],
    and IFCIoT architecture [64]. After reviewing the literature stated above, we
    define the components of Fog computing architecture, which is presented in the
    following subsection. C. Components of Fog Computing Architecture Fog computing
    architecture consists of several layers. Each layer and its components are shown
    in Figure 8. In this subsection, we discuss various components of the Fog computing
    architecture. The components are divided into several groups based on their functionality,
    which is defined as the layer. These functionalities will enable IoT devices to
    communicate with various Fog devices, servers, gateways, and the cloud. A detailed
    explanation of each layer is given below, where a smart transportation use case
    is considered in the explanation. FIGURE 8. Components of Fog computing architecture.
    Show All 1) Physical Layer The basic data source for Fog computing is the various
    forms of data emitted by the sensors [57]. These data could be generated from
    smart devices, temperature sensors, humidity sensors, smart homes, the CCTV surveillance
    system, traffic monitoring system, self-driving vehicles, and so on. For instance,
    if we wanted to implement a smart traffic management and monitoring system, we
    need to get updated traffic conditions of all roads from various sensors, roadside
    devices, and cameras, which will help manage traffic signals. It is also necessary
    to predict future traffic demand by collecting data from various GPS sensors.
    Besides physical sensors, the role of virtual sensors is also important [54],
    if a road accident occurred, it would not be possible to decide using just a single
    sensor whether the road should be blocked or traffic should keep going. The road
    might have one or more lanes- one lane may be affected by this occurrence while
    another lane could enable the traffic flow to continue, but the traffic handling
    capacity will be decreased due to this occurrence. In this case, a virtual sensor
    might help obtain an immediate decision on road conditions, traffic multiplexing,
    and traffic rerouting. Hence, the physical layer consists of physical and virtual
    sensors, where any data generation device could fall into any of these groups.
    2) Fog Device, Server, and Gateway Layer The Fog device, Fog server, or Fog gateway
    could be a standalone device or an IoT device [57], [59], [62]. However, it is
    obvious that the Fog server should have a higher configuration than the Fog device
    and gateway since it manages several Fog devices. Various factors are involved
    so that the Fog server can run. These include its role, hardware configuration,
    connectivity, number of devices it can manage, and so on. Whether the Fog server
    is distinct or part of an IoT device is defined by its role. A group of physical
    and virtual sensors will be connected to a Fog device. Similarly, a group of Fog
    devices will be connected to a Fog server. In this context, the Fog server should
    have higher processing and storage capacity compared to the Fog device. A specific
    cluster of Fog devices, which are connected to the same server, can communicate
    with each other when required. In the smart transportation use case, some application
    processing might depend on other Fog clusters. For example, if an application
    needed to find a fuel-efficient route, it might need information about other sensor
    clusters or Fog device clusters. To reach an appropriate decision, processing
    needs to be done in multiple Fog devices and servers. The Fog server and device
    layer are responsible for managing and maintaining information on hardware configuration,
    storage configuration, and connectivity of device and servers. This layer also
    manages the computation requirements requested by various applications. Computation
    requirements depend on data flow and the total number of IoT devices connected
    to the Fog device, as well as the total number of Fog devices connected to the
    Fog server. The communication between several Fog servers is maintained by this
    layer. For example, a Cisco IOx-supported 800 series router can be used as a Fog
    device and Cisco Fog data service devices can be used as the Fog server [65],
    [66]. 3) Monitoring Layer The monitoring layer always keeps track of the system
    performance and resources [54], services, and responses. System monitoring components
    help choose the appropriate resources during operation. Various applications run
    in smart transportation system scenarios. Therefore, it is obvious that a situation
    could arise when resource availability will be negative for computation or storage
    on a Fog device. A similar case could happen to the Fog server. To tackle these
    kinds of situations, the Fog device and servers will seek help from other peers.
    Thus, the system monitoring component will help decide such things efficiently.
    The resource demand component monitors current resource demand and can predict
    future demand for resources based on current resource usage and user activities.
    In this way, the system will be able to deal with any awkward situations where
    resource outage might occur. Performance prediction monitors can predict Fog computing
    performance based on system load and resource availability. This component is
    required to maintain appropriate QoS requirements in service level agreements.
    If SLA violation occurs frequently, then the cost of the system for the provider
    will be increased because of the penalty. Although performance prediction cannot
    eliminate this issue completely, it will be able to minimize overall SLA violation
    by predicting the performance and usage of the system. 4) Pre and Post-Processing
    Layer This layer contains multiple components, which specifically work on basic
    and advanced data analysis. At this level, acquired data are analyzed and filtered,
    and data trimming and reconstruction are also done when necessary. After processing
    the data, the data flow component decides whether the data needs to be stored
    locally or should be sent to the cloud for long-term storage [59]. The main challenge
    in Fog computing is to process data at the edge and minimize the volume of data
    that needs to be stored; this phenomenon is referred to as stream processing.
    In the smart transportation system use case, data will be generated from many
    sensors. These generated data will be analyzed and filtered in real time to get
    insight into the generated data. All generated data might not have any use. In
    some cases, it would not even be a good idea to store all generated data. As an
    example, if data is generated from a sensor each second, the mean value of data
    within a minute or within an hour may be stored depending on application requirements.
    Data can be trimmed in this way and a vast amount of storage space can be saved.
    In another case, if the difference among data values in some period of time is
    not that big, but might affect performance, then less numbers of reading within
    a minute can be taken. In such a way, it will be possible to filter a vast amount
    of generated data. Although the accuracy may not be 100%, application requirements
    might still be fulfilled to some extent. Data reconstruction is one of the components
    of this layer. This module takes care of faulty and incomplete data generated
    by the sensors. Similarly, if one or more sensors fail during operation, this
    component will reconstruct the data based on the data generation pattern to prevent
    interruption or any other application failure. 5) Storage Layer The storage module
    is responsible for storing data through storage virtualization. The data backup
    component ensures availability of data and mitigates the loss of data. In the
    storage virtualization concept, a pool of storage devices connected by a network
    acts as a single storage device, which is easier to manage and maintain. One of
    the key benefits of storage virtualization is to provide enterprise-class functionality
    using less-expensive storage or commodity hardware. Thus, the storage layer facilitates
    storage virtualization in order to minimize the complexity of the storage system.
    In a system, storage might fail at any point during system operation [67]. Therefore,
    it is crucial to backup important data to mitigate any unwanted situations. The
    data backup module in this layer takes care of periodic or customized data backup
    schemes. 6) Resource Management Layer The components in this layer maintain the
    allocation of resources, and scheduling, and deal with energy saving issues. The
    reliability component maintains the reliability of application scheduling and
    resource allocation. Scalability ensures the scalability of Fog resources during
    peak hours where resource demand is high. The cloud deals with horizontal scalability
    while Fog computing aims to provide both horizontal and vertical scalability [9].
    There are many distributed system resources for network, processing, and storage.
    This is a critical issue for distributed resources, which use application processing.
    Thus, resource allocation, deallocation, and reallocation will happen in which
    the resource allocation component manages and maintains resource allocation related
    issues. Another vital issue is that many applications will run in the Fog computing
    environment simultaneously. Hence, proper scheduling of these applications is
    required. The application scheduling component takes care of these applications
    based on various objectives. This layer also has energy saving components, which
    manage resources in an energy-efficient manner. Energy efficiency also positively
    affects the environment and helps minimize operational cost. Reliability components
    handle the requirement for the reliability of a system based on various reliability
    measures and metrics. Fog computing is a complex system that needs to take care
    of all IoT devices, Fog devices, and the cloud. Therefore, a device or connection
    might fail at any level, so reliability management is an important issue. 7) Security
    Layer All security-related issues such as encryption of communications and secure
    data storage will be maintained by the components in this layer, which also preserve
    the privacy of Fog users. Fog computing is intended to be deployed as a form of
    utility computing like cloud computing. However, in the cloud computing concept,
    the user connects to the cloud for services, but in the Fog computing concept
    the user will connect to the Fog infrastructure for the services while the Fog
    middleware will manage and maintain communications with the cloud. Hence, a user
    intending to connect to a service must be authorized by the provider. Therefore,
    the authentication component in the security layer processes authentication requests
    from users, so they can connect to the Fog computing service environment [27].
    To maintain security, it is crucial to maintain encryption between communications,
    so that security breaches by outsiders will not occur. The encryption component
    encrypts all connections from and to IoT devices and to the cloud. Fog computing
    components are mostly connected via a wireless connection, so security concerns
    are crucial. Some services in a smart city or smart house privacy are also an
    issue because of the involvement of user-related data in these types of systems.
    The Fog computing paradigm should not disclose user information without their
    consent. In the current age, the majority of users normally accept the security
    policy of the provider without reading it. Thus, special consideration of privacy
    should be undertaken for such services that involve user-related critical information.
    8) Application Layer Although the Fog was developed to serve IoT applications
    [58], several other applications based on Wireless Sensor Network (WSN) and CDN
    also support Fog computing. Any application that has latency-aware characteristics
    will be able to take advantage of Fog computing. This includes any type of utility-based
    service that could fit within Fog computing by providing better service quality
    and cost-effectiveness. For example, Augmented Reality-based applications should
    adopt Fog computing because of its nature. It is clear that Augmented Reality
    will transform the modern world in the near future. The needs of real-time processing
    for Augmented Reality applications can be addressed by Fog computing, which can
    maintain continuous improvement of Augmented Reality-related services. SECTION
    VI. Taxonomy of Fog Computing The Fog computing taxonomy is presented in Figure
    9. This taxonomy is derived by considering existing literature and the overall
    viewpoint on Fog computing. The proposed taxonomy focuses on the requirements
    perspective for infrastructure, platform, and application. FIGURE 9. Taxonomy
    of Fog computing based on the requirements of infrastructure, platform, and applications.
    Show All Firstly, by considering infrastructure, we identify infrastructure and
    network requirements, and the types of devices in a Fog computing environment.
    Secondly, for platform resource allocation and scheduling, security and privacy
    concern, service requirements, management, and multitenancy were determined. Finally,
    we defined application requirements, user requirements, and application modeling
    taxonomy for Fog computing. This taxonomy will help the research community and
    enterprises to gain better understanding and insight into the real-world deployment
    of Fog computing requirements, architecture, and devices. Figure 9 shows the taxonomy
    of Fog computing. A detailed description of each branch of the taxonomy is presented
    in this section. A. Infrastructure Fog computing infrastructure requirements depend
    on the network, devices, and their requirements. All Fog devices, network devices,
    and gateways existing in the Fog environment that participates in computation
    are also part of the Fog infrastructure. Infrastructure denotes the physical components
    of the Fog environment. 1) Infrastructure Requirements The many connected tiny
    devices are the primary elements in a Fog computing environment. These devices
    are located everywhere and help to connect all things around us. It is estimated
    that the world will see 50 billion handheld devices by 2020. Beside these devices,
    a huge number of sensors and actuators will also be put in place. Therefore, a
    proper infrastructural facility is needed to support this vast computing environment
    [20]. An example of how the number of sensors is increasing day by day is given
    in The Economist report titled, “Augmented Business”, which describes the implant
    sensors on cattle ears that could help to monitor their activity, health, and
    movements. This could help increase overall productivity. The implant of sensors
    affixed in one cow produces about 200 MB of information in a year. In another
    example, with sensor technology, Rolls-Royce is able to forecast when engines
    will more likely fail. From such a prediction, customers can plan engine changes.
    Heidelberger Druckmaschinen has huge printing presses equipped with more than
    1,000 sensors. These are the examples of distinct uses of sensors in specific
    domains. However, this phenomenon will change completely when the distinct parts
    are connected to generate more efficient and effective decisions. Therefore, the
    Fog infrastructure must have the capability to provide physical resources for
    computation, networking, storage, and memory to achieve efficient Fog computing
    services. 2) Network Requirements The network is one of the key bottlenecks in
    the Fog computing environment, where billions of connected devices generate and
    consume data at the edge of the network [68]. Most of the sensing and actuating
    devices require low bandwidth but a higher number of devices will be connected
    at the same time. Therefore, existing network connection technologies like LAN,
    MAN, WAN, or PAN need to be investigated further and amendments will be needed
    to cope with the Fog computing environment to facilitate countless IoT devices.
    Network operators are increasingly investing in new wireless access technology
    research because of the number of devices per user is increasing day by day. For
    instance, in the cellular mobile network, base stations have a limited number
    of link points [20]. As the number of things increase, these stations will need
    to support increasing numbers of devices. Fog devices must act as a router for
    neighboring IoT devices and as a primary processing unit for IoT application in
    the Fog environment. Each Fog device should have a resilient connectivity to the
    lower and upper layer devices. Mobile ad-hoc networks could act as a basis for
    the Fog network because of their mobility and lower cost feature [20]. Hence,
    connection and mobility are the main requirements for the Fog network. 3) Fog
    Devices Fog computing is basically intended to support IoT-related technologies
    to perform processing at the edge level. Mine projects [69], [70] at the middle
    of the sea, airline fleets or a ship [70] can be equipped with a huge number of
    sensors, so it is impossible to send and store all generated data in real-time
    into the cloud. Some intermediate computation, processing, and services will be
    done by Fog computing devices. Thus, the Fog layer must have sensor management
    devices, Fog processing, and storage devices and Fog gateway devices. All of these
    devices will work collaboratively to manage and perform tasks in the Fog plane.
    Here, we discuss the devices that are needed for Fog computing deployment. a:
    IoT Devices IoT devices are the devices that have sensing and actuating capability.
    A sensor is able to sense the environment, while an actuator acts on it when necessary.
    One of the most common types of sensor in IoT devices is the temperature sensor.
    The temperature sensor has various functions depending on different domains such
    as at home, in factories, and in the agriculture field. This sensor is also used
    to sense the temperature of soil, water, and plants in order to take proper action
    needed to improve service outcome. Another type of useful sensor is the pressure
    sensor, used especially in agriculture, smart vehicles, and aircrafts. Sensors
    are also used to estimate the volume of water used by the agricultural sector
    for cultivation and other uses. Surprisingly, a huge percentage of this water
    is wasted due to leaky irrigation systems and inefficient use of fresh water.
    Efficient use of the pressure sensor will help solve this problem. The pressure
    sensor is able to determine the flow of water and reduce water waste. The pressure
    sensor is also used in smart vehicles to determine the forces acting on it, and
    in aircrafts to determine altitude. Different groups of sensors are used for different
    IoT environments. For example, in healthcare, the most-used sensors are chemical,
    IR, pressure, and temperature sensors as well as other biosensors. On the other
    hand, in a smartphone, the most-used sensors are the gyroscope, GPS, and proximity
    sensors. One of the applications of the proximity sensor is to determine the presence
    of ear to dim or turn off the phone backlight to improve battery efficiency. This
    sensor is also used to monitor parking space since it can determine the presence
    of an object without touching it. It can also be used in a wide temperature range
    and is not affected by color. Its detection process also is not effected by dirt,
    oil, or water. There are many other sensors out there that enable IoT, which include
    GPS sensors, water quality sensors, level sensors, chemical/gas sensors, smoke
    sensors, IR sensors, humidity sensors, sound and vibration sensors, motion sensors,
    acceleration sensors, and machine vision sensors. There are five main types of
    actuators-magnetic or thermal, electrical, hydraulic, pneumatic, and mechanical.
    The actuator has a controlling or moving mechanism, a motor, which acts on various
    inputs. The raw application data comes from various sensors like speed sensors,
    cameras, temperature sensors, vehicle monitoring sensors, or GPS sensors. A typical
    sensor generates 10 data samples every second [71]. Sensors convert environmental
    variables such as smoke, heat, light, temperature, humidity, sound, and so on
    into electrical signals. These sensors are varied and can be micro-electro-mechanical
    systems (MEMS)-based, CMOS-based or LED sensors. Communication among sensors could
    be done by ZigBee, Bluetooth, Z-Wave or 6LoWPAN standards for short distance communication
    [72]. There is a necessity for communication among sensors in some cases where
    one sensing output is dependent on other collective sensor outputs. These sensors
    will be connected to Fog devices through wireless connections. However, Fog devices
    collect and process data based on application requirements. Some example of research
    works based on sensors can be improved by taking advantage of Fog computing. Aziz
    et al. [73] proposed a real-time health monitoring system using particular sensors
    in which the proposed architecture was based on GSM and GPS technologies. The
    system specifically monitors the body temperature and blood pressure of patients.
    The study used an Arduino microcontroller, dfrobot GPS/GPRS/GSM module v3.0.3,
    a heartbeat pulse sensor, and a lilypad temperature sensor for hardware implementation.
    In another study, a web-based application was developed for doctors and nurses
    with SMS functionality, which will be used as an emergency case. The system is
    able to generate GPS location, body temperature, and blood pressure. Butt et al.
    [74] investigated wearable technology such as SensHand, Gloves-based system, electromyography-based
    and hybrid systems, leap motion, and smartwatches. The development of these kinds
    of technology must be integrated with the smart home system and Fog-like architecture
    in order to deal with emergency situations. Some devices such as the smartphone
    can be considered as both an IoT and Fog device. In the same way, if some sensors
    and actuators were installed in the Raspberry Pi, the device could also act as
    both an IoT and Fog device. b: Fog Processing Devices Any device that has computing
    capability, storage, and network connectivity can act as a Fog processing device.
    It could be a network controller, switch, router, server, or a video surveillance
    camera. A Cisco 800 series router can be used as a Fog device where the IoT application
    can be run on the device and the device supporting Cisco IOx. To date, only Cisco
    800 series routers are supporting IOx with Linux kernel with virtualization support
    [44]. Most of these devices have a 266-400 MHz MPC8272 processor with 16 KB Cache,
    64 MB random access memory and 20 MB processor board flash memory. The user can
    host an application on these routers. These routers have two cores-Cisco IOS runs
    on one core and another core is used for running IOx services. Another type of
    Fog processing device is the Fog server. A Fog server can control several Fog
    devices in a specific domain. Cisco offers two flavors of Fog computing server
    deployment. One is the Cisco Fog Director, which can be deployed on any type of
    server with Cisco-recommended server specifications [66]. Another example of a
    Fog device manufactured by Cisco is the Fog data services, which are specifically
    designed for IoT [65]. However, Cisco Fog data services can only be deployed on
    Cisco UCS E and C Series Servers. Both will act as Fog servers; however, Cisco
    Fog data services are especially designed for an IoT environment. However, various
    organizations and bodies need to work beyond the proprietary solutions for fast
    technological advancement and technology adoption with a limited budget. Fog devices
    and Fog servers should be deployed in such a way that any type of network management
    device with storage and processing capability can act as a Fog device. Similarly,
    the usual type of server must be able to act as a Fog server. This could be an
    ordinary PC since Fog is not dedicated to performing very complex processing.
    However, further investigation is necessary to explore the minimum system requirement
    for a device that can act as a Fog device or Fog server. Connectivity between
    Fog devices and Fog servers will be via Ethernet or wireless or a serial connection
    in some cases. As an example, Cisco UCS E and C Series Servers, which are generally
    used as Fog servers, are connected to the network via Ethernet. On the other hand,
    Cisco 800 series routers are connected via serial ports that support Fog computation.
    c: Gateway Devices for Fog Many hardware boards are currently available in the
    market including Arduino Yun, Intel Edison, Raspberry Pi, Beaglebone Black, Arduino
    + Shields, Netduino, Tessel 2, and so on. These boards are currently used as IoT
    and gateway devices and can also be used as Fog gateway devices and as Fog devices.
    These boards have a built-in processor, wired and wireless adapter, and a USB
    port. Fog computing supports device heterogeneity, where a gateway could also
    be a part of the Fog computing environment. Constant et al. [75] developed a Fog
    gateway using Intel Edison and Raspberry Pi. Their proposed Fog gateway integrated
    the data conditioning process, smart analytics, intelligent filtering, and transfer
    to the cloud, which needs long-term storage and temporal variability monitoring.
    The IoT gateway supports various data types and communication protocols between
    devices and sensors. It also unifies the data format from various sensors. Current
    IoT gateways provide a solution for communication and do not support fully automatic
    configurations of newly added IoT devices [76]. Guoqiang et al. [77] proposed
    a smart IoT gateway with three key benefits. The proposed gateway has a unified
    external interface and pluggable architecture. It has a flexible protocol to translate
    various sensor data into a uniform format. The study designed a customized device
    with a Samsung S5PV210 mobile application processor as its gateway. However, this
    gateway did not have any fault tolerance or security features. B. Platform The
    platform manages applications and infrastructure in the Fog environment. It takes
    care of resource allocation, scheduling, fault tolerance, multi-tenancy, security,
    and privacy in Fog computing. Based on the taxonomy of the Fog, we discuss the
    requirements of the platform for Fog computing in this section. 1) Resource Allocation
    and Scheduling Heterogeneous devices are the main challenges in developing proper
    resource allocation and scheduling in the Fog. If we wanted to use the computation
    power of idle devices, we need to schedule tasks on these devices efficiently.
    Otherwise, IoT application processing in the Fog will face complex issues, which
    will hinder the fulfillment of the latency awareness goal. Two of the key requirements
    for resource allocation and scheduling are availability and efficiency. Resources
    in the Fog are not dedicated, and thus availability should be ensured. On the
    other hand, lack of efficient resource allocation and scheduling might lead to
    unwanted delays in the overall processing. 2) Service Requirements Fog services
    can be defined as single or multiple user requests, where the user will constantly
    be updated of the outcome of the service until he or she has a subscription to
    that service. This means that the service outcome will not be fixed and will keep
    changing until the end of the service. The Fog device and Fog server perform the
    intermediate processing, which occurs in between user request and service output.
    The Fog server may communicate with the cloud for processing and information retrieval
    when necessary. For instance, if we considered selecting the best path based on
    real-time traffic in a smart transportation system, the Fog service will keep
    updating on the best path until the end of the journey. In this case, we need
    to take into account mitigation of fault, service quality, network latency, and
    power consumption in order to maintain the standard of the service. a: Fault Tolerance
    Fault tolerance allows a system to keep performing even when a part of the system
    has failed. This failure might be software failure, hardware failure, or network
    failure. The solution for fault tolerance will result in a fully operational system
    where the system will continue its operation with a lower capability instead of
    shutting down totally [78]. Fault tolerance is mostly investigated in the cloud
    [79]–[89]. However, it is necessary to investigate fault tolerance in the Fog
    as well. Although many research works have addressed the need to explore fault
    tolerance issues [5], [9], [64] in Fog computing, none have actually investigated
    the issue. We discuss in more detail the issue of fault tolerance in Section VIII-B.
    b: Quality of Service (QoS) QoS is an important service requirement for Fog computing,
    which is based on reliability, network delay, throughput, and energy consumption.
    Besides these, resource management, power-consumption model, scheduling policy,
    and power failure handling are also important to ensure QoS. If some sensors fail
    for any reason, the accuracy of the outcome or action could be affected. Fog is
    intended to work with latency-sensitive systems; hence, it should maintain high
    reliability with a strict QoS assurance. Otherwise, the latency awareness criteria
    will not be fulfilled. Madsen et al. [90] suggested that the availability of different
    methodologies and algorithms work with the reliability of network connectivity
    and information, to ensure accuracy, which is crucial for building Fog computing-based
    projects. 3) Security and Privacy In this technological era, people are inevitably
    sharing personal information when using different applications and web services.
    Our personal information is no longer personal; it now belongs to many tech giants
    because we are using their free services on a regular basis [91]. A simple example
    is that if anyone used an Android phone without any security settings, the built-in
    Android OS will automatically run GPS and map services, for which it can collect
    all location-related activities about the user. Therefore, information about when
    and which country a user has visited, where a user has dined in, which route a
    user uses for going to the office, home, and so on will be made available to these
    companies. However, these tech giants might argue that they do not disclose our
    data to others, as they can only see our data in our timeline only. However, a
    recent Facebook incident fails to convince us of the honesty of these tech giants
    [92]. The Fog computing paradigm is completely distributed and not intended to
    be centrally managed most of the time. Sensitive data might be processed in an
    intermediate device when the application does not have full control of the device.
    On the other hand, the user will not have full control over the Fog applications.
    Users will require more protective and innovative ways to retain their privacy
    and protect it from any potential and very harmful entities [20]. Similarly, Fog
    application providers also need to develop security to protect their application
    from unwanted data theft. Three different types of security need to be ensured:
    network connection security, data security, and user privacy. Network connection
    security and data security are applicable from both the user and provider perspectives.
    Moreover, user privacy is also important because Fog processing is carried out
    on user data in most cases. 4) Multi-Tenancy Multiple tenants for the same services
    with an isolated runtime for each tenant are referred to as multi-tenancy service.
    Multi-tenancy is important for Fog because of the limited resources in a Fog environment.
    By enabling multi-tenancy, one instance will run in a Fog device and will serve
    multiple tenants (users). Multi-tenancy could be container-based or could be the
    usual virtualization-based. Container-based virtualization is a more lightweight
    and powerful virtualization solution, which the Fog can adopt, to provide the
    fastest processing solution. Container-based virtualization does not need to emulate
    the operating system to facilitate virtualization; thus, it will be easier to
    manage and migrate. Multi-tenancy is a requirement for the platform, and needs
    to be defined before deployment. Multi-tenancy may incur performance degradation
    and security issues [29]; thus, adequate and secure isolation is needed. 5) Management
    The management of the Fog can be centralized or decentralized. Since the devices
    in a Fog environment belong to different domains, centralized management is not
    always possible. Alternatively, processing of IoT applications will be done in
    different Fog clusters, so management will follow a distributed nature in this
    case. In summary, the management of the platform in a Fog must be defined. In
    the case of decentralized management, similar processes must be deployed for different
    Fog devices to handle management issues. C. Application Applications have to fulfill
    certain requirements to execute in a Fog environment. Here, we discuss the features
    required by the applications for execution. 1) Application Requirements a: Scalability
    The number of IoT devices are increasing very swiftly day by day all over the
    world, which raises a new issue of scalability. Thus, we need to deal with the
    scaling of devices and services in the Fog computing environment. Dependency on
    cloud computing has been observed for IoT application processing by many research
    works, where trillions of IoT devices are involved, such as that of Li et al.
    [93]. However, implementation of the whole application in the cloud in such an
    environment where IoT devices are generating a huge amount of data is neither
    feasible nor efficient. IoT devices are not only stationary but also mobile in
    most cases. Hence, maintaining frequently changing device states and availability
    in the cloud is not an easy task. Also, with the growing number of IoT devices,
    it would be more critical for IoT applications to query and select IoT devices
    [59]. The Fog computing system must be an autonomous system where application
    execution by the participating device will be done automatically including scalability.
    b: Heterogeneity For any IoT system, the heterogeneous device is a fundamental
    characteristic where device heterogeneity co-exists at any level in the Fog computing
    paradigm. Abstraction of device complexity is also required to some extent. Device
    heterogeneity does not only refer to the diversity of services and protocols,
    but also the assortment of horizontal and vertical levels of the Fog architecture
    [59]. To address this heterogeneity, Giang et al. [59], classified three types
    of Fog devices: compute, input/output (IO), and edge nodes. Edge nodes are the
    sensors and the actuators, IO nodes are the resource-limited devices mostly responsible
    for brokering communications, and computing nodes offer computing facilities.
    Of the three types of nodes, IO and compute nodes are mostly dynamic and customizable
    or programmable as required. It is possible to implement all three nodes in a
    single device based on its capability and design goal. The smart gateway is an
    example of such implementation. In order to use the capability of various types
    of devices in an IoT environment, it is obvious that the application must be designed
    in such a way that it might be able to perform its task execution on multiple
    devices regardless of its capacity and location. More precisely, the application
    should able to use maximum available computation resources through middleware.
    c: Interaction Timeliness The perception-action (PA) cycle is the basic function
    of a nervous system, which maintains circular flow between sensory organisms and
    its actions towards the functionality of that sensing. The PA cycle is also a
    characteristic of IoT applications, where the cloud and Fog infrastructure satisfies
    timeliness requirements and application logic for communication. Giang et al.
    [59] identified four interaction models for the PA cycle in a Fog environment.
    Examples of these models are: (i) in a local network, communication between devices,
    which is considered as an immediate cycle action, (ii) interaction with the cloud
    from a device of a local network, which is generally for time-insensitive actions,
    (iii) an interaction generated by the cloud to a device in a local network, which
    requires semi-immediate actions, and (iv) communication among IoT-related applications
    in the cloud. However, their work considered the role of the Fog server, which
    manages and maintains several Fog devices in a specific cluster. On the other
    hand, PA interaction can be divided into immediate, semi-immediate, and delayed
    action to leverage IoT application requirements more efficiently. Delayed action
    can be performed on the type of processing that does not have any timeliness issues
    and could be processed by the cloud infrastructure. d: Mobility Device mobility
    is a natural probability and is one of the key requirements for implementing an
    IoT platform [59]. From the Fog perspective, it is not only the edge devices that
    will be mobile but also computing and storage devices in the Fog layer. Managing
    mobile devices in two different planes and syncing them with each other is challenging.
    To ensure resource availability and successful task completion, task distribution,
    duplication, and migration is required. This mechanism is already considered in
    the cloud but there is a need to reinvestigate them by considering mobility [94].
    2) User Requirements User requirements can be changed by various constraints.
    First of all, a user may want to complete the submitted task within a specific
    time binding, which is referred to as the deadline. Secondly, the user may set
    some constraints for the budget. Thirdly, in the case of some users, they may
    not care about the budget but the response time is of utmost importance. Fourthly,
    some users may want tolerable accuracy. This means that the user may not seek
    accurate results but rather fast results that could be provided with some reasonable
    errors. Aazam and Huh [54] suggested that pre-allocation and prediction of resources
    rely on user behavior and the probability of future utilization of resources.
    Dastjerdi et al. [4], [95] stated that edge devices perform optimization by considering
    user behavior and network condition. 3) Application Modeling Two types of application
    modeling are possible by considering the requirements of applications in the Fog.
    Most IoT devices generate tuples periodically, which can be considered as a stream.
    These streams need to be processed in real time to get accurate results. Alternatively,
    the application that does the processing based on previously stored sets of data
    could include microservice-based applications. The advantage of microservice is
    that it can bind all functionality and required libraries in a single service,
    which can run above the microservice controller without dependency. Hence, application
    modeling in Fog could be stream-based or microservice-based. SECTION VII. Dimension
    of Fog Computing-Based Applications Several applications require a Fog computing
    infrastructure to provide smooth services. These include smart transportation
    systems, Augmented and Virtual reality, healthcare, video streaming, smart homes,
    and smart cities. Requirements of platform and applications are also needed in
    order to provide services. In this section, we discuss some research works, which
    specifically address the application of Fog computing. We evaluate each work based
    on their contribution on the Fog infrastructure, platform, and applications as
    defined in our taxonomy. It is obvious that all three kinds of services are interrelated.
    However, each researcher only focused on one or more of these aspects. Mapping
    related works with our proposed taxonomy will help in finding the research gaps
    in Fog computing applications. A. Smart Transportation System Several research
    works have been carried out on smart transportation systems that use Fog computing.
    In this section we discuss a few works that have been done on the Fog-based smart
    transportation system and then identify key issues that need to be addressed.
    Truong et al. [96] pproposed a Vehicular Ad-hoc Network (VANETs) architecture
    called Fog Software Defined Networking (FSDN), which combines SDN and Fog together
    to provide a better solution. As SDN has programmability, flexibility, global
    knowledge, and scalability features and Fog has location awareness and time sensitivity,
    the combination of these two will leverage on the key challenges in VANETs. The
    proposed system is able to augment communication among vehicles, infrastructure,
    and base stations via centralized control, besides reducing latency and optimizing
    the utilization of resources. However, the central SDN controller of the proposed
    system is where the bottleneck of the proposed system occurs. The system is focused
    on infrastructure and network requirements. The Fog controller is used for service
    implementation. The work did not focus on platform and application requirements.
    Investigation of VANETs in Fog has also been done in Giang et al. [97], where
    they explored how smart transportation applications (VANETs) are developed using
    the Fog Computing approach. Driving vehicles in an urban area requires immediate
    decision on various activities such as route changing, lane change, slowing down
    speed, looking at obstacles, and so on. Hence, applications need to gather all
    related details to act on these activities. The authors discussed Fog-based smart
    transportation application requirements such as programming abstraction and application
    models. The work explored application modeling but not other application aspects
    nor infrastructure or platform. B. Vehicles as Fog Infrastructure Hou et al. [98]
    proposed the idea of Vehicular Fog Computing (VFC), which will use the vehicle
    as an infrastructure for computation and communication. The VFC architecture utilizes
    vehicle computation resources by providing service to the edge devices located
    near them. It will aggregate abundant resources of each moving car by which service
    quality can be enhanced. Using quantitative analysis on different scenarios, they
    discovered an interesting relationship among connectivity, mobility, communication
    capability, and parking behavior. These four characteristics help us understand
    resource utilization of vehicle resources, which will help achieve better utilization
    of unused resources. C. Augmented and Virtual Reality Augmented Reality applications
    are extremely time sensitive; a small delay can lead to serious errors in user
    experience. Thus, Fog computing-based solutions will have great potential in this
    domain [4]. These statements are also applicable for connected Virtual Reality
    (VR) or VR-based games. Zao et al. [99] proposed an augmented brain computer interaction
    game, which utilized the Fog and cloud infrastructure. The Fog performed real-time
    analysis such as signal processing that needs to classify the brain state and
    other analyses such as model classification updated from the cloud. However, their
    work only focused on the Fog infrastructure but neglected most aspects regarding
    platform and application. D. Healthcare The Fog computing approach also enables
    real-time sensor-based healthcare services. Rahmani et al. [100] proposed a Fog-assisted
    system architecture for the healthcare system. A smart e-health gateway is the
    key component of this architecture, which will process the generated data from
    the sensors and generate an Early Warning Score (EWS) to notify for any medical
    emergency. They considered many aspects of our taxonomy; but it is necessary to
    investigate each aspect extensively, which this study did not. Another Fog-based
    healthcare architecture was proposed by Mahmud et al. [26]. Their work mainly
    focused on network delay, power consumption, and communication optimization in
    Fog-based healthcare service. However, platform, application, and user requirements
    were not investigated. E. Smart City Smart city-related applications need to process
    sensor data on a real-time basis, where Fog computing can play a major role. Giordano
    et al. [101] proposed a Rainbow architecture, which supports various applications
    in a smart city. The proposed Rainbow framework evaluated three smart city applications
    including noise pollution mapping, urban drainage networks, and smart street.
    The work proposed a distributed agent-based approach in the intermediate layer
    in between the physical infrastructure and cloud. However, the work did not focused
    on application and platform aspects except for application modeling. Table 4 shows
    a summary of the above-discussed Fog-based applications mapped to our proposed
    taxonomy. In summary, it can be concluded that most of the works have focused
    on infrastructure and application modeling. There is a research gap on application-
    and platform-related aspects, which need to be explored further. TABLE 4 Evaluation
    of Existing Works on Fog Applications SECTION VIII. State-of-the-Art Fog Computing
    In this section, we focus on some existing research works on Fog computing. We
    discuss research works from four different research areas of Fog computing. These
    areas are resource allocation and scheduling, failure handling, simulation tools,
    and microservices. A. Resource Allocation and Scheduling in Fog Computing Fog
    computing is fast evolving and growing rapidly due to its edge-level computation
    and heterogeneous nature. In this section, we present several research works,
    which have been done in the past couple of years. We also summarize the presented
    research works with a comparative discussion to address research gaps in this
    area. Most of the reviewed works are related to resource allocation and scheduling
    in the cloud and Fog environment. However, some works have only been done in the
    Fog environment. 1) Resource Allocation and Scheduling for Fog-Cloud Environment
    Alsaar et al. [102] proposed resource allocation methods for a collaborative platform
    composed of Fog and cloud paradigms. Their proposed algorithm is grounded on linearized
    decision tree rules by considering three different conditions for managing user
    request and for balancing workload. The conditions are VM capacity, completion
    time, and service size. Each condition has two branches: the VM capacity branches
    out to enough or not enough; the completion time consists of now or later, and
    the service size is divided into small or large. In some cases, this includes
    services in the queue, which will be represented with yes or no. They utilized
    1/m/m/1, with (1)/ representing cloud broker, /(m) for many paths, /(m) for many
    Fog brokers, and /(1) for IoT device users. Using this method, the total overhead
    for big data processing in the system was reduced. In their work, the availability
    of cloud servers and the Fog was guaranteed and a fast response time to satisfy
    QoS was achieved. The SLA for users was also different, where shared and reserved
    resource was provided. However, availability and QoS were not studied extensively.
    Deng et al. [103] presented a framework for workload allocation in the cloud and
    Fog environment to examine power consumption-delay trade-off issues. They defined
    the workload allocation problem into primary and sub-problems, which can be solved
    via related sub-systems. They employed a Hungarian algorithm and Generalized Benders
    Decomposition (GBD) algorithm to solve the problem. Numerical and simulation results
    were presented to prove that the Fog is a complement to the cloud. However, the
    complex nature of workload and resource was not studied in their work. Brogi et
    al. [104] prototyped a tool known as ‘FogTorch ∏ ’ which is capable of fulfilling
    hardware, software, and QoS requirements before deploying a composite application
    in the Fog infrastructure. The proposed tool manipulates Monte Carlo simulations
    and only considers communication link QoS. Resource consumption and QoS assurance
    terms were undertaken for classifying the eligibility of deployments. The proposed
    algorithm was based on the preprocessing phase and backtracking search phase.
    To find eligible deployment, the preprocessing used input from results derived
    by the backtracking search algorithm. However, availability and latency are more
    important in the Fog environment compared to resource consumption and communication
    links. In order to ensure efficient use of resources and network infrastructure
    in the Fog and cloud environment, Taneja and Davy [105] proposed a Module Mapping
    Algorithm, which efficiently deploys IoT Application Modules in the composite
    Fog-Cloud Infrastructure. They employed lower-bound searches and compared function
    algorithms to find an eligible network node in the Fog and cloud. The Module Mapping
    algorithm returned a map with nodes, which are appropriate for completing the
    computation operation. If the application requires faster processing, the application
    will be deployed close to the source device. However, the work considered CPU,
    RAM, and bandwidth to find the best resources. In such a case, the cloud resource
    will always be the best resource, so it will be necessary to consider other parameters
    such as response time and availability of the specified resources. Yin et al.
    [52] studied a Fog-assisted big data streaming scenario, where Fog devices are
    responsible for preprocessing raw data for applications hosted in the cloud using
    the unused resources of Fog devices. In their work, the software-defined network
    (SDN) controller continuously adjusted the volume of data to be sent to the Fog
    device for pre-processing. The collaborative computation problem was defined as
    a social welfare maximization problem and a hybrid alternating direction method
    of multiplier (H-ADMM) algorithm was proposed to minimize computation burden via
    the dynamic distribution of Fog devices, cloud, and SDN using message exchanging.
    The formulation of social welfare maximization problem determined the size of
    data that will be assigned to a Fog device. During the formulation, loss of information
    value by preprocessing and the operation cost of the Fog and cloud were considered.
    The work completely depended on the cloud for post-processing, but pre- and post-processing
    could have been done in the Fog to support time-sensitive real-time applications.
    Aazam et al. [106] proposed a dynamic resource estimation algorithm by integrating
    the historical record of cloud service customer (CSC) in a Fog environment based
    on the relinquish probability. The minimum relinquish probability value is 0.1
    and this value will be increased based on the history of the user. However, for
    fair resource estimation, the relinquish probability will be 0.3 for new customers.
    For existing and returning customers, the characteristics of the customer are
    known, so the probability value can be calculated easily. In this way, resource
    underutilization could be minimized and the chances of profit loss will be low.
    2) Resource Allocation and Scheduling for a Fog Environment A resource allocation
    strategy based on priced timed Petri nets (PTPNs) was proposed by Ni et al. [107]
    for Fog computing. The main idea of this work is that the user can choose the
    satisfying resources autonomously from a pre-allocated resource group. With credibility
    evaluation for both users and Fog infrastructure, their proposed strategy comprehensively
    considers the cost for time and price to complete the tasks. The user that has
    a high credit limit will be able to allocate highly reliable resources to complete
    their tasks. Due to the dynamic nature of creditability of users and resources,
    there will be some deviation in calculating them properly. To maintain QoS, the
    resources will be ordered according to their processing capacity and divided into
    several groups. Moreover, users with similar credibility will be assigned to several
    groups. Pooranian et al. [108] proposed a simple algorithm to find an optimal
    solution for resource allocation. They considered the problem as a bin packing
    penalty aware problem where servers are bins and VMs are the pack. Based on idle
    energy, maximum frequency, and maximum energy, each server will be palatalized
    and rewarded. The method will calculate how many VMs could be allocated in t time
    slot on a server. The VMs will be served based on their frequency and time limitations.
    As a consequence of penalty, a server will be punished in the form of being banned
    from use for a few iterations. Once the server passes the iteration freeze, it
    will return to the stream to perform further computation. The penalty and reward
    methods are applied to minimize exponentially increasing energy consumption. Sun
    and Zhang [63] proposed a crowd-funding algorithm for a Fog environment, integrating
    idle resources in the local network. An incentive mechanism was used to encourage
    resource owners to participate in the computation and enthusiastically perform
    their tasks. Through the comprehensive reward and punishment mechanism, it is
    ensured that the participant will positively perform the tasks. This work is similar
    to the above-described literature proposed by Pooranian et al. [108]. However,
    in this case, the reward and punishment go to the participant rather than the
    physical server. 3) Summary of Resource Allocation and Scheduling in Fog Based
    on the related research on resource allocation and scheduling in the Fog, a summary
    is presented in Table 5. From this table, we can see that most of the researchers
    have focused on resource allocation in the Fog. More research works are therefore
    required to investigate resource sharing and workload allocation. Also, further
    investigation is needed to address energy-efficiency, load balancing, SLA, and
    QoS in the Fog. We identified two major issues in Fog computing research. Firstly,
    researchers tend to use a synthetic workload to validate their methods and algorithms.
    Secondly, most of the researchers used cloud-based simulations, which are not
    that convincing because the Fog is more heterogeneous and dynamic in nature. Thus,
    further investigation into workload generation and simulations in the Fog need
    to be undertaken. TABLE 5 Summary of Resource Allocation and Scheduling Research
    in Fog B. Fault Tolerance in Fog Computing The Fog computing paradigm is a highly
    distributed heterogeneous platform where the probability of device failure is
    very high compared to the cloud. Since the Fog is evolving, no study has yet been
    done on fault tolerance in Fog computing. However, fault tolerance has been mostly
    studied in the cloud computing paradigm. Often, fault tolerance is measured by
    availability. In the cloud, faults are handled by proactive fault tolerance and
    reactive fault tolerance techniques at either the workflow level or task level.
    Reactive fault tolerance techniques are used to reduce the impact of failures
    on a system when the failures have actually occurred. Techniques based on this
    policy are job migration, checkpoint/restart, replication, rollback and recovery,
    task resubmission, user-defined exception handling, and workflow rescue. Proactive
    fault tolerance predicts the faults pro-actively and replaces the suspected components
    with other working components; thus, avoiding recovery from faults and errors.
    Proactive Fault Tolerance uses self-healing, preemptive migration, and software
    rejuvenation, which are the few proactive fault tolerance techniques in the cloud.
    According to Sharma et al. [110], the causes of failure in the cloud varies, and
    include software and hardware failure, service failure, overflow failure, power
    outage, outdated systems, network failure, cyber attacks, and human errors. It
    is crucial to handle faults in Fog computing for which the fault needs to be considered
    at every step, not only for processing but also for the transmit-and-receive process
    [111]. In this section, we discuss some existing research works on fault tolerance
    in cloud computing. We specifically focus on resource and task failure mechanisms.
    Then, we summarize the existing works and present a research direction for failure
    handling in Fog computing. Jiang and Hsu [112] proposed a two-level standby design
    for handling server failure in the cloud system. In their proposed system, cold
    and warm standby of the system is made available. Once any server fails, the warm
    standby system will replace the failed server and the failed server will be sent
    to the repair house. After repairing, the system will be placed in the cold standby
    group. The systems in the cold standby group are in a completely switched off
    mode. The work proposed a model to determine the necessary number of cold and
    warm standby systems in the cloud. However, this type of hardware failure handling
    is not suitable for the Fog because most of the time Fog computing devices will
    not be under the property of the Fog provider. Hence, task migration is the best
    solution for hardware failure and this should be reactive in most cases, except
    where the Fog device belongs to the provider. Latiff et al. [113] proposed a cloud-scheduling
    scheme based on a check-pointed league championship algorithm. They employed a
    task migration method for independent task execution failure. In their proposed
    method, the system state will be saved periodically by check-pointing, so the
    task need not start from the beginning once it fails. When the task fails, it
    will be assigned to an underloaded VM and the league championship algorithm will
    be employed to schedule the failed tasks. Wu et al. [114] proposed a fault tolerance
    technique using migration to the cloud. The failure handling method is proactive,
    which always monitors the host and continuously tries to predict the chances of
    failure. If the prediction becomes true, the system will look up other available
    resources and then migration will be performed. The proposed method will monitor
    CPU temperature, memory usage, and CPU fan speed, etc. To employ such a technique
    in Fog computing, further investigation is needed because the types of device
    in Fog are diverse. A combined method of check-pointing and migration-based proactive
    failure handling was proposed by Egwutuoha et al. [115] for HPC and cloud. In
    the proposed method, the authors used a Lm-sensors open source software tool for
    computer health monitoring. From the monitoring data, they defined rule-based
    monitoring depending on temperature, fan speed, voltage, and processor utilization
    to predict failure. The rules are denoted as 1, 2, and 3, representing normal,
    warning, and critical state, respectively. They employed three different policies
    for migration. The first depends on the necessity lease additional node. The second
    removes the node, which is unhealthy based on the state. In the third, the critical
    state publishes to the head node. Finally, the system administrator is notified
    for further action. This type of approach might increase the overhead in the Fog;
    however, further exploration is essential. A recent study shows that proactive
    fault tolerance is the best solution for the cloud compared to redundant solutions
    [88]. However, failure prediction accuracy is the key factor for these kinds of
    solutions. Their work considered software, hardware, and unstable behavior to
    predict the failure of the infrastructure. More specifically, they defined failure
    based on an error formula err=(ActualTime−PredictedTime)/ActualTime×100% , which
    was derived from [118] and [119]. A combination of the proactive and reactive
    method was applied by Gao et al. [118] to handle task failure in the cloud environment.
    The crash detection method and replication factor were proposed in this work to
    handle failures. Table 6 shows a summary of the investigated literature on fault
    tolerance in the cloud. TABLE 6 Summary of Investigated Fault Tolerance Literature
    in Cloud Because of its unstable nature of failure and heterogeneous characteristics,
    the hybrid failure handling method is more appropriate for the Fog computing environment.
    C. Simulation Tools for Fog Computing Simulation and modeling in Fog computing
    are still in their infancy. However, a few research works have been done on Fog
    computing simulation, which are focused on some specific aspect of Fog computing.
    Aazam and Huh [54] focused on resource prediction and pricing in Fog computing.
    The Proposed Fog-based resource management model is able to estimate the required
    resources based on the probability of user behavior of future resource use. Validation
    and performance evaluation was done using simulation. However, they did not consider
    service heterogeneity, QoS, or device mobility factors. Another work proposed
    by Dastjerdi et al. [4] focused on dag of the query for incident detection in
    a smart city use case. Both of these works used CloudSim [119] to validate their
    method along with an experimental evaluation. The first toolkit for Fog simulation
    was developed by Gupta et al. [120], known as iFogSim. The toolkit is used for
    the simulation and modeling of IoT resource management techniques in the Fog and
    edge computing paradigms. The most challenging problem is the design of resource
    management techniques, which determine analytic application distribution among
    edge devices, which will improve the throughput and reduce latency. The proposed
    simulator is capable of measuring the impact of resource management techniques
    in terms of network congestion, latency, cost, and energy consumption. The simulator
    was validated using two use cases and the authors also proposed a Fog computing
    environment architecture. Challenges in Fog computing deployment are include incorporating
    Fog with Emerging Technologies such as 5G Technologies [121], Network Function
    Virtualization (NFV), and Software-defined Networking (SDN). In this case, a simulator
    with container, SDN, and NFV support is crucial. Table 7 presents the key features
    of these two simulators that are mostly used by various researchers for Fog computing
    simulation. These two simulation tools did not focus on network parameters such
    as bandwidth distribution of the link and round-trip delay of the various media.
    These two parameters heavily affect the simulation results where minimization
    of latency is the key goal in a Fog computing environment. Secondly, both tools
    did not consider container-based virtualization. In a Fog computing environment,
    there are many devices that will participate in computation, where hypervisor-based
    virtualization is nearly impossible to implement due to the lower memory and processing
    power of these devices. TABLE 7 Simulation Tools Used for Fog Simulation and Their
    Key Features D. Fog-Based Micro Services A microservice is an independent process
    and Software-Oriented Architecture (SOA) that interacts by message passing. The
    SOA of microservice does not hinder or favor any specific programming model. It
    provides design and implementation guidelines for distributed applications to
    partition each component independently. Each of the components addresses a specific
    functionality. The functionality of the components can be accessed by message
    passing and is possible to implement in any mainstream programming language internally.
    In this way, this principle helps developers and project managers to develop each
    module independently and test it with a few related functions. Some microservices,
    also known as high-level microservices, are mainly responsible for coordination
    with other microservices [124]. The organizational approach of microservices accelerates
    the development cycle, nourishes ownership, encourages innovation, improves scalability,
    and enhances the maintainability of software applications. Using this approach,
    software becomes a small independent service and interacts over unambiguous APIs.
    These services are preserved via self-contained small teams [125]. The agility
    and independent distributed nature of microservice deployment makes it a good
    solution for Fog-based IoT application development. Independent processes and
    interaction via message passing features has made microservices more convenient
    for IoT applications. In the Fog, there is a limitation of resources, so developing
    microservices in the Fog will minimize the growing complexity of the big system
    by dividing it into a set of small independent services. Microservice is taking
    modularity to a subsequent level by incorporating high cohesion and loose coupling
    of distributed systems. 1) Current Research Aspects of Microservice Recently,
    microservice-based applications have started gaining popularity [124]. Fog-based
    microservices have not been investigated extensively; hence, it is an open research
    area. However, some research works have been done in this emerging research area,
    with most of the efforts being related to IoT. Butzin et al. [126] investigated
    the use of microservices in IoT and claimed that the architectural goal of IoT
    and microservices are similar. However, they actually have different features
    in terms of various aspects. First of all, microservice has a self-containment
    feature where all dependencies and libraries are packed with the application in
    a single image. On the other hand, for IoT, all libraries are not generally wrapped
    with the application. However, both use similar types of virtualization and web
    protocols. Microservice also has a continuous integration and delivery feature
    while in IoT these are not available or only partly exist. Vresk and Čavrak [127]
    proposed a microservice-based middleware for IoT to support device heterogeneity,
    various communication protocols, and services. They presented a data model and
    address model for microservice-based IoT. Brito et al. [128] proposed a service
    orchestration architecture for Fog using microservices. The authors defined the
    resource manager as a microservice. Khazaei et al. [129] proposed a generic programmable
    self-managing microservice-based platform for IoT. In the platform, microservices
    will exist in all layers in a cascading manner and an autonomic management system
    will scale the microservice. A similar type of IoT framework was proposed by Sun
    et al. [130]. In their architecture of nine components, all are microservices
    except for the core service. The work proved that microservices are far better
    than the monolithic approach in terms of scalability, flexibility, and platform
    independence. However, still, microservice-based IoT architecture suffers from
    various issues such as faults in the network, network delay, message serialization,
    cooperative transaction processing, and other distributed computing scenarios.
    Li et al. [131] proposed a cooperative-based model specifically for smart sensing
    devices; it is possible to enhance the performance of such a service by undertaking
    a micro-service based concept. Krivic et al. [132] proposed a management solution
    for Machine-to-Machine (M2M) device communication in an IoT system using collaborative
    microservice. They argued that microservices could act as the agent in an agent-based
    system since each microservice is responsible for performing a specific task and
    acts collaboratively to achieve the system goal. Container-based virtualization
    is the best solution for deploying microservices since the container supports
    OS virtualization and packs all dependencies in a single image. A container is
    able to manage physical hardware resource needed by an application with its OS
    kernel utilities [133]. 2) Microservices and IoT Applications Many research works
    have suggested Fog-based processing for IoT applications in smart transportation
    systems [96]–[98], Augmented and Virtual Reality [99], [134], [135], and healthcare
    [26], [136], [137]. Fog computing is also suitable for video streaming, smart
    homes, smart cities, and CDN. The common characteristics of these applications
    are time-sensitiveness, which make Fog computing a promising emerging computing
    paradigm. The main drawback of the Fog, however, is resource limitation and failure.
    Thus, using microservices for Fog-based IoT applications will minimize these drawbacks.
    Microservices are standalone, lightweight, and easily deliverable. To mitigate
    resource limitation, the microservice-based container is the best solution so
    far. In the same way, it will also minimize the cost of failure by deploying the
    application immediately. Many open research issues can be addressed by implementing
    Fog-based micro services; these include service management, scheduling, monitoring,
    fault tolerance, security, and privacy. E. Fog Based Mobile Computing The number
    of smartphone and mobile device users in urban areas as well as in rural areas
    is increasing day by day. As a result, mobile users are now requesting high-volume
    content collaboratively. Providing service for all requested contents in an area
    where mobile users are densely populated is a really challenging task for service
    providers [138]. The high number of concurrent content requests will only make
    the situation worse. One of the best solutions to cope with this problem is to
    offload content near the users, so that the users could get better service. This
    content offloading process can be supported by mobile Fog computing. In mobile
    Fog computing, content will be offloaded to the Fog device, which is located closer
    to the users. However, content management in Fog nodes is a current research issue.
    Depending on the demand of the contents, offloading should be distributed on the
    Fog nodes. Constant monitoring and efficient cache management is crucial to deal
    with resource-limited Fog nodes. A few research works have been done on mobile
    Fog computing. This section chronologically discusses the research works that
    have been done in this particular research area in the past couple of years. Hong
    et al. [94] proposed a high-level programming model that supports large-scale
    geospatially distributed time-sensitive applications. The proposed Mobile Fog
    programming model has two design goals. The initial goal is to provide a simplified
    application development for an enormous number of heterogenous devices, which
    are distributed in a wide area. The next goal is the dynamic scaling of resources
    based on resource demand. They developed an API for their programming model and
    evaluated it using two application models: vehicle tracking using a camera and
    traffic monitoring using a Mobility-driven distributed Complex Event Processing
    (MCEP) system. However, they did not focus on process placement or process migration.
    Shi et al. [139] proposed a P2P inspired communication model between the mobile
    device cloud and mobile nodes to share resources and computation task among mobile
    devices. In their work, they utilized a Constrained Application Protocol (CoAP)
    for implementing microservices. This work introduced the M2M approach in Fog computing
    while the classical Fog is actually hierarchy based. Content offloading in the
    mobile Fog was investigated by Khan et al. [138]. They defined mobile Fog as co-located
    self-organizing mobile nodes, which offer distributed resources at the edge. The
    aim of this work was to collaborate nodes for content caching, which will maximize
    the availability of the content and minimize operational cost. The proposed coalition
    game helps find the best co-located candidates near the users for sharing storage
    and self-organizing. Wang et al. [140] proposed a three-layer hierarchy framework
    using a Fog structure to bridge the communication between WSNs and the cloud.
    They designed a routing algorithm for bridging communication by considering the
    number of hops and energy consumption. They defined the Fog node as a sink, which
    will transfer data from sensor to the cloud. The proposed framework consists of
    routing layer, Fog layer, and sink layer. In the Fog layer, a sink acts as the
    Fog nodes as well to minimize transmission delay. However, there is a lack of
    security and privacy concern being addressed in mobile Fog computing. Roman et
    al. [141] addressed security and privacy for all edge-level computing. This included
    a usual thread in a network system mobile Fog that requires extra measures of
    authentication, trust, access control, protocol, and network security. SECTION
    IX. Open Issues and Future Research Directions A. Infrastructure-Related Issues
    The Fog is an evolving technology, expanding in such a way that it needs to reach
    market adoption to support all kinds of time-sensitive applications. The Fog has
    become an enactment of research efforts by various academies and industries. One
    of the key initiatives is the Open Fog Consortium (OpenFog), which was founded
    by the ARM, Cisco, Dell, Intel, Microsoft and Princeton University in November
    2015 [31]. Foxconn, General Electric, Hitachi, Sakura Internet, ShanghaiTech University,
    and ZTE are the contributing members of this nonprofit consortium. They are accelerating
    digital innovation with the blending of 5G wireless technology, IoT, and embedded
    AI by providing open interoperable architecture. However, many open challenges
    exist for this sprout-level computing paradigm. In this section, we discuss the
    research challenges and address the future directions for Fog computing research.
    Figure 10 shows some important research issues in Fog computing. FIGURE 10. Fog
    computing research issues. Show All 1) Deployment Issues From the deployment viewpoint,
    OpenFog is defined as an N-tier environment. However, the excessive increase in
    number of levels in the Fog layer might cause latency problems in the newly emerging
    Fog computing paradigm. Therefore, the number of tiers based on the use case must
    be determined. Deployment decisions will be undertaken based on requirements such
    as type and amount of task that will be done by each tier, total number of sensors,
    Fog device capability, in between the latency and reliability of Fog devices.
    Still, it is necessary to investigate how these requirements will be fulfilled.
    Application and resource scaling is also an important issue during deployment.
    Based on the requirement of the application and resource, scaling and shrinking
    without interrupting current services could be undertaken. In this regard, placement
    might also affect Fog deployment. 2) Standard Architecture for Fog Computing Up
    until now, there has been no defined standard architecture for Fog computing.
    The OpenFog consortium released two versions of the Fog architecture in February
    2016 [61] and February 2017 [142]. Their first draft was an initial overview of
    the Fog architecture. In their second draft, the Fog architecture was discussed
    in more detail. In their proposed architecture, they considered many key aspects
    of Fog architecture including performance, manageability, security, data analytics,
    and control. However, further research needs to be undertaken to explore and gain
    deeper insight into each layer with proper validation. 3) Interoperability and
    Federation of Fog Because of the Fog, users are able to process their request
    near them, which will minimize latency. However, what will happen if an increasing
    number of multiple latency-aware applications requests are sent in one shot to
    the Fog device and the Fog device is unable to handle that many requests? Will
    it be passed to the cloud for processing? If it is passed to the cloud, then latency
    requirements will not be satisfied. Thus, interoperability and federation among
    Fog clusters and Fog servers are necessary. Hence, if a Fog device is fully utilized,
    it will send requests to peer Fog devices or Fog servers for processing instead
    of sending them to the cloud. B. Platform-Related Issues 1) Resource Management
    Resources are most dynamic and heterogeneous in a Fog environment because of the
    diversity of devices and their available resources. All devices known as Fog devices
    are responsible for performing the computation of their own application. For example,
    a computer that relies on office staff to perform some ordinary email and documentation
    works might be a part of the Fog and might also act as a Fog device. In such a
    case, the amount of resources available for Fog computation is dynamic but predictable
    via the analysis of the long-term activity of its resources. This prediction is
    necessary because once the Fog task execution starts, and over a period of time,
    the status of the resources might change due to the request by the application
    for which the device is responsible for. If we compared this to the cloud, it
    is possible to know how much resources are currently available and whether or
    not they are exclusively used for cloud-based application requests. However, the
    Fog aims to use idle resources available on any Fog device with Fog computation
    always taking second priority. Hence, resource allocation and scheduling in the
    Fog is more challenging than traditional resource allocation and scheduling in
    the cloud. 2) Failure Management Fog device failure probability is always high
    because the devices are distributed and the management of Fog devices is not central.
    Hence, the devices could fail for many reasons; this could be due to hardware
    failure, software failure, or because of user activity. Besides these problems,
    some other reasons include connectivity, mobility, and power source, which also
    play a big role. Most of the devices in a Fog environment might be connected via
    wireless connections; it is obvious that wireless connections are not always reliable.
    The majority of devices that are connected via wireless are mobile, so these devices
    could change location to different clusters frequently. One other characteristic
    of these devices is that they are battery powered and might fail anytime. Hence,
    dealing with the complex nature of failure is very difficult. Also, it is necessary
    to ensure SLA by defining QoS parameters. So, the question is: What are the SLAs
    and how should they be defined? Also: What QoS parameters must be considered,
    so that the consumer and providers can retain a win-win situation? 3) Communication
    Between Different Layers The Fog should ensure uninterrupted connection with the
    devices to ensure application requirements of time-sensitive applications are
    met. If the application were to control an autonomous car or drone and if it were
    responsible for emergency surveillance, then failure in connectivity might cause
    serious harm. Even if connectivity to the cloud fails, the Fog still needs to
    ensure continuous connectivity. Thus, cross-layer connectivity among IoT devices,
    Fog, and cloud are of the utmost importance. The connection type and protocols
    used by IoT devices and Fog devices might be different. Therefore, how these issues
    will be handled is an important research issue. 4) User Participation Management
    Efficient Fog service management depends on the participation of users in Fog
    computation. However, how can user participation be managed? How do we deploy
    minimum resources in the case where no one wants to participate? We need to address
    these problems clearly with a feasible solution. One of the methods to increase
    user participation is through incentive and reward-based policies. With such policies,
    any user that participates in Fog computation will benefit. Even a user, who participates
    to complete his own request, will be rewarded by getting some discount based on
    his participation. However, this area needs to be addressed because the overall
    success of Fog computation depends on the participation of Fog devices, which
    are owned by various people and organizations. 5) Security and Privacy Fog devices
    are managed by different operators based on their location and ownership. Nobody
    would want to contribute to Fog computation if device control were compromised.
    Thus, how the security of a participant device will be maintained if the device
    were to take part in Fog computation is a big question. Another key security issue
    for this scenario is participant user data security. A participant device might
    have critical information. How will safety be guaranteed in such a case? On the
    other hand, critical data might be processed in a device, which is owned by a
    black hat hacker. How will safety and privacy be ensured then? Security issues
    also exist during cross-layer communication. Similar to the distributed nature
    of the Fog, security management should also be distributed, which will not be
    dependent on any central component. C. Application-Related Issues 1) Application
    Service Management Billions of IoT devices will be handled by the Fog paradigm,
    which will handle time-sensitive and time-insensitive applications. The degree
    of service, availability, and quality is most diverse in the Fog. Hence, service
    management is a typical issue for the entire Fog realm. Services should be microservice-based,
    so that agility and management issues can be handled properly. Further research
    is necessary to explore the possibility of Fog-based solutions. 2) Application
    Modeling Modeling Fog applications is complex because the application should collect
    data from different IoT devices, which use different protocols and sets of codes.
    Thus, it is challenging to model generic applications, which can be deployed with
    minimal effort. To solve this issue, a standard form of communication protocol
    is necessary, so that the modeled application can communicate and work with different
    types of IoT devices. SECTION X. Conclusion The Fog computing paradigm is currently
    in its infancy, so an extensive investigation is required for this emerging technology.
    In this survey, we presented and discussed the overview, architecture, state-of-the-art
    and other similar technologies in Fog computing. Based on the literature, we derived
    a taxonomy for Fog computing by analyzing the requirement of Fog infrastructure,
    platform, and applications. We also covered resource allocation and scheduling,
    fault tolerance, simulation tools, and microservices in Fog computing. Finally,
    we presented some challenging and open research issues. We strongly believe that
    this comprehensive survey will bring to light IoT application execution for a
    Fog computing environment as well as point towards the direction for current and
    future research in this rapidly growing research area. In this way, this computing
    paradigm, which is still immature, will be propelled towards achieving market
    adoption in the near future. ACKNOWLEDGEMENT The authors would like to sincerely
    thank Professor Rajkumar Buyya for his insightful comments and discussion on improving
    the overall quality of the paper. Authors Figures References Citations Keywords
    Metrics More Like This The Application of Fog Computing and Internet of Things
    Technology in Music Resource Management Model IEEE Access Published: 2020 Deep
    Reinforcement Learning-Based Dynamic Resource Management for Mobile Edge Computing
    in Industrial Internet of Things IEEE Transactions on Industrial Informatics Published:
    2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'Fog Computing: Survey of Trends, Architectures, Requirements, and Research
    Directions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.jclepro.2016.10.006
  analysis: '>'
  authors:
  - Biljana Risteska Stojkoska
  - Kire Trivodaliev
  citation_count: 965
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Review methodology 3.
    In-depth analysis of literature 4. Challenges and solutions 5. Conclusions References
    Show full outline Cited by (1013) Figures (5) Tables (6) Table 1 Table 2 Table
    3 Table 4 Table 5 Table 6 Journal of Cleaner Production Volume 140, Part 3, 1
    January 2017, Pages 1454-1464 Review A review of Internet of Things for smart
    home: Challenges and solutions Author links open overlay panel Biljana L. Risteska
    Stojkoska, Kire V. Trivodaliev Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.jclepro.2016.10.006
    Get rights and content Highlights • A review of state-of-the-art Internet of Things
    applications for smart grid and home. • Definition of smart home holistic framework
    with key features from literature review. • General description of a smart home
    management model based on the holistic framework. • Discussion of current and
    future challenges for Internet of Things based solutions. Abstract Although Internet
    of Things (IoT) brings significant advantages over traditional communication technologies
    for smart grid and smart home applications, these implementations are still very
    rare. Relying on a comprehensive literature review, this paper aims to contribute
    towards narrowing the gap between the existing state-of-the-art smart home applications
    and the prospect of their integration into an IoT enabled environment. We propose
    a holistic framework which incorporates different components from IoT architectures/frameworks
    proposed in the literature, in order to efficiently integrate smart home objects
    in a cloud-centric IoT based solution. We identify a smart home management model
    for the proposed framework and the main tasks that should be performed at each
    level. We additionally discuss practical design challenges with emphasis on data
    processing, as well as smart home communication protocols and their interoperability.
    We believe that the holistic framework ascertained in this paper can be used as
    a solid base for the future developers of Internet of Things based smart home
    solutions. Previous article in issue Next article in issue Keywords Internet of
    ThingsSmart homeHolistic frameworkSmart grid 1. Introduction With the expected
    growth in world population, the demand for energy will continuously increase.
    Current power grids were built decades ago, and despite the fact that they are
    regularly upgraded, their capability to fulfill future demands is uncertain. Existing
    reserves of fossil fuels are limited and impose harmful emissions, making social
    and environmental implications and impact inevitable. The result of this current
    state is the transition of the traditional centralized grid towards a distributed
    hybrid energy generation system that heavily relies on renewable energy sources,
    such as wind and solar systems (Lund et al., 2015), biomass, fuel cells, and tidal
    power. Smart grid is a concept that integrates information and communication technologies
    (ICT) with grid power systems, in order to achieve efficient and intelligent energy
    generation and consumption (Iyer and Agrawal, 2010). It is characterized by a
    two-way flow of both electricity and information. Approaches in smart grid include
    novel solutions that would effectively exploit the existing power grid in order
    to reduce or eliminate blackouts, voltage sags and overloads. Utilities could
    benefit, as the load demand in critical situations would decrease. If demand is
    greater than the total generation, these systems could prevent the grid failure
    or major blackouts, and increase the reliability, quality, security and safety
    of the power grid. Smart grid solutions can be applied in every part of the grid:
    production, transmission and distribution. Recently, a fourth part of the smart
    grid, i.e. the smart home has become a major (mainstream) research and application
    interest in smart grid. Smart home refers to the use of ICT in home control, ranging
    from controlling appliances to automation of home features (windows, lighting,
    etc.). A key element of the smart home is the usage of intelligent power scheduling
    algorithms, which will provide residents with the ability to make optimal, a priori
    choices about how to spent electricity in order to decrease energy consumption.
    Another term commonly used is smart house or home automation. The combination
    of information technologies and advanced communication and sensing systems, creates
    a variety of new potential applications. New advanced concepts, such as pervasive
    or ubiquitous computing (Greenfield, 2006), where computing is made to appear
    everywhere and anywhere, hold a huge potential for application in smart grid (Parikh
    et al., 2010). Smart devices or objects, capable of communication and computation,
    ranging from simple sensor nodes to home appliances and sophisticated smart phones
    are present everywhere around us. The heterogeneous network composing of such
    objects comes under the umbrella of a concept with a fast growing popularity,
    referred to as Internet of Things (IoT). IoT represents a worldwide network of
    uniquely addressable interconnected objects. According to Gubbi et al. (2013),
    IoT is an “interconnection of sensing and actuating devices providing the ability
    to share information across platforms through a unified framework, developing
    a common operating picture for enabling innovative applications. This is achieved
    by seamless ubiquitous sensing, data analytics and information representation
    with Cloud computing as the unifying framework.” Therefore, the Internet of Things
    aims to improve one''s comfort and efficiency, by enabling cooperation among smart
    objects. The standard IoT usually consists of many Wireless Sensor Networks (WSN)
    and Radio-frequency identification (RFID) devices. Wireless Sensor Network is
    a paradigm that was tremendously explored by the research community in the last
    two decades (Oppermann et al., 2014). A WSN consists of smart sensing devices
    that can communicate through direct radio communication. RFID devices are not
    as sophisticated. They mainly consist of two parts: an integrated circuit with
    some computational capabilities and an antenna for communication. The concept
    of IoT, combined with smart metering, has the potential to transform residential
    houses, homes and offices into energy-aware environments. There is an increasing
    interest in the research community to incorporate the IoT paradigm in the smart
    grid concept, particularly in smart home solutions. The trends of web search popularity
    for the terms: Internet of Things, Smart Grid and Smart Home since 2004 are shown
    in Fig. 1. According to these statistics by Google, the trends will further increase
    for the terms Internet of Things and Smart Home. Download : Download high-res
    image (179KB) Download : Download full-size image Fig. 1. Interest over time according
    to Google trends since 2004 for terms Internet of Things, Smart Grid and Smart
    Home. In this paper, we present a holistic approach to the integration of state-of-the-art
    IoT (or near IoT) solutions into the smart home, taking into account both home
    energy management considerations and architectural challenges and solutions with
    emphasis on data processing issues, networking and interoperability features of
    smart home protocols. For this purpose, we surveyed the IoT frameworks present
    in the literature, analyzed these state-of-the-art solutions and defined challenges
    for future research. Section two presents the methodology used in this paper in
    order to select the most appropriate recent developments as published in the literature
    covering the topics of Internet of Things, smart grid, and smart home. The in-depth
    analysis of the results, as identified by our methodology, is given in Section
    3. Our analysis is conducted in a threefold manner. Initially, possible and existing
    IoT and near IoT applications are analyzed in view of different parts of the smart
    grid where such solutions are and/or can be applied, with focus on the smart home.
    Afterwards, a generalization is given of the existing solutions in a new generic
    holistic framework that incorporates key features from the literature review as
    identified by our methodology. The analysis is concluded by overviewing a general
    smart home management model for the IoT based holistic framework by defining its
    integral levels and their main tasks as observed in the analyzed state-of-the-art
    solutions. The fourth section discusses challenges associated with IoT constrained
    resources (energy, memory capacity and processing capabilities), along with networking,
    interoperability issues, big data analyses, security and privacy. An overview
    of useful guidelines and solutions needed to face these challenges is given. Finally,
    this paper is concluded in the fifth section. 2. Review methodology This section
    presents the methodology used in the paper in order to select the most appropriate
    recent developments as published in the literature covering the topics of Internet
    of Things, smart grid, and smart home. The literature was searched using the online
    service Google Scholar (GS) (https://scholar.google.com/). The main advantages
    of using GS as opposed to other similar resources like Scopus and Web of Science
    are freedom, ease of use, and a broader universe of cited and citing items (Franceschet,
    2010). Google Scholar has a high coverage for high quality studies, is highly
    sensitive and could be the first, and even more so a standalone choice for systematic
    reviews or meta-analysis (Gehanno et al., 2013). Only publications, excluding
    patents and citations were searched. All results provided by GS were sorted according
    to their relevance. Google Scholar''s ranking algorithm relies heavily on an article''s
    citation count, but also puts a high weighting on words in the title (Beel and
    Gipp, 2009). Currently GS does not search for synonyms of queried keywords; hence,
    all synonyms have to be rewritten and queried separately. Only publications between
    years 2010 and 2016 were considered. Papers prior to 2010 were not considered
    since most of the advances in this area have happened within the last few years
    (GS retrieves 130 publications with keyword “Internet of Things” in the title
    published before 2010, and 7650 publication published after 2010), which is in
    line with the Google trends as shown in Fig. 1. The following terms were allowed:
    “Wireless Sensor Network”, “Internet of Things”, “IoT”, “Smart Grid”, “Smart Home”
    and “Home Automation” to appear anywhere in the text of the publications. We consider
    the terms “Home Automation” and “Smart Home” to be synonyms, as well as the terms
    “IoT”, “Internet of Things” and “Wireless Sensor Networks” (since Wireless Sensor
    Networks together with RFID are the two main technologies which enable the development
    of IoT). Most of the research challenges in IoT have its origin in WSN; hence,
    some of the IoT solutions are simply borrowed from WSN (Mainetti et al., 2011).
    The general query form we use is “term1” AND “term2” AND “term3”, where term1
    = (“Wireless Sensor Networks” OR “Internet of Things” OR “IoT”), term2 = (“Smart
    Home” OR “Home Automation”), and term3 = “Smart Grid”, and thus perform six searches.
    The queries and the total number of publications retrieved by GS are given in
    Table 1. Table 1. Number of publications found by GS engine for different queries.
    Query# Term1 Term2 Term3 Total number of results Query 1 “Wireless Sensor Network”
    “Smart Home” “Smart Grid” 919 Query 2 “Wireless Sensor Network” “Home Automation”
    “Smart Grid” 775 Query 3 “Internet of Things” “Smart Home” “Smart Grid” 1430 Query
    4 “Internet of Things” “Home Automation” “Smart Grid” 1000 Query 5 “IoT” “Smart
    Home” “Smart Grid” 1050 Query 6 “IoT” “Home Automation” “Smart Grid” 747 Only
    the first 100 results per query were considered for further analysis in this paper.
    There are overlaps between the result sets of the different queries so the final
    set of unique publications is around 150. For example, if we consider only the
    top 20 results there are a total of 74 unique publications, with multiple publications
    appearing in the results of more than one query. Fig. 2 shows the number of these
    overlaps, and additionally the average GS ranking for each group are given (e.g.
    papers that appear in the results of a single query have an average ranking of
    12.54). Download : Download high-res image (203KB) Download : Download full-size
    image Fig. 2. Total number of publications appearing in the top 20 results for
    the six queries. The number associated with each bar refers to the average ranking
    of the publications in the group. The unique set of publications was further filtered
    content-wise i.e. whether the publication has pertinent material regarding wireless
    sensor networks or Internet of Things solution/s for smart home and/or smart grid.
    First a number of papers were excluded based on the content of their abstract.
    Next, we considered the whole text of the remaining papers and retained only those
    in line with our review. The final remaining papers were analyzed in-depth. The
    finding is that the papers can be semantically divided in two main categories:
    WSN solutions and IoT concepts. The first category includes papers that provide
    real-life working implementations of WSN in different domains like habitat monitoring,
    home monitoring, etc. They can be considered the seeds of future IoT applications.
    The papers in the second category revolve around the IoT paradigm and provide
    concepts, frameworks, visions, and challenges of future “to be implemented” IoT
    solutions. Hence, this work separately elaborates the papers in the two categories
    in the forthcoming Section (3). We firstly expatiate on papers in context of WSN
    implementations (3.1), then we survey papers in line with IoT solutions (3.2 and
    3.3). 3. In-depth analysis of literature This section presents the in-depth analysis
    of the results as identified by our methodology. The analysis is conducted in
    a threefold manner. Initially, possible and existing IoT and near IoT applications
    are analyzed in view of different parts of the smart grid where such solutions
    are and/or can be applied, with focus on the smart home. Afterwards, a generalization
    is given of the existing solutions in a new generic holistic framework that incorporates
    key features from the literature review as identified by our methodology. The
    analysis is concluded by overviewing a general smart home management model for
    the IoT based holistic framework by defining its integral levels and their main
    tasks as observed in the analyzed state-of-the-art solutions. 3.1. State-of-the-art
    (near) Internet of Things solutions in smart grid and smart home The integration
    of IoT within the smart grid will bring a new perspective to electricity management,
    with benefit for all parties involved. Table 2 differentiates the potential IoT
    applications regarding different aspects (parts) of the smart grid (Cardenas et
    al., 2014, Gungor et al., 2010, Parikh et al., 2010). Much of the pioneering research
    is hindered with a lot of challenges, especially when dealing with the first three
    aspects (generation, transmission and distribution) of the smart grid. The problems
    are mostly due to the harsh conditions in which sensor devices are deployed. Experimental
    results using IEEE 802.15.4-compliant sensor networks show that wireless links
    (including both line-of-sight (LOS) and non-LOS (NLOS) scenarios) in the smart
    grid have high packet error rates and variable link capacity due to electromagnetic
    interference, equipment noise, obstruction, etc. (Gungor and Korkmaz, 2012). Wireless
    nodes impose additional constraints, i.e. the memory and processing limitations
    of the sensor nodes and their limited power resources. Table 2. Potential IoT
    applications for smart grid. Energy providers Energy generation Transmission Distribution
    Consumers Real-time generation monitoring Transmission lines controlling Underground
    cable system monitoring Wireless automatic meter reading (smart metering) Power
    plants controlling Power monitoring Transformers stations controlling Home (Residential)
    energy management Alternative energy sources controlling Solar panels management
    Residential (distributed) production monitoring Predicting future solar panels
    and wind turbine production (using sensor data like temperature or humidity) Fortunately,
    most of these challenges are not present in the fourth, consumer side of the smart
    grid, i.e. the smart home. For example, sensors are usually connected to home
    appliances and the battery life problem becomes superfluous as the devices have
    a steady power supply. Furthermore, strong electromagnetic fields are not associated
    with home grid infrastructure. Still, IoT for smart home is subject to challenges
    like reliability, privacy, and security (Iyer, 2011). Modern homes equipped with
    smart meters, smart appliances, smart power outlets and sensing devices enable
    the development of energy-aware smart homes (Fig. 3). Although the smart home
    has been a dream for both utilities and consumers for a long time, such implementations
    are still very rare (Monacchi et al., 2013). On the other side, there are plenty
    of existing commercial solutions and advanced Demand Side Management (DSM) systems
    focused on large industrial consumers (Finn and Fitzpatrick, 2014, Palensky and
    Dietrich, 2011). Almost all of them fail to integrate small residential consumers.
    Download : Download high-res image (439KB) Download : Download full-size image
    Fig. 3. Smart home. IoT carries the potential to overcome this gap and to provide
    services that will foster the development of intelligent solutions for the common
    people. The main goal of IoT is to advance a better and safe society, where “Everything
    is a service” (public safety, environment, health care, production, etc.). In
    this subsection we present relevant attempts from the literature as identified
    by our methodology. The papers discussed here semantically fall in a category
    regarding near IoT solutions for smart home, mainly from the neighboring fields
    of wireless sensor networks, home automation, and smart grid. Novel architectures
    in terms of state-of-the-art software technologies with focus on domestic environments
    and habitat monitoring are proposed in Monacchi et al. (2013) and Stojkoska and
    Davcev (2009). In Monacchi et al. (2013) the authors promote design guidelines
    for collecting and integrating household data, thus enabling data interoperability.
    In Stojkoska and Davcev (2009), a web interface is developed in order to increase
    the interaction between the deployed WSN and its end users. Authors of Kamilaris
    et al. (2011) propose a solution for a Web-based energy-aware smart home framework
    that enables smart appliances to the Web. They have developed a graphical user
    interface to ease the interaction. The evaluation of their solution is done using
    a WSN organized in a star topology and also a multihop topology (up to three hops)
    for larger apartments (smart homes of around 100 m2). VillaSmart (Caracaş et al.,
    2013) is associated with the ECOGRID EU (EcoGrid EU, 2015) project. The authors
    have installed a modular and extensible WSN in a test and reference household
    called VILLASMART. These authors are modeling the energy behavior of the building.
    These thermal models are improved using indoor and outdoor WSN readings (air and
    water temperature, solar radiation sensor, weather conditions and power consumption
    information), thus achieving more precise predictions of indoor temperature. Using
    the standard resistance-capacitance (RC) model, the maximum prediction error achieved
    is 1.790C. The IEEE 802.15.4 standard in the 2.4 GHz is used for indoor communication.
    The model parameter determination is done with the grey-box estimation method.
    In Srbinovska et al. (2015) a WSN is installed for vegetable greenhouse monitoring
    and a control system for agriculture is developed. This system helps farmers increase
    the crop production and quality by remotely controlling different parts of the
    greenhouse, like drip irrigation and fan facilities. In Risteska Stojkoska et
    al. (2014), the authors present a framework for temperature regulation inside
    commercial and administrative buildings, with focus on design and implementation
    of specific network topologies and node localization within the system. 3.2. Holistic
    IoT-based framework for smart home It is expected that smart objects will be dominant
    on the market in the next few years and will become omnipresent in households,
    which will impose the need for new and improved services for smart homes (Karnouskos,
    2011). For these reasons, the need for IoT based solutions will be incontestable.
    Most recent publications focus on developing a general IoT framework that is suitable
    for broader range of application domains. In Lee and Lee (2015), the authors identity
    five IoT technologies as essential for building successful IoT solutions: radio
    frequency identification, wireless sensor networks, middleware, cloud computing
    and software for application development. They also identify three IoT categories
    for enterprise applications: monitoring and control, big data and business analytics,
    and information sharing and collaboration. In(Da Xu et al., 2014), the list of
    enabling technologies is enhanced with Near Field Communication, location based
    services and social networks. They suggest a four-layer architecture made up of:
    sensing, networking, service and interface. The role of the cloud is missing;
    therefore, it is not clear how services would be enabled. Liu et al. (2014) presents
    a middleware that supports naming, addressing, storage and look-up services. The
    idea is to develop a middleware at the top of the existing systems, thus to achieve
    easier integration of existing applications into IoT environments. Once again,
    the cloud is omitted as an enabling technology that should support all these services.
    The monitoring of production processes in industry using IoT is investigated in
    Shrouf and Miragliotta (2015). The authors propose a detailed framework that is
    focused on energy management, with possibilities for in-house or cloud-based data
    mining and decision making. The role of the third-party solution designers is
    not specified in the framework. Readers can also refer to (Gubbi et al., 2013,
    He et al., 2014, Xu et al., 2014) for interesting work regarding IoT architectures.
    With respect to these publications, the framework presented in this paper can
    be considered a modified version of the most general model we found in literature
    (Da Xu et al., 2014), augmented with the cloud in the middle, and adapted to a
    particular application domain, i.e. smart home. This multi-level hierarchical
    holistic framework based on Internet of Things is used as a wrapper or generalization
    of all the key features of IoT solutions for smart homes identified in the literature.
    The graphical representation of the framework is given in Fig. 4. Within the framework
    data is sent wirelessly and is shown using dashed lines. The yellow lines correspond
    to a bidirectional electricity flow. The following paragraphs summarize each level
    of the framework. Download : Download high-res image (641KB) Download : Download
    full-size image Fig. 4. Multi level IoT framework for smart home. 3.2.1. Smart
    home All household devices equipped with interfaces for wireless communication,
    make up the home WSN. Each home has a WSN, and the sensed data from each device
    is forwarded to a central station, which we refer to as home sink or home hub.
    Each node in the home WSN is considered a smart device and has moderate computation
    and communication capabilities. The home hub can be any one device (smart meter,
    PC, tablet or smartphone) that has some data storage capacity, can perform local
    processing and can communicate with devices outside the home WSN. In the case
    of smart residential complexes or smart buildings, the counterpart of the home
    hub is identified as residential sink or residential hub. The residential hub
    needs to have an additional feature, as compared to the home hub, which is that
    it is responsible for managing data from/to shared distributed production sources.
    This is rather important, as renewable sources are usually shared among consumers,
    one example being a residential building with a PV system on the roof, where the
    PV system is used by all households in the building. Within the framework, each
    distributed renewable energy source is considered a smart device. 3.2.2. Cloud
    All data from different sources is accumulated in the cloud (households'' data,
    sensor measurements from the transmission/distribution lines or from the production
    sites, etc.). The cloud should provide massive data storage and processing infrastructure.
    It is the most advanced level of the framework (Da Xu et al., 2014, Lee and Lee,
    2015). As stated in Gubbi et al. (2013), the cloud “promises high reliability,
    scalability and autonomy” for the next generation of IoT applications. The cloud
    is the central part of this system, hence our framework can be considered as “cloud
    centric” or “cloud based”. 3.2.3. Utility This level corresponds to the remaining
    parts of the smart grid, apart from the smart home: production, transmission and
    distribution. Each part independently sends data directly to the cloud. The typical
    information that can be exchanged with the utility is: price of electricity, weather
    forecast, distribution/transmission line status, current and future consumption
    of a microgrid, current and future production of the distributed production sources
    associated with a microgrid, etc (Sajjad et al., 2014). 3.2.4. Third party Third
    party applications are developed using the cloud data (Gubbi et al., 2013). Other
    terms that are interchangeably used are business applications, industry oriented
    applications or user-specific IoT application. Namely, third party application
    developers get data from the cloud (private or public) and use this data to deliver
    solutions in the form of web based or mobile applications (Fan et al., 2010).
    3.2.5. User interfaces This level represents user interfaces that deliver data
    to the end users (notifications, recommendations, smart device controls, etc)
    (Da Xu et al., 2014). Raw tabular data referring to monthly (or even daily) household
    consumption is hard to be interpreted by the users. A more sophisticated visualization
    tool is needed to present not only the overall household consumption, but also
    the consumption at device/appliance level (Liu et al., 2014). This is particularly
    useful, since consumers will be able to learn more about different appliances
    in their home, especially ones that cannot be controlled automatically, like non-flexible
    devices, hence enabling the users to control them intuitively taking into account
    their consuming nature. Third party applications should put an effort toward developing
    intuitive visual user interfaces for the consumers and frequently evaluate those
    using Quality of Experience (QoE) metrics. 3.3. Smart home management systems
    An energy management system is defined as an interface between a utility company
    and smart devices that consume power. It aims to provide benefits for both parties
    (utilities and consumers), somewhat biased towards the consumers. Another term
    commonly used is Demand Side Management (DSM). It represents a set of technologies
    that enable monitoring and controlling the consumption/production at consumer
    level in order to perform power balancing in future energy systems (Atzeni et
    al., 2013, Rezvani et al., 2015, Siano, 2014). In the context of IoT solutions
    for smart home, the traditional DSM model is shifted toward the cloud centric
    model. The cloud based approach offers centralized optimization that considers
    a huge set of parameters; hence it is expected to outperform the energy management
    as compared to a traditional approach. Fig. 5 shows the general Smart home management
    model adopted for our holistic framework. The main tasks that should be performed
    at each level are presented as follows. Download : Download high-res image (391KB)
    Download : Download full-size image Fig. 5. General smart home management model.
    3.3.1. Smart objects/smart devices Home appliances, lights, or sensors attached
    to production or transmission lines in a smart grid system can be considered smart
    objects. They can sense, actuate, process data and communicate. In order to sense
    and actuate, they need to perform A/D and D/A conversions (Byun et al., 2012).
    These devices periodically perform sensing and send (wirelessly of wired) sensed
    data to the hub. Moreover, if protocols allow it, sensed data can be sent directly
    to the cloud. If possible, smart devices should perform basic data processing
    before they send the sensed data (Stojkoska et al., 2012, Viani et al., 2013).
    Actuating can be also controlled remotely. In the context of DSM, home appliances
    can be divided in three categories: non flexible, flexible and dual nature appliances
    (Erol-Kantarci and Mouftah, 2010). The non-flexible appliances are those that
    are associated with baseline loads or non-preemptive tasks (like light, TV, PC,
    hair drier) and cannot be controlled by the system (Ullah et al., 2013). The flexible
    appliances are associated with regular loads or preemptive tasks (like heating
    or air-conditioning) and can be automatically operated by the system. The dual
    nature appliances sometimes can act as flexible, but sometimes as non-flexible
    (like washing machine, dish washer or laundry). For example, sometimes the consumer
    does not care about the exact time the dish washer will operate, as long as it
    is within a predefined time frame. These appliances usually present burst loads
    (Khan et al., 2014, Ullah et al., 2013). The smart appliances (both flexible and
    dual nature) are equipped with smart power outlets that are able to measure their
    power consumption and to control their operation in real-time. 3.3.2. Hubs The
    hub is a device that is responsible for collecting raw and/or processed data from
    the smart devices and forwarding them to the cloud (Zhu et al., 2010). Whenever
    possible, the hub has to perform local data processing (Viani et al., 2013), in
    order to reduce the data flow towards the cloud. Furthermore, in a smart home
    scenario, the hub can send commands to the smart devices acting as a local scheduler,
    regulator, or load balancer (Byun et al., 2012). In the case of a residential
    hub, it can send commands to the devices that regulate the electricity flow to/from
    the nanogrid, i.e. to manage the operations of buying/selling electricity from/to
    the grid. The hub understands the communication protocols used by the smart devices.
    Hubs are needed to enable the interoperability between the smart objects, since
    the devices generally cannot communicate with each other (Gubbi et al., 2013,
    Heile, 2010). Hence, sometimes a household needs more than one hub. In the future,
    when full interoperability among smart devices is achieved, it is expected that
    hubs will be superfluous in the model. 3.3.3. Cloud The cloud is the most complex
    part of the home management. The main task of the cloud is to store the data (Zhou
    et al., 2013). Because of the high data volume, traditional approaches should
    be modified to meet the new requirements. New methods and algorithms based on
    machine learning techniques, time series processing and advanced analytics are
    to be employed (Da Xu et al., 2014, Gubbi et al., 2013). Third-party applications
    typically assume that the data being used is unchanging i.e. the data is usable
    by applications on a non-real-time basis. In the cloud the event-based data is
    converted to query-based processing. This is a crucial step towards bridging the
    differences of real-time IoT networking and the third-party application world.
    The data should be stored persistently and abstracted at multiple levels so that
    they could be easily combined, recomputed and/or aggregated with previously stored
    data, with the possibility of some data coming from non-IoT sources (Da Xu et
    al., 2014). Even more importantly the different levels of abstraction will simplify
    the application access and usage since data will be presented in a manner required
    by applications. 3.3.4. Third party Third party should develop applications for
    the end users in the form of schedulers, regulators, and load balancers (Fan et
    al., 2010). A scheduler is a tool responsible for defining time slots in which
    the dual nature appliances will be active. A regulator is a tool responsible for
    the management of flexible devices, i.e. it will regulate the operation of air
    conditioners, heaters, dehumidifiers, etc. Load balancing should optimize energy
    consumption, considering current electricity price on the market and availability
    of electricity produced by the local renewable sources, if available. All these
    tools need advanced algorithms that use much more parameters than those obtained
    by the home devices. They should perform the complex tasks of mining and knowledge
    extraction from the available data in the cloud in order to create consumer and
    household profiles, or in simpler words the available smart home data should lead
    to the creation of personalized recommendations for all users (Liu et al., 2014).
    4. Challenges and solutions In this section, some guidelines for future developers
    of IoT solutions on how to make good choices when dealing with different challenges
    associated with practical issues are presented. 4.1. Edge (fog) computing Edge
    computing or fog computing is the process of data processing at the edge of the
    network. In this paradigm it is expected that the knowledge extraction process
    starts as early as the time the data is sensed i.e. at the sensor side. There
    are many reasons to employ this approach, but some of the more prominent ones
    are the energy saving, data volume reduction and latency reduction. Each object/entity
    in the IoT can consume a huge amount of energy if its communication is not optimized.
    For smart objects, in terms of energy consumption, local computation is an operation
    cheaper than communication. Hence, the effort should be shifted toward developing
    lightweight algorithms for local data processing. This approach will decrease
    the data volume and will avoid sending huge portions of raw data. Instead, only
    metadata will be transmitted (data about the data). Reducing the number of transmissions
    among IoT devices is also very important in order to avoid latency issues and
    saturation of the wireless channels. For these reasons, different data reduction
    techniques should be employed to minimize the communication overhead. There are
    three main techniques used for data reduction: data compression, data prediction
    and in-network processing (Stojkoska et al., 2012). For example, if data is not
    needed in real time, data compression (like delta compression) can be used. Otherwise,
    different filters can be used for real-time sensor data prediction, most of them
    based on adaptive filtering techniques, like moving average (MA), autoregressive
    (AR) model, autoregressive moving average (ARMA), least mean square (LMS), and
    LMS with variable step size (LMS-VSS) (Risteska Stojkoska et al., 2014, Stojkoska
    et al., 2012). Prediction is performed at each device and at the hub, i.e. predictions
    are made simultaneously on both sides. If the sensed value differs significantly
    from the predicted value (the difference is above a predefined threshold emax),
    the smart device should send the measurement/data to the hub. Otherwise, the predicted
    value is considered to be “reliable” and is used to feed the filter for future
    predictions. This paradigm is known as “dual prediction scheme” (Santini and Romer,
    2006). In-network processing is the process of consecutive data processing on
    their way to the destination. As data travel through intermediate nodes, some
    aggregating operations are performed. 4.2. Big data The IoT-generated data come
    in big amounts, are variable in terms of structure, often arrive at real-time,
    and might be of uncertain provenance. This volume, velocity and variety (not to
    mention variable veracity) make the storing and analytics solution, which will
    generate useful insights, a very complex one (Zaslavsky et al., 2013). Traditional
    SQL-queried relational database management systems (RDBMSs) are unsuitable for
    the task, which is why big data solutions are needed. The IoT Cloud (Alamri et
    al., 2013, Botta et al., 2016) will enable the long-time storage and complex analysis
    of this data. The challenge of handling big data is a critical one, since the
    overall performance is directly proportional to the properties of the data management
    service (Dobre and Xhafa, 2014). A constellation of tools has evolved to service
    the market, most notably Apache''s open-source Hadoop distributed data processing
    system, plus various NoSQL databases and a range of business intelligence platforms.
    There are multiple vendors that operate in different parts of the analytics pipeline
    (data integration, data storage, core analytics and data presentation), as well
    as ''full-stack'' vendors like IBM, Microsoft, Oracle, SAP and Software AG. Both
    proprietary and open source solutions adopt alternative database technologies
    for big data (Copie et al., 2013): time-series, key-value, document store, wide
    column stores, and graph databases. However, to date there is no simple answer
    to the big data management question in the Cloud (Zaslavsky et al., 2013). The
    problem becomes even more cumbersome when the factor of data integrity is taken
    into account, not only because of its impact on the quality of service, but also
    for its security and privacy related aspects especially on outsourced data (Liu
    et al., 2015). 4.3. Networking Networking protocols for Internet of Things solutions
    can be divided in smart device networks and traditional networks that are designed
    primarily for high data rates. Smart home networking protocols are expected to
    adopt the protocols already established in Wireless Sensor Networks and Machine-to-Machine
    (M2M) communications, with no clear winner so far (Chen et al., 2012). Adding
    many advanced features to the protocol increases the cost, and reduces the ease-of-use.
    Designing an appealing protocol is not a trivial task, and is usually a tradeoff
    between the cost and the performances. In perspective of the topology to be used,
    mesh is the most suitable choice of network topology for wireless communication
    due to the presence of obstacles in the home, like walls, furniture, etc. Dual-mesh,
    which means that the network operates as both wired and wireless, is an appropriate
    solution for households that have a previously installed wired home automation
    system. There are many protocols designed for smart home solutions. Some of them
    dated back from the period when smart home was reserved for the wealthy households,
    and many new that try to combine the old design principles with the newly developed
    technologies. X10 is the oldest protocol that was initially wired, but new modifications
    make it dual-mesh. Insteon is another example of a dual-mesh protocol, which was
    recently integrated into Google owned Nest, Apple''s HomeKit platform and Apple
    Watch (Darbee, 2013). The more recent protocols work only wirelessly (ZigBee,
    Z-Wave, 6lowpan, EnOcean, etc.). There are different ways to classify protocols,
    and none of them is exhaustive enough. Using Google Scholar, we queried for publications
    that cover each of these protocols and the summary statistics for the number of
    publications is given in Table 3. This data is of November 2015. Table 3. Number
    of publications according to Google Scholar. Empty Cell Zigbee 6lowpan Z-Wave
    Bacnet X10 EnOcean Insteon Without patents 228000 9790 5770 6700 1840 1520 720
    With patents 264000 9010 7650 7550 1890 2440 1080 Table 3 shows that ZigBee is
    the most popular protocol, but this is true only for the scientific research and
    academia (ZigBee, 2015). In practice, the Z-Wave is the one that has the most
    manufacturers, mainly due to their interoperability. According to Z-Wave Alliance,
    over 35 million Z-Wave products have been sold since they began selling in 2005
    (Z-Wave Alliance, 2015). The basic features of ZigBee, Z-Wave and Insteon are
    shown in Table 4. Theoretically, a Z-Wave network is limited to a maximum of 232
    Z-Wave devices, but most vendors recommend using about 30–50 (Darbee, 2013). For
    example, MiOS LTD with their Vera products recommends 50 devices for Vera Lite,
    and 100 devices for Vera 3 (MiOS, 2015). Table 4. Basic features of ZigBee, Z-Wave
    and Insteon. Empty Cell ZigBee Z-Wave Insteon Media wireless (radio) wireless
    (radio) wireless (radio) and wired (powerline) Frequency 2.4 GHz (worldwide),
    915 MHz (Americas and Australia) and 868 MHz (Europe) <1 GHz, (868.42 MHz Europe;
    908.42 MHz United States; 916 MHz Israel; 919.82 MHz Hong Kong; 921.42 MHz Australian/New
    Zealand) single frequency of 915 MHz Network topology mesh Mesh dual-mesh Vendors
    Texas Instruments, Atmel, Silcon Labs, Freescale, etc. Sigma Designs Smartlabs,
    Logitech Maximum number of nodes 65000 (theoretically), 500 (in practice) 232
    (theoretically), 50–100 (in practice) 16777216 Range 10 to 100 m line-of-sight
    30 m open-air, < 30 m indoor 40 m Modulation Binary phase-shift keying (BPSK)
    for 868 and 915 MHz bands, or offset quadrature phase-shift keying (OQPSK) for
    2.4 GHz Gaussian, frequency-shift keying (GFSK) manchester channel encoding Frequency-shift
    keying (FSK) The price is another aspect that can be considered when choosing
    the right protocol. A ZigBee Licence costs $3500 per year, while Z-Wave charges
    $750 per device model for the logo (Darbee, 2013). A more detailed comparison
    of the smart home protocols can be found in Withanage et al. (2014). Each level
    of the IoT framework should have particular features. We identify and summarize
    the required capabilities of IoT devices at each level in Table 5. Table 5. Capabilities
    of IoT parts for smart home management system. Empty Cell Network topology Communication
    protocols Computational capabilities Memory requirements Smart Device mesh/star
    ZigBee/Z-Wave//Bluetooth/Insteon/X10, etc. low low Hub mesh/star ZigBee/Z-Wave//Bluetooth/Insteon/X10,
    etc; LTE/optical fiber/Wi-Fi intermediate low to intermediate Cloud not applicable
    LTE/optical fiber/Wi-Fi very high very high Third party not applicable LTE/optical
    fiber/Wi-Fi high application dependent, from intermediate to high 4.4. Interoperability
    Currently, the main issue for the development of a generic smart home solution
    is the cost associated with integrating smart home devices (Ko et al., 2011).
    Interoperability is the key to open markets to competitive solutions in IoT (Lu
    et al., 2011, Misra et al., 2015). Leading companies in the world that are producing
    smart devices are working toward achieving full interoperability that will ensure
    easy integration with the existing Internet. Z-Wave products are already interoperable
    with their previous versions, while ZigBee Allience with its Zigbee 3.0 has announced
    this feature to be implemented by the end of 2015. ZigBee has formed many committees
    that aim to define product properties required for different vendors to build
    interoperable devices for different public application profiles, like Home Automation,
    Health Care, Remote Control, etc. Still, products are not necessarily interoperable
    across these profiles and across revisions within a profile. On the other side,
    X10 and Insteon are fully interoperable with each other (Darbee, 2013). Table
    6 summarizes the interoperability features of these protocols. Table 6. Interoperability
    features of Insteon, X10, Z-Wave and ZigBee. Empty Cell Insteon X10 Z-Wave ZigBee
    ZigBee invisible to each other No No No Z-Wave invisible to each other No Yes
    X10 Yes Yes Insteon Yes 4.5. Security and privacy One of the most important issues
    of the emergent requirements facing the smart grid development is related to cyber
    security, both for the wireless and the wired parts of the systems (Ning et al.,
    2013, Schneps-Schneppe et al., 2012). The smart grid can be a target for cyber
    terrorists, which emerges as a critical concern for system designers. Because
    of the way in which data is transmitted, IoT is inherently vulnerable to most
    of the common attacks of wireless networks. Hence, IoT requires a security policy,
    but the cost for providing it needs to be as low as possible. Different approaches
    that provide security lightweight crypto-primitives should be investigated (Altolini
    et al., 2013), in order to provide authenticity (the device is not a malicious
    object), integrity (transmitted data is identical with the received data) and
    confidentiality (make data unreadable to others) (Dimitrievski et al., 2006).
    5. Conclusions This paper addresses the vision that the residential buildings
    would shift themselves toward modern households that would be an evolution of
    the passive household. They would have their own solar panels and small wind turbines
    to produce their own energy, thus they would be able to buy/sell energy from/to
    the smart power grid. As it is expected for smart objects to become omnipresent
    on the market and respectively in consumers'' households within the next few years,
    the need for IoT-based services for smart home will be inevitable. In this paper,
    a methodology is developed using different search queries to select the most relevant
    papers from the literature that address this topic. Selected papers were semantically
    divided into two main categories: WSN solutions and IoT concepts. This was rather
    expected considering that WSN is the pivotal technology which enabled the development
    of IoT. Although the WSN solutions are real life implementations that integrate
    devices inside a smart home, two disadvantages are identified, as they: • work
    separately and the data is used only for local optimization; • make an assumption
    of a fully (or near fully) automated home, which is a costly solution for most
    of the households. The second category of papers concerning IoT mainly presents
    concepts, theoretical frameworks and visions for possible smart home/grid solutions.
    There is a lack of a unifying platform that would transform these separate individual
    applications into a single infrastructure, a platform that can be further used
    for advanced data mining and knowledge extraction. The desired solution should
    aggregate all available smart home data within a self-learning engine in order
    to create personalized recommendations for all users, regardless of the level
    of automation present at their homes. The solution should not entail any additional
    cost for the consumers, as it should not require any particular hardware. The
    main contribution of this paper is the IoT based holistic framework, which incorporates
    different components from IoT architectures/frameworks proposed in the literature.
    This integral IoT framework is specific to the smart home application domain,
    with the cloud being the central element in the system that serves not only to
    collect and store data, but also as a gateway to third-parties interested in developing
    applications. In this context, we additionally survey the smart home management
    system, and we identify a model with a set of specific tasks that should be performed
    at each level in order to meet the system requirements. As a second contribution,
    this paper discusses challenges for IoT based smart home solutions, with emphasis
    on practical issues like data processing, networking and interoperability of smart
    home protocols. Fog and edge computing are promising approaches for improving
    the energy saving inside the IoT network by reducing the number of transmissions
    between the IoT devices. Although there are some publications that investigate
    this potential, a lot of research and work still needs to be done. New big data
    solutions and algorithms are needed to deal with the potentially vast amount of
    data generated within the IoT. A constellation of tools has already appeared in
    the last few years, as there are multiple vendors that operate in different parts
    of the analytics pipeline. Another big issue is the interoperability, which is
    a prerequirement for opening the markets to competitive solutions in IoT. The
    current situation is that devices with different protocols cannot communicate,
    and, more important, the products with the same protocols are not necessarily
    interoperable across different profiles and across revisions within the same profile.
    References Alamri et al., 2013 A. Alamri, W.S. Ansari, M.M. Hassan, M.S. Hossain,
    A. Alelaiwi, M.A. Hossain A survey on sensor-cloud: architecture, applications,
    and approaches Int. J. Distrib. Sens. Netw., 2013 (2013) Google Scholar Altolini
    et al., 2013 D. Altolini, V. Lakkundi, N. Bui, C. Tapparello, M. Rossi Low power
    link layer security for iot: implementation and performance analysis 2013 9th
    International Wireless Communications and Mobile Computing Conference (IWCMC),
    IEEE (2013), pp. 919-925 CrossRefView in ScopusGoogle Scholar Atzeni et al., 2013
    I. Atzeni, L.G. Ordóñez, G. Scutari, D.P. Palomar, J.R. Fonollosa Demand-side
    management via distributed energy generation and storage optimization IEEE Trans.
    Smart Grid, 4 (2013), pp. 866-876 View in ScopusGoogle Scholar Beel and Gipp,
    2009 J. Beel, B. Gipp Google Scholar''s ranking algorithm: an introductory overview
    Proceedings of the 12th International Conference on Scientometrics and Informetrics
    (ISSI’09). Rio de Janeiro (Brazil) (2009), pp. 230-241 View in ScopusGoogle Scholar
    Botta et al., 2016 A. Botta, W. de Donato, V. Persico, A. Pescapé Integration
    of cloud computing and internet of things: a survey Future Gener. Comput. Syst.,
    56 (2016), pp. 684-700 View PDFView articleView in ScopusGoogle Scholar Byun et
    al., 2012 J. Byun, B. Jeon, J. Noh, Y. Kim, S. Park An intelligent self-adjusting
    sensor for smart home services based on ZigBee communications IEEE Trans. Consum.
    Electron., 58 (2012), pp. 794-802 View in ScopusGoogle Scholar Caracaş et al.,
    2013 A. Caracaş, F.L. Mueller, O. Sundström, C. Binding, B. Jansen VillaSmart:
    wireless sensors for system identification in domestic buildings IEEE PES ISGT
    Europe 2013, IEEE (2013), pp. 1-5 CrossRefGoogle Scholar Cardenas et al., 2014
    J.A. Cardenas, L. Gemoets, J.H.A. Rosas, R. Sarfi A literature survey on smart
    grid distribution: an analytical approach J. Clean. Prod., 65 (2014), pp. 202-216
    View PDFView articleView in ScopusGoogle Scholar Chen et al., 2012 M. Chen, J.
    Wan, F. Li Machine-to-machine communications: architectures, standards and applications
    KSII Trans. Internet Inf. Syst. TIIS, 6 (2012), pp. 480-497 View in ScopusGoogle
    Scholar Copie et al., 2013 A. Copie, T.-F. Fortiş, V.I. Munteanu Benchmarking
    cloud databases for the requirements of the internet of things Information Technology
    Interfaces (ITI), Proceedings of the ITI 2013 35th International Conference on,
    IEEE (2013), pp. 77-82 View in ScopusGoogle Scholar Da Xu et al., 2014 L. Da Xu,
    W. He, S. Li Internet of things in industries: a survey IEEE Trans. Ind. Inf.,
    10 (2014), pp. 2233-2243 Google Scholar Darbee, 2013 P. Darbee INSTEON: Compared
    (2013) (White Paper) Google Scholar Dimitrievski et al., 2006 A. Dimitrievski,
    B. Stojkoska, K. Trivodaliev, D. Davcev Securing Communication in WSN Trough Use
    of Cryptography NATO-ARW, Suceava (2006) Google Scholar Dobre and Xhafa, 2014
    C. Dobre, F. Xhafa Intelligent services for big data science Future Gener. Comput.
    Syst., 37 (2014), pp. 267-281 View PDFView articleView in ScopusGoogle Scholar
    EcoGrid EU, 2015 EcoGrid EU, http://www.eu-ecogrid.net/, (Accessed December, 2015).
    Google Scholar Erol-Kantarci and Mouftah, 2010 M. Erol-Kantarci, H.T. Mouftah
    Wireless sensor networks for domestic energy management in smart grids Communications
    (QBSC), 2010 25th Biennial Symposium on, IEEE (2010), pp. 63-66 CrossRefView in
    ScopusGoogle Scholar Fan et al., 2010 Z. Fan, G. Kalogridis, C. Efthymiou, M.
    Sooriyabandara, M. Serizawa, J. McGeehan The new frontier of communications research:
    smart grid and smart metering Proceedings of the 1st International Conference
    on Energy-efficient Computing and Networking, ACM (2010), pp. 115-118 CrossRefGoogle
    Scholar Finn and Fitzpatrick, 2014 P. Finn, C. Fitzpatrick Demand side management
    of industrial electricity consumption: promoting the use of renewable energy through
    real-time pricing Appl. Energy, 113 (2014), pp. 11-21 View PDFView articleView
    in ScopusGoogle Scholar Franceschet, 2010 M. Franceschet A comparison of bibliometric
    indicators for computer science scholars and journals on Web of Science and Google
    Scholar Scientometrics, 83 (2010), pp. 243-258 CrossRefView in ScopusGoogle Scholar
    Gehanno et al., 2013 J.-F. Gehanno, L. Rollin, S. Darmoni Is the coverage of google
    scholar enough to be used alone for systematic reviews BMC Med. Inf. Decis. Mak.,
    13 (2013), p. 7 Google Scholar Greenfield, 2006 A. Greenfield Everyware: the Dawning
    Age of Ubiquitous Computing New Riders, Berkeley, CA (2006) Google Scholar Gubbi
    et al., 2013 J. Gubbi, R. Buyya, S. Marusic, M. Palaniswami Internet of Things
    (IoT): a vision, architectural elements, and future directions Future Gener. Comput.
    Syst., 29 (2013), pp. 1645-1660 View PDFView articleView in ScopusGoogle Scholar
    Gungor and Korkmaz, 2012 V.C. Gungor, M.K. Korkmaz Wireless link-quality estimation
    in smart grid environments Int. J. Distrib. Sens. Netw., 8 (2012) Google Scholar
    Gungor et al., 2010 V.C. Gungor, B. Lu, G.P. Hancke Opportunities and challenges
    of wireless sensor networks in smart grid IEEE Trans. Ind. Electron., 57 (2010),
    pp. 3557-3564 View in ScopusGoogle Scholar He et al., 2014 W. He, G. Yan, L. Da
    Xu Developing vehicular data cloud services in the IoT environment IEEE Trans.
    Ind. Inf., 10 (2014), pp. 1587-1595 View in ScopusGoogle Scholar Heile, 2010 B.
    Heile Smart grids for green communications [Industry Perspectives] IEEE Wirel.
    Commun., 17 (2010), pp. 4-6 View in ScopusGoogle Scholar Iyer and Agrawal, 2010
    G. Iyer, P. Agrawal Smart power grids 42nd Southeastern Symposium on System Theory
    (SSST), IEEE (2010), pp. 152-155 CrossRefView in ScopusGoogle Scholar Iyer, 2011
    S. Iyer Cyber security for smart grid, cryptography, and privacy Int. J. Digit.
    Multimed. Broadcast., 2011 (2011) Google Scholar Kamilaris et al., 2011 A. Kamilaris,
    V. Trifa, A. Pitsillides HomeWeb: an application framework for Web-based smart
    homes Telecommunications (ICT), 2011 18th International Conference on, IEEE (2011),
    pp. 134-139 CrossRefView in ScopusGoogle Scholar Karnouskos, 2011 S. Karnouskos
    Crowdsourcing information via mobile devices as a migration enabler towards the
    smartgrid Smart Grid Communications (SmartGridComm), 2011 IEEE International Conference
    on, IEEE (2011), pp. 67-72 CrossRefView in ScopusGoogle Scholar Khan et al., 2014
    M. Khan, N. Javaid, M. Arif, S. Saud, U. Qasim, Z. Khan Peak load scheduling in
    smart grid communication environment 28th International Conference on Advanced
    Information Networking and Applications, IEEE (2014), pp. 1025-1032 CrossRefView
    in ScopusGoogle Scholar Ko et al., 2011 J. Ko, A. Terzis, S. Dawson-Haggerty,
    D.E. Culler, J.W. Hui, P. Levis Connecting low-power and lossy networks to the
    internet IEEE Commun. Mag., 49 (2011), pp. 96-101 View in ScopusGoogle Scholar
    Lee and Lee, 2015 I. Lee, K. Lee The Internet of Things (IoT): applications, investments,
    and challenges for enterprises Bus. Horiz., 58 (2015), pp. 431-440 View PDFView
    articleView in ScopusGoogle Scholar Liu et al., 2015 C. Liu, C. Yang, X. Zhang,
    J. Chen External integrity verification for outsourced big data in cloud and IoT:
    a big picture Future Gener. Comput. Syst., 49 (2015), pp. 58-67 View PDFView articleView
    in ScopusGoogle Scholar Liu et al., 2014 C.H. Liu, B. Yang, T. Liu Efficient naming,
    addressing and profile services in Internet-of-Things sensory environments Ad
    Hoc Netw., 18 (2014), pp. 85-101 View PDFView articleView in ScopusGoogle Scholar
    Lu et al., 2011 C.-W. Lu, S.-C. Li, Q. Wu Interconnecting ZigBee and 6LoWPAN wireless
    sensor networks for smart grid applications Sensing Technology (ICST), 2011 Fifth
    International Conference on, IEEE (2011), pp. 267-272 View in ScopusGoogle Scholar
    Lund et al., 2015 P.D. Lund, J. Mikkola, J. Ypyä Smart energy system design for
    large clean power schemes in urban areas J. Clean. Prod., 103 (2015), pp. 437-445
    View PDFView articleView in ScopusGoogle Scholar Mainetti et al., 2011 L. Mainetti,
    L. Patrono, A. Vilei Evolution of wireless sensor networks towards the internet
    of things: a survey Software, Telecommunications and Computer Networks (SoftCOM),
    2011 19th International Conference on, IEEE (2011), pp. 1-6 CrossRefGoogle Scholar
    MiOS, 2015 MiOS, http://faq.mios.com/content/1/6/en/how-many-z_wave-devices-can-be-added.html,
    (Accessed December, 2015). Google Scholar Misra et al., 2015 P. Misra, V. Rajaraman,
    K. Dhotrad, J. Warrior, Y. Simmhan An Interoperable Realization of Smart Cities
    with Plug and Play Based Device Management (2015) arXiv preprint arXiv:1503.00923
    Google Scholar Monacchi et al., 2013 A. Monacchi, D. Egarter, W. Elmenreich Integrating
    households into the smart grid Modeling and Simulation of Cyber-physical Energy
    Systems (MSCPES), 2013 Workshop on, IEEE (2013), pp. 1-6 Google Scholar Ning et
    al., 2013 H. Ning, H. Liu, L.T. Yang Cyberentity security in the internet of things
    Computer, 46 (2013), pp. 46-53 View in ScopusGoogle Scholar Oppermann et al.,
    2014 F.J. Oppermann, C.A. Boano, K. Römer A Decade of Wireless Sensing Applications:
    Survey and Taxonomy, the Art of Wireless Sensor Networks Springer (2014), pp.
    11-50 CrossRefView in ScopusGoogle Scholar Palensky and Dietrich, 2011 P. Palensky,
    D. Dietrich Demand side management: demand response, intelligent energy systems,
    and smart loads IEEE Trans. Ind. Inf., 7 (2011), pp. 381-388 View in ScopusGoogle
    Scholar Parikh et al., 2010 P.P. Parikh, M.G. Kanabar, T.S. Sidhu Opportunities
    and challenges of wireless communication technologies for smart grid applications
    IEEE PES General Meeting, IEEE (2010), pp. 1-7 CrossRefGoogle Scholar Rezvani
    et al., 2015 A. Rezvani, M. Gandomkar, M. Izadbakhsh, A. Ahmadi Environmental/economic
    scheduling of a micro-grid with renewable energy resources J. Clean. Prod., 87
    (2015), pp. 216-226 View PDFView articleView in ScopusGoogle Scholar Risteska
    Stojkoska et al., 2014 B. Risteska Stojkoska, A. Popovska Avramova, P. Chatzimisios
    Application of wireless sensor networks for indoor temperature regulation Int.
    J. Distrib. Sens. Netw., 2014 (2014) Google Scholar Sajjad et al., 2014 I.A. Sajjad,
    R. Napoli, G. Chicco Future business model for cellular microgrids 4th International
    Symposium on Business Modeling and Software Design (BMSD) (2014), pp. 209-216
    View in ScopusGoogle Scholar Santini and Romer, 2006 S. Santini, K. Romer An adaptive
    strategy for quality-based data reduction in wireless sensor networks Proceedings
    of the 3rd International Conference on Networked Sensing Systems (INSS 2006) (2006),
    pp. 29-36 Google Scholar Schneps-Schneppe et al., 2012 M. Schneps-Schneppe, A.
    Maximenko, D. Namiot, D. Malov Wired Smart Home: energy metering, security, and
    emergency issues Ultra Modern Telecommunications and Control Systems and Workshops
    (ICUMT), 2012 4th International Congress on, IEEE (2012), pp. 405-410 CrossRefView
    in ScopusGoogle Scholar Shrouf and Miragliotta, 2015 F. Shrouf, G. Miragliotta
    Energy management based on Internet of Things: practices and framework for adoption
    in production management J. Clean. Prod., 100 (2015), pp. 235-246 View PDFView
    articleView in ScopusGoogle Scholar Siano, 2014 P. Siano Demand response and smart
    grids—A survey Renew. Sustain. Energy Rev., 30 (2014), pp. 461-478 View PDFView
    articleView in ScopusGoogle Scholar Srbinovska et al., 2015 M. Srbinovska, C.
    Gavrovski, V. Dimcev, A. Krkoleva, V. Borozan Environmental parameters monitoring
    in precision agriculture using wireless sensor networks J. Clean. Prod., 88 (2015),
    pp. 297-307 View PDFView articleView in ScopusGoogle Scholar Stojkoska and Davcev,
    2009 B. Stojkoska, D. Davcev Web interface for habitat monitoring using wireless
    sensor network Wireless and Mobile Communications, 2009. ICWMC''09. Fifth International
    Conference on, IEEE (2009), pp. 157-162 CrossRefView in ScopusGoogle Scholar Stojkoska
    et al., 2012 B.R. Stojkoska, D. Solev, D. Davcev Variable step size LMS Algorithm
    for Data Prediction in wireless sensor networks Sens. Transducers, 14 (2012),
    p. 111 Google Scholar Ullah et al., 2013 M. Ullah, A. Mahmood, S. Razzaq, M. Ilahi,
    R. Khan, N. Javaid A Survey of Different Residential Energy Consumption Controlling
    Techniques for Autonomous DSM in Future Smart Grid Communications (2013) arXiv
    preprint arXiv:1306.1134 Google Scholar Viani et al., 2013 F. Viani, F. Robol,
    A. Polo, P. Rocca, G. Oliveri, A. Massa Wireless architectures for heterogeneous
    sensing in smart home applications: concepts and real implementation Proc. IEEE,
    101 (2013), pp. 2381-2396 View in ScopusGoogle Scholar Withanage et al., 2014
    C. Withanage, R. Ashok, C. Yuen, K. Otto A comparison of the popular home automation
    technologies 2014 IEEE Innovative Smart Grid Technologies-Asia (ISGT ASIA), IEEE
    (2014), pp. 600-605 CrossRefView in ScopusGoogle Scholar Xu et al., 2014 B. Xu,
    L. Da Xu, H. Cai, C. Xie, J. Hu, F. Bu Ubiquitous data accessing method in IoT-based
    information system for emergency medical services IEEE Trans. Ind. Inf., 10 (2014),
    pp. 1578-1586 View in ScopusGoogle Scholar Z-Wave Alliance, 2015 Z-Wave Alliance,
    http://products.z-wavealliance.org/, (Accessed December, 2015). Google Scholar
    Zaslavsky et al., 2013 A. Zaslavsky, C. Perera, D. Georgakopoulos Sensing as a
    Service and Big Data (2013) arXiv preprint arXiv:1301.0159 Google Scholar Zhou
    et al., 2013 J. Zhou, T. Leppänen, E. Harjula, M. Ylianttila, T. Ojala, C. Yu,
    H. Jin Cloudthings: a common architecture for integrating the internet of things
    with cloud computing Computer Supported Cooperative Work in Design (CSCWD), 2013
    IEEE 17th International Conference on, IEEE (2013), pp. 651-657 CrossRefView in
    ScopusGoogle Scholar Zhu et al., 2010 Q. Zhu, R. Wang, Q. Chen, Y. Liu, W. Qin
    Iot gateway: bridgingwireless sensor networks into internet of things Embedded
    and Ubiquitous Computing (EUC), 2010 IEEE/IFIP 8th International Conference on,
    IEEE (2010), pp. 347-352 CrossRefView in ScopusGoogle Scholar ZigBee, 2015 ZigBee,
    http://www.zigbee.org/, (Accessed December, 2015). Google Scholar Cited by (1013)
    Smart home energy management systems: Research challenges and survey 2024, Alexandria
    Engineering Journal Show abstract Blockchain-based cloud-fog collaborative smart
    home authentication scheme 2024, Computer Networks Show abstract Conductive chenille
    yarn-based triboelectric carpet fabrics with enhanced flexibility and comfort
    for smart home monitoring 2024, Materials Today Energy Show abstract IfNot: An
    approach towards mitigating interest flooding attacks in Named Data Networking
    of Things 2024, Internet of Things (Netherlands) Show abstract Rational design
    and optimization of self-powered instantaneous dual-parameter triboelectric sensor
    2024, Sensors and Actuators A: Physical Show abstract Development, implementation,
    and impact analysis of model predictive control-based optimal precooling using
    smart home thermostats 2024, Energy and Buildings Show abstract View all citing
    articles on Scopus View Abstract © 2016 Elsevier Ltd. All rights reserved. Recommended
    articles Regeneration of activated carbon from babassu coconut refuse, applied
    as a complementary treatment to conventional refinery hydrotreatment of diesel
    fuel Journal of Cleaner Production, Volume 140, Part 3, 2017, pp. 1465-1469 Caroline
    Carriel Schmitt, …, Carlos Itsuo Yamamoto View PDF Smart home technologies in
    everyday life: do they address key energy challenges in households? Current Opinion
    in Environmental Sustainability, Volume 31, 2018, pp. 65-70 Sergio Tirado Herrero,
    …, Yolande Strengers View PDF Supporting end users to control their smart home:
    design implications from a literature review and an empirical investigation Journal
    of Systems and Software, Volume 144, 2018, pp. 295-313 Danilo Caivano, …, Fabio
    Cassano View PDF Show 3 more articles Article Metrics Citations Citation Indexes:
    945 Policy Citations: 5 Captures Readers: 2037 Mentions News Mentions: 2 References:
    1 Social Media Shares, Likes & Comments: 78 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Journal of Cleaner Production
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: 'A review of Internet of Things for smart home: Challenges and solutions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s19020276
  analysis: '>'
  authors:
  - Carlos Kamienski
  - Juha Pekka Soininen
  - Markus Taumberger
  - Ramide Dantas
  - Attilio Toscano
  - Tullio Salmon Cinotti
  - Rodrigo Filev Maia
  - André Torre Neto
  citation_count: 276
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nSmart Water Management Platform: IoT-Based\nPrecision\
    \ Irrigation for Agriculture †\nCarlos Kamienski 1,*\n, Juha-Pekka Soininen 2\n\
    , Markus Taumberger 2, Ramide Dantas 3\n,\nAttilio Toscano 4\n, Tullio Salmon\
    \ Cinotti 5\n, Rodrigo Filev Maia 6\nand André Torre Neto 7\n1\nCenter of Mathematics,\
    \ Computing and Cognition, Federal University of the ABC,\nSanto André 09210-580,\
    \ Brazil\n2\nVTT Technical Research Centre of Finland, FI-90571 Oulu, Finland;\
    \ Juha-Pekka.Soininen@vtt.ﬁ (J.-P.S.);\nMarkus.Taumberger@vtt.ﬁ (M.T.)\n3\nFederal\
    \ University of Pernambuco & Federal Institute of Pernambuco, Recife 50670-901,\
    \ Brazil;\nrasd@cin.ufpe.br\n4\nDepartment of Agricultural and Food Sciences (DISTAL),\
    \ University of Bologna, 40127 Bologna, Italy;\nattilio.toscano@unibo.it\n5\n\
    Advanced Research Center on Electronic Systems “Ercole De Castro” (ARCES), University\
    \ of Bologna,\n40127 Bologna, Italy; tullio.salmoncinotti@unibo.it\n6\nCentro\
    \ Universitário FEI, São Bernardo do Campo 09850-901, Brazil; rﬁlev@fei.edu.br\n\
    7\nBrazilian Agricultural Research Corporation (EMBRAPA), São Carlos 13560-970,\
    \ Brazil;\nandre.torre@embrapa.br\n*\nCorrespondence: cak@ufabc.edu.br; Tel.:\
    \ +55-11-4996-0179\n†\nThis paper is an extended version of “SWAMP: an IoT-based\
    \ Smart Water Management Platform for\nPrecision Irrigation in Agriculture” presented\
    \ at the 2018 Global Internet of Things Summit (GIoTS),\nBilbao, Spain, 4–7 June\
    \ 2018.\nReceived: 30 November 2018; Accepted: 7 January 2019; Published: 11 January\
    \ 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract:\
    \ The smart management of freshwater for precision irrigation in agriculture is\
    \ essential\nfor increasing crop yield and decreasing costs, while contributing\
    \ to environmental sustainability.\nThe intense use of technologies offers a means\
    \ for providing the exact amount of water needed by\nplants. The Internet of Things\
    \ (IoT) is the natural choice for smart water management applications,\neven though\
    \ the integration of different technologies required for making it work seamlessly\
    \ in\npractice is still not fully accomplished. The SWAMP project develops an\
    \ IoT-based smart water\nmanagement platform for precision irrigation in agriculture\
    \ with a hands-on approach based on\nfour pilots in Brazil and Europe. This paper\
    \ presents the SWAMP architecture, platform, and system\ndeployments that highlight\
    \ the replicability of the platform, and, as scalability is a major concern for\n\
    IoT applications, it includes a performance analysis of FIWARE components used\
    \ in the Platform.\nResults show that it is able to provide adequate performance\
    \ for the SWAMP pilots, but requires\nspecially designed conﬁgurations and the\
    \ re-engineering of some components to provide higher\nscalability using less\
    \ computational resources.\nKeywords: Internet of Things; smart water management;\
    \ smart agriculture; precision irrigation;\nIoT platform; FIWARE; linked data\n\
    1. Introduction\nAgriculture is the biggest consumer of freshwater in the world,\
    \ amounting to up to 70% of the\ntotal use [1], which makes the case for smart\
    \ water management in order to guarantee water and food\nsecurity to the world’s\
    \ population. Irrigation systems and ﬁeld application methods for the cultivation\n\
    of crops play an important role therein. In an attempt to avoid loss of productivity\
    \ caused by water\nSensors 2019, 19, 276; doi:10.3390/s19020276\nwww.mdpi.com/journal/sensors\n\
    Sensors 2019, 19, 276\n2 of 20\nstress (under-irrigation), farmers spray more\
    \ water than needed (over-irrigation) and as a result not\nonly productivity is\
    \ challenged but also water and energy are wasted. Precision irrigation, in its\
    \ turn,\ncan use water more efﬁciently and effectively, avoiding both under-irrigation\
    \ and over-irrigation.\nThe smart management of water for precision irrigation\
    \ in agriculture is essential for increasing crop\nyield and decreasing costs,\
    \ while at the same time contributing to the environmental sustainability.\nThe\
    \ Internet of Things (IoT) [2] emerges as the natural choice for smart water management\n\
    applications, even though the integration of different technologies required for\
    \ making it work\nseamlessly in practice is still not fully accomplished. The\
    \ emergence of IoT is a phenomenon that owes\nto the conjunction of several factors\
    \ such as inexpensive devices, low-power wireless technologies,\navailability\
    \ of cloud data centers for storage and processing, management frameworks for\
    \ dealing\nwith unstructured data from social networks, high-performance computing\
    \ resources in commodity\nplatforms, and computational intelligence algorithms\
    \ to deal with this monumental amount of data\n(aka big data analytics).\nCurrently,\
    \ there are some challenges to be overcome that still prevent the widespread use\
    \ of\nIoT for precision irrigation. Firstly, software development for IoT-based\
    \ smart applications, such as\nirrigation for agriculture, is not yet fully automatized\
    \ [3]. Secondly, advanced IoT software platforms\nare still missing, for automating\
    \ part of the process and integrating different technologies such as IoT,\nbig\
    \ data analytics, cloud computing and fog computing, for the deployment of pilot\
    \ applications for\nsmart water management. Thirdly, the integration of heterogeneous\
    \ and advanced sensors requires\nadequate standards and information models.\n\
    The SWAMP project developed and assessed an IoT-based smart water management platform\n\
    for precision irrigation in agriculture with a hands-on approach based on four\
    \ pilots in Brazil, Italy\nand Spain [4]. The SWAMP Platform can be conﬁgured\
    \ and deployed in different ways thus making\nup different SWAMP Systems, customized\
    \ to deal with the requirements and constraints of different\nsettings, countries,\
    \ climate, soils, and crops, which requires a good deal of ﬂexibility to adapt\
    \ to a\nrange of deployment conﬁgurations involving a varied mix of technologies.\n\
    This paper presents the SWAMP project, its architecture, platform and pilots,\
    \ as well as a\nscenario-based development process of derived systems. The SWAMP\
    \ layered architecture considers\nthree categories of services to ensure its replication\
    \ and adaptability. Entirely replicable services\ndeal with IoT services, storage\
    \ services, and data analytics and machine learning. Fully customizable\nservices\
    \ deal with water data management issues that specialize generic analytic services\
    \ into particular\ntechniques for different types of irrigation and water distribution.\
    \ Finally, application speciﬁc services\nrequire higher development effort since\
    \ they serve particular farms.\nThe SWAMP Platform contains the mainstream components\
    \ of FIWARE [5] and semantic features\nprovided by a SPARQL-based context engine\
    \ [6]. The platform may be deployed in a range of\ndifferent conﬁgurations for\
    \ component placement in the cloud or in the fog, involving the use of IoT\ncommunication\
    \ technologies and smart algorithms and analytics in the cloud, and fog-based\
    \ smart\ndecisions located on the farm premises. This is aimed at experimenting\
    \ with different deployment\npossibilities of the SWAMP Platform and providing\
    \ additional insights in terms of the replicability\nand adaptability of its components\
    \ to different settings. In other words, experimenting different\ndeployment conﬁgurations\
    \ is an important step for speeding up the learning process on how to deal\nwith\
    \ such a platform.\nAs scalability is a major concern for IoT applications, a\
    \ performance analysis of key software\ncomponents of its FIWARE-powered platform\
    \ was conducted, personalized for each pilot scenario.\nThe results show that\
    \ this platform can deal with the requirements of the pilots, but scalability\
    \ comes\nat a price. It was found that some FIWARE components must be ﬁne-tuned\
    \ to provide improved\nperformance and other ones must be completely re-engineered\
    \ to provide higher scalability using less\ncomputational resources. In addition,\
    \ MongoDB was identiﬁed as the bottleneck of the FIWARE tested\ninstallation that\
    \ may cause system crashes.\nSensors 2019, 19, 276\n3 of 20\nThe contributions\
    \ of this paper are threefold. Firstly, the SWAMP approach that is the result\
    \ of\na collaborative interdisciplinary project involving researchers and practitioners\
    \ in two continents is\nintroduced. Secondly, different system deployments for\
    \ the SWAMP Platform are presented. Thirdly,\nthe results of a performance analysis\
    \ study that reveals important ﬁndings for the scalability of SWAMP\nIoT Platform\
    \ based on FIWARE are shown.\nIn the remainder of this paper, Section 2 introduces\
    \ background and related work. Section 3\nintroduces SWAMP concepts, while Section\
    \ 4 presents the four pilots and Section 5 details the system\ndeployment scenarios\
    \ for the SWAMP Platform. Section 6 presents performance analysis results\nfocusing\
    \ on scalability of the SWAMP Platform. Section 7 discusses the key ﬁndings and\
    \ results and\nﬁnally Section 8 draws conclusions and future work.\n2. Background\
    \ and Related Work\nTo the best of our knowledge, there is no open IoT-based Platform\
    \ speciﬁcally focused on precision\nirrigation for agriculture, so that a clear\
    \ comparison with SWAMP is not possible. On the other\nhand, IoT has many security\
    \ requirements, such as privacy, conﬁdentiality, integrity, authentication,\n\
    authorization and accounting [7], as well as the signiﬁcant challenges posed by\
    \ security threats to the\nsuccess of IoT platforms [8]. However, this is out\
    \ of the scope of this paper.\n2.1. IoT Systems for Precision Irrigation\nCurrent\
    \ open source IoT-based systems for precision irrigation are mostly theoretical\
    \ with limited\nproof of concept experiences. They are either too generic or too\
    \ speciﬁc and do not explicitly address\neasy system deployment for facilitating\
    \ replicability and streamlining the deployment of new systems.\nWhen it comes\
    \ to providing advanced features to water management, there are some isolated\
    \ initiatives\nnot necessarily connected to the existing platforms and architectures.\
    \ For example, the FIGARO project\naims at increasing water productivity and improving\
    \ irrigation practices through the development\nof a precision irrigation management\
    \ platform, but not directly involving IoT [9]. Also, Popovi´c\net al. [10] present\
    \ a case study of a specially designed and currently limited IoT-enabled platform\n\
    for collecting data in precision agriculture and ecological monitoring domains.\
    \ Agri-IoT [11] is a\ntheoretical IoT-based framework for data analytics and real-time\
    \ processing for smart farming that\nshares some similarities with SWAMP.\nIn\
    \ the last years, much has been said about the prospective uses for IoT combined\
    \ with cloud-based\nservices and big data analytics. In Europe, there is a current\
    \ concern to understand the challenges\nand compelling impacts of IoT in large-scale\
    \ pilots for smart agriculture. Brewster et al. discuss the\ndeployment of those\
    \ large-scale pilots for IoT in agriculture and describe technologies and solutions\n\
    that might be present in some agrifood domains, such as dairy, fruit, arable crops\
    \ and meat & vegetable\nsupply chain [12].\nFIWARE has been used as a computing\
    \ platform for many IoT-based applications for smart\nfarming.\nRodriguez et al.\
    \ [13] compiled a short literature review and presented the Agricolus\nplatform\
    \ for precision farming. López-Riquelme et al. presented an implementation of\
    \ FIWARE\nfor a speciﬁc scenario of precision irrigation in agriculture in the\
    \ south of Spain [14], however, it is\nfocused on a speciﬁc use case, providing\
    \ details of devices and equipment, as well as irrigation\ntechniques. In contrast,\
    \ this paper presents an architecture and a platform based on FIWARE, as well\n\
    as conﬁgurations for system deployments in four scenarios.\nFog computing is a\
    \ fairly new paradigm aimed at dealing with challenges related to the huge\namount\
    \ of data that will be generated with the increasing utilization of IoT-based\
    \ systems [15].\nA new technological trend to implement the fog is container-based\
    \ virtualization, which provides a\nlightweight alternative to traditional hypervisors\
    \ [16]. FIWARE Generic Enablers are also distributed\nas Docker containers in\
    \ order to be used in the SWAMP fog computing approach.\nFogFlow\nprovides a programming\
    \ model for IoT-based applications for smart cities distributed over the cloud\n\
    and the fog located in the network edge [17]. Even though FogFlow is integrated\
    \ into FIWARE,\nSensors 2019, 19, 276\n4 of 20\nthe SWAMP project takes a clean\
    \ approach and uses directly the components provided by FIWARE,\nin combination\
    \ with new components developed speciﬁcally for the SWAMP precision agriculture\n\
    scenarios whenever needed.\n2.2. The FIWARE Platform\nFIWARE [5] has been attracting\
    \ general attention for being an open source EU-funded solution,\ncomprised of\
    \ a series of software components called Generic Enablers (GE) that perform functions\n\
    needed in IoT-based smart applications. GEs can be used to build different applications\
    \ that exchange\ninformation through a REST API following the OMA NGSI [18] standard\
    \ based on JSON. The central\naspect of the FIWARE NGSI Context Management information\
    \ model is the concept of entities and\ntheir attributes. There has been an ongoing\
    \ effort to develop a Context Information Management API\nbased on recent advances\
    \ in Linked Data (LD) [19] based on JSON-LD called NGSI-LD, deﬁned in\nRDF (Resource\
    \ Description Framework) [20]. Both NGSI and NGSI-LD are currently supported by\n\
    FIWARE, even though the NGSI-LD speciﬁcation is preliminary [21].\nSome FIWARE\
    \ GEs are considered key enablers, such as:\n•\nOrion: A publish/subscribe context\
    \ broker, considered the heart of FIWARE. Orion only stores\nthe latest version\
    \ of entity attributes and it needs to work together with other applications in\n\
    order to maintain historical data.\n•\nIoT Agent: Maps data coming from sensors\
    \ and going to actuators to the FIWARE NGSI information\nmodel to be stored in\
    \ Orion and further processed by other GEs or external applications.\n•\nQuantum\
    \ Leap: New GE that preserves Orion NGSI historical entity data as times series,\
    \ replacing\nthe old and less scalable STH Comet.\n•\nCygnus: A data processing\
    \ and distribution system for applications that require more elaborate\ndata ﬂow\
    \ management than simple historical data.\n•\nCosmos: A set of tools that interface\
    \ with popular Big Data Platforms.\nIt has been shown that different architectural\
    \ choices of IoT platforms affect system scalability\nand that automatic real-time\
    \ decision-making is feasible in an environment composed of dozens\nof thousands\
    \ of sensors continuously transmitting data [22]. Cruz et al. present a comprehensive\n\
    study that proposes qualitative and quantitative metrics and evaluates the performance\
    \ of various\nIoT platforms [23]. They did not focus on speciﬁc features of FIWARE\
    \ and did not evaluate different\nscenarios and infrastructures, such as fog computing.\
    \ Martínez et al. [24] give a detailed description\nof the architecture of a testbed\
    \ of the FIWARE platform conﬁgured for the precision agriculture\ndomain. It differs\
    \ from our approach because their test application connects directly to FIWARE\
    \ using\nNGSI JSON interface, while this paper uses an IoT Agent for MQTT and\
    \ an IoT sensor simulator for\ngenerating synthetic data.\nA preliminary performance\
    \ analysis of FIWARE for SWAMP revealed that fog computing does\nnot always improve\
    \ the overall system performance and can even make it worse [25]. This paper\n\
    differs from previous work as it evaluates different conﬁgurations of FIWARE and\
    \ its focus is on the\nscenarios of smart irrigation in agriculture deﬁned for\
    \ the SWAMP project.\n2.3. The SEPA Platform\nThe SPARQL Event Processing Architecture\
    \ (SEPA) [6] enables the detection and communication\nof data changes for the\
    \ Semantic Web of Things [26]. SEPA is based upon W3C SPARQL 1.1 [27],\na RDF\
    \ query language, where publishers and subscribers exchange data. The SEPA framework\n\
    offers developers a solution for implementing Dynamic Linked Data applications\
    \ and services.\nLinked Data refers to a set of best practices for publishing\
    \ and connecting structured data on\nthe Web [18]. Dynamic aspects of Linked Data\
    \ involve discovery, granularity level, description\nof changes, detection algorithms,\
    \ and notiﬁcation mechanisms. The SEPA broker is the core element\nof the architecture,\
    \ implementing a content-based publish-subscribe mechanism where publishers\n\
    Sensors 2019, 19, 276\n5 of 20\nuse SPARQL 1.1 Updates to generate events and\
    \ subscribers use SPARQL 1.1 Queries to subscribe to\nevents. The latter receives\
    \ SPARQL query results and subsequent notiﬁcations generated by changes\nin the\
    \ RDF knowledge base are expressed in terms of added and removed query results\
    \ since the\nprevious notiﬁcation.\n3. SWAMP: Concept and Overview\nThe SWAMP\
    \ project is developing a high-precision smart irrigation system concept for agriculture.\n\
    Within SWAMP, water management for agriculture is partitioned into three phases:\
    \ water reserve,\nwater distribution and water consumption. For Water Consumption\
    \ SWAMP provides real-time\nresponses for adapting irrigation as crop conditions\
    \ change. On the other hand, changes in water\ndistribution are performed in a\
    \ longer timescale. Distribution and Consumption management systems\nare integrated,\
    \ as water usage triggers water distribution. The management of water reserves\
    \ is\nnot considered.\nThe SWAMP Architecture is divided into ﬁve layers, as depicted\
    \ by Figure 1.\nSensors 2019, 19, x FOR PEER REVIEW \n6 of 21 \n \nFigure 1. SWAMP\
    \ Layered Architecture. \nDifferent layers of the architecture are comprised of\
    \ more generic components that are more \nprone to be ported to other settings,\
    \ whereas others are more application-specific and thus porting \nrequires new\
    \ development efforts. When it comes to the generality/specificity scale, the\
    \ SWAMP \narchitecture provides three categories of components: (a) Fully Replicable\
    \ Services: Layers 1, 2 and 3 \nof the architecture are generic enough to allow\
    \ them to be replicable in different settings; (b) Fully \nCustomizable Services:\
    \ Layer 4 provides services that are closer to the final application and therefore\
    \ \nmust be aware of a level of detail that may vary for different techniques\
    \ and models of water \ndistribution and irrigation, which may require customization\
    \ for every new deployment; (c) \nApplication Specific Services: Services in Layer\
    \ 5 address particularities of pilots. \n4. SWAMP Pilots \n4.1. MATOPIBA Pilot\
    \ (Luís Eduardo Magalhães—Brazil) \nThe MATOPIBA region encompasses the Brazilian\
    \ states of Maranhão (MA), Tocantins (TO), \nPiauí (PI) and Bahia (BA), and is\
    \ one of the most critical irrigated agriculture frontiers in the country, \n\
    located in the cerrado, a savannah climate subtype. Typical crops are soybeans,\
    \ corn and cotton \nwhere irrigation is mostly performed by center pivots. Figure\
    \ 2 depicts the map of Northeastern \nBrazil showing the precise location of the\
    \ pilot in the municipality of Luís Eduardo Magalhães (a), \nFigure 1. SWAMP Layered\
    \ Architecture.\n•\nLayer 1: Device & Communication: a variety of sensor and actuator\
    \ technologies to acquire soil\n(e.g., moisture), plant (e.g., growing stage)\
    \ and weather (e.g., air temperature), as well as LPWAN\ncommunication technologies\
    \ (e.g., LoRaWAN [28]) are abstracted in this layer. The SWAMP pilots\nuse commercial\
    \ sensors as well as a homemade multiparametric sensor probe. Also, commercial\n\
    drones have been used to take images but a speciﬁc drone is under development\
    \ since one of\nthe partners is a drone maker. A complete description of the sensing\
    \ infrastructure is outside the\nscope of this paper.\n•\nLayer 2: Data Acquisition,\
    \ Security & Management: protocols and software components for\ndata acquisition\
    \ (e.g., MQTT [29] and LoRa Server [30]) are the key characteristic of this layer,\n\
    in addition to security and device management functions. The FIWARE IoT Agent\
    \ GE also belongs\nto this layer as it translates the internal FIWARE data representation\
    \ in JSON from/to devices.\n•\nLayer 3: Data Management: contains software components\
    \ in charge of data storage, processing\nand distribution based on FIWARE GEs\
    \ (Orion, QuantumLeap, Cygnus and Cosmos) and SEPA\nSensors 2019, 19, 276\n6 of\
    \ 20\nSPARQL engine. A mapper between FIWARE JSON NGSI and SEPA RDF data models\
    \ also belong\nto this layer, as well as a mapper from external data sources,\
    \ such as historical agriculture yield\ndatabases and weather forecast services.\
    \ A distributed infrastructure composed of cloud servers\nand fog nodes work together\
    \ for dealing with massive amounts of data and make it available to\nthe upper\
    \ layers.\n•\nLayer 4: Water Irrigation & Distribution Models: traditional agriculture\
    \ models for estimating\nplant water needs using images generated by drones (crop-based\
    \ approach) and using soil sensors\nfor determining soil moisture (soil-based\
    \ approach) belong to this layer. Optimization models and\ntechniques for water\
    \ distribution based on plant water needs are essential whenever collective\n\
    networks replace individual water sources. Also, computational intelligence (e.g.,\
    \ machine\nlearning) works together with traditional models or in place of them.\n\
    •\nLayer 5: Water Application Services: irrigation services that make sense to\
    \ farmers and water\ndistributors via user interfaces.\nDifferent layers of the\
    \ architecture are comprised of more generic components that are more\nprone to\
    \ be ported to other settings, whereas others are more application-speciﬁc and\
    \ thus porting\nrequires new development efforts. When it comes to the generality/speciﬁcity\
    \ scale, the SWAMP\narchitecture provides three categories of components: (a)\
    \ Fully Replicable Services: Layers 1, 2\nand 3 of the architecture are generic\
    \ enough to allow them to be replicable in different settings;\n(b) Fully Customizable\
    \ Services: Layer 4 provides services that are closer to the ﬁnal application\n\
    and therefore must be aware of a level of detail that may vary for different techniques\
    \ and models\nof water distribution and irrigation, which may require customization\
    \ for every new deployment;\n(c) Application Speciﬁc Services: Services in Layer\
    \ 5 address particularities of pilots.\n4. SWAMP Pilots\n4.1. MATOPIBA Pilot (Luís\
    \ Eduardo Magalhães—Brazil)\nThe MATOPIBA region encompasses the Brazilian states\
    \ of Maranhão (MA), Tocantins (TO),\nPiauí (PI) and Bahia (BA), and is one of\
    \ the most critical irrigated agriculture frontiers in the country,\nlocated in\
    \ the cerrado, a savannah climate subtype. Typical crops are soybeans, corn and\
    \ cotton where\nirrigation is mostly performed by center pivots. Figure 2 depicts\
    \ the map of Northeastern Brazil\nshowing the precise location of the pilot in\
    \ the municipality of Luís Eduardo Magalhães (a), highlights\nthe Rio das Pedras\
    \ Farm Ofﬁce and the circular plot (b) that is irrigated by a center pivot (c).\n\
    Sensors 2019, 19, x FOR PEER REVIEW \n7 of 21 \n \n \n \n(a) \n(b) \n(c) \nFigure\
    \ 2. MATOPIBA Pilot: (a) Map of Brazil showing the four states where MATOPIBA\
    \ is located; \n(b) Rio das Pedras farm showing the farm office and the plot;\
    \ (c) Center pivot irrigation in the \nsoybeans plot. \n4.2. Guaspari Pilot (Espírito\
    \ Santo do Pinhal—Brazil) \nThe Guaspari Winery is located in the Brazilian Mantiqueira\
    \ Mountain Range, municipality of \nEspírito Santo do Pinhal in the state of São\
    \ Paulo, where high technology is used to produce \nhigh-quality altitude wines.\
    \ The different terroirs that compose the vineyard are divided into plots, \n\
    whose altitude ranges vary between 800 and 1300 m. Figure 3 depicts the map of\
    \ Southeastern Brazil \nshowing the precise location of the pilot (a), highlights\
    \ the winery and two selected plots (b), and the\nMA \nTO \nPI \nBA \nFigure 2.\
    \ MATOPIBA Pilot: (a) Map of Brazil showing the four states where MATOPIBA is\
    \ located;\n(b) Rio das Pedras farm showing the farm ofﬁce and the plot; (c) Center\
    \ pivot irrigation in the\nsoybeans plot.\nSensors 2019, 19, 276\n7 of 20\nThe\
    \ key challenge for the MATOPIBA pilot is to reduce energy consumption that represents\
    \ up\nto 30% of the production cost, by implementing and evaluating a smart irrigation\
    \ system based on\nVariable Rate Irrigation (VRI). VRI is able to provide the\
    \ same yield with about 30% of water usage [31]\n(up to 50% depending on the soil\
    \ type), which decreases the cost of energy.\n4.2. Guaspari Pilot (Espírito Santo\
    \ do Pinhal—Brazil)\nThe Guaspari Winery is located in the Brazilian Mantiqueira\
    \ Mountain Range, municipality\nof Espírito Santo do Pinhal in the state of São\
    \ Paulo, where high technology is used to produce\nhigh-quality altitude wines.\
    \ The different terroirs that compose the vineyard are divided into plots,\nwhose\
    \ altitude ranges vary between 800 and 1300 m. Figure 3 depicts the map of Southeastern\
    \ Brazil\nshowing the precise location of the pilot (a), highlights the winery\
    \ and two selected plots (b), and the\nvineyard featuring the drip irrigation\
    \ system during the harvest (c).\n \n \n \n \n(a) \n(b) \n(c) \nFigure 2. MATOPIBA\
    \ Pilot: (a) Map of Brazil showing the four states where MATOPIBA is located;\
    \ \n(b) Rio das Pedras farm showing the farm office and the plot; (c) Center pivot\
    \ irrigation in the \nsoybeans plot. \n4.2. Guaspari Pilot (Espírito Santo do\
    \ Pinhal—Brazil) \nThe Guaspari Winery is located in the Brazilian Mantiqueira\
    \ Mountain Range, municipality of \nEspírito Santo do Pinhal in the state of São\
    \ Paulo, where high technology is used to produce \nhigh-quality altitude wines.\
    \ The different terroirs that compose the vineyard are divided into plots, \n\
    whose altitude ranges vary between 800 and 1300 m. Figure 3 depicts the map of\
    \ Southeastern Brazil \nshowing the precise location of the pilot (a), highlights\
    \ the winery and two selected plots (b), and the \nvineyard featuring the drip\
    \ irrigation system during the harvest (c). \nThe key challenge of the Guaspari\
    \ pilot is to improve the quality of grapes and wines, by \nperforming automatic\
    \ measuring of soil water content at different soil depths and to provide quick\
    \ \nand accurate irrigation management information. The Guaspari Winery uses drip\
    \ irrigation in its \nvineyards. By applying a different irrigation map to each\
    \ vineyard zone, makes it possible to \nunderstand the differences of grape quality\
    \ in different soil types for making better wine blends. \n \n \n \n(a) \n(b)\
    \ \n(c) \nFigure 3. Guaspari Pilot: (a) Map of Brazil showing the location of\
    \ the Winery related to major cities; \n(b) Guaspari winery and the plots where\
    \ the pilot is located; (c) Drip irrigation in the vineyard. \n4.3. Intercrop\
    \ Pilot (Cartagena/Spain) \nThe Intercrop Pilot is located in Cartagena in the\
    \ south of Spain within the premises of \nIntercrop Iberica. Even though Cartagena\
    \ is located on the coast, it faces a serious water scarcity \nproblem, being\
    \ located in a semi-arid area with a very short rain season. A considerable amount\
    \ of \nwater comes from a desalination plant, what contributes to make it a scarce\
    \ good. These conditions \nmake the case for maintaining internal reservoirs and\
    \ making a very rational use of water, since \nthere is no guarantee that the\
    \ supply will meet the demand. Figure 4 depicts the map of Spain \nFigure 3. Guaspari\
    \ Pilot: (a) Map of Brazil showing the location of the Winery related to major\
    \ cities;\n(b) Guaspari winery and the plots where the pilot is located; (c) Drip\
    \ irrigation in the vineyard.\nThe key challenge of the Guaspari pilot is to improve\
    \ the quality of grapes and wines,\nby performing automatic measuring of soil\
    \ water content at different soil depths and to provide\nquick and accurate irrigation\
    \ management information. The Guaspari Winery uses drip irrigation\nin its vineyards.\
    \ By applying a different irrigation map to each vineyard zone, makes it possible\
    \ to\nunderstand the differences of grape quality in different soil types for\
    \ making better wine blends.\n4.3. Intercrop Pilot (Cartagena/Spain)\nThe Intercrop\
    \ Pilot is located in Cartagena in the south of Spain within the premises of Intercrop\n\
    Iberica. Even though Cartagena is located on the coast, it faces a serious water\
    \ scarcity problem, being\nlocated in a semi-arid area with a very short rain\
    \ season. A considerable amount of water comes from\na desalination plant, what\
    \ contributes to make it a scarce good. These conditions make the case for\nmaintaining\
    \ internal reservoirs and making a very rational use of water, since there is\
    \ no guarantee\nthat the supply will meet the demand. Figure 4 depicts the map\
    \ of Spain showing the precise location\nof the pilot (a), the plot entirely dedicated\
    \ to the pilot (b) and the sprinkler irrigation system in a\nspinach crop (c).\n\
    The key challenge of the Intercrop pilot is to reduce the water used in irrigation\
    \ and to maximize\nyield per amount of water. In the selected pilot plot two crops\
    \ are grown in the same season: spinach\nand lettuce, irrigated by portable sprinkler\
    \ and drip systems, respectively.\nSensors 2019, 19, 276\n8 of 20\n \nshowing\
    \ the precise location of the pilot (a), the plot entirely dedicated to the pilot\
    \ (b) and the \nsprinkler irrigation system in a spinach crop (c). \nThe key challenge\
    \ of the Intercrop pilot is to reduce the water used in irrigation and to \nmaximize\
    \ yield per amount of water. In the selected pilot plot two crops are grown in\
    \ the same \nseason: spinach and lettuce, irrigated by portable sprinkler and\
    \ drip systems, respectively. \n \n \n \n(a) \n(b) \n(c) \nFigure 4. Intercrop\
    \ Pilot: (a) Map of Spain showing the location of Intercrop Iberica; (b) Plot\
    \ where \nthe pilot is located; (c) Sprinkler irrigation in a spinach crop. \n\
    4.4. CBEC Pilot (San Michele/Fosdondo—Italy) \nThe Consorzio di Bonifica Emilia\
    \ Centrale (CBEC) is a reclamation consortium responsible for \nirrigation and\
    \ water drainage in the Emilia-Romagna Region in Northern Italy. The water is\
    \ \ndistributed to the farms by an intricate infrastructure composed of about\
    \ 3500 km of canals and \ndozens of pump stations. The irrigation network consists\
    \ of open channels on earth, and their filling \nuses substantial water volumes\
    \ that frequently are subject to a high loss rate, due to evaporation and \ninfiltration\
    \ through canal banks and bottom. Figure 5 depicts the map of Italy showing the\
    \ location \nof CBEC office in the municipality of Reggio Emilia (a), the San\
    \ Michele and Fosdondo areas where \nthe three pilot farms are located (b), and\
    \ an irrigation canal filled with water (c). \nThe key challenge of the CBEC Pilot\
    \ is to optimize water distribution to increase usage of water \npassing along\
    \ the canals, based on the real irrigation demand coming from three selected farms,\
    \ \nwhich grow different crops (vineyards and pears) and use different irrigation\
    \ systems. This \noptimization will allow CBEC to significantly reduce water waste\
    \ and energy used in pumps by \nadvanced management practices, and to optimize\
    \ the irrigation by monitoring the water balance at \nthe farm. \n \n(a) \n(b)\
    \ \n(c) \nFigure 5. CBEC Pilot: (a) Map of Italy showing the location of CBEC\
    \ office; (b) San Michele and \nFosdondo areas where the three pilot farms are\
    \ located; (c) Irrigation canal. \nFigure 4. Intercrop Pilot: (a) Map of Spain\
    \ showing the location of Intercrop Iberica; (b) Plot where the\npilot is located;\
    \ (c) Sprinkler irrigation in a spinach crop.\n4.4. CBEC Pilot (San Michele/Fosdondo—Italy)\n\
    The Consorzio di Boniﬁca Emilia Centrale (CBEC) is a reclamation consortium responsible\
    \ for\nirrigation and water drainage in the Emilia-Romagna Region in Northern\
    \ Italy. The water is distributed\nto the farms by an intricate infrastructure\
    \ composed of about 3500 km of canals and dozens of pump\nstations. The irrigation\
    \ network consists of open channels on earth, and their ﬁlling uses substantial\n\
    water volumes that frequently are subject to a high loss rate, due to evaporation\
    \ and inﬁltration\nthrough canal banks and bottom. Figure 5 depicts the map of\
    \ Italy showing the location of CBEC ofﬁce\nin the municipality of Reggio Emilia\
    \ (a), the San Michele and Fosdondo areas where the three pilot\nfarms are located\
    \ (b), and an irrigation canal ﬁlled with water (c).\n \n \n \n \n(a) \n(b) \n\
    (c) \nFigure 4. Intercrop Pilot: (a) Map of Spain showing the location of Intercrop\
    \ Iberica; (b) Plot where \nthe pilot is located; (c) Sprinkler irrigation in\
    \ a spinach crop. \n4.4. CBEC Pilot (San Michele/Fosdondo—Italy) \nThe Consorzio\
    \ di Bonifica Emilia Centrale (CBEC) is a reclamation consortium responsible for\
    \ \nirrigation and water drainage in the Emilia-Romagna Region in Northern Italy.\
    \ The water is \ndistributed to the farms by an intricate infrastructure composed\
    \ of about 3500 km of canals and \ndozens of pump stations. The irrigation network\
    \ consists of open channels on earth, and their filling \nuses substantial water\
    \ volumes that frequently are subject to a high loss rate, due to evaporation\
    \ and \ninfiltration through canal banks and bottom. Figure 5 depicts the map\
    \ of Italy showing the location \nof CBEC office in the municipality of Reggio\
    \ Emilia (a), the San Michele and Fosdondo areas where \nthe three pilot farms\
    \ are located (b), and an irrigation canal filled with water (c). \nThe key challenge\
    \ of the CBEC Pilot is to optimize water distribution to increase usage of water\
    \ \npassing along the canals, based on the real irrigation demand coming from\
    \ three selected farms, \nwhich grow different crops (vineyards and pears) and\
    \ use different irrigation systems. This \noptimization will allow CBEC to significantly\
    \ reduce water waste and energy used in pumps by \nadvanced management practices,\
    \ and to optimize the irrigation by monitoring the water balance at \nthe farm.\
    \ \n \n \n \n(a) \n(b) \n(c) \nFigure 5. CBEC Pilot: (a) Map of Italy showing\
    \ the location of CBEC office; (b) San Michele and \nFosdondo areas where the\
    \ three pilot farms are located; (c) Irrigation canal. \n5. SWAMP System Deployment\
    \ Scenarios \nFigure 5. CBEC Pilot: (a) Map of Italy showing the location of CBEC\
    \ ofﬁce; (b) San Michele and\nFosdondo areas where the three pilot farms are located;\
    \ (c) Irrigation canal.\nThe key challenge of the CBEC Pilot is to optimize water\
    \ distribution to increase usage of water\npassing along the canals, based on\
    \ the real irrigation demand coming from three selected farms, which\ngrow different\
    \ crops (vineyards and pears) and use different irrigation systems. This optimization\
    \ will\nallow CBEC to signiﬁcantly reduce water waste and energy used in pumps\
    \ by advanced management\npractices, and to optimize the irrigation by monitoring\
    \ the water balance at the farm.\n5. SWAMP System Deployment Scenarios\nIt is\
    \ useful to make a clear distinction between the SWAMP Platform and a SWAMP System.\n\
    The platform is a set of generic components depicted in Figure 1, used to build\
    \ SWAMP Systems.\nWhereas there is only one SWAMP Platform, each pilot requires\
    \ a system to be deployed to fulﬁll its\nspeciﬁc needs of irrigation or water\
    \ distribution. Generic components, mainly those from the lower\nSensors 2019,\
    \ 19, 276\n9 of 20\nlayers of the architecture belong to the platform and may\
    \ be deployed in different ways in any system.\nOn the other hand, speciﬁc components\
    \ such as user interfaces belong to the system.\n5.1. SWAMP Baseline Scenario\n\
    Figure 6 depicts a baseline deployment scenario for the SWAMP platform that includes\
    \ three\nkey components, which are the SWAMP Cloud, the SWAMP Fog Hub and SWAMP\
    \ Field Fog Node.\nThis scenario represents the most complete and distributed\
    \ version of the SWAMP Platform, which is\nnot necessarily deployed as is in the\
    \ four pilots. For example, a fog infrastructure is not necessary in\nevery system\
    \ deployment of the SWAMP platform.\n \nkey components, which are the SWAMP Cloud,\
    \ the SWAMP Fog Hub and SWAMP Field Fog Node. \nThis scenario represents the most\
    \ complete and distributed version of the SWAMP Platform, which \nis not necessarily\
    \ deployed as is in the four pilots. For example, a fog infrastructure is not\
    \ necessary \nin every system deployment of the SWAMP platform. \nFigure 6 also\
    \ highlights a hierarchical organization of the fog, divided into Fog Field Nodes\
    \ \n(FFN) and a Fog Hub in the farm office. A FFN has a stable power source and\
    \ provides data \ntransmission, storage and processing capabilities to the sensors\
    \ spread in a farm plot, i.e., behaving \nas an aggregation point for LPWAN devices\
    \ [28]. Irrigation systems like the center pivot can host a \nFFN or even drones.\
    \ Its implementation may be as simple as a LoRaWAN Gateway that forwards \ndata\
    \ to the Fog Hub or may include storage and processing. \nThe role played by the\
    \ Fog Hub may also vary depending on farmer’s requirements of \nrobustness to\
    \ Internet disconnections, which may be frequent in agriculture frontiers. The\
    \ \nfunctionalities provided by a Fog Hub may vary from a sensor aggregation point\
    \ to a full-fledged \nmini cloud data center if farmers are willing to have full\
    \ control of their irrigation systems. The \nSWAMP Cloud stores and processes\
    \ data and smart algorithms are based on existing agriculture \nmodels and on\
    \ novel computational intelligence techniques, such as machine learning. \n \n\
    Figure 6. SWAMP Baseline Scenario including SWAMP Cloud and SWAMP Fog (further\
    \ organized \ninto SWAMP Fog Hub and SWAMP Field Fog Node). \n5.2. SWAMP System\
    \ for the MATOPIBA Pilot \nThe deployment of the SWAMP Platform for the MATOPIBA\
    \ pilot has to deal with \ncommunication instability, distance from the farm office\
    \ to the center pivot, and even distance from \nFigure 6. SWAMP Baseline Scenario\
    \ including SWAMP Cloud and SWAMP Fog (further organized\ninto SWAMP Fog Hub and\
    \ SWAMP Field Fog Node).\nFigure 6 also highlights a hierarchical organization\
    \ of the fog, divided into Fog Field Nodes (FFN)\nand a Fog Hub in the farm ofﬁce.\
    \ A FFN has a stable power source and provides data transmission,\nstorage and\
    \ processing capabilities to the sensors spread in a farm plot, i.e., behaving\
    \ as an aggregation\npoint for LPWAN devices [28]. Irrigation systems like the\
    \ center pivot can host a FFN or even drones.\nIts implementation may be as simple\
    \ as a LoRaWAN Gateway that forwards data to the Fog Hub or\nmay include storage\
    \ and processing.\nThe role played by the Fog Hub may also vary depending on farmer’s\
    \ requirements of robustness\nto Internet disconnections, which may be frequent\
    \ in agriculture frontiers. The functionalities provided\nby a Fog Hub may vary\
    \ from a sensor aggregation point to a full-ﬂedged mini cloud data center\nif\
    \ farmers are willing to have full control of their irrigation systems. The SWAMP\
    \ Cloud stores\nand processes data and smart algorithms are based on existing\
    \ agriculture models and on novel\ncomputational intelligence techniques, such\
    \ as machine learning.\n5.2. SWAMP System for the MATOPIBA Pilot\nThe deployment\
    \ of the SWAMP Platform for the MATOPIBA pilot has to deal with communication\n\
    instability, distance from the farm ofﬁce to the center pivot, and even distance\
    \ from the farm to\nthe nearest downtown area A center pivot irrigates a circular\
    \ agricultural plot of 100 hectares that\nalternates soybeans and cotton and the\
    \ plot is further divided into different management zones based\non differences\
    \ in the soil properties. The center pivot controls the variable rate irrigation\
    \ sprinklers\nSensors 2019, 19, 276\n10 of 20\n(actuators). The authors developed\
    \ multiparametric probes for soil sensing, which include moisture,\ntemperature\
    \ and electrical conductivity sensors at three depths. In intensive agriculture\
    \ areas the plan\nis also to experiment ultra-low-power wireless sensor solutions\
    \ based on wake-up radios combined\nwith LoRaWAN [32].\nFigure 7 depicts the MATOPIBA\
    \ scenario where cloud and fog software components of the\nSWAMP Platform are\
    \ based on the SWAMP architecture (Figure 1). In order to represent different\n\
    system deployment possibilities, the picture shows two plots, where the topmost\
    \ plot uses a Field Fog\nNode (FFN) to aggregate sensor data and the bottommost\
    \ plot represents the sensors sending data\ndirectly to the Fog Hub. Currently,\
    \ both alternatives are under consideration but only one will be used\nin the\
    \ ﬁnal version of the pilot scenario.\n \nIn its simplest possible implementation,\
    \ the Field Fog Node only contains a LoRaWAN \ngateway. On the other hand, the\
    \ complexity of the communication and processing of sensor data is \ndealt with\
    \ by the Fog Hub. A LoRaWAN Gateway (located either in the FFN or in the Fog Hub)\
    \ \nforwards sensor data via a Mosquitto MQTT Broker [33] to a LoRa Server that\
    \ in turn sends the data \nto the FIWARE IoT Agent. The IoT Agent converts the\
    \ data format into NGSI, which goes to \nFIWARE Orion Context Broker. FIWARE Quantum\
    \ Leap is needed for different applications, such \nas the User Interface and\
    \ the Drone Platform. Also, a lightweight Fog Analytics component based on \n\
    simpler statistical techniques is used for computing the irrigation prescription\
    \ map whenever the \nInternet connection with the cloud is not available. \nThe\
    \ Cloud is represented with its essential components, which include a FIWARE central\
    \ \nContext Broker Orion connected (subscribed) to the Fog Orion. Complex processing,\
    \ such as \nirrigation models and analytics using smart algorithms (i.e., machine\
    \ learning), is performed in the \ncloud. FIWARE Cosmos is used for big data analytics.\
    \ Traditional models for precision irrigation, \nsuch as the FAO Penman-Monteith\
    \ method [34], are also provided and their results will be used \ntogether and\
    \ compared with machine learning algorithms for determining soil moisture. External\
    \ \ninformation such as crop yield models, weather forecasts and historical data,\
    \ is fed to the platform \nby specific NGSI Mappers. \n \nFigure 7. MATOPIBA Scenario\
    \ represented in the FIWARE-based SWAMP Platform. \n5.3. SWAMP System for the\
    \ Guaspari Pilot \nFigure 7. MATOPIBA Scenario represented in the FIWARE-based\
    \ SWAMP Platform.\nIn its simplest possible implementation, the Field Fog Node\
    \ only contains a LoRaWAN gateway.\nOn the other hand, the complexity of the communication\
    \ and processing of sensor data is dealt with\nby the Fog Hub. A LoRaWAN Gateway\
    \ (located either in the FFN or in the Fog Hub) forwards sensor\ndata via a Mosquitto\
    \ MQTT Broker [33] to a LoRa Server that in turn sends the data to the FIWARE\n\
    IoT Agent. The IoT Agent converts the data format into NGSI, which goes to FIWARE\
    \ Orion Context\nBroker. FIWARE Quantum Leap is needed for different applications,\
    \ such as the User Interface and the\nDrone Platform. Also, a lightweight Fog\
    \ Analytics component based on simpler statistical techniques\nis used for computing\
    \ the irrigation prescription map whenever the Internet connection with the cloud\n\
    is not available.\nThe Cloud is represented with its essential components, which\
    \ include a FIWARE central Context\nBroker Orion connected (subscribed) to the\
    \ Fog Orion. Complex processing, such as irrigation models\nand analytics using\
    \ smart algorithms (i.e., machine learning), is performed in the cloud. FIWARE\n\
    Cosmos is used for big data analytics. Traditional models for precision irrigation,\
    \ such as the FAO\nPenman-Monteith method [34], are also provided and their results\
    \ will be used together and compared\nwith machine learning algorithms for determining\
    \ soil moisture. External information such as crop\nyield models, weather forecasts\
    \ and historical data, is fed to the platform by speciﬁc NGSI Mappers.\n5.3. SWAMP\
    \ System for the Guaspari Pilot\nThe Guaspari scenario, depicted by Figure 8,\
    \ is a simpliﬁed version of MATOPIBA based on\nthe same SWAMP Architecture, but\
    \ using a smaller set of components. This system deployment\nSensors 2019, 19,\
    \ 276\n11 of 20\neliminates the Field Fog Node and implements a lightweight version\
    \ of the Fog Hub, only comprised\nof communication components, i.e., LoRa Gateway,\
    \ LoRa Server and Mosquitto. The processing\ncomponents that calculate the irrigation\
    \ prescription map, as well as drone-related functions are\nexecuted in the cloud.\
    \ This decision makes it less robust to disconnections but more robust against\n\
    failures of the fog components.\nSensors 2019, 19, x FOR PEER REVIEW \n11 of 21\
    \ \n \nThe Guaspari scenario, depicted by Figure 8, is a simplified version of\
    \ MATOPIBA based on the \nsame SWAMP Architecture, but using a smaller set of\
    \ components. This system deployment \neliminates the Field Fog Node and implements\
    \ a lightweight version of the Fog Hub, only \ncomprised of communication components,\
    \ i.e., LoRa Gateway, LoRa Server and Mosquitto. The \nprocessing components that\
    \ calculate the irrigation prescription map, as well as drone-related \nfunctions\
    \ are executed in the cloud. This decision makes it less robust to disconnections\
    \ but more \nrobust against failures of the fog components. \n \nFigure 8. Guaspari\
    \ Scenario represented in the FIWARE-based SWAMP Platform. \nThe IoT Agent is\
    \ placed in the cloud, where it converts specific data formats coming from \n\
    sensors and transmits them via wireless communication technologies to store them\
    \ in Orion. Unlike \nthe MATOPIBA scenario, in Guaspari the data format coming\
    \ from the field is transmitted over the \nInternet. Although the IoT Agent plays\
    \ a communication role and thus could also be placed in the \nfog, experience\
    \ has shown that sending verbose NGSI messages over the Internet impairs system\
    \ \nperformance and brings no noticeable benefits [7]. \n5.4. SWAMP Platform Scenario\
    \ for the Intercrop Pilot \nIn the Intercrop scenario, depicted by Figure 9, the\
    \ communication and storage infrastructure is \nagain a simplification of both\
    \ MATOPIBA and Guaspari scenarios, where no Fog Hub is deployed in \nthe farm\
    \ office. However, since in this case the sensor data have no route to the Internet\
    \ (and the \ncloud), it needs to reintroduce the Field Fog Node (FFN) using LoRa\
    \ Gateway and LoRa Server for \nsoil sensors and WiFi for drones and weather stations.\
    \ In this scenario the Mosquitto MQTT Broker \nis also placed in the cloud, thus\
    \ becoming the entry/exit point for all incoming and outgoing \nmessages. This\
    \ configuration of the SWAMP Platform is based on the premise that there is a\
    \ stable \ncellular connection (3G/4G) for the FFN to interact with the cloud.\
    \ In this scenario, apart from the \nFFN, the farm becomes independent of any\
    \ IT operations infrastructure for running the SWAMP \nPlatform. \nUnlike the\
    \ other pilot projects, in the Intercrop pilot the plot area is entirely dedicated\
    \ to the \nexperiments with IoT and irrigation. In other words, it means that\
    \ the freedom degree is much \nhigher and risks can be taken with less negative\
    \ consequences. Also, in this pilot the precision level \nof the irrigation is\
    \ increased since it deals with smaller and temporary crops, which requires a\
    \ more \ndetailed monitoring, irrigation and even analytics. \nFigure 8. Guaspari\
    \ Scenario represented in the FIWARE-based SWAMP Platform.\nThe IoT Agent is placed\
    \ in the cloud, where it converts speciﬁc data formats coming from sensors\nand\
    \ transmits them via wireless communication technologies to store them in Orion.\
    \ Unlike the\nMATOPIBA scenario, in Guaspari the data format coming from the ﬁeld\
    \ is transmitted over the\nInternet. Although the IoT Agent plays a communication\
    \ role and thus could also be placed in the\nfog, experience has shown that sending\
    \ verbose NGSI messages over the Internet impairs system\nperformance and brings\
    \ no noticeable beneﬁts [7].\n5.4. SWAMP Platform Scenario for the Intercrop Pilot\n\
    In the Intercrop scenario, depicted by Figure 9, the communication and storage\
    \ infrastructure is\nagain a simpliﬁcation of both MATOPIBA and Guaspari scenarios,\
    \ where no Fog Hub is deployed\nin the farm ofﬁce. However, since in this case\
    \ the sensor data have no route to the Internet (and the\ncloud), it needs to\
    \ reintroduce the Field Fog Node (FFN) using LoRa Gateway and LoRa Server for\n\
    soil sensors and WiFi for drones and weather stations. In this scenario the Mosquitto\
    \ MQTT Broker is\nalso placed in the cloud, thus becoming the entry/exit point\
    \ for all incoming and outgoing messages.\nThis conﬁguration of the SWAMP Platform\
    \ is based on the premise that there is a stable cellular\nconnection (3G/4G)\
    \ for the FFN to interact with the cloud. In this scenario, apart from the FFN,\n\
    the farm becomes independent of any IT operations infrastructure for running the\
    \ SWAMP Platform.\nUnlike the other pilot projects, in the Intercrop pilot the\
    \ plot area is entirely dedicated to the\nexperiments with IoT and irrigation.\
    \ In other words, it means that the freedom degree is much higher\nand risks can\
    \ be taken with less negative consequences. Also, in this pilot the precision\
    \ level of the\nirrigation is increased since it deals with smaller and temporary\
    \ crops, which requires a more detailed\nmonitoring, irrigation and even analytics.\n\
    Sensors 2019, 19, 276\n12 of 20\nSensors 2019, 19, x FOR PEER REVIEW \n12 of 21\
    \ \n \n \nFigure 9. Intercrop Scenario represented in the FIWARE-based SWAMP Platform.\
    \ \n5.5. SWAMP Platform Scenario for the CBEC Pilot \nThe SWAMP Platform Scenario\
    \ for the CBEC Pilot introduces a significant difference from the \nprevious ones,\
    \ as it manages both water distribution and irrigation. As such, not only the\
    \ irrigation \nprescription map for the farmers must be generated, but also the\
    \ distribution optimization plan for \nthe water distributor (i.e., CBEC). Also,\
    \ three different farms participate in the pilot. \nSimilarly to the Intercrop\
    \ Scenario (Figure 9), there is no Fog Hub and its functions are handed \nover\
    \ to the Field Fog Nodes (FFN) and the Cloud. The FFN has a simpler architecture\
    \ compared to \nthe Intercrop scenario, where the LoRa Server is placed in the\
    \ cloud, rather than in the FFN. \nAdditionally, in this scenario FIWARE components\
    \ are combined with SEPA SPARQL-based \nsemantic engine that represents information\
    \ in the RDF format and provides contextual semantic \nqueries. In FIWARE the\
    \ context is established as an entity defined in JSON NGSI format, whereas in\
    \ \nSEPA the context is a semantic query. While FIWARE Orion Context Broker notifies\
    \ all subscribers \nwhenever an entity is changed by a publisher, the SEPA engine\
    \ notifies subscribers whenever the \nresults of a semantic query is changed,\
    \ which is more powerful than a single entity. \nFigure 10 depicts the FIWARE\
    \ components already described, along with the SEPA SPARQL \nEngine, an NGSI-LD/RDF\
    \ Mapper and two additional applications, the Water Distribution User \nInterface\
    \ and the Water Distribution Optimization Models. Orion keeps its role as the\
    \ data \ndistribution center of the platform but the NGSI-LD (Linked Data) semantic\
    \ format must be \nconverted to the SEPA RDF format and vice-versa. In this scenario,\
    \ the FIWARE IoT Agent must be \nenhanced to generate NGSI-LD. \nFigure 9. Intercrop\
    \ Scenario represented in the FIWARE-based SWAMP Platform.\n5.5. SWAMP Platform\
    \ Scenario for the CBEC Pilot\nThe SWAMP Platform Scenario for the CBEC Pilot\
    \ introduces a signiﬁcant difference from the\nprevious ones, as it manages both\
    \ water distribution and irrigation. As such, not only the irrigation\nprescription\
    \ map for the farmers must be generated, but also the distribution optimization\
    \ plan for the\nwater distributor (i.e., CBEC). Also, three different farms participate\
    \ in the pilot.\nSimilarly to the Intercrop Scenario (Figure 9), there is no Fog\
    \ Hub and its functions are handed\nover to the Field Fog Nodes (FFN) and the\
    \ Cloud. The FFN has a simpler architecture compared to the\nIntercrop scenario,\
    \ where the LoRa Server is placed in the cloud, rather than in the FFN. Additionally,\n\
    in this scenario FIWARE components are combined with SEPA SPARQL-based semantic\
    \ engine that\nrepresents information in the RDF format and provides contextual\
    \ semantic queries. In FIWARE the\ncontext is established as an entity deﬁned\
    \ in JSON NGSI format, whereas in SEPA the context is a\nsemantic query. While\
    \ FIWARE Orion Context Broker notiﬁes all subscribers whenever an entity is\n\
    changed by a publisher, the SEPA engine notiﬁes subscribers whenever the results\
    \ of a semantic query\nis changed, which is more powerful than a single entity.\n\
    Figure 10 depicts the FIWARE components already described, along with the SEPA\
    \ SPARQL\nEngine, an NGSI-LD/RDF Mapper and two additional applications, the Water\
    \ Distribution User\nInterface and the Water Distribution Optimization Models.\
    \ Orion keeps its role as the data distribution\ncenter of the platform but the\
    \ NGSI-LD (Linked Data) semantic format must be converted to the\nSEPA RDF format\
    \ and vice-versa. In this scenario, the FIWARE IoT Agent must be enhanced to\n\
    generate NGSI-LD.\nSensors 2019, 19, 276\n13 of 20\nSensors 2019, 19, x FOR PEER\
    \ REVIEW \n13 of 21 \n \n \nFigure 10. CBEC Scenario represented in the FIWARE-SEPA-based\
    \ SWAMP Platform. \n6. Performance Analysis \nAs the SWAMP Platform is based on\
    \ FIWARE, the performance and scalability tradeoffs of this \nsolution must be\
    \ understood. The evaluation of the FIWARE-SEPA integration (Figure 10) requires\
    \ a \ndifferent methodology and therefore is not included. \n6.1. Experimental\
    \ Design and Research Methods \nIn order to analyze the performance and scalability\
    \ of the four SWAMP pilot scenarios, a \nFIWARE-based IoT testbed was designed.\
    \ This involves obtaining sensor data values up to the point \nwhere they are\
    \ transparently consumed by an application that can be deployed in different cloud\
    \ \nand fog configurations. Figure 11 depicts the four evaluation scenarios that\
    \ represent the pilot \nscenarios introduced in Section 4 abstracted for a testbed\
    \ evaluation. The key differences between \nthe scenarios are the placement of\
    \ the components in the cloud or fog. MATOPIBA and Guaspari, \nFigures 11a,b,\
    \ are represented as a heavyweight and lightweight fog as in Figures 7 and 8,\
    \ \nrespectively. Intercrop and CBEC, Figures 11c,d, do not have a fog infrastructure,\
    \ again because the \nLoRa components are not evaluated, as in Figures 9 and 10.\
    \ The CBEC scenario represents the three \nparticipant farms, where each one is\
    \ served by its own IoT Agent in the cloud (and a particular \ninstance of the\
    \ database), due to performance issues (explained in the results). \nThe additional\
    \ components are: \n \nSensor Simulating Environment (SenSE): SenSE [35] is an\
    \ open-source large-scale IoT sensor \ndata generator able to abstract real devices\
    \ and to model different complex scenarios, such as \nsmart farms [22]. The tool\
    \ is a traffic workload generator that emulates heterogeneous sensors \nrepresenting\
    \ tens of thousands of IoT devices sending data simultaneously via MQTT. \nAlthough\
    \ the sensors are synthetic, the traffic is real; \n \nMosquitto MQTT Broker:\
    \ Eclipse Mosquitto is an open source MQTT message broker; \n \nMongoDB: a document-oriented\
    \ NoSQL database, serving as the default Orion storage; \n \nConsumer: a special\
    \ purpose web application that subscribes in Orion and receives sensor data \n\
    from the probes. \n \nWANem Network Emulator [36]: emulates the Internet connection\
    \ for the assessment of the \nimpact of network parameters between the place where\
    \ the data is generated (in the farm,) and \nthe place it is processed (in the\
    \ cloud). \nFigure 10. CBEC Scenario represented in the FIWARE-SEPA-based SWAMP\
    \ Platform.\n6. Performance Analysis\nAs the SWAMP Platform is based on FIWARE,\
    \ the performance and scalability tradeoffs of this\nsolution must be understood.\
    \ The evaluation of the FIWARE-SEPA integration (Figure 10) requires a\ndifferent\
    \ methodology and therefore is not included.\n6.1. Experimental Design and Research\
    \ Methods\nIn order to analyze the performance and scalability of the four SWAMP\
    \ pilot scenarios,\na FIWARE-based IoT testbed was designed. This involves obtaining\
    \ sensor data values up to the point\nwhere they are transparently consumed by\
    \ an application that can be deployed in different cloud and\nfog conﬁgurations.\
    \ Figure 11 depicts the four evaluation scenarios that represent the pilot scenarios\n\
    introduced in Section 4 abstracted for a testbed evaluation. The key differences\
    \ between the scenarios\nare the placement of the components in the cloud or fog.\
    \ MATOPIBA and Guaspari, Figure 11a,b,\nare represented as a heavyweight and lightweight\
    \ fog as in Figures 7 and 8, respectively. Intercrop\nand CBEC, Figure 11c,d,\
    \ do not have a fog infrastructure, again because the LoRa components are not\n\
    evaluated, as in Figures 9 and 10. The CBEC scenario represents the three participant\
    \ farms, where\neach one is served by its own IoT Agent in the cloud (and a particular\
    \ instance of the database), due to\nperformance issues (explained in the results).\n\
    The additional components are:\n•\nSensor Simulating Environment (SenSE): SenSE\
    \ [35] is an open-source large-scale IoT sensor\ndata generator able to abstract\
    \ real devices and to model different complex scenarios, such as\nsmart farms\
    \ [22]. The tool is a trafﬁc workload generator that emulates heterogeneous sensors\n\
    representing tens of thousands of IoT devices sending data simultaneously via\
    \ MQTT. Although\nthe sensors are synthetic, the trafﬁc is real;\n•\nMosquitto\
    \ MQTT Broker: Eclipse Mosquitto is an open source MQTT message broker;\n•\nMongoDB:\
    \ a document-oriented NoSQL database, serving as the default Orion storage;\n\
    •\nConsumer: a special purpose web application that subscribes in Orion and receives\
    \ sensor data\nfrom the probes.\nSensors 2019, 19, 276\n14 of 20\n•\nWANem Network\
    \ Emulator [36]: emulates the Internet connection for the assessment of the\n\
    impact of network parameters between the place where the data is generated (in\
    \ the farm,) and\nthe place it is processed (in the cloud).\nSensors 2019, 19,\
    \ x FOR PEER REVIEW \n15 of 21 \n \n \n(a) MATOPIBA Scenario \n(b) Guaspari Scenario\
    \ \n \n \n(c) Intercrop Scenario \n(d) CBEC Scenario \nFigure 11. Pilot Scenarios\
    \ for the FIWARE Performance Analysis of the SWAMP Platform. \n6.2. Results \n\
    Figure 12 depicts the main scalability results according to the elapsed time metric\
    \ and following \nthe methodology described above. MATOPIBA, Guaspari and Intercrop\
    \ scenarios are shown in \nFigure 12a and Table 1 and CBEC scenario in Figure\
    \ 12b. These results highlight important \nobservations and findings: \n \nScalability\
    \ limits: For MATOPIBA, Guaspari and Intercrop scenarios the viable workload goes\
    \ \n10 000\ni i\nk\n10\ni\n(Fi\n12 )\nh\nl\nd i\nl\nFigure 11. Pilot Scenarios\
    \ for the FIWARE Performance Analysis of the SWAMP Platform.\nRegardless of the\
    \ location of components in the cloud or fog, the sequence of processing steps\n\
    and data ﬂow is always the same, from source (SenSE) to destination (Consumer);\
    \ (1) SenSE generates\nSensors 2019, 19, 276\n15 of 20\nsensor data and sends\
    \ it to Mosquitto; (2) IoT Agent receives data from Mosquitto, stores it in MongoDB,\n\
    translates it to NGSI, and sends it to Orion; (3) Orion receives NGSI data from\
    \ IoT Agent, updates\nentity values, stores them in MongoDB, and sends them to\
    \ Consumer; (4) Consumer receives data\nfrom Orion and computes the elapsed time\
    \ since it was generated by SenSE (a timestamp is embedded\nin the message and\
    \ physical machines are synchronized by NTP). For the MATOPIBA scenario, there\
    \ is\nan additional step, because of the cascading Orion solution, where the Cloud\
    \ Orion has to subscribe to\nthe fog Orion and the messages are then transferred\
    \ from one to the other.\nA lab testbed emulated the scenario for the experiments.\
    \ Both fog and cloud were implemented\nusing virtual machines (VM) in OpenStack.\
    \ The following standard Amazon AWS VM conﬁgurations\nwere deployed: cloud VM\
    \ equivalent to a t2.medium instance (2vCPU—4 GB of RAM) and the fog VMs\n(both\
    \ fog ﬁeld node and fog hub) equivalent to a t2.small instance (1vCPU—2 GB RAM).\
    \ The cloud\nwas composed of 6 VMs. Two different physical machines were used,\
    \ with the following conﬁguration:\nIntel(R) Xeon(R) CPU E3-1240 V2 @ 3.40 GHz—8\
    \ cores and 8 GB of RAM.\nThree categories of metrics were used in the reported\
    \ experiments:\n•\nApplication metric: The elapsed time is the average time taken\
    \ since a sensor data point is\ngenerated by SenSE until the Consumer receives\
    \ it. This metric represents how long it takes for\nsensor data to be available\
    \ to any subscribed application.\n•\nSystem metrics: CPU and RAM usage per Docker\
    \ container, which allows observing each\napplication, collected every 5 s.\n\
    •\nExperiment metrics: The duration of the experiment given by the number of replications\
    \ (because\nsome components crashed after some time) and the number of received\
    \ messages are used to\nunderstand how experiments unfolded.\nThe experiments\
    \ involved a large number of sensors, sending data every 10 min. The scenarios\n\
    were executed with four different workloads determined by the number of sensors\
    \ sending messages\nsimultaneously. For the MATOPIBA, Guaspari and Intercrop scenarios,\
    \ 1000, 5000, 10,000 and\n15,000 sensors were used. For the CBEC scenario, as\
    \ depicted by Figure 11d, the workload was tripled,\ntotaling 3000, 15,000, 30,000\
    \ and 45,000 sensors. Each experiment took 1 min and was replicated\n30 times,\
    \ totalizing 16 h of running experiments. Asymptotic conﬁdence intervals were\
    \ calculated\nwith a 99% conﬁdence level.\nThe conﬁguration of WANem captured\
    \ characteristics of a connection from a farm to a cloud\nbased on a simple experiment\
    \ that obtained the network parameters by pinging a public cloud using a\n4G connection,\
    \ which resulted in a connection of 10 Mbps with 45 ms of delay and 5 ms of jitter.\n\
    6.2. Results\nFigure 12 depicts the main scalability results according to the\
    \ elapsed time metric and following\nthe methodology described above. MATOPIBA,\
    \ Guaspari and Intercrop scenarios are shown in\nFigure 12a and Table 1 and CBEC\
    \ scenario in Figure 12b. These results highlight important observations\nand\
    \ ﬁndings:\n•\nScalability limits: For MATOPIBA, Guaspari and Intercrop scenarios\
    \ the viable workload goes\nup to 10,000 sensors transmitting packets every 10\
    \ min (Figure 12a) where an elapsed time less\nthan 1 s was observed. Under a\
    \ workload of 15,000 sensors, Table 1 shows that the elapsed time\nincreases to\
    \ dozens of seconds with a high variation.\n•\nLightweight fog = no fog: The Guaspari\
    \ and Intercrop scenario yield very similar results for\nthe elapsed time, which\
    \ reveals that from a performance point of view there is no signiﬁcant\ndifference\
    \ if the MQTT Broker is placed in the fog or in the cloud.\n•\nCascading Orion:\
    \ The elapsed time is higher for the MATOPIBA compared to the Guaspari and\nIntercrop,\
    \ caused by the two cascading Orion components, in the fog and in the cloud, according\n\
    to Figure 11a. Whenever Orion receives a message it notiﬁes all subscribers of\
    \ the involved entity.\nSensors 2019, 19, 276\n16 of 20\nIn this scenario, the\
    \ cloud Orion is a subscriber to the fog Orion, which means that in order for\
    \ the\nSubscriber to receive a message, it passes through two Orion notiﬁcation\
    \ steps, which is causing\nthe additional delay (up to one second with 10,000\
    \ sensors) and larger conﬁdence interval.\n•\nDivide and conquer: The CBEC scenario\
    \ has three farms represented by three SenSE trafﬁc\ngenerators in Figure 11d.\n\
    In order to scale up to 15,000 sensors per farm (which gives\n45,000 sensors),\
    \ the IoT Agent needed to be replicated in the cloud, each one in a new VM\nand\
    \ using a separate MongoDB instance. That solution increased the scalability for\
    \ the CBEC\nscenario, which were able not only to deal with 15,000 (which is not\
    \ viable in the other three\nscenarios), but also up to 45,000 sensors.\n \n\
    \ \nLightweight fog = no fog: The Guaspari and Intercrop scenario yield very similar\
    \ results for the \nelapsed time, which reveals that from a performance point\
    \ of view there is no significant \ndifference if the MQTT Broker is placed in\
    \ the fog or in the cloud. \n \nCascading Orion: The elapsed time is higher for\
    \ the MATOPIBA compared to the Guaspari and \nIntercrop, caused by the two cascading\
    \ Orion components, in the fog and in the cloud, \naccording to Figure 11a. Whenever\
    \ Orion receives a message it notifies all subscribers of the \ninvolved entity.\
    \ In this scenario, the cloud Orion is a subscriber to the fog Orion, which means\
    \ \nthat in order for the Subscriber to receive a message, it passes through two\
    \ Orion notification \nsteps, which is causing the additional delay (up to one\
    \ second with 10,000 sensors) and larger \nconfidence interval. \n \nDivide and\
    \ conquer: The CBEC scenario has three farms represented by three SenSE traffic\
    \ \ngenerators in Figure 11d. In order to scale up to 15,000 sensors per farm\
    \ (which gives 45,000 \nsensors), the IoT Agent needed to be replicated in the\
    \ cloud, each one in a new VM and using a \nseparate MongoDB instance. That solution\
    \ increased the scalability for the CBEC scenario, \nwhich were able not only\
    \ to deal with 15,000 (which is not viable in the other three scenarios), \nbut\
    \ also up to 45,000 sensors. \n \n \n(a) MATOPIBA, Guaspari and Intercrop \n(b)\
    \ CBEC \nFigure 12. Elapsed time: (a) MATOPIBA, Guaspari and Intercrop scenarios;\
    \ (b) CBEC. \nTable 1. Elapsed time for the MATOPIBA, Guaspari and Intercrop scenarios.\
    \ \nSensors \nMATOPIBA \nGuaspari \nIntercrop \nValue (ms) \nConf. Int. (ms) \n\
    Value (ms) \nConf. Int. (ms) \nValue (ms) \nConf. Int. (ms) \n1000 \n165.7 \n\
    0.7 \n79,3 \n1.0 \n79.9 \n1.2 \n5000 \n185.1 \n5.4 \n136.9 \n1.8 \n117.8 \n2.0\
    \ \n10,000 \n973.0 \n1229.8 \n242.4 \n18.7 \n229.3 \n21.5 \n15,000 \n17,417,0\
    \ \n11,270.6 \n18,979.5 \n11,216.7 \n66,549.9 \n11,648.9 \nThe quest for an explanation\
    \ for the scalability limits of the FIWARE components led us to \nanalyze system\
    \ and experiment metrics. Figure 13 depicts the percentage of CPU used by MongoDB\
    \ \n(a) and the total amount of RAM used by the IoT Agent for the Guaspari scenario\
    \ (b). The results are \nequivalent for the other three scenarios. When the system\
    \ is under a workload of 15,000 sensors the \nCPU used by MongoDB goes up to 86%\
    \ (+/−3) and the amount of RAM used by the IoT Agent goes \nup to 1 GB. \nTable\
    \ 2 also shows that for 15,000 sensors the experiment is finished before all the\
    \ messages are \nreceived (i.e., before 30 min). For example, in the MATOPIBA\
    \ scenario only 16 replications were \nperformed. Also, it can be observed that\
    \ the number of messages decreases for 15,000 compared to \n10,000, where it is\
    \ expected to increase. \nIt was found that the IoT Agent is crashing and causing\
    \ the experiment to be terminated \nprematurely, which happens because the IoT\
    \ Agent needs to allocate memory for the verbose NGSI \n0 \n200 \n400 \n600 \n\
    800 \n1,000 \n1,000 \n5,000 \n10,000 \nElapsed Time (ms) \nNumber of sensors \n\
    MATOPIBA \nGuaspari \nIntercrop \n0 \n50 \n100 \n150 \n200 \n250 \n300 \n350 \n\
    3 x 1,000 \n3 x 5,000 \n3 x 10,000 3 x 15,000 \nElapsed Time (ms) \nNumber of\
    \ sensors \nFigure 12. Elapsed time: (a) MATOPIBA, Guaspari and Intercrop scenarios;\
    \ (b) CBEC.\nTable 1. Elapsed time for the MATOPIBA, Guaspari and Intercrop scenarios.\n\
    Sensors\nMATOPIBA\nGuaspari\nIntercrop\nValue (ms)\nConf. Int. (ms)\nValue (ms)\n\
    Conf. Int. (ms)\nValue (ms)\nConf. Int. (ms)\n1000\n165.7\n0.7\n79.3\n1.0\n79.9\n\
    1.2\n5000\n185.1\n5.4\n136.9\n1.8\n117.8\n2.0\n10,000\n973.0\n1229.8\n242.4\n\
    18.7\n229.3\n21.5\n15,000\n17,417.0\n11,270.6\n18,979.5\n11,216.7\n66,549.9\n\
    11,648.9\nThe quest for an explanation for the scalability limits of the FIWARE\
    \ components led us to analyze\nsystem and experiment metrics. Figure 13 depicts\
    \ the percentage of CPU used by MongoDB (a) and the\ntotal amount of RAM used\
    \ by the IoT Agent for the Guaspari scenario (b). The results are equivalent\n\
    for the other three scenarios. When the system is under a workload of 15,000 sensors\
    \ the CPU used by\nMongoDB goes up to 86% (+/−3) and the amount of RAM used by\
    \ the IoT Agent goes up to 1 GB.\nTable 2 also shows that for 15,000 sensors the\
    \ experiment is ﬁnished before all the messages are\nreceived (i.e., before 30\
    \ min). For example, in the MATOPIBA scenario only 16 replications were\nperformed.\
    \ Also, it can be observed that the number of messages decreases for 15,000 compared\
    \ to\n10,000, where it is expected to increase.\nIt was found that the IoT Agent\
    \ is crashing and causing the experiment to be terminated\nprematurely, which\
    \ happens because the IoT Agent needs to allocate memory for the verbose NGSI\n\
    message whenever it receives a sensor message. There are two possible explanations\
    \ for that behavior\nthat may be considered either alternative or complementary\
    \ to each other. On the one hand, it is\nclearly unreasonable for such a program\
    \ to grow its memory up to 1 GB (up to 1.4 GB in some cases),\nwhich leads us\
    \ to assume that there is a memory leak. On the other hand, the response time\
    \ for\npublishing messages to Orion increases steeply thus increasing the number\
    \ of simultaneous NGSI\nmessages allocated inside the IoT Agent (which cannot\
    \ free the memory until it receives a conﬁrmation\nfrom Orion). In other words,\
    \ the increased response time together with a very likely memory leak are\ncausing\
    \ the IoT Agent to crash.\nSensors 2019, 19, 276\n17 of 20\n \nhand, it is clearly\
    \ unreasonable for such a program to grow its memory up to 1 GB (up to 1.4 GB\
    \ in \nsome cases), which leads us to assume that there is a memory leak. On the\
    \ other hand, the response \ntime for publishing messages to Orion increases steeply\
    \ thus increasing the number of simultaneous \nNGSI messages allocated inside\
    \ the IoT Agent (which cannot free the memory until it receives a \nconfirmation\
    \ from Orion). In other words, the increased response time together with a very\
    \ likely \nmemory leak are causing the IoT Agent to crash. \n \n \n(a) CPU used\
    \ by MongoDB \n(b) RAM used by IoT Agent \nFigure 13. System metrics for the Guaspari\
    \ Scenario: (a) CPU used by MongoDB; (b) RAM used by \nIoT Agent. \nTable 2. Experiment\
    \ Metrics: number of messages received and duration of the experiment (in \nreplications).\
    \ \nSensors \nMATOPIBA \nGuaspari \nIntercrop \nCBEC (Sensors x 3) \nRep \nMsg\
    \ \nRep \nMsg \nRep \nMsg \nRep \nMsg \n1000 \n30 \n2988 \n30 \n2992 \n30 \n2992\
    \ \n30 \n8962 \n5000 \n30 \n14,867 \n30 \n14,850 \n30 \n14,838 \n30 \n44,247 \n\
    10,000 \n30 \n29,225 \n30 \n29,534 \n30 \n29,532 \n30 \n42,020 \n15,000 \n16 \n\
    24,826 \n21 \n28,811 \n27 \n29,212 \n27 \n45,647 \nThe analysis of these results\
    \ leads us to conclude that the key bottleneck of the FIWARE \nPlatform is MongoDB,\
    \ which is not a surprise whatsoever, since its performance constraints are \n\
    widely known [37]. In the sequence what happens is that MongoDB delays Orion,\
    \ which in turn \ndelays IoT Agent, which as the weak link grows its memory up\
    \ to a point where a crash is \nunavoidable. \n7. Discussion \nThe main purpose\
    \ of SWAMP is to build an IoT platform for precision irrigation in agriculture\
    \ \nfocusing on different challenges, such as adaptability, deployment, complexity,\
    \ and information \nmodel: \nAdaptability: The platform must be flexible enough\
    \ to adapt to different scenarios while \nkeeping the human effort at a minimum\
    \ level. As shown in this paper, the four SWAMP pilots \nprovide enough diversity\
    \ to assist us in understanding the levels of generality and specificity to be\
    \ \nprovided by different software components. Initially we identified three levels\
    \ of components \nregarding a generality/specificity scale (fully replicable,\
    \ fully customizable and application-specific) \nand intuitively placed them in\
    \ relevant layers of the architecture. However, experience shows new \ntradeoffs,\
    \ such as the generality of a component for collecting sensor data, like the FIWARE\
    \ IoT \nAgent, which must deal with different combinations of data formats of\
    \ sensors and wireless \ntechnologies. \n0 \n20 \n40 \n60 \n80 \n100 \n1,000 \n\
    5,000 \n10,000 \n15,000 \nCPU (%) \nNumber of sensors \n0.0 \n0.2 \n0.4 \n0.6\
    \ \n0.8 \n1.0 \n1.2 \n1,000 \n5,000 \n10,000 \n15,000 \nRAM  (GB) \nNumber of\
    \ sensors \nFigure 13. System metrics for the Guaspari Scenario: (a) CPU used\
    \ by MongoDB; (b) RAM used by\nIoT Agent.\nTable 2. Experiment Metrics: number\
    \ of messages received and duration of the experiment (in replications).\nSensors\n\
    MATOPIBA\nGuaspari\nIntercrop\nCBEC (Sensors × 3)\nRep\nMsg\nRep\nMsg\nRep\nMsg\n\
    Rep\nMsg\n1000\n30\n2988\n30\n2992\n30\n2992\n30\n8962\n5000\n30\n14,867\n30\n\
    14,850\n30\n14,838\n30\n44,247\n10,000\n30\n29,225\n30\n29,534\n30\n29,532\n30\n\
    42,020\n15,000\n16\n24,826\n21\n28,811\n27\n29,212\n27\n45,647\nThe analysis of\
    \ these results leads us to conclude that the key bottleneck of the FIWARE Platform\
    \ is\nMongoDB, which is not a surprise whatsoever, since its performance constraints\
    \ are widely known [37].\nIn the sequence what happens is that MongoDB delays\
    \ Orion, which in turn delays IoT Agent, which\nas the weak link grows its memory\
    \ up to a point where a crash is unavoidable.\n7. Discussion\nThe main purpose\
    \ of SWAMP is to build an IoT platform for precision irrigation in agriculture\n\
    focusing on different challenges, such as adaptability, deployment, complexity,\
    \ and information model:\nAdaptability: The platform must be ﬂexible enough to\
    \ adapt to different scenarios while keeping\nthe human effort at a minimum level.\
    \ As shown in this paper, the four SWAMP pilots provide\nenough diversity to assist\
    \ us in understanding the levels of generality and speciﬁcity to be provided\n\
    by different software components. Initially we identiﬁed three levels of components\
    \ regarding a\ngenerality/speciﬁcity scale (fully replicable, fully customizable\
    \ and application-speciﬁc) and intuitively\nplaced them in relevant layers of\
    \ the architecture. However, experience shows new tradeoffs, such as\nthe generality\
    \ of a component for collecting sensor data, like the FIWARE IoT Agent, which\
    \ must deal\nwith different combinations of data formats of sensors and wireless\
    \ technologies.\nDeployment: A variety of factors inﬂuence the design choices\
    \ for deployment alternatives of\nvarious fog/cloud conﬁguration scenarios: (a)\
    \ the stability and robustness of the Internet connection\nin the farm area, which\
    \ in some cases faces frequent disconnections that must be dealt with, such as\
    \ in\nthe Brazilian MATOPIBA pilot; (b) the availability of resources and interest\
    \ of farmers in maintaining\nan in-house fog-based IoT system in operation with\
    \ associated service level guarantees similar to a\ncloud environment, compared\
    \ to the disruptions caused by cloud intermittent access; (c) the capacity\nand\
    \ dependability of the fog nodes; (d) the use of LPWAN technologies for collecting\
    \ sensor data\nthat might require some minimum farm level infrastructure, such\
    \ as LoRaWAN, or relying on some\nyet-to-be-deployed or limited coverage public\
    \ service, such as NB-IoT or Sigfox [28]. There is no\n“one size ﬁts all” in IoT\
    \ systems for precision irrigation, which makes the case for ﬁnding different\
    \ ways\nof conﬁguring and connecting software components in cloud- and fog-based\
    \ deployments. The need\nSensors 2019, 19, 276\n18 of 20\nfor an automated mechanism\
    \ for system deployment, given different requirements, infrastructures\nand constraints\
    \ was identiﬁed and it is currently handled within the project, but this is out\
    \ of the scope\nof this paper.\nScalability: Currently, most open IoT-based systems\
    \ that report results are proof-of-concept\npilots or small-scale IoT-based services.\
    \ Currently there is no de facto IoT Platform even though\nthere are many candidates,\
    \ including commercial solutions such as Amazon AWS IoT and Google\nCloud IoT.\
    \ FIWARE was adopted as the underlying IoT platform for the most common functions\n\
    of data distribution and storage. However, as our performance analysis revealed,\
    \ FIWARE still\nneeds signiﬁcant improvements to become a scalable solution for\
    \ extreme scenarios with heavy data\ngeneration. For example, the CBEC consortium\
    \ provides irrigation water for about 5000 farms and in\norder for the optimization\
    \ of water distribution to succeed they will need everything to be dealt with\n\
    by a single platform. For sure these large scenarios will require a considerable\
    \ number of devices that\nwill stress the platform even more than our experiments.\n\
    Complexity: There is a tradeoff in terms of dealing with complexity when it comes\
    \ to developing\nIoT-based applications. The approach taken in the CBEC scenario\
    \ is based on a hybrid solution that\ncombines a FIWARE-enabled context broker\
    \ and a semantic engine based on the linked data ontology\nmodel. While FIWARE\
    \ Orion Context Broker notiﬁes all subscribers whenever an entity is changed by\n\
    a publisher, the SEPA engine notiﬁes subscribers whenever the results of a semantic\
    \ query is changed,\nwhich is more powerful than a single entity. This conﬁguration\
    \ of the SWAMP Platform allows us to\ncompare a solution where the context broker\
    \ is simpler and the complexity dwells in the applications\n(FIWARE) to a solution\
    \ where the context broker is more complex and thus the applications can be\n\
    simpler (SEPA).\n8. Conclusions\nThe emergence of IoT is a phenomenon that owes\
    \ to the conjunction of several factors and now\nstarts to become real with huge\
    \ effort both in research and business areas. In this context, the SWAMP\nproject\
    \ develops IoT-based methods for smart water management in precision irrigation,\
    \ and pilots\nthem in Italy, Spain, and Brazil. This paper introduced the SWAMP\
    \ architecture, pilots and deployment\nscenarios for the four pilots using FIWARE\
    \ as the underlying IoT platform.\nA performance analysis of key FIWARE components\
    \ personalized for each SWAMP pilot scenario\nwas undertaken to understand the\
    \ scalability limits of the system. The results show that this platform\nmight\
    \ be able to deal with the performance requirements of our pilots, even though\
    \ requiring specially\ndesigned deployment conﬁgurations and the re-engineering\
    \ of some components to provide higher\nscalability using less computational resources.\
    \ Particularly, our experiments showed that MongoDB is\nCPU greedy, which negatively\
    \ impacts system performance.\nSWAMP is an ongoing project and therefore there\
    \ are multiple paths for future work. Some\nexamples are improving the platform\
    \ deployment scenarios, reporting the overall working of the\nSWAMP approach in\
    \ the pilots, including the experience with irrigation models and analytics and\n\
    more advanced performance analysis.\nAuthor Contributions: SWAMP is a collaborative\
    \ project and therefore concepts, architecture, platform, pilots\nand deployment\
    \ of the solution are an ongoing effort developed by many hands. Particularly,\
    \ C.K. led the writing\nand the design of the performance analysis, J.-P.S. and\
    \ M.T. contributed to the architecture design and to the\nIntercrop pilot, R.D.\
    \ and R.F.M. contributed to the design of the platform scenarios based on FIWARE,\
    \ T.S.C.\ncontributed to the CBEC pilot and to the integration of FIWARE with\
    \ SEPA, A.T. contributed to the CBEC pilot\nand with knowledge about irrigation\
    \ and models, and A.T.N. contributed to the MATOPIBA and Guaspari pilots,\nas\
    \ well as in development and integration of sensors using LoRaWAN. C.K., J.-P.S.,\
    \ M.T., R.D., A.T., T.S.C., R.F.M.\nand A.T.N. reviewed the paper.\nFunding: This\
    \ research has been jointly funded by the European Commission in Europe and MCTIC/RNP\
    \ in\nBrazil, under the EUB-02-2017 IoT Pilots call.\nAcknowledgments: Authors\
    \ would like to thank the effort of all SWAMP members, the pilot site owners and\n\
    especially Alexandre Heideker, Dener Silva and Ivan Zyrianoff who ran the performance\
    \ analysis experiments.\nSensors 2019, 19, 276\n19 of 20\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nReferences\n1.\nFAO. AQUASTAT:\
    \ Water Uses. 2016. Available online: http://www.fao.org/nr/water/aquastat/water_use\n\
    (accessed on 5 January 2019).\n2.\nAtzori, L.; Iera, A.; Morabito, G. The Internet\
    \ of Things: A survey. Comput. Netw. 2010, 54, 2787–2805.\n[CrossRef]\n3.\nKamienski,\
    \ C.; Jentsch, M.; Eisenhauer, M.; Kiljander, J.; Ferrera, E.; Rosengren, P.;\
    \ Thestrup, J.; Souto, E.;\nAndrade, W.; Sadok, D. Application Development for\
    \ the Internet of Things: A Context-Aware Mixed\nCriticality Systems Development\
    \ Platform. Comput. Commun. 2017, 104, 1–16. [CrossRef]\n4.\nKamienski, C.; Soininen,\
    \ J.P.; Taumberger, M.; Fernandes, S.; Toscano, A.; Salmon, T.; Filev, R.; Torre,\
    \ A.\nSWAMP: An IoT-based Smart Water Management Platform for Precision Irrigation\
    \ in Agriculture.\nIn Proceedings of the IEEE Global IoT Summit 2018 (GIoTS’18),\
    \ Bilbao, Spain, 4–7 June 2018.\n5.\nFIWARE. FIWARE Open Source Platform. Available\
    \ online: www.ﬁware.org (accessed on 5 January 2019).\n6.\nRofﬁa, L.; Azzoni,\
    \ P.; Aguzzi, C.; Viola, F.; Antoniazzi, F.; Salmon Cinotti, T. Dynamic Linked\
    \ Data: A SPARQL\nEvent Processing Architecture. Future Int. 2018, 10, 36. [CrossRef]\n\
    7.\nKamienski, C.; Kleinschmidt, J.; Soininen, J.P.; Kolehmainen, K.; Rofﬁa, L.;\
    \ Visoli, M.; Maia, R.F.; Fernandes, S.\nSWAMP: Smart Water Management Platform\
    \ Overview and Security Challenges. In Proceedings of the\nIEEE/IFIP International\
    \ Conference on Dependable Systems and Networks (DSN 2018), Luxembourg,\n25–28\
    \ June 2018.\n8.\nAhanger, T.A.; Aljumah, A. Internet of Things: A Comprehensive\
    \ Study of Security Issues and Defense\nMechanisms. IEEE Access 2018. [CrossRef]\n\
    9.\nDoron, L. Flexible and Precise Irrigation Platform to Improve Farm Scale Water\
    \ Productivity. Impact\n2017, 2017, 77–79. [CrossRef]\n10.\nPopovi´c, T.; Latinovi´c,\
    \ N.; Peši´c, A.; Zeˇcevi´c, Ž.; Krstaji´c, B.; Djukanovi´c, S. Architecting an\
    \ IoT-enabled\nplatform for precision agriculture and ecological monitoring: A\
    \ case study. Comput. Electron. Agric. 2017, 140,\n255–265. [CrossRef]\n11.\n\
    Kamilaris, A.; Gao, F.; Prenafeta-Boldu, F.X.; Ali, M.I. Agri-IoT: A semantic\
    \ framework for Internet of\nThings-enabled smart farming applications. In Proceedings\
    \ of the 2016 IEEE 3rd World Forum on Internet of\nThings (WF-IoT), Reston, VA,\
    \ USA, 12–14 December 2016.\n12.\nBrewster, C.; Roussaki, I.; Kalatzis, N.; Doolin,\
    \ K.; Ellis, K. IoT in Agriculture: Designing a Europe-Wide\nLarge-Scale Pilot.\
    \ IEEE Comm. Mag. 2017, 55, 26–33. [CrossRef]\n13.\nRodriguez, M.; Cuenca, L.;\
    \ Ortiz, A. FIWARE Open Source Standard Platform in Smart Farming—A Review.\n\
    In Working Conference on Virtual Enterprises; Springer: Cham, Switzerland, 2018.\n\
    14.\nLópez-Riquelme, J.A. A software architecture based on FIWARE cloud for Precision\
    \ Agriculture. Agric. Water\nManag. 2017, 183, 123–135. [CrossRef]\n15.\nBonomi,\
    \ F.; Milito, R.; Natarajan, P.; Zhu, J. Fog computing: A platform for Internet\
    \ of Things and analytics.\nIn Big Data and Internet of Things: A Roadmap for\
    \ Smart Environments; Springer: Cham, Switzerland, 2014.\n16.\nMorabito, R.; Kjällman,\
    \ J.; Komu, M. Hypervisors vs.\nLightweight Virtualization: A Performance\nComparison.\
    \ In Proceedings of the IEEE International Conference on Cloud Engineering (IC2E\
    \ 2015),\nTempe, AZ, USA, 9–13 March 2015; pp. 386–393.\n17.\nCheng, B.; Solmaz,\
    \ G.; Cirillo, F.; Kovacs, E.; Terasawa, K.; Kitazawa, A. FogFlow: Easy Programming\
    \ of IoT\nServices Over Cloud and Edges for Smart Cities. IEEE Int. Things J.\
    \ 2018, 5, 696–707. [CrossRef]\n18.\nOpen Mobile Alliance.\nNGSI Requirements,\
    \ OMA-RD-NGSI-V1_0.\nAvailable online: http://www.\nopenmobilealliance.org (accessed\
    \ on 5 January 2019).\n19.\nBizer, C.; Heath, T.; Berners-Lee, T. Linked Data:\
    \ The Story So Far. In Semantic Services, Interoperability and\nWeb Applications:\
    \ Emerging Concepts; IGI Global, 2011; pp. 205–227. Available online: https://www.igi-global.\n\
    com/chapter/linked-data-story-far/55046 (accessed on 10 January 2019).\n20.\n\
    Miller, E. An Introduction to the Resource Description Framework. Bull. Am. Soc.\
    \ Inf. Sci. Technol. 2018, 25,\n15–19. [CrossRef]\nSensors 2019, 19, 276\n20 of\
    \ 20\n21.\nETSI. NGSI-LD: Context Information Management (CIM) and Application\
    \ Programming Interface (API).\nETSI GS CIM 004 V1.1.1. April 2018. Available\
    \ online: https://www.etsi.org/deliver/etsi_gs/CIM/001_\n099/004/01.01.01_60/gs_cim004v010101p.pdf\
    \ (accessed on 5 January 2019).\n22.\nZyrianoff, I.; Borelli, F.; Biondi, G.;\
    \ Heideker, A.; Kamienski, C. Scalability of Real-Time IoT-based\nApplications\
    \ for Smart Cities. In Proceedings of the IEEE Symposium on Computers and Communications\n\
    (ISCC 2018), Natal, Brazil, 25–28 June 2018.\n23.\nda Cruz, M.A.; Rodrigues, J.J.;\
    \ Sangaiah, A.K.; Al-Muhtadi, J.; Korotaev, V. Performance Evaluation of IoT\n\
    Middleware. J. Netw. Comp. Appl. 2018, 109, 53–65. [CrossRef]\n24.\nMartínez,\
    \ R.; Pastor, J.Á.; Álvarez, B.; Iborra, A. A Testbed to Evaluate the FIWARE-based\
    \ IoT Platform in\nthe Domain of Precision Agriculture. Sensors 2016, 16, 1979.\
    \ [CrossRef] [PubMed]\n25.\nZyrianoff, I.; Heideker, A.; Silva, D.; Kamienski,\
    \ C. Scalability of an Internet of Things Platform for Smart\nWater Management\
    \ for Agriculture. In Proceedings of the Workshop on Advances in IoT based methods\
    \ for\nSmart Water Distribution and Management in Agriculture (IMSA 2018), Bologna,\
    \ Italy, 13–16 November 2018.\n26.\nPﬁsterer, D.; Romer, K.; Bimschas, D.; Kleine,\
    \ O.; Mietz, R.; Truong, C.; Hasemann, H.; Kröller, A.; Pagel, M.;\nHauswirth,\
    \ M.; et al. SPITFIRE: Toward a Semantic Web of Things. IEEE Commun. Mag. 2011,\
    \ 49, 40–48.\n[CrossRef]\n27.\nW3C. SPARQL 1.1 Overview. W3C Recommendation. 21\
    \ March 2013. Available online: http://www.w3.\norg/TR/2013/REC-sparql11-overview-20130321\
    \ (accessed on 5 January 2019).\n28.\nMekki, K.; Bajic, E.; Chaxel, F.; Meyer,\
    \ F. A comparative study of LPWAN technologies for large-scale IoT\ndeployment.\
    \ ICT Express 2018. [CrossRef]\n29.\nOASIS. MQTT Version 5.0. OASIS Committee\
    \ Speciﬁcation 02. 15 May 2018. Available online: http:\n//docs.oasis-open.org/mqtt/mqtt/v5.0/cs02/mqtt-v5.0-cs02.pdf\
    \ (accessed on 5 January 2019).\n30.\nLoRa Server. Available online: https://www.loraserver.io\
    \ (accessed on 5 January 2019).\n31.\nVellidis, G.; Liakos, V.; Porter, W.; Tucker,\
    \ M.; Liang, X. A Dynamic Variable Rate Irrigation Control System.\nIn Proceedings\
    \ of the 13th International Conference on Precision Agriculture, Louis, MI, USA,\
    \ 31 July–4\nAugust 2016.\n32.\nBedogni, L.; Bononi, L.; Canegallo, R.; Carbone,\
    \ F.; Di Felice, M.; Scarselli, E.F.; Montori, F.; Perilli, L.;\nCinotti, T.;\
    \ Salmon Trotta, A. Dual-Mode Wake-Up Nodes for IoT Monitoring Applications: Measurements\n\
    and Algorithms. In Proceedings of the 2018 IEEE International Conference on Communications\
    \ (ICC),\nKansas City, MO, USA, 20–24 May 2018.\n33.\nLight, R.A. Mosquitto: Server\
    \ and client implementation of the MQTT protocol. J. Open Source Softw. 2017,\
    \ 2.\n[CrossRef]\n34.\nAllen, R.G.; Pereira, L.; Raes, D.; Smith, M. Crop Evapotranspiration-Guidelines\
    \ for Computing Crop Water\nRequirements. In FAO Irrigation and Drainage Paper\
    \ 56; FAO: Rome, Italy, 1998.\n35.\nZyrianoff, I. SenSE—Sensor Simulation Environment.\
    \ GitHub Repository. 2017. Available online: https:\n//github.com/ivanzy/SenSE-Sensor-Simulation-Environment\
    \ (accessed on 5 January 2019).\n36.\nKalitay, H.K.; Nambiarz, M.K. Designing\
    \ WANem: A Wide Area Network emulator tool. In Proceedings\nof the 3rd IEEE International\
    \ Conference on Communication Systems and Networks (COMSNETS 2011),\nBangalore,\
    \ India, 4–8 January 2011.\n37.\nKlein, J.; Gorton, I.; Ernst, N.; Donohoe, P.;\
    \ Pham, K.; Matser, C. Performance Evaluation of NoSQL Databases:\nA Case Study.\
    \ In Proceedings of the 1st Workshop on Performance Analysis of Big Data Systems,\
    \ Austin, TX,\nUSA, 1 February 2015.\n© 2019 by the authors. Licensee MDPI, Basel,\
    \ Switzerland. This article is an open access\narticle distributed under the terms\
    \ and conditions of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/19/2/276/pdf?version=1547203858
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart Water Management Platform: IoT-Based Precision Irrigation for Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.2973178
  analysis: '>'
  authors:
  - Mohamed Amine Ferrag
  - Lei Shu
  - Xing Yang
  - Abdelouahid Derhab
  - Λέανδρος Μαγλαράς
  citation_count: 215
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 8 Security
    and Privacy for Green IoT-Based Agriculture: Review, Blockchain Solutions, and
    Challenges Publisher: IEEE Cite This PDF Mohamed Amine Ferrag; Lei Shu; Xing Yang;
    Abdelouahid Derhab; Leandros Maglaras All Authors 218 Cites in Papers 16363 Full
    Text Views Open Access Comment(s) Under a Creative Commons License Abstract Document
    Sections I. Introduction II. Green IoT-Based Agriculture III. Threat Models IV.
    Security and Privacy Solutions V. Privacy-Preserving Over Blockchain Show Full
    Outline Authors Figures References Citations Keywords Metrics Abstract: This paper
    presents research challenges on security and privacy issues in the field of green
    IoT-based agriculture. We start by describing a four-tier green IoT-based agriculture
    architecture and summarizing the existing surveys that deal with smart agriculture.
    Then, we provide a classification of threat models against green IoT-based agriculture
    into five categories, including, attacks against privacy, authentication, confidentiality,
    availability, and integrity properties. Moreover, we provide a taxonomy and a
    side-by-side comparison of the state-of-the-art methods toward secure and privacy-preserving
    technologies for IoT applications and how they will be adapted for green IoT-based
    agriculture. In addition, we analyze the privacy-oriented blockchain-based solutions
    as well as consensus algorithms for IoT applications and how they will be adapted
    for green IoT-based agriculture. Based on the current survey, we highlight open
    research challenges and discuss possible future research directions in the security
    and privacy of green IoT-based agriculture. Topic: Green Internet of Things Four-tier
    green IoT-based agriculture architecture is based on the following four layers:
    1) 260 Agriculture sensors layer; 2) Fog layer; 3) Core layer; 4) and 261 Cloud
    ...View more Published in: IEEE Access ( Volume: 8) Page(s): 32031 - 32053 Date
    of Publication: 11 February 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.2973178
    Publisher: IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this
    material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction The Internet of Things (IoT) has been applied in many areas, such
    as smart farming [1], smart home [2], wearables [3], smart city [4], connected
    health [5], connected car [6], connected drones [7], among other areas. The IoT
    allows physical objects to communicate together, share information and coordinate
    decisions. The IoT transforms traditional objects into intelligent objects by
    exploiting its enabling technologies such as communication technologies, Internet
    protocols, application, and sensor networks [8], [9]. The global smart agriculture
    market is expected to reach 15.3billionbytheendof2025comparedto 5 billion in the
    year 2016 [10]. Smart agriculture will become an important IoT application area
    in agri-products exporting countries. Recently, the IoT application has been deployed
    for smart agriculture using wireless sensor networks (WSNs) such as irrigation
    sensor network [11], prediction of frost events [12], precision soil farming [13],
    blind entity identification [14], smart farming [15], and precision agriculture
    [16]. To develop a green IoT-based agriculture solution, there are six main challenges,
    including, hardware, data analytics, maintenance, mobility, infrastructure, data
    security, and privacy [17]. The hardware challenges concern the choice of sensors
    and meters for IoT devices. Therefore, there are various kinds of sensors types
    that can be used in IoT application (e.g., temperature sensor, proximity sensor,
    pressure sensor, water quality sensor, chemical sensor, gas sensor, humidity sensor…etc.).
    The data analytics challenge concern the application of predictive algorithms
    and machine learning (e.g., deep learning approaches) in IoT data to obtain a
    nutritive solution for smart agriculture. The maintenance challenge concerns regular
    sensors checks of all IoT devices since they can be easily damaged in the agriculture
    field. The mobility challenge concerns the type of wireless communication (e.g.,
    4G, 5G, WiFi, 6LowPan, LoRa) that can connect sensors distributed over a large
    area in the agriculture field. The infrastructure challenges concern the installation
    and development of IoT networking architecture using new technologies such as
    fog computing, cloud computing, network virtualization…etc. The main problem in
    the development of green IoT-based agriculture is not located at the physical
    support but mainly in reassuring both security and privacy. With the adaption
    of green IoT-based agriculture, an adversary may find more ways to penetrate into
    the system (e.g., via a false data injection attack), raising new security and
    privacy issues and asking for more secure communications in the smart agriculture
    filed. According to Cha et al. [18], privacy-enhancing technologies in IoT application
    can be classified into seven categories, including, enforcement, control over
    data, personal data protection, anonymization or pseudonymization, partial data
    disclosure, anonymous authorization, and holistic privacy preservation. Therefore,
    security requirements [19] in IoT application can be classified into authentication,
    confidentiality, non-repudiation, integrity, and access control. These security
    and privacy requirements should be achieved by the security protocols for green
    IoT-based agriculture. There are related survey papers [9], [20]–[23] that focused
    on various aspects of IoT-based agriculture, as presented in Tab. I. Brewster
    et al. [20] presented a review on developing IoT-based large-scale pilots in agriculture.
    Ray [21] presented a systematic survey that covers the IoT deployment for improved
    farming. Recently, the surveys [22], [23] discussed the fundamental structures
    of IoT and its impact in the field of green IoT-based agriculture. However, these
    surveys are very limited regarding research challenges on security and privacy.
    In the literature, there are different related surveys that deal with IoT security.
    As shown in Table 2, we classify the IoT security surveys with respect to the
    following criteria: Threat model: It indicates whether the survey considered the
    threats against the IoT network. Security & Privacy: It indicates whether the
    survey focused considered the security and privacy countermeasures to protect
    the IoT network. Blockchain: It indicate whether the survey considered bloackanin-based
    solution for IoT security. Target IoT application: It indicates whether the survey
    focused on specific or general IoT applications. TABLE 1 Related Surveys on Green
    IoT-Based Agriculture TABLE 2 Related Surveys on IoT Security Most of the IoT
    security surveys [24]–[31] describe the required security and privacy countermeasures
    and target without focusing on any particular application. Some of them restrict
    their covered countermeasures to IoT security taxonomy [26], IoT frameworks [27],
    [30], security communication protocols [24], [25], or trust-based solutions [31].
    Some of the surveys describe the threat models that could comprise the security
    of IoT networks [26], [28], [29], [31]–[33]. Recently, blockchain-based solutions
    for IoT security have attracted more attention in [29], [34]–[36]. Kouicem et
    al. [35] present their security solutions and blockchain-based security solutions
    with respect to five IoT applications: Smart Grid, EHealth, Transportation, Smart
    city, and Manufacturing. Other surveys focused on industrial IoT [32], Smart Grid
    [37], or Smart Home [34]. To the best of our knowledge, our survey is the first
    that thoroughly covers threats models, secuirty and privacy countermeasures, blockchain-based
    solutions for IoT security, and focuses only on Green IoT-based agriculture applications.
    Our contributions in this work are: We present a four-tier green IoT-based agriculture
    architecture. We present the threat models against green IoT-based agriculture
    and provide a classification into five categories, including, attacks against
    privacy, authentication, confidentiality, availability, and integrity properties.
    We review the security and privacy solutions for IoT applications and how they
    will be adapted for green IoT-based agriculture. We analyze the privacy-oriented
    blockchain-based solutions for IoT applications and how they will be adapted for
    green IoT-based agriculture. We provide the consensus algorithms for blockchain-based
    solutions and how they will be adapted for green IoT-based agriculture. We emphasize
    the security and privacy challenges solutions for green IoT-based agriculture.
    The rest of this paper is organized as follows. Section II presents the four-tier
    green IoT-based agriculture architecture. In Section III, we present the threat
    models against green IoT-based agriculture and provide a classification into five
    categories. In Section IV, we provide the new trends of security and privacy solutions
    for green IoT-based agriculture. In Section V, we clearly highlight the pros and
    cons of the existing privacy-oriented blockchain-based solutions. Then, we discuss
    the security and privacy challenges solutions in Section VI. Lastly, Section VII
    presents conclusions. SECTION II. Green IoT-Based Agriculture Smart agriculture
    based on IoT technology has enabled farmers to improve crop yields, optimize irrigation
    efficiency, and reduce farming costs. It is an intelligent agricultural solution
    combining agriculture with modern information technology. The IoT technology has
    contributed to the emergence of the three aspects: Precision agriculture: is a
    technology which uses advanced technology to improve crop yield, among them, Wireless
    Sensor Network (WSN) is the main driver for the development of it [40]. It effectively
    reduces the potential risks in the production process and helps farmers making
    accurate and controlled farming practices by deploying a large number of low-power,
    multi-function, wireless communication sensors in environments (such as fields
    and open poultry and livestock breeding) and collecting relevant data in agricultural
    production (such as environment data, crop growth data, livestock health data
    [41]–[44]). The main modern information technology used in precision agriculture
    is “3S” technology, including Remote Sensing (RS), Geographic Information System
    (GIS) and Global Positioning System (GPS). The most remarkable application of
    GPS in precision agriculture is agricultural drones, they are used in the agriculture
    industry to enhance the different farming practices [45]. The ground and aerial
    drones are used for assessment of crop health, crop monitoring, planting, crop
    spraying, and field analysis. Furthermore, with the integration of IoT and “3S”
    technology in open poultry and livestock breeding, it is possible to collection
    information about the location and health of cattle by attaching sensors to them,
    which allows to identify sick cattle and isolated them. The farmers can also reduce
    time and effort needed to locate their animals [46]. Generally, Precision agriculture
    constructs an expert decision system for agriculture production management to
    replace the subjective traditional agricultural production management method,
    thereby, (1) reasonable using of pesticides to reduce environmental pollution;
    (2) improving the efficiency of agricultural irrigation and reducing the waste
    of resources; (3) Planting crops in an environment suitable for their growth,
    improving the land usage; (4) analyzing the growth law of crops and livestock,
    maintaining their best growth state and greatly improving the output and quality
    of agricultural products. Facility agriculture: is an industrialized agricultural
    production mode that aims at good quality and high yield, belongs to a high-input,
    high-output, capital-intensive, technology-intensive and labor-intensive industry
    [47]. It provides a crop production protection facility created by engineering
    technology to achieve the goal that agricultural production is not restricted
    by environmental factors and automatic and efficient; frees traditional agriculture
    from the shackles of nature; breaks the seasonal characteristics of traditional
    agricultural products; meets the multi-level consumption demand derived from social
    development [48]. Facility agriculture can be divided into facility horticulture
    and farming in terms of types, they mainly use biotechnology, engineering, meteorological
    environment, IoT, computer technology and other technologies. Its core lies in
    the prediction model and decision management control system based on the historical
    data collected by IoT sensors. Facility agriculture has become a mainstay industry
    in some developed countries such as America, Netherlands and Japan, the most prominent
    example is the intelligent greenhouse. IoT sensors can be used to automatically
    monitor and control the internal climate parameters of the greenhouse [49]. The
    sensors collect and transmit real-time data to the farmer. If the values of parameters
    deviate from normal condition, some actions like automatic irrigation can be performed
    without, which helps in reducing the labor cost as no human intervention is needed.
    Aquaculture, poultry and livestock farming are similar with it, the difference
    is different environment factors require deployment of different IoT sensors and
    set up specific computer control cultivation schemes. The current development
    goal of facility agriculture is intelligent plant factory, it enables continuous
    and efficient crop production under fully enclosed and intelligent control conditions.
    Moreover, it frees crop growth from geographical constraints, shortens the production
    cycle of agricultural products and improves product quality and yield. It is one
    of the symbols of the combination of agriculture and industry, and also the development
    direction of agriculture in the future. Contract farming: is a new model of agricultural
    production and management. With the advancement of Urbanization in the world,
    the gap between rural and urban development is gradually widening. According to
    the statistics, 80% of the extreme poor and 75% of the moderate poor live in rural
    areas [50]. Relatively backward agricultural infrastructure, hidden dangers in
    the quality and safety of agricultural products and information isolation in agricultural
    products trading are the main reasons. To solve these problems, contract farming
    emerges as the times require. It outsources the production demand of some agricultural
    products to farmers in advance through customers, reduces the planting and breeding
    risks of growers and avoid blind production, is an effective market-oriented production
    and marketing model [51]. Contract farming includes supply chain management of
    agricultural products, traceability of agricultural products safety, agricultural
    products trading system, agricultural products logistics and the like. The IoT
    technology has been used in tracking the food supply chain (i.e., farm-to-fork
    traceability) [52]. For example, it has been employed to provide information about
    the product to the final consumer [53]. An IoT framework is proposed in [] to
    assess the freshness of fruits in e-commerce deliveries. In [54], IoT is used
    to monitor food safety throughout the product life cycle, in order to help consumers
    in making better purchase decisions. In [55], an early-warning system, which monitors
    food safety and warns about deterioration of product quality, is proposed. An
    IoT-based monitoring system is developed in [56] to provide geo-location information
    about food storage and transportation. Fig. 1 illustrates the four-tier green
    IoT-based agriculture architecture, which is based on the following four layers:
    1) Agriculture sensors layer; 2) Fog layer; 3) Core layer; 4) and Cloud layer.
    The layers are discussed as follows: FIGURE 1. Four-tier green IoT-based agriculture
    architecture. Show All A. Agriculture Sensors Layer This layer consists of IoT-enabled
    devices (e.g., sensor nodes, smartphones, …etc.) equipped with Global Positioning
    System for creating different types IoTs for smart agriculture, including, IoTs
    for field agriculture, IoTs for the greenhouse, IoTs for the photovoltaic farm,
    IoTs for the solar insecticidal lamp, and others. Therefore, the integration and
    adaptation of IoT devices into various levels of agriculture aim to provide two
    goals. The first goal is to provide the reliability of manufacture as well as
    the distribution of the nutrient solution. The second goal is to provide better
    control in term of consumption, which gives the costs low and reduces losses in
    term of solution. In addition to the economic impact, the environmental impact
    will be significantly reduced. The farmer in the green IoT-based agriculture uses
    a digital control system (e.g., Supervisory Control And Data Acquisition (SCADA))
    for process control to meet agriculture control requirements. To integrate IoTs
    for greenhouse, we propose the sensor and meters nodes for each equipment as follows:
    IoT devices for the water pumping system which takes into consideration the surfaces
    to be irrigated, the pressures to be expected, and the flow rates of drippers.
    Water meters for water storage in order to show real-time updates. IoT devices
    adapted for each filtering equipment (e.g., sand filter) which takes into consideration
    the physical properties of water as well as drippers. Fertilizers meters for the
    storage and injectors of fertilizers (e.g., NPK fertilizers) in order to provide
    real-time updates. IoT devices for controlling the pH and electrical conductivity
    to meet the desired value in term of nutrient solution. Small solar panels with
    IoT sensors for controlling moisture levels and temperature. These IoT devices
    and meters communicate via 5G cellular and satellite communication networks with
    the fog computing layer. B. Fog Computing Layer Since some agriculture IoT data
    need to be processed closer to IoT devices and meters, the fog computing layer
    is proposed especially for this task, which can significantly reduce the processing
    time. This layer is also termed as Edge computing layer. The fog nodes receive
    agriculture IoT data via geo-distributed devices that are managed in a distributed
    network, including, access points, gateway, router, and switch. The fog computing
    layer provides several advantages, such as reduces the traffic overhead and reinforcement
    of agriculture IoT data security [57]. Therefore, there are three hierarchical
    architectures [58] that can be used for fog computing layer in the green IoT-based
    agriculture. The first hierarchical architecture is three-tier (including, Tier
    1-Things/End Devices, Tier 2-Fog, Tier 2-Cloud), which is the basic architecture
    of fog computing. The second hierarchical architecture is four-tier combined fog-cloud
    architecture [59]. The last hierarchical architecture is based on Software-Defined
    Networking (SDN) [60]. For example in the IoT use case in greenhouse, the nutrient
    solution can be processed and calculated at the fog computing layer. This nutrient
    solution uses the IoT data (e.g., the composition of water, temperature, and humidity)
    captured from the agriculture sensors layer. C. Core Network Layer The core layer
    is responsible for the transport of data over green IoT-based agriculture from
    fog computing layer to cloud computing layer. This layer is also termed as the
    foundation or backbone network. To ensure that packets are securely routed over
    the network, the core layer includes high-speed cables (e.g., fiber optic cables)
    and high-end switches (e.g., Cisco switches 12000) [61]. In addition, the core
    network layer is responsible for routing by delivering a strategies-based network
    interconnection such as strategy of QoS, strategy of control broadcast and multicast…etc.
    D. Cloud Computing Layer This layer is a centralized system consists of data centers
    and traditional cloud servers, which they have sufficient computing resources
    and sufficient storage. The cloud computing layer is responsible for delivering
    storage, data access, and synchronization [62]. SECTION III. Threat Models Generally,
    the classification of attacks for IoT application is done using the following
    two criteria: 1) Internal or external and 2) Passive or active, as discussed in
    [19]. Therefore, according to the property that the attack trying to compromise
    nodes in green IoT-based agriculture (i.e., IoT devices, Fog nodes, and Cloud
    nodes), we classify the threat models into the following five main categories,
    attacks against privacy, authentication, confidentiality, availability, and integrity
    properties, as presented in Fig. 2. FIGURE 2. Threat models in green IoT-based
    agriculture. Show All FIGURE 3. The blockchain data structure. Show All FIGURE
    4. An illustration of blockchain working methodology for green IoT-based agriculture
    architecture. Show All FIGURE 5. Blockchain-based solutions for green IoT-based
    agriculture. BPKI: Blockchain-based PKI solution; BML: Blockchain-based machine
    learning solution; BDKM: Blockchain-based distributed key management solution;
    BAC: Blockchain-based access control solution; BRT: Blockchain-based reputation
    and trust solution; BAI: Blockchain-based authentication and identification solution;
    BSDN: Blockchain-based secure SDN solution. Show All FIGURE 6. The consensus process
    based on the practical Byzantine fault tolerance (PBFT) algorithm for blockchain-based
    agri-products distribution. Show All A. Attacks Against Privacy This category
    of attacks is based on learning the precise location and identity of IoT devices
    at agriculture sensors layer to get privacy data and compromise the privacy of
    the system. In green IoT-based agriculture, the IoT data (e.g., the composition
    of water, temperature, and humidity) is collected multiple times per hour by IoT
    devices and smart meters at agriculture sensors layer to obtain fine-grained information
    about the plants status and improve nutrient solution efficiency. The detailed
    analysis of this IoT data may easily reveal farmers’ physical activities and the
    nutrient solution adopted. For example, in pH settings, if the pH rises excessively
    indicates that the farmer will increase the ammonium supply, and if the pH falls
    indicates that the farmer will reduce the ammonium supply. Using this information,
    an adversary can plan physical attacks (e.g., sending a drone) to disrupt pH settings.
    Obviously, this private information (i.e. pH settings) must be protected from
    unauthorized access. B. Attacks Against Authentication This category of attacks
    forges identities to impersonate as authorized nodes (i.e., IoT device, fog node,
    or cloud node) in order to gain access to the green IoT-based agriculture. For
    example, an adversary may lunch the following identity-based attacks for forge
    identities, namely, replay attack, masquerade attack, spoofing attack, and impersonation
    attack. A replay attack takes place in the form of man-in-the-middle attack (MITM).
    Its objectives in the green IoT-based agriculture are to intercepting data packets
    between IoT devices or an IoT device with an access point at agriculture sensors
    layer and then relaying them to their destinations without modification. The authentication
    protocols for securing IoT networks use three techniques against replay attacks,
    namely, pairing-based cryptography, hash functions, and timestamp in the encrypted
    data, as discussed in [19]. A masquerade attack aims to masquerade as a legitimate
    node to log into the server at agriculture sensors layer (i.e., log into the access
    point) or fog computing layer (i.e., log into the fog node). The authentication
    protocols for securing IoT networks use three techniques against masquerade attacks,
    namely, 1) behavioral features-based biometric (e.g., keystroke, signature, gait,
    or voice), 2) human physiological-based biometric (e.g., fingerprint palm, electrocardiogram,
    eyes, or face), 3) hashing functions, 4) Elliptic curve cryptosystem, and 5) pairing-based
    cryptography [63]. C. Attacks Against Confidentiality This category of attacks
    attempts to adversarially eavesdrop the network traffic between IoT devices or
    an IoT device with an access point at agriculture sensors layer so as to mislead
    the green IoT-based agriculture to compromise the confidentiality and make wrong
    decisions/actions. For example, an adversary may lunch the following Eavesdropping-based
    attacks to compromise the confidentiality, including, tracing attack, brute force
    attack, and known-key attack. A tracing attack aims to collect enough privacy
    information from IoT devices at agriculture sensors layer to link data with a
    particular real identity. To resist this attack, security solutions based on random
    numbers in commitments and proofs ought to be developed [64]. A brute force attack
    aims to produce a list of all possible passwords that can be used by IoT devices
    at agriculture sensors layer, then to exhaust them one by one until the correct
    password can be identified [65]. A known-key attack aims to generate new session
    keys based on compromising past session keys. To resist this attack, security
    solutions that integrate random nonce in session key ought to be developed. D.
    Attacks Against Availability This category takes the form of Denial of Service
    (DoS) attacks. Its goals are to make the services in green IoT-based agriculture
    (e.g., authentication for IoT devices) are unavailable either by (1) flooding
    servers with a huge amount of data to make it busy and unable to provide a service
    to IoT devices; (2) updating with false data injection attacks; or (3) attack
    on accurate localization for UAV with a malicious 5G station. E. Attacks Against
    Integrity This category of attacks implies an unauthorized party to accessing
    and modifying private information (e.g. pH settings). Under this category, we
    can find the following attacks: forgery attack, man-in-the-middle (MITM) attack,
    biometric template attack, and trojan horse attack. To resist this attack, the
    data aggregation schemes based on homomorphic encryption and hash functions ought
    to be developed. SECTION IV. Security and Privacy Solutions Table 3 summarizes
    research for security and privacy solutions for IoT applications and how they
    will be adapted for green IoT-based agriculture. TABLE 3 Summary of Security and
    Privacy Solutions for IoT Applications and How They Will be Adapted for Green
    IoT-Based Agriculture A. Privacy-Preserving Solutions 1) Privacy-Preserving Data
    Aggregation During running the aggregation at the network edge in green IoT-based
    agriculture, the fog devices cannot see each green product data. The privacy-preserving
    data aggregation solution is very important to protect each green IoT device’s
    data. To resist against inject false data, Lu et al. [70] proposed a lightweight
    privacy-preserving data aggregation solution, named LDPA, for IoT applications,
    which can be applied in green IoT-based agriculture. The LDPA combines three cryptographic
    techniques, namely, the homomorphic Paillier encryption Chinese Remainder Theorem,
    and one-way hash chain. The Chinese remainder theorem is used by the control center
    for computing the mean and variance after collecting, aggregating, and forwarding
    IoT devices’ data from the network edge to the control center. The homomorphic
    Paillier encryption is used for encryption the report of each sensing data from
    each IoT device. The one-way hash chain technique is used for achieving lightweight
    authentication among IoT devices. Therefore, the LDPA solution can resist against
    the false data injection since the one-way hash chain technique as well as the
    time slot are adapted in authentication phase between the fog device and IoT device.
    In addition, the LDPA solution can achieve differential privacy since some noises
    are added in the aggregated data. Guan et al. [75] introduced an anonymous and
    privacy-preserving data aggregation protocol, named APPA, for IoT application.
    The system model considers Fog-enhanced IoT, which contains three layers, namely,
    the lower layer (smart devices), middle layer (Fog nodes), and Upper layer (Cloud
    Computing). To archives anonymity and unforgeability, the APPA protocol uses two
    cryptographic techniques, namely, signature-of-knowledge and paillier cryptosystem.
    The APPA protocol can resist eavesdropping attack and false data injection attack,
    but the availability is not considered. 2) Location Privacy Location-based services
    (LBS) in green IoT-based agriculture will have a very important area for research
    with the rapid development of smart agriculture. Therefore, an adversary can track
    IoT devices in smart agriculture, which may cause problems of loss of privacy.
    Sun et al. [69] proposed a location privacy algorithm for IoT application, which
    can be adapted for green IoT-based agriculture. To protect location privacy, the
    study uses a dummy location privacy algorithm, which consists of finding an optimal
    set of dummy locations using a greedy approach. The proposed algorithm can resist
    two attacks categories, namely, inference attacks and colluding attacks, but the
    data integrity and authentication are not considered. 3) Content-Oriented Protection
    The content-oriented protection solution is very important against the violation
    of a farmer’s privacy when different IoT data are collected and combined from
    agriculture sensors layer. Gai et al. [72] proposed a dynamic privacy protection
    model, named DPP, for ensuring mobile device user privacy in IoT application.
    The idea of DPP model is based on the classification of the privacy protection
    levels. Specifically, the DPP model uses three main phases, including, (1) security
    classifications for the definition of the privacy weight; (2) content-oriented
    data pairs identification of content-oriented data pairs based on the security
    classifications; and (3) the input data table. The evaluation performance in term
    of plan generation and timing constraints show that the DPP’s average time consumption
    is 1.2% shorter than other related works. 4) Anonymity One of the important security
    properties in green IoT-based agriculture is strong anonymity, which means that
    except for the fog nodes, the agriculture IoT data identity cannot be revealed.
    The CPAL solution proposed by Lai et al. [66] archives user anonymity in IoT application
    using the hybrid linear combination encryption. The CPAL solution defined the
    privacy-preservation with three levels, including, authorized anonymous user linking,
    anonymity, and authentication. Therefore, the CPAL solution can be adapted for
    green IoT-based agriculture by applying the hybrid linear combination encryption
    between the IoT devices communications at agriculture sensors layer. In addition,
    the CPAL solution is robust against impersonation attack and DoS attack. 5) Privacy-Preserving
    Trust Evaluation Privacy-preserving trust evaluation is an important role to ensures
    trust relationships among green IoT-based agriculture entities. Yan et al. [68]
    proposed two schemes of privacy-preserving trust evaluation that can be adapted
    for green IoT-based agriculture. These two schemes use additive homomorphic encryption
    for providing trust evaluation. The first scheme considers that authorized proxy
    is a fully trusted and collusion does not exist between evaluation party and authorized
    proxy. The second scheme considers that authorized proxy is not fully trusted
    and evaluation party and authorized proxy don’t collude. In both schemes, there
    is a trust evaluation phase, which after receiving the encrypted evidence, a node
    decrypts data and then evaluates the trust of the result using a trust evaluation
    algorithm. 6) Personalized Privacy Personalized privacy consists of providing
    trapdoor indistinguishability and index indistinguishability. The work by Li et
    al. [78] proposed a searchable encryption scheme for personalized privacy in IoT
    application, which can be adapted for green IoT-based agriculture. The proposed
    scheme considers an IoT network model that includes three entities, i.e., the
    data owner, cloud server, and data user. The cloud server is used to stores and
    retrieves the encrypted file features, which it received the encrypted file features
    from the data owner. Based on the specific keyword, the data user queries the
    encrypted file features. The proposed scheme is proven using two challenge-response
    games that it satisfies trapdoor indistinguishability and index indistinguishability
    under chosen keyword-file feature level pair attack. Therefore, the proposed scheme
    can be adapted for green IoT-based agriculture by adapting a searchable encryption
    scheme using the following five functions: 1) Setup for performing the security
    parameters; 2) KeyGen for generating the private and public keys; 3) Store for
    creating the index table and user authorization; 4) Trapdoor for creating the
    trapdoor query; and 5) Search. The Setup and Store functions are run by the fog
    node. The KeyGen function is run by the fog node and the IoT device. The Trapdoor
    function is run by the IoT device. The Search function is performed interactively
    between the IoT device and the cloud server. B. Data Integrity Solutions To protect
    data integrity and authentication for IoT applications, Song et al. [2] proposed
    a privacy-preserving protocol that uses message authentication codes (MAC). The
    MAC solution is added to the original IoT data, which the sender can verify that
    the IoT data has not tampered during communication. This solution can be applied
    in green IoT-based agriculture (i.e., between a group of IoT devices and fog device)
    in order to protect the integrity of the green IoT device’s data. Wang et al.
    [71] proposed a lightweight label-based access control scheme, named LACS, for
    IoT-based 5G network, which can be adapted for green IoT-based agriculture. The
    LACS scheme uses two parts, including, the prover (caching fog node) and the verifier
    (caching server). The user authentication is achieved using verifying data integrity.
    The label-based authentication is used against two attacks, namely, disturbing
    attack and ignoring attack. The performance evaluation shows that the MD5 is more
    efficient than the SHA-1 in the IoT environment that uses LACS scheme. The work
    by Li et al. [80] can provide content integrity verification for named data networking,
    which can be adapted for communication among agriculture IoT nodes in green IoT-based
    agriculture. Specifically, the authors proposed a lightweight integrity verification
    architecture, named LIVE, for ensuring secure content access. The LIVE architecture
    uses the following three security levels: (1) Non-Cacheable; (2) 1-Cacheable;
    (3) All-Cacheable. To produce tokens for signature generation, the LIVE architecture
    uses a hash tree based signature algorithm (Merkle Hash Tree algorithm). C. Authentication
    Solutions 1) RFID Authentication Radio Frequency Identification (RFID) is a technology
    used for capturing and automatically identifying information in electronic tags.
    With the adaptation of RFID technology into green IoT-based agriculture, the crops
    will better be controlled and herd better monitored. Therefore, an unauthorized
    party can manage the RFID-tag, which the smart agriculture system will be compromised.
    Gope et al. [73] proposed an anonymous lightweight RFID authentication solution
    for IoT application. Specifically, the network model considered by the study is
    based on four entities, including, two servers (i.e., an authenticated cloud and
    a backend database), a reader, and an RFID-tag. Based on unlinkable pseudo-identity,
    emergency key, and hash function, the proposed solution can resist against the
    following five attacks: replay attack, forgery attack, cloning attack, DoS attack,
    and location tracking attack. In addition, this solution can achieve five security
    properties, namely, mutual authentication, tag anonymity, availability, and scalability,
    but false data injection attack, as well as DDoS attack, are not considered. 2)
    Delegated Authentication Since agriculture IoT data can be transported via untrusted
    public devices, the security solutions need to provide the delegated authentication.
    The work by Zhang et al. [77] proposed a semi-outsourcing privacy-preserving scheme,
    named SOPP, for the IoT data collection. The SOPP scheme considers three components,
    including, data center, public (untrusted) clouds, and IoT devices. To decreases
    the throughput and achieves a longer battery duration, the SOPP scheme applied
    elliptic curve cryptography as a one-way (non-interactive) authentication between
    untrusted public clouds and IoT devices. To block invalid access, the authentication
    is delegated to public clouds. The data center uses data decryption to provides
    data integrity. D. Access Control Solutions To supporting privacy-preserving in
    green IoT-based agriculture, an efficient access control scheme can be adapted.
    The work by Fan et al. [76] designed an access control protocol for fog-enabled
    IoT. The study considered cloud-fog computing that contains five entities, including,
    a cloud service provider, a group of fog nodes, a group of data owners, a certificate
    authority, and a group of IoT devices. For providing revocation and data confidentiality
    with verifiability, ciphertext-policy attribute-based encryption is adapted when
    an IoT device with an identifier submits a data access request. The the blockchain
    technology [39] can be used for providing an access control in green IoT-based
    agriculture. Ouaddah et al. [81] proposed an access control framework, named FairAccess,
    for IoT application. The FairAccess framework uses the blockchain technology to
    get, grant, delegate, and revoke access. Zhang et al. [74] consider an IoT system
    with a large number of storage devices, servers, user devices, IoT gateways. Specifically,
    the study proposed an access control framework based on the Ethereum smart contract
    platform. This platform contains five main elements, including, smart contract,
    account/address, blockchain, transaction and message, and mining. To manage the
    policies and implement access control, the proposed framework provides functions
    or application binary interfaces (e.g., add new access control policy, updates
    the policy, returns the access result and penalty…etc.). The evaluation performance
    on two Raspberry Pi 3 Model B shows that the proposed framework may not be able
    to reflect the overhead in real-world IoT system. E. Data Confidentiality Solutions
    Data security in green IoT-based agriculture also includes confidentiality, which
    can be achieved by cipher-text based access control technique. Yao et al. [67]
    proposed a lightweight attribute-based encryption scheme for IoT application,
    which can be adapted for green IoT-based agriculture. To provide data confidentiality
    with integrity, the proposed scheme uses an elliptic curve integrated encryption
    scheme (ECDH). Specifically, the ECDH scheme is used for generating a sharing
    secret from two groups, including, the MAC key and encryption key. The performance
    evaluation in term of overhead (the total size of the private key, public key,
    and cipher-text) shows that the proposed scheme is much shorter than other related
    cryptographic methods that use decisional bilinear Diffie-Hellman exponent. In
    addition, the proposed scheme is robust against chosen plaintext and attribute-set
    attack. SECTION V. Privacy-Preserving Over Blockchain The blockchain technology
    can be effectively applied in almost all domains of IoT, including, green IoT-based
    agriculture [39], [82]–[85]. The application of blockchain technology for IoT
    is applied to provide privacy-preserving. To be specific, the blockchain is used
    for encrypted data sharing. Therefore, the blockchain can be used in green IoT-based
    agriculture as a distributed digital ledger containing all messages. This distributed
    ledger is replicated and stored in different IoT nodes at agriculture sensors
    layer, as presented in Fig. 6. Table 4 summarizes research for privacy-oriented
    blockchain-based solutions for IoT applications and how they will be adapted for
    green IoT-based agriculture. According to the characteristic of each privacy-oriented
    blockchain-based solution, we classify the blockchain-based solutions for green
    IoT-based agriculture into six categories, including, 1) Blockchain-based machine
    learning solution; 2) Blockchain-based distributed key management solution; 3)
    Blockchain-based access control solution; 4) Blockchain-based reputation and trust
    solution; 5) Blockchain-based authentication and identification solution, and
    6) Blockchain-based secure SDN solution, as presented in Fig. 5. TABLE 4 Summary
    of Privacy-Oriented Blockchain-Based Solutions for IoT Applications and How They
    Will be Adapted for Green IoT-Based Agriculture A. Blockchain-Based Solutions
    1) Blockchain-Based PKI Solution Jiang et al. [79] proposed a thin-client Authentication
    scheme, named PTAS, for IoT application. The PTAS scheme is applied in blockchain-based
    public key infrastructure (PKI). The PKI infrastructure is used to secure communication
    between IoT devices, which a certificate authority distribute certificates (a
    public key (PK) and identity (ID)) to IoT devices. To solve the problem of the
    single point of failure, the PTAS scheme is adapted in blockchain-based PKI. Specifically,
    the PTAS scheme uses the method of private information retrieval, which the identity
    of the user can be hidden in k indistinguishable identities. In addition, the
    PTAS scheme is robust against three attacks, namely, Sybil attack, eclipse attack,
    and 51% attack. 2) Blockchain-Based Machine Learning Solution The work by Shen
    et al. [91] proposed a privacy-preserving scheme, named secureSVM, for IoT application.
    The secureSVM scheme considers the data privacy of training support vector machine
    classifier (SVM) using blockchain-based encrypted IoT data. To protect the privacy
    of IoT data, the secureSVM scheme employs a public-key cryptosystem, Paillier,
    which is an additive homomorphic cryptosystem. The secureSVM scheme is robust
    against two threat models, including, known ciphertext model and known background
    model. The secureSVM scheme can be adapted for green IoT-based agriculture. The
    blockchain-based IoT platform can be installed at the agriculture sensors layer
    and IoT data analysts at fog computing layer. The adaptation is summarized by
    the following steps: Step 1: Agriculture sensor nodes use sensing and transmitting
    valuable data through wireless; Step 2: Each access point collect data from the
    agriculture sensor nodes; Step 3: Each access point encrypts data using partially
    homomorphic encryption; Step 4: Each access point records the encrypted data on
    the blockchain; Step 5: Each access point uses the built-in consensus mechanism
    for validating the data; Step 6: Fog nodes communicate with an access point to
    obtain parameters of the training SVM classifier. 3) Blockchain-Based Distributed
    Key Management Solution The blockchain is used in key management architecture
    for eliminating the drawback of introducing a third party. Ma et al. [92] introduced
    a blockchain-based distributed key management architecture, named BDKMA, for IoT
    application. To achieve hierarchical access control, the BDKMA architecture uses
    security access managers for operating the blockchain. Specifically, the BDKMA
    architecture is based on the idea of authorization assignment mode and group access
    pattern. The BDKMA architecture can be applied to the network model composed of
    a device layer, a fog layer, and a cloud layer. The adaptation of BDKMA architecture
    in green IoT-based agriculture is summarized by the following steps: Step 1: Each
    agriculture sensor nodes selects its private key and generates the public key,
    encryption key, and secret access key; Step 2: Each agriculture sensor nodes packages
    encrypted secret access key and then signs and broadcasts the transaction to access
    point; Step 3: Each access point at agriculture sensors layer collects the transactions
    of the agriculture sensor nodes; Step 4: Each access point uses the built-in consensus
    mechanism for validating the data; Step 5: An agriculture sensor node obtain access
    permission from access point using an access query transaction; Step 6: An agriculture
    sensor node periodically update the access keys and sends a key update transaction
    to the access point; 4) Blockchain-Based Access Control Solution To provide scalable
    access management in IoT application, Novo [87] proposed a distributed access
    control architecture using blockchain technology. The access control policies
    are enforced by the blockchain platform. The adaptation of proposed architecture
    in green IoT-based agriculture can bring the following six advantages to access
    control: transparency, scalability, lightweight, concurrency, accessibility, and
    mobility. The adaptation of proposed architecture is summarized in the following
    steps: Step 1: Fog node deploys the smart contract into the blockchain network
    at fog computing layer; Step 2: To be registered as a manager, each access point
    at agriculture sensors layer request the address of the smart contract; Step 3:
    To transfer the management control of an agriculture sensor device, an access
    point at agriculture sensors layer requests the agriculture sensor device’s address
    and the blockchain address of the smart contract; Step 4: An access point at agriculture
    sensors layer enforces the policy creating a transaction towards the smart contract;
    Step 5: An access point at agriculture sensors layer adds an existing policy.
    Ding et al. [94] proposed a attribute-based access control scheme for IoT application,
    which can be adapted for greenhouse. According to the identity or ability of each
    IoT devices, attribute authorities describe a set of attributes to each IoT devices.
    The blockchain is used to record the distribution of these attributes. The adaptation
    of this attribute-based access control scheme for blockchain-based greenhouse
    is summarized in the following steps: Step 1: Greenhouse miner generates a pair
    of public and secret key for each IoT devices; Step 2: Greenhouse miner sends
    both keys in a secure channel based on identity-based cryptography; Step 3: Each
    IoT devices uses an address along with its ID and then generate a corresponding
    address based on the hash algorithm; Step 4: IoT device inside greenhouse generates
    new block and broadcasts to the other consortium nodes using the practical Byzantine
    fault tolerance; Step 5: When IoT device wants to send to another device, they
    use identity-based authentication and key agreement (AKA) protocol. Dorri et al.
    [34] introduced a smart home tier based on the blockchain technology, which can
    be adapted for greenhouse. The network model of the blockchain-based greenhouse
    is composed of the following components: transactions, local blockchain, greenhouse
    miner, and local storage. The adaptation of blockchain-based greenhouse is summarized
    in the following steps: Step 1: Greenhouse miner generates a key with an IoT device;
    Step 2: Greenhouse miner shares the key and stores it in the genesis transaction;
    Step 3: Greenhouse miner defines the policy header and adds it to the first block;
    Step 4: Each IoT device inside greenhouse communicate with another internal device
    using the permission from the miner; Step 5: Each IoT device inside greenhouse
    can store data on the cloud storage using the permission from the miner; Step
    6: When IoT device wants to send to another external device, a Virtual Private
    Network (VPN) connection is used to routes the packets to the shared miner. 5)
    Blockchain-Based Reputation and Trust Solution Dedeoglu et al. [93] proposed a
    reputation and trust mechanism for blockchain-based IoT applications, which can
    be adapted for greenhouse. The proposed model verifying transactions based on
    three key layers, namely the application layer, the blockchain layer, and the
    data layer. The adaptation of blockchain-based greenhouse for trust architecture
    is summarized in the following steps: Step 1: IoT device inside greenhouse generates
    blocks in periodic intervals. The generation is based on the public key and the
    signature of the data source; Step 2: IoT device sends the blocks to greenhouse
    miner at agriculture sensors layer; Step 3: Greenhouse miner validates the blocks
    based on the number of validator node and the reputation of the block generating
    node. To realize reliable storage and sharing of IoT information in green IoT-based
    agriculture, the work by Si et al. [95] is a security mechanism that can be adapted
    for smart agriculture. The proposed mechanism is based on blockchain technology,
    which is applied in three layers, including, the application layer, the transport
    layer, and the sensing layer. The application layer is mainly used by the cloud
    service. The data blockchain part is installed in the fog computing layer. In
    addition, the proposed mechanism uses a double-chain model with tamper-proof of
    data in the data blockchain. Zhou et al. [88] proposed a threshold secure multi-party
    computing protocol, TSMPC, for blockchain-based threshold IoT system. The TSMPC
    protocol extends Shamir’s (t, n)-secret sharing (SSS) [97]. Specifically, the
    TSMPC protocol is applied between a leader and n server, which can be adapted
    for green IoT-based agriculture. The network model is composed of n servers, the
    leader’s device, and a leader. The performance evaluation on the Ethereum blockchain
    shows that a block can record transactions of at most 62,360 bytes. Therefore,
    the adaptation of a threshold secure multi-party computing protocol for green
    IoT-based agriculture is summarized in the following steps: Step 1: A fog computing
    node generates an initialize transaction with a verification key and sends it
    to the blockchain network; Step 2: IoT sensor node at agriculture sensors layer
    verify the transaction’s verification key; Step 3: An access point at agriculture
    sensors layer verifies core shares, which can obtain a reward from the fog computing
    node. 6) Blockchain-Based Authentication and Identification Solution To ensure
    authentication and robust identification of IoT devices in IoT application, Hammi
    et al. [89] proposed an original decentralized system, called bubbles of trust
    , which can be applied for green IoT-based agriculture. Based on the blockchain
    technology, the bubbles of trust system create secure virtual zones (bubbles),
    which can protect the availability and data integrity. The bubbles of trust system
    is resistant against four attacks, namely, Sybil attack, spoofing attack, DoS/DDoS
    attack, and replay attack. Therefore, the adaptation of bubbles of trust system
    for green IoT-based agriculture consists of creating secure virtual zones inside
    the agriculture sensors layer, where devices can communicate securely. Specifically,
    each device at agriculture sensors layer must communicate only with devices of
    its zone. The communications between devices are considered as transactions and
    must be validated by this blockchain network. 7) Blockchain-Based Secure SDN Solution
    To facilitate software and hardware updates for green IoT-based agriculture, software-defined
    networking (SDN) is used, which allows easy control and management in a central
    location. To detect any false injection data, a blockchain-based secure SDN architecture
    is adapted. Derhab et al. [96] proposed two security components, namely, 1) Blockchain-based
    integrity checking system (BICS) 2) Intrusion detection system (IDS). These two
    systems are combined for SDN-architecture, which can be adapted for green IoT-based
    agriculture. The adaptation is summarized in the following steps: Step 1: Integrate
    the SDN controller into the cloud computing layer; Step 2: Integrate a Virtual
    Switch (vSwitch) into the fog computing layer Step 3: Integrate an IDS system
    into the access point at agriculture sensors layer. To detect cyber attacks, the
    IDS system combines two machine learning classifiers, namely, K-Nearest Neighbors
    and random subspace learning; Step 4: The SDN controller creates blocks and shares
    it via the blockchain; Step 5: The Firewall check the rules from vSwitch and blockchain.
    To provides scalability within the current IoT application, the SDN and blockchains
    technology are combined by the work Sharma et al. [86]. Specifically, the work
    proposed a secure SDN architecture, named DistBlockNet, which is based on the
    blockchain technology. The DistBlockNet architecture interconnects a distributed
    blockchain network with the controllers. Each local network includes Shelter modules,
    OrchApp, and Controller. To maintains the updated flow rules table information,
    the distributed blockchain network uses the request/response and controller/verification
    nodes. The performance evaluation shows that DistBlockNet architecture is robust
    against DDoS/DoS attacks and cache poising/ARP spoofing. The adaptation of DistBlockNet
    architecture in green IoT-based agriculture is summarized by the following steps:
    Step 1: Integrate Shelter and OrchApp modules into the cloud computing layer;
    Step 2: Integrate the distributed blockchain network into the fog computing layer;
    Step 3: Interconnect the distributed blockchain network with the controllers at
    fog computing layer; Step 4: IoT sensor node at agriculture sensors layer sends
    data to the controllers. B. Consensus Algorithms for Blockchain-Based Solutions
    A consensus algorithm can be defined as the mechanism by which a Blockchain network
    achieves consensus. The public blockchains (i.e., decentralized) are built as
    distributed systems and, since they do not depend on a central authority, the
    distributed nodes must agree on the validity of transactions using a consensus
    algorithm. Table 5 summarizes consensus algorithms for Blockchain-based solutions
    and how they will be adapted for green IoT-based agriculture. TABLE 5 Summary
    of Consensus Algorithms for Blockchain-Based Solutions and How They Will be Adapted
    for Green IoT-Based Agriculture 1) Proof-of-Work (PoW) The PoW is a consensus
    algorithm introduced by Bitcoin and widely used by other cryptocurrencies. This
    consensus is called “Mining”, which the nodes in the IoT network are called “Miners”
    [98]. Specifically, the PoW algorithm is presented as a response to a mathematical
    problem, which requires considerable work, but is usually easily checked once
    the answer is obtained. A miner node continuously tests a variety of unique values
    (known as nonce) until an appropriate value is produced [123]. The minor node
    that solves the puzzle extracts the succeeding block, then adds it to the blockchain
    network and confirms the transactions, and receives the compensation for the block.
    The PoW can be adapted by a Blockchain-based solution for green IoT-based agriculture,
    which each access point at agriculture sensors layer is selected as miners in
    order to calculate the hash values for validating blocks. This adaptation ensures
    that access points are encouraged to maintain the blockchain network, as they
    are compensated for their efforts. The disadvantage of the PoW algorithm for green
    IoT-based agriculture is that computational resources require a lot of energy
    to validate the blocks. 2) Proof-of-Stake (PoS) The PoS is a distributed consensus
    algorithm (used by Peercoin [99] and Nxt [100]) that requires the user to prove
    that they have a specific quantity of currency to validate any additional blocks
    in the blockchain network and to be awarded the reward. Compared to the PoW algorithm,
    the PoS is not computationally costly for validators, but it is vulnerable to
    nothing-at-stake problem. The PoS can be adapted by a Blockchain-based solution
    for green IoT-based agriculture, which all IoT nodes in agriculture sensors layer
    are selected as the validators. 3) Delegated Proof-of-Stake (DPoS) The DPoS is
    a consensus algorithm (used by BitShares [101] and Steemit [102]) that restricts
    the number of nodes in a blockchain network to a small number of entities chosen
    by token owners. These delegates are responsible for the following three paid
    tasks: 1) implementing changes to the blockchain network, 2) recording transactions,
    and 3) ensuring the integrity of the registry. The DPoS algorithm can be adapted
    by a Blockchain-based solution for green IoT-based agriculture, which each access
    point at agriculture sensors layer is selected as a delegate. This adaptation
    ensures that access points provide an efficient, fast, decentralized consensus
    algorithm. 4) Delayed Proof-of-Work (DPoW) The DPoW is a consensus algorithm designed
    by the Komodo project [103], which is a modified version of the Proof of Work
    consensus algorithm. The DPoW algorithm is based on the idea of notary nodes,
    which are used to record data to the blockchain network (e.g., Bitcoin). The DPoW
    can be adapted by a Blockchain-based solution for green IoT-based agriculture,
    which all fog nodes in fog computing layer are selected as notary nodes and all
    IoT nodes in agriculture sensors layer are selected as as normal nodes. This adaptation
    ensures that it is impossible to reorganize notarized blocks, which makes blockchains
    more secure and resistant to attacks 51%. 5) Proof-of-Activity (PoAC) The PoAC
    algorithm (used by Decred [109]) is an extension of the Bitcoin protocol, which
    is based on combining Proof of Work component with a Proof of Stake type of system.
    The PoAC can be adapted by a Blockchain-based solution for green IoT-based agriculture
    as follows [124]. 1) Each fog node (miner) at fog computing layer uses his hashing
    power to generate an empty block header. 2) The fog node broadcasts her block
    header to IoT devices at agriculture sensors layer. 3) All IoT devices at agriculture
    sensors layer derive N pseudorandom stakeholders using the hash of the block header.
    4) Every stakeholder at agriculture sensors layer checks whether the empty block
    header that the fog node broadcasted is valid. 6) Proof-of-Authority (PoA) The
    PoA is a reputation-based consensus algorithm (used by POA.Network [106] and VeChain
    [107]) for private blockchain networks. The PoA consensus algorithm is based on
    the value of identity, which means that the validators use their own reputation
    to validate the blocks. The PoA can be adapted by a Blockchain-based solution
    for green IoT-based agriculture, which all fog nodes in fog computing layer are
    selected as validators. This adaptation ensures a limited number of block validators,
    which provides a highly scalable system. 7) Proof-of-Importance (PoI) The PoI
    is a consensus algorithm proposed by NEM [113]. The PoI can be adapted by a Blockchain-based
    solution for green IoT-based agriculture, which each IoT devices at agriculture
    sensors layer are assigned an importance score. The IoT devices with high scores
    of importance have a higher chance of harvesting a block. The transaction graph
    topology can be used as an input into the importance of an IoT device. 8) Proof-of-Weight
    (PoWE) The PoWe is proposed by Gilad et al. [110], which is based on the Algorand
    consensus model. The Algorand uses a Byzantine agreement protocol to reach consensus
    on the blockchain network. The users are selected randomly using verifiable random
    functions. Algorand users use a protocol to communicate, which assigns a weight
    to each user according to the tokens they hold. The users’ weights are used to
    chooses committee members randomly among all users. The PoWe can be adapted by
    a Blockchain-based solution for green IoT-based agriculture, which an Algorand
    protocol assigns a weight to each farmer according to the tokens they hold. This
    adaptation ensures resistance to Sybil attacks and achieves scalability but reducing
    the incentive since it’s very difficult to be rewarded. 9) Proof-of-Burn (PoB)
    The PoB algorithm (used by Slimcoin [111]) is similar to a proof of work algorithm
    but with reduced energy consumption rates. The PoB network block validation process
    does not require the use of powerful computing resources and does not depend on
    powerful extraction equipment. Instead, Coins are deliberately burned and this
    is a way to “invest” resources in the blockchain, so that candidate miners are
    not required to invest physical resources. By burning Coins, users are able to
    demonstrate their engagement with the network, which can obtain the right to mine
    and validate transactions [125]. The PoB can be adapted by a Blockchain-based
    solution for green IoT-based agriculture, which each fog node at fog computing
    layer sends coins to a burn address. 10) Proof-of-Capacity (PoC) The PoC is very
    similar to the PoW algorithm, which the storage is used instead of computation.
    The PoC (used by Burstcoin [104]) allows the mining nodes to use the free space
    on their hard disk. The PoC can be adapted by a Blockchain-based solution for
    green IoT-based agriculture, where each fog nodes at fog computing layer are selected
    as miners since they have high storage compared to nodes at agriculture sensors
    layer. To validating the blocs and winning the mining reward, the fog nodes involve
    a two-step process, including, plotting and mining. 11) Proof of Elapsed Time
    (POET) The POET is a consensus algorithm frequently applied on the permissioned
    blockchain networks to decide on mining authorizations. The POET is based on the
    idea of “Elapsed Time”, where each node involved in the system is expected to
    wait for a randomly selected period of time, and the first node to complete the
    designated waiting time wins the new block. The POET can be adapted by a Blockchain-based
    solution for green IoT-based agriculture, which each IoT device at agriculture
    sensors layer generates a random wait time and sleeps for a fixed period of time.
    For more details about the PoET algorithm, we refer the reader to the Hyperledger
    Sawtooth project [112]. 12) Proof-of-Reputation (PoR) The PoR algorithm (used
    by GoChain [115]) is similar to PoA algorithm, which it is based on the reputations
    of the IoT nodes. An IoT node in the green IoT-based agriculture must have a reputation
    important enough to be voted as an authoritative node. Once an authoritative node
    is voted, he can sign and validate blocks in the blockchain network. 13) Practical
    Byzantine Fault Tolerance (PBFT) The PBFT (Practical Byzantine Fault Tolerance)
    algorithm is the first to be able to tolerate “Byzantine” faults, which is proposed
    by Miguel Castro and Barbara Liskov in 1999 [126]. This algorithm provides reliability
    and robustness properties in a synchronous environment and requires N=3f+1 replicas
    to tolerate simultaneous Byzantine faults. The PBFT algorithm can be effectively
    applied in almost all domains of IoT, including, Internet of Energy [118], Internet
    of Drones [120], Internet of Vehicles [127],…etc. Therefore, the PBFT algorithm
    can be adapted by a Blockchain-based solution for green IoT-based agriculture,
    as presented in Fig. 6. Specifically, when a farmer buyer node wants to buy a
    product from agri-products sellers, they send its request to the fog node. This
    fog node creates a PRE-PREPARE message to propose to the other replicas the scheduling
    of the bloc. The correct replicas respond to the PRE-PREPARE with a PREPARE message,
    which is sent to all replicas (i.e., neighbor nodes). Once the neighbor nodes
    have received 2f PREPARE and the associated PRE-PREPARE, then they agree on the
    order of the farmer buyer node’s request. At the end, the neighbor nodes send
    a VALIDATION message to all replicas. Once a replica has received 2f+1 VALIDATION,
    then it executes the request and responds to both farmer buyer node and agri-products
    seller. If the client does not receive a response after a specified time period,
    he forwards the request to all replicas. When a replica receives a request, it
    starts view-change. Note that there are more variations of PBFT algorithm such
    as Aardvark [128], Zyzzyva [129], HQ [130], Q/U [131], and Abstract [132]. 14)
    Delegated Byzantine Fault Tolerance (dBFT) The dBFT algorithm is a consensus method
    (used by Neo [116]) where all users elect nodes, called bookkeepers, who are responsible
    for adding new blocks to the blockchain. This elected node group can be updated
    regularly. The vote is weighted by the amount of cryptocurrency owned. Each bookkeeper
    is randomly selected to propose a block. This node is called a speaker. The bookkeepers
    become speakers in turn by random drawing. The speaker checks the signatures and
    the validity of transactions and then collects them in a block. The speaker proposes
    his block to all the other bookkeepers. Afterward, the bookkeepers verify the
    block and then each one vote in favor or against the block. The consensus is reached
    when at least 66% of bookkeepers vote in favor of the block and it is then added
    to the blockchain. The dBFT algorithm can be adapted for green IoT-based agriculture
    by applying a voting system in agriculture sensors layer to choose delegates and
    speaker among IoT devices. 15) Stellar Consensus Protocol (SCP) The SCP protocol
    (used by Stellar Consensus [114]) is based on federated Byzantine agreement (FBA).
    The nodes exchange a series of votes to confirm and accept a value. For this purpose,
    the SCP protocol determines a minimum quorum. The “quorum” is a set of nodes that
    are sufficient to reach an agreement. Each node chooses one or more quorum slices
    and includes in each slice the nodes in which it has confidence. Each quorum slice
    will then produce interactions with each other. To reach an agreement, the SCP
    protocol uses the idea of quorum intersection. A federated Byzantine agreement
    system enjoys quorum intersection if any two of its quorums share a node. The
    SCP protocol can be adapted for green IoT-based agriculture by applying a voting
    system in agriculture sensors layer to choose quorum and quorum slice among IoT
    devices and then use quorum intersection to guarantee agreement. 16) Other Consensus
    Algorithms There are other consensus algorithms that can be adapted by a Blockchain-based
    solution for green IoT-based agriculture. We cite the following nine consensus
    algorithms: Byteball consensus [133], Mokka consensus [134], SPECTRE consensus
    [135], Block-Lattice consensus [136], Hashgraph consensus [137], Tangle consensus
    [138], Directed Acyclic Graphs (used by Iota [139]), Proof of Believability (used
    by IOST [140]), and RAFT consensus [141]. SECTION VI. Challenges To complete our
    overview, we outline research challenges that could improve the security and privacy
    solutions for IoT-based agriculture, summarized in the following recommendations:
    A. Machine Learning Techniques for Intrusion Detection Systems Intrusion detection
    systems (IDSs) are implemented along with other security systems such as authentication
    and access control techniques using encryption mechanisms to protect systems against
    cyber attacks. Using data mining and machine learning techniques (e.g., Deep learning,
    Random forests, Support Vector Machine, Naive Bayes,…etc), IDSs can differentiate
    between normal and malicious actions. The implementation of IDSs for IoT-based
    agriculture as a software application will able to identify security incidents.
    Therefore, the question we ask here is: how to choose the right machine learning
    technique among different types (i.e., reinforcement learning, unsupervised learning,
    or supervised learning)? We believe that a comparative study of machine learning
    techniques for cyber security intrusion detection is needed for IoT-based agriculture.
    B. Dataset for Intrusion Detection in IoT-Based Agriculture Scenarios The datasets
    for cyber security are so important in intrusion detection, which are used for
    testing the performance of IDSs. Actually, most and recent IDSs are tested with
    KDD 1999 [142], NSL-KDD [143], CICIDS2017 [144], Bot-IoT [145], and CSE-CIC-IDS2018
    [146]. These datasets are not simulated for IoT-based agriculture scenarios. A
    possible research direction in this topic could be related to developing a new
    dataset to build a network intrusion detector under IoT-based agriculture environment.
    C. Scalability Analysis of Blockchain-Based Solutions To solve security and privacy
    problems (e.g., access control, reputation, trust,…etc), we have seen that a blockchain-based
    solution brings advantages for IoT application. The application of a blockchain-based
    solution for IoT-based agriculture requires a study on the characteristics of
    the implementation. Therefore, there are many characteristics should be taken
    under consideration when a blockchain-based solution is proposed for IoT-based
    agriculture, such as scalability issues when the number of participating nodes
    at agriculture sensors layer is increased. Thus, one of the challenges that should
    receive more attention in the future is to provide a scalability analysis of blockchain-based
    solutions for IoT-based agriculture. D. How to Pick the Best Consensus Algorithm
    The performance of a blockchain-based solution for IoT-based agriculture is related
    to the effectiveness of the consensus algorithm. Therefore, since IoT devices
    at agriculture sensors layer are not always able to satisfy the high computational
    and energy requirements when addressing the validation of blocks and the storage
    of blockchain, consensus-efficient issues arise as follows: If the PoW algorithm
    is used, how to integrate a miner in each greenhouse for processing incoming and
    outgoing transactions? If the stellar consensus algorithm is used, how to design
    a voting system in agriculture sensors layer to choose quorum and quorum slice
    among IoT devices and then use quorum intersection to guarantee agreement? If
    the dBFT algorithm is used, how to design a voting system in agriculture sensors
    layer to choose bookkeepers and speaker among IoT devices? E. Design of Practical
    and Compatible Cryptographic Protocols In some cases of green IoT-based agriculture,
    it is not necessary to use blockchain to solve security and privacy problems (e.g.,
    identity anonymity), which there are many other better solutions such as practical
    and compatible cryptographic solution. Therefore, a new cryptographic solution
    is proposed recently by Yang et al. [147] for the automatic dependent surveillance-broadcast,
    which they use the format-preserving encryption (FPE) and lightweight broadcast
    authentication protocol (TESLA) to achieve the identity anonymity. However, resource
    and power-constrained IoT devices at agriculture sensors layer are not always
    capable of meeting the substantial computational and power consumption in the
    processing of new cryptographic solution. Therefore, the design of practical and
    compatible cryptographic protocols is one of the significant research challenges
    in green IoT-based agriculture. F. Resiliency Against Specific Attacks in the
    Context of Low-Resource IoT Devices The threat models discussed in the environment
    of IoT-based agriculture and the key security problem is different in distinct
    smart agriculture applications. Sometimes, the specific problem does not exist
    in an IoT application, and it is meaningless to take combined attacks into consideration.
    The methods to solve attacks can be integrated together to solve problems in an
    application. To propose a scheme against a kind of attack in a smart agriculture
    application, the attack should be specific and defined at the beginning. The most
    important question that may arise is how to develop a new security strategy that
    can resist combined attacks while considering the practicability of deploying
    the solution, particularly in the context of low-resource IoT devices at agriculture
    sensors layer. G. Counter Measures Against 5G Network Slicing Threats 5G networks
    will be facilitators of IoT based agriculture applications, especially in the
    sensors layer (See Figure 1). 5G adopt network slicing as a means of partitioning
    the physical and network resources to optimally group the different traffic, isolate
    from other tenants and configure the network resources. The logical partitioning
    of network slicing divides and separates a single common physical network into
    various virtual, complete E2E networks and offers complete isolation for these
    virtual networks from each other in terms of access, transport, device and core
    network. The main advantage of Network Slicing is that now MNOs can configure
    and apply tailor-made customization of their network resources to accommodate
    different users and different traffic classes, and hence differentiated services.
    Security of Network Slicing plays a significant role for the control and the coordination
    among different slices and for function of the related mechanisms that are responsible
    for the inter-network slices communication and the coordination between user and
    control plane. A security leakage that is related to the inter-slice communication
    functionality can lead to disruption of the inter-slice communication. Moreover,
    authentication for the identification of the privileged users in order to prevent
    impersonation attacks against slices seems to be critical for the proper control
    of the network resources. Furthermore, the provision of differentiated services
    is also related to the provision of different security level of services among
    the slices. However, this must not affect the security level of another slice.
    In addition, DoS attacks focus on the possible exhaustion of network resources
    to lead in unavailability of network provisioned services [148]. These attacks
    must be dealt with a multi layered security framework that includes traditional
    methods, e.g. IDS and field specific solutions, e.g. slice isolation. H. Deploying
    IoT in Agriculture As we mentioned in Section II, IoT in agriculture can be envisioned
    in different layers and from different perspectives. In this subsection, we try
    to summarize and emphasize the different conditions that exist in an agricultural
    environment that make the deployment of IoT challenging. When talking about the
    WSNs, the specific characteristics of the environment, in which the nodes will
    be deployed, should be taken into account. Crops, or other obstacles in farmlands
    whose positions may change over time, cause considerable interference in the communication
    between nodes. These moving obstacles affect the connection quality of links,
    changing the channel conditions over time, affecting the deployment, packet routing
    algorithms, failure diagnosis methods, and other aspects of WSNs. Environmental
    factors such as temperature, rainfall, humidity, high solar radiation along with
    changing shading by plant leaves, as well as noise produced by building structures,
    such as greenhouses, further increase Spatio-temporal climatic variation, greatly
    affecting the communication among nodes that are deployed in such harsh environment.
    This changing environment imposes requirements and calls for novel duty-cycle
    control, sampling and scheduling, data reconstructions, as well as data storage
    and query, intelligent control, and other solutions [38], [149]. Although in theory
    or in simulated environments all these challenges have been already studied and
    analyzed when it comes to the actual deployment of IoT in the agricultural sector
    this task is very demanding and challenging. The modules that are used in order
    to sense and report any situation need to be accurate enough, properly shielded
    against environmental factors which can either lead to false reporting or destruction
    of the sensors permanently [150]. In addition, the replacement of power source
    to distributed sensor nodes that are spread in wide areas can be a very difficult
    task, if not impossible and must be taken into consideration during the design
    of such systems. In terms of communication among nodes, since many different technologies
    can be combined, from GSM to WPAN and P2P, interoperability is the main challenge
    when designing or deploying such systems, especially in agriculture where high
    temperature and high humidity affect it in a negative way. Also when different
    communication methods are used in the same area (e.g. Bluetooth, ZigBee, and WiFi)
    interference is a parameter that needs to be also considered [151]. Since the
    sensors devices are deployed in an open field, which cannot be monitored by people
    all the time, the system can easily be attacked physically. In addition, sensors
    devices are not densely deployed in agricultural applications and they are more
    complex in terms of hardware components. Finally the area where sensor devices
    are located is not monitored so well compared to the one deployed inside a city
    and it is easy to add malicious nodes (e.g., Malicious 4G stations) that can overhear
    the information that is exchanged or perform several attacks like DDoS or MITM.
    SECTION VII. Conclusion In this paper, we surveyed the state-of-the-art of existing
    security and privacy solutions for green IoT-based agriculture. We provided an
    overview of a four-tier green IoT-based agriculture architecture. Through extensive
    research and analysis that was conducted, we were able to classify the threat
    models against green IoT-based agriculture into five categories, including, attacks
    against privacy, authentication, confidentiality, availability, and integrity
    properties. In addition, we analyzed the privacy-oriented blockchain-based solutions
    as well as consensus algorithms for green IoT-based agriculture. There still exist
    several challenging research areas, such as machine learning techniques, datasets
    for intrusion detection, scalability analysis of blockchain-based solutions, how
    to pick the best consensus algorithm, and the design of practical and compatible
    cryptographic protocols, which should be further investigated in the near future.
    Authors Figures References Citations Keywords Metrics More Like This A Survey
    on Internet of Things: Architecture, Enabling Technologies, Security and Privacy,
    and Applications IEEE Internet of Things Journal Published: 2017 Privacy and Security
    in Internet of Things and Wearable Devices IEEE Transactions on Multi-Scale Computing
    Systems Published: 2015 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/08993722.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Security and Privacy for Green IoT-Based Agriculture: Review, Blockchain
    Solutions, and Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s19173796
  analysis: '>'
  authors:
  - Uferah Shafi
  - Rafia Mumtaz
  - José García-Nieto
  - Syed Ali Hassan
  - Syed Ali Raza Zaidi
  - Naveed Iqbal
  citation_count: 309
  full_citation: '>'
  full_text: ">\nsensors\nReview\nPrecision Agriculture Techniques and Practices:\n\
    From Considerations to Applications\nUferah Shaﬁ 1\n, Raﬁa Mumtaz 1,*\n, José\
    \ García-Nieto 2\n, Syed Ali Hassan 1\n,\nSyed Ali Raza Zaidi 3 and Naveed Iqbal\
    \ 1\n1\nNational University of Science and Technology (NUST), School of Electrical\
    \ Engineering and Computer\nScience, Islamabad 44000, Pakistan\n2\nDepartment\
    \ of Languages and Computer Sciences, Ada Byron Research Building, University\
    \ of Málaga,\n29016 Málaga, Spain\n3\nSchool of Electronic and Electrical Engineering,\
    \ University of Leeds, Leeds LS2 9JT, UK\n*\nCorrespondence: raﬁa.mumtaz@seecs.edu.pk\n\
    Received: 14 July 2019; Accepted: 27 August 2019; Published: 2 September 2019\n\
    \x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: Internet\
    \ of Things (IoT)-based automation of agricultural events can change the agriculture\n\
    sector from being static and manual to dynamic and smart, leading to enhanced\
    \ production with\nreduced human efforts. Precision Agriculture (PA) along with\
    \ Wireless Sensor Network (WSN) are the\nmain drivers of automation in the agriculture\
    \ domain. PA uses speciﬁc sensors and software to ensure\nthat the crops receive\
    \ exactly what they need to optimize productivity and sustainability. PA includes\n\
    retrieving real data about the conditions of soil, crops and weather from the\
    \ sensors deployed in the\nﬁelds. High-resolution images of crops are obtained\
    \ from satellite or air-borne platforms (manned\nor unmanned), which are further\
    \ processed to extract information used to provide future decisions.\nIn this\
    \ paper, a review of near and remote sensor networks in the agriculture domain\
    \ is presented\nalong with several considerations and challenges. This survey\
    \ includes wireless communication\ntechnologies, sensors, and wireless nodes used\
    \ to assess the environmental behaviour, the platforms\nused to obtain spectral\
    \ images of crops, the common vegetation indices used to analyse spectral\nimages\
    \ and applications of WSN in agriculture. As a proof of concept, we present a\
    \ case study\nshowing how WSN-based PA system can be implemented. We propose an\
    \ IoT-based smart solution\nfor crop health monitoring, which is comprised of\
    \ two modules. The ﬁrst module is a wireless sensor\nnetwork-based system to monitor\
    \ real-time crop health status. The second module uses a low altitude\nremote\
    \ sensing platform to obtain multi-spectral imagery, which is further processed\
    \ to classify\nhealthy and unhealthy crops. We also highlight the results obtained\
    \ using a case study and list the\nchallenges and future directions based on our\
    \ work.\nKeywords: smart agriculture; precision agriculture; vegetation index;\
    \ Internet of Things\n1. Introduction\nThe rapidly-growing human population has\
    \ increased food demands for human survival on\nthe Earth. Meeting the food requirements\
    \ with limited resources of the planet is a big challenge [1].\nSeveral state-of-the-art\
    \ technologies are being incorporated in the agriculture domain to enhance\nthe\
    \ productivity to cope with this challenge. Precision Agriculture (PA) is comprised\
    \ of near and\nremote sensing techniques using IoT sensors, which help to monitor\
    \ crop states at multiple growth\nlevels. PA involves the acquisition and processing\
    \ of a large amount of data related to crop health.\nMultiple parameters are involved\
    \ in plants health, including water level, temperature and others.\nPA enables\
    \ a farmer to know precisely what parameters are needed for healthy crop, where\
    \ these\nparameters are needed and in what amount at a particular instance of\
    \ time. This requires collecting\nSensors 2019, 19, 3796; doi:10.3390/s19173796\n\
    www.mdpi.com/journal/sensors\nSensors 2019, 19, 3796\n2 of 25\nmassive information\
    \ from different sources and different parts of the ﬁeld such as soil nutrients,\
    \ the\npresence of pests and weeds, chlorophyll content in plants and some weather\
    \ conditions. All collected\ninformation needs to be analysed to produce agronomic\
    \ recommendations. For instance, given the\ndevelopmental stage of plants, their\
    \ level of greenness (chlorophyll content) reveals the nutrients\nneeded. This\
    \ information is combined with the characteristics of the soil where the plant\
    \ is located\nalong with weather forecast. All collected information is further\
    \ used to determine how much of a\ncertain fertilizer should be applied to that\
    \ plant on the next day. The delivery of agronomic information\non the right time\
    \ to farmer and ensuring that he/she applies these recommendations are key to\n\
    enhancing the yields.\nThe foremost driver of PA is a WSN, which is a network\
    \ of multiple wireless nodes connected\ntogether to monitor the physical parameters\
    \ of environment. Each wireless node is comprised of a\nradio transceiver, a micro-controller,\
    \ sensor(s), an antenna, along with other circuitry that enables it\nto communicate\
    \ with some gateway to transmit information collected by the sensor(s) [2]. Sensors\n\
    measure the physical parameters and send the collected information to the controller,\
    \ which further\ntransmits this information to the cloud or a portable device.\
    \ The agriculture sector has multiple\nrequirements comprised of soil statistics,\
    \ crops’ nature, weather conditions, fertilizer types and water\nrequirements.\
    \ Crops have diverse requirements depending on different crops on the same land\
    \ and the\nsame plant on different lands with different weather conditions. Sensors\
    \ monitor the varying behaviour\nof these crop parameters. Due to rapid advancement\
    \ in WSN technologies, the size and the cost of\nsensors have reduced, which make\
    \ it feasible to implement them in many sectors of life including\nagriculture.\
    \ The most common sensors used in the agriculture domain that capture environmental\n\
    parameters related to crops [3] are listed in Table 1.\nIn general, a WSN consists\
    \ of one or more wireless nodes that are further connected with sensors.\nThese\
    \ nodes are tiny devices that are responsible for collecting data. Nodes are divided\
    \ into two types,\na source node that collects the data, and the other is sink\
    \ or gateway node, which receives data from the\nsource nodes. A sink node has\
    \ more computational power compared to a source node. However, there\nare energy,\
    \ memory, power, size, data rate and price constraints when choosing wireless\
    \ nodes. Table 2\nshows a comparison of wireless nodes along with their common\
    \ speciﬁcations [3]. Among all wireless\nnodes presented in Table 2, MICA2 is\
    \ considered to be more suitable as compared to others because of\nits large number\
    \ of expansion connectors, which makes it suitable to connect with several sensors.\n\
    Many applications using WSN have been proposed since the last decade to monitor\
    \ crops’ health\nremotely. In [4], a cyber-physical system was presented for monitoring\
    \ of a potato crop. Cyber physical\nsystems can be expressed as smart systems\
    \ that are comprised of software, hardware and physical\ncomponents, integrated\
    \ together to sense the varying states of the real world. The proposed system\n\
    consists of three layers: the ﬁrst layer is the physical layer, in which all sensory\
    \ data are collected;\nthe second layer is the network layer in which data are\
    \ transmitted to the cloud; the third layer is\nthe decision layer in which the\
    \ data are analysed and processed to make decisions according to the\nobservations.\n\
    There are several challenges in IoT-based systems due to exponential increasing\
    \ devices. As in\na typical IoT network, every node transmits data to the remote\
    \ cloud, which results in cloud\ncongestion, and the main challenges underlying\
    \ the IOT-based system are latency with minimum\npower requirements, better usage\
    \ of bandwidth and intermittent Internet connectivity. Fog computing\nand edge\
    \ computing are the state-of-the-art techniques to overcome these issues; which\
    \ reduce the\ncomputational burden of cloud. The main goal of fog computing is\
    \ to conserve energy and bandwidth,\nwhich helps to increase the quality of service\
    \ to the end users. In [5], an energy-efﬁcient architecture of\nthe Fog of Everything\
    \ was presented, which was comprised of six layers. The ﬁrst layer was an Internet\n\
    Of Everything (IOE) layer, where things (could be ﬁxed, mobile or nomadic) functioned\
    \ under multiple\nspatially-distributed clusters. The second was a wireless access\
    \ network that supported Thing to Fog\n(T2F) and Fog to Thing (F2T) communication\
    \ over the wireless channel. In the third layer, the connected\nfog nodes behaved\
    \ such as a virtualized cluster. There was an inter-fog backbone in the fourth\
    \ layer,\nSensors 2019, 19, 3796\n3 of 25\nwhich was responsible for connectivity\
    \ among fog nodes. The next layer was the virtualization layer,\nwhich provided\
    \ each connected thing with the ability to augment its limited resource set, exploiting\n\
    the computation capability at the virtual clone. In the last layer, there was\
    \ an overlay inter-clone\nvirtual network that empowered Peer to Peer (P2P) communication.\
    \ Then, a protocol stack for FOE\nwas presented, which was further tested by creating\
    \ a small prototype named as V-FOE and simulated\non the iFogsim toolkit. The\
    \ results provided strong evidence for the effectiveness of the proposed\nframework\
    \ and more energy efﬁciency with reduced failure rate and delay.\nTable 1. Wireless\
    \ nodes used in the agriculture domain.\nSr #\nSensor Name\nParameters Captured\n\
    1\nECH2O soil moisture sensor\nSoil Temperature, Soil Moisture, Conductivity\n\
    2\nHydra probe II soil sensor\nSoil Temperature, Salinity level, Soil Moisture,\n\
    Conductivity\n3\nMP406 Soil moisture sensor\nSoil Temperature, Soil Moisture\n\
    4\nEC sensor (EC250)\nSoil Temperature, Salinity level, Soil Moisture,\nConductivity\n\
    5\nPogo portable soil sensor\nSoil Temperature, Soil Moisture\n6\n107-L temperature\
    \ Sensor (BetaTherm 100K6A1B\nPlant Temperature\nThermistor)\n7\n237 leaf wetness\
    \ sensor\nPlant Moisture, Plant Wetness, Plant\nTemperature\n8\nSenseH2TM hydrogen\
    \ sensor\nHydrogen, Plant Wetness, CO2, Plant\nTemperature\n9\nField scout CM1000TM\n\
    Photosynthesis\n10\nYSI 6025 chlorophyll sensor\nPhotosynthesis\n11\nLW100, leaf\
    \ wetness sensor\nPlant Moisture, Plant Wetness, Plant\nTemperature\n12\nTT4 multi-sensor\
    \ thermocouple\nPlant Moisture, Plant Temperature\n13\nTPS-2 portable photosynthesis\n\
    Photosynthesis, Plant Moisture, CO2,\n14\nLT-2 M (leaf temperature sensor)\nPlant\
    \ Temperature\n15\nPTM-48A photosynthesis monitor\nPhotosynthesis, Plant Moisture,\
    \ Plant Wetness,\nCO2, Plant Temperature\n16\nCl-340 hand-held photosynthesis\n\
    Photosynthesis, Plant Moisture, Plant Wetness,\nCO2, Plant Temperature, Hydrogen\
    \ level in\nPlant\n17\nCM-100 Compact Weather Sensor\nAir Temperature, Air Humidity,\
    \ Wind Speed,\nAir Pressure\n18\nHMP45C (Vaisala’s HUMICAP R⃝ H-chip)\nAir Temperature,\
    \ Air Humidity, Air Pressure\n19\nMet Station One (MSO)\nAir Humidity, Air Temperature,\
    \ Wind Speed,\nAir Pressure\n20\nXFAM-115KPASR\nAir Temperature, Air Pressure,\
    \ Air Humidity\n21\nSHT71, SHT75 (Humidity and temperature\nsensor)\nHumidity\
    \ and Temperature Sensor\n22\n107-L Temperature Sensor (BetaTherm 100K6A1B\nthermistor)\n\
    Air Temperature\n23\nCl-340 hand-held photosynthesis\nAir Temperature, Air Humidity\n\
    The energy efﬁciency is the most serious consideration while developing any fog\
    \ architecture.\nIn [6], an energy-efﬁcient protocol for a fog-supported wireless\
    \ sensor network was presented, which\nmaximized the lifetime of the network by\
    \ uniformly distributing the energy among connected nodes.\nThe performance of\
    \ the proposed algorithm was compared with the existing state-of-the-art algorithms\n\
    Sensors 2019, 19, 3796\n4 of 25\nin MATLAB. The results showed that the proposed\
    \ algorithm was highly energy efﬁcient with a\nprolonged network lifetime.\nRegardless\
    \ of all the advancements in the IoT domain, the adoption of PA has been limited\
    \ to\nsome developed countries. Because of the lack of resources, remote sensing-based\
    \ techniques to\nmonitor crop health are not common in under-developed countries\
    \ such as Pakistan, which results in\na loss of yield. Pakistan is an agricultural\
    \ country due to is large arable land and climatic variations,\nwhich make it\
    \ suitable to cultivate multiple types of crops. Despite all these natural resources,\
    \ Pakistan\nis still unable to produce massive yields [7]. The main reason behind\
    \ the low production is traditional\nfarming practices, which are used for crop\
    \ health monitoring and yield estimation. These techniques\nare completely based\
    \ on farmer’s intuition and experience. Farmers visit the ﬁelds in order to monitor\n\
    the crop, which is very laborious and quite challenging in the case of large arable\
    \ land. In this case, the\narea under insect/pest attack is inaccurately measured,\
    \ which can result in over spraying of insecticide\nand pesticide, which adversely\
    \ affects the nutrition in crops.\nKeeping in mind all these issues, our motivation\
    \ is to provide the industry and research\ncommunities with a survey of technologies,\
    \ metrics and current practices concerning communication\ndevices, sensors and\
    \ platforms used to monitor and analyse multiple sources of data (spectral images,\n\
    IoT, etc.) used in environmental and agriculture applications. As the main contribution,\
    \ we generated\na technological taxonomy for PA, which was driven by an IoT-based\
    \ architecture to monitor the crops’\nhealth. The developed system had two modules\
    \ including wireless sensor network-based crop heath\nmonitoring in which multiple\
    \ sensors were used to get the real-time heath status of crop; the other\none\
    \ was NDVI-based analysis of spectra images captured by a drone to assess the\
    \ chlorophyll content,\nwhich was further used to monitor the health of the crop.\n\
    The rest of the paper is organized as follows: Section 2 presents the most common\
    \ wireless\ncommunication technologies used in the agriculture domain; Section\
    \ 3 explains the spectral\nimage-based remote sensing techniques, platforms and\
    \ vegetation indices; Section 4 describes remote\nsensing applications in the\
    \ agriculture sector; Section 5 presents a case study on IoT-based and\nUAV-based\
    \ PA; Section 6 explains the experiments and results; challenges are discussed\
    \ in Section 7;\nand conclusions and future directions are presented in Section\
    \ 8.\nTable 2. Common wireless nodes used in the agriculture domain.\nSr #\nWN1\n\
    MC2\nExpansion\nConnector\nAvailable Sensors\nData Rate\n1\nMICA2DOT\nATmega128L\n\
    19 Pins\nGPS, Light, Humidity, Barometric Pressure,\nTemperature, Accelerometer,\
    \ Acoustic, RH\n38.4 K Baud\n2\nImote2\nMarvell/XScalePXA271\n40 Pins and 20 Pins\n\
    Light, Temperature, Humidity, Accelerometer\n250 Kbps\n3\nIRIS\nATmega128L\n51\
    \ Pins\nLight, Barometric Pressure, RH, Acoustic,\nAcceleration/ Seismic, Magnetic\
    \ and Video\n250 Kbps\n4\nMICAz\nATmega128L\n51 Pins\nLight, Humidity, Temperature,\
    \ Barometric\nPressure, GPS, RH, Accelerometer, Acoustic, Video\nSensor, Sounder,\
    \ Magnetometer, Microphone\n250 Kbps\n5\nTelosB\nTIMSP430\n6 Pins and 10 Pins\n\
    Light, Temperature, Humidity\n250 Kbps\n6\nCricket\nATmega128L\n51 Pins\nAccelerometer,\
    \ Light, Temperature, Humidity,\nGPS, RH, Acoustic, Barometric Pressure,\nUltrasonic,\
    \ Video Sensor, Microphone,\nMagnetometer, Sounder\n38.4 K Baud\n7\nMICA2\nATmega128L\n\
    51 Pin\nTemperature, Light, Humidity, Accelerometer,\nGPS, Barometric Pressure,\
    \ RH, Acoustic, Sounder,\nVideo, Magnetometer\n38.4 K Baud\nWN1: wireless node,\
    \ MC2: Micro-Controller.\n2. Wireless Communication Technologies\nVarious communication\
    \ protocols have been introduced in the last few decades due to the rapid\nincrease\
    \ in IoT devices and WSN technologies. Each protocol has its own speciﬁcations\
    \ depending on\nthe bandwidth, number of free channels, data rate, battery timing,\
    \ price and other factors [8]. The most\ncommonly-used protocols for wireless\
    \ communication in IoT-based applications in agriculture are:\nSensors 2019, 19,\
    \ 3796\n5 of 25\n2.1. Cellular\nCellular technology is most suitable for applications\
    \ that require an extraordinary data rate.\nIt can utilize GSM, 3G and 4G cellular\
    \ communication capabilities by providing reliable high-speed\nconnectivity to\
    \ the Internet, requiring higher power consumption.\nIt requires infrastructure\
    \ to\nbe deployed and operation cost and back up staff for it with a centralized\
    \ managed authority.\n4G cellular technology requires more battery power, but\
    \ cellular technology is a good option in\nunderground wireless sensor networks,\
    \ such as security systems in smart home projects and agriculture\napplications\
    \ [9]. A smart irrigation systems was presented in [10], in which several soil\
    \ moisture\nsensors were deployed in the ﬁeld in the ZigBee mesh network. The\
    \ reading captured from the ﬁelds\nwere transmitted over the cloud using the cellular\
    \ 4G LTE network.\n2.2. 6LoWPAN\n6LoWPAN is an IP-based communication protocol,\
    \ which was the ﬁrst protocol used for IoT\ncommunication. 6LoWPAN is also low\
    \ cost because of the low bandwidth and low power consumption.\n6LoWPAN supports\
    \ multiple topologies such as star and mesh topologies. To handle interoperability\n\
    between IPv6 and IEEE 802.15.4, there is an adaptation layer between the network\
    \ layer and the\nMAC layer [8]. The applications for 6LoWPAN are monitoring the\
    \ health equipment, environment\nmonitoring and in security and home automation\
    \ systems. In [11], a 6LoWPAN-enabled wireless sensor\nnetwork was presented to\
    \ monitor the soil properties of crops. The 6LoWPAN system architecture\nfor precision\
    \ agriculture application was discussed in [12] where the performance evaluation\
    \ of this\nprotocol was discussed with several baud rates and power constraints.\n\
    2.3. ZigBee\nZigBee is a wireless communication protocol widely used in precision\
    \ agriculture to monitor\nenvironmental conditions related to crops’ health [13].\
    \ It is based on the wireless 802.15.4 standard.\nBasically, it was developed\
    \ for personal area networks by the ZigBee alliance [8]. It has a ﬂexible\nnetwork\
    \ structure, long battery life, supports mesh, star and tree topology with multi-hop\
    \ data\ntransmission, is easily installed and supports large nodes. It has a short\
    \ range with limited data speed\nand is less secure compared to Wi-Fi-based systems.\
    \ ZigBee is very common in smart agriculture\napplications such as smart green\
    \ houses and smart irrigation systems [14]. In [15], a smart irrigation\nsystem\
    \ was presented based on the ZigBee communication protocol. This system consisted\
    \ of two\nnodes, i.e., a sensor node and an actuator node. The sensor node was\
    \ comprised of soil moisture\nsensors, which monitored the water level in the\
    \ soil. The actuator module was responsible for taking\nactions according to the\
    \ water level of the soil. All communication was carried out by means of\nZigBee\
    \ protocol.\n2.4. BLE\nBLE is as famous as the Bluetooth smart technology, which\
    \ is a suitable protocol for IoT\napplications including agriculture [16]. It\
    \ is particularly designed for low bandwidth, low latency and\nshort range for\
    \ IoT applications. The main advantages of BLE over typical Bluetooth include\
    \ lower\nsetup time, lower power consumption and unlimited support for nodes in\
    \ a star topology. It has a\nvery limited range of 10 meters. However, the drawbacks\
    \ are that it can only provide communication\nbetween two devices, it presents\
    \ low security, and it can lose connection during communication. In [17],\na BLE-based\
    \ infrastructure was presented to collect the sensors’ data. The proposed system\
    \ utilized a\nsmart phone to collect the data of sensors using BLE, where sensors\
    \ were deployed in the plants, i.e.,\nsoil moisture sensors and soil temperature\
    \ sensor.\nSensors 2019, 19, 3796\n6 of 25\n2.5. RFID\nRFID systems consist of\
    \ a reader and a transponder, which have a very small radio frequency,\ncalled\
    \ the RF tag. This tag is programmed electronically with distinctive information\
    \ that has a reading\ncharacteristic. RFID has two technologies for the tag system\
    \ the ﬁrst is the active reader tag system,\nand the other is the passive reader\
    \ tag. Active reader tag systems are more expensive, as they utilize\nmore battery\
    \ power and use high frequencies. However, passive reader tag systems are low\
    \ powered.\nSome IoT applications using RFID include smart shopping, healthcare,\
    \ national security and smart\nagriculture applications. An IoT-based smart irrigation\
    \ system based on RFID was presented in [18].\nThe system was comprised of soil\
    \ moisture and soil temperature sensors along with a water control\nsystem, so\
    \ it collected the reading of the sensors and sent these readings to the cloud\
    \ using RFID\ncommunication protocols, where the user controlled a water pump\
    \ based on the water level of the soil.\n2.6. Wi-Fi\nWi-Fi is the most common\
    \ communication protocol that enables devices to communicate over\na wireless\
    \ signal. Wi-Fi provides Wireless Local Area Network (WLAN) connectivity to millions\
    \ of\nlocations, i.e., homes, ofﬁces and public locations such as cafes, hotels\
    \ and airports with high speed.\nThe Wi-Fi protocol supports IEEE 802.11, 802.11a,\
    \ 802.11b, 802.11g and 802.11n. Wi-Fi is widely used\nin IoT-based applications\
    \ including agriculture systems, i.e., smart irrigation, crop health monitoring\n\
    and greenhouses. In [19], an infrastructure was presented to monitor environmental\
    \ parameters\ninside the greenhouse such as temperature, light intensity and soil\
    \ moisture level. This platform\nwas comprised of sensors that collected the data\
    \ related to the environmental variation and sent to\nthe cloud using Wi-Fi. Similarly,\
    \ another smart agriculture system based on Wi-Fi communication\nprotocols was\
    \ presented in [20]. This last one consisted of a Raspberry Pi connected with\
    \ multiple\nsensors, which collected the data. The collected data were further\
    \ transmitted to the cloud using Wi-Fi\ncommunication protocols.\n2.7. LoRaWAN\n\
    LoRaWAN operates on the LoRa network. LoRaWAN deﬁnes the system architecture and\n\
    communication protocol of the network, while the physical layer of LoRa enables\
    \ the link for\nlong-range communication. LoRaWAN manages the frequencies in communication,\
    \ data rate and\npower consumption for all devices. LoRaWAN is common in agricultural\
    \ applications because of\nits large coverage area and low power consumption [21].\
    \ In [14], a smart irrigation system based on\nLoRaWAN was presented. Table 3\
    \ shows the comparison of all mentioned wireless communication\nprotocols [8].\
    \ Among all wireless communication technologies, 6LoWPAN and ZigBee are considered\n\
    to be more suitable for PA application because both are based on mesh networking,\
    \ which makes them\nsuitable to cover large area.\nTable 3. Wireless communication\
    \ protocols used in Precision Agriculture (PA).\nCommunication Protocols\nData\
    \ Rate\nTopology\nStandard\nPhysical Range\nPower\n6LoWPAN\n0.3–50 Kb/s\nStar,\
    \ Mesh\nIEEE 802.15.4\n2–5 km urban,\n15 km suburban\nLow\nZigBee\n250 Kb/s\n\
    Star, Mesh Cluster\nIEEE 802.15.4\n10–100 m\nLow\nBluetooth\n1–2 Mb/s\nStar, Bus\n\
    IEEE 802.15.1\n30 m\nLow\nRFID\n50 tags/s\nP2P\nRFID\n10–20 cm\nUltra low\nLoRa\
    \ WaAN\n27–50 Kb/s\nP2P, Star\nIEEE 802.11ah\n5–10 km\nVery low\nWi-Fi\n1–54 Mb/s\n\
    Star\nIEEE 802.11\n50 m\nMedium\nSensors 2019, 19, 3796\n7 of 25\n3. Spectral\
    \ Image-Based Remote Sensing\nRemote sensing has been widely used in PA to monitor\
    \ crops’ health for the last two decades.\nRemote sensing is a phenomenon in which\
    \ physical conditions of the Earth are observed remotely by\ncalculating the emitted\
    \ and reﬂected radiation from some distance. There are special cameras that\n\
    are used to capture images for further analysis to ﬁnd the characteristics of\
    \ a speciﬁc area. Multiple\nplatforms are used to mount these cameras that capture\
    \ images of the objects.\n3.1. Spectral Image Platforms\nRemote sensing platform\
    \ considerations for spectral images are airborne-based, satellite-based\nand\
    \ Unmanned Aerial Vehicle (UAV)-based [22]. Each platform has its own coverage\
    \ range, which\nis determined by three factors: (i) Ground Sampling Distance (GSD),\
    \ which is computed in terms of\nspatial resolution, (ii) data collection rate\
    \ or frequency and (iii) average distance between the object\nand sensor. Apart\
    \ from coverage range, several factors [23] affect the performance of platforms,\n\
    as mentioned in Table 4.\nTable 4. Key differences between spectral image platforms.\n\
    Applicability Aspect\nAirborne\nUAV\nSatellite\nObservation Area\nRegional\nLocal\n\
    Worldwide\nGround Coverage\n1 km (Medium)\n100 m (Small)\n10 km (Large)\nField\
    \ of View\nWider\nWide\nNarrow\nGSD (Spatial Resolution)\n5–25 cm\n10–5 cm\n0.30–300\
    \ m\nDeployability\nComplex\nEasy\nDifﬁcult\nSpatial Accuracy\n1–25 cm\n5–10 cm\n\
    1–3 m\nRepeat Time\nHour(s)\nMinute(s)\nDay(s)\nOperational Risk\nHigh\nLow\n\
    Moderate\n3.1.1. Satellite-Based Platforms\nSpace-borne platforms for remote sensing\
    \ are considered to be the most stable platforms among\nall others. These platforms\
    \ consist of satellites, rockets and space shuttles. Space borne platforms are\n\
    categorized based on the orbits and timing. The advantages of satellite-based\
    \ remote sensing include\nhigh spatial resolution, which makes it promising to\
    \ extract extensive time-series data. The images\nobtained by satellite platforms\
    \ cover large area and are stable without noise, which is normally induced\ndue\
    \ to interference while image capturing. However, the main problem with satellite-based\
    \ platforms\nis their high cost in the case of high spatial resolution images.\
    \ The second problem is their strictly ﬁxed\ntime schedule, so data cannot be\
    \ collected at critical timings. The re-visitation times vary from twice\nin one\
    \ day to 16 days, depending on the orbit of the satellite. The other big problem\
    \ is that satellite\nplatforms are highly sensitive to weather conditions, so\
    \ if the weather is cloudy, the captured image will\nhave less detailed information.\
    \ Table 5 shows the main types of satellites with their speciﬁcations [22].\n\
    Among all satellite platforms presented in Table 5, some satellite data are freely\
    \ available,\nwhile others provide a commercial solution. The commercial solutions\
    \ such as Pleiades-1 provide\nimages with a high resolution and a revisit time\
    \ of one day. QuickBird, Landsat-8 and Sentinel are\nfrequently-used satellite\
    \ platforms used to obtain hyperspectral imagery. QuickBird was launched\nin 2001\
    \ by USA. The Panchromatic (PAN) and four Multi-Spectral (MS) imagery sensors\
    \ are used in\nQuickBird with a GSD of 0.7 × 0.7–2.6 × 2.6 m with a revisit time\
    \ 1–3.5 days. QuickBird provides a\nsmall revisit time, but it is a commercial\
    \ solution. In contrast to QuickBird, Landsat-8 and Sentinel\nprovide free solutions.\
    \ Landsat-8 was launched in 2013 by the USA. Landsat-8 provides a GSD of\n16 days\
    \ with PAN and 11-MS imagery sensors. Though revisit time of Landsat-8 is much\
    \ higher\ncompared to QuickBird, but it provides images with 11 different multi-spectral\
    \ bands.\nSentinel is another broadly-used satellite launched by the EU. It currently\
    \ has three missions,\ni.e., Sentinel-1, Sentinel-2 and Sentinel-3. These missions\
    \ provide images with 21 MS bands with\nSensors 2019, 19, 3796\n8 of 25\nrevisit\
    \ times of 5–10 days depending on which Sentinel mission is used. However, Sentinel-2\
    \ is a\ncommonly-used platform in precision agriculture as it provides data freely\
    \ at a 10-m spatial resolution\nand covers a swath width of 290 km. By combining\
    \ Sentinel-2A and Sentinel-2B, the revisit time is\nfurther reduced to ﬁve days,\
    \ which helps in change detection. The complete details of all satellite\nplatforms\
    \ with their speciﬁcations are listed in Table 5, where other platforms such as\
    \ SAT, MODIS\nand WordView are also considered.\nTable 5. Satellite platforms\
    \ for RS.\nName\nLaunch\nSensor\nCountry\nSwath\nWidth (km)\nGSD 1 Range (m)\n\
    Revisit Time (day)\nRapidEye\n2008\n5 MS2\nGermany\n77\n6.5 × 6.5\n1–5.5\nQuickBird-2\n\
    2001\nPAN3\nUSA\n16.8–18\n0.7 × 0.7\n1–3.5\n4 MS2\n2.6 × 2.6\nPleiades 1\n2011\n\
    PAN3\nFrance\n20\n0.5 × 0.5\n1\n2012\n4 MS2\n2 × 2\nSentinel-1\n2014\nC-band\n\
    EU\n80\n5 × 5\n12\n2016\nSAR6\n250\n5 × 20\n6 (dual)\n400\n25 × 40\nWorldView-3\n\
    2014\nPAN3, 8 MS2, 8 MS2\nUSA\n13.1\n0.3 × 0.3\n1–4.5\n(SWIR4), 12 MS2\n1.2 ×\
    \ 1.2\n3.7 × 3.7\nLandsat-8\n2013\nPAN3, 11 MS2\nUSA\n185\n15 × 15\n16\n30 × 30\n\
    Sentinel-2\n2015\n13 MS2\nEU\n290\n10 × 10\n10\n20 × 20\n2016\n60 × 60\n5 (dual)\n\
    EnMap\n2017\n232 HSI5\nGermany\n30\n30 × 30\n4\nICESat\n2003\n2 HSI5\nUSA\nN/A\n\
    70\n8\n(footprint)\nTanDEM-X\n2007\nX-band\nGermany\n5 × 10\n1 × 1\n11\nSAR6\n\
    1500 × 30\n3 × 3\n1500 × 100\n16 × 16\nSkySat\n2013\nPAN3\nUSA\n2 × 1\n1.1 × 1.1\n\
    0.5 (2015)\nVideo\n2014\nPAN3\n8\n0.9 × 0.9\n0.12 (2017)\n2015\n4 MS2\n2 × 2\n\
    ICESat-2\n2018\n1 HSI5\nUSA\nN/A\n10\nN/A\n(9-beam)\n(footprint)\nSentinel-3\n\
    2015\n21 MS2\nEU\n1270\n300 × 300\n0.25\n2017\n11 MS2\n1420\n500 × 500\n(IR)\n\
    750 (nadir)\n1000 × 1000\nRADARSAT-2 2007\nC-band\nCanada\n20\n3 × 3\n24 (orbit\
    \ repetition)\nSAR6\n500\n100 × 100\nSPOT 6\n2012\nPAN3\nFrance\n60\n1.5 × 1.5\n\
    1–5\nSPOT 7\n2014\n4 MS2\n6 × 6\nTerraSAR-X\n2007\nX-band\nGermany\n5 × 10\n1\
    \ × 1\n11\nSAR6\n1500 × 100\n16 × 16\nDMC-3\n2015\nPAN3\nU.K.\n23\n1 × 1\n1\n\
    4 MS2\n4 × 4\nGSD1: Ground Sampling Rate, MS2: Multi-Spectral, PAN3: Panchromatic,\
    \ SWIR4: Short Wave Infrared, HSI5:\nHyperspectral Imagery, SAR6: Synthetic Aperture\
    \ Radar\n3.1.2. Airborne-Based Platforms\nAirborne platform are ﬂexible compared\
    \ to satellite platforms, but still are expensive. The revisit\ntime is in human\
    \ control, which can be changed any time. The coverage area by this platform is\n\
    much smaller than satellite-based ones, but relatively greater than the UAV platforms.\
    \ Some common\nairborne platforms used for remote sensing [22] are given in Table\
    \ 6.\nSensors 2019, 19, 3796\n9 of 25\nTable 6. Airborne/aircraft platforms for\
    \ RS.\nAircraft Type\nTypical Models\nRS Sensors\nMax Flying Height (ft)\nFixed\
    \ wing (jet)\nLearJet 35A\nInSAR,\n45,000\nCamera,\nGeoSAR\nFixed wing (propeller\
    \ engine)\nCessna 402\nCamera\n26,900\nCommander 690\nLiDAR\n19,400\nCessna 208\n\
    Camera\nLiDAR\n25,000\nCessna 206\nCamera\nDHC-6 Twin\nCamera\n15,700\nOtter 300\n\
    LIDAR\n25,000\nDiamond\nCamera\nDA42\nLiDAR\n18,000\nPilatus PC-6\nCamera\nPorter\n\
    Camera\n25,000\nPiper Navajo\nLiDAR\n26,000\nPartenavia\nCamera\nP.68\nLiDAR\n\
    19,200\nVulcanair P68\nCamera\nObserver\nCamera\n18,000\nGyroplan\nAutoGyro\n\
    LiDAR\n10,000\nCavalon\nCamera\nHelicopter\nEurocopter\nLiDAR\n15,000\nAS350\n\
    Camera\nRobinson R44\nLiDAR\n14,000\nCamera\nBell 206\nLiDAR\n13,000\nCamera\n\
    Schweizer\nLiDAR5\n13,000\nCamera\n3.1.3. UAV-Based Platforms\nUAV platforms are\
    \ a vibrant alternative to satellite and airborne, which are quite ﬂexible and\
    \ cost\neffective. A typical UAV platform consists of a communication and navigation\
    \ system that incorporates\na set of sensors mounted on it. Among UAV platforms,\
    \ there are mainly ﬁxed-wing platforms. and\nmultirotor options are available.\
    \ The ﬂying time is based on the payload weight. In general, a longer\nﬂying time\
    \ is achieved by ﬁxed-wing systems, which demands lighter weight payloads. For\
    \ example,\nhigh-deﬁnition cameras weighing less than 300 grams as the payload\
    \ of a ﬁxed-wing UAV allow it to ﬂy\nfor around two hours using currently available\
    \ battery power [24]. On the contrary, battery-powered\nmultirotor UAV with higher\
    \ payload capacity have a reduced ﬂying time, i.e., around 15–25 min.\nTable 7\
    \ shows UAV platforms commonly used in the agriculture domain and concretely to\
    \ monitor\nthe health of crops remotely [22]. Among these platforms, DJI/Phantom-2\
    \ is a more suitable choice\nfor intermediate agricultural land because of its\
    \ low cost and ease of use. The other advantage of this\nplatform is that it provides\
    \ support for mounting multiple cameras, which helps to monitor the crop in\n\
    multiple electro-magnetic bands. The American Aerospace/RS-16 is also an option\
    \ because of its ﬂight\ntime and large are coverage, but due to its high cost,\
    \ this platform is not common.\nIn [25], the ESAFLY A2500_WH helicopter was used\
    \ to implement the platform of the UAV\nwith Tetra cam ADC Micro as the camera\
    \ to capture hyper-spectral images of two different types of\ncultivation, i.e.,\
    \ vineyard and tomato. The images captured by the UAV platform are very high in\n\
    resolution, so more information can be extracted as compared to satellite images.\
    \ To assess the health\nof a crop, three types of Vegetation Index (VI) maps have\
    \ been computed.\nSensors 2019, 19, 3796\n10 of 25\nTable 7. UAV platforms for\
    \ RS.\nWeight (kg)\nAircraft Power/Type\nManufacturer/Model\nFlying Time (min)\n\
    Flying Speed (m/s)\nRS Sensors\n0.7\nFixed-wing/electric\nsenseFly/eBee RTK\n\
    40\n11–25\nCamera\n6.1\nFixed-wing/electric\nAeroVironment/Puma AE\n210\n23\n\
    Camera\n6.0\nQuadro copter/electric\nMicrodrones/MD4-1000\n90\n12\nCamera/LiDAR\n\
    4.6–6.6\nHexacopter/electric\nAibotix/Aibot X6\n30\n14\nCamera\n5\nFixed-wing/electric\n\
    Trigger\nComposites/Pteryx\n120\n12.5–15\nCamera\n1.3\nQuadrocopter/electric\n\
    DJI/Phantom 2\n25\n15\nCamera\n2.5\nFixed-wing/electric\nTrimble/UX5\n50\n22\n\
    Camera\n2.7\nFixed-wing/electric\nTopcon/SIRIUS PRO\n50\n18\nCamera\n5.1–5.8\n\
    Fixed-wing/electric\nHawkeye\nUAV/AeroHawk\n90\n16.5–19.5\nCamera\n6.9–9.5\nHexacopter/electric\n\
    TRGS/Li-AIR\n15\n8\nLiDAR\n9.5\nOctocopter/electric\nAltus UAS/Delta X8\n10–14\n\
    12\nCamera/LiDAR\n25\nOctocopter/electric\nRiegl/Ricopter\n30\n22\nLiDAR/camera\n\
    77\nHelicopter/gas\nAeroscout/Scout B1-100\n90\nLiDAR\n90\nHelicopter/gas\nIGI/geocopter\n\
    120–180\nCamera/LiDAR\n9.2\nOctocopter/electric\nAltigator/OnyxStar\nFOX-C8 HD\
    \ LiDAR\n20\nLiDAR\n38\nFixed-wing/gas\nAmerican\nAerospace/RS-16\n720–960\n33\n\
    Camera\n3.2. Vegetation Indices\nUsing multi-spectral images from the remote sensors\
    \ described above, a series of Vegetation\nIndices (VIs) can be computed. Vegetation\
    \ Indices (VIs) obtained from remote sensing-based canopies\nare effective algorithms\
    \ for quantitative and qualitative evaluations of vigour, vegetation cover and\n\
    growth dynamics, among other applications [26]. Hitherto, no uniﬁed mathematical\
    \ expression exists\nthat deﬁnes all VIs due to the complexity of the several\
    \ light spectra combinations, instrumentation,\nresolutions and platforms used.\
    \ In particular, this section focuses on vegetation indices NDVI, GDVI\nand SAVI,\
    \ as they are widely used in PA.\n3.2.1. NDVI\nThe Normalized Difference Vegetation\
    \ Index (NDVI) is the most popular VI that is extensively\nused to ﬁnd the content\
    \ of green in PA applications [27,28]. It uses Red (R) and Near Infrared (NIR)\n\
    channels to compute the NDVI index. More NIR light is absorbed by healthy vegetation;\
    \ however,\nabsorption ratio is very small for red light. NDVI is computed by\
    \ Equation (1) and returns a value\nbetween −1 and 1 [29].\nNDVI = NIR − R\nNIR\
    \ + R\n(1)\nHigher NDVI value indicate healthy vegetation, while smaller values\
    \ of NDVI show that vegetation is\nvery small at that speciﬁc region. There is\
    \ another form of NDVI, i.e., the Green Normalized Vegetation\nIndex (GNDVI),\
    \ which uses the green channel instead of red. GNDVI is computed by Equation (2):\n\
    GNDVI = NIR − G\nNIR + G\n(2)\nSensors 2019, 19, 3796\n11 of 25\n3.2.2. Difference\
    \ Vegetation Index\nThe DVI was proposed to reduce the effect of soil reﬂectance,\
    \ which is not covered by NDVI [30].\nDVI is different between the reﬂectance\
    \ of the NIR band to the reﬂectance of the red band. DVI is also\ncomputed with\
    \ the green band, i.e., GDVI. Both DVI and GDVI are computed by Equations (3)\
    \ and (4):\nDVI = NIR − R\n(3)\nGDVI = NIR − G\n(4)\n3.2.3. SAVI\nNDVI and DVI\
    \ do not compensate the background effect of soil. Therefore, many vegetation\n\
    indices were introduced to compensate the effect of soil reﬂectance. The Soil\
    \ Adjusted Vegetation Index\n(SAVI), the Green Soil Adjusted vegetation Index\
    \ (GSAVI), the Optimized Soil Adjusted Vegetation\nIndex (OSAVI), the Green Optimized\
    \ Soil Adjusted Vegetation Index (OGSAVI) and the Modiﬁed\nSoil Adjusted Vegetation\
    \ Index (MSAVI) [31–33] are common among them, which are computed by\nEquations\
    \ (5)–(9):\nSAVI =\n1.5(NIR − R)\n(NIR + R + 0.5)\n(5)\nGSAVI = 1.5(NIR − G)\n\
    NIR + G + 0.5\n(6)\nOSAVI =\n(NIR − G)\nNIR + R + 0.16\n(7)\nGOSAVI =\n(NIR −\
    \ G)\nNIR + G + 0.16\n(8)\nMSAVI = 0.5[2(NIR + 1) −\nq\n(2NIR + 1)2 − 8(NIR −\
    \ R)]\n(9)\n3.2.4. NR and NG:\nNormalized Red (NR) and Normalized Green (NG) are\
    \ two other famous vegetation indices being\nused in PA [33]. NR focuses on the\
    \ part of spectrum where radiation is absorbed by chlorophyll, while\nNG focuses\
    \ on the part of the spectrum where radiation is absorbed by other pigments, excluding\n\
    chlorophyll. NR and NG are computed by Equations (10) and (11):\nNR =\nR\nNIR\
    \ + R + G\n(10)\nNG =\nG\nNIR + R + G\n(11)\n4. Wireless Sensor Network Applications\
    \ in Agriculture\nMultiple applications of wireless sensor networks are being\
    \ utilized today in the agriculture sector.\nSome very common applications are\
    \ smart irrigation, smart fertilization, smart pest control and green\nhouse monitoring.\n\
    4.1. Smart Irrigation Systems\nSmart irrigation is an artiﬁcial irrigation application\
    \ that controls the quantity of water by making\na decision about where water\
    \ is needed. It is the most signiﬁcant constituent in agriculture, which has\n\
    a great impact on crops’ health, cost and productivity. One major aspect of smart\
    \ irrigation is to avoid\nSensors 2019, 19, 3796\n12 of 25\nthe wastage of water\
    \ since most countries in the world are facing water scarcity problems. A smart\n\
    irrigation system was presented in [34] in which a Raspberry Pi was used along\
    \ with two sensors:\na soil moisture sensor was used to assess the water level\
    \ in the soil, while a temperature and humidity\nsensor was used to monitor the\
    \ environmental condition. The Raspberry Pi was connected to these\nsensors and\
    \ the water supply network. A mobile application was developed for remote monitoring\n\
    and remote water ﬂow control enabling both manual and automatic water ﬂow control.\
    \ In automatic\nmode, water ﬂow was automatically turned ON/OFF based on the water\
    \ level of the soil without\nhuman intervention. In manual mode, the user was\
    \ able to monitor the soil moisture level. An alert\nwas generated when the water\
    \ level of soil was getting below a speciﬁc threshold, and the user turned\nit\
    \ ON/OFF using a mobile application.\nPower is a big concern in IoT-based platforms,\
    \ so many researchers have developed power-\nefﬁcient systems. A power-efﬁcient\
    \ water irrigation system was presented using solar power [35]\nin which the controller\
    \ was connected to the soil sensor and water supply valve. The water valve\nwas\
    \ turned ON/OFF based on the water level monitored by the moisture sensor. The\
    \ power was\nsupplied by the solar panel, so the system was independent of any\
    \ external power module. Another\nsensor-based IoT system for water irrigation\
    \ was presented in [36] in which the controller controlled\nthe opening and closing\
    \ of a solenoid valve based on the water level of the soil. In addition, a series\
    \ of\nweather alerts were sent to the user via a mobile application to update\
    \ the temperature and humidity of\nthe environment, which had a direct inﬂuence\
    \ on the water level of the soil. In [37], an energy-efﬁcient\nirrigation system\
    \ for cultivated crops was presented using a wireless sensor network in which\
    \ water\nwas effectively controlled based on environmental conditions. This system\
    \ estimated the quantity of\nwater needed for normal irrigation based on the humidity,\
    \ temperature and wind speed collected by\nsensors along with historical data.\n\
    In [38], an IoT-based irrigation system was presented using soil moisture sensors\
    \ controlled by\nATMEGA 328P on an Arduino UNO board along with a GPRS module.\
    \ The data collected from the\nsensors were sent to the cloud, i.e., Things Speak,\
    \ where graphs were generated to visualize the data\ntrends. A web portal was\
    \ also designed where the farmer was able to check the status of water, if it\n\
    was ON/OFF. Similarly, a real-time prototype for an irrigation system was presented\
    \ in [39] in which\nsoil moisture sensors and soil temperature sensors were used\
    \ to assess the water status of the soil.\nRFID was used to transmit data to the\
    \ cloud for further data analysis. Using ATMEGA 328, a water\nsprinkler system\
    \ for smart irrigation was presented in [40] using temperature, humidity and soil\n\
    moisture sensors. The water sprinkler was controlled based on the soil moisture\
    \ level to save water\nand reduce human effort. In [41], a cost-effective drip\
    \ irrigation system for a home was proposed in\nwhich a Raspberry Pi, Arduino,\
    \ electronic water control valve and relay were used. ZigBee protocols\nwere used\
    \ for communication. The user turned ON/OFF the water valve by sending commands\
    \ to the\nRaspberry Pi, which further processed the commands through the Arduino.\n\
    The sensors placement is a big issue that affects the accuracy of sensors. A detailed\
    \ discussion of\nsoil moisture positioning in the ﬁeld and their accuracy was\
    \ presented in [42]. For real-time irrigation\nsystems, complete software and\
    \ hardware requirements, problems and challenges and advantages\nwere discussed\
    \ in [43] where a big picture of the complete system was provided.\n4.2. Smart\
    \ Fertilization System\nFertilizer is an artiﬁcial or natural substance having\
    \ some chemical elements used to enhance\nthe growth and productivity of plants.\
    \ Manual spraying is a common technique used for fertilization.\nHowever, the\
    \ optimal way of fertilization requires sensing capabilities to ﬁnd the exact\
    \ place where\nfertilizer is needed, which chemical components are missing and\
    \ the amount of fertilizer needed.\nIt is important to provide fertilizers in\
    \ a very precise amount in order to improve productivity [44].\nMultiple fertilization\
    \ techniques have been presented by researchers since the last decade using WSN\n\
    and IoT.\nSensors 2019, 19, 3796\n13 of 25\nAn automated fertilization system\
    \ was presented in [45] using real-time sensors to measure the\nsoil fertility.\
    \ The system consisted of three modules including input, output and decision support.\n\
    The decision support module measured the optimal amount of fertilizers needed\
    \ for the growth of the\nplants based on the real-time sensory data captured by\
    \ the sensors. A mechanical sensor named the\n“Pendulum Meter” was introduced\
    \ in [46], which was used for optimal fertilization. This sensor was\nmounted\
    \ on the tractor to measure the density of the crop, so the corresponding fertilizer\
    \ spreader\nwas controlled based on the readings of this sensor. The IEEE 802.11\
    \ Wi-Fi module was used for\ncommunication along with GPS. Real-time data of soil\
    \ were collected by several sensors, i.e., soil\nmoisture, temperature, conductivity,\
    \ NO2, CO2, etc. A Geographical Information System (GIS) server\nwas used to interpolate\
    \ sensory data.\n4.3. Smart Pest Control and Early Disease Detection System\n\
    Pest attacks are the root cause of low productivity in the agriculture sector.\
    \ These pests result in\nseveral serious diseases in plants that affect the plant’s\
    \ growth. However, disease prediction provides\nearly warning to the farmers,\
    \ which enables them to make appropriate decisions to control the disease\non\
    \ time. Pest control systems are comprised of electronic devices that enable humans\
    \ to identify traps\nin a speciﬁc range of these electronic devices [47]. These\
    \ electronic devices are sensors capable of\ncalculating the environmental parameters\
    \ for further analysis.\nMuch research has been done in the agriculture sector\
    \ for early disease detection and pest control\nsystems using more advanced and\
    \ sophisticated technologies [48,49]. Multiple imagery sensors have\nbeen used\
    \ by different researchers to collect imagery data, such as: RGB sensors, ﬂuorescence\
    \ imagery\nsensors, spectral sensors and thermal sensors [50]. The thermal sensors\
    \ are used to measure the water\nstatus in the plant by measuring the temperature,\
    \ since this parameter has a direct inﬂuence on the\nwater level in the plants.\
    \ RGB images have three colour channels, i.e., red, green and blue, which\ncan\
    \ be used to perceive the biometric effect in the plants. Multi- and hyper-spectral\
    \ sensors capture\nimages containing the spatial information of objects in multiple\
    \ wavebands. The spatial resolution is\ndependent on the distance between the\
    \ object and the sensor. That is why satellite images contain less\nspatial resolution\
    \ as compared to low altitude platforms such as drones. The ﬂuorescence sensors\
    \ are\nused to distinguish the photosynthetic activities in the plants. Various\
    \ image processing techniques\nare applied to these imagery data to identify the\
    \ diseases in plants.\nIn [50], an IoT-based plants disease and pest prediction\
    \ system was presented to minimize the\nexcessive use of fungicides and insecticides.\
    \ Weather condition monitoring sensors, i.e., temperature,\ndew, humidity and\
    \ wind speed, are used to monitor weather parameters to ﬁnd a correlation between\n\
    pest growth with weather. The sensors have been deployed in orchards, and data\
    \ collected from these\nsensors are sent to the cloud. The farmer is informed\
    \ about the alarming condition of the pest attack\non the crops.\nFrom a different\
    \ point of view, hyper-spectral images are used to analyse crops’ health and pest\n\
    attack using manned or unmanned vehicles on which spectral cameras are mounted.\
    \ The captured\nimages are analysed in depth using machine learning techniques\
    \ to identify the disease in the plants.\nAdvance Neural Networks (ANNs) are more\
    \ common for processing imagery data due to their ability\nto learn complex structures\
    \ and patterns. Using hyper-spectral images, a system was presented [51] to\n\
    identify disease or pest attack in crops. The proposed system for disease detection\
    \ used an ANN with\nmultiple layers.\nEarly disease detection in sugar beet plants\
    \ was presented in [52]. For early detection, four\nsupervised classiﬁcation algorithms\
    \ were applied on spectral images. Spectral images were then\ncollected for each\
    \ image, and multiple vegetation indices were calculated to be used in predictive\n\
    and perspective analysis. The vegetation indices used were NVDI, SR, SIPI, PSSRaand\
    \ PSSRb, ARI,\nREP, mCAIand RRE. These vegetation indices values were used as\
    \ features in the dataset. Support\nVector Machine (SVM), ANN, and decision tree\
    \ were used for classiﬁcation. A comparative analysis\nwas performed which, showed\
    \ that SVM outperformed other classiﬁers for disease detection with an\nSensors\
    \ 2019, 19, 3796\n14 of 25\naccuracy of 97.12%. In [53], a data mining technique\
    \ was applied on the already collected dataset of\ntwo types of crops, i.e., wheat\
    \ and paddy (rice), in India. For dimension reduction, Sammon’s mapping\nwas used\
    \ for multi-dimension scaling, i.e., to reduce the dimension also for unsupervised\
    \ learning.\nFor high dimensional data, dimension reduction is required prior\
    \ to performing further data analysis\nfor better data visualization and accuracy,\
    \ since redundant dimensions reduce the effectiveness of\nany data analysis algorithms.\
    \ Principle Component Analysis (PCA) is a very often-used technique\nalong with\
    \ Sammon’s mapping. Data from multi-dimensions were reduced to two or three dimensions.\n\
    Then, the Self-Organized Maps (SOM) algorithm for clustering was used to ﬁnd correlations\
    \ between\nthe data. The accuracy comparison of SOM and Sammon’s mapping was presented,\
    \ which showed\nthat SOM performed better on a large dataset, while Sammon’s mapping\
    \ was suitable for small ones.\nSmart phones played important role in data acquisition,\
    \ which were further used to monitor the crops’\nhealth. In [54], the health of\
    \ wheat crop was monitored using near surface imagery captured by a smart\nphone.\
    \ The crop was classiﬁed as healthy or unhealthy based on the green level by computing\
    \ Gcc.\nMost of the applications in PA have been either IoT-based in which multiple\
    \ sensors are used to\nassess the health of the crop or remote sensing-based in\
    \ which crop health is assessed by performing\nsome computation on spectral images.\
    \ We can compare crop health monitoring application based\non some attributes\
    \ such as which sensors are used in particular applications, whether web or mobile\n\
    services are provided or not, etc. The comparative analysis of some existing crop\
    \ health monitoring\napplications is presented in Table 8 based on some attributes.\n\
    To precisely monitor the crop health, both IoT-based techniques and remote sensing\
    \ techniques\nshould be used together to provide more reliable and accurate information\
    \ about the crop. As a\nproof of concept, we present a case study in which a crop\
    \ health monitoring system based on IoT and\nremote sensing techniques is proposed.\
    \ We provide a complete end-to-end solution in the agriculture\ndomain by facilitating\
    \ the agricultural user with web and mobile services so that he/she could be\n\
    informed about the latest condition of the crop in a timely manner. In this way,\
    \ remedy actions could\nbe performed in time, which will result in enhanced production.\n\
    Sensors 2019, 19, 3796\n15 of 25\nTable 8. Comparison among existing PA applications.\n\
    PA\nEdge\nData\nSoil\nSoil\nAir\nAir\nVegetation\nWeb\nMobile\nLight\nWind\nApplication\n\
    Computing\nAnalytic\nMoisture\nTemperature\nMoisture\nTemperature\nIndex\nServices\n\
    Services\nIntensity\nVelocity\n[1]\nN\nY\nN\nN\nN\nY\nY\nN\nN\nN\nN\n[4]\nN\n\
    Y\nN\nN\nN\nN\nN\nY\nY\nN\nN\n[28]\nN\nY\nN\nN\nN\nN\nY\nN\nN\nN\nN\n[29]\nN\n\
    Y\nN\nN\nN\nN\nY\nN\nN\nN\nN\n[41]\nN\nN\nY\nN\nN\nN\nN\nN\nN\nN\nN\n[52]\nN\n\
    Y\nN\nN\nN\nN\nY\nN\nN\nN\nN\n[55]\nN\nN\nY\nN\nY\nY\nN\nN\nY\nN\nN\n[56]\nY\n\
    N\nY\nY\nY\nY\nN\nN\nN\nY\nN\n[57]\nN\nY\nY\nY\nY\nY\nN\nN\nN\nY\nN\n[58]\nN\n\
    N\nN\nY\nN\nN\nN\nN\nN\nN\nN\n[59]\nN\nY\nN\nN\nN\nN\nY\nN\nN\nN\nN\n[60]\nY\n\
    Y\nY\nN\nY\nY\nN\nY\nY\nY\nN\n[61]\nY\nY\nY\nY\nY\nY\nN\nY\nY\nY\nY\n[62]\nN\n\
    Y\nN\nN\nN\nY\nN\nY\nN\nN\nN\n[63]\nN\nY\nY\nY\nY\nY\nN\nY\nN\nN\nN\n[64]\nN\n\
    Y\nY\nN\nY\nY\nN\nY\nN\nN\nN\n[65]\nN\nY\nY\nY\nN\nY\nN\nN\nN\nN\nN\n[66]\nN\n\
    Y\nN\nN\nN\nN\nY\nN\nN\nN\nN\n[67]\nN\nY\nY\nY\nN\nY\nY\nY\nY\nN\nN\n[68]\nN\n\
    Y\nN\nN\nN\nN\nY\nN\nN\nN\nN\nProposed system\nY\nY\nY\nY\nY\nY\nY\nY\nY\nN\n\
    N\nSensors 2019, 19, 3796\n16 of 25\n5. A Case Study on UAV-Based and IoT-Based\
    \ Precision Agriculture\nWe developed a complete solution for crop health monitoring\
    \ based on IoT and remote sensing.\nIn the proposed system, crop health is monitored\
    \ using data collected from multiple IoT sensors,\nas well as NDVI mapping of\
    \ spectral images captured by a drone. The architecture of the proposed\nsystem\
    \ is shown in Figure 1, which was designed according to two main modules. The\
    \ ﬁrst module\nwas a wireless sensor network-based system in which multiple wireless\
    \ nodes were developed. Each\nwireless node was comprised of a soil moisture sensor\
    \ used to monitor the water level of the soil,\na soil temperature sensor used\
    \ to check the temperature of the soil and air temperature and humidity\nsensors.\
    \ These nodes were deployed across the ﬁeld in a star topology fashion where the\
    \ master node\ncollected readings from all slave nodes and transmitted the captured\
    \ reading to the back-end server for\nfurther processing. The master node acted\
    \ as a gateway node, which received data from all slave nodes\nusing NRF communication\
    \ module. After performing initial processing, the master node transmitted\nthe\
    \ data to the cloud using GSM communication technology. In the case of the unavailability\
    \ of the\nGSM network, this node stored the captured data and transmitted to the\
    \ cloud upon the availability\nof network.\nThe second module was used to monitor\
    \ crop health using multi-spectral imagery, which was\ncollected by a multi-spectral\
    \ camera mounted on a drone. The NDVI was computed using Equation (1)\nto classify\
    \ between healthy and unhealthy plants by measuring the chlorophyll content in\
    \ the crops,\nwhich was further used to localize the area under stress precisely.\n\
    All collected data were sent to the cloud where further analysis was performed.\
    \ The web portal\nwas designed to help the farmer monitor the crop proﬁle over\
    \ the whole life cycle. Currently, we are\nmonitoring soil moisture, soil temperature,\
    \ air moisture and air temperature readings in real time\nalong with NDVI mapping\
    \ of spectral imagery. Multiple web services were provided on the web\nportal\
    \ including historical/real data visualization using graphs, weather monitoring,\
    \ NDVI mapping\nand the correlation among measured parameters. Figure 2 shows\
    \ the snapshots of the web portal\nalong with different services.\nFigure 1. System\
    \ architecture.\nSensors 2019, 19, 3796\n17 of 25\nFigure 2. User interface of\
    \ the web portal.\nFor portability and remote monitoring, a mobile application\
    \ was also developed to facilitate the\nfarmer/agronomist/landlord with all the\
    \ web services that are available on web portal. The alerts\nare generated when\
    \ an abnormal behaviour is observed in the crop, which help the farmer to take\n\
    remedy actions in a timely manner. The user interfaces of the mobile application\
    \ are shown in Figure 3.\nTherefore, the web portal along with mobile applications\
    \ provides a complete solution, which enables\nagricultural users monitor the\
    \ current status of the crop, as well as previous details.\nFigure 3. User interface\
    \ of the mobile application.\nSensors 2019, 19, 3796\n18 of 25\n6. Results and\
    \ Discussion\n6.1. Analysis of the Data Collected by IoT Nodes\nThe developed\
    \ IoT nodes were deployed across the wheat ﬁelds of an area of 1.4375 hectare.\n\
    The selected area was located in Islamabad, Pakistan. The wheat ﬁelds are shown\
    \ in Figure 4 along\nwith the IoT node and sensors. We deployed the system across\
    \ the wheat ﬁeld in March 2019 when\nwheat was in the grain ﬁlling and grain ripening\
    \ stage.\nFigure 4. System deployed across the wheat ﬁelds.\nWe collected the\
    \ sensors’ readings such as air temperature, air humidity, soil temperature and\n\
    soil moisture. We compared the observed crop parameters with the ideal wheat temperature\
    \ proﬁle\nas shown in Figure 5. Extreme variation in the weather of Islamabad\
    \ was observed in that particular\ntime period, which can be seen by how the actual\
    \ temperature for wheat crop deviated from the ideal\ntemperature proﬁle of the\
    \ wheat crop.\nFigure 5. Deviation of observed temperature from the ideal temperature\
    \ proﬁle.\nAdditionally, we performed linear regression to ﬁnd the correlation\
    \ between observed parameters,\nwhich provided insight into how changes in one\
    \ parameter can effect the other parameter. The linear\nregression found a relation\
    \ between the two parameters by ﬁtting the equation of the line using the\nobserved\
    \ dataset [69]. Equation (12) represents an equation of the line where mrepresents\
    \ the slope of\nline, while c indicates the y-intercept. The variables m and c\
    \ were learned from the data.\ny = mx + c\n(12)\nFigure 6A shows the correlation\
    \ between the observed air temperature and air humidity, which showed\nthat both\
    \ were negatively correlated. The correlation between air temperature and soil\
    \ temperature is\nshown in Figure 6B, which shows that both were positively correlated.\n\
    Sensors 2019, 19, 3796\n19 of 25\n(A)\n(B)\nFigure 6. (A) Correlation b/wair temperature\
    \ and air humidity. (B) Correlation b/w air temperature\nand soil temperature.\n\
    The rise in air temperature caused the air humidity to reduce, while it resulted\
    \ in an increase in\nsoil temperature and vice versa.\n6.2. Analysis of Multi-spectral\
    \ Images Captured by Drone\nTo collect multi-spectral imagery, we used the DJI-Phantom\
    \ Pro Advanced drone with the Sentera\nMulti-spectral-imaging sensor. The drone\
    \ had its own optical camera, while the multi-spectral camera\nwas mounted on\
    \ it to obtain spectral images. Multiple ﬂights of the drone were carried out\
    \ at the\nspeciﬁc growing stages of the crop, i.e., grain ripening and grain ﬁlling\
    \ stage. After collecting these\nimages, they were transferred to the cloud for\
    \ NDVI mapping. Figure 7A shows the optical image\nthat was captured on 16 May\
    \ 2019 when wheat was in the harvesting stage, while Figure 7B is its\nspectral\
    \ image, and Figure 7C is the NDVI mapping. Since wheat was at a mature stage,\
    \ its NDVI\nshould be very small, i.e., ideally there should be no green region\
    \ in the ﬁeld. However, in NDVI\nmapping, a large green region indicated the abnormal\
    \ behaviour of the crop. The green region was\ndue to naturally growing plants.\
    \ This information can be visualized on the web portal.\n(A)\n(B)\n(C)\nFigure\
    \ 7. Wheat crop. (A) Optical image; (B) spectral image; (C) NDVI mapping.\nThe\
    \ same process was performed in a maize ﬁeld when maize was in the grain ripening\
    \ stage.\nFigure 8A shows the optical image that was captured on 24 July 2019\
    \ when maize was in the grain\nripening stage, while Figure 8B is its spectral\
    \ image, and Figure 8C is the NDVI mapping. The same\nbehaviour can be observed\
    \ with the maize crop, i.e., there should be a minimal green region in the\nﬁeld.\
    \ However, in NDVI mapping, a large green region indicated the abnormal behaviour\
    \ of the crop.\nSensors 2019, 19, 3796\n20 of 25\n(A)\n(B)\n(C)\nFigure 8. Maize\
    \ crop. (A) Optical image; (B) spectral image; (C) NDVI mapping.\n7. Challenges\n\
    PA has been used since the last few decades to enhance crops’ yield with reduced\
    \ costs and\nhuman effort, although the adoption of these novel techniques by\
    \ farmers is still very limited owing to\nthe following reasons or challenges.\n\
    7.1. Hardware Cost\nPA relies mostly on hardware such as sensors, wireless nodes,\
    \ drones, spectral imaging sensors,\netc., which are used to assess multiple parameters\
    \ in real time. These sensors have multiple limitations\nincluding high development,\
    \ maintenance and deployment cost. Some systems in PA are cost effective\nand\
    \ are suitable for small arable land, i.e., smart irrigation systems that require\
    \ low-cost hardware\ncomponents and sensors. However, drone-based systems for\
    \ crops’ health monitoring are feasible for\nlarge arable land due to high installation\
    \ cost.\n7.2. Weather Variations\nEnvironmental variation is one of the major\
    \ challenges that affects the accuracy of data collected\nby sensors. Sensor nodes\
    \ deployed in the ﬁeld are sensitive to environmental variations, i.e., rain,\n\
    ﬂuctuation in temperature, wind speed, sun light, etc. Communication between wireless\
    \ nodes\nand the cloud can be interrupted due interference induced in wireless\
    \ communication channels by\natmospheric disturbance. The satellite, air borne\
    \ and drone platforms are also sensitive to weather\nvariations. Imagery acquired\
    \ by these platforms is affected by contamination of clouds and other\nnatural\
    \ aerosols. The development of advanced techniques for atmospheric correction,\
    \ cloud detection\nand noise interpolation is a current open challenge, which\
    \ requires hard efforts from the research\ncommunity.\n7.3. Data Management\n\
    The sensors in PA constantly generate data. To ensure the integrity of data, some\
    \ data security\nmeasures needs to be in place, which will in turn enhance the\
    \ cost of the system. The readings from\nthe sensors have to be accurate in order\
    \ to take appropriate actions precisely when and where required.\nAn intruder\
    \ can corrupt the readings, and false readings will adversely reduce the effectiveness\
    \ of\nthe system. PA systems generate immense amounts of data, which require enough\
    \ resources to\nperform data analysis. Real-time data collected from sensors deployed\
    \ across the ﬁelds after a few\nminutes and spectral imagery acquired from high-altitude\
    \ or low-altitude platforms produce the bulk\nof the data, which increase the\
    \ storage and processing requirements. New software platforms and\nfacilities\
    \ for scalable management of Big Data sources are demanded. In this regard, the\
    \ generation\nof software-as-a-service solutions is focused on merging data management\
    \ and IoT thorough cloud\ncomputing platforms.\nSensors 2019, 19, 3796\n21 of\
    \ 25\n7.4. Literacy Rate\nLiteracy is an important factor that inﬂuences the adoption\
    \ ratio in PA. In developing countries\nwhere the illiteracy rate is high, farmers\
    \ grow crops based on their experience. They do not utilize the\nstate-of-the-art\
    \ technologies in agriculture, which results in loss of production. Farmers need\
    \ to be\neducated in order to understand the technology or they have to trust\
    \ a third party for technical support.\nTherefore, in underdeveloped areas where\
    \ the literacy rate is not high, PA is not very common due to\nthe limitations\
    \ of resources and education.\n7.5. Connectivity\nNext-generation 5G networks\
    \ can be 100-times faster than 4G ones, making communication\nbetween devices\
    \ and servers much quicker. 5G can also carry much more data than other networks,\n\
    which makes it an ideal technology for transmitting information from remote sensors\
    \ and drones, key\ntools that are being tested in PA environments. The adoption\
    \ of new communication networks based\non 5G is a must in current applications\
    \ where secure and rapid data transfer enables real-time data\nmanagement and\
    \ support for decision making.\n7.6. Interoperability\nOne of the biggest problems\
    \ PA faces is the interoperability of equipment due to different digital\nstandards.\
    \ This lack of interoperability is not only obstructing the adoption of new IoT\
    \ technologies\nand slowing down their growth, but it also inhibits the gain of\
    \ production efﬁciency through smart\nagriculture applications. New methods and\
    \ protocols to integrate different machine communication\nstandards to unlock\
    \ the potential of efﬁcient machine-to-machine communication and data sharing\n\
    between machines and management information systems are required in the current\
    \ scenario of PA.\n8. Conclusion and Future Directions\nPrecision agriculture\
    \ is a modern practice used to enhance crops’ productivity using latest\ntechnologies,\
    \ i.e., WSN, IoT, cloud computing, Artiﬁcial Intelligence (AI) and Machine Learning\n\
    (ML). Most of the research done so far indicates that PA-based practices have\
    \ a great inﬂuence on\nsustainability and productivity. The objective of PA is\
    \ to provide decision support systems based\non multiple parameters of crops,\
    \ i.e., soil nutrients, water level of the soil, wind speed, intensity of\nsunlight,\
    \ temperature, humidity, chlorophyll content, etc. However, several challenges\
    \ are involved\nin the development and deployment phase of these systems. This\
    \ article was aimed at providing a\nsurvey of modern technologies involving current\
    \ PA platforms, with the goal of supporting industry\nand research communities\
    \ on the development of modern applications for smart agriculture. A case\nstudy\
    \ was presented to prove the effectiveness of the PA in the agriculture domain.\n\
    Since the main objective of precision agriculture is to produce surplus yield\
    \ by optimizing the\nresources such as water, pesticides, fertilizers, etc., for\
    \ resource optimization, prescription maps play\nan important role, which enables\
    \ farmers to quantify resources required for healthy crops at any\nparticular\
    \ growth stage. Most of the research accomplished in the agriculture domain focuses\
    \ on the\nremote sensing platforms to collect imagery, which reﬂects only Vegetation\
    \ Indices (VIs) such as NDVI.\nThe prescription maps cannot be generated by only\
    \ using VIs; instead, multiple other factors need to\nbe considered such as soil\
    \ properties, soil moisture level, meteorological behaviour, etc.\nFunding: This\
    \ work is funded by the Research England’s QR Global Challenges Research Fund\
    \ (GCRF) under\nProject “GrITS: Green IoT for Climate Smart Agriculture”.\nAcknowledgments:\
    \ We extend our sincere thanks and gratitude to National Agriculture Research\
    \ Centre (NARC)\nIslamabad, Pakistan for allowing us to ﬂy drone in their premises\
    \ and capture spectral imagery to monitor crop\nhealth. We are also indebt to\
    \ NUST-SEECS for providing the administrative and technical support to IoT lab\
    \ for\nconducting this research work.\nConﬂicts of Interest: The authors declare\
    \ no conﬂict of interest.\nSensors 2019, 19, 3796\n22 of 25\nReferences\n1.\n\
    Mumtaz, R.; Baig, S.; Fatima, I. Analysis of meteorological variations on wheat\
    \ yield and its estimation using\nremotely sensed data. A case study of selected\
    \ districts of Punjab Province, Pakistan (2001–14). Ital. J. Agron.\n2017, 12.\
    \ [CrossRef]\n2.\nWang, N.; Zhang, N.; Wang, M. Wireless sensors in agriculture\
    \ and food industry—Recent development and\nfuture perspective. Comput. Electron.\
    \ Agric. 2006, 50, 1–14. [CrossRef]\n3.\nAbbasi, A.Z.; Islam, N.; Shaikh, Z.A.\
    \ A review of wireless sensors and networks’ applications in agriculture.\nComput.\
    \ Stand. Interfaces 2014, 36, 263–270.\n4.\nRad, C.R.; Hancu, O.; Takacs, I.A.;\
    \ Olteanu, G. Smart monitoring of potato crop: A cyber-physical system\narchitecture\
    \ model in the ﬁeld of precision agriculture. Agric. Agric. Sci. Procedia 2015,\
    \ 6, 73–79. [CrossRef]\n5.\nBaccarelli, E.; Naranjo, P.G.V.; Scarpiniti, M.; Shojafar,\
    \ M.; Abawajy, J.H. Fog of everything: Energy-efﬁcient\nnetworked computing architectures,\
    \ research challenges, and a case study. IEEE Access 2017, 5, 9882–9910.\n[CrossRef]\n\
    6.\nNaranjo, P.G.V.; Shojafar, M.; Mostafaei, H.; Pooranian, Z.; Baccarelli, E.\
    \ P-SEP: A prolong stable election\nrouting algorithm for energy-limited heterogeneous\
    \ fog-supported wireless sensor networks. J. Supercomput.\n2017, 73, 733–755.\
    \ [CrossRef]\n7.\nKirby, M.; Mainuddin, M.; Khaliq, T.; Cheema, M. Agricultural\
    \ production, water use and food availability\nin Pakistan: Historical trends,\
    \ and projections to 2050. Agric. Water Manag. 2017, 179, 34–46. [CrossRef]\n\
    8.\nAl-Sarawi, S.; Anbar, M.; Alieyan, K.; Alzubaidi, M. Internet of Things (IoT)\
    \ communication protocols.\nIn Proceedings of the 2017 8th International Conference\
    \ on Information Technology (ICIT), Amman, Jordan,\n17–18 May 2017; pp. 685–690.\n\
    9.\nZhang, X.; Andreyev, A.; Zumpf, C.; Negri, M.C.; Guha, S.; Ghosh, M. Thoreau:\
    \ A subterranean wireless\nsensing network for agriculture and the environment.\
    \ In Proceedings of the 2017 IEEE Conference on\nComputer Communications Workshops\
    \ (INFOCOM WKSHPS), Atlanta, GA, USA, 1–4 May 2017; pp. 78–84.\n10.\nKhelifa,\
    \ B.; Amel, D.; Amel, B.; Mohamed, C.; Tarek, B.\nSmart irrigation using internet\
    \ of things.\nIn Proceedings of the 2015 Fourth International Conference on Future\
    \ Generation Communication\nTechnology (FGCT), Luton, UK, 29–31 July 2015; pp.\
    \ 1–6.\n11.\nPaventhan, A.; Allu, S.K.; Barve, S.; Gayathri, V.; Ram, N.M. Soil\
    \ property monitoring using 6lowpan-enabled\nwireless sensor networks. In Proceedings\
    \ of the Agro-Informatics and Precision Agriculture, Hyderabad,\nIndia, 1–3 August\
    \ 2012.\n12.\nSuryady, Z.; Shaharil, M.H.M.; Bakar, K.A.; Khoshdelniat, R.; Sinniah,\
    \ G.R.; Sarwar, U. Performance\nevaluation of 6LoWPAN-based precision agriculture.\
    \ In Proceedings of the International Conference on\nInformation Networking 2011\
    \ (ICOIN2011), Barcelona, Spain, 26–28 January 2011; pp. 171–176.\n13.\nSarode,\
    \ K.; Chaudhari, P. Zigbee based Agricultural Monitoring and Controlling System.\
    \ Int. J. Eng. Sci.\n2018, 8, 15907–15910.\n14.\nZhou, Y.; Yang, X.; Guo, X.;\
    \ Zhou, M.; Wang, L. A design of greenhouse monitoring & control system\nbased\
    \ on ZigBee wireless sensor network.\nIn Proceedings of the 2007 International\
    \ Conference on\nWireless Communications, Networking and Mobile Computing, Shanghai,\
    \ China, 21–25 September 2007;\npp. 2563–2567.\n15.\nChikankar, P.B.; Mehetre,\
    \ D.; Das, S. An automatic irrigation system using ZigBee in wireless sensor\n\
    network. In Proceedings of the 2015 International Conference on Pervasive Computing\
    \ (ICPC), Pune, India,\n8–10 January 2015; pp. 1–5.\n16.\nXue-fen, W.; Xing-jing,\
    \ D.; Wen-qiang, B.; Le-han, L.; Jian, Z.; Chang, Z.; Ling-xuan, Z.; Yu-xiao,\
    \ Y.P.; Yi, Y.\nSmartphone accessible agriculture IoT node based on NFC and BLE.\
    \ In Proceedings of the 2017 IEEE\nInternational Symposium on Consumer Electronics\
    \ (ISCE), Kuala Lumpur, Malaysia, 14–15 November 2017;\npp. 78–79.\n17.\nTanaka,\
    \ K.; Murase, M.; Naito, K. Prototype implementation of BLE based automated data\
    \ collection\nscheme in agricultural measurement system.\nIn Proceedings of the\
    \ 2018 15th IEEE Annual Consumer\nCommunications & Networking Conference (CCNC),\
    \ Las Vegas, NV, USA, 12–15 January 2018; pp. 1–2.\n18.\nWasson, T.; Choudhury,\
    \ T.; Sharma, S.; Kumar, P. Integration of RFID and sensor in agriculture using\n\
    IOT.\nIn Proceedings of the 2017 International Conference On Smart Technologies\
    \ For Smart Nation\n(SmartTechCon), Bangalore, India, 17–19 August 2017; pp. 217–222.\n\
    Sensors 2019, 19, 3796\n23 of 25\n19.\nLiang, M.H.; He, Y.F.; Chen, L.J.; Du,\
    \ S.F. Greenhouse Environment dynamic Monitoring system based on\nWIFI. IFAC-PapersOnLine\
    \ 2018, 51, 736–740. [CrossRef]\n20.\nN-USha, T.M. Conditions in Agriculture through\
    \ WiFi using Raspberry PI. Int. J. Eng. 2017, 3, 6–11.\n21.\nDavcev, D.; Mitreski,\
    \ K.; Trajkovic, S.; Nikolovski, V.; Koteli, N. IoT agriculture system based on\
    \ LoRaWAN.\nIn Proceedings of the 2018 14th IEEE International Workshop on Factory\
    \ Communication Systems (WFCS),\nImperia, Italy, 13–15 June 2018; pp. 1–4.\n22.\n\
    Rudd, J.D.; Roberson, G.T.; Classen, J.J. Application of satellite, unmanned aircraft\
    \ system, and ground-based\nsensor data for precision agriculture: A review. In\
    \ Proceedings of the 2017 ASABE Annual International\nMeeting, Spokane, WA, USA,\
    \ 16–19 July 2017.\n23.\nToth, C.; Jó´zków, G. Remote sensing platforms and sensors:\
    \ A survey. ISPRS J. Photogramm. Remote Sens.\n2016, 115, 22–36. [CrossRef]\n\
    24.\nZhong, Y.; Wang, X.; Xu, Y.; Wang, S.; Jia, T.; Hu, X.; Zhao, J.; Wei, L.;\
    \ Zhang, L.\nMini-UAV-Borne\nHyperspectral Remote Sensing: From Observation and\
    \ Processing to Applications. IEEE Geosci. Remote Sens.\nMag. 2018, 6, 46–62.\
    \ [CrossRef]\n25.\nCandiago, S.; Remondino, F.; De Giglio, M.; Dubbini, M.; Gattelli,\
    \ M. Evaluating multispectral images and\nvegetation indices for precision farming\
    \ applications from UAV images. Remote Sens. 2015, 7, 4026–4047.\n[CrossRef]\n\
    26.\nXue, J.; Su, B. Signiﬁcant remote sensing vegetation indices: A review of\
    \ developments and applications.\nJ. Sens. 2017, 2017, 1353691. [CrossRef]\n27.\n\
    Skakun, S.; Justice, C.O.; Vermote, E.; Roger, J.C. Transitioning from MODIS to\
    \ VIIRS: An analysis of\ninter-consistency of NDVI data sets for agricultural\
    \ monitoring.\nInt. J. Remote Sens. 2018, 39, 971–992.\n[CrossRef]\n28.\nDaroya,\
    \ R.; Ramos, M. NDVI image extraction of an agricultural land using an autonomous\
    \ quadcopter\nwith a ﬁlter-modiﬁed camera. In Proceedings of the 2017 7th IEEE\
    \ International Conference on Control\nSystem, Computing and Engineering (ICCSCE),\
    \ Penang, Malaysia, 24–26 November 2017; pp. 110–114.\n29.\nMahajan, U.; Raj,\
    \ B. Drones for Normalized Difference Vegetation Index (NDVI), to estimate Crop\
    \ Health for\nPrecision Agriculture: A Cheaper Alternative for Spatial Satellite\
    \ Sensors. In Proceedings of the International\nConference on Innovative Research\
    \ in Agriculture, Food Science, Forestry, Horticulture, Aquaculture,\nAnimal Sciences,\
    \ Biodiversity, Ecological Sciences and Climate Change (AFHABEC-2016), Delhi,\
    \ India,\n22 October 2016.\n30.\nRichardson, A.J.; Wiegand, C. Distinguishing\
    \ vegetation from soil background information. Photogr. Eng.\nRemote Sens. 1977,\
    \ 43, 1541–1552.\n31.\nHuete, A.R. A soil-adjusted vegetation index (SAVI). Remote\
    \ Sens. Environ. 1988, 25, 295–309. [CrossRef]\n32.\nRondeaux, G.; Steven, M.;\
    \ Baret, F. Optimization of soil-adjusted vegetation indices. Remote Sens. Environ.\n\
    1996, 55, 95–107. [CrossRef]\n33.\nQi, J.; Chehbouni, A.; Huete, A.; Kerr, Y.;\
    \ Sorooshian, S. A modiﬁed soil adjusted vegetation index. Remote\nSens. Environ.\
    \ 1994, 48, 119–126. [CrossRef]\n34.\nAkubattin, V.; Bansode, A.; Ambre, T.; Kachroo,\
    \ A.; SaiPrasad, P. Smart irrigation system. Int. J. Sci. Res.\nSci. Technol.\
    \ 2016, 2, 343–345.\n35.\nHarishankar, S.; Kumar, R.S.; Sudharsan, K.; Vignesh,\
    \ U.; Viveknath, T. Solar powered smart irrigation\nsystem. Adv. Electr. Comput.\
    \ Eng. 2014, 4, 341–346.\n36.\nKansara, K.; Zaveri, V.; Shah, S.; Delwadkar, S.;\
    \ Jani, K. Sensor based automated irrigation system with IOT:\nA technical review.\
    \ Int. J. Comput. Sci. Inf. Technol. 2015, 6, 5331–5333.\n37.\nNikolidakis, S.A.;\
    \ Kandris, D.; Vergados, D.D.; Douligeris, C. Energy efﬁcient automated control\
    \ of irrigation\nin agriculture by using wireless sensor networks. Comput. Electron.\
    \ Agric. 2015, 113, 154–163. [CrossRef]\n38.\nRawal, S. IOT based Smart Irrigation\
    \ System. Int. J. Comput. Appl. 2017, 159, 880–886. [CrossRef]\n39.\nVellidis,\
    \ G.; Tucker, M.; Perry, C.; Kvien, C.; Bednarz, C. A real-time wireless smart\
    \ sensor array for\nscheduling irrigation. Comput. Electron. Agric. 2008, 61,\
    \ 44–50. [CrossRef]\n40.\nKumar, B.D.; Srivastava, P.; Agrawal, R.; Tiwari, V.\
    \ Microcontroller based automatic plant Irrigation system.\nInt. Res. J. Eng.\
    \ Tenchnol. 2017, 4, 1436–1439.\n41.\nAgrawal, N.; Singhal, S. Smart drip irrigation\
    \ system using raspberry pi and arduino. In Proceedings of the\nInternational\
    \ Conference on Computing, Communication & Automation, Noida, India, 15–16 May\
    \ 2015;\npp. 928–932.\nSensors 2019, 19, 3796\n24 of 25\n42.\nSoulis, K.X.; Elmaloglou,\
    \ S.; Dercas, N. Investigating the effects of soil moisture sensors positioning\
    \ and\naccuracy on soil moisture based drip irrigation scheduling systems. Agric.\
    \ Water Manag. 2015, 148, 258–268.\n[CrossRef]\n43.\nYousif, M.E.R.; Ghafar, K.;\
    \ Zahari, R.; Lim, T.H. A rule-based smart automated fertilization and irrigation\n\
    systems. In Proceedings of the Ninth International Conference on Graphic and Image\
    \ Processing (ICGIP\n2017), Qingdao, China, 14–16 October 2017.\n44.\nCugati,\
    \ S.; Miller, W.; Schueller, J. Automation concepts for the variable rate fertilizer\
    \ applicator for tree\nfarming. In Proceedings of the 4th European Conference\
    \ on Precision Agriculture, Berlin, Germany, 15–19\nJune 2003; pp. 14–19.\n45.\n\
    He, J.; Wang, J.; He, D.; Dong, J.; Wang, Y. The design and implementation of\
    \ an integrated optimal\nfertilization decision support system. Math. Comput.\
    \ Model. 2011, 54, 1167–1174. [CrossRef]\n46.\nChen, X.; Zhang, F. The establishment\
    \ of fertilization technology index system based on “3414” fertilizer\nexperiment.\
    \ China Agric. Technol. Ext. 2006, 22, 36–39.\n47.\nMahlein, A.K.; Oerke, E.C.;\
    \ Steiner, U.; Dehne, H.W. Recent advances in sensing plant diseases for precision\n\
    crop protection. Eur. J. Plant Pathol. 2012, 133, 197–209. [CrossRef]\n48.\nSankaran,\
    \ S.; Mishra, A.; Ehsani, R.; Davis, C. A review of advanced techniques for detecting\
    \ plant diseases.\nComput. Electron. Agric. 2010, 72, 1–13. [CrossRef]\n49.\n\
    Mahlein, A.K. Plant disease detection by imaging sensors–parallels and speciﬁc\
    \ demands for precision\nagriculture and plant phenotyping. Plant Dis. 2016, 100,\
    \ 241–251. [CrossRef] [PubMed]\n50.\nLee, H.; Moon, A.; Moon, K.; Lee, Y. Disease\
    \ and pest prediction IoT system in orchard: A preliminary study.\nIn Proceedings\
    \ of the 2017 Ninth International Conference on Ubiquitous and Future Networks\
    \ (ICUFN),\nMilan, Italy, 4–7 July 2017; pp. 525–527.\n51.\nGolhani, K.; Balasundram,\
    \ S.K.; Vadamalai, G.; Pradhan, B. A review of neural networks in plant disease\n\
    detection using hyperspectral data. Inf. Process. Agric. 2018, 5, 354–371. [CrossRef]\n\
    52.\nRumpf, T.; Mahlein, A.K.; Steiner, U.; Oerke, E.C.; Dehne, H.W.; Plümer,\
    \ L. Early detection and classiﬁcation\nof plant diseases with support vector\
    \ machines based on hyperspectral reﬂectance. Comput. Electron. Agric.\n2010,\
    \ 74, 91–99. [CrossRef]\n53.\nSanghvi, Y.; Gupta, H.; Doshi, H.; Koli, D.; Ansh,\
    \ A.; Gupta, U. Comparison of Self organizing maps\nand Sammon’s mapping on agricultural\
    \ datasets for precision agriculture.\nIn Proceedings of the 2015\nInternational\
    \ Conference on Innovations in Information, Embedded and Communication Systems\
    \ (ICIIECS),\nCoimbatore, India, 19–20 March 2015; pp. 1–5.\n54.\nHufkens, K.;\
    \ Melaas, E.K.; Mann, M.L.; Foster, T.; Ceballos, F.; Robles, M.; Kramer, B. Monitoring\
    \ crop\nphenology using a smartphone based near-surface remote sensing approach.\
    \ Agric. For. Meteorol. 2019,\n265, 327–337. [CrossRef]\n55.\nPrathibha, S.; Hongal,\
    \ A.; Jyothi, M. IOT Based monitoring system in smart agriculture. In Proceedings\n\
    of the 2017 International Conference on Recent Advances in Electronics and Communication\
    \ Technology\n(ICRAECT), Bangalore, India, 16–17 March 2017; pp. 81–84.\n56.\n\
    Heble, S.; Kumar, A.; Prasad, K.V.D.; Samirana, S.; Rajalakshmi, P.; Desai, U.B.\
    \ A low power IoT network\nfor smart agriculture. In Proceedings of the 2018 IEEE\
    \ 4th World Forum on Internet of Things (WF-IoT),\nSingapore, 5–8 February 2018;\
    \ pp. 609–614.\n57.\nSabo, A.; Qaisar, S.; Subasi, A.; Rambo, K. An Event Driven\
    \ Wireless Sensors Network for Monitoring\nof Plants Health and Larva Activities.\
    \ In Proceedings of the 2018 21st Saudi Computer Society National\nComputer Conference\
    \ (NCC), Riyadh, Saudi Arabia, 25–26 April 2018; pp. 1–7.\n58.\nAgarwal, A.; Gupta,\
    \ S.; Kumar, S.; Singh, D. A concept of satellite-based IoT for downscaling the\
    \ MODIS\ndata to extract Land Surface Temperature. In Proceedings of the 2018\
    \ 9th International Symposium on\nSignal, Image, Video and Communications (ISIVC),\
    \ Rabat, Morocco, 27–30 November 2018; pp. 67–70.\n59.\nRahman, M.R.; Islam, A.;\
    \ Rahman, M.A. NDVI derived sugarcane area identiﬁcation and crop condition\n\
    assessment. Plan Plus 2004, 1, 1–12.\n60.\nChoudhury, S.B.; Jain, P.; Kallamkuth,\
    \ S.; Ramanath, S.; Bhatt, P.V.; Sarangi, S.; Srinivasu, P. Precision Crop\nMonitoring\
    \ with Affordable IoT: Experiences with Okra. In Proceedings of the 2019 Global\
    \ IoT Summit\n(GIoTS), Aarhus, Denmark, 17–21 June 2019; pp. 1–6.\nSensors 2019,\
    \ 19, 3796\n25 of 25\n61.\nMittal, A.; Sarangi, S.; Ramanath, S.; Bhatt, P.V.;\
    \ Sharma, R.; Srinivasu, P. IoT-Based Precision Monitoring of\nHorticultural Crops—A\
    \ Case-Study on Cabbage and Capsicum. In Proceedings of the 2018 IEEE Global\n\
    Humanitarian Technology Conference (GHTC), San Jose, CA, USA, 18–21 October 2018;\
    \ pp. 1–7.\n62.\nSaha, A.K.; Saha, J.; Ray, R.; Sircar, S.; Dutta, S.; Chattopadhyay,\
    \ S.P.; Saha, H.N. IOT-based drone for\nimprovement of crop quality in agricultural\
    \ ﬁeld. In Proceedings of the 2018 IEEE 8th Annual Computing and\nCommunication\
    \ Workshop and Conference (CCWC), Las Vegas, NV, USA, 8–10 January 2018; pp. 612–615.\n\
    63.\nMekala, M.S.; Viswanathan, P. CLAY-MIST: IoT-cloud enabled CMM index for\
    \ smart agriculture monitoring\nsystem. Measurement 2019, 134, 236–244. [CrossRef]\n\
    64.\nNawandar, N.K.; Satpute, V.R. IoT based low cost and intelligent module for\
    \ smart irrigation system.\nComput. Electron. Agric. 2019, 162, 979–990. [CrossRef]\n\
    65.\nSrbinovska, M.; Gavrovski, C.; Dimcev, V.; Krkoleva, A.; Borozan, V. Environmental\
    \ parameters monitoring\nin precision agriculture using wireless sensor networks.\
    \ J. Clean. Prod. 2015, 88, 297–307. [CrossRef]\n66.\nLottes, P.; Khanna, R.;\
    \ Pfeifer, J.; Siegwart, R.; Stachniss, C. UAV-based crop and weed classiﬁcation\
    \ for smart\nfarming. In Proceedings of the 2017 IEEE International Conference\
    \ on Robotics and Automation (ICRA),\nSingapore, 29 May–3 June 2017; pp. 3024–3031.\n\
    67.\nCambra, C.; Sendra, S.; Lloret, J.; Garcia, L. An IoT service-oriented system\
    \ for agriculture monitoring.\nIn Proceedings of the 2017 IEEE International Conference\
    \ on Communications (ICC), Paris, France,\n21–25 May 2017.\n68.\nFontana, D.C.;\
    \ Pinto, D.G.; Junges, A.H.; Bremm, C. Using temporal NDVI/MODIS proﬁles for inferences\n\
    on the crop soybean calendar. Bragantia 2015, 74, 350–358. [CrossRef]\n69.\nSeber,\
    \ G.A.; Lee, A.J. Linear Regression Analysis; John Wiley & Sons: Hoboken, NJ,\
    \ USA, 2012; Volume 329.\nc⃝ 2019 by the authors. Licensee MDPI, Basel, Switzerland.\
    \ This article is an open access\narticle distributed under the terms and conditions\
    \ of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/19/17/3796/pdf?version=1567419401
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Precision Agriculture Techniques and Practices: From Considerations to Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.biosystemseng.2019.12.013
  analysis: '>'
  authors:
  - Andrés Villa‐Henriksen
  - Gareth Edwards
  - Liisa Pesonen
  - Ole Green
  - Claus Aage Grøn Sørensen
  citation_count: 203
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Keywords 1. Introduction 2. Review methodology 3. IoT implementation
    in arable farming 4. Current and potential applications 5. Challenges and solutions
    6. Conclusions and future perspectives Acknowledgements References Show full outline
    Cited by (220) Figures (5) Tables (2) Table 1 Table 2 Biosystems Engineering Volume
    191, March 2020, Pages 60-84 Review Internet of Things in arable farming: Implementation,
    applications, challenges and potential Author links open overlay panel Andrés
    Villa-Henriksen a b, Gareth T.C. Edwards b, Liisa A. Pesonen c, Ole Green b d,
    Claus Aage Grøn Sørensen a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.biosystemseng.2019.12.013
    Get rights and content Under a Creative Commons license open access Highlights
    • The role of Internet of Things in arable farming is reviewed. • Internet of
    Things is leading arable farming to become data-driven. • Implementation and application
    are described in depth. • Challenges, corresponding solutions and potentials are
    discussed thoroughly. The Internet of Things is allowing agriculture, here specifically
    arable farming, to become data-driven, leading to more timely and cost-effective
    production and management of farms, and at the same time reducing their environmental
    impact. This review is addressing an analytical survey of the current and potential
    application of Internet of Things in arable farming, where spatial data, highly
    varying environments, task diversity and mobile devices pose unique challenges
    to be overcome compared to other agricultural systems. The review contributes
    an overview of the state of the art of technologies deployed. It provides an outline
    of the current and potential applications, and discusses the challenges and possible
    solutions and implementations. Lastly, it presents some future directions for
    the Internet of Things in arable farming. Current issues such as smart phones,
    intelligent management of Wireless Sensor Networks, middleware platforms, integrated
    Farm Management Information Systems across the supply chain, or autonomous vehicles
    and robotics stand out because of their potential to lead arable farming to smart
    arable farming. During the implementation, different challenges are encountered,
    and here interoperability is a key major hurdle throughout all the layers in the
    architecture of an Internet of Things system, which can be addressed by shared
    standards and protocols. Challenges such as affordability, device power consumption,
    network latency, Big Data analysis, data privacy and security, among others, have
    been identified by the articles reviewed and are discussed in detail. Different
    solutions to all identified challenges are presented addressing technologies such
    as machine learning, middleware platforms, or intelligent data management. Previous
    article in issue Next article in issue Keywords Smart farmingInternet of thingsWireless
    sensor networkFarm management information systemBig dataMachine learning 1. Introduction
    The global population and its food consumption are growing alarmingly quickly,
    while climate change effects are simultaneously complicating the challenge of
    ensuring food security in a sustainable manner (Godfray et al., 2010, Tilman et
    al., 2011). Data-driven agriculture is one of the main strategies and concepts
    proposed to increase production efficiently while decreasing its environmental
    impact (Foley et al., 2011). Data-driven technologies in general are quickly advancing
    with the development of the Internet of Things (IoT), and may become an important
    part of the future of farming (Brewster et al., 2017, Jayaraman et al., 2016,
    Verdouw, 2016, Wolfert et al., 2017). Smart Farming, also called Agriculture 4.0
    or digital farming (CEMA, 2017), is developing beyond the modern concept of precision
    agriculture, which bases its management practices on spatial measurements largely
    thanks to Global Positioning System (GPS) signals. Smart farming bases its management
    tasks also on spatial data but is enhanced with context-awareness and is activated
    by real-time events, improving the performance of hitherto precision agriculture
    solutions (Sundmaeker et al., 2016, Wolfert et al., 2017). Additionally, Smart
    Farming usually incorporates intelligent services for applying and managing Information
    and Communication Technologies (ICT) in farming, and allows transverse integration
    throughout the whole agri-food chain in regards to food safety and traceability
    (Sundmaeker et al., 2016). IoT is therefore a key technology in smart farming
    since it ensures data flow between sensors and other devices, making it possible
    to add value to the obtained data by automatic processing, analysis and access,
    and this leads to more timely and cost-effective production and management effort
    on farms. Simultaneously, IoT enables the reduction of the inherent environmental
    impact by real-time reaction to alert events such as weed, pest or disease detection,
    weather or soil monitoring warnings, which allow for a reduction and adequate
    use of inputs such as agrochemicals or water. IoT eases documentation and supervision
    of different activities as well as the traceability of products, improving the
    environmental surveying and control in farms by the appropriate authorities. The
    IoT concept was introduced by Kevin Ashton in 1999 in relation to linking Radio-Frequency
    Identification (RFID) for supply chains to the internet (Ashton, 2009), but has
    no official definition. It implies, however, the connection of a network of “things”
    to or through the internet without direct human intervention. “Things” can be
    any object with sensors and/or actuators that is uniquely addressable, interconnected
    and accessible through the world-wide computer network, i.e. the Internet. The
    application of IoT in agriculture is advantageous because of the possibility to
    monitor and control many different parameters in an interoperable, scalable and
    open context with an increasing use of heterogeneous automated components (Kamilaris,
    Gao, Prenafeta-Boldu, & Ali, 2016), in addition to the inevitable requirement
    for traceability. As a result of IoT, agriculture is becoming data-driven, i.e.
    making informed real-time decisions for managing the farm, reducing uncertainties
    and inefficiencies, and as a consequence reducing its environmental impact. The
    application of IoT in agriculture, also called Ag-IoT (Zhai, 2017), AIoT (Zou
    & Quan, 2017), or IoF meaning Internet of Farming (Alahmadi, Alwajeeh, Mohanan,
    & Budiarto, 2017) or Internet of Food and Farm (Sundmaeker et al., 2016, Verdouw
    et al., 2017), has received exponentially increasing attention in the scientific
    community (Fig. 1). Even though the publications are mainly dominated by Asian
    scientists (Talavera et al., 2017, Verdouw, 2016), in Europe several large scale
    international pilot projects, such as IoF2020 (Sundmaeker et al., 2016, Verdouw
    et al., 2017), AIOTI (Pérez-Freire & Brillouet, 2015), SmartAgriFood (Kaloxylos
    et al., 2012), SMART AKIS (Djelveh & Bisevac, 2016), or more recently SmartAgriHubs
    (Chatzikostas et al., 2019), are aiming to implement IoT technologies in the agricultural
    industry in Europe. Similar projects elsewhere include the Accelerating Precision
    Agriculture to Decision Agriculture (P2D) project in Australia (Zhang, Baker,
    Jakku, & Llewellyn, 2017), which complement additional major investments with
    the aim to help farmers convert to smart farming (Higgins et al., 2017, Pham and
    Stack, 2018). Download : Download high-res image (95KB) Download : Download full-size
    image Fig. 1. Number of publications per year retrieved from SCOPUS with the following
    searching criteria: (Internet of things OR IoT) AND (agriculture OR farming).
    Several reviews have been done on IoT in agriculture in the relatively short time
    period in which publications about the subject have emerged (Ray, 2017, Stočes
    et al., 2016, Talavera et al., 2017, Tzounis et al., 2017, Verdouw, 2016). In
    addition, review papers have been published with a focus on specific subjects
    related to IoT applied in agriculture, such as Big Data (Kamilaris et al., 2017,
    Wolfert et al., 2017), modelling (O''Grady & O''Hare, 2017), Wireless Sensor Networks
    (WSN) (Jawad, Nordin, Gharghan, Jawad, & Ismail, 2017), food supply chain (Ramundo,
    Taisch, & Terzi, 2016), Internet of Underground Things (Vuran, Salam, Wong, &
    Irmak, 2018), chemical wireless sensors (Kassal, Steinberg, & Murkovi, 2018),
    or Farm Management Information Systems (FMIS) (Fountas, Sørensen et al., 2015;
    Kaloxylos et al., 2012). However, to the authors'' knowledge, no existing review
    has focused on arable farming, which has specific characteristics and challenges
    that differ from those in a controlled environment, i.e. greenhouses, or permanent
    crops such as fruit orchards. Arable farming poses particular challenges due to:
    • much larger farm sizes, which affect the design of the sensor networks, the
    data processing, analysis and extrapolation of limited stationary sensor data,
    and the consequent decision making with regards to actuators, vehicle logistics,
    etc.; • the larger farm sizes also imply that spatial data has a central role
    in arable farming, affecting the data processing, decision making and precision
    machinery employed to address in-field variability not at plant level as in most
    permanent crops, but at subfield level with automatic recognition and actuation
    (Zude-Sasse, Fountas, Gemtos, & Abu-Khalaf, 2016); • greater use of mobile sensors
    and other devices on vehicles, which have specific challenges. While other cropping
    systems may also use sensors and devices on operating machinery, arable farming
    often requires a fleet of vehicles to operate in a co-ordinated fashion. This
    creates issues particularly regarding network infrastructure (Martínez, Pastor,
    Álvarez, & Iborra, 2016), e.g. connectivity to the cloud of moving things that
    rely mainly on mobile networks, or vehicle to implement communication, which implies
    real-time interoperability between machines and devices from different manufacturers
    (Peets, Mouazen, Blackburn, Kuang, & Wiebensohn, 2012); • larger amounts of heterogeneous
    spatial data generated at different rates and from very disparate sources: stationary
    sensors, moving vehicles and implements, satellites, data from web services, etc.,
    which need to be intelligently integrated; • highly varying and uncertain environmental
    conditions, as annual crops are more susceptible to weather changes and other
    external factors than permanent crops, which are more resilient mainly due to
    their deeper roots (Zude-Sasse et al., 2016), or crops in controlled environments.
    This obligates the IoT system to handle both spatial and temporal data, increasing
    the complexity of the data processing as well as the decisions based on the data
    collected. • more diverse types of field tasks per growing season in arable farming,
    from soil preparation and crop establishment, through highly varying plant nursing
    tasks, to coordinated harvest, which increase the complexity and also the risks.
    The IoT in agriculture is a fast-developing field, which can make reviews obsolete
    quickly. This challenge can be overcome by focussing a critical view on the general
    principles, main application areas and identify the limitations and challenges.
    Summarising, the aim of the paper is to provide an up to date novel analytical
    review of the role of IoT in arable farming, with the following specific objectives:
    • Provide an overview of the current situation of IoT technologies deployed in
    arable farming. Focussing on the current use of communication technologies and
    protocols, the generation and analysis of data, and IoT architectures. • Outline
    the different applications and capabilities of IoT in arable farming. • Investigate
    the main challenges encountered by IoT enabling technologies applied to arable
    farming. • Present key potential fields of application where IoT could be employed,
    as well as future directions of the current trends. The remaining part of this
    paper is structured as follows: Section 2 describes the methodology used in this
    review paper. Section 3 provides an overview of the state of the art of IoT technologies
    used in arable farming; Section 4 presents an outline of the current and potential
    IoT-based applications in arable farming; Section 5 discusses the challenges and
    solutions found in its implementation; and lastly, the review closes with Section
    6 in which future directions are summarised. 2. Review methodology In order to
    address the specific objectives identified above, the literature listing from
    the SCOPUS database of the last 11 years has been reviewed. More precisely, the
    timeframe investigated was from 1 January 2008 to 31 December 2018, selected as
    the whole period in which any literature about the subject turned up in the studied
    database. SCOPUS was selected as the primary literature source as it is a key
    peer-reviewed research literature database. The specific keywords used in the
    search criteria where: (Internet of Things OR IoT) AND (agriculture OR farming).
    To ease the searching process, the keywords needed to be present in at least the
    title, abstract, highlights or keywords. Additionally, the articles had to be
    published in English. Articles concerning greenhouse, livestock or permanent crops
    were excluded from the survey, as were supply chain related articles. However,
    issues concerning traceability at farm level were included. The survey was performed
    in a systematic manner following three steps (see Fig. 2): • Firstly, a list of
    1193 articles meeting the search criteria mentioned above was retrieved from the
    database. • In the second step, by reading the titles, any article that was clearly
    not related to arable farming was excluded, leaving a list of 293 articles. •
    In the last step, a second screening was made by reading the abstracts, where
    articles outside the focus of this review were omitted. After this step, 167 articles
    were studied in detail, from which 69 articles were considered relevant, 27 as
    partially relevant, while the rest were considered of little relevance. Relevance
    concerned mainly the connection of the article to the subject studied. The content
    of a relevant article directly addresses the application of an IoT technology
    in an arable farming scenario. A partially relevant article studies a certain
    IoT technology in agriculture in a broader sense. In the distinction made regarding
    little relevant articles included off-topic, lack of novelty, as well as non-peer-reviewed
    articles that lacked scientific rigour, e.g. ambiguous information or absence
    of materials or methods description. Download : Download high-res image (208KB)
    Download : Download full-size image Fig. 2. Reviewing procedure tree diagram.
    The final 167 articles studied included: 77 journal papers, 88 conference papers
    and 4 book chapters, of which 19 were review papers. The final list of articles
    was complemented with other publications that expanded on some of the IoT related
    subjects and technologies mentioned in the studied articles, and did not contain
    the specified keywords. These were found by a targeted search for specific subjects.
    Lastly, in each article from the final list a special focus was made on the IoT
    technologies employed, the applications, the challenges encountered and, finally,
    on potential future perspectives. 3. IoT implementation in arable farming IoT
    has recently been gaining momentum in the farming industry as it can fulfil the
    urgent necessity for interoperability across brands, scalability and traceability
    (Kamilaris et al., 2016). Different technologies are implemented as IoT is still
    evolving, adapting to a great diversity of uses. To cover the range of technologies,
    protocols, standards, etc. employed, this review is addressing the layers in the
    IoT architecture. Three layers normally describe the architecture of the IoT in
    the literature reviewed (Ferrández-Pastor et al., 2018, Khattab et al., 2016,
    Köksal and Tekinerdogan, 2018, Na and Isaac, 2016, Tzounis et al., 2017, Verdouw,
    2016), though some authors divide it into more layers (Ferrández-Pastor et al.,
    2016, Ramundo et al., 2016, Ray, 2017, Talavera et al., 2017, Wang et al., 2014),
    depending on their definitions. More than three layers can especially be relevant
    in IoT systems with edge or fog computing, where an edge/fog computing layer can
    be considered in between the device and network layers (Ferrández-Pastor et al.,
    2016). Even though the naming of the layers also varies depending on the author,
    there is nonetheless a general trend to divide the layers into device, network
    and application layers (Fig. 3). Thus, this has been the adapted structure in
    this review. The device layer consists of the physical objects (things) that are
    capable of automatic identification, sensing or actuation, and connection to the
    internet. The network layer communicates the data to a gateway (or proxy server)
    to the internet (cloud) by the use of communication protocols. And the application
    layer typically stores and facilitates access for the end-user to the processed/analysed
    information. Download : Download high-res image (222KB) Download : Download full-size
    image Fig. 3. IoT architecture represented by device, network and application
    layer, in which the middleware platform is not always present. The collected data
    experience diverse stages during their transition from sensors to cloud, interfaces,
    and occasionally actuators, and these stages have considerable influence on the
    technologies applied in an IoT context. Six main stages regarding data flow have
    been identified in the literature reviewed: sensing/perception, communication/transport/transfer,
    storage, processing, analytics, and actuation and display (Fig. 4). The order
    of the stages is different depending on the IoT setup employed and the computing
    techniques used, e.g. fog and edge computing processes the data before communicating
    it to the cloud, an example of its application in precision farming is given by
    Ferrández-Pastor et al. (2016); while cloud computing processes the data in the
    cloud, examples of this are given by Hernandez-Rojas, Mazon-Olivo, Novillo-Vicuña,
    and Belduma-Vacacela (2018) and Na and Isaac (2016). Nonetheless, sensing/perception
    is normally the first stage, where data are captured by sensors, then the data
    can follow different paths and does not necessarily go through all the steps listed.
    In summary, IoT data is identified to be gathered or generated through three main
    processes: machine generated, which come from sensing devices; process-mediated,
    i.e. commercial data coming from business processes; and human-sourced, recorded
    by humans and digitalised later on (Balducci, Impedovo, Informatica, & Moro, 2018).
    These different sources have an influence on how to process, analyse and use the
    data in IoT solutions, and this needs to be taken into account in the overall
    data acquisition planning process. Download : Download high-res image (171KB)
    Download : Download full-size image Fig. 4. Different agricultural data flows
    in arable farming. 3.1. Device layer As mentioned above, the device layer consists
    of the physical objects (things) that are capable of automatic identification,
    sensing or actuating, and providing connection to the internet. Sensor devices
    measure and collect one or more parameters automatically and transmit the data
    wirelessly to the cloud. And, when the devices become actuators, they generally,
    in turn, receive data from the cloud in order to activate or deactivate some mechanical
    component, e.g. a valve in an irrigation system. The device layer is also often
    called perception layer (Tzounis et al., 2017, Zou and Quan, 2017), sensing layer
    (Na and Isaac, 2016, Wang et al., 2014), or physical layer (Ramundo et al., 2016,
    Talavera et al., 2017). The devices are constituted of a transceiver, a microcontroller,
    an interfacing circuit and one or more sensors and/or actuators. The sensor measures
    a physical parameter, e.g. air temperature that is interpreted and transformed
    into an equivalent analogue signal, i.e. electric voltage or current, which is
    then converted by the interfacing circuit, i.e. Analogue-to-Digital Converter
    (ADC), into a corresponding digital format. Afterwards, the microcontroller, sometimes
    also in the form of microprocessors or single-board computers (Talavera et al.,
    2017), collects the data in digital format from one or more sensors through the
    ADC, and sends them to the transceiver, i.e. a wireless communication module,
    which communicates the data to a gateway. A comparison of microcontrollers and
    single-board computers used in IoT in agriculture has been made by Ray (2017).
    In the case of edge computing, the microcontroller or single-board computer processes
    the data from one or more sensors before communicating them, with the intention
    of, for example, reducing the amount of data to be transferred to the cloud and
    accelerating the data processing (Ferrández-Pastor et al., 2016, Sundmaeker et
    al., 2016). In fog computing the data are processed in the local area network
    level, i.e. in a fog node or IoT gateway (Ahmed, Abdalla et al., 2018, Ahmed,
    De et al., 2018, Ferrández-Pastor et al., 2018). When employing an actuator, the
    signal is received by the transceiver, communicated to the microcontroller, where
    it is then converted to analogue signal by a Digital-to-Analogue Converter (DAC),
    i.e. the interfacing circuit, or to a digital signal by a Digital-to-Digital Converter,
    and finally interpreted by the actuator, which acts in accordance to the signal
    received. In arable farming, when agricultural machinery data are used, i.e. data
    from sensors and devices mounted on tractors or other agricultural machinery,
    the data in digital format is normally collected and accessible through the Controller
    Area Network (CAN) bus in the machine, although in some cases some data are accessible
    through other ports (Oksanen et al., 2016, Peets et al., 2012). Machine and operator
    performance information is accessible through the Machine and Implement Control
    System (MICS) of the machine, which can also be accessed through the CAN bus data.
    MICS data are used to allow machinery operators and farm managers to monitor and
    potentially improve the efficiency of their machines, by employing e.g. smart
    alerts or recommendation systems (Pfeiffer & Blank, 2015). Global Navigation Satellite
    System (GNSS) data, e.g. Real Time Kinematics GPS (RTK-GPS), are often also available
    through the CAN bus port, which allows, among others, vehicle monitoring and dynamic
    optimised route planning Edwards et al., 2017, Villa-Henriksen et al., 2018. Many
    different sensors and actuators are employed in arable farming. The type of device
    used depends on the purpose of the system in addition to the technologies implemented
    in the system. And the number of devices is steadily increasing. The number of
    IoT device installations in farms is expected to increase globally from 30 million
    installations in 2015 to 75 million in 2020. Furthermore, data points generated
    per day and farm are expected to increase from 190000 in 2014 to over half a million
    by 2020 (Meola, 2016). It was also estimated that by 2018 there would be 10 billion
    IoT devices employed in agriculture. However, the great amount of data generated
    is often unused or underutilised (Bennett, 2015), e.g. in countries like Denmark
    with a relative high ICT adoption in farms, in 2016 only 2–5% of farmers worked
    actively with the data generated (SEGES, 2016). Even if data usage is still relatively
    low, it is expected to increase rapidly (Bennett, 2015, Wolfert et al., 2017,
    World Bank, 2017) An overview about how they are implemented for different purposes
    is presented in the Applications section. 3.2. Network layer The network layer
    communicates the data initially to an intermediary platform and eventually to
    the internet (cloud), and from there to, for example, employed actuators. When
    the data are transferred to the intermediary platform, it typically uses wireless
    communication technologies, for instance RFID, WSN with Zigbee, LoRa (Long Range),
    etc., and more recently Near-Field Communication (NFC) (Kassal et al., 2018, Sundmaeker
    et al., 2016, Tzounis et al., 2017, Verdouw, 2016). The intermediary platform
    is normally an internet gateway located in the vicinity of the connected devices,
    also including sometimes a proxy server, where the data are collected and occasionally
    processed in order to send the information further to the end user through the
    internet by the use of e.g. MQTT standards, or HTML or XMPP protocols. The use
    of Android smart devices or other operating systems is also increasing in popularity
    among agricultural applications, as they can be employed as a gateway for 3G and
    4G networks, and they frequently include other wireless communication technologies,
    e.g. Bluetooth, Wi-Fi, GPRS and NFC. They also automatically conform to communication
    standards and protocols, in which way interoperability is increased (Balmos et
    al., 2016, Ferrández-Pastor et al., 2016, Gao and Yao, 2016, Hernandez-Rojas et
    al., 2018, Villa-Henriksen et al., 2018). In addition, Android and other smart
    devices can include GNSS and RGB camera sensors, and can relatively easily be
    programmed for computing data and displaying Graphical User Interface (GUI) applications
    being able to straightforwardly update the software if necessary. In that manner,
    Android and similar smart devices are represented in all three IoT layers, i.e.
    sensing in the device layer, node or gateway in the network layer, and computing
    data and displaying GUI in the application layer. Furthermore, the automatic software
    updating possibilities of smart devices allow remote installation of updates with
    new functionalities, bug fixes, etc. and easily improve the interoperability of
    the system (Ferrández-Pastor et al., 2016). Many different wireless technologies
    have been applied for diverse purposes in agriculture, depending on economic,
    accessibility and capability factors. Jawad et al., 2017, Ray, 2017 and Tzounis
    et al. (2017) have presented good overviews of the specifications of wireless
    communication technologies implemented in IoT in an agricultural context, which
    have been here collected in Table 1 and complemented with information from other
    relevant articles (Alahmadi et al., 2017, Elijah et al., 2018, Kassal et al.,
    2018, Sinha et al., 2017, Sundmaeker et al., 2016). The great variety of technologies,
    standards and frequency bands used exposes the relevant interoperability and application
    challenges found when applying IoT technologies. Potential communication standards
    for smart farming can be classified into short-range and long-range according
    to their communication distance, which determines their specific usability in
    different requirement settings. This is particularly the case in arable farming,
    where mobile network accessibility can be an issue in many rural areas, and where
    large farm sizes limit the use of some wireless technologies due to their reduced
    communication distance and due to the necessity to replace/recharge device batteries
    on nodes over large areas. These issues are addressed in the challenges section
    later. Table 1. Wireless communication technologies (adapted from Jawad et al.,
    2017, Ray, 2017 & Tzounis et al. (2017)). Technology Standard(s) Frequency Data
    rates Range Power ANT+ ANT + Alliance 2.4 GHz 1 Mb s−1 30–100 m 1 mW Cognitive
    Radio IEEE 802.22 WG 54–862 MHz 24 Mb s−1 100 km 1 W Bluetooth (2.0, 2.1, 3.0)
    Bluetooth, IEEE 802.15.1 2400–2483.5 MHz 1–24 Mb s−1 10–100 m 0.1–1 W BLE IoT
    Inter-connect 2400–2483.5 MHz 1 Mb s−1 10 m 10–500 mW EDGE 3GPP GSM 850/1900 MHz
    384 kb s−1 26 km/10 km 3 W/1 W GPRS 3GPP GSM 850/1900 MHz 171 kb s−1 25 km/10
    km 2 W/1 W HSDPA/HSUPA 3GPP 850/1700/1900 MHz 0.73–56 Mb s−1 27 km/10 km 4 W/1
    W ISM/SRD860 IEEE 802.11 433 MHz, 863–870 MHz 200 kb s−1 50 m–2 km Very low LoRaWAN
    LoRaWAN 868/900 MHz, various 0.3–50 kb s−1 2–15 km Very low LR-WPAN IEEE 802.15.4
    (ZigBee) 868/915 MHz, 2.4 GHz 40–250 kb s−1 10–20 m Low LTE 3GPP 700–2600 MHz
    0.1–1 Gb s−1 28 km/10 km 5 W/1 W NB-IoT 3GPP Rel.13 180 kHz DL: 234.7 kb s−1 DI:
    204.8 kb s−1 Using LTE/4G base stations Low NFC ISO/IEC 13157 13.56 MHz 424 kb
    s−1 0.1–0.2 m 1–2 mW RFID Many standards 13.56 MHz 423 kb s−1 1 m 1 mW SigFox
    SigFox 908.42 MHz 10–1000 b s−1 30–50 km N/A THREAD IEEE 802.15.4 2400–2483.5
    MHz 251 kb s−1 11 m 2 mW Weightless-N/W Weightless SIG 700/900 MHz 0.001–10 Mb
    s−1 5 km 40 mW/4 W WiFi IEEE 802.11 a/c/b/d/g/n 2.4, 3.6, 5, 60 GHz 1 Mb s−1–6.75
    Gb s−1 20–100 m 1 W WiMAX IEEE 802.16 2 GHz–66 GHz 1 Mb s−1–1 Gb s−1 (Fixed) 50–100
    Mb s−1 <50 km N/A ZigBee IEEE 802.15.4 2400–2483.5 MHz 250 kb s−1 10 m (100m)
    1 mW Z-Wave Z-Wave 908.42 MHz 100 kb s−1 30 m 1 mW 2G (GSM) GSM, CDMA 865 MHz,
    2.4 GHz 50–100 kb s−1 Mobile network area Medium 3G & 4G UMTS, CDMA2000 865 MHz,
    2.4 GHz 0.2–100 Mb s−1 Mobile network area Medium 5Ga 3GPP, ITU IMT-2020 0.6–6
    GHz, 26, 28, 38, 60 GHz 3.5–20 Gb s−1 (peak rates 10–100 Gb s−1) Mobile network
    area Medium 6LoWPAN IEEE 802.15.4 908.42 MHz or 2400e2483.5 MHz 250 kb s−1 100
    m 1 mW a Not yet publicly available. A WSN is formed by pervasive devices called
    motes or sensor nodes, which integrate sensors and actuators that communicate
    wirelessly forming a spatial network (Hernandez-Rojas et al., 2018, Jawad et al.,
    2017, Tzounis et al., 2017). In a WSN, base stations act as gateways forwarding
    the data to the cloud. Different communication technologies support different
    network node architectures, e.g. star, tree or mesh. Depending on the application,
    different wireless communication technologies are employed in a WSN as each has
    different node architecture possibilities, data rates, ranges, standards, among
    others, with the use of ZigBee, LoRa, Bluetooth/BLE, WiFi and SigFox being relatively
    common in agriculture. In arable farming, BLE has for example been employed for
    soil and air monitoring and irrigation control (Hernandez-Rojas et al., 2018);
    ZigBee was used in a WSN for monitoring soil conditions and actuating an irrigation
    system (Mafuta et al., 2012) and crop monitoring (Zhai, 2017); and LoRa for air
    and water temperature of rice paddy fields (Tanaka, 2018) and smart irrigation
    control (Zhao, Lin et al., 2018, Zhao, Lucani et al., 2018). In order to cover
    larger distances, GPRS is appropriate and has been used for irrigation control
    (López-Riquelme et al., 2017), and for remote maintenance of machinery (Miettinen,
    Oksanen, Suomi, & Visala, 2006). GPRS, or other technologies, such as LTE, or
    3G/4G, are also commonly used at the gateway to transmit data to the cloud. Regarding
    other less common communication technologies used in WSNs, RFID can be integrated
    into a WSN too by connecting the RFID tag readers to a radio-frequency transceiver
    (Costa et al., 2013). Passive and active RFID technologies are used to a great
    extent in agricultural research and industry (Ruiz-Garcia & Lunadei, 2011), especially
    for animal production (e.g. Kamilaris et al., 2016), as well as vegetable or fruit
    product traceability (e.g. Kodali, Jain, & Karagwal, 2017); however, in arable
    farming only few examples have been found: e.g. RFID tags used for irrigation
    scheduling (Vellidis, Tucker, Perry, Kvien, & Bednarz, 2008), for agrochemical
    traceability (Peets, Gasparin, Blackburn, & Godwin, 2009), for vehicle monitoring
    (Sjolander, Thomasson, Sui, & Ge, 2011), and even on a prototype for soil temperature
    monitoring (Hamrita & Hoffacker, 2005). Regarding NFC, no concrete examples of
    NFC used in arable farming have been found in the literature reviewed. Finally,
    the latest generation of mobile communications, i.e. 5G, has higher data rates,
    large coverage areas, higher peak throughput, and also improved flexibility, which
    can open new possibilities and may solve some of the challenges encountered by
    many IoT solutions (Alahmadi et al., 2017, Marsch et al., 2016). 5G allows new
    options for monitoring rural areas with no previous infrastructure for Internet
    connection (Faraci, Raciti, Rizzo, & Schembra, 2018). 5G can also improve vehicle-to-vehicle
    or vehicle-to-anything communication in e.g. logistics solutions, due to its low
    latency and new frequency bands (Marsch et al., 2016). A challenge for the 5G
    networks will be the great increase in devices to support once IoT becomes a standard
    solution not only in agriculture, but also in any sphere of everyday life. 3.3.
    Application layer The application layer is crucial in an IoT context as it is
    this layer that actually adds value to the sensed and communicated data through
    directly controlling devices, supporting farmers'' decision making, etc. In this
    layer, several important services occur such as data storage, data analytics,
    data access through an appropriate Application Programming Interface (API), as
    well as possibly a user interfaced software application. The layer may also include
    middleware platforms that aid handling the heterogeneous cloud data improving
    interoperability. Data storage can be cloud based, i.e. on multiple servers, or
    more local based, where data are stored in different types of databases, depending
    on the application and design. Even if relational databases, such as Structured
    Query Language (SQL) databases (Gao and Yao, 2016, Goap et al., 2018, Ray, 2017,
    Wang et al., 2014), MySQL (Kaloxylos et al., 2014), or PostgreSQL (Mazon-Olivo,
    Hernández-Rojas, Maza-Salinas, & Pan, 2018) are employed in some of the reported
    applications in the reviewed articles, non-relational databases, such as Not only
    SQL (NoSQL), or also SPARQL, a semantic query language based database, are gaining
    attention due to their flexibility and scalability, especially when dealing with
    Big Data. Their ability to store and manage large amounts of heterogeneous data
    makes them suitable in many IoT agricultural contexts (Huang and Zhang, 2017,
    Kamilaris et al., 2017). Examples of NoSQL employed in agriculture are Cassandra
    (Huang & Zhang, 2017), Dynamo (Xian, 2017), HBase (Ray, 2017, Wang et al., 2014)
    and MongoDB (Martínez et al., 2016). An example of SPARQL has been given by Jayaraman
    et al. (2016). Data analytics can be achieved by cloud computing, where computer
    resources are managed remotely to analyse data, often Big Data, or by distributed
    computing, e.g. edge and fog computing. Cloud computing has the advantage that
    it provides high quality services that allow independent execution of multiple
    applications as if they were isolated, even if they are on the same platform,
    e.g. in data centres, which is especially relevant when dealing with Big Data
    (Hernandez-Rojas et al., 2018, Martínez et al., 2016, Tzounis et al., 2017). However,
    cloud computing techniques mostly rely on general purpose cloud providers that
    do not comply with specific agricultural service requirements (López-Riquelme
    et al., 2017) and can experience latency issues, which are not acceptable in IoT
    solutions where monitoring, control and analysis require fast performance (Ferrández-Pastor
    et al., 2018). Examples of application of cloud computing related to arable farming
    are given by Khattab et al., 2016, Na and Isaac, 2016 and López-Riquelme et al.
    (2017). Khattab et al. (2016) present an IoT architecture with a cloud-based back-end
    where weather and soil data are processed and analysed for automatic activation
    of irrigation and spraying actions. Na and Isaac (2016) describe a human-centric
    IoT architecture with a list of cloud services, such as language translation,
    data simplification or updated market price information. And López-Riquelme et
    al. (2017) use FIWARE components for a cloud service for smart irrigation tasks,
    focussing on the benefits of using FIWARE as cloud provider. Regarding Big Data
    analysis and Big Data in general in an agricultural context, Kamilaris et al.
    (2017) and Wolfert et al. (2017) respectively have performed exhaustive reviews
    on the subject. The use of IoT middleware platforms is gaining interest due to
    its potential for solving different challenges found in the application of IoT,
    especially interoperability. IoT middleware platforms try to simplify the complex
    communication through the cloud due to heterogeneity of devices, communications
    and networks, by using enablers like standardised APIs and protocols (Jayaraman
    et al., 2016, Martínez et al., 2016, O''Grady and O''Hare, 2017). Examples of
    these are HYDRA, UBIWARE, UBIROAD, UBIDOTS, SMEPP, SIXTH, Think Speak, SensorCloud,
    Amazon IoT and IBM IoT, with focus on context aware functionality; SOCRADES, GSN
    and SIRENA, with more focus on security and privacy; Aneka, WSO2, PubNub, SmartFarmNet
    and FIWARE, with a wider services-oriented approach; and projects like IoT-A,
    OpenIoT, or ArrowHead (Gill et al., 2017, Jayaraman et al., 2015, Jayaraman et
    al., 2016, Kamilaris et al., 2016, Martínez et al., 2016, Ray, 2017, Sundmaeker
    et al., 2016). Even if all these and more solutions are found in the IoT market,
    an intelligent middleware solution that addresses most issues observed in smart
    farming successfully is yet to be implemented (Jayaraman et al., 2016, Martínez
    et al., 2016, Sundmaeker et al., 2016). However, FIWARE (Ferreira et al., 2017,
    López-Riquelme et al., 2017, Martínez et al., 2016, Rodriguez et al., 2018) and
    SmartFarmNet (Ferrández-Pastor et al., 2018, Jayaraman et al., 2016) have been
    implemented effectively for precision and smart farming applications. In order
    to communicate data across platforms and IoT devices, ensuring interoperability,
    APIs are essential. These should adapt to evolving or new standards in order to
    ensure a longer life span, which may become a limitation if the APIs are not updated.
    It is through the APIs that data are made available for the IoT applications (e.g.
    Goap et al., 2018, Hernandez-Rojas et al., 2018). These services may include tracing,
    monitoring, event management, forecasting or optimisation for agricultural activities
    and products. These applications related to arable farming are described in the
    next section. 4. Current and potential applications Multiple applications can
    be derived from the implementation of IoT in arable farming. These applications
    can always be conceptualised into the three IoT layers described previously, and
    are not to be confused with the application layer. Elaborations of the reviewed
    articles show that the applications have been differentiated and categorised as
    follows: monitoring, documentation, forecasting and controlling. Monitoring refers
    to timely sensing of very diverse parameters and is mostly the initial point of
    entry for other applications. Documentation covers the storing of sampled data
    for later use in e.g. farm management or traceability of produce. Forecasting
    employs different sources of data through precisely designed analytic methods
    for predicting concrete events. And controlling is the result of active monitoring,
    where processed data are used to automatically activate and control actuators
    in a predefined manner. A summarising table collects all the IoT applications
    in arable farming described in this chapter (Table 2). Most IoT-based systems
    include at least two of these applications and isolated applications are seldom
    seen. In addition, special attention has been paid to FMIS and associated decision
    support to improve operations and production processes involving vehicle positioning
    analytics, optimisation and logistics, which are key elements in arable farming
    (Bochtis et al., 2011, Bochtis et al., 2014) and have consequently got a section
    of their own. Table 2. IoT applications in arable farming. Applications Examples
    References Monitoring Crop Leaf area index Bauer and Aschenbruck (2018) Plant
    height and leaf parameters Okayasu et al. (2017) Soil Moisture (Brinkhoff et al.,
    2017, Kodali and Sahu, 2016) Chemistry Kassal et al. (2018) Irrigation water pH
    and salinity Popović et al. (2017) Weather Air (T, atm and RH), rainfall, radiation,
    and wind speed and direction Yan et al. (2018) Remote sensing Estimating crop
    biomass and N content Näsi et al. (2018) Irrigation scheduling and plant disease
    detection Khanal et al. (2017) Machinery Vehicle position and yield data Oksanen
    et al. (2016) Machine performance (Miettinen et al., 2006, Pfeiffer and Blank,
    2015) Farm facilities Crop storage temperature and moisture levels (Green et al.,
    2009, Juul et al., 2015) Environment Nutrient leaching Burton et al. (2018) Contaminants
    Severino et al. (2018) Emissions Manap and Najib (2014) Documentation and traceability
    Machinery Field mapping Fountas, Sørensen et al., 2015 Yield mapping for fertilisation
    planning Lyle et al. (2014) Soil mapping for site-specific amendment measures
    (Godwin and Miller, 2003, McBratney et al., 2003) Remote sensing Mapping crop
    development (Khanal et al., 2017, Näsi et al., 2018, Viljanen et al., 2018) Mapping
    soil texture and residue coverage Khanal et al. (2017) Supply chain Agri-food
    traceability (Bochtis and Sørensen, 2014, Pesonen et al., 2014) Forecasting Machine
    learning models Forecasting max. and min. T at field level Aliev (2018) Estimating
    levels of P in the soil (Estrada-López et al., 2018) Forecasting soil moisture
    Goap et al. (2018) Plant disease forecasting (Aasha Nandhini et al., 2017, Jain
    et al., 2018) Predicting irrigation recommendations Goldstein et al. (2018) Frost
    prediction (Diedrichs et al., 2018, Moon et al., 2018) Forecast of harvest and
    fertilisation dates Viljanen et al. (2018) Classical models Soil moisture and
    contaminant dynamics forecasting for irrigation scheduling Severino et al. (2018)
    Fungal disease forecast in cereals (El Jarroudi et al., 2017, Mäyrä et al., 2018)
    Forecasting field trafficability and workability for field operations Edwards
    et al. (2016) DAISY soil-crop-atmosphere model Abrahamsen and Hansen (2000) RUSLE
    soil erosion model Renard et al. (1991) Controlling Irrigation Fully autonomous
    irrigation scheme Goap et al. (2018) Machinery Variable rate fertilisation Peets
    et al. (2012) Site-specific weed control Christensen et al. (2009) In-row cultivation
    in precision seeding Midtiby et al. (2018) Adaptive route planning in field operations
    (Edwards et al., 2017, Seyyedhasani and Dvorak, 2018, Villa-Henriksen et al.,
    2018) Autonomous vehicles & robots Operations of autonomous vehicles Bechar and
    Vigneault (2016) In-field obstacle detection Christiansen et al. (2016) 4.1. Monitoring
    Automatic monitoring is the obvious first step in IoT applied to agriculture.
    Strategically placed sensors can automatically sense and transmit data to the
    cloud for further documentation, forecasting or controlling applications. Sensors
    are used to monitor crop parameters such as leaf area index (e.g. Bauer & Aschenbruck,
    2018), plant height and leaf colour, size and shape (e.g. Okayasu et al., 2017);
    soil parameters such as soil moisture (e.g. Brinkhoff et al., 2017, Kodali and
    Sahu, 2016) or soil chemistry (e.g. Kassal et al., 2018); irrigation water parameters
    such as pH and salinity (e.g. Popović et al., 2017); or weather parameters such
    as air temperature, air pressure, air relative humidity, rainfall, radiation,
    wind speed and wind direction (e.g. Yan et al., 2018). In addition, remote sensing
    can also be employed, i.e. instead of sensors placed in the field they are installed
    on satellites or Unmanned Aerial Vehicles (UAV). However, these measurements mostly
    require some form of processing and interpretation as the values sampled are not
    directly related to the targeted parameters. An example of monitoring through
    remote sensing is the estimation of crop biomass and nitrogen content by the use
    of hyper- and multispectral images (Näsi et al., 2018), or the use of thermal
    remote sensing, which has been applied for e.g. irrigation scheduling or plant
    disease detection (Khanal, Fulton, & Shearer, 2017). Furthermore, agricultural
    machinery can also be remotely monitored, e.g. vehicle position and yield data
    (Oksanen et al., 2016), or machine performance (Miettinen et al., 2006). This
    is especially relevant with the increasing appearance of autonomous vehicles and
    robots in agriculture (Sundmaeker et al., 2016). Finally, at farm level the storage
    of crops can also be monitored to ensure the correct control of, for example,
    temperature and moisture, and avoid losses due to damage (Green et al., 2009,
    Juul et al., 2015). Environmental impact indicators should be integrated into
    farm monitoring applications, so that leaching (Burton, Dave, Fernandez, Jayachandran,
    & Bhansali, 2018), contaminants (Severino, D’Urso, Scarfato, & Toraldo, 2018)
    or emissions (Manap & Najib, 2014) are addressed too. 4.2. Documentation and traceability
    Collected operations and process data once stored can be used for documentation.
    Documentation is usually the natural application of monitored data but it must
    be noted that it can also include other types of sampled data, such as manually
    input or documentation of performed control actions (Sørensen, Pesonen, Bochtis,
    Vougioukas, & Suomi, 2011). The data are stored as raw data or as processed data
    at different levels. Documentation is essential for decision-making, controlling
    or analytics, and is an indispensable element in FMIS (Kaloxylos et al., 2014).
    Mapping is also a form of documentation where data are spatially projected onto
    a map. On-the-go sensors installed on vehicles and implements can be used for
    automated field mapping (Fountas, Sørensen et al., 2015), e.g. yield mapping used
    for later fertilisation planning (Lyle, Bryan, & Ostendorf, 2014), or soil mapping
    for site-specific amendment measures (Godwin and Miller, 2003, McBratney et al.,
    2003). Remote sensing can also be used for mapping crop development (Khanal et
    al., 2017, Näsi et al., 2018, Viljanen et al., 2018), or soil texture and residue
    coverage (Khanal et al., 2017). Remote sensing is becoming a popular tool for
    monitoring and mapping, but is yet to be proven feasible for all its potential
    applications. When documentation data sets extend beyond the farm level so that
    they can be traced throughout the supply chain, it is often referred as traceability
    and this notion is a key element in agri-food supply chain management as a measure
    to satisfy, for example, consumer demands (Bochtis and Sørensen, 2014, Pesonen
    et al., 2014). 4.3. Forecasting Forecasting is one of the fundamental functions
    for decision making that IoT brings to agriculture. Access to “real-time” data
    and historical data is used for forecasting events that require some form of action
    for managing successfully the crop or field operation. Therefore, both monitoring
    and documentation are important prerequisites for enabling forecasting. Forecasting
    is employed as preventive measures that require some action due to a predicted
    event, e.g. weeding, irrigating or harvesting. Machine learning and scientific
    modelling are examples of tools employed for forecasting. Different machine learning
    models have been employed, e.g. Artificial Neural Networks for forecasting maximum
    and minimum temperatures at field level (Aliev, 2018) or for estimating levels
    of phosphorus (P) in the soil (Estrada-López, Castillo-Atoche, Vázquez-castillo,
    & Sánchez-Sinencio, 2018); support vector regression method for forecasting soil
    moisture (Goap et al., 2018) or plant disease detection (Aasha Nandhini, Hemalatha,
    Radha, & Indumathi, 2017); gradient boosting for predicting irrigation recommendations
    (Goldstein, Fink, & Meitin, 2018); Bayesian networks and random forest for frost
    prediction (Diedrichs, Bromberg, Dujovne, Brun-laguna, & Watteyne, 2018); multiple
    linear regression and random forest in estimating yield and fertilisation requirements
    for forecasting harvest and fertilisation dates (Viljanen et al., 2018); or also
    for frost prediction using four different machine learning algorithms: decision
    tree, boosted tree, random forest, and regression (Moon, Kim, Zhang, & Woo, 2018).
    A rather different forecasting approach was employed by Jain, Sarangi, Bhatt,
    and Pappula (2018), where three different models, i.e. random forest, support
    vector machine and artificial neural network were used for forecasting diseases
    and at the same time for adaptive data collection from the network of nodes in
    order to reduce data traffic and energy consumption of the network. Summarising,
    IoT is allowing the sampling of large amounts of data, which can be employed as
    training data by the machine learning algorithms to build predictive mathematical
    models. Machine learning is opening new possibilities for effectively forecasting
    events in arable farming, which might change the very nature of decision making
    in agriculture. Scientific modelling has also been employed for forecasting in
    an IoT context, e.g. soil moisture dynamics and contaminant migration forecasting
    using soil sensor data and precipitation forecasts for irrigation scheduling (Severino
    et al., 2018); fungal disease forecast in winter wheat (El Jarroudi et al., 2017)
    and barley (Mäyrä, Ruusunen, Jalli, Jauhiainen, & Leiviskä, 2018); or forecasting
    field trafficability and workability for field operations (Edwards, White, Munkholm,
    Sørensen, & Lamandé, 2016). These modelling tools have an important role in agriculture
    as they are conscientiously developed and validated by the scientific community,
    and can forecast events for which machine learning models are very limited. There
    is also considerable potential for integrating existing and acknowledged modelling
    tools such as the soil-crop-atmosphere system model DAISY (Abrahamsen & Hansen,
    2000) or the soil erosion model RUSLE (Renard, Foster, Weesies, & Porter, 1991)
    into an IoT solution. Many of these solutions can make agriculture in general,
    and arable farming in particular, more resource efficient, e.g. through smart
    irrigation, as well as environmentally friendly, e.g. by smart pest and disease
    management. 4.4. Controlling In IoT, controlling is the result of active monitoring
    in an automated system, where the monitored variables are automatically adjusted
    to, for example, predefined thresholds. Forecasting can also play an important
    role in controlling. This is, for example, the case in smart irrigation systems,
    where irrigation is activated before drought damage in the crop is recognised,
    thus reducing yield losses. Goap et al. (2018) employed real-time sensing of soil
    moisture and soil temperature in combination with weather forecasts to control
    a fully autonomous irrigation scheme. Sensors on-the-go installed in tractors
    and implements can also be used to control e.g. variable rate fertilisation (Peets
    et al., 2012), site-specific weed control technologies (Christensen et al., 2009),
    or in-row cultivation controlled by plant patterns in precision seeding (Midtiby,
    Steen, & Green, 2018). Controlling is crucial in smart farming as it allows the
    automation of systems, especially considering the operations of autonomous vehicles
    and robots in the fields (Bechar & Vigneault, 2016), where site-specific actions
    and sensing-based safety systems will play an important role, e.g. for in-field
    obstacle detection for autonomous vehicles (Christiansen, Nielsen, Steen, Jørgensen,
    & Karstoft, 2016). 4.5. FMIS FMIS can be defined as systems that store and process
    farm-related collected data and provide decision supporting tools for farm management
    (Paraforos et al., 2016). FMIS assist farmers in the execution and documentation
    of farm activities, their evaluation and optimisation, as well as in strategic,
    tactical and operational planning of the farm operations (Kaloxylos et al., 2014).
    FMIS are consequently systems that can encapsulate all the applications previously
    described, and are vital elements in smart farm management. However, the adoption
    of FMIS targeted to the new IoT technologies is slow. A study published in 2015
    showed that most FMIS architectures used at that time had been designed in the
    1980s by researchers. This may explain why most FMIS currently have a structure
    and an architecture that is not suitable for distributed and service oriented
    decision support required for supporting precision agriculture and smart farming
    solutions, e.g. 75% of FMIS are still PC-based, and functionalities regarding
    traceability, quality assurance and agronomic best practice estimate are still
    missing or in their initial development stages in most commercial FMIS (Fountas,
    Sørensen et al., 2015). FMIS are key in smart farming and they should support
    automatic data acquisition, monitoring, documenting, planning and decision making
    (Köksal & Tekinerdogan, 2018). The latest research on IoT-based FMIS is expected
    to become part of the commercial FMIS available in the near future and will cover
    different needs across the supply chain and needs of IoT-based agriculture as
    a whole, as well as complying with standards ensuring interoperability between
    systems. In addition, decision support systems (DSS) are essential in dealing
    with Big Data and assisting the farm manager in management and decision making
    in tasks such as farm financial analysis, business processes or supply chain functions
    (Fountas, Carli et al., 2015, Kaloxylos et al., 2012). In order to design an up-to-date
    FMIS, it is beneficial to make preliminary use of dedicated system analysis methodologies,
    such as soft system methodologies (SSM), for identifying required changes and
    constraints and proposing solutions, followed by a later hard system modelling
    for designing the required specifications and components of the system (Sørensen
    et al., 2010, Fountas, Sørensen et al, 2015). It is also necessary to base FMIS
    on the cloud as it allows interconnection with diverse additional services (Kaloxylos
    et al., 2014). This development points out the inevitable need for standardisation
    of APIs in order to achieve interoperability among applications and services as
    part of the FMIS. New technologies such as distributed management systems can
    also enhance the capabilities of FMIS to a great extent (Fountas, Sørensen et
    al., 2015). Furthermore, the introduction of agricultural moving robots in the
    near future, as well as the wireless and automatic control and monitoring of agricultural
    machinery, also needs to be considered in the design and development of FMIS (Fountas,
    Sørensen et al, 2015, Paraforos et al., 2016). The future FMIS will also be capable
    of emulating farmers different work habits, as the system will automate certain
    tasks previously performed by farmers, which will require additional training
    (Sørensen et al., 2011). Consequently, it is important to provide supportive adoption
    and transition strategies for conventional farming to convert into smart farming
    (Köksal & Tekinerdogan, 2018). Examples of current FMIS employed in arable farming
    are offered by different technology providers: machine manufacturers, institutions
    or targeted private companies. Some manufacturers provide their own farm management
    tools, such as Agricultural Management Solutions (AMS) from John Deere, or Precision
    Land Management (PLM) from New Holland. Across brands some FMIS have a more local
    approach, e.g. the Dutch Akkerweb developed by Wageningen University and Research,
    while other commercial solutions have a global approach, e.g. 365FarmNet, Agworld
    or FarmWorks. 4.6. Vehicle navigation, optimisation and logistics Navigation systems
    are widely used in arable farming with the successful implementation of auto-steering
    systems in tractors and harvesters. However, IoT-based solutions are still in
    their early stages. IoT-based field operation monitoring (Oksanen et al., 2016)
    or monitoring of motor and machine performance (Pfeiffer & Blank, 2015) have been
    effectively implemented on harvesting operations. Commercial examples of agricultural
    telematics are Trimble''s Connected Farm, AGCO''s AgCommand, John Deer JDLink,
    New Holland''s PLM Connect or CLAAS’ telematics; however, they are all closed
    systems, which limits greatly the possibilities of the IoT technologies, especially
    interoperability (Oksanen, Piirainen, & Seilonen, 2015). Regarding optimised route
    planning, pre-planning harvest operations based on field data using simulation
    models can improve the harvest capacity of the vehicle or fleet saving working
    hours as well as fuel consumption (Bakhtiari et al., 2011, Bochtis and Sørensen,
    2009, Busato et al., 2007, Jensen et al., 2012, Zhou et al., 2014). However, field
    complexity and vehicle fleet size can become major hurdles for the algorithms
    employed (Seyyedhasani et al., 2019, Skou-Nielsen et al., 2017). The accessibility
    of field and harvest data can be eased by IoT technologies that allow automated
    data collection and sharing via common communication protocols and standards,
    in interoperable data formats, with compatible data model hierarchies; however,
    this is not always the case (Tzounis et al., 2017). IoT also allows cloud or fog
    computing to be employed to solve the high computational requirements of these
    route planning models (Seyyedhasani et al., 2019), even though the computing can
    also be achieved at the edge (Villa-Henriksen et al., 2018). Data communication
    costs, latency problems and unstable mobile connectivity may pose important challenges
    for route planning applications that rely only on cloud computing, making mobile
    edge computing more adequate and robust for these systems. Nevertheless, true
    IoT-based dynamic route planning is still in its infancy but gaining increasing
    attention, especially with the arrival of agricultural robots (Bechar and Vigneault,
    2016, Kayacan et al., 2015). Concerning its application, until recently, harvest
    logistics has employed field sampled data, i.e. boundaries, obstacles, gates,
    etc., to optimise the route of the vehicles involved in the operation statically
    (e.g. Bakhtiari et al., 2011, Jensen et al., 2012), where the complete routes
    of all vehicles are planned a priori. Nevertheless, these plans often do not comply
    with real-world challenges as they do not adapt to variating inputs, e.g. vehicle
    speed changes or in-field yield variations, or to unforeseen situations, e.g.
    machine breakdowns, eventual out of field delays, non-trafficable wet spots, undefined
    obstacles, etc. There is consequently the need to integrate route optimisation
    and operation logistics in IoT systems, where the optimisation can adapt dynamically
    to varying input and unforeseen events. It is only in the last few years that
    harvest logistics really started adapting dynamically to parameters such as vehicles''
    behaviour or in-field yield variations (Edwards et al., 2017, Seyyedhasani and
    Dvorak, 2018, Villa-Henriksen et al., 2018). Today, new possibilities for optimising
    infield operations arrive with the large amount of data available via internet,
    e.g. remote sensing data or other collected spatial data. These could be adaptive
    planning based on trafficability maps for reducing soil compaction or avoiding
    vehicles getting stuck in wet spots; or selective harvesting based on predicted
    grain quality maps, which is expected to increase the value of the crop harvested.
    5. Challenges and solutions When implementing IoT in arable farming, as well as
    in other contexts, diverse challenges limit or affect the performance of the systems
    employed. The challenges identified in the literature reviewed (Fig. 5) can indicate
    which areas need to be taken into account when designing an IoT-based system or
    point out areas that require further research. However, the results presented
    in the figure are indicative and do not necessarily describe the importance of
    the challenges included, especially because of the multiple applications and implementation
    designs that are conceivable in arable farming. Any of the challenges can become
    crucial in different setups, and are therefore described. In addition, all challenges
    can be related to or have consequences for other challenges. Download : Download
    high-res image (464KB) Download : Download full-size image Fig. 5. Percentage
    of challenges mentioned by the literature reviewed, divided by time periods and
    grouped in IoT layers. Interoperability, in general, is a major hurdle in the
    application of IoT. There are different dimensions related to it: technical, syntactical,
    semantic and organisational (Serrano et al., 2015, Veer and Wiles, 2008). Technical
    interoperability refers mostly to the communication protocols which affect the
    hardware and software components implemented. Syntactical interoperability is
    usually related to data formats, their syntax and encoding. Semantic interoperability
    concerns the interpretation of data contents, i.e. the meaning of the information
    exchanged. And organisational interoperability involves intercommunication of
    meaningful information across organisations regardless of information systems
    and infrastructures in a world-wide scale. As interoperability is such a generic
    term, in this section, technical interoperability has been addressed as part of
    the communication protocol challenge, syntactical and semantic interoperability
    have been included under the data heterogeneity challenge, and organisational
    interoperability have been described under the scalability challenge. 5.1. General
    challenges 5.1.1. Revenue and affordability Often the investment for establishing
    an IoT-based solution is high and as such challenging for small-scale farmers,
    while larger farms can more easily acquire IoT-based technologies when investing
    in new equipment (Brewster et al., 2017). The uncertainty regarding required costs,
    e.g. fuel or water allocations, and selling prices of the product give little
    margin for many farmers for investing in new technologies (Higgins et al., 2017).
    Trust plays an important role when investing in IoT systems, and relieving the
    perceived risks by demonstrating the revenues from their adoption is essential
    (Ferrández-Pastor et al., 2016, Jayashankar et al., 2018). For example, in Europe
    70% of all fertilising and spraying machinery is equipped with at least one precision
    agriculture technology, but only 25% of farmers actually use precision agriculture
    components on their farms (Say, Keskin, Sehri, & Sekerli, 2017). Technology providers
    need to increase the perceived value by demonstrating the financial return from
    IoT in order to diminish the perceived risk of adoption many farmers have. Technology
    providers need also to provide robust tools that are aligned with farmer needs
    and practices in order to gain acceptance and trust of IoT technologies. These
    technologies need to reduce the workload, assist in decision making and improve
    the efficiency of the targeted practice. Additionally, technology providers need
    to develop interoperable and flexible solutions that can easily be integrated
    and comply with accepted standards. Governments can also incentivise IoT adoption
    by policies and regulations, especially regarding documentation and traceability
    as ICT eases paperwork and bureaucracy. A reduction in the percentage of mentions
    regarding this challenge (see Fig. 5) could indicate that IoT is being more adopted
    in arable farming. In addition, IoT is likely to reshape the arable farming business.
    The implementation of monitoring and control of farming operations are generating
    substantial amounts of valuable data that are essential for the business of technology
    providers. The way farmers will dive into the data economy, i.e. connecting their
    data to work in vertical and horizontal networks beyond the farm, will have an
    effect on their business models, as well as on the business models of technology
    providers. The point of view of the farmer''s business regarding IoT has not been
    fully addressed in the literature reviewed and will require further investigation.
    5.1.2. Data heterogeneity The diverse data sources and sensor manufacturers imply
    use of different unit systems, data structures and nomenclatures in different
    data formats, which result in reduced syntactical and semantic interoperability
    among IoT environments. Sensor data can be encoded in binary, or represented in
    formats such as json, xml, text (e.g. csv), shapefile, or even proprietary formats.
    The heterogeneity of data types and formats can also affect the performance of
    a protocol employed for communicating the information. Furthermore, this challenge
    becomes critical in situations such as system integration or sharing data with
    other systems (e.g. FMIS), which could imply developing data conversion tools
    or even redesign of the IoT setup. The use of standardised formats can help with
    this challenge. Some attempts have been made at producing standards or standardised
    formats that cover the great heterogeneity of agricultural data, e.g. ISO 11783
    (ISOBUS) developed by the Agricultural Industry Electronics Foundation (AEF) for
    tractors and agricultural machinery, which is very relevant in arable farming
    (Fountas, Sørensen et al, 2015, Miettinen et al., 2006, Oksanen et al., 2015,
    Peets et al., 2012) or AgroXML developed by the Association for Technologies and
    Structures in Agriculture (KTBL) mainly for FMIS (Kaloxylos et al., 2014, Köksal
    and Tekinerdogan, 2018, O''Grady and O''Hare, 2017, Peets et al., 2012). These
    are now being integrated by the non-profit organisation AgGateway through the
    ADAPT framework and SPADE project for seamlessly communicating agricultural machinery
    data to FMIS, trying to enhance the existing standards and as a consequence improve
    interoperability (Brewster et al., 2017). A drawback of comprehensive data models,
    which try to describe all attributes of agricultural data, is that they become
    too cumbersome to handle in many applications. Finally, the use of middleware
    platforms applicable in smart farming, e.g. FIWARE or SmartFarmNet, can also reduce
    the problems caused by data heterogeneity (Ferrández-Pastor et al., 2018, Ferreira
    et al., 2017, O''Grady and O''Hare, 2017, Serrano et al., 2015). 5.1.3. Scalability
    and flexibility Organisational interoperability is a key element concerning scalability
    and flexibility (Serrano et al., 2015, Tzounis et al., 2017, Verdouw, 2016). Many
    of the systems described in the literature reviewed are centralised, closed, difficult
    to integrate in other existing platforms or difficult to implement on larger scales,
    different farming systems or geographical areas. They are also challenging to
    integrate beyond the farm level and across the supply chain in order to provide
    agri-food safety and traceability. The use of standardised dynamic protocols,
    such as SOAP protocol (cloud-based infrastructures with extensible ontologies
    that cover the broad and diverse agricultural production systems and environments),
    fast and reliable APIs (e.g. RESTful) and middleware platforms applicable for
    smart agriculture, such as FIWARE with its generic enablers, are tools that are
    employed to achieve organisational interoperability and make the system developed
    more scalable and flexible (Ferreira et al., 2017, López-Riquelme et al., 2017,
    O''Grady and O''Hare, 2017, Serrano et al., 2015). Service-Oriented Architectures
    (SOA) also bring possibilities to effectively integrate ecosystems through open
    and standardised interfaces, increasing organisational interoperability (Kaloxylos
    et al., 2014, Köksal and Tekinerdogan, 2018, Kruize et al., 2016, Pesonen et al.,
    2014, Sørensen and Bochtis, 2010). Scalability and flexibility may also refer
    to WSNs in the literature, to their capacity to support an increasing number of
    devices/nodes, with the network architecture, the gateway and protocols used being
    the main constrains (Elijah et al., 2018). This challenge has been considered
    under the network size challenge. 5.1.4. Robustness and fault tolerance Many different
    factors can affect the overall robustness and fault tolerance of a system. Robust
    wireless connectivity is an important limitation in many setups (Oksanen et al.,
    2016, Vuran et al., 2018). In the design of an IoT-based solution dealing with
    faults, errors and unforeseen events need to be taken into account in order to
    ensure the reliability of the system. Many of these issues are related to the
    other challenges presented here and can be handled at the device level, but also
    need to be thought of in the overall IoT system design (Ferreira et al., 2017,
    Ray, 2017). 5.1.5. Complexity The agricultural system is complex and can be challenging
    to work with. It is complex not only because of the multifaceted nature of the
    physical, chemical and/or biological processes in the soil-crop-air system, but
    also because of the technical complexity of hardware and software interacting
    with it. Depending on the novelty of the IoT technology implemented and the background
    of the developer and user, the systems can become more or less complex. For example,
    software and hardware incompatibilities can challenge its implementation and integration
    (Ferrández-Pastor et al., 2016), as well as many other challenges, e.g. the great
    field task diversity in arable farming, that can add complexity to the system.
    Technical knowledge can become a major hurdle for the implementation of IoT in
    farms, and it is therefore important that user-friendliness and plug-and-play
    basis have a high priority for the technology providers (Sundmaeker et al., 2016,
    Zou and Quan, 2017). Complexity should be an issue for the technology provider
    and not for the customer. In addition, the co-created development and implementation
    of IoT systems in agriculture by a multi-actor approach is needed to overcome
    the complexity at different levels of integrating IoT in agriculture. Good examples
    of this are the European Union supported research and development efforts through
    multi-actor large-scale pilot projects, such as IoF2020 (Sundmaeker et al., 2016,
    Verdouw et al., 2017), AIOTI (Pérez-Freire & Brillouet, 2015), SmartAgriFood (Kaloxylos
    et al., 2012), SMART AKIS (Djelveh & Bisevac, 2016), or more recently SmartAgriHubs
    (Chatzikostas et al., 2019). 5.1.6. Lack of products In the early stages of precision
    agriculture and IoT in agriculture, products that integrated agronomy and ICT
    engineering were lacking, which hindered their adoption (Ferrández-Pastor et al.,
    2016, Kitchen and Roger, 2007). The large scales and diversity of environments
    in arable farming can challenge the products used even more than in controlled
    environments, as they are to be modelled to describe larger areas, send information
    through larger distances and be exposed to harsher environments. Even if Figure
    5 shows lack of references in the last couple of years, it is still relevant for
    some applications, e.g. for in-situ real-time soil nutrient sensing is still a
    real challenge, especially regarding calibration (Bünemann et al., 2018, Marín-González
    et al., 2013). 5.2. Device layer challenges 5.2.1. Power consumption The use of
    wireless devices has major advantages over wired systems, as they are more economical
    to establish and can cover much wider areas. However, their power consumption,
    with limited battery life, is a major drawback of many wireless systems, and needs
    to be accounted for. This issue is so important that it is the main identified
    challenge in the literature reviewed (Fig. 5), especially for WSNs (Jawad et al.,
    2017, Tan and Panda, 2010). The large distances to cover in arable farming make
    wireless devices indispensable, and solutions to reduce their power consumption
    and/or extend their battery life are required. These solutions can include energy
    harvesting, low power consumption sensors and communication technologies or power
    efficient management. Energy harvesting techniques can include solar cells, micro
    wind turbines or other interesting solutions which have been well described by
    Tuna and Gungor (2016) and Jawad et al. (2017). The power consumption of the communication
    technologies and sensors employed are also to be considered in the design of the
    IoT solution as there are big differences between devices (Balmos et al., 2016,
    Hernandez-Rojas et al., 2018, Jawad et al., 2017). Choosing low power sensors
    and communication devices needs to be taken into account when designing the IoT
    system (Estrada-López et al., 2018). Low power wireless technologies, such as
    BLE, have low power consumption but also low communication range, while Wi-Fi
    has somewhat higher communication range, but much higher power consumption (Table
    1), however data rates and other parameters are important factors to consider
    too. ZigBee and LoRa have been identified as appropriate candidates for many farming
    applications (Jawad et al., 2017). Power efficient management techniques of WSNs
    include sleep/active schemes, e.g. duty-cycling algorithms (Ahmed, Abdalla et
    al., 2018, Ahmed, De et al., 2018, Alahmadi et al., 2017, Balmos et al., 2016,
    Dhall and Agrawal, 2018, Temprilho et al., 2018); data mitigation schemes, e.g.
    data aggregation (Abdel-basset, Shawky, & Eldrandaly, 2018) or data compression
    (Moon et al., 2018); energy-efficient routing schemes, e.g. mobile sinks by the
    use of UAVs (Bacco, Berton, Ferro et al., 2018, Bacco, Berton, Gotta et al., 2018,
    Uddin et al., 2018); and other combined solutions, e.g. LEACH, a cluster architecture
    with Time Division Multiple Access (TDMA) based MAC protocol and data aggregation
    scheme (Kamarudin, Ahmad, & Ndzi, 2016), or dynamic power management by combining
    sleep/active states with dynamic data rates schemes (Estrada-López et al., 2018).
    Jawad et al. (2017) have provided a good overview and description of WSN power
    efficient management techniques. Lastly, techniques such as edge computing may
    have higher power requirements on the device, making cloud computing more desirable
    if power consumption is a constraint in the projected IoT solution. On the other
    hand, mounting sensors and devices on agricultural vehicles and implements allows
    connection to the power supply of the vehicle and as a consequence eliminate power
    consumption as a limiting factor. The type of sensors that are mounted on vehicles
    and their implements is quite limited, being currently mainly camera-based (e.g.
    Midtiby et al., 2018, Steen et al., 2012). Nevertheless, there is for example
    potential in employing sensors on the coulters of seed-drills for mapping soil
    properties (Nielsen et al., 2017), or other on-the-go sensors for mapping soil
    or crop variations (Peets et al., 2012). 5.2.2. Harsh device environment The natural
    environment in which sensors and other devices are placed can greatly challenge
    their functionality and longevity. Harsh weather conditions, e.g. large temperature
    variations, intense rainfall or prolonged high humidity can cause water condensation
    inside devices and consequently provoke corrosion and short circuits (Bauer &
    Aschenbruck, 2018). Sensors and other devices situated close to the ground experience
    exposure to dust, mud, or even corrosive chemicals, e.g. agro-chemicals, which
    can seriously damage the performance of the device or cause its total failure
    (Aliev, 2018, Bauer and Aschenbruck, 2018). Underground chemical sensors are also
    exposed to soil chemical and biological processes that deteriorate the sensors
    and can mislead the measurements, requiring unfeasible maintenance and re-calibrations
    (Burton et al., 2018, Kassal et al., 2018). Choosing adequate casing that does
    not interfere with the functionality of the device and also tolerates the environment
    they are located in is essential in the design of the IoT system. Sensors are
    also developed for different conditions, and need to match the system''s minimum
    requirements. RFID tags have been reported to perform flawlessly under extreme
    conditions and environments (Costa et al., 2013, Ruiz-Garcia and Lunadei, 2011);
    however, RFID technology is quite limited in its applications in arable farming,
    and suitable sensors and communication devices are therefore primarily dependent
    on the application and design of the IoT system. 5.3. Network layer challenges
    5.3.1. Latency, throughput and rate The large amounts of data generated in IoT
    applications do not only cause problems regarding data storage or handling, but
    also latency problems that reduce the throughput of the network employed. In arable
    farming, latency problems can be of great importance in some IoT solutions, e.g.
    in WSNs where high latency implies higher power consumption of a node (López-Riquelme
    et al., 2017), or in dynamic optimised route planning in vehicle logistics, which
    requires rapid responses to deviations in the route plan (Villa-Henriksen et al.,
    2018). For reducing latency problems, fog and edge computing can be employed,
    as these computing techniques decrease latency and network congestion (Elijah
    et al., 2018, Ferrández-Pastor et al., 2018), e.g. data compression at the edge
    reduces the large volumes of data communicated through the network (Moon et al.,
    2018). In addition, the use of lightweight protocols can also reduce latency problems,
    e.g. LP4S for sensors (Hernández-rojas, Fernández-Caramés, Fraga-Lamas, & Escudero,
    2018), or MQTT messaging protocol, which has a faster throughput than HTTP and
    works well for bandwidth limited networks (Estrada-López et al., 2018). The communication
    rate is important to have in mind when planning the wireless communication technology
    to implement, e.g. 5G can handle high-rates, while SigFox or IEEE 802.15.4-based
    protocols are for low-rates (Bacco, Berton, Ferro et al., 2018, Bacco, Berton,
    Gotta et al., 2018, Jawad et al., 2017). The throughput of the network affects
    the communication rate, and the communication rate also influences the power consumption,
    which equally has to be carefully considered. Fast response to events is achieved
    by data processing techniques such as data merging (Tanaka, 2018), data compression
    (Zhao, Lin et al., 2018, Zhao, Lucani et al., 2018), or dynamic and complex event
    processing rules for conditioning input data and immediately acting accordingly
    (Mazon-Olivo et al., 2018). These processes can be on the cloud or at the edge,
    i.e. devices. Finally, test-bed analysis prior to implementation of the network
    can simulate communication rates and possible latency and throughput issues (Stewart,
    Stewart, & Kennedy, 2017). 5.3.2. Wireless link quality A low wireless link quality
    affects greatly the QoS of an IoT system as it ends in unreliable communication
    between nodes (Klaina, Alejos, Aghzout, & Falcone, 2018). This can be caused by
    multipath propagation (Ruiz-Garcia & Lunadei, 2011), background noise (Mazon-Olivo
    et al., 2018), routing problems, e.g. packet collision or limited band width (Jawad
    et al., 2017), or even by harsh environmental conditions, which affect the transceivers
    and the quality of the data transmitted (Elijah et al., 2018). Adequate design
    and testing of the network are crucial for avoiding or reducing this challenge.
    However, techniques such as channel access methods, e.g. TDMA, can improve the
    link quality by reducing packet collisions (Temprilho et al., 2018). Regarding
    testing, the calculation of signal strengths in real-time on the base station
    helps estimating the wireless link quality of a WSN when establishing the system
    (Klaina et al., 2018). Packet loss characterisation can also be used to assess
    the wireless link quality of a connection (Bacco, Berton, Ferro et al., 2018,
    Bacco, Berton, Gotta et al., 2018). Additionally, blind entity identification
    can also help estimating the wireless link quality of a network (Mukherjee, Misra,
    Raghuwanshi, & Mitra, 2018). 5.3.3. Communication range The different wireless
    communication technologies have very diverse ranges, which need to be accounted
    for when designing the IoT solution, together with other factors such as data
    rate, power consumption, communication protocols or costs (Table 1). In arable
    farming, due to the larger farm sizes and because of the employment of mobile
    sensors and devices on vehicles, this challenge becomes even more critical. Furthermore,
    relying on the approximate communication range of a wireless technology can be
    misleading, e.g. WiFi is often described to have 100 m range, but a test analysing
    the packet delivery ratio with respect to distance to gateway shows packet losses
    at ≥ 60 m (Giordano, Seitanidis, Ojo, Adami, & Vignoli, 2018), while in another
    test using WiField devices, 2.6 km range was claimed to be reached still having
    reliable internet connection (Brinkhoff et al., 2017). Testing the communication
    range is therefore important for some settings. In addition to the choice of wireless
    technology, network topology in WSNs, such as mesh topologies can also increase
    the communication range by using nodes to communicate with the central node (Ahmed,
    Abdalla et al., 2018, Ahmed, De et al., 2018). Reduced range due to obstacles
    or topography is addressed in the propagation losses challenge later. 5.3.4. Communication
    protocols Differences in communication protocols can cause technical interoperability
    issues, which can lead to connectivity and compatibility issues among the hardware
    and software employed (Stočes et al., 2016). Network protocols are separated into
    diverse layers forming a protocol stack, where tasks are divided into smaller
    steps (Suhonen, Kohvakka, Kaseva, Hämäläinen, & Hännikäinen, 2012). In the infrastructure
    layer, some wireless standards that define communication protocols are commonly
    used by different wireless technologies, e.g. IEEE 802.15.4, which is used by
    ZigBee or 6LowPAN among others, or 3GPP, which is used by GPRS, LTE or 5G among
    others (see Table 1). In the application layer, standards such as HTTP (Ahmed,
    Abdalla et al., 2018, Ahmed, De et al., 2018, Kaloxylos et al., 2014), MQTT (Ferrández-Pastor
    et al., 2016, Mazon-Olivo et al., 2018) or XMPP (Köksal & Tekinerdogan, 2018)
    are commonly used in IoT applications in arable farming. Adequate protocols are
    especially relevant and challenging in vehicle-to-vehicle communication, and crucial
    in arable farming. Different standards in different layers require careful planning
    of the whole IoT solution, as they are not always compatible and can also have
    an effect on the data formats used, or sensors and gateways employed (Hernandez-Rojas
    et al., 2018). Middleware platforms can ease the integration of diverse protocols
    and standards by offering enough abstraction levels so that this diversity is
    effectively managed (O''Grady and O''Hare, 2017, Tuna et al., 2017). Edge computing
    can also ease technical interoperability issues as a local computing layer is
    created to process data and create control rules before sending the data to the
    cloud (Ferrández-Pastor et al., 2016). 5.3.5. Network management Managing a WSN
    can imply battery change, software updates, calibration of sensors, replacement
    of devices and similar maintenance activities that can be very time-consuming.
    Smart mobile devices, e.g. smart phones, can make remote software updating possible,
    and can sometimes even be used for updating some other IoT devices (Ferrández-Pastor
    et al., 2016). Using energy efficient devices and communication techniques can
    also be employed to extend the battery life of devices (Jawad et al., 2017). Some
    sensors may require recalibrations with a certain periodicity, which has to be
    accounted for in the projected IoT solution (Kassal et al., 2018). Nonetheless,
    the management of the network is always to be considered when implementing IoT
    solutions in arable farming, where distances and number of devices/nodes can be
    vast. 5.3.6. Network size WSN configuration schemes have a maximum number of sensor
    nodes per gateway that the network can handle, i.e. the network size. According
    to the analysis of the reviewed literature, network size is being identified more
    often in the last two years (see Fig. 5), which seems to indicate new possibilities
    for exploiting the capabilities of WSNs. Network size depends on the wireless
    communication technology employed and can affect other parameters, such as data
    latency or scalability of the network (Balmos et al., 2016). Network topologies
    can also influence the network size and vary from simple star network (e.g. Hernandez-Rojas
    et al., 2018) to more advanced multi-hop mesh networks (Ahmed, Abdalla et al.,
    2018, Ahmed, De et al., 2018, Langendoen et al., 2006) that can increase the network
    size by using network nodes as relays to reach a central node and gateway. Optimisation
    algorithms have been used to find the best spatial distribution of WSN nodes,
    and therefore to assist in the optimisation of its network size (Abdel-basset
    et al., 2018). 5.3.7. Propagation losses Even though propagation losses can become
    a big problem for WSNs in application areas like fruit orchards and tree plantations,
    in arable farming hedges, trees, big rocks or sheds, as well as pronounced topography,
    like hills and valleys, can also block, diffract or scatter the signal reducing
    the communication range and causing data packet losses. Additionally, weather
    conditions can also degrade the wireless connectivity propagation of signals (Jawad
    et al., 2017, Kamarudin et al., 2016, Stewart et al., 2017). To avoid or reduce
    these problems, adequate planning of the location of the sensor nodes, the antenna
    height, the communication protocols and the network topology is necessary. Regarding
    network topologies, mesh networks compared to star networks can reduce propagation
    losses as well as increase communication range (Kamarudin et al., 2016, Ruiz-Garcia
    and Lunadei, 2011). Moreover, propagation modelling can help planning, reduce
    communication tests and ensure Quality of Service (QoS) for heterogeneous wireless
    networks (Jawad et al., 2017, Stewart et al., 2017, Kamarudin et al., 2016, Klaina
    et al., 2018, Ruiz-Garcia and Lunadei, 2011). 5.4. Application layer challenges
    5.4.1. Data analysis Data analysis can in some cases become an important challenge,
    especially when dealing with Big Data, which is data in such amounts, heterogeneity
    and complexity that they need new data management techniques for analysis (Wolfert
    et al., 2017). Agricultural Big Data are worthless unless analysed; however, analysis
    can be very challenging because of the volume, diversity, and quality (e.g. errors
    and duplications). This is especially challenging in arable farming, where larger
    amounts of heterogeneous data are generated at diverse rates and from very different
    sources. The literature reviewed show an increased identification of this challenge
    in the last two years compared with the previous 6 years (see Fig. 5). This evolution
    might be caused by increased access and use of agricultural Big Data in recent
    times (Kamilaris et al., 2017, Pham and Stack, 2018). Techniques for lowering
    data dimensionality can ease the analysis by applying feature reduction models,
    which reduce data size by eliminating unnecessary data dimensions (Sabarina &
    Priya, 2015). Cloud computing provides the flexibility and scalability necessary
    for Big Data analysis, where numerous users operate simultaneously with the large
    and complex datasets (Gill et al., 2017). Likewise, cloud platforms are perfect
    for storing such large amounts of data, where NoSQL databases can store and manage
    these large unstructured datasets (Kamilaris et al., 2017). The analysis of Big
    Data can potentially be used, for example, for policy-making, reducing environmental
    negative impact, improve food-safety, as well as improved farm management and
    production, benefiting the different stakeholders involved (Kamilaris et al.,
    2017, Wolfert et al., 2017). Another facet to data analysis is the growing use
    of machine learning techniques, which are being used for exploring Big Data and
    identifying important factors and their interrelationship that affect agricultural
    production systems like, for example, identifying diverse patterns (e.g. crop
    development stages, weeds or diseases) as part of machine vision systems (Bacco,
    Berton, Ferro et al., 2018, Bacco, Berton, Gotta et al., 2018, Reshma and Pillai,
    2018). In these cases, the model is built upon a sample of data, often called
    training data, whose size and quality directly affects the final model. Choosing
    the adequate approach for building the model with the available data is also essential
    for the success of the IoT solution. 5.4.2. Data security and privacy Even though
    data security and privacy do not constitute a high challenge in the literature
    reviewed, they are certainly major concerns for the farmers, i.e. the suppliers
    of data and also end-users of the technology developed, who have little trust
    in service providers'' use of data (Jayashankar et al., 2018, Zhang et al., 2017).
    Also, data ownership needs to be taken into consideration as raw data and processed
    data in IoT systems have different ownership and are accessible by different actors,
    affecting the necessary requirements for data security and privacy (Kaloxylos
    et al., 2014). Research and development focus has been on sensing, processing,
    controlling and computing, while less effort has been devoted to solving security
    threats, risks and privacy (Tuna et al., 2017). Other issues like cost effectiveness
    in, for example, cloud services are also affecting the security of the data, which
    eventually affects the whole privacy and security of the IoT solution, as low-cost
    services have lower security (Dhinari, Newe, Lewis, & Nizamani, 2017). Technology
    providers should prioritise data security and privacy in their business models.
    The availability of privacy and security technologies that are dynamic enough
    to support the vast numbers and variety of stakeholders, as well as the complexity
    of the network, is still a major challenge that needs to be overcome (Verdouw,
    2016). Many solutions are being employed to reduce data security and privacy issues
    in each of the IoT layers of the system, e.g. encryption algorithms, intrusion
    detection mechanisms, authentication, secure routing protocols, anonymisation,
    etc. (Tuna et al., 2017, Tzounis et al., 2017). Middleware platforms are employed
    to add a security layer between network and applications, which can include confidentiality,
    anonymity and security to the system (Rodriguez et al., 2018, Serrano et al.,
    2015, Tuna et al., 2017, Tzounis et al., 2017). Additionally, newer technologies
    such as blockchain are aiming to solve many of the challenges related to privacy
    and security as well as transparency of the IoT. In agriculture, it is mainly
    being applied in the food supply chain (Bermeo-Almeida et al., 2018). Blockchain
    make sense for IoT platforms where large amounts of confidential data are handled.
    5.4.3. Data quality and availability Some of the challenges previously described
    have a direct influence on data quality, e.g. propagation losses, wireless link
    quality, robustness and fault tolerance. Anomaly detection and similar methods
    have been employed to identify faulty data before analysis (Cadavid et al., 2018,
    Lyle et al., 2014). The poor quality of data or its limited availability can limit
    many applications that involve Big Data analytics, modelling and machine learning,
    which can affect or even compromise the success of some IoT solutions (Balducci
    et al., 2018, O''Grady and O''Hare, 2017, Wolfert et al., 2017). In these setups,
    and specifically in arable farming, many datasets are integrated from different
    sources and sensors, and the quality or scarcity of some data can become a major
    hurdle to overcome. Ensuring quality and availability of the data before starting
    such a project is required. Even if it is not always possible to gather all the
    data necessary to develop models, perform correct analytics or train machine learning
    algorithms, scientific assumptions (Severino et al., 2018), data augmentation
    (Diedrichs et al., 2018) or simulated data (Wolanin et al., 2019) are used to
    help or solve the encountered challenge. 5.4.4. Context-awareness (metadata) Context-awareness
    is an important and distinctive feature of Smart Farming as compared to Precision
    Farming, because it automatically includes descriptive data from e.g. fields,
    sensors, machines, i.e. metadata. Metadata can include information about the date
    and time, node identification number, data of calibration, height and position
    information, or even descriptive data about an experiment objective, field, machinery,
    crop genotype or soil information at the sensor placement (Jayaraman et al., 2015).
    Metadata about sensor nodes in the system are crucial for providing contextual
    information so that correct data analysis can be performed (Jayaraman et al.,
    2016, Ray, 2017). Context-awareness helps computing techniques to decide what
    data is to be analysed, and consequently easing the computations, and the lack
    of this data complicate data analysis substantially. This is especially relevant
    in arable farming, where the system has to handle both spatial and temporal data
    and make decisions based on the data collected. The use of standards, formats
    and middleware that support metadata is therefore important to have in mind during
    the planning of an IoT solution (Peets et al., 2009, Ray, 2017). Context-awareness
    facilitates new business models and strategies for data analytics and DSS software
    providers. 6. Conclusions and future perspectives A literature review of current
    and foreseeable IoT technologies and systems in arable farming was carried out.
    This has included an overview of the state of the art of IoT technologies, an
    outline of the current and potential applications, and a thorough description
    of the challenges and solutions. From this survey, the role smart mobile phones
    play is highlighted, especially Android devices, which are employed in different
    ways for a wide diversity of applications, due to their availability, connectivity,
    interoperability, programmable ease and computational power. The introduction
    of 5G networks in the near future will enhance the capabilities of smart mobile
    devices due to their enhanced performance. The intelligent management of WSN as
    well as the capabilities of improved communication technologies can also solve
    some of the challenges IoT-based solutions are experiencing. The role of middleware
    platforms and generic enablers are expected to gain acceptance and importance,
    as they can solve system integration issues and interoperability challenges. In
    general, regarding challenges, interoperability is a main challenge throughout
    the whole IoT architecture, where development and/or acceptance of standards and
    protocols is required to ease the issues encountered by many IoT implementations.
    Furthermore, challenges such as revenue and affordability of IoT systems, the
    power consumption of wireless devices, latency and throughput problems during
    data transfer, as well as the complexity of data analysis, and data privacy and
    security have been identified in the reviewed literature as of high importance,
    and academic research should direct their resources toward solving or reducing
    these issues. Technology developers need to ensure that the solutions create a
    real benefit for farmers and are available and applicable for both large and small
    producers. How IoT generated farm data will affect the business models of farmers
    requires further investigation as it is not fully addressed in the literature
    reviewed. The combination of intelligent power efficient systems with power harvesting
    technologies should guarantee longer battery-life of wireless devices. Computing
    data at the edge, i.e. on the devices, as well as lightweight protocols can reduce
    network latency and capacity/throughput problems. The emergence of Big Data is
    posing significant challenges for data analysis, as the complexity and heterogeneity
    of the huge data sets require the application of new analysis techniques beyond
    those traditionally used. Techniques such as lowering data dimensionality, cloud
    platforms and cloud computing, including machine learning algorithms, can help
    in this area and new innovative solutions are expected to be developed. Finally,
    technology producers have to guarantee privacy and security of the data handled
    throughout all the layers by employing different secure methods without compromising
    the user-friendliness of the solutions employed. Middleware platforms can help
    improving the privacy and security of IoT solutions, and techniques such as blockchain
    can assist with privacy and security problems of IoT platforms when dealing with
    Big Data. In the near future, interoperable and service-oriented FMIS that are
    integrated in the supply chain with intelligent analytic tools will take over
    some of the management and decision-making tasks of farmers and advisors, which
    will require training for farmers to adapt to this type of FMIS. Key decision
    support functions include farm financial analysis, business processes, or supply
    chain functions, which will gain importance with Big Data analytics. In addition,
    DSS for vehicle logistics will grow in importance as a way to optimise field operations
    using route planning and sensor-based site-specific applications. Finally, the
    introduction of autonomous vehicles and robotics in arable farming in the near
    future is expected to completely change arable farming operations and production
    praxes requiring fully adopted IoT capabilities. Acknowledgements This work was
    supported by the European Union''s Horizon 2020 research and innovation programme
    under grant agreement no. 731884, Internet of Food and Farm (IoF2020). References
    Aasha Nandhini et al., 2017 S. Aasha Nandhini, R. Hemalatha, S. Radha, K. Indumathi
    Web enabled plant disease detection system for agricultural applications using
    WMSN Wireless Personal Communications, 1–16 (2017), 10.1007/s11277-017-5092-4
    Google Scholar Abdel-basset et al., 2018 M. Abdel-basset, L.A. Shawky, K. Eldrandaly
    Grid quorum-based spatial coverage for IoT smart agriculture monitoring using
    enhanced multi-verse optimizer Neural Computing & Applications, 4 (2018), 10.1007/s00521-018-3807-4
    Google Scholar Abrahamsen and Hansen, 2000 P. Abrahamsen, S. Hansen Daisy : An
    open soil-crop-atmosphere system model Environmental Modelling & Software, 15
    (2000), pp. 313-330, 10.1016/S1364-8152(00)00003-7 View PDFView articleView in
    ScopusGoogle Scholar Ahmed, Abdalla et al., 2018 E.M.E. Ahmed, K.H.B. Abdalla,
    I.K. Eltahir Farm automation based on IoT 2018 International conference on computer,
    control, electrical, and Electronics engineering (ICCCEEE), IEEE (2018), pp. 1-4
    Google Scholar Ahmed, De et al., 2018 N. Ahmed, D. De, S. Member, I. Hussain Internet
    of Things (IoT) for smart precision agriculture and farming in rural areas IEEE
    Internet of Things Journal, 5 (6) (2018), pp. 4890-4899, 10.1109/JIOT.2018.2879579
    View in ScopusGoogle Scholar Alahmadi et al., 2017 A. Alahmadi, T. Alwajeeh, V.
    Mohanan, R. Budiarto Wireless sensor network with always best connection for internet
    of farming V. Mohanan, R. Budiarto, I. Aldmour (Eds.), Powering the Internet of
    Things with 5G networks, IGI Global, Hershey, PA, USA (2017), pp. 176-201, 10.4018/978-1-5225-2799-2.ch007
    View in ScopusGoogle Scholar Aliev, 2018 K. Aliev Internet of plants application
    for smart agriculture IJACSA - International Journal of Advanced Computer Science
    and Applications, 9 (4) (2018), pp. 421-429, 10.14569/IJACSA.2018.090458 View
    in ScopusGoogle Scholar Ashton, 2009 K. Ashton That “internet of things” Thing
    RFID Journal (2009, June) Retrieved from http://www.rfidjournal.com/articles/view?4986
    Google Scholar Bacco, Berton, Ferro et al., 2018 M. Bacco, A. Berton, E. Ferro,
    C. Gennaro, A. Gotta, S. Matteoli, et al. Smart farming : opportunities, challenges
    and technology enablers 2018 IoT vertical and topical summit on agriculture -
    tuscany (IOT tuscany), IEEE (2018), pp. 1-6, 10.1109/IOT-TUSCANY.2018.8373043
    View in ScopusGoogle Scholar Bacco, Berton, Gotta et al., 2018 M. Bacco, A. Berton,
    A. Gotta, L. Caviglione IEEE 802.15.4 air-ground UAV communications in smart farming
    scenarios IEEE Communications Letters, 22 (9) (2018), pp. 1910-1913, 10.1109/LCOMM.2018.2855211
    View in ScopusGoogle Scholar Bakhtiari et al., 2011 A. Bakhtiari, H. Navid, J.
    Mehri, D.D. Bochtis Optimal route planning of agricultural field operations using
    ant colony optimization Agricultural Engineering International: CIGR Journal,
    13 (4) (2011), pp. 1-16 Retrieved from http://www.cigrjournal.org/index.php/Ejounral/article/view/1939
    Google Scholar Balducci et al., 2018 F. Balducci, D. Impedovo, D. Informatica,
    A. Moro Machine learning applications on agricultural datasets for smart farm
    enhancement Machines, 6 (38) (2018), pp. 1-22, 10.3390/machines6030038 Google
    Scholar Balmos et al., 2016 A.D. Balmos, A.W. Layton, A. Ault, J.V. Krogmeier,
    D.R. Buckmaster Investigation of Bluetooth communications for low-power embedded
    sensor networks in agriculture Transactions of the ASABE, 59 (5) (2016), pp. 1021-1029,
    10.13031/trans.59.11173 View in ScopusGoogle Scholar Bauer and Aschenbruck, 2018
    J. Bauer, N. Aschenbruck Design and implementation of an agricultural monitoring
    system for smart farming In 2018 IoT Vertical and topical Summit on agriculture
    (pp. 1–6), IEEE, Tuscany, Italy (2018), 10.1109/IOT-TUSCANY.2018.8373022 Google
    Scholar Bechar and Vigneault, 2016 A. Bechar, C. Vigneault Agricultural robots
    for field operations: Concepts and components Biosystems Engineering, 149 (2016),
    pp. 94-111, 10.1016/j.biosystemseng.2016.06.014 View PDFView articleView in ScopusGoogle
    Scholar Bennett, 2015 J.M. Bennett Agricultural big Data : Utilisation to discover
    the Unknown and instigate practice change Farm Policy Journal, 12 (1) (2015),
    pp. 43-50 Retrieved from http://www.farminstitute.org.au/publications-1/farm-policy-journals/2015-autumn-from-little-data-big-data-grow/agricultural-big-data-utilisation-to-discover-the-unknown-and-instigate-practice-change
    CrossRefView in ScopusGoogle Scholar Bermeo-Almeida et al., 2018 O. Bermeo-Almeida,
    M. Cardenas-Rodriguez, T. Samaniego-Cobo, E. Ferruzola-Gómez, R. Cabezas-Cabezas,
    W. Bazán-Vera Blockchain in Agriculture : A systematic literature review 4th International
    conference, CITI 2018, proceedings, Springer, Guayaquil, Ecuador (2018), pp. 44-56,
    10.1007/978-3-030-00940-3 View in ScopusGoogle Scholar Bochtis et al., 2011 D.
    Bochtis, O. Green, C.G. Sørensen Spatio-temporal constrained planning software
    for field machinery Journal of Agricultural Machinery Science, 7 (4) (2011), pp.
    399-403 Retrieved from https://dergipark.org.tr/download/article-file/118933 Google
    Scholar Bochtis and Sørensen, 2009 D.D. Bochtis, C.G. Sørensen The vehicle routing
    problem in field logistics part I Biosystems Engineering, 104 (4) (2009), pp.
    447-457, 10.1016/j.biosystemseng.2009.09.003 View PDFView articleView in ScopusGoogle
    Scholar Bochtis and Sørensen, 2014 D. Bochtis, C.G. Sørensen Special issue: Operations
    management - operations management in bio-production systems Operations Management
    in Bio-Production Systems, 120 (2014), pp. 1-116 Retrieved from https://www.sciencedirect.com/journal/biosystems-engineering/vol/120/suppl/C
    View in ScopusGoogle Scholar Bochtis et al., 2014 D.D. Bochtis, C.G.C. Sørensen,
    P. Busato Advances in agricultural machinery management : A review Biosystems
    Engineering, 126 (2014), pp. 69-81, 10.1016/j.biosystemseng.2014.07.012 View PDFView
    articleView in ScopusGoogle Scholar Brewster et al., 2017 C. Brewster, I. Roussaki,
    N. Kalatzis, K. Doolin, K. Ellis IoT in agriculture: Designing a europe-wide large-scale
    pilot IEEE Communications Magazine, 55 (9) (2017), pp. 26-33, 10.1109/MCOM.2017.1600528
    View in ScopusGoogle Scholar Brinkhoff et al., 2017 J. Brinkhoff, J. Hornbuckle,
    W. Quayle, C.B. Lurbe, T. Dowling WiField , an IEEE 802 . 11-based agricultural
    sensor data gathering and logging platform Eleventh International conference on
    sensing technology (ICST) (2017) Google Scholar Bünemann et al., 2018 E.K. Bünemann,
    G. Bongiorno, Z. Bai, R.E. Creamer, G. De Deyn, R. De Goede, et al. Soil quality
    – a critical review Soil Biology and Biochemistry, 120 (February) (2018), pp.
    105-125, 10.1016/j.soilbio.2018.01.030 View PDFView articleView in ScopusGoogle
    Scholar Burton et al., 2018 L. Burton, N. Dave, R.E. Fernandez, K. Jayachandran,
    S. Bhansali Smart gardening IoT soil sheets for real-Time nutrient analysis Journal
    of the Electrochemical Society, 165 (8) (2018), pp. 3157-3162, 10.1149/2.0201808jes
    Google Scholar Busato et al., 2007 P. Busato, R. Berruto, C. Saunders Optimal
    field-bin locations and harvest patterns to improve the combine field Capacity
    : Study with a dynamic simulation model CIOSTA 07 001. Vol. IX. Agricultural engineering
    International: The CIGR ejournal (2007) Retrieved from https://ecommons.cornell.edu/handle/1813/10619
    Google Scholar Cadavid et al., 2018 H. Cadavid, W. Garzón, A. Pérez, G. López,
    C. Mendivelso, C. Ramírez Towards a smart farming Platform : From IoT-based crop
    sensing Colombian conference on computing CCC 2018, communications and information
    science CCIS, Vol. 885 (2018), pp. 237-251, 10.1007/978-3-319-98998-3 View in
    ScopusGoogle Scholar CEMA, 2017 CEMA Digital farming: What does it really mean?
    (2017) Retrieved March 22, 2018 http://cema-agri.org/sites/default/files/CEMA_Digital
    Farming - Agriculture 4.0_ 13 02 2017.pdf Google Scholar Chatzikostas et al.,
    2019 G. Chatzikostas, D. Matic, D. Van Damme, P. Rakers, J. Vangeyte, A. De Visscher,
    et al. Smart agri hubs D3.1 innovation experiment guidelines (2019) Retrieved
    from https://smartagrihubs.eu/Deliverables/pdfs/D3.1_IE Guidelines_final.pdf Google
    Scholar Christensen et al., 2009 S. Christensen, H.T. Søgaard, P. Kudsk, M. Nørremark,
    I. Lund, E.S. Nadimi, et al. Site-specific weed control technologies Weed Research,
    49 (2009), pp. 233-241, 10.1111/j.1365-3180.2009.00696.x View in ScopusGoogle
    Scholar Christiansen et al., 2016 P. Christiansen, L.N. Nielsen, K.A. Steen, R.N.
    Jørgensen, H. Karstoft DeepAnomaly : Combining background subtraction and deep
    learning for detecting obstacles and anomalies in an agricultural field Sensors,
    16 (1904) (2016), pp. 1-21, 10.3390/s16111904 Google Scholar Costa et al., 2013
    C. Costa, F. Antonucci, F. Pallottino, J. Aguzzi, D. Sarriá, P. Menesatti A review
    on agri-food supply chain Traceability by means of RFID Technology Food and Bioprocess
    Technology, 6 (2) (2013), pp. 353-366, 10.1007/s11947-012-0958-7 View in ScopusGoogle
    Scholar Dhall and Agrawal, 2018 R. Dhall, H. Agrawal An improved energy efficient
    duty cycling algorithm for IoT based precision agriculture Procedia Computer Science,
    141 (2018), pp. 135-142, 10.1016/j.procs.2018.10.159 View PDFView articleView
    in ScopusGoogle Scholar Dhinari et al., 2017 L.L. Dhinari, T. Newe, E. Lewis,
    S. Nizamani Cloud computing and Internet of Things fusion: Cost issues Eleventh
    International conference on sensing technology (ICST) (2017), pp. 2-7 Google Scholar
    Diedrichs et al., 2018 A.L. Diedrichs, F. Bromberg, D. Dujovne, K. Brun-laguna,
    T. Watteyne Prediction of frost events using machine learning and IoT sensing
    devices IEEE Internet of Things Journal, 5 (6) (2018), pp. 4589-4597, 10.1109/JIOT.2018.2867333
    View in ScopusGoogle Scholar Djelveh and Bisevac, 2016 S. Djelveh, V. Bisevac
    D3.7. Smart-AKIS policy gaps and briefs (2016) Retrieved from https://www.smart-akis.com/wp-content/uploads/2018/08/SmartAKIS_D3.7_Final.pdf
    Google Scholar Edwards et al., 2017 G.T.C. Edwards, J. Hinge, N. Skou-Nielsen,
    A. Villa-Henriksen, C.A.G. Sørensen, O. Green Route planning evaluation of a prototype
    optimised infield route planner for neutral material flow agricultural operations
    Biosystems Engineering, 153 (2017), pp. 149-157, 10.1016/j.biosystemseng.2016.10.007
    View PDFView articleView in ScopusGoogle Scholar Edwards et al., 2016 G. Edwards,
    D.R. White, L.J. Munkholm, C.G. Sørensen, M. Lamandé Modelling the readiness of
    soil for different methods of tillage Soil and Tillage Research, 155 (2016), pp.
    339-350, 10.1016/j.still.2015.08.013 View PDFView articleView in ScopusGoogle
    Scholar El Jarroudi et al., 2017 M. El Jarroudi, L. Kouadio, M. El Jarroudi, J.
    Junk, C. Bock, A.A. Diouf, et al. Improving fungal disease forecasts in winter
    wheat: A critical role of intra-day variations of meteorological conditions in
    the development of septoria leaf blotch Field Crops Research, 213 (August) (2017),
    pp. 12-20, 10.1016/j.fcr.2017.07.012 View PDFView articleView in ScopusGoogle
    Scholar Elijah et al., 2018 O. Elijah, S. Member, T.A. Rahman An overview of Internet
    of Things (IoT) and data analytics in Agriculture : Benefits and challenges IEEE
    Internet of Things Journal, 5 (5) (2018), pp. 3758-3773, 10.1109/JIOT.2018.2844296
    View in ScopusGoogle Scholar Estrada-López et al., 2018 J.J. Estrada-López, A.A.
    Castillo-Atoche, J. Vázquez-castillo, E. Sánchez-Sinencio Smart soil parameters
    estimation system using an autonomous wireless sensor network with dynamic power
    management strategy Sensors Journal, 18 (21) (2018), pp. 8913-8923, 10.1109/JSEN.2018.2867432
    View in ScopusGoogle Scholar Faraci et al., 2018 G. Faraci, A. Raciti, S. Rizzo,
    G. Schembra A 5G platform for unmanned aerial monitoring in rural areas: Design
    and performance issues IEEE international conference on network softwarization
    (NetSoft 2018) - technical sessions, Vol. 1, IEEE (2018), pp. 237-241, 10.1109/NETSOFT.2018.8459960
    Google Scholar Ferrández-Pastor et al., 2018 F.J. Ferrández-Pastor, J.M. García-Chamizo,
    M. Nieto-Hidalgo, J. Mora-Martínez Precision agriculture design method using a
    distributed computing architecture on Internet of Things context Sensors, 18 (1731)
    (2018), pp. 1-21, 10.3390/s18061731 Google Scholar Ferrández-Pastor et al., 2016
    F. Ferrández-Pastor, J. García-Chamizo, M. Nieto-Hidalgo, J. Mora-Pascual, J.
    Mora-Martínez Developing ubiquitous sensor network platform using Internet of
    Things: Application in precision agriculture Sensors, 16 (8) (2016), p. 1141,
    10.3390/s16071141 View in ScopusGoogle Scholar Ferreira et al., 2017 D. Ferreira,
    P. Corista, J. Gião, S. Ghimire, J. Sarraipa, R. Jardim-gonçalves Towards smart
    agriculture using FIWARE enablers 2017 International conference on engineering,
    technology and Innovation (ICE/ITMC), IEEE, Funchal, Portugal (2017), pp. 1544-1551,
    10.1109/ICE.2017.8280066 View in ScopusGoogle Scholar Foley et al., 2011 J.A.
    Foley, N. Ramankutty, K.A. Brauman, E.S. Cassidy, J.S. Gerber, M. Johnston, et
    al. Solutions for a cultivated planet Nature, 478 (7369) (2011), pp. 337-342,
    10.1038/nature10452 Retrieved from View in ScopusGoogle Scholar Fountas, Carli
    et al., 2015 S. Fountas, G. Carli, C.G. Sørensen, Z. Tsiropoulos, C. Cavalaris,
    A. Vatsanidou, et al. Farm management information systems: Current situation and
    future perspectives Computers and Electronics in Agriculture, 115 (2015), pp.
    40-50, 10.1016/j.compag.2015.05.011 View PDFView articleView in ScopusGoogle Scholar
    Fountas, Sørensen et al, 2015 S. Fountas, C.G. Sørensen, Z. Tsiropoulos, C. Cavalaris,
    V. Liakos, T. Gemtos Farm machinery management information system Computers and
    Electronics in Agriculture, 110 (2015), pp. 131-138, 10.1016/j.compag.2014.11.011
    View PDFView articleView in ScopusGoogle Scholar Gao and Yao, 2016 C. Gao, K.
    Yao The design and implementation of portable Agricultural microclimate data acquisition
    system based on android platform Proceedings - 2015 8th international symposium
    on computational intelligence and design, ISCID 2015, Vol. 1 (2016), pp. 210-213,
    10.1109/ISCID.2015.275 Google Scholar Gill et al., 2017 S.S. Gill, I. Chana, R.
    Buyya IoT based agriculture as a cloud and big data service Journal of Organizational
    and End User Computing, 29 (4) (2017), pp. 1-23, 10.4018/JOEUC.2017100101 View
    in ScopusGoogle Scholar Giordano et al., 2018 S. Giordano, I. Seitanidis, M. Ojo,
    D. Adami, F. Vignoli IoT solutions for crop protection against wild animal attacks
    2018 IEEE International conference on environmental engineering (EE), IEEE (2018),
    pp. 1-5, 10.1109/EE1.2018.8385275 View in ScopusGoogle Scholar Goap et al., 2018
    A. Goap, D. Sharma, A.K. Shukla, C.R. Krishna An IoT based smart irrigation management
    system using Machine learning and open source technologies Computers and Electronics
    in Agriculture, 155 (May) (2018), pp. 41-49, 10.1016/j.compag.2018.09.040 View
    PDFView articleView in ScopusGoogle Scholar Godfray et al., 2010 H.C.J. Godfray,
    J.R. Beddington, I.R. Crute, L. Haddad, D. Lawrence, J.F. Muir, et al. Food Security
    : The challenge of feeding 9 billion people Science, 327 (5967) (2010), pp. 812-818,
    10.1126/science.1185383 View in ScopusGoogle Scholar Godwin and Miller, 2003 R.J.
    Godwin, P.C.H. Miller A review of the technologies for mapping within-field variability
    Biosystems Engineering, 84 (4) (2003), pp. 393-407 View PDFView articleView in
    ScopusGoogle Scholar Goldstein et al., 2018 A. Goldstein, L. Fink, A. Meitin Applying
    machine learning on sensor data for irrigation recommendations : Revealing the
    agronomist''s tacit knowledge Precision Agriculture, 19 (3) (2018), pp. 421-444,
    10.1007/s11119-017-9527-4 View in ScopusGoogle Scholar Green et al., 2009 O. Green,
    E.S. Nadimi, V. Blanes-Vidal, R.N. Jørgensen, I.M.L. Drejer Storm, C.G. Sørensen
    Monitoring and modeling temperature variations inside silage stacks using novel
    wireless sensor networks Computers and Electronics in Agriculture, 69 (2009),
    pp. 149-157, 10.1016/j.compag.2009.07.021 View PDFView articleView in ScopusGoogle
    Scholar Hamrita and Hoffacker, 2005 T.K. Hamrita, E.C. Hoffacker Development of
    a “smart” wireless soil monitoring sensor prototype using RFID technology Applied
    Engineering in Agriculture, 21 (1) (2005), pp. 139-143, 10.13031/2013.17904 View
    in ScopusGoogle Scholar Hernández-rojas et al., 2018 D.L. Hernández-rojas, T.M.
    Fernández-Caramés, P. Fraga-Lamas, C.J. Escudero Design and practical evaluation
    of a family of lightweight protocols for heterogeneous sensing through BLE beacons
    in IoT telemetry applications Sensors, 18 (1) (2018), pp. 1-33, 10.3390/s18010057
    Google Scholar Hernandez-Rojas et al., 2018 D. Hernandez-Rojas, B. Mazon-Olivo,
    J. Novillo-Vicuña, G. Belduma-Vacacela IoT android gateway for monitoring and
    control a WSN M. Botto-Tobar, N. Esparza-Cruz, J. León-Acurio, N. Crespo-Torres,
    M. Beltrán-Mora (Eds.), CITT 2017: Technology trends, Communications in computer
    and information science, Vol. 798, Springer, Cham (2018), pp. 18-32, 10.1007/978-3-319-72727-1_2
    View in ScopusGoogle Scholar Higgins et al., 2017 V. Higgins, M. Bryant, A. Howell,
    J. Battersby Ordering adoption: Materiality, knowledge and farmer engagement with
    precision agriculture technologies Journal of Rural Studies, 55 (2017), pp. 193-202,
    10.1016/j.jrurstud.2017.08.011 View PDFView articleView in ScopusGoogle Scholar
    Huang and Zhang, 2017 J. Huang, L. Zhang The big data processing platform for
    intelligent agriculture AIP Conference Proceedings, 1864 (2017), 10.1063/1.4992850
    Google Scholar Jain et al., 2018 P. Jain, S. Sarangi, P. Bhatt, S. Pappula Development
    of an energy-efficient adaptive IoT gateway model for precision agriculture 2018
    global Internet of Things Summit (GIoTS), IEEE (2018), pp. 1-6, 10.1109/GIOTS.2018.8534553
    Google Scholar Jawad et al., 2017 H. Jawad, R. Nordin, S. Gharghan, A. Jawad,
    M. Ismail Energy-efficient wireless sensor networks for precision agriculture:
    A review Sensors, 17 (8) (2017), p. 1781, 10.3390/s17081781 View in ScopusGoogle
    Scholar Jayaraman et al., 2015 P.P. Jayaraman, D. Palmer, A. Zaslavsky, A. Salehi
    Addressing information processing needs of digital agriculture with OpenIoT platform
    I. Podnar Žarko, K. Pripužić, M. Serrano (Eds.), Interoperability and open-source
    solutions for the Internet of Things. Lecture notes in computer science, Vol.
    9001, Springer, Cham (2015), pp. 137-152, 10.1007/978-3-319-16546-2_11 View in
    ScopusGoogle Scholar Jayaraman et al., 2016 P.P. Jayaraman, A. Yavari, D. Georgakopoulos,
    A. Morshed, A. Zaslavsky Internet of Things platform for smart farming: Experiences
    and lessons learnt Sensors (Switzerland), 16 (11) (2016), pp. 1-17, 10.3390/s16111884
    View in ScopusGoogle Scholar Jayashankar et al., 2018 P. Jayashankar, S. Nilakanta,
    W.J. Johnston, P. Gill, R. Burres, W.J. Johnston IoT adoption in agriculture :
    The role of trust , perceived value and risk Journal of Business & Industrial
    Marketing, 33 (6) (2018), pp. 804-821, 10.1108/JBIM-01-2018-0023 View in ScopusGoogle
    Scholar Jensen et al., 2012 M.A.F. Jensen, D. Bochtis, C.G. Sorensen, M.R. Blas,
    K.L. Lykkegaard In-field and inter-field path planning for agricultural transport
    units Computers & Industrial Engineering, 63 (4) (2012), pp. 1054-1061, 10.1016/j.cie.2012.07.004
    View PDFView articleView in ScopusGoogle Scholar Juul et al., 2015 J.P. Juul,
    O. Green, R.H. Jacobsen Deployment of wireless sensor networks in crop storages
    Wireless Personal Communications, 81 (2015), pp. 1437-1454, 10.1007/s11277-015-2482-3
    View in ScopusGoogle Scholar Kaloxylos et al., 2012 A. Kaloxylos, R. Eigenmann,
    F. Teye, Z. Politopoulou, S. Wolfert, C. Shrank, et al. Farm management systems
    and the Future Internet era Computers and Electronics in Agriculture, 89 (2012),
    pp. 130-144, 10.1016/j.compag.2012.09.002 View PDFView articleView in ScopusGoogle
    Scholar Kaloxylos et al., 2014 A. Kaloxylos, A. Groumas, V. Sarris, L. Katsikas,
    P. Magdalinos, E. Antoniou, et al. A cloud-based farm management system: Architecture
    and implementation Computers and Electronics in Agriculture, 100 (2014), pp. 168-179,
    10.1016/j.compag.2013.11.014 Retrieved from View PDFView articleView in ScopusGoogle
    Scholar Kamarudin et al., 2016 L.M. Kamarudin, R.B. Ahmad, D.L. Ndzi Simulation
    and analysis of LEACH for wireless sensor networks in agriculture ammar zakaria
    and kamarulzaman Kamarudin mohamed Elshaikh Elobaid Said Ahmed, 21 (1) (2016),
    pp. 16-26 View in ScopusGoogle Scholar Kamilaris et al., 2016 A. Kamilaris, F.
    Gao, F.X. Prenafeta-Boldu, M.I. Ali Agri-IoT: A semantic framework for internet
    of Things-enabled smart farming applications 2016 IEEE 3rd world Forum on Internet
    of Things, WF-IoT 2016, 442–447 (2016), 10.1109/WF-IoT.2016.7845467 Google Scholar
    Kamilaris et al., 2017 A. Kamilaris, A. Kartakoullis, F.X. Prenafeta-Boldú A review
    on the practice of big data analysis in agriculture Computers and Electronics
    in Agriculture, 143 (January) (2017), pp. 23-37, 10.1016/j.compag.2017.09.037
    View PDFView articleView in ScopusGoogle Scholar Kassal et al., 2018 P. Kassal,
    M.D. Steinberg, I. Murkovi Chemical wireless chemical sensors and biosensors :
    A review Sensors and Actuators B, 266 (2018), pp. 228-245, 10.1016/j.snb.2018.03.074
    View PDFView articleView in ScopusGoogle Scholar Kayacan et al., 2015 E. Kayacan,
    E. Kayacan, H. Ramon, W. Saeys Towards agrobots : Identification of the yaw dynamics
    and trajectory tracking of an autonomous tractor Computers and Electronics in
    Agriculture, 115 (2015), pp. 78-87, 10.1016/j.compag.2015.05.012 View PDFView
    articleView in ScopusGoogle Scholar Khanal et al., 2017 S. Khanal, J. Fulton,
    S. Shearer An overview of current and potential applications of thermal remote
    sensing in precision agriculture Computers and Electronics in Agriculture, 139
    (2017), pp. 22-32, 10.1016/j.compag.2017.05.001 View PDFView articleView in ScopusGoogle
    Scholar Khattab et al., 2016 A. Khattab, A. Abdelgawad, A. Khattab Design and
    implementation of a cloud-based IoT scheme for precision agriculture 28th International
    Conference on Microelectronics, Vols. 10–14 (2016), 10.1109/ICM.2016.7847850 Google
    Scholar Kitchen and Roger, 2007 N.R. Kitchen, R.D. Roger Emerging technologies
    for real-time and integrated agriculture decisions Computers and Electronics in
    Agriculture, 61 (2007), pp. 1-3, 10.1016/j.compag.2007.06.007 Google Scholar Klaina
    et al., 2018 H. Klaina, A.V. Alejos, O. Aghzout, F. Falcone Narrowband characterization
    of near-ground radio Sensors, 18 (2428) (2018), pp. 1-15, 10.3390/s18082428 Google
    Scholar Kodali et al., 2017 R.K. Kodali, V. Jain, S. Karagwal IoT based smart
    greenhouse IEEE region 10 humanitarian technology conference 2016, R10-HTC 2016
    - proceedings (2017), 10.1109/R10-HTC.2016.7906846 Google Scholar Kodali and Sahu,
    2016 R.K. Kodali, A. Sahu An IoT based soil moisture monitoring on Losant platform
    Proceedings of the 2016 2nd International conference on contemporary computing
    and informatics, IC3I 2016 (2016), pp. 764-768, 10.1109/IC3I.2016.7918063 View
    in ScopusGoogle Scholar Köksal and Tekinerdogan, 2018 Ö. Köksal, B. Tekinerdogan
    Architecture design approach for IoT - based farm management information systems
    Precision Agriculture, 1–33 (2018), 10.1007/s11119-018-09624-8 Google Scholar
    Kruize et al., 2016 J.W. Kruize, J. Wolfert, H. Scholten, C.N. Verdouw, A. Kassahun,
    A.J.M. Beulens Original papers A reference architecture for farm software ecosystems
    Computers and Electronics in Agriculture, 125 (2016), pp. 12-28, 10.1016/j.compag.2016.04.011
    View PDFView articleView in ScopusGoogle Scholar Langendoen et al., 2006 K. Langendoen,
    A. Baggio, O. Visser Murphy loves potatoes: Experiences from a pilot sensor network
    deployment in precision agriculture Proceedings 20th IEEE International parallel
    & distributed processing symposium, IEEE, Rhodes Island, Greece (2006), pp. 1-8,
    10.1109/IPDPS.2006.1639412 Google Scholar López-Riquelme et al., 2017 J.A. López-Riquelme,
    N. Pavón-Pulido, H. Navarro-Hellín, F. Soto-Valles, R. Torres-Sánchez A software
    architecture based on FIWARE cloud for Precision Agriculture Agricultural Water
    Management, 183 (2017), pp. 123-135, 10.1016/j.agwat.2016.10.020 View PDFView
    articleView in ScopusGoogle Scholar Lyle et al., 2014 G. Lyle, B.A. Bryan, B.
    Ostendorf Post-processing methods to eliminate erroneous grain yield measurements:
    Review and directions for future development Precision Agriculture, 15 (4) (2014),
    pp. 377-402, 10.1007/s11119-013-9336-3 View in ScopusGoogle Scholar Mafuta et
    al., 2012 M. Mafuta, M. Zennaro, A. Bagula, G. Ault, H. Gombachika, T. Chadza
    Successful deployment of a wireless sensor network for precision agriculture in
    Malawi 3rd International conference on networked embedded systems for every application
    (NESEA), IEEE (2012), pp. 1-7 CrossRefGoogle Scholar Manap and Najib, 2014 H.
    Manap, M.S. Najib A DOAS system for monitoring of ammonia emission in the agricultural
    sector Sensors and Actuators B: Chemical, 205 (2014), pp. 411-415, 10.1016/j.snb.2014.08.080
    View PDFView articleView in ScopusGoogle Scholar Marín-González et al., 2013 O.
    Marín-González, B. Kuang, M.Z. Quraishi, M.A. Muñóz-García, A.M. Mouazen On-line
    measurement of soil properties without direct spectral response in near infrared
    spectral range Soil and Tillage Research, 132 (2013), pp. 21-29, 10.1016/j.still.2013.04.004
    View PDFView articleView in ScopusGoogle Scholar Marsch et al., 2016 P. Marsch,
    I.D. Silva, Ö. Bulakci, M. Tesanovic, S. Eddine, E. Ayoubi 5G radio access network
    architecture – design guidelines and key considerations IEEE Communications Magazine,
    54 (11) (2016), pp. 24-32, 10.1109/MCOM.2016.1600147CM View in ScopusGoogle Scholar
    Martínez et al., 2016 R. Martínez, J.Á. Pastor, B. Álvarez, A. Iborra A testbed
    to evaluate the fiware-based iot platform in the domain of precision agriculture
    Sensors (Switzerland), 16 (11) (2016), 10.3390/s16111979 Google Scholar Mäyrä
    et al., 2018 O. Mäyrä, M. Ruusunen, M. Jalli, L. Jauhiainen, K. Leiviskä Plant
    disease outbreak – prediction by advanced data analysis SNE Short Note, 28 (3)
    (2018), pp. 113-115, 10.11128/sne.28.sn.10431 Google Scholar Mazon-Olivo et al.,
    2018 B. Mazon-Olivo, D. Hernández-Rojas, J. Maza-Salinas, A. Pan Rules engine
    and complex event processor in the context of Internet of Things for precision
    agriculture Computers and Electronics in Agriculture, 154 (February) (2018), pp.
    347-360, 10.1016/j.compag.2018.09.013 View PDFView articleView in ScopusGoogle
    Scholar McBratney et al., 2003 A. McBratney, M. Mendonça Santos, B. Minasny On
    digital soil mapping Geoderma, 117 (1–2) (2003), pp. 3-52 Retrieved from http://linkinghub.elsevier.com/retrieve/pii/S0016706103002234
    View PDFView articleView in ScopusGoogle Scholar Meola, 2016 A. Meola Why IoT,
    big data & smart farming are the future of agriculture. Business Insider - Dec
    20, 2016 (2016) Retrieved from https://www.businessinsider.com/internet-of-things-smart-agriculture-2016-10?r=US&IR=T
    Google Scholar Midtiby et al., 2018 H.S. Midtiby, K.A. Steen, O. Green In row
    cultivation controlled by plant patterns Computers and Electronics in Agriculture,
    153 (July) (2018), pp. 62-68, 10.1016/j.compag.2018.07.037 View PDFView articleView
    in ScopusGoogle Scholar Miettinen et al., 2006 M. Miettinen, T. Oksanen, P. Suomi,
    A. Visala Fault diagnosis in agricultural machines ASABE International conference
    on automation technology for off-road equipment, ASABE, Bonn, Germany (2006),
    pp. 1-10 Retrieved from https://www.computoolable.com/AgF4.pdf Google Scholar
    Moon et al., 2018 A. Moon, J. Kim, J. Zhang, S. Woo Evaluating fi delity of lossy
    compression on spatiotemporal data from an IoT enabled smart farm Computers and
    Electronics in Agriculture, 154 (March) (2018), pp. 304-313, 10.1016/j.compag.2018.08.045
    View PDFView articleView in ScopusGoogle Scholar Mukherjee et al., 2018 A. Mukherjee,
    S. Misra, N.S. Raghuwanshi, S. Mitra Blind entity identification for agricultural
    IoT deployments Internet of Things Journal, 1–8 (2018), 10.1109/JIOT.2018.2879454
    Google Scholar Na and Isaac, 2016 A. Na, W. Isaac Developing a human-centric agricultural
    model in the IoT environment 2016 International Conference on Internet of Things
    and applications, IOTA 2016 (2016), pp. 292-297, 10.1109/IOTA.2016.7562740 View
    in ScopusGoogle Scholar Näsi et al., 2018 R. Näsi, N. Viljanen, J. Kaivosoja,
    K. Alhonoja, T. Hakala, L. Markelin, et al. Estimating biomass and nitrogen amount
    of barley and grass using UAV and aircraft based spectral and photogrammetric
    features Remote Sensing, 10 (7) (2018), p. 1082, 10.3390/rs10071082 1–32 View
    in ScopusGoogle Scholar Nielsen et al., 2017 S.K. Nielsen, L.J. Munkholm, M. Lamandé,
    M. Nørremark, N. Skou-Nielsen, G.T.C. Edwards, et al. Seed drill instrumentation
    for spatial coulter depth measurements Computers and Electronics in Agriculture,
    141 (2017), pp. 207-214 Google Scholar Okayasu et al., 2017 T. Okayasu, A.P. Hugroho,
    A. Sakai, D. Arita, T. Yoshinaga, R. Taniguchi, et al. Affordable field environmental
    monitoring and plant growth measurement system for smart agriculture Eleventh
    International conference on sensing technology (ICST) (2017), pp. 7-10 Google
    Scholar Oksanen et al., 2016 T. Oksanen, R. Linkolehto, I. Seilonen Adapting an
    industrial automation protocol to remote monitoring of mobile agricultural machinery:
    A combine harvester with IoT IFAC-PapersOnLine 49–16, Elsevier (2016), pp. 127-131
    View PDFView articleView in ScopusGoogle Scholar Oksanen et al., 2015 T. Oksanen,
    P. Piirainen, I. Seilonen Remote access of ISO 11783 process data by using OPC
    Unified Architecture technology Computers and Electronics in Agriculture, 117
    (2015), pp. 141-148, 10.1016/j.compag.2015.08.002 View PDFView articleView in
    ScopusGoogle Scholar O''Grady and O''Hare, 2017 M.J. O''Grady, G.M.P. O''Hare
    Modelling the smart farm Information Processing in Agriculture, 4 (3) (2017),
    pp. 179-187, 10.1016/j.inpa.2017.05.001 View PDFView articleView in ScopusGoogle
    Scholar Paraforos et al., 2016 D.S. Paraforos, V. Vassiliadis, D. Kortenbruck,
    K. Stamkopoulos, V. Ziogas, A.A. Sapounas, et al. A farm management information
    system using future internet Technologies IFAC-PapersOnLine, 49 (16) (2016), pp.
    324-329, 10.1016/j.ifacol.2016.10.060 View PDFView articleView in ScopusGoogle
    Scholar Peets et al., 2009 S. Peets, C.P. Gasparin, D.W.K. Blackburn, R.J. Godwin
    RFID tags for identifying and verifying agrochemicals in food traceability systems
    Precision Agriculture, 10 (5) (2009), pp. 382-394, 10.1007/s11119-009-9106-4 View
    in ScopusGoogle Scholar Peets et al., 2012 S. Peets, A.M. Mouazen, K. Blackburn,
    B. Kuang, J. Wiebensohn Methods and procedures for automatic collection and management
    of data acquired from on-the-go sensors with application to on-the-go soil sensors
    Computers and Electronics in Agriculture, 81 (2012), pp. 104-112, 10.1016/j.compag.2011.11.011
    View PDFView articleView in ScopusGoogle Scholar Pérez-Freire and Brillouet, 2015
    L. Pérez-Freire, L. Brillouet Smart farming and food safety Internet of Things
    applications - challenges for large scale implementations. AIOTI WG06 (2015) Retrieved
    from https://aioti.eu/wp-content/uploads/2017/03/AIOTIWG06Report2015-Farming-and-Food-Safety.pdf
    Google Scholar Pesonen et al., 2014 L.A. Pesonen, F.K. Teye, A.K. Ronkainen, M.O.
    Koistinen, J.J. Kaivosoja, P.F. Suomi, et al. Cropinfra - an Internet-based service
    infrastructure to support crop production in future farms Biosystems Engineering,
    120 (2014), pp. 92-101, 10.1016/j.biosystemseng.2013.09.005 View PDFView articleView
    in ScopusGoogle Scholar Pfeiffer and Blank, 2015 D. Pfeiffer, S. Blank Real-time
    operator performance analysis in agricultural equipment. Understanding unused
    potential and ways to improve from day to day 73rd International conference on
    agricultural engineering, LANDTECHNIK AgEng 2015 proceedings - innovations in
    agricultural engineering for efficient farming. Hannover, Germany (2015) Retrieved
    from https://www.researchgate.net/profile/Sebastian_Blank2/publication/283643214_Real-time_Operator_Performance_Analysis_in_Agricultural_Equipment/links/564c7d8e08aeab8ed5e9dcf4/Real-time-Operator-Performance-Analysis-in-Agricultural-Equipment.pdf
    Google Scholar Pham and Stack, 2018 X. Pham, M. Stack How data analytics is transforming
    agriculture Business Horizons, 61 (1) (2018), pp. 125-133, 10.1016/j.bushor.2017.09.011
    View PDFView articleView in ScopusGoogle Scholar Popović et al., 2017 T. Popović,
    N. Latinović, A. Pešić, Ž. Zečević, B. Krstajić, S. Djukanović Architecting an
    IoT-enabled platform for precision agriculture and ecological monitoring: A case
    study Computers and Electronics in Agriculture, 140 (2017), pp. 255-265, 10.1016/j.compag.2017.06.008
    View PDFView articleView in ScopusGoogle Scholar Ramundo et al., 2016 L. Ramundo,
    M. Taisch, S. Terzi State of the art of technology in the food sector value chain
    towards the IoT 2016 IEEE 2nd International forum on research and technologies
    for society and Industry leveraging a better tomorrow (RTSI), 1–6 (2016), 10.1109/RTSI.2016.7740612
    Google Scholar Ray, 2017 P.P. Ray Internet of Things for smart agriculture: Technologies,
    practices and future direction Journal of Ambient Intelligence and Smart Environments,
    9 (4) (2017), pp. 395-420, 10.3233/AIS-170440 View in ScopusGoogle Scholar Renard
    et al., 1991 K.G. Renard, G.R. Foster, G.A. Weesies, J.P. Porter Rusle: Revised
    universal soil loss equation Journal of Soil & Water Conservation, 46 (1) (1991),
    pp. 30-33 View in ScopusGoogle Scholar Reshma and Pillai, 2018 S.R.J. Reshma,
    A.S. Pillai Proceedings of the eighth International conference on soft computing
    and pattern recognition (SoCPaR 2016), 614(SoCPaR 2016) (2018), 10.1007/978-3-319-60618-7
    Google Scholar Rodriguez et al., 2018 M.A. Rodriguez, L. Cuenca, A. Ortiz FIWARE
    open source standard platform in smart farming - a review L.M. Camarinha-Matos,
    H. Afsarmanesh, Y. Rezgui (Eds.), Collaborative networks of cognitive systems
    19th IFIP WG 5.5 working conference on Virtual enterprises, PRO-VE 2018, Vol.
    534, Springer International Publishing, Cardiff, UK (2018), pp. 581-589, 10.1007/978-3-319-99127-6
    View in ScopusGoogle Scholar Ruiz-Garcia and Lunadei, 2011 L. Ruiz-Garcia, L.
    Lunadei The role of RFID in agriculture: Applications, limitations and challenges
    Computers and Electronics in Agriculture, 79 (1) (2011), pp. 42-50, 10.1016/j.compag.2011.08.010
    View PDFView articleView in ScopusGoogle Scholar Sabarina and Priya, 2015 K. Sabarina,
    N. Priya Lowering data dimensionality in big data for the benefit of precision
    agriculture Procedia Computer Science, 48 (C) (2015), pp. 548-554, 10.1016/j.procs.2015.04.134
    View PDFView articleView in ScopusGoogle Scholar Say et al., 2017 S.M. Say, M.
    Keskin, M. Sehri, Y.E. Sekerli Adoption of precision agriculture Technologies
    in developed and developing countries adoption of precision agriculture technologies
    A. Isman, S. Dündar (Eds.), International science and technology conference (ISTEC)
    (2017), pp. 41-49 Berlin, Germany. Retrieved from https://www.researchgate.net/publication/320908156_Adoption_of_Precision_Agriculture_Technologies_in_Developed_and_Developing_Countries
    Google Scholar SEGES, 2016 SEGES Præcisionsjordbrug i Danmark. Barriererapport:
    Identificering af udfordringer og forhold, der hæmmer udvikling, produktion og
    anvendelse af præcisionsjordbrugsteknikker i planteavlen (2016) Retrieved from
    file:///C:/Users/AgroIntelli AVH/Downloads/Barriärrapportpraecisionsjordbrug-i-danmark.pdf
    Google Scholar Serrano et al., 2015 M. Serrano, P. Barnaghi, F. Carrez, P. Cousin,
    O. Vermesan, P. Friess Internet of Things IoT semantic interoperability: Research
    challenges, best practices, recommendations and next steps (2015) Retrieved from
    http://www.eglobalmark.com/wp-content/uploads/2016/06/2015-03-IoT-Semantic-Interoperability-Research-Challenges-Best-Practices-Recommendations-and-Next-Steps.pdf
    Google Scholar Severino et al., 2018 G. Severino, G. D''Urso, M. Scarfato, G.
    Toraldo The IoT as a tool to combine the scheduling of the irrigation with the
    geostatistics of the soils Future Generation Computer Systems, 82 (2018), pp.
    268-273, 10.1016/j.future.2017.12.058 View PDFView articleView in ScopusGoogle
    Scholar Seyyedhasani and Dvorak, 2018 H. Seyyedhasani, J.S. Dvorak Dynamic rerouting
    of a fleet of vehicles in agricultural operations through a dynamic multiple depot
    vehicle routing problem representation Biosystems Engineering, 171 (2018), pp.
    63-77, 10.1016/j.biosystemseng.2018.04.003 View PDFView articleView in ScopusGoogle
    Scholar Seyyedhasani et al., 2019 H. Seyyedhasani, J.S. Dvorak, E. Roemmele Routing
    algorithm selection for field coverage planning based on field shape and fleet
    size Computers and Electronics in Agriculture, 156 (December 2018) (2019), pp.
    523-529, 10.1016/j.compag.2018.12.002 View PDFView articleView in ScopusGoogle
    Scholar Sinha et al., 2017 R.S. Sinha, Y. Wei, S.H. Hwang A survey on LPWA technology:
    LoRa and NB-IoT ICT Express, 3 (1) (2017), pp. 14-21, 10.1016/j.icte.2017.03.004
    View PDFView articleView in ScopusGoogle Scholar Sjolander et al., 2011 A.J. Sjolander,
    J.A. Thomasson, R. Sui, Y. Ge Wireless tracking of cotton modules. Part 2: Automatic
    machine identification and system testing Computers and Electronics in Agriculture,
    75 (1) (2011), pp. 34-43, 10.1016/j.compag.2010.09.015 View PDFView articleView
    in ScopusGoogle Scholar Skou-Nielsen et al., 2017 N. Skou-Nielsen, A. Villa-Henriksen,
    O. Green, G.T.C. Edwards Creating a statistically representative set of Danish
    agricultural field shapes to robustly test route planning algorithms Precision
    agriculture (ECPA) 2017, 8:2 (2017), pp. 615-619, 10.1017/S2040470017000188 Edinburgh
    View PDFView articleGoogle Scholar Sørensen and Bochtis, 2010 C.G. Sørensen, D.D.
    Bochtis Conceptual model of fleet management in agriculture Biosystems Engineering,
    105 (1) (2010), pp. 41-50 View PDFView articleView in ScopusGoogle Scholar Sørensen
    et al., 2010 C.G. Sørensen, S. Fountas, E. Nash, L. Pesonen, D. Bochtis, S.M.
    Pedersen, et al. Conceptual model of a future farm management information system
    Computers and Electronics in Agriculture, 72 (1) (2010), pp. 37-47, 10.1016/j.compag.2010.02.003
    View PDFView articleView in ScopusGoogle Scholar Sørensen et al., 2011 C.G. Sørensen,
    L. Pesonen, D.D. Bochtis, S.G. Vougioukas, P. Suomi Functional requirements for
    a future farm management information system Computers and Electronics in Agriculture,
    76 (2011), pp. 266-276, 10.1016/j.compag.2011.02.005 View PDFView articleView
    in ScopusGoogle Scholar Steen et al., 2012 K.A. Steen, A. Villa-Henriksen, O.R.
    Therkildsen, O. Green Automatic detection of animals in mowing operations using
    Thermal cameras Sensors, 12 (6) (2012), pp. 7587-7597, 10.3390/s120607587 View
    in ScopusGoogle Scholar Stewart et al., 2017 J. Stewart, R. Stewart, S. Kennedy
    Internet of Things - propagation modelling for precision agriculture applications
    Wireless telecommunications symposium (2017), 10.1109/WTS.2017.7943528 Google
    Scholar Stočes et al., 2016 M. Stočes, J. Vaněk, J. Masner, J. Pavlík Internet
    of Things (IoT) in agriculture -selected aspects AGRIS On-Line Papers in Economics
    and Informatics, 1 (1) (2016), pp. 83-88, 10.7160/aol.2016.080108 View in ScopusGoogle
    Scholar Suhonen et al., 2012 J. Suhonen, M. Kohvakka, V. Kaseva, T.D. Hämäläinen,
    M. Hännikäinen Communication protocols Low-power wireless sensor networks protocols,
    services and applications (1st ed.), Springer-Verlag, New York (2012), pp. 27-41,
    10.1007/978-1-4614-2173-3 Google Scholar Sundmaeker et al., 2016 H. Sundmaeker,
    C. Verdouw, S. Wolfert, L. Pérez Freire Internet of food and farm 2020 O. Vermesan,
    P. Friess (Eds.), Digitising the industry Internet of Things connecting the physical,
    digital and virtual worlds, Vol. 49, River Publishers, Gistrup, Denmark (2016),
    pp. 1689-1699, 10.1017/CBO9781107415324.004 Google Scholar Talavera et al., 2017
    J.M. Talavera, L.E. Tobón, J.A. Gómez, M.A. Culman, J.M. Aranda, D.T. Parra, et
    al. Review of IoT applications in agro-industrial and environmental fields Computers
    and Electronics in Agriculture, 142 (118) (2017), pp. 283-297, 10.1016/j.compag.2017.09.015
    View PDFView articleView in ScopusGoogle Scholar Tanaka, 2018 K. Tanaka Low delay
    data gathering method for rice cultivation management system IoT specialized outdoor
    communication procedure 2018 International conference on Information and computer
    technologies (ICICT), IEEE (2018), pp. 139-143, 10.1109/INFOCT.2018.8356857 View
    in ScopusGoogle Scholar Tan and Panda, 2010 Y.K. Tan, S.K. Panda Review of energy
    harvesting Technologies for sustainable wireless sensor network Y.K. Tan, W. Seah
    (Eds.), Sustainable wireless sensor networks, InTech, Rijeka, Croatia (2010),
    pp. 15-43, 10.5772/663 View in ScopusGoogle Scholar Temprilho et al., 2018 A.
    Temprilho, L. Nóbrega, P. Pedreiras, P. Gonçalves, S. Silva M2M communication
    stack for intelligent farming Global Internet of Things summit (GIoTS) (2018),
    10.1109/GIOTS.2018.8534560 Google Scholar Tilman et al., 2011 D. Tilman, C. Balzer,
    J. Hill, B.L. Befort Global food demand and the sustainable intensification of
    agriculture Proceedings of the national academy of sciences of the United States
    of America, Vol. 108 (2011), pp. 20260-20264, 10.1073/pnas.1116437108 View in
    ScopusGoogle Scholar Tuna and Gungor, 2016 G. Tuna, V.C. Gungor Energy harvesting
    and battery technologies for powering wireless sensor networks Industrial Wireless
    Sensor Networks, Elsevier Ltd (2016), 10.1016/B978-1-78242-230-3.00002-7 Google
    Scholar Tuna et al., 2017 G. Tuna, D.G. Kogias, V.C. Gungor, C. Gezer, E. Taşkın,
    E. Ayday A survey on information security threats and solutions for Machine to
    Machine (M2M) communications Journal of Parallel and Distributed Computing, 109
    (2017), pp. 142-154, 10.1016/j.jpdc.2017.05.021 View PDFView articleView in ScopusGoogle
    Scholar Tzounis et al., 2017 A. Tzounis, N. Katsoulas, T. Bartzanas, C. Kittas
    Internet of Things in agriculture, recent advances and future challenges Biosystems
    Engineering, 164 (2017), pp. 31-48, 10.1016/j.biosystemseng.2017.09.007 View PDFView
    articleView in ScopusGoogle Scholar Uddin et al., 2018 M.A. Uddin, A. Mansour,
    D. Le Jeune, M. Ayaz, el-H.M. Aggoune UAV-assisted dynamic clustering of wireless
    sensor networks for crop health monitoring Sensors, 18 (2) (2018), p. 555, 10.3390/s18020555
    View in ScopusGoogle Scholar Veer and Wiles, 2008 H. van der Veer, A. Wiles Achieving
    Technical interoperability - the ETSI approach ETSI white paper (2008) Retrieved
    from https://www.etsi.org/images/files/ETSIWhitePapers/IOP whitepaper Edition
    3 final.pdf Google Scholar Vellidis et al., 2008 G. Vellidis, M. Tucker, C. Perry,
    C. Kvien, C. Bednarz A real-time wireless smart sensor array for scheduling irrigation
    Computers and Electronics in Agriculture, 61 (1) (2008), pp. 44-50, 10.1016/j.compag.2007.05.009
    View PDFView articleView in ScopusGoogle Scholar Verdouw, 2016 C. Verdouw Internet
    of Things in agriculture CAB reviews: Perspectives in agriculture, veterinary
    science, Nutrition and Natural Resources, 11 (35) (2016), 10.1079/PAVSNNR201611035
    Google Scholar Verdouw et al., 2017 C. Verdouw, S. Wolfert, G. Beers, H. Sundmaeker,
    G. Chatzikostas IOF2020 : Fostering business and software ecosystems for large-scale
    uptake of IoT in food and farming The International tri-conference for precision
    agriculture in 2017 (2017), 10.5281/zenodo.1002903 Google Scholar Viljanen et
    al., 2018 N. Viljanen, E. Honkavaara, R. Näsi, T. Hakala, O. Niemeläinen, Kai
    A novel machine learning method for estimating biomass of grass swards using a
    photogrammetric canopy height model , images and vegetation indices captured by
    a drone Agriculture, 8 (5) (2018), p. 70, 10.3390/agriculture8050070 1–28 View
    in ScopusGoogle Scholar Villa-Henriksen et al., 2018 A. Villa-Henriksen, N. Skou-Nielsen,
    C.A.G. Sørensen, O. Green, G.T.C. Edwards, et al. Internet-based harvest fleet
    logistic optimisation P.W.G. Groot Koerkamp (Ed.), Proceedings of the European
    Agricultural Conference, 8-12 July, Wageningen, the Netherlands, Wageningen University
    and Research, Wageningen (2018), pp. 56-61, 10.18174/471679 Accessed 14 Jan 2020
    Google Scholar Vuran et al., 2018 M.C. Vuran, A. Salam, R. Wong, S. Irmak Internet
    of underground things in precision agriculture : Architecture and technology aspects
    Ad Hoc Networks, 81 (2018), pp. 160-173, 10.1016/j.adhoc.2018.07.017 View PDFView
    articleView in ScopusGoogle Scholar Wang et al., 2014 H.Z. Wang, G.W. Lin, J.Q.
    Wang, W.L. Gao, Y.F. Chen, Q.L. Duan Management of big data in the internet of
    Things in agriculture based on cloud computing Applied Mechanics and Materials,
    548–549 (2014), pp. 1438-1444, 10.4028/www.scientific.net/AMM.548-549.1438 View
    in ScopusGoogle Scholar Wolanin et al., 2019 A. Wolanin, G. Camps-valls, L. Gómez-chova,
    G. Mateo-garcía, C. Van Der Tol, Y. Zhang, et al. Remote Sensing of Environment
    Estimating crop primary productivity with Sentinel-2 and Landsat 8 using machine
    learning methods trained with radiative transfer simulations Remote Sensing of
    Environment, 225 (March) (2019), pp. 441-457, 10.1016/j.rse.2019.03.002 View PDFView
    articleView in ScopusGoogle Scholar Wolfert et al., 2017 S. Wolfert, L. Ge, C.
    Verdouw, M.J. Bogaardt Big data in smart farming – a review Agricultural Systems,
    153 (2017), pp. 69-80, 10.1016/j.agsy.2017.01.023 View PDFView articleView in
    ScopusGoogle Scholar World Bank, 2017 World Bank ICT in agriculture: Connecting
    smallholders to knowledge, networks, and institutions (updated ed) The World Bank
    Group, Washington DC (2017), 10.1596/978-1-4648-1002-2 Google Scholar Xian, 2017
    K. Xian Internet of Things online monitoring system based on cloud computing International
    Journal of Online and Biomedical Engineering, 13 (9) (2017), pp. 123-131, 10.3991/ijoe.v13i09.7591
    View in ScopusGoogle Scholar Yan et al., 2018 M. Yan, P. Liu, R. Zhao, L. Liu,
    W. Chen, X. Yu, et al. Field microclimate monitoring system based on wireless
    sensor network Journal of Intelligent and Fuzzy Systems, 35 (2) (2018), pp. 1325-1337,
    10.3233/JIFS-169676 View in ScopusGoogle Scholar Zhai, 2017 A.F. Zhai Optimization
    of agricultural production control based on data processing Technology of agricultural
    Internet of Things Italian Journal of Pure and Applied Mathematics, 38 (2017),
    pp. 243-252 View in ScopusGoogle Scholar Zhang et al., 2017 A. Zhang, I. Baker,
    E. Jakku, R. Llewellyn Accelerating precision agriculture to decision agriculture
    : The needs and drivers for the present and future of digital agriculture in Australia
    A cross-industry producer survey for the Rural R&D for Profit ‘Precision to Decision’
    (P2D) project, EP175936 (2017) Google Scholar Zhao, Lin et al., 2018 W. Zhao,
    S. Lin, J. Han, R. Xu, L. Hou Design and implementation of smart irrigation system
    based on LoRa 2017 IEEE globecom workshops (GC wkshps), IEEE, Singapore, Singapore
    (2018), pp. 1-6, 10.1109/GLOCOMW.2017.8269115 Google Scholar Zhao, Lucani et al.,
    2018 X. Zhao, D.E. Lucani, X. Shen, H. Wang Reliable IoT Storage : Minimizing
    bandwidth use in storage without newcomer nodes IEEE Communications Letters, 22
    (7) (2018), pp. 1462-1465, 10.1109/LCOMM.2018.2831669 View in ScopusGoogle Scholar
    Zhou et al., 2014 K. Zhou, A. Leck Jensen, C.G. Sørensen, P. Busato, D.D. Bothtis
    Agricultural operations planning in fields with multiple obstacle areas Computers
    and Electronics in Agriculture, 109 (2014), pp. 12-22, 10.1016/j.compag.2014.08.013
    View PDFView articleView in ScopusGoogle Scholar Zou and Quan, 2017 Y. Zou, L.
    Quan A new service-oriented grid-based method for AIoT application and implementation
    Modern Physics Letters B, 31 (19–21) (2017), p. 1740064, 10.1142/S0217984917400644
    View in ScopusGoogle Scholar Zude-Sasse et al., 2016 M. Zude-Sasse, S. Fountas,
    T.A. Gemtos, N. Abu-Khalaf Applications of precision agriculture in horticultural
    crops European Journal of Horticultural Science, 81 (2) (2016), pp. 78-90, 10.17660/eJHS.2016/81.2.2
    View in ScopusGoogle Scholar Cited by (220) Design of an IoT ultrasonic-vision
    based system for automatic fruit sorting utilizing size and color 2024, Internet
    of Things (Netherlands) Show abstract Antecedents of smart farming adoption to
    mitigate the digital divide – extended innovation diffusion model 2023, Technology
    in Society Show abstract Advancements in smart farming: A comprehensive review
    of IoT, wireless communication, sensors, and hardware for agricultural automation
    2023, Sensors and Actuators A: Physical Show abstract Review of artificial intelligence
    and internet of things technologies in land and water management research during
    1991–2021: A bibliometric analysis 2023, Engineering Applications of Artificial
    Intelligence Show abstract Effects of laser scanner quality and tractor speed
    to characterise apple tree canopies 2023, Smart Agricultural Technology Show abstract
    A federated authentication and authorization approach for IoT farming 2023, Internet
    of Things (Netherlands) Show abstract View all citing articles on Scopus © 2020
    The Authors. Published by Elsevier Ltd on behalf of IAgrE. Recommended articles
    Route planning evaluation of a prototype optimised infield route planner for neutral
    material flow agricultural operations Biosystems Engineering, Volume 153, 2017,
    pp. 149-157 Gareth T.C. Edwards, …, Ole Green View PDF Architecting user-centric
    internet of things for smart agriculture Sustainable Computing: Informatics and
    Systems, Volume 23, 2019, pp. 88-102 Akash Sinha, …, Prabhat Kumar View PDF Effect
    of velocity ratio on performance characteristics of an active-passive combination
    tillage implement Biosystems Engineering, Volume 191, 2020, pp. 1-12 Ganesh Upadhyay,
    Hifjur Raheman View PDF Show 3 more articles Article Metrics Citations Policy
    Citations: 5 Citation Indexes: 205 Captures Readers: 835 Mentions News Mentions:
    22 Social Media Shares, Likes & Comments: 3 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Biosystems Engineering
  limitations: '>'
  pdf_link: null
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Things in arable farming: Implementation, applications, challenges
    and potential'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s18061731
  analysis: '>'
  authors:
  - Francisco-Javier Ferrández-Pastor
  - Juan Manuel García‐Chamizo
  - Mario Nieto-Hidalgo
  - José Mora-Martínez
  citation_count: 127
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nPrecision Agriculture Design Method Using\na Distributed\
    \ Computing Architecture on Internet\nof Things Context †\nFrancisco Javier Ferrández-Pastor\
    \ * ID , Juan Manuel García-Chamizo, Mario Nieto-Hidalgo ID\nand José Mora-Martínez\n\
    Department of Computer Technology, University of Alicante, P.O. Box 99, E-03080\
    \ Alicante, Spain;\njuanma@dtic.ua.es (J.M.G.-C.); mnieto@dtic.ua.es (M.N.-H.);\
    \ jose.mora.martinez.es@gmail.com (J.M.-M.)\n* Correspondence: fjferran@dtic.ua.es;\
    \ Tel.: +34-65903400 (ext. 3002)\n† This paper is an expanded version of “User-Centered\
    \ Design of Agriculture Automation Systems Using\nInternet of Things Paradigm”\
    \ published in Proceedings of the UCAmI 2017: Ubiquitous Computing and\nAmbient\
    \ Intelligence, Philadelphia, PA, USA, 7–10 November 2017.\nReceived: 14 April\
    \ 2018; Accepted: 25 May 2018; Published: 28 May 2018\n\x01\x02\x03\x01\x04\x05\
    \x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: The Internet of Things (IoT)\
    \ has opened productive ways to cultivate soil with the use\nof low-cost hardware\
    \ (sensors/actuators) and communication (Internet) technologies. Remote\nequipment\
    \ and crop monitoring, predictive analytic, weather forecasting for crops or smart\
    \ logistics\nand warehousing are some examples of these new opportunities.\nNevertheless,\
    \ farmers are\nagriculture experts but, usually, do not have experience in IoT\
    \ applications. Users who use IoT\napplications must participate in its design,\
    \ improving the integration and use. In this work, different\nindustrial agricultural\
    \ facilities are analysed with farmers and growers to design new functionalities\n\
    based on IoT paradigms deployment. User-centred design model is used to obtain\
    \ knowledge and\nexperience in the process of introducing technology in agricultural\
    \ applications. Internet of things\nparadigms are used as resources to facilitate\
    \ the decision making. IoT architecture, operating rules\nand smart processes\
    \ are implemented using a distributed model based on edge and fog computing\n\
    paradigms. A communication architecture is proposed using these technologies.\
    \ The aim is to help\nfarmers to develop smart systems both, in current and new\
    \ facilities. Different decision trees to\nautomate the installation, designed\
    \ by the farmer, can be easily deployed using the method proposed\nin this document.\n\
    Keywords: Internet of Things; precision agriculture; fog and edge computing\n\
    1. Introduction\nPrecision Agriculture (PA) is a whole-farm management approach\
    \ using information technology,\nremote sensing and proximal data gathering. These\
    \ technologies have the goal of optimising returns\non inputs while potentially\
    \ reducing environmental impacts. Farmers and agronomists have already\nbegun\
    \ employing technologies in order to improve the efﬁciency of their work. Sensors\
    \ placed\nin greenhouses allow farmers to obtain detailed data on real-time as\
    \ variables such as soil and\nambient temperature, irrigation water and soil conductivity,\
    \ soil and irrigation water PH, nutrient\ncomposition data, irrigation water properties,\
    \ etc. These data can be transmitted and analysed using\ncommunication technologies\
    \ and Artiﬁcial Intelligence (AI) paradigms could be applied. Farmers use\ntheir\
    \ smartphones to remotely monitor their crops and equipments and to run some statistical\
    \ data.\nAll of these techniques help make up PA. Nowadays, the farmers are using\
    \ resources developed by\ninformation and communication technologies. These ﬁrst\
    \ resources are easy to use but they are general\nSensors 2018, 18, 1731; doi:10.3390/s18061731\n\
    www.mdpi.com/journal/sensors\nSensors 2018, 18, 1731\n2 of 21\npurpose and, therefore,\
    \ not adapted to the speciﬁc needs of each farmer. In this work an user-centred\n\
    method is proposed to design intelligent and adapted services where each farmer\
    \ decides its own\ninstallation using edge and fog paradigms (distributed computing)\
    \ on Internet of Things technologies\n(Figure 1). This method is designed on different\
    \ use cases and tested in an automated greenhouse as\nan example of utility. The\
    \ work is an expanded version presented in [1]. This paper is organized as\nfollows:\
    \ Section 2 reviews precision agriculture scenarios, how to use centred design\
    \ methodologies,\nIoT technologies and their deployment, the capabilities and\
    \ potential of edge and fog computing\nparadigms in these scenarios. Different\
    \ greenhouses are analysed and farmers are consulted. Section 3\nproposes a method\
    \ to deploy distributed IoT architecture using edge and fog nodes that offer a\
    \ set\nof new resources that can be used in any type of installation which facilitates\
    \ the involvement of\nthe farmer. In Section 4, experiments including services\
    \ on edge and fog nodes, connected by IoT\ncommunication protocols, are performed.\
    \ Finally, Section 5 provides conclusions and future works.\nFigure 1. Agricultural\
    \ System.\n2. Related Works\nAlthough more complex deﬁnitions exist, the simple\
    \ description of the PA is a way to “apply the\nright treatment in the right place\
    \ at the right time” [2].\nPrecision agriculture comprises a set\nof technologies\
    \ that combine sensors, information systems, enhanced machinery and informed\n\
    management to optimize production by accounting for variability and uncertainties\
    \ within agricultural\nsystems. It is a farming management concept based upon\
    \ observing, measuring and responding to\ninter and intra-ﬁeld variability in\
    \ crops [3]. Methods and technologies to decide how, where and when\nto use sensors\
    \ and machinery should involve all the main actors: that is, farmers and information\n\
    and communication technicians. User-centred methods and IoT communication technologies\
    \ applied\non precision agriculture are revised in this section. Finally, different\
    \ greenhouses are analysed and\nfarmers are consulted.\n2.1. User-Centred Design\
    \ Models\nIn PA context, User-Centred Design (UCD) describe a design process where\
    \ farmers inﬂuence the\nprocess of how the design takes shape. There are several\
    \ ways in which the user (agricultural specialist)\ncan be involved in the process.\
    \ This term describes a set of methods to create models on which\ndesign adapted\
    \ solutions. The user-centred design process works against subjective assumptions\n\
    about user behaviour. It requires proof that the design decisions are effective.\
    \ If user-centred design is\nproperly done, applications becomes an outcome of\
    \ actively engaging users. Therefore, any design\ndecisions that were made by\
    \ observing and listening to them will not be based on personal preferences.\n\
    User experience (UX) is one of the many focuses of UCD. It includes the user’s\
    \ entire experience with\nthe product, including physical and emotional reactions.\
    \ UCD is objective and often relies on data\nSensors 2018, 18, 1731\n3 of 21\n\
    to support design decisions [4]. According to [5], user centred design is a development\
    \ method that\nguarantees that product, software or web site will be easy to use.\
    \ The International Usability Standard\n(ISO 13407) [6], speciﬁes the principles\
    \ that underlie user centred design:\n•\nRequirements gathering, understanding\
    \ and specifying the context of use\n•\nRequirements speciﬁcation, specifying\
    \ the user and organisational requirements\n•\nDesign, producing designs and prototypes\n\
    •\nEvaluation, carrying out user-based assessment of the site\nThe design is based\
    \ upon an explicit understanding of users, tasks and environments. Users are\n\
    involved throughout design and development. The process is iterative. The design\
    \ is driven and\nreﬁned by user-centred evaluation. The design addresses the whole\
    \ user experience. The design team\nincludes multidisciplinary skills and perspectives.\n\
    2.2. Internet of Things: Architectures and Protocols\nIot is developed using architectures\
    \ based on layers capable of connecting a huge number of\ndevices with each other\
    \ and with the established services. The basic model of IoT has a 3 layer\narchitecture\
    \ which are of Perception, Network and Application Layers. IoT faces several challenges,\n\
    especially in the ﬁeld of privacy and security, so to overcome these issues new\
    \ standard architectures\nneed to be more focused on many essential factors like\
    \ Quality of Services (QoS), data integrity,\nsustainability, conﬁdentiality,\
    \ etc. The IAB (Internet Architecture Board) has published the RFC\n7452 document:\
    \ Architectural Considerations in Smart Object Networking. This document offers\n\
    guidance to engineers designing Internet-connected smart objects. A Request for\
    \ Comments (RFC),\nin the context of Internet governance, is a type of publication\
    \ from the Internet Engineering Task Force\n(IETF) and the Internet Society (ISOC),\
    \ the principal technical development and standards-setting\nbodies for the Internet.\n\
    Table 1 illustrates different works that apply the layer model in the\nIoT architecture.\n\
    Table 1. IoT architecture: Layers.\nLayers Proposed\nCharacteristics\n3\nPerception,\
    \ Network, Application [7,8]\n4\nThings, Edge, Network, Application [9]\n5\nBusiness,\
    \ Application, Service, Object abstration, Objects [10]\nIoT needs protocols adapted\
    \ to the new requirements. Traditional protocols are extended and\nnew protocols\
    \ are proposed offering different options on different contexts. IoT has now a\
    \ wide\nrange of applications. A smart devices can have wired or wireless connection.\
    \ As far as the wireless\nIoT is the main concern, many different wireless communication\
    \ technologies and protocols can be\nused to connect the smart device such as\
    \ Internet Protocol Version 6 (IPv6), over Low power Wireless\nPersonal Area Networks\
    \ (6LoWPAN), ZigBee, Bluetooth Low Energy (BLE), Z-Wave and Near Field\nCommunication\
    \ (NFC). They are short range standard network protocols, while SigFox and Cellular\n\
    are Low Power Wide Area Network (LPWAN).standard protocols. In [11] a review and\
    \ comparison of\ndifferent communication protocols in IoT is realised. This comparison\
    \ aims at presenting guidelines\nfor the researchers to be able to select the\
    \ right protocol for different applications. Table 2 illustrates\ndifferent protocols\
    \ used in the architecture layers.\nSensors 2018, 18, 1731\n4 of 21\nTable 2.\
    \ IoT protocols.\nLayer\nProtocols\nSession/Application\nMQTT, CoAP, AMQT, HTTP,\
    \ SOAP, ...\nNetwork\n6LowPAN, RPL, CORPL, IPSec, TCP/UDP, DTLS\nPerception/Things\n\
    WiFi, Bluetooth Low Energy, Z-Wave, ZigBee, LoraWan, IEEE 802.15.4, LTE, ...\n\
    Choosing the most appropriate protocol depends on several facts of which most\
    \ important are:\nenvironmental conditions, network characteristics, the amount\
    \ of data to be transferred, security levels\nand quality of service requests\
    \ [12]. CoAP network is primarily a one-to-one protocol for transferring\nstate\
    \ information between client and server while MQTT is a many-to-many communication\n\
    protocol for exchanging messages between multiple clients. CoAP runs over UDP\
    \ which means\nthat communication overhead is signiﬁcantly reduced. If constrained\
    \ communication and battery\nconsumption is not an issue, RESTful services can\
    \ be easily implemented and interact with the Internet\nusing the worldwide HTTP\
    \ [13]. If the targeted ﬁnal applications require massive updates of the same\n\
    value, MQTT protocol is more suitable. In this work different protocols (MQTT,\
    \ HTTP, Bluetooth, WiFi,\nLTE, ...) can be used to develop proposed architecture.\n\
    2.3. Internet of Things Technologies Applied on PA Scenarios\nAdvance in electronics,\
    \ computing and telecommunications are allowing the development of\nnew devices\
    \ (sensors, actuators and computing nodes) with wireless communication capabilities,\n\
    installed at any location, smaller, energy efﬁcient, autonomous, more powerful\
    \ and low cost [14–18].\nIoT works using user-driven service modeling is proposed\
    \ in [19]. Low-cost IoT devices that need\nto gather and transmit sensor data\
    \ and receive remote commands is shown in [20–22]. IoT uses the\nconnection between\
    \ devices to improve their efﬁciency and user experience, being the communication\n\
    one of the main elements for a proper IoT network. A review of the most common\
    \ wired and wireless\ncommunication protocols, discussion of their characteristics,\
    \ advantages and disadvantages as well as\na comparison study to choose the best\
    \ bidirectional sensor network composed by low power devices is\nrealised in [23].\
    \ Previous works show the degree of development of IoT technology, which has also\n\
    been experienced in precision agriculture in recent years.\nIoT technologies are\
    \ proposed in PA scenarios. In [24] this paradigm is analysed as a solution in\n\
    precision farming. IoT Smart farming application include farm parameters tracking,\
    \ monitoring, ﬁeld\nobservation and storage monitoring. The work Internet of Things\
    \ Platform for Smart Farming [25]\npresents a platform based on IoT technologies\
    \ that can automate the collection of environmental, soil,\nfertilisation, and\
    \ irrigation data; automatically correlate such data and ﬁlter-out invalid data\
    \ from\nthe perspective of assessing crop performance; and compute crop forecasts\
    \ and personalised crop\nrecommendations for any particular farm. This platform\
    \ (SmartFarmNet) can integrate virtually any\nIoT device, including commercially\
    \ available sensors, cameras, weather stations, etc., and store their\ndata in\
    \ the cloud for performance analysis and recommendations. An evaluation of the\
    \ SmartFarmNet\nplatform and the experiences and lessons learnt in developing\
    \ this system concludes the paper.\nSmartFarmNet is the ﬁrst and currently largest\
    \ system in the world (in terms of the number of\nsensors attached, crops assessed,\
    \ and users it supports) that provides crop performance analysis\nand recommendations.\n\
    In [9] a greenhouse with hydroponic crop production was designed, developed and\
    \ tested using\nUbiquitous Sensor Network monitoring and control on Internet of\
    \ Things paradigm. The experimental\nresults showed that the Internet technologies\
    \ and Smart Object Communication Patterns can be\ncombined to encourage development\
    \ of Precision Agriculture. They demonstrated added beneﬁts\n(cost, energy, smart\
    \ developing, acceptance by agricultural specialists) when a project is launched.\n\
    Other related work is shown in [26] with Zig Bee technology: Artiﬁcial intelligence\
    \ and decision\nsupport approaches have been developed. This work develop technology\
    \ for real-time monitoring\nSensors 2018, 18, 1731\n5 of 21\nof citrus soil moisture\
    \ and nutrients and the research on the integration of fertilization and irrigation\n\
    decision support system. The results showed that the system could help the grower\
    \ to scientiﬁcally\nfertilize or irrigate, improve the precision operation level\
    \ of citrus production, reduce the cost and\nreduce the pollution caused by chemical\
    \ fertilizer. A review into the state-of-the-art of Big Data\napplications in\
    \ Smart Farming is performed in [27]. Malche et al. [28] proposed a prototype\
    \ IoT system\nfor water level monitoring which can be implemented in future smart\
    \ villages in India. Manufacturers\nof the agricultural sector highlights the\
    \ importance of IoT in [29–32]. PA is effectively a suite of\nmethods, approaches\
    \ and instrumentation that farmers should examine in detail to decide which is\n\
    the most suitable for their business.\n2.4. Internet of Things, Cloud and Machine\
    \ Learning Evolution: Edge and Fog Computing Paradigms\nInternet of Things (IoT)\
    \ aims to bring every object (e.g. smart cameras, environmental sensors,\ncontrol\
    \ appliances, machine learning analysis) on line, hence generating massive amounts\
    \ of data that\ncan overwhelm storage systems and data analytic applications.\
    \ Cloud computing offers services at\nthe infrastructure level that can scale\
    \ to IoT storage and processing requirements. However, there are\napplications\
    \ such as sensor monitoring, control and analysis response that require low latency\
    \ therefore,\ndelay caused by transferring data to the cloud and then back to\
    \ the application can seriously impact\ntheir performances. To overcome this limitation,\
    \ Fog and Edge computing paradigms have been\nproposed, where cloud services are\
    \ extended to the edge of the network to decrease the latency and\nnetwork congestion\
    \ [33]. Both fog computing and edge computing involve pushing intelligence and\n\
    processing capabilities down closer to where the data originates from pumps, motors,\
    \ sensors, relays,\netc. The key difference between the two architectures is exactly\
    \ where that intelligence and computing\npower is placed:\n•\nFog computing pushes\
    \ intelligence down to the local area network level, processing data in a fog\n\
    node or IoT gateway\n•\nEdge computing pushes the intelligence, processing power\
    \ and communication capabilities of an\nedge gateway or appliance directly into\
    \ devices like programmable automation controllers (PACs)\nWith IoT implementation\
    \ now becoming more widespread, devices will generate a lot of data at\nthe end\
    \ of the network and many applications will be deployed at the edge to process\
    \ the information.\nCisco Systems predicts that an estimated 50 billion devices\
    \ will connect to the Internet by 2020 [34–36].\nSome of the applications they\
    \ run might require very short response times, some might involve private\ndata,\
    \ and some might produce huge quantities of data. Cloud computing cannot support\
    \ these IoT\napplications. Edge and Fog computing paradigms, on the other hand,\
    \ can do so and will promote\nmany new IoT applications.\nThe work done in [37]\
    \ concludes that the wireless sensor and actuator networks based on Edge\ncomputing\
    \ are experiencing fast development and opportunities in the post-Cloud era, and\
    \ are used\nin more and more applications. In [38] a Fog Computing Based on radio\
    \ access networks is proposed\nfor smart-cities services.\n2.5. Automated Technologies\
    \ in Greenhouses\nDifferent greenhouses in the south east of Spain have been visited\
    \ to analyse the type of installation\nand to ask expert users. The greenhouse\
    \ with the highest level of automation showed a complete\nnumber of sensors and\
    \ actuators; however, not all the sensors could be related. There are two large\n\
    subsystems in self-assembled greenhouses that are not interoperable. These subsystems\
    \ install different\ntypes of control and technologies:\n•\nIrrigation and nutrition\n\
    •\nAir conditioning and ventilation.\nSensors 2018, 18, 1731\n6 of 21\nIn these\
    \ facilities, an ambient temperature sensor of the air conditioning system is\
    \ not related to\nan irrigation water temperature sensor of the irrigation system.\
    \ Figure 2 shows different automated\ngreenhouses where main subsystems are listed.\n\
    Figure 2. Automated greenhouses: main subsystems in current facilities.\n3. User\
    \ Centred and Computing Method Model: Distributed Computing Architecture Based\
    \ on\nEdge and Fog Nodes\nThe current agricultural facilities are divided in subsystems\
    \ (irrigation, light, climate, soil, crop\nand energy) that are not interconnected.\
    \ Industrial logic programmable controllers and specialised\nsensors give basic\
    \ automation services in each subsystem. Internet and electronic devices (smartphones)\n\
    provide new functionalities based on information access, control and monitoring.\
    \ Human interfaces\non smartphones connected to web servers are examples of new\
    \ services developed over the past years.\nAgricultural technician and farmers\
    \ have knowledge that can be converted on expert rules for device\ncontrol. These\
    \ rules are programmed and implemented on actual programmable devices; however,\n\
    they are static rules which means that do not evolve when new conditions occur,\
    \ neither do they\nadapt to the singularities of each installation. The farmer\
    \ has to decide how to set the rules: what pH\nthe irrigation water must have,\
    \ how much water should be programmed in irrigation process, etc.\nAlso, each\
    \ rule only has effects in a subsystem (irrigation, climate), there is no interoperability.\n\
    Considering this context, new facilities design and development method are proposed\
    \ in this\nwork. The aim is that the farmer participates in the automated activities\
    \ and that the subsystems\nbecome interoperable. A method that implement automatic\
    \ rules and automate the decision making\nconsidering the behaviour of the installation\
    \ itself are also proposed. The phases of the proposed\nmodel are shown in Figure\
    \ 3.\n•\nAnalysis: two kind of users are identiﬁed in this phase (agriculture\
    \ user expert and ICT technician).\nExpert users in agriculture are interviewed\
    \ to deﬁne main processes to control. All these issues are\nrelated with ICT expert\
    \ in a participatory design. The results of this ﬁrst approach are the things\n\
    required to design services and control. In this phase an user-centred methodology\
    \ captures the\nfarmer requirements.\nSensors 2018, 18, 1731\n7 of 21\n•\nDesign:\
    \ the model is based on an architecture with three levels: edge, fog and cloud\
    \ services.\nIn this phase an adapted architecture using these levels is designed.\
    \ The adapted architecture is\nshown in Figure 4.\n•\nIntegration and data analysis:\
    \ Installation and Integration subsystems are developed in this phase.\nData analysis\
    \ is proposed to design machine learning services based on expert rules with farmer.\n\
    •\nStart up, measure and feedback: Test and feedback are launched.\nThe ﬁrst expert\
    \ rules\nare integrated with farmer supervision.\nNew rules are designed with\
    \ feedback processes.\nAutomatic and adapted rules are developed using artiﬁcial\
    \ intelligence systems with machine\nlearning platforms.\nFigure 3. User centred\
    \ model based on design and integration of edge and fog communication levels.\n\
    Cloud services and machine learning processes are integrated using this method.\n\
    Figure 4. Architecture: communication levels with different functionality.\nSensors\
    \ 2018, 18, 1731\n8 of 21\n3.1. User-Centred Analysis and Design\nThere are two\
    \ cases treated:\n•\nAgricultural installation with some automated facilities\
    \ already installed\n•\nNew agricultural installation\nThe method is the same\
    \ for both. Expert users in agriculture are interviewed to deﬁne new\nprocesses\
    \ to control. In this ﬁrst approach, the things (objects) required, their relationships\
    \ and the\npotential services are detected. Once objects and services have been\
    \ detected, they must be related\nto the necessary communication and control technologies\
    \ (IoT protocols). Human Interfacing are\nadjusted. Expert rules and intelligent\
    \ services are analysed (Edge and Fog computing proposal). Finally,\nthe installation,\
    \ maintenance and operation methods are designed. All this is designed between\
    \ user\nagricultural technician and information technologies expert.\nThe results\
    \ of this ﬁrst approach are the things required to design services and control.\
    \ A ﬁrst set\nof sensors, actuators, variables, processes and controllers are\
    \ designed considering production facility.\nThis set of objects will be considers\
    \ like things in the next stage.\nIn this description, a thing is formed by an\
    \ object/entity and a context with data associated.\nEach thing has a n-tuple\
    \ data structure (ID, time, date, location, relations, state) where ID, data,\n\
    location, relations with other things and states are deﬁned. Table 3 represents\
    \ different things.\nExpert users design control rules using the things deﬁned.\
    \ These control rules are part of control\nprocesses (climate, soil, irrigation,\
    \ crop, energy or image) that are distributed in different embedded\nsystems connected\
    \ to the network (intranet/internet). Things are a virtual representation of all\n\
    available resources that can be deployed in the different subsystems of the installation.\n\
    At this level all objects/things are recognized by designers. Basic control algorithms\
    \ of all\nsubsystems are designed.\nTable 3. Things context designed in smart\
    \ control processes.\nObject/Thing\nContext\nSensori\n(ID, time, date, location,\
    \ relations, state)\nActuatori\n(ID, time, date, location, relations, state)\n\
    Variablei\n(ID, time, date, location, relations, state)\nProcessi\n(ID, time,\
    \ date, location, relations, state)\nControlleri\n(ID, time, date, location, relations,\
    \ state)\n3.2. Integration: Architecture Development\nIn the previous phase objects\
    \ and their relationship with basic algorithms has been designed.\nAn architecture\
    \ adapted to the facility available is developed in this phase. Requirements are:\n\
    1.\nInterconnection and data access of all subsystems data\n2.\nFacilities and\
    \ resources to implement expert rules\n3.\nConﬁguration, operation and modiﬁcation\
    \ processes\nIoT and AI paradigms provide resources to propose an innovative architecture\
    \ that can be used in\nnew smart precision agriculture services. Edge computing\
    \ used on control devices and fog computing\nnodes installed on local network\
    \ provide powerful technologies to implement conﬁguration, operation\nand improvement\
    \ processes.\nIoT protocols provide resources to capture and communique all subsystems\
    \ data. Each subsystem\nis composed by objects/things (sensor/actuator) that can\
    \ be connected and processed using nodes on\nsensor networks with IoT protocols.\
    \ The requirements established for PA scenarios are:\n•\nStandard and interoperable\
    \ communication protocols to develop open and reusable applications.\nSensors\
    \ 2018, 18, 1731\n9 of 21\n•\nLow-power consumption of all devices installed improve\
    \ the establishment and development.\n•\nEasy access and maintenance. Users are\
    \ not specialized in information technologies. It is important\nto improve its\
    \ acceptability.\n•\nSupport the integration of new smart modules (modularity\
    \ and scalability software and hardware).\n•\nNon-proprietary hardware-software\
    \ to reduce dependencies.\n•\nLow cost devices selection increases the level of\
    \ penetration.\nIoT protocols are designed to work on communication scenarios\
    \ and requirements established.\nThey are optimised for control and two-way open\
    \ communication channels. In these works [39–41]\nMessage Queuing Telemetry Transport\
    \ (MQTT) protocol is proposed as communication paradigm\nbetween sensors, actuators,\
    \ communication nodes, devices and subsystems. Some of the features that\nmakes\
    \ it especially suitable for this project are:\n•\nMQTT is a publish-subscribe\
    \ messaging protocol developed for resource-constrained devices [42],\na model\
    \ already in use by enterprises worldwide, and can work with legacy systems.\n\
    •\nAll messages have a topic path composed of words separated by slashes. A common\
    \ form is\n/place/device-type/device-id/measurement-type/status. The subscribers\
    \ may use wild-cards to\nsubscribe to all measurements coming from a speciﬁc class\
    \ of device.\n•\nThe bandwidth requirements are extremely low, and the nature\
    \ of the protocol makes it\nvery energy-efﬁcient.\n•\nThe programming interface\
    \ is very simple, and the client memory footprint is small, making it\nespecially\
    \ suitable for embedded devices.\n•\nThree Quality of Service (QoS) levels provide\
    \ reliable operations [43].\nUbiquitous networks allow an n-to-m nodes communication\
    \ model. Any node is able to query\nand be queried by other nodes. In addition,\
    \ any node may play the role of a base station (skin node)\ncapable of transmitting\
    \ its information to remote processing places using a gateway device. USN local\n\
    nodes can use and process local data, with a gateway these nodes have a global\
    \ accessibility and\nthey offer extended services on an IoT scenario.\nLocal and\
    \ global access over the same node\n(sensor/device/actuator) has different possibilities\
    \ and beneﬁts. Whereas a local data processing\nis necessary in basic process\
    \ control (security, system start-stop, etc.), global processing (analytic)\n\
    can be used in pattern detection and information generation. In this sense, the\
    \ proposed platform\nuses both technologies combined: different USN over a local\
    \ network area (intranet) connected to\ncloud-IoT services (internet). A computing\
    \ layer in local area, called edge computing, will serve as\ninterface between\
    \ control processes and cloud-services. This layer will be able to process data\
    \ before\ncommunicating to cloud.\n3.3. Data Analysis: Edge and Fog Computing\
    \ Conﬁguration\nThe development of edge and fog computing can be understood in\
    \ three phases:\n•\nConnection: Numerous heterogeneous, real time connections\
    \ between terminals and devices\nwill serve edge computing, as will automatic\
    \ network deployment and operation. Additionally,\nsecurity, reliability, and\
    \ interoperability of connections should be guaranteed. An application of\nthis\
    \ phase is remote automatic soil parameters and ambient conditions data reading\n\
    •\nData treatment on edge computing devices: In this phase, data analysis and\
    \ automatic services\ndevelop new capabilities that are implemented on the new\
    \ edge nodes. Applications of this\nphase can be data ﬁltering, predictive calculation\
    \ of climatic data, classiﬁcation services or\ndetection events\n•\nServices on\
    \ fog computing nodes: Enabled by technologies such as AI and IoT communication\n\
    protocols. Fog computing nodes carries out smart analysis and computing, as well\
    \ as implementing\ndynamic, real-time self-optimization, and executing policy\
    \ adjustments. Applications of this phase\nare prediction of water consumption,\
    \ smart detection or unattended production\nSensors 2018, 18, 1731\n10 of 21\n\
    Figure 5 shows the architecture implemented using edge and fog nodes. When automated\n\
    subsystems are already installed it is necessary to interleaved embedded devices\
    \ (edge-nodes) between\ncontrollers and sensors/actuators. This devices maintain\
    \ the initial services and allow to initiate\na supervised learning process. New\
    \ algorithms are tested and approved on edge and fog nodes.\nIn Figure 6 different\
    \ services are proposed on each node.\nFigure 5. Architecture proposed on facilities\
    \ already automated: edge nodes interleaved between\ndevices already installed\
    \ and fog nodes that interconnect all subsystems.\nFigure 6. Architecture implemented:\
    \ services proposed.\nSensors 2018, 18, 1731\n11 of 21\n3.4. Test and Feedback\
    \ Developing\nIn machine learning systems the output is not ﬁxed. It will change\
    \ over time as the solution\nknows more and as the model on which the machine\
    \ learning system is built evolves as it is fed more\ndata. This forces the testing\
    \ professional to think differently and adopt test strategies that are very\n\
    different from traditional testing techniques. To test machine learning systems\
    \ is essential:\n1.\nObtaining data sets: This refers to a data set with main\
    \ variables captured and stored to analyse\nand design the model. In irrigation\
    \ process data set are: irrigation programming used (time and\nﬂow), ambient conditions\
    \ (humidity, temperature) and soil conditions (humidity, temperature,\npH and\
    \ conductivity) captured by sensors. All this data are monitored and stored.\n\
    2.\nTraining data sets: This refers to a data set used for training the model.\
    \ It is a subset of the\nprevious dataset. In irrigation process training data\
    \ set are: irrigation programming automated\nby the model (time and ﬂow decision)\
    \ considering ambient conditions (soil, ambient and crop).\nThis data is usually\
    \ prepared by collecting data in a semi-automated way. The results of this\nprocess\
    \ are validated with agronomists.\n3.\nTesting data sets: It is a dataset used\
    \ to to measure the model quality.\n4.\nValidation test suites on real scenarios.\
    \ Taking the irrigation example, test scenarios include\ncategorizing needs of\
    \ water for a kind of crop considering climatic conditions and its growth\nphase.\
    \ Automated irrigation decisions by the model are analysed in this phase.\n5.\n\
    Building validation suites. It is necessary to understand the algorithm. The model\
    \ has algorithm\nthat analyse the data provided, looks for speciﬁc patterns, and\
    \ uses the results of this analysis\nto develop optimal parameters for creating\
    \ the model. The model is reﬁned as the number of\niterations and the richness\
    \ of the data increase.\n6.\nCommunicating test results in statistical terms.\
    \ Models based on machine learning algorithms\nwill produce approximations and\
    \ not exact results. Quality of results must be analysed in the\nsame context.\
    \ The testing community will need to determine the level of conﬁdence within a\n\
    certain range.\n7.\nModel evolution. Support to develop new AI services or modiﬁcations\
    \ on algorithms\nimplemented. Supervised and automatic changes are processes to\
    \ maintain the operating models.\n3.5. Comparison with Industrial Facilities.\
    \ Novelty Elements Proposed\nCurrently, industrial facilities that use PA technologies\
    \ are based on integration of internet and web\nservices with automation and control\
    \ using industrial technology. Proprietary systems are designed for\nmonitoring\
    \ large production plants. Related work analysed show that the Agriculture Control\
    \ system\nfor production, irrigation, or climate proposes different monitoring\
    \ and control technologies, based on\nwireless sensor network and industrial control.\
    \ Monitoring systems analyse crop environment and the\nmethod to improve the decision\
    \ making by analysing statistics and reactive algorithms. This work\nproposes\
    \ two main novelty elements: optimization of architecture levels integration of\
    \ edge and fog\nlayers and proposes the integration the farmer in the design of\
    \ new improvements using data analysis\nobtained with the new architecture developed.\n\
    4. Experimental Work\nDifferent agricultural facilities have been analysed to\
    \ introduce the method proposed. Three kind\nof installations summarize the different\
    \ types:\n•\nInstallation automated but subsystems not interoperable\n•\nPartial\
    \ automation without any interconnection and non-interoperable systems\n•\nManual\
    \ control\nIn all of them, the services based on AI are not yet installed. In\
    \ this context, the method proposed\nusing edge-computing on basic controllers\
    \ and fog-computing on gateway nodes can design common\nSensors 2018, 18, 1731\n\
    12 of 21\nservices for the three types of facilities cited. With this conﬁguration,\
    \ subsystems interoperability and\nAI support are achieved. Control signals of\
    \ already installed controllers in automated installations\nbecome inputs to edge\
    \ nodes and a fog node which acts as an interface for all facility nodes. In all\n\
    greenhouses, irrigation and internal environment control are basic processes.\
    \ Agronomist users know\nhow to program reactive controls and how to conﬁgure\
    \ automated devices. Optimization of these\nresources (water, energy) are two\
    \ potential services that agronomist perform through their experience.\nThis knowledge\
    \ can be transferred to intelligent systems that integrate it through techniques\
    \ based on\nAI paradigms. Interconnection of subsystems also are one of the proposed\
    \ improvement. A deployment\nfor an automated installation is designed and implemented.\
    \ This case shows how to implement\nwhen there are already automated installations.\
    \ This case also serves as a guide for other types of\ngreenhouse installations.\n\
    4.1. Analysis\nThe farmer, together with the technician in information technologies,\
    \ propose a set\nof improvements:\n•\nMonitoring and control interfaces on the\
    \ Internet (control and communication services)\n•\nEvent and change communication\
    \ service (communication services)\n•\nInterconnection of irrigation and air conditioning\
    \ subsystems (interoperability services)\n•\nIntegration of automation to optimize\
    \ water consumption (AI services)\nThe work carried out designs an installation\
    \ that deploy the necessary hardware and software\nresources using the proposed\
    \ method Figure (Figure 7) shows agricultural subsystems and model\ndeployed on\
    \ distributed nodes.\nFigure 7. Greenhouse design. Fog and edge nodes relations\
    \ on agriculture subsystems.\nIntelligent irrigation control is installed in an\
    \ experimental greenhouse based on tomato\nhydroponic cultivation (Table 4). Following\
    \ the proposed method, the experimental phases are:\nSensors 2018, 18, 1731\n\
    13 of 21\n1.\nThings, communication and context design: objects (things) and its\
    \ context are detected and\nrelated using IoT protocols and services (user-centred,\
    \ architecture and IoT protocols design)\n2.\nHardware devices and software modules:\
    \ edge and fog nodes with the services that will be\nimplemented are proposed\
    \ (integration and AI services)\n3.\nInstalling: how the model is tested and deployed\
    \ (testing process)\nTable 4. Growth crop process on experimental station. Tomato\
    \ plant growth stages.\nIrrigation actual (Total liters) = 5 L/m2 (initial phase)\n\
    Average Temperature = 20 ◦C\nEnergy used = 60 Wh/m2/day\nAverage water PH = 6.5\n\
    Solar irradiance = 4 kWh/m2/day (NASA HOMER web)\nAverage water EC = 2850 µS/cm\n\
    Example of new service designed by user: Decision Tree to reduce water consumption\n\
    Solutions\nTechnological results\nDevelop a reference model based on distributed\
    \ IoT paradigms\nNew PA processes automated\nGraphics Interfaces use simple and\
    \ universal access\nTools, facilities and resources adapted for agronomist\nGUI\
    \ interfaces used on Internet\nNew ways of data access and Low-cost deployment\n\
    Users design DECISION TREE to optimize water consumption\n4.2. Design: Things,\
    \ Communication and Context\nIrrigation process, soil parameters, environmental\
    \ conditions inside and outside the greenhouse\nand energy consumption deﬁne objects\
    \ and context. Sensors, actuators and processes and their\nrelationship (context)\
    \ are shown in Table 5. Context vector are (ID, time, date, GH1, relations, state)\
    \ for\neach object/thing, where GH1 is the location ID of greenhouse.\nAll objects\
    \ are interoperable using MQTT protocol. Publisher and subscriber communication\n\
    model that implement this protocol allows interconnect all devices and things.\
    \ Broker device are\ninstalled on fog node. Publishers and subscribers are implemented\
    \ on different nodes.\n4.3. Hardware Devices and Software Modules\nTwo edge nodes\
    \ and one fog node are proposed to control climate and irrigation processes.\n\
    Objects (things) and processes are deployed on all nodes. Irrigation and climate\
    \ control are installed\nin edge nodes, AI services are implemented in fog node.\
    \ Process control architecture is used in\nthe ﬁrst node type (edge) and data-centred\
    \ architecture is used in the second node type (fog) and\nin the cloud services\
    \ implemented. In edge node the ﬂow of data comes from a set of variables\n(things\
    \ and internal variables) which control the processes execution. Agronomist and\
    \ expert users\ndesigns basic control algorithms. After learning and training\
    \ process, these algorithms will be adjusted\nand modiﬁed following the results\
    \ of the expert system (machine learning). The aim is to optimize\nresources (water,\
    \ energy) without losing productivity. Two main control processes are executed\
    \ in\ntwo edge nodes and one machine learning process is implemented in a fog\
    \ node. Table 5 shows these\nprocesses and their relationship. Algorithms are\
    \ implemented in Python and developed using open\nsource criteria. Minimal hardware\
    \ embedded devices requirements are shown in Table 6.\nSensors 2018, 18, 1731\n\
    14 of 21\nTable 5. Things context identiﬁed in experimental greenhouse.\nObject/Thing\n\
    Context\nType\nRelation\nSoiltemp\n(ID1, time, date, GH1, ◦C)\ninput\nID16, ID17\n\
    Soilmoisture\n(ID2, time, date, GH1, %)\ninput\nID16, ID17\nSoilPH\n(ID3, time,\
    \ date, GH1, int)\ninput\nID16\nSoilEC\n(ID4, time, date, GH1, µS/cm2)\ninput\n\
    ID16\nWatertemp\n(ID5, time, date, GH1, ◦C)\ninput\nID16\nWaterPH\n(ID6, time,\
    \ date, GH1, int)\ninput\nID16\nWaterEC\n(ID7, time, date, GH1, µS/cm2)\ninput\n\
    ID16\nInsidetemp\n(ID8, time, date, GH1, ◦C)\ninput\nID17\nInsidehum\n(ID9, time,\
    \ date, GH1, %)\ninput\nID17\nInsidelum\n(ID10, time, date, GH1, lux)\ninput\n\
    ID17\nOutsidetemp\n(ID11, time, date, GH1, ◦C)\ninput\nID17\nOutsidehum\n(ID12,\
    \ time, date, GH1, %)\ninput\nID17\nOutsidewind\n(ID12, time, date, GH1, m/s)\n\
    input\nID17\nEvalvewater1\n(ID13, time, date, GH1, ON-OFF)\noutput\nID16, ID17\n\
    Evalvewater2\n(ID14, time, date, GH1, ON-OFF)\noutput\nID16, ID17\nEpumpwater\n\
    (ID15, time, date, GH1, ON-OFF)\noutput\nID16, ID17\nP_Irrigation1\n(ID16, time,\
    \ date, edgenode1, [Ev1, Ev2, Ev3])\nprocess\nID17\nP_Air_cond1\n(ID17, time,\
    \ date, edgenode2, [M1, M2])\nprocess\nID16\nPredictionweather\n(ID18, time, date,\
    \ GH1, [Water, Energy])\ninput\nID16, ID17, ID19\nForecastweather\n(ID19, time,\
    \ date, GH1, [Tem, Hum, Wind])\ninput\nID16, ID17, ID18\nEnergymeter\n(ID20, time,\
    \ date, GH1, [powermeasured, powerpredicted])\ninput\nID16, ID17\nHMIweb\n(ID21,\
    \ time, date, webserver, [I/O])\ninterface\n[ID1, ..., ID20])\nP_Machine_Learning\n\
    (ID22, time, date, f og_node, [management, supervision])\nprocess\n[ID1, ...,\
    \ ID20])\nWaterf low\n(ID4, time, date, GH1, m3/h)\ninput\nID16\nTable 6. Minimal\
    \ hardware requirements of edge and fog nodes.\nRequirement\nMinimal Resources\n\
    Node Type\nProcessor\nmulti_core ≥ 1000 MHz\nfog\nProcessor\ncore ≥ 700 MHz\n\
    edge\nVideo\nGPU ≥ 400 MHz\nedge\nStorage\npermanent ≥ 1 GB\nfog\nStorage\npermanent\
    \ ≥ 600 MB\nedge\nCommunicationports\nUSB 2.0, ethernet, WIFI\nedge and fog\n\
    Communicationprotocols\nserial, tcp/ip\nedge and fog\nGPIOports\nportI/O\nedge\n\
    Operating System\nLinux, Windows, OSx, Android, others\nedge and fog\nProgramming\n\
    C, C + +, Python\nedge\nProgramming\nC, C + +, Python, web\nfog\n4.4. Installing\
    \ and Testing\nIn facilities already automated, edge nodes are interleaved between\
    \ the installed controllers\nand actual sensors and actuators. Some new sensors\
    \ are installed to complete services designed\n(energy meter). In current facilities\
    \ edge nodes are deployed and allows:\n•\nWork in the same way as before (initial\
    \ learning stage, analysis and model selection).\n•\nChange to a new control using\
    \ new expert and automatic rules using AI processes (supervised stage\nand training)\n\
    •\nTest and reconﬁgure expert rules (testing and maintenance)\nFigure 8 shows\
    \ an edge node to irrigation control and how is deployed in the experimental\n\
    greenhouse built in this work, without previous installation. Agronomists and\
    \ farmers preferences are\nSensors 2018, 18, 1731\n15 of 21\nthose that drive\
    \ the design: interfaces, maintain and optimize control processes. In irrigation\
    \ process a\ntime schedule with the selected flow rate is programmed by the user\
    \ according to the period of crop\ngrowth. In learning stage, edge node captures\
    \ the data and sends it to the fog node. Fog node process\ndiary water uses, ambient\
    \ and soil conditions, type of crop and its growth. Using these data crop\ntype\
    \ is classified. Crop production results are added as data to analyse it together\
    \ with the stored ones.\nProduction, water consumption, crop growing stage, time,\
    \ date, soil parameters, current weather, forecast\nweather and ambient green\
    \ house conditions are captured as inputs to machine learning platform.\n(a) Hardware\
    \ device\n(b) Software processes\nFigure 8. Hardware and software deployed on\
    \ experimental greenhouse edge node.\nIn future crop productions the irrigation\
    \ schedule can be automated, first with human supervision\nand then automated.\
    \ Biophysical variables (plant, soil, canal flow, and weather conditions) that\
    \ are\nmeasured during the growing seasons are used as inputs to build the models.\
    \ Information about\ncrop phenology (growth stages), soil moisture, and weather\
    \ variables will be compiled. The analysis\nof irrigation decisions is important\
    \ because this can help in the estimation of short-term irrigation\ndemands. If\
    \ the automated process decisions are known, It can help canal operators to better\
    \ manage\nwater deliveries and avoid unexpected delays and operational conditions\
    \ that increase canal losses.\nInformation about these demands can also be helpful\
    \ for the evaluation of expected future agricultural\nsupplies. It can never be\
    \ possible to know the exact reasons why a farmer decided to irrigate, all farmers\n\
    are different and prefer their own decision processes. Data analysis with farmer\
    \ in in its own installation\ninfer automated farmer actions. This data is used\
    \ to build the models and these learnt frameworks will\nbe used to predict irrigation\
    \ decisions. The specific objectives planned with farmer are:\n1.\nIdentify the\
    \ main variables contributing to an irrigation behaviour by training the models\
    \ with\nrelevant data\n2.\nGroup the irrigation decisions into distinct classes\n\
    3.\nIdentify the decisions taken\n4.\nDetect the patterns in farmer decisions\n\
    5.\nInfer future irrigation decisions using the information and modelling tools.\
    \ Design decision tree\nalgorithms to reduce water consumption\nFog Computing\
    \ node is shown in Figure 9. This paradigm extends the Cloud Computing to the\n\
    edge of the network, thus enabling a new breed of applications and services. Deﬁning\
    \ characteristics\nof the Fog are: (a) Low latency and location awareness; (b)\
    \ Wide-spread geographical distribution;\n(c) Mobility; (d) Very large number\
    \ of nodes; (e) Predominant role of wireless access; (f) Strong presence\nof streaming\
    \ and real time applications; (g) Heterogeneity [44].\nSensors 2018, 18, 1731\n\
    16 of 21\nIn this paper, fog node is used to carry out the machine learning processes,\
    \ storage data and\ncommunicate with cloud services (monitoring interfaces). Figures\
    \ 10 and 11 and shows different\nvariables (soil moisture, soil temperature and\
    \ conductivity means) that farmer decide to use in\nirrigation control to design\
    \ new rules to optimize production. Before, control irrigation was controlled\n\
    only by a time schedule. Now, it takes into account data sensors to decide if\
    \ watering and growth\ncontrol can be optimized with decision trees.\nFigure 9.\
    \ Communication and processes on edge and fog nodes.\nFigure 10. Decision Tree\
    \ developed on irrigation control designed by agronomist and integrated on\nedge\
    \ node. This decision tree aims to optimize water consumption.\nThis new rule\
    \ is designed by\nfarmer observing the evolution of the data during the plant\
    \ growth.\nSensors 2018, 18, 1731\n17 of 21\nFigure 11. Decision Tree on irrigation\
    \ control designed by agronomist and integrated on edge node.\nThis decision tree\
    \ aims to optimize plant growth control. This new rule is designed by farmer observing\n\
    the evolution of the data during the plant growth.\nCloud services designed are\
    \ monitoring data accessed through a Human Machine Interface (HMI).\nIoT platforms\
    \ push data from any Internet-Enabled Device and prompt them to quickly get\n\
    started.\nSimilar platforms with similar services show the state of commercial\
    \ IoT technology:\nAzure [45], Ubidots [46], Thingspeak [47], are some examples\
    \ of companies that provide IoT\nservices. These platforms are built with similar\
    \ architectures and provide, usually, the same resources:\nApplication Programming\
    \ Interface (API) communication between clients and IoT server.\nAll these platforms\
    \ provide dashboard designs to monitor data using HMI formats pre-built.\nUsing\
    \ API services, processes in fog node are implemented to send new data to each\
    \ dashboard.\nThe API Documentation speciﬁes the structure of the data that is\
    \ exchanged between your devices and\nthe Ubidots and Mobile-Alerts Cloud, along\
    \ with code examples and libraries to speed up the project.\nFigure 12 shows a\
    \ dashboard (interface HMI) designed by users on Ubidots cloud platform. The system\n\
    can use standard protocols in the different layers and platforms that implement\
    \ these protocols.\nSensors 2018, 18, 1731\n18 of 21\nFigure 12. Dashboards designed\
    \ for irrigation programming and monitoring.\n5. Conclusions and Future Work\n\
    In this work the state-of-the-art of PA and IoT technologies in agricultural scenarios,\
    \ have been\nanalysed. PA presents difﬁculties to be implemented by farmers. These\
    \ include cultural perception,\nlack of local technical expertise, infrastructure\
    \ constraints, knowledge and technical gaps and high\nstart-up costs. Farmers\
    \ must be involved in the design and integration of these technologies in their\n\
    facilities. To carry out this solution there must be methods to facilitate such\
    \ integration. This work\nproposes a new method to integrate the farmer in the\
    \ development of new solutions using low cost\nsensing technologies and innovative\
    \ communication paradigms. An architecture based on two new\nlevels of communication\
    \ and processing nodes (edge and fog nodes) form the technological core\nof the\
    \ proposed method. Each level performs a set of interconnected functionalities.\
    \ The proposed\ninfrastructure can be installed either in already automated installations\
    \ or in the design of new facilities.\nIn the already automated installations,\
    \ the method introduces new possibilities for the development of\nintelligent\
    \ and interconnected control. An experimental work has been carried out in a greenhouse.\n\
    In this work, communication nodes have been installed and a new service based\
    \ on a decision tree\nparadigm has been designed by expert user. The facilities\
    \ that use the proposed model make the\nclimate control and irrigation subsystems\
    \ interoperable and allow the farmer to design new integrated\ncontrol rules.\
    \ The new distributed communication model allows the farmer to analyse changes\
    \ and\nimprovements. This experimental work initiates a new methodology of work\
    \ for the farmer who can\nuse these new technologies more easily. Future control\
    \ rules and services using a machine learning\nplatform and AI paradigms will\
    \ allow to optimize and improve the results.\nAuthor Contributions: F.J.F.-P.\
    \ and J.M.G.-C. performed the analysis. Model design was proposed by F.J.F.-P.\
    \ and\nM.N.-H. Experimental work on IoT was implemented by M.N.-H. and F.J.F.-P.,\
    \ experimental work on greenhouse\ncrop growing was developed by J.M.-M.\nFunding:\
    \ This research was supported by Industrial Computers and Computer Networks program\
    \ (I2RC)\n(2016/2017) funded by the University of Alicante.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nSensors 2018, 18, 1731\n19 of 21\n\
    Abbreviations\nThe following abbreviations are used in this manuscript:\nAI\n\
    Artiﬁcial Intelligence\nAPI\nApplication Programming Interface\nHMI\nHuman Machine\
    \ Interface\nIAB\nInternet Architecture Board\nIETF\nInternet Engineering Task\
    \ Force\nIoT\nInternet of Things\nISO\nInternational Organization for Standardization\n\
    ISOC\nInternet Society\nMQTT\nMessage Queuing Telemetry Transport\nPA\nPrecision\
    \ Agriculture\nQoS\nQuality of Service\nRFC\nRequest for Comments\nUCD\nUser Centred\
    \ Design\nUX\nUser Experience\nReferences\n1.\nFerrandez-Pastor, F.J.; Garcia-Chamizo,\
    \ J.M.; Nieto-Hidalgo, M.; Mora-Martinez, J. User-Centered Design of\nAgriculture\
    \ Automation Systems Using Internet of Things Paradigm. In Proceedings of the\
    \ UCAmI 2017:\nUbiquitous Computing and Ambient Intelligence, Philadelphia, PA,\
    \ USA, 7–10 November 2017; pp. 56–66.\n2.\nGebbers, R.; Adamchuk, V.I. Precision\
    \ Agriculture and Food Security. Science 2010, 327, 828–831. [CrossRef]\n[PubMed]\n\
    3.\nEuropean-Parliament. Precision Agriculture: An Opportunity for EU Farmers—Potential\
    \ Support with the\nCAP 2014-2020. 2014. Available online: http://www.europarl.europa.eu/RegData/etudes/note/join/2014/\n\
    529049/IPOL-AGRI_NT%282014%29529049_EN.pdf (accessed on 16 April 2018).\n4.\n\
    Lowdermilk, T. What is centered-user design? In User-Centered Design. A Developer’s\
    \ Guide to Building\nUser-Friendly Applications; O’Reilly Media: Sebastopol, CA,\
    \ USA, 2013; pp. 13–15.\n5.\nFoundation, I.D. What Is User Centred Design? 2015.\
    \ Available online: https://www.interaction-design.\norg/literature/topics/user-centered-design\
    \ (accessed on 16 April 2018).\n6.\nTeoh, C. User-Centred Design (UCD)—6 Methods.\
    \ 2009. Available online: http://www.webcredible.com/\nblog/user-centered-design-ucd-6-methods/\
    \ (accessed on 16 April 2018).\n7.\nYang, Z.; Yue, Y.; Yang, Y.; Peng, Y.; Wang,\
    \ X.; Liu, W. Study and application on the architecture and\nkey technologies\
    \ for IOT. In Proceedings of the 2011 International Conference on Multimedia Technology,\n\
    Hangzhou, China, 26–28 July 2011; pp. 747–751.\n8.\nWu, M.; Lu, T.J.; Ling, F.Y.;\
    \ Sun, J.; Du, H.Y. Research on the architecture of Internet of Things. In Proceedings\n\
    of the 2010 3rd International Conference on Advanced Computer Theory and Engineering\
    \ (ICACTE),\nChengdu, China, 20–22 August 2010; Volume 5, pp. V5-484–V5-487.\n\
    9.\nFerrandez-Pastor, F.J.; Garcia-Chamizo, J.M.; Nieto-Hidalgo, M.; Mora-Pascual,\
    \ J.; Mora-Martinez, J.\nDeveloping Ubiquitous Sensor Network Platform Using Internet\
    \ of Things: Application in Precision\nAgriculture. Sensors 2016, 16, 1141. [CrossRef]\
    \ [PubMed]\n10.\nKhan, R.; Khan, S.U.; Zaheer, R.; Khan, S. Future Internet: The\
    \ Internet of Things Architecture, Possible\nApplications and Key Challenges.\
    \ In Proceedings of the 2012 10th International Conference on Frontiers of\nInformation\
    \ Technology, Islamabad, Pakistan, 17–19 December 2012; pp. 257–260.\n11.\nAl-Sarawi,\
    \ S.; Anbar, M.; Alieyan, K.; Alzubaidi, M. Internet of Things (IoT) communication\
    \ protocols:\nReview. In Proceedings of the 2017 8th International Conference\
    \ on Information Technology (ICIT), Singapore,\n27–29 December 2017; pp. 685–690.\n\
    12.\nHe ¯di, I.; Špeh, I.; Šarabok, A. IoT network protocols comparison for the\
    \ purpose of IoT constrained networks.\nIn Proceedings of the 2017 40th International\
    \ Convention on Information and Communication Technology,\nElectronics and Microelectronics\
    \ (MIPRO), Opatija, Croatia, 22–26 May 2017; pp. 501–505.\nSensors 2018, 18, 1731\n\
    20 of 21\n13.\nYassein, M.B.; Shatnawi, M.Q.; Al-zoubi, D. Application layer protocols\
    \ for the Internet of Things: A survey.\nIn Proceedings of the 2016 International\
    \ Conference on Engineering MIS (ICEMIS), Agadir, Morocco,\n22–24 September 2016;\
    \ pp. 1–4.\n14.\nIoT-Now-Mag. The Industrial Internet: Towards the 4th Industrial\
    \ Revolution. 2016. Available online: https:\n//www.iot-now.com/2016/10/20/53811-the-industrial-internet-towards-the-4th-industrial-revolution\n\
    (accessed on 16 April 2018).\n15.\nHortelano, D.; Olivares, T.; Ruiz, M.C.; Garrido-Hidalgo,\
    \ C.; Lopez, V. From Sensor Networks to Internet of\nThings. Bluetooth Low Energy,\
    \ a Standard for This Evolution. Sensors 2017, 17, 372. [CrossRef] [PubMed]\n\
    16.\nChen, Y.; Lee, G.M.; Shu, L.; Crespi, N. Industrial Internet of Things-Based\
    \ Collaborative Sensing Intelligence:\nFramework and Research Challenges. Sensors\
    \ 2016, 16, 215. [CrossRef] [PubMed]\n17.\nBaños-Gonzalez, V.; Afaqui, M.S.; Lopez-Aguilera,\
    \ E.; Garcia-Villegas, E. IEEE 802.11ah: A Technology to\nFace the IoT Challenge.\
    \ Sensors 2016, 16, 1960. [CrossRef] [PubMed]\n18.\nOrsino, A.; Araniti, G.; Militano,\
    \ L.; Alonso-Zarate, J.; Molinaro, A.; Iera, A. Energy Efﬁcient IoT Data\nCollection\
    \ in Smart Cities Exploiting D2D Communications. Sensors 2016, 16, 836. [CrossRef]\
    \ [PubMed]\n19.\nChoi, H.S.; Rhee, W.S. IoT-Based User-Driven Service Modeling\
    \ Environment for a Smart Space Management\nSystem. Sensors 2014, 14, 22039–22064.\
    \ [CrossRef] [PubMed]\n20.\nIlchev, S.; Ilcheva, Z. Internet-of-Things Communication\
    \ Protocol for Low-Cost Devices in Heterogeneous\nWireless Networks.\nIn Proceedings\
    \ of the 18th International Conference on Computer Systems and\nTechnologies,\
    \ Ruse, Bulgaria, 23–24 June 2017; pp. 272–279.\n21.\nSivanathan, A.; Sherratt,\
    \ D.; Gharakheili, H.H.; Sivaraman, V.; Vishwanath, A. Low-cost ﬂow-based security\n\
    solutions for smart-home IoT devices. In Proceedings of the 2016 IEEE International\
    \ Conference on Advanced\nNetworks and Telecommunications Systems (ANTS), Bangalore,\
    \ India, 6–9 November 2016; pp. 1–6.\n22.\nNew-Electronics-Site. Low Cost Sensors\
    \ Will Help the IoT to Be Realised. 2017. Available online:\nhttp://www.newelectronics.co.uk/electronics-technology/low-cost-sensors-will-help-the-iot-to-be-\n\
    realised/166151/ (accessed on 16 April 2018).\n23.\nCercas, F.; Souto, N.M.B.\
    \ Comparison of communication protocols for low cost Internet of Things devices.\n\
    In Proceedings of the 2017 South Eastern European Design Automation, Computer\
    \ Engineering, Computer\nNetworks and Social Media Conference (SEEDA-CECNSM),\
    \ Kastoria, Greece, 25–27 September 2017; pp. 1–6.\n24.\nTech-Target. IoT as a\
    \ Solution for Precision Farming. 2017. Available online: http://internetofthingsagenda.\n\
    techtarget.com/blog/IoT-Agenda/IoT-as-a-solution-for-precision-farming (accessed\
    \ on 16 April 2018).\n25.\nJayaraman, P.P.; Yavari, A.; Georgakopoulos, D.; Morshed,\
    \ A.; Zaslavsky, A. Internet of Things Platform for\nSmart Farming: Experiences\
    \ and Lessons Learnt. Sensors 2016, 16, 884. [CrossRef] [PubMed]\n26.\nZhang,\
    \ X.; Zhang, J.; Li, L.; Zhang, Y.; Yang, G. Monitoring Citrus Soil Moisture and\
    \ Nutrients Using an IoT\nBased System. Sensors 2017, 17, 447. [CrossRef] [PubMed]\n\
    27.\nWolfert, S.; Ge, L.; Verdouw, C.; Bogaardt, M.J. Big Data in Smart Farming—A\
    \ review. Agric. Syst. 2017,\n153, 69–80. [CrossRef]\n28.\nMalche, T.; Maheshwary,\
    \ P. Internet of Things (IoT) Based Water Level Monitoring System for Smart Village.\n\
    In Proceedings of International Conference on Communication and Networks; Modi,\
    \ N., Verma, P., Trivedi, B., Eds.;\nSpringer: Singapore, 2017; pp. 305–312.\n\
    29.\nJohn-Deere. How the IoT Is Creating ‘Precision Farming’. 2018. Available\
    \ online: http://precisionagricultu.\nre/how-the-iot-is-creating-precision-farming-2/\
    \ (accessed on 16 April 2018).\n30.\nIBM. IBM Research Precision Agriculture.\n\
    2018. Available online:\nhttps://www.ibm.com/us-en/\nmarketplace/agri-resrch-innov\
    \ (accessed on 16 April 2018).\n31.\nMotorleaf.\nIntelligence Powered Indoor Cultivation.\
    \ 2018.\nAvailable online: http://motorleaf.com\n(accessed on 16 April 2018).\n\
    32.\nBiomax.\nAgriculture IoT System. 2018.\nAvailable online: http://www.biomax.com.tw/en/product/\n\
    Agriculture-IoT-System/agriculture_iot_system.html (accessed on 16 April 2018).\n\
    33.\nGupta, H.; Dastjerdi, A.V.; Ghosh, S.K.; Buyya, R. iFogSim: A Toolkit for\
    \ Modeling and Simulation of\nResource Management Techniques in Internet of Things,\
    \ Edge and Fog Computing Environments. arXiv\n2016, arXiv:1606.02007. [CrossRef]\n\
    34.\nShi, W.; Dustdar, S. The Promise of Edge Computing. Computer 2016, 49, 78–81.\
    \ [CrossRef]\n35.\nHao, Z.; Novak, E.; Yi, S.; Li, Q.\nChallenges and Software\
    \ Architecture for Fog Computing.\nIEEE Internet Comput. 2017, 21, 44–53. [CrossRef]\n\
    Sensors 2018, 18, 1731\n21 of 21\n36.\nDastjerdi, A.V.; Buyya, R. Fog Computing:\
    \ Helping the Internet of Things Realize Its Potential. Computer\n2016, 49, 112–116.\
    \ [CrossRef]\n37.\nMa, X.; Liang, J.; Liu, R.; Ni, W.; Li, Y.; Li, R.; Ma, W.;\
    \ Qi, C. A Survey on Data Storage and Information\nDiscovery in the WSANs-Based\
    \ Edge Computing Systems. Sensors 2018, 18, 546. [CrossRef] [PubMed]\n38.\nChen,\
    \ Y.S.; Tsai, Y.T. A Mobility Management Using Follow-Me Cloud-Cloudlet in Fog-Computing-Based\n\
    RANs for Smart Cities. Sensors 2018, 18, 489. [CrossRef] [PubMed]\n39.\nDavis,\
    \ E.G.; Calveras, A.; Demirkol, I. Improving Packet Delivery Performance of Publish/Subscribe\n\
    Protocols in Wireless Sensor Networks. Sensors 2013, 13, 648–680. [CrossRef] [PubMed]\n\
    40.\nAlvarez-Campana, M.; López, G.; Vázquez, E.; Villagrá, V.A.; Berrocal, J.\
    \ Smart CEI Moncloa: An IoT-based\nPlatform for People Flow and Environmental\
    \ Monitoring on a Smart University Campus. Sensors 2017,\n17, 2856. [CrossRef]\
    \ [PubMed]\n41.\nAtmoko, R.A.; Riantini, R.; Hasin, M.K. IoT real time data acquisition\
    \ using MQTT protocol. J. Phys. Conf. Ser.\n2017, 853, 012003. [CrossRef]\n42.\n\
    MQTT-org. MQTT Protocol. 2018. Available online: https://www.mqtt.org (accessed\
    \ on 16 April 2018).\n43.\nMQTT. MQTT Essentials Part 6: Quality of Service. 2018.\
    \ Available online: https://www.hivemq.com/\nblog/mqtt-essentials-part-6-mqtt-quality-of-service-levels\
    \ (accessed on 16 April 2018).\n44.\nBonomi, F.; Milito, R.A.; Zhu, J.; Addepalli,\
    \ S.\nFog computing and its role in the internet of things.\nIn Proceedings of\
    \ the First Edition of the MCC Workshop on Mobile Cloud Computing, Helsinki, Finland,\n\
    17 August 2012.\n45.\nMicrosoft. Connect, Monitor, and Manage Billions of IoT\
    \ Assets. 2018. Available online: https://azure.\nmicrosoft.com/en-us/services/iot-hub/\
    \ (accessed on 16 April 2018).\n46.\nUbidots. Data Drives Decision. 2018. Available\
    \ online: https://ubidots.com/ (accessed on 16 April 2018).\n47.\nThingspeak.\
    \ Understand Your Things. 2018. Available online: https://thingspeak.com/ (accessed\
    \ on\n16 April 2018).\nc⃝ 2018 by the authors. Licensee MDPI, Basel, Switzerland.\
    \ This article is an open access\narticle distributed under the terms and conditions\
    \ of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/18/6/1731/pdf?version=1527488897
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Precision Agriculture Design Method Using a Distributed Computing Architecture
    on Internet of Things Context
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.2975142
  analysis: '>'
  authors:
  - Maanak Gupta
  - Mahmoud Abdelsalam
  - Sajad Khorsandroo
  - Sudip Mittal
  citation_count: 273
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access
    >Volume: 8 Security and Privacy in Smart Farming: Challenges and Opportunities
    Publisher: IEEE Cite This PDF Maanak Gupta; Mahmoud Abdelsalam; Sajad Khorsandroo;
    Sudip Mittal All Authors 271 Cites in Papers 50232 Full Text Views Open Access
    Comment(s) Under a Creative Commons License Abstract Document Sections I. Introduction
    and Motivation II. Smart Farming Landscape & Architecture III. Security & Privacy
    Issues IV. Smart Farming Ecosystem Cyber Attacks V. Existing Research Show Full
    Outline Authors Figures References Citations Keywords Metrics Footnotes Abstract:
    Internet of Things (IoT) and smart computing technologies have revolutionized
    every sphere of 21 st century humans. IoT technologies and the data driven services
    they offer were beyond imagination just a decade ago. Now, they surround us and
    influence a variety of domains such as automobile, smart home, healthcare, etc.
    In particular, the Agriculture and Farming industries have also embraced this
    technological intervention. Smart devices are widely used by a range of people
    from farmers to entrepreneurs. These technologies are used in a variety of ways,
    from finding real-time status of crops and soil moisture content to deploying
    drones to assist with tasks such as applying pesticide spray. However, the use
    of IoT and smart communication technologies introduce a vast exposure to cybersecurity
    threats and vulnerabilities in smart farming environments. Such cyber attacks
    have the potential to disrupt the economies of countries that are widely dependent
    on agriculture. In this paper, we present a holistic study on security and privacy
    in a smart farming ecosystem. The paper outlines a multi layered architecture
    relevant to the precision agriculture domain and discusses the security and privacy
    issues in this dynamic and distributed cyber physical environment. Further more,
    the paper elaborates on potential cyber attack scenarios and highlights open research
    challenges and future directions. A Roadmap of Cybersecurity Research and Challenges
    in Smart Farming. Published in: IEEE Access ( Volume: 8) Page(s): 34564 - 34584
    Date of Publication: 19 February 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.2975142
    Publisher: IEEE CCBY - IEEE is not the copyright holder of this material. Please
    follow the instructions via https://creativecommons.org/licenses/by/4.0/ to obtain
    full-text articles and stipulations in the API documentation. SECTION I. Introduction
    and Motivation According to the United Nations (UN), the world population is expected
    to exceed 9 billion people by 2050, growing by almost a third of the current population
    [1], [2]. Such an increase in the population demands a boost of almost 70 percent
    in the food production rate, according to the Food and Agriculture Organization
    of the United Nations.1 This rapidly growing population also introduces a variety
    of other problems such as increasing competition and exploitation of land, water
    and other natural resources. These issues present an urgent need to reduce the
    dependence of food system on our environment. Consequently, the need for an evolutionary
    agricultural paradigm to keep up with growing demand of food and crop production
    is necessary to guarantee a sustainable development [3]. Smart farming technologies2
    and precision agriculture3 [4] are gaining more attraction for their potential
    to fulfill such an increasing demand and meet global food supply needs. Smart
    farming technologies involve integration of technology and data driven agriculture
    applications to increase crop yield and quality of food products. There are numerous
    smart farming use cases [5]–[7] present globally indicating the impact of this
    new paradigm of practicing agriculture. As an example, the use of remote sensors
    placed in the soil for measuring blueberry irrigation in Chile has reduced the
    volume of water used in farming by 70 percent [8]. In India, farm data has been
    used to predict and prevent crop diseases, which reduced the risk associated with
    the failure of crop production [9]. Similar data driven approaches have helped
    fruit farmers in Slovenia effectively fight against pests.4 Smart farming, however,
    goes beyond primary production. In fact, it has impacted the complete food supply
    chain, by employing big data analytics to provide useful insights about the entire
    farming process [10] by facilitating real-time operational decision making, and
    revolutionizing existing agriculture business models. Smart farming enhances conventional
    farming practices by introducing on-field smart sensors and devices. These sensors
    and devices work in a synergistic manner to provide efficient farming experiences,
    as well as, an improved crop yield. Although beneficial to the productivity of
    the industry, the use of heterogeneous, internet-connected devices has exposed
    potential cyber attacks and vulnerabilities in the agriculture sector. These attacks
    introduce the ability to remotely control and exploit on-field sensors and autonomous
    vehicles (tractors, aerial vehicles, etc). Potential agricultural attacks can
    create an unsafe and unproductive farming environment. For example, exploits that
    have the ability to destroy an entire field of standing grown crops, flood the
    farmlands, over spray pesticides using smart drones, etc. can cause unsafe consumption
    as well as economic deterioration. Such attacks in a large coordinated manner,
    also referred to as agro-terrorism [11], also have the potential of disrupting
    the economy of an agriculture-dependent nation. A report [12] released by the
    U.S. Department of Homeland Security extensively elaborates various cyber threat
    scenarios in precision agriculture, further emphasizing the need for research
    in this critical domain. The Agriculture industry adds 6.4 percent of the world’s
    economic production with a total of $5,084,800 million.5 Agriculture, food, and
    related industries contributed $1.053 trillion to U.S. gross domestic product
    (GDP) in 2017.6 At the same time, United State’s farms contributed $132.8 billion
    of this sum which is almost 1 percent of GDP. Agriculture contributed 1.2 % to
    the European Union’s (EU) GDP in 2017 whereas EU’s agricultural industry added
    gross value of EUR 188.5 billion in 20177 at a record high. Out of 226 countries,
    nine countries have agriculture sector as the dominant sector in their economy.
    The U.S. food and agriculture system has a total economic impact of $7.06 trillion8
    and one-fourth of the overall jobs in the country are connected to it. Most countries
    globally export agricultural products. As a result, cyber vulnerabilities can
    have a significant impact on global food security. A sophisticated agro-terrorism
    attack on a (large) exporting country like the U.S. could harm the health of millions
    of consumers world-wide. In addition, attacks could reduce confidence on domestic
    consumption and destroy the United State’s status as a trusted food exporter.
    A report released in 2018 by the Council of Economic Advisors,9 “The Cost of Malicious
    Cyber Activity to the U.S. Economy” suggests the agriculture sector as one of
    the 16 critical infrastructure sectors that are important to both the U.S. economy
    and national security for which cyber protection is particularly important. It
    also reported that the agriculture sector experienced 11 cyber incidents in 2016.
    According to the World Health Organization,10 420,000 people die every year from
    food-related illnesses and 600 million people fall ill as a result of food contaminated
    with bacteria, viruses, toxins or chemicals. A cyber attack on the food ecosystem
    targeted at farms, transportation system, or food processing industrial control
    systems (ICSs) may increase these numbers exponentially. Other important industries
    like energy, financial or healthcare have understood the need for resilient infrastructure
    and have hardened their defenses. However, the food and agriculture industry is
    still a low hanging fruit for threat actors. Food Protection and Defense Institute
    (FPDI) at the University of Minnesota has discovered that food industry ICSs may
    be distinctly vulnerable to cyberattacks.11 Food industry operations technology
    personnel, in particular, those responsible for operating and maintaining ICSs,
    are experts trained in food and production safety production and not in cybersecurity.
    This presents a huge gap between employing smart farm technology and securing
    it correctly and persistently. If not continuously monitored, cyber attacks on
    smart agriculture technologies can have grave implications on several stakeholders
    in the ecosystem. These groups include farmers, end consumers, food processing
    industries, agriculture co-operatives, livestock, government agencies and nations
    critically dependent on agriculture. Figure 1, shows an end to end interaction
    among various entities involved in smart farming ecosystem. Physical sensors and
    livestock in the field generate data and receive command operations via user applications.
    These on-farm devices are connected to gateway supported edge nodes, which help
    enable in-farm device communication, filter sensor data and real time agronomy
    analytics. At the same time, data lakes in the cloud hold a large amount of data
    and information including but not limited to, environmental information (e.g.
    soil moisture level and fertility status), monitoring information (e.g. sensors
    and smart machinery status), energy management data, and other sensitive information.
    In terms of security and data privacy, it is needless to say that manipulation
    and leakage of such data, as well as the impairment of physical equipment and
    software systems, can induce serious consequences. FIGURE 1. A model of end-to-end
    interaction between various stakeholders in smart farming. Show All Extensive
    research on secure IoT devices [13]–[15], smart vehicles [16]–[19], drones [20],
    [21], edge cloud [22]–[24], wireless communication [25]–[27] is already available
    and might be extended to the smart farming ecosystem. However, most of the time,
    research is conducted on these technologies without consideration of the environment
    they are used. The dynamic smart farming environment, has unique characteristics
    such as farm equipment, labor sharing, and operational decisions, influenced by
    environmental conditions. Domain specific issues such as like location, user skill
    set, insider threats, generated data, need smart-farming-specific security mechanisms.
    The development of smart farm technologies therefore, demands further research
    before wide adoption in the community. The current state of the art and our review
    (discussed in Section V) on smart farming, demands further research in security
    and privacy aspects of this evolving domain. As the research, on cybersecurity
    for smart farming is in its infancy, our objective in this review is to provide
    a holistic view of cybersecurity developments in smart farming. In this paper,
    we discuss current threats, analyze potential cybersecurity attacks, review the
    existing scattered security research, and summarize open research challenges in
    the smart farming field as illustrated in Figure 2. FIGURE 2. A roadmap of cybersecurity
    research and challenges in smart farming. Show All This paper has the following
    key contributions: It provides an overview of smart farming focused multi-layered
    architecture, highlighting multiple entry points and communication across layers.
    It identifies potential cybersecurity issues in smart farming and illustrates,
    scenario specific cyber attacks, which have been categorized into data, network,
    supply chain, and other common attacks. It presents an extensive evaluation of
    the current cybersecurity research, countermeasures in smart farming, and also
    enlists the focus, contributions and weaknesses of current research works. It
    provides a clear view of the open security research challenges in different areas
    including next generation network security, trustworthy supply chain and compliance,
    adversarial machine learning and AI, and access control, trust and information
    sharing. The remainder of this paper is as follows. Multi-layered architecture
    for smart farming is discussed in Section II. Section III elaborates security
    and privacy issues, whereas Section IV discusses different attacks on the smart
    farming ecosystem including the supply chain side. Existing research and state
    of the art in smart farming security is discussed in Section V. Section VI highlights
    open research challenges and possible approaches to solutions. Finally, Section
    VII draws conclusion to this research paper. SECTION II. Smart Farming Landscape
    & Architecture Figure 3, depicts a multi layer architecture for the smart farming
    ecosystem. The proposed architecture adapts and extends widely discussed IoT and
    Cyber Physical System (CPS) multi-layer architectures [28]–[31]. These architectures
    recognize the use of cloud and edge services, and the infinite capabilities provided
    by them to fully harness the data generated from smart devices at the physical
    layer [32]–[37]. Our smart farming architecture, also reflects different user
    applications which can be envisioned at various layers. It also considers, vast
    amounts of data collected at edge or cloud layers, and highlights the need for
    various multi-cloud or edge-cloud scenarios. Overall the architecture consists
    of four layers: Physical layer, Edge layer, Cloud layer, and Network Communication
    layer. The latter spans across all three previous layers and connect them. FIGURE
    3. Multi layer smart farming architecture. Show All A. Physical Layer The bottom
    layer in the architecture comprises of real physical sensors and gateway devices
    which are spread across agriculture farms or in greenhouse buildings. These devices
    include drones flying in the air, autonomous tractors, sensors embedded in livestock,
    or hub devices installed to provide communication among smart objects or with
    a central cloud. These devices are responsible for data sensing and based on the
    information gathered, help in actuating other devices to realise various smart
    farming use cases. They collect real time information about weather conditions,
    soil moisture level, or cattle’s body temperature, which can be sent to the edge
    or cloud supported intelligent decision making systems to provide recommendations
    and enable automation. For example, data gathered from soil moisture sensing device
    in the field, after getting processed in the edge or cloud, can help in determining
    the amount of water needed at the farm, optimize irrigation schedule and offers
    a convenient experience to the end farmers. B. Edge Layer This layer is near to
    the end-users and end-devices for local real-time computations and decisions.
    It reduces the computation load off the centralized cloud layer and also the network
    load. Edge computing layer consists of multiple edge nodes. Each node represents
    a gateway that include services such as: data capturing, security monitoring and
    detection, prediction and real-time decision support. Data capturing services
    include, data aggregation, filtering, encrypting and encoding of real-time data
    streams. Prediction services usually rely on machine learning models trained on
    the central cloud and deployed on the edge layer. They are used to predict and/or
    categorize certain events related to plant or livestock such as, prediction of
    crop yield, categorization of plants or livestock health, predictions about the
    amount of fertilizer and water needed for a patch of land, so as to maximize yield,
    or estimating soil erosion. Security monitoring and detection mechanisms can be
    deployed for real-time monitoring of anomalous events and classifying these events
    as malicious or benign. This includes services like, anomaly detection and device
    failures prediction. C. Cloud Layer Precision Agriculture (PA) and cloud computing
    paradigms offer advances to enhance PA connectivity. The cloud layer is generally
    virtualized in data centers and communicates with the other layers using the Internet.
    Generally, these cloud layer platforms follow the Platform as a Service (PaaS)
    architecture model where the users can focus on running applications and importing
    their data. The PaaS provider runs and maintains a data broker that collects data
    being pushed in from the edge layer and saves these records in a Distributed File
    System (DFS). This stored data is used by analytic software to mine knowledge.
    This data analytics component computes insights and these are pushed to the end
    user through a client application running on the users’ machine. Popular farm
    equipment manufacturers like, John Deere,12 Farmers Business Network,13 etc. have
    created several cloud based products that help users monitor various sensors and
    vehicles used on a farm. These PaaS systems generally run on popular cloud computing
    platforms like Amazon Web Services,14 Google Cloud,15 etc. The way these farming
    PaaS systems are built using these popular cloud computing platforms also introduce
    various security challenges in smart farming ecosystem. D. Network Communication
    Layer The common theme for most, if not all, current technologies is “connectivity”.
    With a growing need for a boundary-less Internet, the idea of a network of smart
    devices has become a reality. This concept, known as the Internet of Things (IoT),
    allows connected devices to be monitored, controlled, and shared data among each
    other. This data can be analyzed and used by multiple applications. In smart farming,
    as shown in Figure 3, the network layer not only facilitates edge and physical
    layer connectivity, but also provides an interface for them to interact with the
    cloud layer. From exchanging soil temperature through a peer-to-peer sensor communication
    system, to sending farm monitoring data to the cloud data stores through high
    speed mobile networks such as 5G [38], or updating the farmer about corp quality
    via a wireless adhoc topology [39], network layer offers a means of communication
    to bind all other layers. Network layer has two main responsibilities in a smart
    farming system. Firstly, there are diverse set of heterogeneous devices in every
    layers of a smart farming system. The network layer provides a secure and efficient
    network stack where, wire, wireless and mobile sub-networks can communicate in
    a compatible and cross-layer manner. The second responsibility of the layer is
    to preserve connectivity and therefore, increase availability. From bigdata processing
    systems used to analyze collected data to individual sensors that collect information
    from the field, this layer is needed for system-wide cyber communication. Real
    World Smart Farming Use Cases: The proposed smart farming architecture is constructed
    based on multiple literature and real world smart farming use cases. It can be
    viewed as a general smart farming architecture that satisfies most of the use
    cases. However, it should be noted that not all use cases will include all four
    layers as proposed in the architecture. Blackhills Farm in New Zealand, a 400-hectare
    property with over 2000 cattle and 800 sheep, has adopted the use of SCADAfarm16
    system which allows the owners to remotely monitor water and energy consumption,
    location of irrigators, soil moisture measurements and real-time weather information.
    The farm uses Schneider Electrics’s EcoStuxture IoT architecture17 which corresponds
    to our physical layer and sensors. It also utilizes Microsoft Azure18 IoT suite
    with communication provided by the Vodafone New Zealand cellular network which
    corresponds to the cloud and network layer in out framework. Similarly, a 7,000-acre
    farm at Beltsville Area Research Center, was developed by the United States Department
    of Agriculture (USDA) to act as a testbed for smart farming technologies. The
    farm was equipped with a physical layer including sensors, drones and IoT-enabled
    farm equipment for a public-private program called Farmbeats [5]. The farm adopts
    a two-layer hybrid network: a layer based on TV White Spaces [40] technology for
    connectivity over long range which connects the farmer’s home Internet connection
    to IoT base stations on the farm, and a layer based on Wi-Fi technology which
    connects smart sensors to the IoT base stations. Such IoT base stations (gateways)
    are equivalent to the edge cloud layer (Figure 3) in our proposed general architecture.
    Additionally, the data collected at the IoT stations are pushed to the cloud layer
    which employs AI algorithms for data analysis. Another usecase is a revolutionary
    step towards smart crop health monitoring. A group of researchers19 along with
    local farmers are developing a distributed airborne monitoring system to detect
    possible zones of crop damage or nutrient deficiency at a 492-acre farm in in
    North Carolina, United States. In order to accommodate rapidly-growing food demands
    and increase the quality and quantity of agricultural production, it is necessary
    to improve farming management practices and technological developments in agricultural
    fields. Accordingly, unlike traditional crop management methods that use farmers
    or ground vehicles for assessing crop health status, this collaborative smart
    farming project is using autonomous technology to perform aerial monitoring of
    agricultural fields to save time and money, while preventing damage to crops.
    In this project, a group of drones which monitor the field are working in the
    physical layer, as depicted in Figure 3. Drones communicate with each other through
    network layer, using which they also send collected data and images to land processing
    bases (i.e. the edge layer in our proposed architecture) for initial data cleaning
    and pre-processing. Finally, pre-processed data is sent to the cloud layer for
    storing and knowledge extraction functionalities. SECTION III. Security & Privacy
    Issues The adoption of sensor based technologies and cloud supported smart applications
    in agriculture has unleashed opportunities for adversaries to orchestrate cyber
    attacks. Therefore, it is important to first understand major security and privacy
    issues in smart farming domain before discussing specific cyber attacks. In this
    section, we will elaborate these issues in detail followed by attacks in the following
    section. A. Data Security & Privacy In a smart farm, an enormous amount of complex,
    dynamic and spatial data gets generated from many heterogeneous sensors, devices
    and equipment. Leakage of such information either through unauthorized access
    or by an insider can cause potential threats. For example, leakage of agriculture
    anti-jamming devices information can help an attacker bypass these security measures,
    while leakage of soil, crop, and agriculture purchase information can cause severe
    economic losses to farmers, if such information is used by competitors or hostile
    actors. On a larger scale, aggregating important agricultural information on a
    particular country is also a potential threat. As such data security and privacy
    is a very important requirement and one of the primary objectives to ensure the
    reliable operation in a smart farming ecosystem. Data on the Edge: Smart farms
    leverage Internet of Things (IoT), state-of-the-art communications (e.g., 5G),
    and artificial intelligence. Such systems mostly require fast response times,
    than those of a traditional model in which data is transmitted to a centralized
    data center (e.g., cloud) for processing and results are returned to a user. As
    such, the need of edge cloud is on the rise. Although moving data processing and
    analytics to the edge enhances agility and efficiency, to say the least, it also
    imposes huge security risks due to the increased attack surface primarily because
    of the highly diverse use of IoT devices which are usually not built with security
    in mind. This gives attackers an easy entry point to the network since remote
    access to the edge layer, in most cases, is essential. Additionally, finding the
    IP addresses of edge endpoints become an easy task especially when considering
    websites like Shodan,20 a search engine for all IoT connected devices. Beside
    directly compromising IoT devices or edge endpoints to gain access to the smart
    farm network, an indirect attack to compromise third parties is also a potential
    risk. As an example, smart farms often use third party agronomy analytics to analyze
    the collected data which can be used in many research areas such as plant biology
    and genetics, agriculture economy, supply forecasts, and disease predictions.
    Those parties might be given direct access to smart farm data on the edge for
    real-time analytics. An attacker might phish for such third parties, compromise
    their systems and inject malicious software to redirect the data sent to external
    servers for data theft. Such attacks are very hard to detect, since attackers
    are using legitimate stolen third party credentials. B. Authorization & Trust
    In smart farming applications, connected entities including autonomous tractors,
    flying drones, on field sensors etc. communicate and interact with each other,
    and issue command and control operations to provide automated and efficient experience.
    Such communication can be direct machine to machine or via a cloud or edge assisted
    network which can support Message Queue Telemetry Transport (MQTT21), Constrained
    Application Protocol (CoAP22) or other IoT communication protocols. In either
    case, it is essential to ensure that the messages are sent from a trusted authorized
    entity, rather from a malicious adversary. This exchange of information, like
    moisture level of soil, information about crop yield, cost of fertilizer, or sensitive
    data about the livestock like health, current location, breeding decision information
    and other farm related private data sent to the cloud or to a third-party application
    must be authorized by the owner of the field or a concerned party. Livestock are
    important part of agriculture, and a big component of a farmer’s income. Sensors
    can be embedded in the cattle [41]–[43] which can monitor their health and can
    be used to remotely inject medicines or enable preventive actions from a doctor.
    Even in case of livestock purchase, buyer can be given temporary access to the
    data of an animal they are interested in, which can help them analyse it before
    purchase. As these animals are kept in monitored environments, remotely controlling
    the temperature or making adverse conditions in barn can affect the yield of animals,
    and can also result in epidemics and widespread disease. Over the air (OTA) updates
    for the equipment’s firmware must be from a trusted party, a bad software patch
    received for a critical agriculture equipment can curtail a farmer from using
    it at the needed time of harvesting and planting. Cross cloud and multi cloud
    trust models [44], [45] are needed when entities associated at different cloud
    providers interact and access data remotely. In case of a mechanic trying to diagnose
    an engine of an autonomous tractor, or a doctor trying to access data of a cattle
    located in a private cloud, trust levels need to be established so as to enable
    such access. Several access control models have been proposed for IoT [46]–[58]
    like systems, however their feasability in dynamic smart farming is still to be
    investigated. Proper authorization is needed for a farmer to issue a command,
    to a smart water sprinkler, or to fetch the latest readings from a soil moisture
    sensor. Farm rivalry can exploit such connectivity to the sensors, and may flood
    a farmer’s field, or make it parched. Usually in farms, labor is hired on a temporary
    basis mostly at the time of harvesting and sowing, therefore, temporary access
    to smart equipment can be delegated to on field workers for non-critical operations.
    It may be the case that a critical operation, like running an autonomous tractor
    on the field, or flying a drone over the field to spray pesticides may need multi
    level authorization. C. Authentication & Secure Communication One of the most
    important aspects of security and privacy in smart farming is authentication of
    connected devices. Devices need to be authenticated first in order to get connected
    to various services on a smart farming system. They are usually low power devices,
    with limited processing power, memory, and storage, so legacy public-key infrastructure
    (PKI) authentication mechanisms cannot be considered as feasible solutions. Alternatively,
    secure lightweight multi-factor authentication protocols which are offered as
    a service [13], [59] are more realistic solutions in a smart farming network environment.
    In fact, an intermediary Certifying Authority (CA) can facilitate the authentication
    of a connecting device [60]. Such authentication mechanisms do not consume devices’
    limited resources for authentication processing, but also unauthorized devices
    will be prevented from connecting and accessing the network in an efficient way
    [61]. Moreover, devices may sometime join or leave different layers of a smart
    farming ecosystem. This entails dynamic authenticated mechanisms that apply authentication
    on demand to ensure that only legitimate devices are allowed to have access to
    different services spanning over different layers. Providing end to end secure
    communication in a smart farming setting requires securing the communication between
    devices in a particular layer and also securing the inter-layer communication
    [62]. While cryptography-based solutions prove their effectiveness in securing
    both intra-layer and inter-layer communications, employing them on constrained
    IoT devices is a big concern. There are, however, limited attempts to apply lightweight
    cryptography solutions to a smart farming ecosystem [14]. Additionally, quantum-based
    cryptography for a secure end to end communication for IoT devices is under active
    investigation [63] as a futuristic solution. However, the feasibility of such
    solutions have not been evaluated in real world scenarios. D. Compliance and Regulations
    Smart farming and precision agriculture raises various legal issues, which remain
    partially unanswered. The following are some of the major issues in this area.
    1) Contracts and Agreements A smart farm involves different parties like the farmers,
    the cloud service providers, the networking infrastructure providers, to name
    a few (See Section II). These different parties need to negotiate and agree on
    various parts of contracts [12], [64]. These contracts include data privacy, security
    and intellectual property protection clauses. Data protection is essential for
    the development of smart farms and is a major part of these contracts. Such contracts
    between interested parties are crucial to protect the value and confidentiality
    of the data as an important asset. Farmers who use smart farming tools also need
    to negotiate in advance finer elements of these contracts. For example, which
    party shall be responsible in case data processing and analysis lead to wrong
    decisions affecting different downstream tasks in the pipeline. Another important
    contractual element example is the decision involving use of self-driving tractors,
    which are subject to the set of obligations applicable to self-driving cars. In
    this scenario, strong compensation and limitation of liability clauses may help
    the farmers. 2) Data Security and Privacy Farmers who deploy smart infrastructure
    fear that their data might be stolen by competitors or be publicly released. Hence,
    data security is crucial and agreements with technology providers should include
    specific clauses. Although most smart farming techniques process non-personal
    data, linking of such information to a particular personally identifiable information
    (PII) poses serious concerns [12], [64]. For example, data of livestock directly
    referring to their owner; crops conditions linked to farmers’ personal details.
    In this case, privacy clauses should be included to prohibit personal data processing
    to a certain degree. Further issues may arise when smart farming equipment, such
    as drones or tractors, have the functionality to monitor their users [12], [64].
    3) Intellectual Property (IP) An important question from a compliance perspective
    is who owns the data collected on a smart farm. This is specially important as
    data privacy laws cannot solve this issue. As per the current regulatory setup,
    data itself cannot be protected, however copyright provisions can be utilized
    to achieve high level of safeguards. Most farmers include IP protection clauses
    [64] in contracts that they create with smart farming technology providers [12].
    4) Regulatory Agriculture and livestock production is a highly regulated industry.
    Various countries across the globe have many laws, regulations, and supervisory
    authorities [65]–[67]. These touch upon specific compliance requirements for producing
    and selling of products. Such compliance can be achieved easier by using smart
    farming technology that help farmers and regulators track, audit, and inspect
    every step of the production pipeline. 5) Cyber Insurance Cyber Insurance allows
    victims to protect themselves from various cyber risks. However, cyber insurance
    policies in agriculture have lagged in the coverage of cyber incidents and events.
    Most of the current available agriculture based cyber insurances are very ambiguous
    and limited in their coverage [64]. SECTION IV. Smart Farming Ecosystem Cyber
    Attacks This section elaborates possible cyber attacks in smart farming ecosystem.
    We have categorized attacks into four different classes as shown in Figure 4.
    We have discussed data specific and network specific attacks orchestrated on smart
    farms including IoT based farming sensors. We have also explored cyber attacks
    from the supply chain side to highlight the vulnerabilities as more and more systems
    get connected to the internet and generating sensitive data. FIGURE 4. Smart farming
    ecosystem cyber attacks. Show All A. Data Attacks 1) Insider Data Leakage Farmers
    fear leakage of confidential data the most among other threats as it can be used
    against them in the commodity market. An insider (like a disgruntled employee)
    can leak such data to intentionally cause harm or sell data for money. For example,
    a former engineer at Allen and Hoshall was able to access the company’s data over
    a period of two years.23 Data this employee accessed included engineering schematic,
    project proposals, and marketing information which had an estimated value of $500,000.
    2) Cloud Data Leakage Smart farming data is very sensitive and can reveal a lot
    of confidential agriculture and economic information about the entire country.
    Cloud data centers are distributed across the world and, in some instances, virtual
    machines might be placed in data centers located in different countries. Data
    might be less secure if it is stored in data centers in other countries. These
    countries could place less strict security requirements on companies. Additionally,
    their governments might also intercept or collect that data stored on servers
    within their own jurisdictions. For these reasons, countries have started adding
    laws for sensitive data localization. For instance, China has placed a new cybersecurity
    law24 into effect in 2017 stating, among other things, that personal data must
    be stored on domestic servers. As such, companies like Microsoft, Google and Amazon
    started taking steps to transfer control of Chinese data to Chinese firms. 3)
    False Data Injection Attack In this attack, an attacker attempts to change/falsify
    data that contributes to important real-time decisions, with the assumption that
    adversary has the knowledge of the system and its configuration. For example,
    injecting false information about the soil moisture level will result in over
    watering and, in turn, damaging the crops. 4) Misinformation Attack In this attack,
    the aim is to endanger data integrity. An attacker may release false data about
    a smart farm claiming the outbreak of a disease in crops or livestock. Such false
    data reports mimic the form of an actual report released by the targeted smart
    farm. As a result, it will take a lot of time, effort and money to prove that
    the released report is false. B. Networking and Equipment Attacks 1) Radio Frequency
    (FR) Jamming Attack In many cases, smart farming equipment rely on radio frequency
    communication, like cellular or satellite networks. A smart farming equipment
    often use global navigation satellite systems (GNSS) to improve efficiency with
    products and techniques such as path planning, auto steering, seeding and spray
    rates. GNSS is achieved by combining GPS with real time kinematics (RTK) technology
    to enhance the precision of real-time position data. Attackers may jam GNSS for
    malicious purpose by deploying many distributed low power jammers to disrupt GNSS
    over wide areas and, in turn, prevent smart farming equipment from functioning
    properly. 2) Malware Injection Attack One of the most prevalent threats to smart
    farming is malware injection attack [68], where an attacker injects a malware
    into a connected smart device. Malware is a very common threat in large scale
    systems since, in most cases, it acts and propagates through the system automatically,
    hence making it a very attractive target to attackers. Precision agriculture is
    being adopted widely, meaning that more farms are connected to the internet. Typically,
    most of these farm deployments use similar software components (e.g., usage of
    LoRa25 and ZigBee26). As a result, a malware that infects a particular smart farm
    will most likely infect other farms with similar deployments. The damage caused
    by malware comes in many shapes and types. Malware can steal information about
    the consumption of agricultural materials, purchase information of fruits, vegetables
    and livestock, data about agricultural machinery etc. It can also recruit smart
    devices as part of a botnet which will be used for committing malicious acts controlled
    by an attacker. Further, malware can hinder the functions of physical smart equipment
    which, in turn, can have a devastating effect on a particular crop harvest or
    farm area. 3) Denial of Service Attack IoT devices used in smart farming environments
    can always be used to launch large scale denial of service (DoS) attacks [69]
    similar to what happened in 2016 using Mirai botnet [70]. In that occasion, an
    army of dummy CCTVs was exploited to launch one of the biggest DoS attacks that
    happened recently. There are usually a large number of inter-connected nodes and
    groups in a farm, and thus, similar type of attacks are possible in context of
    smart farming. These attacks not only can disrupt normal functions of different
    modules in an individual farm but also can be leveraged to interrupt legitimate
    cyber services in other domains. 4) Botnet With IoT everything is capable of getting
    connected to the internet. In smart farming ecosystem, there are many IoT related
    devices at each architectural layer. These devices are prone to attacks and can
    then be controlled by a central malicious system. This forms a so called ‘Botnet
    of Things’ [71]. A zombie army of infected farm IoT devices [72] can easily be
    used to infect many other networks through different mediums and hence a smart
    farm may turn out to be an internet of vulnerabilities for cyber criminals. Smart
    farm devices are not built with security as a concern and even if they do, users
    usually neglect the basic steps of setting adequate cybersecurity defense mechanisms.
    5) Side Channel Attack Attacks which have their roots in gaining information from
    how a system is implemented rather than what weakness exists in the system implementation
    are called side channel attacks. Smart farming is one of the IoT use case and
    hence it inherits some common IoT vulnerabilities including side channel attacks
    [73]. In such attacks, there are different channels which can be exploited by
    attackers. In timing channel attacks, for example, computation time along with
    cache miss and cache hit timing patterns are among those attacks vectors which
    can be exploited by adversaries. Hardware glitching in forms of voltage fluctuations
    and variances in system clock period during execution tasks are other possible
    attack channels. Other channels for launching a successful attack are power consumption
    patterns, possible electromagnetic leaks or even sound and acoustic channels.
    C. Supply Chain Attacks The entire agriculture ecosystem and the notion of ‘farm
    to plate’ involves several entities which work in tandem to provide quality food
    to the end consumer in a just-in time environment. This supply chain system [74]
    starts from the farm, which produces raw material that, in turn, is stored and
    processed by the food industry. The processed food is packed and sent to distribution
    retailer from where the end customer purchases processed goods. With IoT technology
    at each stage of the supply chain, it introduces potential cybersecurity threats
    since a security breach in just-in-time distribution system could also have a
    serious cascading effects on the entire supply chain. The massive scale of attacks
    like WannaCry27 ransomware, and the recent spate of ransomwares in cities28 across
    the US, suggest that even a breach or data freeze at a single inter-dependent
    entity will be enough to disrupt the whole chain and possibly the economy of a
    country. An attack on the agriculture equipment and fertilizer provider companies
    could potentially disable critical connected machinery needed at a prime time.
    It could manipulate the amount of nutrients in the fertilizers [64] which could
    seriously destroy the crops rather than nourishing them. The smart devices can
    be infected by malware which are controlled and commanded remotely. In such a
    scenario, large scale attacks can be orchestrated on all the smart farms utilizing
    those compromised machinery resulting in massive disruption in the sector. Needless
    to say that the suppliers of such machinery might loose trust and confidence of
    their customers. Such smart machinery needs dynamic calibration to determine the
    distance at which seeds need to be planted or the amount of fertilizers to be
    sprayed based on historical crop data. This calibration related information is
    uploaded in the machine software over-the-air (OTA), which suggests that deliberate
    uploading of false information to the machine software can have larger scale impact.
    US Foods29 has more than 250,000 customers which purchase supplies, will be affected
    badly if US Foods IT infrastructure is hit by a ransomware or a cyber attack disrupting
    its computer assisted facility and impacting critical processes. Temperature and
    conditions under which the produce is transferred is an important factor to maintain
    the freshness of the product. Smart monitors ensure that products are processed
    and packed at appropriate temperatures. Adversaries can manipulate these sensor
    readings or issue a command to change the temperature that could result in inappropriate
    temperature conditions for produce, which can impact the end consumers as well
    as the entire supply chain. These attacks are not limited to direct stakeholders,
    but for example, contaminated water from a compromised water treatment facility
    used in irrigation can destroy the whole crop field. Even attacks on smart grid
    due to sudden surge in demand and grid overloading can result in blackout which
    in-turn can spoil the stored produce in large storage houses, inducing huge losses
    to the supplier. Blockchain30 based solutions have been proposed to ensure the
    provenance of the food products in the chain, which offers transparency and assure
    quality of the food. However, the entire cost to use this system will not be clear
    unless widely adopted [75]. Smart farming goes beyond agriculture where livestock
    sector is also considered an important part. An attack on this sector can also
    have massive disruptions, where a malicious actor can publish false data about
    a disease outbreaks or unapproved genetic modifications of crops. Similarly, sensors
    and smart devices in the buildings where these livestock are kept can be attacked
    or altered to change the temperature, which can put to harm the entire livestock
    on the farm. Also, for livestock feed products, if an IT system monitoring the
    ingredients of the feed is compromised, it can potentially lead to wide-spread
    contamination in livestock which can easily reach humans as well. D. Other Relevant
    Attacks 1) Compliance and Regulation Food production and farming are a highly
    regulated industry with different countries having multiple national agencies
    monitoring food production. In the United States, Environment Protection Agency
    [65] and the Department of Agriculture [66] enforce various regulations and industry
    standards. In the European Union, Department of Agriculture and Rural Development
    [67] undertakes this responsibility with similar authorities in other countries.
    These federal authorities issue compliance directives to ensure quality food production.
    With the advent of smart farming technology these agencies are relying more and
    more on data produced by farm based sensors. An adversary attacking a smart farm
    can specifically inject false data that will then impact various compliance certification
    processes. This certification process if invalidated, can impact a nation’s food
    supply, affect crop price, etc. The complex smart farming ecosystem, creates a
    broad attack surface that needs to be protected to ensure data integrity. 2) Cyber
    Terrorism The increased use of digital interconnected system in agriculture sector
    brings new opportunities for terrorists to attack places that previously were
    too remote or difficult to strike. Cyber terrorism is a relatively low-cost venture
    with high payoff potential, making the risks of agro-terrorism too large to ignore.
    Therefore, it is important to find solutions that guarantee trust and transparency
    within smart farming concept, as well as protect critical resources. 3) Cloud
    Computing Attacks Cloud is a very diverse, decentralized, heterogeneous and powerful
    ecosystem. The enormous amount of distributed resources make the cloud a hard
    target. However, with the introduction of new cloud concepts (e.g., on-demand
    services, auto-scaling, and self provisioning), attackers have used such resources
    in their favor and, in turn, cloud has become one of the most desirable targets
    to attacker. For example, with the introduction of auto-scaling in cloud, a large
    part of the virtual machines hosted on cloud are similarly configured. If one
    of the virtual machines is vulnerable, it is highly likely that all auto-scaled
    virtual machines are vulnerable as well. As such, a malware that infected one
    virtual machine can propagate to other virtual machines quickly. The infected
    machines can be employed as a part of global botnets which, consequently, can
    be used to launch a large scale distribute DoS (DDoS) attacks enough to hinder
    the functionality of cloud. For example, in 2018, a large scale DDoS attack was
    launched on github resulting in a record-breaking sudden traffic increase to 1.35
    terabits per second. Inevitably, DDoS attacks are becoming more frequent, more
    powerful and more sophisticated. A large scale DDoS attack with an overwhelming
    number of requests, packets or messages can deny services to smart farms, thereby
    paralyzing the brain of smart farms. Further, DDoS attacks might not be specifically
    targeting smart farms’ virtual machines. Even though, an attack might be directed
    at a different target, if virtual machines used by smart farms are on the save
    physical server, it will naturally block off other’s traffic as well. SECTION
    V. Existing Research Table 1 summarizes state-of-the-art research, challenges
    and contributions with respect to security and privacy issues in smart farming.
    We have categorized the literature into different subsections based on the focus
    areas they address. TABLE 1 Projects and Research Addressing Cybersecurity in
    Smart Farming A. Cyber Attacks, Threats and Proposed Solutions Researchers and
    federal agencies have started gauging the impact cyber-attacks as more and more
    farmers and communities are adopting technologies in the farms. The U.S. Department
    for Homeland Security released a report [12] which emphasizes the importance of
    precision agriculture (PA) and associated cybersecurity threat and potential vulnerabilities.
    The report highlights the confidentiality, integrity, and availability model of
    information security in farming. It defines different technologies involved in
    PA including in-farm devices, location and remote sensing technologies, machine
    learning, etc. It briefly discusses the impacted groups by the misuse of technologies
    in farming including farmers, livestock producers, and also industries that support
    or rely on agriculture. This report also discusses hypothetical threat scenarios
    on real life examples. Another promising work [76] highlights the vulnerabilities
    and risks due to introduction of technologies in the field of precision agriculture.
    This thesis work illustrates data collection and related empirical study, however
    falls short of security solutions in the domain. The work from Jahn [64] discuss
    implications of using smart devices in the agriculture sector. The authors make
    strong argument about how the lack of a cyber insurance framework is going to
    have a big impact on various agribusinesses. They also highlight the fact that
    a regulatory response is needed to protect the interests of farmers who adopt
    the use of smart devices. Barreto and Amaral [77] use empirical methodology based
    on the analysis of information and experiences collected in the Internet Security
    Alliance,31 the European Cyber Security Organization32 and the National Institute
    of Standards and Technology33 to highlight security challenges in smart farming.
    Some major threats discussed include security and privacy issues, social engineering,
    denial of service, cyber-espionage agroterrorism, ransomware etc. The research
    also highlights a security framework to enable farmers to better understand security
    implications. However, the paper is unable to discuss open research issues, and
    challenges to secure the environment without evidence of how the discussed attacks
    are orchestrated in the domain. Peer to Peer (P2P) is a network paradigm which
    has use cases in smart farming communication. The device authentication methods
    in this type of communication, however, rely heavily on public key infrastructure.
    Although the system is trustworthy, it puts unnecessary computation load on resource
    constrained smart farm IoT devices participating in a secure P2P communication.
    Accordingly, authors in [78] proposed a lightweight device authentication solution
    in which session keys and public keys are combined to expedite the encryption/decryption
    tasks. It results in a fast and light-weight authentication solution which is
    a good fit for smart farming communication purposes. Additionally, West [79] introduced
    a framework to understand vulnerabilities in emerging technologies and the use
    of such technologies in a smart-farming-specific environment. The framework goal
    is to quantify the degree to which the use of smart farming new technologies are
    vulnerable to cyber-attacks. It uses the common vulnerability scoring system (CVSS)
    for the threat prediction model assessment. The work shows the trade-offs between
    technology maturity and adaptation in the smart farming environment which can
    lead to system compromise. The approach in the paper uses three parameters: basic
    parameters, temporal parameters and environmental parameters for constructing
    a CVSS score. Basic parameters indicate the intrinsic and severity of a vulnerability,
    whereas temporal parameters indicate how a vulnerability might change and affect
    the system over time due to technical changes. Environmental parameters reflect
    the specifications of a vulnerability present in a smart-farming-specific environment.
    Although CVSS score has become a standard in the industry for understanding the
    severity of vulnerabilities and prioritizing their patches, it has some shortcomings.
    Smart farming is a diverse environment with many connected devices and systems.
    CVSS score deals with individual vulnerabilities and fails to accurately capture
    impact of connections within the entire system. B. Blockchain Related Research
    Recently, the usefulness of blockchain in domains other than cryptocurrency and
    financial transactions has been acknowledged [93]–[95]. Agriculture and food supply
    chain is one of the domains in which blockchain technology has shown its capabilities.
    Accordingly, the authors in [81] study overall implications, challenges and potential
    of existing blockchain-based projects in the field. Besides, it critically reviews
    maturity of such projects and elaborates on possible barriers and challenges,
    which hinder acceptability of such projects among farmers and existing cyber farming
    systems. Lin et al. [80] also focused on the use of blockchain technology for
    food safety. Authors created a system that tracks and monitors food production
    cycle, including the processes of raw materials, cultivation/breeding, processing,
    transporting, warehousing, and selling. The system also uses various IoT based
    sensors to replace manual recording and verification with sensor based verification.
    Other works [82], [84], [96] focused on providing case studies of using blockchain
    and smart contracts in smart farming. Awan et al. [82] proposed a framework based
    on IoT and blockchain technology for agriculture product tracking life cycle.
    They used smart contracts to eliminate the involvement of middlemen or third-party
    intermediaries and as such increase credibility and trust. The authors implemented
    a use case based on their proposed framework which included 120 IoT nodes and
    20 blockchain producers. Further, they validated their system based on it’s throughput
    considering different block sizes. However, this work has several drawbacks. Very
    few related works are included and comparison to other works in the literature
    is lacking. Additionally, the authors didn’t include much details about the nature
    of workload used in their experiments and they failed to add a baseline benchmark
    for the validation results for a fair comparison. Patil et al. [84] proposed a
    light-weight security framework for smart greenhouse farms based on blockchain.
    Every IoT node can elect cluster head leader which helps preventing a single point
    of failure in case an attacker targets the leader node. Additionally, the authors
    provided discussion of the security threats on their proposed framework following
    the traditional confidentiality, integrity and availability (CIA) triad model
    as well as their corresponding attacks. Although, this work is interesting, the
    framework is conceptual with no implementation or experiments. Further, the paper
    didn’t include related work nor a comparison to other proposed frameworks. Besides
    proposing blockchain-based frameworks and implementations [97], real world use
    cases of blockchain in smart farming are discussed in the blockchain research
    institute article [83]. In this work, authors explore applications of blockchain
    beyond the typical financial use cases in agriculture. Accordingly, they focused
    on three classes of applications: food safety, sustainable agriculture and the
    local economy and agriculture finance. The authors accompanied each class of applications
    with real world use cases. However, these use cases are discussed on a very high
    level aspect with no implementation details or results. C. AI and Machine Learning
    Assisted Work The advent of new age technologies such as artificial intelligence
    (AI) and machine learning (ML) not only facilitate the adaptation of advanced
    analytics in smart farming, but also create an ecosystem for improving the cybersecurity
    of services. Fusion of these technologies enable farmers to achieve higher average
    yield and better price control over their products in highly competitive markets.
    Design and implementation of a low cost IoT based security monitoring system have
    been proposed by Shabadi and Biradar [85]. The system focuses on physical layer
    of smart farming where it collects data from sensors. This data is sent to a controller
    where data is analyzed to make decisions like activating the actuators for water
    sprinkler in the farms. The proposed work is focused more on implementing the
    basic functionalities of smart farming than addressing security and privacy issues.
    It is very limited to simple threshold based decisions, like, if the soil temperature
    is above a certain threshold, then activate water sprinkler. Real time security
    monitoring for a remote farm is another current application of ML in smart farming.
    In scenarios where real time monitoring and notifications are paramount to farm
    and cybersecurity, the image(s) detected through a surveillance system can be
    processed by open-source computer vision programming supported by AI. For example,
    Abuan et al. [86] proposed a neural based face recognition system which is able
    to be invariant to changes in illumination for background and illumination conditions
    through a neural network training. The agricultural and farming industries have
    been widely influenced by the disruption of the IoT. However, the impact of the
    IoT is limited in countries with less penetration of mobile internet. The boom
    of low-power wide-area networks (LPWAN) in the last decade, with technologies
    such as LoRa or NB-IoT, has mitigated this by providing a relatively cheap infrastructure
    that enables low-power and long-range transmissions. Nonetheless, the benefits
    that LPWAN technologies have the disadvantage of low-bandwidth transmissions.
    Therefore, the integration of edge and fog computing, moving data analytics and
    compression near end devices, is key in order to extend functionality. By integrating
    AI at the local network layer, referred as edge AI, authors in [87] proposed a
    system architecture and implementation that expands the possibilities of smart
    agriculture and farming applications with edge and fog computing using LPWAN technology
    for large area coverage. In another research work [88], Support Vector Machines
    (SVM) along with Artificial Neural Networks (ANN) are used to create an integration
    platform for big data analysis for smart farming. Such a platform not only expedites
    processing huge amounts of data collected from farms and livestocks, but also
    gives smart farming stakeholders the ability to detect and respond against possible
    cyber attacks more efficiently. D. Other Relevant Literature Chi et al. [89] present
    a framework for cybersecurity approaches in precision agriculture and discussed
    challenges of using Wireless Sensor Networks (WSN) in digital virtual farms. They
    also present a framework for secure data capture. Security challenges in agrifood
    sector has been extensively discussed in [90]. The report provides an overview
    of emerging technologies in smart farming. Most smart farms are data-driven with
    respect to automating agriculture processes, decision making, and predictions.
    It also raises important questions of how important is data security? How risk
    assessment is done considering the entire supply chain? Who should take responsibility
    and who should be involved? The report serves to raise awareness addressing the
    importance of cybersecurity in agrifood sector. Authors in [98] provide an overview
    of cross-section of cybersecurity in food and agriculture sectors. They also discuss
    cyber-terrorism, policies, and plans. Spaulding and Wolf [99] detail the needs
    for educating farmers about various cybersecurity threats. Authors in [100] show
    the impact of cyber attacks on smart farming infrastructure via simulations using
    NETA with OMNET++ framework. Huning et al. [101] created a system to enable privacy
    preserving crowd sourcing techniques to estimate different smart farming parameters.
    Cybersecurity perception is also changing among farmers and agribusiness owners.
    Geil et al. [91] conducted an assessment of cybersecurity practices in the United
    States agriculture industry. Insights from their work reflect that over half of
    the respondents have been victims of a computer security incident, demonstrating
    that even individuals working in agriculture can be impacted by cybersecurity
    incidents. Cyberbiosecurity [92] is a multidisciplinary domain consists of cybersecurity,
    bio-security, and cyber-physical security. It discusses how current and emerging
    information technologies affect the cybersecurity of large portion of U.S. economy
    which is based on food and agriculture (i.e. Bio-economy). As Peccoud et al. [102]
    discuss, food and agricultural sectors are immensely diverse and require advanced
    technologies and efficiencies that rely on computer technologies, big data, cloud-based
    data storage, and internet accessibility, at the same time are vulnerable to cybersecurity
    incidents. Based on our literature review, it can be emphasised that, there is
    a dearth of security related research done in smart farming domain. There are
    numerous unanswered important security questions and open research challenges
    as discussed in the following section. SECTION VI. Open Challenges and Research
    Areas This section discusses open research challenges for improving security and
    privacy in smart farming ecosystem, as well illustrated in Figure 5. These open
    problems have been divided into four subsections as follows. FIGURE 5. Open research
    challenges and future directions for cybersecurity in smart farming. Show All
    A. Access Control, Trust & Privacy Perspective The multi-layered architecture
    discussed in section II recognizes possibilities of cyber threat challenges, which
    needs to be addressed by extending and adapting current access control foundational
    research, as well as developing sophisticated access control solutions to assist
    dynamic and agile environments in cyber-physical systems like smart farms. In-farm
    and cross farm operations need authorized interaction among sensors and labor/farmers
    working at multiple farms operating different sets of smart devices. What kind
    of operations they can do must be checked, which may require single level or multiple
    level access control depending on the risk factor associated with the operation?
    For example, consider sowing the field with autonomous tractor as compared to
    turning ON an irrigation system during the rainy season. Delegation and revocation
    of access rights to operate on a farm must be automatically performed based on
    the contract agreement, for example, in case temporary labor hired during harvesting
    season. Such access control requirements need further investigation to be adopted
    in such dynamic environment. The notion of trust can also be developed where labor
    who has worked earlier or an equipment borrowed from a ‘known’ old friend may
    have higher trust level as compared to machine and manpower hired from co-operative
    market. Self-configurable AI assisted smart access control policies need to be
    developed in a sharing-dominated CPS domain like smart farming. Cyber physical
    systems introduce the notion of virtual objects (which can be created in cloud
    or edge environment) corresponding to real physical sensors. An important challenge
    here is the location of cyber entities created as a part of connection with cloud
    or edge environments, for example, AWS device shadows34 or Microsoft Azure device
    twins.35 Research needs to determine: a) how cyber entity will move from one cloud
    (or edge) to another if the corresponding device is borrowed from one farmer to
    another? b) how the control of virtual entities will be delegated to the lending
    farmer, whether both the farmers need to use same application? c) how the applications
    will allow to delegate access for machine operation? d) Can the virtual objects
    or equipment across farms communicate with each other, whether at the physical
    level or using the virtual entities? If it is the virtual entity across different
    accounts in the same cloud provider, how such interaction will take place? In
    case it is across different cloud providers, how cross cloud and federated cloud
    environments will ensure such trust levels? Suppose in case a farmer has borrowed
    an equipment from a friend farmer, will the original owner be able to have access
    to it, or the access will be completely revoked? Is it possible to control a device
    through different remote clouds? All are relevant questions in smart farming domain.
    Further, how to establish trust mechanisms among different cloud service providers
    which the farmer is using for services and alerts? Manufacturer of the device
    may hold digital twin [103] and the cloud used by farmers will get data from on-field
    sensor and the cloud provider via pre-defined and signed negotiations. Such negotiations
    can also define what kind of data will be shared with required permissions of
    the owner farmer. Another important question is, how to establish trust between
    physical sensor objects? One approach is sensors at the same farm trust each other
    more for the shared information as compared to sensors across different farms.
    IoT and CPS specific cross cloud access controls and related security models are
    still in infancy stage and need more attention. Livestock and animals also have
    sensors embedded, which require appropriate authorized access. However, current
    literature does not provide strong access control mechanisms that can restrict
    such operations and secure critical data sharing from cattle and livestock at
    the farm. These wearable and health monitoring devices are attached to livestock
    and collect sensitive data, which can be used by adversaries to control the animal
    or even effect the sale/purchase of a cattle, for example, having the information
    about which cow is having low milk production. Efficient access controls [104]–[106]
    are needed to safeguard such sensitive data in cloud, which needs more research
    considering the spate of breaches heard every now and then. Usually in case of
    wearable IoT devices, a human which has the device controls what kind of data
    he/she wants to be shared. However, it is not in case of livestock which has a
    master (like the owner of the farm or caretaker) to decide control. Also, as a
    cattle is sold/purchased and moves from one owner to another, relevant data sharing
    security policies need to be specified and will require automatically configured
    information sharing. Studies [107], [108] have shown vulnerabilities in human
    used fitness devices, however, such studies and research are still an open challenge
    in case of livestock devices. Since data is collected from smart devices spread
    across farms, different applications require to access to this data. Consequentially,
    it is important to limit the sharing of data across applications and across nearby
    friend farmers, who may also get some value or receive alerts for their farms.
    How and when to share such information requires adaptive security policies to
    control and supervise data transferred by sensors to the cloud platform. Further,
    if data is sharing across multi cloud systems, cross cloud trust also needs to
    be addressed. Appropriate attribute based fine grained access controls [109],
    [110] and privacy preserving schemes need to be deployed to ensure confidentiality
    of the data. Evidently, farmers must decide the level and type of data sharing
    needed to ensure the privacy of critical information. B. Data Perspective The
    most noticeable feature of smart farming is its communication ability between
    the smart devices, resulting in an unprecedented amount of generated data [7],
    [111]. This provides many challenges as discussed in section III and open doors
    for several research opportunities. Machine learning is an attractive solution
    for processing big data, and implementing effective security solutions. Insider
    data leakage detection has always been a daunting task as users already have legitimate
    access to the system, making it hard to detect and predict such attacks. Several
    research works have been conducted on insider data leakage [22], [112], [113];
    however, none has been targeting smart farming settings. Further investigation
    is needed to understand the possibility of adopting insider data leakage defense
    mechanisms into smart farming and whether unique characteristics of smart farming
    can help to improve these mechanisms. Smart farms are highly connected systems,
    which allow malware to easily propagate through the network infecting all interconnected
    devices. An interesting question is how to detect malware in smart farming IoT
    environment, especially considering all heterogeneous devices in place. For instance,
    a malware detection technique that works against a malware that infects smart
    farming equipment might not work against malware that infects edge or cloud systems
    since the malware’s end goal is different. Many AI assisted malware detection
    techniques [114]–[120] are proposed and used in practice; however, there are no
    smart-farming-specific malware detection techniques that consider the context
    and environment in which smart farms reside. Smart farms generate diverse and
    vast amount of unstructured data. It is almost impossible for one party to analyze
    and make use of the entire datasets. For this reason, threat information sharing
    is a viable approach for data security. For instance, each smart farm can employ
    a malware detection technique; however, it is guaranteed that none of these employed
    techniques is comprehensive enough to catch all types of malware. Information
    sharing between smart farms can prove very useful. It can be used as an asset
    to share threat information about attack patterns or malware that was detected
    by collaborating smart farms. In a similar case, if a deployed detection technique
    in a farm detected supplied water with high toxin content, it is relevant to share
    that information with nearby farms who may also be impacted by similar issue.
    This can save analysis cost and money for every participating smart farm as it
    prevents doing work that someone else already did before. What kind of data, meta-data
    or analysis can be shared remains an open question and what kind of threat information
    sharing process can be used remain an open question for resource constrained farmers.
    Smart farming is an emerging field, so it is highly likely to encounter zero-day
    attacks which have not been detected before. Anomaly detection [121]–[125] is
    a very appealing solution against such attacks. Anomaly detection techniques look
    for any abnormal behavior that deviates from the pre-established database of normal
    behavior. These normal behaviour profiles are constructed based on collection
    of historical observations and patterns. Building smart farms behavior profiles
    is a challenging task since their behaviors are so dynamic in nature. External
    factors are a major reason for this dynamism. For example, less irrigation is
    needed during a rainy weather than dry weather which will cause a different behavior
    for irrigation systems. Can weather forecast information be used as an indication
    of such change of behavior? What kind of data contribute to building smart farms
    behavior profiles? Do some data fields weigh more than others? These are all open
    research questions that need to be investigated. Detection mechanisms are used
    to detect faulty and compromised sensors by monitoring the data sent for any tampered
    or abnormal values. Employing a simple threshold based mechanism can easily be
    bypassed by an attacker, so in most cases, more sophisticated machine learning
    based mechanisms need to be deployed. However, smart attackers can still bypass
    these models by (1) exploiting the sensors and a little tweaking of data sent
    by these sensors just to lead the machine learning model in place to misclassify/mispredict
    the outcome (such attack is called adversarial machine learning attack), and (2)
    poisoning the model during training phase by injecting bad data into the model’s
    training database, and in turn get it to learn something it shouldn’t. Some research
    addressed mitigation against adversarial attacks; however, it is not clear whether
    these technologies can be adopted to smart farming domain which is very dominant
    on changing environment conditions. Another open research challenge is to create
    various artificial intelligence systems that collect and parse Cyber Threat Intelligence
    (CTI36) about smart devices, software, cloud systems etc. used in the smart farming
    ecosystem. These systems have been developed to collect CTI in other areas [126]–[129]
    and need to be extended to ensure coverage of various smart farming devices, equipment
    and software. C. Network Perspective Cybersecurity threats to smart farming and
    its devices include a diverse range of security risks due to certain characteristics
    of the underlying networking and communication technologies which are used in
    the domain. First, both virtual and physical communication environments get connected.
    Many IoT devices in a smart farm system are capable of functioning on the data
    they receive from their respective environments which shortens the distance between
    virtual and physical systems. While convenient for the users, it allows cyber
    threats to convert to physical consequences more quickly, thereby having a bigger
    impact. Second, devices and layers involved in a smart farm system create a complex
    communication environment. Hyper connected farming environments exist due to the
    growing availability and diversity of IoT devices. ‘Complex’ in this context means
    that large number of devices are working in a single smart farm environment such
    that dynamic interactions between them are possible. This complexity expands the
    capabilities of an environment, but at the cost of a wider attack surface. Smart
    farming like other emerging technologies is embracing new networking paradigms
    to tackle today’s sophisticated attacks. Software defined network (SDN) [130]–[132]
    is one such promising networking revolution. Through decoupling control plane
    from data plane and giving credit to network programmable, it offers interesting
    technical capabilities to network providers. This causes an intense adaption of
    SDN in almost every fields of networking, from data center networks to WANs, wireless,
    5G and recently IoT. Using SDN in smart farm networking is attracting to both
    academia and industry for certain reasons. SDN supports both physical and virtual
    networking scenarios very well. It also offers a reliable way of practicing networking
    in highly diverse and naturally heterogeneous smart farms networking environment.
    Moreover, using SDN, smart farms are able to form a holistic view of all the connected
    devices along with how they interact in a near real time manner. Such a holistic
    view not only improves agility, scalability, and manageability of smart farm networking
    but also empowers a large smart farm network to enforce robust security counter
    measure against possible sophisticated cyber attacks. It is important to research
    further the adaptability of SDN and other 5G related next generation communication
    technologies in smart farming and precision agriculture domain. SDN can enable
    smart farms to get the most benefit out of complex machine learning and AI algorithms
    to automate network management of large number of sensors, wireless and wired
    networks used in a smart farming ecosystem. It also facilitates implementing advanced,
    cross-layer network security solutions which are very time and resource consuming,
    if not impossible, otherwise. Finally, SDN expedites edge networking and hence
    cloud-based security-as-a-service delivery model becomes a more approachable solution
    in large smart farming deployments. D. Compliance and Supply Chain Perspective
    With the ubiquitous use of sensors, automated drones, blockchain, artificial intelligence
    integration, different agricultural businesses are falling back on compliance,
    regulation and cyber insurance to protect themselves [64]. With the development
    of targeted malware and other cyber threats, the entire food supply chain is at
    risk [12], [64]. A hostile actor specifically interested in disrupting the supply
    chain can target various organizations and companies that supply raw material
    to farms or process food for the end user. A potential solution to this problem
    is to develop industry standards that enable trust between various raw material
    suppliers and downstream food processors [64]. The development of these standards
    enforced by national governments through regulation, has been slow. One example
    of such a shortcoming, is the existence of a few cybersecurity standards for the
    many smart devices used in the food supply chain. Various legislation are being
    introduced to set ‘minimal cybersecurity operational standards for internet connected
    devices’. In specific cases where various governments do not wish to regulate
    these interactions, it is up to various agriculture businesses to protect themselves
    by asking their supply chain to ‘self-regulate’ cybersecurity best practices [64].
    Such developments can be pushed through market demands, competitive pressure,
    etc. The food supply chain also lacks robust cyber insurance policies. With the
    constant development of smart applications, AI, smart farming equipment, etc.
    cyber insurance providers are unable to predict and quantify various cyber risks
    involved in these systems. Specific research needs to be done so as to develop
    standard legal jargon and metrics to quantify cyber risk in smart farming. These
    will help create robust cyber insurance markets for precision agriculture. Various
    systems [133]–[136] also need to be built to make it easier for the end users
    to understand and parse these complex legal documents, cyber insurance policies,
    agreements, contracts, etc. Research on these open challenges will help wide adoption
    of precision agriculture technologies. SECTION VII. Conclusion The proliferation
    of smart devices with communication and sensing capabilities have unleashed plethora
    of user services, and at the same time made tasks more convenient and efficient
    for humans. However, wide adoption of such internet connected devices and data
    driven applications across various domains have raised security and privacy issues,
    making these systems vulnerable to cyber-attacks. This paper discusses such cybersecurity
    challenges in smart farming and elaborates open research questions. The paper
    first outlines a multi-layer smart farming architecture illustrating different
    entities pertinent to real time use-cases supported by edge and cloud environments.
    Based on the architecture, the paper outlines security and privacy issues and
    highlights different attacks scenarios in smart farms as well as scenarios affecting
    the entire food supply chain. Thereafter, this article surveys the state-of-the-art
    research and acknowledges important works related to cybersecurity in the domain.
    Finally, the paper illustrates several open challenges and research problems pertinent
    to security and privacy aspects in precision agriculture. We envision this paper
    will simulate research to solve platitude of security and data privacy issues
    in fast growing and economically important smart farming sector. ACKNOWLEDGMENT
    The authors would like to thank Dr. B. Leckie, Associate Professor in the School
    of Agriculture at Tennessee Technological University, for his domain expertise,
    insightful comments, and suggestions, to make this manuscript more comprehensible.
    (All authors contributed equally to this work.) Authors Figures References Citations
    Keywords Metrics Footnotes More Like This Enhanced real time system of evoting
    using finger print 2013 International Conference on Electronics, Computer and
    Computation (ICECCO) Published: 2013 Control and Communication Challenges in Networked
    Real-Time Systems Proceedings of the IEEE Published: 2007 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09003290.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Security and Privacy in Smart Farming: Challenges and Opportunities'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2018.2890507
  analysis: '>'
  authors:
  - Khaled Salah
  - Muhammad Habib ur Rehman
  - Nishara Nizamuddin
  - Ala Al-Fuqaha
  citation_count: 594
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Personal Sign In * Required *Email Address *Password Forgot Password?
    Sign In Don''t have a Personal Account? Create an IEEE Account now. Create Account
    Learn more about personalization features. IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08598784.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Blockchain for AI: Review and Open Research Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s11277-016-3845-0
  analysis: '>'
  authors:
  - Slavica Tomović
  - Kenji Yoshigoe
  - Ivo Maljević
  - Igor Radusinović
  citation_count: 142
  full_citation: '>'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Wireless Personal Communications
    Article Software-Defined Fog Network Architecture for IoT Published: 24 October
    2016 Volume 92, pages 181–196, (2017) Cite this article Download PDF Access provided
    by University of Nebraska-Lincoln Wireless Personal Communications Aims and scope
    Submit manuscript Slavica Tomovic, Kenji Yoshigoe, Ivo Maljevic & Igor Radusinovic  3874
    Accesses 139 Citations Explore all metrics Abstract Rapid increase in number and
    diversity of Internet-connected devices raises many challenges for the traditional
    network architecture, which is not designed to support a high level of scalability,
    real-time data delivery and mobility. To address these issues, in this paper we
    present a new model of Internet of Things architecture which combines benefits
    of two emerging technologies: software-defined networking and Fog computing. Software-defined
    networking implies a logically centralized network control plane, which allows
    implementation of sophisticated mechanisms for traffic control and resource management.
    On the other hand, Fog computing enables some data to be analysed and managed
    at the network edge, thus providing support for applications that require very
    low and predictable latency. In the paper, we give detailed insight into the system
    structure and functionality of its main components. We also discuss the benefits
    of the proposed architecture and its potential services. Similar content being
    viewed by others RETRACTED ARTICLE: A Review and State of Art of Internet of Things
    (IoT) Article 14 July 2021 IoT Reference Model Chapter © 2013 Internet of Things
    (IoT), Applications and Challenges: A Comprehensive Review Article 28 May 2020
    1 Introduction Advances in wireless communications and micro-electro-mechanical
    systems (MEMS) have enabled the rapid evolution of smart devices connected to
    the Internet. This evolution inspired the idea about the Internet of Things (IoT)—a
    large-scale cognitive system in which wide variety of “things” could contribute.
    The definition of “thing” is very flexible, and may refer to: intelligent machines,
    drones, self-driving cars, sensor nodes measuring parameters such as temperature
    and humidity, actuators that turn on and off devices or make adjustments in real
    time, and much more. Thus, the exponential increase in the volume and variety
    of data is expected, creating a significant burden for the Internet architecture
    [1]. Adding more resources to provide enough capacity cannot be economically justified
    in the long-run. The major scale issue is not the volume of traffic, but the type
    and cadence of data delivery. IoT devices are often configured to send regular
    updates throughout the day, which may cause a tsunami of connections and data
    at periodic intervals. Regular surges of traffic may surpass baseline or average
    traffic by a significant multiple of existing traffic patterns, so high level
    of resource over-provisioning could be required for stable operation. To avoid
    this, service providers need mechanisms that can satisfy the bandwidth demand
    of IoT applications by efficiently utilizing the existing infrastructure. That
    is hard to achieve with distributed control plane in traditional network architectures,
    since a global view of the network state is lacking. Another challenge is low-latency
    handling of time-critical tasks such as analysis and decision-making. For example,
    network latency could badly affect traffic management application which requires
    real-time detection of the congested sites. On the other hand, emerging augmented
    reality applications (e.g. Google Glass, Sony SmartEyeGlass and Microsoft HoloLens)
    have to process real-time video, voice and sensor measurements in order to finally
    output informational content on displays [2]. Without almost deterministic response
    time utility, adoption of this technology is questionable. In general, because
    of a loosely controlled nature of the Internet many QoS (Quality of Service) issues
    are still unresolved. In this paper, we propose the use of SDN (Software Defined
    Networking [3]) to alleviate resource contentions in IoT environment and improve
    overall IoT performance. SDN is a relatively new paradigm for communication networks,
    that implies separation of the forwarding and the control functions. Network intelligence
    is moved to logically centralized SDN controller, which maintains a global view
    of the network, interacts with data-plane devices and provides a programming interface
    for network management applications. The potential of this concept reflects in
    the fact that traffic engineering and resource management can be performed more
    efficiently in centralized system having insight into applications’ requirements
    and all resources available. To address the applications that require mobility
    support and low-delay, the proposed IoT architecture integrates SDN with Fog computing
    [4]. Although the benefits of the both technologies have been widely recognized
    within the research community, there are still many challenges that hinder widespread
    acceptance of them. Therefore, this paper targets to explain how SDN and Fog computing
    could be efficiently combined together to compensate each other deficiencies.
    In particular, the proposed IoT architecture aims to solve the problem of Fog
    orchestration with SDN, as well as scalability issues of SDN with Fog computing.
    The rest of the paper is organized as follows. Section 2 provides brief background
    on traditional IoT architecture and related challenges. Section 3 introduces the
    basic ideas of SDN and Fog computing and then describes the components and operation
    model of the proposed architecture. A few use cases that would especially benefit
    from the proposed architecture are discussed in Sect. 4. Section 5 concludes the
    paper. 2 IoT: Current State and Challenges The IoT paradigm is based on various
    kinds of smart devices with communication and networking capabilities, embedded
    in the environment around us. According to CISCO forecasts the number of Internet-connected
    devices overtook the human population in 2010, and will be about 50 billion by
    2020 [5]. Although these devices mostly have low bandwidth demands, the overall
    result is enormous amount of data which have to be stored, processed and presented
    in a seamless, efficient, and easily interpretable form [6]. Figure 1 illustrates
    the common organization of today’s IoT architecture from a high level perspective.
    Four main components involved are: sensing devices (things), the local communication
    network, the Internet Cloud and back-end IoT applications. Sensing devices gather
    data from the physical environment. These data are later used by IoT applications
    (e.g. smart transportation, healthcare, precision agriculture, video surveillance,
    etc.) to provide a desirable service to end customers. Since IoT devices are in
    general characterized by very limited memory and computational resources, IoT
    application usually takes advantage of services offered by the Cloud for data
    storage and processing. To reach the Cloud, sensing devices rely on different
    communication technologies. Those more powerful connect directly to cellular network
    (3G or 4G), or use Wi-Fi/Ethernet connectivity to the Internet gateway. However,
    these communication models require a fair amount of power that myriad devices
    cannot afford (e.g. battery operated devices). For the short range communication
    between energy-deficient devices, some other options are more convenient, such
    as Bluetooth, ZigBee or NFC (Near-Field Communication). Once the raw data generated
    by one or more sensing sources are appropriately processed in the Cloud, the useful
    information are finally delivered to the end user. That may be commercial or an
    industrial user, or another device in M2M (Machine-to-Machine) workflow. Fig.
    1 Traditional IoT architecture Full size image Cloud offers scalable and cost
    effective solution to deal with data produced by IoT. Its virtually unlimited
    resources compensate technological limitation of IoT devices (e.g. storage, processing
    and energy) and enable analysis of unprecedented complexity [7]. Also, “pay-as-you-go”
    Cloud computing model is a more convenient alternative to owning and managing
    private data centres (DCs) if consider deployment and operational expenditures.
    However, existing Cloud services are originally designed for classic Web applications,
    which are not significantly affected by the distance between the edge devices
    and DCs. On the other side, many emerging IoT applications require real-time interaction
    and mobility support (e.g. smart traffic lights and target tracking systems),
    which makes network latency an important limiting factor. Latency introduced in
    the network is not only a consequence of long distance between IoT devices and
    the Cloud. It is also caused by queuing delay, which is non-negligible on the
    congested links. The impact of queuing delay could be reduced if traffic load
    is evenly distributed over the network. Unfortunately, dynamic routing is considered
    rather risky than beneficial in existing Internet architecture characterized by
    the distributed control plane [8]. Moreover, the simple shortest path routing
    model is still dominantly deployed. Dedicated mechanisms for connectivity control
    are also lacking. This must be resolved in order to fully exploit the opportunities
    offered by heterogeneous access networks in IoT environments. 3 SDN-Based Model
    of IoT System In order to address previously discussed challenges, in this Section
    we propose a new model of IoT architecture based on two emerging technologies:
    SDN and Fog computing. We will briefly present basic ideas of these networking
    paradigms, and then explain how they are combined together and envisioned to operate
    in the proposed system model. 3.1 Software Defined Networking In traditional telecommunications
    networks the control and the data plane are implemented in each networking device.
    The control plane carries signalling traffic, performs route calculation, system
    configuration and management. It contains all the logic that controls the behaviour
    of the network. On the other hand, the data plane is focused only on the transport
    of packets towards their next destination. The network itself basically could
    be seen as a distributed entity that connects diverse independent and autonomous
    devices. Network management is done at very low level, and once forwarding policy
    is defined, the only way to make an adjustment to the policy is via manual configuration
    of the devices. This limits ability to introduce new services in the network or
    to adapt the network behaviour to varying application requirements and load condition
    [9, 10]. Novelty introduced with SDN is clear separation of the control and the
    data plane. SDN control plane is placed on a logically centralized controller,
    which maintains a global view of the network, interacts with simple forwarding
    devices and provides a programming interface for network management applications
    (Fig. 2). In this way, SDN allows network managers to configure and optimize network
    resources dynamically via automated programs [3]. The communication between SDN
    controller and the data plane devices is commonly achieved via OpenFlow protocol
    [11]. The controller pro-actively or reactively instructs the data plane devices
    (OpenFlow switches) how to identify and treat different traffic flows in the network.
    When OpenFlow switch receives the instructions for specific traffic flow, it is
    able to handle packets belonging to the flow without further interaction with
    the controller until validation time for the instructions expires. Note that SDN/OpenFlow
    architecture described above is originally designed for DC and WAN (Wide Area
    Network) networks. However, the need for similar technology in 5G mobile networks
    has been widely recognized by the research communities [9, 12, 13]. Fig. 2 SDN
    architecture Full size image 3.2 Fog Computing Fog computing is an emerging technology
    that brings data processing, storage and analytics closer to the network edge.
    It has many mechanisms and attributes in common with Cloud computing, however,
    Fog can be distinguished from Cloud by its proximity to end-users, the dense geographical
    distribution and its support for mobility [4]. Figure 3 illustrates the position
    of Fog computing in IoT systems. It is obvious that Fog cannot substitute the
    Cloud, but complements its services by introducing a new intermediate layer composed
    of geo-distributed Fog nodes. Each Fog node is highly virtualized platform hosted
    on dedicated computing node equipped with communication interface, or resource-poorer
    device such as set-top box, access point, router, switch, etc. Data collected
    by IoT sensing devices are not send directly to the Cloud server for processing.
    Instead, they are sent to nearby Fog node in order to obtain fast and high-rate
    service. However, Fog node can filter out non-actionable data (e.g. regular sensor
    measurements) and send them to the Cloud for long-term storage and batch analytics.
    The Cloud is a natural place to run global analytics on data collected from widely
    distributed devices over long periods (months, years) [1, 14]. Fig. 3 The role
    of Fog layer in IoT architecture Full size image Fog computing does not only enhance
    QoS (Quality of Service) for a large number of IoT applications, but also may
    significantly reduce bandwidth consumption in the backbone network. Consequently,
    the users could be benefited from the reduced service costs [15]. This vision
    has been recently made possible by Cisco IOx platform, which combines open-source
    Linux and Cisco IOS network operating system together in a single networked device
    (router, switch or IP camera). Linux transforms the underlying device to mini-computer
    that can host third party applications on virtual containers and analyse data
    locally in real time [16]. 3.3 The Proposed System Design This section describes
    a model of IoT architecture which takes advantage of SDN and Fog computing paradigms.
    The proposed solution is inspired by recent works on these topics [1, 17–20].
    However, while each of them is either focused only on one of the technologies
    or considers their application in VANET (Vehicular Ad-hoc NETwork) networks, we
    analyse the generic IoT scenario where features of both technologies are combined
    together in one integrated system. Figure 4 shows the system structure which involves:
    end devices with multiple wireless communication solutions, SDN controllers, heterogeneous
    Fog infrastructure (virtualized servers, routers, access points, etc.) and Cloud
    in the network core. Since IoT applications may be geospatially distributed, we
    assumed hierarchical deployment of Fog network. As illustrated in Fig. 5a, Fog
    nodes expose a set of APIs (Application Programming Interfaces) for application
    deployment and development, resource management and control. These APIs allow
    seamless access to hypervisors, various operating systems and service containers
    on a physical machine [1]. Also, they enable remote monitoring and management
    of physical resources such as CPU, memory and network interfaces. Development
    of IoT applications using hierarchically deployed and heterogeneous Fog resources
    could be simplified by adopting Mobile Fog programming model [20]. Mobile Fog
    runs the same application code on various devices of the heterogeneous Fog infrastructure.
    The application consists of multiple processes that perform different tasks with
    respect to the device capabilities and position in the network hierarchy. For
    example, tasks of large-scale video surveillance application may be organized
    in three levels: motion detection at IP camera, face recognition at edge Fog nodes
    and aggregation of identities at Cloud server [20]. It is assumed that each of
    the devices has information about its geophysical location. Thus, although all
    of them run the same code, each one is aware of its particular tasks. Fig. 4 SDN
    architecture for IoT based on Fog computing Full size image A major challenge
    imposed by Fog concept refers to service orchestration. The orchestration involves
    automated instantiation, replication and migration of service instances on a large
    volume of Fog nodes with a wide range of capabilities. As discussed earlier, many
    IoT applications deal with dynamic workload due to periodic or event-driven data
    delivery models. In an ideal case, applications should be transparently scaled
    at the runtime without resource over-provisioning. In order to achieve that, we
    propose logical centralization of orchestration functionality at SDN controller.
    The design of SDN controller is modified compared to traditional one used in DC
    networks. As illustrated in Figure 5b, its role in IoT system is threefold: 1.
    Fog orchestration. 2. Injection of routing logic into SDN-enabled network elements.
    3. Optimal selection of access points for IoT devices (i.e. radio access network
    management). Fig. 5 Structure of the Fog node (a), SDN controller (b) and wireless
    end device [19] (c) in the proposed architecture Full size image To perform above
    tasks efficiently the controller needs an up-to-date view of the system. For this
    reason, it collects and maintains information about: Features of Fog nodes in
    the controlled domain, such as: available RAM, secondary storage, running Operating
    Systems and software applications [1]. Capabilities, state and interconnectivity
    of the network elements, including: wireless technology of the access points (e.g.
    3G/4G, LTE, Wi-Fi etc.), links capacity and residual bandwidth, the flow table
    content and neighbour list of each network node. Characteristics of the connected
    smart devices, such as: supported radio access technologies and types of services
    the devices are requesting. In order to obtain up-to-date information about topology
    of the ad-hoc connected devices, link layer mechanism in each device could be
    used to periodically broadcast beacon messages for learning neighbour’s information.
    Beside neighbour lists, for the purpose of high-mobile vehicular applications,
    the controller may also store road map of the environment and information regarding
    the position and speed of the vehicles involved [19]. The Fog orchestration is
    performed according to business polices defined by application service providers.
    For example, the policies may specify: requirements in terms of computing and
    memory resources, requirements in term of bandwidth and delay for different classes
    of subscribers, thresholds for load balancing, privacy rules etc. [1]. These policies
    are stored in SDN controllers and the Fog nodes hosting the provider’s application.
    The end-device connects to application process running on the Fog computing instance
    that covers the location of the end-device. If the end-device is mobile and enters
    the new region, it will connect to the new Fog node that runs the same application
    process on the same level of network hierarchy as the previous one. SDN controller
    provides dynamic, policy-based management of Fog services. It can track the moving
    devices and predict their potential destinations in the near future. This enables
    seamless handover to a new Fog node at the network edge. Also, there is a possibility
    that the Fog computing instance located in the new region cannot meet QoS requirements
    of the end-user. In that case, new computing instance needs to be instantiated
    on a platform with the matching capabilities. Procedure of creating a new computing
    instance is far from trivial, because it requires: resource reservation, copying
    of application data, setting-up the instance configuration and dissemination of
    the new flow rules in the network. Therefore, the role of SDN controller is crucial
    to timely detect and react to threat of policy violation based on the up-to-date
    view of the system state. High workload can also trigger dynamic scaling of the
    application if that is specified in the business policy. For example, when a load
    balancing threshold in terms of maximum number of users, connections or CPU load
    is reached, new on-demand Fog instances could be created. To distribute the workload
    over them, SDN controller splits the coverage region of the overloaded application
    process in multiple smaller sub-regions. The number of sub-regions corresponds
    to the number of newly created Fog instances of the same process. Similarly, when
    these nearby processes at the same network hierarchy level become under loaded,
    their coverage regions are merged together into a single coverage area, and all
    the processes except one for the merged coverage are terminated [20]. Beside Fog
    orchestration, SDN controller performs traffic control as OpenFlow controller
    and connectivity management for IoT devices. Since IoT application in large-scale
    network environments (e.g. smart city applications) generate enormous amounts
    of data flows, the SDN control plane needs to be partitioned among multiple physical
    controllers to avoid scalability and reliability implications. As can be seen
    from Fig. 5, single SDN controller covers region with multiple Fog nodes because
    it is placed on a higher level of network hierarchy. The network partitions are
    interconnected by OpenFlow switches to enable exchange of data between controllers.
    This is necessary for scheduling traffic flows between IoT devices located in
    different partitions. For robustness reasons, we assumed that some control tasks
    may be delegated to local SDN agents running on Fog nodes and SDN-enabled IoT
    devices, as proposed in [18]. For example, Fog nodes at the network edge may control
    IoT device to IoT device multi-hop wireless communication in their coverage region
    based on their local knowledge and policy rules obtained from the controller.
    On the other side, the controller calculates the other routes in the system, such
    as inter-region routes and routes towards the other autonomous systems for data
    intended for the Cloud. Note that support for time-critical IoT tasks requires
    flow rules installed in advance, which reduces controller’s efficiency in resource
    allocation. However, granular traffic control offered by OpenFlow can be exploited
    to separate emergency traffic and delay-insensitive traffic. Therefore, the first
    class could be scheduled always with the highest priority over the proactively
    installed routes, while the route calculation and resource reservation for the
    other traffic class could be done in a reactive manner. The edge Fog nodes are
    envisioned to regularly inform the SDN controller about the capabilities and position
    of IoT devices that are being served. In this way, controller can build an entire
    connectivity graph and periodically run optimization algorithms to provide better
    utilization of network resources and enhance QoS. For example, if SDN controller
    discovers that the network load had become unbalanced because proactive routing
    results in traffic focusing on some selected nodes, it can start a rerouting process
    to improve network utility and reduce congestion. In addition to routing optimization,
    the controller is supposed to perform connectivity management on the time-window
    basis. Algorithm for optimal access point selection in multi-network IoT environment
    has been proposed in [22]. Such an algorithm can be implemented on SDN controller
    to perform access point assignment for set of newly joined devices based on: the
    current multi-network capacity in the controlled partition, the supported radio
    access technologies and the types of services the devices are requesting. The
    assignment process is triggered at the end of each time-window, and aims to find
    a set of access points that can satisfy bandwidth requirements of the IoT devices
    and guarantee optimal system performance. If the algorithm outputs the assignment
    configuration different than the existing one, SDN controller starts the suggested
    handover procedures between the heterogeneous access networks. An architecture
    of SDN-enabled sensor node is shown in Fig. 5c. Main component introduced in the
    architecture is a software OpenFlow switch. Application traffic always goes through
    this component before being sent, which allows the control plane elements (i.e.
    Fog nodes at the edge and SDN controllers) to identify the access of traffic flows
    into the network [19]. The number of wireless interfaces on the sensor node depends
    on services for which node is intended. Note that we considered only IP addressed
    sensor nodes as the elements of SDN data-plane. However, there are other solutions
    for implementing SDN in WSN networks as well [23, 24]. Beside SDN module, each
    sensor node runs a daemon process which implements some of the traditional ad-hoc
    routing protocols (e.g. AODV—Ad hoc On-Demand Distance Vector [25]). Both, the
    SDN control entity and the AODV daemon, have access to the node’s flow table.
    AODV process is activated when no route to the SDN control entity is known. That
    is the case when sensor node joins the network or when control communication is
    lost due to bad conditions on the wireless channel. 4 Use-Cases Rapid evolution
    of the IoT brings a number of use cases of interest that could benefit from the
    concepts of SDN and Fog computing. In this Section we chose some of them to illustrate
    the potential of the proposed system architecture. 4.1 Smart Transportation Smart
    transportation represents one of the markets of the primary importance for IoT.
    The rationale for the adoption of IoT in this field are several, from social to
    economic. Some common services refer to traffic management, safety and infotainment.
    Traffic management services analyse traffic behaviour and events in order to optimize
    overall road capacity, reduce travel time and minimize the ecological footprint
    by smartly routing vehicles and coordinating traffic lights. Safety services aim
    to reduce accidents for pedestrians and vehicle occupants. The infotainment services
    are focused on providing classic IP informative and entertaining applications
    like Web browsing, video streaming, e-mail and social networks [20]. Different
    classes of transportation services often use the same data sources (e.g. sensors
    on the roads, traffic cameras, passing vehicles and so on) and networking infrastructure.
    However, importance of each service is not the same for the end user. Therefore,
    when the network is congested traffic flows should not be treated in the same
    manner. Without mechanisms for service differentiation and ability to provide
    real-time delivery today’s IoT architecture limits efficiency of the existing
    services and hinders implementation of new ones. On the other side, with SDN and
    Fog computing both of the mentioned requirements could be met. We will elaborate
    this on the example of STL (Smart Traffic Light) system. STL systems use a large
    number of distributed sensors to measure distance, speed and direction of vehicles
    and detect the presence of pedestrian and cyclist crossing the street. Collected
    sensor measurements are mainly used for three purposes: (a) accident prevention;
    (b) detection and offloading of congested sites; (c) long-term analysis of the
    system efficiency. These three tasks are significantly different in terms of delay-sensitivity.
    The last one can tolerate delays in data delivery, while the first two require
    immediate or near real-time reaction. If all the measurement data are sent to
    the Cloud for processing, support for real-time services is very questionable.
    When STL application detects risk of vehicle collision with pedestrians and cyclist,
    to be effective, the control system has to send notification to the approaching
    vehicles within milliseconds [1]. The need for fast decision making at the network
    edge (i.e. Fog computing) is strongly emphasized in this scenario, and has been
    discussed in detail in [1]. Beside Fog computing, the presented system model can
    also exploit benefits of SDN to dynamically assign higher priority to some traffic
    flows in emergency situations, and hence guarantee low-latency. Fig. 6 Use-case
    of smart transportation Full size image Support for real-time decision-making
    provided by Fog computing could bring autonomous cars soon in reality. Tesla Motors
    and Google are investing a lot of efforts in developing a software that will allow
    “hands free” operation of the car [26]. These cars will not require human involvement
    in control of the primary driving features such as brakes, acceleration and steering.
    With Fog infrastructure at the network edge, the cars and sensing devices deployed
    along the road will be able to interact in real-time [17]. When it comes to delivery
    of infotainment services in VANET networks, it could be greatly enhanced with
    SDN technology. The most popular infotainment applications include various forms
    of audio/video streaming. Delivery of this kind of data is very challenging not
    only due to strict delay requirements, but also due to high level of mobility
    and topology fluctuations [19]. Based on road map and detailed information about
    the vehicle position, speed and moving direction, SDN controller can make timely
    decisions about deployment of new service instances at the Fog nodes. In this
    way, impact of mobility on application performance could be minimized. On the
    other hand, the proposed system architecture can help in reducing duplication
    of the streaming traffic. For example if blue and red car in Fig. 6 are requesting
    the same data stream, SDN controller has enough knowledge to make optimal routing
    decision, i.e. to use only one traffic flow from the streaming server to the red
    car, and then to serve blue car from the red car. 4.2 Video Surveillance Video
    surveillance is an important component of smart cities. Largely-distributed cameras
    in a city or along the road bring security services on a higher level, providing
    strong sense of assurance to the public. There are two advantages of using the
    proposed IoT architecture for video surveillance. The first is that SDN controller
    can make resource allocation and routing decisions based on QoS requirements.
    Thus, it will always seek for routes that can meet bandwidth requirements of video
    flows. The second advantage is that local, resource rich Fog nodes, can provide
    real-time processing of video frames and send notification to end-user when some
    event is detected. This significantly reduces bandwidth consumption in the network,
    while increases application efficiency (e.g. detection of criminal activity).
    In [21], authors proposed the hierarchical design of Fog application for vehicle
    tracking. Their application is organized in three processes which take place at
    different levels of the network hierarchy. IP camera runs the first process. If
    the camera is capable to perform motion detection, it will not send the video
    to the parent Fog node unless motion is detected. The parent Fog node is placed
    at higher level of network hierarchy, and hence have much wider scope. It runs
    process that identifies vehicles in the video scenes and detects their position
    and licence plates. If a police had issued a search for the detected vehicle,
    information about vehicle location is recorded into database and notification
    is sent to application process at the highest level of hierarchy. However, if
    the video image is not clear enough to enable detection of the licence plate number,
    the Fog node may send pan-tilt-zoom (PTZ) command to camera. Interaction with
    PTZ module requires very low latency, which cannot be provided if video processing
    is done at remote Cloud server. 4.3 Precision Agriculture Precision agriculture
    takes advantage of advanced information and communication technologies to address
    today’s agricultural issues such as the need to balance productivity with environmental
    concerns. The applications of this scenario are facilitated by ad-hoc wireless
    sensors and actuator networks (WSANs), deployed to measure/monitor specific parameters
    of the environment and enforce control decisions. The data obtained from sensor
    nodes are used by the Cloud application to make intelligent control decisions
    that should yield better and more crops through optimal application of water,
    pesticides and fertilizers. With Fog node deployed at the network edge, the local
    application instance can process the collected data, control the measurement process
    itself, the stability and the oscillatory behaviors and issue commands to actuators
    (e.g. to irrigation valves) in real-time. The Fog application can also decide
    to reject packets carrying redundant information, and send the aggregated data
    to the Cloud for long-term analysis. Local SDN controller could be run as one
    of the application on the Fog node. This application would be responsible for
    automatic configuring of WSN and optimal management of energy constrained sensor
    nodes with limited communications abilities [27]. Need for processing at the network
    edge has been more pronounced with the recent emergence of UAVs (Unmanned aerial
    vehicles) at farm market. So far, UAVs has been mostly used in agriculture to
    collect sensor data, scan plants for health problems, and locate disease out brakes.
    These information are than used by farmers to provide only the needed pesticide
    or nutrient to each plant. However, modern trends go towards multi-UAV deployment.
    Beside UAVs that perform monitoring of the crops, special types of UAVs are designed
    that can apply pesticides with very high accuracy according to spraying logistic
    [28]. Multiple simultaneously operating UAVs impose the need for centralized coordination
    of the individual tasks. In the proposed IoT architecture Fog node could play
    role of Internet gateway and UAV coordinator in the same time. It could process
    various types of multimedia and scalar data collected by UAVs, recommend optimal
    crop treatment and send control commands to aerial (UAVs robots) and ground actuators.
    5 Conclusion In this paper, we have proposed the architecture for IoT, which relies
    on two emerging technologies: SDN and Fog computing. The proposed architecture
    is designed in the way to support a high level of scalability, real-time data
    delivery and mobility. Fog computing platform is considered as the appropriate
    platform for IoT due to its capability to resolve problems related to latency
    for services that require fast analysis and decision-making. On the other hand,
    SDN introduces logically centralized control plane, which allows the implementation
    of sophisticated mechanisms for traffic control and resource management. Such
    a network design could be of vital importance to address increasing capacity demands
    in IoT environments where an enormous number of Internet-connected devices is
    expected. While the mentioned benefits have been widely recognized by the research
    community, this paper discusses the main challenges that hinder widespread adoption
    of each of the two technologies individually. The proposed IoT architecture addresses
    these challenges by combining SDN and Fog computing together in one system and
    adapting them to each other. In particular, the functionality of Fog orchestration
    is delegated to SDN controller in order to achieve higher efficiency, while SDN
    scalability issue is relaxed by delegating some controller’s tasks to Fog nodes.
    Benefits of using our proposed architecture have been illustrated by several use-cases
    that range from theoretical visions to existing services. Plan for future work
    is to design centralized control logic for orchestration of Fog services and to
    evaluate performance of the proposed solution in the appropriate simulation environment.
    References Bonomi, F., Milito, R., Natarajan, P., & Zhu, J. (2014). Fog computing:
    A platform for Internet of things and analytics. Big data and internet of things:
    A roadmap for smart environments. Springer International Publishing, 546, 169–186.
    Google Scholar   Yi, S., Li, C., & Li, Q. (2015). A survey of fog computing: Concepts,
    applications and issues. In Workshop on Mobile Big Data (pp. 37–42). Open Networking
    Foundation. Software defined networking: the new norm for networks. Web white
    Paper. Accessed 15 Feb 2016. https://www.opennetworking.org/images/stories/downloads/sdn-resources/white-papers/wp-sdn-newnorm.pdf.
    Stojmenovic, I., & Sheng, W. (2014). The fog computing paradigm: Scenarios and
    security issues. In Federated Conference on Computer Science and Information Systems
    (FedCSIS) (pp. 1–8). Cisco. The Internet of Things: How the next evolution of
    the internet is changing everything. Web white paper. Accessed 25 Feb 2016. https://www.cisco.com/c/dam/en_us/about/ac79/docs/innov/IoT_IBSG_0411FINAL.pdf.
    Fazio, M., Bessis, N., & Villari, M. (2015). Advances in service-oriented and
    cloud computing. Preface of CLIoT. Springer International Publishing, 58, 73–75.
    Google Scholar   Botta, A., De Donato, V., Persico, V., & Pescape, A. (2014).
    On the integration of cloud computing and internet of Things. In International
    Conference on Future Internet of Things and Cloud (FiCloud) (pp. 23–30). Tomovic,
    S., Prasad, N., & Radusinovic, I. (2015). Performance comparison of QoS routing
    algorithms applicable to large-scale SDN networks. In International Conference
    on Computer as a Tool (EUROCON) (pp. 1–6). Tomovic, S., Pejanovic-Djurisic, M.,
    & Radusinovic, I. (2014). SDN-based mobile networks: Concepts and benefits. Wireless
    Personal Communications, 78(3), 1629–1644. Article   Google Scholar   Tomovic,
    S., Prasad, N., & Radusinovic, I. (2014). SDN control framework for QoS provisioning.
    In Proceedings of Telecommunications Forum TELFOR (pp. 111–114). McKeown, N.,
    Anderson, T., Balakrishnan, H., Peterson, L., Rexford, J., Rexford, J., et al.
    (2008). Open-Flow: Enabling innovations in campus networks. ACM SIGCOMM Computer
    Communication Review (CCR), 38(2), 6974. Google Scholar   Trivisonno, R., Guerzoni,
    R., Vaishnavi, I., & Soldani, D. (2015). SDN-based 5G mobile networks: architecture,
    functions, procedures and backward compatibility. Transactions on Emerging Telecommunications
    Technologies, 26, 8292. Article   Google Scholar   Tomovic, S., Pejanovic-Djurisic,
    M., Yoshigoe, K., Maljevic, I., & Radusinovic, I. (2014). SDN-based concept of
    QoS aware heterogeneous wireless network operation. In Proceedings of Telecommunications
    Forum TELFOR (pp. 27–30). Mohammad, A., & Eui-Nam, H. (2014). Fog computing and
    smart gateway based communication for cloud of things (pp. 464–470). Luan, T.
    H., Gao, L., Xiang, Y., Li, Z., & Sun, L. (2015). Fog Computing: Focusing on mobile
    users at the edge. ArXiv:1502.01815v1 [cs.NI]. Peter, N. (2015). Fog computing
    and its real time applications. International Journal of Emerging Technology and
    Advanced Engineering (IJETAE), 5(6), 266–269. MathSciNet   Google Scholar   Bonomi,
    F., Milito, R., Zhu, J., & Addepalli, S. (2012). Fog computing and its role in
    the internet of things. In Workshop on Mobile Cloud Computing (MCC) (p. 1316).
    Truong, N. B., Lee, M. G., & Ghamri-Doudane, Y. (2015). Software defined networking-based
    vehicular ad-hoc network with Fog computing. In IEEE International Symposium on
    Integrated Network Management (pp. 1202–1207). Ku, I., You, L., Gerla, M., Ongaro,
    F., Gomes, R. L., & Cerqueira, E. (2014). Towards software-defined VANET: Architecture
    and services. In 13th Annual Mediterranean Ad Hoc Networking Workshop (pp. 103-110).
    MED-HOC-NET. Hong, K., Lillethun, D., Ramachandran, U., Ottenwalder, B., & Koldehofe,
    B. (2013). Mobile fog: A programming model for large-scale applications on the
    internet of things. In ACM SIGCOMM workshop on Mobile cloud computing (pp. 15–20).
    Zhijing, Q., Denker, G., Giannelli, C., Bellavista, P., & Venkatasubramanian,
    N. (2015). A software defined networking architecture for the Internet-of-Things.
    In IEEE Network Operations and Management Symposium (pp. 1–9). Wu, D., Arkhipov,
    D., Asmare, E., Qin, Z., & McCann, J. (2015). UbiFlow: Mobility management in
    urban-scale software defined IoT. In Proc. of the 34th IEEE Conference on Computer
    Communications (pp. 208–216). INFOCOM. Luo, T., Tan, H.-P., & Quek, T. (2012).
    Sensor OpenFlow: Enabling software-dened wireless sensor networks. IEEE Communications
    Letters, 16(11), 1896–1899. Article   Google Scholar   Costanzo, S., Galluccio,
    L., Morabito, G., & Palazzo, S. (2012). Software defined wireless networks: Unbridling
    sedans. In European Workshop on Software Defined Networking (p. 16). EWSDN. Perkins,
    C., Belding-Royer, E., & Das, S. (2003). Ad hoc on-demand distance vector (AODV)
    routing. IETF. RFC 3561. Accessed 15 Feb 2016. Tesla Motors. Web page. Accessed
    15 Feb 2016. http://my.teslamotors.com/it_IT/forum/forums/elon-musk-talks-google-bring-driverless-tech-tesla-cars.
    Tomovic, S., & Radusinovic, I. (2015). Performance analysis of a new SDN-based
    WSN architecture. In Proc. of 23Rd Telecommunication Forum TELFOR (pp. 99–102).
    Robodrone. Web page. (2016) http://www.robodrone.com/. Accessed 15 Feb. Download
    references Acknowledgments This work has been supported by the EU FP7 project
    Fore-Mont (Grant Agreement No. 315970 FP7-REGPOT-CT-2013) and the BIO-ICT Centre
    of Excellence (Contract No. 01-1001) funded by Ministry of Science of Montenegro
    and the HERIC project. Author information Authors and Affiliations Faculty of
    Electrical Engineering, University of Montenegro, Podgorica, Montenegro Slavica
    Tomovic & Igor Radusinovic Donaghey College of Engineering and Information Technology,
    University of Arkansas, Little Rock, Arkansas, USA Kenji Yoshigoe TELUS Communications,
    University of Toronto, Toronto, Ontario, Canada Ivo Maljevic Corresponding author
    Correspondence to Slavica Tomovic. Rights and permissions Reprints and permissions
    About this article Cite this article Tomovic, S., Yoshigoe, K., Maljevic, I. et
    al. Software-Defined Fog Network Architecture for IoT. Wireless Pers Commun 92,
    181–196 (2017). https://doi.org/10.1007/s11277-016-3845-0 Download citation Published
    24 October 2016 Issue Date January 2017 DOI https://doi.org/10.1007/s11277-016-3845-0
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Internet of things SDN Fog computing Use our pre-submission
    checklist Avoid common mistakes on your manuscript. Sections Figures References
    Abstract Introduction IoT: Current State and Challenges SDN-Based Model of IoT
    System Use-Cases Conclusion References Acknowledgments Author information Rights
    and permissions About this article Advertisement Discover content Journals A-Z
    Books A-Z Publish with us Publish your research Open access publishing Products
    and services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.222 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature'
  inline_citation: '>'
  journal: Wireless Personal Communications
  limitations: '>'
  pdf_link: null
  publication_year: 2016
  relevance_score1: 0
  relevance_score2: 0
  title: Software-Defined Fog Network Architecture for IoT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jas.2020.1003536
  analysis: '>'
  authors:
  - Xing Yang
  - Lei Shu
  - Jianing Chen
  - Mohamed Amine Ferrag
  - Jun Wu
  - Edmond Nurellari
  - Kai Huang
  citation_count: 178
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Browse My Settings Help Institutional Sign In All Books Conferences
    Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals
    & Magazines >IEEE/CAA Journal of Automatic... >Volume: 8 Issue: 2 A Survey on
    Smart Agriculture: Development Modes, Technologies, and Security and Privacy Challenges
    Publisher: IEEE Cite This PDF Xing Yang; Lei Shu; Jianing Chen; Mohamed Amine
    Ferrag; Jun Wu; Edmond Nurellari; Kai Huang All Authors 184 Cites in Papers 6536
    Full Text Views Abstract Document Sections I. Introduction II. Development Modes
    of Smart Agriculture III. Key Technologies and Applications in Smart Agriculture
    IV. Security and Privacy Countermeasures V. Security Challenges of Smart Agriculture
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    With the deep combination of both modern information technology and traditional
    agriculture, the era of agriculture 4.0, which takes the form of smart agriculture,
    has come. Smart agriculture provides solutions for agricultural intelligence and
    automation. However, information security issues cannot be ignored with the development
    of agriculture brought by modern information technology. In this paper, three
    typical development modes of smart agriculture (precision agriculture, facility
    agriculture, and order agriculture) are presented. Then, 7 key technologies and
    11 key applications are derived from the above modes. Based on the above technologies
    and applications, 6 security and privacy countermeasures (authentication and access
    control, privacy-preserving, blockchain-based solutions for data integrity, cryptography
    and key management, physical countermeasures, and intrusion detection systems)
    are summarized and discussed. Moreover, the security challenges of smart agriculture
    are analyzed and organized into two aspects: 1) agricultural production, and 2)
    information technology. Most current research projects have not taken agricultural
    equipment as potential security threats. Therefore, we did some additional experiments
    based on solar insecticidal lamps Internet of Things, and the results indicate
    that agricultural equipment has an impact on agricultural security. Finally, more
    technologies (5 G communication, fog computing, Internet of Everything, renewable
    energy management system, software defined network, virtual reality, augmented
    reality, and cyber security datasets for smart agriculture) are described as the
    future research directions of smart agriculture. Published in: IEEE/CAA Journal
    of Automatica Sinica ( Volume: 8, Issue: 2, February 2021) Page(s): 273 - 302
    Date of Publication: 24 November 2020 ISSN Information: DOI: 10.1109/JAS.2020.1003536
    Publisher: IEEE Funding Agency: I. Introduction Agriculture is the primary industry
    in the world, and it plays an important role in social stability and economic
    development [1]. Overcoming the contradiction between the population explosion
    and the limited grain yield is a challenge that motivates an increasing number
    of studies on smart agriculture. The development of agriculture is based on both
    the improvement in productivity and the restrictions of the era, and the progress
    of science and technology drives the revolution of agriculture [2]. Fig. 1 is
    used to help readers understand the characteristics and confronted issues of agriculture
    development (from Agriculture 1.0 to Agriculture 4.0). • Agriculture 1.0: the
    traditional agricultural era (between 1784 and around 1870) dominated by human
    and animal resources, the main issue of agriculture was the low efficiency of
    operation. • Agriculture 2.0: the era of mechanized agriculture (in the 20th century),
    the main issue was the inefficient use of resources. • Agriculture 3.0: the era
    of high-speed development of automatic agriculture (between 1992 to 2017), the
    main issue was the low level of intelligence. • Agriculture 4.0: the era of smart
    agriculture (which is characterized by unmanned operations, begin at 2017) is
    mainly marked by the use of modern information technology to both serve agriculture
    and develop it intelligently. Sign in to Continue Reading Authors Figures References
    Citations Keywords Metrics More Like This Security Challenges and Solutions for
    Internet of Things based Smart Agriculture: A Review 2022 4th International Conference
    on Smart Sensors and Application (ICSSA) Published: 2022 A Survey on Internet
    of Things: Architecture, Enabling Technologies, Security and Privacy, and Applications
    IEEE Internet of Things Journal Published: 2017 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE/CAA Journal of Automatica Sinica
  limitations: '>'
  pdf_link: null
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Survey on Smart Agriculture: Development Modes, Technologies, and Security
    and Privacy Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s20041042
  analysis: '>'
  authors:
  - Laura García
  - Lorena Parra
  - Jose M. Jiménez
  - Jaime Lloret
  - Pascal Lorenz
  citation_count: 307
  full_citation: '>'
  full_text: ">\nsensors\nReview\nIoT-Based Smart Irrigation Systems: An Overview\
    \ on\nthe Recent Trends on Sensors and IoT Systems for\nIrrigation in Precision\
    \ Agriculture\nLaura García 1,2, Lorena Parra 1, Jose M. Jimenez 1,2\n, Jaime\
    \ Lloret 1,*\nand Pascal Lorenz 2\n1\nInstituto de Investigación para la Gestión\
    \ Integrada de zonas Costeras, Universitat Politècnica de València,\n46730 Grau\
    \ de Gandia, Spain; laugarg2@teleco.upv.es (L.G.); loparbo@doctor.upv.es (L.P.);\n\
    jojiher@dcom.upv.es (J.M.J.)\n2\nNetwork and Telecommunication Research Group,\
    \ University of Haute Alsace, 34 rue du Grillenbreit,\n68008 Colmar, France; lorenz@ieee.org\n\
    *\nCorrespondence: jlloret@dcom.upv.es\nReceived: 24 December 2019; Accepted:\
    \ 10 February 2020; Published: 14 February 2020\n\x01\x02\x03\x01\x04\x05\x06\a\
    \b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: Water management is paramount in\
    \ countries with water scarcity.\nThis also aﬀects\nagriculture, as a large amount\
    \ of water is dedicated to that use. The possible consequences of global\nwarming\
    \ lead to the consideration of creating water adaptation measures to ensure the\
    \ availability\nof water for food production and consumption. Thus, studies aimed\
    \ at saving water usage in the\nirrigation process have increased over the years.\
    \ Typical commercial sensors for agriculture irrigation\nsystems are very expensive,\
    \ making it impossible for smaller farmers to implement this type of\nsystem.\
    \ However, manufacturers are currently oﬀering low-cost sensors that can be connected\
    \ to\nnodes to implement aﬀordable systems for irrigation management and agriculture\
    \ monitoring. Due to\nthe recent advances in IoT and WSN technologies that can\
    \ be applied in the development of these\nsystems, we present a survey aimed at\
    \ summarizing the current state of the art regarding smart\nirrigation systems.\
    \ We determine the parameters that are monitored in irrigation systems regarding\n\
    water quantity and quality, soil characteristics and weather conditions. We provide\
    \ an overview of\nthe most utilized nodes and wireless technologies. Lastly, we\
    \ will discuss the challenges and the best\npractices for the implementation of\
    \ sensor-based irrigation systems.\nKeywords: irrigation; IoT; precision agriculture;\
    \ sensors\n1. Introduction\nThe lack of fresh water is a rising concern, particularly\
    \ in the Mediterranean countries or southern\nAsian countries such as India. Among\
    \ the countries in Europe, the Mediterranean countries are the\nmost vulnerable\
    \ to drought [1]. A connection has been established between climate policies and\
    \ water\nmanagement. Water management can be aﬀected by diﬀerent variables such\
    \ as the water demand\nfrom the diﬀerent sectors or the consequences of some degrees\
    \ of warming on hydrological resources.\nClimate change and its eﬀects are a recurrent\
    \ topic in research papers regarding water resources and\nagriculture. The possible\
    \ consequences of global warming have led to the consideration of creating\nwater\
    \ adaptation measures to ensure the availability of water for food production\
    \ and people and\nto maintain ecosystems [2]. Furthermore, the safety of the water\
    \ to be consumed by humans and\nto be returned to the environment must be ensured.\
    \ The possible risks of climate change are an\nincrease in water shortage, the\
    \ reduction of water quality, the increase in water and soil salinity,\nthe biodiversity\
    \ loss, the increase in irrigation requirements or the possible cost of emergency\
    \ and\nremediation actions. These reasons have led to an increase in the number\
    \ of studies focused on\nreducing water usage in irrigation processes. Some of\
    \ these studies suggest the implementation of\nSensors 2020, 20, 1042; doi:10.3390/s20041042\n\
    www.mdpi.com/journal/sensors\nSensors 2020, 20, 1042\n2 of 48\nsocial, economic\
    \ and climate change policies, as well as the implementation of technological\
    \ innovations\nto improve water management.\nThe agricultural sector is one of\
    \ the most important economic resources in these countries\nadding to the importance\
    \ of managing well the available water resources to ensure the continuing\nof\
    \ this economical sector. In India, 10% of the area of the country is covered\
    \ by rice plantations [3].\nFurthermore, 20% of the Indian population is below\
    \ poverty levels and 15% is food insecure. Therefore,\nlow food production aﬀects\
    \ both the population and the economy. In 2002, the monsoon season\nproduced the\
    \ least amount of precipitation in the last 130 years. That resulted in a loss\
    \ of rice production\ndue to the lack of fresh water. To determine the drought\
    \ caused by anomalies in surface water, the\nStandardized Precipitation Evapotranspiration\
    \ Index (SPEI) was utilized. These indexes and the\ninformation gathered from\
    \ sensors that monitor the environment, the soil and the water can be utilized\n\
    to determine the current state of the water and the possibility of covering all\
    \ the freshwater needs.\nCountries with higher funds are already implementing\
    \ systems for water management and water\nreuse aiming to optimize water usage\
    \ and reduce the environmental impact caused by utilizing great\namounts of water.\
    \ However, some countries may ﬁnd these solutions to be costly.\nCommercial sensors\
    \ for systems aimed for agriculture and its irrigation are very expensive,\nmaking\
    \ it impossible for smaller farmers to implement this type of system on their\
    \ farms. However,\nmanufacturers are currently oﬀering low-cost sensors that can\
    \ be connected to nodes to implement\nlow-cost systems for irrigation management\
    \ and agriculture monitoring. Furthermore, due to the\ninterest in low-cost sensors\
    \ for monitoring agriculture and water, new low-cost sensors are being\nproposed\
    \ in researches such as a leaf water stress monitoring sensor [4], a multi-level\
    \ soil moisture\nsensor comprised of copper rings placed along a PVC pipe [5],\
    \ a water salinity monitoring sensor\nmade with copper coils [6] or a water turbidity\
    \ sensor made with colored and infrared led emitters\nand receptors [7].\nDue\
    \ to the recent advances in sensors for the implementation of irrigation systems\
    \ for agriculture\nand the evolution of WSN and IoT technologies that can be applied\
    \ in the development of these\nsystems, we present a survey aimed at summarizing\
    \ the current state of the art regarding smart\nirrigation systems. In this survey,\
    \ we are going to provide an overview of the state of the research\nregarding\
    \ irrigation systems. We will determine the parameters that are monitored in irrigation\n\
    systems regarding water quantity and quality, soil characteristics, weather conditions,\
    \ and fertilizer\nusage. We will provide an overview of the most utilized nodes\
    \ and wireless technologies employed to\nimplement WSN and IoT based smart irrigation\
    \ systems. Lastly, we will discuss the challenges and the\nbest practices for\
    \ the implementation of sensor-based irrigation systems.\nOther authors have performed\
    \ studies with a focus on irrigation systems, water management\nor precision agriculture\
    \ systems. However, the other available surveys on smart irrigation systems\n\
    analyzed quite a few papers [8–12] and therefore do not provide an in-depth analysis\
    \ of the state\nof the art regarding irrigation systems. Others are focused on\
    \ speciﬁc aspects regarding irrigation\nsuch as software for irrigation systems\
    \ [13], pivot-center speciﬁc irrigation systems [14] or irrigation\nsystems for\
    \ greenhouses [15]. Lastly, there are surveys that focus on precision agriculture\
    \ [16–21], crop\nmonitoring [22] and the agro-industrial and environmental ﬁelds\
    \ of agriculture [23] that comment on\nirrigation agriculture. In this survey,\
    \ we provide an overview of the current advances in irrigation\nsystems and the\
    \ utilized sensors and actuators. Furthermore, we provide discuss the most utilized\n\
    nodes and the wireless technologies employed for the communication and transmission\
    \ of the data\ngathered by the sensors. This way, with this work we address the\
    \ current gap in literature with a\nsurvey that provides an overview of IoT-based\
    \ smart irrigation systems.\nThe rest of the paper is organized as follows: Section\
    \ 2 presents the methodology employed to\nperform the survey. Section 3 presents\
    \ the water management techniques utilized in current studies, the\nparameters\
    \ that are utilized to determine the irrigation schedule and the related actuators.\
    \ The sensors\nand parameters considered for the soil monitoring aspects of the\
    \ evaluated smart irrigation systems\nare depicted in Section 4. The most monitored\
    \ weather parameters and the sensors that monitor\nSensors 2020, 20, 1042\n3 of\
    \ 48\nthem are presented in Section 5. Section 6 comments on the most utilized\
    \ nodes for IoT and WSN\nirrigation systems and the most popular wireless communication\
    \ technologies and cloud platforms.\nThe discussion of the current trends regarding\
    \ IoT crop irrigation systems is presented in Section 7.\nLastly, the conclusion\
    \ and future work are presented in Section 8.\n2. Materials and Methods\nIn this\
    \ section, the process followed to elaborate this paper is presented. To perform\
    \ this study,\nthe following research questions were considered: What are the\
    \ current IoT solutions for smart\nirrigation for agriculture? What sensors, actuators,\
    \ nodes, and wireless technologies are being utilized\nto develop IoT irrigation\
    \ systems? Search engines and digital libraries were utilized by the authors to\n\
    search manually for papers suitable for this survey. A total of 283 papers were\
    \ obtained from Google\nScholar [24], IEEE explore [25], Scopus [26] and the digital\
    \ library of Sensors [27]. The keywords\nemployed to obtain the total number of\
    \ papers to be analyzed were IoT irrigation, IoT irrigation system,\nand smart\
    \ irrigation. Furthermore, all papers were checked to ensure they included the\
    \ keywords\nirrigation or water and IoT or smart in their content.\nIn order to\
    \ discern which papers to use, only papers written in English were considered.\n\
    Furthermore, to observe the recent evolution in this ﬁeld, the selected papers\
    \ were published from\nthe years 2014 to 2019 (both years inclusive). Finally,\
    \ a total of 178 papers were utilized to compile\nthis review.\nAfter the selection\
    \ process, all papers were classiﬁed manually into IoT irrigation systems and\n\
    architecture, protocol and sensor proposals that were not used to create the ﬁgures\
    \ in this paper but\ndiscussed relevant information. The papers from the ﬁrst\
    \ group (160) were then analyzed to determine\nthe sensors and actuators that\
    \ were employed to develop the IoT irrigation system, the parameters\nthat were\
    \ monitored, the type of irrigation and agriculture, the type of node, the type\
    \ of wireless\ntechnology and data visualization technique that was utilized to\
    \ access the data and to manually\nchoose the actions of the irrigation system.\
    \ All the collected data has been then classiﬁed into diﬀerent\nsections and converted\
    \ into graphs and tables to provide a complete overview of the actual state of\
    \ the\nart regarding IoT irrigation systems.\nThe distribution of the papers regarding\
    \ the country of the ﬁrst author is presented in Figure 1.\nAs it can be seen,\
    \ the countries that investigate IoT systems for irrigation are countries where\
    \ agriculture\nis a major economic source. India is the country with the highest\
    \ number of papers with a total of\n92 papers, 57.5% of the total. China and Spain\
    \ are tied with seven papers each. Costa Rica, Ecuador,\nIndonesia Thailand, and\
    \ the USA have between three and six papers. The rest of the countries that\n\
    have investigated IoT systems for irrigation have one or two papers.\nIt is remarkable\
    \ that only one out of the ﬁve countries with the highest agricultural land area\n\
    (China, USA, Australia, Brazil, and Kazakhstan) is included in the top ﬁve countries\
    \ of our survey\nin terms of water management. India, which is the country with\
    \ the highest production of papers\nthat presents IoT systems for water management\
    \ is the 7th country in terms of agricultural land area.\nWith regard to the top\
    \ six countries, in terms of published papers with irrigation systems, three of\n\
    them (India, China, and Spain) have regions with high and moderate water scarcity\
    \ problems. Again,\nthere are some countries with regions aﬀected by water scarcity\
    \ that use irrigation systems in their\nagriculture and have published fewer papers\
    \ on irrigation systems like the USA. Nonetheless, it does\nnot mean that in these\
    \ countries no eﬀorts are done in order to reduce water use in agriculture. It\
    \ is\npossible that in these countries the major eﬀorts are done by enterprises\
    \ and their ﬁndings are directly\npatented and distributed in the marked. Most\
    \ of the papers are published by authors who come from\ndeveloping countries.\n\
    As per the number of papers per year of publication, see Figure 2, the interest\
    \ in this topic has\nbeen increasing over the years. The lower amount of papers\
    \ for 2019 is due to the year not being\nﬁnished when the selection process of\
    \ the papers was completed. Thus, not all the papers performed\nin 2019 had been\
    \ published.\nSensors 2020, 20, 1042\n4 of 48\n \nThe distribution of the papers\
    \ regarding the country of the first author is presented in Figure 1. \nAs it\
    \ can be seen, the countries that investigate IoT systems for irrigation are countries\
    \ where \nagriculture is a major economic source. India is the country with the\
    \ highest number of papers with \na total of 92 papers, 57.5% of the total. China\
    \ and Spain are tied with seven papers each. Costa Rica, \nEcuador, Indonesia\
    \ Thailand, and the USA have between three and six papers. The rest of the \n\
    countries that have investigated IoT systems for irrigation have one or two papers.\
    \  \n \nFigure 1. Number of published papers presenting IoT systems for irrigation\
    \ per country. \nFigure 1. Number of published papers presenting IoT systems for\
    \ irrigation per country.\nSensors 2020, 20, x \n4 of 48 \nIt is remarkable that\
    \ only one out of the five countries with the highest agricultural land area \n\
    (China, USA, Australia, Brazil, and Kazakhstan) is included in the top five countries\
    \ of our survey in \nterms of water management. India, which is the country with\
    \ the highest production of papers that \npresents IoT systems for water management\
    \ is the 7th country in terms of agricultural land area. With \nregard to the\
    \ top six countries, in terms of published papers with irrigation systems, three\
    \ of them \n(India, China, and Spain) have regions with high and moderate water\
    \ scarcity problems. Again, there \nare some countries with regions affected by\
    \ water scarcity that use irrigation systems in their \nagriculture and have published\
    \ fewer papers on irrigation systems like the USA. Nonetheless, it does \nnot\
    \ mean that in these countries no efforts are done in order to reduce water use\
    \ in agriculture. It is \npossible that in these countries the major efforts are\
    \ done by enterprises and their findings are directly \npatented and distributed\
    \ in the marked. Most of the papers are published by authors who come from \n\
    developing countries.  \nAs per the number of papers per year of publication,\
    \ see Figure 2, the interest in this topic has \nbeen increasing over the years.\
    \ The lower amount of papers for 2019 is due to the year not being \nfinished\
    \ when the selection process of the papers was completed. Thus, not all the papers\
    \ performed \nin 2019 had been published. \n \nFigure 2. Number of published papers\
    \ presenting IoT systems for irrigation per year. \n3. Water Management \nIn this\
    \ section, we present the information and analysis of papers that present different\
    \ \ntechniques for water management in the irrigation process. For this analysis,\
    \ we consider the papers \nthat include any sort of water pumping actuator as\
    \ an irrigation system. From a total of 178 evaluated \npapers, 107 of them present\
    \ an actuator for irrigation. After analyzing the 107 papers we discard the \n\
    ones that just offer partial information, a total of 89 papers are included in\
    \ this section.  \nIn the agriculture activities that use water inputs, also known\
    \ as irrigated agriculture, there are \ndifferent manners to distribute the water.\
    \ The different options present different efficiency and, in \nsome cases, a specific\
    \ manner should be used for a specific crop. The specific manners to irrigate\
    \ have \na great variety but we can divide them into the following categories:\
    \ Attending to the way of water \nis distributed we can consider: (i) flood irrigation,\
    \ (ii) spray irrigation, (iii) drip irrigation, and (iv) \nnebulizer irrigation.\
    \ Regarding the existence of sensing systems we can have: (i) irrigation without\
    \ \nany consideration, when the amount of water is not calculated or estimated,\
    \ (ii) scheduled irrigation, \nwhen the water is supplied according to the estimated\
    \ needs in a period of year, (iii) Ad hoc irrigation, \nwhen the amount of water\
    \ is calculated based on the sensors measurements. The vast majority of the \n\
    papers included in this section propose to use pumps and valves to distribute\
    \ the water in \nconjunction with sensors to measure environmental parameters\
    \ in order to calculate the water needs. \nFrom the 89 evaluated papers in this\
    \ section, 83 include clear information of the proposed irrigation \nsystem, the\
    \ other six only mention that they include actuators for irrigation, see Figure\
    \ 3. Those 83 \ninclude different levels of detail, there are 49 papers that only\
    \ indicate that there are motor/pumps in \nFigure 2. Number of published papers\
    \ presenting IoT systems for irrigation per year.\n3. Water Management\nIn this\
    \ section, we present the information and analysis of papers that present diﬀerent\
    \ techniques\nfor water management in the irrigation process. For this analysis,\
    \ we consider the papers that include\nany sort of water pumping actuator as an\
    \ irrigation system. From a total of 178 evaluated papers,\n107 of them present\
    \ an actuator for irrigation. After analyzing the 107 papers we discard the ones\
    \ that\njust oﬀer partial information, a total of 89 papers are included in this\
    \ section.\nIn the agriculture activities that use water inputs, also known as\
    \ irrigated agriculture, there\nare diﬀerent manners to distribute the water.\
    \ The diﬀerent options present diﬀerent eﬃciency and,\nin some cases, a speciﬁc\
    \ manner should be used for a speciﬁc crop. The speciﬁc manners to irrigate\n\
    have a great variety but we can divide them into the following categories: Attending\
    \ to the way\nof water is distributed we can consider: (i) ﬂood irrigation, (ii)\
    \ spray irrigation, (iii) drip irrigation,\nand (iv) nebulizer irrigation. Regarding\
    \ the existence of sensing systems we can have: (i) irrigation\nwithout any consideration,\
    \ when the amount of water is not calculated or estimated, (ii) scheduled\nirrigation,\
    \ when the water is supplied according to the estimated needs in a period of year,\
    \ (iii) Ad\nhoc irrigation, when the amount of water is calculated based on the\
    \ sensors measurements. The vast\nmajority of the papers included in this section\
    \ propose to use pumps and valves to distribute the water\nSensors 2020, 20, 1042\n\
    5 of 48\nin conjunction with sensors to measure environmental parameters in order\
    \ to calculate the water needs.\nFrom the 89 evaluated papers in this section,\
    \ 83 include clear information of the proposed irrigation\nsystem, the other six\
    \ only mention that they include actuators for irrigation, see Figure 3. Those\
    \ 83\ninclude diﬀerent levels of detail, there are 49 papers that only indicate\
    \ that there are motor/pumps in\ntheir system (40 paper) or valves (nine papers)\
    \ without more detail. From those papers which oﬀer more\ndetails, 19 of them\
    \ include sprinklers (the most used system) [28–46], eight use drip irrigation\
    \ [4,47–54],\ntwo propose the utilization of sprayers [4,55], and the rest use\
    \ a very speciﬁc irrigation systems\n(robots [56], pivot [14], rain gun [57] or\
    \ it can be applied to multiple systems [58]). In conjunction with\nthe principal\
    \ irrigation system, three papers propose the use of a fogging system [41,43,51]\
    \ and two\npapers propose the use of fertigation in their systems [42,52].\nSensors\
    \ 2020, 20, x \n5 of 48 \ntheir system (40 paper) or valves (nine papers) without\
    \ more detail. From those papers which offer \nmore details, 19 of them include\
    \ sprinklers (the most used system) [28–46], eight use drip irrigation \n[4,47–54],\
    \ two propose the utilization of sprayers [4,55], and the rest use a very specific\
    \ irrigation \nsystems (robots [56], pivot [14], rain gun [57] or it can be applied\
    \ to multiple systems [58]). In \nconjunction with the principal irrigation system,\
    \ three papers propose the use of a fogging system \n[41,43,51] and two papers\
    \ propose the use of fertigation in their systems [42,52].  \n \nFigure 3. Number\
    \ of papers that propose different irrigation systems. \nIn this paragraph, we\
    \ describe the different agriculture systems that are included in the papers.\
    \ \nMost of the included papers in this section do not describe the target agriculture\
    \ system of their \nproposal. Nevertheless, there are 38 papers that include this\
    \ information, see Figure 4. The most \ncommon use of irrigation systems is in\
    \ outdoor agriculture, 50% of the proposed systems are for \noutdoor agriculture.\
    \ Among this outdoor agriculture cases [14,29,31,32,38,40,42,46–48,52,59–67],\
    \ \nsome papers specify the agriculture products in more detail: general cereal\
    \ [14], rice [48,59], spinach, \nbeans, carrots, walnuts, corn, barley and maize\
    \ [47], and multi-height fields [60]. In addition, among \nthe 14 papers about\
    \ greenhouses [28,33,39,41,45,51,68–75], five of them specify the type of crop.\
    \ There \nare three cases of hydroponic crops [33,68,69], one case of mushroom\
    \ cultivation [41] and one paper \non flower farming [71]. Finally, there are\
    \ five papers focused on gardening [36,53,55,67,76], one of \nthem specifically\
    \ about green walls [76].  \n \nFigure 4. Number of papers that proposed irrigation\
    \ systems for different sorts of agriculture. \nFollowing, we describe the sensors\
    \ used in the irrigation systems. From a total of 89 papers that \ninclude irrigation\
    \ systems, there are six of them that do not describe or give information about\
    \ the \nutilized sensors for their system. Those six papers are more focused on\
    \ the node, telecommunication \nor visualization aspects. As in this survey we\
    \ include several parameters, we will divide this \ninformation into two figures.\
    \ \nIn the first graph, we are going to show what environments (air, water, soil\
    \ or plant) have been \n40\n19\n9\n8\n4\n2\n7\nIncludes a motor/pump\nSprinklers\n\
    Include valves\nDrip irrigation\nOther systems\nSprayers\nNo information\n19\n\
    14\n5\nOutdoor\nGreenhouse\nGarden\nFigure 3. Number of papers that propose diﬀerent\
    \ irrigation systems.\nIn this paragraph, we describe the diﬀerent agriculture\
    \ systems that are included in the papers.\nMost of the included papers in this\
    \ section do not describe the target agriculture system of their\nproposal. Nevertheless,\
    \ there are 38 papers that include this information, see Figure 4. The most\n\
    common use of irrigation systems is in outdoor agriculture, 50% of the proposed\
    \ systems are for\noutdoor agriculture. Among this outdoor agriculture cases [14,29,31,32,38,40,42,46–48,52,59–67],\
    \ some\npapers specify the agriculture products in more detail: general cereal\
    \ [14], rice [48,59], spinach, beans,\ncarrots, walnuts, corn, barley and maize\
    \ [47], and multi-height ﬁelds [60]. In addition, among the\n14 papers about greenhouses\
    \ [28,33,39,41,45,51,68–75], ﬁve of them specify the type of crop. There are\n\
    three cases of hydroponic crops [33,68,69], one case of mushroom cultivation [41]\
    \ and one paper on\nﬂower farming [71]. Finally, there are ﬁve papers focused\
    \ on gardening [36,53,55,67,76], one of them\nspeciﬁcally about green walls [76].\n\
    Sensors 2020, 20, x \n5 of 48 \ntheir system (40 paper) or valves (nine papers)\
    \ without more detail. From those papers which offer \nmore details, 19 of them\
    \ include sprinklers (the most used system) [28–46], eight use drip irrigation\
    \ \n[4,47–54], two propose the utilization of sprayers [4,55], and the rest use\
    \ a very specific irrigation \nsystems (robots [56], pivot [14], rain gun [57]\
    \ or it can be applied to multiple systems [58]). In \nconjunction with the principal\
    \ irrigation system, three papers propose the use of a fogging system \n[41,43,51]\
    \ and two papers propose the use of fertigation in their systems [42,52].  \n\
    \ \nFigure 3. Number of papers that propose different irrigation systems. \nIn\
    \ this paragraph, we describe the different agriculture systems that are included\
    \ in the papers. \nMost of the included papers in this section do not describe\
    \ the target agriculture system of their \nproposal. Nevertheless, there are 38\
    \ papers that include this information, see Figure 4. The most \ncommon use of\
    \ irrigation systems is in outdoor agriculture, 50% of the proposed systems are\
    \ for \noutdoor agriculture. Among this outdoor agriculture cases [14,29,31,32,38,40,42,46–48,52,59–67],\
    \ \nsome papers specify the agriculture products in more detail: general cereal\
    \ [14], rice [48,59], spinach, \nbeans, carrots, walnuts, corn, barley and maize\
    \ [47], and multi-height fields [60]. In addition, among \nthe 14 papers about\
    \ greenhouses [28,33,39,41,45,51,68–75], five of them specify the type of crop.\
    \ There \nare three cases of hydroponic crops [33,68,69], one case of mushroom\
    \ cultivation [41] and one paper \non flower farming [71]. Finally, there are\
    \ five papers focused on gardening [36,53,55,67,76], one of \nthem specifically\
    \ about green walls [76].  \n \nFigure 4. Number of papers that proposed irrigation\
    \ systems for different sorts of agriculture. \nFollowing, we describe the sensors\
    \ used in the irrigation systems. From a total of 89 papers that \ninclude irrigation\
    \ systems, there are six of them that do not describe or give information about\
    \ the \nutilized sensors for their system. Those six papers are more focused on\
    \ the node, telecommunication \nor visualization aspects. As in this survey we\
    \ include several parameters, we will divide this \ninformation into two figures.\
    \ \nIn the first graph, we are going to show what environments (air, water, soil\
    \ or plant) have been\n40\n19\n9\n8\n4\n2\n7\nIncludes a motor/pump\nSprinklers\n\
    Include valves\nDrip irrigation\nOther systems\nSprayers\nNo information\n19\n\
    14\n5\nOutdoor\nGreenhouse\nGarden\nFigure 4. Number of papers that proposed irrigation\
    \ systems for diﬀerent sorts of agriculture.\nSensors 2020, 20, 1042\n6 of 48\n\
    Following, we describe the sensors used in the irrigation systems. From a total\
    \ of 89 papers that\ninclude irrigation systems, there are six of them that do\
    \ not describe or give information about the\nutilized sensors for their system.\
    \ Those six papers are more focused on the node, telecommunication or\nvisualization\
    \ aspects. As in this survey we include several parameters, we will divide this\
    \ information\ninto two ﬁgures.\nIn the ﬁrst graph, we are going to show what\
    \ environments (air, water, soil or plant) have been\nmonitored in most papers.\
    \ This information is presented in Figure 5. A paper that monitored the soil\n\
    can measure one or more parameters, but this information is not included in Figure\
    \ 5. The environment\nthat has been monitored in more papers is the soil. It was\
    \ measured in 76 papers, more than 85%\nof the cases. Weather is the second parameter\
    \ in terms of relevance of monitoring, it includes many\nparameters such as temperature,\
    \ rain, and humidity among others. Weather is monitored in 60 papers,\nup to 68%\
    \ of the proposals. Water is less measured in the proposals of irrigation systems.\
    \ It is measured\nonly in 26 papers, less than 30% of the included cases. The\
    \ plant monitoring is the less measured factor.\nIt is monitored only in four\
    \ proposals. There are 15 papers that use the weather forecast to obtain data\n\
    and include this data in their system.\nSensors 2020, 20, x \n6 of 48 \ncan measure\
    \ one or more parameters, but this information is not included in Figure 5. The\
    \ \nenvironment that has been monitored in more papers is the soil. It was measured\
    \ in 76 papers, more \nthan 85% of the cases. Weather is the second parameter\
    \ in terms of relevance of monitoring, it \nincludes many parameters such as temperature,\
    \ rain, and humidity among others. Weather is \nmonitored in 60 papers, up to\
    \ 68% of the proposals. Water is less measured in the proposals of \nirrigation\
    \ systems. It is measured only in 26 papers, less than 30% of the included cases.\
    \ The plant \nmonitoring is the less measured factor. It is monitored only in\
    \ four proposals. There are 15 papers \nthat use the weather forecast to obtain\
    \ data and include this data in their system.  \n \nFigure 5. Monitored environments\
    \ in papers that propose an irrigation system. \nFollowing, the details about\
    \ the number of monitored parameters are presented (see Figure 6). \nFrom the\
    \ 89 included papers, more than half of the proposals measure between three and\
    \ four \nparameters. Measuring fewer parameters (one or two) represents 31% of\
    \ the cases (17% one \nparameter and 14% two parameters). There are some rare\
    \ cases (10% of them) where more than four \nparameters are monitored. The papers\
    \ where more parameters are measured are [64,67], with six \nmeasured parameters\
    \ and [31,45,46,61,68,75,76] that measured five parameters. On the other hand,\
    \ \nthere are five papers (6% of cases) that do not measure any parameter [33,41,77–79].\
    \  \n \nFi\n6 N\nb\nf\nit\nd\nt\ni\nth t\ni i\nti\nt\n15\n4\n26\n60\n76\n0\n10\n\
    20\n30\n40\n50\n60\n70\n80\nConsider\nforecast\nPlants\nWater\nWeather\nSoil\n\
    Number of papers\nMonitored environments\n0 parameters\n6%\n1 parameter\n17%\n\
    2 parameters\n14%\n3 parameters\n26%\n4 parameters\n27%\n5 parameters\n8%\n6 parameters\n\
    2%\nFigure 5. Monitored environments in papers that propose an irrigation system.\n\
    Following, the details about the number of monitored parameters are presented\
    \ (see Figure 6).\nFrom the 89 included papers, more than half of the proposals\
    \ measure between three and four\nparameters. Measuring fewer parameters (one\
    \ or two) represents 31% of the cases (17% one parameter\nand 14% two parameters).\
    \ There are some rare cases (10% of them) where more than four parameters\nare\
    \ monitored. The papers where more parameters are measured are [64,67], with six\
    \ measured\nparameters and [31,45,46,61,68,75,76] that measured ﬁve parameters.\
    \ On the other hand, there are ﬁve\npapers (6% of cases) that do not measure any\
    \ parameter [33,41,77–79].\nNext, the details about the measured parameters are\
    \ shown. Regarding the sensors of soil, plants,\nand water (see Figure 7), the\
    \ most used sensor in the systems is the soil moisture sensor, it is used in 76\n\
    papers (more details in Section 4). First, we will analyze the data from soil\
    \ and plant sensors. The soil\ntemperature is much less considered in these systems,\
    \ it is only measured in seven proposals. Attending\nto the soil characteristics,\
    \ in one proposal the authors use a sensor that monitored the nutrients of the\n\
    soil [80]. There are 14 proposals of IoT for irrigation management that include\
    \ a pH sensor. However,\nnot all of them specify if the pH sensors are for the\
    \ soil or for the water [31,42,49,54,68,70,74,75,81,82],\nonly four of them indicate\
    \ this (three for soil [66,67,72] and one for water [69]). Only four papers\n\
    consider plant monitoring, in two papers the measured parameter is the plant height\
    \ [64,83], using an\nultrasound sensor. In the other two cases, the leaf wetness\
    \ was considered in their system [46,84,85].\nSensors 2020, 20, 1042\n7 of 48\n\
    Diﬀerent sensors are used, [84] used a sensor based on optical signals while [46]\
    \ utilized a commercial\nFC-37 sensor (Lydia Vogler, Peißenberg, Germany).\n \n\
    Figure 5. Monitored environments in papers that propose an irrigation system.\
    \ \nFollowing, the details about the number of monitored parameters are presented\
    \ (see Figure 6). \nFrom the 89 included papers, more than half of the proposals\
    \ measure between three and four \nparameters. Measuring fewer parameters (one\
    \ or two) represents 31% of the cases (17% one \nparameter and 14% two parameters).\
    \ There are some rare cases (10% of them) where more than four \nparameters are\
    \ monitored. The papers where more parameters are measured are [64,67], with six\
    \ \nmeasured parameters and [31,45,46,61,68,75,76] that measured five parameters.\
    \ On the other hand, \nthere are five papers (6% of cases) that do not measure\
    \ any parameter [33,41,77–79].  \n \nFigure 6. Number of monitored parameters\
    \ in papers that propose an irrigation system. \nNext, the details about the measured\
    \ parameters are shown. Regarding the sensors of soil, \nplants, and water (see\
    \ Figure 7), the most used sensor in the systems is the soil moisture sensor,\
    \ it is \nused in 76 papers (more details in Section 4). First, we will analyze\
    \ the data from soil and plant \n0 parameters\n6%\n1 parameter\n17%\n2 parameters\n\
    14%\n3 parameters\n26%\n4 parameters\n27%\n5 parameters\n8%\n6 parameters\n2%\n\
    Figure 6. Number of monitored parameters in papers that propose an irrigation\
    \ system.\n \nwater [31,42,49,54,68,70,74,75,81,82], only four of them indicate\
    \ this (three for soil [66,67,72] and one \nfor water [69]). Only four papers\
    \ consider plant monitoring, in two papers the measured parameter \nis the plant\
    \ height [64,83], using an ultrasound sensor. In the other two cases, the leaf\
    \ wetness was \nconsidered in their system [46,84,85]. Different sensors are used,\
    \ [84] used a sensor based on optical \nsignals while [46] utilized a commercial\
    \ FC-37 sensor (Lydia Vogler, Peißenberg, Germany).  \nNow, the data from the\
    \ water sensor are presented. In this case, we will consider for the \ncommentaries\
    \ not only the data of the graphic (proposals with irrigation system) but also\
    \ the \ninformation of the paper which measures the water quality, having or not\
    \ the actuators for the \nirrigation system. The water level in the tanks is measured\
    \ in 17 [32,36,51,57,58,61,62,64,69,85–92] out \nof 88 papers that have a pumping\
    \ system. There are different methods to monitor the water level in \nthe tanks\
    \ and the most used is the one based on ultrasound [32,69,89], the resistive methodology\
    \ is \nused in one case [36], the rest of cases do not offer information of how\
    \ the data is measured. In the \ncase of sensors based on ultrasound methods,\
    \ the most utilized sensor is the HC-SR04 (Shenzhenshi \nguoyun dianzishangwu\
    \ youxiangongsi , Shenzhen, China, used in [69]). In addition, there are six \n\
    papers that do not include an actuator for the irrigation system even when they\
    \ have water level \nsensors [60,93–97]. There are nine papers where sensors for\
    \ monitoring water flow are utilized \n[14,31,42,45,50,64,75,76,82]. The sensors\
    \ used are only described in two cases, the commercial Gems \nFT110 G3/8 sensor\
    \ (Gems Sensors and Controls, Mumbai, India) is used in [75] and the YF-S402 \n\
    (Wuhan yingying yingying xinxi jishu youxian gongsi , Wuhan, China) in the proposal\
    \ presented in \n[76]. Both sensors are based on a Hall effect turbine. They have\
    \ different prices and similar \noperational ranges. The Gems FT110 G3/8 can measure\
    \ flows between 0.5 to 5 L/min. The other \nsensor, the YF-S402, is capable of\
    \ measuring flows between 0.3 to 6 L/min. Moreover, water flow \nsensors are used\
    \ in three other proposals that do not include actuators for irrigation systems\
    \ [5,98,99]. \nRegarding water quality, the water conductivity is monitored in\
    \ four proposals [51,68,69,75]. Only in \none case [75], the authors indicate\
    \ the used sensor. They use commercial sensors for monitoring pH \nand conductivity\
    \ from B&C Electronics (Carnate , Italy). \n  \nFigure 7. Monitored parameters\
    \ from the soil, water, and plants in papers that propose an irrigation \nsystem.\
    \ \nAdditionally, there are two papers without an actuator for irrigation systems\
    \ that include in \ntheir proposals a sensor for conductivity [98,100]. Nevertheless,\
    \ no data regarding the equipment \nused are given. Regarding the pH of water,\
    \ it is monitored in another three papers (apart from [69]) \n1\n2\n2\n3\n4\n\
    7\n9\n14\n17\n76\n0\n10\n20\n30\n40\n50\n60\n70\n80\nSoil nutrients\nWater temperature\n\
    Plant heigth\nLeaf wetness\nWater conductivity\nSoil temperature\nWater flow\n\
    pH (soil or water)\nWater level\nSoil moisture\nNumber of papers\nMeasured parameter\n\
    Figure 7.\nMonitored parameters from the soil, water, and plants in papers that\
    \ propose an\nirrigation system.\nNow, the data from the water sensor are presented.\
    \ In this case, we will consider for the\ncommentaries not only the data of the\
    \ graphic (proposals with irrigation system) but also the\ninformation of the\
    \ paper which measures the water quality, having or not the actuators for the\
    \ irrigation\nsystem. The water level in the tanks is measured in 17 [32,36,51,57,58,61,62,64,69,85–92]\
    \ out of 88 papers\nthat have a pumping system. There are diﬀerent methods to\
    \ monitor the water level in the tanks\nand the most used is the one based on\
    \ ultrasound [32,69,89], the resistive methodology is used in\none case [36],\
    \ the rest of cases do not oﬀer information of how the data is measured. In the\
    \ case of\nsensors based on ultrasound methods, the most utilized sensor is the\
    \ HC-SR04 (Shenzhenshi guoyun\ndianzishangwu youxiangongsi, Shenzhen, China, used\
    \ in [69]). In addition, there are six papers that\ndo not include an actuator\
    \ for the irrigation system even when they have water level sensors [60,93–97].\n\
    There are nine papers where sensors for monitoring water ﬂow are utilized [14,31,42,45,50,64,75,76,82].\n\
    The sensors used are only described in two cases, the commercial Gems FT110 G3/8\
    \ sensor (Gems\nSensors 2020, 20, 1042\n8 of 48\nSensors and Controls, Mumbai,\
    \ India) is used in [75] and the YF-S402 (Wuhan yingying yingying xinxi\njishu\
    \ youxian gongsi, Wuhan, China) in the proposal presented in [76]. Both sensors\
    \ are based on a\nHall eﬀect turbine. They have diﬀerent prices and similar operational\
    \ ranges. The Gems FT110 G3/8\ncan measure ﬂows between 0.5 to 5 L/min. The other\
    \ sensor, the YF-S402, is capable of measuring\nﬂows between 0.3 to 6 L/min. Moreover,\
    \ water ﬂow sensors are used in three other proposals that do\nnot include actuators\
    \ for irrigation systems [5,98,99]. Regarding water quality, the water conductivity\n\
    is monitored in four proposals [51,68,69,75]. Only in one case [75], the authors\
    \ indicate the used\nsensor. They use commercial sensors for monitoring pH and\
    \ conductivity from B&C Electronics\n(Carnate, Italy).\nAdditionally, there are\
    \ two papers without an actuator for irrigation systems that include in their\n\
    proposals a sensor for conductivity [98,100]. Nevertheless, no data regarding\
    \ the equipment used are\ngiven. Regarding the pH of water, it is monitored in\
    \ another three papers (apart from [69]) [99,101,102].\nIn one case [99], the\
    \ authors specify the used sensor, the Lutron Pe-03 (Lutron, Taipei, Taiwan).\n\
    The temperature of the water is measured in two proposals [51,69]. Only in one\
    \ case [69] did the\nauthors specify that the used sensor is the DS18B20 (Adafruit\
    \ Industries, New York, NY, USA). No other\nproposals evaluated in this survey\
    \ (having or not irrigation system) presented the use of temperature\nsensors\
    \ for the water.\nOn the other hand, with regard to the proposals that monitored\
    \ the atmospheric parameter,\nthe data is presented in Figure 8. Next, we are\
    \ presenting the importance of these sensors for irrigation\nsystems. No details\
    \ of which sensors are used in which papers are given in this section. This information\n\
    will be further discussed in Section 5. The air temperature is the most measured\
    \ parameter, it is\nmonitored in 58 papers. A total of 51 proposals include a\
    \ humidity sensor. Other parameters are less\nmeasured such as the rain, which\
    \ is measured in eight out of 89 papers that proposed an irrigation\nsystem, or\
    \ the wind, measured in only one paper. Meanwhile, there are 15 proposals that\
    \ consider the\nweather forecast. From those 15 proposals, 10 of them use the\
    \ data from the forecast in conjunction\nwith the data gathered by sensors and\
    \ ﬁve proposals use the weather forecast as the sole information\nfor weather\
    \ data/atmospheric parameters.\nSensors 2020, 20, x \n8 of 48 \n[99,101,102].\
    \ In one case [99], the authors specify the used sensor, the Lutron Pe-03 (Lutron,\
    \ Taipei, \nTaiwan). The temperature of the water is measured in two proposals\
    \ [51,69]. Only in one case [69] \ndid the authors specify that the used sensor\
    \ is the DS18B20 (Adafruit Industries, New York, New \nYork, USA). No other proposals\
    \ evaluated in this survey (having or not irrigation system) presented \nthe use\
    \ of temperature sensors for the water.  \nOn the other hand, with regard to the\
    \ proposals that monitored the atmospheric parameter, the \ndata is presented\
    \ in Figure 8. Next, we are presenting the importance of these sensors for irrigation\
    \ \nsystems. No details of which sensors are used in which papers are given in\
    \ this section. This \ninformation will be further discussed in Section 5. The\
    \ air temperature is the most measured \nparameter, it is monitored in 58 papers.\
    \ A total of 51 proposals include a humidity sensor. Other \nparameters are less\
    \ measured such as the rain, which is measured in eight out of 89 papers that\
    \ \nproposed an irrigation system, or the wind, measured in only one paper. Meanwhile,\
    \ there are 15 \nproposals that consider the weather forecast. From those 15 proposals,\
    \ 10 of them use the data from \nthe forecast in conjunction with the data gathered\
    \ by sensors and five proposals use the weather \nforecast as the sole information\
    \ for weather data/atmospheric parameters. \n  \nFigure 8. Monitored atmospheric\
    \ parameters in papers that propose an irrigation system. \nNext, the information\
    \ related to the use of actuators in the papers that proposes an irrigation \n\
    system included in this section is listed in this paragraph (see Figure 9).  \n\
    15\n1\n1\n8\n51\n58\n0\n10\n20\n30\n40\n50\n60\n70\nConsider forecast\nSound\n\
    Wind\nRain\nHumidity\nAir temperature\nNumber of papers\nMeasured parameter\n\
    2 actuators\n8%\n3 actuators\n8%\n4 actuators\n2%\n5 actuators\n1%\nFigure 8.\
    \ Monitored atmospheric parameters in papers that propose an irrigation system.\n\
    Next, the information related to the use of actuators in the papers that proposes\
    \ an irrigation\nsystem included in this section is listed in this paragraph (see\
    \ Figure 9).\nSensors 2020, 20, 1042\n9 of 48\n \n  \nFigure 8. Monitored atmospheric\
    \ parameters in papers that propose an irrigation system. \nNext, the information\
    \ related to the use of actuators in the papers that proposes an irrigation \n\
    system included in this section is listed in this paragraph (see Figure 9).  \n\
    \ \nFigure 9. Number of included actuators in papers that propose an irrigation\
    \ system. \n0\n10\n20\n30\n40\n50\n60\n70\nNumber of papers\nOnly pumping \nsystem\n\
    81%\n2 actuators\n8%\n3 actuators\n8%\n4 actuators\n2%\n5 actuators\n1%\nFigure\
    \ 9. Number of included actuators in papers that propose an irrigation system.\n\
    The vast majority of the papers include only the actuator of the irrigation system\
    \ (pump, valve,\nsprinklers, etc.). A total of 71 proposals (81% of cases) use\
    \ only the irrigation system as an actuator.\nThere are seven papers (8% of cases)\
    \ that propose the use of two actuators (irrigation system plus\nanother one).\
    \ The use of three actuators is presented in seven papers, the same percentage\
    \ that the\nuse of two actuators. Finally, there are some rare cases (3%) where\
    \ authors have proposed the use of\nmore than three actuators, in two papers they\
    \ use four actuators [39,72], and in one case the use of ﬁve\nactuators is presented\
    \ [67].\nNext, we present in Figure 10 the description of the selected actuators.\
    \ Since we are considering only\nthe papers that include an irrigation system,\
    \ the most used actuator in the diﬀerent irrigation systems.\nTherefore, we do\
    \ not include the use of irrigation actuators in Figure 10. The most utilized\
    \ actuator is\nthe sound emitter, used in seven cases [32,49,58,59,61,66,103].\
    \ It is generally used as an alarm for the\nfarmers or as a dissuasive measure\
    \ to prevent the entry of animals into the farming lands. In second\nposition,\
    \ we found the use of artiﬁcial light systems. They are used in six cases [36,38,50,71,72,75].\n\
    The use of artiﬁcial light is mainly related to the generation of artiﬁcial photo-\
    \ periods to increase\nproductivity, but they can also be used for operational\
    \ purposes. Fans are included in ﬁve proposals\nand their use is related to modifying\
    \ the atmospheric conditions (temperature, humidity or even the\nbalance between\
    \ CO2/O2). The proposals that include the use of fans are [39,65,68,72,75]. The\
    \ use\nof ultrasonic sound emitter is found in four papers [32,51,64,65]. The\
    \ least utilized actuators in IoT\nirrigation systems are scarecrows [58,65,66],\
    \ which are dummies or robots that are utilized or have\nthe function of scaring\
    \ birds and other types of animals to protect the crops, and heaters [28,65],\
    \ that\nmodify the temperature to improve the performance or the health of the\
    \ crops.\nSensors 2020, 20, x \n9 of 48 \nThe vast majority of the papers include\
    \ only the actuator of the irrigation system (pump, valve, \nsprinklers, etc.).\
    \ A total of 71 proposals (81% of cases) use only the irrigation system as an\
    \ actuator. \nThere are seven papers (8% of cases) that propose the use of two\
    \ actuators (irrigation system plus \nanother one). The use of three actuators\
    \ is presented in seven papers, the same percentage that the \nuse of two actuators.\
    \ Finally, there are some rare cases (3%) where authors have proposed the use\
    \ of \nmore than three actuators, in two papers they use four actuators [39,72],\
    \ and in one case the use of \nfive actuators is presented [67].  \nNext, we present\
    \ in Figure 10 the description of the selected actuators. Since we are considering\
    \ \nonly the papers that include an irrigation system, the most used actuator\
    \ in the different irrigation \nsystems. Therefore, we do not include the use\
    \ of irrigation actuators in Figure 10. The most utilized \nactuator is the sound\
    \ emitter, used in seven cases [32,49,58,59,61,66,103]. It is generally used as\
    \ an \nalarm for the farmers or as a dissuasive measure to prevent the entry of\
    \ animals into the farming \nlands. In second position, we found the use of artificial\
    \ light systems. They are used in six cases \n[36,38,50,71,72,75]. The use of\
    \ artificial light is mainly related to the generation of artificial photo- \n\
    periods to increase productivity, but they can also be used for operational purposes.\
    \ Fans are \nincluded in five proposals and their use is related to modifying\
    \ the atmospheric conditions \n(temperature, humidity or even the balance between\
    \ CO2/O2). The proposals that include the use of \nfans are [39,65,68,72,75].\
    \ The use of ultrasonic sound emitter is found in four papers [32,51,64,65]. The\
    \ \nleast utilized actuators in IoT irrigation systems are scarecrows [58,65,66],\
    \ which are dummies or \nrobots that are utilized or have the function of scaring\
    \ birds and other types of animals to protect the \ncrops, and heaters [28,65],\
    \ that modify the temperature to improve the performance or the health of \nthe\
    \ crops. \n \nFigure 10. Used actuators in papers that propose an irrigation system.\
    \ \nIn addition to the defined parameters, which are measured in different papers\
    \ included in this \nsurvey, there is an important parameter that is crucial for\
    \ irrigation scheduling. This parameter \nindicates the water loss due to the\
    \ evaporation from the soil and transpiration through the stomata \nof plants;\
    \ it is known as evapotranspiration (ET). Several authors measured both terms—evaporation\
    \ \nand transpiration—separately, using different sensors to obtain the ET data\
    \ [104]. It also can be \n7\n6\n5\n4\n4\n3\n2\n0\n1\n2\n3\n4\n5\n6\n7\n8\nSound\
    \ emitter\nArtificial light\nFans\nCooler\nUltrasonic\nsound emitter\nScarecrow\n\
    Heater\nNumber of paper that use this \nactuator in irrigation systems\nActuator\n\
    Figure 10. Used actuators in papers that propose an irrigation system.\nSensors\
    \ 2020, 20, 1042\n10 of 48\nIn addition to the deﬁned parameters, which are measured\
    \ in diﬀerent papers included in this\nsurvey, there is an important parameter\
    \ that is crucial for irrigation scheduling. This parameter\nindicates the water\
    \ loss due to the evaporation from the soil and transpiration through the stomata\
    \ of\nplants; it is known as evapotranspiration (ET). Several authors measured\
    \ both terms—evaporation and\ntranspiration—separately, using diﬀerent sensors\
    \ to obtain the ET data [104]. It also can be estimated\naccording to the vegetation\
    \ and the climatic data by several mathematic models [105]. Some web-based\napplications\
    \ can estimate the potential ET given a location. For ET monitoring, remote sensing\
    \ is the\nbest option as many papers point out [106–108]. Among the possibilities\
    \ for ET monitoring with sensors,\nthe integration of soil moisture changes can\
    \ oﬀer evaporation data. Nonetheless, the measurement of\ntranspiration is more\
    \ complex; it can be estimated with the data of sensors that measure radiation,\n\
    leaf area index, and vapor pressure deﬁcit [109]. Due to the complexity of its\
    \ measurement, it is not\nincluded as a monitored variable in most of the papers\
    \ of precision agriculture. None of the papers\nconsidered by this survey includes\
    \ all the necessary sensors for measuring the ET.\n4. Soil Monitoring\nAn outline\
    \ of the soil parameters considered for the IoT irrigation monitoring systems\
    \ and the\nutilized sensors are detailed in this section. In this section, we\
    \ include the data from those proposals\nthat include at least one sensor for\
    \ the soil, a total of 106 papers are included.\nAs indicated in the previous\
    \ section, the most relevant parameter for the irrigation systems is soil\nmoisture.\
    \ The number of proposals that include diﬀerent sensors is presented in Figure\
    \ 11. The soil\nmoisture is measured in all the 106 papers included in this section.\
    \ The second parameter, in terms of\nrelevance, is the soil temperature. The soil\
    \ temperature is monitored in nine proposals. The pH is\nmonitored in four papers\
    \ [52,66,67,110] and the nutrients of soil in only three cases [5,80,102].\nSensors\
    \ 2020, 20, x \n10 of 48 \nprecision agriculture. None of the papers considered\
    \ by this survey includes all the necessary sensors \nfor measuring the ET. \n\
    4. Soil Monitoring \nAn outline of the soil parameters considered for the IoT\
    \ irrigation monitoring systems and the \nutilized sensors are detailed in this\
    \ section. In this section, we include the data from those proposals \nthat include\
    \ at least one sensor for the soil, a total of 106 papers are included. \nAs indicated\
    \ in the previous section, the most relevant parameter for the irrigation systems\
    \ is \nsoil moisture. The number of proposals that include different sensors is\
    \ presented in Figure 11. The \nsoil moisture is measured in all the 106 papers\
    \ included in this section. The second parameter, in \nterms of relevance, is\
    \ the soil temperature. The soil temperature is monitored in nine proposals. The\
    \ \npH is monitored in four papers [52,66,67,110] and the nutrients of soil in\
    \ only three cases [5,80,102]. \n \nFigure 11. Monitored soil parameters in all\
    \ the evaluated papers. \nFrom the 106 proposals that include a soil moisture\
    \ probe, 71 of them do not indicate the used \nequipment to measure the soil moisture,\
    \ see Figure 12. In six cases [38,101,111–114], they only include \na picture\
    \ of the device, but they do not indicate the model and manufacturer. In all those\
    \ cases, the \nsensors employed are based on the measurement of the conductivity\
    \ between two electrodes which \nare inserted in the soil. In one case [94], the\
    \ authors proposed to use a 4-fork sensor, based on the \nsame principle as the\
    \ previous ones. Nonetheless, no extra information about the sensor used was \n\
    included in the paper, such as the manufacturer or model. The proposal presented\
    \ in [98] only \nindicates that the utilized sensor was manufactured by EB. In\
    \ [64] the authors only mention that the \nsensor used was a hygrometer. A total\
    \ of 24 proposals clearly indicate the used sensor for monitoring \nthe soil moisture.\
    \  \n106\n9\n4\n3\n0\n20\n40\n60\n80\n100\n120\nSoil moisture\nSoil ttemperature\n\
    Soil pH\nSoil nutrients\nNumber of paper that meuasres the \nsoil parameters\n\
    Soil parameters\nComplete \ninformation; 23\nPartial \ninformation; 11\nFigure\
    \ 11. Monitored soil parameters in all the evaluated papers.\nFrom the 106 proposals\
    \ that include a soil moisture probe, 71 of them do not indicate the used\nequipment\
    \ to measure the soil moisture, see Figure 12. In six cases [38,101,111–114],\
    \ they only include\na picture of the device, but they do not indicate the model\
    \ and manufacturer. In all those cases, the\nsensors employed are based on the\
    \ measurement of the conductivity between two electrodes which\nare inserted in\
    \ the soil. In one case [94], the authors proposed to use a 4-fork sensor, based\
    \ on the same\nprinciple as the previous ones. Nonetheless, no extra information\
    \ about the sensor used was included\nin the paper, such as the manufacturer or\
    \ model. The proposal presented in [98] only indicates that the\nutilized sensor\
    \ was manufactured by EB. In [64] the authors only mention that the sensor used\
    \ was a\nhygrometer. A total of 24 proposals clearly indicate the used sensor\
    \ for monitoring the soil moisture.\nSensors 2020, 20, 1042\n11 of 48\n \np\n\
    y\ny\nare inserted in the soil. In one case [94], the authors proposed to use\
    \ a 4-fork sensor, based on the \nsame principle as the previous ones. Nonetheless,\
    \ no extra information about the sensor used was \nincluded in the paper, such\
    \ as the manufacturer or model. The proposal presented in [98] only \nindicates\
    \ that the utilized sensor was manufactured by EB. In [64] the authors only mention\
    \ that the \nsensor used was a hygrometer. A total of 24 proposals clearly indicate\
    \ the used sensor for monitoring \nthe soil moisture.  \n \nFigure 12. Information\
    \ about the used moisture sensors in all the evaluated papers. \nNo information\
    \ \nat all; 72\nComplete \ninformation; 23\nPartial \ninformation; 11\nFigure\
    \ 12. Information about the used moisture sensors in all the evaluated papers.\n\
    Most of those proposals use similar sensors based on the conductivity between\
    \ two electrodes.\nDiﬀerent models of the aforementioned sensor have been used\
    \ in the proposals (see Figure 13). The most\nused sensor, based on conductivity,\
    \ is the YL69 (SparkFun Electronics, Niwot, CO, USA). It has been\nused in nine\
    \ proposals [44,56,71,87,95,115–118]. This sensor is characterized by a low price\
    \ and it is\ncreated speciﬁcally to operate with Arduino (and similar nodes).\
    \ The output voltage goes from 3.3\nto 5 V and the output values are related to\
    \ soil moisture (0 to 300 for dry soil, 300 to 700 humid soil).\nNevertheless,\
    \ it is not possible to have a measure that indicates exactly the value of moisture\
    \ without\nperforming new tests and calibration of the sensor. The same range\
    \ of measure is found in the other\nused sensor based on the same principle, the\
    \ FC-28 (Uruktech, Baghdad, Iraq, used in [34,72,76]) and\nthe SEN0114 (DFRobot,\
    \ Shanghai, China, used in [46]). The S-XNQ-04 sensor (XNQ Electric Company\n\
    Store, Beijing, China), used in [55] has a similar operation principle. However,\
    \ it is composed of three\nelectrodes. In this case, the sensor output voltage\
    \ goes from 0 to 2 V and the sensor is capable of\nmeasuring the soil moisture\
    \ giving as a response the relative saturation moisture content expressed\nin\
    \ percentage (%). This sensor has an accuracy of 3% and it can measure from 0\
    \ to 100% of relative\nsaturation. It can operate from −40 to 85 ◦C.\nSensors\
    \ 2020, 20, x \n12 of 48 \nsensors goes from −40 °C to 85 °C and its accuracy\
    \ is ±0.5 °C. The operation principle of this sensor is \nnot specified in the\
    \ datasheet.  \n \nFigure 13. Number of papers that used different models of soil\
    \ moisture sensors. \nIn terms of sensors for soil nutrients, three papers include\
    \ in their proposals sensors for \nmonitoring this variable [5,80,102]; nonetheless,\
    \ not all of them indicate the used sensor. The only \npaper that clearly indicates\
    \ the utilized sensor is the proposal presented in [80] includes an 1185 \nSunRom\
    \ color sensor (Sunrom Electronics, Ahmedabad, India). This sensor is based on\
    \ RGB color \ndetection, in [80] authors relate the color of the soil with the\
    \ nutrients. The pH of the soil is measured \nin four proposals [66,67,72,110].\
    \ However, none of these proposals indicates the selected device or \ni\nt i\n\
    th\n9\n6\n3\n2\n1\n1\n1\n1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nYL-69\nVH400\nFC-28\n\
    200SS\nHA2002\nSEN0114\nSM300\nS-XNQ-04\nNumber of paper that uses the \nsensors\n\
    Sensor model\nFigure 13. Number of papers that used diﬀerent models of soil moisture\
    \ sensors.\nA device able to measure the temperature and the moisture at the same\
    \ time, the VH400 (Vegetronix,\nInc., Riverton, UT, USA), is utilized in [37,40,89,96,119,120].\
    \ These sensors can be used from 40 ◦C to\nSensors 2020, 20, 1042\n12 of 48\n\
    85 ◦C, but the accuracy and operational range of the sensor probe are not indicated\
    \ in its datasheet.\nThe operational principle of this sensor is based on the\
    \ measurement of the dielectric constant of the\nsoil using transmission line\
    \ techniques to measure the moisture in any type of soil notwithstanding\nsoil\
    \ salinity. The output voltage of this sensor goes from 0 to 3 V. This output\
    \ voltage is related to\nthe volumetric water content in the soil. The sensor\
    \ does not oﬀer a linear relationship between the\noutput voltage and the volumetric\
    \ water content, but the sensor can measure from 0 to up to 60% of\nvolumetric\
    \ water content in the soil. This sensor has a relatively low price and can be\
    \ implemented in\nArduino systems (and similar).\nA sensor with completely different\
    \ operational principles, the 200SS (HYPERION TECHNOLOGIES\nB.V., Delft, The Netherlands),\
    \ is used in two proposals [14,121].\nIt is a solid-state electrical\nresistance\
    \ sensing device that is used to measure soil water tension.\nThe 200SS has a\
    \ pair of\nhighly corrosion-resistant electrodes, as a resistive device, the resistance\
    \ of the sensor changes with the\nsoil moisture. The electrodes are embedded within\
    \ a granular matrix. The output values of the sensor\ngo from 0 to 199 centibars.\
    \ The higher the value of centibars the lower the water availability for the\n\
    plants. The system presented in [54] uses an SM300 sensor. This device is able\
    \ to measure two soil\nparameters (moisture and temperature). The SM300 measures\
    \ the soil moisture and temperature based\non the generation and propagation of\
    \ the electromagnetic ﬁeld into the soil. The sensors measure\nthe soil moisture\
    \ as the volumetric water content, the operating range goes from 0 to 100% and\
    \ the\naccuracy is ±2.5%. This sensor is manufactured by Delta-T Devices Ltd.\
    \ (Cambridge, UK). This sensor\nis not speciﬁcally created to be integrated in\
    \ an Arduino measuring system, even though it can be\nadapted since the output\
    \ voltage goes from 0 to 1 V.\nFinally, the system detailed in [122] used the\
    \ HA2002 sensor, but no information is available\non the internet about this sensor\
    \ in terms of operational principle nor range of measuring. The sole\ninformation\
    \ that was found was that the sensor is an HA2001 sensor manufactured by Handan\
    \ Dingrui\nElectronics Co., Ltd. (Handan, China).\nRegarding the sensors used\
    \ for monitoring the soil temperature, which are mentioned in [37,40,\n45,54,63,67,94,122,123],\
    \ the diﬀerent sensors are detailed in this paragraph. There are ﬁve papers that\n\
    do not specify the sensors used [45,63,67,94,123]. The other four proposals indicate\
    \ in the paper the\nsensors selected. Although in one paper no information could\
    \ be found about the sensor utilized [122],\nthe authors indicate that their system\
    \ includes the HA2001 sensor.\nIn other cases, the information of the selected\
    \ sensors is detailed. The proposal presented in [54]\nused an LM35 sensor. This\
    \ device is able to measure temperature. The operating range is −40 to\n+125 ◦C\
    \ and the accuracy is ±0.5 ◦C. The sensors oﬀer an analogic signal and it is manufactured\
    \ by\nTexas Instruments (Dallas, TX, USA). The proposals presented in [37,40]\
    \ selected the THERM200\n(Vegetronix, Inc., Riverton, UT, USA) to measure the\
    \ temperature. The operational range of these\nsensors goes from −40 ◦C to 85\
    \ ◦C and its accuracy is ±0.5 ◦C. The operation principle of this sensor is\n\
    not speciﬁed in the datasheet.\nIn terms of sensors for soil nutrients, three\
    \ papers include in their proposals sensors for monitoring\nthis variable [5,80,102];\
    \ nonetheless, not all of them indicate the used sensor. The only paper that\n\
    clearly indicates the utilized sensor is the proposal presented in [80] includes\
    \ an 1185 SunRom\ncolor sensor (Sunrom Electronics, Ahmedabad, India). This sensor\
    \ is based on RGB color detection,\nin [80] authors relate the color of the soil\
    \ with the nutrients. The pH of the soil is measured in four\nproposals [66,67,72,110].\
    \ However, none of these proposals indicates the selected device or equipment\n\
    in the paper.\n5. Weather Monitoring\nAn overview of the weather parameters monitored\
    \ in IoT irrigation monitoring systems and the\nmost utilized sensors to monitor\
    \ these parameters is provided in this section. The weather conditions\nare a\
    \ key factor both in irrigation needs and in the performance of crops. Figure\
    \ 14 shows the most\nmonitored weather parameters in the currently available smart\
    \ irrigation proposals. Temperature\nSensors 2020, 20, 1042\n13 of 48\nand humidity\
    \ aﬀect the evapotranspiration of the water in the soil. Air temperature is deﬁned\
    \ as the\nthermic level of the atmosphere and is usually measured in Celsius,\
    \ Fahrenheit or Kelvin degrees.\nIt is the most monitored weather parameter with\
    \ one hundred papers monitoring it. Humidity is the\npresence of water vapor in\
    \ the air. The amount of water vapor in the air is expressed in percentage (%).\n\
    It is the second most monitored weather parameter with 86 papers. Furthermore,\
    \ luminosity is paired\nwith temperature as direct radiation from the Sun raises\
    \ the temperature and leads to more water loss in\nthe soil. It is deﬁned as the\
    \ intensity or brightness of the light. It is measured in Lux. It is the third\
    \ most\nmonitored parameter with 28 papers. The amount of precipitation determines\
    \ whether the irrigation\nis needed or not and the amount of water to be employed\
    \ in the case of irrigation being necessary.\nIt considers any form of hydrometeor\
    \ that falls from the atmosphere and reaches the earth’s surface.\nFurthermore,\
    \ it includes rain and snow. A total of 14 papers considered precipitation monitoring.\n\
    Although temperature, relative humidity, luminosity, and precipitations are the\
    \ most important factors\nregarding IoT irrigation systems for agriculture, many\
    \ systems propose the monitoring of other\nenvironmental parameters. Table 1 details\
    \ all the papers that utilized these parameters.\nSensors 2020, 20, x \n13 of\
    \ 48 \n \nFigure 14. Most monitored weather parameters. \nTable 1. Papers that\
    \ measure the most monitored weather parameters. \nParameter \nReferences \nAir\
    \ \ntemperature \n[28,32,34,35,45–52,56–59,61–68,71–76,80–89,91,93,94,96–98,99,100,102,103,111,114,115,117–\n\
    122,124–162] \nRelative \nhumidity \n[14,28,34,35,42,45–49,51,57–59,61–68,71–76,81,84–89,91,93–98,99,100,102,103,111,114,115,117–\n\
    122,125–127,130,131,133,135,137–140,142–146,148,150,153–160,162–165] \nPrecipitation\
    \ \n[30,46,48,50,61,67,76,95,114,119,137,143,157] \nLuminosity \n[28,45,48,62,63,65–67,71,72,76,91,99,112,118,119,125,126,129,131,136,140,144,145,154,156,157,159]\
    \ \nAs it can be seen, the four previously mentioned weather parameters are the\
    \ most recurrent \nenvironmental factors in the literature. However, there are\
    \ other weather factors concerning the air \nand climate that are monitored in\
    \ some IoT smart irrigation systems. Ultraviolet radiation is \nelectromagnetic\
    \ radiation with wavelengths ranging from 10 nm to 400 nm and is monitored by\
    \ seven \npapers [14,66,68,75,120,138,145]. Measuring wind speed [14,45,46,67,72],\
    \ wind direction [45,46,67] \nand atmospheric pressure [158] is also considered\
    \ by some papers. Air pollutants are considered in \nsome IoT irrigation systems\
    \ as well. CO2 [45,63,66,67,75,138,145], ozone [102], gas [95,143] and smoke \n\
    [124] are the types of air pollutant considered by the currently available smart\
    \ irrigation systems. \nLastly, other parameters that are monitored concerning\
    \ the surrounding area are movement and \nsound. Movement [38,42,58,61,65,127,141,143,146,148,163]\
    \ and sound [42,138,140,163] are considered \nmostly for security purposes. Ultrasound\
    \ sensors are deployed to detect intruders in the fields.  \nThere are varied\
    \ sensors that can be utilized to measure weather parameters. However, there \n\
    are smart irrigation systems that opt for not including these sensors and choose\
    \ to ask for the \nenvironmental information to web servers such as Yahoo [62\
    \ 127] that provide the weather and\nFigure 14. Most monitored weather parameters.\n\
    Table 1. Papers that measure the most monitored weather parameters.\nParameter\n\
    References\nAir temperature\n[28,32,34,35,45–52,56–59,61–68,71–76,80–89,91,93,94,96–100,102,103,111,114,115,117–\n\
    122,124–162]\nRelative humidity\n[14,28,34,35,42,45–49,51,57–59,61–68,71–76,81,84–89,91,93–100,102,103,111,114,115,\n\
    117–122,125–127,130,131,133,135,137–140,142–146,148,150,153–160,162–165]\nPrecipitation\n\
    [30,46,48,50,61,67,76,95,114,119,137,143,157]\nLuminosity\n[28,45,48,62,63,65–67,71,72,76,91,99,112,118,119,125,126,129,131,136,140,144,145,154,\n\
    156,157,159]\nAs it can be seen, the four previously mentioned weather parameters\
    \ are the most recurrent\nenvironmental factors in the literature. However, there\
    \ are other weather factors concerning the\nair and climate that are monitored\
    \ in some IoT smart irrigation systems. Ultraviolet radiation is\nelectromagnetic\
    \ radiation with wavelengths ranging from 10 nm to 400 nm and is monitored by\
    \ seven\npapers [14,66,68,75,120,138,145]. Measuring wind speed [14,45,46,67,72],\
    \ wind direction [45,46,67] and\natmospheric pressure [158] is also considered\
    \ by some papers. Air pollutants are considered in some\nIoT irrigation systems\
    \ as well. CO2 [45,63,66,67,75,138,145], ozone [102], gas [95,143] and smoke [124]\n\
    are the types of air pollutant considered by the currently available smart irrigation\
    \ systems. Lastly,\nother parameters that are monitored concerning the surrounding\
    \ area are movement and sound.\nSensors 2020, 20, 1042\n14 of 48\nMovement [38,42,58,61,65,127,141,143,146,148,163]\
    \ and sound [42,138,140,163] are considered mostly\nfor security purposes. Ultrasound\
    \ sensors are deployed to detect intruders in the ﬁelds.\nThere are varied sensors\
    \ that can be utilized to measure weather parameters. However, there are\nsmart\
    \ irrigation systems that opt for not including these sensors and choose to ask\
    \ for the environmental\ninformation to web servers such as Yahoo [62,127], that\
    \ provide the weather and environmental data\nfrom meteorology agencies.\nTemperature\
    \ monitoring is one of the most common parameters regarding weather monitoring\
    \ in\nIoT irrigation systems. As it can be seen in Figure 15, The DHT11 (Adafruit\
    \ Industries, New York, NY,\nUSA), DHT22 (Adafruit Industries, New York, NY, USA)\
    \ and the LM35 (Texas Instruments, Dallas,\nTX, USA) are the most utilized temperature\
    \ sensors with 27, 13 and 14 papers respectively. Al these\nsensors are low-cost\
    \ sensors. On the one hand, the DHT11 and DHT22 provide both temperature and\n\
    relative humidity readings. On the other hand, the LM35 and the TMP-36 (Analog\
    \ Devices, Norwood,\nMA, USA) have broader temperature ranges. The papers that\
    \ utilized these sensors are detailed in\nTable 2. These sensors are low-cost\
    \ which may be relevant to their extended use.\nSensors 2020, 20, x \n14 of 48\
    \ \n \nFigure 15. Most utilized temperature sensors. \nTable 2. Temperature monitoring\
    \ sensors. \nSensor \nTemperature \nRange \nAccuracy \nReference \nMin \nMax \n\
    DHT11 \n0 °C \n50 °C \n±2 °C \n[28,59,61,62,64,71,87,93,94,101,103,115,117–\n\
    119,121,130,131,135,139,143,144,148,154,159,160,162] \nDHT22 \n−40 °C \n125 °C\
    \ \n±0.5 °C \n[76,88,95,96,114,120,126,144,146,151,155,156,158] \nLM35 \n−55 °C\
    \ \n150 °C \n- \n[48,49,53,56,65,80,82,84,91,98,103,129,132,165] \nAccording to\
    \ sensor type, thermistors such as the DHT11, the DHT22 and the AM2315 (Adafruit\
    \ \nIndustries, New York, New York, USA) are the most utilized type of temperature\
    \ sensors, [14] (see \nFigure 16). The DHT11 and DHT22 are low-cost sensors. However,\
    \ the AM2315 has a higher price \nwith the advantages of a higher range (−40 °C\
    \ to 125 °C) has higher accuracy (±0.1 °C). \nSemiconductor-based integrated circuit\
    \ temperature sensors like the LM35 (Texas Instruments, \nDallas, Texas, USA)\
    \ and DS18B20 (Maxim Integrated, San Jose, CA, USA) [50], and band-gap \nproportional\
    \ to absolute temperature sensors, SH10 (Sensirion AG, Staefa ZH, Switzerland)\
    \ [35] and \nSH11 (Sensirion AG, Staefa ZH, Switzerland) [46], are the next most\
    \ utilized temperature sensors by \ntype. The SH10 and SH11 sensors provide both\
    \ temperature and relative humidity readings. \nFurthermore, compared to the DHT11,\
    \ they present better temperature ranges and accuracy. They \nare however similar\
    \ to the DHT22 in terms of temperature ranges, accuracy and price. The TMP36 \n\
    (Analog Devices, Norwood, Massachusetts, USA) [34,152] is a temperature sensor\
    \ comprised of a \ndiode and the EE160 (SENSOVANT, Paterna, Spain) [75] is a resistive\
    \ temperature detector sensor. \nTh FM KWS (D\nH l h\nEl\ni\nT\nh\nl\nC\nL d D\n\
    Chi\n) [122]\nd h\nFigure 15. Most utilized temperature sensors.\nTable 2. Temperature\
    \ monitoring sensors.\nSensor\nTemperature Range\nAccuracy\nReference\nMin\nMax\n\
    DHT11\n0 ◦C\n50 ◦C\n±2 ◦C\n[28,59,61,62,64,71,87,93,94,101,103,115,117–119,121,130,\n\
    131,135,139,143,144,148,154,159,160,162]\nDHT22\n−40 ◦C\n125 ◦C\n±0.5 ◦C\n[76,88,95,96,114,120,126,144,146,151,155,156,158]\n\
    LM35\n−55 ◦C\n150 ◦C\n-\n[48,49,53,56,65,80,82,84,91,98,103,129,132,165]\nAccording\
    \ to sensor type, thermistors such as the DHT11, the DHT22 and the AM2315 (Adafruit\n\
    Industries, New York, NY, USA) are the most utilized type of temperature sensors,\
    \ [14] (see Figure 16).\nThe DHT11 and DHT22 are low-cost sensors. However, the\
    \ AM2315 has a higher price with the\nadvantages of a higher range (−40 ◦C to\
    \ 125 ◦C) has higher accuracy (±0.1 ◦C). Semiconductor-based\nintegrated circuit\
    \ temperature sensors like the LM35 (Texas Instruments, Dallas, TX, USA) and DS18B20\n\
    (Maxim Integrated, San Jose, CA, USA) [50], and band-gap proportional to absolute\
    \ temperature\nsensors, SH10 (Sensirion AG, Staefa ZH, Switzerland) [35] and SH11\
    \ (Sensirion AG, Staefa ZH,\nSwitzerland) [46], are the next most utilized temperature\
    \ sensors by type. The SH10 and SH11 sensors\nprovide both temperature and relative\
    \ humidity readings. Furthermore, compared to the DHT11, they\nSensors 2020, 20,\
    \ 1042\n15 of 48\npresent better temperature ranges and accuracy. They are however\
    \ similar to the DHT22 in terms of\ntemperature ranges, accuracy and price. The\
    \ TMP36 (Analog Devices, Norwood, MA, USA) [34,152]\nis a temperature sensor comprised\
    \ of a diode and the EE160 (SENSOVANT, Paterna, Spain) [75] is a\nresistive temperature\
    \ detector sensor. The FM-KWS (Dongguan Holchan Electronics Technology Co.,\n\
    Ltd., Dongguan, China) [122] and the BME250 (Adafruit Industries, New York, NY,\
    \ USA) [157] are of\nan unknown type.\nSensors 2020, 20, x \n15 of 48 \n \nFigure\
    \ 16. Most utilized temperature sensors by type. \n \nFigure 17. Most utilized\
    \ humidity sensors. \nTable 3. Relative humidity monitoring sensors. \nSensor\
    \ \nHumidity \nRange \nAccuracy \nReference \nMin \nMax \nDHT11 \n20% \n90% \n\
    ±5% \n[28,59,61,62,64,71,87,93,94,101,103,115,117–\n119,121,130,131,135,139,143,145,148,154,156,159,160]\
    \ \nDHT22 \n0% \n100% \n±5% \n[76,88,95,96,114,120,126,144,146,151,155,156,158]\
    \ \nAccording to type (see Figure 18), the most utilized humidity sensors for\
    \ IoT irrigation systems \nis the capacitive humidity sensor, which are the DHT11,\
    \ the DHT22, the AM2315 [14], the SH10 \n(Sensirion AG, Staefa ZH, Switzerland)\
    \ [35], the HIH 4000 series (Honeywell International \nInc.Charlotte, North Carolina,\
    \ USA) [98] and the HH10D [166]. The DHT22, AM2315, and SHT10 \nhave the same\
    \ range However the AM2315 has higher accuracy (±2%) than that of the DHT22 and\n\
    Figure 16. Most utilized temperature sensors by type.\nThe most utilized relative\
    \ humidity monitoring sensors are presented in Figure 17.\nAs in\ntemperature\
    \ monitoring, the DHT11 and DHT22 sensors are the most utilized ones, with 29\
    \ and\n13 papers that use them, respectively. As both sensors are able to monitor\
    \ both temperature and\nhumidity, most systems that utilize these sensors do not\
    \ choose a separate sensor for each parameter.\nThere are sensors with better\
    \ accuracy. However, IoT irrigation systems generally do not need the\nhighest\
    \ accuracy levels available in the market. Table 3 presents the papers that utilize\
    \ these sensors.\nSensors 2020, 20, x \n15 of 48 \n \nFigure 16. Most utilized\
    \ temperature sensors by type. \n \nFigure 17. Most utilized humidity sensors.\
    \ \nTable 3. Relative humidity monitoring sensors. \nSensor \nHumidity \nRange\
    \ \nAccuracy \nReference \nMin \nMax \nDHT11 \n20% \n90% \n±5% \n[28,59,61,62,64,71,87,93,94,101,103,115,117–\n\
    119,121,130,131,135,139,143,145,148,154,156,159,160] \nFigure 17. Most utilized\
    \ humidity sensors.\nSensors 2020, 20, 1042\n16 of 48\nTable 3. Relative humidity\
    \ monitoring sensors.\nSensor\nHumidity Range\nAccuracy\nReference\nMin\nMax\n\
    DHT11\n20%\n90%\n±5%\n[28,59,61,62,64,71,87,93,94,101,103,115,117–119,121,130,\n\
    131,135,139,143,145,148,154,156,159,160]\nDHT22\n0%\n100%\n±5%\n[76,88,95,96,114,120,126,144,146,151,155,156,158]\n\
    According to type (see Figure 18), the most utilized humidity sensors for IoT\
    \ irrigation systems is\nthe capacitive humidity sensor, which are the DHT11,\
    \ the DHT22, the AM2315 [14], the SH10 (Sensirion\nAG, Staefa ZH, Switzerland)\
    \ [35], the HIH 4000 series (Honeywell International Inc., Charlotte, NC,\nUSA)\
    \ [98] and the HH10D [166]. The DHT22, AM2315, and SHT10 have the same range.\
    \ However, the\nAM2315 has higher accuracy (±2%) than that of the DHT22 and the\
    \ SH10 (±5% and ±4.5% respectively).\nResistive humidity sensors are another one\
    \ of the types of available humidity sensors, such as the\nHR202 [48]. However,\
    \ there are ﬁve humidity sensors employed for IoT irrigation systems that are\n\
    of an unknown type. They are the FM-KWS (Dongguan Holchan Electronics Technology\
    \ Co., Ltd.,\nDongguan, China) [122], the BME280 (Bosch, Gerlingen, Germany) [157],\
    \ the EE160 (SENSOVANT,\nPaterna, Spain) [75], the HTU210 (Adafruit Industries,\
    \ New York, NY, USA) [46], and the SY-HS-220\n(SYHITECH, South Korea) [49].\n\
    Sensors 2020, 20, x \n16 of 48 \nemployed for IoT irrigation systems that are\
    \ of an unknown type. They are the FM-KWS (Dongguan \nHolchan Electronics Technology\
    \ Co.,Ltd, Dongguan, China) [122], the BME280 (Bosch, Gerlingen, \nGermany) [157],\
    \ the EE160 (SENSOVANT, Paterna, Spain) [75], the HTU210 (Adafruit Industries,\
    \ \nNew York, New York, USA) [46], and the SY-HS-220 (SYHITECH, South Korea) [49].\
    \ \n \nFigure 18. Most utilized humidity sensors by type. \nLight intensity and\
    \ UV radiation are another set of parameters that are frequently monitored in\
    \ \nIoT irrigation systems. Figure 19 presents the most utilized sensors for light\
    \ intensity monitoring. The \nlight dependent resistor (LDR) is the most utilized\
    \ sensor for light intensity monitoring \n[28,48,72,76,84,119,129,131]. The second\
    \ most used luminosity sensor is the BH1750 (ROHM Apollo \nCo., Ltd., Fukuoka,\
    \ Japan) [62,126,146,157] followed by the TSL2561 (TAOS Inc, Plano, Texas, USA)\
    \ \n[145,158] with one paper less. The LS-BTA Vernier (Vernier, Beaverton, OR,\
    \ USA) was used as well \nin [98]. Among them, the BHT1750 is the sensor with\
    \ a broader range (1-65535 Lux). There is not a \ncommonly utilized sensor for\
    \ radiation, but the sensors currently utilized in IoT irrigation \nmanagement\
    \ systems are the SN-500 (Vernier, Beaverton, OR, USA) [14], the GUVA-S12SD \n\
    (ROITHNER LaserTechnik, Vienna, Austria) [120], the 6450 TSR (Davis Instruments\
    \ Corporation, \nHayward, California , USA) [145] and the SP110 [75]. \nFigure\
    \ 18. Most utilized humidity sensors by type.\nLight intensity and UV radiation\
    \ are another set of parameters that are frequently monitored\nin IoT irrigation\
    \ systems. Figure 19 presents the most utilized sensors for light intensity monitoring.\n\
    The light dependent resistor (LDR) is the most utilized sensor for light intensity\
    \ monitoring [28,48,72,\n76,84,119,129,131]. The second most used luminosity sensor\
    \ is the BH1750 (ROHM Apollo Co., Ltd.,\nFukuoka, Japan) [62,126,146,157] followed\
    \ by the TSL2561 (TAOS Inc, Plano, Texas, USA) [145,158]\nwith one paper less.\
    \ The LS-BTA Vernier (Vernier, Beaverton, OR, USA) was used as well in [98].\n\
    Among them, the BHT1750 is the sensor with a broader range (1-65535 Lux). There\
    \ is not a commonly\nutilized sensor for radiation, but the sensors currently\
    \ utilized in IoT irrigation management systems\nare the SN-500 (Vernier, Beaverton,\
    \ OR, USA) [14], the GUVA-S12SD (ROITHNER LaserTechnik,\nVienna, Austria) [120],\
    \ the 6450 TSR (Davis Instruments Corporation, Hayward, CA, USA) [145] and\nthe\
    \ SP110 [75].\nSensors 2020, 20, 1042\n17 of 48\n \n[145,158] with one paper less.\
    \ The LS-BTA Vernier (Vernier, Beaverton, OR, USA) was used as well \nin [98].\
    \ Among them, the BHT1750 is the sensor with a broader range (1-65535 Lux). There\
    \ is not a \ncommonly utilized sensor for radiation, but the sensors currently\
    \ utilized in IoT irrigation \nmanagement systems are the SN-500 (Vernier, Beaverton,\
    \ OR, USA) [14], the GUVA-S12SD \n(ROITHNER LaserTechnik, Vienna, Austria) [120],\
    \ the 6450 TSR (Davis Instruments Corporation, \nHayward, California , USA) [145]\
    \ and the SP110 [75]. \n \nFigure 19. Most utilized luminosity sensors. \nRegarding\
    \ rain, one of the ways in which it is incorporated in the decision-making process\
    \ of \nirrigation systems is to stop automatic irrigation if rain is detected\
    \ to avoid overwatering [42]. The \nRSM3ALS sensor was utilized in [119]. It is\
    \ an optical rain sensor comprised of an LED, an LRD, an \nelectronic control\
    \ unit, lenses and an ambient light sensor. When the sensitive area is dry, a\
    \ high \nintensity of light is received by the IR receiver. When the sensitive\
    \ area is wet, the intensity of the \nFigure 19. Most utilized luminosity sensors.\n\
    Regarding rain, one of the ways in which it is incorporated in the decision-making\
    \ process\nof irrigation systems is to stop automatic irrigation if rain is detected\
    \ to avoid overwatering [42].\nThe RSM3ALS sensor was utilized in [119]. It is\
    \ an optical rain sensor comprised of an LED, an LRD,\nan electronic control unit,\
    \ lenses and an ambient light sensor. When the sensitive area is dry, a high\n\
    intensity of light is received by the IR receiver. When the sensitive area is\
    \ wet, the intensity of the\nreceived IR light decreases. It is manufactured by\
    \ Bosch (BOSCH, Gerlingen, Germany) and it is\ncommonly used in the automotive\
    \ industry. The SEN-08942 is a meteorology station manufactured\nby Sparkfun (SparkFun\
    \ Electronics, Niwot, CO, USA). It allows monitoring both wind speed and\ndirection\
    \ and it incorporates a pluviometer [46]. The PRD180 is comprised of a rain detecting\
    \ board\nwith two separate PCB tracks and a control module that provides a digital\
    \ and an analog output [48].\nThe operating voltage is from 3.3 V to 5 V. It is\
    \ manufactured by Elecmake (India). Like the PRD180, the\nYL83 (Vaisala, Vantaa,\
    \ Finland) is comprised of a series of conductive strands printed onto a Bakelite\n\
    plaque [76]. The water creates a short-circuit oﬀering a low resistance between\
    \ the lines connected to\nthe ground and the lines connected to the positive polarity.\n\
    The type of agriculture most concerned with air and wind as a parameter concerning\
    \ weather\nis greenhouse agriculture. For example, one of the aims of [68] is\
    \ the sanitation of the air of the\ngreenhouse from pathogens and chemical contaminants.\
    \ This is then closely related to the activation\nof the actuators necessary to\
    \ the regulation of the quality of the air. The contaminants that can aﬀect\n\
    the quality of the air are CO, CO2, O3, NOx, PM2.5, and PM10, among others [64].\
    \ In the context\nof agriculture, air contaminants are monitored with the use\
    \ of sensors that can be low-cost sensors\nsuch as the MQ135 (SHENZHEN INVENTOR\
    \ ELECTRONIC TECHNOLOGYCO., LTD., Shenzhen,\nChina), MQ131, MQ2 or MQ9 sensors\
    \ or commercial sensors that can be found in professional weather\nstations. The\
    \ MQ135 [64,143], used for benzene, alcohol, smoke, NH3, NOx and CO2 monitoring,\
    \ and\nthe MQ2 [64,95], used for gas monitoring (propane, hydrogen, and LPG),\
    \ are the most utilized low-cost\nsensors for air quality monitoring. The MQ131\
    \ is utilized for ozone, Cl2, NO2 monitoring [64] and\nthe MQ9 is utilized for\
    \ CO/combustible gas, methane, carbon monoxide and LPG monitoring [64].\nAnother\
    \ sensor that can be used to monitor CO2 is the CDM4161A (Toshniwal Sensing Device\
    \ Private\nLimited, Ajmer, India) [145].\nWind speed and direction may be of interest\
    \ to IoT irrigation systems such as for the proposal\nin [46], that utilized the\
    \ SEN-08942 sensor manufactured by Sparkfun. Barometric pressure can be of\ninterest\
    \ as well and can be measured by the BME280 sensor manufactured by Bosch [157].\n\
    Movement detection is often related to security measures or to the aim of scaring\
    \ animals to\navoid crop damage. The most utilized sensor for movement detection\
    \ is a passive infrared (PIR)\nsensor [42,95]. This sensor measures the infrared\
    \ light that radiates around the objects placed at the\nfront of the sensor. The\
    \ change in infrared radiation is converted into changes in voltage that trigger\n\
    the detection. It is often utilized for intrusion and pest detection. Ultrasonic\
    \ sensors are often utilized\nSensors 2020, 20, 1042\n18 of 48\nto detect movement,\
    \ such as the robot proposed in [65] that is able to perform some actions to scare\
    \ the\nanimals that may enter the ﬁelds. These sensors are comprised of a transmitter\
    \ and a receiver that\noperate at the 40 kHz frequency. Its range is from 10 cm\
    \ to 30 cm. Ultrasound at lower frequencies was\nutilized in [60] to repel the\
    \ animals. Insects may cause great damage to the crops, for that reason some\n\
    systems such as [45] include a pest warning functionality. The system in [133]\
    \ is able to even detect the\ntype of insect pests that are damaging the crops.\
    \ These features are often accompanied by a buzzer to\ngenerate an alarm when\
    \ intruders or animals are detected [61].\nDepending on the type of agriculture,\
    \ the values from the measures for each environmental\nparameter can be utilized\
    \ to determine the actions of diﬀerent types of actuators. It can be part of a\n\
    model like the one proposed in [72] where the on-agriculture stage gathers the\
    \ data on temperature,\nhumidity, light, moisture and wind speed in order to activate\
    \ or deactivate fans, artiﬁcial light, a cooler\nand water pumps. Many IoT irrigation\
    \ systems have both a manual and an automatic mode to control\nirrigation. In\
    \ [64], the amount of water released by the water pumps or the duration of the\
    \ irrigation\ncan be selected in the manual mode. For the automatic mode, a preset\
    \ value is utilized at the beginning.\nThen, the data is analyzed to determine\
    \ the personalized settings. The most utilized actuators to\nmodify the conditions\
    \ of the climate that aﬀects the crops or to protect the crops from animals and\n\
    intruders are presented in Figure 20.\nSensors 2020, 20, x \n18 of 48 \n \nFigure\
    \ 20. Most utilized actuators. \nBuzzers are the most utilized actuators in IoT\
    \ irrigation systems regarding external agents. These \nsound emitters are usually\
    \ utilized to scare animals and to alert the user of anomalies in the system \n\
    or the intrusion of animals or people [32,49,58,59,61,66,91,95,103]. Fans [39,65,68,72,75,152,166]\
    \ and \nartificial lighting [39,51,71,72,75,82,154] are tied in first place with\
    \ seven papers each. The fans can be \nutilized to cool the temperatures and to\
    \ create a breeze or light wind to aid in the pollination process. \nArtificial\
    \ light is utilized to aid plants in performing photosynthesis. Different colors\
    \ may be good \nfor different aspects of the plant growth such as blue for the\
    \ leaves and a mix of red and blue for the \nflowers. Coolers are the third most\
    \ employed actuator for weather conditions controlling, utilized for \ncooling\
    \ the temperature and for aiding in the control of the relative humidity, with\
    \ four papers \n[28,39,68,72]. The least utilized actuators in IoT irrigation\
    \ systems are heaters [28,65], that modify the \ntemperature to improve the performance\
    \ or the health of the crops. Most of the actuators regarding \nweather conditions\
    \ are usually placed inside greenhouses. Whereas buzzers and scarecrows can be\
    \ \nplaced in outdoor fields. \n6. Sensor Networks for Irrigation Systems \nIn\
    \ this section, an overview of the most utilized nodes for implementing sensor\
    \ networks \nintended for irrigation systems is presented. Furthermore, the most\
    \ employed wireless \ncommunication technologies are going to be presented as\
    \ well. Lastly, the most frequent cloud \nsystems for IoT in smart irrigation\
    \ solutions and common architectures for these systems are going \nto be discussed\
    \ as well. \nFigure 20. Most utilized actuators.\nBuzzers are the most utilized\
    \ actuators in IoT irrigation systems regarding external agents. These\nsound\
    \ emitters are usually utilized to scare animals and to alert the user of anomalies\
    \ in the system\nor the intrusion of animals or people [32,49,58,59,61,66,91,95,103].\
    \ Fans [39,65,68,72,75,152,166] and\nartiﬁcial lighting [39,51,71,72,75,82,154]\
    \ are tied in ﬁrst place with seven papers each. The fans can\nbe utilized to\
    \ cool the temperatures and to create a breeze or light wind to aid in the pollination\n\
    process. Artiﬁcial light is utilized to aid plants in performing photosynthesis.\
    \ Diﬀerent colors may\nbe good for diﬀerent aspects of the plant growth such as\
    \ blue for the leaves and a mix of red and\nblue for the ﬂowers. Coolers are the\
    \ third most employed actuator for weather conditions controlling,\nutilized for\
    \ cooling the temperature and for aiding in the control of the relative humidity,\
    \ with four\npapers [28,39,68,72]. The least utilized actuators in IoT irrigation\
    \ systems are heaters [28,65], that\nmodify the temperature to improve the performance\
    \ or the health of the crops. Most of the actuators\nregarding weather conditions\
    \ are usually placed inside greenhouses. Whereas buzzers and scarecrows\ncan be\
    \ placed in outdoor ﬁelds.\nSensors 2020, 20, 1042\n19 of 48\n6. Sensor Networks\
    \ for Irrigation Systems\nIn this section, an overview of the most utilized nodes\
    \ for implementing sensor networks\nintended for irrigation systems is presented.\
    \ Furthermore, the most employed wireless communication\ntechnologies are going\
    \ to be presented as well. Lastly, the most frequent cloud systems for IoT in\
    \ smart\nirrigation solutions and common architectures for these systems are going\
    \ to be discussed as well.\n6.1. IoT Nodes for Irrigation Systems\nIn this subsection,\
    \ the most utilized IoT nodes for IoT irrigation systems are going to be presented.\n\
    Figure 21 presents the most utilized nodes for the implementation of IoT irrigation\
    \ systems. As it\ncan be seen, Arduino boards (Smart Projects Srl, Scarmagno,\
    \ Italy) are the most utilized nodes for\nthe implementation of IoT irrigation\
    \ systems. The Arduino UNO was utilized in 34 papers and the\nArduino Mega was\
    \ used in six papers. Furthermore, a total of 59 papers claimed to use an Arduino\n\
    board. The references of the most utilized nodes are detailed in Table 4.\nSensors\
    \ 2020, 20, x \n19 of 48 \n \nFigure 21. Most utilized nodes to implement IoT\
    \ irrigation systems. \nTable 4. Most popular nodes for IoT irrigation systems.\
    \ \nNode \nReference \nWEMOS MINI D1 \n[71,87,89] \nNode MCU \n[41,43,86,97,113,114,127,153,155,158,167–169]\
    \ \nArduino Mega \n[52,55,56,72,170,171] \nArduino UNO \n[34,36,40,44,49,54,55,61,62,64,69,76,84,91,111,112,117,119,121,127,129,139,143,144,\n\
    151,153,154,156,160,166,168,172–174] \nRaspberry Pi 2 Model B \n[66,69,165,175]\
    \ \nRaspberry Pi 3 Model B+ \n[58,112,176] \nIntel Galileo Gen-2 \n[30,51,77]\
    \ \nFigure 22 shows the types of Arduino nodes utilized in IoT irrigation systems.\
    \ In addition to the \nArduino UNO and the Arduino Mega, the Arduino Yun [60],\
    \ the Arduino Due [96] and the Arduino \nNANO [151] were utilized in other IoT\
    \ irrigation proposals. However, 15 papers did not specify the \nmodel of the\
    \ Arduino board utilized [5,29,32,51,81,82,90,120,124,131,138,162,164,167,177].\
    \ \nFigure 21. Most utilized nodes to implement IoT irrigation systems.\nTable\
    \ 4. Most popular nodes for IoT irrigation systems.\nNode\nReference\nWEMOS MINI\
    \ D1\n[71,87,89]\nNode MCU\n[41,43,86,97,113,114,127,153,155,158,167–169]\nArduino\
    \ Mega\n[52,55,56,72,170,171]\nArduino UNO\n[34,36,40,44,49,54,55,61,62,64,69,76,84,91,111,112,117,119,121,127,129,139,143,\n\
    144,151,153,154,156,160,166,168,172–174]\nRaspberry Pi 2 Model B\n[66,69,165,175]\n\
    Raspberry Pi 3 Model B+\n[58,112,176]\nIntel Galileo Gen-2\n[30,51,77]\nFigure\
    \ 22 shows the types of Arduino nodes utilized in IoT irrigation systems. In addition\
    \ to the\nArduino UNO and the Arduino Mega, the Arduino Yun [60], the Arduino\
    \ Due [96] and the Arduino\nNANO [151] were utilized in other IoT irrigation proposals.\
    \ However, 15 papers did not specify the\nmodel of the Arduino board utilized\
    \ [5,29,32,51,81,82,90,120,124,131,138,162,164,167,177].\nSensors 2020, 20, 1042\n\
    20 of 48\n \nFigure 22 shows the types of Arduino nodes utilized in IoT irrigation\
    \ systems. In addition to the \nArduino UNO and the Arduino Mega, the Arduino\
    \ Yun [60], the Arduino Due [96] and the Arduino \nNANO [151] were utilized in\
    \ other IoT irrigation proposals. However, 15 papers did not specify the \nmodel\
    \ of the Arduino board utilized [5,29,32,51,81,82,90,120,124,131,138,162,164,167,177].\
    \ \n \nFigure 22. Arduino nodes utilized to implement IoT irrigation systems.\
    \ \nSome other popular boards are manufactured by other companies but can be programmed\
    \ \nutilizing the Arduino IDE. One of these boards is the Node MCU (Espressif\
    \ Systems, Shanghai, P. R. \nFigure 22. Arduino nodes utilized to implement IoT\
    \ irrigation systems.\nSome other popular boards are manufactured by other companies\
    \ but can be programmed utilizing\nthe Arduino IDE. One of these boards is the\
    \ Node MCU (Espressif Systems, Shanghai, P. R. China),\nwhich was utilized in\
    \ 13 papers. The other boards are the Wemos MINI D1 (Wemos, P. R. China) and\n\
    the Galileo Gen-2 (Intel, Santa Clara, California, USA) both utilized in three\
    \ papers each.\nThe nodes from the Raspberry family (Sony, Pencoed, Wales) were\
    \ frequently utilized as well.\nThe most utilized Raspberry node was the Raspberry\
    \ Pi 2 Model B and the Raspberry Pi 3 Model B+,\nwith four papers and three papers,\
    \ respectively (see Figure 23). They are followed by the Raspberry Pi\n3 Model\
    \ B [132,151], the Raspberry Pi 1 Model B [76,117] and the Raspberry Zero [152].\
    \ There were\nhowever eight papers that utilized an unspeciﬁed Raspberry Pi 3\
    \ [28,46,55,99,110,148,159,163] and\n13 papers [39,50,59,65,96,115,120,124,134–136,172,178]\
    \ that indicated that a Raspberry Pi node was\nutilized but the model of the node\
    \ was not speciﬁed. The Raspberry Pi boards are more potent than\nthe Arduino\
    \ boards. Oftentimes, both Arduino and Raspberry Pi boards are utilized to implement\
    \ an\nIoT irrigation system, using them according to the processing requirements\
    \ of each task.\nSensors 2020, 20, x \n20 of 48 \nChina), which was utilized in\
    \ 13 papers. The other boards are the Wemos MINI D1 (Wemos, P. R. \nChina) and\
    \ the Galileo Gen-2 (Intel, Santa Clara, California, USA) both utilized in three\
    \ papers each. \nThe nodes from the Raspberry family (Sony, Pencoed, Wales) were\
    \ frequently utilized as well. \nThe most utilized Raspberry node was the Raspberry\
    \ Pi 2 Model B and the Raspberry Pi 3 Model B+, \nwith four papers and three papers,\
    \ respectively (see Figure 23). They are followed by the Raspberry \nPi 3 Model\
    \ B [132,151], the Raspberry Pi 1 Model B [76,117] and the Raspberry Zero [152].\
    \ There were \nhowever eight papers that utilized an unspecified Raspberry Pi\
    \ 3 [28,46,55,99,110,148,159,163] and 13 \npapers [39,50,59,65,96,115,120,124,134–136,172,178]\
    \ that indicated that a Raspberry Pi node was \nutilized but the model of the\
    \ node was not specified. The Raspberry Pi boards are more potent than \nthe Arduino\
    \ boards. Oftentimes, both Arduino and Raspberry Pi boards are utilized to implement\
    \ an \nIoT irrigation system, using them according to the processing requirements\
    \ of each task. \n \nFigure 23. Raspberry Pi nodes utilized to implement IoT irrigation\
    \ systems. \nFurthermore, there are other less popular nodes utilized by other\
    \ IoT irrigation proposals. These \nother nodes are the waspmote (Libelium Comunicaciones\
    \ Distribuidas S.L., Zaragoza, Spain) [157], \nthe crowduino (Elecrow, Shenzhen,\
    \ China) [38,81], the LPC2387 (NXP Semiconductors, Eindhoven, \nThe Netherlands)\
    \ [135], the IPex16 from OdinS (Odin Solutions, S.L., Alcantarilla, Spain) [75],\
    \ the \nRenesas (Renesas Technology, Tokyo, Japan) [78], the Mica (Harting Technologiegruppe,\
    \ Espelkamp, \nGermany) mote [37], the eZ430-RF2500 (Texas Instruments, Dallas,\
    \ Texas, USA) [179], the AESP ONE \n(Department of Innovation Engineering, University\
    \ of Salento, Lecce, Italy) [94], the FORLINX \nOK6410 (Forlinx Embedded Tech.\
    \ Co., Ltd., Baoding City, P. R China) [122], the BeagleBone Black \n(Waveshare\
    \ Electronics, Shenzhen, P. R China) [95], the Edison (Intel, Santa Clara, California,\
    \ USA) \n[29], the CC3200 Simple Link (Texas Instruments, Dallas, Texas, USA)\
    \ [62,180] and the CC1310 (Texas \nFigure 23. Raspberry Pi nodes utilized to implement\
    \ IoT irrigation systems.\nFurthermore, there are other less popular nodes utilized\
    \ by other IoT irrigation proposals.\nThese other nodes are the waspmote (Libelium\
    \ Comunicaciones Distribuidas S.L., Zaragoza,\nSpain) [157], the crowduino (Elecrow,\
    \ Shenzhen, China) [38,81], the LPC2387 (NXP Semiconductors,\nEindhoven, The Netherlands)\
    \ [135], the IPex16 from OdinS (Odin Solutions, S.L., Alcantarilla,\nSensors 2020,\
    \ 20, 1042\n21 of 48\nSpain) [75], the Renesas (Renesas Technology, Tokyo, Japan)\
    \ [78], the Mica (Harting Technologiegruppe,\nEspelkamp, Germany) mote [37], the\
    \ eZ430-RF2500 (Texas Instruments, Dallas, Texas, USA) [179],\nthe AESP ONE (Department\
    \ of Innovation Engineering, University of Salento, Lecce, Italy) [94], the\n\
    FORLINX OK6410 (Forlinx Embedded Tech. Co., Ltd., Baoding City, P. R China) [122],\
    \ the BeagleBone\nBlack (Waveshare Electronics, Shenzhen, P. R China) [95], the\
    \ Edison (Intel, Santa Clara, California,\nUSA) [29], the CC3200 Simple Link (Texas\
    \ Instruments, Dallas, Texas, USA) [62,180] and the CC1310\n(Texas Instruments,\
    \ Dallas, Texas, USA) [147].\nThe selection of the best node for an IoT irrigation\
    \ system will depend on the necessities and\nthe characteristics the farmer wants\
    \ for the system. Arduino nodes and similar nodes from other\nbrands provide a\
    \ low-cost solution that can be implemented in developing countries and smaller\
    \ farms.\nOn the other hand, Raspberries have powerful computing abilities that\
    \ allow the implementation of\nmore demanding software and algorithms.\nMany works\
    \ do not use a microcontroller board like the ones presented above and opt to\n\
    implement their system with their circuit design. Figure 24 presents the most\
    \ utilized processors for\nsmart irrigation systems.\nThe most utilized controllers\
    \ are the ATmega328 [93,103,170,181,182]\n(Atmel, San José, California, USA) and\
    \ the ATmega2560 [56,72,81] with ﬁve and three papers\nrespectively.\nThe Atmega1281\
    \ [133,157] and the LPC2148 (NXP Semiconductors, Eindhoven,\nThe Netherlands)\
    \ [48,123] are both utilized in two papers each. The other controllers comprise\n\
    the LPC2138 [80], ATmega8 [101], the ATmega16/32 [65], the MSP430F5438A (Texas\
    \ Instruments,\nDallas, Texas, USA) [67], the MSP430F5419A [179], the MSP430F2274\
    \ [179], the STM32L151CB\n(STMicroelectronics, Geneva, Switzerland) [78], the\
    \ STM32F205 [152] and the PIC16F877A (Microchip\nTechnology Inc. (Microchip Technology),\
    \ Chandler, AZ, USA) [42]. The proposals that opt for\ndeveloping their own designs\
    \ for the nodes aim at addressing their own particular requirements.\nTherefore,\
    \ the selection of the processor would depend on the characteristics of the IoT\
    \ irrigation\nsystem considering the type of crop and its irrigation needs.\n\
    Sensors 2020, 20, x \n21 of 48 \nLPC2138 [80], ATmega8 [101], the ATmega16/32\
    \ [65], the MSP430F5438A (Texas Instruments, Dallas, \nTexas, USA) [67], the MSP430F5419A\
    \ [179], the MSP430F2274 [179], the STM32L151CB \n(STMicroelectronics, Geneva,\
    \ Switzerland) [78], the STM32F205 [152] and the PIC16F877A \n(Microchip Technology\
    \ Inc. (Microchip Technology), Chandler, Arizona, USA) [42]. The proposals \n\
    that opt for developing their own designs for the nodes aim at addressing their\
    \ own particular \nrequirements. Therefore, the selection of the processor would\
    \ depend on the characteristics of the IoT \nirrigation system considering the\
    \ type of crop and its irrigation needs. \n \nFigure 24. Most utilized processors\
    \ to implement IoT nodes for irrigation systems. \n6.2. Communication Technologies\
    \ \nIn this subsection, an overview of the most employed wireless communication\
    \ technologies is \ngoing to be presented as well. \nAccording to the Machina\
    \ research report, the number of connected agricultural devices is \nexpected\
    \ to grow from 13 million at the end of 2014 to 225 million by 2024 [183]. In\
    \ addition, the \nreport predicts that around half of those connections will use\
    \ the newly emerging low power wide \narea network technologies which are particularly\
    \ well suited to many of the applications in \nagriculture. \nWhen IoT devices\
    \ are implemented, the employed communication technologies are a key point \n\
    to achieve successful operation. In a generic way, communication technologies\
    \ can be classified \naccording to the environment where they will be deployed,\
    \ the utilized communication standard or \nthe utilized spectrum band. Table 5\
    \ shows the main technologies used in IoT for irrigation systems. \nIf the scenario\
    \ is considered, they can be classified into two types depending on the purpose\
    \ of \nthe IoT devices. On the one hand, we can distinguish the devices that function\
    \ as nodes that transmit \nsmall amounts of data at short distances and have low\
    \ energy consumption. On the other hand, there \nare devices that can transmit\
    \ large amounts of data over long distances that have high energy \nconsumption.\
    \ Therefore, range, data rate, and energy consumption are some of the most important\
    \ \naspects to consider when deciding which technology to use\nFigure 24. Most\
    \ utilized processors to implement IoT nodes for irrigation systems.\n6.2. Communication\
    \ Technologies\nIn this subsection, an overview of the most employed wireless\
    \ communication technologies is\ngoing to be presented as well.\nAccording to\
    \ the Machina research report, the number of connected agricultural devices is\n\
    expected to grow from 13 million at the end of 2014 to 225 million by 2024 [183].\
    \ In addition, the\nreport predicts that around half of those connections will\
    \ use the newly emerging low power wide area\nnetwork technologies which are particularly\
    \ well suited to many of the applications in agriculture.\nWhen IoT devices are\
    \ implemented, the employed communication technologies are a key point to\nachieve\
    \ successful operation. In a generic way, communication technologies can be classiﬁed\
    \ according\nto the environment where they will be deployed, the utilized communication\
    \ standard or the utilized\nspectrum band. Table 5 shows the main technologies\
    \ used in IoT for irrigation systems.\nSensors 2020, 20, 1042\n22 of 48\nTable\
    \ 5. Main technologies used in IoT for irrigation systems.\nGroup\nTechnology\n\
    Frequency Bands\nMax. Data Rate\nCellular\n3G\n380.2–389.8 MHz, 390.2–399.8 MHz,\
    \ 410.2–419.8 MHz, 420.2–429.8 MHz,\n450.6–457.6 MHz, 460.6–467.6 MHz, 479.0–486.0\
    \ MHz, 489.0–496.0 MHz,\n698.2–716.2 MHz, 728.2–746.2 MHz, 777.2–792.2 MHz, 747.2–762.2\
    \ MHz,\n806.2–821.2 MHz, 851.2–866.2 MHz, 824.2–848.8 MHz, 869.2–893.8 MHz,\n\
    890.0–915.0 MHz, 935.0–960.0 MHz, 880.0–915.0 MHz, 925.0–960.0 MHz,\n876.0–915.0\
    \ MHz, 921.0–960.0 MHz, 870.4–876.0 MHz, 915.4–921.0 MHz,\n1710.2–1784.8 MHz,\
    \ 1805.2–1879.8 MHz, 1850.2–1909.8 MHz, 1930.2–1989.8 MHz\nUpload 7.2 Mbps\nDownload\
    \ 2 Mbps\n4G/LTE\n452.5–457.5 MHz, 462.5–467.5 MHz, 703–748 MHz, 703–803 MHz,\
    \ 704–716 MHz,\n717–728 MHz, 734–746 MHz, 738–758 MHz, 758–803 MHz, 791–821 MHz,\n\
    807–824 MHz, 814–849 MHz, 815–830 MHz, 824–849 MHz, 830–845 MHz,\n832–862 MHz,\
    \ 852–869 MHz, 859–894 MHz, 860–875 MHz, 869–894 MHz,\n875–890 MHz, 880–915 MHz,\
    \ 925–960 MHz, 1427.9–1447.9 MHz,\n1475.9–1495.9 MHz, 1447–1467 MHz, 1447.9–1462.9\
    \ MHz, 1495.9–1510.9 MHz,\n1525–1559 MHz, 1626.5–1660.5 MHz, 1710–1770 MHz, 1710–1755\
    \ MHz,\n1710–1780 MHz, 1710–1785 MHz, 1749.9–1784.9 MHz, 1805–1880 MHz,\n1844.9–1879.9\
    \ MHz, 1850–1910 MHz, 1850–1915 MHz, 1880–1920 MHz,\n1910–1930 MHz, 1930–1990\
    \ MHz, 1930–1995 MHz, 1920–1980 MHz,\n1920–2010 MHz, 2000–2020 MHz, 2010–2025\
    \ MHz, 2110–2155 MHz,\n2110–2170 MHz, 2180–2200 MHz, 2300–2400 MHz, 2305–2315\
    \ MHz,\n2350–2360 MHz, 2496–2690 MHz, 2500–2570 MHz, 2620–2690 MHz, 3400–3600\n\
    MHz, 3410–3490 MHz, 3510–3590 MHz, 3600–3800 MHz, 5150–5925 MHz\nUpload 150 Mbps\n\
    Download 50 Mbps\n5G\nFrequency Range 1: 663–698 MHz, 617–652 MHz, 699–716 MHz,\
    \ 703–748 MHz,\n717–728 MHz, 729–746 MHz, 758–803 MHz,788–798 MHz, 758–768 MHz,\n\
    791–821 MHz, 815–830 MHz, 824–849 MHz, 832–862 MHz, 860–875 MHz,\n869–894 MHz,\
    \ 880–915 MHz, 925–960 MHz, 1427–1432 MHz, 1427–1470 MHz,\n1432–1517 MHz, 1475–1518\
    \ MHz, 1695–1710 MHz, 1710–1780 MHz,\n1710–1785 MHz, 1805–1880 MHz, 1850–1910\
    \ MHz, 1850–1915 MHz,\n1880–1920 MHz, 1920–1980 MHz, 1920–2010 MHz, 1930–1990\
    \ MHz,\n1930–1995 MHz,1995–2020 MHz, 2010–2025 MHz, 2110–2170 MHz,\n2110–2200\
    \ MHz, 2300–2400 MHz, 2305–2315 MHz, 2350–2360 MHz,\n2496–2690 MHz, 2500–2570\
    \ MHz, 2570–2620 MHz, 2620–2690 MHz,\n3300–4200 MHz, 3300–3800 MHz, 3550–3700\
    \ MHz, 4400–5000 MHz\nFrequency Range 2: 26.50–29.50 GHz, 24.25–27.50 GHz, 37.00–40.00\
    \ GHz,\n27.50–28.35 GHz\nSensors 2020, 20, 1042\n23 of 48\nTable 5. Cont.\nGroup\n\
    Technology\nFrequency Bands\nMax. Data Rate\nWireless Personal\nArea Networks\n\
    IEEE 802.15.1—Bluetooth\n2400–2483.5 MHz\nUp to 3 Mbps\nBLE (Bluetooth Low-Energy)\n\
    2.400–2.4835 GHz\nUp to 2 Mbps\nRFID\nRadio Frequency Identiﬁcation\n(RFID)\n\
    Low Frequency: 125 or 134.2 kHz\nHigh Frequency: 13.56 MHz\nUltra High Frequency:\
    \ 868–956 MHz\nMicrowaves: 2.45\nUHF: Up to 640 kbps\nMesh Protocols\nZigbee\n\
    868–868.6 MHz, 902–9286 MHz, 2400 MHz\nUp to 250 kbps\nZ-Wave\n865.2 MHz, 869\
    \ MHz, 868.4 MHz, 868.40 MHz, 868.42 MHz, 869.85 MHz,\n908.4 MHz, 908.42 MHz,\
    \ 916 MHz, 919.8 MHz, 921.4 MHz, 919–923 MHz,\n920–923 MHz, 920–925 MHz, 922–926\
    \ MHz\nUp to 100 kbps\nThread\nGlobal: 2400–2500 MHz\nAmerica, Australia: 902–928\
    \ MHz\nEurope: 868–868.6 MHz,\nUp to 250 kbps\nWiFi\nIEEE 802.11a\n5725–5875 MHz\n\
    Up to 54 Mbps\nIEEE 802.11b\n2400–2500 MHz\nUp to 11 Mbps\nIEEE 802.11g\n2400–2500\
    \ MHz\nUp to 54 Mbps\nIEEE 802.11n\n2400–2500 MHz, 5725–5875 MHz\nUp to 600 Mbps\n\
    IEEE 802.1ac\n2400–2500 MHz, 5725–5875 MHz\nUp to 3.46 Gbps\nIEEE 802.11ah\nAH\
    \ All Countries: 2400–2500 MHz, 5725–5875 MHz\nAH Europe: 863–868 MHz\nAH USA:\
    \ 902–928 MHz\nAH China:755–787 MHz\nAH Japan: 916.5–927.5 MHz\nAH Korea: 917.5–923.5\
    \ MHz\nAH Singapore: 866–869 MHz, 920–925 MHz\nUp to 40 Mbps\nSensors 2020, 20,\
    \ 1042\n24 of 48\nTable 5. Cont.\nGroup\nTechnology\nFrequency Bands\nMax. Data\
    \ Rate\nLow-Power Wide\nArea Network\n(LPWAN)\nNarrowBand IoT (NB-IoT)\nGlobal:\
    \ 1950 MHz, 2140 MHz, 1747.5 MHz, 1842.5 MHz, 897.5 MHz, 942.5 MHz,\n455 MHz,\
    \ 465 MHz\n200 kbps\nEMEA: 847 MHz, 806 MHz, 453.5 MHz, 463.5 MHz\nEU: 725.5 MHz,\
    \ 780.5 MHz\nNorth America Region: 1880 MHz, 1960 MHz, 1732.5 MHz, 2132.5 MHz,\n\
    836.5 MHz, 881.5 MHz, 707.5 MHz, 737.5 MHz, 782 MHz, 751 MHz, 793 MHz,\n763 MHz,\
    \ 710 MHz, 740 MHz, 1882.5 MHz, 1962.5 MHz, 831.5 MHz, 876.5 MHz,\n1745 MHz, 2155\
    \ MHz, 1702.5 MHz, 2007.5 MHz, 680.5 MHz, 634.5 MHz,\n1448.5 MHz, 1496.5 MHz,\
    \ 707 MHz, 737 MHz\nAPAC: 725.5 MHz, 780.5 MHz, 452.5 MHz, 462.5 MHz\nJapan: 1437.9\
    \ MHz, 1485.9 MHz, 822.5 MHz, 867.5 MHz, 837.5 MHz, 882.5 MHz,\n1455.4 MHz, 1503.4\
    \ MHz\nLong Term Evolution—Machine\nType Communication (LTE-M)\nGlobal: 1950 MHz,\
    \ 2140 MHz, 1747.5 MHz, 1842.5 MHz, 897.5 MHz, 942.5 MHz,\n455 MHz, 465 MHz\n\
    Upload peak rate of 5 Mbps\nDownload peak rate of 10 Mbps\nEMEA: 2535 MHz, 2655\
    \ MHz, 847 MHz, 806 MHz, 453.5 MHz, 463.5 MHz\nEU: 725.5 MHz, 780.5 MHz\nNorth\
    \ America Region: 1880 MHz, 1960 MHz, 1732.5 MHz, 2132.5 MHz,\n836.5 MHz, 881.5\
    \ MHz, 707.5 MHz, 737.5 MHz, 782 MHz, 751 MHz, 793 MHz,\n763 MHz, 1882.5 MHz,\
    \ 1962.5 MHz, 831.5 MHz, 876.5 MHz, 815.5 MHz,\n860.5 MHz, 1745 MHz, 2155 MHz,\
    \ 680.5 MHz, 634.5 MHz, 1448.5 MHz,\n1496.5 MHz, 707 MHz, 737 MHz\nAPAC: 452.5\
    \ MHz, 462.5 MHz, 725.5 MHz, 780.5 MHz\nChina: TDD, 1900 MHz, TDD, 2350 MHz\n\
    Japan: 1437.9 MHz, 1485.9 MHz, 822.5 MHz, 867.5 MHz, 837.5 MHz, 882.5 MHz,\n1455.4\
    \ MHz, 1503.4 MHz\nSensors 2020, 20, 1042\n25 of 48\nTable 5. Cont.\nGroup\nTechnology\n\
    Frequency Bands\nMax. Data Rate\nExtended coverage GSM\n(EC-GSM)\nGlobal: 385\
    \ MHz, 395 MHz, 415 MHz, 425 MHz, 454 MHz, 464 MHz,\n482.4 MHz, 492,4 MHz, 707.2\
    \ MHz, 737.2 MHz, 785.2 MHz, 755.2 MHz,\n813.7 MHz, 858.7 MHz\nDownlink Peak Data\
    \ Rate:\n70 kbps (GSMK), 240 kbps (8PSK)\nUplink Peak Data Rate: 70 kbps\n(GSMK),\
    \ 240 kbps (8PSK)\nAPAC & EMEA: 897 MHz, 942 MHz\nCaribbean, LATAM & North America\
    \ Region: 836.5 MHz, 881.5 MHz,\n1880 MHz, 1960 MHz\nITU Region 1 & 3: 902.5,\
    \ 947.5 MHz, 895.5 MHz, 940.5 MHz, 1747.5 MHz,\n1842.5 MHz\nSigfox\nRC1: 868.130\
    \ MHz, 869.525 MHz\nRC2: 902.200 MHz, 905.200 MHz\nRC3: 923.200 MHz, 922.200 MHz\n\
    RC4: 920.800 MHz, 922.300 MHz\nRC5: 923.300 MHz, 922.300 MHz\nRC6: 865.200 MHz,\
    \ 866.200 MHz\n100 or 600 bps\nLoRa—Low Power Wide Area\nNetwork (LoRaWAN)\nEurope:\
    \ 870 MHz, 863 MHz, 434 MHz, 433 MHz\nIndia: 867 MHz, 865 MHz\nRegion 2—America,\
    \ Greenland, Eastern Paciﬁc Islands: 928 MHz, 902 MHz\nAustralia, New Zealand:\
    \ 928 MHz, 915 MHz\nChina: 510 MHz, 470 MHz, 787 MHz, 779 MHz\nHong Kong: 925\
    \ MHz, 920 MHz\nTaiwan: 928 MHz, 922 MHz\nSouth Korea: 923 MHz, 920 MHz\nJapan:\
    \ 928 MHz, 920 MHz\nSingapore, Thailand, Vietnam: 925 MHz, 920 MHz\nBrunei, Cambodia,\
    \ Indonesia, Laos: 925 MHz, 923 MHz\n0.3 to 50 kbps\nMIOTY\n868 MHz\nSensors 2020,\
    \ 20, 1042\n26 of 48\nIf the scenario is considered, they can be classiﬁed into\
    \ two types depending on the purpose of\nthe IoT devices. On the one hand, we\
    \ can distinguish the devices that function as nodes that transmit\nsmall amounts\
    \ of data at short distances and have low energy consumption. On the other hand,\n\
    there are devices that can transmit large amounts of data over long distances\
    \ that have high energy\nconsumption. Therefore, range, data rate, and energy\
    \ consumption are some of the most important\naspects to consider when deciding\
    \ which technology to use.\nIf the utilized standard is considered, there are\
    \ a large number of wireless standards that are used\nin the communications of\
    \ IoT devices. A general classiﬁcation can be established between devices\nthat\
    \ communicate at short or long distances. Short distance communication standards\
    \ usually reach\ndistances of up to 100 m. Long-distance communication standards\
    \ reach distances of kilometers.\nAlso, another type of classiﬁcation can be established\
    \ based on the employed communication\ntechnology. In this way, three categories\
    \ can be established. The ﬁrst category is formed by those that\nconnect utilizing\
    \ Ethernet or cable and WAN technology. The second category is comprised of those\n\
    that connect via WiFi and WAN technology. Finally, the third category is formed\
    \ by those that connect\nusing both low power WiFi and WAN technology.\nIf the\
    \ spectrum band used is considered, we can classify them into technologies that\
    \ use the\nunlicensed spectrum or the licensed spectrum. Unlicensed spectrum bands\
    \ are known as Industrial,\nScientiﬁc, and Medical (ISM radio band bands, and\
    \ are deﬁned by article 1.15 of the International\nTelecommunication Union’s (ITU)\
    \ ITU Radio Regulations (RR) [184]. The ISM bands can vary according\nto the region\
    \ and its permits. Its main advantage is its ease of installation and the main\
    \ drawbacks are\nrelated to safety deﬁciencies and possible interferences. The\
    \ licensed spectrum bands are assigned\naccording to the diﬀerent proprietary\
    \ technologies. They oﬀer greater security, greater coverage, and\nfewer interferences.\
    \ However, the cost of using a licensed band is higher.\nThe most utilized communication\
    \ technologies among the reviewed papers are presented in\nTable 6. In many of\
    \ the proposals that we have studied, the authors combine several communication\n\
    technologies instead of using one single protocol. As an example, it is very common\
    \ for authors to\nstart using either a wired or a wireless technology to connect\
    \ the sensors with the nodes, and then, use\na wireless technology to send data\
    \ from nodes to remote or cloud storage centers.\nTable 6. Most utilized communication\
    \ technologies in IoT crop irrigation systems.\nTechnology\nReferences\nEthernet\n\
    [52,62,72,99,117,131,138,139,146,152,164]\nGSM\n[35,36,44,48,51,57,61,64,72,73,79,85,90–92,103,112,129,153,157,185–189]\n\
    Wi-Fi\n[28,34,41,43,46,47,50–53,56,59,60,64–66,69–71,77,82,84,88,94,95,111,112,116,117,119,120,123,\n\
    125–129,132,134,135,139,143,151–154,156–158,160,163,165,166,168,169,173,182,187,190–194]\n\
    ZigBee\n[5,32,39,42,63,65–67,93,119–123,128,133,137,144,151,157,175,185,191]\n\
    Bluetooth\n[46,53,81,118,129,132,134,156,174,181,195,196]\nLoRa\n[14,31,78,95,142,144,145,149,157,196,197]\n\
    GPRS\n[44,45,67,73,79,98,101,122,137,157,161,171,179,186,190]\nMQTT\n[47,75,86,113,114,160,175,176]\n\
    4G\n[14,45,78,138,141,145,152]\n6LoWPAN\n[75,147]\nIEEE 802.15.4\n[73,102]\nAccording\
    \ to the descriptions provided by the diﬀerent authors of their own implementations,\n\
    we have veriﬁed that the most used communication technology in the diﬀerent proposals\
    \ is WiFi,\nas it can be seen in Figure 25. The reason could be due to is accessibility.\
    \ The currently available\nlow-cost devices for IoT usually support WiFi and,\
    \ although its range can be considered short for\nthe average expanse of a farm,\
    \ small farms could be able to provide enough wireless coverage with\nseveral\
    \ low-cost devices. GSM and ZigBee are widely spread wireless technologies as\
    \ well, with 25\nand 23 papers that use them respectively. GSM provides long-range\
    \ communication at the cost of a\nmobile plan of the service provider that operates\
    \ in the area. ZigBee provides low energy consumption\nSensors 2020, 20, 1042\n\
    27 of 48\nand allows implementing networks with up to 65000 nodes. However, it\
    \ has lower data rates than\nother available technologies and its range would\
    \ imply the deployment of many nodes. Lastly, there\nare two new technologies\
    \ that have been getting popular recently. LoRa is able to provide very long\n\
    ranges, which makes this technology a very good option for secluded areas with\
    \ no service. Moreover,\nregarding speciﬁc protocols for IoT systems, it is a\
    \ little bit surprising that even though MQTT is\na widely spread protocol due\
    \ to its low power consumption and low overhead, it is not a popular\nprotocol\
    \ for IoT irrigation systems at the moment. It is observed that a relatively high\
    \ number of\npapers, exactly in 24 papers, did not describe the employed technology.\
    \ In Figure 25 this group has\nbeen named as Undeﬁned.\n \nwe have verified that\
    \ the most used communication technology in the different proposals is WiFi, as\
    \ \nit can be seen in Figure 25. The reason could be due to is accessibility.\
    \ The currently available low-\ncost devices for IoT usually support WiFi and,\
    \ although its range can be considered short for the \naverage expanse of a farm,\
    \ small farms could be able to provide enough wireless coverage with \nseveral\
    \ low-cost devices. GSM and ZigBee are widely spread wireless technologies as\
    \ well, with 25 \nand 23 papers that use them respectively. GSM provides long-range\
    \ communication at the cost of a \nmobile plan of the service provider that operates\
    \ in the area. ZigBee provides low energy \nconsumption and allows implementing\
    \ networks with up to 65000 nodes. However, it has lower data \nrates than other\
    \ available technologies and its range would imply the deployment of many nodes.\
    \ \nLastly, there are two new technologies that have been getting popular recently.\
    \ LoRa is able to \nprovide very long ranges, which makes this technology a very\
    \ good option for secluded areas with \nno service. Moreover, regarding specific\
    \ protocols for IoT systems, it is a little bit surprising that even \nthough\
    \ MQTT is a widely spread protocol due to its low power consumption and low overhead,\
    \ it is \nnot a popular protocol for IoT irrigation systems at the moment. It\
    \ is observed that a relatively high \nnumber of papers, exactly in 24 papers,\
    \ did not describe the employed technology. In Figure 25 this \ngroup has been\
    \ named as Undefined \n \nFigure 25. Communication technologies employed to implement\
    \ IoT irrigation systems. \n \n \nFigure 25. Communication technologies employed\
    \ to implement IoT irrigation systems.\nWe also observe that, in a large number\
    \ of works, the end-users access the data, obtained during\nthe monitoring process\
    \ or to carry out the control of the system, through APPs or WEBs. Most of these\n\
    communications are done through mobile devices using wireless technologies.\n\
    Table 7 presents the communication modules that have been used in the reviewed\
    \ articles.\nIt is observed that most of the authors have not indicated the communication\
    \ module employed.\nFurthermore, it can be observed that the most utilized module\
    \ is the ES8266 WiFi module (SparkFun\nElectronics, Boulder, CO, USA) with 29\
    \ papers. It is followed by the SIM900 GSM module (SIMCOM\nWireless Solutions,\
    \ Shanghai, China ) with nine papers and the NRF24L01 2.4 GHz module (Longruner,\n\
    Shenzhen, China), the XBee S2 ZigBee module (Digi International Worldwide Headquarters,\
    \ Hopkins,\nMN, USA) and the SX1276 LoRa module (Semtech, Camarillo, CA, USA)\
    \ with three papers each.\nSome other less utilized modules and chips for wireless\
    \ communication include GSM modules such as\nthe SIM800 (SIMCOM Wireless Solutions,\
    \ Shanghai, China) [171,187], the SIM300 (SIMCOM Wireless\nSolutions, Shanghai,\
    \ China) [189], Ethernet modules such as the W5100 (SparkFun Electronics, Boulder,\n\
    CO, USA) [72] or the Ethernet Shield (ELEGOO, Shenzhen, China ) utilized in [139],\
    \ WiFi modules such\nas the ESP32 (Espressif Systems, Shanghai, China ) [119],\
    \ the ESP1 [112], the ATWIN C1500 (Microchip\nTechnology Inc., Chandler, AZ, USA)\
    \ [191] and the Broadcom (Broadcom, San José, CA, USA) [152],\nLoRa modules such\
    \ as the Feather 32u4 (Adafruit Industries, New York, NY, USA) [191] and the LoRa\n\
    ESP32 [196], 2.4 GHz RF modules such as the C2500 (Mascot, Tainan City, Taiwan)\
    \ [179] and sub-1\nGHz RF modules such as the CC1310 (Texas Instruments, Dallas,\
    \ TX, USA) [147] and the CC1101 [150],\nBluetooth modules such as the HC-05 (Guangzhou\
    \ HC Information Technology Co., Guangzhou,\nChina) [129,198] and near radio frequency\
    \ nodules such as the NRF4L (Shen zhen City Huo Chuang\nTechnology Company Ltd.,\
    \ Shenzhen, China) [181]. There other modules that are compatible with\nseveral\
    \ technologies such as the JN5139 that admits both WiFi and ZigBee [121] or the\
    \ Dragino LoRa\nGPS shield (DRAGINO TECHNOLOGY CO., LIMITED, Shenzhen, China)\
    \ [144].\nSensors 2020, 20, 1042\n28 of 48\nTable 7. Most utilized communication\
    \ modules.\nTechnology\nReferences\nESP82666\n[34,43,47,56,64,69,71,82,84,86,87,94,97,111,113,114,116,119,123,126,127,129,158,160,166,168,\n\
    169,177,182,187,193]\nSIM900\n[35,36,44,61,72,122,129,179,192]\nNRF24L01\n[124,131,173]\n\
    XBee S2\n[119,121,144]\nSX1276\n[78,95,145]\n6.3. Cloud Platforms\nIn this subsection,\
    \ an overview of the most frequent cloud systems for IoT in smart irrigation\n\
    solutions is going to be discussed. The two main storage systems used by the authors\
    \ are traditional\ndatabases or cloud. In one article, the authors indicate that\
    \ they store the data in a Raspberry Pi [124].\nAs it can be seen in Figure 26,\
    \ a large percentage of the authors, more than 50%, have not deﬁned the\nstorage\
    \ system they have used, there are 79 other papers where the storage system used\
    \ is not speciﬁed.\nSensors 2020, 20, x \n28 of 48 \n6.3. Cloud Platforms \nIn\
    \ this subsection, an overview of the most frequent cloud systems for IoT in smart\
    \ irrigation \nsolutions is going to be discussed. The two main storage systems\
    \ used by the authors are traditional \ndatabases or cloud. In one article, the\
    \ authors indicate that they store the data in a Raspberry Pi [124]. \nAs it can\
    \ be seen in Figure 26, a large percentage of the authors, more than 50%, have\
    \ not defined the \nstorage system they have used, there are 79 other papers where\
    \ the storage system used is not \nspecified.  \n \nFigure 26. Number of papers\
    \ per storage system. \nTo be able to provide the new services that are currently\
    \ demanded in IoT, it is necessary to use \nmiddleware. Through middleware, it\
    \ is possible to connect programs that initially had not been \ndeveloped to be\
    \ connected to each other. Bandyopadhyay et al. [199] presented a classification\
    \ of the \nIoT-middleware, based on the various features and interface protocol\
    \ support. One of the reasons \nwhy middleware is needed to connect IoT devices,\
    \ which are initially autonomous, is to provide \ncloud services. We can take\
    \ advantage of existing middleware using it on different cloud platforms. \nWhen\
    \ we talk about the cloud, we identify a place where data, which is collected\
    \ through sensors \nand transmitted to remote locations, will be stored and processed.\
    \ In most of the articles, it is \nindicated that the data is processed in the\
    \ cloud itself, and the end-users view all the information by \nconnecting to\
    \ the cloud. Cloud storage has been done on different platforms as it can be seen\
    \ in Figure \n27. In 24 of the reviewed articles, the authors specified that they\
    \ store the monitored data in the cloud, \nbut do not identify the utilized cloud\
    \ platform (see Table 8). Most of the works in which the authors \ndefine the\
    \ employed cloud platform, the utilized platform is Thingspeak (The MathWorks,\
    \ Natick, \nMA, USA), with 14 papers. This platform is very intuitive and provides\
    \ both free and paid options \nfor storing, analyzing and displaying the data\
    \ on different devices. Algorithms can be developed \nusing MATLAB (The MathWorks,\
    \ Natick, MA, USA) to generate alerts. However, there are proposals \nthat use\
    \ other cloud platforms such as FIWARE (FIWARE Foundation, Berlin, Germany) [75,149]\
    \ and \nDynamo DB (Amazon DynamoDB, Seattle, Washington, USA) [117,159] with two\
    \ papers each, and \nMongoDB (MongoDB Inc., New York, New York, USA) [28], Ubidots\
    \ (Ubidots, Doral, FL, USA) [5], \nAmazon (Amazon, Seattle, Washington, USA) [91],\
    \ M2X (AT&T, Dallas, Texas, USA) [200], NETPIE \n(Nexpie Co., Ltd., Bangkok, Thailand)\
    \ [43], SAP (SAP SE, Walldorf, Germany) [201], InteGra (Integra \nNetwork Services,\
    \ Milford, MA, USA) [194], Firebase (Firebase, San Francisco, California, USA)\
    \ [154, \nInfluxDB (InfluxData, San Francisco, California, USA) [176]. These less-used\
    \ platforms are either \nFigure 26. Number of papers per storage system.\nTo be\
    \ able to provide the new services that are currently demanded in IoT, it is necessary\
    \ to\nuse middleware. Through middleware, it is possible to connect programs that\
    \ initially had not been\ndeveloped to be connected to each other. Bandyopadhyay\
    \ et al. [199] presented a classiﬁcation of the\nIoT-middleware, based on the\
    \ various features and interface protocol support. One of the reasons why\nmiddleware\
    \ is needed to connect IoT devices, which are initially autonomous, is to provide\
    \ cloud\nservices. We can take advantage of existing middleware using it on diﬀerent\
    \ cloud platforms.\nWhen we talk about the cloud, we identify a place where data,\
    \ which is collected through sensors\nand transmitted to remote locations, will\
    \ be stored and processed. In most of the articles, it is indicated\nthat the\
    \ data is processed in the cloud itself, and the end-users view all the information\
    \ by connecting\nto the cloud. Cloud storage has been done on diﬀerent platforms\
    \ as it can be seen in Figure 27. In 24 of\nthe reviewed articles, the authors\
    \ speciﬁed that they store the monitored data in the cloud, but do not\nidentify\
    \ the utilized cloud platform (see Table 8). Most of the works in which the authors\
    \ deﬁne the\nemployed cloud platform, the utilized platform is Thingspeak (The\
    \ MathWorks, Natick, MA, USA),\nwith 14 papers. This platform is very intuitive\
    \ and provides both free and paid options for storing,\nanalyzing and displaying\
    \ the data on diﬀerent devices. Algorithms can be developed using MATLAB\n(The\
    \ MathWorks, Natick, MA, USA) to generate alerts. However, there are proposals\
    \ that use other\ncloud platforms such as FIWARE (FIWARE Foundation, Berlin, Germany)\
    \ [75,149] and Dynamo DB\n(Amazon DynamoDB, Seattle, WA, USA) [117,159] with two\
    \ papers each, and MongoDB (MongoDB\nSensors 2020, 20, 1042\n29 of 48\nInc., New\
    \ York, NY, USA) [28], Ubidots (Ubidots, Doral, FL, USA) [5], Amazon (Amazon,\
    \ Seattle, WA,\nUSA) [91], M2X (AT&T, Dallas, TX, USA) [200], NETPIE (Nexpie Co.,\
    \ Ltd., Bangkok, Thailand) [43],\nSAP (SAP SE, Walldorf, Germany) [201], InteGra\
    \ (Integra Network Services, Milford, MA, USA) [194],\nFirebase (Firebase, San\
    \ Francisco, CA, USA) [154], InﬂuxDB (InﬂuxData, San Francisco, CA, USA) [176].\n\
    These less-used platforms are either more expensive, provide fewer services or\
    \ are less intuitive than\nThingspeak. Table 4 lists the cloud platforms that\
    \ have been used in the reviewed articles.\nSensors 2020, 20, x \n29 of 48 \n\
    \ \nTable 8. Cloud platforms. \nCloud \nReferences \nUnspecified Cloud \n[14,32,41,50,64,72,77,78,88,99,110,113,114,119,121,132,142,151–153,156,169,175,197]\
    \ \nThingspeak \n[44,56,98,115,118,130,143,146,158,160,166,170,173,191] \n \n\
    Figure 27. Number of papers that employ each clouds service or platform. \nThe\
    \ rest of the articles where the authors identify the storage system utilize databases.\
    \ As it can \nbe seen in Figure 28, in 12 articles the information is stored in\
    \ a database, but the name of the \nemployed database is not specified. Other\
    \ authors have identified the utilized databases. The most \nutilized one is MySQL\
    \ [35,46,54,58,67,76,96,110,124,126,144,158] 12 papers, followed by SQL [69,119]\
    \ \nwith two papers. Other less utilized databases where SQLite (Hwaci. Hipp,\
    \ Wyrick & Company, Inc., \nCharlotte, NC, USA) [52] and a NoSQL database with\
    \ JSON [185] with one paper each.  \n \nFigure 28. Number of employed Databases\
    \ to store data of IoT nodes for irrigation systems. \n \n \nFigure 27. Number\
    \ of papers that employ each clouds service or platform.\nTable 8. Cloud platforms.\n\
    Cloud\nReferences\nUnspeciﬁed Cloud\n[14,32,41,50,64,72,77,78,88,99,110,113,114,119,121,132,142,151–153,156,169,175,197]\n\
    Thingspeak\n[44,56,98,115,118,130,143,146,158,160,166,170,173,191]\nThe rest of\
    \ the articles where the authors identify the storage system utilize databases.\
    \ As it can\nbe seen in Figure 28, in 12 articles the information is stored in\
    \ a database, but the name of the employed\ndatabase is not speciﬁed. Other authors\
    \ have identiﬁed the utilized databases. The most utilized\none is MySQL [35,46,54,58,67,76,96,110,124,126,144,158]\
    \ 12 papers, followed by SQL [69,119] with two\npapers. Other less utilized databases\
    \ where SQLite (Hwaci. Hipp, Wyrick & Company, Inc., Charlotte,\nNC, USA) [52]\
    \ and a NoSQL database with JSON [185] with one paper each.\nSensors 2020, 20,\
    \ x \n29 of 48 \nTable 8. Cloud platforms. \nCloud \nReferences \nUnspecified\
    \ Cloud \n[14,32,41,50,64,72,77,78,88,99,110,113,114,119,121,132,142,151–153,156,169,175,197]\
    \ \nThingspeak \n[44,56,98,115,118,130,143,146,158,160,166,170,173,191] \n \n\
    Figure 27. Number of papers that employ each clouds service or platform. \nThe\
    \ rest of the articles where the authors identify the storage system utilize databases.\
    \ As it can \nbe seen in Figure 28, in 12 articles the information is stored in\
    \ a database, but the name of the \nemployed database is not specified. Other\
    \ authors have identified the utilized databases. The most \nutilized one is MySQL\
    \ [35,46,54,58,67,76,96,110,124,126,144,158] 12 papers, followed by SQL [69,119]\
    \ \nwith two papers. Other less utilized databases where SQLite (Hwaci. Hipp,\
    \ Wyrick & Company, Inc., \nCharlotte, NC, USA) [52] and a NoSQL database with\
    \ JSON [185] with one paper each.  \n \nFigure 28. Number of employed Databases\
    \ to store data of IoT nodes for irrigation systems. \n \n \nFigure 28. Number\
    \ of employed Databases to store data of IoT nodes for irrigation systems.\nSensors\
    \ 2020, 20, 1042\n30 of 48\n7. Discussion\nIn this section, current trends regarding\
    \ IoT irrigation systems for agriculture are going to\nbe presented.\n7.1. Big\
    \ Data Management and Analytics for Irrigation Optimization\nIoT systems, in general,\
    \ generate a great amount of data due to monitoring diﬀerent parameters\nin real-time,\
    \ and IoT irrigation systems generate big data as well. Therefore, it is necessary\
    \ to provide\nmechanisms to manage and analyze big data. Ahad et al. [202] comment\
    \ on the need for sustainable\nmanagement of big data to avoid overusing natural\
    \ resources. Using blockchain, powering IoT devices\nwith solar energy, selecting\
    \ useful data and discarding unnecessary and redundant data, employing\nclustering\
    \ techniques to reduce the volume of the information, implementing time-eﬃcient\
    \ algorithms\nand the utilization of sustainable resources as alternatives to\
    \ the components that are employed\nnowadays are some of the suggestions they\
    \ provide.\nAlthough the data gathered from the sensors is already a big source\
    \ of information, the analysis\nof this data is paramount to optimize the IoT\
    \ irrigation system according to the crop and the weather\nconditions. For this\
    \ purpose, Tseng et al. [203] presented a big data analysis algorithm to aid farmers\n\
    in the crop selection process. Their proposal satisﬁed the ﬁve Vs (volume, velocity,\
    \ variety, veracity,\nand value) of big data. They performed a 3D correlation\
    \ analysis that evaluated the irrigation cycle to\nidentify the irrigation practices\
    \ performed by the farmer. Then, they calculated the soil moisture content\nto\
    \ detect irrigation and to evaluate if the farmer applied pesticides or fertilizers.\
    \ This information was\ncoupled with data on the weather conditions and other\
    \ aspects of the soil to provide the farmer with\nthe cultivation risks of each\
    \ type of crop. Nonetheless, there are other technologies that are currently\n\
    being utilized to analyze the big data produced by IoT irrigation systems for\
    \ agriculture.\nArtiﬁcial intelligence (AI) is currently the type of technology\
    \ most companies are interested in for\nvarious purposes. In the case of irrigation,\
    \ the use of AI is tied to the optimization of the available\nresources such as\
    \ water, fertilizers or energy or to obtain information from the crops such as\
    \ the\npresence of diseases or the correct growth of the plants, vegetables, and\
    \ fruits. One of the techniques\nemployed to analyze the data gathered from the\
    \ sensors so as to perform decisions on the irrigation\nsystems is fuzzy logic.\
    \ Fuzzy logic has been employed to improve irrigation scheduling in greenhouses\n\
    and control the drainage implementing it on the controller of the system [100].\
    \ The fuzzy rules were\nprovided according to the water availability utilizing\
    \ the QtFuzzyLite software ((FuzzyLite Limited,\nWellington, New Zealand). Another\
    \ fuzzy logic controller is employed to determine the coverage\nerror for the\
    \ resources so as to determine if the eﬀective watering of the plants can be guaranteed\
    \ [96].\nThe system presented in [136] utilized fuzzy logic to determine the duration\
    \ of the irrigation process\nonce the soil moisture values go below the 20% threshold.\
    \ Light and temperature lead to the least\naccuracy in irrigation (40%) whereas\
    \ any combination with the soil moisture values reached an accuracy\nfrom 62 to\
    \ 81%. The authors conclude that the subsoil moisture sensor is the most important\
    \ sensor to\ndetermine irrigation. The irrigation time was predicted in [162]\
    \ as well, using the adaptive neuro fuzzy\ninterference system (ANFIS) to predict\
    \ the irrigation time. This fuzzy logic technique was implemented\nemploying the\
    \ MATLAB software. However, outdoor temperature and light are important to avoid\
    \ the\nevaporation of the water. Another irrigation system utilizes iterative\
    \ learning control (ILC) arithmetic\nto make decisions regarding the opening of\
    \ the water valves [67].\nMachine learning is another technique that is utilized\
    \ in irrigation systems to perform predictions.\nThe prediction algorithm in [120]\
    \ for soil moisture prediction obtained an accuracy of 96%. Prediction\ntechniques\
    \ can also be utilized to estimate the amount of available water for irrigation\
    \ such as the case\nof [119], where the authors employ Fisher’s LDA method for\
    \ that purpose. Water usage is predicted as\nwell in [50] employing regression\
    \ algorithms. The regression algorithms consider the temperature of\nthe environment\
    \ and the water ﬂow to produce a water consumption forecast that is then visualized\n\
    by the user through a mobile app.\nSensors 2020, 20, 1042\n31 of 48\nFeedforward\
    \ neural networks and the structural similarity index were employed in [204] to\n\
    develop an optimized smart irrigation system. The authors compared gradient descent\
    \ and variable\nlearning rate gradient descent optimization techniques to predict\
    \ soil moisture and they determined\nthat the latter was the best one. Furthermore,\
    \ a study on machine learning applied to agriculture so as\nto perform predictions\
    \ on irrigation was performed in [205]. Diﬀerent machine learning techniques\n\
    were applied to the data on the soil and the environment collected from jojoba\
    \ plantations. The authors\nconclude that the boosted tree classiﬁer was the best\
    \ classiﬁcation model was and the gradient boosted\nregression trees was the best\
    \ regression model. They had a 95% and 93% accuracy respectively.\nThe authors\
    \ suggest as well that diﬀerent feature-sets would be better for diﬀerent plots\
    \ as some\nconﬁgurations achieved better results for diﬀerent types of plots such\
    \ as organic ones. Furthermore, the\nmodels considerably reduced their accuracy\
    \ when deliberated soil drying was performed. Moreover,\nthe authors state that\
    \ the data on the weather and the saturation could be not considered without it\n\
    substantially aﬀecting the accuracy of the models.\n7.2. Low-Cost Autonomous Sensors\n\
    As we have seen in Section 2, the majority of the countries that dedicate more\
    \ eﬀort to researching\nIoT irrigation systems are countries where the farmers\
    \ cannot aﬀord commercial solutions. Therefore,\nmost of the solutions for irrigation\
    \ management are comprised of low-cost sensors and controllers so\nas to increase\
    \ the scope of the beneﬁts of utilizing smart irrigation systems. Apart from individual\n\
    sensors, some shields integrate several sensors and connectors for irrigation\
    \ and agriculture speciﬁc\nIoT systems such as the OpenGarden shield ((Libelium\
    \ Comunicaciones Distribuidas S.L., Zaragoza,\nSpain) [136]. It can be connected\
    \ to an Arduino UNO and it is comprised of an LDR, a DHT22 connector\n(SparkFun\
    \ Electronics, Niwot, CO, USA), a soil moisture connector, a hydroponics connector,\
    \ digital\nand analog pins, a DS18B20 connector (Adafruit Industries, New York,\
    \ NY, USA) and an antenna\nconnector. This type of solution allows the easy implementation\
    \ of low-cost smart irrigation systems.\n7.3. Sustainable Irrigation Systems\n\
    Most irrigation systems do not have access to the power grid, therefore there\
    \ is a need for\nalternative means of powering up the devices that conform the\
    \ system. Even irrigation systems with\naccess to the power grid may only receive\
    \ power during a constrained time period. In India, for\nexample, the system presented\
    \ in [29] determines when access to electricity is available to turn on\nthe irrigation\
    \ motors. This system was designed to help farmers when access to electricity\
    \ happens\nat irregular hours or even at night, when farmers may not be present\
    \ in the ﬁeld. To address the\nneed for alternative ways of powering the irrigation\
    \ systems in agricultural ﬁelds that are too far to\naccess the power grid, many\
    \ systems incorporate a solar energy functionality, making the system\nmore sustainable\
    \ [41]. Furthermore, the use of solar energy reduces the energetic costs which\
    \ is\nan advantage for irrigation systems intended for developing areas.\nConsidering\
    \ those reasons,\na total of 22 of the surveyed papers chose to utilize solar\
    \ energy to power their proposed irrigation\nsystem [4,38,41,46,50,56,63,66,69,88,90–92,96,99,101,140,145,171,178,181].\n\
    7.4. Frequency of the Data Acquisition\nThe frequency at which the parameters\
    \ are monitored may be diﬀerent for each proposal. Real-time\nmonitoring [31,71]\
    \ has been surging as the cost of the devices, whether they are processors, devices\n\
    for data storage or sensors, has experienced a considerable reduction. Some proposals\
    \ decide not to\nmonitor the parameters in real-time so as to reduce energy consumption.\
    \ Some authors have decided\nto take a measure every 10 s [58].\n7.5. New Forms\
    \ of Data Acquisition\nThe advances in technology as lead to new ways of obtaining\
    \ the data from the sensors deployed\nin the ﬁelds. One of the new ways of gathering\
    \ data from the sensor nodes is by utilizing drones [31].\nSensors 2020, 20, 1042\n\
    32 of 48\nDrones also allow obtaining new data that could not be obtained in other\
    \ ways such as aerial images\nof the ﬁelds.\nAnother new form of data acquisition\
    \ is the use of robots that can incorporate both sensors and\nactuators to perform\
    \ activities such as soil moisture sensing, weeding, spraying water or scaring\
    \ the\nanimals [65]. Robots can be utilized for the irrigation of precise areas\
    \ due to their ability to travel to\nthe desired location [38]. This robot is\
    \ able to measure soil moisture and include proximity sensors\nto avoid collisions.\
    \ The robot has a sprinkler system to irrigate the desired area. Furthermore,\
    \ the\nwireless robot in [66] is comprised of both environmental and soil monitoring\
    \ sensors and performs\ntasks such as water spraying, scaring animals and moving\
    \ through the ﬁeld. In order to improve the\nnavigation of the robots for irrigation,\
    \ the authors in [55] provided the robot with a coverage path\nplanning (CPP)\
    \ algorithm that has a map of the static elements and environmental data. The\
    \ robot\noperating system (ROS) was utilized to develop the control system of\
    \ the robot which is divided into\nthree layers. The ﬁrst layer reads the data\
    \ from the sensors and controls the actuators, the second\nlayer performs the\
    \ communication among the elements of the system and the third layer performs\
    \ the\ndecision making and the path planning. This robot performs irrigation as\
    \ a linear shower. Furthermore,\nthese robots can be powered by solar panels [38,66]\
    \ to provide them with more autonomy.\n7.6. Security in IoT Systems for Irrigation\n\
    Depending on the characteristics of the environment where the implementation of\
    \ the IoT system\nis carried out, securing the system may become a challenging\
    \ task as diﬀerent types of threats must be\nconsidered. On the one hand, all\
    \ the security issues of any IoT system can be applied to an IoT irrigation\n\
    system for agriculture. Therefore, current works with their focus on securing\
    \ IoT describes the security\nchallenges that IoT irrigation systems may face.\
    \ For example, organizations such as the Internet\nEngineering Task Force (IETF)\
    \ study the diﬀerent problems that aﬀect this. Furthermore, authors\nsuch as Garcia-Morchon\
    \ et al. [206] present in their work the following list of security threats and\n\
    managing risks: vulnerable software/code, privacy threats, cloning of things,\
    \ malicious substitution\nof things, eavesdropping attacks, man-in-the-middle\
    \ attack, ﬁrmware attacks, extraction of private\ninformation, routing attack,\
    \ elevation of privilege, denial-of-service (DoS) attacks. Regarding DoS\nattacks,\
    \ Kamienski et al. [50] highly stressed the importance of protecting the irrigation\
    \ system from\nDoS attacks or avoiding attackers from accessing the collected\
    \ data or the system with the intention of\ndamaging the crops.\nIn order to face\
    \ the above threats, it is necessary to apply the appropriate security measures,\
    \ but\nas new threats and attacks appear daily, [206] propose using methodologies\
    \ such as analyzing the\nbusiness impact of the attack, assessing the threats\
    \ considering their impact and probability, its impact\non the privacy of the\
    \ collected information and the process of reporting and mitigating incidents.\n\
    However, on the other hand, when considering just the currently available studies\
    \ on securing\nIoT irrigation systems speciﬁcally, it is possible to discern which\
    \ aspects of IoT security are prioritized\nfor this type of system.\nJimenez et\
    \ al. [207] identiﬁed the security threats speciﬁc to an intelligent wastewater\
    \ puriﬁcation\nsystem for irrigation. Apart from the previously mentioned security\
    \ threats [206], the authors of [207]\ncontemplate physical attacks that the IoT\
    \ deployment may face. The IoT devices must be protected\nfrom the weather and\
    \ possible animals that access the ﬁelds. However, strong weather conditions\n\
    such as ﬂoods or animals such as wilds boars may result in the IoT device being\
    \ damaged or lost.\nFurthermore, the IoT devices may also be damaged by the operators\
    \ when they are performing their\nactivities or be the aim of a person with malicious\
    \ intentions. Another threat to the devices deployed\non the ﬁeld is the possibility\
    \ of them being replaced to malicious nodes, providing the attacker with\naccess\
    \ to the network [29]. The deployed devices may also be susceptible to malicious\
    \ code and false\ndata injection, leading to wrong results and the malfunction\
    \ of the system. Sleep deprivation attacks\nare aimed at depleting the battery\
    \ of the devices. The deployed nodes are susceptible to booting attacks\nas well.\
    \ Furthermore, attackers may also perform eavesdropping and interfere with the\
    \ deployed\nSensors 2020, 20, 1042\n33 of 48\ndevices. The concern of securing\
    \ the physical devices deployed on the ﬁelds has led to many systems\nincorporating\
    \ PIR sensors, scarecrows, and buzzers to detect intruders, either humans or animals,\
    \ and\nto alert of their presence [59,208].\nPrivacy is another aspect to consider.\
    \ The data managed by IoT irrigation systems may not need as\nmuch privacy as\
    \ the data managed by other IoT applications such as those for health. In fact,\
    \ Jimenez\net al. [207] remark that it may not be necessary for the gathered data\
    \ of some irrigation IoT systems to\nremain private, but the correct performance\
    \ of the system must be ensured, which is avoiding DoS\nattacks. However, the\
    \ owners of the ﬁelds may be implementing new techniques they would prefer to\n\
    remain private or the water quality management system could be regarded as a critical\
    \ infrastructure\nas the produce that results from the ﬁelds irrigated with that\
    \ water would be consumed by people.\nTherefore, considering this aspect, Ahad\
    \ et al. [202] and Barreto et al. [209] remark the need for user\nprivacy, as\
    \ the obtention of this information may lead to attacks to the owner or the personnel\
    \ of the\nfarm. Ahad et al. [202] consider data and device privacy as well, because\
    \ of the need for guaranteeing\nthe ownership of the data to avoid repudiation\
    \ and ensuring data availability. Barreto et al. [209]\nremark on the burden that\
    \ could be originated from the exposure of the GPS locational data captured\n\
    by IoT devices as attackers may gain information on the location of the farm to\
    \ perform physical attacks.\nLastly, Ahad et al. [202] also comment on the need\
    \ for a secure storage system for the information,\nwith particular emphasis on\
    \ distributed data storage systems. Attacks such as SQL injections can lead\n\
    to the obtention of private information from storage systems [210].\nAs cloud\
    \ computing often goes hand in hand with IoT systems, threats to cloud services\
    \ may\ncompromise the IoT irrigation system as well. Flooding attacks and cloud\
    \ malware injection are some\nof the attacks that can be intentionally executed\
    \ to compromise the data and the performance of the\ncloud [210].\nRansomware\
    \ is another security threat that could aﬀect irrigation systems for agriculture\
    \ [209].\nAll the data regarding pesticides and the fertigation system could be\
    \ encrypted until a ransom is paid.\nFor this reason, having a back-up in a remote\
    \ location is greatly advised.\nBarreto et al. [209] also remark some security\
    \ threats that are not usually commented on when\ndiscussing the security of IoT\
    \ systems for agriculture. One of these threats is the damage that can be\ncaused\
    \ by social engineering as the users of the IoT irrigation system could provide\
    \ login information\nto people posing as technicians or click on malicious links\
    \ on their e-mails. The other threats are\nagroterrorism, cyber-espionage, mostly\
    \ related to accessing intellectual property or conﬁdential\ninformation regarding\
    \ aspects such as genetically modiﬁed crops.\nBlockchain is a new technique that\
    \ is being applied to secure IoT systems [210], which allows\nsecure data storage\
    \ and communication. In agriculture, it is mostly utilized to secure the supply\n\
    chain [211], although there are other proposals that use it to secure a greenhouse\
    \ [212] or to secure\nthe overall smart agriculture framework [213]. Regarding\
    \ IoT irrigation systems for agriculture,\nblockchain has been applied in [214]\
    \ to track and trace the information exchange of their proposed\nsmart watering\
    \ system.\n7.7. Common Architecture Designs for IoT Irrigation Systems for Agriculture\n\
    In this subsection, an overview of the most frequent architectures for these systems\
    \ is going to\nbe discussed.\nMulti-agent architectures are popular in IoT solutions\
    \ for irrigation management [175,180].\nThese types of architectures make a distinction\
    \ among the diﬀerent elements they are comprised of.\nTypically, the distinction\
    \ is made according to the layer of the architecture the elements are encompassed\n\
    in. For example, nodes positioned higher in the hierarchy may act as a broker\
    \ for those lower in the\nhierarchy [175].\nMost architectures are divided into\
    \ layers or functional blocks that represent the main actions to\nbe carried out\
    \ [215]. These blocks or layers can be considered as generic and are utilized\
    \ in most of the\nSensors 2020, 20, 1042\n34 of 48\navailable architecture designs\
    \ for IoT systems intended for irrigation management. The main elements\nof these\
    \ architectures are devices, communications, services, management, applications,\
    \ and security.\nIoT systems are comprised of devices located in a certain environment\
    \ to perform multiple\nactivities such as detection, monitoring, control, and\
    \ action. The devices must have interfaces that allow\ntheir connection with other\
    \ devices to transmit the necessary information. The data obtained through\ndiﬀerent\
    \ sensors will generally be treated and their results will be applied to diﬀerent\
    \ actuators. Then, it\nis necessary to transmit the monitored data and response\
    \ actions between the devices. Communication\nprotocols are used for this task.\
    \ In most cases, diﬀerent communication protocols are used working\ntogether on\
    \ the same IoT system. In order to perform activities such as device discovery,\
    \ device control\nor the analysis of the collected data, the use of services may\
    \ be necessary as well. The applications allow\nthe interaction of the user with\
    \ the system. From the applications, the user will be able to visualize\nthe information,\
    \ both obtained by monitoring and that extracted from the data once they have\
    \ been\nprocessed. On many occasions, the user can execute the actions that he\
    \ considers appropriate to the\nsituation presented by the data, the actions can\
    \ also be carried out automatically. Lastly, providing\nsecurity to the system\
    \ may also be considered.\nTraditionally, the IoT architecture has been considered\
    \ to be divided into three layers, which are\nthe perception, network, and application\
    \ layer. Later on, an intermediate layer placed between the\nnetwork and application\
    \ layers has been introduced in multiple studies. This layer, called service layer,\n\
    is employed to store and process data using cloud and fog computing. For the last\
    \ few years, authors\nsuch as Ferrández-Pastor [216] presented a new architecture\
    \ proposal, based on four layers: things,\nedge, communication, and cloud. In\
    \ these latest architectural proposals, the authors use the edge layer\nto locate\
    \ critical applications and perform basic control processes. Also, as indicated\
    \ by [216], cloud\n(internet/intranet) can provide Web services, data storage,\
    \ HMI interfaces or analytic applications.\nFigure 29 shows an image where one\
    \ can see the architecture models.\nSensors 2020, 20, x \n34 of 48 \n \nelements\
    \ of these architectures are devices, communications, services, management, applications,\
    \ \nand security.  \nIoT systems are comprised of devices located in a certain\
    \ environment to perform multiple \nactivities such as detection, monitoring,\
    \ control, and action. The devices must have interfaces that \nallow their connection\
    \ with other devices to transmit the necessary information. The data obtained\
    \ \nthrough different sensors will generally be treated and their results will\
    \ be applied to different \nactuators. Then, it is necessary to transmit the monitored\
    \ data and response actions between the \ndevices. Communication protocols are\
    \ used for this task. In most cases, different communication \nprotocols are used\
    \ working together on the same IoT system. In order to perform activities such\
    \ as \ndevice discovery, device control or the analysis of the collected data,\
    \ the use of services may be \nnecessary as well. The applications allow the interaction\
    \ of the user with the system. From the \napplications, the user will be able\
    \ to visualize the information, both obtained by monitoring and that \nextracted\
    \ from the data once they have been processed. On many occasions, the user can\
    \ execute the \nactions that he considers appropriate to the situation presented\
    \ by the data, the actions can also be \ncarried out automatically. Lastly, providing\
    \ security to the system may also be considered.  \nTraditionally, the IoT architecture\
    \ has been considered to be divided into three layers, which are \nthe perception,\
    \ network, and application layer. Later on, an intermediate layer placed between\
    \ the \nnetwork and application layers has been introduced in multiple studies.\
    \ This layer, called service \nlayer, is employed to store and process data using\
    \ cloud and fog computing. For the last few years, \nauthors such as Ferrández-Pastor\
    \ [216] presented a new architecture proposal, based on four layers: \nthings,\
    \ edge, communication, and cloud. In these latest architectural proposals, the\
    \ authors use the \nedge layer to locate critical applications and perform basic\
    \ control processes. Also, as indicated by \n[216], cloud (internet/intranet)\
    \ can provide Web services, data storage, HMI interfaces or analytic \napplications.\
    \ Figure 29 shows an image where one can see the architecture models. \n \nFigure\
    \ 29. Evolution of the layered model in IoT architecture. \nIn the case of the\
    \ reviewed IoT systems for irrigation, both 3-layered [46,83,118,217,218] and\
    \ 5-\nlayered architectures [180] are available. Commonly, the lower layer is\
    \ comprised of the sensor nodes \nand the actuators. The middle layer is comprised\
    \ of a gateway and contemplates data transmission. \nLastly, the third layer is\
    \ usually tasked with performing data storage and analysis. Typical third \nlayers\
    \ are conformed of cloud services, databases or applications. \nA novel take on\
    \ IoT deployments for precision agriculture is being considered on the Internet\
    \ of \nUnderground Things [219]. The authors define the functionalities as in-situ\
    \ sensing, wireless \ncommunication in underground environments and the connection\
    \ between the elements of the \narchitecture such as sensors, machinery or the\
    \ cloud. For the case of IoUT, the sensors are deployed \nunderground. The authors\
    \ performed a study on wireless communication among above ground and \nunderground\
    \ devices. The path loss link between above ground and underground devices reached\
    \ -\n80 dBm for 50 m. The distance between underground devices reached approximately\
    \ 10 m for -80 \ndBm. The authors also comment on the effects of soil moisture\
    \ on path loss. \n \n \nApplication Layer\nNetwork Layer\nPerceptionLayer\nApplication\
    \ Layer\nNetwork Layer\nPerceptionLayer\nService Layer\nCloudLayer\nEdge Layer\n\
    Things Layer\nCommunicationsLayer\nFigure 29. Evolution of the layered model in\
    \ IoT architecture.\nIn the case of the reviewed IoT systems for irrigation, both\
    \ 3-layered [46,83,118,217,218] and\n5-layered architectures [180] are available.\
    \ Commonly, the lower layer is comprised of the sensor nodes\nand the actuators.\
    \ The middle layer is comprised of a gateway and contemplates data transmission.\n\
    Lastly, the third layer is usually tasked with performing data storage and analysis.\
    \ Typical third layers\nare conformed of cloud services, databases or applications.\n\
    A novel take on IoT deployments for precision agriculture is being considered\
    \ on the Internet\nof Underground Things [219]. The authors deﬁne the functionalities\
    \ as in-situ sensing, wireless\ncommunication in underground environments and\
    \ the connection between the elements of the\narchitecture such as sensors, machinery\
    \ or the cloud. For the case of IoUT, the sensors are deployed\nunderground. The\
    \ authors performed a study on wireless communication among above ground and\n\
    underground devices. The path loss link between above ground and underground devices\
    \ reached\n−80 dBm for 50 m. The distance between underground devices reached\
    \ approximately 10 m for\n−80 dBm. The authors also comment on the eﬀects of soil\
    \ moisture on path loss.\nSensors 2020, 20, 1042\n35 of 48\n7.8. Recommendations\
    \ for the Implementation of a Smart Irrigation System for Agriculture\nIn this\
    \ subsection, we present an architecture proposal for an IoT irrigation system\
    \ for irrigation.\nIn order to ensure the correct performance of the IoT irrigation\
    \ system for precision agriculture, the\narchitecture should provide interoperability,\
    \ scalability, security, availability, and resiliency.\nAfter having carried out\
    \ an exhaustive study of works presented by other researchers, our\narchitecture\
    \ proposal is divided into four layers that we deﬁne as devices, communication,\
    \ services,\nand application, as shown in Figure 30. Furthermore, the aspects\
    \ related to management and security\nshould be treated jointly between the communication\
    \ and services layers.\nSensors 2020, 20, x \n36 of 48 \n \nFigure 30. Architecture\
    \ proposal for an IoT irrigation system for agriculture. \n7.9. Future Challenges\
    \ of IoT Irrigation Systems \nThe Internet of Underground Things (IoUT) is a new\
    \ view of the IoT [221]. It consists of \ndeploying both underground and above\
    \ ground IoT devices that communicate among themselves \nwith underground-underground,\
    \ underground-above ground, and above ground-above ground \ncommunication. It\
    \ is especially useful and applicable to irrigation and precision agriculture\
    \ IoT \nsystems as the devices would not be impeding the work of machines and\
    \ farmers and it would reduce \nthe amount of physical damage the nodes deployed\
    \ on the fields may receive. Although WiFi \nsurprisingly allows underground-above\
    \ ground communication in short distances and depths above \n30 cm [222], it would\
    \ be necessary to study the performance of other existing protocols or even the\
    \ \ncreation of a new protocol that employs lower frequency bands to transmit\
    \ the information through \nthe soil medium.  \nThe use of LoRa is increasing\
    \ for irrigation and precision agriculture applications due to its long-\nrange,\
    \ which allows wireless communication to remote fields. However, the advances\
    \ in 5G may lead \nto a decrease in the interest in LoRa technology. On the one\
    \ hand, if the designed irrigation system \nproduces lower amounts of data, as\
    \ these types of systems present low variability in the data, LoRa \npresents\
    \ itself as a very good solution. However, on the other hand, for IoT systems\
    \ that require the \ntransmission of large amounts of data, 5G would solve the\
    \ problem of the limited amount of data \nthat LoRa can transmit. Considering\
    \ these aspects, a possible future is the use of LoRa and 5G hybrid \nwireless\
    \ networks to attempt in satisfying those needs [223]. \nThere are diverse opinions\
    \ on the existence and effects of climate change on earth. However, \nthere is\
    \ no doubt that many governments, companies and the citizens themselves are increasing\
    \ their \nawareness regarding sustainable consumption. This not only affects their\
    \ view on the energy \nconsumption of IoT systems for irrigation but also, the\
    \ origin of the components of the devices and \nthe impact of IoT devices on the\
    \ environment and the fauna of the area where they are deployed. \nTherefore,\
    \ the reduction in energy consumption and the use of alternative powering methods\
    \ will \ncontinue to be a research trend. Furthermore, it may be a challenge to\
    \ find new materials that are \nweather-resistant and do not increase severely\
    \ the cost of the devices, but the use of recyclable \nmaterials in some of the\
    \ elements of the IoT devices is to be expected [203]. \nAs it has further been\
    \ commented on Subsection 7 1 blockchain and AI will be incorporated into\nFigure\
    \ 30. Architecture proposal for an IoT irrigation system for agriculture.\nThe\
    \ ﬁrst layer is the Device layer, where all the devices that will perform the\
    \ functions of detection,\nmonitoring, control, and action are located. We would\
    \ have four types of nodes. The water monitoring\nnode would monitor water quality\
    \ to determine if the water is apt for the irrigation of the crops.\nThe soil\
    \ monitoring node would monitor soil moisture, soil temperature and other parameters\
    \ that\naid in the irrigation schedule decision process. The weather monitoring\
    \ node would measure air\ntemperature and humidity, precipitation, luminosity,\
    \ radiation, and wind parameters so as to aid in\nthe decision making process.\
    \ Lastly, the actuator nodes would perform the actions resulting from the\ndecision-making\
    \ process.\nThe second layer is the communication layer, comprised of three blocks.\
    \ The Hop-to-Hop\ncommunication block allows deﬁning data link layer technologies\
    \ and to transmit the frames that\ncontain the data of the device layer. From\
    \ this block the frames will be sent to the network communication\nblock, to reach\
    \ the remote locations. The routing function can be assumed in this block in mesh\n\
    networks, such as 802.15.4 networks. The end-to-end communication block is responsible\
    \ for delivering\nthe capabilities of the transport and application layers of\
    \ the TCP/IP model when communication\ncrosses diﬀerent network environments.\
    \ Finally, the network communication block is responsible for\nthe communication\
    \ (routing) between the networks, of the hop-to-hop at end-to-end blocks, using\n\
    the address, for example, IPv4 and IPv6, and the ID resolution. In addition, it\
    \ will be responsible for\nmanaging the QoS.\nThe next layer is the services layer,\
    \ which is comprised of three blocks. The services block includes\nthe IoT services\
    \ and operability for their discovery and search. The organization block performs\
    \ the\nassignment of the services according to the needs of the users or the available\
    \ resources. At last,\nin business environments that relate to IoT, the modeling\
    \ and execution of service block will be invoked\nfrom the execution of the applications.\n\
    Sensors 2020, 20, 1042\n36 of 48\nThere are two blocks, management and security,\
    \ that act on both the previously described\ncommunication and services layers.\
    \ The management block is based on the fault, conﬁguration,\naccounting, performance,\
    \ security (FCAPS) model and framework.\nThis is a model of the ISO\nTelecommunications\
    \ Management Network [220].\nThe security block guarantees both the security and\
    \ privacy of the systems and is comprised\nof four blocks. The authentication\
    \ block is responsible for the authentication of users and services.\nThe authorization\
    \ block manages access control policies. Furthermore, access control decisions\
    \ will\nbe made based on access control policies. The key exchange & management\
    \ block is used to achieve\nsecure communications between peers. Finally, the\
    \ trust & reputation block is responsible for scoring\nthe user and calculating\
    \ the level of trust of the service.\nThe last layer is the application layer.\
    \ It allows users to interact with the IoT system. From this\nlayer, users can\
    \ receive alarms, visualize the gathered data in real-time or activate the actuators\
    \ or\nactions that have not been programmed automatically.\n7.9. Future Challenges\
    \ of IoT Irrigation Systems\nThe Internet of Underground Things (IoUT) is a new\
    \ view of the IoT [221].\nIt consists of\ndeploying both underground and above\
    \ ground IoT devices that communicate among themselves\nwith underground-underground,\
    \ underground-above ground, and above ground-above ground\ncommunication. It is\
    \ especially useful and applicable to irrigation and precision agriculture IoT\n\
    systems as the devices would not be impeding the work of machines and farmers\
    \ and it would\nreduce the amount of physical damage the nodes deployed on the\
    \ ﬁelds may receive. Although WiFi\nsurprisingly allows underground-above ground\
    \ communication in short distances and depths above\n30 cm [222], it would be\
    \ necessary to study the performance of other existing protocols or even the\n\
    creation of a new protocol that employs lower frequency bands to transmit the\
    \ information through\nthe soil medium.\nThe use of LoRa is increasing for irrigation\
    \ and precision agriculture applications due to its\nlong-range, which allows\
    \ wireless communication to remote ﬁelds. However, the advances in 5G may\nlead\
    \ to a decrease in the interest in LoRa technology. On the one hand, if the designed\
    \ irrigation system\nproduces lower amounts of data, as these types of systems\
    \ present low variability in the data, LoRa\npresents itself as a very good solution.\
    \ However, on the other hand, for IoT systems that require the\ntransmission of\
    \ large amounts of data, 5G would solve the problem of the limited amount of data\
    \ that\nLoRa can transmit. Considering these aspects, a possible future is the\
    \ use of LoRa and 5G hybrid\nwireless networks to attempt in satisfying those\
    \ needs [223].\nThere are diverse opinions on the existence and eﬀects of climate\
    \ change on earth. However,\nthere is no doubt that many governments, companies\
    \ and the citizens themselves are increasing\ntheir awareness regarding sustainable\
    \ consumption. This not only aﬀects their view on the energy\nconsumption of IoT\
    \ systems for irrigation but also, the origin of the components of the devices\
    \ and the\nimpact of IoT devices on the environment and the fauna of the area\
    \ where they are deployed. Therefore,\nthe reduction in energy consumption and\
    \ the use of alternative powering methods will continue to be\na research trend.\
    \ Furthermore, it may be a challenge to ﬁnd new materials that are weather-resistant\n\
    and do not increase severely the cost of the devices, but the use of recyclable\
    \ materials in some of the\nelements of the IoT devices is to be expected [203].\n\
    As it has further been commented on Section 7.1, blockchain and AI will be incorporated\
    \ into most\nIoT services [210], including those aimed at irrigation and precision\
    \ agriculture. These technologies\nprovide not only increased security but also\
    \ optimization to the management of the IoT systems.\nThis will lead to an increased\
    \ understanding of the crops and a faster way to characterize genetically\nmodiﬁed\
    \ crops and the eﬀects of new fertilizers and pesticides. Furthermore, it will\
    \ aid in optimizing\nand reducing water consumption and improving the new mechanisms\
    \ that are being proposed to\ndetermine if treated wastewater can be used for\
    \ irrigation and which crops can be irrigated with\nwastewater depending on its\
    \ composition.\nSensors 2020, 20, 1042\n37 of 48\nLastly, farmers usually have\
    \ a very small proﬁt and thus, these IoT systems may not be aﬀordable\nto them.\
    \ Therefore, the cost of IoT devices and the overall system implementation should\
    \ have a\ndecreasing tendency for these types of systems to have a commercial\
    \ future.\n8. Conclusions and Future Work\nWater management is paramount in countries\
    \ with water scarcity. This also aﬀects agriculture, as\na large amount of water\
    \ is dedicated to this use. The rising concerns about global warming have led\n\
    to the consideration of creating water management measures to ensure the availability\
    \ of water for\nfood production and consumption. Thus, the researches on water\
    \ usage reduction for irrigation have\nincreased over the years. In this paper,\
    \ we have provided an overview of the actual state of the art\nregarding IoT irrigation\
    \ systems for agriculture. We have identiﬁed the most monitored parameters to\n\
    characterize water quality for irrigation, soil and weather conditions. We have\
    \ also identiﬁed the most\nutilized nodes to implement IoT and WSN systems for\
    \ the irrigation of crops and the most popular\nwireless technologies. Furthermore,\
    \ the current trends in the implementation of IoT systems for crop\nmanagement\
    \ and irrigation have been discussed as well. We have provided a 4-layer architecture\n\
    proposal as well for the management of crop irrigation.\nAs future work, we are\
    \ developing a smart irrigation system that evaluates water quality prior to\n\
    irrigation based on the proposed architecture.\nAuthor Contributions: Methodology,\
    \ L.G., L.P. and J.M.J.; formal analysis, L.G.; investigation, L.G., L.P. and\n\
    J.M.J.; resources, L.G.; writing—original draft preparation, L.G., L.P. and J.M.J.;\
    \ writing—review and editing, J.L.;\nsupervision, J.L.; project administration,\
    \ J.L. and P.L.; funding acquisition, J.L. and P.L. All authors have read and\n\
    agreed to the published version of the manuscript.\nFunding: This work has been\
    \ supported by European Union through the ERANETMED (Euromediterranean\nCooperation\
    \ through ERANET joint activities and beyond) project ERANETMED3-227 SMARTWATIR.\n\
    Conﬂicts of Interest: The authors declare no conﬂict of interest.\nReferences\n\
    1.\nKoutroulis, A.G.; Papadimitriou, L.V.; Grillakis, M.G.; Tsanis, I.K.; Wyser,\
    \ K.; Betts, R.A. Freshwater\nvulnerability under high end climate change. A pan-European\
    \ assessment. Sci. Total Environ. 2018,\n613, 271–286. [CrossRef] [PubMed]\n2.\n\
    Iglesias, A.; Santillán, D.; Garrote, L. On the barriers to adaption to less water\
    \ under climate change: Policy\nchoices in mediterranean countries. Water Resour.\
    \ Manag. 2018, 32, 4819–4832. [CrossRef]\n3.\nZampieri, M.; Carmona García, G.;\
    \ Dentener, F.; Krishna Gumma, M.; Salamon, P.; Seguini, L.; Toreti, A.\nSurface\
    \ freshwater limitation explains worst rice production anomaly in india in 2002.\
    \ Remote Sens. 2018,\n10, 244. [CrossRef]\n4.\nDaskalakis, S.N.; Goussetis, G.;\
    \ Assimonis, S.D.; Tenzeris, M.M.; Georgiadis, A. A uW backscatter-morse_leaf\n\
    sensor for low-power agricultural wireless sensor networks. IEEE Sens. J. 2018,\
    \ 18, 7889–7898. [CrossRef]\n5.\nGuruprasadh, J.P.; Harshananda, A.; Keerthana,\
    \ I.K.; Krishnan, K.Y.; Rangarajan, M.; Sathyadevan, S.\nIntelligent Soil Quiality\
    \ Monitoring System for Judicious Irrigation. In Proceedings of the 2017 International\n\
    Conference on Advances in Computing, Communications and Informatics (ICACCI),\
    \ Udupi, India, 13–16\nSeptember 2017.\n6.\nParra, L.; Ortuño, V.; Sendra, S.;\
    \ Lloret, J. Low-Cost Conductivity Sensor based on Two Coils. In Proceedings of\n\
    the First International Conference on Computational Science and Engineering, Valencia,\
    \ Spain, 6–8 August 2013.\n7.\nSendra, S.; Parra, L.; Ortuño, V.; Lloret, L. A\
    \ Low Cost Turbidity Sensor Development. In Proceedings of the\nSeventh International\
    \ Conference on Sensor Technologies and Applications, Barcelona, Spain, 25–31\
    \ August 2013.\n8.\nJain, S.; Vani, K.S. A survey of the automated irrigation\
    \ systems and the proposal to make the irrigation\nsystem intelligent. Int. J.\
    \ Comput. Sci. Eng. 2018, 6, 357–360. [CrossRef]\n9.\nJoshi, A.; Ali, L. A Detailed\
    \ Survey on Auto Irrigation System. In Proceedings of the IEEE Conference on\n\
    Engineering Devices and Smart Systems, Tamilnadu, India, 3–4 March 2017.\n10.\n\
    Kansara, K.; Zaveri, V.; Slah, S.; Delwadkar, S.; Jani, K. Sensor based automated\
    \ irrigation system with IOT:\nA technical review. Int. J. Comput. Sci. Inf. Technol.\
    \ 2015, 6, 5331–5333.\nSensors 2020, 20, 1042\n38 of 48\n11.\nMunoth, P.; Goyal,\
    \ R.; Tiwari, K. Sensor based irrigation system: A review. Int. J. Eng. Res. Technol.\
    \ 2016,\n4, 86–90.\n12.\nYahide, P.B.; Jain, S.A.; Giri, M. Survey on web based\
    \ intelligent irrigation system in wireless sensor network.\nMultidiscip. J. Res.\
    \ Eng. Technol. 2015, 2, 375–385.\n13.\nBrajovi´c, M.; Vujovi´c, S.; Dukanovi´c,\
    \ S. An Overview of Smart Irrigation Software. In Proceedings of the 4th\nMediterranean\
    \ Conference on Embedded Computing, Budva, Montenegro, 14–18 June 2015.\n14.\n\
    Debauche, O.; El Moulat, M.; Mahmoudi, S.; Manneback, P.; Lebau, F. Irrigation\
    \ Pivot-Center Connected at\nLow Cost for the Reduction of Crop Water Requirements.\
    \ In Proceedings of the International Conference on\nAdvanced Communication Technologies\
    \ and Networking, Marrakech, Morocco, 2–4 April 2018.\n15.\nNikolaou, G.; Neocleous,\
    \ D.; Katsoulas, N.; Kittas, C. Irrigation of greenhouse crops. Horticulture 2019,\
    \ 5, 7.\n[CrossRef]\n16.\nAndrew, R.C.; Malekian, R.; Bogatinoska, D.C. IoT Solutions\
    \ for Precision Agriculture. In Proceedings of the\nInternational Convention on\
    \ Information and Communication Technology, Electronics and Microelectronics,\n\
    Opatija, Croatia, 21–25 May 2018.\n17.\nJha, K.; Doshi, A.; Patel, P.; Shah, M.\
    \ A comprehensive review on automation in agriculture using artiﬁcial\nintelligence.\
    \ Artif. Intell. Agric. 2019, 2, 1–12. [CrossRef]\n18.\nMekala, M.S.; Viswanathan,\
    \ P. A Survey: Smart Agriculture IoT with Cloud Computing. In Proceedings of the\n\
    International Conference on Microelectronic Devices, Circuits and Systems, Vellore,\
    \ India, 10–12 August 2017.\n19.\nMohopatra, A.G.; Keswani, B.; Lenka, S.K. ICT\
    \ speciﬁc technological changes in precision agriculture\nenvironment. Int. J.\
    \ Comput. Sci. Mob. Appl. 2018, 6, 1–16.\n20.\nShaﬁ, U.; Mumtaz, R.; García-Nieto,\
    \ J.; Hassan, S.A.; Zaidi, S.A.R.; Iqbal, N. Precision agriculture techniques\n\
    and practices: From considerations to applications. Sensors 2019, 19, 3796. [CrossRef]\n\
    21.\nTzounis, A.; Katsoulas, N.; Bartzanas, T.; Kittas, A. Internet of things\
    \ in agriculture, recent advances and\nfuture challenges. Biosyst. Eng. 2017,\
    \ 164, 31–48. [CrossRef]\n22.\nSreekantha, D.K.; Kavya, A.M. Agricultural Crop\
    \ Monitoring using IOT-A Study. In Proceedings of the\nInternational Conference\
    \ on Intelligent Systems and Control, Coimbatore, India, 5–6 January 2017.\n23.\n\
    Martín Talavera, J.; Tobón, L.E.; Gómez, J.A.; Culman, M.A.; Aranda, J.M.; Parra,\
    \ D.T.; Quilroz, L.A.;\nHoyos, A.; Garreta, L.E. Review of IoT applications in\
    \ agro-industrial and environmental ﬁelds. Comput.\nElectron. Agric. 2017, 142,\
    \ 283–297. [CrossRef]\n24.\nGoogle Scholar. Available online: https://scholar.google.es/\
    \ (accessed on 18 October 2019).\n25.\nIEEE Explore. Available online: https://ieeexplore.ieee.org/Xplore/home.jsp\
    \ (accessed on 18 October 2019).\n26.\nScopus. Available online: https://www.scopus.com/home.uri?zone=header&origin=searchbasic\
    \ (accessed\non 18 October 2019).\n27.\nSensors. Available online: https://www.mdpi.com/journal/sensors\
    \ (accessed on 18 October 2019).\n28.\nGonzález-Amarillo, C.A.; Corrales Muñoz,\
    \ J.C.; Mendoza-Moreno, M.A.; González Amarillo, A.M.; Faeq\nHussein, A.; Arunkumar,\
    \ N.; Ramirez-Gonzalez, G. An IoT-based traceability system for greenhouse seedling\n\
    crops. IEEE Access 2018, 6, 67528–67535. [CrossRef]\n29.\nAhmed, S.; Shekhawat,\
    \ A.S.; Kumar, S.G.; Nair, M.K.; Kumar, V. “Intelligation”: An IOT based Framework\n\
    for Smarter Irrigation. In Proceedings of the National Conference on Product Design\
    \ (NCPD 2016), Banglore,\nIndia, 30 October 2016.\n30.\nPatokar, A.M.; Gohokar,\
    \ V.V. Precision agriculture system design using wireless sensor network. In Information\n\
    and Communication Technology; Springer: Singapore, 2017.\n31.\nCambra, C.; Sendra,\
    \ S.; Lloret, J.; García, L. An IoT Service-Oriented System for Agriculture Monitoring.\n\
    In Proceedings of the IEEE ICC 2017 SAC Symposium Internet of Things Track, Paris,\
    \ France, 21–25 May 2017.\n32.\nArvind, G.; Athira, V.G.; Haripriya, H.; Akshaya\
    \ Rani, R.; Aravind, S. Automated Irrigation with Advanced\nSeed Germination and\
    \ Pest Control. In Proceedings of the IEEE International Conference on Technological\n\
    Innovations in ICT for Agriculture and Rural Development, Chennai, India, 7–8\
    \ April 2017.\n33.\nAmmour, K. Factory Automation and Irrigation Control in IoT\
    \ Environments. In Proceedings of the 15th\nLearning and Technology Conference\
    \ (L&T), Jeddah, Saudi Arabia, 25–26 February 2018.\n34.\nSingh, K.; Jain, S.;\
    \ Andhra, V.; Sharma, S. IoT based approach for smart irrigation system suited\
    \ to multiple\ncrop cultivation. Int. J. Eng. Res. Technol. 2019, 12, 357–363.\n\
    35.\nWu, H.; Chen, F.; Hu, H.; Liu, Q.; Ji, S. A secure system framework for an\
    \ agricultural IoT application.\nadvances in computer science and ubiquitous computing.\
    \ Lect. Notes Electr. Eng. 2016, 421, 332–341.\nSensors 2020, 20, 1042\n39 of\
    \ 48\n36.\nSolanki, V.K.; Venkatesan, M.; Katiyar, S. Conceptual model for smart\
    \ cities: Irrigation and highway lamps\nusing IoT. Int. J. Interact. Multimed.\
    \ Artif. Intell. 2017, 4, 28–33. [CrossRef]\n37.\nWasson, T.; Choudhury, T.; Sharma,\
    \ S.; Kumar, P. Integration of RFID and Sensor in Agriculture Using IoT.\nIn Proceedings\
    \ of the International Conference on Smart Technologies For Smart Nation, Bangalore,\
    \ India,\n17–19 August 2017.\n38.\nJohar, R.; Bensenouci, A.; Benesenouci, M.\
    \ IoT based Smart Sprinkling System. In Proceedings of the 15th\nLearning and\
    \ Technology Conference, Jeddah, Saudi Arabia, 25–26 February 2018.\n39.\nRyu,\
    \ M.; Yun, J.; Ahn, I.; Choi, S.; Kim, J. Design and Implementation of a Connected\
    \ Farm for Smart Farming\nSystem. In Proceedings of the 2015 IEEE Sensors, Busan,\
    \ South Korea, 1–4 November 2015.\n40.\nReche, A.; Sendra, S.; Díaz, J.R.; Lloret,\
    \ J. A Smart M2M Deployment to Control the Agriculture Irrigation.\nIn Proceedings\
    \ of the ADHOC-NOW 2014: International Conference on Ad-Hoc Networks and Wireless,\n\
    Benidorm, Spain, 22–27 June 2014.\n41.\nChieochan, O.; Saokaew, A.; Boonchieng,\
    \ E. Internet of Things (IoT) for Smart Solar Energy: A Case Study of\nthe Smart\
    \ Farm at Maejo University. In Proceedings of the International Conference on\
    \ Control, Automation\nand Information Sciences, Chiang Mai, Thailand, 31 October–3\
    \ November 2017.\n42.\nArumugam, S.S.; Ganeshmurthi, M.; Annadurai, R.; Ravichandran,\
    \ V. Internet of things based smart\nagriculture. Int. J. Adv. Comput. Electron.\
    \ Eng. 2018, 33, 8–17.\n43.\nBoonchieng, E.; Chieochan, O.; Saokaew, A. Smart\
    \ farm: Applying the use of node MCU, IOT, NETPIE and\nLINE API for a lingzhi\
    \ mushroom farm in Thailand. IEICE Trans. Commun. 2018, 101, 16–23. [CrossRef]\n\
    44.\nRawal, S. IoT based smart irrigation system. Int. J. Comput. Appl. 2017,\
    \ 159, 7–11. [CrossRef]\n45.\nGuo, T.; Zhong, W. Design and Implementation of\
    \ the Span Greenhouse Agriculture Internet of Things\nSystem. In Proceedings of\
    \ the 2015 International Conference on Fluid Power and Mechatronics, Harbin,\n\
    China, 5–7 August 2015.\n46.\nKhattab, A.; Abdelgawad, A.; Yelmarthi, K. Design\
    \ and Implementation of a Cloud-based IoT Scheme for\nPrecision Agriculture. In\
    \ Proceedings of the 28th International Conference on Microelectronics, Giza,\
    \ Egypt,\n17–20 December 2016.\n47.\nNawandar, N.K.; Satpute, V.R. IoT based low\
    \ cost and intelligent module for smart irrigation system. Comput.\nElectron.\
    \ Agric. 2019, 162, 979–990. [CrossRef]\n48.\nBarkunan, S.R.; Bhanumathi, V.;\
    \ Sethuram, J. Smart sensor for automatic drip irrigation system for paddy\ncultivation.\
    \ Comput. Electr. Eng. 2019, 73, 180–193. [CrossRef]\n49.\nParameswaram, G.; Sivaprasath,\
    \ K. Arduino based smart drip irrigation system using internet of things.\nInt.\
    \ J. Eng. Sci. Comput. 2016, 6, 5518–5521.\n50.\nKumar, A.; Surendra, A.; Mohan,\
    \ H.; Valliappan, K.M.; Kirthika, N. Internet of Things based Smart Irrigation\n\
    using Regression Algorithm. In Proceedings of the 2017 International Conference\
    \ on Intelligent Computing,\nInstrumentation and Control Technologies (ICICICT),\
    \ Kannur, India, 6–7 July 2017.\n51.\nKodali, R.K.; Jain, V.; Karagwal, S. IoT\
    \ based Smart Greenhouse. In Proceedings of the 2016 IEEE Region 10\nHumanitarian\
    \ Technology Conference (R10-HTC), Agra, India, 21–23 December 2016.\n52.\nAbidin,\
    \ S.A.H.Z.; Inrahim, S.N. Web-based Monitoring of an Automated Fertigation System:\
    \ An IoT\nApplication. In Proceedings of the IEEE 12th Malaysia International\
    \ Conference on Communications,\nKuching, Malaysia, 23–25 November.\n53.\nBanumathi,\
    \ P.; Saravanan, D.; Sathiyapriya, M.; Saranya, V. An android based automatic\
    \ irrigation system\nusing bayesian network with SMS and voice alert. Int. J.\
    \ Sci. Res. Comput. Sci. Eng. Inf. Technol. 2017,\n2, 573–578.\n54.\nPadalalu,\
    \ P.; Mahajan, S.; Dabir, K.; Mitkar, S.; Javale, D. Smart Water Dripping System\
    \ for Agriculture/Farming.\nIn Proceedings of the 2nd International Conference\
    \ for Convergence in Technology (I2CT), Mumbai, India,\n7–9 April 2017.\n55.\n\
    Mechsy, L.S.R.; Días, M.U.B.; Pragithmukar, W.; Lulasekera, A.L. A Mobile Robot\
    \ based Watering System for\nSmart Lawn Maintenance. In Proceedings of the 17th\
    \ International Conference on Control, Automation and\nSystems (ICCAS), Jeju,\
    \ Korea, 18–21 October 2017.\n56.\nRahul, D.S.; Sudarshan, S.K.; Meghana, K.;\
    \ Nandan, K.N.; Kirthana, R.; Sure, P. IoT based Solar Powered\nAgribot for Irrigation\
    \ and Farm Monitoring. In Proceedings of the 2nd International Conference on Inventive\n\
    Systems and Control (ICISC), Coimbatore, India, 19–20 January 2018.\nSensors 2020,\
    \ 20, 1042\n40 of 48\n57.\nVasu, N.; Shyam, K.V.; Sri, Y. Intelligent drip irrigation\
    \ system based on remote monitoring. Int. J. Ethics Eng.\nManag. Educ. 2017, 4,\
    \ 11–13.\n58.\nAgale, R.R.; Gaikwad, D.P. Automated Irrigation and Crop Security\
    \ System in Agriculture using Internet of\nThings. In Proceedings of the 2017\
    \ International Conference on Computing, Communication, Control and\nAutomation\
    \ (ICCUBEA), Pune, India, 17–18 August 2017.\n59.\nRau, A.J.; Sankar, J.; Mohan,\
    \ A.R.; Krishna, D.D.; Mathew, J. IoT based Smart Irrigation System and Nutrient\n\
    Detection with Disease Analysis. In Proceedings of the 2017 IEEE Region 10 Symposium\
    \ (TENSYMP),\nCochin, India, 14–16 July 2017.\n60.\nSukhadeve, V.; Roy, S. Advance\
    \ agro farm design with smart farming, irrigation and rain water harvesting\n\
    using internet of things. Int. J. Adv. Eng. Manag. 2016, 1, 33–45. [CrossRef]\n\
    61.\nRoselin, A.R.; Jawahar, A. Smart Agro System using Wireless Sensor Networks.\
    \ In Proceedings of the 2017\nInternational Conference on Intelligent Computing\
    \ and Control Systems (ICICCS), Madurai, India, 15–16\nJune 2017.\n62.\nMohanraj,\
    \ I.; Ashokumar, K.; Naren, J. Field monitoring and automation using IoT in agriculture\
    \ domain.\nProcedia Comput. Sci. 2016, 93, 931–939. [CrossRef]\n63.\nKeswani,\
    \ B.; Mohapatra, A.G.; Mohanty, A.; Khanna, A.; Rodrigues, J.J.P.C.; Gupta, D.;\
    \ De Albuquerque, V.H.C.\nAdapting weather conditions based IoT enabled smart\
    \ irrigation technique in precision agriculture\nmechanisms. Neural Comput. Appl.\
    \ 2019, 31, 277–292. [CrossRef]\n64.\nDasgupta, A.; Daruka, A.; Pandey, A.; Bose,\
    \ A.; Mukherjee, S.; Saha, S. Smart Irrigation: IoT-based Irrigation\nMonitoring\
    \ System. In Proceedings of the International Ethical Hacking Conference 2018,\
    \ Kolkata, India,\n5 October 2018.\n65.\nGondchawar, N.; Kawitkar, R.S. IoT based\
    \ smart agriculture. Int. J. Adv. Res. Comput. Commun. Eng. 2016,\n5, 838–842.\n\
    66.\nKrishna, K.L.; Silver, O.; Malende, W.F.; Amuradha, K. Internet of Things\
    \ Application for Implementation of\nSmart Agriculture System. In Proceedings\
    \ of the 2017 International Conference on I-SMAC (IoT in Social,\nMobile, Analytics\
    \ and Cloud) (I-SMAC), Palladam, India, 10–11 February 2017.\n67.\nQi, D.; Li,\
    \ G.; Dai, X. Design of Urban Greening Intelligent Monitoring System based on\
    \ Internet of Things\nTechnology. In Proceedings of the 2017 9th International\
    \ Conference on Intelligent Human-Machine Systems\nand Cybernetics (IHMSC), Hangzhou,\
    \ China, 26–27 August 2017.\n68.\nBurchi, G.; Chessa, S.; Gambineri, F.; Kocian,\
    \ A.; Massa, D.; Milazzo, P.; Rimediotti, L.; Ruggeri, A. Information\nTechnology\
    \ Controlled Greenhouse: A System Architecture. In Proceedings of the 2018 IoT\
    \ Vertical and\nTopical Summit on Agriculture-Tuscany (IOT Tuscany), Tuscany,\
    \ Italy, 8–9 May 2018.\n69.\nCrisnapati, P.N.; Wardana, I.N.K.; Aryanto, I.K.A.A.;\
    \ Hermawan, A. Hommons: Hydroponic Management\nand Monitoring System for an IoT\
    \ based NFT Farm using Web Technology. In Proceedings of the 5th\nInternational\
    \ Conference on Cyber and IT Service Management (CITSM), Denpasar, Indonesia,\
    \ 8–10\nAugust 2017.\n70.\nCambra, C.; Sendra, S.; Lloret, J.; Lacuesta, R. Smart\
    \ system for bicarbonate control in irrigation for hydroponic\nprecision farming.\
    \ Sensors 2018, 18, 1333. [CrossRef]\n71.\nFajrin, N.; Tauﬁk, I.; Ismail, N.;\
    \ Kamelia, L.; Ramdhani, M.A. On the Design of Watering and Lighting Control\n\
    Systems for Chrysanthemun Cultivation in Greenhouse based on the Internet of Things.\
    \ In Proceedings of\nthe 2nd Annual Applied Science and Engineering Conference,\
    \ Bandung, Indonesia, 24 August 2017.\n72.\nAbagissa, A.T.; Behura, A.; Pani,\
    \ S.K. IoT based Smart Agricultural Device Controlling System. In Proceedings\n\
    of the Second International Conference on Inventive Communication and Computational\
    \ Technologies\n(ICICCT), Coimbatore, India, 20–21 April 2018.\n73.\nMat, I.;\
    \ Kassim, M.R.M.; Harum, A.N.; Yusoﬀ, I.M. IoT in Precision Agriculture Applications\
    \ using Wireless\nMoisture Sensor Networks. In Proceedings of the 2016 IEEE Conference\
    \ on Open Systems (ICOS), Langkawi,\nMalaysia, 10–12 October 2016.\n74.\nKassim,\
    \ M.R.M.; Mat, I.; Harum, Z. Wireless Sensor Network in Precision Agriculture\
    \ Application.\nIn Proceedings of the 2014 International Conference on Computer,\
    \ Information and Telecommunication\nSystems (CITS), Jeju, Korea, 7–9 July 2014.\n\
    75.\nZamora-Izquierdo, M.A.; Sant, J.; Martínez, J.A.; Martínez, V.; Skarmeta,\
    \ A.F. Smart farming IoT platform\nbased on edge and cloud computing. Biosyst.\
    \ Eng. 2019, 177, 4–17. [CrossRef]\nSensors 2020, 20, 1042\n41 of 48\n76.\nRivas-Sánchez,\
    \ Y.A.;\nMoreno-Pérez, M.F.;\nRoldán-Cañas, J. Environment control with low-cost\n\
    microcontrollers and microprocessors: Application for green walls. Sustainability\
    \ 2019, 11, 782. [CrossRef]\n77.\nPurwandana, R.I.; Azmi, F.; Jati, A.N. Automatic\
    \ watering plant application based on android and web using\nREST protocol. J.\
    \ Telecommun. Electron. Comput. Eng. 2017, 9, 83–87.\n78.\nZhao, W.; Lin, S.;\
    \ Han, J.; Xu, R.; Hou, L. Design and Implementation of Smart Irrigation System\
    \ based on\nLoRa. In Proceedings of the 2017 IEEE Globecom Workshops (GC Wkshps),\
    \ Singapore, 4–8 December 2017.\n79.\nThakur, C.; Taskeen, S.; Pavithra, S.; Monisha,\
    \ S.; Namratha, K.S.; Peter, M. Internet of things (IOT) based\nirrigation system\
    \ with and without internet and pump set control. Glob. J. Comput. Sci. Technol.\
    \ H Inf. Technol.\n2018, 18, 11–14.\n80.\nRaut, R.; Varma, H.; Mulla, C.; Pawar,\
    \ V.R. Soil monitoring, fertigation, and irrigation system using IoT for\nagricultural\
    \ application. Intell. Commun. Comput. Technol. Lect. Notes Netw. Syst. 2017,\
    \ 19, 67–73.\n81.\nRajkumar, M.N.; Abinaya, S.; Kumar, V.V. Intelligent Irrigation\
    \ System an IoT based Approach. In Proceedings\nof the 2017 International Conference\
    \ on Innovations in Green Energy and Healthcare Technologies (IGEHT),\nCoimbatore,\
    \ India, 16–18 March 2017.\n82.\nSrivastava, P.; Bajaj, M.; Rana, A.S. Overview\
    \ of ESP8266 Wi-Fi Module based Smart Irrigation System\nusing IoT. In Proceedings\
    \ of the 2018 Fourth International Conference on Advances in Electrical, Electronics,\n\
    Information, Communication and Bio-Informatics (AEEICB), Chennai, India, 27–28\
    \ February 2018.\n83.\nRobles, T.; Alcarria, R.; Martín, D.; Navarro, M.; Calero,\
    \ R.; Iglesias, S.; López, M. An IoT based reference\narchitecture for smart water\
    \ management processes. J. Wirel. Mob. Netw. Ubiquitous Comput. Dependable Appl.\n\
    2015, 6, 4–23.\n84.\nKumar, V.V.; Ramasamy, R.; Janarthanan, S.; VasimBabu, M.\
    \ Implementation of IoT in smart irrigation system\nusing arduino processor. Int.\
    \ J. Civ. Eng. Technol. 2017, 8, 1304–1314.\n85.\nYashaswini, L.S.; Sinchana,\
    \ H.N.; Vani, H.U.; Kumar, N. Smart Automated Irrigation System with Disease\n\
    Prediction. In Proceedings of the 2017 IEEE International Conference on Power,\
    \ Control, Signals and\nInstrumentation Engineering (ICPCSI), Chennai, India,\
    \ 21–22 September 2017.\n86.\nPernapati, K. IoT based Low Cost Smart Irrigation\
    \ System. In Proceedings of the 2018 Second International\nConference on Inventive\
    \ Communication and Computational Technologies (ICICCT), Coimbatore, India,\n\
    20–21 April 2018.\n87.\nAsnawi, M.F.; Syukriasari, F. A prototype for IoT based\
    \ rice ﬁeld irrigation system. J. Publ. Inform. Eng. Res.\n2019, 3, 260–265. [CrossRef]\n\
    88.\nMahalakshmi, M.; Priyanka, S.; Rajaram, S.P.; Rajapriya, R. Distant Monitoring\
    \ and Controlling of Solar\nDriven Irrigation System Through IoT. In Proceedings\
    \ of the 2018 National Power Engineering Conference\n(NPEC), Madurai, India, 9–10\
    \ March 2018.\n89.\nRukhmode, S.; Vyavhare, G.; Banot, S.; Narad, A.; Tugnayat,\
    \ R.M. IoT based Agriculture Monitoring System\nusing Wemos. In Proceedings of\
    \ the International Conference on Emanations in Modern Engineering Science\nand\
    \ Management, Nagpur Maharashtra, India, 25–26 March 2017.\n90.\nSagar, S.V.;\
    \ Kumar, G.R.; Xavier, L.X.T.; Sivakumar, S.; Durai, R.B. SISFAT: Smart Irrigation\
    \ System with\nFlood Avoidance Technique. In Proceedings of the Third International\
    \ Conference on Science Technology\nEngineering & Management (ICONSTEM), Chennai,\
    \ India, 23–24 March 2017.\n91.\nPandithurai, O.; Aishwarya, S.; Aparna, B.; Kavitha,\
    \ K. Agro-Tech: A Digital Model for Monitoring Soil\nand Crops using Internet\
    \ of Things (IoT). In Proceedings of the Third International Conference on Science\n\
    Technology Engineering & Management (ICONSTEM), Chennai, India, 23–24 March 2017.\n\
    92.\nVijay, V.; Vishal, H.; Dhanalakshmi, S.; Vidya, P.M. Regulation of Water\
    \ in Agriculture Field using Internet\nof Things. In Proceedings of the 2015 IEEE\
    \ Technological Innovation in ICT for Agriculture and Rural\nDevelopment (TIAR),\
    \ Chennai, India, 10–12 July 2015.\n93.\nShahzadi, R.; Tausif, M.; Ferzund, J.;\
    \ Suryani, M.A. Internet of things based expert system for smart\nagriculture.\
    \ Int. J. Adv. Comput. Sci. Appl. 2016, 7, 341–350.\n94.\nVisconti, P.; Primiceri,\
    \ P.; Orlando, C. Solar powered wireless monitoring system of environmental conditions\n\
    for early ﬂood prediction or optimized irrigation in agriculture. ARPN J. Eng.\
    \ Appl. Sci. 2016, 11, 4623–4632.\n95.\nAli, T.A.A.; Choksi, V.; Potdar, M.B.\
    \ Precision Agriculture Monitoring System using Green Internet of\nThings (G-IoT).\
    \ In Proceedings of the 2nd International Conference on Trends in Electronics\
    \ and Informatics,\nTirunelveli, India, 11–12 May 2018.\nSensors 2020, 20, 1042\n\
    42 of 48\n96.\nSelmani, A.; Oubehar, H.; Outanoute, M.; Ed-Dahhak, A.; Guerbaoui,\
    \ M.; Lachhab, A.; Bouchikhi, B.\nAgricultural cyber-physical system enabled for\
    \ remote management of solar-powered precision irrigation.\nBiosyst. Eng. 2019,\
    \ 177, 18–30. [CrossRef]\n97.\nThamaraimanalan, T.; Vivekk, S.P.; Satheeshkumar,\
    \ G.; Saravanan, P. Smart garden monitoring system using\nIoT. Asian J. Appl.\
    \ Sci. Technol. 2018, 2, 186–192.\n98.\nCarrasquilla-Batista, A.; Chacón-Rodríquez,\
    \ A.; Solórzano-Quintana, M. Using IoT to Enhance the Accuracy\nof Overdrain Measurements\
    \ in Greenhouse Horticulture. In Proceedings of the IEEE 36th Central American\n\
    and Panama Convention (CONCAPAN XXXVI), San Jose, Costa Rica, 9–11 November 2016.\n\
    99.\nJagadesh, M.; Karthik, M.; Manikandan, A.; Nivetha, S.; Prasanth Kumar, R.\
    \ IoT based aeroponics agriculture\nmonitoring system using raspberry Pi. Int.\
    \ J. Creat. Res. Thoughts 2018, 6, 601–608.\n100. Carrasquilla-Batista, A.; Chacón-Rodríguez,\
    \ A. Proposal of a Fuzzy Logic Controller for the Improvement of\nIrrigation Scheduling\
    \ Decision-Making in Greenhouse Horticulture. In Proceedings of the 1st Conference\
    \ on\nPhD Research in Microelectronics and Electronics Latin America (PRIME-LA),\
    \ Bariloche, Argentina, 20–23\nFebruary 2017.\n101. Gupta, A.; Krishna, V.; Gupta,\
    \ S.; Aggarwal, J. Android based solar powered automatic irrigation system.\n\
    Indian J. Sci. Technol. 2016, 9, 1–5. [CrossRef]\n102. Suakatnto, S.; Engel, V.J.L.;\
    \ Hutagalung, M.; Angela, D. Sensor Networks Data Acquisition and Task\nManagement\
    \ for Decision Support of Smart Farming. In Proceedings of the 2016 International\
    \ Conference\non Information Technology Systems and Innovation (ICITSI), Bandung,\
    \ Bali, 24–27 October 2016.\n103. Kumar, B.D.; Srivastava, P.; Agrawal, R.; Tiwari,\
    \ V. Microcontroller based automatic plant irrigation system.\nInt. Res. J. Eng.\
    \ Technol. 2017, 4, 1436–1439.\n104. Kool, D.; Agam, N.; Lazarovitch, N.; Heitman,\
    \ J.L.; Sauer, T.J.; Ben-Gal, A. A review of approaches for\nevapotranspiration\
    \ partitioning. Agric. For. Meteorol. 2014, 184, 56–70. [CrossRef]\n105. Pereira,\
    \ L.S.; Allen, R.G.; Smith, M.; Raes, D. Crop evapotranspiration estimation with\
    \ FAO56: Past and\nfuture. Agric. Water Manag. 2015, 147, 4–20. [CrossRef]\n106.\
    \ Cammalleri, C.; Anderson, M.C.; Gao, F.; Hain, C.R.; Kustas, W.P. Mapping daily\
    \ evapotranspiration at ﬁeld\nscales over rainfed and irrigated agricultural areas\
    \ using remote sensing data fusion. Agric. For. Meteorol.\n2014, 186, 1–11. [CrossRef]\n\
    107. Chirouze, J.; Boulet, G.; Jarlan, L.; Fieuzal, R.; Rodriguez, J.C.; Ezzahar,\
    \ J.; Raki, S.E.; Bigeard, G.; Merlin, O.;\nGaratuza-Payan, J.; et al. Intercomparison\
    \ of four remote-sensing-based energy balance methods to retrieve\nsurface evapotranspiration\
    \ and water stress of irrigated ﬁelds in semi-arid climate. Hydrol. Earth Syst.\n\
    Sci. Discuss. 2014, 18, 1165–1188. [CrossRef]\n108. Cruz-Blanco, M.; Lorite, I.J.;\
    \ Santos, C. An innovative remote sensing based reference evapotranspiration\n\
    method to support irrigation water management under semi-arid conditions. Agric.\
    \ Water Manag. 2014,\n131, 135–145. [CrossRef]\n109. Shin, J.H.; Son, J.E. Development\
    \ of a real-time irrigation control system considering transpiration, substrate\n\
    electrical conductivity, and drainage rate of nutrient sSolutions in soilless\
    \ culture of paprika (Capsicum\nannuum L.). Eur. J. Hortic. Sci 2015, 80, 271–279.\
    \ [CrossRef]\n110. Kumawat, S.; Bhamare, M.; Nagare, A.; Kapadnis, A. Sensor based\
    \ automatic irrigation system and soil pH\ndetection using image processing. Int.\
    \ Res. J. Eng. Technol. 2017, 4, 3673–3675.\n111. Gulati, A.; Thakur, S. Smart\
    \ Irrigation using Internet of Things. In Proceedings of the 8th International\n\
    Conference on Cloud Computing, Data Science & Engineering (Conﬂuence), Noida,\
    \ India, 11–12 January\n2018.\n112. Imteaj, A.; Rahman, T.; Hossain, M.K.; Zaman,\
    \ S. IoT based Autonomous Percipient Irrigation System using\nRaspberry Pi. In\
    \ Proceedings of the 19th International Conference on Computer and Information\
    \ Technology\n(ICCIT), Dhaka, Bangladesh, 18–20 December 2016.\n113. Kodali, R.K.;\
    \ Sahu, A. An IoT based Soil Moisture Monitoring on Losant Platform. In Proceedings\
    \ of the\n2nd International Conference on Contemporary Computing and Informatics\
    \ (IC3I), Noida, India, 14–17\nDecember 2016.\n114. Kodali, R.K.; Sarjerao, B.S.\
    \ A Low Cost Smart Irrigation System using MQTT Protocol, In Proceedings of the\n\
    2017 IEEE Region 10 Symposium (TENSYMP), Cochin, India, 14–16 July 2017.\n115.\
    \ Vineela, T.; NagaHarini, J.; Kiranmai, C.; Harshitha, G.; AdiLakshmi, B. IoT\
    \ based agriculture monitoring\nand smart irrigation system using raspberry Pi.\
    \ Int. Res. J. Eng. Technol. 2018, 5, 1417–1420.\nSensors 2020, 20, 1042\n43 of\
    \ 48\n116. Kamelia, L.; Ramdhani, M.A.; Faroqi, A.; Rifadiapriyana, V. Implementation\
    \ of Automation System for\nHumidity Monitoring and Irrigation System. In Proceedings\
    \ of the 2nd Annual Applied Science and\nEngineering Conference, Bandung, Indonesia,\
    \ 24 August 2017.\n117. Kuruva, H.; Sravani, B. Remote plant watering and monitoring\
    \ system based on IoT. Int. J. Technol. Res. Eng.\n2016, 4, 668–671.\n118. Salvi,\
    \ S.; Jain, S.A.P.; Sanjay, H.A.; Harshita, T.K.; Farhana, M.; Jain, N.; Suhas,\
    \ M.V. Cloud based Data\nAnalysis and Monitoring of Smart Multi-level Irrigation\
    \ System using IoT. In Proceedings of the 2017\nInternational Conference on I-SMAC\
    \ (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC), Palladam, India,\n10–11\
    \ February 2017.\n119. Kabilan, N.; Selvi, M.S. Surveillance and Steering of Irrigation\
    \ System in Cloud using Wireless Sensor\nNetwork and Wi-Fi Module. In Proceedings\
    \ of the 2016 International Conference on Recent Trends in\nInformation Technology\
    \ (ICRTIT), Chennai, India, 8–9 April 2016.\n120. Goap, A.; Sharma, D.; Shukla,\
    \ A.K.; Krishna, C.R. An IoT based smart irrigation management system using\n\
    machine learning and open source technologies. Comput. Electron. Agric. 2018,\
    \ 155, 41–49. [CrossRef]\n121. Sacvi´c, T.; Radoni´c, M. WSN Architecture for\
    \ Smart Irrigation System. In Proceedings of the 23rd International\nScientiﬁc-Professional\
    \ Conference on Information Technology (IT), Žabljak, Montenegro, 19–24 February\
    \ 2018.\n122. Zhang, X.; Zhang, J.; Li, L.; Zhang, Y.; Yang, G. Monitoring citrus\
    \ soil moisture and nutrients using an IoT\nbased system. Sensors 2017, 17, 447.\
    \ [CrossRef]\n123. Kumar, M.K.; Ravi, K.S. Automation of irrigation system based\
    \ on Wi-Fi technology and IoT. Indian J.\nSci. Technol. 2016, 9, 1–5.\n124. Anandkumar,\
    \ V.; Kalairasan, T.R.; Balakrishnan, S. IoT based soil analysis and irrigation\
    \ system. Int. J. Pure\nAppl. Math. 2018, 119, 1127–1134.\n125. Carrión, G.; Huerta,\
    \ M.; Barzallo, B. Internet of Things (IoT) Applied to an Urban Garden. In Proceedings\
    \ of the\nIEEE 6th International Conference on Future Internet of Things and Cloud,\
    \ Barcelona, Spain, 6–8 August 2018.\n126. Carrión, G.; Huerta, M.; Barzallo,\
    \ B. Monitoring and Irrigation of an Urban Garden using IoT. In Proceedings of\n\
    the IEEE Colombian Conference on Communications and Computing, Medellin, Colombia,\
    \ 16–18 May 2018.\n127. Malhotra, A.; Saini, S.; Kale, V.V. Automated irrigation\
    \ system with weather forecast integration. Int. J. Eng.\nTechnol. Manag. Appl.\
    \ Sci. 2017, 5, 179–184.\n128. Mekala, M.S.; Viswanathan, P. A Novel Technology\
    \ for Smart Agriculture based on IoT with Cloud Computing.\nIn Proceedings of\
    \ the International Conference on IoT in Social, Mobile, Analytics and Cloud,\
    \ Palladam,\nIndia, 10–11 February 2017.\n129. Monica, M.; Yeshika, B.; Abhishek,\
    \ G.S.; Sanjay, H.A.; Dasiga, S. IoT based Control and Automation of Smart\nIrrigation\
    \ System: An Automated Irrigation System using Sensors, GSM, Bluetooth and Cloud\
    \ Technology.\nIn Proceedings of the International Conference on Recent Innovations\
    \ in Signal Processing and Embedded\nSystems, Bhopal, India, 27–29 October 2017.\n\
    130. Naik, P.; Kumbi, A.; Hiregoudar, V.; Chaitra, N.K.; Pavitra, H.K.; Sushma,\
    \ B.S.; Sushmita, J.H.; Kuntanahal, P.\nArduino based automatic irrigation system\
    \ using IoT. Int. J. Sci. Res. Comput. Sci. Eng. Inf. Technol. 2017,\n2, 881–886.\n\
    131. Rajalakshmi, P.; Mahalakshmi, S.D. IoT based Crop-Field Monitoring and Irrigation\
    \ Automation.\nIn Proceedings of the 10th International Conference on Intelligent\
    \ Systems and Control, Coimbatore,\nIndia, 7–8 January 2016.\n132. Rao, R.N.;\
    \ Sridhar, B. IoT based Smart Crop-Field Monitoring and Automation Irrigation\
    \ System.\nIn Proceedings of the Second International Conference on Inventive\
    \ Systems and Control, Coimbatore, India,\n19–20 January 2018.\n133. Saraf, S.B.;\
    \ Gawali, D.H. IoT based Smart Irrigation Monitoring and Controlling System. In\
    \ Proceedings of the\nIEEE International Conference on Recent Trends in Electronics\
    \ Information & Communication Technology,\nBangalore, India, 19–20 May 2017.\n\
    134. Vaishali, S.; Suarj, S.; Vignesh, G.; Shivya, S.; Udhayakumar, S. Mobile\
    \ Integrated Smart Irrigation Management\nand Monitoring System using IOT. In\
    \ Proceedings of the International Conference on Communication and\nSignal Processing,\
    \ Chennai, India, 6–8 April 2017.\n135. Venkatesan, R.; Tamilvanan, A. A Sustainable\
    \ Agricultural System using IoT. In Proceedings of the\nInternational Conference\
    \ on Communication and Signal Processing, Chennai, India, 6–8 April 2017.\nSensors\
    \ 2020, 20, 1042\n44 of 48\n136. Villarubia, G.; De Paz, J.F.; De La Iglesia,\
    \ D.H.; Bajo, J. Combining multi-agent systems and wireless sensor\nnetworks for\
    \ monitoring crop irrigation. Sensors 2017, 17, 1775. [CrossRef] [PubMed]\n137.\
    \ Zhang, P.; Zhang, Q.; Liu, F.; Song, C.; Li, J.; Cao, N. The Construction of\
    \ the Integration of Water and\nFertilizer Smart Water Saving Irrigation System\
    \ based on Big Data. In Proceedings of the IEEE International\nConference on Computational\
    \ Science and Engineering and IEEE International Conference on Embedded\nand Ubiquitous\
    \ Computing, Guangzhou, China, 21–24 July 2017.\n138. Chen, W.; Lin, Y.; Lin,\
    \ Y.; Chen, R.; Liao, J.; Ng, F.; Chan, Y.; Liu, Y.; Wang, C.; Chiu, C.; et al.\
    \ AgriTalk: IoT for\nprecision soil farming of turmeric cultivation. IEEE Internet\
    \ Things J. 2019, 6, 5209–5223. [CrossRef]\n139. Chhaya, L.; Sharma, P.; Kumar,\
    \ A.; Bhagwatikar, G. IoT-based implementation of ﬁeld area network using\nsmart\
    \ grid communication infrastructure. Smart Cities 2018, 1, 176–189. [CrossRef]\n\
    140. Dabre, K.R.; Lopes, H.R.; D’monte, S.S. Intelligent Decision Support System\
    \ for Smart Agriculture.\nIn Proceedings of the International Conference on Smart\
    \ City and Emerging Technology, Mumbai, India,\n5 January 2018.\n141. Dagar, R.;\
    \ Som, S.; Khatri, S.K. Smart Farming-IoT in Agriculture. In Proceedings of the\
    \ International\nConference on Inventive Research in Computing Applications, Coimbatore,\
    \ India, 11–12 July 2018.\n142. Davcev, D.; Mitreski, K.; Trajkovic, S.; Nikolovski,\
    \ V.; Koteli, N. IoT Agriculture System based on LoRaWAN.\nIn Proceedings of the\
    \ 14th IEEE International Workshop on Factory Communication Systems, Imperia,\
    \ Italy,\n13–15 June 2018.\n143. Deekshath, R.; Dharanya, P.; Dimpil Kabadia,\
    \ K.R.; Deepak Dinakaran, G.; Shanthini, S. IoT based\nenvironmental monitoring\
    \ system using arduino UNO and thingspeak. Int. J. Sci. Technol. Eng. 2018,\n\
    4, 68–75.\n144. Guillermo, J.C.; García-Cedeño, A.; Rivas-Lalaleo, D.; Huerta,\
    \ M.; Clotet, R. IoT Architecture based on\nWireless Sensor Network Applied to\
    \ Agricultural Monitoring: A Case of Study of Cacao Crops in Ecuador.\nIn Proceedings\
    \ of the International Conference of Information and Communication Technologies\
    \ for Adapting\nAgriculture to Climate Change II, Cali, Colombia, 21–23 November\
    \ 2018.\n145. Heble, S.; Kumar, A.; Prasad, K.V.V.D.; Samirana, S.; Rajalakshmi,\
    \ P.; Desai, U.B. A Low Power IoT Network\nfor Smart Agriculture. In Proceedings\
    \ of the IEEE 4th World Forum on Internet of Things, Singapore, 5–8\nFebruary\
    \ 2018.\n146. Boobalan, J.; Jacintha, V.; Nagarajan, J.; Thangayogesh, K.; Tamilarasu,\
    \ S. An IoT based Agriculture Monitoring\nSystem. In Proceedings of the International\
    \ Conference on Communication and Signal Processing, Chennai,\nIndia, 3–5 April\
    \ 2018.\n147. Jiang, X.; Yi, W.; Chen, Y.; He, H. Energy Eﬃcient Smart Irrigation\
    \ System based on 6LoWPAN. In Proceedings\nof the International Conference on\
    \ Cloud Computing and Security, Haikou, China, 8–10 June 2018.\n148. Jirapure,\
    \ A.B.; Pal, A.; Majumder, D.; Patil, G.; Shrivastava, S. Automatic smart irrigation\
    \ using wireless\nsensor network and raspberry Pi. Int. J. Eng. Sci. Comput. 2018,\
    \ 8, 16762–16763.\n149. Kamienski, C.; Soininen, J.; Taumberger, M.; Dantas, R.;\
    \ Toscano, A.; Salmon Cinotti, T.S.; Filev Maia, R.F.;\nTorre Neto, A. Smart water\
    \ management platform: IoT-based precision irrigation for agriculture. Sensors\n\
    2019, 19, 276. [CrossRef]\n150. Kiani, F.; Seyyedabbasi, A. Wireless sensor network\
    \ and internet of things in precision agriculture. Int. J.\nAdv. Comput. Sci.\
    \ Appl. 2018, 9, 99–103. [CrossRef]\n151. Krintz, C.; Wolski, R.; Golubovic, N.;\
    \ Bakir, F. Estimating Outdoor Temperature from CPU Temperature from\nIoT Applications\
    \ in Agriculture. In Proceedings of the 8th International Conference on the Internet\
    \ of Things,\nSanta Barbara, CA, USA, 15–18 October 2018.\n152. Maja, J.M.J.;\
    \ Robbins, J. Controlling irrigation in a container nursery using IoT. AIMS Agric.\
    \ Food 2018,\n3, 205–215. [CrossRef]\n153. Supreetha, M.A.; Mundada, M.R.; Pooja,\
    \ J.N. Design of a Smart Water-Saving Irrigation System for Agriculture\nbased\
    \ on a Wireless Sensor Network for Better Crop Yield. In Proceedings of the International\
    \ Conference on\nCommunications and Cyber Physical Engineering, Kuala Lumpur,\
    \ Malaysia, 19–20 September 2018.\n154. Mehra, M.; Saxena, S.; Sankaranarayanan,\
    \ S.; Tom, R.J.; Veeramanikandan, M. IoT based hydroponics system\nusing deep\
    \ neural networks. Comput. Electron. Agric. 2018, 155, 473–486. [CrossRef]\n155.\
    \ Muangprathub, J.; Boonnam, N.; Kajornkasirat, S.; Lekbangpong, N.; Wanichsombat,\
    \ A.; Nillaor, P. IoT and\nagriculture data analysis for smart farm. Comput. Electron.\
    \ Agric. 2019, 156, 467–474. [CrossRef]\nSensors 2020, 20, 1042\n45 of 48\n156.\
    \ Munir, M.S.; Bajwa, I.S.; Naeem, M.A.; Ramzan, B. Design and implementation\
    \ of an IoT system for smart\nenergy consumption and smart irrigation in tunnel\
    \ farming. Energies 2018, 11, 3427. [CrossRef]\n157. Prabha, R.; Sinitambirivoutin,\
    \ E.; Passelaigue, F.; Ramesh, M.V. Design and Development of an IoT based\nSmart\
    \ Irrigation and Fertilization System for Chilli Farming. In Proceedings of the\
    \ International Conference\non Wireless Communications, Signal Processing and\
    \ Networking, Chennai, India, 22–24 March 2018.\n158. Rabelo, S.L.; Jucá, S.C.S.;\
    \ Gonçalves, D.L.C.; Silva, V.F.; Pereira, R.I.S.; Almeida da Silva, S. Construction\
    \ of\nsoil moisture and irrigation IoT monitoring system using project based learning.\
    \ Int. J. Innov. Educ. Res.\n2018, 6, 99–111.\n159. Raikar, M.M.; Desai, P.; Kanthi,\
    \ N.; Bawoor, S. Blend of Cloud and Internet of Things (IoT) in Agriculture Sector\n\
    using Lightweight Protocol. In Proceedings of the International Conference on\
    \ Advances in Computing,\nCommunications and Informatics, Bangalore, India, 19–22\
    \ September 2018.\n160. Rajakumar, G.; Sankari, M.S.; Shunmugapriya, D.; Maheswari,\
    \ S.P.U. IoT based smart agricultural monitoring\nsystem. Asian J. Appl. Sci.\
    \ Technol. 2018, 2, 474–480.\n161. Shilpa, A.; Muneeswaran, V.; Rathinam, D.D.K.\
    \ A Precise and Autonomous Irrigation System for Agriculture:\nIoT based Self\
    \ Propelled Center Pivot Irrigation System. In Proceedings of the 5th International\
    \ Conference\non Advanced Computing and Communication Systems, Coimbatore, India,\
    \ 15–16 March 2019.\n162. Suruthi, N.; Saranya, R.; Subashini, S.; Shanthi, P.;\
    \ Umamakeswari, A. Managing irrigation in indian\nagriculture using fuzzy logic-A\
    \ decision support system. Int. J. Eng. Technol. 2018, 7, 321–325. [CrossRef]\n\
    163. Das, R.K.; Panda, M.; Dash, S.S. Smart Agriculture System in India using\
    \ Internet of Things. In Proceedings\nof the Fourth International Conference on\
    \ Soft Computing in Data Science 2018 (SCDS2018), Bangkok,\nThailand, 15–16 August\
    \ 2018.\n164. Indira, D.N.V.S.L.S.; Harshita, M.; Pranav, D.S.; Sai, J.P.M. TILLAGE\
    \ DRIP: An Eﬃcient Seed Selection and\nConservative Irrigation with Crop Defective\
    \ Alert by IOT. In Proceedings of the 1st International Conference\non Smart Computing\
    \ and Informatics, Visakhapatnam, India, 3–4 March 2017.\n165. Ananthi, N.; Divya,\
    \ J.; Divya, M.; Jonani, V. IoT based Smart Soil Monitoring System for Agricultural\n\
    Production. In Proceedings of the IEEE International Conference on Technological\
    \ Innovations in ICT for\nAgriculture and Rural Development, Chennai, India, 7–8\
    \ April 2017.\n166. Mondal, A.; Rehena, Z. IoT based Intelligent Agriculture Field\
    \ Monitoring System. In Proceedings of\nthe 8th International Conference on Cloud\
    \ Computing, Data Science & Engineering, Noida, India, 11–12\nJanuary 2018.\n\
    167. Premkumar, A.; Monishaa, P.; Thenmozhi, K.; Amirtharajan, R.; Praveenkumar,\
    \ P. IoT Assisted Automatic\nIrrigation System using Wireless Sensor Nodes. In\
    \ Proceedings of the International Conference on Computer\nCommunication and Informatics,\
    \ Coimbatore, India, 4–6 January 2018.\n168. Jariyayothin, P.; Jeravong-aram,\
    \ K.; Ratanachaijaroen, N.; Tantidham, T.; Intakot, P. IoT Backyard: Smart\nWatering\
    \ Control System. In Proceedings of the Seventh ICT International Student Project\
    \ Conference,\nNakhonpathom, Thailand, 11–13 July 2018.\n169. Kinjal, A.R.; Petel,\
    \ S.; Chintan Bhatt, C. Smart irrigation: Towards next generation agriculture.\
    \ Internet Things\nBig Data Anal. Towar. Next-Gener. Intell. Stud. Big Data 2018,\
    \ 30, 265–282.\n170. Acharya, C.; Kuzhalvaimozhi, S. Irrigation and internet of\
    \ things platform. Int. Res. J. Eng. Technol. (IRJET)\n2016, 3, 1643–1646.\n171.\
    \ Maskara, R.; Maskara, N.; Bandopadhaya, S. Solar system powered IoT solution\
    \ for smart irrigation. Asian J.\nCover. Technol. 2019, 5, 1–4.\n172. Anbarasi,\
    \ M.; Karthikeyan, T.; Ramanathan, L.; Ramani, S.; Nalini, N. Smart multi-crop\
    \ irrigation system\nusing IoT. Int. J. Innov. Technol. Explor. Eng. 2019, 8,\
    \ 153–156.\n173. Kamaruddin, F.; Malik, N.N.A.; Murad, N.A.; Latiﬀ, N.M.A.; Yusof,\
    \ S.K.S.; Hamzah, S.A. IoT-based intelligent\nirrigation management and monitoring\
    \ system using arduino. TELKOMNIKA 2019, 17, 2378–2388. [CrossRef]\n174. Kwok,\
    \ J.; Sun, Y. A Smart IoT-based Irrigation System with Automated Plant Recognition\
    \ using Deep\nLearning. In Proceedings of the 10th International Conference on\
    \ Computer Modeling and Simulation,\nSydney, Australia, 8–10 January 2018.\n175.\
    \ Fernández, D.; Sánchez, P.; Álvarez, B.; López, J.A.; Iborra, A. TRIoT: A Proposal\
    \ for Deploying Teleo-Reactive\nNodes for IoT Systems. In Proceedings of the International\
    \ Conference on Practical Applications of Agents\nand Multi-Agent Systems, Porto,\
    \ Portugal, 21–23 June 2017.\nSensors 2020, 20, 1042\n46 of 48\n176. Suciu, G.;\
    \ Istrate, C.; Ditu, M. Secure Smart Agriculture Monitoring Technique Through\
    \ Isolation.\nIn Proceedings of the Global IoT Summit, Aarhus, Denmark, 17–21\
    \ June 2019.\n177. Yamini, R.; Reddy, K.V.C. Smart irrigation using IoT. Int.\
    \ J. Adv. Res. Ideas Innov. Technol. 2019, 5, 5–471.\n178. Sawane, S.S.; Dixit,\
    \ P.N. IOT based irrigation system. Int. J. Appl. Eng. Res. 2019, 14, 14–113.\n\
    179. Sales, N.; Remédios, O.; Arsenio, A. Wireless Sensor and Actuator System\
    \ for Smart Irrigation on the Cloud.\nIn Proceedings of the IEEE 2nd World Forum\
    \ on Internet of Things, Milan, Italy, 14–16 December 2015.\n180. González-Briones,\
    \ A.; Castellanos-Garzón, J.A.; Mezquita Martín, Y.; Prieto, J.; Corchado, J.M.\
    \ A framework\nfor knowledge discovery from wireless sensor networks in rural\
    \ environments: A crop irrigation systems\ncase study. Wirel. Commun. Mob. Comput.\
    \ 2018, 2018, 6089280.\n181. Abayomi-Alli, O.; Odusami, M.; Ojinaka, D.; Shobayo,\
    \ O.; Misra, S.; Damasevicius, R.; Maskeliunas, R.\nSmart-Solar Irrigation System\
    \ (SMIS) for Sustainable Agriculture. In Proceedings of the International\nConference\
    \ on Applied Informatics, Medan, Indonesia, 18–19 September 2018.\n182. Selvaraj,\
    \ J.D.F.; Paul, P.M.; Jigle, I.D.J. Automatic wireless water management system\
    \ (AWWMS) for smart\nvineyard irrigation using IoT technology. Int. J. Ocean.\
    \ Oceanogr. 2019, 13, 211–218.\n183. Gartner. Agricultural IOT Will See a Very\
    \ Rapid Growth Over the Next 10 Years. Available online: https:\n//machinaresearch.com/news/agricultural-iot-will-see-a-very-rapid-growth-over-the-next-10-years/\
    \ (accessed\non 22 December 2019).\n184. International Telecommunications Union.\
    \ Radio Regulations. Available online: https://www.itu.int/pub/R-\nREG-RR/en (accessed\
    \ on 22 December 2019).\n185. Maia, R.F.; Netto, I.; Tran, A.L.H. Precision Agriculture\
    \ using Remote Monitoring Systems in Brazil.\nIn Proceedings of the IEEE Global\
    \ Humanitarian Technology Conference, San Jose, CA, USA, 19–22 October\n2017.\n\
    186. Patil, P.; Sachapara, V. Providing Smart Agricultural Solutions/Techniques\
    \ by using IoT based Toolkit.\nIn Proceedings of the International Conference\
    \ on Trends in Electronics and Informatics, Tirunelveli, India,\n11–12 May 2017.\n\
    187. Balaji, G.N.; Nandhini, V.; Mithra, S.; Priya, N.; Naveena, R. IoT based\
    \ smart crop monitoring in farm land.\nImp. J. Interdiscip. Res. 2018, 4, 88–92.\n\
    188. Patankar, U.S.; Koel, A.; Nitnaware, V. Smart System for Automatic AC Motor\
    \ Starter based on GSM.\nIn Proceedings of the IEEE International Conference on\
    \ Consumer Electronics, Las Vegas, NV, USA, 11–13\nJanuary 2019.\n189. Pawar,\
    \ M.; Chillarge, G. Soil Toxicity Prediction and Recommendation System using Data\
    \ Mining In Precision\nAgriculture. In Proceedings of the 3rd International Conference\
    \ for Convergence in Technology, Pune, India,\n6–8 April 2018.\n190. Prathibha,\
    \ R.; Hongal, A.; Jyothi, M. IoT based Monitoring System in Smart Agriculture.\
    \ In Proceedings of\nthe International Conference on Recent Advances in Electronics\
    \ and Communication Technology, Bangalore,\nIndia, 16–17 March 2017.\n191. Payero,\
    \ J.O.; Mirzakhani-Nafchi, A.; Khalilian, A.; Qiao, X.; Davis, R. Development\
    \ of a low-cost\ninternet-of-things (IoT) system for monitoring soil water potential\
    \ using watermark 200SS sensors.\nAdv. Internet Things 2017, 7, 71–86. [CrossRef]\n\
    192. Suma, N.; Samson, S.R.; Saranya, S.; Shanmugapriya, G.; Subhashri, R. IOT\
    \ based smart agriculture\nmonitoring system. Int. J. Recent Innov. Trends Comput.\
    \ Commun. 2017, 5, 5–177.\n193. Avotins, A.; Potapovs, A.; Apse-Apsitis, P.; Gruduls,\
    \ J. Crop weight measurement sensor for IoT based\nindustrial greenhouse systems.\
    \ Agron. Res. 2018, 16, 16–957.\n194. Sarangi, S.; Naik, V.; Choudhury, S.B.;\
    \ Jain, P.; Kosgi, V.; Sharma, R.; Bhatt, P.; Srinivasu, P. An Aﬀordable\nIoT\
    \ Edge Platform for Digital Farming in Developing Regions. In Proceedings of the\
    \ 11th International\nConference on Communications Systems and Networks, Bengaluru,\
    \ India, 7–11 January 2019.\n195. Na, A.; Isaac, W.; Varshney, S.; Khan, E. An\
    \ IoT based System for Remote Monitoring of Soil Characteristics.\nIn Proceedings\
    \ of the International Conference on Information Technology, Noida, India, 6–7\
    \ October 2016.\n196. Ali, A.H.; Chisad, R.F.; Mnati, M.J. A smart monitoring\
    \ and controlling for agricultural pumps using LoRa\nIoT technology. Indones.\
    \ J. Electr. Eng. Comput. Sci. 2019, 13, 286–292. [CrossRef]\n197. Nurellari,\
    \ E.; Srivastava, S. A Practical Implementation of an Agriculture Field Monitoring\
    \ using Wireless\nSensor Networks and IoT Enabled. In Proceedings of the IEEE\
    \ International Symposium on Smart Electronic\nSystems, Hyderabad, India, 17–19\
    \ December 2018.\nSensors 2020, 20, 1042\n47 of 48\n198. Roopaei, M.; Rad, P.;\
    \ Choo, K.R. Cloud of things in smart agriculture: Intelligent irrigation monitoring\
    \ by\nthermal imaging. IEEE Cloud Comput. 2017, 4, 10–15. [CrossRef]\n199. Bandyopadhyay,\
    \ S.; Sengupta, M.; Mait, S.; Dutta, S. Role of middleware for internet of things:\
    \ A study. Int. J.\nComput. Sci. Eng. Surv. (IJCSES) 2011, 2, 94–105. [CrossRef]\n\
    200. Vani, P.D.; Rao, K.R. Measurement and monitoring of soil moisture using cloud\
    \ IoT and android system.\nIndian J. Sci. Technol. 2016, 9, 1–8.\n201. Koduru,\
    \ S.; Padala, V.G.D.P.R.; Padala, P. Smart Irrigation System using Cloud and Internet\
    \ of Things.\nIn Proceedings of the 2nd International Conference on Communication,\
    \ Computing and Networking,\nChandigarh, India, 30–29 March 2018.\n202. Ahad,\
    \ M.A.; Tripathi, G.; Zafar, S.; Doja, F. IoT data management-security aspects\
    \ of information linkage in\nIoT systems. Princ. Internet Things (IoT) Ecosyst.\
    \ Insight Paradig. 2020, 174, 439–464.\n203. Tseng, F.; Cho, H.; Wu, H. Applying\
    \ big data for intelligent agriculture-based crop selection analysis.\nIEEE Access\
    \ 2019, 7, 116965–116974. [CrossRef]\n204. Mohapatra, A.G.; Keswani, B.; Lenka,\
    \ S.K. Optimizing farm irrigation mechanism using feedforward neural\nnetwork\
    \ and structural similarity index. Int. J. Comput. Appl. 2017, 7, 135–141.\n205.\
    \ Goldstein, A.; Fink, L.; Meitin, A.; Bohadana, S.; Lutenberg, O.; Ravid, G.\
    \ Applying machine learning on the\nsensor data for irrigation recommendations:\
    \ Revealing the agronomist’s tacit knowledge. Precis. Agric. 2018,\n18, 421–444.\
    \ [CrossRef]\n206. State-of-the-Art and Challenges for the Internet of Things\
    \ Security. Available online: https://tools.ietf.org/\nhtml/draft-irtf-t2trg-iot-seccons-16#section-5.1\
    \ (accessed on 22 December 2019).\n207. Jimenez, J.M.; Garcia, L.; Taha, M.; Parra,\
    \ L.; Lloret, J.; Lorenz, P. Comprehensive Security Framework of\nan Intelligent\
    \ Wastewater Puriﬁcation System for Irrigation. In Proceedings of the Twelfth\
    \ International\nConference on Communication Theory, Reliability, and Quality\
    \ of Service, Valencia, Spain, 24–28 March 2019.\n208. Sunmehra, D.; Kumar, B.H.\
    \ WSN based Automatic Irrigation and Security System using Raspberry Pi Board.\n\
    In Proceedings of the International Conference on Current Trends in Computer,\
    \ Electrical, Electronics and\nCommunication, Mysore, India, 8–9 September 2017.\n\
    209. Barreto, L.; Amaral, A. Smart Farming: Cyber Security Challenges. In Proceedings\
    \ of the International\nConference on Intelligent Systems, Funchal, Madeira, 25–27\
    \ September 2018.\n210. Hassija, V.; Chamola, V.; Saxena, V.; Jain, D.; Goyal,\
    \ P.; Sikdar, B. A survey on IoT security: Application areas,\nsecurity threats,\
    \ and solution architectures. IEEE Access 2019, 7, 82721–82743. [CrossRef]\n211.\
    \ Caro, M.P.; Ali, M.S.; Vecchio, M.; Giaﬀreda, R. Blockchain-based Traceability\
    \ in Agri-Food Supply Chain\nManagement: A Practical Implementation. In Proceedings\
    \ of the IoT Vertical and Tropical Summit on\nAgriculture-Tuscany, Tuscany, Italy,\
    \ 8–9 May 2018.\n212. Patil, A.S.; Tama, B.A.; Park, Y.; Rhee, K. A Framework\
    \ for Blockchain based Secure Smart Green House\nFarming. In Proceedings of the\
    \ International Conference on Ubiquitous Information Technologies and\nApplications,\
    \ Taichung, Taiwan, 18–20 December 2017.\n213. Devi, M.S.; Suguna, R.; Joshi,\
    \ A.S.; Bagate, R.A. Design of IoT Blockchain based Smart Agriculture for\nEnlightening\
    \ Safety and Security. In Proceedings of the International Conference on Emerging\
    \ Technologies\nin Computer Engineering, Jaipur, India, 1–2 February 2019.\n214.\
    \ Munir, M.S.; Bajwa, I.S.; Cheema, S.M. An intelligent and secure smart watering\
    \ system using fuzzy logic\nand blockchain. Comput. Electr. Eng. 2019, 77, 109–119.\
    \ [CrossRef]\n215. Sebastian, S.; Ray, P.P. Development of IoT invasive architecture\
    \ for complying with health of home.\nIn Proceedings of the International Conference\
    \ on Computing and Communication Systems (I3CS), Shillong,\nIndia, 9–10 April\
    \ 2015.\n216. Ferrández-Pastor, F.J.; García-Chamizo, J.M.; Nieto-Hidalgo, M.;\
    \ Mora-Pascual, J.; Mora-Martínez, J.\nDeveloping ubiquitous sensor network platform\
    \ using internet of things: Application in precision agriculture.\nSensors 2016,\
    \ 16, 16–1141. [CrossRef]\n217. Merezeanu, D.; Vasilescu, G.; Dobrescu, R. Context-aware\
    \ control platform for sensor network integration in\nIoT and cloud. Stud. Inform.\
    \ Control 2016, 25, 489–498. [CrossRef]\n218. Robles, T.; Alcarria, R.; Martín,\
    \ D.; Morales, A.; Navarro, M.; Calero, R.; Iglesias, S.; López, M. An Internet\
    \ of\nThings-based Model for Smart Water Management. In Proceedings of the 28th\
    \ International Conference on\nAdvanced Information Networking and Applications\
    \ Workshops, Victoria, BC, Canada, 13–16 May 2014.\nSensors 2020, 20, 1042\n48\
    \ of 48\n219. Vuran, N.C.; Salam, A.; Wong, R.; Irmak, S. Internet of Underground\
    \ Things: Sensing and Communications\non the Field for Precision Agriculture.\
    \ In Proceedings of the IEEE 4th World Forum on Internet of Things,\nSingapore,\
    \ 5–8 February 2018.\n220. ITU-T Recommendations. ITU-T M.3170.3 (03/2007). Available\
    \ online: http://handle.itu.int/11.1002/1000/9079\n(accessed on 22 December 2019).\n\
    221. Vuran, M.C.; Salam, A.; Wong, R.; Irmak, S. Internet of underground things\
    \ in precision agriculture:\nAgriculture and technology aspects. Ad Hoc Netw.\
    \ 2018, 81, 160–173. [CrossRef]\n222. García, L.; Parra, L.; Jimenez, J.M.; Lloret,\
    \ J.; Abouaissa, A.; Lorenz, P. Internet of Underground Things\nESP8266 WiFi Coverage\
    \ Study. In Proceedings of the Eighth International Conference on Communications,\n\
    Computation, Networks and Technologies, Valencia, Spain, 24–28 November 2019.\n\
    223. Tian, Y.; Li, T.; Fong, S.; Song, L.; Han, J. Smart power management internet\
    \ of things system with 5G\nand LoRa hybrid wireless networks. In 5G-Enabled Internet\
    \ of Things, 1st ed.; CRC Press: Boca Raton, FL,\nUSA, 2019.\n© 2020 by the authors.\
    \ Licensee MDPI, Basel, Switzerland. This article is an open access\narticle distributed\
    \ under the terms and conditions of the Creative Commons Attribution\n(CC BY)\
    \ license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/20/4/1042/pdf?version=1581852410
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'IoT-Based Smart Irrigation Systems: An Overview on the Recent Trends on
    Sensors and IoT Systems for Irrigation in Precision Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2017.2786639
  analysis: '>'
  authors:
  - Maxim Chernyshev
  - Zubair A. Baig
  - Oladayo Bello
  - Sherali Zeadally
  citation_count: 192
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Browse My Settings Help Institutional Sign In All Books Conferences
    Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals
    & Magazines >IEEE Internet of Things Journal >Volume: 5 Issue: 3 Internet of Things
    (IoT): Research, Simulators, and Testbeds Publisher: IEEE Cite This PDF Maxim
    Chernyshev; Zubair Baig; Oladayo Bello; Sherali Zeadally All Authors 184 Cites
    in Papers 7989 Full Text Views Abstract Document Sections I. Introduction II.
    IoT Research Areas III. IoT Simulators and Testbeds IV. Open Challenges V. Conclusion
    Show Full Outline Authors Figures References Citations Keywords Metrics Footnotes
    Abstract: The Internet of Things (IoT) vision is increasingly being realized to
    facilitate convenient and efficient human living. To conduct effective IoT research
    using the most appropriate tools and techniques, we discuss recent research trends
    in the IoT area along with current challenges faced by the IoT research community.
    Several existing and emerging IoT research areas such as lightweight energy-efficient
    protocol development, object cognition and intelligence, as well as the critical
    need for robust security and privacy mechanisms will continue to be significant
    fields of research for IoT. IoT research can be a challenging process spanning
    both virtual and physical domains through the use of simulators and testbeds to
    develop and validate the initial proof-of-concepts and subsequent prototypes.
    To support researchers in planning IoT research activities, we present a comparative
    analysis of existing simulation tools categorized based on the scope of coverage
    of the IoT architecture layers. We compare existing large-scale IoT testbeds that
    have been adopted by researchers for examining the physical IoT prototypes. Finally,
    we discuss several open challenges of current IoT simulators and testbeds that
    need to be addressed by the IoT research community to conduct large-scale, robust
    and effective IoT simulation, and prototype evaluations. Published in: IEEE Internet
    of Things Journal ( Volume: 5, Issue: 3, June 2018) Page(s): 1637 - 1647 Date
    of Publication: 22 December 2017 ISSN Information: DOI: 10.1109/JIOT.2017.2786639
    Publisher: IEEE I. Introduction The vision of the Internet of Things (IoT) is
    to build a smart environment by utilizing smart things/objects/devices that have
    sensory and communication capability to autonomously generate data and transmit
    it via the Internet for decision making. Such decisions are used to address issues
    related to human living such as energy management, climate change, transportation,
    healthcare, business logistics, building automation, and others [1]. The IoT vision
    encompasses several building blocks that integrate and engage multidisciplinary
    and interdisciplinary activities from both business and technical domains [2].
    This implies that there must be a symbiotic interaction among various entities
    of the IoT ecosystem to facilitate its growth and success. Within the ecosystem,
    information will be shared among diverse subsystems to make timely decisions that
    impact human living. Therefore, the long-term success of IoT will depend on the
    evolution and development of subsystems of the IoT ecosystem. Sign in to Continue
    Reading Authors Figures References Citations Keywords Metrics Footnotes More Like
    This PAST: Protocol-Adaptable Security Tool for Heterogeneous IoT Ecosystems 2018
    IEEE Conference on Dependable and Secure Computing (DSC) Published: 2018 Internet
    of Things: A Survey on Devices, Ecosystem, Components and Communication Protocols
    2020 4th International Conference on Electronics, Communication and Aerospace
    Technology (ICECA) Published: 2020 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Things (IoT): Research, Simulators, and Testbeds'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s20030817
  analysis: '>'
  authors:
  - Dan Popescu
  - Florin Stoican
  - Grigore Stâmâtescu
  - Loretta Ichim
  - Cristian Drăgana
  citation_count: 140
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nAdvanced UAV–WSN System for Intelligent\nMonitoring\
    \ in Precision Agriculture †\nDan Popescu *, Florin Stoican\n, Grigore Stamatescu\n\
    , Loretta Ichim and Cristian Dragana\nFaculty of Automatic Control and Computers,\
    \ University Politehnica of Bucharest, 060042 Bucharest, Romania;\nﬂorin.stoican@upb.ro\
    \ (F.S.); grigore.stamatescu@upb.ro (G.S.); loretta.ichim@upb.ro (L.I.);\ncristian.dragana@gmail.com\
    \ (C.D.)\n* Correspondence: dan.popescu@upb.ro; Tel.: +40-766-218-363\n† This\
    \ paper is a considerably extended version of our paper published in Dan, P.;\
    \ Florin, S.; Loretta, I.;\nGrigore, S.; Cristian, D. Collaborative UAV-WSN system\
    \ for data acquisition and processing in agriculture.\nIn Proceedings of the 10th\
    \ IEEE International Conference on Intelligent Data Acquisition and Advanced\n\
    Computing Systems: Technology and Applications (IDAACS 2019), Metz, France, 18–21\
    \ September 2019.\nReceived: 31 December 2019; Accepted: 31 January 2020; Published:\
    \ 3 February 2020\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\
    \a\nAbstract: The growing need for food worldwide requires the development of\
    \ a high-performance,\nhigh-productivity, and sustainable agriculture, which implies\
    \ the introduction of new technologies\ninto monitoring activities related to\
    \ control and decision-making. In this regard, this paper presents\na hierarchical\
    \ structure based on the collaboration between unmanned aerial vehicles (UAVs)\n\
    and federated wireless sensor networks (WSNs) for crop monitoring in precision\
    \ agriculture.\nThe integration of UAVs with intelligent, ground WSNs, and IoT\
    \ proved to be a robust and\neﬃcient solution for data collection, control, analysis,\
    \ and decisions in such specialized applications.\nKey advantages lay in online\
    \ data collection and relaying to a central monitoring point, while\neﬀectively\
    \ managing network load and latency through optimized UAV trajectories and in\
    \ situ\ndata processing. Two important aspects of the collaboration were considered:\
    \ designing the UAV\ntrajectories for eﬃcient data collection and implementing\
    \ eﬀective data processing algorithms\n(consensus and symbolic aggregate approximation)\
    \ at the network level for the transmission of the\nrelevant data. The experiments\
    \ were carried out at a Romanian research institute where diﬀerent\ncrops and\
    \ methods are developed. The results demonstrate that the collaborative UAV–WSN–IoT\n\
    approach increases the performances in both precision agriculture and ecological\
    \ agriculture.\nKeywords: unmanned aerial vehicles; wireless sensor networks;\
    \ intelligent data processing; trajectory\nplanning; relevant data extraction;\
    \ data consensus; Internet of Things; precision agriculture\n1. Introduction\n\
    The need for high-performance, high-productivity, and sustainable agriculture\
    \ results from the\nrapid growth of the human population. This requires permanent\
    \ monitoring and intelligent processing\nof the measured data collected from the\
    \ ﬁeld, correlated with the weather forecasts, to produce\nagronomic recommendations.\
    \ In the last few years, new technologies in agriculture, and especially in\n\
    precision agriculture (PA), have been leveraged for increased productivity and\
    \ eﬃcient input dosage [1].\nMost importantly, in PA, farmers need to know exact\
    \ and timely details about crop status. These details\nabout certain parameters,\
    \ obtained by measurements both from the ground and in the air, constitute\ninput\
    \ data to specialized systems of process management in the PA. Some relevant examples\
    \ might\ninclude for example, irrigation control, pesticide dosage, pest control,\
    \ etc. For acquisition and complex\nprocessing of the collected data, integration\
    \ of unmanned aerial vehicles (UAV) with wireless sensor\nnetworks (WSN) under\
    \ novel frameworks, such as the Internet of Things (IoT), has been shown to\n\
    contribute to increases in agricultural yields [2]. Such advanced systems are\
    \ modeled as well-speciﬁed\nSensors 2020, 20, 817; doi:10.3390/s20030817\nwww.mdpi.com/journal/sensors\n\
    Sensors 2020, 20, 817\n2 of 25\nagent-based solutions with sensors and UAVs. Although\
    \ the contributions of UAVs and WSNs, taken\nseparately, are well documented and\
    \ important in the sustainable growth of agricultural production,\nthe integration\
    \ of these components together within an IoT framework is expected to signiﬁcantly\n\
    improve the solutions for monitoring, production modeling, prediction, and decision-making.\n\
    Relevant applications of UAV–WSN systems are presented in Reference [3–6]. In\
    \ viticulture,\nas a special type of PA, the soil and air parameters modify grape\
    \ yield and quality. For this purpose,\na solution based on the collaborative\
    \ system mini UAV (quadrotor type)–WSNs to monitor parameters,\nlike temperature\
    \ and humidity, to prevent the frost in fragmented vineyards is proposed in Reference\
    \ [3].\nThe UAV is considered as communication relay between sensors and a base\
    \ station. A real application\nfor monitoring sensitive parameters in vineyards\
    \ with both agro-meteorological stations and UAV\nplatforms is presented in Reference\
    \ [4]. In order to obtain a precise monitoring of the speciﬁc indicators,\nthe\
    \ data from the ground are correlated with the data collected by a UAV platform\
    \ with 8 rotors\nprovided with a professional thermal camera. The study was conducted\
    \ over a period of two years.\nFor data acquisition on large areas, a ﬁxed wing\
    \ type UAV, used as data mule from the ground WSN,\nis proposed in Reference [5].\
    \ In addition, the UAV has attached an high deﬁnition (HD) camera for the\ndetection\
    \ of certain plant diseases. Experimentally, a small tank has been added to spray\
    \ diﬀerent\ninsecticides, fertilizers, herbicides, etc. Both UAV and WSN are low\
    \ cost and not robust for only\ndemonstration purposes. In addition, in Reference\
    \ [6], a low cost agro-meteorological monitoring\nsystem in a vineyard was designed\
    \ and developed. The optimal positioning of the sensors was made\nwith the help\
    \ of the multispectral image analysis, acquired by UAV.\nGiven recent evolutions\
    \ in UAV technologies, cost reduction, and new regulations of aviation\nauthorities\
    \ regarding the usage and deployment of such systems (e.g., European Aviation\
    \ Safety\nAgency (EASA) [7] and Federal Aviation Administration (FAA) [8]), such\
    \ aerial robotic platforms\nare increasingly used in agriculture for diﬀerent\
    \ tasks, the most important being crop monitoring [9].\nAccording to EASA, the\
    \ UAVs should be safely integrated into the existing aviation context in a\nproportionate\
    \ way [7]. For large scale applications, in which UAVs are ﬂying beyond line-of-sight,\n\
    compliance with strict regulatory frameworks is essential.\nAdoption of a UAV-based\
    \ solution for image acquisition in agriculture applications is more\ncost eﬀective\
    \ and ﬂexible in comparison with satellite or manned aircraft alternatives [10].\
    \ Both\nﬁxed- wing [11,12] and rotary-wing type [3,13] UAVs are frequently used\
    \ in various applications in\nagriculture, while accounting for the risk of crashes\
    \ [9] and potential damages. Equipped with speciﬁc\nsensors in modular payloads\
    \ [14], such as high resolution RGB [15], infrared, multispectral [16,17],\nthermal\
    \ cameras [18,19], and also LIDAR [10], UAVs are able to create precise maps of\
    \ crop state or\nevolution [17], health plant assessment [20], diseases [21],\
    \ soil characteristics, evaluate losses caused\nby ﬂoods [11], etc. In the crop\
    \ monitoring, the following characteristics are analyzed from UAV\nimages [9]:\
    \ the crop water stress, deﬁned as the diﬀerence between the canopy and the air\
    \ temperature,\nthe photochemical reﬂectance index, and the vegetation indices.\n\
    Although UAVs with diﬀerent propulsion systems are now available, most applications\
    \ in PA\nuse UAVs driven by electric motors due to their compact size, reduced\
    \ maintenance and operational\ncosts and, not the least, their alignment with\
    \ the current regulatory context and tendencies towards the\nreduction of global\
    \ carbon emissions [22].\nThe small-scale data acquisition by the WSN helps farmers\
    \ to take actions like crop irrigation,\nfertilizer usages, deciding on the optimum\
    \ stages of sowing, and harvesting [23]. Moreover, WSNs\nemployed in PA lead to\
    \ large amounts of data. Thus, data collection by WSNs is an important\ncontribution\
    \ to the development of farm management information systems (FMIS) [24,25].\n\
    The WSN has multiple functions at the ﬁeld level: data acquisition of various\
    \ parameters\n(e.g., temperature in soil and air, humidity in soil and air, solar\
    \ radiance, soil nutrients, the presence of\npests and weeds, chlorophyll content\
    \ in plants, etc.), distributed processing of data by establishing\nconsensus—if\
    \ it is the case, establishing the relevant data and its storage, low level data\
    \ fusion, and\ndata transmission. New sensor node designs oﬀer reduced costs [26];\
    \ see, for example, the detailed list\nSensors 2020, 20, 817\n3 of 25\nof sensors\
    \ used in PA given in Reference [10]. As in many other large-area monitoring applications,\n\
    for communication or local processing reasons, the sensors are grouped into sensor\
    \ networks, the\ncommunication being made by radio. A WSN network will include\
    \ measurement nodes (sensory\nnodes) and data collection, processing, and transmission\
    \ nodes (sink or cluster head).\nRegarding PA, there is no rigorous theory of\
    \ sensor placement because it depends on the\nparticularities of the soil and\
    \ the weather. Sensor groups need to comply broadly with the need for\nsensory\
    \ and communication coverage. In Reference [27], two examples of sensor location\
    \ topologies\nare given: grid and random. From the point of view of communication\
    \ with the sink node, the most\nused are the star and mesh topologies. The wireless\
    \ communication protocols used in WSN for PA are\nthe following [10]: 6LoWPAN,\
    \ ZigBee (both being the most suitable for the mesh topology), LoRaWAN,\nGSM,\
    \ BLE, and Wi-Fi.\nIn PA, WSNs are used, most often, for parameter monitoring,\
    \ but they can also be integrated into\ncontrol systems as sensors. Direct speciﬁc\
    \ applications of WSN in control systems for PA are the energy\neﬃcient automated\
    \ control of irrigation [28] and smart automated fertilization [29].\nThe performance\
    \ of the crop monitoring can be improved by UAV–WSN collaboration [30].\nThe collaborative\
    \ aspects in an integrated UAV (aerial agents)–WSN (ground agents) architecture\
    \ for\ndiﬀerent applications was recently presented in a review paper [22], where\
    \ the diﬀerent functional\ncomponents of the system and how they collaborate with\
    \ each other was highlighted. In Reference [31],\nthe authors presented an integrated\
    \ UAV–WSN–IoT system, named FarmBeats, which is an end-to-end\nplatform for data\
    \ collection from various sensors, cameras, and drones in agricultural applications.\n\
    An unlicensed TV White Spaces is used to setup a high bandwidth link from the\
    \ farmer’s home to an\nIoT ground station at a distance for collecting data from\
    \ UAVs and WSNs.\nIn order to interconnect the UAVs and terrestrial WSNs into\
    \ hybrid networks and, at the same\ntime, to ensure a safe airspace sharing with\
    \ aircrafts, multiple organizations are contributing [22]:\nInternational Civil\
    \ Aviation Organization, EASA, Joint Authorities for Rulemaking on Unmanned\n\
    Systems, International Telecommunications Union, etc. Satellite connection is\
    \ required for two reasons.\nOne-way communication, such as obtaining the GPS\
    \ location of the UAVs or the sensory nodes (if any)\nis one reason. The second\
    \ reason is a possible data transmission or remote control (via two-way\nsatellite-intermediated\
    \ internet).\nIn Reference [32], the authors discuss the information system design\
    \ supporting agriculture\ndata management. Enabling advanced data processing in\
    \ the form of sensor fusion and clustering\nmechanisms for improved network topologies\
    \ in generic applications has been discussed [30]. Eﬀective\ndata gathering mechanisms\
    \ [33] and higher level IoT architectures [34] are key and current topics\nof\
    \ interest.\nWe believe that the challenges of UAV–WSN–IoT integrated systems\
    \ can come from several\ndirections: (a) precise localization of the ground sensors\
    \ with the aid of a preliminary ﬂight; (b) sensor\nstates periodically inspected\
    \ by UAV; (c) establishing of the WSNs as sensor clusters able to cover, both\n\
    from the sensorial and from the communication point of view the monitored area;\
    \ (d) establishing\nthe cluster heads (CH), named base stations, of the WSNs able\
    \ to communicate data to UAVs;\n(e) transmitting commands to change the strategy\
    \ and parameters of the sensor networks, (f) data\nacquisition from WSNs through\
    \ UAVs, (g) special trajectory planning and tracking, (h) the aggregation\nof\
    \ information collected by the UAV with the information collected by WSN for the\
    \ purpose of\nmeasuring and interpreting the parameters with increased accuracy,\
    \ (i) remote control via Internet,\nand (j) edge and cloud computing.\nIn a hierarchical\
    \ structure, the data processing architecture of the integrated system is based\
    \ on\nthree levels: consensus, edge computing [35], and cloud computing.\nFor\
    \ the main activity, the data collection from CH, UAV must have a predeﬁned trajectory,\
    \ properly\ndesigned, and accounting for the following limitations:\n•\nWaypoint\
    \ passing: a UAV has to pass above the CH to extract the relevant data from that\
    \ area\n(covered by the corresponding WSN sub-network);\nSensors 2020, 20, 817\n\
    4 of 25\n•\nObstacle avoidance: UAVs avoid obstructions or prohibited areas along\
    \ the ﬂight plan;\n•\nGuaranteed communication: to ensure that the data has been\
    \ fully collected, enough time has to\nbe spent in the CH neighborhood;\n•\nEﬃciency:\
    \ reduce at a minimum the energy consumption for that trajectory (consider the\
    \ length\nof the trajectory and its complexity).\nThe integration of UAV–WSN based\
    \ systems for PA in IoT is a mandatory step to create an\nadvanced FMIS [25].\n\
    Due to the integration, the system can become “smart” by using elements of artiﬁcial\
    \ intelligence\nlike self-adaptation and decision, optimal trajectory, data transmission\
    \ of relevant parameter values,\nenergy eﬃciency, and neural networks for data\
    \ and image processing. Not in the least, the sensors must\nbe placed optimally,\
    \ considering the terrain characteristics. Battery life is an important design\
    \ point\nof the ground sensor algorithms by reducing to a minimum the number of\
    \ wireless communications\nneeded to transfer the information. The radio interface\
    \ is the critical factor in increasing battery life.\nBased on the frequency of\
    \ the data collection and radio transmissions the nodes can have a battery\nlifetime\
    \ ranging from several months up to one year. Therefore, the intelligent collaboration\
    \ between\nUAV and WSN can lead to optimization of parameters, such as energy\
    \ consumption, sensing coverage,\nrisk, data acquisition, and processing time\
    \ [36]. To this end, bio-inspired optimization heuristics and\ngenetic algorithms\
    \ were applied to the aforementioned agents.\nThe optimal WSN coverage by the\
    \ aid of UAV platforms is implemented in Reference [37] as an\noptimization problem,\
    \ formulated by means of the travelling salesman problem, in order to ﬁnd the\n\
    best path of the UAV for data collection with minimum energy consumption.\nUsing\
    \ UAV as data mule for multi WSNs is an energy-eﬃcient method to increase the\
    \ networks’\nlife. To this end, the authors in Reference [38] apply the successive\
    \ convex optimization technique.\nThe proposed system presents the following integration\
    \ aspects:\n-\nGroup the sensors in clusters and determine the cluster heads,\
    \ the methodology proposed by the\nauthors in Reference [30];\n-\nPath planning\
    \ based on speciﬁc conditions for eﬃcient data collection; and\n-\nIntelligent\
    \ data collection and processing.\nThe main contributions consist in the following:\
    \ (i) implementation of a multilevel, collaborative\nUAV–WSN system structure\
    \ for agriculture applications, (ii) a speciﬁc path planning for ﬁxed\nwing–type\
    \ UAV with the purpose of robust and eﬃcient data collection, (iii) obtaining\
    \ relevant data\nfrom sensors for the purpose of saving energy, and (iv) edge–fog–cloud\
    \ computing algorithms for\nsubsequent data processing. Thus, the main challenge\
    \ is related to improving data extraction and\ncommunication in large scale heterogeneous\
    \ monitoring system. The key problem is focused on\nimproving the performance\
    \ of such systems through better algorithms and synchronization among the\ntwo\
    \ subsystems: the ground sensor network and the robotic aerial platforms, implemented\
    \ as UAVs,\nfor data collection and relaying.\nThe rest of the paper is structured\
    \ as follows. Section 2 describes the concept, the methodology,\nand key aspects\
    \ that have been addressed for the proper design and implementation of the system.\n\
    Section 3 presents the experimental results and performances after implementing\
    \ the system on an\nexperimental farm. Section 4 highlights the conclusions, as\
    \ well as future work.\n2. Materials and Methods\n2.1. Requirements for Integrated\
    \ UAV-WSN-IoT Systems\nFor the design of reliable and robust large-scale monitoring\
    \ system the requirements have to\nﬁrst be validated. The main challenges for\
    \ such collaborative systems were considered to be: sensing\ncoverage in accordance\
    \ to mission objectives, communication coverage by the hybrid UAV–WSN\nsystem\
    \ using various types of radio links, from low-power, low-data rate to high throughput\
    \ long\nSensors 2020, 20, 817\n5 of 25\ndistance for streaming, energy eﬃciency,\
    \ and, not in the least, computing eﬃciency. The decentralized\narchitecture for\
    \ crop ﬁeld monitoring described in this paper is designed to overcome the challenges\n\
    mentioned above and to account for the data generation patterns at the ﬁeld level.\
    \ While the proposed\ndata fusion mechanisms and processing of centralized in-ﬁeld\
    \ data at CH level manage to reduce data\nvolume and ensure the ﬂow of information\
    \ up to the level of events, an additional intermediate level is\nappended to\
    \ the data stream, in order to reach the server. To this end, we consider both\
    \ mobile agents\n(UAV) and multiple ﬁxed agents (ground sensors (SNs)). The system\
    \ diagram is presented in Figure 1.\nThe mobile agent can perform the following\
    \ functions: data mulling, image acquisition, relay, and\nstate inspection of\
    \ WSNs. The ﬁxed agents acquire data from the ﬁeld (agricultural ﬁeld—soil and\
    \ air),\nprocess data locally (relevant data extraction, data consensus), and\
    \ ﬁnally transmit data to the UAV by\nmeans of CHs. The system is composed of\
    \ four main processing levels (Table 1): Sensor level, Fog\nComputing level, Internet/Cloud\
    \ Computing level, and Data Management and Interpretation level.\nThis is a multi-WSN–UAV\
    \ structure with higher level integration in internet-based systems for decision\n\
    support. The data from WSNs are collected by a UAV, transmitted at a ground control\
    \ station (GCS),\nand, from here via the internet, to the Data Interpretation\
    \ module. Analytics functionality ranges from\nbasic statistical indicators to\
    \ trend and event detectors and up to basic statistical learning models that\n\
    have the ability to anticipate evolutions in the monitored ground phenomena.\n\
    Another important requirement of the integrated system is the correlated or complementary\n\
    interpretation of the data from the sensory agents, either mobile or ﬁxed. For\
    \ example, when the soil\nmoisture is too high, the soil sensors show the maximum\
    \ value and cannot discern whether a ﬂood has\noccurred. This can be accurately\
    \ determined from aerial images taken by the UAV. In addition, the\ndegree of\
    \ humidity in plants and the degree of foliage development can be observed either\
    \ from the\nground or from the air (images), and a more precise determination\
    \ results from the fusion of the two\ndata sets.\nOther types of similar systems\
    \ were surveyed and can include the use of swarms of multi-copter\ntype UAVs,\
    \ which oﬀer better positioning accuracy for data collection while trading oﬀ\
    \ energy eﬃciency\nand autonomy. Ground sensor network implementation can also\
    \ be a diﬀerentiating factor with two\nmain approaches: random deployment of sensor\
    \ nodes in the area of interest, according to a minimum\nexpected sensing coverage\
    \ density, or deterministic, grid-like placement. Intermediate data processing\n\
    steps from the ﬁeld level to the decision level are commonly accepted as an important\
    \ mechanism to\nbalance network loads and improve communication latency.\nSensors\
    \ 2020, 20, x FOR PEER REVIEW \n5 of 25 \n \nthe challenges mentioned above and\
    \ to account for the data generation patterns at the field level. \nWhile the\
    \ proposed data fusion mechanisms and processing of centralized in-field data\
    \ at CH level \nmanage to reduce data volume and ensure the flow of information\
    \ up to the level of events, an \nadditional intermediate level is appended to\
    \ the data stream, in order to reach the server. To this end, \nwe consider both\
    \ mobile agents (UAV) and multiple fixed agents (ground sensors (SNs)). The system\
    \ \ndiagram is presented in Figure 1. The mobile agent can perform the following\
    \ functions: data mulling, \nimage acquisition, relay, and state inspection of\
    \ WSNs. The fixed agents acquire data from the field \n(agricultural field—soil\
    \ and air), process data locally (relevant data extraction, data consensus), and\
    \ \nfinally transmit data to the UAV by means of CHs. The system is composed of\
    \ four main processing \nlevels (Table 1): Sensor level, Fog Computing level,\
    \ Internet/Cloud Computing level, and Data \nManagement and Interpretation level.\
    \ This is a multi-WSN–UAV structure with higher level \nintegration in internet-based\
    \ systems for decision support. The data from WSNs are collected by a \nUAV, transmitted\
    \ at a ground control station (GCS), and, from here via the internet, to the Data\
    \ \nInterpretation module. Analytics functionality ranges from basic statistical\
    \ indicators to trend and \nevent detectors and up to basic statistical learning\
    \ models that have the ability to anticipate \nevolutions in the monitored ground\
    \ phenomena. \nAnother important requirement of the integrated system is the correlated\
    \ or complementary \ninterpretation of the data from the sensory agents, either\
    \ mobile or fixed. For example, when the soil \nmoisture is too high, the soil\
    \ sensors show the maximum value and cannot discern whether a flood \nhas occurred.\
    \ This can be accurately determined from aerial images taken by the UAV. In addition,\
    \ \nthe degree of humidity in plants and the degree of foliage development can\
    \ be observed either from \nthe ground or from the air (images), and a more precise\
    \ determination results from the fusion of the \ntwo data sets. \nOther types\
    \ of similar systems were surveyed and can include the use of swarms of multi-copter\
    \ \ntype UAVs, which offer better positioning accuracy for data collection while\
    \ trading off energy \nefficiency and autonomy. Ground sensor network implementation\
    \ can also be a differentiating factor \nwith two main approaches: random deployment\
    \ of sensor nodes in the area of interest, according to \na minimum expected sensing\
    \ coverage density, or deterministic, grid-like placement. Intermediate \ndata\
    \ processing steps from the field level to the decision level are commonly accepted\
    \ as an important \nmechanism to balance network loads and improve communication\
    \ latency. \n \nFigure 1. The concept of the integrated unmanned aerial vehicle\
    \ (UAV)–wireless sensor network \n(WSN)–Internet of Things (IoT) system. \nFigure\
    \ 1. The concept of the integrated unmanned aerial vehicle (UAV)–wireless sensor\
    \ network\n(WSN)–Internet of Things (IoT) system.\nSensors 2020, 20, 817\n6 of\
    \ 25\nTable 1. Processing levels.\nLevel\nContent\nField\nSensors (SNs)\nEdge\
    \ computing\nCluster heads (CHs), UAV\nCloud computing\nCloud\nData interpretation\n\
    User server\n2.2. UAV Trajectory Design\nFor UAV trajectory planning, two cases\
    \ must be considered. The ﬁrst is the trajectory planning\nfor collecting data\
    \ from sensors (CHs), and it must take into account certain requirements, such\
    \ as\nthe complete and safe acquisition of data, on one hand, and minimize energy\
    \ and time consumption,\non the other hand [39].\nUnder certain reasonable assumptions\
    \ (known environment, known limitations), the UAV tasks\nreduce to computing a\
    \ trajectory which respects constraints and minimizes a cost (length, total energy\n\
    consumption, etc.), while simultaneously respecting various constraints (internal\
    \ dynamics, stall\nvelocity constraints or exogenous ones, those imposed by the\
    \ environment, such as obstacle avoidance\nand waypoint passing through).\nThe\
    \ particularity lies in the fact that many of the UAV-speciﬁc constraints are\
    \ non-convex [40],\ne.g., the variable of interest z (depending of time t) has\
    \ to stay outside some bound (e.g., outside of\nan interdicted region and/or maintain\
    \ a minimal velocity). If z(t) is the UAV position, the velocity\nrestrictions\
    \ are usually written as follows:\nv ≤\n\f\f\f\n\f\f\f\n.z(t)\n\f\f\f\n\f\f\f\
    \ ≤ v.\n(1)\nBoth bounds (lower—v and upper—v) may depend on a variety of factors.\
    \ Hard constraints are\nimposed by the UAV physics: upper bound given by the engine\
    \ characteristics and lower bound by\nthe requirement to avoid stall. Note that\
    \ this work neglects the inﬂuence of wind: velocity is usually\nmeasured against\
    \ the ground (e.g., through a GPS), but, in fact, the UAV “feels” the addition\
    \ of its own\nand of the wind velocities. This may lead to an unexpected stall\
    \ or, at least, improper behavior. Usual\ntechniques are to provide more conservative\
    \ bounds in Equation (1) and to restrict the ﬂight to normal\nweather conditions.\n\
    Waypoints are introduced, in a practical mission, because data has to be gathered\
    \ from a cluster\nnode. Thus, the question of minimum communication time arises\
    \ [41]: It is necessary to remain in a\nspeciﬁc neighborhood for a deﬁned time\
    \ interval ∆ti. To correctly describe such a constraint, we require\na tuple (ωi,\
    \ ∆ti, ri , Ri), where ωi is the corresponding cluster node position (the center\
    \ of the circle in\nFigure 2), and ri and Ri are, respectively, the minimum and\
    \ the maximum radius of the permitted\ncommunication area. Because there are perturbations\
    \ due to trajectory control errors or other causes,\nthe real trajectory is included\
    \ in a ﬂight lane (Figure 2a). The ﬂight lane was experimentally established\n\
    at 30 m, under reasonable assumptions about wind speed. The trajectory z(t) has\
    \ to stay near the\nwaypoint for a least amount of time ∆ti determined by the\
    \ quantity of data which has to be transferred:\nri ≤\n\f\f\f\n\f\f\fωi − z(t)\n\
    \f\f\f\n\f\f\f ≤ Ri, t ∈ [ti, ti + ∆ti].\n(2)\ncondition (2) is often impractical\
    \ to check due to the continuous nature of z(t) and because of the\nvarying time\
    \ interval [ti, ti + ∆ti]. The usual approach is to sample the constraint and\
    \ to estimate the\npath length by assuming the bounds (1) on the velocity. To\
    \ this end, we consider:\n\f\f\f\f\n\f\f\f\fz\n\x10\nti\n\x11\n− ωi\n\f\f\f\f\n\
    \f\f\f\f = ri,\n(3)\nwith ti given such that ti ∈ [ti, ti + ∆ti]) holds; it is\
    \ important that a waypoint is reached, not when.\nSensors 2020, 20, 817\n7 of\
    \ 25\nNote that the shortest distance for a trajectory checking (4) is the straight\
    \ line shown in Figure 2a,\nwhose length is 2\nq\nR2\ni − r2\ni . In other words,\
    \ a suﬃcient condition for guaranteeing that the minimal\ntime ∆ti has passed\
    \ is to ensure that\n∆ti ≥\n2\nq\nR2\ni − r2\ni\nv\n.\n(4)\nCondition (4) provides\
    \ a lower bound for the time the UAV stays between the inner and outer\ncircles\
    \ (i.e., how much time it spends inside waypoint’s ωi communication range). Then,\
    \ inserting (3) in\na trajectory design procedure implicitly guarantees enough\
    \ communication time. This approach may\nbe insuﬃcient for a couple of reasons.\
    \ First, the desired communication time may not be known at the\ntrajectory generation\
    \ time and thus could not be compared with ∆ti. Second, the communication time\n\
    is known to be larger than ∆ti and a “tangential” pass (like the one enforced\
    \ by (3)) does not suﬃce.\nThe method (detailed below) is to enter a loitering\
    \ mode to increase arbitrarily the data-gathering\ntime [42]. Making the reasonable\
    \ assumption that the loitering rl\ni radius respects the condition\nri < rl\n\
    i < Ri, means that the UAV can orbit the waypoint ωi for an indeﬁnite period of\
    \ time [43]. From\nthe viewpoint of trajectory generation, the only relevant question\
    \ remains the places at which the\nUAV inserts/dislodges onto/from the loitering\
    \ circle. Both of these points are decided by the relative\nposition of the current\
    \ waypoint with respect to the previous and next waypoints in the sequence\n(such\
    \ as to reduce unnecessary inﬂexions in the trajectory). The switch between normal\
    \ and loitering\nmodes will be done at pre-determined points: the trajectory enters\
    \ loitering mode at a point ω−\ni and\ndislodges from it at a point ω+\ni (which\
    \ lie on the loitering circle and are from/towards the direction\nof the previous/next\
    \ waypoint). Thus, when the UAV decides to ﬁnish the communication, it will\n\
    continue to orbit the loitering circle until it reaches the dislodging point ω+\n\
    i . Here, it will switch back\nto the normal trajectory mode.\nThe inner (dotted\
    \ line), outer (solid line) communication circles, and loitering circle (dashed\
    \ line)\nare illustrated in Figure 2b. We show a trajectory inserting to the loitering\
    \ circle, tracking an arc of\nit, and, lastly, dislodging from the circle to re-enter\
    \ its normal mode (line tracking). The UAV could\nhave orbited the loitering circle\
    \ repeatedly and dislodged from it at ω+\ni when desired. As is mentioned\nabove,\
    \ the trajectory describes a corridor (we account for the inherent tracking error\
    \ appearing under\nrealistic conditions).\nSensors 2020, 20, x FOR PEER REVIEW\
    \ \n7 of 25 \n \nΔ\U0001D461௜ ≥\nଶටோ೔\nమି௥೔\nమ\n௩\n. \n(4) \nCondition (4) provides\
    \ a lower bound for the time the UAV stays between the inner and outer \ncircles\
    \ (i.e., how much time it spends inside waypoint’s \U0001D714௜ communication range).\
    \ Then, inserting \n(3) in a trajectory design procedure implicitly guarantees\
    \ enough communication time. This approach \nmay be insufficient for a couple\
    \ of reasons. First, the desired communication time may not be known \nat the\
    \ trajectory generation time and thus could not be compared with Δ\U0001D461௜\
    \ . Second, the \ncommunication time is known to be larger than Δ\U0001D461௜ and\
    \ a “tangential” pass (like the one enforced \nby (3)) does not suffice. The method\
    \ (detailed below) is to enter a loitering mode to increase arbitrarily \nthe\
    \ data-gathering time [42]. Making the reasonable assumption that the loitering\
    \ \U0001D45F௜\n௟ radius respects \nthe condition \U0001D45F௜ < \U0001D45F௜\n௟\
    \ < \U0001D445௜, means that the UAV can orbit the waypoint \U0001D714௜ for an\
    \ indefinite period of \ntime [43]. From the viewpoint of trajectory generation,\
    \ the only relevant question remains the places \nat which the UAV inserts/dislodges\
    \ onto/from the loitering circle. Both of these points are decided by \nthe relative\
    \ position of the current waypoint with respect to the previous and next waypoints\
    \ in the \nsequence (such as to reduce unnecessary inflexions in the trajectory).\
    \ The switch between normal and \nloitering modes will be done at pre-determined\
    \ points: the trajectory enters loitering mode at a point \n\U0001D714௜\nି and\
    \ dislodges from it at a point \U0001D714௜\nା (which lie on the loitering circle\
    \ and are from/towards the \ndirection of the previous/next waypoint). Thus, when\
    \ the UAV decides to finish the communication, \nit will continue to orbit the\
    \ loitering circle until it reaches the dislodging point \U0001D714௜\nା. Here,\
    \ it will switch \nback to the normal trajectory mode. \nThe inner (dotted line),\
    \ outer (solid line) communication circles, and loitering circle (dashed line)\
    \ \nare illustrated in Figure 2b. We show a trajectory inserting to the loitering\
    \ circle, tracking an arc of it, \nand, lastly, dislodging from the circle to\
    \ re-enter its normal mode (line tracking). The UAV could \nhave orbited the loitering\
    \ circle repeatedly and dislodged from it at \U0001D714௜\nା  when desired. As\
    \ is \nmentioned above, the trajectory describes a corridor (we account for the\
    \ inherent tracking error \nappearing under realistic conditions). \n \n \n(a)\
    \ \n(b) \nFigure 2. Illustration of different aspects of the trajectory design:\
    \ (a) inner and outer communication \nconstraints with a sufficient condition\
    \ and a corridor for the UAV trajectory envelope and (b) \ntrajectory validating.\
    \ \nWhile the previous velocity and time constraints are easy to formulate, they\
    \ lead to complex \n(nonlinear in position and time variables) constraints. Thus,\
    \ in practical implementations, it is often \nmuch easier to provide a simplified\
    \ control scheme based on the heading angle (a “line of sight” \nprocedure). \n\
    That is, the UAV control is partitioned into the lower level where the velocity\
    \ is controlled (to \nnegate the wind disturbances, for example) and the higher\
    \ level where, at each time instant, a new \nheading angle is computed. Thus,\
    \ we may interpret the path as a collection of segments (linking \nconsecutive\
    \ waypoints) and circle arcs around waypoints where loitering is needed.  \nThe\
    \ idea of the segment tracking procedure is straightforward and is sketched in\
    \ the following \nflowchart (Figure 3). In the flowchart, we make use of several\
    \ notations: \nFigure 2. Illustration of diﬀerent aspects of the trajectory design:\
    \ (a) inner and outer communication\nconstraints with a suﬃcient condition and\
    \ a corridor for the UAV trajectory envelope and\n(b) trajectory validating.\n\
    While the previous velocity and time constraints are easy to formulate, they lead\
    \ to complex\n(nonlinear in position and time variables) constraints. Thus, in\
    \ practical implementations, it is often\nmuch easier to provide a simpliﬁed control\
    \ scheme based on the heading angle (a “line of sight”\nprocedure).\nThat is,\
    \ the UAV control is partitioned into the lower level where the velocity is controlled\n\
    (to negate the wind disturbances, for example) and the higher level where, at\
    \ each time instant, a new\nSensors 2020, 20, 817\n8 of 25\nheading angle is computed.\
    \ Thus, we may interpret the path as a collection of segments (linking\nconsecutive\
    \ waypoints) and circle arcs around waypoints where loitering is needed.\nThe\
    \ idea of the segment tracking procedure is straightforward and is sketched in\
    \ the following\nﬂowchart (Figure 3). In the ﬂowchart, we make use of several\
    \ notations:\n•\nRTB = return to base, a ﬂag denoting whether the UAV has to return\
    \ to its path’s starting point;\n•\nLM = loiter mode, denotes that the UAV has\
    \ entered the loiter mode; at the start of this mode, the\nLMT = loiter mode remaining\
    \ time is initialized to a predeﬁned value which is decreased (at each\nstep with\
    \ a constant value T) as long as the UAV remains in the loiter mode;\n•\nPP =\
    \ projection point, obtained by projecting the current position onto the support\
    \ line of the\ncurrent segment from which W = weight of the PP (denoting whether\
    \ the PP is inside the segment,\nto the left or to the right) and D = distance\
    \ between the UAV position and the PP, are computed;\n•\nPCP = proximity circle\
    \ point represents the intersection between the proximity circle and the\ncurrent\
    \ segment (in case of intersection between the circle and the segment there are\
    \ two solutions;\nthe one closest to the end-point of the segment is taken);\n\
    •\nLP = loiter point is computed such that the UAV tracks the loiter circle (with\
    \ the sense of movement\ndecided a priori by the supervisor); and\n•\nCP = current\
    \ waypoint, throughout the algorithm, is updated as needed.\nSensors 2020, 20,\
    \ x FOR PEER REVIEW \n8 of 25 \n \n• \nRTB = return to base, a flag denoting whether\
    \ the UAV has to return to its path’s starting point; \n• \nLM = loiter mode,\
    \ denotes that the UAV has entered the loiter mode; at the start of this mode,\
    \ \nthe LMT = loiter mode remaining time is initialized to a predefined value\
    \ which is decreased (at \neach step with a constant value T) as long as the UAV\
    \ remains in the loiter mode; \n• \nPP = projection point, obtained by projecting\
    \ the current position onto the support line of the \ncurrent segment from which\
    \ W = weight of the PP (denoting whether the PP is inside the \nsegment, to the\
    \ left or to the right) and D = distance between the UAV position and the PP,\
    \ are \ncomputed; \n• \nPCP = proximity circle point represents the intersection\
    \ between the proximity circle and the \ncurrent segment (in case of intersection\
    \ between the circle and the segment there are two \nsolutions; the one closest\
    \ to the end-point of the segment is taken); \n• \nLP = loiter point is computed\
    \ such that the UAV tracks the loiter circle (with the sense of \nmovement decided\
    \ a priori by the supervisor); and \n• \nCP = current waypoint, throughout the\
    \ algorithm, is updated as needed. \n \nFigure 3. Flowchart for the path planning.\
    \ RTB = return to base; CP = current waypoint; LM = loiter \nmode; LMT = loiter\
    \ mode remaining time; T = constant value; LP = loiter point; PP = projection\
    \ point; \nFigure 3. Flowchart for the path planning. RTB = return to base; CP\
    \ = current waypoint; LM = loiter\nmode; LMT = loiter mode remaining time; T =\
    \ constant value; LP = loiter point; PP = projection point;\nW = weight of the\
    \ PP; D = distance between the UAV position and the PP; PCP = proximity circle\
    \ point;\nL = vector length.\nSensors 2020, 20, 817\n9 of 25\nThe main points\
    \ of the algorithm are:\n▶\nThe UAV has two modes of functioning, loiter mode\
    \ and segment tracking mode, which are\ndecided by the supervisor (in the sense\
    \ that within the collection of waypoints a priori computed,\nsome of them are\
    \ labeled as loiter points).\n▶\nIn both cases, the algorithm provides a heading\
    \ which is the reference to be tracked by the\nUAV. This is in line with standard\
    \ practices, where the heading is decided through some design\nprocedure and the\
    \ velocity and pitch and roll angles are decided at the auto-pilot level (usually\n\
    the velocity is maintained constant and the roll and pitch are taken as needed\
    \ between admissible\nbounds).\n▶\nThe decisions taken by the algorithm and supervisor\
    \ are, ultimately, related to the distance\nbetween the current position and some\
    \ point of interest. To do so, we consider some circles of\ninterest, deﬁned as\
    \ follows:\n#\nCommunication circle: the UAV communicates with the ground-based\
    \ cluster head only\nwhen it is within the communication radius.\n#\nWaypoint\
    \ update circle: it is impractical to assume that the UAV passes through the exact\n\
    coordinates of the current waypoint. Thus, we update the active segment (by advancing\n\
    through the list of waypoints) whenever we are close enough to the end-point of\
    \ the\ncurrent segment.\n#\nLoitering circle: whenever the UAV is required to\
    \ spend a signiﬁcant time in communication\nwith the current cluster head, the\
    \ decision to start loitering is taken. The loitering radius is\nrestricted to\
    \ be less than the communication radius and larger than the physical limitations\n\
    imposed by the roll angle bounds (a tighter circle means a larger roll angle).\n\
    #\nProximity circle: the procedure employed in the algorithm takes (whenever there\
    \ is\nintersection between the circle and the current segment) the heading angle\
    \ in the direction\nof the intersection point (the one closest to the end-point\
    \ of the segment).\n▶\nWhen the last waypoint is covered, the UAV returns to base\
    \ (by default, we consider this to be\nthe initial point on the trajectory).\n\
    Without being exhaustive, some of the most relevant updates in the algorithm are:\n\
    In segment tracking mode:\n1.\nAt the current time, we consider the UAV position\
    \ (x,y), the segment determined by the current\n(CP) and next waypoint (CP + 1):\n\
    \x10\nwi\nx, wi\ny\n\x11\n,\n\x10\nwi+1\nx\n, wi+1\ny\n\x11\n.\n2.\nWe compute\
    \ the projection of the current point onto the current segment (PP). We identify\
    \ three\npossible cases by checking the relative position of the projection wrt\
    \ the segment’s end points\n(described by W): inside the segment (0 ≤ W ≤ 1)),\
    \ outside and located before the initial segment\nend (W < 0); outside and located\
    \ after the initial segment end (W > 1);\n3.\nWe compute the distance (D) from\
    \ the current point to the segment and the circle of radius L\n(proportional with\
    \ the UAV velocity) and further used to compute the heading vector.\n4.\nWe consider\
    \ the following cases:\ni.\nThe UAV is too far away, and the projection point\
    \ lies before the segment start point. Then,\nthe heading angle points towards\
    \ the projection point.\nii.\nThe UAV is suﬃciently close, and the projection\
    \ point lies before the segment start point.\nThen, the heading angle points towards\
    \ the start point.\niii.\nThe UAV is suﬃciently close to the segment end point,\
    \ or its projection onto the segment\nlies after the end point. Then, the current\
    \ segment is updated, and the procedure jumps to\nstep 4i.\nSensors 2020, 20,\
    \ 817\n10 of 25\niv.\nThe UAV is too far away, and its projection lies onto the\
    \ interior of the segment. Then,\nthe heading vector points towards the projection.\n\
    v.\nThe UAV is suﬃciently close, and its projection lies onto the interior of\
    \ the segment.\nThe heading angle is taken as the vector of length L in which\
    \ the tip lies on the segment\n(there are two possible tips; the one closer to\
    \ the segment end point is considered).\n5.\nGo to step 1.\nIn the loitering mode:\n\
    1.\nSelect the loitering center as the current waypoint.\n2.\nConstruct the circle\
    \ of radius L and centered in the current position of the UAV.\n3.\nIf the circle\
    \ does not intersect the loitering circle, move towards the projection point situated\
    \ on\nthe loitering circle.\n4.\nIf the proximity circle intersects the loitering\
    \ circle, take the heading vector along the tangent at\nthe intersection point\
    \ between loitering circle and proximity circle (there are two solutions, we\n\
    selected depending on the desired loitering rotation—clockwise or counterclockwise).\n\
    Note that all steps where a decision regarding the trajectory update is taken\
    \ consist in fact in a\ndecision about the UAV’s heading. Thus, for trajectory\
    \ tracking, only the heading angle is used as\ncontrol input. This suﬃces for\
    \ relatively simple trajectories and is robust against wind disturbances\n(as\
    \ later shown in the simulations).\n2.3. Relevant Data Extraction\nThe collected\
    \ data is hierarchically processed from the ground level, cluster head level,\
    \ UAV level\nup to the cloud. Alongside these steps, information is gradually\
    \ extracted through various methods\nthat enable local decisions based on the\
    \ conﬁguration of the system (thresholding, consensus, symbolic\naggregate approximation,\
    \ etc.).\nIn-ﬁeld data processing is ensured both at local level (independent\
    \ data ﬁltering) and decentralized\nat network level (through data exchange between\
    \ neighbor sensory nodes). The proposed data\nprocessing mechanisms, tailored\
    \ for in-ﬁeld level, are designed in order to ensure a substantial\nweighted average.\
    \ This step is found as ‘Enable consensus dialog’. Once the convergence is reached,\n\
    each node performs a routine for results analysis basically seeking to discover\
    \ and mark nodes with\ndivergent values. This information remains available alongside\
    \ the consensus value so that it can be\ninterrogated by the higher level of data\
    \ processing if needed. This is found in Figure 4 as ‘Analyze\nresults step’.\n\
    Aggregated data sets are achieved through diﬀerent methods. All seek for relevant\
    \ data points,\naiming to a reduced size set and providing at the same time a\
    \ satisfying reconstruction of the initial\ndata. The proposed method for data\
    \ aggregation is based on the minimum and maximum values\nextraction, computed\
    \ as global extremes for a predeﬁned period of time (e.g., a day). It is obvious\
    \ that\nthis method is suitable only for measurements that have a periodic behavior,\
    \ with smooth variations\nduring the day. A measurement for which this method\
    \ is suitable is the soil temperature. Conversely,\nchange detection is commonly\
    \ used for irregularly-shaped data sets. This method follows extraction of\nlocal\
    \ extreme points where trend changes occur.\nGiven a set of data points (xi, yi),\
    \ i = 1, . . . , n, trend ti is computed for each sequence\nmeasurements such\
    \ that for a measure m, (5),(6),(7) has to be true. If ti , ti+1, then it means\
    \ that a trend\nchange has occurred, and the data point (xi, yi) is added to the\
    \ relevant data set.\nxm\ni+1 − xm\ni > δm ⇒ tm\ni = 1,\n(5)\nxm\ni+1 − xm\ni\
    \ < −δm ⇒ tm\ni = −1,\n(6)\nxm\ni+1 − xm\ni ∈ [−δm, δm] ⇒ tm\ni = 0.\n(7)\nSensors\
    \ 2020, 20, 817\n11 of 25\nSensors 2020, 20, x FOR PEER REVIEW \n11 of 25 \n \n\
    \ \nFigure 4. Flow diagram of the data processing steps at the field level, based\
    \ on consensus algorithm. \nData collection is done periodically, following a\
    \ succession of specific routines. As mentioned \nbefore, the first step for in-field\
    \ data processing is performed at the local level, independently, by \neach sensor\
    \ node. \nWhile the proposed data fusion mechanisms and processing of centralized\
    \ in-field data at \ngateway level manage to reduce data volume and ensure the\
    \ flow of information up to the level of \nevents, an additional intermediate\
    \ level is appended on the data stream, in order to reach the server. \nConsequently,\
    \ the system is composed from three processing levels (Figure 5): In-field data\
    \ \nprocessing, Edge computing, and Cloud computing. This corresponds to a UAV–WSN\
    \ system with \ninternet integration. The data from WSNs are collected by a UAV\
    \ (or team of UAVs) and then \ntransmitted at a ground control station (GCS).\
    \ From here, the data is transmitted, via the internet, to \nthe Cloud computing\
    \ level and, finally, to the ‘Data interpretation and decision’ module.  \nIn\
    \ a consensus mechanism, multiple autonomous agents seek to reach the convergence\
    \ value \nunder the influence of the information flow exchanged inside the network.\
    \ Each node updates its \nestimated value using an updating rule. An update law\
    \ for node \U0001D45B௜  based on local weighted \nconsensus is described by the\
    \ following equation: \nFigure 4. Flow diagram of the data processing steps at\
    \ the ﬁeld level, based on consensus algorithm.\nData collection is done periodically,\
    \ following a succession of speciﬁc routines. As mentioned\nbefore, the ﬁrst step\
    \ for in-ﬁeld data processing is performed at the local level, independently,\
    \ by each\nsensor node.\nWhile the proposed data fusion mechanisms and processing\
    \ of centralized in-ﬁeld data at\ngateway level manage to reduce data volume and\
    \ ensure the ﬂow of information up to the level of\nevents, an additional intermediate\
    \ level is appended on the data stream, in order to reach the server.\nConsequently,\
    \ the system is composed from three processing levels (Figure 5): In-ﬁeld data\
    \ processing,\nEdge computing, and Cloud computing. This corresponds to a UAV–WSN\
    \ system with internet\nintegration. The data from WSNs are collected by a UAV\
    \ (or team of UAVs) and then transmitted\nat a ground control station (GCS). From\
    \ here, the data is transmitted, via the internet, to the Cloud\ncomputing level\
    \ and, ﬁnally, to the ‘Data interpretation and decision’ module.\nSensors 2020,\
    \ 20, 817\n12 of 25\nIn a consensus mechanism, multiple autonomous agents seek\
    \ to reach the convergence value\nunder the inﬂuence of the information ﬂow exchanged\
    \ inside the network. Each node updates its\nestimated value using an updating\
    \ rule. An update law for node ni based on local weighted consensus\nis described\
    \ by the following equation:\nxi(k + 1) = ωiixi(k) +\nX\nj∈Ni ωijxj(k),\n(8)\n\
    X\ni∈M\nX\nj∈Ni ωij = 1,\n(9)\nwhere\nxi ∈ R is the computed estimate of node\
    \ i;\nωii is the weight applied to its own previous computed estimate;\nωij is\
    \ the weight associated with the node j for the value of node i;\nk is a convergence\
    \ step; and\nNi is the neighborhood of node i, i ∈ {1, 2, 3, . . . , m} = M.\n\
    The proposed consensus algorithm is built using a hybrid weighted average consensus\
    \ which\nensures that the updating rule computes the current convergence value,\
    \ keeping a high priority for the\nclosest neighbors, but at the same time, it\
    \ aims at suppressing outlier values.\nEach node computes the weights ωij based\
    \ on the distance dij computed using the available\nlocation information.\nωij\
    \ =\n\ndmin\ndij\nif (i, j) ∈ ε, i , j\n0\nif (i, j) < ε, i , j\n,\n(10)\n\
    where\ndmin is the distance to the closest neighbor; and\ndij denotes the distance\
    \ between node i and j.\nUsing the selected weights, the algorithm performs a\
    \ weighted average of neighbors values\ndeﬁned as:\nNimean(k + 1) =\nP\nj∈Ni ωijxj(k)\n\
    dim(Ni)\n.\n(11)\nIn order to suppress outlier values, additional weights are\
    \ applied for previously computed\nestimate xi(k) and current neighborhood estimate\
    \ average Nimean(k + 1).\nThus, this is an\nauto-supressing mechanism computed\
    \ as the ratio between the standard deviation at convergence step\nk + 1 and the\
    \ deviation of the previous estimate xi(k). This is written as:\nxi(k + 1) =\n\
    ∆(k+1)·xi(k)+δ·Nimean(k+1)\n∆(k+1)+δ\n∆(k + 1) =\ns\nP\nj∈Ni[ xj(k)−Nimean(k+1)]\n\
    2\nNi−1\nq\n[ xi(k)−Nimean(k+1)]2 ,\nδ = 1 − ∆(k + 1)\n(12)\nwhere\n-\n∆(k + 1)\
    \ is the weight applied to the state value, computed for each step of the average\
    \ consensus;\n-\nδ is the weight applied to the neighborhood estimate.\nOnce the\
    \ consensus is reached, each node performs a routine for results analysis basically\
    \ seeking\nto discover and mark nodes with divergent values. This information\
    \ remains available alongside\nthe consensus value so that it can be interrogated\
    \ by the higher level of data processing if needed.\nSensors 2020, 20, 817\n13\
    \ of 25\nThis global mechanism indicates problematic sensor nodes or even very\
    \ isolated events, but it cannot\ndiscern between them.\nSensors 2020, 20, x FOR\
    \ PEER REVIEW \n13 of 25 \n \nFigure 5. Flow diagram of the data processing at\
    \ the system level. \nThe flow diagram presented in Figure 5 shows the data processing\
    \ pipeline for the integrated \nUAV–WSN–IoT system. Based on preliminary parameterization,\
    \ e.g., sample rate, coverage area, and \nenergy aware communication, sensor measurements\
    \ are collected at the ground level by the local \nnodes. On-board basic data\
    \ filtering is carried out to check the consistency and validity of the \nmeasurements\
    \ for early detection of sensor faults, misreading or outliers. At the local network\
    \ level, \nbased on the validated and filtered data, consensus-based agreement\
    \ is performed by in-network \ndata processing, which leads to a common value\
    \ for each of the acquired parameters among all nodes \nin a cluster. The cluster\
    \ head further operates on the data by extracting relevant information through\
    \ \nedge computing mechanisms, and a model-based compressed representation is\
    \ achieved, e.g., \npolynomial interpolation models or more advanced methods,\
    \ such as SAX (Symbolic Aggregate \nApproximation). At the conclusion of the edge\
    \ computing phase, the UAV is activated for collecting \nthe compressed representations\
    \ of the ground phenomena from the cluster head nodes. The trajectory \nof the\
    \ UAV is optimized as previously discussed to ensure timely collection from all\
    \ the cluster heads \nin a target area and transfer the data to a central unit\
    \ for back-end cloud computing processing and \ndecision. The cloud computing\
    \ layer integrates the data reconstruction based on the model \nparameters as\
    \ inputs to a decision-making process, which yields the final outcome and allows\
    \ for \nclosing the loop by acting on the ground environment, e.g., irrigation\
    \ and input dosage signals for \nthe precision agriculture application. \nWhen\
    \ it comes to processing a large volume of data, many high-level representations\
    \ of time \nseries have been proposed for data mining, including Fourier transforms,\
    \ wavelets, and piecewise \npolynomial models [44]. A different approach that\
    \ we consider is the SAX algorithm, proposed in \nReference [45]. This is a flexible\
    \ method that allows adjusting the ratio between data volume and data \nrelevance\
    \ to ensure a fair reconstruction of original trends, while ensuring high data\
    \ reduction by \ntransforming of a time series into text strings. In essence,\
    \ the algorithm operates by assigning label \nsymbols to segments of the time\
    \ series, thus porting it in a unified lower dimension representation. \nThe importance\
    \ of SAX’ parameterization must be considered by defining the number of segments\
    \ \nand the alphabet size. \nStarting with a time series \U0001D44B of length\
    \ \U0001D45B, this is approximated into a vector \U0001D44Bത = (\U0001D465̅ଵ,\
    \ … , \U0001D465̅ெ) of \nany length \U0001D440 ≤ \U0001D45B, with \U0001D45B divisible\
    \ by \U0001D440. Each element of the vector \U0001D465పഥ is calculated by: \n\U0001D465\
    పഥ =\nெ\n௡ ∑\n\U0001D465௝\n(௡/ெ)೔\n௝ୀ\n೙\nಾ(೔షభ)ାଵ\n. \n(13) \n3. Experimental\
    \ Results \nThe high-level configuration of the integrated system is illustrated\
    \ in Figure 6. The UAV is of \nthe fixed wing-type, which enables coverage of\
    \ large geographic areas with low energy consumption. \nThe base station (CH)\
    \ collects the primary data processed from the field sensors and periodically\
    \ \ntransmits it to a UAV according to its synchronization with the planned trajectory.\
    \ Further, the data \nare processed in the cloud after the UAV uploads the collected\
    \ data over the internet. \nFigure 5. Flow diagram of the data processing at the\
    \ system level.\nThe ﬂow diagram presented in Figure 5 shows the data processing\
    \ pipeline for the integrated\nUAV–WSN–IoT system. Based on preliminary parameterization,\
    \ e.g., sample rate, coverage area,\nand energy aware communication, sensor measurements\
    \ are collected at the ground level by the\nlocal nodes. On-board basic data ﬁltering\
    \ is carried out to check the consistency and validity of the\nmeasurements for\
    \ early detection of sensor faults, misreading or outliers. At the local network\
    \ level,\nbased on the validated and ﬁltered data, consensus-based agreement is\
    \ performed by in-network data\nprocessing, which leads to a common value for\
    \ each of the acquired parameters among all nodes in a\ncluster. The cluster head\
    \ further operates on the data by extracting relevant information through edge\n\
    computing mechanisms, and a model-based compressed representation is achieved,\
    \ e.g., polynomial\ninterpolation models or more advanced methods, such as SAX\
    \ (Symbolic Aggregate Approximation).\nAt the conclusion of the edge computing\
    \ phase, the UAV is activated for collecting the compressed\nrepresentations of\
    \ the ground phenomena from the cluster head nodes. The trajectory of the UAV\
    \ is\noptimized as previously discussed to ensure timely collection from all the\
    \ cluster heads in a target area\nand transfer the data to a central unit for\
    \ back-end cloud computing processing and decision. The\ncloud computing layer\
    \ integrates the data reconstruction based on the model parameters as inputs to\
    \ a\ndecision-making process, which yields the ﬁnal outcome and allows for closing\
    \ the loop by acting on the\nground environment, e.g., irrigation and input dosage\
    \ signals for the precision agriculture application.\nWhen it comes to processing\
    \ a large volume of data, many high-level representations of time\nseries have\
    \ been proposed for data mining, including Fourier transforms, wavelets, and piecewise\n\
    polynomial models [44]. A diﬀerent approach that we consider is the SAX algorithm,\
    \ proposed in\nReference [45]. This is a ﬂexible method that allows adjusting\
    \ the ratio between data volume and data\nrelevance to ensure a fair reconstruction\
    \ of original trends, while ensuring high data reduction by\ntransforming of a\
    \ time series into text strings. In essence, the algorithm operates by assigning\
    \ label\nsymbols to segments of the time series, thus porting it in a uniﬁed lower\
    \ dimension representation.\nThe importance of SAX’ parameterization must be considered\
    \ by deﬁning the number of segments and\nthe alphabet size.\nStarting with a time\
    \ series X of length n, this is approximated into a vector X = (x1, . . . , xM)\
    \ of\nany length M ≤ n, with n divisible by M. Each element of the vector xi is\
    \ calculated by:\nxi = M\nn\nX(n/M)i\nj=\nn\nM(i−1) +1 xj.\n(13)\n3. Experimental\
    \ Results\nThe high-level conﬁguration of the integrated system is illustrated\
    \ in Figure 6. The UAV is of the\nﬁxed wing-type, which enables coverage of large\
    \ geographic areas with low energy consumption. The\nbase station (CH) collects\
    \ the primary data processed from the ﬁeld sensors and periodically transmits\n\
    it to a UAV according to its synchronization with the planned trajectory. Further,\
    \ the data are processed\nin the cloud after the UAV uploads the collected data\
    \ over the internet.\nSensors 2020, 20, 817\n14 of 25\nSensors 2020, 20, x FOR\
    \ PEER REVIEW \n14 of 25 \n \n \nFigure 6. General configuration of UAV–WSN system\
    \ implementation. \n3.1. Path Tracking \nWe start by illustrating a nominal trajectory\
    \ obtained by applying the segment tracking part of \nthe path planning algorithm\
    \ (Figure 7). The waypoints are the cluster heads (blue markers), and to \neach\
    \ of them corresponds an update radius (solid blue line) and a communication radius\
    \ (dashed \nblack line). The first radius denotes the region in which an update\
    \ of the current segment is carried \nout, and the second denotes the region inside\
    \ which communication is possible. The starting point is \nchosen far away from\
    \ the initial waypoint. \nThe algorithm provides, at each step, a heading vector\
    \ which (with the use of the current \nposition) leads to a heading angle. Together\
    \ with a constant velocity value, these values are applied \nto a simplified 2\
    \ degrees of freedom UAV model, which is numerically integrated to provide the\
    \ \nresultant path (solid red line). The sampling time is taken T = 1 s, and the\
    \ numerical integration is \ndone through ode45 in MATLAB 2018b. \nThe same scenario\
    \ is carried out for the nominal case and for the case with wind disturbances\
    \ \n(modeled by random uniform noise bounded by the interval [−15, 15]). The results\
    \ are depicted in \nFigure 7, where we indeed observe a reasonable behavior of\
    \ the resultant path (it passes through the \nwaypoints neighborhoods, changes\
    \ to a new segment as expected, and is smooth, at least in the \nnominal case).\
    \ \n(a) \n(b) \nFigure 7. Illustration of segment tracking: (a) nominal case and\
    \ (b) with wind disturbances. \nTo better illustrate the scheme’s performance,\
    \ we show multiple runs (3 samples), each of them \nfor various noise values.\
    \ We bound the resultant paths inside a corridor of diameter d = 30 m (Figure\
    \ \n8). \nFigure 6. General conﬁguration of UAV–WSN system implementation.\n3.1.\
    \ Path Tracking\nWe start by illustrating a nominal trajectory obtained by applying\
    \ the segment tracking part of the\npath planning algorithm (Figure 7). The waypoints\
    \ are the cluster heads (blue markers), and to each of\nthem corresponds an update\
    \ radius (solid blue line) and a communication radius (dashed black line).\nThe\
    \ ﬁrst radius denotes the region in which an update of the current segment is\
    \ carried out, and the\nsecond denotes the region inside which communication is\
    \ possible. The starting point is chosen far\naway from the initial waypoint.\n\
    The algorithm provides, at each step, a heading vector which (with the use of\
    \ the current position)\nleads to a heading angle. Together with a constant velocity\
    \ value, these values are applied to a\nsimpliﬁed 2 degrees of freedom UAV model,\
    \ which is numerically integrated to provide the resultant\npath (solid red line).\
    \ The sampling time is taken T = 1 s, and the numerical integration is done through\n\
    ode45 in MATLAB 2018b.\nThe same scenario is carried out for the nominal case\
    \ and for the case with wind disturbances\n(modeled by random uniform noise bounded\
    \ by the interval [−15, 15]). The results are depicted in\nFigure 7, where we\
    \ indeed observe a reasonable behavior of the resultant path (it passes through\n\
    the waypoints neighborhoods, changes to a new segment as expected, and is smooth,\
    \ at least in the\nnominal case).\nSensors 2020, 20, x FOR PEER REVIEW \n14 of\
    \ 25 \n \n \nFigure 6. General configuration of UAV–WSN system implementation.\
    \ \n3.1. Path Tracking \nWe start by illustrating a nominal trajectory obtained\
    \ by applying the segment tracking part of \nthe path planning algorithm (Figure\
    \ 7). The waypoints are the cluster heads (blue markers), and to \neach of them\
    \ corresponds an update radius (solid blue line) and a communication radius (dashed\
    \ \nblack line). The first radius denotes the region in which an update of the\
    \ current segment is carried \nout, and the second denotes the region inside which\
    \ communication is possible. The starting point is \nchosen far away from the\
    \ initial waypoint. \nThe algorithm provides, at each step, a heading vector which\
    \ (with the use of the current \nposition) leads to a heading angle. Together\
    \ with a constant velocity value, these values are applied \nto a simplified 2\
    \ degrees of freedom UAV model, which is numerically integrated to provide the\
    \ \nresultant path (solid red line). The sampling time is taken T = 1 s, and the\
    \ numerical integration is \ndone through ode45 in MATLAB 2018b. \nThe same scenario\
    \ is carried out for the nominal case and for the case with wind disturbances\
    \ \n(modeled by random uniform noise bounded by the interval [−15, 15]). The results\
    \ are depicted in \nFigure 7, where we indeed observe a reasonable behavior of\
    \ the resultant path (it passes through the \nwaypoints neighborhoods, changes\
    \ to a new segment as expected, and is smooth, at least in the \nnominal case).\
    \ \n(a) \n(b) \nFigure 7. Illustration of segment tracking: (a) nominal case and\
    \ (b) with wind disturbances. \nTo better illustrate the scheme’s performance,\
    \ we show multiple runs (3 samples), each of them \nfor various noise values.\
    \ We bound the resultant paths inside a corridor of diameter d = 30 m (Figure\
    \ \n8). \nFigure 7. Illustration of segment tracking: (a) nominal case and (b)\
    \ with wind disturbances.\nTo better illustrate the scheme’s performance, we show\
    \ multiple runs (3 samples), each of them for\nvarious noise values. We bound\
    \ the resultant paths inside a corridor of diameter d = 30 m (Figure 8).\nSensors\
    \ 2020, 20, 817\n15 of 25\nSensors 2020, 20, x FOR PEER REVIEW \n15 of 25 \n \n\
    \ \nFigure 8. Illustration of trajectory tracking for multiple runs and with bounding\
    \ corridor. \nWe observe that the resulted path does not guarantee enough time\
    \ inside all communication \nranges of the cluster head nodes. Specifically, we\
    \ note that the 2nd and 6th waypoints (the one in the \nupper-most and the one\
    \ in the lower-most corners) are only tangentially visited. Thus, the need for\
    \ a \nloitering mode is clear. To better emphasize the behavior of the UAV when\
    \ in loiter mode, we first \nshow, in Figure 9, the path resulting in such a case\
    \ (for both nominal and under disturbance \nfunctioning). \n \n \n(a) \n(b) \n\
    Figure 9. Illustration of loiter circle tracking: (a) nominal case and (b) with\
    \ wind disturbances. \nWe can now integrate the full algorithm where we switch\
    \ between segment and loiter modes, \nas needed. Specifically, in Figure 10, we\
    \ consider that only waypoints 4 and 6 require the activation \nof the loitering\
    \ mode and that the UAV stays in this mode for a fixed duration of t = 100 s.\
    \ This can \nbe obviously improved by deciding to exit the loitering mode at a\
    \ later date (e.g., such that the UAV \nis already well-oriented towards the next\
    \ waypoint). \nFigure 8. Illustration of trajectory tracking for multiple runs\
    \ and with bounding corridor.\nWe observe that the resulted path does not guarantee\
    \ enough time inside all communication\nranges of the cluster head nodes. Speciﬁcally,\
    \ we note that the 2nd and 6th waypoints (the one in the\nupper-most and the one\
    \ in the lower-most corners) are only tangentially visited. Thus, the need for\
    \ a\nloitering mode is clear. To better emphasize the behavior of the UAV when\
    \ in loiter mode, we ﬁrst show,\nin Figure 9, the path resulting in such a case\
    \ (for both nominal and under disturbance functioning).\nSensors 2020, 20, x FOR\
    \ PEER REVIEW \n15 of 25 \n \n \nFigure 8. Illustration of trajectory tracking\
    \ for multiple runs and with bounding corridor. \nWe observe that the resulted\
    \ path does not guarantee enough time inside all communication \nranges of the\
    \ cluster head nodes. Specifically, we note that the 2nd and 6th waypoints (the\
    \ one in the \nupper-most and the one in the lower-most corners) are only tangentially\
    \ visited. Thus, the need for a \nloitering mode is clear. To better emphasize\
    \ the behavior of the UAV when in loiter mode, we first \nshow, in Figure 9, the\
    \ path resulting in such a case (for both nominal and under disturbance \nfunctioning).\
    \ \n \n \n(a) \n(b) \nFigure 9. Illustration of loiter circle tracking: (a) nominal\
    \ case and (b) with wind disturbances. \nWe can now integrate the full algorithm\
    \ where we switch between segment and loiter modes, \nas needed. Specifically,\
    \ in Figure 10, we consider that only waypoints 4 and 6 require the activation\
    \ \nof the loitering mode and that the UAV stays in this mode for a fixed duration\
    \ of t = 100 s. This can \nbe obviously improved by deciding to exit the loitering\
    \ mode at a later date (e.g., such that the UAV \nis already well-oriented towards\
    \ the next waypoint). \nFigure 9. Illustration of loiter circle tracking: (a)\
    \ nominal case and (b) with wind disturbances.\nWe can now integrate the full\
    \ algorithm where we switch between segment and loiter modes, as\nneeded. Speciﬁcally,\
    \ in Figure 10, we consider that only waypoints 4 and 6 require the activation\
    \ of\nthe loitering mode and that the UAV stays in this mode for a ﬁxed duration\
    \ of t = 100 s. This can be\nobviously improved by deciding to exit the loitering\
    \ mode at a later date (e.g., such that the UAV is\nalready well-oriented towards\
    \ the next waypoint).\nSensors 2020, 20, 817\n16 of 25\nSensors 2020, 20, x FOR\
    \ PEER REVIEW \n16 of 25 \n \n \n \n(a) \n(b) \nFigure 10. Illustration of combined\
    \ (segment and loitering circle) tracking. In all cases, the loitering \ncircle\
    \ radius was taken to be 150 m: (a) nominal case and (b) with wind disturbances.\
    \ \nTo simulate path tracking, the NMEA (National Marine Electronics Association)\
    \ Generator was \nused [46] (Figure 11). The path tracking, both in pattern mode\
    \ (piecewise linear trajectory) and in \nloiter mode (circles around base stations),\
    \ was simulated (Figures 12 and 13). \n \nFigure 11. NMEA—based Simulator. \n\
    Figure 10. Illustration of combined (segment and loitering circle) tracking. In\
    \ all cases, the loitering\ncircle radius was taken to be 150 m: (a) nominal case\
    \ and (b) with wind disturbances.\nTo simulate path tracking, the NMEA (National\
    \ Marine Electronics Association) Generator was\nused [46] (Figure 11). The path\
    \ tracking, both in pattern mode (piecewise linear trajectory) and in loiter\n\
    mode (circles around base stations), was simulated (Figures 12 and 13).\nSensors\
    \ 2020, 20, x FOR PEER REVIEW \n16 of 25 \n \n \n \n(a) \n(b) \nFigure 10. Illustration\
    \ of combined (segment and loitering circle) tracking. In all cases, the loitering\
    \ \ncircle radius was taken to be 150 m: (a) nominal case and (b) with wind disturbances.\
    \ \nTo simulate path tracking, the NMEA (National Marine Electronics Association)\
    \ Generator was \nused [46] (Figure 11). The path tracking, both in pattern mode\
    \ (piecewise linear trajectory) and in \nloiter mode (circles around base stations),\
    \ was simulated (Figures 12 and 13). \n \nFigure 11. NMEA—based Simulator. \n\
    Figure 11. NMEA—based Simulator.\nSensors 2020, 20, 817\n17 of 25\nSensors 2020,\
    \ 20, x FOR PEER REVIEW \n17 of 25 \n \n \nFigure 12. Pattern mode (tracking segments\
    \ = green dashed line). Green arrow = UAV. \n \nFigure 13. Loiter mode (tracking\
    \ circles = blue). Green arrow = UAV. \n3.2. Sensor Placement and Parameter Maps\
    \ \nUAV path planning revolves around optimizing the data collection from the\
    \ cluster head with \nthe constraint of limited mobility and hovering ability\
    \ of fixed-wing type airborne platforms. To this \nextent, before the UAV is scheduled\
    \ to visit the area, all local measurement have to be collected from \nthe WSN\
    \ at the cluster head, filtered, and aggregated, while only uploading, for example,\
    \ the \nconsensus values, confidence intervals, and outcomes of event detection\
    \ and embedded alerting \nmechanisms. \nThe practical experiments at the ground\
    \ sensor network level have used a sensor node \ndeployment similar to the layout\
    \ in Figure 14. In total, there are 45 nodes deployed in the field on \nvarious\
    \ experimental parcels from our agronomical research institute partner. Among\
    \ these nodes, \nsix of them have the cluster head role for local collection of\
    \ the sensor measurement from the \nneighboring nodes, as well as increased capabilities\
    \ in terms of data processing, storage, and energy \nresources, e.g., solar panel,\
    \ larger batteries, and high gain antennas for more robust operation. These \n\
    are listed as blue disks in the figure, and their selection is based on the geographical\
    \ coverage \nconditions and installation constraints. \nFigure 12. Pattern mode\
    \ (tracking segments = green dashed line). Green arrow = UAV.\nSensors 2020, 20,\
    \ x FOR PEER REVIEW \n17 of 25 \n \n \nFigure 12. Pattern mode (tracking segments\
    \ = green dashed line). Green arrow = UAV. \n \nFigure 13. Loiter mode (tracking\
    \ circles = blue). Green arrow = UAV. \n3.2. Sensor Placement and Parameter Maps\
    \ \nUAV path planning revolves around optimizing the data collection from the\
    \ cluster head with \nthe constraint of limited mobility and hovering ability\
    \ of fixed-wing type airborne platforms. To this \nextent, before the UAV is scheduled\
    \ to visit the area, all local measurement have to be collected from \nthe WSN\
    \ at the cluster head, filtered, and aggregated, while only uploading, for example,\
    \ the \nconsensus values, confidence intervals, and outcomes of event detection\
    \ and embedded alerting \nmechanisms. \nThe practical experiments at the ground\
    \ sensor network level have used a sensor node \ndeployment similar to the layout\
    \ in Figure 14. In total, there are 45 nodes deployed in the field on \nvarious\
    \ experimental parcels from our agronomical research institute partner. Among\
    \ these nodes, \nsix of them have the cluster head role for local collection of\
    \ the sensor measurement from the \nneighboring nodes, as well as increased capabilities\
    \ in terms of data processing, storage, and energy \nresources, e.g., solar panel,\
    \ larger batteries, and high gain antennas for more robust operation. These \n\
    are listed as blue disks in the figure, and their selection is based on the geographical\
    \ coverage \nconditions and installation constraints. \nFigure 13. Loiter mode\
    \ (tracking circles = blue). Green arrow = UAV.\n3.2. Sensor Placement and Parameter\
    \ Maps\nUAV path planning revolves around optimizing the data collection from\
    \ the cluster head with the\nconstraint of limited mobility and hovering ability\
    \ of ﬁxed-wing type airborne platforms. To this extent,\nbefore the UAV is scheduled\
    \ to visit the area, all local measurement have to be collected from the WSN\n\
    at the cluster head, ﬁltered, and aggregated, while only uploading, for example,\
    \ the consensus values,\nconﬁdence intervals, and outcomes of event detection\
    \ and embedded alerting mechanisms.\nThe practical experiments at the ground sensor\
    \ network level have used a sensor node deployment\nsimilar to the layout in Figure\
    \ 14. In total, there are 45 nodes deployed in the ﬁeld on various\nexperimental\
    \ parcels from our agronomical research institute partner. Among these nodes,\
    \ six of\nthem have the cluster head role for local collection of the sensor measurement\
    \ from the neighboring\nnodes, as well as increased capabilities in terms of data\
    \ processing, storage, and energy resources,\ne.g., solar panel, larger batteries,\
    \ and high gain antennas for more robust operation. These are listed\nas blue\
    \ disks in the ﬁgure, and their selection is based on the geographical coverage\
    \ conditions and\ninstallation constraints.\nSensors 2020, 20, 817\n18 of 25\n\
    Sensors 2020, 20, x FOR PEER REVIEW \n18 of 25 \n \n \nFigure 14. Study area with\
    \ the corresponding sensor nodes (red disks) and cluster heads (blue \ndisks).\
    \ \nIn Figure 15, a further split of the wireless sensor network is performed\
    \ according to four interest \nzones (Zone 1–Zone 4) in the agricultural experimental\
    \ area. Zone 1 contains one cluster head and 12 \nsensor nodes. Zone 4 contains\
    \ one cluster head and six sensor nodes. For increased reliability of the \ndata\
    \ collection, in Zone 2 and Zone 3, two cluster heads are installed, with two\
    \ patches of six and five \nsensor nodes, respectively, in the first case and\
    \ two patches of six and four sensor nodes in the latter. \nBased on the discussed\
    \ deployment layout in the field, we present the coverage maps from the \ninitial\
    \ values for two parameters and their progression based on the implementation\
    \ of the \ndistributed agreement algorithm. In Figure 16a, the initial soil moisture\
    \ values are presented. As the \nconsensus algorithm advances in 10, 20, and 30\
    \ iterations, the coverage map is formed with increasing \nconfidence on the joint\
    \ agreement value after subsequent message exchanges. The final agreement \nvalue\
    \ is stored at the cluster head to ultimately inform the decision process of the\
    \ local conditions for \nirrigation actuation—the sensing density, in our case,\
    \ is larger than the granularity of the irrigation \nsystem, which requires an\
    \ average model based on the local geographical conditions. \n \nFigure 15. Location\
    \ of nodes in four zones. \nFigure 14. Study area with the corresponding sensor\
    \ nodes (red disks) and cluster heads (blue disks).\nIn Figure 15, a further split\
    \ of the wireless sensor network is performed according to four interest\nzones\
    \ (Zone 1–Zone 4) in the agricultural experimental area. Zone 1 contains one cluster\
    \ head and\n12 sensor nodes. Zone 4 contains one cluster head and six sensor nodes.\
    \ For increased reliability of the\ndata collection, in Zone 2 and Zone 3, two\
    \ cluster heads are installed, with two patches of six and ﬁve\nsensor nodes,\
    \ respectively, in the ﬁrst case and two patches of six and four sensor nodes\
    \ in the latter.\nBased on the discussed deployment layout in the ﬁeld, we present\
    \ the coverage maps from the\ninitial values for two parameters and their progression\
    \ based on the implementation of the distributed\nagreement algorithm. In Figure\
    \ 16a, the initial soil moisture values are presented. As the consensus\nalgorithm\
    \ advances in 10, 20, and 30 iterations, the coverage map is formed with increasing\
    \ conﬁdence\non the joint agreement value after subsequent message exchanges.\
    \ The ﬁnal agreement value is stored\nat the cluster head to ultimately inform\
    \ the decision process of the local conditions for irrigation\nactuation—the sensing\
    \ density, in our case, is larger than the granularity of the irrigation system,\
    \ which\nrequires an average model based on the local geographical conditions.\n\
     \nFigure 15. Location of nodes in four zones.\nSensors 2020, 20, 817\n19 of 25\n\
    Sensors 2020, 20, x FOR PEER REVIEW \n19 of 25 \n \n \n \n(a) \n(b) \n \n \n(c)\
    \ \n(d) \nFigure 16. Soil moisture map in Zone 2, before and after consensus:\
    \ (a) location of soil moisture \nsensors; (b) soil moisture map after 10 iterations;\
    \ (c) soil moisture map after 20 iterations; and (d) soil \nmoisture map after\
    \ 30 iterations. \nIn a similar manner as for the soil moisture parameter, Figure\
    \ 17 reports the initial values and \nthe consensus progression for the air temperature\
    \ parameter for Zone 2. The approach is repeated \nfor all the parameters that\
    \ can be sensed in the field. The sampling time is adapted to the process \ndynamics,\
    \ as well as to previously reported events or external influences, e.g., weather\
    \ changes, \nseason, and expert input regarding field conditions. \n \n \n(a)\
    \ \n(b) \nFigure 16. Soil moisture map in Zone 2, before and after consensus:\
    \ (a) location of soil moisture sensors;\n(b) soil moisture map after 10 iterations;\
    \ (c) soil moisture map after 20 iterations; and (d) soil moisture\nmap after\
    \ 30 iterations.\nIn a similar manner as for the soil moisture parameter, Figure\
    \ 17 reports the initial values and the\nconsensus progression for the air temperature\
    \ parameter for Zone 2. The approach is repeated for all\nthe parameters that\
    \ can be sensed in the ﬁeld. The sampling time is adapted to the process dynamics,\n\
    as well as to previously reported events or external inﬂuences, e.g., weather\
    \ changes, season, and\nexpert input regarding ﬁeld conditions.\nSensors 2020,\
    \ 20, x FOR PEER REVIEW \n19 of 25 \n \n \n \n(a) \n(b) \n \n \n(c) \n(d) \nFigure\
    \ 16. Soil moisture map in Zone 2, before and after consensus: (a) location of\
    \ soil moisture \nsensors; (b) soil moisture map after 10 iterations; (c) soil\
    \ moisture map after 20 iterations; and (d) soil \nmoisture map after 30 iterations.\
    \ \nIn a similar manner as for the soil moisture parameter, Figure 17 reports\
    \ the initial values and \nthe consensus progression for the air temperature parameter\
    \ for Zone 2. The approach is repeated \nfor all the parameters that can be sensed\
    \ in the field. The sampling time is adapted to the process \ndynamics, as well\
    \ as to previously reported events or external influences, e.g., weather changes,\
    \ \nseason, and expert input regarding field conditions. \n \n \n(a) \n(b) \n\
    Figure 17. Cont.\nSensors 2020, 20, 817\n20 of 25\nSensors 2020, 20, x FOR PEER\
    \ REVIEW \n20 of 25 \n \n \n \n(c) \n(d) \nFigure 17. Temperature map in Zone\
    \ 2, before and after consensus: (a) location of temperature \nsensors; (b) temperature\
    \ map after 10 iterations; (c) temperature map after 20 iterations; and (d) \n\
    temperature map after 30 iterations. \n3.3. Data Processing Results \nAs previously\
    \ discussed, the primary local distributed agreement is based on consensus among\
    \ \nthe clustered sensing nodes. This allows the nodes to have a unitary representation\
    \ of the \nmeasurements, under the assumption of limited variance in the geographical\
    \ sensing area for one \ncluster. The parameters that are sampled by the nodes\
    \ include: air temperature, relative humidity, \nsoil temperature, soil moisture,\
    \ and solar radiation.  \nFigure 18 illustrates the consensus results for two\
    \ parameters: soil moisture and air temperature \nin a cluster of five TelosB\
    \ sensor nodes. These are obtained through simulation in a Contiki/COOJA \nnetwork\
    \ environment starting from ground-collected values. The main insight provided\
    \ by this result \nis in the analysis of the convergence time and convergence\
    \ values in conjunction with fixed or \ndynamic tuning parameters. More specifically,\
    \ by adjusting the communication frequency and \nweighting the consensus algorithm\
    \ based on the sensor location and confidence levels, we can guide \nthe algorithm\
    \ with expert knowledge. This can result in acceleration of the process or in\
    \ more reliable \nconsensus values. \n \n \n(a) \n(b) \nFigure 18. Consensus results\
    \ for: (a) soil moisture and (b) air temperature. \nOnce local agreement has been\
    \ established, relevant data extraction is performed at the cluster \nhead by\
    \ means of the SAX method. In this case, we present the outcome for running the\
    \ algorithm \non a data sample of around 10 days, with the consensus values stored\
    \ at 30-min intervals at one \ncluster head (Table 2). The variations in the SAX\
    \ string length correspond to the parameterization of \nFigure 17. Temperature\
    \ map in Zone 2, before and after consensus: (a) location of temperature sensors;\n\
    (b) temperature map after 10 iterations; (c) temperature map after 20 iterations;\
    \ and (d) temperature\nmap after 30 iterations.\n3.3. Data Processing Results\n\
    As previously discussed, the primary local distributed agreement is based on consensus\n\
    among the clustered sensing nodes.\nThis allows the nodes to have a unitary representation\
    \ of\nthe measurements, under the assumption of limited variance in the geographical\
    \ sensing area for one\ncluster. The parameters that are sampled by the nodes\
    \ include: air temperature, relative humidity, soil\ntemperature, soil moisture,\
    \ and solar radiation.\nFigure 18 illustrates the consensus results for two parameters:\
    \ soil moisture and air temperature\nin a cluster of ﬁve TelosB sensor nodes.\
    \ These are obtained through simulation in a Contiki/COOJA\nnetwork environment\
    \ starting from ground-collected values. The main insight provided by this\nresult\
    \ is in the analysis of the convergence time and convergence values in conjunction\
    \ with ﬁxed\nor dynamic tuning parameters. More speciﬁcally, by adjusting the\
    \ communication frequency and\nweighting the consensus algorithm based on the\
    \ sensor location and conﬁdence levels, we can guide\nthe algorithm with expert\
    \ knowledge. This can result in acceleration of the process or in more reliable\n\
    consensus values.\nSensors 2020, 20, x FOR PEER REVIEW \n20 of 25 \n \n \n \n\
    (c) \n(d) \nFigure  17.  Temperature  map  in  Zone  2,  before  and  after  consensus: \
    \ (a)  location  of  temperature \nsensors;  (b)  temperature  map  after  10 \
    \ iterations;  (c)  temperature  map  after  20  iterations;  and  (d) \ntemperature map after 30 iterations. \n\
    3.3. Data Processing Results \nAs previously discussed, the primary local distributed agreement is based on consensus among \n\
    the  clustered  sensing  nodes.  This  allows  the  nodes  to  have  a  unitary \
    \ representation  of  the \nmeasurements, under the assumption of limited variance in the geographical sensing area for one \n\
    cluster. The parameters that are sampled by the nodes include: air temperature, relative humidity, \n\
    soil temperature, soil moisture, and solar radiation.   \nFigure 18 illustrates the consensus results for two parameters: soil moisture and air temperature \n\
    in a cluster of five TelosB sensor nodes. These are obtained through simulation in a Contiki/COOJA \n\
    network environment starting from ground‐collected values. The main insight provided by this result \n\
    is  in  the  analysis  of  the  convergence  time  and  convergence  values  in \
    \ conjunction  with  fixed  or \ndynamic  tuning  parameters.  More  specifically, \
    \ by  adjusting  the  communication  frequency  and \nweighting the consensus algorithm based on the sensor location and confidence levels, we can guide \n\
    the algorithm with expert knowledge. This can result in acceleration of the process or in more reliable \n\
    consensus values. \n \n \n(a) \n(b) \nFigure 18. Consensus results for: (a) soil moisture and (b) air temperature. \n\
    Once local agreement has been established, relevant data extraction is performed at the cluster \n\
    head by means of the SAX method. In this case, we present the outcome for running the algorithm \n\
    on a data sample of around 10 days, with the consensus values stored at 30‐min intervals at one \n\
    Figure 18. Consensus results for: (a) soil moisture and (b) air temperature.\n\
    Once local agreement has been established, relevant data extraction is performed\
    \ at the cluster\nhead by means of the SAX method. In this case, we present the\
    \ outcome for running the algorithm on a\nSensors 2020, 20, 817\n21 of 25\ndata\
    \ sample of around 10 days, with the consensus values stored at 30-min intervals\
    \ at one cluster head\n(Table 2). The variations in the SAX string length correspond\
    \ to the parameterization of the method in\nterms of the number of segments to\
    \ divide the input time series into (nseg) and the alphabet size, i.e.,\nthe discrete\
    \ threshold levels numbers for classifying the processed values (alphabet_size).\
    \ The number\nof samples of the input data is 490, for nseg = 20, corresponding\
    \ to half daily patterns this is truncated\nto 480 as the total length of the\
    \ time series must be divisible with the number of segments. Inputs are\nz-normalized\
    \ for the computation of the assigned label. Data were collected in mid-July 2018.\n\
    Table 2. Resulting Symbolic Aggregate Approximation (SAX) strings on consensus\
    \ data.\nSAX Parameters\nSolar Radiation\nAir Temperature\nSoil Temperature\n\
    Relative Humidity\nnseg = 10 alphabet\nsize = 4\nbcccbccccb\nbbcccbcccb\naabdccccdc\n\
    cccbbbbbbc\nnseg = 10 alphabet\nsize = 6\ncdddcddddc\nbcdddcdddc\naaceeddded\n\
    eddcccccce\nnseg = 20 alphabet\nsize = 4\nbbbcbcbcbcbcbdbdbdab\nabacbdbdadadadadbdac\n\
    aaaaaccdcccccccccdcb\ndcdbdacadacadadacadc\nnseg = 20 alphabet\nsize = 6\nbccdcecdbecebebebebc\n\
    bcbebfcfbebeafbfbead\naaabbdeeeededdddeeec\nedebebebeaeaeaeaebed\nThe proposed\
    \ relevant data extraction methods were evaluated from a comparative standpoint\n\
    regarding the ratio between the volume of data and the data relevance. For a set\
    \ of measurements, for\nair temperature monitoring, acquired for 10 days, 502\
    \ data points were validated and stored, totaling\n2.008 kBytes. This raw data\
    \ set was used for three relevant data extraction methods; the results are\npresented\
    \ below.\nFigure 19 illustrates a total of 98 relevant points extracted through\
    \ the Fog computing algorithm\nbased on change detection approach. Considering\
    \ the common size of 4 bytes for ﬂoating point values,\na total of approximately\
    \ 400 bytes needs to be uploaded (excluding the proposed protocol frame).\nFor\
    \ the symbolic aggregation method, two tests were performed, for two parameterizations\
    \ of the\nSAX algorithm at opposite poles. First, Figure 19 illustrates the results\
    \ for SAX algorithm adjusted for\na rough representation of the time series; thus,\
    \ a number of 10 characters is extracted. Considering the\ncommon size of one\
    \ byte for ASCII character representation, a total of 40 bytes needs to be uploaded.\n\
    Secondly, for granular SAX, Figure 19 illustrates a total of 48 points, thus totaling\
    \ of 48 bytes.\n \nalphabet size, i.e., the discrete threshold levels numbers\
    \ for classifying the processed values \n(alphabet_size). The number of samples\
    \ of the input data is 490, for nseg = 20, corresponding to half \ndaily patterns\
    \ this is truncated to 480 as the total length of the time series must be divisible\
    \ with the \nnumber of segments. Inputs are z-normalized for the computation of\
    \ the assigned label. Data were \ncollected in mid-July 2018.  \nTable 2. Resulting\
    \ Symbolic Aggregate Approximation (SAX) strings on consensus data. \nSAX \nParameters\
    \ \nSolar Radiation \nAir Temperature \nSoil Temperature \nRelative Humidity \n\
    nseg = 10 \nalphabet \nsize = 4 \nbcccbccccb \nbbcccbcccb \naabdccccdc \ncccbbbbbbc\
    \ \nnseg = 10 \nalphabet \nsize = 6 \ncdddcddddc \nbcdddcdddc \naaceeddded \n\
    eddcccccce \nnseg = 20 \nalphabet \nsize = 4 \nbbbcbcbcbcbcbdbd\nbdab \nabacbdbdadadada\n\
    dbdac \naaaaaccdccccccccc\ndcb \ndcdbdacadacadada\ncadc \nnseg = 20 \nalphabet\
    \ \nsize = 6 \nbccdcecdbecebebeb\nebc \nbcbebfcfbebeafbfbe\nad \naaabbdeeeededdd\n\
    deeec \nedebebebeaeaeaeae\nbed \n \nThe proposed relevant data extraction methods\
    \ were evaluated from a comparative standpoint \nregarding the ratio between the\
    \ volume of data and the data relevance. For a set of measurements, \nfor air\
    \ temperature monitoring, acquired for 10 days, 502 data points were validated\
    \ and stored, \ntotaling 2.008 kBytes. This raw data set was used for three relevant\
    \ data extraction methods; the \nresults are presented below.  \nFigure 19 illustrates\
    \ a total of 98 relevant points extracted through the Fog computing algorithm\
    \ \nbased on change detection approach. Considering the common size of 4 bytes\
    \ for floating point \nvalues, a total of approximately 400 bytes needs to be\
    \ uploaded (excluding the proposed protocol \nframe).  \nFor the symbolic aggregation\
    \ method, two tests were performed, for two parameterizations of \nthe SAX algorithm\
    \ at opposite poles. First, Figure 19 illustrates the results for SAX algorithm\
    \ adjusted \nfor a rough representation of the time series; thus, a number of\
    \ 10 characters is extracted. Considering \nthe common size of one byte for ASCII\
    \ character representation, a total of 40 bytes needs to be \nuploaded. Secondly,\
    \ for granular SAX, Figure 19 illustrates a total of 48 points, thus totaling\
    \ of 48 \nbytes. \n \n \n(a) \n(b) \nFigure 19. Cont.\nSensors 2020, 20, 817\n\
    22 of 25\nSensors 2020, 20, x FOR PEER REVIEW \n22 of 25 \n \n \n \n(c) \n(d)\
    \ \nFigure 19. Relevant data extraction: (a) change detection method; (b) SAX\
    \ algorithm–Roughly;  \n(c) SAX algorithm–Granular; and (d) comparative representation\
    \ of data sizes achieved using the \nproposed relevant data extraction methods.\
    \ \n4. Discussion \nThe paper represents a significant extension of Reference\
    \ [47] with further details regarding the \nUAV trajectory tracking and implementation\
    \ of the support path planning software interfaces and \nillustrative path planning\
    \ examples. On the data processing and deployment of the ground sensor \nnetwork,\
    \ the results are further elaborated upon with coverage maps, improved consensus,\
    \ and \nrelevant data extraction results. The two-stage data processing methodology\
    \ presented in this paper \nincludes a consensus algorithm for distributed agreement\
    \ for sensor node patches deployed in the \nfield alongside a relevant data extraction\
    \ step based on the consensus results. The first stage is \nintended to ensure\
    \ agreement of all the data collection entities upon the measured parameters,\
    \ as \nwell as to increase data quality by limiting the effect of sending upstream\
    \ erroneous sensor readings. \nThe second stage aims to optimize the data collection\
    \ time at the interface between the cluster head \nand the UAV acting as a data\
    \ mule. Based on the compressed representation of SAX segments, the \nresults\
    \ can be expanded and further processed at the decision level, in the cloud. At\
    \ the higher \nabstract layer in the cloud, the results presented in Table 2 can\
    \ be interpreted using state-of-the-art \ntext analytics tools. This is useful\
    \ for quantitative assessment of univariate sequences, as well as \ncorrelations\
    \ between multivariate string series. The character frequencies and recurring\
    \ \nsubsequences for certain parameters might be indicators for evolving phenomena\
    \ at the ground level. \nPotential drawbacks of the integrated system are related\
    \ to the increased complexity for multi-\nlevel data processing, communication,\
    \ and interoperability constraints between the aerial platform \nand the ground\
    \ sensors. Increased administrative requirements have to be complied with, e.g.,\
    \ \napproving flight plans for each UAV mission, along with maintenance requirements\
    \ that can stem \nfrom outdoor deployment of the nodes. We consider, however,\
    \ that the benefits outweigh the \ndiscussed drawbacks of such a system. \n5.\
    \ Conclusions \nThe paper illustrated a case study for collaborative UAV–WSN operation\
    \ in large scale \nmonitoring for precision agriculture. The algorithms, techniques,\
    \ and tools to enable seamless \ninteroperability between the two domains are\
    \ illustrated. Key contributions are argued in the design \nof optimized trajectories\
    \ for UAV-enabled field data collection and for in-network data processing \n\
    that allows efficient use of limited ground sensor network resources. Particularly,\
    \ we propose \ncombined segment and loiter tracking modes which balance between\
    \ path length and time spent in \nthe neighborhood of a cluster head. By passing\
    \ the raw sensor readings through multiple hierarchical \ndata processing steps,\
    \ the quality of the extracted information is increased, as well as its timeliness,\
    \ \ngiven the fact that reduced communication burden allows lower network-wide\
    \ latency for decision-\n2008\n400\n10\n48\nR A W  D A T A\nC H G .  \nD E T E\
    \ C T I O N\nSA X  \nR OU G H LY\nSA X  \nG R A N U LA R\nFigure 19. Relevant\
    \ data extraction: (a) change detection method; (b) SAX algorithm–Roughly; (c)\
    \ SAX\nalgorithm–Granular; and (d) comparative representation of data sizes achieved\
    \ using the proposed\nrelevant data extraction methods.\n4. Discussion\nThe paper\
    \ represents a signiﬁcant extension of Reference [47] with further details regarding\n\
    the UAV trajectory tracking and implementation of the support path planning software\
    \ interfaces\nand illustrative path planning examples. On the data processing\
    \ and deployment of the ground\nsensor network, the results are further elaborated\
    \ upon with coverage maps, improved consensus,\nand relevant data extraction results.\
    \ The two-stage data processing methodology presented in this\npaper includes\
    \ a consensus algorithm for distributed agreement for sensor node patches deployed\
    \ in\nthe ﬁeld alongside a relevant data extraction step based on the consensus\
    \ results. The ﬁrst stage is\nintended to ensure agreement of all the data collection\
    \ entities upon the measured parameters, as well\nas to increase data quality\
    \ by limiting the eﬀect of sending upstream erroneous sensor readings. The\nsecond\
    \ stage aims to optimize the data collection time at the interface between the\
    \ cluster head and the\nUAV acting as a data mule. Based on the compressed representation\
    \ of SAX segments, the results can\nbe expanded and further processed at the decision\
    \ level, in the cloud. At the higher abstract layer in\nthe cloud, the results\
    \ presented in Table 2 can be interpreted using state-of-the-art text analytics\
    \ tools.\nThis is useful for quantitative assessment of univariate sequences,\
    \ as well as correlations between\nmultivariate string series. The character frequencies\
    \ and recurring subsequences for certain parameters\nmight be indicators for evolving\
    \ phenomena at the ground level.\nPotential drawbacks of the integrated system\
    \ are related to the increased complexity for multi-level\ndata processing, communication,\
    \ and interoperability constraints between the aerial platform and the\nground\
    \ sensors. Increased administrative requirements have to be complied with, e.g.,\
    \ approving\nﬂight plans for each UAV mission, along with maintenance requirements\
    \ that can stem from outdoor\ndeployment of the nodes. We consider, however, that\
    \ the beneﬁts outweigh the discussed drawbacks\nof such a system.\n5. Conclusions\n\
    The paper illustrated a case study for collaborative UAV–WSN operation in large\
    \ scale monitoring\nfor precision agriculture. The algorithms, techniques, and\
    \ tools to enable seamless interoperability\nbetween the two domains are illustrated.\
    \ Key contributions are argued in the design of optimized\ntrajectories for UAV-enabled\
    \ ﬁeld data collection and for in-network data processing that allows\neﬃcient\
    \ use of limited ground sensor network resources. Particularly, we propose combined\
    \ segment\nand loiter tracking modes which balance between path length and time\
    \ spent in the neighborhood of a\ncluster head. By passing the raw sensor readings\
    \ through multiple hierarchical data processing steps,\nSensors 2020, 20, 817\n\
    23 of 25\nthe quality of the extracted information is increased, as well as its\
    \ timeliness, given the fact that reduced\ncommunication burden allows lower network-wide\
    \ latency for decision-making. The role of the UAV\nplatform is critical to support\
    \ large scale monitoring and data collection applications in precision\nagriculture\
    \ as it reduces the reliance of third-party communication and computing infrastructure\
    \ that\nmight not be readily available in the ﬁeld or pose increased costs.\n\
    Extensive ﬁeld evaluation is planned for validation of the impact of such a system\
    \ for crop\nmanagement.\nThe main challenges for such a collaborative system are\
    \ the following: sensing\ncovering, communication covering by the hybrid UAV–ground\
    \ WSN system, energy eﬃciency, and\ncomputing eﬃciency.\nAuthor Contributions:\
    \ D.P. conceived the paper and revealed the collaborative function. F.S. contributed\
    \ to UAV\npath analysis, G.S. studied the data acquisition and processing functions.\
    \ C.D. studied the system applications. L.I.\nselected the references, state of\
    \ the art and edited the paper. All authors have read and agreed to the published\n\
    version of the manuscript.\nFunding: This research awas funding by University\
    \ POLITEHNICA of Bucharest.\nAcknowledgments: The work was supported by the project\
    \ MUWI (Integrated intelligent monitoring system,\nUAV–WSN–IoT, for precision\
    \ agriculture), 1224/2018, subsidiary NETIO.\nConﬂicts of Interest: The authors\
    \ declare no conﬂict of interest.\nReferences\n1.\nWolfert, S.; Ge, L.; Verdouw,\
    \ C.; Bogaardt, M.-J. Big Data in smart farming—A review. Agric. Syst. 2017, 153,\n\
    69–80. [CrossRef]\n2.\nPiotrowski, K.; Sojka-Piotrowska, A.; Stamenkovic, Z.;\
    \ Kraemer, R. IHPNode platform as a base for precision\nfarming and remote diagnosis\
    \ in agriculture. In Proceedings of the 24th Telecommunications forum TELFOR,\n\
    Serbia, Belgrade, 22–23 November 2016; pp. 1–5.\n3.\nValente, J.; Sanz, D.; Barrientos,\
    \ A.; Cerro, J.D.; Ribeiro, A.; Rossi, C. An air-ground wireless sensor network\n\
    for crop monitoring. Sensors 2011, 11, 6088–6108. [CrossRef]\n4.\nDi Gennaro,\
    \ S.F.; Matesea, A.; Gioli, B.; Toscano, P.; Zaldei, A.; Palliotti, A.; Genesio,\
    \ L. Multisensor approach\nto assess vineyard thermal dynamics combining high\
    \ resolution Unmanned Aerial Vehicle (UAV) remote\nsensing and wireless sensor\
    \ network (WSN) proximal sensing. Sci. Hortic. 2017, 221, 83–87. [CrossRef]\n\
    5.\nPolo, J.; Hornero, G.; Duijneveld, C.; García, A.; Casas, O. Design of a low-cost\
    \ Wireless Sensor Network\nwith UAV mobile node for agricultural applications.\
    \ Comput. Electron. Agric. 2015, 119, 19–32. [CrossRef]\n6.\nPrimicerio, J.; Matese,\
    \ A.; Gennaro, S.D.; Albanese, L.; Guidoni, S.; Gay, P. Development of an integrated,\n\
    low-cost and opensource system for precision viticulture: From UAV to WSN. In\
    \ Proceedings of the\nEFITA-WCCA-CIGR Conference Sustainable Agriculture through\
    \ ICT Innovation, Torino, Italy, 23–27 June\n2013; pp. 1–6.\n7.\nDrones—Regulatory\
    \ Framework Background/EASA. Available online: http://www.easa.europa.eu (accessed\n\
    on 1 December 2019).\n8.\nFAA Reauthorization Act of 2018/Subtitle B—Unmanned\
    \ Aircraft Systems. Available online: https://www.\nfaa.gov (accessed on 1 December\
    \ 2019).\n9.\nBarbedo, J.G.A. A review on the use of Unmanned Aerial Vehicles\
    \ and imaging sensors for monitoring and\nassessing plant stresses. Drones 2019,\
    \ 3, 40. [CrossRef]\n10.\nShaﬁ, U.; Mumtaz, R.; García-Nieto, J.; Hassan, S.A.;\
    \ Zaidi, S.A.R.; Iqbal, N. Precision agriculture techniques\nand practices: From\
    \ considerations to applications. Sensors 2019, 19, 3796. [CrossRef]\n11.\nPopescu,\
    \ D.; Ichim, L.; Stoican, F. Unmanned Aerial Vehicle Systems for remote estimation\
    \ of ﬂooded areas\nbased on complex image processing. Sensors 2017, 17, 446. [CrossRef]\n\
    12.\nXu, Y.; Xiao, L.; Yang, D.; Cuthbert, L.; Wang, Y. Energy-eﬃcient UAV communication\
    \ with multiple GTs\nbased on trajectory optimization. Mob. Inf. Syst. 2018, 2018,\
    \ 5629573. [CrossRef]\n13.\nSylvester, G. E-Agriculture in Action: Drones for\
    \ Agriculture; Food and Agriculture Organization of the\nUnited Nations and International\
    \ Telecommunication Union: Bangkok, Thailand, 2018; Available online:\nhttp://www.fao.org/documents/card/en/c/I8494EN/\
    \ (accessed on 1 December 2019).\nSensors 2020, 20, 817\n24 of 25\n14.\nMatese,\
    \ A.; Di Gennaro, S.F. Practical applications of a multisensor UAV platform based\
    \ on multispectral,\nthermal and RGB high resolution images in precision viticulture.\
    \ Agriculture 2018, 8, 116. [CrossRef]\n15.\nBallesteros, R.; Ortega, J.F.; Hernandez,\
    \ D.; Moreno, M.A. Onion biomass monitoring using UAV-based RGB\nimaging. Precis.\
    \ Agric. 2018, 19, 840–857. [CrossRef]\n16.\nKarydas, C.; Gewehr, S.; Iatrou,\
    \ M.; Iatrou, G.; Mourelatos, S. Olive plantation mapping on a sub-tree scale\n\
    with object-based image analysis of multispectral UAV data; Operational potential\
    \ in tree stress monitoring.\nJ. Imaging 2017, 3, 57. [CrossRef]\n17.\nJohansen,\
    \ K.; Raharjo, T.; McCabe, M.F. Using multi-spectral UAV imagery to extract tree\
    \ crop structural\nproperties and assess pruning eﬀects. Remote Sens. 2018, 10,\
    \ 854. [CrossRef]\n18.\nGómez-Candón, D.; Torres-Sanchez, J.; Labbé, S.; Jolivot,\
    \ A.; Martinez, S.; Regnard, J. Water stress assessment\nat tree scale: High-resolution\
    \ thermal UAV imagery acquisition and processing. Acta Hortic. 2017, 1150,\n159–166.\
    \ [CrossRef]\n19.\nRibeiro-Gomes, K.; Hernandez-Lopez, D.; Ortega, J.F.; Ballesteros,\
    \ R.; Poblete, T.; Moreno, M.A. Uncooled\nthermal camera calibration and optimization\
    \ of the photogrammetry process for UAV applications in\nagriculture. Sensors\
    \ 2017, 17, 2173. [CrossRef] [PubMed]\n20.\nTetila, E.C.; Machado, B.B.; Belete,\
    \ N.A.S.; Guimarães, D.A.; Pistori, H. Identiﬁcation of Soybean foliar\ndiseases\
    \ using Unmanned Aerial Vehicle images. IEEE Geosci. Remote Sens. Lett. 2017,\
    \ 14, 2190–2194.\n[CrossRef]\n21.\nStamenkovi´c, Z.; Randji´c, S.; Santamaria,\
    \ I.; Pešovi´c, U.; Pani´c, G.; Tanaskovi´c, S. Advanced Wireless Sensor\nNodes\
    \ and networks for agricultural applications. In Proceedings of the 24th Telecommunications\
    \ Forum\n(TELFOR), Belgrade, Serbia, 22–23 November 2016; pp. 1–8.\n22.\nPopescu,\
    \ D.; Stoican, F.; Stamatescu, G.; Chenaru, O.; Ichim, L. A survey of collaborative\
    \ UAV-WSN systems\nfor eﬃcient monitoring. Sensors 2019, 19, 4690. [CrossRef]\n\
    23.\nMoreno-Moreno, C.D.; Brox-Jiménez, M.; Gersnoviez-Milla, A.A.; Márquez-Moyano,\
    \ M.; Ortiz-López, M.A.;\nQuiles-Latorre, F.J. Wireless Sensor Network for sustainable\
    \ agriculture. Proceedings 2018, 2, 1302. [CrossRef]\n24.\nHusemann, C.; Novkovi´c,\
    \ N. Farm management information systems:\nA case study on a german\nmultifunctional\
    \ farm. Econ. Agric. 2014, 2, 1–13. [CrossRef]\n25.\nKöksal, Ö.; Tekinerdogan,\
    \ B. Architecture design approach for IoT-based farm management information\n\
    systems. Precis. Agric. 2019, 20, 926–958. [CrossRef]\n26.\nKumar, A.; Ilango,\
    \ P. The impact of Wireless Sensor Network in the ﬁeld of precision agriculture:\
    \ A review.\nWirel. Pers. Commun. 2017, 98, 685–698. [CrossRef]\n27.\nKeshtgary,\
    \ M.; Deljoo, A. An eﬃcient wireless sensor network for precision agriculture.\
    \ Can. J. Multimed.\nWirel. Netw. 2012, 3, 1–6.\n28.\nNikolidakis, S.A.; Kandris,\
    \ D.; Vergados, D.D.; Douligeris, C. Energy eﬃcient automated control of irrigation\n\
    in agriculture by using wireless sensor networks. Comput. Electron. Agric. 2015,\
    \ 113, 154–163. [CrossRef]\n29.\nYousif, M.E.R.; Ghafar, K.; Zahari, R.; Lim,\
    \ T.H. A rule-based smart automated fertilization and irrigation\nsystems. In\
    \ Proceedings of the Ninth International Conference on Graphic and Image Processing\
    \ (ICGIP\n2017), Qingdao, China, 14–16 October 2017.\n30.\nPopescu, D.; Dragana,\
    \ C.; Stoican, F.; Ichim, L.; Stamatescu, G. A collaborative UAV–WSN network for\n\
    monitoring large areas. Sensors 2018, 18, 4202. [CrossRef] [PubMed]\n31.\nVasisht,\
    \ D.; Kapetanovic, Z.; Won, J.; Jin, X.; Chandra, R.; Kapoor, A.; Sinha, S.N.;\
    \ Sudarshan, M.; Stratman, S.\nFarmbeats: An IoT platform for data-driven agriculture.\
    \ In Proceedings of the 14th USENIX Conference on\nNetworked Systems Design and\
    \ Implementation (NSDI), Boston, MA, USA, 27–29 March 2017; pp. 515–528.\n32.\n\
    Lysenko, V.; Opryshko, O.; Komarchuk, D.; Pasichnyk, N.; Zaets, N.; Dudnyk, A.\
    \ Information support of the\nremote nitrogen monitoring system in agricultural\
    \ crops. Int. J. Comput. 2018, 17, 47–54.\n33.\nStamatescu, G.; Stamatescu, I.;\
    \ Drăgana, C.; Popescu, D. Large scale heterogeneous monitoring system\nwith decentralized\
    \ sensor fusion. In Proceedings of the IEEE 8th International Conf. on Intelligent\
    \ Data\nAcquisition and Advanced Computing Systems (IDAACS), Warsaw, Poland, 24–26\
    \ September 2015; pp. 2–5.\n34.\nDragana, C.; Stamatescu, G.; Mihai, V.; Popescu,\
    \ D. Evaluation of cluster formation algorithm in large scale\nwireless sensor\
    \ network. In Proceedings of the 9th IEEE Intl Conf on Intelligent Data Acquisition\
    \ and\nAdvanced Computing Systems (IDAACS), Bucharest, Romania, 21–23 September\
    \ 2017; pp. 859–863.\n35.\nAnawar, M.R.; Wang, S.; Azam Zia, M.; Jadoon, A.K.;\
    \ Akram, U.; Raza, S. Fog computing: An overview of\nbig IoT data analytics. Wirel.\
    \ Commun. Mob. Comput. 2018, 2018, 1–22. [CrossRef]\nSensors 2020, 20, 817\n25\
    \ of 25\n36.\nYang, Q.; Yoo, S. Optimal UAV path planning: Sensing data acquisition\
    \ over IoT sensor networks using\nmulti-objective bio-inspired algorithms. IEEE\
    \ Access 2018, 6, 13671–13684. [CrossRef]\n37.\nGoudarzi, S.; Kama, N.; Anisi,\
    \ M.H.; Zeadally, S.; Mumtaz, S. Data collection using Unmanned Aerial\nVehicles\
    \ for Internet of Things platforms. Comput. Electr. Eng. 2019, 75, 1–15. [CrossRef]\n\
    38.\nZhan, C.; Zeng, Y.; Zhang, R. Energy-eﬃcient data collection in UAV enabled\
    \ Wireless Sensor Network.\nIEEE Wirel. Commun. Lett. 2018, 7, 328–331. [CrossRef]\n\
    39.\nStoican, F.; Prodan, I.; Popescu, D. Flat trajectory generation for way-points\
    \ relaxations and obstacle avoidance.\nIn Proceedings of the 23rd Mediterranean\
    \ Conference on Control and Automation (MED), Torremolinos,\nSpain, 16–19 June\
    \ 2015; pp. 695–700.\n40.\nSager, S. Numerical Methods for Mixed-Integer Optimal\
    \ Control Problems. Ph.D. Thesis, Universitat\nHeidelberg, Der andere Verlag Tonning,\
    \ Germany, 2005.\n41.\nLiu, B.; Zhu, H. Energy-eﬀective data gathering for UAV-aided\
    \ Wireless Sensor Networks. Sensors 2019, 19,\n2506. [CrossRef]\n42.\nSantamaria,\
    \ A.F.; Raimondo, P.; Tropea, M.; De Rango, F.; Aiello, C. An IoT surveillance\
    \ system based on a\ndecentralised architecture. Sensors 2019, 19, 1469. [CrossRef]\n\
    43.\nAlighanbari, M.; Kuwata, Y.; How, J. Coordination and control of multiple\
    \ UAVs with timing constraints\nand loitering. In Proceedings of the American\
    \ Control Conference, Denver, CO, USA, 4–6 June 2003;\npp. 5311–5316.\n44.\nBlanchini,\
    \ F.;\nMiani, S. Set-Theoretic Methods in Control;\nSpringer:\nCham,\nSwitzerland,\n\
    2008;\nISBN 978-0-8176-3255-7.\n45.\nLin, J.; Keogh, E.; Wei, L.; Lonardi, S.\
    \ Experiencing SAX: A novel symbolic representation of time series. Data\nMin.\
    \ Knowl. Discov. 2007, 15, 107–144. [CrossRef]\n46.\nNMEA Generator. Available\
    \ online: https://nmeagen.org (accessed on 1 September 2019).\n47.\nPopescu, D.;\
    \ Stoican, F.; Ichim, L.; Stamatescu, G.; Dragana, C. Collaborative UAV-WSN system\
    \ for data\nacquisition and processing in agriculture. In Proceedings of the 10th\
    \ IEEE International Conference on\nIntelligent Data Acquisition and Advanced\
    \ Computing Systems: Technology and Applications (IDAACS),\nMetz, France, 18–21\
    \ September 2019; pp. 519–524.\n© 2020 by the authors. Licensee MDPI, Basel, Switzerland.\
    \ This article is an open access\narticle distributed under the terms and conditions\
    \ of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/20/3/817/pdf?version=1580969957
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: Advanced UAV–WSN System for Intelligent Monitoring in Precision Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icfec.2017.8
  analysis: '>'
  authors:
  - Antonio Brogi
  - Stefano Forti
  - Ahmad Ibrahim
  citation_count: 83
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Conferences >2017 IEEE 1st International
    C... How to Best Deploy Your Fog Applications, Probably Publisher: IEEE Cite This
    PDF Antonio Brogi; Stefano Forti; Ahmad Ibrahim All Authors 78 Cites in Papers
    609 Full Text Views Abstract Authors Citations Keywords Metrics Abstract: Deploying
    composite applications to Fog nodes in a QoS-and context-aware manner is challenging
    due to the heterogeneity and scale of Fog infrastructures. Application components
    must be provided with the software and hardware capabilities they need. Communication
    links that support interactions between components must meet certain QoS (latency
    and bandwidth). On the other hand, different Fog and Cloud nodes provide different
    software and hardware capabilities, and actual communication links support different
    QoS over time. In this paper we present a prototype (FogTorchII) capable of determining
    deployments of composite applications to Fog infrastructures, which fulfil software,
    hardware and QoS requirements. FogTorchII exploits Monte Carlo simulations to
    take into account possible variations of the QoS of communication links. It classifies
    eligible deployments both in terms of QoS-assurance and of Fog resource consumption.
    We illustrate the utility of FogTorchII over a motivating example where we compare
    different possible deployments for a smart agriculture application. Published
    in: 2017 IEEE 1st International Conference on Fog and Edge Computing (ICFEC) Date
    of Conference: 14-15 May 2017 Date Added to IEEE Xplore: 24 August 2017 ISBN Information:
    DOI: 10.1109/ICFEC.2017.8 Publisher: IEEE Conference Location: Madrid, Spain Authors
    Citations Keywords Metrics More Like This Bandwidth Efficient Collaborative Quality
    of Service Routing for Real-Time Flow in Wireless Multimedia Sensor Networks 2010
    IEEE Asia-Pacific Services Computing Conference Published: 2010 Secure Network
    Bandwidth Provisioning for Quality of Services (QoS) Guarantees 2015 IEEE 12th
    Intl Conf on Ubiquitous Intelligence and Computing and 2015 IEEE 12th Intl Conf
    on Autonomic and Trusted Computing and 2015 IEEE 15th Intl Conf on Scalable Computing
    and Communications and Its Associated Workshops (UIC-ATC-ScalCom) Published: 2015
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: How to Best Deploy Your Fog Applications, Probably
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
