- DOI: https://doi.org/10.3390/su9030353
  analysis: '>'
  authors:
  - Olutobi Adeyemi
  - Ivan G. Grove
  - Sven Peets
  - Tomás Norton
  citation_count: 119
  full_citation: '>'
  full_text: ">\nsustainability\nReview\nAdvanced Monitoring and Management Systems\
    \ for\nImproving Sustainability in Precision Irrigation\nOlutobi Adeyemi 1, Ivan\
    \ Grove 1, Sven Peets 1 and Tomas Norton 1,2,*\n1\nEngineering Department, Harper\
    \ Adams University, Newport, Shropshire TF10 7BP, UK;\noadeyemi@harper-adams.ac.uk\
    \ (O.A.); igrove@harper-adams.ac.uk (I.G.); speets@harper-adams.ac.uk (S.P.)\n\
    2\nM3-BIORES research group, Division of Animal and Human Health Engineering,\
    \ Department of Biosystems,\nKatholieke Universiteit L, Kasteelpark Arenberg 30,\
    \ 3001 Leuven, Belgium\n*\nCorrespondence: tnorton@harper-adams.ac.uk or tomas.norton@kuleuven.be;\n\
    Tel.: +44-1952-815-375 or +32-1637-7531\nAcademic Editors: Spyros Fountas and\
    \ Konstantinos G. Arvanitis\nReceived: 21 November 2016; Accepted: 15 February\
    \ 2017; Published: 28 February 2017\nAbstract: Globally, the irrigation of crops\
    \ is the largest consumptive user of fresh water. Water scarcity\nis increasing\
    \ worldwide, resulting in tighter regulation of its use for agriculture. This\
    \ necessitates the\ndevelopment of irrigation practices that are more efﬁcient\
    \ in the use of water but do not compromise\ncrop quality and yield. Precision\
    \ irrigation already achieves this goal, in part. The goal of precision\nirrigation\
    \ is to accurately supply the crop water need in a timely manner and as spatially\
    \ uniformly\nas possible. However, to maximize the beneﬁts of precision irrigation,\
    \ additional technologies need\nto be enabled and incorporated into agriculture.\
    \ This paper discusses how incorporating adaptive\ndecision support systems into\
    \ precision irrigation management will enable signiﬁcant advances in\nincreasing\
    \ the efﬁciency of current irrigation approaches. From the literature review,\
    \ it is found that\nprecision irrigation can be applied in achieving the environmental\
    \ goals related to sustainability.\nThe demonstrated economic beneﬁts of precision\
    \ irrigation in ﬁeld-scale crop production is however\nminimal. It is argued that\
    \ a proper combination of soil, plant and weather sensors providing\nreal-time\
    \ data to an adaptive decision support system provides an innovative platform\
    \ for improving\nsustainability in irrigated agriculture. The review also shows\
    \ that adaptive decision support systems\nbased on model predictive control are\
    \ able to adequately account for the time-varying nature of the\nsoil–plant–atmosphere\
    \ system while considering operational limitations and agronomic objectives\n\
    in arriving at optimal irrigation decisions. It is concluded that signiﬁcant improvements\
    \ in crop\nyield and water savings can be achieved by incorporating model predictive\
    \ control into precision\nirrigation decision support tools. Further improvements\
    \ in water savings can also be realized by\nincluding deﬁcit irrigation as part\
    \ of the overall irrigation management strategy. Nevertheless, future\nresearch\
    \ is needed for identifying crop response to regulated water deﬁcits, developing\
    \ improved\nsoil moisture and plant sensors, and developing self-learning crop\
    \ simulation frameworks that can\nbe applied to evaluate adaptive decision support\
    \ strategies related to irrigation.\nKeywords: precision irrigation; adaptive\
    \ decision support systems; model predictive control;\ncrop yield; water savings;\
    \ sustainability\n1. Introduction\nGlobally, 70% of water use is applied in irrigation\
    \ of crops, making irrigation the largest\nconsumptive user of fresh water [1].\
    \ Over 80% of freshwater withdrawals in developing countries is\napplied in irrigation\
    \ [2]. Irrigated agriculture provides 40% of the world’s food from less than 20%\
    \ of\nthe cultivated area highlighting the importance of irrigation in global\
    \ food security [3].\nSustainability 2017, 9, 353; doi:10.3390/su9030353\nwww.mdpi.com/journal/sustainability\n\
    Sustainability 2017, 9, 353\n2 of 29\nIrrigated crop production globally extends\
    \ over 275 million hectares, with an estimated annual\nincrease of 1.3% [2]. Global\
    \ climate change may further increase irrigation water demand due to a\ngreater\
    \ variation in annual precipitation amounts [4]. Postel [5] suggested that irrigation\
    \ will provide\n46% of the global crop water requirement by 2025, which was computed\
    \ as 28% in 1995, resulting in a\ndecline of rain-fed agriculture. Food production\
    \ in the developing world, notably in South, Southeast\nand East Asia, is at present\
    \ heavily reliant on irrigation. The total irrigated area in Asia is 230 million\
    \ ha,\nwhich represents over 70% of the global irrigated area. Of the 230 million\
    \ ha of irrigated land area, 60%\nis located in China and India [3]. It is estimated\
    \ that 75% of the grain production in China is dependent\non irrigation [2]. Sarma\
    \ [6] noted that India uses as much as four times more water to produce one\n\
    unit of a major food crop as compared to the USA and Europe. This implies that\
    \ an improvement\nin water use efﬁciency in the developing world would conserve\
    \ at least half of the water presently\napplied in irrigation.\nIt is estimated\
    \ that a water volume of 2630 km3 is abstracted yearly from surface and ground\n\
    water sources for irrigated crop production. The absence of surface water sources\
    \ in a number of\ncommunities has further increased the pressure on groundwater\
    \ resources. This has resulted in the\nover-abstraction of global groundwater\
    \ sources which is calculated to be as much as 163 km3 per\nannum [2]. A global\
    \ shortage in freshwater sources is predicted unless action is taken to improve\
    \ water\nmanagement and increase water use efﬁciency. This has necessitated greater\
    \ regulatory demands for\nenvironmental protection of freshwater [7]. It is reported\
    \ that only half of the total freshwater volume\nabstracted for irrigation globally\
    \ reaches the targeted crops [2]. These have brought about the need to\ndevise\
    \ procedures to use the limited water more efﬁciently while maximizing crop yield\
    \ and quality.\nConventional irrigation practice involves applying water uniformly\
    \ over every part of the ﬁeld\nwithout taking into account the spatial variability\
    \ in soil and crop water needs; this consequently leads\nto overirrigation in\
    \ some parts of the ﬁeld while other parts of the ﬁeld are underirrigated [8].\
    \ The risks\nassociated with overirrigation include surface runoff, deep percolation\
    \ and leaching of nitrates and\nnutrients. Those associated with underirrigation\
    \ are more subjective and include reduction in crop\nyields and quality, as well\
    \ as inefﬁcient use of fertilizer and other supplemental inputs for crop\nproduction\
    \ [9].\nThe irrigation process requires a high level of ‘precision’ in order to\
    \ optimize the water input\nand crop response, while minimizing adverse environmental\
    \ impacts. Precision irrigation is an\nevolving ﬁeld with active interest by both\
    \ industry and academic researchers. It is conceptualized by\nsome researchers\
    \ as the use of efﬁcient irrigation application systems, whereas others view it\
    \ as the\nvariable application of irrigation based on predeﬁned maps or sensor\
    \ feedback [10]. Smith et al. [11]\nsuggested that ‘precision’ involves the accurate\
    \ determination, quantiﬁcation of crop water needs and\nthe precise application\
    \ of the optimal water volume at the required time. This implies that varying\n\
    water application spatially is not the sole requirement for the achievement of\
    \ ‘precision’ in the irrigation\nprocess. Hence, precision irrigation can be deﬁned\
    \ as the process of accounting for the ﬁeld-scale\nspatial variability in crop\
    \ water need and applying the right amount of water to match the spatial crop\n\
    water need at the right time [9]. The advantages associated with precision irrigation\
    \ include increased\ncrop yields, improved crop quality, improved water use efﬁciency/savings,\
    \ reduction of energy costs\nand reduction of adverse environmental impacts [12].\
    \ Pierce [13] viewed precision irrigation as a\ntool for improving sustainability\
    \ in irrigated agriculture in terms of improved irrigation water use\nefﬁciency\
    \ and improved environmental quality of irrigated ﬁelds.\nThe balance of several\
    \ core aspects is however important for the successful implementation of\na robust\
    \ precision irrigation system. Implementing a precision irrigation system involves\
    \ efforts on\nreal-time monitoring of crop and soil conditions, scheduling irrigation\
    \ and control of the irrigation\napplication equipment. Research has been mainly\
    \ focused on the sensing and control aspects of\nprecision irrigation with much\
    \ advancements in the last decade [12]. Research is limited, however,\nin the\
    \ development of appropriate irrigation scheduling tools for the precision irrigation\
    \ process [14].\nIrrigation scheduling is the process by which a producer determines\
    \ when to apply irrigation and\nSustainability 2017, 9, 353\n3 of 29\nthe amount\
    \ of irrigation water to apply [15]. Hornbuckle et al. [16] suggested that the\
    \ irrigation\nscheduling endeavour should be treated as an all-encompassing decision\
    \ support system for irrigation\nmanagement. A robust decision support system\
    \ is important in the successful implementation of\nprecision irrigation. The\
    \ need for a decision support system capable of real-time management decisions\n\
    of when, where and how much to irrigate while also considering uncertainty in\
    \ climatic inputs,\nthe time-varying nature of cropping systems, as well as equipment\
    \ and operational limitations cannot\nbe overemphasized. Rhodig and Hillyer [17]\
    \ noted that the development of an optimal decision support\ntool for precision\
    \ irrigation will involve the combination of appropriate modeling and management\n\
    tools. The decision support tools available for precision irrigation management\
    \ are presently inﬂexible\nand difﬁcult to adapt to varying cropping scenarios\
    \ [18].\nIn recent years, there has been a number of in-depth reviews on precision\
    \ irrigation (e.g., [9,16]),\nand our intention is not to repeat the areas they\
    \ addressed. Rather, our aim is to provide an in-depth\ntechnical analysis of\
    \ the considerations necessary for the development of a practical and robust decision\n\
    support system for precision irrigation in order to improve sustainable irrigated\
    \ agriculture. To that\nend, the review will focus on the following critical aspects\
    \ of precision irrigation: (1) monitoring\nconsiderations; (2) present limitations\
    \ and state of the art in decision support; and (3) opportunities for\nimproving\
    \ sustainability. We will however include brief sections on the concept of spatial\
    \ variability\nand the control of water application in precision irrigation.\n\
    2. Spatial Variability: The Long-Term Challenge of Irrigated Agriculture\nThe\
    \ underlying argument for precision irrigation is the presence of within-ﬁeld\
    \ spatial variability\nthat inﬂuences crop water demand. The spatial variability\
    \ in crop water demand may have a direct\ninﬂuence on the crop yield, quality\
    \ and the environmental quality of irrigated ﬁelds [19]. The soil water\npresents\
    \ the sole source of water available for direct plant uptake and therefore its\
    \ spatial variability\nwill have a direct inﬂuence on crop water demand. Soil\
    \ and landscape characteristics like soil texture,\ntopography, abiotic and management\
    \ factors (e.g., compaction, tillage) and hydraulic properties vary\nspatially\
    \ across a ﬁeld [11]. These have a direct inﬂuence on the water-holding capacity\
    \ of the soil.\nHedley and Yule [20] reported that the spatial variation in the\
    \ soil water retention characteristics was\nstrongly correlated with the spatial\
    \ variation in soil texture across a ﬁeld, noting that areas with heavier\nsoils\
    \ within a ﬁeld had a larger water-holding capacity in comparison to those with\
    \ light textured\nsoils. The advent of rapid non-invasive technologies for mapping\
    \ soil properties, speciﬁcally electrical\nconductivity mapping, can reveal within-ﬁeld\
    \ variability that can guide in variable rate irrigation\nmanagement. These have\
    \ been successfully applied by Hedley and Yule [21] and Daccache et al. [8].\n\
    Readers are directed to [22,23] for a comprehensive overview of electrical conductivity\
    \ mapping.\nThe variability in yield across a ﬁeld has also been found to be strongly\
    \ correlated with the spatial\nvariability in water available for crop use. The\
    \ spatial variability in crop yield is a function of the\ninterplay between water\
    \ stress, nutrients, in addition to soil’s physical and chemical properties [24].\n\
    The yield map can be correlated with the soil electrical conductivity (EC) map.\
    \ These similarities can be\nexplained through the spatial variability of soil\
    \ properties that exists across a ﬁeld. The water-holding\ncapacity of the soil\
    \ is a major factor affecting yield, and the yield map will likely show a strong\n\
    correlation to soil EC [25]. Irmak et al. [26] noted that the spatial variability\
    \ in soil water retention\ncharacteristics played a dominant role in explaining\
    \ the spatial yield variability observed in soybean.\nMartinez-Casasnovas et al.\
    \ [27] suggested yield mapping as an important tool in variable rate\nirrigation\
    \ management.\nA robust precision irrigation system will be able to meet the spatially\
    \ varying crop water demand\nacross a ﬁeld at the right time. This requires accurate\
    \ knowledge of the within-ﬁeld variability. This\nis addressed by applying the\
    \ concept of irrigation management zones/units in precision irrigation.\nThe irrigation\
    \ management zones are a group of homogeneous units with similar soil water retention\n\
    characteristics [21]. It is however important that these management zones are\
    \ large enough to be\nmanaged individually while remaining relatively homogeneous\
    \ in order to reﬂect the spatial soil\nSustainability 2017, 9, 353\n4 of 29\n\
    variation across the units. The delineation of irrigation management zones based\
    \ on real-time sensor\ndata has also been demonstrated. This is achieved by applying\
    \ infrared thermometry/thermography\nto assess the spatial variation in crop canopy\
    \ temperature across a ﬁeld [28]. The crop canopy\ntemperature of a healthy transpiring\
    \ crop will often be less than that of the ambient air. When crop\ntranspiration\
    \ is reduced as a result of water deﬁcits, the crop canopy temperature is expected\
    \ to increase.\nThe characterization of crop water status as a function of the\
    \ canopy and ambient temperature is the\nbasis for using infrared thermometry/thermography\
    \ as a mapping tool for precision irrigation [29].\nShaughnessy et al. [30] and\
    \ Evett et al. [31] have successfully applied this procedure in generating\ndynamic\
    \ maps to guide variable rate water application for ﬁeld crops grown under a center\
    \ pivot\nsystem. It should, however, be noted that infrared temperature measurements\
    \ are usually taken over\na short period, mostly at midday when the crop is expected\
    \ to experience the highest evaporative\ndemand. Hence, this method is well suited\
    \ for crop production systems in which the soil moisture\ndynamics has relatively\
    \ long time constants.\n3. Spatial Scales of Irrigation Management\nCentre pivot,\
    \ lateral move and low energy precision application (LEPA) moving machines can\
    \ be\nmodiﬁed to apply spatially variable irrigation [32]. These systems are particularly\
    \ suited to variable\nrate water application because of their current level of\
    \ automation and large coverage area with\na single lateral pipe. Fixed irrigation\
    \ systems also have potential to be deployed for variable rate\nwater application\
    \ as they can be very accurate and can be automated based on sensor feedback [2].\n\
    Implementing a spatially varied irrigation system requires an understanding of\
    \ the characteristics of\nthe irrigation application system deployed including\
    \ the spatial scales covered by the water application\nequipment. The spatial\
    \ scale associated with the variability in crop water requirements and its impact\n\
    on yield should also be identiﬁed [32].\nO’Shaughnessy et al. [33] suggested that\
    \ the size and numbers of irrigation management zones\nthat can be controlled\
    \ in a precision irrigation strategy will determine the overall ﬂexibility of\
    \ the\nsystem. For moving application systems, the width of the management zone\
    \ is dependent on the\nnumber of drops or nozzles within an individually controlled\
    \ set (i.e., sprinklers controlled by a single\nsolenoid valve) and the length\
    \ will be dependent on the pattern of variability in the direction of the\ntraveling\
    \ sprinkler. The wind speed and the overlap from the wetted sprinkler patterns\
    \ between\nmanagement zones will also affect the accuracy of the water volume\
    \ applied. Raine and McCarthy [32]\nnoted that the spray diameter and overlap\
    \ achieved by moving application systems make it impossible\nto target water applications\
    \ on a single crop basis using these systems. Hedley et al. [2] suggested that\n\
    the economic beneﬁts of spatially varied irrigation should be an important consideration\
    \ even when\nthe system is considered achievable from a technical standpoint.\
    \ The spatial scales associated with\nmoving and ﬁxed irrigation systems is presented\
    \ in Table 1. Smith et al. [11] concluded that the spatial\nresolution of a precision\
    \ irrigation system will be inﬂuenced by the spatial scales associated with the\n\
    application system, spatial resolution of the inﬁeld sensors and the spatial scales\
    \ associated with the\nvariability in crop water requirements.\nTable 1. Spatial\
    \ scales of ﬁxed and moving irrigation systems.\nSystem\nSpatial Unit\nOrder of\
    \ Magnitude of Spatial Scale (m2)\nSprinkler–solid set\nWetted area of single\
    \ sprinkler\n100\nCentre pivot, lateral move\nWetted area of single sprinkler\n\
    100\nLEPA-bubbler\nFurrow dyke\n1\nTraveling irrigator\nWetted area of sprinkler\n\
    5000\nDrip\nWetted area of an emitter\n1 to 10\nMicro-spray\nWetted area of single\
    \ spray\n20\nLEPA: low energy precision application. Source: Raine and McCarthy\
    \ [32].\nSustainability 2017, 9, 353\n5 of 29\n4. Control of Water Application\
    \ in Precision Irrigation\nThe water application system used in the precision\
    \ irrigation process must be able to control the\nwater application volume applied\
    \ per unit time to each deﬁned irrigation management unit within a\nﬁeld [13].\
    \ The development of variable rate water application systems has been mostly focused\
    \ on\ncontinuous move systems [11].\nThe control of water application on continuous\
    \ move systems (centre pivot, linear move, boom\nand reel) is based on databases\
    \ of spatially referenced data deﬁning irrigation management units [20].\nThe\
    \ volume of water applied to each management unit can be achieved by varying the\
    \ application rate\nof sprinklers or controlling the ground speed of continuous\
    \ move systems [13].\nThe application rate of sprinklers is mostly varied through\
    \ the pulse modulation of the sprinkler\nnozzles. This involves the application\
    \ of normally opened solenoid valves to control ﬂow through\nan individual or\
    \ group of sprinkler heads. The solenoid turns the ﬂow of water either on or off\
    \ at\na sprinkler location in order to achieve a desired application depth within\
    \ a speciﬁed cycle time.\nThe cycle time is the total number of switching (either\
    \ to on or off phase) required by the solenoid\nvalves during a pulse cycle [34].\
    \ Evans et al. [34] applied the pulse modulated sprinkler control\non a linear\
    \ move sprinkler system. Daccache et al. [8] also applied a pulsed modulated sprinkler\n\
    control on a boom and reel irrigation system. Field evaluation of both systems\
    \ indicated a satisfactory\nperformance over a range of water application rates.\
    \ They however noted a problem with sprinkler\noverlap at the edge of the irrigation\
    \ management units.\nThe variation in irrigation volume applied by a continuous\
    \ move system can also be achieved by\nvarying its travel speed. The sprinklers\
    \ on the manifold of the irrigation system are usually operated\nat a speciﬁed\
    \ ﬂow rate and pressure. An increase in travel speed of the system reduces the\
    \ application\ndepth and a decrease in the travel speed increases the application\
    \ depth [35]. This type of system\ncannot be applied in situations where variable\
    \ application depths are needed along the length of the\nirrigation system [34].\
    \ Al-Karadsheh [9] evaluated the performance of speed control in achieving\nvariable\
    \ water application rate on a linear move system. The wetted diameter of the sprinklers\
    \ was\nreported to be between 15.2 and 21.3 m. He reported that the system needed\
    \ to travel a minimum\ndistance of 16 m before a desired change in application\
    \ volume can be reached. This suggests that this\nsystem is not suitable for use\
    \ in applications where the management units are small in scale.\nThe adaptation\
    \ of ﬁxed irrigation systems for variable rate water application has been achieved\n\
    (e.g., [36]). Variable water rate application in these systems is usually achieved\
    \ either by individual\nnozzle or emitter control, or zone management [13]. Readers\
    \ are referred to [13] for a comprehensive\nreview of such systems. Miranda et\
    \ al. [37] described a distributed control system implemented to\nachieve variable\
    \ rate water application in a ﬁxed irrigation system operating in predeﬁned management\n\
    zones. Their results indicated that the system was able to apply the irrigation\
    \ volume required in\neach zone. Goumopoulos et al. [38] also implemented a variable\
    \ rate water application setup for a\nﬁxed irrigation system capable of zone-speciﬁc\
    \ irrigation of strawberries. Individual nozzle control\nin a micro-sprinkler\
    \ system has been demonstrated by Coates et al. [39]. They reported individual\n\
    control of 54 nodes in a vineyard with the system. The nozzle connected to each\
    \ node was capable of\nachieving a unique water application volume. They concluded\
    \ that the water requirements of each\ndeﬁned zone in the vineyard can be individually\
    \ met by the irrigation system. The authors reported a\npayback period of between\
    \ 3.5 and 4.5 years for the system.\n5. Monitoring\nThe routine or continuous\
    \ monitoring of moisture ﬂuxes in the soil–plant–atmosphere system is a\nfundamental\
    \ aspect of managing crop production in irrigated agriculture. Monitoring can\
    \ essentially\nbe viewed as the application of various sensing technologies in\
    \ determining and characterizing\nthe spatiotemporal ﬁeld-scale moisture dynamics\
    \ and plant water use. These sensing methods can\nbe classiﬁed under three broad\
    \ headings: soil-based, weather-based and plant-based sensing [40].\nSoil-based\
    \ sensing typically involves the use of sensors to determine the soil moisture\
    \ content or\nSustainability 2017, 9, 353\n6 of 29\npotential. This information\
    \ is then used to infer the amount of water available for plant use and\nits temporal\
    \ dynamics. The weather-based sensing involves the use of the crop evapotranspiration\n\
    to determine the temporal crop water use. The evapotranspiration is determined\
    \ using climatic\nvariables such as radiation, rainfall and wind speed [41,42].\
    \ The plant-based sensing involves the\ndetermination of plant water status which\
    \ is usually related to plant physiology. Measurements\nof canopy temperature,\
    \ stomatal resistance, sap ﬂow, leaf turgor pressure, stem diameter and leaf\n\
    thickness are used to infer plant water status [43].\nRecent advances in remote\
    \ sensing has enhanced the possibility of monitoring the spatial nature of\nboth\
    \ soil and crop water status. Remote sensing encompasses non-contact technologies\
    \ that are capable\nof sensing radiation reﬂected or emitted from agricultural\
    \ ﬁelds. They are deployed using satellites,\naerial platforms and tractors [44].\
    \ These technologies have a high spatial resolution and are well suited\nfor regional\
    \ soil and crop water evaluation [45]. This review focuses on sensing technologies\
    \ that can\nbe applied in monitoring ﬁeld-scale soil and crop water dynamics.\
    \ Readers are referred to [44,46] for a\ncomprehensive review of remote sensing\
    \ technologies applicable in precision agriculture.\n5.1. Soil-Based Sensing\n\
    The knowledge of soil moisture ﬂuxes comprising of the depletion and reﬁll of\
    \ soil water can be\nused to monitor crop water use hence making it a useful tool\
    \ in irrigation scheduling and management\ndecisions [47]. Several methods have\
    \ been developed for measuring soil moisture content; they are\nindirect methods\
    \ which rely on the strong relationship between a particular property of the soil\n\
    and the soil moisture content. Moreover, they are able to provide continuous monitoring\
    \ and are\nnon-destructive [48]. In precision irrigation, the commonly applied\
    \ method for monitoring the\ntemporal dynamics of ﬁeld-scale soil moisture is\
    \ the dielectric-based method [20]. This is because\nof the ease of their deployment\
    \ in large-scale soil moisture sensor networks [49]. Thus, the proper\ndeployment\
    \ and management of this technology can optimize the sustainability of irrigated\
    \ agriculture.\nConsequently, this section will outline a brief description of\
    \ this method including a consideration of\nthe factors affecting sensor performance.\
    \ For a more detailed description of other state-of-the-art soil\nmoisture sensing\
    \ technologies, readers are referred to [50,51].\n5.1.1. Dielectric Soil Moisture\
    \ Sensors\nDielectric soil moisture sensors operate by exploiting the dielectric\
    \ properties of soil and its\nconstituents [52]. The relative dielectric permittivity\
    \ of a substance is used to describe the effect of\nan electromagnetic ﬁeld on\
    \ its molecular structure. It is a dimensionless constant greater than one,\n\
    made up of a real and imaginary part [53]. The apparent relative dielectric permittivity\
    \ of soil, ε′soil\nis a function of its constituents majorly being water, air\
    \ and solid particles. The relative dielectric\npermittivity of the other constituents\
    \ except water has a negligible effect as they have small values in\nthe range\
    \ of 1–7. The one of water, ε′water having a value of approximately 80 has the\
    \ most remarkable\neffect. It is therefore possible to correlate the volumetric\
    \ moisture content (VMC) to ε′soil using\nempirical equations at a frequency range\
    \ of between 50 MHz and 17 GHz. At this high frequency\nrange, ε′soil is highly\
    \ stable and it usually referred to as the apparent dielectric permittivity of\
    \ soil [54].\nA range of electromagnetic sensors exploits this property to provide\
    \ a non-destructive in situ\nmeasurement of soil moisture contents. They include\
    \ time domain reﬂectometry (TDR) sensors, time\ndomain transmission (TDT) sensors\
    \ and capacitance sensors.\n5.1.2. Factors Affecting the Performance of Dielectric\
    \ Soil Moisture Sensors\nThe accuracy of data from soil moisture sensors is important\
    \ in the precision irrigation process.\nOver estimation of soil moisture status\
    \ may lead to a delay in irrigation scheduling decisions and\nconsequently affect\
    \ crop yield and quality. Underestimation of soil moisture status on the other\
    \ hand\nmay lead to application of irrigation too often or when not required by\
    \ the crops. This will result in\nwater/energy wastage and adverse environmental\
    \ effects.\nSustainability 2017, 9, 353\n7 of 29\nDielectric soil moisture sensors\
    \ measure the soil moisture content for the soil volume\ncorresponding to their\
    \ sphere of inﬂuence. The various factors affecting the performance of dielectric\n\
    soil moisture sensors include bulk electrical conductivity (salinity), soil texture,\
    \ bulk density and\ntemperature. A variation in any of these factors around the\
    \ sphere of inﬂuence of the dielectric sensor\nwill have an effect on its performance.\
    \ These properties vary with location and depth in a soil proﬁle\nand it is important\
    \ to take them into account when calibrating dielectric soil moisture sensors\
    \ [55].\nThese sensors often rely on site-speciﬁc calibration, but they often\
    \ come with ‘universal’ calibrations\nwhich can be used where absolute accuracy\
    \ is not required. The accuracy of calibration equations\nsupplied by manufacturers\
    \ of these sensors are usually between a range of ±4 - 2% VMC when applied\nin\
    \ non-saline soils [56]. Site-speciﬁc calibration equations which are developed\
    \ by comparing the\nsensor output to gravimetrically derived soil moisture content\
    \ can be applied when a higher level of\naccuracy is required [57]. In addition,\
    \ for capacitance type probes, it is essential that the probe access\ntubes are\
    \ ﬁtted correctly without air gaps to ensure robust soil water measurements. For\
    \ a detailed\ntechnical description of factors affecting the performance of dielectric\
    \ sensors, readers are referred\nto [58,59].\n5.2. Proximal Sensing and Mapping\
    \ of Soil Moisture\nThe recent advances in rapid mapping and positioning technologies\
    \ enables the spatial\ncharacterization of soil moisture retention properties\
    \ to inform precision irrigation decisions.\nThe electromagnetic induction (EM)\
    \ technique is used in combination with accurate positioning\nsystems to quantify\
    \ soil moisture variability at resolutions less than 10 m. It also provides a\
    \ highly\naccurate digital elevation map (DEM) [2].\nThe EM sensor maps the soil’s\
    \ apparent EC which is inﬂuenced by soil texture and moisture in\nnon-saline soils\
    \ [48]. Those same factors correlate highly to the soil’s water-holding capacity.\
    \ Based on\nthe EC maps, a targeted soil sampling can be conducted at different\
    \ parts of the ﬁeld. Topographic\nfeatures that are likely to inﬂuence ﬁeld-scale\
    \ soil moisture dynamics are derived using the DEM [60].\nThe EC maps enable the\
    \ grouping of discrete units known as management units with similar\navailable\
    \ water-holding capacity (AWC) characteristics which can then be used in selecting\
    \ soil\nmoisture monitoring sites. This has been demonstrated by [34,61]. The\
    \ data from soil moisture sensors\nlocated in the management units can also be\
    \ used in generating dynamic application maps based\non a relationship between\
    \ the soil moisture depletion and the mapped EC values. These application\nmaps\
    \ serve as an input into the precision irrigation control system. Hedley and Yule\
    \ [21] applied soil\nmoisture sensors and an EC map in generating dynamic water\
    \ status maps for a 35.2 ha irrigated\nmaize ﬁeld. Daccache et al. [8] applied\
    \ a similar method in producing dynamic soil moisture maps for\nvarious ﬁelds.\n\
    The electric resistivity tomography technique can also be applied in deriving\
    \ the EC map of a ﬁeld.\nHedley et al. [2] reported that the method has a good\
    \ vertical resolution but it cannot be deployed on a\nmoving platform for rapid\
    \ non-invasive mapping. It has been applied by Kelly et al. [62] in positioning\n\
    soil moisture sensors to support irrigation decisions.\nThe ground-penetrating\
    \ radar (GPR) can also be applied in monitoring the ﬁeld-scale soil moisture\n\
    status [50]. It can be mounted on a vehicle or moving irrigation system for mapping\
    \ soil moisture in a\nﬁeld. The GPR is however affected by high clay content,\
    \ is not amenable to automation and requires\nfurther development to improve its\
    \ viability in precision irrigation applications [63].\nThe deployment of soil\
    \ moisture sensors in management units defined by these mapping techniques\nenables\
    \ the dynamic updates of soil moisture maps which can aid variable rate water\
    \ application.\n5.3. Weather-Based Sensing\nWeather-based sensing involves the\
    \ use of climatic variables in determining ET which is indicative\nof the crops’\
    \ daily water use. Evaporation accounts for the direct evaporation of water to\
    \ the air from\nthe soil surface or canopy interception of either precipitation\
    \ or applied irrigation. Transpiration\nSustainability 2017, 9, 353\n8 of 29\n\
    accounts for the uptake of water by a plant and the subsequent loss of water as\
    \ vapor through stomata\nin its leaves, required for metabolic cooling of the\
    \ leaf to maintain photosynthesis without the leaf\noverheating [41]. Evapotranspiration\
    \ is generally viewed as a combination of the evaporation of water\nfrom the soil,\
    \ evaporation from the canopy surface and plant transpiration [64].\nThe evaporation\
    \ and transpiration process occur simultaneously and are often difﬁcult to\ndistinguish.\
    \ The predominance of each of these processes however varies at different crop\
    \ growth\nstages. At the initial crop growth stage, water is lost mainly in form\
    \ of evaporation from the soil\nsurface. As the development of the crop progresses,\
    \ transpiration becomes the major medium of water\nloss to the atmosphere [45].\n\
    The ET process is largely dependent on solar radiation, vapor pressure deﬁcit\
    \ of the atmosphere\nat any given time and wind speed. It is also inﬂuenced by\
    \ soil water content, the rate at which water\ncan be taken up from the soil by\
    \ the plant roots and crop characteristics (type, variety and growth\nstage) [64].\
    \ Readers are directed to [41,65] for a further discussion on the ET process.\n\
    The temporal dynamics of evapotranspiration on hourly or daily timescales is appropriate\n\
    for quantifying crop water use in the precision irrigation process. The United\
    \ Nations Food and\nAgriculture Organization Penman–Monteith (FAO-PM) equation\
    \ presents a procedure for computing\nhourly or daily ET values using standard\
    \ climatological measurements of solar radiation, air\ntemperature, humidity and\
    \ wind speed made at a height of 2 m above a fully transpiring grass\nsurface\
    \ [41]. These data can be obtained from automatic weather stations installed on\
    \ a speciﬁc ﬁeld or\nfrom a metrological network. The equation provides a basis\
    \ from which reference ET (ET from the\nwell-watered grass surface) for different\
    \ time periods can be calculated and to which ET from other\ncrops can be computed\
    \ using crop coefﬁcients, Kc [66]. The crop coefﬁcients are speciﬁc to each crop\n\
    and crop canopy cover, which is dependent on the crop growth stage. The Kc curve\
    \ deﬁned for a crop\nover its growth stage is generalized for regions with similar\
    \ climates. The Kc is however dependent on\nthe canopy dynamics including cover\
    \ fraction, leaf area index and greenness which may vary across\nregions with\
    \ similar climates [67]. This introduces errors into ET estimates derived using\
    \ the standard\nFAO-PM crop coefﬁcient approach. The FAO-PM method presents a\
    \ relatively easy procedure for\ndetermining the temporal dynamics of crop water\
    \ use. The crop coefﬁcient used in determining the\nactual ET of a particular\
    \ crop however needs to be estimated at each growth stage. It is noted in\nAllen\
    \ et al. [41] that reference ET can be overestimated by as much as 20% during\
    \ conditions of low\nevaporative demand.\nRemote sensing provides a means of overcoming\
    \ the shortcomings of the FAO-PM crop coefﬁcient\napproach of estimating crop\
    \ ET by providing real-time feedback on daily crop water use as inﬂuenced\nby\
    \ actual crop canopy dynamics, local climatic conditions and ﬁeld spatial variability\
    \ [68]. The remotely\nsensed normalised difference vegetation index (NDVI) computed\
    \ from crop canopy reﬂectance\nmeasurements in the red and near-infrared (NIR)\
    \ wavelengths has been found to be a useful tool in\ncomputing accurate crop coefﬁcients\
    \ for a broad range of crops [69]. Singh et al. [70] has demonstrated\nthe use\
    \ of the calculated reference ET and the remotely sensed NDVI in estimating the\
    \ water use of\ncotton. A similar procedure has also been demonstrated by Farg\
    \ et al. [67] for estimating the daily\nwater use of wheat.\nThe surface renewal\
    \ analysis method presents an opportunity for assessing the real-time temporal\n\
    dynamics of crop water use. The surface renewal (SR) method is used to determine\
    \ the sensible heat\nwhich can then be applied to the energy balance equation\
    \ to determine the latent heat (i.e., ET) [71]. It is\nbased on analyzing the\
    \ temperature time series generated from monitoring the change in heat content\n\
    of air parcels that interact with the crop canopy. When an air parcel comes in\
    \ contact with the crop\ncanopy, the air temperature remains constant for a brief\
    \ time period known as the quiescent period.\nThe temperature of the air parcel\
    \ however increases after this time period as energy is transferred\nto it from\
    \ the crop canopy. The increase in temperature continues until the air parcel\
    \ is replaced by\ncooler air from the atmosphere. At this time, the temperature\
    \ of the air shows a sharp drop [72].\nA high frequency trace of this temperature\
    \ renewal event exhibits a ramp-like function. Applying\nSustainability 2017,\
    \ 9, 353\n9 of 29\nstructure function theory to the ramp function enables the\
    \ determination of the sensible heat ﬂux.\nThe instrumentation requirement for\
    \ an SR system is minimal, consisting of small diameter ﬁne wire\nthermocouples\
    \ or a two-dimensional sonic anemometer and a high frequency data acquisition\
    \ system\n(2 Hz to 10 Hz) [71]. Standard climatological measurements are also\
    \ required to obtain the other\nparameters in the energy balance equation.\nThe\
    \ SR technique requires that measurements are taken at a minimum height above\
    \ the crop\ncanopy. It is assumed that the canopy is homogeneous and able to absorb\
    \ all the momentum transferred\nto it by the ambient airﬂow [73]. This assumption\
    \ introduces errors in ET estimates over ﬁelds\nwith variable canopy structures.\
    \ Castellvi and Snyder [74] concluded that the technique can be\napplied for estimating\
    \ ET from short and dense canopy crops as they are mostly decoupled from\nthe\
    \ environment. The technique also requires calibration using an eddy covariance\
    \ system or a\nlysimeter. This may limit its practicality for farm-scale deployment.\
    \ The SR methodology proposed by\nCastellvi [75], however, does not require calibration.\
    \ Rosa and Tanny [76], Shapland and Snyder [72],\nand Rosa et al. [77] have reported\
    \ highly accurate hourly ET estimates from various crops using a\nsurface renewal\
    \ analysis system.\n5.4. Plant-Based Sensing\nThe importance of plant-based monitoring\
    \ becomes emphasized when studying the effect of\nwater deﬁcit on plants and its\
    \ relation to plant water status. The temporal dynamics of crop water use\ncan\
    \ be monitored using a number of plant-based methods. They include methods that\
    \ require direct\ncontact with the plant and those that require only proximal\
    \ contact with the plants [78]. The contact\nsensors are useful in monitoring\
    \ the temporal dynamics of the plant water status while the proximal\nsensors\
    \ are capable of assessing the spatial nature of crop water status across a ﬁeld\
    \ and hence\nwell suited for the precision irrigation process [11]. A good understanding\
    \ of the various aspects of\nplant water status and plant drought physiology is\
    \ important in the successful application of these\nsystems. Readers are directed\
    \ to [79,80] for a comprehensive overview of plant-based sensing methods\napplicable\
    \ in irrigation management. Plant-based sensing systems measure either the plant\
    \ water\ncontent, plant water potential or the plant physiological response to\
    \ moisture deﬁcits. A summary of\nvarious plant-based sensing systems is given\
    \ in Table 2. It should be noted that many of these require\nskilled manpower\
    \ and considerable management time for their operation.\nTable 2. Summary of plant-based\
    \ monitoring methods.\nPlant-Based Measurement\nAdvantage\nDisadvantage\nPlant\
    \ water potential methods\nLeaf turgor pressure\nsensors [81,82]\nCapable of real-time\
    \ measurements and\ncan characterize leaf water dynamics\nPoint-based and requires\
    \ scaling to\ncanopy level\nPlant water content methods\nLeaf thickness sensors\
    \ [83]\nRelatively cheap and can be automated\nLeaf thickness not sensitive to\
    \ changes in plant\nwater status. Sensors also largely inaccurate.\nLow spatial\
    \ resolution\nStem diameter variation [84,85]\nSensitive to water deﬁcits and\
    \ can\nbe automated\nLimited by diurnal hysteresis.\nLow spatial resolution\n\
    Plant response to water deﬁcits\nXylem cavitation [86]\nSensitive to onset of\
    \ water stress and\nmoderately cheap instrumentation\nOnly useful during drying\
    \ and inadequate\ncharacterization of cavitation-water status\nrelationship. Low\
    \ spatial resolution\nSap ﬂow [87,88]\nHighly accurate method capable of\nquantifying\
    \ plant transpiration\nPoint-based technique requiring replication to\nimprove\
    \ spatial resolution. Irrigation\nthresholds difﬁcult to deﬁne. Also requires\n\
    considerable time and expertise in its operation\nThermal sensing (proximal) [89,90]\n\
    Simple procedure with high spatial and\ntemporal resolution\nLargely empirical\
    \ and difﬁcult to implement in\nhumid climates\nSustainability 2017, 9, 353\n\
    10 of 29\n5.5. Thermal Sensing\nPlant canopy temperature is a widely accepted\
    \ variable indicative of plant water status.\nThe stomata controls evaporative\
    \ cooling of the leaves based on soil water status and prevailing\nenvironmental\
    \ conditions.\nIt closes due to increased water deﬁcits and a reduction in plant\n\
    transpiration causing an increase in plant canopy temperature [91]. The measurement\
    \ of the crop\ncanopy temperature by infrared thermometry which is then normalized\
    \ using an index such as the\ncrop water stress index (CWSI) can be used in determining\
    \ the plant water status and its response to\nwater deﬁcits [79].\nThe CWSI is\
    \ a well-established method of accounting for the variation in canopy temperature\
    \ as\na function of prevailing microclimatological conditions and water deﬁcits\
    \ [92]. It relates the difference\nin the crop canopy temperature measured using\
    \ infrared thermometry to the air temperature as a\nfunction of atmospheric vapor\
    \ deﬁcit [93]. This temperature difference is then related to an upper\nand lower\
    \ temperature baseline to determine a water stress index. The upper baseline represents\n\
    a non-transpiring crop and the lower baseline represents a fully transpiring crop\
    \ under the same\nprevailing environmental condition [30]. The CWSI is a dimensionless\
    \ value of between 0 and 1, with a\nvalue of 0 indicating a well-watered crop\
    \ and a value of 1 indicating a severely water-stressed crop [93].\nBiotic factors\
    \ can also induce stress in a plant thus affecting transpiration rate, crop water\
    \ use and\ncanopy temperature. These biotic factors also affect leaf colour and\
    \ morphology which in turn affects\nthe optical properties of the crop canopy\
    \ [94]. In order to successfully apply infrared thermometry as a\ntool for assessing\
    \ plant water status, it is important to differentiate between abiotic (such as\
    \ water stress)\nand biotic stresses (such as plant diseases and pest infestation).\
    \ Multiband optical sensors could be\napplied in detecting various crop diseases\
    \ and crop infestation within a ﬁeld by computing vegetation\nindices based on\
    \ canopy reﬂectance measurements [33]. This has been applied by Garcia-Ruiz et\
    \ al. [95]\nfor detecting citrus greening and by Yang et al. [96] for detecting\
    \ infestation of green bugs and aphids\nin wheat. It may be useful to outﬁt precision\
    \ irrigation systems with these sensors.\nThe main advantage of thermal sensing\
    \ for precision irrigation application is related to the\nnon-contact and real-time\
    \ capability of the system. Infrared thermometry and thermography provide\nthe\
    \ opportunity to map the spatial variation in crop water status which can guide\
    \ in variable rate\nirrigation management. The use of thermal sensing for guiding\
    \ zone-speciﬁc water application has\nbeen demonstrated as noted in Section 2.\n\
    A major problem faced in applying the thermal sensing approach is the establishment\
    \ of the\nbaseline temperatures. In climates in which the air humidity is often\
    \ high, variations in wind speed and\nnet radiation introduce signiﬁcant errors\
    \ in the estimation of the lower limit baseline temperature [97].\nA number of\
    \ studies have been conducted to develop procedures for enhancing the possibility\
    \ of\napplying measurements of crop canopy temperature in inferring plant water\
    \ status in humid regions.\nJones [98] provides an excellent summary of these\
    \ research efforts. They include the use of well-watered\nplots to substitute\
    \ for empirical non-water stressed baselines, although these well-watered plots\
    \ are\nrarely available in practice. The use of artiﬁcial reference surfaces for\
    \ measuring baseline temperatures\nhas been proposed but it is reported that these\
    \ artiﬁcial reference surfaces differ signiﬁcantly in thermal\nand radiative properties\
    \ in comparison to real leaves. A modeling approach to simulating the canopy\n\
    resistance of well-watered plants has also been investigated but this is limited\
    \ by the difﬁculties\nencountered in correctly modeling stomata behavior and hence\
    \ canopy resistance. The possibility\nof including a wide range of metrological\
    \ data including net radiation and vapor pressure deﬁcit in\nderiving CWSI models\
    \ for humid climates has also been investigated. The mathematical complexity\n\
    typical of the models however limit their practical application.\nAnother problem\
    \ commonly encountered in applying infrared measurements of canopy\ntemperature\
    \ in inferring plant water status is the inclusion of soil temperature and other\
    \ background\ntemperature including the sky and stems in the measured canopy temperature.\
    \ This usually leads to\nerrors in estimation of the canopy temperature as the\
    \ soil and background temperature are usually\nmany degrees different from the\
    \ canopy temperature [90]. Jones [99] proposed the use of narrow\nSustainability\
    \ 2017, 9, 353\n11 of 29\nacceptance angle infrared sensors that can be positioned\
    \ to view only single leaves as a solution to this\nproblem. It has however been\
    \ found that the temperature estimates of single leaves determined\nby this method\
    \ is mostly not representative of the temperature of the plant canopy.\nA dense\n\
    deployment of infrared sensors may seem an alternative but this may be prohibitive\
    \ in terms of\ncost for practical applications.\nThe advancements in the ﬁeld\
    \ of thermal imagery and the recent availability of low-cost thermal\ncameras\
    \ has presented the possibility of overcoming the problems associated with the\
    \ inclusion of\nsoil and background temperatures in the measured canopy temperature.\
    \ Thermal imagery allows\nfor the average temperature of a deﬁned area to be obtained\
    \ and also the separation of background\ntemperature from the area of interest.\
    \ The temperature of a large number of individual leaves\nmaking up a canopy can\
    \ be included in an image while the soil and background temperature can be\ndiscarded\
    \ by applying automated image processing techniques [92]. Gonzalez-Dugo et al.\
    \ [100] has\ndemonstrated the use of thermal imagery in mapping the crop water\
    \ status in a commercial orchard\nin Spain. They also demonstrated the rapid mapping\
    \ of ﬁeld-scale crop water status by deploying\nthermal imaging equipment on an\
    \ unmanned aerial vehicle (UAV).\nPlant-based sensing methods including thermal\
    \ sensing only provide information on the need for\nirrigation and provide no\
    \ information on the volume of irrigation application needed. They are used\n\
    in combination with soil-based sensing for this reason [19].\n6. Decision Support\n\
    A decision support system for irrigation management and scheduling provides a\
    \ framework\nfor incorporating various tools and techniques for site-speciﬁc irrigation\
    \ decisions. The widespread\ncommercial adoption of precision irrigation will\
    \ be predicated on the development of robust and\noptimal decision support systems\
    \ [19].\nA number of decision support systems schedule irrigation at predeﬁned\
    \ intervals and apply\npredeﬁned irrigation volumes. They do not incorporate any\
    \ form of sensor feedback on plant water\nstatus, soil water status and climatic\
    \ variables [101]. This ‘open-loop’ strategy is largely designed based\non heuristics\
    \ and historical data. Mareels et al. [102] suggested that this is an inefﬁcient\
    \ approach often\nleading to overwatering and waste of fertilizer and other supplemental\
    \ crop inputs.\nClosed-loop irrigation strategies aim to irrigate: when the soil\
    \ moisture content reaches a certain\nthreshold [103–105]; when plant sensors\
    \ indicate a certain stress threshold [93,106,107] or with feedback\nfrom crop\
    \ simulation models with the aim of attaining a certain yield, crop physiological\
    \ response or\neconomic objective [108]. These closed-loop irrigation strategies\
    \ have been shown to improve water\nuse efﬁciency in the production of horticultural\
    \ crops under protected environments. Environmental\nconditions in such production\
    \ systems can be controlled based on plant feedback which eliminates the\nstochastic\
    \ plant response often encountered in ﬁeld-scale crop production [109]. Belayneh\
    \ et al. [110]\nimplemented a wireless sensor network of soil moisture sensors\
    \ for closed-loop irrigation control in\na pot-in-pot nursery. A signiﬁcant reduction\
    \ in water use was achieved by the system. The authors\nalso reported a 2.7-year\
    \ payback period for the system. Chappell et al. [111] reported water savings\
    \ of\n83% for a closed-loop irrigation control system implemented in a protected\
    \ crop production system.\nThey noted that there was less occurrence of plant\
    \ diseases in the nursery due to the elimination of\nover-watering. Saavoss et\
    \ al. [112] reported a 65% increase in proﬁt due to the implementation of a\n\
    wireless sensor network-based closed-loop control system in a nursery. The authors\
    \ noted that the\nincrease in proﬁt was due to improvement in crop quality and\
    \ yield resulting from the precise control\nof irrigation applications.\nIn ﬁeld-scale\
    \ crop production, the crop needs vary over time and space due to both biotic\
    \ and\nabiotic factors [9]. McCarthy et al. [113] noted that in these crop production\
    \ systems, closed-loop\nstrategies are unable to account for unknown crop dynamics,\
    \ the stochastic nature of climatic variables\nand crop response, and the time-varying\
    \ nature of the soil-plant-atmosphere system. This last\npoint is especially due\
    \ to crop growth, crop management and infestation of pests and diseases.\nSustainability\
    \ 2017, 9, 353\n12 of 29\nThe closed-loop systems are also unable to consider\
    \ equipment and other operational limitations.\nMcCarthy et al. [114] concluded\
    \ that an optimal decision support system must be ‘adaptive’ with\nthe ability\
    \ of accommodating the temporal and spatial variability within the ﬁeld. The decision\n\
    support system must also have the capability of modifying irrigation decisions\
    \ in response to crop\nphysiology, uncertainties in climatic inputs, soil, irrigation\
    \ systems and water supply limitations,\neconomic considerations and the quality\
    \ of sensor feedback.\n6.1. Adaptive Decision Support\nThe characteristics of\
    \ a cropping system varies over time. Within a cropped system, the properties\n\
    that will typically vary within and between seasons include crop growth, soil\
    \ properties (due to\naddition of nutrients and other management processes) and\
    \ climate. This will have a direct inﬂuence\non the irrigation timing and volume\
    \ required for optimal crop growth [11].\nAn adaptive decision support system\
    \ is able to continuously re-adjust the irrigation scheduling\nalgorithm in order\
    \ to retain the desired performance of the irrigation system [114]. The adaptive\n\
    decision support system is able to utilize historical or real-time sensor data\
    \ to arrive at irrigation\ntiming and volume that adequately accounts for the\
    \ temporal and spatial variability in the ﬁeld [114].\nIn control theory an adaptive\
    \ control system is generally accepted as a control system able to adjust\nits\
    \ controller parameters based on sensor feedback from a process, such that the\
    \ controlled process\nbehaves in a desirable way [11]. McCarthy et al. [108] noted\
    \ that an adaptive decision support system\nfor irrigation may either be sensor-based\
    \ if they use direct sensor measurements for the irrigation\nstrategy or model-based\
    \ if they use a calibrated simulation model to aid irrigation decisions.\nThe\
    \ development of adaptive decision support systems presents an opportunity to\
    \ improve\nsustainability in precision irrigation through improved water use and\
    \ crop productivity. They will\nalso enhance synergistic applications of data\
    \ available from soil, plant and weather sensors to arrive at\noptimal irrigation\
    \ scheduling decisions [108].\nIn this section we will present a brief discussion\
    \ on state-of-the-art of adaptive decision support\nsystems. We will thereafter\
    \ discuss the opportunities these systems present in improving sustainability\n\
    in irrigated agriculture. Readers are referred to [113] for a comprehensive overview\
    \ on the application\nof advanced process control to irrigation, details on methods\
    \ of operation and a consideration of\nfundamental control concepts as they apply\
    \ to irrigation scheduling.\n6.1.1. Mechanistic Models\nA number of irrigation\
    \ decision support systems are based on complex physical models which\nclosely\
    \ resemble the actual physical system [115]. They are able to incorporate the\
    \ physiological and\nmorphological representation of the plant into the decision\
    \ support tool. Barnard and Bauerle [116]\ndescribed an irrigation scheduling\
    \ system based on the spatially explicit biophysical model, MAESTRA\n(Multi-Array\
    \ Evaporation Stand Tree Radiation A), which couples the within-canopy photosynthesis\n\
    and stomatal conductance. Data on leaf temperature, canopy aerodynamics and environmental\n\
    variables are used as inputs into the model to predict the plant transpiration.\
    \ They reported that\nthe model-based tool applied between 18% and 56% more water\
    \ than a sensing-based method for\nscheduling irrigation in four species. They,\
    \ however, noted that the model-based approach produced\ngreater tree growth.\
    \ Asher et al. [117] described a mechanistic model capable of inferring crop water\n\
    requirements. The model employs leaf temperature data as input for determining\
    \ the crop aerodynamic\ncharacteristics which is then used in the Penman–Monteith\
    \ equation for calculating the actual crop\nET. A major drawback of these mechanistic\
    \ models is that they include static parameters which, once\nidentiﬁed, are assumed\
    \ to remain constant over the cropping season. This is rarely so in practice as\
    \ the\ncropping system varies over time due to both biotic and abiotic factors.\n\
    Sustainability 2017, 9, 353\n13 of 29\n6.1.2. Simulations\nCrop simulation models\
    \ based on ﬁrst principle physical models of crop phenology, soil physics\nand\
    \ hydrology can be applied in simulating the crop response to irrigation and cropping\
    \ system\nmanagement [115]. These simulation models provide the opportunity to\
    \ evaluate the beneﬁt of several\nprecision irrigation strategies as they eliminate\
    \ the need for time-consuming ﬁeld experiments [118].\nThey can be interfaced\
    \ with real-time sensor feedback from soil or plant sensors and weather data to\n\
    determine daily irrigation requirements of crops. They can also be used in predicting\
    \ the yield impact\nof an irrigation strategy. This is achieved by employing weather\
    \ forecast data in computing a daily soil\nmoisture balance and assessing the\
    \ impact of soil moisture deﬁcits on crop growth [118].\nDeJonge et al. [14] investigated\
    \ the effect of variable rate irrigation management on corn\nproduction in Iowa\
    \ using the CERES-maize model. Corn yield was compared for a period of 28 years\n\
    under simulated scenarios of no irrigation, scheduled uniform irrigation and precision\
    \ irrigation. They\nreported no signiﬁcant difference in corn yield and water\
    \ use between the uniform irrigation and\nprecision irrigation scenarios. Thorp\
    \ et al. [24] described a methodology for applying the Decision\nSupport System\
    \ for Agrotechnology Transfer (DSSAT) crop growth model in analyzing variable\
    \ rate\nmanagement practices including irrigation on crop growth and yield. The\
    \ platform enabled the\nevaluation of precision irrigation strategies on crop\
    \ performance in predeﬁned management zones.\nThese systems are however incapable\
    \ of real-time decision support and can only be applied using\nhistorical data.\n\
    McCarthy et al. [114] proposed a simulation framework, VARIwise, capable of real-time\
    \ decision\nsupport in precision irrigation. The simulation framework is capable\
    \ of incorporating real-time data\ninput from ﬁeld sensors in arriving at irrigation\
    \ decisions. The combination of different sensor inputs\ninto the simulation framework\
    \ enables adaptive decision support with the system being able to\nre-adjust irrigation\
    \ decisions based on plant feedback and also explore optimal control strategies.\n\
    Simulation models for use in irrigation decision support require extensive calibration\
    \ and\nvalidation to establish model accuracy. The limitation in data available\
    \ for this endeavour often\nlimit the use of the platforms to speciﬁc crops.\n\
    6.1.3. Artiﬁcial Intelligence\nArtiﬁcial intelligence presents the potential of\
    \ solving problems in precision irrigation which\nare complex, non-linear and\
    \ ill-deﬁned [119]. Artiﬁcial intelligence algorithms are able to emulate\nthe\
    \ human decision-making process when applied to a particular problem domain. They\
    \ have been\ndeployed for implementing adaptive decision support in irrigation\
    \ in form of artiﬁcial neural networks,\nfuzzy logic and expert systems with mixed\
    \ success to date [118–120].\nArtiﬁcial Neural Networks\nArtiﬁcial neural networks\
    \ (ANN) are non-linear mapping structures employed in modeling when\nthe underlying\
    \ data relationship is not well deﬁned. ANN are able to identify and learn correlations\n\
    between input data and corresponding target output values. They are able to predict\
    \ the outcome of\nnew independent data sets making them a useful tool in predictive\
    \ modeling [121]. ANN are well\nsuited for the irrigation decision support problem\
    \ that can often be complex and stochastic in nature.\nThese networks are also\
    \ adaptive in nature and are able to continuously learn in order to provide\n\
    optimal solutions to target problems in dynamic systems.\nKarasekreter et al.\
    \ [122] implemented an ANN for scheduling irrigation in a strawberry orchard\n\
    using soil moisture and its physical properties as model inputs. The system was\
    \ able to achieve water\nsavings of 20.5% and an energy saving of 23.9%. ANN however\
    \ require large datasets for training and\nare unable to describe the physical\
    \ dynamics of a system. This makes their use limited in real-time\ndecision support\
    \ tools.\nSustainability 2017, 9, 353\n14 of 29\nFuzzy Logic\nFuzzy logic is an\
    \ artificial intelligence algorithm that can be used to model a process and relate\
    \ it\nto human experience in arriving at decisions. A fuzzy logic system is made\
    \ up of a set used to classify\ninput data into membership classes, a decision\
    \ rule that is applied to each set which culminates in a\nhuman-like decision\
    \ output from the system [123]. A detailed description of the process is given\
    \ in [124].\nMousa and Abdullah [123] successfully applied a fuzzy logic model\
    \ in scheduling irrigation in\ndrip and sprinkler irrigation systems using ET,\
    \ soil moisture data and crop growth stage as model\ninputs. Prakashgoud and Desai\
    \ [124] employed a fuzzy logic system using soil moisture data, leaf\nwetness\
    \ and climatological data as model inputs in order to implement irrigation scheduling\
    \ decisions.\nThe system was capable of maintaining soil moisture thresholds in\
    \ the speciﬁed range. Giusti and\nMarsili-Libelli [125] described an adaptive\
    \ irrigation decision support system implemented with fuzzy\nlogic. The system\
    \ incorporates a predictive model of the soil moisture and an inference system\
    \ for\nmaintaining the soil moisture within an acceptable threshold. The system\
    \ was reported to adapt\nirrigation decisions to rainfall uncertainty and produced\
    \ water savings of 13.55% over a simulation\nperiod of 168 days.\nThe accuracy\
    \ of fuzzy logic systems is largely tied to an in-depth knowledge of the system.\
    \ They\nalso lack an inner mechanistic structure with the domain of applicability\
    \ limited to the range of training\ndata used in setting them up. Delgoda et al.\
    \ [115] suggested that the points mentioned makes decision\nmaking with a fuzzy\
    \ system an ad hoc process limiting its application in adaptive decision support.\n\
    Expert Systems\nAn expert system is a tool able to emulate the reasoning process\
    \ a human expert would employ\nin a decision-making process in his/her ﬁeld of\
    \ expertise. It captures the human decision-making\nexpertise and heuristics representing\
    \ it in a series of rules and facts [126]. An expert system typically\nconsists\
    \ of a knowledge base component and an inference engine that acts as a reasoning\
    \ tool [127].\nExpert systems are especially suited to dynamic problems that are\
    \ of a complex nature. They are also\nwell suited to dealing with incomplete and\
    \ uncertain data [128]. This makes them well suited for\nirrigation decision support\
    \ which often requires the input of experts to arrive at optimal decisions.\n\
    Expert systems applied in irrigation decision support can be classiﬁed as either\
    \ ‘expert systems\nproper’ or hybrid expert systems. A detailed review on the\
    \ application of expert systems in irrigation\ndecision support is given in [128,129].\
    \ The ‘expert systems proper’ class of irrigation decision support\ntools schedule\
    \ irrigation based on soil moisture and climatic data. They are unable to consider\
    \ the\ntime-varying nature of the cropping system (crop growth, disease and pest\
    \ infestation) to arrive at\noptimal irrigation decisions. They are also unable\
    \ to account for the stochastic nature of climatic\nvariables and are not well\
    \ suited for real-time applications [129].\nHybrid expert systems which are also\
    \ referred to as model-based expert systems combine\nalgorithmic techniques and\
    \ a knowledge-based component in solving problems relevant to its\napplication\
    \ domain. Its advantage in irrigation is that optimal irrigation decision can\
    \ be made\nby combining expert knowledge with data feedback from inﬁeld sensors,\
    \ data-driven models and crop\nsimulation models [130]. Thomson and Ross [131]\
    \ described a model-based expert system designed\nfor decision support in irrigation\
    \ management. The system employs feedback from soil moisture\nsensors to adjust\
    \ the input of a crop simulation model, PNUTGRO (peanut crop growth simulation\n\
    model), and also incorporates the capability of sensor feedback validation. The\
    \ system was reported\nto maintain soil moisture at the deﬁned thresholds. Goumopoulos\
    \ et al. [38] developed an expert\nsystem-based adaptive decision support platform\
    \ for zone-speciﬁc irrigation of strawberry plants.\nThe system includes a wireless\
    \ sensor network of soil, climate and plant sensors providing feedback\nfor the\
    \ decision support system. It also includes a machine learning process capable\
    \ of inferring new\nrules and extending the knowledge base from logged data sets.\
    \ The system was reported to reduce\nirrigation water consumption by around 20%.\
    \ A hybrid expert system based on real-time soil moisture\ndata with the capability\
    \ of incorporating plant models is described in Kohanbash et al. [132].\nSustainability\
    \ 2017, 9, 353\n15 of 29\nThe performance of an expert system is largely dependent\
    \ on the effectiveness of the knowledge\nacquisition process. An error in this\
    \ process will drastically affect the system reliability and its performance.\n\
    6.1.4. Learning Control\nLearning control decision support strategies perform\
    \ systems identiﬁcation using sensor feedback\nwithout deﬁning a mathematical\
    \ model [113]. Systems identiﬁcation models a dynamic system based\non a time\
    \ series of measured input/output data [133]. A comprehensive overview on the\
    \ theory of\nsystems identiﬁcation is presented in [134].\nIterative learning\
    \ control can be applied in systems with ill-deﬁned models that operate\nrepetitively\
    \ and assume the same initial condition after each iteration.\nIt is well suited\
    \ to the\nirrigation problem as irrigation scheduling and application is a repetitive\
    \ problem over the crop\nseason. The time-varying nature of the soil–plant–atmosphere\
    \ system can also be viewed as an\nill-deﬁned problem. The strategy is also able\
    \ to improve system performance by eliminating the effects\nof a repeating disturbance\
    \ with undeﬁned dynamics. Applied to irrigation, this may be a measured\ncrop\
    \ response that reoccurs as a consequence of irrigation. The temporal changes\
    \ in crop water use\nand weather conditions are not considered [113].\nMcCarthy\
    \ et al. [114] noted that a drawback of the iterative learning approach may be\
    \ the\ninefﬁcient systems identiﬁcation resulting from the slow system dynamics\
    \ of the crop system in\nresponse to irrigation events. This results from the\
    \ evaluation of the effect of only one irrigation\nvolume on plant response at\
    \ any water application event. They suggested that this drawback may be\neliminated\
    \ by applying the process of iterative hill climbing control. This learning control\
    \ strategy\nemploys an adaptive varied identiﬁcation process. A range of irrigation\
    \ volumes are applied at each\nirrigation event to a number of test cells on the\
    \ ﬁeld. The response in the test cell that best matches\nthe desired system performance\
    \ is identiﬁed as the optimal irrigation process. They reported that\nthe iterative\
    \ hill climbing control procedure was capable of maximizing cotton yield when\
    \ used\nwith a combination of plant and soil sensors to provide feedback for the\
    \ identiﬁcation procedure.\nTheir conclusions were however based on results from\
    \ a simulation study and a ﬁeld-based validation\nof the procedure was not reported.\n\
    The results of the learning control procedure are based solely on sensor measurements\
    \ and may be\nlargely affected by sensor drift as a model of the crop response\
    \ is not developed from the identiﬁcation\nprocedure. This method can be considered\
    \ more of a “brute force” approach than a scientiﬁcally based\napproach to scheduling\
    \ irrigation.\n6.1.5. Model Predictive Control\nModel predictive control (MPC)\
    \ is an industrial control approach employed in decision support\nfor large-scale\
    \ multivariable problems with multiple constraints. It has been successfully implemented\n\
    in the food industry, petrochemical industry and power generation among others\
    \ [135]. Model\npredictive control employs a plant model and optimization algorithm\
    \ to calculate plant inputs in order\nto achieve a future value of a performance\
    \ criterion. The system performance is predicted over a ﬁnite\nhorizon subject\
    \ to constraints on both the inputs and outputs of the plant [101]. Readers are\
    \ directed\nto [135–137] for an in-depth review of the theory of model predictive\
    \ control and its application in\nvarious industries.\nIn the case of irrigation,\
    \ applying a soil moisture balance model, the plant input will be the\nirrigation\
    \ amount, the plant output will be the soil moisture deﬁcit, and both crop ET\
    \ and precipitation\nvalues will be considered as disturbances as they cannot\
    \ be controlled. A prediction of future input\nvalues and disturbances is required\
    \ in an MPC system in order to determine the optimal system\noutput [138]. This\
    \ highlights the need for the incorporation of weather forecast data into the\
    \ MPC\nframework for irrigation decision support.\nModel predictive control appears\
    \ to be well suited to the domain of irrigation decision support.\nThe irrigation\
    \ problem has input constraints in terms of optimal irrigation volume and output\n\
    Sustainability 2017, 9, 353\n16 of 29\nconstraints in terms of soil moisture thresholds\
    \ and the desired plant response to water deﬁcits [135].\nOoi et al. [139], Lozoya\
    \ et al. [101] and Saleem et al. [135] described a model predictive control\n\
    framework for irrigation scheduling based on a soil moisture balance model. They\
    \ employed a\nsystem identiﬁcation procedure to generate a grey box model of the\
    \ soil–plant–atmosphere system\nwith a network of soil moisture sensors providing\
    \ real-time feedback to the control algorithm. They\nall reported the ability\
    \ of the MPC platform to sufﬁciently predict crop irrigation needs and also\n\
    observations of signiﬁcant water savings. The authors of the discussed systems\
    \ however fail to account\nfor the stochastic nature of rainfall and crop water\
    \ use in the system dynamics. Delgoda et al. [138]\nnoted that an adequate consideration\
    \ of the uncertainty in rainfall and ET inputs into the water balance\nmodel employed\
    \ in the MPC framework will improve the capability of the MPC system.\nDelgoda\
    \ et al. [115] addressed the drawbacks noted in the above MPC frameworks by employing\n\
    disturbance afﬁne feedback control, an uncertainty modelling technique widely\
    \ applied in MPC\nto account for the stochastic nature of rainfall and crop water\
    \ use. A simple order model of soil\nmoisture dynamics is included in the system\
    \ to enable online calculation of model parameters, hence\naccounting for the\
    \ time-varying nature of soil-plant-atmosphere system. The authors reported an\n\
    optimal performance of the system in humid regions where considerable uncertainties\
    \ in climatic\nvariables exist.\n6.2. Commercial Sensor Applications in Adaptive\
    \ Decision Support\nManufacturers of sensors and a number of system integrators\
    \ are showing considerable interest\nin developing innovative tools that will\
    \ further optimize irrigation water use.\nA sensor integration project is described\
    \ by AgSmarts (Memphis, TN, USA). Moving irrigation\nsystems are equipped with\
    \ sensors which provide data on crop growth stage and soil proﬁle. Aquaspy\nsoil\
    \ moisture sensors (San Diego, CA, USA) positioned in various parts of the ﬁeld\
    \ also provide data\non soil moisture status which is applied in irrigation timing\
    \ and calculation of irrigation volumes.\nThese irrigation decisions are automatically\
    \ adjusted based on the varying water requirements at each\ncrop growth stage\
    \ [140].\nOmica, Italy has deployed a wireless sensor network of Libelium environmental\
    \ and soil moisture\nsensors (Zaragoza, Spain) on a maize farm in Italy to support\
    \ irrigation decisions. The sensors\nare interfaced to a geo-referenced decision\
    \ support system which enables zone-speciﬁc irrigation\nmanagement. The system\
    \ is able to predict crop yield based on irrigation timing and application\nvolumes\
    \ combined with historical yield data. This can then be applied in optimizing\
    \ the decision\nsupport system towards achieving a desired crop yield goal.\n\
    Most decision support systems presently produced for commercial use provide on/off\
    \ irrigation\ncontrol based on speciﬁed thresholds and plant/crop sensor feedback.\
    \ The incorporation of predictive\nmodels into these systems will enhance the\
    \ possibility of improving irrigation water use and crop\nyield [141].\n7. Opportunities\
    \ for Improving Sustainability\nSustainability is premised on the principle of\
    \ meeting the needs of the present generation without\ncompromising the ability\
    \ of future generations to meet their own needs. Sustainable agriculture is\n\
    focused on developing farming practices that are safe and do not have an adverse\
    \ impact on the\nenvironment [142].\nPretty [143] suggested that sustainable agriculture\
    \ integrates the main goals of environmental\nhealth and economic proﬁtability.\
    \ The efﬁcient and effective use of water is considered the main driver\nfor improving\
    \ sustainability in irrigated agriculture. This will involve the use of less water\
    \ for irrigating\ncrops and also preserving the quality of water sources. Conventional\
    \ irrigation practices apply water\nuniformly over a ﬁeld resulting in a high\
    \ volume of water use. Overirrigation may also result from\nthis practice which\
    \ causes leaching of nitrates and nutrients into ground water sources. An important\n\
    consideration would also be the use of less energy for operating water pumps and\
    \ irrigation application\nSustainability 2017, 9, 353\n17 of 29\nequipment. Soil\
    \ erosion continues to be a serious threat to sustainability in irrigated agriculture.\
    \ This\ncan be eliminated by applying precise irrigation volumes to reduce surface\
    \ runoff.\nPrecision irrigation presents a promising platform for improving sustainability\
    \ in irrigated\nagriculture. This is especially hinged on the possibility of eliminating\
    \ the adverse environmental\nimpacts related to conventional irrigation practices\
    \ with the adoption of precision irrigation.\nThe economic proﬁtability of the\
    \ adoption of precision irrigation is however a very important point\nto consider.\
    \ This will be manifested in terms of improved crop yields and increased water\
    \ savings\nincluding the associated reduction in energy consumption resulting\
    \ from the optimal matching of\nirrigation inputs to the spatial water demands\
    \ of the ﬁeld, thus reducing costs [11].\nPrecision irrigation is predicated on\
    \ the hypothesis that the crop water requirements vary spatially\nacross a ﬁeld.\
    \ In heterogeneous crops such as fruit orchards, this variability is also due\
    \ to physiological\nfactors such as leaf area and fruit load [144]. It is assumed\
    \ that varying water application across the ﬁeld\nto meet this spatial crop water\
    \ need will improve crop yield and reduce the costs of associated inputs.\nSmith\
    \ et al. [11] noted that the evidence to support this hypothesis in commercial\
    \ crop production is\nnot readily found in literature.\nEvans and King [18] reviewed\
    \ much of the work prior to that date focused on analysing the\nimprovements in\
    \ crop yield and water savings achievable with precision irrigation and suggested\
    \ that\nthe greatest savings are likely to occur in humid climates by the increased\
    \ utilization of stored moisture\nand in-season precipitation. Results from simulation-\
    \ and ﬁeld-based case studies they reviewed\nshowed water savings of 0% to 26%\
    \ for well-watered crop production employing precision irrigation\nstrategies.\
    \ No signiﬁcant improvements in crop yields resulting from the adoption of precision\n\
    irrigation were reported. They concluded that in arid and semi-arid regions, precision\
    \ irrigation is\nmore suited to maximize net return rather than yield and it may\
    \ have greater potential in reducing\nirrigation water use in humid climates when\
    \ irrigating to maximally utilize in-season precipitation.\nThey further noted\
    \ that the economic beneﬁt of adopting precision irrigation for ﬁeld-scale crop\n\
    production is limited. This is because the cost of equipment, maintenance and\
    \ management is much\ngreater than the revenue improvements achieved as a result\
    \ of improved yield and water savings.\nThe payback period of implementing the\
    \ technology may also exceed the useful life of the water\napplication equipment,\
    \ typically placed at 15 years. A payback period ranging from 5 to 20 years is\n\
    noted in Smith et al. [11] for the adoption of precision irrigation for crop production\
    \ in New Zealand.\nEvans et al. [145] reviewed the adoption trends of spatially\
    \ varied irrigation in the USA covering\na period of 20 years. They noted that\
    \ about only 200 of the 175,000 moving irrigation systems in the\nUSA were ﬁtted\
    \ with variable rate water application technology. They suggested higher net returns\
    \ on\ninvestment as a stimuli for adoption of precision irrigation by growers.\
    \ Growers that had adopted the\ntechnology reported no signiﬁcant savings in water\
    \ and energy use in non-limiting water situations.\nThey noted that in more than\
    \ 20 years of research pertaining to variable rate irrigation management,\nthe\
    \ economic beneﬁt was yet to be demonstrated. This was attributed to the marginal\
    \ water savings\n(5%–15%) which is insufﬁcient to realize a payback for the initial\
    \ investment in the water application\ntechnology. They concluded that an economic\
    \ strategy that optimizes net return rather than total\nreturns for the technology\
    \ should be adopted as a long-term investment goal.\nHeeren et al. [146] conducted\
    \ a simulation study to assess the reductions in pumping costs\nthrough the adoption\
    \ of precision irrigation in 49,224 centre-pivot irrigated ﬁelds in Nebraska,\
    \ USA.\nThe study focused on applying variable rate water applications in mining\
    \ undepleted available water.\nThey noted that the reduction in pumping costs\
    \ achieved from the adoption of precision irrigation\nin all ﬁelds may be negligible\
    \ in comparison to the cost of variable rate water application equipment.\nThey\
    \ concluded that the adoption of this technology will be economically justiﬁable\
    \ only with an\nincrease in energy costs.\nAn economic evaluation of spatially\
    \ varied irrigation applications is presented in Lee [147].\nThe study assessed\
    \ energy savings resulting from pumping lesser volumes of water for irrigation\
    \ on\na 67-acre ﬁeld in Wyoming. The cost of installing the variable rate water\
    \ application equipment on\nSustainability 2017, 9, 353\n18 of 29\nthe ﬁeld was\
    \ reported as $29,513 with a useful equipment life of 15 years. The yearly return\
    \ for the\nequipment based on energy savings achieved was computed as $1816.71,\
    \ which equates to a payback\nperiod of 16.25 years. This suggests that a payback\
    \ will only be realized for the technology outside the\nuseful life of the equipment.\n\
    Precision irrigation offers the beneﬁt of providing water conservation beneﬁts\
    \ by avoiding\noverirrigation and the associated adverse environmental impacts\
    \ [18]. Sadler et al. [148] discussed\nwater conservation strategies where precision\
    \ irrigation can potentially reduce the total water applied\nand improve the environmental\
    \ quality of irrigated ﬁelds. They suggested that programing zero\nirrigation\
    \ amounts to non-cropped areas will improve water conservation using precision\
    \ irrigation.\nThey also noted that adjusting spatial water application based\
    \ on the inﬁltration rate of the soil and\nsoil water storage capacity will reduce\
    \ the occurrence of surface runoff and soil erosion. Surface runoff\nand leaching\
    \ were identiﬁed as the major avenues for loss of nutrients from the soil. They\
    \ suggested\nthe occurrence of this can be eliminated by spatial application of\
    \ precise irrigation volumes based on\nthe soil water-holding characteristics.\
    \ They presented several case studies in which the adoption of\nprecision irrigation\
    \ has been demonstrated to enhance the environmental quality of irrigated ﬁelds.\n\
    They concluded that precision irrigation has the capability of improving water\
    \ use efﬁciencies while\nreducing the adverse environmental impacts associated\
    \ with conventional irrigation practices.\nThe results from the above studies\
    \ show that precision irrigation is a proven tool for improving\nsustainability\
    \ in irrigated agriculture in terms of enhancing environmental health. Its economic\n\
    justiﬁcation in terms of signiﬁcant yield improvements and water savings is however\
    \ limited.\nEvans and King [18] suggested that the lack of signiﬁcant improvements\
    \ in yield response when\nemploying precision irrigation may result from the fact\
    \ that the yield response to the water curve\nnear maximum yield (100% ET) is\
    \ almost ﬂat, with small changes in water applied using precision\nirrigation\
    \ having little effect on yield. The majority of these precision irrigation studies\
    \ have used only\nsoil data for irrigation management. The local microclimate\
    \ and crop genetics may however have a\ndirect inﬂuence on the yield response\
    \ of the crops.\nSoil moisture status may also not provide a complete indication\
    \ of crop water status, rather the\nplant may be the best indicator of water availability.\
    \ The decision support systems employed by\ncurrent precision irrigation systems\
    \ assume that the soil–plant–atmosphere system never varies with\ntime. The characteristics\
    \ of the crop, soil and climate vary within the season altering the timing and\n\
    optimal amount of irrigation volume required at any irrigation application event.\n\
    We argue that the incorporation of multiple sensed variables (plant, soil and\
    \ weather data) will\nenhance the possibility of arriving at optimal irrigation\
    \ decisions and hence an improvement in\neconomic outcomes. This should be integrated\
    \ with a decision support system that has the capability\nto adapt to the time-varying\
    \ nature of the cropping system. The decision support system should also\nhave\
    \ the capacity to ‘learn’ in order to improve its performance based on experience\
    \ and a target crop\nproduction function. We discuss how this can be achieved\
    \ by exploiting improvements in monitoring\nand management considerations.\n7.1.\
    \ Monitoring Considerations\nA precision irrigation system is designed to apply\
    \ water at a differential rate in response to the\ntemporal and spatial variation\
    \ in crop water need across a ﬁeld. This process is supported by a number\nof\
    \ sensors providing data to a real-time decision support system. These sensors\
    \ include weather\nstations, soil moisture sensors, environmental sensors, plant\
    \ sensors and thermal sensors which may\nbe integrated into a wireless sensor\
    \ network. A careful design of these sensing systems including a\nconsideration\
    \ of factors affecting their performance is crucial in realizing the goal of improved\
    \ water\nuse through precision irrigation.\nDielectric soil moisture sensors sense\
    \ the water content of the immediate soil in their zone\nof inﬂuence. The zone\
    \ of inﬂuence reported for most commercial dielectric soil moisture sensors\n\
    corresponds to a cylindrical measurement volume of 1.5 L [149]. It is therefore\
    \ important to install\nSustainability 2017, 9, 353\n19 of 29\nthe sensors in\
    \ areas representative of the soil moisture available for plant use. The normal\
    \ practice\nemployed by most users is to place the sensors in the driest regions\
    \ of the ﬁeld or in the regions\ncomprising of a soil proﬁle with the lowest available\
    \ water-holding capacity [150]. Adopting this\napproach will most likely lead\
    \ to wetter regions in the ﬁeld receiving more frequent irrigation which\nwill\
    \ consequently result in overirrigation. A more efﬁcient approach is to deﬁne\
    \ irrigation management\nzones and place a number of sensors in each management\
    \ zone to give the average soil moisture\nestimate. This may however be limited\
    \ by cost.\nA structured installation proﬁle is also necessary in order to capture\
    \ soil water movement and\navailability. It is recommended that sensors should\
    \ be installed at each soil horizon along the plant\nrooting zone [151]. An accepted\
    \ convention is the installation of sensors at three to four depths along\nthe\
    \ rooting zone (1 per 25% of total rooting depth). The sensor located on the uppermost\
    \ soil proﬁle\nis able to detect precipitation events, the sensor in the deepest\
    \ part of the proﬁle is able to detect\ndrainage and the other sensors located\
    \ midway in the soil proﬁle are able to capture soil moisture\ndynamics useful\
    \ in supporting irrigation scheduling decisions [152]. The variation in soil properties\n\
    at the different rooting depths should also be taken into account. With an increasing\
    \ knowledge of\nthe site, it is usually possible to install the sensors at two\
    \ depths and still adequately capture the soil\nmoisture dynamics. The soil moisture\
    \ sensors should also be deployed using soil-speciﬁc calibration\nequations to\
    \ enable accurate estimates of soil moisture content.\nThe actual crop evapotranspiration\
    \ can vary spatially and temporally under conditions of\nunrestricted water supply.\
    \ These variations can be the result of several factors including differences\n\
    in crop genetics, plant density, weed competition, pest intensity, nutrient availability\
    \ and stage of\ngrowth [18]. Addressing the variation in ET across a ﬁeld may\
    \ result in signiﬁcant water savings.\nThe accurate measurement of evapotranspiration\
    \ is crucial in arriving at optimal irrigation\ndecisions [71]. The FAO-PM procedure\
    \ for calculating ET which is applied in many precision irrigation\nsystems relies\
    \ on information from weather stations applied in calculating a reference ET which\
    \ is\nadjusted for speciﬁc crops using crop coefﬁcients. This calculated ET is\
    \ assumed to be uniform for every\npart of the ﬁeld. This will however result\
    \ in the application of inaccurate irrigation volumes to replace\ncrop water use,\
    \ owing to the spatial nature of the actual ET. The application of the NDVI technique\n\
    in determining site-speciﬁc crop coefﬁcients provides a platform for overcoming\
    \ this challenge.\nThe surface renewal analysis procedure also presents a promising\
    \ tool for quantifying the actual\ncrop ET. It is however best suited to homogeneous,\
    \ short and dense canopies.\nPlant-based measurements provide the best indication\
    \ of plant water status as they provide a direct\nmeasure of the plants’ response\
    \ to soil moisture availability and climatic demand. An efficient plant-based\n\
    monitoring system should however respond sensitively to the slightest change in\
    \ water deficits.\nMeasurements of leaf water potential and sap ﬂow are contact\
    \ methods which give direct\ninformation on plant water status but their spatial\
    \ resolution is limited as many samples are required\nto effectively monitor the\
    \ dynamics of ﬁeld-scale plant water status [153]. Infrared thermometry has\n\
    provided a robust platform for assessing plant water status. The (CWSI calculated\
    \ from the infrared\nmeasurements of crop canopy temperature can adequately quantify\
    \ ﬁeld-scale crop water status with\nhigh spatial and temporal resolution. This\
    \ presents a robust and cost-effective tool for use in precision\nirrigation.\
    \ Its application in humid regions is however marred with difﬁculties.\nA systems\
    \ engineering approach can be applied in overcoming the difficulties encountered\
    \ with\napplying the CWSI in humid climates. A mathematical model derived using\
    \ this approach may adequately\nsimulate the real-time dynamics of the baseline\
    \ temperatures required for computing the index.\nA summary of the technology\
    \ gaps and reﬁnements necessary in monitoring tools in order to\nachieve robust\
    \ precision irrigation management is presented in [11]. They include the limited\
    \ volume\nof inﬂuence, high cost and the need to improve the measurement accuracy\
    \ of soil moisture sensors.\nThe reﬁnements recommended include the development\
    \ of low cost soil measurement sensors with\na wider volume of inﬂuence, low cost\
    \ and resilient wireless communication networks able to link\nspatially deployed\
    \ soil moisture sensors and the development of smart calibration software in order\n\
    Sustainability 2017, 9, 353\n20 of 29\nto improve the accuracy of soil moisture\
    \ sensors. The technology gaps identiﬁed in plant sensing\ntechnology include\
    \ the limited knowledge of irrigation thresholds and quantity, and low spatial\n\
    resolution. The reﬁnements recommended include the integration of plant-based\
    \ sensing with soil\nmoisture sensing tools in order to determine irrigation volumes,\
    \ calibration of infra-red thermography\nagainst physiologically explicit plant\
    \ measurements in order to determine critical thresholds and the\ndeployment of\
    \ IR thermography tools on low altitude UAVs to further enhance spatial coverage.\n\
    A combination of multiple sensor inputs deployed at a density that captures spatial\
    \ variability\nis therefore likely to yield the most robust and accurate solution\
    \ for precision irrigation. This will\nensure that the decision support system\
    \ is robust to data availability, gaps and deﬁciencies. This will\ninclude data\
    \ from soil, weather and plant sensors [11]. An important consideration will also\
    \ include\ndeveloping cost-effective and user-friendly tools which will enhance\
    \ the adoption of these adaptive\nsystems by farmers.\n7.2. Management Considerations\n\
    Management can perhaps be viewed as the most vital aspect of a precision irrigation\
    \ system.\nManagement acts as an interface between monitoring and decision support,\
    \ culminating into irrigation\ndecisions. This enables the implementation of vital\
    \ management decisions of when and where to\napply irrigation and also the irrigation\
    \ volumes to be applied. The decision support system is perhaps\nthe management\
    \ backbone of a precision irrigation system and its proper implementation is vital\
    \ for\nimproving sustainability in irrigated agriculture.\nThe adaptive decision\
    \ support tools discussed have the capability of improving crop yield and\nwater\
    \ savings when deployed as part of a precision irrigation system. Smith et al.\
    \ [11] noted that\nthe simulation of adaptive decision support strategies can\
    \ be used in identifying optimal irrigation\nscheduling decisions. A simulation\
    \ tool capable of representing a range of ﬁeld conditions at different\nspatial\
    \ and temporal scales is considered ideal. Such a simulation framework is presented\
    \ in [114].\nModel-based decision support systems using feedback from multiple\
    \ sensors may present a\nplatform for arriving at optimal water applications.\
    \ MPC appears to be ideally suited for achieving the\naim of improving sustainability\
    \ in irrigated agriculture. A decision support system based on MPC\nemploys an\
    \ optimization algorithm to implement an input strategy with the best performance.\n\
    McCarthy et al. [113] noted that MPC implemented for a precision irrigation system\
    \ could involve\nthe use of real-time data from ﬁeld sensors to calibrate a crop\
    \ or soil model and then optimizing this\ncalibrated model to arrive at optimal\
    \ irrigation scheduling decisions. A combination of data from soil\nmoisture sensors,\
    \ thermal sensors and weather sensors would be appropriate for MPC. The data from\n\
    the sensors would most likely be required daily, as measurements are not required\
    \ at a high temporal\nresolution to calibrate the model. A dense deployment of\
    \ these sensors is however required to account\nfor the spatial nature of ﬁeld-scale\
    \ crop water use. The thermal sensors may be mounted on a moving\nplatform for\
    \ spatial data collection across the ﬁeld.\nEquipment availability, irrigation\
    \ system capacity and other operational considerations can be\nincorporated as\
    \ system-level constraints in an MPC-based decision support system. These constraints\n\
    can be considered to arrive at future irrigation scheduling decisions [113].\n\
    MPC uses a model’s simulation to determine the optimum irrigation application\
    \ timing and\nvolume. When combined with a soft sensing system, variables that\
    \ are not directly measured can be\ncontrolled and optimized. This presents a\
    \ possibility of applying decision support systems based on\nMPC in realising\
    \ a desired crop yield and also a water-saving goal [136].\nThere has been considerable\
    \ research into water use procedures that can achieve improved water\nsavings\
    \ in irrigated agriculture, particularly deﬁcit irrigation. Deﬁcit irrigation\
    \ (DI) is an irrigation\nstrategy in which a crop is exposed to a level of water\
    \ stress at certain growth stages in its development\n(regulated deﬁcit irrigation)\
    \ or throughout its growth season. The growth stage in which the plant is\nsubjected\
    \ to water stress is predetermined as a drought tolerant stage. The goal of deﬁcit\
    \ irrigation is\nthat there will be little adverse effect on yield and irrigation\
    \ water can be conserved [154]. Evans and\nSustainability 2017, 9, 353\n21 of\
    \ 29\nKing [18] suggested deﬁcit irrigation as a tool for improving water use\
    \ in precision irrigation. They\nnoted that it can be applied in maximizing net\
    \ returns and conserve large amounts of water in arid\nand semi-arid regions.\n\
    It is however important to investigate the response of different crops to water\
    \ deﬁcits including\ntiming tolerances in order to develop optimal deﬁcit irrigation\
    \ strategies that can be integrated into\nthe precision irrigation decision support\
    \ framework. It is also important to investigate the economics\nof yield reduction\
    \ associated with deﬁcit irrigation strategies. O’Shaughnessy et al. [33] suggested\
    \ that\nimplementing deﬁcit irrigation as part of precision irrigation management\
    \ will involve the continuous\nassessment of crop stress and growth stage throughout\
    \ the growing season. This will be instrumental in\navoiding temporary severe\
    \ stress which could result in uneconomic reduction in crop yield or quality.\n\
    The high cost of the component technologies of precision irrigation including\
    \ soil, plant and\nweather sensors, decision support systems and variable rate\
    \ water application systems is presently\na constraint to the wide-scale adoption\
    \ of this technology by farmers [148]. The minimal yield\nimprovements and water\
    \ savings currently achieved through ﬁeld-scale precision irrigation may\nnot\
    \ justify the initial capital investment required for its adoption. As fresh water\
    \ resources become\nscarcer, it is expected that more premium will be placed on\
    \ water abstracted for irrigated agriculture.\nRegulatory agencies may also require\
    \ farmers to continuously demonstrate the efﬁcient use of water.\nThese factors\
    \ may promote the adoption of precision irrigation by farmers [155].\nA conceptual\
    \ model-based decision support system that uses the full range of plant, weather\
    \ and\nsoil data for irrigation management is illustrated in Figure 1. This is\
    \ currently being developed by the\nauthors. It involves the integration of various\
    \ sensing systems, dynamic modeling, machine learning\nand model predictive control\
    \ into an adaptive decision support system for precision irrigation.\nSustainability\
    \ 2017, 9, 353  \n21 of 29 \ncontinuous assessment of crop stress and growth stage\
    \ throughout the growing season. This will be \ninstrumental in avoiding temporary\
    \ severe stress which could result in uneconomic reduction in crop \nyield or\
    \ quality. \nThe high cost of the component technologies of precision irrigation\
    \ including soil, plant and \nweather sensors, decision support systems and variable\
    \ rate water application systems is presently a \nconstraint to the wide-scale\
    \ adoption of this technology by farmers [148]. The minimal yield \nimprovements\
    \ and water savings currently achieved through field-scale precision irrigation\
    \ may not \njustify the initial capital investment required for its adoption.\
    \ As fresh water resources become \nscarcer, it is expected that more premium\
    \ will be placed on water abstracted for irrigated agriculture. \nRegulatory agencies\
    \ may also require farmers to continuously demonstrate the efficient use of water.\
    \ \nThese factors may promote the adoption of precision irrigation by farmers\
    \ [155]. \nA conceptual model-based decision support system that uses the full\
    \ range of plant, weather \nand soil data for irrigation management is illustrated\
    \ in Figure 1. This is currently being developed \nby the authors. It involves\
    \ the integration of various sensing systems, dynamic modeling, machine \nlearning\
    \ and model predictive control into an adaptive decision support system for precision\
    \ \nirrigation.  \n \n \nFigure 1. Conceptual model-based decision support system\
    \ for precision irrigation. Elements in blue \nrepresent novel ideas from the\
    \ Authors and elements in orange are from the decision support system \npresented\
    \ in McCarthy et al. [114]. \nFigure 1. Conceptual model-based decision support\
    \ system for precision irrigation. Elements in blue\nrepresent novel ideas from\
    \ the Authors and elements in orange are from the decision support system\npresented\
    \ in McCarthy et al. [114].\nSustainability 2017, 9, 353\n22 of 29\n8. Conclusions\n\
    Technological innovations that can improve sustainability in irrigated agriculture\
    \ form an\nimportant vehicle for actualizing the optimal use of limited water\
    \ resources. Precision irrigation\nhas been demonstrated as such an innovation,\
    \ though presently the economic beneﬁt related to\nthe adoption of this technology\
    \ at ﬁeld-scale crop production is minimal.\nThis is because the\npotential for\
    \ yield improvements and water savings may not cover the cost of technology required\
    \ for\nits implementation.\nThe application of adaptive control techniques to\
    \ irrigation decision support and improvements\nin monitoring tools has the capability\
    \ of dealing with the time-varying and stochastic nature of the\nsoil–plant–atmosphere\
    \ system while also considering operational limitations in arriving at optimal\n\
    irrigation decisions. This ultimately presents a platform for actualizing the\
    \ environmental and\neconomic goals of sustainability in irrigated agriculture.\n\
    A robust design of monitoring tools including a proper combination of soil, weather\
    \ and plant\nsensors is however vital for the proper operation of an adaptive\
    \ decision support system. The decision\nsupport system should be able to account\
    \ for the varying crop water requirements within season as a\nresult of both biotic\
    \ and abiotic factors. The decision support system should also consider agronomic\n\
    objectives to ensure the optimal irrigation strategy is delivered by the precision\
    \ irrigation system.\nThe high cost of sensors and the requirement for dense deployment\
    \ in order to obtain data at\nhigh spatial resolutions is presently a constraint.\
    \ The large dataset required for the calibration of crop\nsimulation models is\
    \ also another signiﬁcant problem. Future research needs include the development\n\
    of cost-effective soil moisture sensors with wider spheres of inﬂuence, identiﬁcation\
    \ of irrigation\nthresholds for plant-based sensors and the development of self-learning\
    \ crop simulation models that\nare able to infer relationships from a limited\
    \ data set. The ﬁeld evaluation of adaptive decision support\nsystems would also\
    \ be beneﬁcial in quantifying their sustainability improvement potential.\nAcknowledgments:\
    \ The authors wish to acknowledge John Oldacre Foundation for funding this research\
    \ project.\nThe reviewers are also acknowledged for their insight on improving\
    \ this article.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nKnox, J.W.; Kay, M.G.; Weatherhead, E.K. Water regulation, crop\
    \ production, and agricultural water\nmanagement-Understanding farmer perspectives\
    \ on irrigation efﬁciency. Agric. Water Manag. 2012, 108, 3–8.\n[CrossRef]\n2.\n\
    Hedley, C.B.; Knox, J.W.; Raine, S.R.; Smith, R. Water: Advanced Irrigation Technologies.\
    \ Encycl. Agric.\nFood Syst. 2014, 5, 378–406.\n3.\nTurral, H.; Svendsen, M.;\
    \ Faures, J.M. Investing in irrigation: Reviewing the past and looking to the\
    \ future.\nAgric. Water Manag. 2010, 97, 551–560. [CrossRef]\n4.\nDöll, P. Impact\
    \ of climate change and variability on irrigation requirements: A global perspective.\
    \ Clim. Chang.\n2002, 54, 269–293. [CrossRef]\n5.\nPostel, S.L. Water for Food\
    \ Production: Will There Be Enough in 2025? crucial to meeting future food needs.\n\
    Bioscience 1998, 48, 629–637. [CrossRef]\n6.\nSarma, A. Precision irrigation-a\
    \ tool for sustainable management of irrigation water. In Proceedings\nof the\
    \ Civil Engineering for Sustainable Development-Opportunities and Challenges,\
    \ Guwahati, India,\n19–21 December 2016.\n7.\nDe Fraiture, C.; Wichelns, D. Satisfying\
    \ future water demands for agriculture. Agric. Water Manag. 2010, 97,\n502–511.\
    \ [CrossRef]\n8.\nDaccache, A.; Knox, J.W.; Weatherhead, E.K.; Daneshkhah, A.;\
    \ Hess, T.M. Implementing precision irrigation\nin a humid climate—Recent experiences\
    \ and on-going challenges. Agric. Water Manag. 2014, 147, 135–143.\n[CrossRef]\n\
    Sustainability 2017, 9, 353\n23 of 29\n9.\nAl-Karadsheh, E. Precision Irrigation:\
    \ New strategy irrigation water management. In Proceedingd of the\nConference\
    \ on International Agricultural Research for Development, Deutscher Tropentag,\
    \ Wiltzenhausen,\nGermany, 9–11 October 2002; pp. 1–7.\n10.\nRaine, S.R.; Meyer,\
    \ W.S.; Rassam, D.W.; Hutson, J.L.; Cook, F.J. Soil-water and solute movement\
    \ under\nprecision irrigation: Knowledge gaps for managing sustainable root zones.\
    \ Irrig. Sci. 2007, 26, 91–100.\n[CrossRef]\n11.\nSmith, R.; Baillie, J.; McCarthy,\
    \ A.; Raine, S.R.; Baillie, C.P. Review of Precision Irrigation Technologies and\
    \ Their\nApplication; University of Southern Queensland: Darling Heights, Australia,\
    \ 2010.\n12.\nShah, N.G.; Das, I. Precision Irrigation: Sensor Network Based Irrigation.\
    \ In Problems, Perspectives and\nChallenges of Agricultural Water Management;\
    \ InTech: Rijeka, Croatia, 2012; pp. 217–232.\n13.\nPierce, F.J. Precision Irrigation.\
    \ Landbauforsch SH 2010, 340, 45–56.\n14.\nDeJonge, K.C.; Kaleita, A.L.; Thorp,\
    \ K.R. Simulating the effects of spatially variable irrigation on corn yields,\n\
    costs, and revenue in Iowa. Agric. Water Manag. 2007, 92, 99–109. [CrossRef]\n\
    15.\nAli, M.H.; Talukder, M.S.U. Methods or Approaches of Irrigation Scheduling—An\
    \ Overview. J. Inst. Eng.\n2001, 28, 11–23.\n16.\nHornbuckle, J.W.; Car, N.J.;\
    \ Christen, E.W.; Stein, T.; Williamson, B. IrriSatSMS Irrigation Water Management\
    \ by\nSatellite and SMS—A Utilisation Framework; CRC for Irrigation Futures and\
    \ CSIRO: Grifﬁth, Australia, 2009.\n17.\nRhodig, L.; Hillyer, C. Energy and Water\
    \ Savings from Optimal Irrigation Management and Precision\nApplication. In Proceedings\
    \ of the 2013 Summer Study on Energy Efﬁciency in Industry, Niagara Falls, NY,\n\
    USA, 23–26 July 2013; pp. 1–12.\n18.\nEvans, R.G.; King, B.A. Site-speciﬁc sprinkler\
    \ irrigation in a water-limtied future. Adv. Irrig. 2012, 55,\n493–504.\n19.\n\
    Smith, R.J.; Baillie, J.N.; Futures, I. Deﬁning precision irrigation: A new approach\
    \ to irrigation management.\nIn Proceedings of the Irrigation and Drainage Conference\
    \ 2009, Swan Hill, Australia, 18–21 October 2009;\npp. 18–21.\n20.\nHedley, C.;\
    \ Yule, I. Soil water status mapping and two variable-rate irrigation scenarios.\
    \ Precis. Agric. 2009,\n10, 342–355. [CrossRef]\n21.\nHedley, C.B.; Yule, I.J.\
    \ A method for spatial prediction of daily soil water status for precise irrigation\n\
    scheduling. Agric. Water Manag. 2009, 96, 1737–1745. [CrossRef]\n22.\nMisra, R.K.;\
    \ Padhi, J. Assessing ﬁeld-scale soil water distribution with electromagnetic\
    \ induction method.\nJ. Hydrol. 2014, 516, 200–209. [CrossRef]\n23.\nKuhn, J.;\
    \ Brenning, A.; Wehrhan, M.; Koszinski, S.; Sommer, M. Interpretation of electrical\
    \ conductivity\npatterns by soil properties and geological maps for precision\
    \ agriculture. Precis. Agric. 2009, 10, 490–507.\n[CrossRef]\n24.\nThorp, K.R.;\
    \ DeJonge, K.C.; Kaleita, A.L.; Batchelor, W.D.; Paz, J.O. Methodology for the\
    \ use of DSSAT\nmodels for precision agriculture decision support. Comput. Electron.\
    \ Agric. 2008, 64, 276–285. [CrossRef]\n25.\nLund, E.D.; Christy, C.D.; Drummond,\
    \ P.E. Using yield and soil electrical conductivity (EC) maps to derive\ncrop\
    \ production performance information. In Proceedings of the 5th International\
    \ Conference on Precision\nAgriculture, Bloomington, MN, USA, 16–19 July 2010;\
    \ pp. 1–10.\n26.\nIrmak, A.; Jones, J.W.; Batchelor, W.D.; Paz, J.O. Estimating\
    \ Spatially Variable Soil Properties for Application\nof Crop Models in Precision\
    \ Farming. Trans. ASAE 2001, 44, 1343–1353. [CrossRef]\n27.\nMartínez-Casasnovas,\
    \ J.A.; Bigorda, D.V.; Ramos, M.C. Irrigation management zones for precision viticulture\n\
    according to intra-ﬁeld variability. In Proceedings of the EFITA Conference, Wageningen,\
    \ The Netherlands,\n6–8 July 2009; Bregt, A., Wolfert, S., Wien, J.E., Lokhorst,\
    \ C., Eds.; Wageningen Acad. Publ.: Wageningen,\nThe Netherlands, 2009.\n28.\n\
    Jones, H.G.; Leinonen, I. Thermal Imaging for the Study of Plant Water Relations.\
    \ J. Agric. Meteorol. 2003, 59,\n205–217. [CrossRef]\n29.\nJackson, R.D.; Idso,\
    \ S.B.; Reginato, R.J.; Pinter, P.J. Canopy temperature as a crop water stress\
    \ indicator.\nWater Resour. Res. 1981, 17, 1133–1138. [CrossRef]\n30.\nShaughnessy,\
    \ S.A.O.; Evett, S.R.; Colaizzi, P.D. Infrared Thermometry as a Tool for Site-Speciﬁc\
    \ Irrigation\nScheduling. In Proceedings of the 26th Annual Central Plains Irrigation\
    \ Conference, Burlington, CO, USA,\n25–26 February 2014; pp. 136–145.\nSustainability\
    \ 2017, 9, 353\n24 of 29\n31.\nEvett, S.R.; Colaizzi, P.D.; Howell, T.A. Wireless\
    \ Sensor Network Effectively Controls Center Pivot Irrigation\nof Sorghum. Appl.\
    \ Eng. Agric. 2013, 29, 853–864.\n32.\nRaine, S.; Mccarthy, A.C. Managing spatial\
    \ and temporal variability in irrigated agriculture through adaptive\ncontrol.\
    \ Aust. J. Multi-Disciplinary Eng. 2009, 7, 79–90.\n33.\nO’Shaughnessy, S.A.;\
    \ Rush, C. Precision Agriculture: Irrigation. Encycl. Agric. Food Syst. 2014,\
    \ 4, 521–535.\n34.\nEvans, R.G.; Iversen, W.M.; Kim, Y. Integrated Decision Support,\
    \ Sensor Networks, and Adaptive Control\nfor Wireless Site-Speciﬁc Sprinkler Irrigation.\
    \ Adv. Irrig. 2012, 28, 377–387.\n35.\nHezarjaribi, A. Site-Speciﬁc Irrigation:\
    \ Improvement of Application Map and a Dynamic Steering of Modiﬁed Centre\nPivot\
    \ Irrigation System; Federal Agricultural Research Centrer: Braunschweig, Germany,\
    \ 2008.\n36.\nCoates, R.W.; Delwiche, M.J. Site-speciﬁc water and chemical application\
    \ by wireless valve controller\nnetwork. Am. Soc. Agric. Biol. Eng. Annu. Int.\
    \ Meet. 2008, 8, 5032–5052.\n37.\nMiranda, F.R.; Yoder, R.E.; Wilkerson, J.B.;\
    \ Odhiambo, L.O. An autonomous controller for site-speciﬁc\nmanagement of ﬁxed\
    \ irrigation systems. Comput. Electron. Agric. 2005, 48, 183–197. [CrossRef]\n\
    38.\nGoumopoulos, C.; O’Flynn, B.; Kameas, A. Automated zone-speciﬁc irrigation\
    \ with wireless sensor/actuator\nnetwork and adaptable decision support. Comput.\
    \ Electron. Agric. 2014, 105, 20–33. [CrossRef]\n39.\nCoates, R.W.; Delwiche,\
    \ M.J.; Broad, A.; Holler, M. Wireless sensor network with irrigation valve control.\n\
    Comput. Electron. Agric. 2013, 96, 13–22. [CrossRef]\n40.\nSteele, D.D.; Stegman,\
    \ E.C.; Gregor, B.L. Field Comparison of Irrigation Scheduling Methods for Corn.\n\
    Trans. Asae 1994, 37, 1197–1203. [CrossRef]\n41.\nAllen, R.; Pereira, L.S.; Raes,\
    \ D.; Smith, M. FAO Irrigation and Drainage Paper No. 56; Food and Agriculture\n\
    Organization of the United Nations: Rome, Italy, 1998; pp. 97–156.\n42.\nLeib,\
    \ B.G.; Hattendorf, M.; Elliott, T.; Matthews, G. Adoption and adaptation of scientiﬁc\
    \ irrigation\nscheduling: Trends from Washington, USA as of 1998. Agric. Water\
    \ Manag. 2002, 55, 105–120. [CrossRef]\n43.\nPardossi, A.; Incrocci, L. Traditional\
    \ and New Approaches to Irrigation Scheduling in Vegetable Crops.\nHorttechnology\
    \ 2011, 21, 309–313.\n44.\nMulla, D.J. Twenty ﬁve years of remote sensing in precision\
    \ agriculture: Key advances and remaining\nknowledge gaps. Biosyst. Eng. 2013,\
    \ 114, 358–371. [CrossRef]\n45.\nVerstraeten, W.W.; Veroustraete, F.; Feyen, J.\
    \ Assessment of Evapotranspiration and Soil Moisture Content\nAcross Different\
    \ Scales of Observation. Sensors 2008, 8, 70–117. [CrossRef] [PubMed]\n46.\nJones,\
    \ H.G.; Schoﬁeld, P. Thermal and other remote sensing of plant stress. Gen. Appl.\
    \ Plant Physiol. 2008, 34,\n19–32.\n47.\nBellingham, B.K. Method for Irrigation\
    \ Scheduling Based on Soil Moisture Data Acquisition. In Proceedings\nof the 2009\
    \ Irrigation District Conference, Salt Lake City, UT, USA, 4–7 November 2009;\
    \ pp. 1–17.\n48.\nVereecken, H.; Huisman, J.A.; Pachepsky, Y.; Montzka, C.; van\
    \ der Kruk, J.; Bogena, H.; Weihermüller, L.;\nHerbst, M.; Martinez, G.; Vanderborght,\
    \ J. On the spatio-temporal dynamics of soil moisture at the ﬁeld\nscale. J. Hydrol.\
    \ 2014, 516, 76–96. [CrossRef]\n49.\nRomano, N.; D’Urso, G.; Severino, G.; Chirico,\
    \ G.B.; Palladino, M.; Majone, B.; Viani, F.; Filippi, E.; Bellin, A.;\nMassa,\
    \ A.; et al. Wireless Sensor Network Deployment for Monitoring Soil Moisture Dynamics\
    \ at the Field\nScale. Procedia Environ. Sci. 2013, 19, 426–435.\n50.\nRomano,\
    \ N. Soil moisture at local scale: Measurements and simulations. J. Hydrol. 2014,\
    \ 516, 6–20. [CrossRef]\n51.\nZhu, Q.; Liao, K.; Xu, Y.; Yang, G.; Wu, S.; Zhou,\
    \ S. Monitoring and prediction of soil moisture\nspatial–temporal variations from\
    \ a hydropedological perspective: A review. Soil Res. 2012, 50, 625–637.\n[CrossRef]\n\
    52.\nPhillips, A.J.; Newlands, N.K.; Liang, S.H.L.; Ellert, B.H. Integrated sensing\
    \ of soil moisture at the ﬁeld-scale:\nMeasuring, modeling and sharing for improved\
    \ agricultural decision support. Comput. Electron. Agric. 2014,\n107, 73–88. [CrossRef]\n\
    53.\nTopp, G.C. State of the art of measuring soil water content. Hydrol. Process.\
    \ 2003, 17, 2993–2996. [CrossRef]\n54.\nInternational Atomic Energy Agency (IAEA).\
    \ Field Estimation of Soil Water Content: A Practical Guide to\nMethods, Instrumentation\
    \ and Sensor Technology; IAEA: Vienna, Austria, 2008.\n55.\nGeesing, D.; Bachmaier,\
    \ M.; Schmidhalter, U. Field calibration of a capacitance soil water probe in\n\
    heterogeneous ﬁelds. Aust. J. Soil Res. 2004, 42, 289–299. [CrossRef]\n56.\nAdeyemi,\
    \ O.; Norton, T.; Grove, I.; Peets, S. Performance Evaluation of Three Newly Developed\
    \ Soil Moisture\nSensors. In Proceedings of the CIGR-AgEng Conference, Aarhus,\
    \ Denmark, 26–29 June 2016; pp. 1–10.\nSustainability 2017, 9, 353\n25 of 29\n\
    57.\nRowlandson, T.L.; Berg, A.A.; Bullock, P.R.; Ojo, E.R.; McNairn, H.; Wiseman,\
    \ G.; Cosh, M.H. Evaluation of\nseveral calibration procedures for a portable\
    \ soil moisture sensor. J. Hydrol. 2013, 498, 335–344. [CrossRef]\n58.\nSaito,\
    \ T.; Fujimaki, H.; Yasuda, H.; Inoue, M. Empirical Temperature Calibration of\
    \ Capacitance Probes to\nMeasure Soil Water. Soil Sci. Soc. Am. J. 2009, 73, 1931–1937.\
    \ [CrossRef]\n59.\nNemali, K.S.; Montesano, F.; Dove, S.K.; van Iersel, M.W. Calibration\
    \ and performance of moisture sensors\nin soilless substrates: ECH2O and Theta\
    \ probes. Sci. Hortic. 2007, 112, 227–234. [CrossRef]\n60.\nHedley, C.B.; Roudier,\
    \ P.; Yule, I.J.; Ekanayake, J.; Bradbury, S. Soil water status and water table\
    \ depth\nmodelling using electromagnetic surveys for precision irrigation scheduling.\
    \ Geoderma 2013, 199, 22–29.\n[CrossRef]\n61.\nPan, L.; Adamchuk, V.I.; Martin,\
    \ D.L.; Schroeder, M.A.; Ferguson, R.B. Analysis of soil water availability by\n\
    integrating spatial and temporal sensor-based data. Precis. Agric. 2013, 14, 414–433.\
    \ [CrossRef]\n62.\nKelly, B.F.J.; Acworth, R.I.; Greve, A.K. Better placement\
    \ of soil moisture point measurements guided by 2D\nresistivity tomography for\
    \ improved irrigation scheduling. Soil Res. 2011, 49, 504–512. [CrossRef]\n63.\n\
    Bogena, H.R.; Huisman, J.A.; Oberdörster, C.; Vereecken, H. Evaluation of a low-cost\
    \ soil water content\nsensor for wireless network applications. J. Hydrol. 2007,\
    \ 344, 32–42. [CrossRef]\n64.\nPereira, L.S.; Allen, R.G.; Smith, M.; Raes, D.\
    \ Crop evapotranspiration estimation with FAO56: Past and\nfuture. Agric. Water\
    \ Manag. 2014, 147, 4–20. [CrossRef]\n65.\nPereira, L.S.; Perrier, A.; Allen,\
    \ R.G.; Alves, I. Evapotranspiration: Review of concepts and future trends.\n\
    J. Irrig. Drain. 1999, 125, 45–51. [CrossRef]\n66.\nHowell, T.; Evett, S. The\
    \ Penman-Monteith Method; USDA-Agricultural Research Service Conservation &\n\
    Production Research Laboratory: Bushland, TX, USA, 2004.\n67.\nFarg, E.; Arafat,\
    \ S.M.; El-Wahed, M.S.A.; El-Gindy, A.M. Estimation of Evapotranspiration ET c\
    \ and Crop\nCoefﬁcient K c of Wheat, in south Nile Delta of Egypt Using integrated\
    \ FAO-56 approach and remote sensing\ndata. Egypt. J. Remote Sens. Sp. Sci. 2012,\
    \ 15, 83–89.\n68.\nHunsaker, D.J.; Pinter, P.J.; Barnes, E.M.; Kimball, B.A. Estimating\
    \ cotton evapotranspiration crop coefﬁcients\nwith a multispectral vegetation\
    \ index. Irrig. Sci. 2003, 22, 95–104. [CrossRef]\n69.\nHunsaker, D.; Barnes,\
    \ E.; Clarke, T.; Fitzgerald, G.; Pinter, P., Jr. Cotton irrigation scheduling\
    \ using remotely\nsensed and FAO-56 basal crop coefﬁcients. Trans. ASAE 2005,\
    \ 48, 1395–1407. [CrossRef]\n70.\nSingh, S.K.; Dutta, S.; Dharaiya, N. Estimation\
    \ of Crop Evapotranspiration of Cotton using Remote Sensing\nTechnique. Int. J.\
    \ Environ. Eng. Manag. 2013, 4, 523–528.\n71.\nMengistu, M.; Savage, M. Surface\
    \ renewal method for estimating sensible heat ﬂux. Water SA 2010, 36, 9–18.\n\
    [CrossRef]\n72.\nShapland, T.M.; Snyder, R.L.; Smart, D.R.; Williams, L.E. Estimation\
    \ of actual evapotranspiration in\nwinegrape vineyards located on hillside terrain\
    \ using surface renewal analysis. Irrig. Sci. 2012, 30, 471–484.\n[CrossRef]\n\
    73.\nCastellví, F.; Snyder, R.L. On the performance of surface renewal analysis\
    \ to estimate sensible heat ﬂux over\ntwo growing rice ﬁelds under the inﬂuence\
    \ of regional advection. J. Hydrol. 2009, 375, 546–553. [CrossRef]\n74.\nCastellví,\
    \ F.; Snyder, R.L. A comparison between latent heat ﬂuxes over grass using a weighing\
    \ lysimeter\nand surface renewal analysis. J. Hydrol. 2010, 381, 213–220. [CrossRef]\n\
    75.\nCastellvi, F. Combining surface renewal analysis and similarity theory: A\
    \ new approach for estimating\nsensible heat ﬂux. Water Resour. Res. 2004, 40.\
    \ [CrossRef]\n76.\nRosa, R.; Tanny, J. Surface renewal and eddy covariance measurements\
    \ of sensible and latent heat ﬂuxes of\ncotton during two growing seasons. Biosyst.\
    \ Eng. 2015, 136, 149–161. [CrossRef]\n77.\nRosa, R.; Dicken, U.; Tanny, J. Estimating\
    \ evapotranspiration from processing tomato using the surface\nrenewal technique.\
    \ Biosyst. Eng. 2013, 114, 406–413. [CrossRef]\n78.\nJones, H.G. Plants and Microclimate,\
    \ 3rd ed.; Cambridge University Press: New York, NY, USA, 2014.\n79.\nJones, H.G.\
    \ Irrigation scheduling: Advantages and pitfalls of plant-based methods. J. Exp.\
    \ Bot. 2004, 55,\n2427–2436. [CrossRef] [PubMed]\n80.\nJones, H.G. Irrigation\
    \ Scheduling—Comparison of soil, plant and atmosphere monitoring approaches.\n\
    Acta Hortic. 2008, 792, 391–403. [CrossRef]\nSustainability 2017, 9, 353\n26 of\
    \ 29\n81.\nZimmermann, U.; Bitter, R.; Marchiori, P.E.R.; Rüger, S.; Ehrenberger,\
    \ W.; Sukhorukov, V.L.; Schüttler, A.;\nRibeiro, R.V. A non-invasive plant-based\
    \ probe for continuous monitoring of water stress in real time: A new\ntool for\
    \ irrigation scheduling and deeper insight into drought and salinity stress physiology.\
    \ Theor. Exp.\nPlant Physiol. 2013, 25, 2–11. [CrossRef]\n82.\nRuger, S.; Netzer,\
    \ Y.; Westhoff, M.; Zimmermann, D.; Reuss, R.; Ovadiya, S.; Gessner, P.; Zimmermann,\
    \ G.;\nSchwartz, A.; Zimmermann, U. Remote monitoring of leaf turgor pressure\
    \ of grapevines subjected to\ndifferent irrigation treatments using the leaf patch\
    \ clamp pressure probe. Aust. J. Grape Wine Res. 2010, 16,\n405–412. [CrossRef]\n\
    83.\nSeelig, H.D.; Stoner, R.J.; Linden, J.C. Irrigation control of cowpea plants\
    \ using the measurement of leaf\nthickness under greenhouse conditions. Irrig.\
    \ Sci. 2012, 30, 247–257. [CrossRef]\n84.\nConejero, W.; Mellisho, C.D.; Ortuño,\
    \ M.F.; Moriana, A.; Moreno, F.; Torrecillas, A. Using trunk diameter\nsensors\
    \ for regulated deﬁcit irrigation scheduling in early maturing peach trees. Environ.\
    \ Exp. Bot. 2011, 71,\n409–415. [CrossRef]\n85.\nLivellara, N.; Saavedra, F.;\
    \ Salgado, E. Plant based indicators for irrigation scheduling in young cherry\
    \ trees.\nAgric. Water Manag. 2011, 98, 684–690. [CrossRef]\n86.\nShifeng, Y.;\
    \ Ye, Y.; Jiankai, L.; Xiuqing, W. Non-destructive Measurement on Crop Water Stress\
    \ Based on\nMicrocomputer. In Proceedings of the 21st Century Watershed Technology:\
    \ Improving Water Quality and\nEnvironment Conference, Concepcion, Chile, 29 March–3\
    \ April 2008.\n87.\nChabot, R.; Bouarfa, S.; Zimmer, D.; Chaumont, C.; Moreau,\
    \ S. Evaluation of the sap ﬂow determined with\na heat balance method to measure\
    \ the transpiration of a sugarcane canopy. Agric. Water Manag. 2005, 75,\n10–24.\
    \ [CrossRef]\n88.\nUddin, J.; Smith, R.; Hancock, N.; Foley, J. Evaluation of\
    \ Sap Flow Sensors to Measure the Transpiration Rate\nof Plants during Canopy\
    \ Wetting and Drying. J. Agric. Stud. 2014, 2, 105. [CrossRef]\n89.\nÇolak, Y.B.;\
    \ Yazar, A.; Çolak, ˙I.; Akça, H.; Duraktekin, G. Evaluation of Crop Water Stress\
    \ Index (CWSI)\nfor Eggplant under Varying Irrigation Regimes Using Surface and\
    \ Subsurface Drip Systems. Agric. Agric.\nSci. Procedia 2015, 4, 372–382. [CrossRef]\n\
    90.\nMeron, M.; Tsipris, J.; Orlov, V.; Alchanatis, V.; Cohen, Y. Crop water stress\
    \ mapping for site-speciﬁc irrigation\nby thermal imagery and artiﬁcial reference\
    \ surfaces. Precis. Agric. 2010, 11, 148–162. [CrossRef]\n91.\nBlonquist, J.M.;\
    \ Norman, J.M.; Bugbee, B. Automated measurement of canopy stomatal conductance\
    \ based\non infrared temperature. Agric. For. Meteorol. 2009, 149, 2183–2197.\
    \ [CrossRef]\n92.\nLeinonen, I.; Jones, H.G. Combining thermal and visible imagery\
    \ for estimating canopy temperature and\nidentifying plant stress. J. Exp. Bot.\
    \ 2004, 55, 1423–1431. [CrossRef] [PubMed]\n93.\nErdem, Y.; Arin, L.; Erdem, T.;\
    \ Polat, S.; Deveci, M.; Okursoy, H.; Gülta¸s, H.T. Crop water stress index for\n\
    assessing irrigation scheduling of drip irrigated broccoli (Brassica oleracea\
    \ L. var. italica). Agric. Water Manag.\n2010, 98, 148–156. [CrossRef]\n94.\n\
    Sankaran, S.; Mishra, A.; Ehsani, R.; Davis, C. A review of advanced techniques\
    \ for detecting plant diseases.\nComput. Electron. Agric. 2010, 72, 1–13. [CrossRef]\n\
    95.\nGarcia-Ruiz, F.; Sankaran, S.; Maja, J.M.; Lee, W.S.; Rasmussen, J.; Ehsani,\
    \ R. Comparison of two aerial\nimaging platforms for identiﬁcation of Huanglongbing-infected\
    \ citrus trees. Comput. Electron. Agric. 2013,\n91, 106–115. [CrossRef]\n96.\n\
    Yang, Z.; Rao, M.N.; Elliott, N.C.; Kindler, S.D.; Popham, T.W. Differentiating\
    \ stress induced by greenbugs\nand Russian wheat aphids in wheat using remote\
    \ sensing. Comput. Electron. Agric. 2009, 67, 64–70. [CrossRef]\n97.\nJones, H.G.;\
    \ Aikman, D.; McBurney, T.A. Improvements to infra-red thermometry for irrigation\
    \ scheduling\nin humid climates. Acta Hortic. 1997, 449, 259–265. [CrossRef]\n\
    98.\nJones, H.G. Use of thermography for quantitative studies of spatial and temporal\
    \ variation of stomatal\nconductance over leaf surfaces. Plant Cell Environ. 1999,\
    \ 22, 1043–1055. [CrossRef]\n99.\nJones, H.G. Use of infrared thermometry for\
    \ estimation of stomatal conductance as a possible aid to irrigation\nscheduling.\
    \ Agric. For. Meteorol. 1999, 95, 139–149. [CrossRef]\n100. Gonzalez-Dugo, V.;\
    \ Zarco-Tejada, P.; Nicolás, E.; Nortes, P.A.; Alarcón, J.J.; Intrigliolo, D.S.;\
    \ Fereres, E. Using\nhigh resolution UAV thermal imagery to assess the variability\
    \ in the water status of ﬁve fruit tree species\nwithin a commercial orchard.\
    \ Precis. Agric. 2013, 14, 660–678. [CrossRef]\nSustainability 2017, 9, 353\n\
    27 of 29\n101. Lozoya, C.; Mendoza, C.; Mejía, L.; Quintana, J.; Mendoza, G.;\
    \ Bustillos, M.; Arras, O.; Solís, L. Model\npredictive control for closed-loop\
    \ irrigation. IFAC Proc. Vol. (IFAC-PapersOnline) 2014, 19, 4429–4434.\n[CrossRef]\n\
    102. Mareels, I.; Weyer, E.; Ooi, S.K.; Cantoni, M.; Li, Y.; Nair, G. Systems\
    \ engineering for irrigation systems:\nSuccesses and challenges. Annu. Rev. Control\
    \ 2005, 29, 191–204. [CrossRef]\n103. Vellidis, G.; Tucker, M.; Perry, C.; Kvien,\
    \ C.; Bednarz, C. A real-time wireless smart sensor array for scheduling\nirrigation.\
    \ Comput. Electron. Agric. 2008, 61, 44–50. [CrossRef]\n104. Liu, H.; Yang, H.;\
    \ Zheng, J.; Jia, D.; Wang, J.; Li, Y.; Huang, G. Irrigation scheduling strategies\
    \ based on\nsoil matric potential on yield and fruit quality of mulched-drip irrigated\
    \ chili pepper in Northwest China.\nAgric. Water Manag. 2012, 115, 232–241. [CrossRef]\n\
    105. Dabach, S.; Lazarovitch, N.; Šim ˚unek, J.; Shani, U. Numerical investigation\
    \ of irrigation scheduling based on\nsoil water status. Irrig. Sci. 2013, 31,\
    \ 27–36. [CrossRef]\n106. Erdem, Y.; Erdem, T.; Orta, A.H.; Okursoy, H. Irrigation\
    \ Scheduling for Watermelon With Crop Water Stress\nIndex (CWSI). J. Cent. Eur.\
    \ Agric. 2005, 6, 449–460.\n107. Shaughnessy, S.A.; Evett, S.R.; Colaizzi, P.D.;\
    \ Howell, T.A. A crop water stress index and time threshold for\nautomatic irrigation\
    \ scheduling of grain sorghum. Agric. Water Manag. 2012, 107, 122–132. [CrossRef]\n\
    108. McCarthy, A.C.; Hancock, N.H.; Raine, S.R. Development and simulation of\
    \ sensor-based irrigation control\nstrategies for cotton using the VARIwise simulation\
    \ framework. Comput. Electron. Agric. 2014, 101, 148–162.\n[CrossRef]\n109. Bennis,\
    \ N.; Duplaix, J.; Enéa, G.; Haloua, M.; Youlal, H. Greenhouse climate modelling\
    \ and robust control.\nComput. Electron. Agric. 2008, 61, 96–107. [CrossRef]\n\
    110. Belayneh, B.E.; Lea-Cox, J.D.; Lichtenberg, E. Costs and beneﬁts of implementing\
    \ sensor-controlled irrigation\nin a commercial pot-in-pot container nursery.\
    \ Horttechnology 2013, 23, 760–769.\n111. Chappell, M.; Dove, S.K.; van Iersel,\
    \ M.W.; Thomas, P.A.; Ruter, J. Implementation of wireless sensor\nnetworks for\
    \ irrigation control in three container nurseries. Horttechnology 2013, 23, 747–753.\n\
    112. Saavoss, M.; Majsztrik, J.; Belayneh, B.; Lea-Cox, J.; Lichtenberg, E. Yield,\
    \ quality and proﬁtability of\nsensor-controlled irrigation: A case study of snapdragon\
    \ (Antirrhinum majus L.) production. Irrig. Sci. 2016,\n34, 409–420. [CrossRef]\n\
    113. McCarthy, A.C.; Hancock, N.H.; Raine, S.R. Advanced process control of irrigation:\
    \ The current state and an\nanalysis to aid future development. Irrig. Sci. 2013,\
    \ 31, 183–192. [CrossRef]\n114. McCarthy, A.C.; Hancock, N.H.; Raine, S.R. VARIwise:\
    \ A general-purpose adaptive control simulation\nframework for spatially and temporally\
    \ varied irrigation at sub-ﬁeld scale. Comput. Electron. Agric. 2010, 70,\n117–128.\
    \ [CrossRef]\n115. Delgoda, D.; Malano, H.; Saleem, S.K.; Halgamuge, M.N. Irrigation\
    \ control based on model predictive\ncontrol (MPC): Formulation of theory and\
    \ validation using weather forecast data and AQUACROP model.\nEnviron. Model.\
    \ Softw. 2016, 78, 40–53. [CrossRef]\n116. Barnard, D.M.; Bauerle, W.L. Species-speciﬁc\
    \ irrigation scheduling with a spatially explicit biophysical model:\nA comparison\
    \ to substrate moisture sensing with insight into simpliﬁed physiological parameterization.\n\
    Agric. For. Meteorol. 2015, 214–215, 48–59. [CrossRef]\n117. Asher, J.B.; Yosef,\
    \ B.B.; Volinsky, R. Ground-based remote sensing system for irrigation scheduling.\n\
    Biosyst. Eng. 2013, 114, 444–453. [CrossRef]\n118. Jones, J.W.; Hoogenboom, G.;\
    \ Porter, C.H.; Boote, K.J.; Batchelor, W.D.; Hunt, L.A.; Wilkens, P.W.; Singh,\
    \ U.;\nGijsman, A.J.; Ritchie, J.T. The DSSAT cropping system model. Eur. J. Agron.\
    \ 2003, 18, 235–265. [CrossRef]\n119. Hardaha, M.K.; Chouhan, S.S.; Ambast, S.K.\
    \ Application of Artiﬁcial Neural Network in Prediction of\nResponse of Farmers\
    \ Water Management Decisions on Wheat Yield. J. Indian Water Resour. Soc. 2012,\
    \ 32,\n1–12.\n120. Prasad, G.; Babu, A. PANI: An Expert System for Irrigation\
    \ Management. Georg. Electron. Sci. J. 2007, 1,\n40–44.\n121. Kasslin, M.; Kangas,\
    \ J.; Simula, O. Process State Monitoring Using Self-Organizing Maps. In Artiﬁcial\
    \ Neural\nNetworks, Proceedings of the 1992 International Conference on Artiﬁcial\
    \ Neural Networks (ICANN-92),\nBrighton, UK, 4–7 September 1992; pp. 1531–1534.\n\
    122. Karasekreter, N.; Ba¸sçiftçi, F.; Fidan, U. A new suggestion for an irrigation\
    \ schedule with an artiﬁcial neural\nnetwork. J. Exp. Theor. Artif. Intell. 2013,\
    \ 25, 93–104. [CrossRef]\nSustainability 2017, 9, 353\n28 of 29\n123. Mousa, A.K.;\
    \ Abdullah, M.N. Fuzzy based Decision Support Model for Irrigation System Management.\n\
    Int. J. Comput. Appl. 2014, 104, 14–20.\n124. Prakashgoud, P.; Desai, B.L. Intelligent\
    \ Irrigation Control System by Employing Wireless Sensor\nNetworksPatil. Int.\
    \ J. Comput. Appl. 2013, 79, 33–40.\n125. Giusti, E.; Marsili-Libelli, S. A Fuzzy\
    \ Decision Support System for irrigation and water conservation in\nagriculture.\
    \ Environ. Model. Softw. 2015, 63, 73–86. [CrossRef]\n126. Plant, R.E.; Horrocks,\
    \ R.D.; Grimes, D.W.; Zelinski, L.J. CALEX/COTTON: An Integrated Expert System\n\
    Application for Irrigation Scheduling. Am. Soc. Agric. Eng. ASAE 1992, 35, 1833–1838.\n\
    127. Singh, H.; Sharma, N. Design and Development of Fuzzy Expert System for Potato\
    \ Crop. Int. J. Emerg.\nTechnol. Adv. Eng. 2014, 4, 278–283.\n128. Rani, M.N.;\
    \ Rajesh, T. Expert System with Special Reference to Agriculture. Int. J. Recent\
    \ Technol. Eng. 2013,\n2, 85–89.\n129. Mohan, S.; Arumugam, N. Expert system applications\
    \ in irrigation management:\nAn overview.\nComput. Electron. Agric. 1997, 17,\
    \ 263–280. [CrossRef]\n130. Rani, P.M. N.; Rajesh, T.; Saravanan, R. Expert Systems\
    \ in Agriculture: A Review. Int. J. Sci. Technol. Eng.\n2011, 3, 59–71.\n131.\
    \ Thomson, S.J.; Ross, B.B. Model-based irrigation management using a dynamic\
    \ parameter adjustment\nmethod. Comput. Electron. Agric. 1996, 14, 269–290. [CrossRef]\n\
    132. Kohanbash, D.; Kantor, G.; Martin, T.; Crawford, L. Wireless sensor network\
    \ design for monitoring and\nirrigation control: User-centric hardware and software\
    \ development. Horttechnology 2013, 23, 725–734.\n133. Zerihun Desta, T.; Janssens,\
    \ K.; Van Brecht, A.; Meyers, J.; Baelmans, M.; Berckmans, D. CFD for model-based\n\
    controller development. Build. Environ. 2004, 39, 621–633. [CrossRef]\n134. Chen,\
    \ B.S.E.; Chang, Y.T. A review of system identiﬁcation in control engineering,\
    \ signal processing,\ncommunication and systems biology. J. Biomech. Eng. 2008,\
    \ 1, 87–109.\n135. Saleem, S.K.; Delgoda, D.; Ooi, S.K.; Dassanayake, K.B.; Yue,\
    \ L.; Halmamuge, M.; Malano, H. Model\nPredictive Control for Real-Time Irrigation\
    \ Scheduling. IFAC Proc. Vol. 2013, 46, 299–304. [CrossRef]\n136. Qin, J.; Badgwell,\
    \ T. A survey of industrial model predictive control technology. Control Eng.\
    \ Pract. 2003, 11,\n733–764. [CrossRef]\n137. Froisy, J.B. Model predictive control—Building\
    \ a bridge between theory and practice. Comput. Chem. Eng.\n2006, 30, 1426–1435.\
    \ [CrossRef]\n138. Delgoda, D.; Saleem, S.K.; Malano, H.; Halgamuge, M.N. Root\
    \ zone soil moisture prediction models based\non system identiﬁcation: Formulation\
    \ of the theory and validation using ﬁeld and AQUACROP data.\nAgric. Water Manag.\
    \ 2014, 163, 344–353. [CrossRef]\n139. Ooi, S.K.; Mareels, I.; Cooley, N.; Dunn,\
    \ G.; Thoms, G. A systems engineering approach to viticulture on-farm\nirrigation.\
    \ IFAC Proc. Vol. 2008, 17, 9569–9574. [CrossRef]\n140. Take the Guesswork Out\
    \ of Irrigation|AquaSpy Home—AquaSpy. Available online: http://aquaspy.com/\n\
    take-the-guesswork-out-of-irrigation/ (accessed on 17 January 2017).\n141. Precision\
    \ Farming to Control Irrigation and Improve Fertilization Strategies on Corn Crops|Libelium.\n\
    Available online: http://www.libelium.com/precision-farming-to-control-irrigation-and-improve-fertilization-\n\
    strategies-on-corn-crops/ (accessed on 17 January 2017).\n142. Alberola, C.; Lichtfouse,\
    \ E.; Navarrete, M.; Debaeke, P.; Souchère, V. Agronomy for sustainable development.\n\
    Ital. J. Agron. 2008, 3, 77–78.\n143. Pretty, J.N. Participatory learning for\
    \ sustainable agriculture. World Dev. 1995, 23, 1247–1263. [CrossRef]\n144. Fernández,\
    \ J.E. Plant-based sensing to monitor water stress: Applicability to commercial\
    \ orchards.\nAgric. Water Manag. 2014, 142, 99–109. [CrossRef]\n145. Evans, R.G.;\
    \ LaRue, J.; Stone, K.C.; King, B.A. Adoption of site-speciﬁc variable rate sprinkler\
    \ irrigation\nsystems. Irrig. Sci. 2013, 31, 871–887. [CrossRef]\n146. Heeren,\
    \ D.M.; Martin, D.; Mateos, L. Pumpage Reduction by using Variable Rate Irrigation\
    \ to Mine\nUndepleted Soil Water. Trans. ASABE 2016, 59, 1285–1298.\n147. Lee,\
    \ B.B. Economic Evaluation of Variable Rate Irrigation Center Pivot Technology.\
    \ Rural Connect. 2016, 10,\n15–16.\n148. Sadler, E.J.; Evans, R.G.; Stone, K.C.;\
    \ Camp, C.R. Opportunities for conservation with precision irrigation.\nJ. Soil\
    \ Water Conserv. 2005, 60, 371–378.\nSustainability 2017, 9, 353\n29 of 29\n149.\
    \ Evett, S.R.; Tolk, J.A.; Howell, T.A. TDR Laboratory Calibration in Travel Time,\
    \ Bulk Electrical Conductivity,\nand Effective Frequency. Vadose Zone J. 2006,\
    \ 5, 1020–1029. [CrossRef]\n150. Li, T.; Hao, X.; Kang, S. Spatiotemporal Variability\
    \ of Soil Moisture as Affected by Soil Properties during\nIrrigation Cycles. Soil\
    \ Sci. Soc. Am. J. 2014, 78, 598–608. [CrossRef]\n151. Chávez, J.L.; Varble, J.L.;\
    \ Andales, A.A. Performance Evaluation of Selected Soil Moisture Sensors.\nIn\
    \ Proceedings of the 23rd Annual Central Plains Irrigation Conference, Burlington,\
    \ CO, USA,\n22–23 February 2011; pp. 29–38.\n152. The University of Florida Program\
    \ for Resource Efﬁcient Communities. Field Guide to Proper Installation,\nCalibration,\
    \ and Maintenance of Soil Moisture Sensor Control Systems in Residential Florida\
    \ Landscapes; University\nof Florida: Gainesville, FL, USA, 2007.\n153. Kacira,\
    \ M.; Ling, P.P.; Short, T.H. Establishing Crop Water Stress Index (CWSI) Threshold\
    \ Values for Early,\nNon-Contact Detection of Plant Water Stress. Trans. ASAE\
    \ 2002, 45, 775–780. [CrossRef]\n154. Kirda, C. Deﬁcit irrigation scheduling based\
    \ on plant growth stages showing water stress tolerance. Irrig. Sci.\n2002, 22,\
    \ 3–10.\n155. Berbel, J.; Calatrava, J.; Garrido, A. Water pricing and irrigation:\
    \ A review of the European experience.\nIn Irrigation Water Pricing Gap between\
    \ Theory Practice; Molle, F., Berkoff, J., Eds.; CABI: Oxfordshire, UK, 2007;\n\
    Volume 4, pp. 295–327.\n© 2017 by the authors. Licensee MDPI, Basel, Switzerland.\
    \ This article is an open access\narticle distributed under the terms and conditions\
    \ of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sustainability
  limitations: '>'
  pdf_link: https://www.mdpi.com/2071-1050/9/3/353/pdf?version=1488270393
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: Advanced Monitoring and Management Systems for Improving Sustainability in
    Precision Irrigation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.13031/trans.14110
  analysis: '>'
  authors:
  - Saleh Taghvaeian
  - Allan A. Andales
  - L. Niel Allen
  - Isaya Kisekka
  - Susan A. O’Shaughnessy
  - Dana Porter
  - Ruixiu Sui
  - Suat Irmak
  - Allan Fulton
  - Jonathan Aguilar
  citation_count: 35
  full_citation: '>'
  full_text: '>

    Publications Included Search Help About Contact Us Join   Click on “Download PDF”
    for the PDF version or on the title for the HTML version.   If you are not an
    ASABE member or if your employer has not arranged for access to the full-text,
    Click here for options. Irrigation Scheduling for Agriculture in the United States:
    The Progress Made and the Path Forward   Published by the American Society of
    Agricultural and Biological Engineers, St. Joseph, Michigan www.asabe.org Citation:  Transactions
    of the ASABE. 63(5): 1603-1618. (doi: 10.13031/trans.14110) @2020 Authors:   Saleh
    Taghvaeian, Allan A. Andales, L. Niel Allen, Isaya Kisekka, Susan A. O’Shaughnessy,
    Dana O. Porter, Ruixiu Sui, Suat Irmak, Allan Fulton, Jonathan Aguilar Keywords:   Computer
    modeling, Plant characteristics, Soil water status. Highlights The progress made
    in agricultural irrigation scheduling in the past ten years and the current challenges
    are discussed. The main scientific scheduling strategies are based on soil water
    status, plant characteristics, and crop modeling. Challenges include large time
    and data requirements and availability of decision support systems. Opportunities
    include integration of scheduling strategies and demonstrating their effectiveness
    through local studies. Abstract. Irrigation scheduling is the process of determining
    the appropriate amount and timing of water application to achieve desired crop
    yield and quality, maximize water conservation, and minimize possible negative
    effects on the environment, such as nutrient leaching below the crop root zone.
    Effective irrigation scheduling has been shown to save water, save energy, and
    help agricultural producers achieve improved yields and quality. However, scientific
    irrigation scheduling methods generally have remained limited to mostly research
    applications with relatively low adoption by irrigators. There are several main
    approaches to irrigation scheduling, including those based on soil water status,
    plant characteristics, and/or crop modeling. Each of these approaches has advantages
    as well as limitations and sources of uncertainty and variability, depending on
    application conditions. This article summarizes progress made in the U.S. in each
    of the main scheduling approaches in the past ten years (since the 2010 Decennial
    Irrigation Symposium) and existing challenges and opportunities that should be
    considered moving forward. This article is intended to guide future research and
    extension projects in improving adoption of scientific irrigation scheduling approaches.
    (Download PDF)    (Export to EndNotes) 40 Share Facebook X Email LinkedIn WeChat  We
    recommend Using NDVI for Variable Rate Cotton Irrigation Prescriptions Ken Stone
    et al., Applied Engineering in Agriculture, 2022 Evapotranspiration: Progress
    in Measurement and Modeling in Agriculture H. J. Farahani et al., Transactions
    of the ASAE, 2007 A Site-Specific Web-based Irrigation Scheduling Program Thomas
    F Scherer et al., Journal of the ASABE, 2008 Application of a Crop Growth Simulation
    Model for enhancing the Water Use Efficiency B SOUNDHARAJAN et al., Journal of
    the ASABE, 2008 Irrigation scheduling using real-time soil moisture data in corn
    production María Zamora Re et al., Journal of the ASABE, 2017 From concept to
    action: a united, holistic and One Health approach to respond to the climate change
    crisis Renhe Zhang et al., Infectious Diseases of Poverty, 2022 Could China’s
    journey of malaria elimination extend to Africa? Duoquan Wang et al., Infectious
    Diseases of Poverty, 2022 Production of biofuels options by contribution of effective
    and suitable enzymes: Technological developments and challenges Renu Singh et
    al., Materials Science for Energy Technologies, 2022 The Global Energy and Water
    Exchanges (GEWEX) Project in Central Asia: The Case for a Regional Hydroclimate
    Project Michael Brody, Advances in Atmospheric Sciences, 2024 Influences of hydrothermal
    carbonization on phosphorus availability of swine manure-derived hydrochar: Insights
    into reaction time and temperature Jiaxin Yu et al., Materials Science for Energy
    Technologies, 2022 Powered by    Library Home Search Obtaining Full-Text E-mail
    Alert ASABE Home Authors, please use the Guide for Authors when creating your
    articles.  Public Access Information   = Public Access (PA)   = PA Limited Time   =
    Open Access   = Contact Us For Purchase  American Society of Agricultural and
    Biological Engineers 2950 Niles Road, St. Joseph, MI 49085 Phone: +12694290300
    Fax: +12694293852 Copyright © 2024 American Society of Agricultural and Biological
    Engineers'
  inline_citation: '>'
  journal: Transactions of the ASABE (Print)
  limitations: '>'
  pdf_link: http://elibrary.asabe.org/azdez.asp?JID=3&AID=51813&t=2&v=63&i=5&CID=t2020&downPDF=Y&directPDF=Y
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Irrigation Scheduling for Agriculture in the United States: The Progress
    Made and the Path Forward'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s11269-023-03443-x
  analysis: '>'
  authors:
  - Ali Mokhtar
  - Nadhir Al‐Ansari
  - Wessam El-Ssawy
  - Renata Graf
  - Pouya Aghelpour
  - Hongming He
  - Salma M. Hafez
  - Mohamed E. Abuarab
  citation_count: 7
  full_citation: '>'
  full_text: ">\nVol.:(0123456789)\nhttps://doi.org/10.1007/s11269-023-03443-x\n1\
    \ 3\nPrediction of Irrigation Water Requirements for Green \nBeans‑Based Machine\
    \ Learning Algorithm Models in Arid \nRegion\nAli Mokhtar1 · Nadhir Al‑Ansari2 ·\
    \ Wessam El‑Ssawy1,3 · Renata Graf4 · \nPouya Aghelpour5 · Hongming He6 · Salma M. Hafez1 ·\
    \ Mohamed Abuarab1 \nReceived: 14 November 2022 / Accepted: 16 January 2023 /\
    \ \nThis is a U.S. Government work and not under copyright protection in the US;\
    \ foreign copyright protection may \napply 2023\nAbstract\nWater scarcity is the\
    \ most obstacle faced by irrigation water requirements, likewise, lim-\nited available\
    \ meteorological data to calculate reference evapotranspiration. Consequently,\
    \ \nthe focal aims of the investigation are to assess the potential of machine\
    \ learning mod-\nels in forecasting irrigation water requirements (IWR) of snap\
    \ beans by evolving multi-\nscenarios of inputs parameters to figure out the impact\
    \ of meteorological, crop, and soil \nparameters on IWR. Six models were applied,\
    \ support vector regressor (SVR), random for-\nest (RF), deep neural networks\
    \ (DNN), convolutional neural networks (CNN), long short-\nterm memory (LSTM),\
    \ and Hybrid CNN-LSTM. Ten variables including maximum and \nminimum temperature,\
    \ Relative humidity, wind speed, precipitation, root depth, basal crop \ncoefficient,\
    \ soil evaporation, a fraction of surface wetted and, exposed and soil wetted\
    \ frac-\ntion were used as the input data for models with their combination, 8\
    \ input scenarios were \ndesigned. Overall models, the best scenario was scenario\
    \ 4 (relative humidity, wind speed, \nbasal crop coefficient, soil evaporation),\
    \ however, the best scenario for DNN and RF model \nwas scenario 7 (root depth,\
    \ basal crop coefficient, soil evaporation, fraction of surface wet-\nted, exposed\
    \ and soil wetted fraction). While the weakest one was the group of climatic \n\
    factors in scenario 6 (maximum temperature, minimum temperature, relative humidity,\
    \ \nwind speed, and precipitation). Among the models, the hybrid LTSM & CNN was\
    \ the \nmost accurate and the SVR model had the lowest estimation accuracy. The\
    \ outcomes of \nthis research work could set up a modeling strategy that would\
    \ set in motion the improve-\nment of efforts to identify the shortages in IWR\
    \ forecasting, which sequentially may sup-\nport alleviation strategies such as\
    \ policies for sustainable water use and water resources \nmanagement. The current\
    \ approach was promising and has research value for other similar \nregions.\n\
    Keywords Water resources management · Climate change · Evapotranspiration · Hybrid\
    \ \nmodels · Long short-term memory\nExtended author information available on\
    \ the last page of the article\nWater Resources Management (2023) 37:1557–1580\n\
    Published online: 10 March 2023\n1 3\n1 Introduction\nThe widespread climatic\
    \ changes in the twenty-first century and the negative impacts that \nfollow on\
    \ the available water resources have become one of the most important issues that\
    \ \ncast their shadows on the focus of contemporary environmental events and issues\
    \ (Smith \net al. 2012; UNEP 1999). The irrigated agriculture sector represents\
    \ the largest consumer \nof water in Egypt, representing 85% of the total water\
    \ share available to Egypt, which rep-\nresents 55.5 billion cubic meters. In\
    \ addition, the biggest problem is that most of the irri-\ngated lands apply surface\
    \ irrigation systems where the efficiency of application and dis-\ntribution of\
    \ water do not exceed 50%, which represents the biggest challenge that must be\
    \ \nfaced to reduce water losses (Monem 2021). Irrigated agriculture covers about\
    \ 25% of the \ncultivated area in the world, yet it contributes 50% of the global\
    \ food basket. Despite the \nincrease in production with irrigated agriculture,\
    \ it consumes 67% of the water in agricul-\ntural production and 87% of the water\
    \ is consumed in the irrigation sector (Smith et al. \n2012; Shiklomanov 1997).\
    \ The availability of food is the main element for the survival of \nthe human\
    \ race, although it faces many challenges, the main cause of which is humans,\
    \ \nperhaps the most prominent of which are the rapid population growth and climatic\
    \ changes \nresulting from global warming that affect the hydrological cycle (Bellido-Jiménez\
    \ et al. \n2021). Therefore, irrigation scheduling, which is determining the amount\
    \ of irrigation \nwater added and the time of its addition during the growing\
    \ season of the crop, is one of \nthe things that must be taken into account under\
    \ conditions of water scarcity (Kalboussi \net al. 2019).\nThere are many methods\
    \ used for irrigation scheduling, including visual and thermal \nmonitoring, soil\
    \ moisture content measuring devices, rainfall estimation devices, and refer-\n\
    ence evapotranspiration estimation, from which it is possible to estimate the\
    \ crop evapo-\ntranspiration by knowing the crop coefficient, through available\
    \ climatic data on local basis \nor through commercial scheduling programs available\
    \ through the international informa-\ntion network (Zhang et al. 2013). The actual\
    \ crop evapotranspiration (ETa) is considered \none of the main criteria for estimating\
    \ the amount of water consumed by the crop, and \nthus greatly affects the hydrological,\
    \ environmental and agricultural management, and then \nthe ETa is one of the\
    \ basic elements when designing and managing irrigation networks in \nthe agricultural\
    \ project. ETa is estimated through field measurements using lysimeters or \n\
    through empirical equations by estimating the reference evapotranspiration (ETo)\
    \ and the \ncrop coefficient (Djaman et al. 2018). The water balance method for\
    \ irrigation schedul-\ning includes estimating of the crop water consumption during\
    \ the growing season, which \nincludes the amount of water added, whether through\
    \ irrigation, precipitation and capil-\nlary rise, which subtracts the amount\
    \ of water losses, whether by evaporation from the soil \nsurface, deep percolation\
    \ the rootzone area, and runoff (Andales et al. 2014; Karam et al. \n2019a, b).\n\
    The estimation of ETo is one of the most important indicators used in irrigation\
    \ water \nmanagement and hydrological studies, and despite the difficult requirements\
    \ of the empiri-\ncal equations of ETo, it gives accurate values in addition to\
    \ its validity on various climatic \nconditions, which are the main indicators\
    \ in the empirical equations (Ferreira and da Cunha \n2020a, b; Pereira et al.\
    \ 2015a, b). In light of the limited climatic parameters available for \nestimating\
    \ ETo, fast and accurate methods that require least number of meteorological indi-\n\
    cators are considered among the most important requirements for irrigation water\
    \ schedul-\ning (Fan et al. 2021). The Penman–Monteith equation is the standard\
    \ equation for calculat-\ning ETo and is recommended by the United Nations Agriculture\
    \ and Food Organization. \n1558\nA. Mokhtar et al.\n1 3\nThe Penman Monteith equation\
    \ requires many daily meteorological parameters to calculate \nsuch as maximum\
    \ and minimum temperature, wind speed, net solar radiation, and rela-\ntive humidity.\
    \ However, under the conditions of limited climatic parameters available in \n\
    the study area, which requires the availability of methods that require less climatic\
    \ data, \nwhile maintaining the accuracy of the calculated values of ETo in the\
    \ same range to a large \nextent (Fan et al. 2019). The application of the Penman\
    \ Monteith equation faces many dif-\nficulties, especially in developing countries,\
    \ which face many challenges represented in the \nlimited monitoring stations\
    \ and their lack of regular distribution in each country, where the \nfocus is\
    \ in the areas of spread of irrigated agricultural areas in addition to the lack\
    \ of ability \nto measure all the climatic criteria required to apply the Penman–Monteith\
    \ equation with \nthe required accuracy (Fan et al. 2021).\nRecently used computer\
    \ software’s models have shown high accuracy in estimating and \nforecasting ETo,\
    \ e.g. Support Vector Machines (SVM) (Fan et al. 2019). In recent years, \nthe\
    \ use of machine learning programs for ETo estimation has spread with making rela-\n\
    tionships between the inputs and outputs used in ETo estimation, which are mainly\
    \ mete-\norological data, which gives higher accuracy and power to apply machine\
    \ learning pro-\ngrams in ETo modeling (Ferreira and Cunha 2020a, b; Kumar et al.\
    \ 2011). The use of both \nRandom Forest (RF) and Generalized Regression Neural\
    \ Network (GRNN) to predict ETo \nproved highly accurate under local conditions\
    \ and across-stations applications, but RF was \nbetter than GRNN (Feng et al.\
    \ 2017). The common method of predicting ETo values using \nmachine learning models\
    \ is based on the use of former ETo values as input data (Ashrafza-\ndeh et al.\
    \ 2020; Landeras et al. 2009; Trajkovic et al. 2003). In addition, the use of\
    \ former \ndaily meteorological data used to estimate ETo through the Penman–Monteith\
    \ equation in \naddition to the lagged ETo values greatly enhances the performance\
    \ of machine learning \nmodels and the accuracy of the forecasting ETo.\nIn addition\
    \ to what machine learning programs provide an estimate of ETo values for \nthe\
    \ previous and current agricultural seasons, it gives the possibility to predict\
    \ the ETo \nvalues for the upcoming seasons using the so-called deep learning\
    \ models, which are \nrestricted to knowing the expected changes in temperature\
    \ and the amount of precipitation \nrelated to global warming, from which it can\
    \ be make good planning and management of \nirrigation water for the coming years\
    \ with an attempt to correct the existing strategies to \navoid the negative effects\
    \ of global warming (Ferreira and da Cunha 2020a, b). By increas-\ning the forecast\
    \ period from 1 to 30 days, the accuracy of the resulting data decreases (Fer-\n\
    reira and da Cunha 2020a, b). Several deep learning models have been used to forecasting\
    \ \ntime series, including long short-term memory (LSTM) (Son and Kim 2020; Tian\
    \ et al. \n2018; Zhou et  al. 2019), and a one-dimensional convolutional neural\
    \ network can (1D \nCNN) (Barzegar et al. 2020). In addition to the above, Barzegar\
    \ et al. (2020) and Kim \net al. (2019) create hybrid software from both LSTM\
    \ and 1D CNN. Although deep learn-\ning programs have proven outstanding performance\
    \ in many fields, their use in the field of \nclimatic and hydrological studies\
    \ is still limited.\nTherefore, this paper aims to participate in saving water\
    \ tasks by forecasting irriga-\ntion water requirement (IWR) for green bean by\
    \ an on-field scale experiment, where there \nwasn’t common literature about modeling\
    \ of irrigation water requirement forecasting in \nversus of ETo estimation studies.\
    \ Moreover, the irrigation water requirements forecasting \ncould make irrigation\
    \ scheduling improved, and so give better solutions for decision mak-\ners. This\
    \ research is based on determining the most important criteria required to forecast\
    \ \nIWR of green bean to achieve the best irrigation scheduling in light of the\
    \ challenges of \nclimatic changes and water scarcity using six models (SVR, RF,\
    \ DNN, CNN, LSTM and \nCNN-LSTM) to forecast IWR. To the best of authors’ knowledge,\
    \ the applied approaches \n1559\nPrediction of Irrigation Water Requirements for\
    \ Green…\n1 3\nare applying for first time for forecasting of IWR, further, no\
    \ research has been published \nin the literature that analyses irrigation water\
    \ requirement using a combination of climate \ndata, soil data and crop data based\
    \ novel artificial intelligence approaches applied. Thus, \nto overcome the gap\
    \ in literature dealing with the importance of IWR prediction, the main \nobjectives\
    \ of this study are to 1) evaluate the potential of machine and deep learning\
    \ mod-\nels in forecasting IWR of snap beans, 2) develop multi-scenarios of the\
    \ inputs variables \n(combinations) to study the impact of meteorological, crop\
    \ and soil parameters on IWR \nand, 3) figure out the best scenario with best\
    \ model performance in IWR prediction.\n2  Materials and Methods\nThe workflow\
    \ of this study is showing in Fig. 1. The first phase of the workflow involves\
    \ \nthe climate, soil and crops data collection and the calculation of the IWR\
    \ during two sea-\nsons. Within the second phase, we applied five machine learning\
    \ models (SVR, RF, DNN, \nLSTM and CNN) and hybrid between LSTM and CNN to predict\
    \ the IWR based on 8 Sce-\nnarios (combinations of climate, soil and crop data).\n\
    2.1  Climate Conditions\nThe climatic variables (maximum air temperature, minimum\
    \ temperature of air, the aver-\nage air temperature, air relative humidity, and\
    \ the number of hours of sunshine) were daily \nrecorded during both growing seasons.\
    \ The maximum air temperature ranged during the \ngrowing season (October to December)\
    \ between 19–30 °C, while minimum air tempera-\ntures ranged from 11 to 21 °C\
    \ during growing season. The total rainfall was negligible \nFig. 1  Flowchart\
    \ of the research. Note: Tmax: maximum temperature, Tmin: minimum temperature,\
    \ RH: \nRelative humidity, WS: wind speed, P: precipitation, Rd: root depth, Kcb:\
    \ basal crop coefficient, Ke is the \nsoil evaporation, Fw: fraction of surface\
    \ wetted, Few: Exposed and soil wetted fraction, SVR: support vec-\ntor regression,\
    \ RF: random forest, DNN: deep neural network, CNN: convolutional neural networks,\
    \ LSTM: \nlong short-term memory, Sc: scenarios\n1560\nA. Mokhtar et al.\n1 3\n\
    (< 20 mm) thus, the irrigation is main variable for the soil water availability.\
    \ Table 1 sum-\nmarizes the monthly mean climatic data during the two seasons.\n\
    2.2  Machine Learning Implementations\n2.2.1  Support Vector Machine (SVM)\nSVM\
    \ is a supervised learning algorithm, and it can also be used as a regression\
    \ model, \nmaintain all the main features that describe the algorithm (maximal\
    \ margin). SVR uses \na similar theory as SVM for classification method, with\
    \ a few slightly changes. The main \naim is minimizing error, individualizing\
    \ the hyperplane that increases the tolerance limit, \ntaking in consideration\
    \ that the part of error is tolerated. The approximated function in the \nalgorithm\
    \ of SVM is cleared as follows:\nwhere φ (x) is feature space of higher-dimensional\
    \ converted from the input vector x, ω is \nthe weights vector and b are a threshold,\
    \ which were estimated by minimizing the follow-\ning regularized risk function:\n\
    where C is the penalty parameter of the error,  di is the desired value, n is\
    \ observations \nnumber, and C 1\nn\nn∑\ni=1\nL(di, yi) is the empirical error,\
    \ in which the function  Lε is determined \nas:\nwhere 0.5 Ѡ2 is the so-called\
    \ regularization term and ɛ is the tube size. The approximated \nfunction in Eq. (1)\
    \ is finally expressed in an explicit form by introducing Lagrange multi-\npliers\
    \ and exploiting the optimality constraints as:\n(1)\nf(휒) = 휔휑(휒) + b\n(2)\n\
    R(C) = C1\nn\nn\n∑\ni=1\nL(Li, yi) + 1\n2휛2\n(3)\nL휀(d, y) = |d − y| − 휀|d − y|\
    \ ≥ 휀 or 0 otherwise\nTable 1  Average monthly \nclimatic variables for both \n\
    growing seasons during the \nexperiments\nYear\nClimatic variables\nMonth\nOctober\
    \ November December\n2017 Tmin. (Rockström et al. 2009) 21\n17\n12\nTmax (Rockström\
    \ et al. 2009)\n30\n26.3\n20\nTave (Rockström et al. 2009)\n26\n21\n16\nRelative\
    \ humidity (%)\n59.9\n62\n53\nSunshine (h)\n11.5\n10.5\n10.2\n2018 Tmin (Rockström\
    \ et al. 2009)\n18\n17\n11\nTmax (Rockström et al. 2009)\n28\n26\n19\nTave (Rockström\
    \ et al. 2009)\n23\n21\n15\nRelative humidity (%)\n57\n59\n56\nSunshine (h)\n\
    11.4\n10.9\n10.3\n1561\nPrediction of Irrigation Water Requirements for Green…\n\
    1 3\nwhere k (x,  xi) is the kernel function. (Fan et al. 2018) provide detailed\
    \ information and \ncomputation procedures of the SVM algorithm.\n2.2.2  Random\
    \ Forest (RF)\nThe RF model was developed by Breiman (2001) and used Breiman’s\
    \ “bagging” idea to \nensemble a collection of decision trees with controlled\
    \ variance. The RF model is com-\nmonly used for regression and predicting problems.\
    \ More detailed information can be \nfound at (Ferreira and da Cunha 2020a, b;\
    \ Breiman 2001).\n2.2.3  Deep Neural Network (DNN)\nDeep neural networks (DNN)\
    \ model has become a fundamental but recently still powerful \ndeep learning model\
    \ (Achieng 2019; Montes-Atenas et al. 2016). The DNN is an artifi-\ncial neural\
    \ network (Springmann et al. 2018) with multiple layers between the inputs, hid-\n\
    den layers and output layers to learn more complex nonlinear relationships between\
    \ inputs \nand output. The rectified linear unit (ReLu) was applied as activation\
    \ function which is \ncommonly employed (Ghimire et al. 2019; Achieng 2019).\n\
    The loss function in the DNN model is expressed as:\nwhere n is the number of\
    \ observation data, and T\n′ is the estimated value by the DNN \nmodel, which\
    \ can be defined below for a three-hidden-layer DNN model with the ReLu \nactivation\
    \ function:\nwhere ω1, ω2, ω3 and ω4 are the weights in the network,  b1,  b2,\
    \  b3 and  b4 are the bias \nterms.\n2.2.4  Convolutional Neural Network (CNN)\n\
    CNN consists of a sequence of convolutional layers, the output of which is connected\
    \ only \nto local regions in the input. This is achieved by sliding a filter,\
    \ or weight matrix, over \nthe input and at each point computing the dot product\
    \ between the two (i.e., a convolu-\ntion between the input and filter). This\
    \ structure allows the model to learn filters that are \nable to recognize specific\
    \ patterns in the input data. Recent advances in CNNs for time \nseries forecasting\
    \ include (Mittelman 2015). Zuo et al. (2019) stated that the architecture \n\
    of a typical CNN consists of a convolutional layer pooling layer, and fully connected\
    \ layer. \nFinally, these abstract features are merged through the fully connected\
    \ layer, and an activa-\ntion function is used to solve the classification or\
    \ regression problem (Fig. 2).\n(4)\nf(x, 훼i, 훼∗\ni ) =\nn\n∑\ni=1\n(훼i − 훼∗\n\
    i )k(x, xi) + b\n(5)\nf(al\ni) = max(0, al\ni)\n(6)\nloss = 1\n2n\nn\n∑\ni=1\n\
    (Ti − T\x1C\ni )2\n(7)\nT\n\x1F = Re Lu 휛\n1(휛\n3[Re Lu(휛\n2(Re Lu)(휛1 + b1) +\
    \ b3)] + b4\n1562\nA. Mokhtar et al.\n1 3\n2.2.5  Long Short‑Term Memory (LSTM)\n\
    LSTM network contains different memory blocks which are linked through layers.\
    \ Each \nlayer includes a set of frequently connected memory pixels and three\
    \ multiplicative units, \nnamely the input, forget and output gates. LSTM has\
    \ the ability to automatically store and \nremove temporal state information.\n\
    2.2.6  Hybrid LSTM and CNN\nLSTM and CNN were trained with the same input, and\
    \ they were hybrid to forecast results, \nthe proposed hybrid CNN-LSTM model uses\
    \ CNN layers for feature extraction from the input \ndata with LSTM layers for\
    \ sequence learning. The CNN and the LSTM are the most com-\nmonly used deep learning\
    \ models. Our main aim in designing the hybrid model of CNN and \nLSTM layers\
    \ is to exploit their characteristics for developing an efficient model for forecasting.\
    \ \nFig. 2  Architecture of the LSTM model and cell structure (a) and the formation\
    \ of the CNN model (b) \n(Mokhtar et al. 2021a, b)\n1563\nPrediction of Irrigation\
    \ Water Requirements for Green…\n1 3\nThe hyper parameters of convolutional and\
    \ LSTM layers were the same ones described above \nfor CNN and LSTM models, respectively.\
    \ Training algorithm, learning rate, batch size and \nnumber of training epochs\
    \ followed the same configurations described for LSTM and CNN.\n2.3  Input Combination\
    \ and Performance Evaluation of the Models\nIn this study, eight scenarios were\
    \ consisting of various combinations of the climatic, soil and \ncrop variables\
    \ to investigate their effects on IWR and evaluate the contribution of each vari-\n\
    able (Table 2). This may help improve water resources analysis for data scarcity\
    \ regions. The \ntwo seasons’ data were divided into two subsets with 75% data\
    \ for training and the remaining \n25% data for testing.\nThe mean absolute error\
    \ (MAE), the root mean square error (RMSE), and mean bias \nerror (Springmann\
    \ et al. 2018) were used to evaluate the applied models. Moreover, uncer-\ntainty\
    \ with 95% confidence level (U95) and T-Statistic test (Tstat) to evaluate the\
    \ signifi-\ncant differences between the predicted and calculated yield were used\
    \ (Behar et al. 2015; \nGueymard 2014)(Stone 1994).\n(8)\nMAE = 1\nn\nn\n∑\ni=1\n\
    |Oi − Pi|\n(9)\nRMSE =\n√\n1\nn\n∑\n(Pi − Oi)\n2\n(10)\nMBE = 1\nn\nn\n∑\ni=1\n\
    (Oi − Pi)\n(11)\nSI = RMSE\nO\nTable 2  The summary of the 8 \nscenarios applied\
    \ in this study\nTmax maximum temperature, Tmin minimum temperature, RH Rela-\n\
    tive humidity, WS wind speed, P precipitation, Rd root depth, Kcb \nbasal crop\
    \ coefficient, Ke is the soil evaporation, Fw fraction of sur-\nface wetted, Few\
    \ Exposed and soil wetted fraction\nScenario\nInput\nTmax\nTmin\nRH\nWS\nP\nRd\n\
    Kcb\nKe\nFw\nFew\nS1\n√\n√\n√\n√\nS2\n√\n√\n√\n√\n√\nS3\n√\n√\n√\n√\nS4\n√\n√\n\
    √\n√\nS5\n√\n√\nS6\n√\n√\n√\n√\n√\nS7\n√\n√\n√\n√\n√\nS8\n√\n√\n√\n√\n√\n√\n√\n\
    √\n√\n√\n1564\nA. Mokhtar et al.\n1 3\nwhere O represent the average values of\
    \ the observed IWR, Oi and Pi are the observed and \npredicted IWR, respectively,\
    \ and i is the number of observations. SD is the standard devia-\ntion of the\
    \ difference between the measured and estimated value. PSR is ratio of the root\
    \ \nmean square error to the standard deviation of measured data. Further, A is\
    \ the accuracy, \n R2 is the coefficient of determination and MAPE is the mean\
    \ average percentage error.\n3  Results\nAt first, the input variables were arranged\
    \ according to Table 2. The combination of all 10 \ninputs, reached 8 input scenarios\
    \ which must be trained by the models.\n(12)\nTstat =\n√\n(1 − n)MBE2\nRMSE2 −\
    \ MBE2\n(13)\nU95 = 1.96\n√\n(SD2 + RMSE2)\n(14)\nNSE = 1 −\n∑(Pi−Oi)\n∑ (O−Oi)\n\
    2\n2\n(15)\nMSE =\n1\nn\n∑(Pi − Oi)2\n(16)\nCC =\nn∑\ni=1\n(Oi−O)(Pi−P)\n\x1E\n\
    (\nn∑\ni=1\n(Oi−Oi)\n2\n)(\nn∑\ni=1\n(Pi−P)\n2)\n(17)\nR2 =\n⎡\n⎢\n⎢\n⎢\n⎢\n⎢⎣\n\
    n∑\ni=1\n(Oi − O)(Pi − P)\n\e\n(\nn∑\ni=1\n(Oi − Oi)\n2\n)(\nn∑\ni=1\n(Pi − P)\n\
    2)\n⎤\n⎥\n⎥\n⎥\n⎥\n⎥⎦\n2\n(18)\nA = 1 − abs(meanPi − Oi\nOi\n)\n(19)\nMAPE = 1\n\
    n\nn\n∑\ni=1\n|Pi − Oi\nOi\n| × 100\n(20)\nPSR =\n⎡\n⎢\n⎢\n⎢\n⎢⎣\n\x1C\n(Oi −\
    \ Pi)2\n\e\x1C\n(Oi − O)\n2\n⎤\n⎥\n⎥\n⎥\n⎥⎦\n1565\nPrediction of Irrigation Water\
    \ Requirements for Green…\n1 3\nThe input scenarios were randomized and divided\
    \ into training and testing phases, then \nentered the models. The models were\
    \ implemented, and their estimations were evaluated \nby the criteria MBE, RMSE\
    \ and NSE (Table 3).\nThere are noticeable differences between the models, but\
    \ also some similarities in rela-\ntion to individual scenarios. The performance\
    \ of the models is more favorable when the \nRMSE and MBE are closer to zero,\
    \ and NSE are closer to 1. In all models, the NSE values \nare higher than 0.75,\
    \ which shows that the models are well performed in IWR estimation. \nThe best\
    \ estimation of the models are mostly presented by the S4 scenario and after that\
    \ S7. \nThe weakest accuracy was obtained by SVR model with MBE = 0.007, RMSE\
    \ = 0.077 mm \nand NSE = 0.850, under the S4 input scenario. The most accurate\
    \ estimation was \nresulted by DNN model under S7 scenario, with MBE = -0.001,\
    \ RMSE = 0.055 mm and \nNSE = 0.824. In order to examine the correlation between\
    \ the actual and predicted IWR \nvalues, scatter plots were developed (Fig. 3).\n\
    The analysis showed that in the S1 scenario, the highest correlation was obtained\
    \ for \nthe LSTM and CNN models  (R2 = 0.9421,  R2 = 0.9119, respectively, the\
    \ lowest for SVR. \nS1 scenario takes into account air temperature (Tmax and Tmin)\
    \ and basal crop coeffi-\ncient (Kcb) and soil evaporation (Ke). In the second\
    \ scenario S2, where in addition to S1, \nrelative humidity (RH), the strongest\
    \ correlation between real and predicted IWR was also \nshown for the LSTM model\
    \  (R2 = 0.83225), and the weakest for SVR  (R2 = 0.6369). In the \nS3 scenario\
    \ (4 parameters: temperature, wind speed and Kcb), the best correlation between\
    \ \nactual and predicted IWR values  was determined for the LSTM & CNN hybrid\
    \ model \n (R2 = 0.7618). This is a relatively low correlation, which indicates\
    \ that the IWR prediction \nTable 3  Evaluating the models’ estimation performance\n\
    * The bold rows show the best performance of each model\nModel\nIndex\nInput scenario\n\
    S1\nS2\nS3\nS4\nS5\nS6\nS7\nS8\nLTSM\nMBE (mm)\n−0.015\n0.003\n−0.004\n0.002\n\
    0.01\n−0.001\n0.002\n0.008\nRMSE (mm)\n0.075\n0.084\n0.104\n0.064\n0.087\n0.121\n\
    0.071\n0.072\nNSE\n0.929\n0.813\n0.649\n0.889\n0.101\n0.578\n0.846\n0.859\nLTSM\
    \ + CNN\nMBE (mm)\n−0.009\n0.016\n−0.003\n−0.003\n−0.005\n0.008\n−0.005\n0.009\n\
    RMSE (mm)\n0.137\n0.13\n0.060\n0.117\n0.123\n0.062\n0.069\nNSE\n0.768\n0.716\n\
    0.757\n0.889\n0.595\n0.511\n0.896\n0.866\nCNN\nMBE (mm)\n0.000\n0.015\n0.007\n\
    0.007\n0.001\n0.015\n0.006\n−0.003\nRMSE (mm)\n0.058\n0.066\n0.13\n0.066\n0.109\n\
    0.128\n0.109\n0.047\nNSE\n0.907\n0.788\n0.497\n0.895\n0.838\n0.775\n0.842\n0.938\n\
    DNN\nMBE (mm)\n0.011\n0.010\n−0.009\n−0.014\n0.023\n0.003\n−0.001\n0.006\nRMSE\
    \ (mm)\n0.065\n0.061\n0.085\n0.06\n0.082\n0.08\n0.055\n0.033\nNSE\n0.753\n0.778\n\
    0.57\n0.789\n0.600\n0.621\n0.824\n0.936\nSVR\nMBE (mm)\n0.012\n0.029\n0.03\n0.007\n\
    −0.032\n−0.061\n−0.009\n−0.024\nRMSE\n0.121\n0.169\n0.194\n0.077\n0.140\n0.127\n\
    0.108\n0.070\nNSE\n0.599\n0.609\n0.539\n0.850\n0.423\n0.098\n0.719\n0.811\nRF\n\
    MBE (mm)\n0.003\n−0.034\n−0.03\n−0.007\n−0.018\n0.003\n−0.020\n−0.05\nRMSE (mm)\n\
    0.072\n0.085\n0.089\n0.117\n0.107\n0.150\n0.066\n0.108\nNSE\n0.854\n0.757\n0.609\n\
    0.539\n0.527\n0.537\n0.818\n0.293\n1566\nA. Mokhtar et al.\n1 3\nis also influenced\
    \ by RH and Ke, and there is Kcb and wind speed, in addition to air tem-\nperature,\
    \ is not sufficient this parameter. In the S3 scenario, the results are not promising,\
    \ a \nrelatively low  R2 was obtained, which means that the predictors used support\
    \ the prediction \nof IWR within 50–76%. The weakest correlation was shown by\
    \ the CNN model  (R2 = 0.5) \nFig. 3  Scatter plots to investigate the correlations\
    \ between actual and predicted IWR values\n1567\nPrediction of Irrigation Water\
    \ Requirements for Green…\n1 3\nbut the LSTM & CNN hybrid already gives a good\
    \ correlation result between actual and \npredicted IWR values.\nIn the S4 scenario,\
    \ where wind speed, RH, Kcb and Ke are considered, the  R2 value \nranges from\
    \ 0.6874 for the RF model to 0.922 for the CNN model. Apart from RF, the \nremaining\
    \ models showed a high correlation of actual and predicted IWR, which empha-\n\
    sizes that the selection of predictors in the discussed scenario is optimal for\
    \ the prediction. \nIn the S5 scenario, considering only the two predictors RH\
    \ and WS, the best correlation for \nthe current and predicted IWR values   was\
    \ obtained for the CNN model  (R2 = 0.8781), while \nweak correlation applies\
    \ to the SVR  (R2 = 0.4522) and RF  (R2 = 0.5655) models. In the \nnext scenario\
    \ S6, where the group of climatic factors (Table 3) was considered as Input, the\
    \ \nhighest  R2 was obtained for the CNN model (0.837), while the weakest result\
    \ in the SVR \nmodel  (R2 = 0.3948). In this variant, the remaining models showed\
    \ a weak  (R2 = 0.5–0.6) \ncorrelation between actual and predicted IWR values,\
    \ which indicates that climatic factors \nalone are not sufficient for predicting\
    \ of irrigation requirement (IR), predicting irrigation \ndemand (IR). In the\
    \ S7 scenario, which takes into account only non-climatic parameters \nroot depth,\
    \  kcb,  ke,  fw and  few (Table 3), in almost all models a similar dimension\
    \ of the cor-\nrelation strength between actual and predicted IWR values  (R2\
    \ > 0.8) was obtained, except \nfor the SVR model  (R2 = 0.7287). In the last\
    \ scenario S8, in which all predictors were taken \ninto account (Table 3), the\
    \ highest  R2 > 0.9 were obtained for the CNN and DNN models, \nand the weakest\
    \ correlations concerned the RF model  (R2 = 0.6128). In the next step, for \n\
    the test period, combo charts (combined line-bar chart) were used to compare the\
    \ scenarios \nbased on the CC and  U95 criteria and in the second variant A and\
    \ PSR (Fig. 4).\nComparison charts (combo-graphs) show that the values  of CC\
    \ and  U95 show wide dif-\nferentiation. The analyzes show that the highest CC\
    \ = 0.97 was determined for the S1 sce-\nnario in the LTSM model. However, in\
    \ the case of the CNN model, for most of the sce-\nnarios (except S3, which takes\
    \ into account temperature, wind speed and crop factor), the \nCC coefficient\
    \ is above CC = 90. The uncertainty of the scenarios adopted in modeling was \n\
    additionally determined for the limits of the 95% confidence interval  (U95),\
    \ which means \nthe probability of obtaining the result lying close to the expected\
    \ value within the range \ndefined by this uncertainty. S5 and S6 scenarios do\
    \ not work for LTSM and LTSM & CNN, \nSVR and RF models. However, they are slightly\
    \ better for IWR prediction using the CNN \nmodel itself. The S1 scenario seems\
    \ to be the most optimal, as it achieves satisfactory per-\nformance for all models,\
    \ except for the SVR model. The S4 scenario is also favorable, with \nthe exception\
    \ of the RF model. However, in the case of the remaining scenarios, a differen-\n\
    tiated assessment of the CC and  U95 criteria was obtained.\nIn the second case,\
    \ the accuracy (A) and PSR. Metrics were used to assess the cor-\nrectness of\
    \ the scenarios used. These criteria are used to obtain more relevant information\
    \ \nfrom the time series. Model accuracy (A) is defined as the percentage of correct\
    \ predic-\ntions for the test data, it denotes the degree of compliance of the\
    \ actual value with the \narithmetic mean of the results (predicted value) obtained\
    \ for the marked scenario and pre-\ndiction model. For accuracy, results above\
    \ 80% are considered good. In some scenarios and \nmodels, the obtained values\
    \  were higher than 1, which means that the prediction results in \nthese variants\
    \ may be burdened with a random error, which can be considered a random \nerror,\
    \ i.e., a type of measurement error that does not result from systematic and repeatable\
    \ \nfactors.\nIn the case of the CNN and DNN models in particular, overestimated\
    \ A values  were \nobtained, which may be related to a random error. For the S1-S4,\
    \ the best accuracy was \ndemonstrated by the SVR model. For the S5 forecast,\
    \ the LTSM model was the most accu-\nrate, while for the other S6-S7 forecasts,\
    \ the first 4 models presented the most accurate. \n1568\nA. Mokhtar et al.\n\
    1 3\nAnother analyzed RSR indicator is strongly related to the RMSE criterion,\
    \ as it is under-\nstood as the ratio of the RMSE and the standard deviation of\
    \ the measured data. Better \nperformance is shown by models with a lower RSR\
    \ value, which at the same time means a \nFig. 4  Combo-graphs for comparison\
    \ between the scenarios, based on the criteria CC,  U95, A and PSR\n1569\nPrediction\
    \ of Irrigation Water Requirements for Green…\n1 3\nlower RMSE. A very good model\
    \ is classified when 0.00 ≤ RSR ≤ 0.50, while unsatisfac-\ntory when RSR > 0.70.\
    \ The analyzes show that the lowest RSR values  (≤ 0.50), covering \nvery good\
    \ ranges of classification, were achieved by all models for the S4 scenario (Input:\
    \ \nRH, WS, Kcb, Ke in Table 2), and then by four models: LTSM, CNN, DNN and RF\
    \ for the \nS1 scenario (Fig. 4).\nThe LTSM, LTSM & CNN and DNN models additionally\
    \ achieved high perfor-\nmance in the S7 scenario, and the CNN and DNN models\
    \ also in the S2 scenario. \nThe SVR model was the only one that achieved very\
    \ good quality in only one S4 \nscenario. The SVR model was the only one that\
    \ achieved very good quality in only \none S4 scenario. In most models, the lowest\
    \ RSR was achieved in those scenarios \nwhere the lowest values  also reached\
    \ the RMSE criterion (Table 3), which proves that \nthe scenarios seem to be the\
    \ most optimal for IWR prediction. Unsatisfactory results \nwere achieved in those\
    \ scenarios where the RSR criterion > 0.70. The most common \nscenarios are: S3\
    \ (Input: Tmax, Tmin, WS, Kcb), S5 (Input: RH, WS) and S6 (Input: \nTmax, Tmin,\
    \ RH, WS, P), thus mostly scenarios that include climatic parameters as \ninput\
    \ to the model (Fig. 4). In the next stage (Fig. 5), radar charts were developed\
    \ to \ncompare the models in each scenario based on the SI criterion.\nThe SI\
    \ values  obtained for the models in various S1-S8 scenarios. According to \n\
    the value of the SI criteria, the performance of models can be divided into several\
    \ \nlevels. In the discussed case, the SI < 0.1 was not obtained, which would\
    \ classify the \nmodels as \"excellent\". Good (if 0.1 < SI < 0.2) and satisfactory\
    \ (if 0.2 < SI < 0.3) per-\nformance of most models was obtained for the S8 scenario,\
    \ which takes into account \nall the inputs: climate, vegetation characteristics\
    \ and soil data, and for the scenarios: \nS4 (takes into account 4 components\
    \ RH, WS, Kcb and Ke) and the S7 scenario \n(Root depth, Kcb, Ke, Fw and Few).\
    \ Satisfactory performance was achieved by the \nmodels in the S1 scenario, which\
    \ takes into account temperature data, Kcb and Ke, \nand in the S5 scenario, which\
    \ includes only two outputs, namely RH and WS. Poor \nperformance was achieved\
    \ by the SVR model for the S2 and S3 scenarios, and the \nRF and CNN models for\
    \ the S6 scenario, which takes into account only climatic \ndata. The models in\
    \ the S6 scenario show the least satisfactory performance (Fig. 5).\nThe LTSM\
    \ model, according to the Scatter index, achieved the best performance for S4\
    \ \nand the weakest for S6, the LTSM & CNN hybrid model for S4 and S1 / S6 respectively,\
    \ \nthe CNN model for S1 / S4 and S6 respectively, the DNN model for S4 / S7 and\
    \ S5, the \nSVR model for S4 and S3, while the RF model for the S7 and S6 scenarios.\
    \ Figure 5 shows \nthat, apart from the distinguished single cases related to\
    \ specific scenarios, the prediction \naccuracy in most of the developed models\
    \ regarding the SI value was good (0.1 < SI < 0.2) \nand satisfactory (0.2 < SI\
    \ < 0.3). Figure 6 shows the MAE values  for 6 different models for \n2 options:\
    \ under and over estimation.\nThe MAE is a measure of performance (model quality)\
    \ used to evaluate the perfor-\nmance of a model after finalization. Investigating\
    \ the models under and over estimations, \ni.e., the study of underestimating\
    \ and overestimating model estimates was carried out \nusing mean absolute error\
    \ (MAE). In the context of machine learning, absolute error refers \nto the magnitude\
    \ of the difference between the prediction of an observation and the true \nvalue\
    \ of that observation. The values  on two different data sets indicate that MAE\
    \ values  \nin under estimation in almost all models were higher than after Over\
    \ estimation, except \nfor the RF model, where higher MAE was achieved in over\
    \ estimation. The RF approach \nis another widely used decision tree method (Cavallo\
    \ et al. 2017; García Nieto et al. 2017, \n2018) which, using the classification\
    \ and regression tree procedure, combined with ran-\ndom node optimization and\
    \ packing (Breiman 2001) builds a forest of uncorrelated trees. \n1570\nA. Mokhtar\
    \ et al.\n1 3\nFig. 5  Radar charts to compare the models in each scenario separately,\
    \ based on the SI criterion\n1571\nPrediction of Irrigation Water Requirements\
    \ for Green…\n1 3\nHowever, in the case of noise-rich datasets, RF models tend\
    \ to over-fit the data. Moreover, \nover-selecting too many characteristic values\
    \   also has a greater impact on RF decision \nmaking, which affects goodness\
    \ of fit (Naghibi et al. 2017). The MAE values  decrease \nsignificantly after\
    \ over estimation in the case of the following models: LTSM, LTSM & \nCNN, CNN\
    \ and SVR) (they are within 0.05). This proves that over estimation can reduce\
    \ \nthe MAE values  for most tested models. The smallest MAE differences between\
    \ the two \nvariants (under and over estimation) were obtained in the DNN model,\
    \ while the largest in \nthe SVR model. The use of the LTSM & CNN hybrid model\
    \ reduced the MAE between \nthe two options Under and over estimation.\n4  Discussion\n\
    The assessment of the amount of irrigation for individual types of crops requires\
    \ the analy-\nsis of a large number of parameters, which are often difficult to\
    \ obtain through direct meas-\nurement and observation are often considered burdensome\
    \ and costly for farmers. Hardly \nany country has a good system for measuring\
    \ and recording the total water consumption of \ncrops, and more than 40% of crops\
    \ are grown under irrigation conditions. Hence, in order \nto assess the future\
    \ situation in terms of obtaining high yields and maintaining ration-\nalization\
    \ in water abstraction for crops, it is necessary to model irrigation water require-\n\
    ments (Pulido-Calvo and Gutierrez-Estrada 2009; Döll and Siebert 2002). Modeling\
    \ of the \nirrigation water needs as a function of the irrigated area, climatic\
    \ conditions and type of \ncrops has a broader context, providing the basis for\
    \ estimating the future impact of climate \nchange, as well as demographic, socio-economic\
    \ and technological changes.\nFig. 6  Investigating the models’ under and over\
    \ estimations\n1572\nA. Mokhtar et al.\n1 3\nIn this study, various machine learning\
    \ models (SVM, RF, DNN, CNN, LSTM and \nhybrid LSTM & CNN) are investigated to\
    \ predict the IWR indispensable for the green bean \ncrops in Egypt. Importantly,\
    \ it presents the adaptation of typical deep neural network mod-\nels, which include\
    \ the DNN model and the convolutional neural network, long short-term \nmemory\
    \ network, and finally a combination of some of their variants. An important ele-\n\
    ment in the study was the selection of the scenario and model that obtains the\
    \ best perfor-\nmance for the conditions declared in the scenario. Indication\
    \ of the best predictive model \nfor IWR, with the given input data for modeling,\
    \ is of great importance for the selected \nresearch area that experiences extreme\
    \ droughts and the related needs for intensive irriga-\ntion of crops. Mokhtar\
    \ et al. (2021a, b) emphasizes that the droughts in the research area \nin 2015–2019\
    \ covered even 80–90% of the area, and 30% in 2010–2019 were affected by \nextreme\
    \ and very extreme droughts.\nThe reason for water shortages in the root zone\
    \ is primarily water consumption by \ncrops and evapotranspiration, while rainfall\
    \ and irrigation ensure water supply (Andales \net al. 2011; 2014; Karam et al.\
    \ 2019a, b). However, it should be emphasized that the actual \nevapotranspiration\
    \ of green bean crops, one of the dominant components in the water bal-\nance,\
    \ significantly reduces the size of its harvest, which on the other hand, with\
    \ increas-\ning evaporation, will require increased irrigation of the area. Due\
    \ to the complexity of the \nevapotranspiration process, it is most often estimated\
    \ on the basis of meteorological data \n(Pereira et al. 2015a, b; Ferreira and\
    \ Cunha 2020a, b). However, in this case, monitoring of \nall parameters is often\
    \ insufficient (El Bilali and Taleb 2020).\nIn the performed IWR prediction for\
    \ green bean crops in Egypt, the accurate predic-\ntion of IWR was largely dependent\
    \ on the number of input variables and their impact on \nthe modeling results\
    \ under certain scenario variants. According to Krupakar et al. (2016), \nthe\
    \ sources of parameters influencing the irrigation process tend to differ depending\
    \ on the \narea where agriculture is grown. In addition, there are new characteristics\
    \ that we obtain \nthanks to new technologies for terrestrial and satellite measurements.\
    \ The sources that \nmake irrigation water demand prediction possible can be broadly\
    \ categorized into meteoro-\nlogical factors, crop input and agricultural parameters.\
    \ Meteorological factors are impor-\ntant in determining the irrigation water\
    \ needs of crops as rain is the main source of water in \nsome areas (e.g., India).\
    \ Wind speed also affects the amount of irrigation needed, although \nnot as much\
    \ as the temperature (O’Toole and Hatfield 1983; Schlenker and Roberts 2009; \n\
    Krupakar et al. 2016).\nIn the presented work, the climate data was adapted to\
    \ the S6 scenario (Table 2), which \ntook into account the following parameters:\
    \ maximum and minimum temperature, rela-\ntive humidity, wind speed and precipitation.\
    \ In the case of having information only from \nthe group of climatic factors\
    \ (treated as input data), taking into account the S6 scenario, \nthe best prediction\
    \ was shown by the CNN model  (R2 = 0.8275), and the weakest SVR \n (R2 = 0.3).\n\
    One of the most important criteria for determining irrigation needs is soil type,\
    \ and dif-\nferences are seen when the amount of water required for different\
    \ crops on different soil \ntypes is compared. The models take into account factors\
    \ including the type of crop itself \n(Tolk et al. 1999) or other crop area factors\
    \ that change over time and affect the water \nrequirements of plants (Allen 2000).\
    \ According to Krupakar et al. (2016) the RNN model \nis robust enough to map\
    \ the differences in observations that occur due to various factors \nsuch as\
    \ global warming, faulty hardware, etc. In the presented study, if only data on\
    \ crops \nand soils were considered as predictors: root depth, basal crop coefficient,\
    \ soil evaporation, \nfraction of surface wetted and exposed and soil wetted fraction,\
    \ in the absence of climate \n1573\nPrediction of Irrigation Water Requirements\
    \ for Green…\n1 3\ndata, as presented in the S7 scenario, the best results were\
    \ obtained for a hybrid model \n(LSTM & CNN) and separately for LSTM and CNN.\n\
    The box plot was developed to show the error distribution in the test section\
    \ (Fig. 7). \nFor IWR prediction, the best models turned out to be LSTM, CNN,\
    \ LSTM & CNN and \nSVR for the S4, which takes into account the RH, WS, Kcb and\
    \ Ke parameters, and the \nDNN and RF models for the S7 scenario, which includes\
    \ root depth, Kcb, Ke, Fw and Few. \nIn the group with the S4, the LSTM and LSTM\
    \ & CNN models performed best because \nthey have the lowest values  of Q1, Q3\
    \ and IQR (Fig. 7), and the SVR model the worst. \nHowever, for the S7 scenario,\
    \ the DNN model turned out to be the best for IWR predic-\ntion. In the RF 7 model,\
    \ the lowest Q3 was obtained among the others, but the IQR was not \namong the\
    \ lowest and amounted to 0.09. The LSTM 4 and LSTM & CNN 4 have the same \nIQR\
    \ as the DNN 7 model and slightly lower compared to the RF 7 model (Fig. 7).\n\
    In all the models used, the error distribution is around zero, while the median\
    \ line shows \nthe normality of the error distribution, primarily for the LSTM\
    \ & CNN hybrid model S4. \nAdditionally, it should be noted that the models developed\
    \ for the S4 and S7 scenarios \nobtained the best results in the assessment at\
    \ the previous stage (Table 2). These scenarios \nare intermediate between the\
    \ use of all input variables (S8) and the smallest number of \ninput data represented\
    \ by the S5 scenario (RH and WS data).\nHowever, none of the models in the S6\
    \ scenario, which takes into account only climatic \ndata, was included in the\
    \ group of the best models distinguished on the basis of distribution \nof the\
    \ estimation errors of the IWR in the test section for the best model-scenarios\
    \ (Fig. 7). \nIn turn, research by Krupakar et al (2016) showed that ANNs models\
    \ perform well in predic-\ntion based on training but have a lower ability to\
    \ infer semantic meaning from the sequential \nflow. SVMs models are designed\
    \ to be tested on normal data, hence they cannot capture the \nessential sequential\
    \ information. According to Xie and Tang (2010), the factors influencing \nFig.\
    \ 7  Boxplots showing the distribution of the estimation errors of the IWR in\
    \ the test section for the best \nmodel-scenarios. Q1 and Q3 are lower and upper\
    \ quartile of errors, and IQR is interquartile range for each \nmodel\n1574\n\
    A. Mokhtar et al.\n1 3\nthe amount of irrigation are complex and non-linear, and\
    \ the support vector machine (SVM) \nhas many advantages for non-linear small\
    \ samples. A forecasting model of irrigation water \nrequirement based on least\
    \ squares support vector machine (LS-SVM) was used in Tarim \nRiver Basin. These\
    \ authors demonstrated in their research that the prediction model based on \n\
    the LS-SVM has excellent generalizability and low error, which provides an efficient\
    \ method \nof forecasting irrigation water requirements (Xie and Tang 2010).\n\
    In turn, El Bilali and Taleb (2020), using correlation coefficients, showed the\
    \ inaccuracy \nof the SVR model in predicting the quality of irrigation water\
    \ for training and validation \nprocesses sequentially. Artificial neural network\
    \ (Springmann et  al. 2018), multiple linear \nregression (MLR), decision tree,\
    \ random forest (RF), stochastic gradient descent (SGD) and \nadaptive boosting\
    \ (AdaBoost) demonstrated good prediction accuracy. Krupakar et al. (2016) \n\
    emphasize that the models described for an irrigation prediction system are generally\
    \ devel-\noped and trained using a large amount of historical data (training data)\
    \ on objects or character-\nistics that influence the amount of water required\
    \ for irrigation. The new RNN LSTM model \nproposed by them can be used to obtain\
    \ better results, richer in semantic correlations found \nin the parameters used\
    \ in real-time data. When testing machine learning models in predicting \nirrigation\
    \ water, it is emphasized that they are efficient tools for accurately predicting\
    \ irriga-\ntion only using parameters that can be directly measured in a short\
    \ time. There have been \na lot of hybrid models that have been used for time\
    \ series prediction (Ruan 1997; Kavousi-\nFard 2013). Pulido-Calvo et al. (2003)\
    \ developed a hybrid model of combining CNNs with \nfuzzy membership function,\
    \ optimized by a genetic optimization algorithm to test the effi-\ncacy of irrigation\
    \ demand prediction, a Pulido-Calvo and Gutierrez-Estrada (2009) presented \n\
    improved irrigation water demand forecasting using a soft computing hybrid model.\n\
    For the prediction of irrigation for green bean crops in Egypt, the LSTM & CNN\
    \ hybrid \nmodel was proposed, which enhances the information potential for IWR\
    \ prediction. Deep \nlearning concerns multilayer neural networks, which simultaneously\
    \ act as a generator of \ndiagnostic features for the analyzed process and the\
    \ final function of a classifier or regres-\nsion system. It also makes it possible\
    \ to improve the accuracy of the system operation. The \nrecurrent network called\
    \ LSTM (Long Short-Term Memory) is a recursive network character-\nized by a long\
    \ memory of short patterns (Schmidhuber 2015; Greff et al. 2017). The levels of\
    \ \nthe LSTM and CNN models are often combined when forecasting time series. This\
    \ allows \nthe LSTM layer to account for sequential dependencies across time series,\
    \ while the CNN \nlayer additionally informs about this process through the use\
    \ of extended convolutions. Unlike \nLSTM, the CNN model does not keep memory\
    \ of previous time series patterns, and instead \ncan only train have based on\
    \ data entered over a specific period of time. Krupakar et al. (2016) \npropose\
    \ a novel methodology of using a sequence learning based recurrent neural network\
    \ \n(RNN) model that uses the LSTM activation function to model for irrigation\
    \ requirement so \nthat it doesn’t have memory problems on long input streams.\n\
    The IWR prediction results for Egyptian green bean crops, performed for different\
    \ scenario \nvariants, show the models’ ability to predict irrigation potential.\
    \ The proposed predictive irri-\ngation planning approach, compared to field studies,\
    \ makes it possible to reduce or prevent \nwater stress in crops. Predicting future\
    \ IWR values   from the results of predictive models can \nimprove the real-time\
    \ irrigation planning system depending on the meteorological situation \nand terrain\
    \ factors (plants, soil). Sustainable irrigation aims to adjust water availability\
    \ and \ndemand in terms of quantity and quality, space and time, at reasonable\
    \ cost and with accept-\nable environmental impacts, whereby forecasting water\
    \ demand is proving to be a valuable \nmanagement tool.\n1575\nPrediction of Irrigation\
    \ Water Requirements for Green…\n1 3\n5  Conclusions\nWater and food need crisis\
    \ is facing all over world, furthermore agriculture consume the larg-\nest amount\
    \ of water to cover plant requirement of water. Therefore, the current research\
    \ applies \nmachine models in order to predict the irrigation water requirement\
    \ for one of the most important \ncrops in Egypt (green bean) by actual field\
    \ experiment, which there weren’t common literature \nabout modeling of irrigation\
    \ requirement forecasting in versus ETo evaluation studies.\nThe main conclusions\
    \ were reported as follow; the scenario S4 (relative humidity, wind speed, \n\
    basal crop coefficient, the soil evaporation), is the best scenario for SVR, LSTM,\
    \ CNN and LSTM \n& CNN models, while the best scenario in DNN and RF model was\
    \ in scenario (S7) (root depth, \nbasal crop coefficient, the soil evaporation,\
    \ fraction of surface wetted, exposed and soil wetted \nfraction). The climatic\
    \ factors in scenario (S6) presented the highest  R2 for the CNN model and \n\
    the weakest result in the SVR model. Further, by taking into account only the\
    \ two predictors rela-\ntive humidity and wind speed, the performance of all models\
    \ ranged from very good to satisfac-\ntory fit for all models, while it was an\
    \ unsatisfactory fit for SVR.\nOn contrast, the hybrid LTSM & CNN model was the\
    \ best model for the IWR prediction. \nFinally, the models applied can improve\
    \ the irrigation planning with few available data. The cur-\nrent approach was\
    \ promising and has research value for other similar regions. Therefore, the future\
    \ \nwork will focus much more in predicting the irrigation water requirements\
    \ in other crops in other \nregions to draw a general picture of the predicting\
    \ of the irrigation water requirements in order to \nensure the water resources\
    \ management under the impact of the climate changes.\nAcknowledgements The authors\
    \ would like to express they’re thanks to the Faculty of Agriculture, Cairo \n\
    University for their support in this work.\nAuthor Contributions AM collected\
    \ and analyzed the research data and wrote the original draft preparation. \n\
    AM, WE, RG, and PG designed and applied the machine learning models of the research\
    \ and generated the \nfigures in the main manuscript. AM, MA, WE, NA, HH, and\
    \ SH read and edited the final manuscript. All \nauthors read and improved the\
    \ final manuscript.\nFunding Open access funding provided by Lulea University\
    \ of Technology.\nData Availability The researchers provided the experiment requirements\
    \ of raw materials, machine learning \nalgorithms models, and climate data through\
    \ their own financial resources, while the data for previous stud-\nies and research\
    \ was done through the Cairo University platform, which provides research on a\
    \ regular basis.\nDeclarations \nEthics Approval and Consent to Participate All\
    \ authors are approval in participation in this research.\nConsent for Publication\
    \ All authors are consent of publication of the research paper.\nConflicts of\
    \ Interest The authors declare no conflicts of interest.\nFinancial Interests\
    \ The authors declare they have no financial interests.\nOpen Access This article\
    \ is licensed under a Creative Commons Attribution 4.0 International License,\
    \ \nwhich permits use, sharing, adaptation, distribution and reproduction in any\
    \ medium or format, as long \nas you give appropriate credit to the original author(s)\
    \ and the source, provide a link to the Creative Com-\nmons licence, and indicate\
    \ if changes were made. The images or other third party material in this article\
    \ \nare included in the article’s Creative Commons licence, unless indicated otherwise\
    \ in a credit line to the \nmaterial. If material is not included in the article’s\
    \ Creative Commons licence and your intended use is not \npermitted by statutory\
    \ regulation or exceeds the permitted use, you will need to obtain permission\
    \ directly \nfrom the copyright holder. To view a copy of this licence, visit\
    \ http:// creat iveco mmons. org/ licen ses/ by/4. 0/.\n1576\nA. Mokhtar et al.\n\
    1 3\nReferences\nAchieng KO (2019) Modelling of soil moisture retention curve\
    \ using machine learning techniques: Arti-\nficial and deep neural networks vs\
    \ support vector regression models. Comput Geosci 133:104320. \nhttps:// doi.\
    \ org/ 10. 1016/j. cageo. 2019. 104320\nAllen RG (2000) Using the FAO-56 dual\
    \ crop coefficient method over an irrigated region as part of an \nevapotranspiration\
    \ intercomparison study. J Hydrol 229:27–41\nAndales AA, Bauder TA, Arabi M (2014)\
    \ A Mobile Irrigation Water Management System Using a Collabo-\nrative GIS and\
    \ Weather Station Networks. In: Ahuja LR, Ma L, Lascano R (eds) Practical Applications\
    \ \nof Agricultural System Models to Optimize the Use of Limited Water. Advances\
    \ in Agricultural Sys-\ntems Modeling, Volume 5. ASA-CSSA-SSSA, Madison, Wisconsin,\
    \ pp 53–84\nAndales AA, Chávez JL, Bauder TL (2011) Irrigation Scheduling: The\
    \ Water Balance Approach (Doctoral disserta-\ntion, Colorado State University.\
    \ Libraries)\nAshrafzadeh A, Kişi O, Aghelpour P, Biazar SM, Masouleh MA (2020)\
    \ Comparative study of time series \nmodels, support vector machines, and GMDH\
    \ in forecasting long-term evapotranspiration rates in \nNorthern Iran. J Irrig\
    \ Drain Eng 146:04020010. https:// doi. org/ 10. 1061/ (asce) ir. 1943- 4774.\
    \ 00014 71\nBarzegar R, Aalami MT, Adamowski J (2020) Short-term water quality\
    \ variable prediction using a hybrid \nCNN–LSTM deep learning model. Stoch Environ\
    \ Res Risk Assess 34:415–433. https:// doi. org/ 10. \n1007/ s00477- 020- 01776-2\n\
    Behar O, Khellaf A, Mohammedi K (2015) Comparison of solar radiation models and\
    \ their validation under \nAlgerian climate - The case of direct irradiance. Energy\
    \ Convers Manag 98:236–251. https:// doi. org/ \n10. 1016/j. encon man. 2015.\
    \ 03. 067\nBellido-Jiménez JA, Estévez J, García-Marín AP (2021) New machine learning\
    \ approaches to improve ref-\nerence evapotranspiration estimates using intra-daily\
    \ temperature-based variables in a semi-arid region \nof Spain. Agric Water Manag\
    \ 245. https:// doi. org/ 10. 1016/j. agwat. 2020. 106558\nBreiman L (2001) Random\
    \ forests. Random For 45:1–122. https:// doi. org/ 10. 1201/ 97804 29469 275-8\n\
    Cavallo DP, Cefola M, Pace B, Logrieco AF, Attolico G (2017) Contactless and non-destructive\
    \ chlorophyll \ncontent prediction by random forest regression: A case study on\
    \ fresh-cut rocket leaves. Comput Elec-\ntron Agr 140:303–310\nDjaman K, O’Neill\
    \ M, Owen CK, Smeal D, Koudahe K, West M, Allen S, Lombard K, Irmak S (2018) \n\
    Crop evapotranspiration, irrigation water requirement and water productivity of\
    \ maize from meteoro-\nlogical data under semiarid climate. Water (Switzerland)\
    \ 10. https:// doi. org/ 10. 3390/ w1004 0405\nDöll P, Siebert S (2002) Global\
    \ modeling of irrigation water requirements. Water Resour Res 38(4):8-1–8-10\n\
    El Bilali A, Taleb A (2020) Prediction of irrigation water quality parameters\
    \ using machine learning models \nin a semi-arid environment. J Saudi Soc Agric\
    \ Sci 19:439–451\nFan J, Ma X, Wu L, Zhang F, Yu X, Zeng W (2019) Light Gradient\
    \ Boosting Machine: An efficient soft \ncomputing model for estimating daily reference\
    \ evapotranspiration with local and external meteoro-\nlogical data. Agric Water\
    \ Manag 225. https:// doi. org/ 10. 1016/j. agwat. 2019. 105758\nFan J, Wang X,\
    \ Wu L, Zhou H, Zhang F, Yu X, Lu X, Xiang Y (2018) Comparison of Support Vector\
    \ \nMachine and Extreme Gradient Boosting for predicting daily global solar radiation\
    \ using tempera-\nture and precipitation in humid subtropical climates: A case\
    \ study in China. Energy Convers Manag \n164:102–111. https:// doi. org/ 10. 1016/j.\
    \ encon man. 2018. 02. 087\nFan J, Zheng J, Wu L, Zhang F (2021) Estimation of\
    \ daily maize transpiration using support vector \nmachines, extreme gradient\
    \ boosting, artificial and deep neural networks models. Agric Water Manag \n245:106547.\
    \ https:// doi. org/ 10. 1016/j. agwat. 2020. 106547\nFeng Y, Cui N, Gong D, Zhang\
    \ Q, Zhao L (2017) Evaluation of random forests and generalized regression \n\
    neural networks for daily reference evapotranspiration modelling. Agric Water\
    \ Manag 193:163–173. \nhttps:// doi. org/ 10. 1016/j. agwat. 2017. 08. 003\nFerreira\
    \ LB, da Cunha FF (2020a) Multi-step ahead forecasting of daily reference evapotranspiration\
    \ using \ndeep learning. Comput Electron Agric 178:105728. https:// doi. org/\
    \ 10. 1016/j. compag. 2020. 105728\nFerreira LB, da Cunha FF (2020b) Multi-step\
    \ ahead forecasting of daily reference evapotranspiration using \ndeep learning.\
    \ Comput Electron Agric 178:105728. https:// doi. org/ 10. 1016/j. compag. 2020.\
    \ 105728\nGarcía Nieto PJ, García-Gonzalo E, Bové J, Arbat G, Duran-Ros M, Puig-Bargués\
    \ J (2017) Modeling pres-\nsure drop produced by different filtering media in\
    \ microirrigation sand filters using the hybrid ABC-\nMARS-based approach, MLP\
    \ neural network and M5 model tree. Comput Electron Agr 139:65–74\nGarcía Nieto\
    \ PJ, Sánchez Lasheras F, García-Gonzalo E, de Cos Juez FJ (2018) PM10 concentration\
    \ forecasting in \nthe metropolitan area of Oviedo (Northern Spain) using models\
    \ based on SVM, MLP, VARMA and ARIMA: \nA case study. Sci Total Environ 621:753–761\n\
    1577\nPrediction of Irrigation Water Requirements for Green…\n1 3\nGhimire S,\
    \ Deo RC, Raj N, Mi J (2019) Deep learning neural networks trained with MODIS\
    \ satellite-derived \npredictors for long-term global solar radiation prediction.\
    \ Energies 12. https:// doi. org/ 10. 3390/ en121 \n22407\nGreff K, Srivastava\
    \ RK, Koutník J, Steunebrink BR, Schmidhuber J (2017) LSTM: A search space odyssey.\
    \ \nIEEE Trans Neural Netw Learn Syst 28(10):2222–2232\nGueymard CA (2014) A review\
    \ of validation methodologies and statistical performance indicators for modeled\
    \ \nsolar radiation data: Towards a better bankability of solar projects. Renew\
    \ Sustain Energy Rev 39:1024–1034. \nhttps:// doi. org/ 10. 1016/j. rser. 2014.\
    \ 07. 117\nKalboussi N, Roux S, Boumaza K, Sinfort C, Rapaport A (2019) About\
    \ modeling and control strategies for \nscheduling crop irrigation. IFAC-PapersOnLine\
    \ 52:43–48. https:// doi. org/ 10. 1016/j. ifacol. 2019. 11. 007\nKaram F, Mouneimne\
    \ A, Aichouche F, Rapaport A, Harmand J (2019a) Processing soil water content\
    \ measure-\nments to estimate crop water requirements and optimize irrigation\
    \ supply. IFAC-PapersOnLine 52:49–53. \nhttps:// doi. org/ 10. 1016/j. ifacol.\
    \ 2019. 11. 008\nKaram F, Mouneimne A, Aichouche F, Rapaport A, Harmand J (2019)\
    \ Processing Soil Water Con- tent Meas-\nurements to Estimate Crop Water Requirements\
    \ and Optimize Irrigation Supply. IFAC Workshop on \nControl Methods for Water\
    \ Resource Systems – CMWRS, International Federation of Automatic Control \n(IFAC),\
    \ Delft, pp 49–53. https:// doi. org/ 10. 1016/j. ifacol. 2019. 11. 008 (hal-02408187)\n\
    Kavousi-Fard A (2013) A new fuzzy-based feature selection and hybrid TLA–ANN modelling\
    \ for short-term \nload forecasting. J Exp Theor Artif Intell 25:543–557\nKim\
    \ N, Ha KJ, Park NW, Cho J, Hong S, Lee YW (2019) A comparison between major artificial\
    \ intelligence \nmodels for crop yield prediction: Case study of the midwestern\
    \ United States, 2006–2015. ISPRS Int J \nGeo-Information 8:2006–2015. https://\
    \ doi. org/ 10. 3390/ ijgi8 050240\nKrupakar H, Jayakumar A (2016) A review of\
    \ intelligent practices for irrigation prediction. arXiv preprint \narXiv: 1612.\
    \ 02893\nKumar M, Raghuwanshi NS, Singh R (2011) Artificial neural networks approach\
    \ in evapotranspiration mod-\neling: A review. Irrig Sci 29:11–25. https:// doi.\
    \ org/ 10. 1007/ s00271- 010- 0230-8\nLanderas G, Ortiz-barredo A, López JJ (2009)\
    \ Forecasting weekly evapotranspiration with ARIMA and artifi-\ncial neural network\
    \ models. J Irrig Drain Eng 135(3):323–334\nMittelman R (2015) Time-series modeling\
    \ with undecimated fully convolutional neural networks. arXiv pre-\nprint arXiv:1508.00317\n\
    Mokhtar A, Jalali M, Elbeltagi A, Al-Ansari N, Alsafadi K, Abdo H G, Sammen SS,\
    \ Gyasi-Agyei Y, Rodrigo-\nComino J, He H (2021b) Estimation of SPEI Meteorological\
    \ Drought using Machine Learning Algo-\nrithms. IEEE Access\nMokhtar A, Jalali\
    \ M, He H, Al-Ansari N, Elbeltagi A, Alsafadi K, Abdo HG, Sammen SS, Gyasi-Agyei\
    \ Y, Rod-\nrigo-Comino J (2021a) Estimation of SPEI meteorological drought using\
    \ machine learning algorithms. \nIEEE Access 9:65503–65523. https:// doi. org/\
    \ 10. 1109/ ACCESS. 2021. 30743 05\nMonem, K.M.A.S.A., 2021. Political, technical\
    \ and economical contexts of the government of Egypt’s \napproaches towards the\
    \ Nile basin countries\nMontes-Atenas G, Seguel F, Valencia A, Bhatti SM, Khan\
    \ MS, Soto I, Becerra Yoma N (2016) Predicting bubble \nsize and bubble rate data\
    \ in water and in froth flotation-like slurry from computational fluid dynamics\
    \ (CFD) by \napplying deep neural networks (DNN). Int Commun Heat Mass Transf\
    \ 76:197–201. https:// doi. org/ 10. 1016/j. \nichea tmass trans fer. 2016. 05.\
    \ 031\nNaghibi SA, Ahmadi K, Daneshi A (2017) Application of support vector machine,\
    \ random forest, and genetic \nalgorithm optimized random forest models in groundwater\
    \ potential mapping. Water Resour Manag \n31(9):2761–2775\nO’Toole JC, Hatfield\
    \ JL (1983) Effect of wind on the crop water stress index derived by infrared\
    \ thermometry. \nAgron J 75:811–817\nPereira LS, Allen RG, Smith M, Raes D (2015b)\
    \ Crop evapotranspiration estimation with FAO56: Past and \nfuture. Agric Water\
    \ Manag 147:4–20. https:// doi. org/ 10. 1016/j. agwat. 2014. 07. 031\nPereira\
    \ LS, Paredes P, Rodrigues GC, Neves M (2015a) Modeling malt barley water use\
    \ and evapotranspiration \npartitioning in two contrasting rainfall years. Assessing\
    \ AquaCrop and SIMDualKc models. Agric Water \nManage 159:239–254\nPulido-Calvo\
    \ I, Roldán J, López-Luque R et al (2003) Demand forecasting for irrigation water\
    \ distribution sys-\ntems. J Irrig Drain Eng 129:422–431\nPulido-Calvo I, Gutierrez-Estrada\
    \ JC (2009) Improved irrigation water demand forecasting using a softcomput-\n\
    ing hybrid model. Biosyst Eng 102:202–218\nRockström J, Kaumbutho P, Mwalley J,\
    \ Nzabi A, Temesgen M, Mawenya L, Barron J, Mutua J, Damgaard-\nLarsen S (2009)\
    \ Conservation farming strategies in East and Southern Africa: Yields and rain\
    \ water pro-\nductivity from on-farm action research. Soil Tillage Res 103:23–32\n\
    1578\nA. Mokhtar et al.\n1 3\nRuan D (ed) (1997) Intelligent hybrid systems: fuzzy\
    \ logic, neural networks, and genetic algorithms (pp. 161-\n187). Boston: Kluwer\
    \ Academic Publishers\nSchlenker W, Roberts MJ (2009) Nonlinear temperature effects\
    \ indicate severe damages to US crop yields under \nclimate change. Proc Natl\
    \ Acad Sci 106:15594–15598\nSchmidhuber J (2015) Deep learning in neural networks:\
    \ An overview. Neural Netw 2015(61):85–117\nShiklomanov IA (1997) Assessment of\
    \ water resources and water availability in the world. Comprehensive \nAssessment\
    \ of the Freshwater Resources of the World\nSmith PC, Calanca P, Fuhrer J (2012)\
    \ A simple scheme for modeling irrigation water requirements at the \nregional\
    \ scale applied to an Alpine river catchment. Water (Switzerland) 4:869–886. https://\
    \ doi. org/ 10. \n3390/ w4040 869\nSon H, Kim C (2020) A deep learning approach\
    \ to forecasting monthly demand for residential-sector electricity. \nSustain\
    \ 12:3103. https:// doi. org/ 10. 3390/ SU120 83103\nSpringmann M, Clark M, Mason-D’Croz\
    \ D, Wiebe K, Bodirsky BL, Lassaletta L, De Vries W, Vermeulen SJ, \nHerrero M,\
    \ Carlson KM (2018) Options for keeping the food system within environmental limits.\
    \ Nature \n562:519–525\nStone RJ (1994) A nonparametric statistical procedure\
    \ for ranking the overall performance of solar radiation \nmodels at multiple\
    \ locations. Energy 19:765–769. https:// doi. org/ 10. 1016/ 0360- 5442(94) 90014-0\n\
    Tian C, Ma J, Zhang C, Zhan P (2018) A deep neural network model for short-term\
    \ load forecast based on long \nshort-term memory network and convolutional neural\
    \ network. Energies 11. https:// doi. org/ 10. 3390/ en111 \n23493\nTolk JA, Howell\
    \ TA, Evett SR (1999) Effect of mulch, irrigation, and soil type on water use\
    \ and yield of maize. \nSoil Tillage Res 50:137–147\nTrajkovic S, Todorovic B,\
    \ Stankovic M (2003) Forecasting of reference evapotranspiration by artificial\
    \ neural \nnetworks. J Irrig Drain Eng 129:454–457. https:// doi. org/ 10. 1061/\
    \ (asce) 0733- 9437(2003) 129: 6(454)\nUnited Nations Environment Programme (UNEP)\
    \ (1999) Global Environmental Outlook 2000. Earthscan, \nLondon\nXie F, Tang D-S\
    \ (2010) Forecasting Model of Irrigation Water Requirement Based on Least Squares\
    \ Support \nVector Machine,\" 2010 International Conference on Intelligent Computation\
    \ Technology and Automation, \npp 335–338. https:// doi. org/ 10. 1109/ ICICTA.\
    \ 2010. 91\nZhang Q-tao, Xia Q, Liu CCK, Geng S (2013) Technologies for efficient\
    \ use of irrigation water and energy in China. J \nIntegr Agric 12:1363–1370.\
    \ https:// doi. org/ 10. 1016/ S2095- 3119(13) 60544-4\nZhou Y, Chang FJ, Chang\
    \ LC, Kao IF, Wang YS (2019) Explore a deep learning multi-output neural network\
    \ \nfor regional multi-step-ahead air quality forecasts. J Clean Prod 209:134–145.\
    \ https:// doi. org/ 10. 1016/j. \njclep ro. 2018. 10. 243\nZuo W, Zhou F, Li\
    \ Z, Wang L (2019) Multi-resolution CNN and knowledge transfer for candidate classification\
    \ \nin lung nodule detection. Ieee Access 7:32510–32521\nPublisher’s note Springer\
    \ Nature remains neutral with regard to jurisdictional claims in published maps\
    \ and \ninstitutional affiliations.\nAuthors and Affiliations\nAli Mokhtar1 ·\
    \ Nadhir Al‑Ansari2 · Wessam El‑Ssawy1,3 · Renata Graf4 · \nPouya Aghelpour5 ·\
    \ Hongming He6 · Salma M. Hafez1 · Mohamed Abuarab1 \n * Nadhir Al-Ansari \n \n\
    nadhir.alansari@ltu.se\n * Mohamed Abuarab \n \nmohamed.aboarab@agr.cu.edu.eg\n\
    1 \nDepartment of Agricultural Engineering, Faculty of Agriculture, Cairo University,\
    \ Giza 12613, \nEgypt\n2 \nCivil, Environmental and Natural Resources Engineering,\
    \ Lulea University of Technology, \n97187 Lulea, Sweden\n3 \nIrrigation and Drainage\
    \ Department, Agricultural Engineering Research Institute, Giza 12613, \n1579\n\
    Prediction of Irrigation Water Requirements for Green…\n1 3\nEgypt\n4 \nDepartment\
    \ of Hydrology and Water Management, Institute of Physical Geography \nand Environmental\
    \ Planning, Adam Mickiewicz University, Poznań, Poland\n5 \nWater Engineering\
    \ Department, Faculty of Agriculture, Bu-Ali Sina University, Hamedan, Iran\n\
    6 \nSchool of Geographic Sciences, East China Normal University, Shanghai 210062,\
    \ China\n1580\nA. Mokhtar et al.\n"
  inline_citation: '>'
  journal: Water resources management
  limitations: '>'
  pdf_link: https://link.springer.com/content/pdf/10.1007/s11269-023-03443-x.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Prediction of Irrigation Water Requirements for Green Beans-Based Machine
    Learning Algorithm Models in Arid Region
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/app11083454
  analysis: '>'
  authors:
  - Pedro Dinis Gaspar
  - Carlos Morón Fernández
  - Vasco N. G. J. Soares
  - João M. L. P. Caldeira
  - Hélio Silva
  citation_count: 17
  full_citation: '>'
  full_text: ">\napplied  \nsciences\nArticle\nDevelopment of Technological Capabilities\
    \ through the\nInternet of Things (IoT): Survey of Opportunities and\nBarriers\
    \ for IoT Implementation in Portugal’s Agro-Industry\nPedro D. Gaspar 1,2\n, Carlos\
    \ M. Fernandez 1, Vasco N. G. J. Soares 3,4,5,*\n, João M. L. P. Caldeira 3,4,5\n\
    and\nHélio Silva 6\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\
    \x06\a\nCitation: Gaspar, P.D.; Fernandez,\nC.M.; Soares, V.N.G.J.; Caldeira,\n\
    J.M.L.P.; Silva, H. Development of\nTechnological Capabilities through\nthe Internet\
    \ of Things (IoT): Survey of\nOpportunities and Barriers for IoT\nImplementation\
    \ in Portugal’s\nAgro-Industry. Appl. Sci. 2021, 11,\n3454. https://doi.org/10.3390/\n\
    app11083454\nAcademic Editor: Luca Mazzoni\nReceived: 16 March 2021\nAccepted:\
    \ 9 April 2021\nPublished: 12 April 2021\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nDeparment of Electromechanical Engineering, University of Beira Interior,\
    \ Rua Marquês d’Ávila e Bolama,\n6201-001 Covilhã, Portugal; dinis@ubi.pt (P.D.G.);\
    \ carlos.fernandez@ubi.pt (C.M.F.)\n2\nCentre for Mechanical and Aerospace Science\
    \ and Technologies (C-MAST), Rua Marquês d’Ávila e Bolama,\n6201-001 Covilhã,\
    \ Portugal\n3\nPolytechnic Institute of Castelo Branco, 6000-084 Castelo Branco,\
    \ Portugal; jcaldeira@ipcb.pt\n4\nInstituto de Telecomunicações, 6201-001 Covilhã,\
    \ Portugal\n5\nInspiringSci, 6000-767 Castelo Branco, Portugal\n6\nEvox, 6000-767\
    \ Castelo Branco, Portugal; helio.silva@evox.pt\n*\nCorrespondence: vasco.g.soares@ipcb.pt\n\
    Abstract: The agro-industrial sector consumes a signiﬁcant amount of natural resources\
    \ for farming\nand meat production. By 2050, population growth is expected, generating\
    \ more demand and,\nconsequently, more consumption of scarce resources. This challenging\
    \ scenario is a concern of the\nEuropean Commission, revealed in the Green Deal\
    \ commitment and by the United Nations’ 12th\ngoal of sustainable development.\
    \ Thus, organizations must increase productivity and be more\nsustainable as soon\
    \ as possible. Internet of Things (IoT) is introduced as a solution to facilitate\n\
    agro-food companies to be more eco-efﬁcient, mainly facing difﬁculties on farms,\
    \ such as food\nloss and waste, best efﬁciency in management of resources, and\
    \ production. The deployment of\nthis technology depends on the stage of maturity\
    \ and potential of implementation. To assess and\ncharacterize companies, with\
    \ respect of IoT implementation, a survey was applied in 21 micro, small\nand\
    \ medium agro-food companies, belonging to milk, honey, olive oil, jams, fruticulture,\
    \ bakery\nand pastry, meat, coffee, and wine sectors, in the central region of\
    \ Portugal. As results, this paper\nreveals the stage of maturity, level of sophistication,\
    \ potential, opportunities, solutions, and barriers\nfor implementation of IoT.\
    \ Additionally, suggestions and recommendations to improve practices\nare discussed.\n\
    Keywords: agro-food industry; IoT implementation; sustainable agriculture; smart\
    \ farming; chal-\nlenges and solutions; potential and barriers\n1. Introduction\n\
    The agro-industrial sector uses about 20% of global land, 70% percent of water,\
    \ and\n32% of total energy produced [1]. Population growth is creating more demand\
    \ and putting\npressure on this sector. The number of global inhabitants is estimated\
    \ to reach nine billion\npeople by 2050, which means 30% more people than at present\
    \ and an increase of 60% in\nfood demand [2–4].\nThis scenario is even more challenging\
    \ when considering the United Nations’ (UN)\nreport on sustainable development\
    \ goals. This study reveals the importance of production\nand consumption for\
    \ humanity. However, this draws attention to the unsustainable use\nof natural\
    \ resources, with alarming numbers of material footprint growths at rates of\n\
    about 17% between 2010 and 2017. Another concern is electric and electronic waste,\
    \ which\nhas been increasing faster than recycling can process. Another aspect\
    \ is the signiﬁcant\nproportion of food that is lost along the supply chain before\
    \ it reaches the consumer, which\nAppl. Sci. 2021, 11, 3454. https://doi.org/10.3390/app11083454\n\
    https://www.mdpi.com/journal/applsci\nAppl. Sci. 2021, 11, 3454\n2 of 18\ncan\
    \ be 13.8% on average, considering after harvesting and during transport, storage\
    \ and\nprocessing stands [5]. However, if loss and waste through the entire food\
    \ supply chain\n(FSC), farming (production), postharvest, processing, distribution\
    \ and consumption is\nconsidered, this number could be up one third of all food\
    \ produced. It is important to\nhighlight that food loss and waste contributes\
    \ to problems with food security and natural\nresource management [1].\nSustainability\
    \ is a broad concept that addresses most aspects of human life, playing\nan important\
    \ role in social, environmental and economic aspects. The European Green\nDeal\
    \ provides an action plan to reduce greenhouse gas emissions by 40%, at least,\
    \ when\ncompared to 1990, increase the share of renewable energy by 32%, and improve\
    \ energy\nefﬁciency by 32.5% by increasing the efﬁcient use of resources by changing\
    \ to a clean, circu-\nlar economy, restoring biodiversity, and cutting pollution\
    \ [6]. The EU aims to be climate\nneutral by 2050, and, in the next few years,\
    \ this political commitment will become laws\nand thus a legal obligation. As\
    \ such, these changes have to be considered by companies,\nespecially micro, small,\
    \ and medium enterprises (MSMEs) of the agro-industrial sector,\ntransforming\
    \ their processes to be more eco-efﬁcient [7].\nThis picture leads to some questions:\
    \ (1) How to improve efﬁciency using the Internet\nof Things (IoT)? (2) Are MSMEs\
    \ prepared to use this technology? (3) Which are the\nopportunities and barriers\
    \ for IoT implementation? A mixed method approach was\nchosen to address these\
    \ questions, consisting in a combination of literature review, general\ninterviews,\
    \ and expert site visits, as well as a detailed interview, in order to carry out\n\
    this research.\nIn combination with the literature review, a survey was carried\
    \ out, in two phases, to\nassess Portugal’s proﬁle with respect to IoT implementation.\
    \ Phase 1 was a survey devoted\nto assess the potential and maturity of IoT solution\
    \ implementation, with twenty-one com-\npanies. In Phase 2, ﬁve companies were\
    \ chosen based on the answers provided in Phase 1\nto perform a detailed survey,\
    \ considering a realistic project, budget, and customer expecta-\ntions to assess\
    \ IoT implementation. This approach aims to assess, in real case scenarios,\n\
    IoT opportunities and solution implementations, and to overcome the lack of information\n\
    in the literature. Additionally, this sample provides an overview of the IoT status\
    \ in Por-\ntuguese agro-industry companies, which are composed mainly of MSMEs.\
    \ The results of\nthe literature research and surveys are shown and discussed\
    \ in the following sections.\n2. Background\nThe background of Portugal’s agro-industry\
    \ context is provided in this section. Addi-\ntionally, the main results of the\
    \ literature review related to IoT, applied in the agro-industry,\nare discussed.\n\
    2.1. Portugal’s Agro-Industry Context\nPortugal has about 10 million inhabitants,\
    \ of which 30.1% live in predominantly rural\nregions, and the country had a nominal\
    \ GDP of 212 billion Euros in 2019. In percentage\nterms, compared to the European\
    \ Union with its 27 member states, the total population\ncorresponds to 2.3%,\
    \ the rural population corresponds to 3.5%, and the total GDP is 1.5%,\nas shown\
    \ in Table 1 [8].\nTable 1. Portugal and EU: comparative GDP, population and rural\
    \ population, in 2019 [7].\nRegion\nNominal GDP\n(Million EUR)\nTotal Population\n\
    Rural Population\nPortugal\n212,303 (1.5%)\n10,276,617 (2.3%)\n3,176,328 (3.5%)\n\
    EU 27 (100%)\n13,923,343\n446,824,564\n90,980,718\nIn agribusiness, the total\
    \ production value was 6.796 million Euros, with participation\nof crops being\
    \ 61.2% and the production of animals and their derivatives being 38.8%, in\n\
    2019. In percentage terms, compared to the European Union with its 27 member states,\n\
    Appl. Sci. 2021, 11, 3454\n3 of 18\ntotal production outputs corresponds to 2.0%,\
    \ crops corresponds to 2.1% and total animals\nis 1.8%, as shown in Table 2 [8].\n\
    Table 2. Portugal and EU: comparative total agro-industry output, crop output\
    \ and animal output,\nin 2019 [7].\nRegion\nTotal Output\n(Million EUR)\nCrop\
    \ Output\n(Million EUR)\nAnimal Output\n(Million EUR)\nPortugal\n6796 (2.0%)\n\
    4157 (2.1%)\n2639 (1.8%)\nEU 27 (100%)\n341,098\n196,082\n145,015\nNew technologies\
    \ can be applied in the agro-food sector to provide sustainability,\ncompetitiveness\
    \ and increase efﬁciency in different operations along all FSCs. Several\nstudies\
    \ point to the Internet of Things (IoT) as a key solution to improve an organization’s\n\
    performance, unlocking the potential they already have; however, in many cases,\
    \ these are\nhidden, not measured, not processed or even just ignored [9].\nConsidering\
    \ the questions that this framework aims to answer, the literature review\ndesign\
    \ started by the deﬁnition of keywords and the selection of scientiﬁc databases.\
    \ The\nchosen keywords were: IoT OR “internet of things” AND review AND Agro-industry\n\
    OR “smart farming” OR “precision agriculture”. The selected scientiﬁc databases\
    \ were\nScience Direct and MDPI. Papers selection was based on the most recent\
    \ ﬁve years, title\nanalysis and content, resulting in 33 relevant publications.\
    \ Additionally, some exploratory\nresearch was conducted to reinforce this research.\
    \ The main results of IoT application in\nagro-industry are grouped by subject\
    \ and summarized in Table 3.\nTable 3. Main results of IoT applied in agro-industry.\n\
    Main Subject of Papers\nIdentiﬁed Papers\nApplication of IoT in agro-industry\n\
    33\nSmart farming, intelligent farming or precision agriculture\n14\nMonitoring,\
    \ measuring, controlling and tracking\n6\nArtiﬁcial Intelligence, data driven\
    \ decisions\n5\nBlock chain\n2\n(Cyber)security\n2\nBig data\n5\nRobotics\n2\n\
    Unmanned aerial vehicles (UAV)\n2\nOpportunities and barriers for IoT\n5\nOthers\n\
    3\nNote: The papers described above can be related to one or more categories.\n\
    The next sections highlights the main concepts related to the current study.\n\
    2.2. Internet of Things (IoT)\nThe Internet of Things, or IoT, allows physical\
    \ objects to be identiﬁed and tracked\nthrough the collection of relevant data,\
    \ which will be transformed into useful information\nand transmitted over a network,\
    \ enabling the creation of alerts for situations that may\nrequire some type of\
    \ correction. This concept provides agility and visibility in tracking\nand sharing\
    \ information, facilitating the planning and in the control of processes. Thus,\
    \ an\nobject capable of establishing connection through the Internet and that\
    \ communicates with\nother objects in a network is considered a “thing”. Its application\
    \ can improve efﬁciency in\nseveral ﬁelds, such as, households appliances, electronics,\
    \ furniture, agriculture, industrial\nmachinery [10,11]. In general, IoT architecture\
    \ is composed of four layers, considering the\nmain components of IoT solutions:\
    \ perception, transport, processing and applications.\n•\nPerception/smart device:\
    \ this layer enables to connect physical devices in a digital\nnetwork, allowing\
    \ real-time information to be collected and processed. Sensors can\nAppl. Sci.\
    \ 2021, 11, 3454\n4 of 18\nperform measurements of temperature, air quality, speed,\
    \ humidity, pressure, ﬂow,\nmovement, electricity, etc.\n•\nTransport: after measurements\
    \ are done, the results must be transmitted. This layer\nenables Internet connection\
    \ through networks and protocols, such as WiFi, global\nsystem for mobile communications\
    \ (GSM), Bluetooth, etc.\n•\nProcessing: the collected and transmitted information\
    \ becomes data and needs to be\nstored, ﬁltered, processed, and analyzed.\n•\n\
    Application: this is the interface layer, allowing monitoring, decision-making,\
    \ control-\nling, regulating, command, etc. Concepts are changed when, for example,\
    \ they are\napplied to agriculture, turning a simple a farm into a smart farm.\n\
    Some other authors refer to IoT with three layers [12] and others with ﬁve layers\
    \ [13].\n2.3. Smart Farming and Precision Agriculture\nSmart farming can be understood\
    \ as the application of supplementary technologies to\nagricultural production\
    \ techniques to help minimize waste and increase productivity. The\napplication\
    \ of IoT in farming allows to boost the production process through plantation\n\
    monitoring, soil and water management, irrigation scheduling, pest control, delivery\n\
    tracking; using data from temperature, luminosity, humidity, pressure, ground\
    \ chemical\nconcentration, and images, which are collected by sensors and cameras,\
    \ using unmanned\nﬂying equipment (UAV), agricultural information management systems,\
    \ global positioning\nsystems (GPS) and communication networks. This integration\
    \ results in the optimization\nof scarce resources.\nPrecision agriculture has\
    \ its concept linked direct to precision, which means, to manage\nprecisely resources,\
    \ such as energy, soil, water, fertilizers, herbicides and pesticides, among\n\
    others, using different methods and techniques [14]. To achieve the best management,\n\
    the most correct information is fundamental. Thus, IoT is noted as a solution\
    \ to optimize\nagriculture and for precision agriculture.\n2.4. Unmanned Aerial\
    \ Equipment (UAV) or Drones\nOne of the most versatile IoT devices are the Unmanned\
    \ Aerial Equipment (UAV). This\nunmanned vehicle is usually composed of a ground\
    \ controller and a communication system.\nUsually, its function in agriculture\
    \ is related to aerial surveillance in precision agriculture\nfor monitoring weeds,\
    \ vegetation growth, irrigation, crops, etc. [15]. To enhance system\nefﬁciency,\
    \ other technologies can be aggregated, such as artiﬁcial intelligence (machine\n\
    learning or deep learning), mobile edge computing, and software-deﬁned networks\
    \ [16].\nAssociated with specialized sensors, UAVs are becoming powerful sensing\
    \ systems that\ncomplement IoT-based techniques [15].\n2.5. Artiﬁcial Intelligence/Data\
    \ Driven Decisions\nThe use of IoT brings a huge amount of information and variables.\
    \ This information\nmust be treated, otherwise it is useless. The process for\
    \ optimization includes system\nmodeling, which sometimes is difﬁcult due to the\
    \ number of variables. There are algorithms\nthat are specialized to overcome\
    \ these difﬁculties. In the agro-industry, the most common\nare deep learning\
    \ and machine learning, based on big data. An example is the greenhouse\nmicroclimate,\
    \ which is complex, multiparametric, non-linear and depends on a set of\nexternal\
    \ and internal factors. Artiﬁcial neural networks have been used to reduce energy\n\
    consumption [17]. Other artiﬁcial intelligence (AI) applications are related,\
    \ for example, to\nthe detection of diseases in crops, to distinguish plant or\
    \ ﬂower types [18], optimization for\nUAVs [16], and the detection of insects\
    \ [19].\n2.6. Big Data\nAs result of collecting data from different sources, a\
    \ huge set of data is generated and\nis combined as big data [9,20]. From the\
    \ farmer’s perspective, big data can add value to\ndecision making. Data processing\
    \ and analytics involve the transformation of farm decision\nAppl. Sci. 2021,\
    \ 11, 3454\n5 of 18\nmaking, from a traditional decision to a precise data-driven\
    \ decision [21]. However, the data\nhave some challenges, related to their transmission,\
    \ storage and processing security. Block\nchain is noted as a technology that\
    \ can improve security. Despite large opportunities due\nto digitalization and\
    \ digital tools to boost productivity and environmental improvement,\nthey are\
    \ limited by some issues, including data governance, a lack of skill in how to\
    \ handle\nand interpret data, and unclear return on investments in new technologies,\
    \ from farmer’s\npoint of view [9].\n2.7. Block Chain\nThe block chain concept\
    \ is based on a decentralized, distributed ledger for storing\ntime-stamped transactions\
    \ between many computers in a peer-to-peer network. Thus,\nany involved record\
    \ cannot be tampered with retroactively. This concept allows block\nchain users\
    \ to audit and verify transactions, independently and transparently. Nowadays,\n\
    this technology is applied in cryptocurrencies, processing records called “blocks”,\
    \ which\nare connected using cryptographic techniques. Each block must have a\
    \ hash code of the\nprevious block, a timestamp, and a set of conﬁrmed transactions\
    \ [22,23].\nThis technology has many applications in precision agriculture and/or\
    \ smart agricul-\nture. The adoption of IoT brought a need to develop smart peer-to-peer\
    \ systems capable\nof verifying, securing, monitoring, and analyzing agricultural\
    \ data. These data must be\nsecure and reliable. Block chain is changing the classical\
    \ methods of storing, sorting and\nsharing agricultural data into a more reliable,\
    \ immutable, transparent and decentralized\nmanner. However, the adoption of blockchain\
    \ in smart farming or precision agriculture\nstill needs to mature to become a\
    \ reality. Currently, there are several projects using this\ntechnology. A total\
    \ of 40% are in the concept phase, 53% are in the pilot phase, and 7% do\nnot\
    \ have available information [22,23].\n2.8. Robotics\nAgricultural activities\
    \ involving robotics exhibit a high degree of technology and\nautonomy to perform\
    \ tasks. This degree of autonomy between a simple IoT device and a\nrobot differs.\
    \ Currently, most common applications in agriculture are linked to harvesting\n\
    and weeding, followed by diseases detection and seeding [14]. Technological advances\n\
    in machine vision, GPS, laser technologies, actuators, and mechatronics have allowed\n\
    the implementation of robotic systems in agro-industry [24]. Several robotic harvesting\n\
    systems have been developed for cucumber, strawberry, tomato, asparagus, grain,\
    \ lettuce,\nmushroom, and orange crops, among others. Additionally, the integration\
    \ of IoT, cloud\ncomputing and robotics is developing rapidly. Several sensors\
    \ are applied in robotics,\nmachine vision being one of the most important. Unfortunately,\
    \ the number of applications\ncompletely developed which are used in real scenarios\
    \ is still limited [12].\n2.9. IoT in Agriculture\nIoT applied in agriculture\
    \ can reshape all concepts, transforming traditional farm-\ning into smart farming\
    \ (or Agriculture 4.0). It uses different types of sensors to collect\ndata (e.g.,\
    \ temperature, humidity, light, pressure, presence, etc.), and enables precision\n\
    agriculture. Precision agriculture uses data-driven decisions with a base of information\n\
    technology to ensure that crops and soil receive exactly what is necessary for\
    \ optimum\nheathy and productivity [10,25–31]. Figure 1 summarizes most of the\
    \ challenges in farming\nand livestock production, subdivided into monitoring,\
    \ measuring, tracking, and control-\nling. The most important and common variables\
    \ for production are connected to each\nof these sections. On the right side,\
    \ different approaches based on IoT solutions through\ndigitalization of a “thing”\
    \ [32] are shown. Each of these solutions can generate a huge\namount of data,\
    \ called big data [33,34], which is collected in real-time and processed by\n\
    optimization AI-based algorithms for data driven decisions and other technologies\
    \ [16,17],\naiming at monitoring, measuring, tracking or controlling, allowing\
    \ to improve production\nresults [10,11,13,15,18,19,24,25,35–44]. Block chain\
    \ is an emerging technology and is con-\nAppl. Sci. 2021, 11, 3454\n6 of 18\n\
    sidered a solution for the cybersecurity of IoT devices [22]. Several approaches\
    \ like robotics\nare considered as solutions as well [12,14].\nFigure 1. Main\
    \ challenges and IoT solutions.\nIn the rest of the FSC, IoT can signiﬁcantly\
    \ reduce constraints, loss and waste during\npostharvest, processing, distribution,\
    \ and consumption. While in postharvest, processing\nand in distribution, improvement\
    \ is mostly linked to logistics; in the consumption level, it\ncould change a\
    \ consumer’s perception or behavior, using intelligent packaging. In all FSCs\n\
    food loss and waste can be reduced with the implement of IoT [45].\nDespite of\
    \ all beneﬁts that IoT technology can bring to organizations, as previously\n\
    noted, the main barriers for its implementation from a MSME farmer’s perspective\
    \ are\ninfrastructure, knowledge, costs, risks, and cybersecurity. Most papers\
    \ point to IoT\nas a solution and discuss technical issues and applications related\
    \ to it. Just a few pa-\npers consider a farmers’ reality in a generic approach.\
    \ This research is summarized in\nTable 4 [4,11,46].\nThus, the best results and\
    \ success depend, not only on the application of IoT, but also\non the approach,\
    \ choosing the right solution according to an organization needs. Thus,\nit is\
    \ very important to discover an actual framework for MSME farming organizations\n\
    in the central region of Portugal, and answers research questions 2 and 3. To\
    \ assess the\nsophistication and the potential for IoT transferability for companies,\
    \ a survey was carried\nwith 21 organizations. Additionally, 5 companies were\
    \ be chosen for a more detailed survey.\nThus, this study reveals the maturity\
    \ stage, sophistication, potential, opportunities,\nsolutions and barriers of\
    \ IoT deployment, through a case study performed in the central\nregion of Portugal,\
    \ within the scope of the project Development of Technological Capabil-\nities\
    \ for the Industrial Application of the Internet of Things (IOTEC) [47]. The results\
    \ of\nthe survey and discussions will be presented in subsequent sections. Section\
    \ 3 includes a\ndescription of the Materials and Methods. It includes details\
    \ of the two-step survey. The\nsample characteristics are provided, as is the\
    \ structure of each questionnaire. Section 4\npresents the results and includes\
    \ a discussion. It includes an analysis of the Phase 1 survey,\ndevoted to assessing\
    \ the potential and maturity of IoT solution implementation, as well as\nthe Phase\
    \ 2 survey to the assess a real scenario of IoT opportunities and solution implemen-\n\
    tation. Section 5 provides some suggestions and recommendations for the digitalization\n\
    Appl. Sci. 2021, 11, 3454\n7 of 18\nof the agro-food companies, based on an analysis\
    \ of the results of the surveys. Section 6\ndescribes the main conclusions of\
    \ the study.\nTable 4. Brief description of main IoT challenges (adapted from\
    \ [4,11,46]).\nBarriers\nBrief Description\n(Cyber)security\nOperational risks\
    \ are related to natural causes, such as animal attacks, rain,\nlightning, or\
    \ even regular maintenance, could cause stoppage at a farm.\nAdditionally, hacker\
    \ attacks are linked to accessing sensitive information,\nhijacking cloud information\
    \ or databases, or even blocking wireless signals.\nCost\nImplementation and operation\
    \ are the main costs for IoT in agriculture.\nThe implementation costs consist\
    \ of hardware costs, such as IoT\ndevices/sensors, base station infrastructure,\
    \ and gateways. Furthermore,\nrunning costs include an uninterrupted subscription\
    \ for the management\nof IoT devices, the exchange of information among other\
    \ services, and\ncentralized services that provide information/data collection.\n\
    Lack of knowledge\nMost farmers are uneducated in IoT, which creates a great barrier\
    \ to\nunderstanding how technology could contribute to improve production.\nFurthermore,\
    \ it increases the costs of training to qualify people to use IoT\non their farms.\n\
    Interoperability\nSeveral IoT devices, standards and protocols are necessary to\
    \ enable\ncommunication between devices from different manufacturers.\n3. Materials\
    \ and Methods\nTo assess the current state of agro-industry with respect to IoT\
    \ implementation for com-\npanies in the central region of Portugal, a survey\
    \ was selected as the methodology, which\nwas divided in two steps, each one with\
    \ its own objectives and activities, as shown below:\nPhase 1: Assess the potential\
    \ and maturity pf IoT solution implementation.\n•\nDeﬁnition of sample;\n•\nStructuring\
    \ script;\n•\nConducting interviews;\nPhase 2: Assess real scenario for IoT opportunities\
    \ and solution implementation.\n•\nSelection of ﬁve companies for a deeper questionnaire\
    \ to assesses opportunities and\nconstraints of IoT implementation.\n3.1. Phase\
    \ 1: Assess the Potential and Maturity of IoT Solution Implementation\nAn inquiry\
    \ with several questions was made to assess the potential and maturity of IoT\n\
    solution implementation. Additionally, the survey reveals the sophistication of\
    \ interviewed\ncompanies. Detailed information about each step is shown in subsequent\
    \ sections.\n3.1.1. Deﬁnition of the Stratiﬁed Sample of Agro-Food Companies\n\
    The initial stage included the following methodological tasks:\n•\nLimit of the\
    \ sample of agro-food companies for questioning;\n•\nCreation of an “Alternative\
    \ Business Exchange”, in order to ensure, in due time,\neventual failures/possibility\
    \ of refusing to answer and/or last-minute impossibili-\nties/imponderables of\
    \ the pre-selected sample, even after due diligence of\n(re)conﬁrmation;\n•\n\
    Survey and validation of e-mail contacts from the group of companies in the agro-\n\
    food sector, in order to guarantee a sample with validated responses from at least\
    \ 21\ncompanies in the central region of Portugal.\nAs the cluster of agro-industrial\
    \ organizations of the central region in Portugal, Inov-\nCluster’s associates\
    \ were potential companies for this part of the study [48], which was\nalso in\
    \ line with IOTEC project objectives. The contact list was analyzed, and after\
    \ starting\nAppl. Sci. 2021, 11, 3454\n8 of 18\nthe survey it was veriﬁed that\
    \ some contacts no longer corresponded to the initial phone\nnumbers and some\
    \ of the initially contacted companies were closed.\nNotwithstanding these constraints,\
    \ the information provided, associated with the\nadopted survey method, enabled\
    \ an important methodological advance, namely allowing\nthe survey to be directed\
    \ to all companies that fell into the desired category and whose\nheadquarters\
    \ were located in the central region of Portugal. These options increased the\n\
    likelihood of obtaining more favorable response rates and guaranteed representativeness\n\
    in the sampling process.\nFigure 2 shows the percentage of small businesses in\
    \ the subsector of the agro-food\nsegment surveyed in the central region of Portugal.\n\
    Figure 2. Distribution of surveyed companies by sector of activity.\nIt was veriﬁed\
    \ that most of the companies that were made available to collaborate\nin the characterization\
    \ study belonged to the dairy sector, followed by the olive oil and\nhoney sectors.\n\
    Additionally, information about company sizes is shown in Figure 3. Half of the\n\
    companies surveyed were micro-enterprises with fewer than ﬁve employees, with\
    \ 40% of\nthe companies being from the small business category. Only 10% of companies\
    \ surveyed\nalready had a size, considering the number of workers, which corresponded\
    \ to a medium-\nsized company. This result highlights the reality of the agro-food\
    \ industry, not only in the\ncentral region, but also in the whole country, which\
    \ is composed mainly of micro and small\nenterprises, many of them being family\
    \ businesses.\nFigure 3. Distribution of surveyed companies by workers.\nThe main\
    \ constraints found in the course of the study were:\n•\nDifferent segments, processes\
    \ and work shifts cause difﬁculties in making contact. As\nexample, the productive\
    \ section of bakery and pastry companies work during night\nAppl. Sci. 2021, 11,\
    \ 3454\n9 of 18\nlimiting the contact possibilities. Additionally, in agricultural\
    \ activities, the work\nshift is during the day, without interruptions. In both\
    \ cases, there are difﬁculties in\ncontacting via telephone as well as with scheduling;\n\
    •\nReduced sensitivity to the issues raised, as the business fabric in these sectors,\
    \ with\nnumerous family holdings, shows a strong dismay or perception of the issues\
    \ at stake\n(low qualiﬁcations and advanced age of those/workers, learning from\
    \ work itself).\nAfter overcoming these constraints and validating the contacts,\
    \ the survey was con-\nducted in person or by telephone.\n3.1.2. Structuring the\
    \ Script and Building the Questionnaire\nThis stage comprised the deﬁnition of\
    \ the script for face-to-face/telephone interviews,\nsupported by a multitude\
    \ of issues directly related to the sophistication of companies in the\nagro-food\
    \ sector and their appetite for the use of multimedia tools. The survey consisted\
    \ of\n31 questions that aimed to enable the characterization of the sophistication\
    \ of agro-food\ncompanies and their production process. The interviews were held\
    \ throughout 2018.\nThis stage focused on the face-to-face and telephone interview\
    \ process. We tried to\nestablish a procedure for the collection of information\
    \ via telephone, and face-to-face inter-\nviews were used when phone contact was\
    \ impossible or interviewees were unavailable.\nAfter compiling the 21 carried\
    \ out face-to-face/telephone surveys, the data were\ncollected with an online\
    \ application in a comma-separated values (CSV) format, compatible\nwith spreadsheet\
    \ software, and were exported.\n3.2. Phase 2: Assess Real Scenario for IoT Opportunities\
    \ and Solution Implementation\nThe main objectives of this topic were to identify,\
    \ by sector of activity, which parts of\ncompanies received more investment, potential\
    \ for implementation of IoT, identiﬁcation of\nopportunities, budget, return of\
    \ investment, and expected results in order to assess if the\nproject was realistic\
    \ within a company’s budget and calendars. In addition, to identify the\nmain\
    \ implementation restrictions.\nSelection of 5 Companies to Deeper Questionnaire\
    \ Assessing Opportunities and\nConstrains of IoT Implementation\nThis selection\
    \ was made based on the previous questionnaire, which showed differ-\nences in\
    \ company maturity. However, this criterion was not the only one considered, since\n\
    even companies with a low maturity show high potential for transferability of\
    \ IoT. The\nIoT implementation process should start gradually and incrementally\
    \ over a period of\ntime, and between 6 months and 2 years, depending on the maturity\
    \ of the company, may\nbe necessary.\nThe main objectives of this questionnaire\
    \ were to identify, by activity segment, which\nparts of companies receives more\
    \ investment, potential for implementation of IoT, identiﬁ-\ncation of opportunities,\
    \ budget, return of investment, and expected results, according to\nthe state\
    \ of each company. A survey of the opportunities was carried out by contacting\
    \ the\nselected companies that, based on the questionnaire, were selected: Delta\
    \ Cafés, Massimo\nZanetti Beverage Iberia, Fumeiros da Guarda, Sabores da Guarda\
    \ and Claro’s Beekeeping.\n4. Results and Discussion\n4.1. Phase 1: Assess the\
    \ Potential and Maturity for IoT Solution Implementation\nA compilation of questionnaire\
    \ answers is described in this section. Only the most\nrelevant data are presented,\
    \ analyzed, and discussed, as shown in Table 5. The results are\ndivided into\
    \ topics, as is the survey. Percentage was chosen for a better understanding\n\
    and comparison.\nAppl. Sci. 2021, 11, 3454\n10 of 18\nTable 5. Summary of applied\
    \ survey.\nQuestionnaire\nAnswers\n(Yes)\n(No)\n(1)\nDoes the company have an\
    \ organized information system? (Network, servers,\nconnectivity)?\n4. Results\
    \ and Discussion \n4.1. Phase 1: Assess the Potential and Maturity for IoT Solution\
    \ Implementation \nA compilation of questionnaire answers is described in this\
    \ section. Only the most \nrelevant data are presented, analyzed, and discussed,\
    \ as shown in Table 5. The results are \ndivided into topics, as is the survey.\
    \ Percentage was chosen for a better understanding \nand comparison. \nTable 5.\
    \ Summary of applied survey. \nQuestionnaire \nAnswers \n(Yes) \n(No) \n(1) Does\
    \ the company have an organized information system? (Network, serv-\ners, connectivity)?\
    \ \n62% \n38% \n \n(2) Does the company use planning and decision support tools?\
    \ \n38% \n62% \n \n(3) Does the company record the relationship between the different\
    \ items or \nbatches used as raw materials and used items or batches of finished\
    \  \nproducts, through computers? \n69% \n31% \n \n(4) Perform efficient handling\
    \ including expiration date, temperatures, etc.? \n67% \n33% \n \n(5) Is there\
    \ any kind of control to guarantee the transport, storage and exhibition \nuntil\
    \ the sale of the products? \n52% \n48% \n \n(6) Is there a need for real-time\
    \ data collection? \n71% \n29% \n \n(7) Is the company connected to automated\
    \ production systems? \n29% \n71% \n \n(8) Are advanced control systems necessary?\
    \ \n43% \n57% \n \n(9) Does the company perform data analysis during the production\
    \ process? \n81% \n19% \n \n(10) The company cross-checks the results of these\
    \ analyses with the traceability \nof production information? \n57% \n43% \n \n\
    4.1.1. Does the Company Have an Organized Information System? (Network, Servers,\
    \ \nConnectivity)? \nIn Table 5, item 1 indicates that just over half of the companies\
    \ in the agro-food sector \nthat were part of the inquiry process have an organized\
    \ information system, whether it \nconsists of a data network, servers, or even\
    \ connectivity. At this point, there is a need for \nthe development of information\
    \ and communication technology and implementation \nstrategies in companies in\
    \ this sector. \n4.1.2. Does the Company Use Planning and Decision Support Tools?\
    \ \n(2)\nDoes the company use planning and decision support tools?\ng\nkeeping.\
    \ \n4. Results and Discussion \n4.1. Phase 1: Assess the Potential and Maturity\
    \ for IoT Solution Implementation \nA compilation of questionnaire answers is\
    \ described in this section. Only the most \nrelevant data are presented, analyzed,\
    \ and discussed, as shown in Table 5. The results are \ndivided into topics, as\
    \ is the survey. Percentage was chosen for a better understanding \nand comparison.\
    \ \nTable 5. Summary of applied survey. \nQuestionnaire \nAnswers \n(Yes) \n(No)\
    \ \n(1) Does the company have an organized information system? (Network, serv-\n\
    ers, connectivity)? \n62% \n38% \n \n(2) Does the company use planning and decision\
    \ support tools? \n38% \n62% \n \n(3) Does the company record the relationship\
    \ between the different items or \nbatches used as raw materials and used items\
    \ or batches of finished  \nproducts, through computers? \n69% \n31% \n \n(4)\
    \ Perform efficient handling including expiration date, temperatures, etc.? \n\
    67% \n33% \n \n(5) Is there any kind of control to guarantee the transport, storage\
    \ and exhibition \nuntil the sale of the products? \n52% \n48% \n \n(6) Is there\
    \ a need for real-time data collection? \n71% \n29% \n \n(7) Is the company connected\
    \ to automated production systems? \n29% \n71% \n \n(8) Are advanced control systems\
    \ necessary? \n43% \n57% \n \n(9) Does the company perform data analysis during\
    \ the production process? \n81% \n19% \n \n(10) The company cross-checks the results\
    \ of these analyses with the traceability \nof production information? \n57% \n\
    43% \n \n4.1.1. Does the Company Have an Organized Information System? (Network,\
    \ Servers, \nConnectivity)? \nIn Table 5, item 1 indicates that just over half\
    \ of the companies in the agro-food sector \nthat were part of the inquiry process\
    \ have an organized information system, whether it \nconsists of a data network,\
    \ servers, or even connectivity. At this point, there is a need for \nthe development\
    \ of information and communication technology and implementation \nstrategies\
    \ in companies in this sector. \n4.1.2. Does the Company Use Planning and Decision\
    \ Support Tools? \n(3)\nDoes the company record the relationship between the different\
    \ items or batches\nused as raw materials and used items or batches of ﬁnished\
    \ products, through\ncomputers?\np\n,\nq\n,\n,\nsimo Zanetti Beverage Iberia,\
    \ Fumeiros da Guarda, Sabores da Guarda and Claro’s Bee-\nkeeping. \n4. Results\
    \ and Discussion \n4.1. Phase 1: Assess the Potential and Maturity for IoT Solution\
    \ Implementation \nA compilation of questionnaire answers is described in this\
    \ section. Only the most \nrelevant data are presented, analyzed, and discussed,\
    \ as shown in Table 5. The results are \ndivided into topics, as is the survey.\
    \ Percentage was chosen for a better understanding \nand comparison. \nTable 5.\
    \ Summary of applied survey. \nQuestionnaire \nAnswers \n(Yes) \n(No) \n(1) Does\
    \ the company have an organized information system? (Network, serv-\ners, connectivity)?\
    \ \n62% \n38% \n \n(2) Does the company use planning and decision support tools?\
    \ \n38% \n62% \n \n(3) Does the company record the relationship between the different\
    \ items or \nbatches used as raw materials and used items or batches of finished\
    \  \nproducts, through computers? \n69% \n31% \n \n(4) Perform efficient handling\
    \ including expiration date, temperatures, etc.? \n67% \n33% \n \n(5) Is there\
    \ any kind of control to guarantee the transport, storage and exhibition \nuntil\
    \ the sale of the products? \n52% \n48% \n \n(6) Is there a need for real-time\
    \ data collection? \n71% \n29% \n \n(7) Is the company connected to automated\
    \ production systems? \n29% \n71% \n \n(8) Are advanced control systems necessary?\
    \ \n43% \n57% \n \n(9) Does the company perform data analysis during the production\
    \ process? \n81% \n19% \n \n(10) The company cross-checks the results of these\
    \ analyses with the traceability \nof production information? \n57% \n43% \n \n\
    4.1.1. Does the Company Have an Organized Information System? (Network, Servers,\
    \ \nConnectivity)? \nIn Table 5, item 1 indicates that just over half of the companies\
    \ in the agro-food sector \nthat were part of the inquiry process have an organized\
    \ information system, whether it \nconsists of a data network, servers, or even\
    \ connectivity. At this point, there is a need for \nthe development of information\
    \ and communication technology and implementation \nstrategies in companies in\
    \ this sector. \n4.1.2. Does the Company Use Planning and Decision Support Tools?\
    \ \n(4)\nPerform efﬁcient handling including expiration date, temperatures, etc.?\n\
    the state of each company. A survey of the opportunities was carried out by contacting\
    \ \nthe selected companies that, based on the questionnaire, were selected: Delta\
    \ Cafés, Mas-\nsimo Zanetti Beverage Iberia, Fumeiros da Guarda, Sabores da Guarda\
    \ and Claro’s Bee-\nkeeping. \n4. Results and Discussion \n4.1. Phase 1: Assess\
    \ the Potential and Maturity for IoT Solution Implementation \nA compilation of\
    \ questionnaire answers is described in this section. Only the most \nrelevant\
    \ data are presented, analyzed, and discussed, as shown in Table 5. The results\
    \ are \ndivided into topics, as is the survey. Percentage was chosen for a better\
    \ understanding \nand comparison. \nTable 5. Summary of applied survey. \nQuestionnaire\
    \ \nAnswers \n(Yes) \n(No) \n(1) Does the company have an organized information\
    \ system? (Network, serv-\ners, connectivity)? \n62% \n38% \n \n(2) Does the company\
    \ use planning and decision support tools? \n38% \n62% \n \n(3) Does the company\
    \ record the relationship between the different items or \nbatches used as raw\
    \ materials and used items or batches of finished  \nproducts, through computers?\
    \ \n69% \n31% \n \n(4) Perform efficient handling including expiration date, temperatures,\
    \ etc.? \n67% \n33% \n \n(5) Is there any kind of control to guarantee the transport,\
    \ storage and exhibition \nuntil the sale of the products? \n52% \n48% \n \n(6)\
    \ Is there a need for real-time data collection? \n71% \n29% \n \n(7) Is the company\
    \ connected to automated production systems? \n29% \n71% \n \n(8) Are advanced\
    \ control systems necessary? \n43% \n57% \n \n(9) Does the company perform data\
    \ analysis during the production process? \n81% \n19% \n \n(10) The company cross-checks\
    \ the results of these analyses with the traceability \nof production information?\
    \ \n57% \n43% \n \n4.1.1. Does the Company Have an Organized Information System?\
    \ (Network, Servers, \nConnectivity)? \nIn Table 5, item 1 indicates that just\
    \ over half of the companies in the agro-food sector \nthat were part of the inquiry\
    \ process have an organized information system, whether it \nconsists of a data\
    \ network, servers, or even connectivity. At this point, there is a need for \n\
    the development of information and communication technology and implementation\
    \ \nstrategies in companies in this sector. \n4.1.2. Does the Company Use Planning\
    \ and Decision Support Tools? \n(5)\nIs there any kind of control to guarantee\
    \ the transport, storage and exhibition until\nthe sale of the products?\nfication\
    \ of opportunities, budget, return of investment, and expected results, according\
    \ to \nthe state of each company. A survey of the opportunities was carried out\
    \ by contacting \nthe selected companies that, based on the questionnaire, were\
    \ selected: Delta Cafés, Mas-\nsimo Zanetti Beverage Iberia, Fumeiros da Guarda,\
    \ Sabores da Guarda and Claro’s Bee-\nkeeping. \n4. Results and Discussion \n\
    4.1. Phase 1: Assess the Potential and Maturity for IoT Solution Implementation\
    \ \nA compilation of questionnaire answers is described in this section. Only\
    \ the most \nrelevant data are presented, analyzed, and discussed, as shown in\
    \ Table 5. The results are \ndivided into topics, as is the survey. Percentage\
    \ was chosen for a better understanding \nand comparison. \nTable 5. Summary of\
    \ applied survey. \nQuestionnaire \nAnswers \n(Yes) \n(No) \n(1) Does the company\
    \ have an organized information system? (Network, serv-\ners, connectivity)? \n\
    62% \n38% \n \n(2) Does the company use planning and decision support tools? \n\
    38% \n62% \n \n(3) Does the company record the relationship between the different\
    \ items or \nbatches used as raw materials and used items or batches of finished\
    \  \nproducts, through computers? \n69% \n31% \n \n(4) Perform efficient handling\
    \ including expiration date, temperatures, etc.? \n67% \n33% \n \n(5) Is there\
    \ any kind of control to guarantee the transport, storage and exhibition \nuntil\
    \ the sale of the products? \n52% \n48% \n \n(6) Is there a need for real-time\
    \ data collection? \n71% \n29% \n \n(7) Is the company connected to automated\
    \ production systems? \n29% \n71% \n \n(8) Are advanced control systems necessary?\
    \ \n43% \n57% \n \n(9) Does the company perform data analysis during the production\
    \ process? \n81% \n19% \n \n(10) The company cross-checks the results of these\
    \ analyses with the traceability \nof production information? \n57% \n43% \n \n\
    4.1.1. Does the Company Have an Organized Information System? (Network, Servers,\
    \ \nConnectivity)? \nIn Table 5, item 1 indicates that just over half of the companies\
    \ in the agro-food sector \nthat were part of the inquiry process have an organized\
    \ information system, whether it \nconsists of a data network, servers, or even\
    \ connectivity. At this point, there is a need for \nthe development of information\
    \ and communication technology and implementation \nstrategies in companies in\
    \ this sector. \n4.1.2. Does the Company Use Planning and Decision Support Tools?\
    \ \n(6)\nIs there a need for real-time data collection?\nparts of companies receives\
    \ more investment, potential for implementation of IoT, identi-\nfication of opportunities,\
    \ budget, return of investment, and expected results, according to \nthe state\
    \ of each company. A survey of the opportunities was carried out by contacting\
    \ \nthe selected companies that, based on the questionnaire, were selected: Delta\
    \ Cafés, Mas-\nsimo Zanetti Beverage Iberia, Fumeiros da Guarda, Sabores da Guarda\
    \ and Claro’s Bee-\nkeeping. \n4. Results and Discussion \n4.1. Phase 1: Assess\
    \ the Potential and Maturity for IoT Solution Implementation \nA compilation of\
    \ questionnaire answers is described in this section. Only the most \nrelevant\
    \ data are presented, analyzed, and discussed, as shown in Table 5. The results\
    \ are \ndivided into topics, as is the survey. Percentage was chosen for a better\
    \ understanding \nand comparison. \nTable 5. Summary of applied survey. \nQuestionnaire\
    \ \nAnswers \n(Yes) \n(No) \n(1) Does the company have an organized information\
    \ system? (Network, serv-\ners, connectivity)? \n62% \n38% \n \n(2) Does the company\
    \ use planning and decision support tools? \n38% \n62% \n \n(3) Does the company\
    \ record the relationship between the different items or \nbatches used as raw\
    \ materials and used items or batches of finished  \nproducts, through computers?\
    \ \n69% \n31% \n \n(4) Perform efficient handling including expiration date, temperatures,\
    \ etc.? \n67% \n33% \n \n(5) Is there any kind of control to guarantee the transport,\
    \ storage and exhibition \nuntil the sale of the products? \n52% \n48% \n \n(6)\
    \ Is there a need for real-time data collection? \n71% \n29% \n \n(7) Is the company\
    \ connected to automated production systems? \n29% \n71% \n \n(8) Are advanced\
    \ control systems necessary? \n43% \n57% \n \n(9) Does the company perform data\
    \ analysis during the production process? \n81% \n19% \n \n(10) The company cross-checks\
    \ the results of these analyses with the traceability \nof production information?\
    \ \n57% \n43% \n \n4.1.1. Does the Company Have an Organized Information System?\
    \ (Network, Servers, \nConnectivity)? \nIn Table 5, item 1 indicates that just\
    \ over half of the companies in the agro-food sector \nthat were part of the inquiry\
    \ process have an organized information system, whether it \nconsists of a data\
    \ network, servers, or even connectivity. At this point, there is a need for \n\
    the development of information and communication technology and implementation\
    \ \nstrategies in companies in this sector. \n4.1.2. Does the Company Use Planning\
    \ and Decision Support Tools? \n(7)\nIs the company connected to automated production\
    \ systems?\ne\ne e\na y\nThe main objectives of this questionnaire were to identify,\
    \ by activity segment, which \nparts of companies receives more investment, potential\
    \ for implementation of IoT, identi-\nfication of opportunities, budget, return\
    \ of investment, and expected results, according to \nthe state of each company.\
    \ A survey of the opportunities was carried out by contacting \nthe selected companies\
    \ that, based on the questionnaire, were selected: Delta Cafés, Mas-\nsimo Zanetti\
    \ Beverage Iberia, Fumeiros da Guarda, Sabores da Guarda and Claro’s Bee-\nkeeping.\
    \ \n4. Results and Discussion \n4.1. Phase 1: Assess the Potential and Maturity\
    \ for IoT Solution Implementation \nA compilation of questionnaire answers is\
    \ described in this section. Only the most \nrelevant data are presented, analyzed,\
    \ and discussed, as shown in Table 5. The results are \ndivided into topics, as\
    \ is the survey. Percentage was chosen for a better understanding \nand comparison.\
    \ \nTable 5. Summary of applied survey. \nQuestionnaire \nAnswers \n(Yes) \n(No)\
    \ \n(1) Does the company have an organized information system? (Network, serv-\n\
    ers, connectivity)? \n62% \n38% \n \n(2) Does the company use planning and decision\
    \ support tools? \n38% \n62% \n \n(3) Does the company record the relationship\
    \ between the different items or \nbatches used as raw materials and used items\
    \ or batches of finished  \nproducts, through computers? \n69% \n31% \n \n(4)\
    \ Perform efficient handling including expiration date, temperatures, etc.? \n\
    67% \n33% \n \n(5) Is there any kind of control to guarantee the transport, storage\
    \ and exhibition \nuntil the sale of the products? \n52% \n48% \n \n(6) Is there\
    \ a need for real-time data collection? \n71% \n29% \n \n(7) Is the company connected\
    \ to automated production systems? \n29% \n71% \n \n(8) Are advanced control systems\
    \ necessary? \n43% \n57% \n \n(9) Does the company perform data analysis during\
    \ the production process? \n81% \n19% \n \n(10) The company cross-checks the results\
    \ of these analyses with the traceability \nof production information? \n57% \n\
    43% \n \n4.1.1. Does the Company Have an Organized Information System? (Network,\
    \ Servers, \nConnectivity)? \nIn Table 5, item 1 indicates that just over half\
    \ of the companies in the agro-food sector \nthat were part of the inquiry process\
    \ have an organized information system, whether it \nconsists of a data network,\
    \ servers, or even connectivity. At this point, there is a need for \nthe development\
    \ of information and communication technology and implementation \nstrategies\
    \ in companies in this sector. \n4.1.2. Does the Company Use Planning and Decision\
    \ Support Tools? \n(8)\nAre advanced control systems necessary?\ntime, and between\
    \ 6 months and 2 years, depending on the maturity of the company, may \nbe necessary.\
    \ \nThe main objectives of this questionnaire were to identify, by activity segment,\
    \ which \nparts of companies receives more investment, potential for implementation\
    \ of IoT, identi-\nfication of opportunities, budget, return of investment, and\
    \ expected results, according to \nthe state of each company. A survey of the\
    \ opportunities was carried out by contacting \nthe selected companies that, based\
    \ on the questionnaire, were selected: Delta Cafés, Mas-\nsimo Zanetti Beverage\
    \ Iberia, Fumeiros da Guarda, Sabores da Guarda and Claro’s Bee-\nkeeping. \n\
    4. Results and Discussion \n4.1. Phase 1: Assess the Potential and Maturity for\
    \ IoT Solution Implementation \nA compilation of questionnaire answers is described\
    \ in this section. Only the most \nrelevant data are presented, analyzed, and\
    \ discussed, as shown in Table 5. The results are \ndivided into topics, as is\
    \ the survey. Percentage was chosen for a better understanding \nand comparison.\
    \ \nTable 5. Summary of applied survey. \nQuestionnaire \nAnswers \n(Yes) \n(No)\
    \ \n(1) Does the company have an organized information system? (Network, serv-\n\
    ers, connectivity)? \n62% \n38% \n \n(2) Does the company use planning and decision\
    \ support tools? \n38% \n62% \n \n(3) Does the company record the relationship\
    \ between the different items or \nbatches used as raw materials and used items\
    \ or batches of finished  \nproducts, through computers? \n69% \n31% \n \n(4)\
    \ Perform efficient handling including expiration date, temperatures, etc.? \n\
    67% \n33% \n \n(5) Is there any kind of control to guarantee the transport, storage\
    \ and exhibition \nuntil the sale of the products? \n52% \n48% \n \n(6) Is there\
    \ a need for real-time data collection? \n71% \n29% \n \n(7) Is the company connected\
    \ to automated production systems? \n29% \n71% \n \n(8) Are advanced control systems\
    \ necessary? \n43% \n57% \n \n(9) Does the company perform data analysis during\
    \ the production process? \n81% \n19% \n \n(10) The company cross-checks the results\
    \ of these analyses with the traceability \nof production information? \n57% \n\
    43% \n \n4.1.1. Does the Company Have an Organized Information System? (Network,\
    \ Servers, \nConnectivity)? \nIn Table 5, item 1 indicates that just over half\
    \ of the companies in the agro-food sector \nthat were part of the inquiry process\
    \ have an organized information system, whether it \nconsists of a data network,\
    \ servers, or even connectivity. At this point, there is a need for \nthe development\
    \ of information and communication technology and implementation \nstrategies\
    \ in companies in this sector. \n4.1.2. Does the Company Use Planning and Decision\
    \ Support Tools? \n(9)\nDoes the company perform data analysis during the production\
    \ process?\nIoT implementation process should start gradually and incrementally\
    \ over a period of \ntime, and between 6 months and 2 years, depending on the\
    \ maturity of the company, may \nbe necessary. \nThe main objectives of this questionnaire\
    \ were to identify, by activity segment, which \nparts of companies receives more\
    \ investment, potential for implementation of IoT, identi-\nfication of opportunities,\
    \ budget, return of investment, and expected results, according to \nthe state\
    \ of each company. A survey of the opportunities was carried out by contacting\
    \ \nthe selected companies that, based on the questionnaire, were selected: Delta\
    \ Cafés, Mas-\nsimo Zanetti Beverage Iberia, Fumeiros da Guarda, Sabores da Guarda\
    \ and Claro’s Bee-\nkeeping. \n4. Results and Discussion \n4.1. Phase 1: Assess\
    \ the Potential and Maturity for IoT Solution Implementation \nA compilation of\
    \ questionnaire answers is described in this section. Only the most \nrelevant\
    \ data are presented, analyzed, and discussed, as shown in Table 5. The results\
    \ are \ndivided into topics, as is the survey. Percentage was chosen for a better\
    \ understanding \nand comparison. \nTable 5. Summary of applied survey. \nQuestionnaire\
    \ \nAnswers \n(Yes) \n(No) \n(1) Does the company have an organized information\
    \ system? (Network, serv-\ners, connectivity)? \n62% \n38% \n \n(2) Does the company\
    \ use planning and decision support tools? \n38% \n62% \n \n(3) Does the company\
    \ record the relationship between the different items or \nbatches used as raw\
    \ materials and used items or batches of finished  \nproducts, through computers?\
    \ \n69% \n31% \n \n(4) Perform efficient handling including expiration date, temperatures,\
    \ etc.? \n67% \n33% \n \n(5) Is there any kind of control to guarantee the transport,\
    \ storage and exhibition \nuntil the sale of the products? \n52% \n48% \n \n(6)\
    \ Is there a need for real-time data collection? \n71% \n29% \n \n(7) Is the company\
    \ connected to automated production systems? \n29% \n71% \n \n(8) Are advanced\
    \ control systems necessary? \n43% \n57% \n \n(9) Does the company perform data\
    \ analysis during the production process? \n81% \n19% \n \n(10) The company cross-checks\
    \ the results of these analyses with the traceability \nof production information?\
    \ \n57% \n43% \n \n4.1.1. Does the Company Have an Organized Information System?\
    \ (Network, Servers, \nConnectivity)? \nIn Table 5, item 1 indicates that just\
    \ over half of the companies in the agro-food sector \nthat were part of the inquiry\
    \ process have an organized information system, whether it \nconsists of a data\
    \ network, servers, or even connectivity. At this point, there is a need for \n\
    the development of information and communication technology and implementation\
    \ \nstrategies in companies in this sector. \n4.1.2. Does the Company Use Planning\
    \ and Decision Support Tools? \n(10)\nThe company cross-checks the results of\
    \ these analyses with the traceability of\nproduction information?\neven companies\
    \ with a low maturity show high potential for transferability of IoT. The \nIoT\
    \ implementation process should start gradually and incrementally over a period\
    \ of \ntime, and between 6 months and 2 years, depending on the maturity of the\
    \ company, may \nbe necessary. \nThe main objectives of this questionnaire were\
    \ to identify, by activity segment, which \nparts of companies receives more investment,\
    \ potential for implementation of IoT, identi-\nfication of opportunities, budget,\
    \ return of investment, and expected results, according to \nthe state of each\
    \ company. A survey of the opportunities was carried out by contacting \nthe selected\
    \ companies that, based on the questionnaire, were selected: Delta Cafés, Mas-\n\
    simo Zanetti Beverage Iberia, Fumeiros da Guarda, Sabores da Guarda and Claro’s\
    \ Bee-\nkeeping. \n4. Results and Discussion \n4.1. Phase 1: Assess the Potential\
    \ and Maturity for IoT Solution Implementation \nA compilation of questionnaire\
    \ answers is described in this section. Only the most \nrelevant data are presented,\
    \ analyzed, and discussed, as shown in Table 5. The results are \ndivided into\
    \ topics, as is the survey. Percentage was chosen for a better understanding \n\
    and comparison. \nTable 5. Summary of applied survey. \nQuestionnaire \nAnswers\
    \ \n(Yes) \n(No) \n(1) Does the company have an organized information system?\
    \ (Network, serv-\ners, connectivity)? \n62% \n38% \n \n(2) Does the company use\
    \ planning and decision support tools? \n38% \n62% \n \n(3) Does the company record\
    \ the relationship between the different items or \nbatches used as raw materials\
    \ and used items or batches of finished  \nproducts, through computers? \n69%\
    \ \n31% \n \n(4) Perform efficient handling including expiration date, temperatures,\
    \ etc.? \n67% \n33% \n \n(5) Is there any kind of control to guarantee the transport,\
    \ storage and exhibition \nuntil the sale of the products? \n52% \n48% \n \n(6)\
    \ Is there a need for real-time data collection? \n71% \n29% \n \n(7) Is the company\
    \ connected to automated production systems? \n29% \n71% \n \n(8) Are advanced\
    \ control systems necessary? \n43% \n57% \n \n(9) Does the company perform data\
    \ analysis during the production process? \n81% \n19% \n \n(10) The company cross-checks\
    \ the results of these analyses with the traceability \nof production information?\
    \ \n57% \n43% \n \n4.1.1. Does the Company Have an Organized Information System?\
    \ (Network, Servers, \nConnectivity)? \nIn Table 5, item 1 indicates that just\
    \ over half of the companies in the agro-food sector \nthat were part of the inquiry\
    \ process have an organized information system, whether it \nconsists of a data\
    \ network, servers, or even connectivity. At this point, there is a need for \n\
    the development of information and communication technology and implementation\
    \ \nstrategies in companies in this sector. \n4.1.2. Does the Company Use Planning\
    \ and Decision Support Tools? \n4.1.1. Does the Company Have an Organized Information\
    \ System? (Network, Servers,\nConnectivity)?\nIn Table 5, item 1 indicates that\
    \ just over half of the companies in the agro-food sector\nthat were part of the\
    \ inquiry process have an organized information system, whether it\nconsists of\
    \ a data network, servers, or even connectivity. At this point, there is a need\n\
    for the development of information and communication technology and implementation\n\
    strategies in companies in this sector.\n4.1.2. Does the Company Use Planning\
    \ and Decision Support Tools?\nIn Table 5, item 2 indicates the use of planning\
    \ and decision support tools. A percent-\nage of companies (over 60%) indicated\
    \ that they do not use any decision support tools.\nNowadays, there is a set of\
    \ computational tools and decision support information aimed at\nimproving processes\
    \ and activities in companies, which can enable cost reduction with raw\nmaterial\
    \ acquisition, storage, logistics, up to the deﬁnition of a price depending on\
    \ a set of\nfactors associated with production and planning. All these characteristics\
    \ allow companies\nto have greater soundness in decisions. In general, companies\
    \ that answered afﬁrmatively\nto this question indicated that they make use of\
    \ a company resource planning software,\nwhich is essentially an enterprise resource\
    \ planning (ERP). In general terms, an ERP system\nis a software platform developed\
    \ to integrate various departments of a company, enabling\nAppl. Sci. 2021, 11,\
    \ 3454\n11 of 18\nthe automation and storage of all business information, that\
    \ is, the ERP system enables\na unique, continuous and consistent ﬂow of information.\
    \ Data integration can follow a\nfunctional approach, e.g., integrating ﬁnance,\
    \ accounting, human resources, manufacturing,\nmarketing, sales, purchasing systems,\
    \ among others, and from a systemic perspective,\nincorporating transaction processing\
    \ systems, management information systems, decision\nsupport systems, etc.\n4.1.3.\
    \ Does the Company Record the Relationship between the Different Items or\nBatches\
    \ Used as Raw Materials and Used Items or Batches of Finished Products,\nthrough\
    \ Computers?\nIn Table 5, item 3 shows whether the companies surveyed record,\
    \ and how, the\nrelationship between different items or lots used as raw materials\
    \ and used ﬁnished items\nor lots. About 70% made this registration using a computer.\n\
    4.1.4. Perform Efﬁcient Handling Including Expiration Date, Temperatures, etc.?\n\
    In Table 5, item 4 shows the proportion of companies surveyed that performs efﬁcient\n\
    handling, including expiration date, temperatures, among other parameters. In\
    \ this case,\n67% of companies indicated performing efﬁcient handling at this\
    \ level. However, only 20%\nof the companies that responded afﬁrmatively indicated\
    \ that this process was carried out\nfor the entire chain, using computer systems\
    \ supported by human resources. The remaining\nafﬁrmative answers indicated that\
    \ this process was carried out in its entirety manually.\n4.1.5. Is There Any\
    \ Kind of Control to Guarantee the Transport, Storage and Exhibition\nUntil the\
    \ Sale of the Products?\nIn Table 5, item 5 analyzes the traceability of products,\
    \ i.e., if there is any type of control\nto ensure transportation, storage and\
    \ exposure until the sale of the products is performed.\nJust over half of the\
    \ companies surveyed answered in the afﬁrmative (52%) this issue\nshows the need\
    \ for sophistication on the part of these companies to carry out traceability\n\
    throughout the product chain, ensuring the maintenance of organoleptic characteristics,\n\
    in addition to undeniable food safety. The only control carried out by the companies\
    \ that\nresponded in the afﬁrmative was temperature control.\n4.1.6. Is There\
    \ a Need for Real-Time Data Collection?\nThis issue, closely linked to the capabilities\
    \ of companies to know in real time how\ndifferent activities are unfolding along\
    \ the product chain, from production, storage for sale,\ninfers the need for real-time\
    \ data collection. This will take a set of sensors, communication\nsystems and\
    \ data acquisition and processing. In Table 5, item 6 shows this need, and about\n\
    70% responded afﬁrmatively. These same companies indicated that the parameter\
    \ which\nrequires real-time data collection was temperature.\n4.1.7. Is the Company\
    \ Connected to Automated Production Systems?\nThis issue is related to the previous\
    \ one. In Table 5, item 7 shows this need, to which\nabout 70% answer afﬁrmatively.\
    \ These same companies indicated that the parameter which\nrequired real-time\
    \ data collection was temperature.\n4.1.8. Are Advanced Control Systems Necessary?\n\
    In Table 5, item 8 shows the need for advanced control systems for production\
    \ ac-\ntivities for the companies surveyed. Only 43% of companies answered this\
    \ question in\nthe afﬁrmative, indicating that these systems are intended for\
    \ granular control of costs\nand production.\n4.1.9. Does the Company Perform\
    \ Data Analysis during the Production Process?\nIn order to evaluate the sophistication\
    \ of management of the production process, this\nquestion aimed to analyze the\
    \ appetite of companies to perform data analysis during the\nAppl. Sci. 2021,\
    \ 11, 3454\n12 of 18\nproduction process. As shown in Table 5, item 9, 81% of\
    \ the companies stated that they\nperformed data analysis during the production\
    \ process.\n4.1.10. Should the Results of These Analyzes Be Cross-Checked with\
    \ the Traceability of\nProduction Information?\nFollowing questions to assess\
    \ sophistication, companies were asked whether they\ncross-referenced the analysis\
    \ of collected data results during the production process with\nthe traceability\
    \ of production information. In this case, 57% of companies claimed to carry\n\
    out this task, as shown in Table 5, item 10.\n4.2. Phase 2: Assess Real Scenario\
    \ for IoT Opportunities and Solutions Implementation\nAiming to provide IoT solutions,\
    \ this second phase survey of opportunities was carried\nout by contacting ﬁve\
    \ selected companies, based on an analysis of the ﬁrst questionnaire:\nDelta Cafés,\
    \ Massimo Zanetti Beverage Iberia, Fumeiros da Guarda, Sabores da Guarda\nand\
    \ Claro’s Beekeeping.\nThe choice was made to precisely describe agro-food companies\
    \ from Portugal. Thus,\ncompanies from different segments and maturity stages\
    \ were chosen. According to this\nanalysis, it was observed that the adaptability\
    \ rate may take longer due to the complexity\nof the technology to be implemented.\
    \ To this end, a model of identiﬁcation of opportunities\nwas designed according\
    \ to each company.\nTable 6 describes the mains features of companies, such as\
    \ designation, sector of\nactivity, awareness of IoT, sector of major investment\
    \ in company, potential for IoT imple-\nmentation and expected time for IoT implementation.\
    \ In this manner, this table reveals an\noverview of agro-food business in Portugal.\n\
    Notice that all companies interviewed were aware of IoT technology. Most of them\
    \ had\nmajor investments in production, except Fumeiros da Guarda. All of them\
    \ had potential\nto implement IoT solutions. However, some time is necessary to\
    \ prepare people and\ninstallations to receive this technology, only Delta Cafés\
    \ was ready to receive it immediately.\nTable 7 shows the main advantages of implementation\
    \ of IoT solutions in each com-\npany. Better relationships with customers was\
    \ expected by all companies, except for Claro’s\nBeekeeping. Fumeiros da Guarda\
    \ e Sabores da Soalheira expected increase of food safety\nwith better controls.\
    \ Delta Cafés expected efﬁciency in technical assistance, anticipation of\nproblems,\
    \ to speed up maintenance, cutting downtimes, etc. Massimo Zanetti Beverage\n\
    Iberia just expected monitoring of work status and Claro’s Beekeeping was interested\
    \ in an\nincrease in productivity, with better monitoring, controls and, also,\
    \ alarms that can inform\npossible problems.\nTable 6. Main features of agro-food\
    \ companies of Portugal.\nCompanies\nSector\nAwareness\nabout IoT\nSector of Major\n\
    Investments\nPotential for IoT\nTime for\nImplementation\nDelta Cafés\nCoffee\n\
    Yes\nProduction\nYes\nNow\nMassimo Zanetti\nBeverage Iberia\nCoffee\nYes\nProduction\n\
    Yes\n6 to 12 months\nFumeiros da\nGuarda\nMeat (cured\nsausages)\nYes\nProspecting\
    \ and\nmaintenance\nYes\nNot informed\nSabores da Guarda\nDairy\nYes\nProduction\n\
    Yes\nNot informed\nClaro’s Beekeeping\nHoney\nYes\nProduction\nYes\nNot informed\n\
    Appl. Sci. 2021, 11, 3454\n13 of 18\nTable 7. Advantages of IoT solutions implementation\
    \ according to each company.\nCompanies\nAdvantages\nDelta Cafés\nMore efﬁciency\
    \ in technical assistance, anticipation of problems, speed up maintenance,\ncutting\
    \ downtimes, etc.\nBetter relationships with customers.\nMassimo Zanetti Beverage\
    \ Iberia\nMore efﬁciency in technical assistance, anticipation of problems, speed\
    \ up maintenance,\ncutting downtimes, etc.\nBetter relationships with customers.\n\
    Better forecasts.\nFumeiros da Guarda\nIncrease in food safety.\nBetter customer\
    \ relationships, promoting more business.\nImprovement in product quality, avoiding\
    \ machinery faults.\nSabores da Soalheira\nBetter control and warranty of food\
    \ safety.\nBetter customer relationships, promoting more business reducing logistic\
    \ difﬁculties.\nClaro’s Beekeeping\nQuick detection of problems.\nAvoid unnecessary\
    \ displacements.\nDetection of productivity levels. Allows for the deﬁnition of\
    \ the best maintenance\nschedules for hives.\nPattern detection can assist the\
    \ beekeeper in more active management of the hive.\n5. Suggestions and Recommendations\n\
    Suggestions and recommendations are provided for the digitalization of agro-food\n\
    companies, based on an analysis of the results of the surveys applied to the sample\
    \ of\ncompanies in the agro-food sector in the central region of the country.\
    \ Note that the number\nof companies that have a high level of sophistication\
    \ relating to the use of information\nand communication technologies, information\
    \ systems, decision support systems, control\nsystem, regulation, command and\
    \ measurement of production processes, is still reduced.\nTable 8 shows IoT opportunities\
    \ for each company, as well as each speciﬁc requirement\nfor IoT application.\
    \ The opportunities are directly linked to the needs of each company,\ndue to\
    \ internal processes which can be improve with IoT solutions. The requirements\
    \ are\nlinked to the speciﬁc reality of company, with their strengths and weakness.\n\
    All IoT opportunities or solutions are related to monitoring and data register,\
    \ and also,\naccess data as graphs in order to analyze them. Only Claro’s Beekeeping\
    \ was interested in\nthreshold alarms to inform the company about possible problems.\
    \ Basic requirements for all\ncompanies were related to preparation of people\
    \ and installations to receive this technology.\nDeployment, tests, procedures,\
    \ training, and maintenance are also a general concern.\nFigure 4 shows a critical\
    \ analysis of the level of sophistication in the sample of agro-\nfood companies\
    \ surveyed. Given the complete and cross-examination of the results of the\nsurvey,\
    \ it was found that half of the companies had a zero level of sophistication,\
    \ while\n15% of the companies had a low level. Only 10% of the companies analyzed\
    \ currently have\na high level of sophistication.\nFigure 4. Sophistication level\
    \ of companies in central region of Portugal.\nAppl. Sci. 2021, 11, 3454\n14 of\
    \ 18\nTable 8. Opportunities and requirements for the implementation of IoT according\
    \ to each company.\nCompanies\nIoT Opportunities\nRequirements\nDelta Cafés\n\
    Monitoring working status, pressure and\ntemperature of production machinery spread\n\
    around the world, accessing reports and\ngraphs easily.\n•\nTeam assignment for\
    \ IoT, departments,\nresponsibilities, procedure training, etc.\n•\nCompatibility\
    \ and requirements for current\ninformation technology.\n•\nDeployment, tests,\
    \ procedures, training,\nmaintenance, etc.\nMassimo Zanetti\nBeverage Iberia\n\
    Monitoring working status (working or nor\nworking) of machinery spread around\
    \ the\nworld, accessing reports and graphs easily.\n•\nTeam assignment for IoT,\
    \ departments,\nresponsibilities, procedures training, etc.\n•\nCompatibility\
    \ and requirements for current\ninformation technology.\n•\nDeployment, tests,\
    \ procedures, training,\nmaintenance, etc.\nFumeiros da Guarda\nMonitoring temperature\
    \ of refrigerators,\naccessing reports and graphs easily.\n•\nIdentify the correct\
    \ places to install sensors.\n•\nTeam assignment for IoT, departments,\nresponsibilities,\
    \ procedures training, etc.\n•\nCompatibility and requirements for current\ninformation\
    \ technology.\n•\nDeployment, tests, procedures, training,\nmaintenance, etc.\n\
    Sabores da Guarda\nMonitoring temperatures of milk transported\nby specialized\
    \ vehicles. Additionally,\naccessing reports and graphs easily.\n•\nTeam assignment\
    \ for IoT, departments,\nresponsibilities, procedures training, etc.\n•\nCompatibility\
    \ and requirements for current\ninformation technology.\n•\nDeployment, tests,\
    \ procedures, training,\nmaintenance, etc.\nClaro’s Beekeeping\nMonitoring temperatures\
    \ and humidity with\nautomatic alarm for speciﬁcs thresholds.\nMeasure and analysis\
    \ of each hive’s weigh.\nAdditionally, accessing reports and graphs\neasily.\n\
    •\nSpeciﬁcation of temperature, humidity and weight\nsensors.\n•\nTeam assignment\
    \ for IoT, departments,\nresponsibilities, procedures training, etc.\n•\nCompatibility\
    \ and requirements for current\ninformation technology.\n•\nDeployment, tests,\
    \ procedures, training,\nmaintenance, etc.\nTherefore, based on this survey, there\
    \ is an urgent need to increase the sophistication of\nagro-food companies in\
    \ terms of information and communication technologies, information\nsystems and\
    \ decision support systems. The aim of contributing to the improvement of\ninformation\
    \ management processes with subsequent gains in production, quality, reduction\n\
    of waste, response time, result in an increase in competitiveness. Thus, the suggestions\
    \ and\nrecommendations identifying opportunities for improvement originated by\
    \ this analysis\nare transversal to all ranks, and are summarized as:\n•\nPromote\
    \ the updating of systems, in order to consider an internal network, which\nenhances\
    \ the organization in the face of corporate e-mail and ease of communication\n\
    via the Internet between employees of the company;\n•\nPromote frequent use of\
    \ ﬁnancial management tools, not just billing software;\n•\nPromote the use of\
    \ customer relationship management (CRM);\n•\nPromote the use of integrated enterprise\
    \ resource planning (ERP);\nAppl. Sci. 2021, 11, 3454\n15 of 18\n•\nPromote the\
    \ use of information and communications technology (ICT) tools in quality\nmanagement-oriented\
    \ processes;\n•\nPromote the use of ICT tools in product traceability, monitoring\
    \ of the company’s\nproductive activities, monitoring energy consumption;\n•\n\
    Promote the use of decision support tools in different areas of the company.\n\
    These results are important to understand and highlight the potential of IoT imple-\n\
    mentation in the sample of agro-food MSMEs that can be extended to the country\
    \ scale.\nAdditionally, the next section will discuss possible opportunities and\
    \ solutions for such\na niche.\n6. Conclusions\nPopulation growth is creating\
    \ more demand and putting pressure on agro-industry.\nThe food demand forecast\
    \ is estimated 60% more by 2050. Due to this challenging scenario,\nthe UN and\
    \ EU share concerns about how scarce resources are to be managed, in terms of\n\
    food loss and waste, land, water, energy, emissions, and so on. The European Commission\n\
    is working on a Green Deal in order to reduce emissions. Thus, initial commitments\
    \ could\nbecome laws and obligations, pushing companies to adapt and be more eco-efﬁcient.\n\
    IoT is a technology that can revolutionize agro-food business, in terms of efﬁciency,\n\
    mitigating challenges like monitoring, controlling and tracking of crops and animals\
    \ on\nfarms, and allowing precision agriculture. Additionally, changing old concepts\
    \ of farming\nto new ones, like Agriculture 4.0 or smart farming, where data are\
    \ collected in real-time\nand processed using optimization algorithms of artiﬁcial\
    \ intelligence based in data-driven\ndecisions and other technologies, aiming\
    \ to optimize production results.\nThis survey assesses the potential implementation\
    \ of IoT technology. It was applied\nto 21 agro-food companies, belonging to the\
    \ milk, honey, olive oil, jams, fruticulture,\nbakery and pastry, meat, coffee,\
    \ and wine sectors, which are located in the central region of\nPortugal. Additionally,\
    \ this study helps, on basis of company characterizations, to propose\nactions\
    \ and measures that promote the development, economic growth, employment by\n\
    increasing competitiveness in the economy and traditional sectors.\nThe analysis\
    \ of results for the ﬁrst stage points to a low level of sophistication, which\n\
    means low maturity for IoT implementation. However, it also indicates the possibility\
    \ of\nenormous potential for efﬁciency growth by applying IoT solutions. Efforts\
    \ need to be\nmade to transfer knowledge to farmers, unlocking the potential they\
    \ already have, but in\nmany cases remains hidden, not measured, not processed\
    \ or even just ignored, caused by a\nlack of information.\nDeeper analyses were\
    \ performed in a second survey stage, with of ﬁve companies, to\nassess a real\
    \ scenario of IoT implementation. This approach revealed many opportunities\n\
    for IoT solutions, mainly for monitoring and measuring variables of production\
    \ that can\npossibly lead to better decisions by managers. Further, the results\
    \ highlight the constraints\nat human resources and facilities levels that cannot\
    \ receive the technology now, and need\nat least 6 months until 2 years to start\
    \ any deployment.\nIn general, there is a great potential for implementation of\
    \ IoT in Portugal, but also\ngreat challenges. to The lack of knowledge related\
    \ to IoT technologies by the company’s\nhuman resources is highlighted. This condition\
    \ can be mitigate by knowledge transfer and\ntraining, Maturity of sophistication\
    \ is another concern, since installations are the basis to\nreceive new technology.\
    \ Thus, suggestions and recommendations identifying opportunities\nfor improvement\
    \ that can be started right now are: renew or install communications\nsystems,\
    \ use of CRM and ERP, use of ﬁnancial tools, use of ICT tools to allow traceability,\n\
    monitoring of a company’s productive activities, monitoring energy consumption\
    \ and\nthe use of decision support tools in different areas. Future research work\
    \ will include\na larger sample of companies in order to improve characterization,\
    \ generalization and\nrepresentativeness of Portuguese agro-industry MSMEs.\n\
    Appl. Sci. 2021, 11, 3454\n16 of 18\nAuthor Contributions: Conceptualization,\
    \ H.S., V.N.G.J.S. and J.M.L.P.C.; methodology, H.S.,\nV.N.G.J.S. and J.M.L.P.C.;\
    \ validation, H.S., V.N.G.J.S. and J.M.L.P.C.; formal analysis, P.D.G.; in-\n\
    vestigation, H.S., V.N.G.J.S. and J.M.L.P.C.; resources, H.S.; data curation,\
    \ P.D.G.; writing—original\ndraft preparation, C.M.F.; writing—review and editing,\
    \ P.D.G.; supervision, P.D.G.; project adminis-\ntration, H.S.; funding acquisition,\
    \ H.S. All authors have read and agreed to the published version of\nthe manuscript.\n\
    Funding: This study is within the activities of project IOTEC—Development of Technological\
    \ Capa-\nbilities in the Industrial Application of the Internet of Things (Code:\
    \ 0123_IOTEC_3_E), funded by\nthe European Regional Development Fund (ERDF) within\
    \ the framework of the Interreg program\nV-A Spain-Portugal 2014–2020 (PocTep).\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nAcknowledgments: P.D.G. acknowledges Fundação para a Ciência\
    \ e a Tecnologia (FCT—MCTES)\nfor its ﬁnancial support via the project UIDB/00151/2020\
    \ (C-MAST). V.N.G.J.S. and J.M.L.P.C. ac-\nknowledge that this work is funded\
    \ by FCT/MCTES through national funds and when applicable\nco-funded EU funds\
    \ under the project UIDB/50008/2020. The authors would like to acknowledge the\n\
    company InspiringSci, Lda for the interest and valuable contribution to the successful\
    \ development\nof this work.\nConﬂicts of Interest: The authors declare no conﬂict\
    \ of interest.\nReferences\n1.\nSpang, E.S.; Moreno, L.C.; Pace, S.A.; Achmon,\
    \ Y.; Donis-Gonzalez, I.; Gosliner, W.A.; Jablonski-Shefﬁeld, M.P.; Abdul Momin,\
    \ M.;\nQuested, T.E.; Winans, K.S.; et al. Food Loss and Waste: Measurement, Drivers,\
    \ and Solutions. Annu. Rev. Environ. Resour. 2019,\n44, 117–156. [CrossRef]\n\
    2.\nFAO. The State of Food and Agriculture 2020; Food and Agriculture Organization\
    \ of the United Nations (FAO): Rome, Italy, 2020;\nISBN 978-92-5-133441-6.\n3.\n\
    Acosta-Alba, I.; Chia, E.; Andrieu, N. The LCA4CSA framework: Using life cycle\
    \ assessment to strengthen environmental\nsustainability analysis of climate smart\
    \ agriculture options at farm and crop system levels. Agric. Syst. 2019, 171,\
    \ 155–170.\n[CrossRef]\n4.\nAkhigbe, B.I.; Munir, K.; Akinade, O.; Akanbi, L.;\
    \ Oyedele, L.O. IoT Technologies for Livestock Management: A Review of\nPresent\
    \ Status, Opportunities, and Future Trends. Big Data Cogn. Comput. 2021, 5, 10.\
    \ [CrossRef]\n5.\nUnited Nations. The Sustainable Development Goals Report 2020;\
    \ Department of Economic and Social Affairs: New York, NY, USA,\n2020; ISBN 978-92-1-101425-9.\n\
    6.\nEuropean Commission A European Green Deal | European Commission. Available\
    \ online: https://ec.europa.eu/info/strategy/\npriorities-2019-2024/european-green-deal_en\
    \ (accessed on 5 March 2021).\n7.\nEuropean Commission Regulation of the European\
    \ Parliament and of the Council. Available online: https://eur-lex.europa.eu/\n\
    legal-content/EN/TXT/?qid=1588581905912&uri=CELEX:52020PC0080 (accessed on 6 March\
    \ 2021).\n8.\nEuropean Commission. European Union—Agriculture and Rural Development.\
    \ Statistical Factsheet 2020; European Commission,\nEuropean Union: Luxembourg,\
    \ 2020.\n9.\nWeersink, A.; Fraser, E.; Pannell, D.; Duncan, E.; Rotz, S. Opportunities\
    \ and Challenges for Big Data in Agricultural and\nEnvironmental Analysis. Annu.\
    \ Rev. Resour. Econ. 2018, 10, 19–37. [CrossRef]\n10.\nGrogan, A. Smart farming.\
    \ Eng. Technol. 2012, 7, 38. [CrossRef]\n11.\nFarooq, M.S.; Riaz, S.; Abid, A.;\
    \ Umer, T.; Zikria, Y. Bin Role of IoT Technology in Agriculture: A Systematic\
    \ Literature Review.\nElectronics 2020, 9, 319. [CrossRef]\n12.\nRomeo, L.; Petitti,\
    \ A.; Marani, R.; Milella, A. Internet of Robotic Things in Smart Domains: Applications\
    \ and Challenges. Sensors\n2020, 20, 3355. [CrossRef] [PubMed]\n13.\nDebauche,\
    \ O.; Trani, J.; Mahmoudi, S.; Manneback, P.; Bindelle, J.; Mahmoudi, S.; Lebeau,\
    \ F. Data Management and Internet of\nThings: A Methodological Review in Smart\
    \ Farming. Internet Things 2021, 100378. [CrossRef]\n14.\nGonzalez-de-Santos,\
    \ P.; Fernández, R.; Sepúlveda, D.; Navas, E.; Emmi, L.; Armada, M. Field Robots\
    \ for Intelligent Farms—\nInhering Features from Industry. Agronomy 2020, 10,\
    \ 1638. [CrossRef]\n15.\nTsouros, D.C.; Bibi, S.; Sarigiannidis, P.G. A Review\
    \ on UAV-Based Applications for Precision Agriculture. Information 2019,\n10,\
    \ 349. [CrossRef]\n16.\nUllah, Z.; Al-Turjman, F.; Moatasim, U.; Mostarda, L.;\
    \ Gagliardi, R. UAVs joint optimization problems and machine learning to\nimprove\
    \ the 5G and Beyond communication. Comput. Netw. 2020, 182, 107478. [CrossRef]\n\
    Appl. Sci. 2021, 11, 3454\n17 of 18\n17.\nEscamilla-García, A.; Soto-Zarazúa,\
    \ G.M.; Toledano-Ayala, M.; Rivas-Araiza, E.; Gastélum-Barrios, A. Applications\
    \ of Artiﬁcial\nNeural Networks in Greenhouse Technology and Overview for Smart\
    \ Agriculture Development. Appl. Sci. 2020, 10, 3835.\n[CrossRef]\n18.\nJha, K.;\
    \ Doshi, A.; Patel, P.; Shah, M. A comprehensive review on automation in agriculture\
    \ using artiﬁcial intelligence. Artif.\nIntell. Agric. 2019, 2, 1–12. [CrossRef]\n\
    19.\nCardim Ferreira Lima, M.; Damascena de Almeida Leandro, M.E.; Valero, C.;\
    \ Pereira Coronel, L.C.; Gonçalves Bazzo, C.O.\nAutomatic Detection and Monitoring\
    \ of Insect Pests—A Review. Agriculture 2020, 10, 161. [CrossRef]\n20.\nWolfert,\
    \ S.; Ge, L.; Verdouw, C.; Bogaardt, M. Big Data in Smart Farming—A review. Agric.\
    \ Syst. 2017, 153, 69–80. [CrossRef]\n21.\nNewton, J.E.; Nettle, R.; Pryce, J.E.\
    \ Farming smarter with big data: Insights from the case of Australia’s national\
    \ dairy herd milk\nrecording scheme. Agric. Syst. 2020, 181, 102811. [CrossRef]\n\
    22.\nTorky, M.; Hassanein, A.E. Integrating blockchain and the internet of things\
    \ in precision agriculture: Analysis, opportunities, and\nchallenges. Comput.\
    \ Electron. Agric. 2020, 178, 105476. [CrossRef]\n23.\nNiknejad, N.; Ismail, W.;\
    \ Bahari, M.; Hendradi, R.; Salleh, A.Z. Mapping the research trends on blockchain\
    \ technology in food\nand agriculture industry: A bibliometric analysis. Env.\
    \ Technol. Innov. 2021, 21, 101272. [CrossRef]\n24.\nAmpatzidis, Y.; De Bellis,\
    \ L.; Luvisi, A. iPathology: Robotic Applications and Management of Plants and\
    \ Plant Diseases.\nSustainability 2017, 9, 1010. [CrossRef]\n25.\nKhanna, A.;\
    \ Kaur, S. Evolution of Internet of Things (IoT) and its signiﬁcant impact in\
    \ the ﬁeld of Precision Agriculture. Comput.\nElectron. Agric. 2019, 157, 218–231.\
    \ [CrossRef]\n26.\nGaspar, P.D.; Caldeira, J.M.L.P.; Soares, V.N.G.J. ICT-enabled\
    \ agri-food systems. Chapter 11. In Environment and Climate-Smart\nFood Production;\
    \ Galanakis, C.M., Ed.; Springer International Publishing: Cham, Switzerland,\
    \ 2021; ISBN 978-3-030-71570-0.\n[CrossRef]\n27.\nGaspar, P.D.; Soares, V.N.G.J.;\
    \ Caldeira, J.M.L.P.; Andrade, L.P.; Soares, C.D. Technological modernization\
    \ and innovation\nof traditional agri-food companies based on ICT solutions–the\
    \ Portuguese case study. J. Food Process. Preserv. 2019, e14271.\n[CrossRef]\n\
    28.\nSilva, J.; Fontes, R.; Caldeira, J.M.L.P.; Soares, V.N.G.J.; Gaspar, P.D.\
    \ MobiSensA: Development of a mobile APP for iSensA\nplatform. In Proceedings\
    \ of the 13th Iberian Conference on Information Systems and Technologies (CISTI’2018),\
    \ Caceres, Spain,\n13–16 June 2018.\n29.\nCaldeira, J.M.L.P.; Soares, V.N.G.J.;\
    \ Gaspar, P.D.; Rodrigues, J.J.P.C.; Fontes, R. iSensA—A system for collecting\
    \ and integrating\nsensor data. Adv. Sci. Technol. Eng. Syst. J. 2018, 3, 213–221.\
    \ [CrossRef]\n30.\nGaspar, P.D.; Soares, V.N.G.J.; Caldeira, J.M.L.P.; Andrade,\
    \ L.P.; Domingues, C. Potential for technological modernisation and\ninnovation\
    \ based on ICT in agri-food companies of central region of Portugal. J. Adv. Agric.\
    \ Technol. 2015, 2, 75–82. [CrossRef]\n31.\nVarandas, L.; Faria, J.; Gaspar, P.D.;\
    \ Aguiar, M.L. Low-Cost IoT Remote Sensor Mesh for Large-Scale Orchard Monitorization.\
    \ J.\nSens. Actuator Netw. 2020, 9, 44. [CrossRef]\n32.\nMarcu, I.; Suciu, G.;\
    \ Bălăceanu, C.; Vulpe, A.; Drăgulinescu, A.-M. Arrowhead Technology for Digitalization\
    \ and Automation\nSolution: Smart Cities and Smart Agriculture. Sensors 2020,\
    \ 20, 1464. [CrossRef] [PubMed]\n33.\nHajjaji, Y.; Boulila, W.; Farah, I.R.; Romdhani,\
    \ I.; Hussain, A. Big data and IoT-based applications in smart environments: A\n\
    systematic review. Comput. Sci. Rev. 2021, 39, 100318. [CrossRef]\n34.\nVerdouw,\
    \ C.; Tekinerdogan, B.; Beulens, A.; Wolfert, S. Digital twins in smart farming.\
    \ Agric. Syst. 2021, 189, 103046. [CrossRef]\n35.\nDescheemaeker, K.; Zijlstra,\
    \ M.; Masikati, P.; Crespo, O.; Homann-Kee Tui, S. Effects of climate change and\
    \ adaptation on the\nlivestock component of mixed farming systems: A modelling\
    \ study from semi-arid Zimbabwe. Agric. Syst. 2018, 159, 282–295.\n[CrossRef]\n\
    36.\nTalavera, J.M.; Tobón, L.E.; Gómez, J.A.; Culman, M.A.; Aranda, J.M.; Parra,\
    \ D.T.; Quiroz, L.A.; Hoyos, A.; Garreta, L.E. Review of\nIoT applications in\
    \ agro-industrial and environmental ﬁelds. Comput. Electron. Agric. 2017, 142,\
    \ 283–297. [CrossRef]\n37.\nRatnaparkhi, S.; Khan, S.; Arya, C.; Khapre, S.; Singh,\
    \ P.; Diwakar, M.; Shankar, A. Smart agriculture sensors in IOT: A review.\nMater.\
    \ Today Proc. 2020. [CrossRef]\n38.\nShaﬁ, U.; Mumtaz, R.; García-Nieto, J.; Hassan,\
    \ S.A.; Zaidi, S.A.R.; Iqbal, N. Precision Agriculture Techniques and Practices:\
    \ From\nConsiderations to Applications. Sensors 2019, 19, 3796. [CrossRef]\n39.\n\
    Boursianis, A.D.; Papadopoulou, M.S.; Diamantoulakis, P.; Liopa-Tsakalidi, A.;\
    \ Barouchas, P.; Salahas, G.; Karagiannidis, G.; Wan,\nS.; Goudos, S.K. Internet\
    \ of Things (IoT) and Agricultural Unmanned Aerial Vehicles (UAVs) in smart farming:\
    \ A comprehensive\nreview. Internet Things 2020, 100187. [CrossRef]\n40.\nBuja,\
    \ I.; Sabella, E.; Monteduro, A.G.; Chiriacò, M.S.; De Bellis, L.; Luvisi, A.;\
    \ Maruccio, G. Advances in Plant Disease Detection\nand Monitoring: From Traditional\
    \ Assays to In-Field Diagnostics. Sensors 2021, 21, 2129. [CrossRef] [PubMed]\n\
    41.\nAl-Turjman, F. The road towards plant phenotyping via WSNs: An overview.\
    \ Comput. Electron. Agric. 2019, 161, 4–13. [CrossRef]\n42.\nSharma, R.; Kamble,\
    \ S.S.; Gunasekaran, A. Big GIS analytics framework for agriculture supply chains:\
    \ A literature review\nidentifying the current trends and future perspectives.\
    \ Comput. Electron. Agric. 2018, 155, 103–120. [CrossRef]\n43.\nMorais, R.; Silva,\
    \ N.; Mendes, J.; Adão, T.; Pádua, L.; López-Riquelme, J.A.; Pavón-Pulido, N.;\
    \ Sousa, J.J.; Peres, E. mySense: A\ncomprehensive data management environment\
    \ to improve precision agriculture practices. Comput. Electron. Agric. 2019, 162,\n\
    882–894. [CrossRef]\nAppl. Sci. 2021, 11, 3454\n18 of 18\n44.\nSishodia, R.P.;\
    \ Ray, R.L.; Singh, S.K. Applications of Remote Sensing in Precision Agriculture:\
    \ A Review. Remote Sens. 2020,\n12, 3136. [CrossRef]\n45.\nMüller, P.; Schmid,\
    \ M. Intelligent packaging in the food sector: A brief overview. Foods 2019, 8,\
    \ 16. [CrossRef] [PubMed]\n46.\nAntony, A.P.; Leith, K.; Jolley, C.; Lu, J.; Sweeney,\
    \ D.J. A Review of Practice and Implementation of the Internet of Things (IoT)\
    \ for\nSmallholder Agriculture. Sustainability 2020, 12, 3750. [CrossRef]\n47.\n\
    IOTEC O Projeto | IOTEC. Available online: https://iotec.usal.es/pt/o-projeto\
    \ (accessed on 2 March 2021).\n48.\nInovCluster. Available online: https://www.inovcluster.pt/#\
    \ (accessed on 9 March 2021).\n"
  inline_citation: '>'
  journal: Applied sciences (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2076-3417/11/8/3454/pdf?version=1618228157
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Development of Technological Capabilities through the Internet of Things
    (IoT): Survey of Opportunities and Barriers for IoT Implementation in Portugal’s
    Agro-Industry'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s21206910
  analysis: '>'
  authors:
  - Juan S. Angarita-Zapata
  - Ainhoa Alonso-Vicario
  - Antonio D. Masegosa
  - Jon Legarda
  citation_count: 14
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nA Taxonomy of Food Supply Chain Problems from a\n\
    Computational Intelligence Perspective\nJuan S. Angarita-Zapata 1,*\n, Ainhoa\
    \ Alonso-Vicario 1\n, Antonio D. Masegosa 1,2\nand Jon Legarda 1\n\x01\x02\x03\
    \x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Angarita-Zapata,\
    \ J.S.;\nAlonso-Vicario, A.; Masegosa, A.D.;\nLegarda, J. A Taxonomy of Food\n\
    Supply Chain Problems from a\nComputational Intelligence\nPerspective. Sensors\
    \ 2021, 21, 6910.\nhttps://doi.org/10.3390/s21206910\nAcademic Editors: Christian\n\
    Krupitzer, Anthony Stein and\nJanick Edinger\nReceived: 4 September 2021\nAccepted:\
    \ 15 October 2021\nPublished: 18 October 2021\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nDeusto Institute of Technology (DeustoTech), Faculty of Engineering,\
    \ University of Deusto,\n48007 Bilbao, Spain; ainhoa.alonso@deusto.es (A.A.-V.);\
    \ ad.masegosa@deusto.es (A.D.M.);\njlegarda@deusto.es (J.L.)\n2\nIkerbasque, Basque\
    \ Foundation for Science, 48009 Bilbao, Spain\n*\nCorrespondence: js.angarita@deusto.es\n\
    Abstract: In the last few years, the Internet of Things, and other enabling technologies,\
    \ have been\nprogressively used for digitizing Food Supply Chains (FSC). These\
    \ and other digitalization-enabling\ntechnologies are generating a massive amount\
    \ of data with enormous potential to manage supply\nchains more efﬁciently and\
    \ sustainably. Nevertheless, the intricate patterns and complexity embedded\n\
    in large volumes of data present a challenge for systematic human expert analysis.\
    \ In such a data-\ndriven context, Computational Intelligence (CI) has achieved\
    \ signiﬁcant momentum to analyze, mine,\nand extract the underlying data information,\
    \ or solve complex optimization problems, striking a\nbalance between productive\
    \ efﬁciency and sustainability of food supply systems. Although some\nrecent studies\
    \ have sorted the CI literature in this ﬁeld, they are mainly oriented towards\
    \ a single\nfamily of CI methods (a group of methods that share common characteristics)\
    \ and review their\napplication in speciﬁc FSC stages. As such, there is a gap\
    \ in identifying and classifying FSC problems\nfrom a broader perspective, encompassing\
    \ the various families of CI methods that can be applied in\ndifferent stages\
    \ (from production to retailing) and identifying the problems that arise in these\
    \ stages\nfrom a CI perspective. This paper presents a new and comprehensive taxonomy\
    \ of FSC problems\n(associated with agriculture, ﬁsh farming, and livestock) from\
    \ a CI approach; that is, it deﬁnes FSC\nproblems (from production to retail)\
    \ and categorizes them based on how they can be modeled from\na CI point of view.\
    \ Furthermore, we review the CI approaches that are more commonly used in\neach\
    \ stage of the FSC and in their corresponding categories of problems. We also\
    \ introduce a set of\nguidelines to help FSC researchers and practitioners to\
    \ decide on suitable families of methods when\naddressing any particular problems\
    \ they might encounter. Finally, based on the proposed taxonomy,\nwe identify\
    \ and discuss challenges and research opportunities that the community should\
    \ explore to\nenhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nKeywords: food supply chain; computational intelligence; fish farming;\
    \ agriculture; livestock; machine\nlearning; neural networks; deep learning; meta-heuristics;\
    \ fuzzy systems; probabilistic methods\n1. Introduction\nCurrently, one worldwide\
    \ challenge is how to sustainably guarantee global food needs\nin the face of\
    \ a growing population that is projected to be 9–10 billion by 2050 [1]. In this\n\
    sense, the enhancement of production and management of the current Food Supply\
    \ Chains\n(FSCs) is a crucial factor that contributes to accomplishing such an\
    \ aim. Nowadays, new\nInformation and Communication Technologies (ICTs) (e.g.,\
    \ the Internet of Things) play\nan active role in the digitization of FSCs [2].\
    \ As a result, large volumes of data are being\ngenerated in all FSC stages, ranging\
    \ from production to retail. The analysis of such data\nwould enable FSC actors\
    \ to extract relevant information or to optimize speciﬁc processes,\nallowing\
    \ improvement of the FSC administration, productivity, and sustainability.\nNevertheless,\
    \ the high volumes of available data and their complex patterns raise\nsigniﬁcant\
    \ challenges when analyzing and extracting values. In this context, Computational\n\
    Sensors 2021, 21, 6910. https://doi.org/10.3390/s21206910\nhttps://www.mdpi.com/journal/sensors\n\
    Sensors 2021, 21, 6910\n2 of 34\nIntelligence (CI) seems to be a successful paradigm\
    \ to build intelligent systems that are\nable to leverage this high availability\
    \ of data. CI is the ability of a digital system or\nalgorithm to perform tasks\
    \ commonly associated with intelligent beings [3]. Within such\ntasks, we can\
    \ ﬁnd speech recognition, visual perception, decision-making, prediction, and\n\
    translation, among others [4]. Over the last few years, the number of academic\
    \ publications\nconcerning CI applied to FSC has rapidly increased [5–7]. Within\
    \ the most representative\nCI methods applied to FSCs, we ﬁnd Neural Networks,\
    \ Fuzzy Logic, Swarm Intelligence,\nor Probabilistic Reasoning.\nThe scientiﬁc\
    \ literature reports different studies that aim to review and order the\napplication\
    \ of CI methods in different FSC stages. The variety of CI methods has led to\
    \ the\nemergence of research papers (published between 2012 and 2020), which select\
    \ a partic-\nular family of CI techniques and review their application in speciﬁc\
    \ FSC stages [2,6–12].\nHowever, these papers focus on only one or two families\
    \ of CI methods at most, and in the\nmajority of cases, do not cover all FSC stages.\
    \ Therefore, there is a lack of comprehensive\nstudies that review the application\
    \ of the most important families of CI methods in all FSC\nstages (from production\
    \ to retail). Additionally, few efforts have been made to classify FSC\nproblems\
    \ from a CI perspective. Hence, there is no categorization of the typologies of\
    \ FSC\nproblems to help determine how they can be modeled from a CI view (e.g.,\
    \ optimization,\nuncertain knowledge handling, reasoning) and what CI methods\
    \ can be most suitably used\nto approach them. Thus, despite the progress made\
    \ in organizing and systematizing the\nexisting literature at the point where\
    \ CI and FSCs meet, to the best of our knowledge, no\ntaxonomy has been proposed\
    \ in this regard.\nWith the above-mentioned ideas in mind, we propose a novel\
    \ taxonomy of FSC\nproblems from a CI perspective. Speciﬁcally, we focus on the\
    \ supply chain of agriculture,\nﬁsh farming, and livestock. The latter is justiﬁed\
    \ based on the fact that these supply chains\nprovide most of the food consumed\
    \ by the population of the world [13] and, therefore, they\nare the most studied\
    \ and researched FSCs in the scientiﬁc and academic literature. The\nmain contributions\
    \ of this article are:\n•\nA new taxonomy that provides a comprehensive view of\
    \ different FSC problems\nlocated in the chain stages typically studied in the\
    \ scientiﬁc literature (production,\nprocessing, distribution, and retail). This\
    \ taxonomy represents a new and broader\nproposal in order to identify and deﬁne\
    \ FSC problems that have been approached\nusing CI in the four aforementioned\
    \ stages. Besides, although some research articles\nhave described diverse FSC\
    \ problems, their deﬁnitions are not uniﬁed and vary\nfrom one paper to another.\
    \ Thus, this taxonomy also represents an effort to unify\nand consolidate deﬁnitions\
    \ of the FSC problems available in the literature, which\nrepresents a valuable\
    \ source of information for FSC researchers and practitioners\nworking in this\
    \ domain.\n•\nTo classify the FSC problems from a CI perspective. This classiﬁcation\
    \ allows FSC\nproblems to be mapped into common categories of problems in the\
    \ CI domain. Thus,\nwe provide a framework that helps display the similarities\
    \ and differences among\nFSC problems depending on how they can be modeled under\
    \ a CI perspective. To the\nbest of our knowledge, in this regard, no classiﬁcation\
    \ has been previously proposed.\n•\nTo establish a set of guidelines for the use\
    \ of CI in the FSC ﬁeld. These guidelines\naim to help FSC researchers and practitioners\
    \ to identify which FSC problems can\nbe addressed using CI, and the most appropriate\
    \ families of techniques to solve\nthem. Thus, these guidelines represent a ﬁrst\
    \ attempt to deﬁne a general framework\nto support the model selection problem\
    \ at the point where the ﬁelds of FSC and\nCI converge.\n•\nTo identify and discuss\
    \ challenges and research opportunities in the FSC domain,\nwhich are directed\
    \ towards more robust, explainable, interoperable, and accurate CI\nsolutions\
    \ that support FSC management and operation.\nThe rest of this paper is structured\
    \ as follows. Section 2 provides background in-\nformation on FSC and CI to facilitate\
    \ the understanding of the article. Furthermore, it\nSensors 2021, 21, 6910\n\
    3 of 34\nsummarizes other efforts directed at reviewing and categorizing the scientiﬁc\
    \ literature at\nthe point where FSC and CI meet in order to highlight how this\
    \ paper complements and\nenhances previous studies. Section 3 presents the proposed\
    \ taxonomy, its structure, and the\nclassiﬁcation of FSC from a CI perspective.\
    \ Afterwards, Section 4 gives FSC researchers and\npractitioners a set of guidelines\
    \ for the use of CI within the FSC domain. Lastly, Section 5\nsummarizes the main\
    \ conclusions and sets a research agenda for CI in the FSC ﬁeld.\n2. Background\
    \ and Motivation\nThis section provides some contextual and relevant background\
    \ information to facili-\ntate the understanding of the paper, and to assess similar\
    \ studies in this area. We start by\nintroducing the basic FSC stages examined\
    \ in this study (Section 2.1). Then, Section 2.2\npresents the main families of\
    \ CI approaches typically considered in FSC research. Finally,\nSection 2.3 reviews\
    \ similar works at the point where FSC and CI converge, which have\nidentiﬁed\
    \ and classiﬁed CI-based problems and methods. Section 2 ends with a discussion\n\
    of the main contributions of this research article.\n2.1. Food Supply Chain\n\
    FSC refers to the system that encompasses all activities, organizations, actors,\
    \ tech-\nnologies, information, resources, and services involved in producing\
    \ agri-food products for\nconsumer markets (e.g., fresh food, meat, and processed\
    \ food products) [14]. The upstream\nand downstream sectors form the supply of\
    \ agricultural inputs (such as seeds, fertilizers,\nfeed, medicine, or equipment)\
    \ to production, post-harvest handling, processing, transporta-\ntion, marketing,\
    \ distribution, and retailing [15]. They also include support services such as\n\
    extension services, research and development, and market information.\nBefore\
    \ the ﬁnal consumption of food products, FSC can include diverse stages wherein\n\
    production, processing, distribution, and retail are the stages most commonly\
    \ studied in\nthe scientiﬁc literature [16]. First, the production stage forms\
    \ the initial set of processes to\nobtain raw products derived from agriculture,\
    \ ﬁsh farming, or livestock. Agriculture refers\nto farming applications, including\
    \ the cultivation of soils for the harvest of crops [17]. Fish\nfarming involves\
    \ raising ﬁsh commercially in tanks or ﬁsh ponds, usually for consumer\nmarkets\
    \ [18]. Meanwhile, livestock is devoted to practices related to animal husbandry\
    \ for\nmeat, milk, eggs, or wool [19]. Continuing further down the production\
    \ chain, we ﬁnd\nthe processing stage, wherein the produced raw materials are\
    \ exposed to diverse transfor-\nmation processes (e.g., meat curing, washing and\
    \ disinfecting vegetables, fermentation),\nwhich allow consumable food products\
    \ to be obtained.\nOnce food products are ready to be delivered to the end-users,\
    \ the following FSC\nstages are distribution and retail. Their main purpose is\
    \ to connect the production and\nprocessing stages with the food users to complete\
    \ the supply chain loop [16]. Consequently,\nin the distribution stage, the processed\
    \ food is sent to distribution centers and warehouses.\nFrom such locations, different\
    \ distribution channels start to deliver the products to retail\nstores for sale.\
    \ Thus, retail is the end stage of the FSC and represents the link to consumers.\n\
    FSCs consist of a wide range of enterprises, ranging from smallholders, farmers’\n\
    organizations, co-operatives, and start-up companies to multinational enterprises\
    \ through\nparent companies or their local afﬁliates [14,15]. In this context,\
    \ FSC companies relate\nto each other through a variety of arrangements. Downstream\
    \ companies in the supply\nchain may engage in various types of relationships\
    \ with producers to secure access to\nagricultural products. They can impose standards\
    \ and speciﬁcations on producers with\nlittle involvement beyond a buying contract.\
    \ However, they can also become more actively\ninvolved, particularly through\
    \ contract farming, to coordinate production and ensure\nquality and safety [14].\
    \ In the new circular chain schemes, this type of relationship becomes\nmore complex,\
    \ involving more than one enterprise from the chain in the decision-making\nprocess\
    \ [20].\nCurrently, an appropriate and effective strategy to address this challenge\
    \ is the digiti-\nzation of FSCs, both of their internal processes and of their\
    \ relationships with other actors\nSensors 2021, 21, 6910\n4 of 34\nin the chain\
    \ [2]. Digitization has led to the generation of big volumes of data throughout\
    \ the\nentire supply chain. The exploitation of such data would allow FSC actors\
    \ to extract knowl-\nedge that could improve their internal processes in terms\
    \ of productivity and sustainability,\nas well as that of the FSC as a whole.\
    \ However, the data obtained through digitization\nusually contain complex and\
    \ intricate patterns that stand out as diverse challenges for\nprocessing and\
    \ analysis to extract value from it. Thus, CI arises as a solution that could\n\
    leverage and mine the underlying patterns of such data in order to obtain the\
    \ maximum\nvalue of the information, according to the analyses made.\n2.2. Computational\
    \ Intelligence Approaches\nCI is centered on the ability of a computer or algorithm\
    \ to learn speciﬁc tasks (e.g.,\npattern recognition, forecasting) from data that\
    \ is typically related to experimental observa-\ntions without human intervention\
    \ [3]. In the context of FSC, diverse IoT devices and data\nmanagement systems\
    \ sense and gather such data, which they then deploy in each supply\nchain stage.\
    \ After obtaining data, different CI approaches are used to process, analyze,\
    \ and\nextract information. In this section, we introduce the relevant background\
    \ information in\nrelation to families of CI-based methods that are typically\
    \ used in FSC applications. Fol-\nlowing the guidelines and classiﬁcation proposed\
    \ in [3], we have grouped the CI methods\ninto ﬁve families that are presented\
    \ in more detail below. They are CI-based Statistical\nLearning Methods, Artiﬁcial\
    \ Neural Networks and Deep Learning, CI-based Optimization\nMethods, Fuzzy Systems,\
    \ and Probabilistic Reasoning. These groups of CI-based methods\nare presented\
    \ below.\n2.2.1. CI-Based Statistical Learning Methods\nStatistical Learning Methods,\
    \ also known as Machine Learning (ML) methods are\nalgorithms that are able to\
    \ learn a speciﬁc task without being explicitly programmed. More\nformally, according\
    \ to Mitchell [21], these types of methods learn from experiences E,\nrelated\
    \ to a task T, and their performance is evaluated by a metric P. The performance\
    \ in T\nimproves according to P, with experience E. Classically, these methods\
    \ can be classiﬁed\naccording to the three basic learning approaches presented\
    \ below: unsupervised learning,\nsupervised learning, and reinforcement learning.\n\
    Unsupervised learning looks for patterns in data with no pre-existing labels.\
    \ Its\ncentral approach is usually focused on organizing X data points into speciﬁc\
    \ groups [22].\nData points that are in the same group should have similar properties,\
    \ while data points\nin different groups should have highly different features.\
    \ It is important to note that\nthese potential groups are not previously deﬁned\
    \ and it is the purpose of unsupervised\nlearning algorithms to discover them.\
    \ Some examples of unsupervised learning methods\nare hierarchical clustering,\
    \ k-means, anomaly detection techniques, among others.\nSupervised learning is\
    \ the other fundamental area of Statistical Learning Methods [23].\nIt consists\
    \ of algorithms that learn a function ( f : X 7→ Y) by training with a ﬁnite number\n\
    of input-output pairs, X being the input domain and X the output co-domain. This\
    \ learning\nstage can be seen as E in Mitchell’s deﬁnition [21], and the speciﬁc\
    \ task T usually involves\npredicting an output given a new and unseen input [24].\
    \ Common families of methods that\nstand out in supervised learning are decision\
    \ tree-based (e.g., Decision Tree, Extra Trees),\ninstance-based (e.g., K-Nearest\
    \ Neighbors), kernel-based (e.g., Support Vector Machine), or\nensemble-based\
    \ methods (Random Forest, AdaBoost).\nSupervised learning problems can usually\
    \ be divided into classiﬁcation and regres-\nsion [25,26]. In both cases, the\
    \ basis is an input data-set, X, and their difference is the\ntype of target variable,\
    \ Y, to be predicted. In the classiﬁcation case, Y is divided into\ndiscrete categories,\
    \ while in regression, the aim is to predict continuous values. Standard\nclassiﬁcation\
    \ problems can be either binary or multi-class problems [27]. In the former\n\
    case, an instance can only be associated with one of two values: the positive\
    \ or negative\nequivalent to 0 or 1; whereas, in multi-class problems, there are\
    \ more than two classes\nunder consideration. A multi-class problem means that\
    \ a given instance belongs to one of\nSensors 2021, 21, 6910\n5 of 34\nthe multiple\
    \ possible categories. Diversely, a supervised regression problem [28] consists\n\
    of ﬁnding a function that can predict, for a given example, a real value in R.\n\
    The third learning approach is reinforcement learning [29]. In this case, the\
    \ focus is\non developing a learning agent able to observe the environment and\
    \ obtain some input\nfrom it. Then, the agent makes an action and it changes to\
    \ a new environment, receiving an\nevaluation value (award or penalty) related\
    \ to the action made. Unlike the unsupervised\nlearning approach, the agent receives\
    \ guidance from an external evaluation. Moreover,\ndifferent to supervised learning,\
    \ in reinforcement learning, the agent is provided with an\nevaluation value regarding\
    \ the action made and not with a clear speciﬁcation about the\ncorrespondence\
    \ between input and output data. Relevant approaches within reinforcement\nlearning\
    \ are value-based [30], policy-based [31], and model-based [32].\nLastly, it is\
    \ important to note that Artiﬁcial Neural Networks are not considered within\n\
    this family of methods. We will treat them as a separate class of methods because\
    \ of their\nimportant role in CI.\n2.2.2. Artiﬁcial Neural Networks and Deep Learning\n\
    Artiﬁcial Neural Networks (ANNs) are computing systems with an inner structure\n\
    that is based on a set of connected units, named neurons, as they are inspired\
    \ by a biological\nbrain. Just as is the case for animals, wherein two neurons\
    \ are connected by means of a link\n(synapses), the neurons of an ANN are connected\
    \ through edges that transmit signals from\none artiﬁcial neuron to another. The\
    \ signals transferred between neurons are represented by\nreal numbers, and the\
    \ output of each neural unit is computed by some non-linear function\nof the sum\
    \ of its inputs.\nEvery edge that connects two neurons (usually) has a weight\
    \ that is adjusted as the\nlearning process of the ANN is underway. The role of\
    \ such edges is to increase or decrease\nthe strength of the signal at the connection\
    \ of two neurons. Additionally, neural units are\naggregated into layers, and\
    \ they may carry out diverse transformations on the inputs that\nthey receive.\
    \ Thus, the purpose of ANNs is to process input data from the ﬁrst layer (input\n\
    layer) to the last layer (output layer), while approximating linear or non-linear\
    \ functions\nthat are generally unknown. The collection of neuron units arranged\
    \ in layers, edges, and\nweights forms a network topology that is usually called\
    \ an architecture (Figure 1). ANNs\nhave evolved into a broad family of architectures\
    \ that depend on the speciﬁc application\ndomain. The feed-forward neural network\
    \ is a type of classical architecture. In this network,\nthe input data moves\
    \ from the input layer directly through any hidden layers (intermediate\nlayers\
    \ located in-between the input and output layers) to the output layer.\nFigure\
    \ 1. Basic architecture of an ANN. It is composed of edges and neural units arranged\
    \ using\nan input layer (blue neural units), a hidden layer (white neural units),\
    \ and an output layer (yellow\nneural units).\nBecause of their ability to reproduce\
    \ and model nonlinear processes, ANNs have been\napplied in diverse supervised\
    \ learning, unsupervised learning, and reinforcement learning\nproblems. Application\
    \ areas may include time series forecasting, pattern recognition, signal\nclassiﬁcation,\
    \ among others. However, as more complex problems (e.g., image processing,\nspeech\
    \ recognition) have arisen in the last few years, further development in the ANN\n\
    Sensors 2021, 21, 6910\n6 of 34\narea is required to deal with resulting challenges.\
    \ The common denominator of these ﬁelds\nis the high complexity and enormous volumes\
    \ of data generated and managed in them.\nAs a result, a subset of ANNs, named\
    \ Deep Learning (DL) [33] has emerged to cope with\nthis complexity.\nA deep neural\
    \ network is a classical ANN composed of multiple layers between the\ninput and\
    \ output layers. Theoretically, DL architectures allow any non-linear function\
    \ to be\napproximated [34]. Therefore, this approach has become dominant in multiple\
    \ application\nﬁelds like computer vision [35] and natural language processing\
    \ [36]. Between the most\ncommon deep neural networks, we can ﬁnd recurrent neural\
    \ networks, convolutional\nneural networks, and long short-term memory neural\
    \ networks [37]. The main strength\nof this approach lies in its ability to learn\
    \ automatically from raw data and to learn more\ncomplex representations of data\
    \ than other Statistical Learning methods [38]. The latter\ncould be valuable\
    \ for research areas characterized by having complex data, which can\nbarely be\
    \ analyzed by human reasoning and classical data preprocessing approaches. The\n\
    other relevant characteristics of Deep neural architectures come from their architectural\n\
    ﬂexibility that enables data fusion, as they allow different data formats to merge,\
    \ combining\ndata from multiple sources and therefore extracting more valuable\
    \ knowledge. In other\nwords, DL facilitates the use of multi-dimensional data,\
    \ which is quite difﬁcult to achieve\nwith classical ANNs and ML methods.\n2.2.3.\
    \ CI-Based Optimization Methods\nThe growing computational capabilities and the\
    \ fact that some problems of great\npractical value (e.g., scheduling, routing,\
    \ facility location) can not be solved optimally\n(because they are NP-Hard problems)\
    \ has led to increased use of approximating algorithms.\nMeta-heuristics are a\
    \ suitable approach in situations where exact algorithms can not give an\nanswer\
    \ using a reasonable amount of time or memory [39]. These methods arose with the\n\
    idea of extracting the best parts of different successful heuristics to create\
    \ generic methods\nthat could be applied to a more signiﬁcant number of problems\
    \ and contexts. Due to the\nwide variety of meta-heuristics, different classiﬁcation\
    \ categories have been proposed [40].\nWe group these techniques according to\
    \ the next categories: Evolutionary Computation\n(EC) [41], Swarm Intelligence\
    \ (SI) [42], and other meta-heuristics (local search-based meta-\nheuristics [43]).\
    \ These groups are presented with more detail as follows.\nEC is a group of meta-heuristic\
    \ optimization algorithms inspired by biological evolu-\ntion. Within this family\
    \ of methods, they operate from an initial set of candidate solutions\n(initial\
    \ generation), which are updated in an iterative way. Then, each new generation\n\
    is generated by randomly removing candidate solutions according to predeﬁned criteria\n\
    and by inserting random changes. After a set of iterations, the population of\
    \ solutions\nwill gradually evolve to increase its competitiveness, framed by\
    \ a ﬁtness function that is\ndetermined by each algorithm. Following the described\
    \ procedure, EC algorithms can\nproduce highly optimized solutions for complex\
    \ real-world optimization problems like the\ntraveling salesman problem [44].\
    \ Some well-known examples of EC meta-heuristics are\nGenetic algorithms [45]\
    \ and Differential evolution [46], among others.\nThe second biggest category\
    \ of meta-heuristics is the category of Swarm Intelligence\n(SI). This approach\
    \ consists of a population of agents interacting with each other and their\nenvironment.\
    \ The agents follow a set of basic rules, and although there is no centralized\n\
    control structure guiding the agents on how they should behave, the interaction\
    \ between\nthem leads to the emergence of intelligent global behavior. SI is inspired\
    \ by biological\nsystems such as ant and bee colonies and is commonly used to\
    \ solve combinatorial and\ncontinuous optimization problems (e.g., shortest path\
    \ problems for delivery or optimization\nof unknown parameters in time series).\
    \ Two of the most well-known SI algorithms are Ant\nColony [47], and Particle\
    \ Swarm [48] methods.\nSensors 2021, 21, 6910\n7 of 34\nThe third category groups\
    \ together the rest of the meta-heuristics, which are outside\nof the domains\
    \ of EC and SI but are still relevant for solving optimization problems. For\n\
    example, this is the case for local search-based meta-heuristics that are focused\
    \ on ﬁnding\na solution that maximizes a criterion among a set of candidate solutions.\
    \ These meta-\nheuristics move from one solution to another in the search space\
    \ of candidate solutions\nby applying local changes until an optimal solution\
    \ is found or a time budget is reached.\nWithin this category of meta-heuristics,\
    \ representative methods include Tabu Search [49],\nand Greedy Randomized Adaptive\
    \ Search Procedure (also known as GRASP) [50].\n2.2.4. Fuzzy Systems\nClassical\
    \ logic is based on the crisp set concept, where a group of objects is considered\n\
    to be a collection. In this sense, a crisp subset can be deﬁned from a broader\
    \ set where its\nelements belong to the subset according to some particular condition.\
    \ Thus, we can deﬁne\nthe concept of membership wherein a value of one is assigned\
    \ to the elements of the subset\nand a value of zero to the elements that do not\
    \ belong to that subset. Unlike crisp sets, a\nfuzzy set allows partial belonging\
    \ to a set through a degree of membership, denoted by\na function µ, that maps\
    \ all the elements in the set to a value in the real interval between\nzero and\
    \ one [51]. Then, as in the crisp case, a value of zero means that the element\
    \ under\nconsideration does not belong to the set, and a value of one represents\
    \ that the element\nbelongs entirely to the set. However, unlike in the crisp\
    \ case, a value greater than zero\nand lower than one represents a partial membership\
    \ to the subset. Consequently, the set’s\nmembership function is the relationship\
    \ between the elements of the set and their degree\nof belonging.\nHaving introduced\
    \ the basic notions of fuzzy sets, the next key concept is fuzzy\ninference systems.\
    \ A fuzzy system is a repository of fuzzy expert knowledge that can\nreason the\
    \ data in vague terms instead of precise Boolean logic. This expert knowledge\
    \ is a\ncollection of fuzzy membership functions and a set of fuzzy rules that\
    \ is formed as follows:\nIF (conditions are fulﬁlled) THEN (consequences are inferred).\
    \ The basic conﬁguration of a\nfuzzy system is shown in Figure 2, and it can be\
    \ divided into four main parts: a fuzziﬁer, a\nknowledge base, an inference engine,\
    \ and a defuzziﬁer [52].\nFigure 2. Structure and components of a Fuzzy System.\n\
    The Fuzziﬁer maps a real crisp input to a fuzzy function and, therefore, determines\n\
    the degree of membership of the input to a vague concept (categories using the\
    \ fuzzy sets).\nThe values of the input variables are mapped to the range of values\
    \ of the corresponding\nuniverse of discourse. The range and resolution of input-fuzzy\
    \ sets and their effect on the\nfuzziﬁcation process are considered to be factors\
    \ that affect the overall performance of\nthe system.\nThe knowledge base comprises\
    \ the knowledge of the application domain. It can be\nsplit into a database of\
    \ deﬁnitions used to express linguistic control rules in the controller\nand a\
    \ rule base that describes the knowledge held by the experts in the domain. Intuitively,\n\
    the knowledge base is the core element of a fuzzy controller as it will contain\
    \ all the\ninformation necessary to accomplish its execution tasks.\nThe Inference\
    \ Engine provides the decision-making logic of the controller. It deduces\nthe\
    \ fuzzy control actions by employing fuzzy implications and fuzzy rules of inference.\
    \ In\nmany aspects, it can be viewed as an emulation of human decision-making.\
    \ Finally, the\nDefuzziﬁcation process converts fuzzy control values into crisp\
    \ quantities; that is, it links\na single point to a fuzzy set, given that the\
    \ point belongs to the support of the fuzzy set.\nSensors 2021, 21, 6910\n8 of\
    \ 34\nThere are many de-fuzziﬁcation techniques, the most famous being the center-of-area\
    \ or\ncenter-of-gravity.\n2.2.5. Probabilistic Reasoning\nProbabilistic Reasoning\
    \ states that users can infer plausible models to explain input\ndata. Thus, a\
    \ model can predict an output based on new, unknown input data, which allows\n\
    decisions to be made regarding future actions. In this context of predictions,\
    \ uncertainty\nplays a relevant role for three reasons [53]. First, uncertainty\
    \ can be introduced from noisy\ninput data into the training process of a model.\
    \ Secondly, input data can be consistent with\ndifferent models, and therefore\
    \ which model is more appropriate for the data at hand is\nuncertain. And third,\
    \ a model can have diverse parameters (e.g., the coefﬁcients of linear\nregression)\
    \ and/or different inner structures (e.g., the architecture of ANNs); hence, there\n\
    is uncertainty regarding the speciﬁcations for a concrete model [54].\nFrom a\
    \ general perspective, the basic foundations of Probabilistic Reasoning are\n\
    condensed in the Bayesian learning paradigm [54]. Primarily, probability distributions\
    \ are\nconsidered to represent all uncertainties that can interfere in a model\
    \ (e.g., noise in the input\ndata, the model’s parameters). Then, the basic rules\
    \ of probability theory are considered\nto infer unobserved quantities given the\
    \ observed data. Thus, the process of learning\nfrom data occurs through the transformation\
    \ of the prior probability distributions (deﬁned\nbefore having the input data)\
    \ into posterior distributions (after observing the data).\nThe assumptions mentioned\
    \ above are supported by two of the basic rules of prob-\nability theory. They\
    \ are the sum rule and the product rule, which can be expressed as\nP(x) = ∑y∈Y\
    \ P(x, y) and P(x, y) = P(x)P(y | x), respectively. Here x and y correspond to\n\
    observed or uncertain quantities, taking values in sets X and Y. P(x) is the probability\
    \ of x\nregarding the frequency of observing a particular value. P(x, y) is the\
    \ joint probability of\nobserving x and y, and P(y|x) is the probability of y\
    \ conditioned on observing a concrete x\nvalue. Keeping these two probability\
    \ theory rules in mind, x and y can be integrated into\nthe Bayes’ theorem to\
    \ describe the probability of an event based on the prior knowledge\nof conditions\
    \ that might be related to the event. In the context of Statistical Learning,\
    \ this\ntheorem is stated as P(θ | D, m) = P(D|θ,m)P(θ|m)\nP(D|m)\n. Here, P(D\
    \ | θ, m) is the likelihood of\nparameters θ in model m, P(θ | m) is the prior\
    \ probability of θ, and P(θ | D, m) is the\nposterior probability of θ given data\
    \ x.\nThus, learning is the transformation of prior knowledge or assumptions regarding\
    \ the\nparameters P(θ | m), through data D, into the posterior knowledge about\
    \ the parameters\nP(θ | D, m). Such a posterior distribution then becomes prior\
    \ knowledge for future data\npredictions. Within this framework, the most typical\
    \ methods used over the last few years\nwere Bayesian networks [55]. Other representative\
    \ techniques are Markov networks and\nRandom Fields [56].\n2.2.6. Summary of CI-Based\
    \ Approaches\nHaving presented the families of CI methods usually considered in\
    \ FSC, this section\nintroduces a summary of the methods presented above and their\
    \ strengths and weak-\nnesses (Table 1). First of all, we would like to point\
    \ out that this list of advantages and\ndisadvantages does not refer to a comparison\
    \ between the different categories of methods\nconsidered in this paper, as they\
    \ are often used to solve different types of problems and\ntherefore the comparison\
    \ is not straightforward. Instead, these strengths and weaknesses\nrefer to a\
    \ comparison between CI-based approaches versus non CI-based approaches that\n\
    are used to solve similar categories of problems.\nSensors 2021, 21, 6910\n9 of\
    \ 34\nTable 1. Summary of CI-based approaches reviewed.\nCI Approach\nStrengths\n\
    Weaknesses\nCI-based statistical\nlearning methods\n- Expert knowledge of the\n\
    problem domain where they are applied is not required.\n- No assumptions about\
    \ the characteristics\nof the data available (non-parametric method) are made.\n\
    - They can work properly with medium and\nlarge sized datasets.\n- Expert Statistical\
    \ Learning knowledge\nis required.\n- Their performance is highly dependent\n\
    on the quality and availability of data.\n- They have problems ﬁnding meaningful\n\
    representations of the data when the\ncomplexity of hidden patterns of the data\
    \ is\nvery high (e.g., computer vision).\nArtiﬁcial neural networks\nand Deep\
    \ learning\n- Expert knowledge of the problem is not required\ndomain where they\
    \ are applied.\n- No assumptions about the characteristics of\nthe data available\
    \ (non-parametric method).\n- They can extract complex and non-linear\npatterns\
    \ embedded in data.\n- Work directly on raw data without almost any\nneed for\
    \ feature extraction.\n- Expert Statistical Learning knowledge\nis required.\n\
    - High volumes of data are required.\n- High computational capabilities\nare needed.\n\
    CI-based optimization\nmethods\n- Satisfactory solutions for complex\nproblems.\n\
    - They can work in scenarios with\ntime and computational capabilities\ndeﬁned\
    \ by the user.\n- They are approximate methods,\nso an optimal solution is not\
    \ guaranteed.\n- Expert knowledge is required for\nthe design of the methods.\n\
    Fuzzy systems\n- The methods are capable of modeling\nimpressions and vagueness\
    \ associated\nwith the data of the problem domain.\n- The results are easily interpretable.\n\
    - Expert knowledge associated with\nthe problem domain is required.\n- Not able\
    \ to deal effectively with\nuncertainty associated with the\ndata available.\n\
    Probabilistic Reasoning\n- Able to deal with high levels of\nuncertainty in the\
    \ data available.\n- Unable to deal with complex problems\ncharacterized by data\
    \ representing\ndifferent variables of interest.\n- Difﬁculties in modeling ambiguities\n\
    and inaccuracies in the input data.\n2.3. Motivation\nThe objectives of this section\
    \ are two-fold. First, it reviews the related work at the\npoint where FSC and\
    \ CI meet, in order to identify previous contributions regarding the\nclassiﬁcation\
    \ of FSC problems, and the CI methods used to solve them. Having already\nintroduced\
    \ these previous studies, the ﬁnal part of this section is devoted to presenting\
    \ the\nmain novelty and contributions of this paper.\nIn 2012, Grifﬁs et al. [11]\
    \ focused on the distribution stage of an FSC to present an\noverview of CI-based\
    \ optimization methods that can play a relevant role for problems like\nvehicle\
    \ routing, supply chain risks, and disruptions. The authors emphasized how meta-\n\
    heuristic techniques provide near-optimal solutions to logistics problems. Following\
    \ this\nline of research, in 2016, Wari and Zhu [12] presented an updated survey\
    \ on applying meta-\nheuristics to solve optimization problems in the processing\
    \ (e.g., fermentation, thermal\ndrying, and distillation) and distribution (e.g.,\
    \ warehousing location, production planning,\nand scheduling) stages of an FSC.\
    \ More recently, in 2017, Kamilaris et al. [7] reviewed\narticles on smart farming\
    \ to show how digital technologies can enhance the circularity of\nthe FSC at\
    \ the production stage. They highlighted the problems that can be approached by\n\
    utilizing CI-based Statistical Learning, ANNs, and DL methods.\nComplementary\
    \ to the advances reported by Kamilaris et al. [7], in 2020, Sharma et al. [15]\n\
    and Misra et al. [2] carried out a bibliometric analysis and a review, respectively,\
    \ of CI-\nbased Statistical Learning applications over the whole FSC. Based on\
    \ their results, the\nauthors designed a series of recommendations to design and\
    \ deploy Statistical Learning-\nSensors 2021, 21, 6910\n10 of 34\nbased solutions\
    \ for data-driven decision-making processes in the FSC. In the same year,\nCamarena\
    \ [10] made a critical analysis of what can be done with Artiﬁcial Intelligence,\n\
    without emphasizing any single method in particular, for the transition to a sustainable\n\
    FSC. Lastly, the studies of Liakos et al. [6] and Saiz-Rubio and Rovira-Mas [9],\
    \ in 2018 and\n2020, respectively, presented comprehensive reviews of research\
    \ directed at the application\nof ML in the FSC production stage. The authors\
    \ surveyed how ML can help farmers make\nmore informed decisions on the management\
    \ of agriculture and livestock systems.\nFigure 3 presents a synthesis of the\
    \ studies described above and highlights how this\narticle complements and extends\
    \ the existing literature. Each cited paper is represented\nby a grey circle,\
    \ which can have one or two inner circles (green and blue). Green circles\nrepresent\
    \ FSC stages covered by a study, while blue circles depict the CI approaches\n\
    considered within it. The size of the circle is determined by the number of FSC\
    \ stages and\nCI techniques considered in each article. Thus, a green circle would\
    \ have the biggest size if\nthe paper to which it belongs addresses the four basic\
    \ stages of the FSC. The same logic is\nused for the blue circles: the more families\
    \ of methods a paper considers, the bigger the\ncircle’s size would be. Furthermore,\
    \ we can ﬁnd our research article in the center of the\nﬁgure in the violet circle.\n\
    Figure 3. Motivations and state-of-the-art concepts at the point where FSC and\
    \ CI meet.\nAccording to Figure 3 we can see that there are no research articles\
    \ that present a\ncomprehensive taxonomy at the point where FSC problems and CI\
    \ converge. This means\nthat there are no research studies that consider the problems\
    \ of the four basic FSC stages,\nnor the diversity of the CI methods that can\
    \ be applied to solve them. Instead, most of the\npapers focus on one or two FSC\
    \ stages, and they tend to review the role a unique CI family\nof methods has\
    \ over them. Therefore, we propose a new taxonomy that embraces the\ncomplete\
    \ FSC and the ﬁve families of CI methods most commonly used in the FSC stages.\n\
    Sensors 2021, 21, 6910\n11 of 34\nFurthermore, our proposal extends the previous\
    \ classiﬁcation efforts by adding a new\ncategorization attribute, which indicates\
    \ the type of FSC problem being addressed from\na CI perspective. In addition\
    \ to increasing the classiﬁcation capacity of our taxonomy,\nthis attribute allows\
    \ us to establish a novel mapping between the FSC problems and the\ntypologies\
    \ of CI problems that can be used to approach the former ones. By doing so,\n\
    we contribute to facilitating the choice of the most convenient family of CI methods\
    \ to\nuse depending on the FSC problem at hand. This represents a valuable and\
    \ novel source\nof information for FSC researchers and practitioners who aim to\
    \ incorporate CI-based\nsolutions into their FSC applications.\n3. A Taxonomy\
    \ of CI-Based Problems in the Food Supply Chain\nThis section introduces details\
    \ of the taxonomy proposed. First, Section 3.1 presents\nthe methodology followed\
    \ to design the taxonomy. Then, Sections 3.3 and 3.4 show the\ntaxonomy’s structure\
    \ and describe its parts. Finally, Section 3.5 gives an overview of the\ncategorization\
    \ of FSC problems, from a CI perspective, using the taxonomy.\n3.1. Methodology\
    \ for the Design of the Taxonomy\nThis section introduces the methodology followed\
    \ to build the taxonomy proposed.\nFirst, we note that this research paper does\
    \ not aim to carry out a systematic literature\nreview or survey. Instead, our\
    \ scope lies in searching and reviewing the representative\nliterature to propose\
    \ a taxonomy that describes and categorizes FSC problems and how\nthey are solved\
    \ from a CI-based perspective. As such, the taxonomy proposed does not seek\n\
    to identify all details associated with the FSC problems to maintain its comprehensibility\n\
    and size. It is designed according to core characteristics that may alter the\
    \ complexity and\nmodeling of FSC problems from the CI perspective.\nWith these\
    \ ideas in mind, Figure 4 shows the methodology followed to build the\ntaxonomy\
    \ introduced in this research paper. This methodology follows a structure-based\n\
    literature review that includes the steps depicted in Figure 4. The ﬁrst step\
    \ is named Scope\n& Research Question, which aims to limit the areas of knowledge\
    \ to be consulted; that is,\nthe point where FSC and CI converge. For this step,\
    \ the research questions that guided\nour search were: “What are the most common\
    \ FSC problems reported in the literature?”,\n“What are the CI methods typically\
    \ used to approach these problems?”, “How can FSC\nbe categorized from a CI perspective?”,\
    \ and “Is there any taxonomy to categorize FSC\nproblems considering a CI approach?”.\n\
    Figure 4. Steps followed to build the proposed taxonomy.\nThe following step deﬁned\
    \ the search set-up. We deﬁne the keywords, periods,\nonline resources, and criteria\
    \ to search and review the scientiﬁc literature. The keywords\nconsidered were:\
    \ Food Supply Chain(s), agrifood, ﬁsh farming, agriculture, livestock,\nSensors\
    \ 2021, 21, 6910\n12 of 34\nproduction, processing, distribution, logistics, retail,\
    \ computational intelligence machine\nlearning, deep learning, meta-heuristics,\
    \ fuzzy systems, and probabilistic methods. The\nperiod was between 2012 and 2020,\
    \ and the bibliographic resources searched were the\nWeb of Science, Scopus, and\
    \ Google Scholar. Finally, the main criteria for selecting and\nreviewing the\
    \ literature was that they be review or survey papers. The latter is based on\n\
    the fact that this type of paper offers a general and consolidated overview of\
    \ the state-of-\nthe-art concerning CI-based FSC problems reported in the literature.\
    \ Moreover, these types\nof papers allowed us to know if any taxonomy was previously\
    \ proposed to classify the\nFSC problems.\nThe next stage in Figure 4 is search,\
    \ select, and review. Using the search set-up\nmentioned above, we identiﬁed the\
    \ survey and review papers introduced in the Motivation\nSection 2.3. Next, we\
    \ analyzed the FSC problems considered in these papers, the FSC stages\nwhere\
    \ the problems were located, and the families of CI methods usually considered\
    \ to\napproach these FSC problems.\nBased on the ﬁndings mentioned above, we moved\
    \ to the ﬁnal step of the methodology\nshown in Figure 4. The objective was to\
    \ design a new taxonomy that embraces the\ncomplete FSC and the ﬁve families of\
    \ CI methods most commonly used in the FSC stages.\nThis taxonomy also intends\
    \ to expand the previous classiﬁcation efforts by adding a\nnew categorization\
    \ attribute, indicating the type of FSC problem addressed from a CI\nperspective.\
    \ Thus, we characterized how the FSC problems identiﬁed in the previous\nstep\
    \ can be modeled from a CI perspective. To do so, we considered the typologies\n\
    of problems in the CI domain (problem-solving, uncertain knowledge and reasoning,\n\
    knowledge discovery and function approximation, and communication and perception)\n\
    that better suited the families of CI methods considered in the studies reviewed.\n\
    Having built the taxonomy, we checked its robustness and ability to discriminate\n\
    papers that approached different FSC problems. To accomplish this aim, we extracted\n\
    relevant references cited by the review and survey papers previously identiﬁed,\
    \ as well as\nthe recent literature, and mapped them into the proposed taxonomy.\
    \ This is shown in the\nfollowing section, where the taxonomy is introduced, to\
    \ validate its classiﬁcation power.\n3.2. The Taxonomy Overview\nThe taxonomy\
    \ aims, ﬁrstly, to extend the previous classiﬁcation efforts on FSC prob-\nlems\
    \ to cover all stages of Agrifood supply chains; and, secondly, to add a new level\
    \ of\ncategorization that allows typologies of FSC problems to be mapped to typologies\
    \ of CI\nproblems. We can see the structure of the proposed taxonomy in Figure\
    \ 5. As we can see,\nin level one, the taxonomy includes the four basic stages\
    \ of an FSC that were introduced in\nSection 2.2.1; that is, production, processing,\
    \ distribution, and retail. Then, in level two, it\ncontains the different categories\
    \ of FSC problems that we can ﬁnd in each stage. It is impor-\ntant to clarify\
    \ that although these FSC problems have been reported previously, in related\n\
    studies [2,6–12], to the best of our knowledge, this is the ﬁrst time that their\
    \ deﬁnitions are\nuniﬁed and consolidated in one taxonomy. Lastly, in level three,\
    \ the taxonomy introduces\nthe typologies of problems from a CI perspective. Speciﬁcally,\
    \ this level seeks to classify\nthe FSC problems depending on how they can be\
    \ modeled and solved by CI methods.\nHaving presented the structure of the taxonomy,\
    \ the following Section 3.3 details\nthe FSC problems identiﬁed for the production,\
    \ processing, distribution, and retail stages.\nThose problems represent the second\
    \ level of the taxonomy. They are formally deﬁned\nfrom a purely FSC perspective,\
    \ and we clearly state the key objective of each problem\nwithin the particular\
    \ chain stage where it is identiﬁed. Afterwards, Section 3.4 presents\nthe third\
    \ level of the taxonomy that contains the attributes to categorize the FSC problems\n\
    of level 2 under a CI approach. These attributes correspond to the four typologies\
    \ of CI\nproblems that are more commonly used in the literature to address FSC\
    \ problems. Finally,\nSection 3.5 introduces the classiﬁcation and mapping of\
    \ FSC problems according to how\nthey can be modeled by CI typologies.\nSensors\
    \ 2021, 21, 6910\n13 of 34\nFigure 5. A taxonomy of computational intelligence\
    \ in an FSC.\n3.3. Level 2: Identiﬁcation and Deﬁnition of Food Supply Chain Problems\n\
    In this section, we present the FSC problems identiﬁed for each of the FSC stages\n\
    shown in Figure 5, which corresponds to the second level of our taxonomy. These\
    \ problems\nare formally deﬁned in more detail below.\n3.3.1. Production Problems\n\
    The FSC production stage can be split into three main production systems: ﬁsh\n\
    farming, agriculture, and livestock. These three production systems and their\
    \ associated\nproblems can be observed in Figure 6 and they are deﬁned below.\n\
    Figure 6. FSC problems in the production stage.\nFish farming (also known as pisciculture)\
    \ is the production system concerned with\nraising ﬁsh in closed environments,\
    \ such as ponds or tanks, for human consumption. Nowa-\ndays nearly half of the\
    \ ﬁsh consumed in the word are raised in artiﬁcial environments [57].\nFish farming\
    \ production has a high degree of complexity as it involves interrelated physical\n\
    (e.g., water and nutrient supply), chemical (e.g., pH, oxygen), and environmental\
    \ (e.g.,\nwaste generated) elements. Therefore, the management of this process\
    \ requires advanced\nsensing, control, and communication technologies as well\
    \ as expert knowledge to make\nefﬁcient and sustainable decisions, and maximize\
    \ the productivity. Within this context, the\nSensors 2021, 21, 6910\n14 of 34\n\
    most typical CI-based processes reported in the literature are ﬁsh weight estimation\
    \ [58],\nproduction estimation, and optimization [59]. Their deﬁnitions are presented\
    \ below.\n•\nFish weight estimation: This process estimates ﬁsh weight considering\
    \ morphological\nfeatures (e.g., length, width, and mass).\n•\nProduction estimation\
    \ and optimization: This process is centered on the optimiza-\ntion of ﬁsh production\
    \ and forecasting of seasonal demand to adjust the production.\nTo accomplish\
    \ such aims, the optimization of production is carried out by monitoring\ncrucial\
    \ elements of ﬁsh ponds, like water oxygen levels, nutrients, and food supply,\n\
    which inﬂuence the growth of ﬁsh. Meanwhile, historical records of seasonal de-\n\
    mand are stored and continuously analyzed to determine the most suitable levels\
    \ of\nproduction depending on the year and season.\nThe following production system\
    \ considered in this study is agriculture, in particular,\nhorticulture. Horticulture\
    \ is the greenhouse industry dedicated to plant cultivation and\nprocessing of\
    \ different types of crops for food and commercial consumption (e.g., ﬂowers,\n\
    fruits and nuts, vegetables and herbs). The main challenges of these production\
    \ systems\nare to improve plant growth, yields, quality, nutritional value, and\
    \ resistance to insects,\ndiseases, and environmental stress.\nIn order to achieve\
    \ these improvements, different processes are managed to try and\nmaintain a balance\
    \ between efﬁciency, productivity, and sustainability, such as monitoring\nand\
    \ controlling indoor-outdoor climate conditions, crop management, and production\
    \ fore-\ncasting, among others. They are commonly approached in the specialized\
    \ literature [6,9,60]\nin open-ﬁeld agriculture and intensive horticulture. Within\
    \ the most representative pro-\ncesses, we ﬁnd the crop yield and harvest forecasting\
    \ [60–62], crop protection [63,64],\nweather prediction and irrigation management\
    \ [65,66], and site-speciﬁc nutrient manage-\nment [67,68]. These processes, which\
    \ are shown in Figure 6, are deﬁned as follows.\n•\nCrop yield and harvesting\
    \ prediction: This problem is focused on yield estimation\nto match crop supply\
    \ with demand and on crop management to increase productivity.\n•\nCrop protection:\
    \ This is based on the identiﬁcation and diagnosis of biotic (infesta-\ntions,\
    \ diseases, and weeds) and abiotic (nutrients, water deﬁciency) stress factors\
    \ that\naffect crop productivity.\n•\nWeather prediction and irrigation management:\
    \ This problem is mainly concerned\nwith weather forecasting for the optimal use\
    \ of water, which enables the design and\ndeployment of crop irrigation scheduling\
    \ and planning.\n•\nSite-speciﬁc nutrient management: This is based on the management\
    \ of soil quality\nto determine which nutrients need to be supplied in order to\
    \ maintain the chemical\ncharacteristics required for the crop under consideration.\n\
    Lastly, the third production system considered for the production stage is livestock.\n\
    This production system is dedicated to the growth and management of domestic animals\n\
    (e.g., cattle, sheep, and goats) raised in agricultural settings to generate food\
    \ products like\nmeat, eggs, or milk, among others. Livestock can be carried out\
    \ through either extensive or\nintensive systems. Extensive systems involve animals\
    \ roaming grasslands (usually under\nthe supervision of a herdsman). Diversely,\
    \ intensive livestock is located in closed infras-\ntructures and is equipped\
    \ with ICT technology, which enables animals to be monitored\nin real-time. Within\
    \ these production systems the most typical problems we come across\nare grassland\
    \ monitoring [69], animal welfare [70], animal behavior tracking [71], and\nlivestock\
    \ production prediction and optimization [72,73], as shown in Figure 6. The formal\n\
    deﬁnitions of these problems from an FSC perspective are listed below.\n•\nGrassland\
    \ monitoring: This problem is related to the accurate identiﬁcation of grass-\n\
    land inventories in order to discriminate between the most suitable types for\
    \ live-\nstock purposes.\n•\nAnimal welfare: This is focused on the pattern classiﬁcation\
    \ of ingestive behavior in\ngrazing animals for studies of animal nutrition, growth,\
    \ and health.\nSensors 2021, 21, 6910\n15 of 34\n•\nAnimal behavior tracking:\
    \ This is based on the use of behavior analysis to detect\nearly signs of health\
    \ issues and promote early intervention.\n•\nLivestock production: This problem\
    \ is centered on predictions and estimations of\nfarming parameters to optimize\
    \ the economic-energy efﬁciency and sustainability of\nproduction systems.\n3.3.2.\
    \ Processing Problems\nOnce the raw materials of food products have been grown,\
    \ they are delivered to the\nnext step of the FSC, or ‘processing’. Different\
    \ industrial processes (e.g., washing, disinfect-\ning, packaging) are carried\
    \ out in this stage to transform the raw output of production into\nedible food\
    \ products. Depending on the production system under consideration and the\nfood\
    \ products obtained from them, diverse industrial processes can be followed to\
    \ obtain\nthe goods that move on to the distribution stage. However, in spite\
    \ of such production\nparticularities, we have identiﬁed a set of common problems\
    \ that could occur in the three\nproduction systems presented in the section above.\
    \ These problems are shown in Figure 7\nand they are: demand prediction [74],\
    \ production planning for distribution [75], prediction\nof post-harvest losses\
    \ [76], and manufacturing industry processes, such as cooking, drying,\nand others\
    \ [77].\nFigure 7. FSC problems in the processing stage.\n•\nDemand prediction:\
    \ This problem in concerneed with the demand prediction of food\nrequirements\
    \ to avoid overstocking, overproduction, and over-utilization of resources.\n\
    The key idea is to estimate the quantity of food products that will be sold to\
    \ deﬁne\nhow much raw material needs to be processed.\n•\nProduction planning\
    \ for distribution: This is centered on production planning to\nmatch distribution\
    \ requirements. This problem is mostly determined by the sale\nvolumes that a\
    \ particular food product is expected to have.\n•\nPrediction of post-harvest\
    \ losses: This is focused on making estimations of food\nlosses associated with\
    \ the processing procedures carried out after harvesting raw\nmaterials coming\
    \ from the production stage.\n•\nFood manufacturing industry: This is associated\
    \ with the optimization of the pro-\ncessing technologies required to transform\
    \ raw foods into edible food (e.g., thermal,\ndrying, contact cooking, microwave\
    \ heating, etc.). These processes are performed\nusing industrial machinery.\n\
    3.3.3. Distribution Problems\nIn the third step of the food supply chain, food\
    \ products ready for human consumption\nare received from the processing stage\
    \ to be delivered to end-consumers. Speciﬁcally,\nﬁnished products arrive at warehouses,\
    \ and from there, the shipment department is\nin charge of deﬁning the most suitable\
    \ strategy to deliver products to end-consumers.\nThe essential purpose is to\
    \ distribute food products on time by the date speciﬁed in the\nretail stage.\n\
    Sensors 2021, 21, 6910\n16 of 34\nFor this particular stage of the FSC, the most\
    \ common problems reported in the spe-\ncialized literature are shown in Figure\
    \ 8 and deﬁned below. These problems include vehicle\nrouting and ﬂeet management\
    \ [78,79], storage location assignment [80,81], prediction of\nsupply chain risks\
    \ and disruptions [82,83], shelf life prediction and maturity level [84–86],\n\
    demand forecasting [87], and last mile delivery [88].\nFigure 8. FSC problems\
    \ in the distribution stage.\n•\nVehicle routing and ﬂeet management: This is\
    \ focused on determining the most\noptimal route for the delivery of food under\
    \ different scenario constraints (e.g., size of\nthe ﬂeet, fuel availability,\
    \ etc.).\n•\nStorage location assignment problem: This problem is concerned with\
    \ deciding the\nmost suitable way to store food products in a set of warehouses\
    \ in order to cope with\ndaily demand operations.\n•\nPrediction of supply chain\
    \ risks and disruptions: This is concerned with the fore-\ncasting of potential\
    \ disruptions in the logistics of food products and their associated\nfood losses.\n\
    •\nShelf life prediction and maturity level: This problem is related to the forecasting\
    \ of\nshelf life based on data sensed during the distribution process.\n•\nDemand\
    \ forecasting: This consists of understanding demand behaviors and forecast-\n\
    ing user demand generated from the retail stage. Thus, it is possible to optimize\
    \ the\ndelivery routes and warehouse locations used during the distribution stage.\n\
    •\nLast mile delivery: This problem is dedicated to the delivery of food products\
    \ using\nthe local road transport network (last mile) of cities.\n3.3.4. Retail\
    \ Problems\nIn the ﬁnal part of the FSC, we ﬁnd the retail stage. At this point,\
    \ food products are\nreceived through the distribution channels, ready for sale.\
    \ This stage encompasses the\nconcept of an ’end-consumer’, which could be supermarkets\
    \ or clients that go to these\nplaces to buy food products. The most common problems\
    \ identiﬁed in the literature for\nthis stage of the supply chain are deﬁned below\
    \ and are also summarized in Figure 9.\nLastly, we characterized the retail stage\
    \ (Figure 5). Retail-related problems commonly\naddressed with CI, in this link\
    \ of the FSC, are diet and nutrition applications [89,90],\nfood consumption and\
    \ food waste [91,92], consumer demand, perception and buying\nbehavior [93,94],\
    \ dynamic discounting based on the sell-by date [95], and day demand\nprediction\
    \ and inventory management [74].\nSensors 2021, 21, 6910\n17 of 34\nFigure 9.\
    \ FSC problems in the retail stage.\n•\nDiet and Nutrition: This is based on estimating\
    \ nutrient values using the classiﬁcation\nof food dishes and dietary assessment.\n\
    •\nFood consumption and food waste: This problem is associated with the identification\n\
    and prediction of food waste based on the buying and storage behavior of end-customers.\n\
    •\nConsumer demand, perception, and buying behavior: This problem is focused on\n\
    determining consumer proﬁles in order to predict buying behaviors and support\
    \ the\nmanagement of shop counters.\n•\nDynamic discounting based on sell-by date:\
    \ This is centered on automated price\nchanges at supermarkets based on the sell-by\
    \ date. The objective is to offer larger\ndiscounts for items with the shortest\
    \ remaining shelf life.\n•\nDaily demand prediction and inventory management:\
    \ This problem consists of\npredicting daily demand to better manage product stocks\
    \ at supermarkets.\n3.4. Level 3: Typologies of CI Problems\nIn this section,\
    \ we introduce the attributes that represent the most typical typologies\nof CI\
    \ modeling approaches used in the FSC literature. The attributes correspond to\
    \ the\nthird level of the taxonomy shown in Figure 5, and they are presented below.\n\
    •\nProblem-solving: This category is related to problems of complex decision-making\n\
    processes that need to be solved, keeping two key objectives in mind: quality\
    \ of the\nsolution and the computational time required to solve it. As a common\
    \ denominator,\nthis attribute categorizes problems that are NP-hard. Thus, this\
    \ class embodies FSC\nproblems for which there is no certainty that the method\
    \ can optimally solve them\nin a polynomial time (time complexity [96]) with respect\
    \ to the input data size. This\ncategory includes, for example, optimization or\
    \ search problems such as the vehicle\nrouting problem in the transportation stage\
    \ of the FSC.\n•\nUncertain knowledge and reasoning: This category corresponds\
    \ to FSC problems\ncharacterized by having partially observable, non-deterministic,\
    \ vague, or imprecise\ndata. In such uncertain scenarios, this attribute represents\
    \ problems that can be\naddressed in two possible ways. First, by using an approach\
    \ that acts based on\nassumptions of uncertain input data in order to give a probabilistic-based\
    \ solution\nto the problem at hand. Or second, by representing and reasoning with\
    \ the partially\navailable information in a manner similar to the way that humans\
    \ express knowledge\nand summarize data. This second approach allows non-exact\
    \ data to be represented\nin linguist terms in order to make decisions within\
    \ certain margins of correctness.\n•\nKnowledge discovery and function approximation:\
    \ This class represents FSC prob-\nlems that are distinguished by having large\
    \ volumes of data, which enable under-\nstanding and useful knowledge to be extracted\
    \ from them. Such knowledge could be\nused to make either predictions of future\
    \ events or discrimination and recognition of\npatterns. These types of problems\
    \ can usually be addressed with methods that can be\ntrained using the available\
    \ data to learn a speciﬁc task.\n•\nCommunication and perception: This category\
    \ consists of FSC problems focused\non the automatic extraction, analysis, and\
    \ understanding of information obtained\nSensors 2021, 21, 6910\n18 of 34\nfrom\
    \ digital images, texts, or voice recordings. It is worth noting that within the\
    \ FSC\ndomain, most problems solved using a communication and perception approach\
    \ are\nfocused on designing and developing autonomous computer vision systems.\
    \ These\nsystems are able to process high-dimensional data to support decision-making;\
    \ from\nobject detection to video tracking and object recognition.\n3.5. Mapping\
    \ Process between Level 2 and Level 3: Classiﬁcation of FSC Problems from a\n\
    CI Perspective\nThis section presents the categorization of FSC problems previously\
    \ identiﬁed in\nSection 3.3 from a CI perspective. Speciﬁcally, every problem\
    \ is categorized according\nto the four typologies of CI problems that we described\
    \ above: problem-solving, uncer-\ntain knowledge and reasoning, knowledge discovery\
    \ and function approximation, and\ncommunication and perception. In addition,\
    \ using relevant work from the recent FSC\nliterature, we show how the taxonomy\
    \ is able to effectively and robustly discriminate these\npapers. Thus, Section\
    \ 3.5.1 is devoted to classifying the FSC problems coming from the\nproduction\
    \ stage. Then, Section 3.5.2 introduces the classiﬁcation of problems deﬁned for\n\
    the processing stage. Lastly, Sections 3.5.3 and 3.5.4 expose the categorization\
    \ of problems\nfor the distribution and retail phases, respectively.\n3.5.1. Classiﬁcation\
    \ of Production Problems\nFigure 10 presents the categorization of production\
    \ problems for the ﬁsh farming\nand livestock cases. The attributes of the taxonomy\
    \ are depicted on the left in Figure 10,\nwhereas the ﬁsh farming (in purple)\
    \ and livestock (in red) problems are found on the right.\nThe problems and attributes\
    \ are connected by gray bars that connect the ways in which a\nspeciﬁc problem\
    \ can be modeled from a CI perspective. Fish weight estimation, grassland\nmonitoring,\
    \ animal welfare, and animal behavior tracking are problems that are classiﬁed\n\
    using the communication and perception attribute. This is justiﬁed due to the\
    \ fact that\nthese problems are usually characterized by having image and video\
    \ records as input\ndata (non-structured data). Having such data implies the use\
    \ of automatic information\nextraction by means of computer vision systems, based\
    \ on DL, which allow extraction of\nhigh-dimensional patterns embedded in image\
    \ and video data [97–103].\nFigure 10. Fish farming and livestock problems classiﬁed\
    \ by the proposed taxonomy.\nThe production estimation and optimization and livestock\
    \ production problems in\nFigure 10 are classiﬁed using the knowledge discovery\
    \ and function approximation and\nuncertain knowledge and reasoning attributes.\
    \ Such categorization is determined by the\ncentral characteristics of these problems,\
    \ which are concerned with the prediction and\noptimization of production values\
    \ using historical data records (structured data) [104,105].\nBesides, production\
    \ forecasting contains uncertainties regarding external factors of the\nproduction\
    \ systems, which encourage the use of probabilistic methods, such as the studies\n\
    carried out by [106,107].\nSensors 2021, 21, 6910\n19 of 34\nFigure 11 shows the\
    \ categorization of agriculture problems. As we can seen, crop\nprotection, which\
    \ usually involves video and image records, is categorized as a com-\nmunication\
    \ and perception problem commonly used in DL methods like convolutional\nand recurrent\
    \ neural networks [108–110]. On the other hand, the remaining agricultural\nproblems\
    \ can be categorized under knowledge discovery and function approximation,\nproblem-solving,\
    \ and uncertain knowledge and reasoning attributes as explained below.\nIn terms\
    \ of knowledge discovery and function approximation, this attribute categorizes\n\
    problems focused on the prediction of greenhouse conditions for the optimal management\n\
    of crop production, nutrients, and irrigation supply. This can be done using supervised\n\
    learning techniques that forecast variables of interest like temperature, water,\
    \ or nitro-\ngen [6,111]. Secondly, the problem-solving attribute categorizes\
    \ the weather prediction and\nirrigation management and the site-speciﬁc management\
    \ problems. These problems can be\ndeﬁned as optimization scenarios in which we\
    \ can ﬁnd concrete values associated with\nweather, irrigation, and nutrients.\
    \ In this case, the most common approach to solving them\nis based on meta-heuristics\
    \ [112–114].\nFinally, the uncertain knowledge and reasoning attributes characterize\
    \ the same prob-\nlems that fall into the knowledge discovery and function approximation\
    \ attribute. The\ndifference lies in the fact that the agriculture problems are\
    \ approached as decision systems\nunder uncertainty. In this case, fuzzy logic\
    \ is the most suitable strategy to accomplish such\nan aim [115–117] Speciﬁcally,\
    \ the fuzzy approach allows us to evaluate whether particular\nactions need to\
    \ be taken according to sensed and predicted conditions coming from agri-\nculture\
    \ systems (e.g., optimal management strategies for the control of temperature\
    \ control\ninside greenhouse systems).\nFigure 11. Agriculture problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.2. Classiﬁcation of Processing Problems\nHaving\
    \ presented the production stage, Figure 12 features the categorization of prob-\n\
    lems in the processing stage. Any of the depicted FSC problems are classiﬁed using\
    \ the\ncommunication and perception attribute, mainly because the type of input\
    \ data they handle\nis not associated with images or video records. In contrast,\
    \ when the aim is to determine\nfuture scenarios based on the available data,\
    \ all problems tend to have historical data as\ntheir input data.\nPrecisely,\
    \ the knowledge discovery and function approximation attribute categorizes\nthe\
    \ prediction of post-harvest losses and demand prediction problems as being super-\n\
    vised learning problems, whose aims are to claasify and forecast the objective\
    \ variable.\nFor instance, we consider research from [8,118] to be within this\
    \ category. Following the\ntaxonomy’s attributes in Figure 12, the problem-solving\
    \ attribute can represent and model\ndemand predictions, the food manufacturing\
    \ industry, and production planning for dis-\ntribution problems. In this scenario,\
    \ they are classiﬁed as being optimization problems,\nwith the objective of optimizing\
    \ procedures related to the problems listed. An example, for\ninstance, could\
    \ be the optimization of industrial manufacturing processes, like heating and\n\
    Sensors 2021, 21, 6910\n20 of 34\ndrying, using meta-heuristic techniques. Examples\
    \ of studies categorized by the taxonomy\nof the previously mentioned approaches\
    \ are found in [119,120].\nLastly, the uncertain knowledge and reasoning attribute\
    \ system also classiﬁes produc-\ntion planning for distribution problems. Probabilistic\
    \ methods tend to be used to approach\nthese kind of problems as production planning\
    \ can incorporate uncertainty coming from\nprocesses that are not directly related\
    \ to the production process, which can cope with\nprobability theory [121]. An\
    \ example of this last situation could be a change in the delivery\ndate due to\
    \ delays attributable to the weather [122].\nFigure 12. Processing problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.3. Classiﬁcation of Distribution Problems\nFigure\
    \ 13 exhibits the classiﬁcation of FSC problems in the distribution stage. Unlike\n\
    the two previous stages (production and processing), the predominant approaches\
    \ here are\nthe ones imposed by the problem-solving and knowledge discovery and\
    \ function approxi-\nmation attributes. The former attribute categorizes vehicle\
    \ routing and ﬂeet management,\nthe storage location assignment problem, and last\
    \ mile delivery problems, as they are\ndevoted to optimizing routing and delivery\
    \ situations. The purpose of these applications\nis to optimize, using meta-heuristics,\
    \ a concrete goal under different constraints; for in-\nstance, ﬂeet size, available\
    \ fuel, and others. Representative studies that fall in this category\nare [123–127].\n\
    The knowledge discovery and function approximation attribute includes prediction\n\
    of chain and disruptions, a shelf life prediction and maturity level, and demand\
    \ forecasting\nproblems. This attribute classiﬁes these problems under a supervised\
    \ learning perspective,\nwhere the aim is to predict expected values, such as\
    \ we can see in research carried out\nin [84,128–131]. For instance, potential\
    \ disruptions to the cold food products chain, or an\nestimation of how much product\
    \ volume needs to be distributed to meet retail demands.\nFigure 13. Distribution\
    \ problems classiﬁed by the proposed taxonomy.\n3.5.4. Classiﬁcation of Retail\
    \ Problems\nFinally, Figure 14 introduces the classification of problems in the\
    \ retail stage of\nthe FSC. In this last step, the communication and perception\
    \ attribute appears once\nSensors 2021, 21, 6910\n21 of 34\nagain to represent\
    \ the problems in which the input data correspond to non-structured\ndata, such\
    \ as images (dynamic discounting, daily demand prediction, and inventory\nmanagement)\
    \ [95,132–135]. For these particular cases, the problems can be modeled using\n\
    DL techniques to determining price discounts based on stock levels inside supermarkets\n\
    and by managing inventories according to food product existence.\nContrarily,\
    \ the knowledge discovery and function approximation attribute includes\nproblems\
    \ associated with the extraction of patterns (food consumption and food waste),\n\
    the prediction of future values related to consumer demand and buying behavior,\
    \ and the\ngeneration of healthy menus or estimating nutritional values. Research\
    \ articles on this\nattribute include [89,90,136–139]. Furthermore, this attribute\
    \ can also classify the dynamic\ndiscounting and daily demand prediction and inventory\
    \ management problems when\ntheir input data corresponds to structured information\
    \ like historical records.\nIn addition to the attributes mentioned above, the\
    \ uncertain knowledge and reasoning,\nand problem-solving attributes can be used\
    \ to categorize a couple of problems in the retail\nstage. Those problems are\
    \ consumer demand, perception, and buying behavior, as well\nas daily demand prediction\
    \ and inventory management. Consumer demand, perception,\nand buying behavior\
    \ can be approached with a probabilistic system [140–142], for instance,\nuncertainty\
    \ concerning what food products are expected to be bought. Meanwhile, daily\n\
    demand prediction and inventory management can be addressed with an optimization\n\
    paradigm [143,144]. For this case, the aim is to optimize stock levels in such\
    \ a way that\nfood waste can be decreased or even to avoiding over-stocking issues\
    \ completely.\nFigure 14. Retail problems classiﬁed by the proposed taxonomy.\n\
    4. Guidelines for the Use of Computational Intelligence Approaches in the Food\n\
    Supply Chain\nHaving presented and validated the taxonomy of FSC problems, this\
    \ section presents\na set of guidelines for researchers and practitioners in FSC\
    \ for the use of CI within this\ndomain (Figure 15). Concretely, we try to guide\
    \ the users to (1) select the typology of a\nCI problem that they are addressing;\
    \ and (2) identify what families of CI methods could\nbe more suitable for the\
    \ problem at hand. The latter does not mean that in all cases the\nfamily of methods\
    \ suggested is the most appropriate, as this may depend on the speciﬁc\ncharacteristics\
    \ of the problem being addressed.\nThe guidelines depicted in Figure 15 start\
    \ with a basic question posed to the user:\n“What is the purpose and modeling\
    \ characteristics of the problem at hand?” (it could be\ncommunication and perception,\
    \ uncertain knowledge and reasoning, knowledge discovery\nand function approximation,\
    \ and problem-solving). If the purpose is the automatic analysis\nand extraction\
    \ of information from digital images to decide on the action to be taken\nregarding\
    \ the management of food supply systems (communication and perception), the\n\
    suitable family of methods would be deep neural networks (e.g., convolutional\
    \ neural\nnetworks). This family of CI methods enables the creation of computer\
    \ vision systems,\nwhich allows the environment of object characteristics to be\
    \ perceived in a visual way.\nBased on this visual analysis, these systems communicate\
    \ or recommend actions that\nSensors 2021, 21, 6910\n22 of 34\nachieve desired\
    \ states or match predeﬁned conditions (e.g., identify the quality of potatoes\n\
    in order to evaluate the units that are either damaged or edible).\nFigure 15.\
    \ Guidelines for the method selection problem in the food supply chain. Pd: production,\
    \ Ps:\nprocessing, D: distribution, R: retail.\nIf the objective of the user is\
    \ to handle problems characterized by partially observable,\nnon-deterministic,\
    \ or imprecise data (uncertain knowledge and reasoning), fuzzy systems\nor probabilistic\
    \ methods are recommended. For the former CI approach, it is important\nto highlight\
    \ that fuzzy systems need to be paired with hardware (e.g., PID controllers)\n\
    to work properly in food applications. This is due to the fact that hardware components\n\
    allow decisions made by fuzzy systems to be translated into actions (e.g., management\n\
    of nutrients and irrigation supply inside a greenhouse system depending on conditions\n\
    associated with temperature). Probabilistic methods are suitable for making estimations\
    \ of\nrelevant variables (e.g., planning production according to seasonal demand)\
    \ in scenarios\nwith partially observable data.\nWhen the users’ aim is directed\
    \ at making predictions from historical data, making\nclassiﬁcations that discriminate\
    \ between data categories, or ﬁnding hidden patterns in data,\nthe best modeling\
    \ approach to use is knowledge discovery and function approximation.\nFirstly,\
    \ for predictions and classiﬁcations, the user should determine the type of input\n\
    data at hand. In general terms, the input data can be structured (e.g., historical\
    \ records,\ntabular data) or unstructured (e.g., video, images). In the former,\
    \ and depending on the\ndata size, the supervised learning techniques are the\
    \ CI methods to be used when facing\nsmall, medium, and large data no bigger than\
    \ 40–50 gigabytes. Supervised DL, how-\never, is the recommended approach for\
    \ big datasets. In terms of making predictions and\nclassiﬁcations when using\
    \ unstructured data, supervised DL would be the most suitable\nlearning approach;\
    \ while unsupervised ML or unsupervised DL are the recommended\nCI approaches\
    \ for pattern analysis. Finally, as we can see in Figure 15, the other category\n\
    of problems that users might face is problem-solving. In this case, the user’s\
    \ aim is to\noptimize particular values in order to achieve a desired level of\
    \ performance. As such,\nthe above-suggested approaches are therefore all meta-heuristics\
    \ (e.g., EC, SI, and local\nsearch-based techniques).\nIn addition to the analyses\
    \ presented above, the bottom part of Figure 15 also depicts\nwhich FSC stages\
    \ the four CI modeling approaches (and their associated methods) are\nusually\
    \ applied in. Fuzzy systems and probabilistic approaches are typically considered\
    \ for\ncontrol applications in the production, processing, and retail stages.\
    \ In contrast, optimiza-\ntion with meta-heuristics and prediction-classiﬁcation-pattern\
    \ analysis with ML and DL\nare modeling perspectives that are considered in the\
    \ entire FSC process. The contributions\nSensors 2021, 21, 6910\n23 of 34\nof\
    \ communication and perception approaches using DL methods tend to be more typically\n\
    focused on the production and retail stages.\n5. Conclusions\nThis ﬁnal section\
    \ introduces the main reﬂections drawn from the research carried out\nin this\
    \ paper. Section 5.1 introduces the summary and conclusions. Then, Section 5.2\
    \ details\na set of challenges and research opportunities to encourage further\
    \ exploration and use of\nthe possible contributions that CI might bring to the\
    \ FSC ﬁeld.\n5.1. Summary\nThis paper has proposed a new and comprehensive taxonomy\
    \ of FSC problems\nunder a CI paradigm for three representative supply chains:\
    \ agriculture, ﬁsh farming,\nand livestock. The taxonomy was built based on three\
    \ levels in order to categorize FSC\nproblems according to how they can be modeled\
    \ using CI approaches. The ﬁrst and second\nlevels are focused on identifying\
    \ the chain stage (production, processing, distribution,\nand retail) and the\
    \ speciﬁc FSC problem to be addressed (e.g., vehicle routing problems\nin the\
    \ distribution stage). The third level presents the typologies of FSC problems\
    \ from\na CI perspective, and aims to categorize FSC problems depending on how\
    \ they can be\nmodeled and solved by CI methods. In the third level of the taxonomy\
    \ we have deﬁned\nfour attributes, presented as follows, (1) problem solving,\
    \ which is in charge of classifying\nFSC problems focused on optimizing processes;\
    \ (2) uncertain knowledge and reasoning,\nwhich concers problems that have partially\
    \ observable, non-deterministic, incomplete, or\nimprecise data; (3) knowledge\
    \ discovery and function approximation, which has the role\nof categorizing problems\
    \ that aim to make predictions of future scenarios, classiﬁcation of\nvariables,\
    \ or analysis of patterns embedded in data; (4) communication and perception,\n\
    groups FSC problems that involve computer vision systems to sensing and suggesting\n\
    plausible actions to take in order to intervene in such environments.\nTo check\
    \ the robustness of the taxonomy, we categorized FSC problems with CI\nmethods,\
    \ especially in the production, processing, distribution, and retail stages. Here,\
    \ it is\nrelevant to highlight that we introduced a set of uniﬁed deﬁnitions for\
    \ these problems. As\na result, we were able to draw some interesting conclusions.\
    \ In the ﬁsh and livestock cases\nof the production stage, using the DL and the\
    \ communication and perception attribute\nsigniﬁcantly inﬂuences applications\
    \ (e.g., ﬁsh weight estimation, grassland monitoring,\nanimal welfare) where the\
    \ input data is determined by image and video records (non-\nstructured data).\
    \ In contrast, we have the case of classic ML, which is narrowed to FSC\nproblems,\
    \ and for which, the objective is to make production predictions using historical\n\
    data records (structured data). In the case of agriculture production systems,\
    \ the scope of\nthe CI approach is broader. Speciﬁcally, we found that DL, ML,\
    \ FL, and Meta-heuristics are\nmethods for modeling production problems related\
    \ to crop protection and yield, weather\nprediction, and irrigation and nutrient\
    \ management.\nIn the processing stage, ML, meta-heuristics, and probabilistic\
    \ methods are the CI\napproaches commonly used. In terms of ML, the aim is to\
    \ extract patterns and forecast\nobjective variables like demand prediction and\
    \ prediction of post-harvest losses. As for\nmeta-heuristics and probabilistic\
    \ techniques, they aim to optimize food manufacturing\nprocesses (e.g., heating,\
    \ drying) and production planning for distribution. Further down\nin the supply\
    \ chain, the predominant family of CI methods is meta-heuristics, found in\nthe\
    \ distribution link. This data-driven approach is devoted to optimizing the routing\n\
    and delivery problems under various constraints such as ﬂeet size and available\
    \ fuel.\nLastly, DL is the principal CI approach in problems with non-structured\
    \ input data (e.g.,\ndynamic discounting, diet, and nutrition) in the retail stage.\
    \ Classical ML has been used to\nextract patterns (food consumption and food waste)\
    \ and predict consumer demand and\nbuying behavior.\nThe taxonomy allowed us to\
    \ ﬁgure out which modeling approaches are more typically\nconsidered when dealing\
    \ with problems at the four supply chain stages. In this manner,\nSensors 2021,\
    \ 21, 6910\n24 of 34\nwe gave a general overview of well-established tendencies\
    \ regarding CI across the three\nsupply chains considered. Thus, the deﬁnition\
    \ and classiﬁcation of FSC problems helped\nus introduce guidelines for the incorporation\
    \ and use of CI in the food industry. These\nguidelines are built upon CI’s primary\
    \ purposes in the food supply chain: communication\nand perception, uncertain\
    \ knowledge and reasoning representations, knowledge discovery\nand function approximation,\
    \ and problem-solving. These guidelines aim to help non-expert\nCI users to identify\
    \ families of methods that can supply a solution for their particular CI-\nbased\
    \ needs in different FSC problems.\nIn summary, the taxonomy analysis suggests\
    \ that there is no family of CI methods\nthat best suits all FSC problems. However,\
    \ we state the need for a comparison framework\nthat allows the description and\
    \ analysis of the performance of different CI methods in\ndiverse supply chain\
    \ problems. In this context, the taxonomy presented sets up the basis\nfor a common\
    \ framework that, in further research, will facilitate experimentation in order\n\
    to determine which CI approaches are more appropriate for each type of FSC problem.\n\
    This may also help determine a suitable baseline of methods to make fair comparisons,\n\
    depending on the family of CI methods chosen for the FSC problem at hand.\n5.2.\
    \ Challenges and Research Opportunities\nAs industry 4.0 is ﬂourishing for the\
    \ FSC management and operation, emerging re-\nsearch paths arise for CI to yield\
    \ more robust, interoperable, and accurate methods [145,146].\nTherefore, this\
    \ section points out challenges and research opportunities that the community\n\
    should explore to enhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nThese challenges are motivated by the gaps located at the intersection\
    \ of FSC and CI, which\nwere identiﬁed through the proposed taxonomy.\n5.2.1.\
    \ Data Fusion from Different Data Sources\nSigniﬁcantly, few CI methods can incorporate\
    \ data from different types of sources.\nBesides, in real scenarios, the data\
    \ available from a unique type of sensor might not be\nsufﬁcient to fully represent\
    \ the FSC problem that is intended to be addressed. For instance,\ndifferent Internet\
    \ of Things (IoT) devices (e.g., agricultural environment monitoring sys-\ntems,\
    \ GPS, cameras) provide diverse data for the optimum management of production\n\
    systems [147–149]. Amongst the relevant data for the aforementioned example, we\
    \ ﬁnd\ntemperature, humidity, localization coordinates, crop images, and others.\n\
    As a common denominator, all the data associated with the aforementioned variables\n\
    can have a different format, ranging from historical records in the form of tables,\
    \ to non-\nstructured data like images. Additionally, all of them offer valuable\
    \ information for the\npurpose at hand (e.g., prediction of crop production or\
    \ management of pest diseases). In\nthis context, the challenge lies in deﬁning\
    \ guidelines for the harmonizing and fusion of\ndata from diverse sources. Such\
    \ guidelines should consider that each FSC stage can add\nparticularities to the\
    \ data for the CI-based problem under consideration. How to properly\ncollect\
    \ and generate a single dataset with information obtained from varied and different\n\
    sources, which are fed into a CI method, is a research opportunity that must be\
    \ addressed\nto further enhance CI contributions in the FSC domain.\nIf the integration\
    \ process is not done correctly, inconsistencies will appear, resulting in\na\
    \ decrease in the performance of CI approaches [150]. Hence, merging data from\
    \ different\ninput sources presents a notorious problem that commonly attracts\
    \ more issues, such as\ninconsistent, duplicate, redundant, and correlated data.\
    \ One potential research direction\nto take to help cope with this challenge could\
    \ be designing automatic preprocessing\napproaches that fuse and harmonize data\
    \ sources to provide the accepted input format\nof CI methods. For the latter,\
    \ it is important to note that every CI approach requires\ndifferent input data\
    \ formats, which could split the design of the aforementioned automatic\ndata\
    \ preprocessing methods into diverse paths depending on the particular family\
    \ of CI\nmethods under consideration.\nSensors 2021, 21, 6910\n25 of 34\n5.2.2.\
    \ Real-Time Data and Incremental Learning\nIn supervised learning, the input data\
    \ is available before starting any training pro-\ncesses. Here, the task is to\
    \ build up a model from that data using a batch approach. The\nlatter means that\
    \ DL and ML methods use all available samples in the input data to build\nand\
    \ train a model to make predictions or classiﬁcations when new data comes into\
    \ the\ntrained model. Currently, most DL and ML applications are focused on the\
    \ batch learning\napproach, wherein data are given before training the ML models\
    \ [151]. In this context,\nmodel training and optimization processes are purely\
    \ based on the aforementioned in-\nput dataset, whose data distribution is supposed\
    \ to be static. Nevertheless, such a static\napproach is not the case for real\
    \ CI-based applications within the FSC.\nDL and ML methods must real FSC scenarios,\
    \ wherein different IoT devices continu-\nously generate new data streams. For\
    \ instance, dynamic discounts in the retail stage or the\nmanagement of greenhouse\
    \ systems whose conditions must be constantly monitored to\nguarantee the optimal\
    \ control of crops are examples of real-time data streams. Therefore,\nthe key\
    \ challenge is to design ML and DL methods that adapt to real-time data, and work\n\
    with limited resources (e.g., memory), while maintaining their predictive capacities.\n\
    Further research is needed to deal with the aforementioned challenge, and should\n\
    include the concepts of incremental learning [152,153] in the design and deployment\
    \ of\nDL and ML methods in FSC problems. Furthermore, although incremental learning\
    \ is a\nsuitable strategy when dealing with the adaptation of DL and ML to real-time\
    \ data streams,\nthe concept of incremental learning brings up other issues that\
    \ must be considered when it\nis included in the FSC context. These issues are\
    \ introduced in more detail below.\nThe ﬁrst issue is related to the concept of\
    \ drift, which is associated with changes in\nthe new input data’s statistical\
    \ properties (e.g., statistical distribution), which can highly\ninﬂuence the\
    \ performance of pre-trained DL or ML methods [154]. Secondly, we have\nthe stability-plasticity\
    \ dilemma that, in noisy environments, refers to when and how to\nadapt the current\
    \ model to the new data stream [155]. On the one hand, quick updates\nenable fast\
    \ adaptations of the model according to new data; however, at the same time, old\n\
    information that could be useful later in the process is forgotten just as quickly.\
    \ On the\nother hand, slow adaptations can be made, and old data is retained longer,\
    \ causing the\nmodel’s reactivity capacity to decrease; thereby, affecting the\
    \ model’s forecasting power.\nThus, deﬁning policies to balance the two scenarios\
    \ mentioned above is a relevant challenge\nto support the inclusion of CI approaches\
    \ in real-time data environments.\nFinally, the third challenge associated with\
    \ incremental learning is adaptive model\ncomplexity [156]. This issue is concerned\
    \ with the fact that as concept drift events become\nmore frequent, increasing\
    \ model complexity is required. Although the latter improves the\nmodel’s performance,\
    \ increasing its complexity leads to an increase in the need of more\ncomputational\
    \ resources, which are not always affordable or available in different domains,\n\
    such as FSC.\n5.2.3. Explainability of Computational Intelligence Methods\nNowadays,\
    \ CI systems have increased their capacity to carry out different tasks (e.g.,\n\
    predictions, classiﬁcation) with almost no human intervention and are achieving\
    \ high\nproﬁciency levels. In a narrow scope, if the only objective when evaluating\
    \ CI methods is\nperformance, such an object has clearly been achieved thanks\
    \ to this increasing capacity.\nNonetheless, when decisions derived from CI-based\
    \ techniques affect the dynamics of hu-\nman life (e.g., social, cultural, environmental\
    \ dimensions), understanding how CI systems\nhave achieved this performance becomes\
    \ necessary [157].\nWhile some CI approaches, such as fuzzy logic and ML methods\
    \ (e.g., rule-based\nlearners, decision trees), can provide different degrees\
    \ of interpretability and transparency\nof decisions made in their inner structure;\
    \ other methods cannot provide this information\n(e.g., black-box decision systems\
    \ [158]). In these cases, there are no clues regarding the\nsystems’ decisions\
    \ to obtain the ﬁnal result. One example is DL methods, whose complex\ninner structure\
    \ is full of intricate connections between layers and neurons and have a broad\n\
    Sensors 2021, 21, 6910\n26 of 34\nspace of hyperparameters. Therefore, understanding\
    \ where the high performance of DL\nmethods comes from is quite tricky.\nAs DL\
    \ is increasingly being employed in diverse FSC applications due to its per-\n\
    formance capacities, the demand for interpretability, explainability, and transparency\
    \ is\ngrowing between diverse FSC stakeholders. Such demand lies in the fact that\
    \ decisions\nmade based on CI systems can lead to actions, which can not be justiﬁed\
    \ or that require\ndetailed explanations [159] in order to enhance the management\
    \ of the supply chain. For\nexample, the shelf-life of perishable products needs\
    \ to be predicted in the distribution\nstage. However, understanding the factors\
    \ that inﬂuence the deterioration or preservation\nof food products is vital to\
    \ improve the management of distribution chains. The latter is\nknown as explainable\
    \ artiﬁcial intelligence (XAI) and is widely acknowledged as a crucial\nconcept\
    \ to be taken into account in the practical deployment of CI methods [160].\n\
    In this sense, as stated by [160], the challenge of XAI in different knowledge\
    \ domains,\nsuch as FSCs, is creating more explainable methods while maintaining\
    \ their output perfor-\nmance. Besides, it is crucial to facilitate stakeholder\
    \ understanding and trust in decisions\nsupported by CI systems whose outputs\
    \ become the basis for different actions along the\nwhole supply chain.\n5.2.4.\
    \ The Method Selection Problem\nAs shown in this research paper, depending on\
    \ the FSC problem at hand, different\ntypes of CI methods could be used. In this\
    \ sense, Section 4 provides helpful information\nto guide non-expert CI users\
    \ when choosing the most suitable CI family of methods\ndepending on the purpose\
    \ to be pursued (e.g., prediction, classiﬁcation, optimization). In\nthis context,\
    \ keeping in mind the no-free-lunch theorem [161] (which states that there is\n\
    no unique algorithm that can be competitive in all problems), the proposed guidelines\n\
    contribute to dealing with the model selection problem in the FSC area. Nevertheless,\n\
    having identiﬁed the most suitable families of CI methods, it is still difﬁcult\
    \ to choose the\nbest method within each family.\nFor instance, if the objective\
    \ is to optimize a food production process in the processing\nstage, the critical\
    \ question would be to ask what meta-heuristic approach is the most\nsuitable\
    \ for the considered problem. The answer to this question could be to use an\n\
    EC, SI, or local-based approach. However, solving such a decision requires a thorough\n\
    experimentation that demands a large amount of effort and is time-consuming [162].\n\
    Another similar example of the method selection problem is the case of ML. FSC\
    \ data\nallows different variables of interest to be predicted under diverse scenarios,\
    \ ranging from\nﬁsh farming production to agriculture. These characteristics of\
    \ the production context\ninﬂuence ML method performance, and selecting the most\
    \ appropriate method from a\npool of candidates is a time-consuming task. Thus,\
    \ the automation of choosing the best CI\ntechnique from a predeﬁned set of methods\
    \ of the same family is a crucial challenge that\ncould help increase inclusion\
    \ of CI into the FSC.\nCurrently, there are well-established automated approaches\
    \ focused on ML and DL.\nTherefore, we can use the automation of complete ML or\
    \ DL workﬂows, known as Auto-\nmated Machine learning (AutoML) [163] and Automated\
    \ Deep learning (AutoDL) [164].\nSuch approaches are considered to be promising\
    \ strategies to reduce human effort and\ntime cost of ML and DL in research areas\
    \ in which specialized knowledge is an asset\nthat is not always available or\
    \ affordable. Particularly, AutoML and AutoDL seek to ﬁnd\ncompetitive ML pipelines\
    \ (the workﬂow from data preprocessing to model selection) and\nneural network\
    \ architectures automatically without almost any human intervention. The\ncentral\
    \ purpose is maximizing or minimizing a performance metric on input data without\n\
    it having to be specialized in the problem domain where the data comes.\nAutoML\
    \ and AutoDL methods have been successfully used in other areas [165,166].\nHowever,\
    \ an extensive analysis to determine their strengths and weaknesses has not been\n\
    carried out in very diverse learning tasks, such as FSCs. Additionally, the concept\
    \ of\nAutoML and AutoDL could be extrapolated to an even broader space, such as\
    \ automated\nSensors 2021, 21, 6910\n27 of 34\ncomputational intelligence. In\
    \ this case, the focus would be on supporting non-expert\nusers in selecting other\
    \ CI techniques like meta-heuristics and its sub-families (e.g., EC,\nSI, local-based\
    \ approaches). In this context, the research challenge lies in the design and\n\
    development of automated methods for other families of CI methods, including fuzzy\n\
    logic, meta-heuristic, probabilistic methods, and others.\n5.2.5. Interoperability\
    \ and Deployment of CI with Information and\nCommunication Technologies\nCI is\
    \ only one part of the entire ICT ecosystem required to digitize processes in\
    \ the\nFSC. IoT technologies, information storage and management technologies,\
    \ data analytic\nand visualization tools, or decision support technologies are\
    \ other relevant components\nwithout which CI cannot reach its full potential.\
    \ All these technologies have switched the\nfocus from traditional automation\
    \ of FSC processes to a cloud-based paradigm where all\nICTs operate efﬁciently\
    \ and intuitively [167]. Within the cloud-based approaches, major\ntechnologies\
    \ must be able to interoperate with each other and themselves. Thus, such\ninterconnectivity\
    \ and exchange of information are some of the main challenges raised\nwhen incorporating\
    \ CI and other industry 4.0 approaches into the daily operation and\nmanagement\
    \ of FSCs [168].\nOne of the latent issues is the lack of standardization of the\
    \ data models with CI\nmethods. Ultimately the goal of Industry 4.0 in FSCs is\
    \ to incorporate semantic interoper-\nability, which enables systems to exchange\
    \ information with unambiguous meaning [169].\nHowever, the study of interoperability\
    \ standards for CI approaches is a research area that\nstill needs to be fully\
    \ exploited. The demand for these standards is also growing at a\npace never seen\
    \ before, as the current trend of Industry 4.0 is characterized by complex\nautomation\
    \ and production systems where CI works with a wide variety of standards,\ncomponents,\
    \ and services in a cloud-based environment [170]. Despite such challenges, re-\n\
    cent advances have been made in interoperability standards for cloud-based environments.\n\
    Some examples are the interoperable cloud-based manufacturing system [171], the\
    \ hybrid\nmanufacturing cloud framework [172], and the new generation artiﬁcial\
    \ intelligence-driven\nintelligent manufacturing architecture [173].\nAnother\
    \ big challenge of CI in integration with ICTs lies in the manufacturing pro-\n\
    cesses of the FSC production stage. Nowadays, CI approaches are usually focused\
    \ on\nmaximizing accuracy without considering the resources they consume. Nevertheless,\
    \ with\nthe increasing demand of developing a globally low carbon economy, the\
    \ need to build an\nintelligent and environmentally friendly food industry is\
    \ becoming more urgent [174,175].\nIn this sense, CI approaches require that a\
    \ balance be struck between the computational\nresources they use, the energy\
    \ they consume, and the performance they can achieve in the\ntime-frame allowed\
    \ by food manufacturing processes [176]. Furthermore, the aforemen-\ntioned resources\
    \ are assets that are not always available in small- and medium-sized food\nindustries.\
    \ Therefore, more research is required to develop CI methods that are capable\n\
    of being deployed in IoT devices and smart manufacturing industries under different\n\
    constraints like energy efﬁciency and computational resources. In conclusion,\
    \ this research\npath could imply bringing in the concepts of edge computing and\
    \ fog computing [177] for\nthe efﬁcient inclusion of CI in food manufacturing\
    \ processes [178].\nAuthor Contributions: Conceptualization, J.S.A.-Z., A.A.-V.\
    \ and A.D.M.; Methodology, J.S.A.-Z.,\nA.A.-V. and A.D.M.; Validation, J.S.A.-Z.\
    \ and A.D.M.; Formal Analysis, J.S.A.-Z., A.A.-V., A.D.M. and\nJ.L.; Investigation,\
    \ J.S.A.-Z.; Data Curation, J.S.A.-Z.; Writing—Original Draft Preparation, J.S.A.-Z.,\n\
    A.D.M. and J.L.; Writing—Review and Editing, J.S.A.-Z., A.D.M. and J.L.; Visualization,\
    \ J.S.A.-Z.;\nSupervision, A.A.-V. and A.D.M.; Project Administration, A.A.-V.;\
    \ Funding Acquisition, A.A.-V. and\nA.D.M. All authors have read and agreed to\
    \ the published version of the manuscript.\nFunding: This work has been funded\
    \ by the European Union’s Horizon 2020 Research and Innovation\nProgramme under\
    \ Grants 101000617 and 861540. This work has also been funded by the Prize UD-\n\
    Grupo Santander 2019 and the Spanish Ministry of Science and Innovation through\
    \ research project\nPID2019-109393RA-I00.\nSensors 2021, 21, 6910\n28 of 34\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: All data analyzed during this\
    \ study are included in this article.\nAcknowledgments: We want to thank the reviewers\
    \ for their feedback that enabled us to enhance\nthis article’s quality and scientiﬁc\
    \ rigour.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nWorld Population Projected to Reach 9.8 Billion in 2050, and 11.2\
    \ Billion in 2100. 2017. Available online: https://www.un.org/\ndevelopment/desa/en/news/population/world-population-prospects-2017.html\
    \ (accessed on 30 September 2010).\n2.\nMisra, N.N.; Dixit, Y.; Al-Mallahi, A.;\
    \ Bhullar, M.S.; Upadhyay, R.; Martynenko, A. IoT, big data and artiﬁcial intelligence\
    \ in\nagriculture and food industry. IEEE Internet Things J. 2020. [CrossRef]\n\
    3.\nKacprzyk, J.; Pedrycz, W. Introduction. In Springer Handbook of Computational\
    \ Intelligence; Springer: Berlin/Heidelberg, Germany,\n2015; pp. 1–4.\n4.\nBishop,\
    \ C.M. Pattern Recognition and Machine Learning; Springer: Berlin/Heidelberg,\
    \ Germany, 2006.\n5.\nKakani, V.; Nguyen, V.H.; Kumar, B.P.; Kim, H.; Pasupuleti,\
    \ V.R. A critical review on computer vision and artiﬁcial intelligence in\nfood\
    \ industry. J. Agric. Food Res. 2020, 2, 100033. [CrossRef]\n6.\nLiakos, K.G.;\
    \ Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning in Agriculture:\
    \ A Review. Sensors 2018, 18, 2674.\n[CrossRef]\n7.\nKamilaris, A.; Kartakoullis,\
    \ A.; Prenafeta-Boldú, F.X. A review on the practice of big data analysis in agriculture.\
    \ Comput. Electron.\nAgric. 2017, 143, 23–37. [CrossRef]\n8.\nOnwude, D.I.; Chen,\
    \ G.; Eke-emezie, N.; Kabutey, A.; Khaled, A.Y.; Sturm, B. Recent Advances in\
    \ Reducing Food Losses in the\nSupply Chain of Fresh Agricultural Produce. Processes\
    \ 2020, 8, 1431. [CrossRef]\n9.\nSaiz-Rubio, V.; Rovira-Más, F. From Smart Farming\
    \ towards Agriculture 5.0: A Review on Crop Data Management. Agronomy\n2020, 10,\
    \ 207. [CrossRef]\n10.\nCamaréna, S. Artiﬁcial intelligence in the design of the\
    \ transitions to sustainable food systems. J. Clean. Prod. 2020, 271, 122574.\n\
    [CrossRef]\n11.\nGrifﬁs, S.E.; Bell, J.E.; Closs, D.J. Metaheuristics in Logistics\
    \ and Supply Chain Management. J. Bus. Logist. 2012, 33, 90–106.\n[CrossRef]\n\
    12.\nWari, E.; Zhu, W. A survey on metaheuristics for optimization in food manufacturing\
    \ industry.\nAppl. Soft Comput. 2016,\n46, 328–343. [CrossRef]\n13.\nEnvironmental\
    \ Sustainability Vision Towards 2030: Achievements, Challenges and Opportunities.\
    \ 2012. Available online:\nwww.yumpu.com/en/document/read/20931680/environmental-sustainability-vision-towards-2030-fooddrinkeurope\
    \ (accessed\non 30 September 2010).\n14.\nOECD-FAO. OECD-FAO Guidance for Responsible\
    \ Agricultural Supply Chains; OECD: Paris, France, 2016; p. 88.\n15.\nSharma,\
    \ R.; Kamble, S.S.; Gunasekaran, A.; Kumar, V.; Kumar, A. A systematic literature\
    \ review on machine learning applications\nfor sustainable agriculture supply\
    \ chain performance. Comput. Oper. Res. 2020, 119, 104926. [CrossRef]\n16.\nBorodin,\
    \ V.; Bourtembourg, J.; Hnaien, F.; Labadie, N. Handling uncertainty in agricultural\
    \ supply chain management: A state of\nthe art. Eur. J. Oper. Res. 2016, 254,\
    \ 348–359. [CrossRef]\n17.\nDethier, J.J.; Effenberger, A. Agriculture and development:\
    \ A brief review of the literature.\nEcon. Syst. 2012, 36, 175–205.\n[CrossRef]\n\
    18.\nFøre, M.; Frank, K.; Norton, T.; Svendsen, E.; Alfredsen, J.A.; Dempster,\
    \ T.; Eguiraun, H.; Watson, W.; Stahl, A.; Sunde, L.M.; et al.\nPrecision ﬁsh\
    \ farming: A new framework to improve production in aquaculture. Biosyst. Eng.\
    \ 2018, 173, 176–193. [CrossRef]\n19.\nSundrum, A. Organic livestock farming:\
    \ A critical review. Livest. Prod. Sci. 2001, 67, 207–215. [CrossRef]\n20.\nKamble,\
    \ S.S.; Gunasekaran, A.; Gawankar, S.A. Achieving sustainable performance in a\
    \ data-driven agriculture supply chain: A\nreview for research and applications.\
    \ Int. J. Prod. Econ. 2020, 219, 179–194. [CrossRef]\n21.\nJordan, M.I.; Mitchell,\
    \ T.M. Machine learning: Trends, perspectives, and prospects. Science 2015, 349,\
    \ 255–260. [CrossRef]\n22.\nHinton, G.; Sejnowski, T.J. Unsupervised Learning:\
    \ Foundations of Neural Computation; The MIT Press: Cambridge, MA, USA, 1999.\n\
    23.\nStephen, M. Machine Learning: An Algorithmic Perspective; CRC Press: Boca\
    \ Raton, FL, USA, 2014.\n24.\nCharte, D.; Charte, F.; García, S.; Herrera, F.\
    \ A snapshot on nonstandard supervised learning problems: Taxonomy, relationships,\n\
    problem transformations and algorithm adaptations. Prog. Artif. Intell. 2019,\
    \ 8, 2192–6360. [CrossRef]\n25.\nJain, A.; Duin, R.; Mao, J. Statistical pattern\
    \ recognition: A review. IEEE Trans. Pattern Anal. Mach. Intell. 2000, 22, 4–37.\
    \ [CrossRef]\n26.\nFukunaga, K. Introduction to Statistical Pattern Recognition,\
    \ 2nd ed.; Academic Press Professional, Inc.: Cambridge, MA, USA, 1990.\n27.\n\
    Duda, R.O.; Hart, P.E.; Stork, D.G.; Duda, C.R.O.; Hart, P.E.; Stork, D.G. Pattern\
    \ Classiﬁcation, 2nd ed.; Wiley: Hoboken, NJ,\nUSA, 2001.\n28.\nSmola, A.J.; Schölkopf,\
    \ B. On a Kernel-Based Method for Pattern Recognition, Regression, Approximation,\
    \ and Operator\nInversion. Algorithmica 1998, 22, 211–231. [CrossRef]\nSensors\
    \ 2021, 21, 6910\n29 of 34\n29.\nJaafra, Y.; Luc Laurent, J.; Deruyver, A.; Saber\
    \ Naceur, M. Reinforcement learning for neural architecture search: A review.\n\
    Image Vis. Comput. 2019, 89, 57–66. [CrossRef]\n30.\nTaylor, M.E.; Stone, P. Behavior\
    \ Transfer for Value-Function-Based Reinforcement Learning. In Proceedings of\
    \ the Fourth\nInternational Joint Conference on Autonomous Agents and Multiagent\
    \ Systems, Utrecht, The Netherlands, 25–29 July 2005;\npp. 53–59.\n31.\nSewak,\
    \ M. Policy-Based Reinforcement Learning Approaches. In Deep Reinforcement Learning:\
    \ Frontiers of Artiﬁcial Intelligence;\nSpringer: Singapore, 2019; pp. 127–140.\n\
    32.\nRay, S.; Tadepalli, P. Model-Based Reinforcement Learning. In Encyclopedia\
    \ of Machine Learning; Springer: New York, NY, USA,\n2010; pp. 690–693.\n33.\n\
    Pouyanfar, S.; Sadiq, S.; Yan, Y.; Tian, H.; Tao, Y.; Reyes, M.P.; Shyu, M.L.;\
    \ Chen, S.C.; Iyengar, S.S. A Survey on Deep Learning:\nAlgorithms, Techniques,\
    \ and Applications. ACM Comput. Surv. 2018, 51, 1–36. [CrossRef]\n34.\nLeCun,\
    \ Y.; Bengio, Y.; Hinton, G. Deep learning. Nature 2015, 521, 436–444. [CrossRef]\n\
    35.\nLiu, L.; Ouyang, W.; Wang, X.; Fieguth, P.; Chen, J.; Liu, X.; Pietikäinen,\
    \ M. Deep Learning for Generic Object Detection: A Survey.\nInt. J. Comput. Vis.\
    \ 2020, 128, 261–318. [CrossRef]\n36.\nDeng, L.; Liu, Y. Deep Learning in Natural\
    \ Language Processing, 1st ed.; Springer: Berlin/Heidelberg, Germany, 2018.\n\
    37.\nSchmidhuber, J. Deep learning in neural networks: An overview. Neural Netw.\
    \ 2015, 61, 85–117. [CrossRef] [PubMed]\n38.\nDargan, S.; Kumar, M.; Ayyagari,\
    \ M.R.; Kumar, G. A Survey of Deep Learning and Its Applications: A New Paradigm\
    \ to Machine\nLearning. Arch. Comput. Methods Eng. 2020, 27, 1071–1092. [CrossRef]\n\
    39.\nBianchi, L.; Dorigo, M.; Gambardella, L.M.; Gutjahr, W.J. A survey on metaheuristics\
    \ for stochastic combinatorial optimization.\nNat. Comput. 2009, 8, 239–287. [CrossRef]\n\
    40.\nBlum, C.; Roli, A. Metaheuristics in Combinatorial Optimization: Overview\
    \ and Conceptual Comparison. ACM Comput. Surv.\n2003, 35, 268–308. [CrossRef]\n\
    41.\nFoster, J.A. Evolutionary computation. Nat. Rev. Genet. 2001, 2, 428–436.\
    \ [CrossRef] [PubMed]\n42.\nChakraborty, A.; Kar, A.K. Swarm Intelligence: A Review\
    \ of Algorithms. In Nature-Inspired Computing and Optimization: Theory\nand Applications;\
    \ Springer: Cham, Switzerland, 2017; pp. 475–494.\n43.\nStefan, V.; Silvano, M.;\
    \ Osman, I.H.; Cathérine, R. Advances and Trends in Local Search Paradigms for\
    \ Optimization, 1st ed.; Springer:\nNew York, NY, USA, 2000.\n44.\nBektas, T.\
    \ The multiple traveling salesman problem: an overview of formulations and solution\
    \ procedures.\nOmega 2006,\n34, 209–219. [CrossRef]\n45.\nKatoch, S.; Chauhan,\
    \ S.S.; Kumar, V. A review on genetic algorithm: past, present, and future. Multimed.\
    \ Tools Appl. 2021,\n80, 8091–8126. [CrossRef]\n46.\nStorn, R.; Price, K. Differential\
    \ Evolution—A Simple and Efﬁcient Heuristic for global Optimization over Continuous\
    \ Spaces.\nJ. Glob. Optim. 1997, 11, 341–359. [CrossRef]\n47.\nStutzle, T.; Dorigo,\
    \ M. Ant Colony Optimization, 1st ed.; The MIT Press: Cambridge, MA, USA, 2004.\n\
    48.\nKennedy, J.; Eberhart, R. Particle swarm optimization. In Proceedings of\
    \ the International Conference on Neural Networks,\nPerth, Australia, 27 November\
    \ –1 December 1995; pp. 1942–1948.\n49.\nGlover, F. Tabu Search—Part I. ORSA J.\
    \ Comput. 1989, 1, 190–206. [CrossRef]\n50.\nFeo, T.A.; Resende, M.G.C. Greedy\
    \ Randomized Adaptive Search Procedures. J. Glob. Optim. 1995, 1995, 2. [CrossRef]\n\
    51.\nBiacino, L.; Gerla, G. Fuzzy logic, continuity and effectiveness. Arch. Math.\
    \ Log. 2002, 41, 643–667. [CrossRef]\n52.\nCox, E. The Fuzzy Systems Handbook:\
    \ A Practitioner’s Guide to Building, Using, and Maintaining Fuzzy Systems; Academic\
    \ Press\nProfessional, Inc.: Cambridge, MA, USA, 1994.\n53.\nGhahramani, Z. Bayesian\
    \ non-parametrics and the probabilistic approach to modelling. Philos. Trans.\
    \ R. Soc. Math. Phys. Eng. Sci.\n2013, 371, 20110553. [CrossRef] [PubMed]\n54.\n\
    Ghahramani, Z. Probabilistic machine learning and artiﬁcial intelligence. Nature\
    \ 2015, 521, 452–459. [CrossRef]\n55.\nBorgelt, C.; Steinbrecher, M.; Kruse, R.R.\
    \ Graphical Models: Representations for Learning, Reasoning and Data Mining, 2nd\
    \ ed.; Wiley\nPublishing: Hoboken, NJ, USA, 2009.\n56.\nRue, H.; Held, L. Gaussian\
    \ Markov Random Fields: Theory and Applications, 1st ed.; Chapman and Hall/CRC:\
    \ Boca Raton, FL,\nUSA, 2005.\n57.\nAquaculture. 2021. Available online: www.fao.org/documents/card/es/c/cb4850en/\
    \ (accessed on 3 August 2021).\n58.\nKonovalov, D.A.; Saleh, A.; Efremova, D.B.;\
    \ Domingos, J.A.; Jerry, D.R. Automatic Weight Estimation of Harvested Fish\n\
    from Images. In Proceedings of the 2019 Digital Image Computing: Techniques and\
    \ Applications (DICTA), Perth, Australia,\n2–4 December 2019.\n59.\nYang, X.;\
    \ Zhang, S.; Liu, J.; Gao, Q.; Dong, S.; Zhou, C. Deep learning for smart ﬁsh\
    \ farming: Applications, opportunities and\nchallenges. Rev. Aquac. 2021, 13,\
    \ 66–90. [CrossRef]\n60.\nTaskiner, T.; Bilgen, B. Optimization Models for Harvest\
    \ and Production Planning in Agri-Food Supply Chain: A Systematic\nReview. Logistics\
    \ 2021, 5, 52. [CrossRef]\n61.\nSu, Y.; Xu, H.; Yan, L. Support vector machine-based\
    \ open crop model (SBOCM): Case of rice production in China. Saudi J. Biol.\n\
    Sci. 2017, 24, 537–547. [CrossRef]\nSensors 2021, 21, 6910\n30 of 34\n62.\nPantazi,\
    \ X.; Moshou, D.; Alexandridis, T.; Whetton, R.; Mouazen, A. Wheat yield prediction\
    \ using machine learning and advanced\nsensing techniques. Comput. Electron. Agric.\
    \ 2016, 121, 57–65. [CrossRef]\n63.\nSambasivam, G.; Opiyo, G.D. A predictive\
    \ machine learning application in agriculture: Cassava disease detection and classiﬁca-\n\
    tion with imbalanced dataset using convolutional neural networks. Egypt. Inform.\
    \ J. 2021, 22, 27–34. [CrossRef]\n64.\nJan, B.; Anne-Katrin, M.; Till, R.; Christoph,\
    \ R.; Lutz, P. A review of advanced machine learning methods for the detection\
    \ of\nbiotic stress in precision crop protection. Precis. Agric. 2015, 16, 1573–1618.\n\
    65.\nRomero, M.; Luo, Y.; Su, B.; Fuentes, S. Vineyard water status estimation\
    \ using multispectral imagery from an UAV platform and\nmachine learning algorithms\
    \ for irrigation scheduling management. Comput. Electron. Agric. 2018, 147, 109–117.\
    \ [CrossRef]\n66.\nTraore, S.; Luo, Y.; Fipps, G. Deployment of artiﬁcial neural\
    \ network for short-term forecasting of evapotranspiration using public\nweather\
    \ forecast restricted messages. Agric. Water Manag. 2016, 163, 363–379. [CrossRef]\n\
    67.\nSirsat, M.; Cernadas, E.; Fernández-Delgado, M.; Barro, S. Automatic prediction\
    \ of village-wise soil fertility for several nutrients\nin India using a wide\
    \ range of regression methods. Comput. Electron. Agric. 2018, 154, 120–133. [CrossRef]\n\
    68.\nCoopersmith, E.J.; Minsker, B.S.; Wenzel, C.E.; Gilmore, B.J. Machine learning\
    \ assessments of soil drying for agricultural planning.\nComput. Electron. Agric.\
    \ 2014, 104, 93–104. [CrossRef]\n69.\nBarrett, B.; Nitze, I.; Green, S.; Cawkwell,\
    \ F. Assessment of multi-temporal, multi-sensor radar and ancillary spatial data\
    \ for\ngrasslands monitoring in Ireland using machine learning approaches. Remote\
    \ Sens. Environ. 2014, 152, 109–124. [CrossRef]\n70.\nVinicius, P.; Zen, K.L.;\
    \ Rocha, P.C.S.; Rafael, C.; Da Silva, J.C.C.; José, K.H.; Richardson, R.; Luiz,\
    \ B.F.; Simioni, A.T. In vivo pattern\nclassiﬁcation of ingestive behavior in\
    \ ruminants using FBG sensors and machine learning. Sensors 2015, 15, 28456–28471.\n\
    71.\nMatthews, S.G.; Miller, A.L.; PlÖtz, T.; Kyriazakis, I. Automated tracking\
    \ to measure behavioural changes in pigs for health and\nwelfare monitoring. Sci.\
    \ Rep. 2017, 7, 2045–2322. [CrossRef]\n72.\nAlonso, J.; Villa, A.; Bahamonde,\
    \ A. Improved estimation of bovine weight trajectories using Support Vector Machine\
    \ Classiﬁca-\ntion. Comput. Electron. Agric. 2015, 110, 36–41. [CrossRef]\n73.\n\
    Craninx, M.; Fievez, V.; Vlaeminck, B.; De Baets, B. Artiﬁcial neural network\
    \ models of the rumen fermentation pattern in dairy\ncattle. Comput. Electron.\
    \ Agric. 2008, 60, 226–238. [CrossRef]\n74.\nErik, H.; Emanuel, R. Big data analytics\
    \ and demand forecasting in supply chains: A conceptual analysis. Int. J. Logist.\
    \ Manag.\n2018, 29, 2.\n75.\nFeng, Q.; Shanthikumar, J.G. How Research in Production\
    \ and Operations Management May Evolve in the Era of Big Data.\nProd. Oper. Manag.\
    \ 2018, 27, 1670–1684. [CrossRef]\n76.\nPurandare, H.; Ketkar, N.; Pansare, S.;\
    \ Padhye, P.; Ghotkar, A. Analysis of post-harvest losses: An Internet of Things\
    \ and machine\nlearning approach. In Proceedings of the International Conference\
    \ on Automatic Control and Dynamic Optimization Techniques,\nPune, India, 9–10\
    \ September 2016; pp. 222–226.\n77.\nBanga, J.R.; Balsa-Canto, E.; Moles, C.G.;\
    \ Alonso, A.A. Improving food processing using modern optimization methods.\n\
    Trends Food Sci. Technol. 2003, 14, 131–144. [CrossRef]\n78.\nEneko, O.; Yang,\
    \ X.S.; Fernando, D.; Enrique, O.; Masegosa, A.D.; Asier, P. A discrete ﬁreﬂy\
    \ algorithm to solve a rich vehicle\nrouting problem modelling a newspaper distribution\
    \ system with recycling policy. Soft Comput. 2017, 21, 1433–7479.\n79.\nNasr,\
    \ N.; Niaki, S.T.A.; Hussenzadek Kashan, A.; Seifbarghy, M. An efficient solution\
    \ method for an agri-fresh food supply chain:\nhybridization of Lagrangian relaxation\
    \ and genetic algorithm. Environ. Sci. Pollut. Res. 2021, 1–19. [CrossRef]\n80.\n\
    Hui, Y.Y.; Choy, K.; Ho, G.; Leung, K.; Lam, H. A cloud-based location assignment\
    \ system for packaged food allocation in\ne-fulﬁllment warehouse. Int. J. Eng.\
    \ Bus. Manag. 2016, 8, 1847979016684832. [CrossRef]\n81.\nMosallanezhad, B.; Hajiaghaei-Keshteli,\
    \ M.; Triki, C. Shrimp closed-loop supply chain network design. Soft Comput. 2021,\n\
    25, 7399–7422. [CrossRef]\n82.\nLuangkesorn, K.; Klein, G.; Bidanda, B. Analysis\
    \ of production systems with potential for severe disruptions. Int. J. Prod. Econ.\n\
    2016, 171, 478–486. [CrossRef]\n83.\nLestari, F.; Mas’ari, A.; Meilani, S.; Riandika,\
    \ I.N.; Hamid, A.B.A. Risk Mitigation Via Integrating House of Risk and Probability\n\
    Impact Matrix in Halal Food Supply Chain. J. Tek. Ind. 2021, 22, 138–154.\n84.\n\
    Wang, Y.; Zhao, Y.; Addepalli, S. Remaining Useful Life Prediction using Deep\
    \ Learning Approaches: A Review. Procedia Manuf.\n2020, 49, 81–88. [CrossRef]\n\
    85.\nBrooks, C.; Parr, L.; Smith, J.M.; Buchanan, D.; Snioch, D.; Hebishy, E.\
    \ A review of food fraud and food authenticity across the\nfood supply chain,\
    \ with an examination of the impact of the COVID-19 pandemic and Brexit on food\
    \ industry. Food Control 2021,\n130, 108171. [CrossRef]\n86.\nShahbazi, Z.; Byun,\
    \ Y.C. A Procedure for Tracing Supply Chains for Perishable Food Based on Blockchain,\
    \ Machine Learning and\nFuzzy Logic. Electronics 2021, 10, 41. [CrossRef]\n87.\n\
    Feizabadi, J. Machine learning demand forecasting and supply chain performance.\
    \ Int. J. Logist. Res. Appl. 2020, 1–24. [CrossRef]\n88.\nBányai, T. Real-Time\
    \ Decision Making in First Mile and Last Mile Logistics: How Smart Scheduling\
    \ Affects Energy Efﬁciency of\nHyperconnected Supply Chain Solutions. Energies\
    \ 2018, 11, 1833. [CrossRef]\n89.\nVasiloglou, M.F.; Mougiakakou, S.; Aubry, E.;\
    \ Bokelmann, A.; Fricker, R.; Gomes, F.; Guntermann, C.; Meyer, A.; Studerus,\
    \ D.;\nStanga, Z. A Comparative Study on Carbohydrate Estimation: GoCARB vs. Dietitians.\
    \ Nutrients 2018, 10, 741. [CrossRef]\n90.\nEftimov, T.; Korosec, P.; Korousi´c\
    \ Seljak, B. StandFood: Standardization of Foods Using a Semi-Automatic System\
    \ for Classifying\nand Describing Foods According to FoodEx2. Nutrients 2017,\
    \ 10, 542. [CrossRef]\nSensors 2021, 21, 6910\n31 of 34\n91.\nGrainger, M.J.;\
    \ Aramyan, L.; Logatcheva, K.; Piras, S.; Righi, S.; Setti, M.; Vittuari, M.;\
    \ Stewart, G.B. The use of systems models to\nidentify food waste drivers. Glob.\
    \ Food Secur. 2018, 16, 1–8. [CrossRef]\n92.\nBonaccorsi, M.; Betti, S.; Rateni,\
    \ G.; Esposito, D.; Brischetto, A.; Marseglia, M.; Dario, P.; Cavallo, F. ‘HighChest’:\
    \ An Augmented\nFreezer Designed for Smart Food Management and Promotion of Eco-Efﬁcient\
    \ Behaviour. Sensors 2017, 17, 1357. [CrossRef]\n93.\nBorimnejad, V.; Samani,\
    \ R.E. Modeling consumer’s behavior for packed vegetable in “Mayadin management\
    \ organization of\nTehran” using artiﬁcial neural network. Cogent Bus. Manag.\
    \ 2016, 3, 1208898. [CrossRef]\n94.\nCene, E.; Karaman, F. Analysing organic food\
    \ buyers’ perceptions with Bayesian networks: A case study in Turkey. J. Appl.\
    \ Stat.\n2015, 42, 1572–1590. [CrossRef]\n95.\nCEPS. Digitising Agrifood—Pathways\
    \ and Challenges. 2019. Available online: www.ceps.eu/ceps-publications/digitising-\n\
    agrifood. (accessed on 3 October 2021)\n96.\nSipser, M. Introduction to the Theory\
    \ of Computation. Available online: http://fuuu.be/polytech/INFOF408/Introduction-To-\n\
    The-Theory-Of-Computation-Michael-Sipser.pdf(accessed on 3 October 2021)\n97.\n\
    Nesteruk, S.; Shadrin, D.; Pukalchik, M.; Somov, A.; Zeidler, C.; Zabel, P.; Schubert,\
    \ D. Image Compression and Plants\nClassiﬁcation Using Machine Learning in Controlled-Environment\
    \ Agriculture: Antarctic Station Use Case. IEEE Sens. J. 2021,\n21, 17564–17572.\
    \ [CrossRef]\n98.\nIqbal, M.A.; Wang, Z.; Ali, Z.A.; Riaz, S. Automatic Fish Species\
    \ Classiﬁcation Using Deep Convolutional Neural Networks.\nWirel. Pers. Commun.\
    \ 2021, 116, 1043–1053. [CrossRef]\n99.\nPetrellis, N. Measurement of Fish Morphological\
    \ Features through Image Processing and Deep Learning Techniques. Appl. Sci.\n\
    2021, 11, 4416. [CrossRef]\n100. Jung, D.H.; Kim, N.Y.; Moon, S.H.; Jhin, C.;\
    \ Kim, H.J.; Yang, J.S.; Kim, H.S.; Lee, T.S.; Lee, J.Y.; Park, S.H. Deep Learning-Based\n\
    Cattle Vocal Classiﬁcation Model and Real-Time Livestock Monitoring System with\
    \ Noise Filtering. Animals 2021, 11, 357.\n[CrossRef] [PubMed]\n101. Kim, Y.J.;\
    \ Park, D.H.; Park, H.; Kim, S.H. Pig Datasets of Livestock for Deep Learning\
    \ to detect Posture using Surveillance\nCamera. In Proceedings of the International\
    \ Conference on Information and Communication Technology Convergence, Jeju,\n\
    Korea, 21–23 October 2020; pp. 1196–1198.\n102. Qiao, Y.; Su, D.; Kong, H.; Sukkarieh,\
    \ S.; Lomax, S.; Clark, C. Data Augmentation for Deep Learning based Cattle Segmentation\n\
    in Precision Livestock Farming. In Proceedings of the International Conference\
    \ on Automation Science and Engineering, Hong\nKong, China, 20–21 August 2020;\
    \ pp. 979–984.\n103. Qiao, Y.; Truman, M.; Sukkarieh, S. Cattle segmentation and\
    \ contour extraction based on Mask R-CNN for precision livestock\nfarming. Comput.\
    \ Electron. Agric. 2019, 165, 104958. [CrossRef]\n104. Zhao, S.; Zhang, S.; Liu,\
    \ J.; Wang, H.; Zhu, J.; Li, D.; Zhao, R. Application of machine learning in intelligent\
    \ ﬁsh aquaculture: A\nreview. Aquaculture 2021, 540, 724–736. [CrossRef]\n105.\
    \ Gao, G.; Xiao, K.; Chen, M. An intelligent IoT-based control and traceability\
    \ system to forecast and maintain water quality in\nfreshwater ﬁsh farms. Comput.\
    \ Electron. Agric. 2019, 166, 105013. [CrossRef]\n106. Lopes, B.D.M.; Silva, L.C.B.;\
    \ Blanquet, I.M.; Georgieva, P.; Marques, C.A.F. Prediction of ﬁsh mortality based\
    \ on a probabilistic\nanomaly detection approach for recirculating aquaculture\
    \ system facilities. Rev. Sci. Instrum. 2021, 92, 025119. [CrossRef]\n107. Strabel,\
    \ T.; Szyda, J.; Ptak, E.; Jamrozik, J. Comparison of Random Regression Test-Day\
    \ Models for Polish Black and White Cattle.\nJ. Dairy Sci. 2005, 88, 3688–3699.\
    \ [CrossRef]\n108. Bayer, P.E.; Edwards, D. Machine learning in agriculture: from\
    \ silos to marketplaces. Plant Biotechnol. J. 2021, 19, 648–650.\n[CrossRef]\n\
    109. Ozguven, M.M.; Adem, K. Automatic detection and classiﬁcation of leaf spot\
    \ disease in sugar beet using deep learning algorithms.\nPhys. A Stat. Mech. Appl.\
    \ 2019, 535, 122537. [CrossRef]\n110. Bah, M.D.; Dericquebourg, E.; Haﬁane, A.;\
    \ Canals, R. Deep Learning Based Classiﬁcation System for Identifying Weeds Using\n\
    High-Resolution UAV Imagery. In Intelligent Computing; Arai, K., Kapoor, S., Bhatia,\
    \ R., Eds.; Springer: Cham, Switzerland, 2019;\npp. 176–187.\n111. Chlingaryan,\
    \ A.; Sukkarieh, S.; Whelan, B. Machine learning approaches for crop yield prediction\
    \ and nitrogen status estimation\nin precision agriculture: A review. Comput.\
    \ Electron. Agric. 2018, 151, 61–69. [CrossRef]\n112. Wu, L.; Huang, G.; Fan,\
    \ J.; Ma, X.; Zhou, H.; Zeng, W. Hybrid extreme learning machine with meta-heuristic\
    \ algorithms for\nmonthly pan evaporation prediction. Comput. Electron. Agric.\
    \ 2020, 168, 105115. [CrossRef]\n113. Kong, Q.; Kuriyan, K.; Shah, N.; Guo, M.\
    \ Development of a responsive optimisation framework for decision-making in precision\n\
    agriculture. Comput. Chem. Eng. 2019, 131, 106585. [CrossRef]\n114. Valente, J.;\
    \ Del Cerro, J.; Barrientos, A.; Sanz, D. Aerial coverage optimization in precision\
    \ agriculture management: A musical\nharmony inspired approach. Comput. Electron.\
    \ Agric. 2013, 99, 153–159. [CrossRef]\n115. Remya, S.; Sasikala, R. Performance\
    \ evaluation of optimized and adaptive neuro fuzzy inference system for predictive\
    \ modeling\nin agriculture. Comput. Electr. Eng. 2020, 86, 106718. [CrossRef]\n\
    116. Giusti, E.; Marsili-Libelli, S. A Fuzzy Decision Support System for irrigation\
    \ and water conservation in agriculture. Environ.\nModel. Softw. 2015, 63, 73–86.\
    \ [CrossRef]\n117. Papageorgiou, E.; Markinos, A.; Gemtos, T. Fuzzy cognitive\
    \ map based approach for predicting yield in cotton crop production\nas a basis\
    \ for decision support system in precision agriculture application. Appl. Soft\
    \ Comput. 2011, 11, 3643–3657. [CrossRef]\nSensors 2021, 21, 6910\n32 of 34\n\
    118. Dilkhush Mihirsen, D.; Joseph, J.T.; Renisha, B. Time Series Analysis for\
    \ Supply Chain Planning in Restaurants. In Proceedings of\nthe International Conference\
    \ on Computing, Communication and Security, Patna, India, 14–16 October 2020;\
    \ pp. 1–5.\n119. Sadati, N.; Chinnam, R.B.; Nezhad, M.Z. Observational data-driven\
    \ modeling and optimization of manufacturing processes.\nExpert Syst. Appl. 2018,\
    \ 93, 456–464. [CrossRef]\n120. Jonkman, J.; Bloemhof, J.M.; van der Vorst, J.G.;\
    \ van der Padt, A. Selecting food process designs from a supply chain perspective.\n\
    J. Food Eng. 2017, 195, 52–60. [CrossRef]\n121. Ekin, T. Integrated maintenance\
    \ and production planning with endogenous uncertain yield.\nReliab. Eng. Syst.\
    \ Saf. 2018,\n179, 52–61. [CrossRef]\n122. Graves, S.C. Uncertainty and Production\
    \ Planning. In Planning Production and Inventories in the Extended Enterprise:\
    \ A State of the\nArt Handbook, Volume 1; Springer: New York, NY, USA, 2011; pp.\
    \ 83–101.\n123. Zhang, R.Q.; Wang, M.; Pan, X. New model of the storage location\
    \ assignment problem considering demand correlation pattern.\nComput. Ind. Eng.\
    \ 2019, 129, 210–219. [CrossRef]\n124. Baldi, M.M.; Manerba, D.; Perboli, G.;\
    \ Tadei, R. A Generalized Bin Packing Problem for parcel delivery in last-mile\
    \ logistics.\nEur. J. Oper. Res. 2019, 274, 990–999. [CrossRef]\n125. Huang, K.;\
    \ Ardiansyah, M.N. A decision model for last-mile delivery planning with crowdsourcing\
    \ integration. Comput. Ind.\nEng. 2019, 135, 898–912. [CrossRef]\n126. Mummoorthy,\
    \ A.; Mohanasundaram, R.; Saraff, S.; Arun, R. Fleet Management and Vehicle Routing\
    \ in Real Time Using Parallel\nComputing Algorithms. In Soft Computing and Signal\
    \ Processing; Wang, J., Reddy, G.R.M., Prasad, V.K., Reddy, V.S., Eds. Springer:\n\
    Singapore, 2019; pp. 263–270.\n127. Goel, R.; Maini, R. A hybrid of ant colony\
    \ and ﬁreﬂy algorithms (HAFA) for solving vehicle routing problems. J. Comput.\
    \ Sci.\n2018, 25, 28–37. [CrossRef]\n128. Goel, R.; Maini, R. A survey of machine\
    \ learning techniques for food sales prediction. Artif. Intell. Rev. 2018, 52,\
    \ 441–447.\n129. Baryannis, G.; Dani, S.; Antoniou, G. Predicting supply chain\
    \ risks using machine learning: The trade-off between performance\nand interpretability.\
    \ Future Gener. Comput. Syst. 2019, 101, 993–1004. [CrossRef]\n130. Baryannis,\
    \ G.; Dani, S.; Validi, S.; Antoniou, G. Decision Support Systems and Artiﬁcial\
    \ Intelligence in Supply Chain Risk\nManagement. In Revisiting Supply Chain Risk;\
    \ Springer: Cham, Switzerland, 2019; pp. 53–71.\n131. Baryannis, G.; Validi, S.;\
    \ Dani, S.; Antoniou, G. Supply chain risk management and artiﬁcial intelligence:\
    \ state of the art and\nfuture research directions. Int. J. Prod. Res. 2019, 57,\
    \ 2179–2202. [CrossRef]\n132. Morris, S.; Conn Welch, K.; Schroeder, M. Inventory\
    \ Management of the Refrigerator’s Produce Bins Using Classiﬁcation\nAlgorithms\
    \ and Hand Analysis. In Proceedings of the IEEE SoutheastCon 2021, Virtual Conference,\
    \ 10–14 March 2021; pp. 1–8.\n133. Runzel, M.A.S.; Hassler, E.E.; Rogers, R.E.L.;\
    \ Formato, G.; Cazier, J.A. Designing a Smart Honey Supply Chain for Sustainable\n\
    Development. IEEE Consum. Electron. Mag. 2021, 10, 69–78. [CrossRef]\n134. Kudo,\
    \ T. A Proposal for Article Management Method Using Wearable Camera. Procedia\
    \ Comput. Sci. 2020, 176, 1338–1347.\n[CrossRef]\n135. Xu, L.; Kamat, V.R.; Menassa,\
    \ C.C.\nAutomatic extraction of 1D barcodes from video scans for drone-assisted\
    \ inventory\nmanagement in warehousing applications. Int. J. Logist. Res. Appl.\
    \ 2018, 21, 243–258. [CrossRef]\n136. Gunawardena, D.; Sarathchandra, K. BestDish:\
    \ A Digital Menu and Food Item Recommendation System for Restaurants in the\n\
    Hotel Sector. In Proceedings of the International Conference on Image Processing\
    \ and Robotics, Abu Dabi, United Arab Emirates,\n25–28 October 2020; pp. 1–7.\n\
    137. Chiciudean, G.O.; Harun, R.; Ilea, M.; Chiciudean, D.I.; Arion, F.H.; Ilies,\
    \ G.; Muresan, I.C. Organic Food Consumers and\nPurchase Intention: A Case Study\
    \ in Romania. Agronomy 2019, 9, 145. [CrossRef]\n138. Priore, P.; Ponte, B.; Rosillo,\
    \ R.; de la Fuente, D. Applying machine learning to the dynamic selection of replenishment\
    \ policies in\nfast-changing supply chain environments. Int. J. Prod. Res. 2019,\
    \ 57, 3663–3677. [CrossRef]\n139. Tangtisanon, P. Web Service Based Food Additive\
    \ Inventory Management with Forecasting System. In Proceedings of the 2018\n3rd\
    \ International Conference on Computer and Communication Systems (ICCCS), Nagoya,\
    \ Japan, 27–30 April 2018; pp. 448–452.\n140. Maihami, R.; Govindan, K.; Fattahi,\
    \ M. The inventory and pricing decisions in a three-echelon supply chain of deteriorating\n\
    items under probabilistic environment. Transp. Res. Part E Logist. Transp. Rev.\
    \ 2019, 131, 118–138. [CrossRef]\n141. Cevallos-Torres, L.; Botto-Tobar, M. Case\
    \ Study: Probabilistic Estimates in the Application of Inventory Models for Perishable\n\
    Products in SMEs. In Problem-Based Learning: A Didactic Strategy in the Teaching\
    \ of System Simulation; Springer: Cham, Switzerland,\n2019; pp. 123–132.\n142.\
    \ Zhang, Y.; Hua, G.; Wang, S.; Zhang, J.; Fernandez, V. Managing demand uncertainty:\
    \ Probabilistic selling versus inventory\nsubstitution. Int. J. Prod. Econ. 2018,\
    \ 196, 56–67. [CrossRef]\n143. Shen, L.; Li, F.; Li, C.; Wang, Y.; Qian, X.; Feng,\
    \ T.; Wang, C. Inventory Optimization of Fresh Agricultural Products Supply Chain\n\
    Based on Agricultural Superdocking. J. Adv. Transp. 2020, 2020, 1–13. [CrossRef]\n\
    144. Fathi, M.; Nourmohammadi, A.; Ghobakhloo, M.; Youseﬁ, M. Production Sustainability\
    \ via Supermarket Location Optimization\nin Assembly Lines. Sustainability 2020,\
    \ 12, 4728. [CrossRef]\n145. Liu, Y.; Ma, X.; Shu, L.; Hancke, G.P.; Abu-Mahfouz,\
    \ A.M. From Industry 4.0 to Agriculture 4.0: Current Status, Enabling\nTechnologies,\
    \ and Research Challenges. IEEE Trans. Ind. Inform. 2021, 17, 4322–4334. [CrossRef]\n\
    Sensors 2021, 21, 6910\n33 of 34\n146. Araujo, S.O.; Peres, R.S.; Barata, J.;\
    \ Lidon, F.; Ramalho, J.C. Characterising the Agriculture 4.0 Landscape—Emerging\
    \ Trends,\nChallenges and Opportunities. Agronomy 2021, 11, 667. [CrossRef]\n\
    147. Moysiadis, T.; Adamides, G.; Stylianou, A.; Zotos, N.; Giannakopoulou, M.;\
    \ Alexiou, G. Use of IoT technologies for irrigation\nand plant protection: the\
    \ case for Cypriot fruits and vegetables. In Bio-Economy and Agri-Production;\
    \ Bochtis, D., Achillas, C.,\nBanias, G., Lampridi, M., Eds.; Academic Press:\
    \ Cambridge, MA, USA, 2021; pp. 175–194.\n148. Serazetdinova, L.; Garratt, J.;\
    \ Baylis, A.; Stergiadis, S.; Collison, M.; Davis, S. How should we turn data\
    \ into decisions in AgriFood?\nJ. Sci. Food Agric. 2019, 99, 3213–3219. [CrossRef]\n\
    149. Brewster, C.; Roussaki, I.; Kalatzis, N.; Doolin, K.; Ellis, K. IoT in Agriculture:\
    \ Designing a Europe-Wide Large-Scale Pilot.\nIEEE Commun. Mag. 2017, 55, 26–33.\
    \ [CrossRef]\n150. Garcia, S.; Luengo, J.; Herrera, F. Data Preprocessing in Data\
    \ Mining; Springer: Cham, Switzerland, 2015.\n151. Chefrour, A. Incremental supervised\
    \ learning: Algorithms and applications in pattern recognition. Evol. Intell.\
    \ 2019, 12, 97–112.\n[CrossRef]\n152. Wu, Y.; Chen, Y.; Wang, L.; Ye, Y.; Liu,\
    \ Z.; Guo, Y.; Fu, Y. Large Scale Incremental Learning. In Proceedings of the\
    \ IEEE/CVF\nConference on Computer Vision and Pattern Recognition, Long Beach,\
    \ CA, USA, 15–20 June 2019.\n153. Castro, F.M.; Marin-Jimenez, M.J.; Guil, N.;\
    \ Schmid, C.; Alahari, K. End-to-End Incremental Learning. In Proceedings of the\n\
    European Conference on Computer Vision (ECCV), Munich, Germany, 8–14 September\
    \ 2018.\n154. Ditzler, G.; Roveri, M.; Alippi, C.; Polikar, R. Learning in Nonstationary\
    \ Environments: A Survey. IEEE Comput. Intell. Mag. 2015,\n10, 12–25. [CrossRef]\n\
    155. Polikar, R.; Upda, L.; Upda, S.; Honavar, V. Learn++: an incremental learning\
    \ algorithm for supervised neural networks.\nIEEE Trans. Syst. Man Cybern. Part\
    \ C (Appl. Rev.) 2001, 31, 497–508. [CrossRef]\n156. Agarwal, S.; Rattani, A.;\
    \ Chowdary, C.R. AILearn: An Adaptive Incremental Learning Model for Spoof Fingerprint\
    \ Detection.\narXiv 2020, arXiv:2012.14639.\n157. Goodman, B.; Flaxman, S. European\
    \ Union Regulations on Algorithmic Decision-Making and a “Right to Explanation”.\
    \ AI Mag.\n2017, 38, 50–57. [CrossRef]\n158. Castelvecchi, D. Can we open the\
    \ black box of AI? Nature 2016, 538. [CrossRef]\n159. Gunning, D.; Aha, D. DARPA’s\
    \ Explainable Artiﬁcial Intelligence (XAI) Program. AI Mag. 2019, 40, 44–58.\n\
    160. Barredo Arrieta, A.; Díaz-Rodríguez, N.; Del Ser, J.; Bennetot, A.; Tabik,\
    \ S.; Barbado, A.; Garcia, S.; Gil-Lopez, S.; Molina, D.;\nBenjamins, R.; et al.\n\
    Explainable Artiﬁcial Intelligence (XAI): Concepts, taxonomies, opportunities\
    \ and challenges toward\nresponsible AI. Inf. Fusion 2020, 58, 82–115. [CrossRef]\n\
    161. Wolpert, D.H.; Macready, W.G. No free lunch theorems for optimization. IEEE\
    \ Trans. Evol. Comput. 1997, 1, 67–82. [CrossRef]\n162. Osaba, E.; Villar-Rodriguez,\
    \ E.; Del Ser, J.; Nebro, A.J.; Molina, D.; LaTorre, A.; Suganthan, P.N.; Coello\
    \ Coello, C.A.; Herrera, F.\nA Tutorial On the design, experimentation and application\
    \ of metaheuristic algorithms to real-World optimization problems.\nSwarm Evol.\
    \ Comput. 2021, 64, 100888. [CrossRef]\n163. Hutter, F.; Kotthoff, L.; Vanschoren,\
    \ J. (Eds.)\nAutomated Machine Learning:\nMethods, Systems, Challenges; Springer:\n\
    Berlin/Heidelberg, Germany, 2018.\n164. Zimmer, L.; Lindauer, M.; Hutter, F. Auto-PyTorch\
    \ Tabular: Multi-Fidelity MetaLearning for Efﬁcient and Robust AutoDLL.\narXiv\
    \ 2020, arXiv:2006.13799.\n165. Angarita-Zapata, J.S.; Masegosa, A.D.; Triguero,\
    \ I. General-Purpose Automated Machine Learning for Transportation: A Case\nStudy\
    \ of Auto-sklearn for Trafﬁc Forecasting. In Information Processing and Management\
    \ of Uncertainty in Knowledge-Based Systems;\nLesot, M.J., Vieira, S., Reformat,\
    \ M.Z., Carvalho, J.P., Wilbik, A., Bouchon-Meunier, B., Yager, R.R., Eds.; Springer:\
    \ Cham,\nSwitzerland, 2020; pp. 728–744.\n166. Li, Z.; Guo, H.; Wang, W.M.; Guan,\
    \ Y.; Barenji, A.V.; Huang, G.Q.; McFall, K.S.; Chen, X. A Blockchain and AutoML\
    \ Approach for\nOpen and Automated Customer Service. IEEE Trans. Ind. Inform.\
    \ 2019, 15, 3642–3651. [CrossRef]\n167. Zeid, A.; Sundaram, S.; Moghaddam, M.;\
    \ Kamarthi, S.; Marion, T. Interoperability in Smart Manufacturing: Research Challenges.\n\
    Machines 2019, 7, 21. [CrossRef]\n168. Bhatia, M.; Ahanger, T.A. Intelligent decision-making\
    \ in Smart Food Industry: Quality perspective. Pervasive Mob. Comput. 2021,\n\
    72, 101304. [CrossRef]\n169. Burns, T.; Cosgrove, J.; Doyle, F. A Review of Interoperability\
    \ Standards for Industry 4.0. Procedia Manuf. 2019, 38, 646–653.\n[CrossRef]\n\
    170. Nilsson, J.; Sandin, F. Semantic Interoperability in Industry 4.0: Survey\
    \ of Recent Developments and Outlook. In Proceedings of\nthe IEEE International\
    \ Conference on Industrial Informatics (INDIN), Porto, Portugal, 18–20 July 2018;\
    \ pp. 127–132.\n171. Wang, X.V.; Wang, L.; Givehchi, M. ICMS: A Cloud-Based System\
    \ for Production Management. In Advances in Production\nManagement Systems: Innovative\
    \ Production Management Towards Sustainable Growth; Umeda, S., Nakano, M., Mizuyama,\
    \ H.,\nHibino, H., Kiritsis, D., von Cieminski, G., Eds.; Springer: Cham, Switzerland,\
    \ 2015; pp. 444–451.\n172. Lu, Y.; Xu, X.; Xu, J. Development of a Hybrid Manufacturing\
    \ Cloud. J. Manuf. Syst. 2014, 33, 551–566. [CrossRef]\n173. Li, B.; Chai, X.;\
    \ Hou, B.; Zhang, L.; Zhou, J.; Liu, Y. New Generation Artiﬁcial Intelligence-Driven\
    \ Intelligent Manufacturing\n(NGAIIM). In Proceedings of the 2018 IEEE SmartWorld,\
    \ Ubiquitous Intelligence Computing, Advanced Trusted Computing,\nScalable Computing\
    \ Communications, Cloud Big Data Computing, Internet of People and Smart City\
    \ Innovation (Smart-\nWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Guangzhou, China,\
    \ 8–12 October 2018; pp. 1864–1869.\nSensors 2021, 21, 6910\n34 of 34\n174. Perez-Pons,\
    \ M.E.; Plaza-Hernández, M.; Alonso, R.S.; Parra-Domínguez, J.; Prieto, J. Increasing\
    \ Proﬁtability and Monitoring\nEnvironmental Performance: A Case Study in the\
    \ Agri-Food Industry through an Edge-IoT Platform. Sustainability 2021, 13, 283.\n\
    [CrossRef]\n175. Zhang, J.; Qu, X.; Sangaiah, A.K. A Study of Green Development\
    \ Mode and Total Factor Productivity of the Food Industry Based\non the Industrial\
    \ Internet of Things. IEEE Commun. Mag. 2018, 56, 72–78. [CrossRef]\n176. Alonso,\
    \ R.S.; Sittón-Candanedo, I.; García, Ó.; Prieto, J.; Rodríguez-González, S. An\
    \ intelligent Edge-IoT platform for monitoring\nlivestock and crops in a dairy\
    \ farming scenario. Ad Hoc Netw. 2020, 98, 102047. [CrossRef]\n177. Chalapathi,\
    \ G.S.S.; Chamola, V.; Vaish, A.; Buyya, R. Industrial Internet of Things (IIoT)\
    \ Applications of Edge and Fog Computing: A\nReview and Future Directions; Springer:\
    \ Cham, Switzerland, 2021; pp. 293–325.\n178. Kumar, N.; Rodrigues, J.J.P.C.;\
    \ Guizani, M.; Choo, K.K.R.; Lu, R.; Verikoukis, C.; Zhong, Z. Achieving Energy\
    \ Efﬁciency and\nSustainability in Edge/Fog Deployment. IEEE Commun. Mag. 2018,\
    \ 56, 20–21. [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/21/20/6910/pdf?version=1634723940
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Taxonomy of Food Supply Chain Problems from a Computational Intelligence
    Perspective
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/su15097677
  analysis: '>'
  authors:
  - Mercedeh Taheri
  - H. K. Schreiner
  - Abdolmajid Mohammadian
  - Hamidreza Shirkhani
  - Pierre Payeur
  - Hanifeh Imanian
  - Juan Hiedra Cobo
  citation_count: 3
  full_citation: '>'
  full_text: ">\nCitation: Taheri, M.; Schreiner, H.K.;\nMohammadian, A.; Shirkhani,\
    \ H.;\nPayeur, P.; Imanian, H.; Cobo, J.H. A\nReview of Machine Learning\nApproaches\
    \ to Soil Temperature\nEstimation. Sustainability 2023, 15,\n7677. https://doi.org/10.3390/\n\
    su15097677\nAcademic Editor: Gwanggil Jeon\nReceived: 6 March 2023\nRevised: 1\
    \ May 2023\nAccepted: 4 May 2023\nPublished: 7 May 2023\nCopyright:\n© 2023 by\
    \ the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open access\
    \ article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative Commons\n\
    Attribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n4.0/).\n\
    sustainability\nReview\nA Review of Machine Learning Approaches to Soil\nTemperature\
    \ Estimation\nMercedeh Taheri 1,*, Helene Katherine Schreiner 1, Abdolmajid Mohammadian\
    \ 1\n, Hamidreza Shirkhani 2,\nPierre Payeur 3\n, Hanifeh Imanian 1\nand Juan\
    \ Hiedra Cobo 2\n1\nDepartment of Civil Engineering, University of Ottawa, Ottawa,\
    \ ON K1N 6N5, Canada\n2\nNational Research Council Canada, Ottawa, ON K1A 0R6,\
    \ Canada\n3\nSchool of Electrical Engineering and Computer Science, University\
    \ of Ottawa, Ottawa, ON K1N 6N5, Canada\n*\nCorrespondence: mtahe067@uottawa.ca\n\
    Abstract: Soil temperature is an essential factor for agricultural, meteorological,\
    \ and hydrological\napplications. Direct measurement, despite its high accuracy,\
    \ is impractical on a large spatial scale due\nto the expensive and time-consuming\
    \ process. On the other hand, the complex interaction between\nvariables affecting\
    \ soil temperature, such as topography and soil properties, leads to challenging\n\
    estimation processes by empirical methods and physical models. Machine learning\
    \ (ML) approaches\ngained considerable attention due to their ability to address\
    \ the limitations of empirical and physical\nmethods. These approaches are capable\
    \ of estimating the variables of interest using complex nonlinear\nrelationships\
    \ with no assumptions about data distribution. However, their sensitivity to input\
    \ data\nas well as the need for a large amount of training ground truth data limits\
    \ the application of machine\nlearning approaches. The current paper aimed to\
    \ provide a review of ML techniques implemented\nfor soil temperature modeling,\
    \ their challenges, and milestones achieved in this domain.\nKeywords: soil temperature;\
    \ direct measurement; empirical methods; physical models; machine learning\n1.\
    \ Introduction\nSoil temperature is an essential environmental parameter in earth\
    \ sciences, such as me-\nteorology and climate change; soil processes, such as\
    \ evaporation, inﬁltration, and nutrient\ncycling; and agricultural purposes,\
    \ such as precision farming and irrigation scheduling at\nmany developmental stages.\
    \ As an important meteorological parameter, soil temperature\ncontrols the heat\
    \ transfer from the soil to the atmosphere and vice versa. In addition,\nagriculture\
    \ applications including potential evapotranspiration, root development, crop\n\
    growth, and yield of crop are affected by soil temperature variations. Soil temperature\n\
    also plays a remarkable role in determining hydrological parameters, such as evaporation,\n\
    precipitation, and inﬁltration of water through soil.\nAccurate estimation of\
    \ soil temperature is complicated because of the physical, chem-\nical, and biological\
    \ processes governing the soil-plant-atmosphere system [1]. Since soil\ntemperature\
    \ is highly localized and can be difﬁcult to measure directly, indirect methods\
    \ of\nassessing soil temperature using more easily measured variables such as\
    \ air temperature\nand readily available weather data gained much attention.\n\
    Generally, estimation methods for soil temperature are classiﬁed into three groups\n\
    (1) in situ measurements, (2) satellite observations, and (3) model-based estimates.\n\
    The most reliable method is in situ measuring using local instruments such as\
    \ ther-\nmistors, thermocouples, thermocouple wires, and averaging thermocouples,\
    \ which can\nprovide accurate estimates of soil temperature. Although in situ\
    \ measurements, which\nare necessary to validate the two other methods, can provide\
    \ soil temperature with a\nrelatively high degree of accuracy, the low density\
    \ of sensors and ﬁne spatial resolution of\nsampling restrict the use of point\
    \ (or ﬁeld) observations to map the soil temperature over\nSustainability 2023,\
    \ 15, 7677. https://doi.org/10.3390/su15097677\nhttps://www.mdpi.com/journal/sustainability\n\
    Sustainability 2023, 15, 7677\n2 of 26\na wide geographical area because of expensive\
    \ equipment. In other words, continuous\nmonitoring of soil temperature at different\
    \ depths requires a variety of sensors installed at\nshort distances to represent\
    \ the spatial heterogeneity in soil temperature. However, high\ncosts of installation\
    \ and maintenance, equipment requirement, special expertise, and point\nmeasurement\
    \ limit the application of these ﬁeld soil temperature sensors.\nTherefore, satellite\
    \ sensors received signiﬁcant attention over the past few decades. Yet,\nscaling\
    \ issues and measurement depth, despite current advances, are the most considerable\n\
    challenges of remote sensing techniques.\nThe model-based approach, including\
    \ empirical and physical models, can retrieve\nsoil temperature by surface information\
    \ and weather-forcing variables. Empirical models\nuse statistical regression\
    \ techniques and parametric functions to map the soil temperature\nthrough in\
    \ situ measurements. These models are simple to implement without a speciﬁc\n\
    background. Although these models are useful to model soil temperature dynamics\
    \ with\nan acceptable accuracy, the need for suitable reference samples of the\
    \ desired target variable\nfor calibration and validation of results restricts\
    \ the use of the models due to the costly and\ntime-consuming process of in situ\
    \ measurements. Moreover, the estimation accuracy of\nreference samples can be\
    \ affected by errors during the measurement process. The statistical\nregression-based\
    \ relationship between input and output is site dependent; therefore, empir-\n\
    ical relationships, despite their fewer input data requirements, are valid only\
    \ under speciﬁc\noperational conditions in which the samples were collected [2–4].\
    \ Furthermore, varying\nenvironmental conditions in addition to some matters such\
    \ as nonlinearity, outlier data,\nmulticollinearity, and heteroscedasticity can\
    \ decrease the estimation accuracy of statistical\nmodels due to the lack of physical\
    \ structure.\nPhysical models, including agronomical models, hydrological models,\
    \ earth system\nmodels, and land surface models (LSMs), are based on assumptions\
    \ that simplify the\nreal phenomena, which leads to more general use in comparison\
    \ to collections of in situ\nmeasurements. However, these simplifying assumptions\
    \ lead to uncertainty in estimating\nthe soil temperature at the continental or\
    \ global scales. Physical models suffer from high\ncomplexity, intensive input\
    \ data requirement, and high computational cost in estimating\nnear-real-time\
    \ soil temperature, which makes accurate estimation of physical parameters\nchallenging\
    \ [5]. Additionally, errors due to forcing data and parameters potentially lead\
    \ to\nuncertainties in the long-term monitoring of soil temperature. Although\
    \ data assimilation\ntechniques such as the land data assimilation system (LDAS)\
    \ can improve the accuracy of\nestimates, errors due to the physics of these models\
    \ are inevitable [6].\nWith the signiﬁcant progress in computer technology, various\
    \ machine learning (ML)\ntechniques, known as computational artiﬁcial intelligence-based\
    \ (AI) models with a dy-\nnamic input-output mapping approach, were developed\
    \ to address the aforementioned\ndrawbacks. These data-driven models are mathematical\
    \ representations built based on\ntraining data to estimate target variables by\
    \ analyzing data attributes. They are capable\nof approximating complex nonlinear\
    \ relationships, including nonlinear, nonmonotonic,\nand multimodal relationships,\
    \ with limited assumptions about data distribution as well\nas predeﬁned conceptual\
    \ relationships between input and output data because of their\nadvanced learning\
    \ strategies. Due to this property, a wide range of diverse datasets with\nunknown\
    \ probability density functions can be used to estimate variables of interest\
    \ using\nML with better performance than other parametric methods [2] Moreover,\
    \ multi-source\nusage makes ML models suitable for large-scale studies such as\
    \ climate and hydrology\nstudies. Since ML techniques rely on the relationships\
    \ between model inputs and desired\noutputs, they can accurately represent earth\
    \ processes without an explicit structure.\nUnlike empirical models, ML-based\
    \ outputs can be applied as important information\nsources to retrieve soil temperature\
    \ in unsampled areas [7,8]. In addition, these methods\nwith high computational\
    \ speed and high adaptability to different inputs and conﬁgurations\nare superior\
    \ to LSMs and Soil Vegetation Atmosphere Transfer (SVAT) models [9]. However,\n\
    ML methods need a large number of samples with known target labels to capture\
    \ the\nSustainability 2023, 15, 7677\n3 of 26\nvariability of complex systems.\
    \ Other challenges are overﬁtting the models to the training\ndata as well as\
    \ low convergence during the learning process [10].\nIf an ML-based model is sufﬁciently\
    \ trained to represent the physical process, it can\nprovide accurate predictions\
    \ of data not included in the training process, i.e., the general-\nization concept\
    \ [11]. Thus, introducing physical principles and constraints into machine\nlearning\
    \ techniques can improve the estimation accuracy of the model by reducing the\n\
    optimization search space to physically based possibilities [12–14]. Furthermore,\
    \ apply-\ning a penalty to the optimization process because of inconsistent predictions\
    \ can drive\nthe optimization process to reduce error and generate physically\
    \ meaningful results. In\naddition to the training process, ML models are highly\
    \ dependent on input variables that\nare correlated with soil temperature, including\
    \ climatic variables such as air temperature\nand precipitation, soil properties\
    \ such as soil texture and land cover, and vegetation in-\ndices [15,16]. In other\
    \ words, the quality and quantity of training data signiﬁcantly affect\nthe performance\
    \ of ML models. As a result, the ML models are incapable of capturing\nthe relationships\
    \ between data and generalizing appropriate patterns to new datasets for\nsmall\
    \ datasets, resulting in an overﬁtted model. In contrast, noisy data may lead\
    \ to the\nmodel underﬁtting to the training datasets if a relatively simple learning\
    \ structure is used.\nFurthermore, limited datasets representing speciﬁc conditions\
    \ cause the model to fail to\nrecognize true underlying patterns. A data preprocessing\
    \ process, such as bias reduction,\ndata normalization, and data size increment,\
    \ can mitigate these issues, in addition to the\nfeature selection process that\
    \ determines which data are appropriate for input.\nThe advent of ML-based soil\
    \ temperature prediction occurred when [17] used relative\nhumidity, wind speed,\
    \ and air temperature, as inputs in both single-layer and multi-\nlayer neural\
    \ networks to predict soil temperature, thereby providing a foundation for\nmachine\
    \ learning as a method for soil temperature estimation using climate variables.\
    \ Since\nthen, many studies proposed other ML models and input variables for soil\
    \ temperature\nprediction. Given that ML models were successfully used to retrieve\
    \ soil characteristics for\ntwo decades, the current research addresses the application\
    \ of different machine learning\nmethodologies in predicting soil temperature.\
    \ These predictive models along with decision-\nsupport systems can alleviate\
    \ the time and operational costs associated with instrumental\nmeasurements. The\
    \ remainder of this paper is organized as follows. In Section 2, different\nartiﬁcial\
    \ intelligence-based models are classiﬁed into four main categories: (i) artiﬁcial\n\
    neural networks, (ii) deep learning, (iii) kernel models, and (iv) hybrid models,\
    \ in which\nthe studies carried out by these methods are assessed in detail. The\
    \ limitations and future\nperspectives are also discussed in Section 3.\n2. AI-Based\
    \ Models for Soil Temperature Estimation\n2.1. Artiﬁcial Neural Networks\nAn artiﬁcial\
    \ neural network (ANN), which is a universal approximator for nonlinear\nmapping,\
    \ classically comprises three layers including input, hidden, and output layers,\
    \ as\nshown in Figure 1. The model can learn the multivariate non-linear relationships\
    \ between\nthe input and output without physical concepts and generalize them\
    \ to other points [18,19].\nThus, ANNs eliminate the need for an explicit conﬁguration\
    \ of physical relationships by\ndeﬁning the input–output relationship, which prevents\
    \ the models from errors caused by\nincorrect associations. Moreover, these models\
    \ beneﬁt from a relatively low computational\ncost due to the one-time calibration.\n\
    The most widely used variants of ANN include feed-forward neural networks (FFNNs)\n\
    or multilayer perceptrons (MLPs), radial basis neural networks (RBNN), and generalized\n\
    regression neural networks (GRNNs). Despite the different structures of ANN models,\
    \ all\nof them consist of two functional components, i.e., learning and optimization\
    \ processes for\nclassifying inputs to hidden layers and to outputs, respectively.\
    \ The first component, known as\nthe input-hidden component, detects nonlinearity\
    \ in the input data and classifies inputs into\nhidden layers by a learning algorithm\
    \ (supervised or unsupervised). The second functional\ncomponent, known as the\
    \ hidden-output component, includes an optimization process to find\nSustainability\
    \ 2023, 15, 7677\n4 of 26\nthe best match between the classified inputs and targets.\
    \ The classified inputs are mapped to\nthe outputs by linear projection, which\
    \ adjusts the model parameters by a negative gradient\nalgorithm by minimizing\
    \ the mean square error between the ANN output and target data.\nANNs are capable\
    \ of dealing with a large amount of data because of the separate training\nprocess\
    \ of the components. In addition, an adaptive procedure can be used to recursively\n\
    update the parameters when the observational data of interest are sufficient.\n\
    (FFNNs) or multilayer perceptrons (MLPs), radial basis neural networks (RBNN),\
    \ and \ngeneralized regression neural networks (GRNNs). Despite the different\
    \ structures of \nANN models, all of them consist of two functional components,\
    \ i.e., learning and optimi-\nzation processes for classifying inputs to hidden\
    \ layers and to outputs, respectively. The \nfirst component, known as the input-hidden\
    \ component, detects nonlinearity in the input \ndata and classifies inputs into\
    \ hidden layers by a learning algorithm (supervised or unsu-\npervised). The second\
    \ functional component, known as the hidden-output component, \nincludes an optimization\
    \ process to find the best match between the classified inputs and \ntargets.\
    \ The classified inputs are mapped to the outputs by linear projection, which\
    \ adjusts \nthe model parameters by a negative gradient algorithm by minimizing\
    \ the mean square \nerror between the ANN output and target data. ANNs are capable\
    \ of dealing with a large \namount of data because of the separate training process\
    \ of the components. In addition, \nan adaptive procedure can be used to recursively\
    \ update the parameters when the obser-\nvational data of interest are sufficient.\
    \ \n \nFigure 1. Structure of the ANN model. \nANNs are the most popular type\
    \ of AI models for approximating hydrological and \nenvironmental components such\
    \ as soil temperature with a long-term history. For exam-\nple, ref. [20] compared\
    \ the performance of three AI-based models, i.e., MLPs, GRNNs, and \nRBNNs, as\
    \ well as multiple linear regression (MLR) in modeling monthly soil tempera-\n\
    tures at different depths. They assessed the effect of climatic data, including\
    \ relative hu-\nmidity, solar radiation, wind speed, and air temperature, on the\
    \ resulting soil temperature \nby GRNN, among which the air temperature was identified\
    \ as the most effective variable. \nAccording to the results, RBNN performed better\
    \ than MLP and GRNN in estimating soil \ntemperature at depths of 5 and 10 cm,\
    \ while MLR and GRNN models presented the best \naccuracy at 50 and 100 cm, respectively.\
    \ In addition to climatic data, the effect of periodic-\nity on model accuracy\
    \ in the training, validation, and test periods was investigated, lead-\ning to\
    \ a decrease in the root mean square error (RMSE) of GRNN, MLP, RBNN, and MLR\
    \ \nby 19, 15, 19, and 15 %, respectively. \nFigure 1. Structure of the ANN model.\n\
    ANNs are the most popular type of AI models for approximating hydrological and\n\
    environmental components such as soil temperature with a long-term history. For\
    \ example,\nref. [20] compared the performance of three AI-based models, i.e.,\
    \ MLPs, GRNNs, and\nRBNNs, as well as multiple linear regression (MLR) in modeling\
    \ monthly soil temperatures\nat different depths. They assessed the effect of\
    \ climatic data, including relative humidity,\nsolar radiation, wind speed, and\
    \ air temperature, on the resulting soil temperature by\nGRNN, among which the\
    \ air temperature was identiﬁed as the most effective variable.\nAccording to\
    \ the results, RBNN performed better than MLP and GRNN in estimating soil\ntemperature\
    \ at depths of 5 and 10 cm, while MLR and GRNN models presented the best\naccuracy\
    \ at 50 and 100 cm, respectively. In addition to climatic data, the effect of\
    \ periodicity\non model accuracy in the training, validation, and test periods\
    \ was investigated, leading to\na decrease in the root mean square error (RMSE)\
    \ of GRNN, MLP, RBNN, and MLR by 19,\n15, 19, and 15 %, respectively.\nRef. [21]\
    \ used several data-intelligent ML models, i.e., ANN, extreme learning machine\n\
    (ELM), and M5 Model Tree (M5 Tree), to estimate monthly soil temperatures at 5,\
    \ 50, and\n100 cm. The models were trained by meteorological information obtained\
    \ from two stations\nin Turkey, including air temperature, relative humidity,\
    \ wind speed, solar radiation, and\nperiodicity. The ELM model, with the highest\
    \ accuracy and lowest error, was considered\nthe most accurate model at a depth\
    \ of 50 cm.\nEven though climatic data may be unavailable in some regions, most\
    \ studies use\nmeteorological parameters as input data to estimate soil temperature.\
    \ For example, ref. [22]\nemployed geographical information, i.e., latitude, longitude,\
    \ and altitude as well as the cal-\nendar month, to estimate monthly soil temperature\
    \ at depths of 5, 10, 50, and 100 cm using\nSustainability 2023, 15, 7677\n5 of\
    \ 26\nANN, adaptive neuro-fuzzy inference system (ANFIS) and gene expression programming\n\
    (GEP). According to the results, the ANFIS model provided the most accurate estimates,\n\
    followed by the ANN and GEP. Ref. [23] predicted the monthly soil temperature\
    \ at a depth\nof 10 cm by ANN over a large spatial domain with complex terrain\
    \ in southwestern China.\nThe independent variables included geographical information\
    \ obtained from a digital\nelevation model and the Normalized Difference Vegetation\
    \ Index (NDVI) derived from\nsatellite imagery. Compared to multiple linear regressions,\
    \ ANNs improved the RMSE,\nmean absolute error (MAE), and R2 by about 44%, 70%,\
    \ and 18%, respectively.\nUsing Earth observation satellite data, ref. [24] evaluated\
    \ the predictive capability of\nfeed forward back propagation neural network (FFBPNN)\
    \ for land surface temperature by\npast land surface temperature (LST) values\
    \ as well as geographical characteristics. They\nconﬁrmed the ability of ANN to\
    \ learn and predict a non-linear complex dataset.\nThe aforementioned studies\
    \ modeled soil temperature on a monthly time scale while\ndaily or sub-daily resolutions\
    \ are more advantageous for agricultural purposes. Moreover,\nthe applicability\
    \ of these models is limited due to the lack of environmental and atmospheric\n\
    data used for soil temperature estimation. To address these issues, ref. [25]\
    \ employed ANN\nand wavelet neural network (WNN) models to forecast soil temperature\
    \ 1–7 days ahead\nby only surface air temperature data with hourly temporal resolution.\
    \ The results showed\nthat a wavelet transform, which decomposes the inputs into\
    \ low and high-frequency\ncomponents, can improve the prediction accuracy of soil\
    \ temperature.\nThe methods of ELM, GRNN, backpropagation neural networks (BPNN),\
    \ and random\nforests (RF) were exploited to derive half-hourly soil temperatures\
    \ at depths of 2 cm, 5 cm,\n10 cm, and 20 cm from datasets of air temperature,\
    \ relative humidity, solar radiation,\nwind speed, and vapor pressure deﬁcit [26].\
    \ Despite the desirable performance of all the\nmodels, the ELM model with a high\
    \ computational speed showed more accurate results at\ndifferent soil depths.\
    \ Ref. [27] used the MLP model, RF, Gaussian process (GaP), and M5P\nmodels to\
    \ estimate daily soil temperature in arid regions by climate data obtained from\n\
    two stations, which included sunshine, wind speed, relative humidity, and air\
    \ temperature.\nIt was found that the MLP model with RMSE ranging from 3.3 to\
    \ 6.3 ◦C performed\nbetter than the other models in estimating soil temperature\
    \ at a depth of 5 cm. Ref. [28]\nemployed MLP and MLR models to estimate the daily\
    \ soil temperature at 5, 10, 20, 30, 50,\nand 100 cm by daily meteorological data,\
    \ including relative humidity, solar radiation, air\ntemperature, and precipitation.\
    \ The results showed the superiority of MLP to MLR as well\nas the higher effectiveness\
    \ of air temperature and humidity over other variables. Ref. [29]\napplied MLP\
    \ and ANFIS models to estimate the daily soil temperature at two stations\nin\
    \ Illinois, USA. A variety of weather data, including air temperature, relative\
    \ humidity,\ndew point temperature, potential evapotranspiration, wind speed,\
    \ solar radiation, and soil\ntemperature at 10 and 20 cm depths were used to model\
    \ the soil temperature. The input\ndata for air temperature, wind speed, and solar\
    \ radiation were recognized as the best data\ncombination for both models. In\
    \ addition, it was found that the MLP model outperformed\nANFIS for both stations\
    \ at depths of 10 and 20 cm. Ref. [30] exploited ANN, MLR, and\nGEP to estimate\
    \ the multi-depth daily soil temperature at a station with a semiarid climate\n\
    in Iran. To adopt the best input data, they used 12 combinations of meteorological\
    \ data\nincluding relative humidity, wind speed, extraterrestrial radiation, sunshine\
    \ hours, and\nminimum and maximum air temperatures. Although all models were able\
    \ to estimate\nsoil temperature, the ANN model exhibited the best performance.\
    \ Ref. [31] applied ANN,\nWNN, and GEP models to estimate the daily soil temperature\
    \ at different depths in Iran\nbased on single-station measurements. At all depths,\
    \ air temperature, radiation, and\nsunshine hours had the greatest effect on the\
    \ soil temperature prediction. The results\nrevealed that the best performance\
    \ belonged to WNN with the lowest RMSE and highest R;\nhowever, the estimation\
    \ accuracy as well as the effect of climatic factors decreased with\nincreasing\
    \ soil depth.\nSince neural network (NN)-based soil temperature models are location-speciﬁc,\
    \ they\ncannot be extended to other locations because of the unique relationships\
    \ between soil\nSustainability 2023, 15, 7677\n6 of 26\ntemperature and climate\
    \ conditions at the training location. However, it is possible to build\nspatially\
    \ distributed temperature models if sufﬁcient temperature data are initially known.\n\
    In this regard, ref. [32] used an ensemble approach using machine learning techniques\
    \ such\nas ANN, decision tree (DT), and k-nearest neighbors (k-NN) to predict\
    \ spatially distributed\nland surface temperatures from a given dataset of land\
    \ temperature at known locations. The\nstatistical indices showed good performance\
    \ of the proposed model built by DT, variable\nridge regression (VRR), and conditional\
    \ inference tree (CIT).\nSome studies evaluated the efﬁciency of ML models for\
    \ predicting soil temperature\nonly at shallow depths, while the relationship\
    \ between effective parameters and soil\ntemperature changes with the depth of\
    \ the soil temperature sample, leading to a need for\nmulti-depth evaluation.\
    \ In this regard, ref. [33] used an ANN and a co-active neuro-fuzzy\ninference\
    \ system (CANFIS) to predict the soil temperature at two locations in Iran at\
    \ depths\nfrom 5 to 100 cm using only air temperature data. The resulting models\
    \ performed better\nfor shallower sample depths, and stations in dry climates.\
    \ The authors hypothesized that\nmoisture in humid climates may act as a thermal\
    \ insulator, interfering with the relationship\nbetween the air and soil temperatures.\
    \ Ref. [34] modeled soil temperature at depths from\n5 to 100 cm at Mersin station,\
    \ Turkey, by using ELM, ANN, classiﬁcation and regression\ntrees (CRT), and the\
    \ group method of data handling (GMDH). They also investigated\nthe models’ sensitivity\
    \ to the input variables, including air temperature, solar radiation,\nwind speed,\
    \ relative humidity, and soil temperature. According to the results, the ELM\n\
    performed best among all the models. The models for shallow soil temperature performed\n\
    best and were found to rely only on the climate input of air temperature; while\
    \ at deeper\ndepths, more input variables (namely wind speed and solar radiation)\
    \ were required.\nThe aforementioned studies used input data that associate concurrent\
    \ climate pa-\nrameters, and each individual set of measurements stands on its\
    \ own, with no inherent\nconnection in time to other data points. This data structure\
    \ makes it necessary to introduce\nother techniques to account for time-related\
    \ behavior. The simplest technique to account\nfor seasonal cycles in soil temperature\
    \ is to include the month of the year and, optionally,\nthe day as well, as another\
    \ input parameter. With this approach, ref. [35] investigated soil\ntemperatures\
    \ in Adana, Turkey, at ﬁve depths from 5 to 100 cm. The soil temperature was\n\
    modeled using linear regression (LR) and nonlinear regression (NLR) as well as\
    \ a feedfor-\nward neural network using different input sets depending on the\
    \ season: air temperature,\ndepth, and month were used year-round, and in the\
    \ hot season atmospheric pressure,\nand solar radiation inputs were added. The\
    \ results revealed the superior performance\nof FFNN over linear and nonlinear\
    \ models. In addition, the results did not show any\nchange in the model performance\
    \ with sample depth for the neural network. Ref. [36]\nmodeled soil temperature\
    \ data from across Turkey using ANN, ANFIS, and MLR models.\nThe study found that\
    \ monthly soil temperature could be predicted using monthly mini-\nmum and maximum\
    \ air temperatures, soil depth, calendar month number, and monthly\nprecipitation.\
    \ The models were built using all soil temperature data from different soil\n\
    depths and climate regions, which would implicitly have different relationships\
    \ with the\nclimate input variables. The success of the models, especially the\
    \ ANFIS model, indicates\nthat these differences could be accounted for using\
    \ the inputs of climate variables and\nsoil depth, allowing for a model that was\
    \ not intrinsically tied to a single location or soil\ndepth. [37] used ANN models\
    \ to predict soil temperature at locations across Turkey using\nthe input climate\
    \ parameters of solar radiation, sunshine duration, and air temperature;\nlocation\
    \ parameters of altitude, latitude, and longitude; and time parameters of month\n\
    and year. The best performing model was for the 20 cm depth, and the 100 cm depth\n\
    model performed marginally worse. The inclusion of the year in the input is an\
    \ interesting\nchoice: it limits the models’ applicability to make predictions\
    \ for the future, where the\nyear will, by nature, be outside the range used for\
    \ training the model. However, within\nthe range of historical data, using year\
    \ as an input variable allows the model to account\nfor changes in seasonal patterns\
    \ from year to year. Including only the month and day in\nthe input variables\
    \ inherently assumes that the seasonal patterns do not vary from year to\nSustainability\
    \ 2023, 15, 7677\n7 of 26\nyear; however, natural variation in weather patterns\
    \ as well as climate change contradict\nthis assumption.\nAnother way of accounting\
    \ for time without assuming identical yearly patterns is to\nuse a sliding window\
    \ approach. With this method, the soil temperature at a given time\nis modeled\
    \ with an input of climate variables from the same time and from one or more\n\
    previous time steps. Ref. [38] modeled the soil temperature at two study sites\
    \ in Iran\nusing MLPs and support vector machines (SVMs) with and without optimization\
    \ via the\nﬁreﬂy algorithm (FFA). The input climate variables (air temperature,\
    \ wind speed, relative\nhumidity, and sunshine hours) from the current day, the\
    \ previous day, and, in some models,\nthe day prior to that were all used as model\
    \ inputs. The study concluded that using two\ndays of previous data led to the\
    \ best results, and the models that used FFA outperformed\nthe standalone models\
    \ without optimization. Ref. [39] investigated two stations in different\nclimate\
    \ regions of Iran, with sampling depths ranging from 5 to 100 cm. They used seasonal\n\
    autoregressive integrated moving average (SARIMA), a linear stochastic approach,\
    \ with\nseasonal standardization and spectral analysis in preprocessing. This\
    \ model was compared\nto three machine learning models, i.e., ELM, self-adaptive\
    \ evolutionary ELM (SaE-ELM),\nand ANFIS, and was shown to outperform them. The\
    \ SARIMA model showed no loss of\nquality for deeper soil temperatures and performed\
    \ moderately better at deeper depths.\nOne difﬁculty in the sliding window approach\
    \ is that it makes assumptions about the\nlag time between the causal climate\
    \ variable and the effect on soil temperature (namely, lag\ntimes equal to or\
    \ less than the window length). The actual lag times may be long or follow\ncomplex\
    \ patterns. Along with building several machine learning models to predict hourly\n\
    soil temperatures at their sites in Iran, ref. [40] used wavelet decomposition\
    \ to assess the\ncoherence between various climate parameters and soil temperature.\
    \ They observed that\nair temperature and soil temperature were highly coherent\
    \ at a periodicity of 4 to 8 h for\na soil depth of 5 cm, and 8 to 16 h at depths\
    \ of 10 and 30 cm. Relative humidity and soil\ntemperature were coherent at a\
    \ periodicity of 16 to 64 h for 5 cm depth, and 4 to 8 h for\n10 and 30 cm depths.\
    \ While most studies examine soil temperature over larger time scales\n(i.e.,\
    \ daily, not hourly), the different periodicities between different climate variables\
    \ and\nsoil temperatures imply that the best sliding window models of soil temperature\
    \ would\nneed to include data from many different previous time steps. Furthermore,\
    \ the fact that\nthe periodicity of different climate variables changed in opposite\
    \ directions upon changing\nthe soil depth indicates that the sliding window would\
    \ have to be different for models\npredicting temperatures at different depths.\n\
    Compared with other artiﬁcial intelligence models, ANNs can better extract the\
    \ hidden\nfeatures of big data. However, they are usually based on single data\
    \ feature extraction\nwithout accounting for the spatiotemporal patterns of the\
    \ data, which leads to a decrease\nin the prediction accuracy of soil temperature.\
    \ In this regard, increasing the neural network\ndepth can improve the optimization\
    \ rate and model expression such as in deep learning\n(DL) models [41], which\
    \ are discussed in the next section. A list of studies related to soil\ntemperature\
    \ estimation by ANN models is given in Table 1.\nTable 1. A list of studies carried\
    \ out to estimate soil temperature by ANNs.\nResearch\nModels\nOutput\nInput\n\
    Soil Depth\nPerformance\nCriteria\nBest Model(s)\n[20]\nMLP, GRNN,\nRBNN, MLR\n\
    Monthly soil\ntemperature\nRelative humidity, solar\nradiation, wind speed, air\n\
    temperature, soil\ntemperature\n5, 10, 50, 100 cm\nRMSE, MAE, R2\nRBNN at depths\n\
    of 5 and 10 cm,\nMLR at depth of\n50 cm,\nGRNN at depth\nof 100 cm\n[21]\nANN,\
    \ ELM, M5\nTree\nMonthly soil\ntemperature\nAir temperature, relative\nhumidity,\
    \ wind speed,\nsolar radiation,\nperiodicity\n5, 50, 100 cm\nR, RMSE, MAE,\nWI,\
    \ NSE,\nLMI\nELM\nSustainability 2023, 15, 7677\n8 of 26\nTable 1. Cont.\nResearch\n\
    Models\nOutput\nInput\nSoil Depth\nPerformance\nCriteria\nBest Model(s)\n[22]\n\
    ANN, ANFIS,\nGEP\nMonthly soil\ntemperature\nLatitude, longitude,\naltitude, number\
    \ of\nmonths\n5, 10, 50, 100 cm\nR2, RMSE, MAE\nANFIS\n[23]\nANN\nMonthly soil\n\
    temperature\nLatitude, longitude,\nelevation, topographic\nwetness index, NDVI\n\
    10 cm\nRMSE, MAPE, R2\n[24]\nFFBPNN\nLand surface\ntemperature at 14\nyears’ interval\n\
    A sequence of past LST\nvalues, latitude, longitude\n-\nR, MSE\n[25]\nANN, WNN\n\
    Next 1 to 7 day\nsoil temperature\nSurface air temperature\n5, 10, 20, 30 cm\n\
    RMSE\nWNN\n[26]\nELM, GRNN,\nBPNN, RF\nHalf-hourly soil\ntemperature\nAir temperature,\n\
    wind speed, relative\nhumidity, solar radiation,\nand vapor pressure deﬁcit\n\
    2, 5, 10, 20 cm\nRMSE, MAE,\nNSE, R\nELM\n[27]\nMLP, RF, GP, M5P\nDaily soil\n\
    temperature\nSunshine hours, wind\nspeed, relative humidity,\nair temperature\n\
    5 cm\nMAE, RMSE, R\nMLP\n[28]\nMLP, MLR\nDaily soil\ntemperature\nAir temperature,\
    \ solar\nradiation, relative\nhumidity, precipitation\n5, 10, 20, 30, 50,\n100\
    \ cm\nR, RMSE, MAE\nMLP\n[29]\nMLP, ANFIS\nDaily soil\ntemperature\nAir temperature,\
    \ relative\nhumidity, dew point\ntemperature, potential\nevapotranspiration, wind\n\
    speed, solar radiation, soil\ntemperature\n10, 20 cm\nNSE, RMSE,\nMAE, APE\nMLP\n\
    [30]\nGEP, ANN, MLR\nDaily soil\ntemperature\nRelative humidity, wind\nspeed,\
    \ extraterrestrial\nradiation, sunshine hours,\nminimum and maximum\nair temperature\n\
    5, 10, 20, 30, 50,\n100 cm\nR2, RMSE\nANN\n[31]\nANN, WNN,\nGEP\nDaily soil\n\
    temperature\nAir temperature, solar\nradiation, pressure, soil\ndepth, periodicity\n\
    10, 20, 30, 50,\n100 cm\nR, MAE, RMSE,\nAIC, Taylor\ndiagrams\nWNN\n[32]\nAn ensemble\n\
    approach based\non ANN, MARS,\nCIT, DT, ICR,\nk-NN, LAR,\nNNLS, NCPQR,\nPCA, Lasso,\
    \ VRR,\nPPR\nLand Surface\nTemperature\nLatitude, longitude,\ntemperature\nTotal\n\
    computation time,\nRMSE, R2\nModel built by\nDT, VRR, and\nCIT.\n[33]\nANN, CANFIS\n\
    Daily soil\ntemperature\nAir temperature\n5, 10, 20, 30, 50,\n100 cm\nRMSE, R\n\
    ANN\n[34]\nELM, ANN, CRT,\nGMDH\nMonthly soil\ntemperature\nAir temperature, relative\n\
    humidity, solar radiation,\nwind speed\n5, 10, 50, 100 cm\nRMSE, R2\nELM\n[35]\n\
    FFBPNN, LR,\nNLR\nMonthly soil\ntemperature\nAir temperature,\natmospheric pressure,\n\
    solar radiation, depth,\nmonth\n5, 10, 20, 50,\n100 cm\nMAPE, R\nFFBPNN\n[36]\n\
    ANN, ANFIS,\nMLR\nMonthly soil\ntemperature\nMinimum and maximum\nair temperature,\
    \ calendar\nmonth number, depth of\nsoil, precipitation\n5, 10, 20, 50,\n100 cm\n\
    RMSE, MAE, R2\nANFIS\nSustainability 2023, 15, 7677\n9 of 26\nTable 1. Cont.\n\
    Research\nModels\nOutput\nInput\nSoil Depth\nPerformance\nCriteria\nBest Model(s)\n\
    [37]\nFFNN\nMonthly mean\nsoil temperature\nAltitude, latitude,\nlongitude, month,\
    \ year,\nsolar radiation, sunshine\nduration, air temperature\n5, 10, 20, 50,\n\
    100 cm\nRMSE, R\n[38]\nSVM, MLP,\nSVM-FFA,\nMLP-FFA\nSoil temperature\nair temperature,\
    \ relative\nhumidity, sunshine hours,\nwind speed\n5, 10, 20 cm\nRMSE, MAE, R\n\
    MLP-FFA\n[39]\nSARIMA, ELM,\nSaE-ELM, ANFIS\nDaily soil\ntemperature\nSoil temperature\n\
    5, 10, 20, 30, 50,\n100 cm\nRMSE, MAPE, R2\nSARIMA\n[40]\nANFIS, SVM,\nRBNN, MLP\n\
    optimized by the\nFFA, SFO, SSA,\nand PSO\nalgorithms\nHourly soil\ntemperature\n\
    Air temperature, relative\nhumidity, solar radiation,\nwind speed\n5, 10, 30 cm\n\
    NSE, RMSE,\nMAE, R2, PBIAS\nANFIS-SFO\nAbbreviation: Willmott Index of Agreement\
    \ (WI), Legates and McCabe index (LMI), Mean Squared Error (MSE),\nAbsolute Percentage\
    \ Error (APE), Akaike Information Criterion (AIC), Multivariate Adaptive Regression\
    \ Spline\n(MARS), Independent Component Regression (ICR), Least Angle Regression\
    \ (LAR), Non Negative Least Square\n(NNLS), Non Convex Penalized Quantile Regression\
    \ (NCPQR), Principal Component Analysis (PCA), Projection\nPursuit Regression\
    \ (PPR), SunFlower Optimization (SFO), Salp Swarm Algorithm (SSA), Particle Swarm\
    \ Optimization\n(PSO), Nash–Sutcliffe Efficiency (NSE), Percent Bias (PBIAS),\
    \ Mean Absolute Percentage Error (MAPE).\n2.2. Deep Learning\nTraditional neural\
    \ network models are incapable of processing big data and have\nlimited generalization\
    \ ability and scalability. Moreover, their slow training process and\neasy falling\
    \ into local optima are other weaknesses of standard neural networks. There-\n\
    fore, ref. [42] developed deep learning (DL) models to deal with large multi-feature\
    \ data\nthrough a multiple hidden layer structure. Compared to traditional neural\
    \ networks, DL\nmodels, which are known as large-sized neural networks, as shown\
    \ in Figure 2, have\nstrong computing power which can automatically extract high\
    \ level features from low level\ninput data by intermediate layers with learning\
    \ complex nonlinear functions in different\nﬁelds such as search engines and image\
    \ recognition. Since soil has extremely complex and\nnonlinear structural characteristics,\
    \ DL models are more effective in analyzing soil particle\nsize and soil texture\
    \ than traditional models [16,43]. In addition, these methods simulate\nland-atmosphere\
    \ interactions without complex knowledge governing physical models.\nThese models\
    \ can efﬁciently process future data with a high computational speed and\nintegrate\
    \ more data to improve prediction accuracy through additional learning. However,\n\
    an inappropriate sample size of the input data may cause overﬁtting, thereby decreasing\n\
    the prediction accuracy.\nThe most common DL models for environmental prediction\
    \ include spatial models\n(Convolutional Neural Networks, CNNs by [44]), temporal\
    \ models (Long Short-Term\nMemory networks, LSTMs by [45]) and spatial–temporal\
    \ models (Convolutional LSTM,\nConvLSTM by [46]).\nThe CNN, as a classical data-driven\
    \ DL model, provides a powerful feature extraction\ntool to improve the predictive\
    \ process by identifying the spatial features of data in multiple\narrays. However,\
    \ the CNN model, with decreasing number of layers, performs poorly in\nfeature\
    \ extraction. To address this issue, ref. [47] developed the residual network\
    \ (ResNet)\nby introducing the residual block to construct deep neural networks.\n\
    LSTM models, which are a type of recurrent neural networks (RNN), are applied\n\
    to deal with sequential data in order to predict the time series of target variables\
    \ by\nlearning from past observations. Therefore, these models, which are able\
    \ to simulate\nnonlinear dynamic systems with minimal input data, retain the advantageous\
    \ information\nof long-term time series data across multiple time steps. Although\
    \ RNN is well suited for\nsimulating time series data because it preserves the\
    \ information of previous time steps\nSustainability 2023, 15, 7677\n10 of 26\n\
    through internal self-looped cells, the problem of gradient disappearance occurring\
    \ in the\nlong-range memory of the original RNN restricts its applicability in\
    \ predicting targets.\nTo overcome this problem, ref. [45] used a gate mechanism\
    \ to obtain information in an\nRNN-based LSTM network model. However, LSTM neglects\
    \ the learning of backward\nfeatures, which leads to the development of the Bidirectional\
    \ LSTM (BiLSTM) network\nmodel by combining backward and forward LSTMs.\neasy\
    \ falling into local optima are other weaknesses of standard neural networks.\
    \ There-\nfore, ref. [42] developed deep learning (DL) models to deal with large\
    \ multi-feature data \nthrough a multiple hidden layer structure. Compared to\
    \ traditional neural networks, DL \nmodels, which are known as large-sized neural\
    \ networks, as shown in Figure 2, have \nstrong computing power which can automatically\
    \ extract high level features from low \nlevel input data by intermediate layers\
    \ with learning complex nonlinear functions in dif-\nferent fields such as search\
    \ engines and image recognition. Since soil has extremely com-\nplex and nonlinear\
    \ structural characteristics, DL models are more effective in analyzing \nsoil\
    \ particle size and soil texture than traditional models [16,43]. In addition,\
    \ these meth-\nods simulate land-atmosphere interactions without complex knowledge\
    \ governing phys-\nical models. These models can efficiently process future data\
    \ with a high computational \nspeed and integrate more data to improve prediction\
    \ accuracy through additional learn-\ning. However, an inappropriate sample size\
    \ of the input data may cause overfitting, \nthereby decreasing the prediction\
    \ accuracy. \n \nFigure 2. Structure of the DL model. \nThe most common DL models\
    \ for environmental prediction include spatial models \n(Convolutional Neural\
    \ Networks, CNNs by [44]), temporal models (Long Short-Term \nMemory networks,\
    \ LSTMs by [45]) and spatial–temporal models (Convolutional LSTM, \nConvLSTM by\
    \ [46]). \nFigure 2. Structure of the DL model.\nThe CNN and LSTM models only\
    \ capture spatial and temporal variations, while the\ntarget variables have a\
    \ correlation between space and time. This problem was solved via\nthe ConvLSTM\
    \ model, which is a combination of the CNN and LSTM models. Unlike the\nCNN and\
    \ LSTM models, ConvLSTM using the output of the previous layer as the input for\n\
    the next layer is capable of extracting both temporal and spatial features by\
    \ a convolution\nlayer at the same time without decreasing the map size.\nSome\
    \ researchers exploited CNN, LSTM, and ConvLSTM models to estimate and pre-\n\
    dict the soil temperature. For example, ref. [48] modeled soil temperature using\
    \ persistence\nforecast (PF), BPNN, LSTM, and CNN trained with data decomposed\
    \ using ensemble em-\npirical mode decomposition (EEMD). They investigated three\
    \ sites in Switzerland, at depths\nbetween 5 and 30 cm. The EEMD-based models\
    \ provided the best results, and no model\nperformance differences were noted\
    \ between depths. Ref. [49] built on this work, focusing on\nthe proposed EEMD-Conv3d\
    \ model and extending it to predict spatiotemporally distributed\nsoil temperature\
    \ by air temperature data. The model showed the best performance among the\nConv\
    \ (2d and 3d), ConvLSTM, EEMD-Conv2D, and EEMD-ConvLSTM models.\nRef. [50] predicted\
    \ the soil temperature in Ottawa, Canada, at depths between 0 and 7 cm.\nThey\
    \ used a wide variety of models and input variables in order to form a comprehensive\
    \ view\non the best possible models for soil temperature prediction. Their modeling\
    \ methods included\nLRs, k-NNs, DT-based models, SVMs, stacking methods, MLP,\
    \ DL, and ANFIS models. The\ninput variables were the air temperature, precipitation,\
    \ surface pressure, evaporation, wind\nspeed, dew point temperature, solar radiation,\
    \ and thermal radiation. The three best-performing\nmodels were the DL model,\
    \ MLP, and stacking model; the choice of the best model among the\nthree depended\
    \ on the size of the dataset and the computational requirements. These three\n\
    models were used in a sensitivity analysis to determine the most relevant input\
    \ parameters,\nwhich were identified as air temperature and solar radiation.\n\
    Ref. [51] used 30 measurement stations across the US, representing different climates.\n\
    BiLSTM was used to model soil temperatures at these locations, which trains models\
    \ with\ndata points from both previous and future time steps. BiLSTM outperformed\
    \ the other\nSustainability 2023, 15, 7677\n11 of 26\nmodels at all but the shallowest\
    \ depth, demonstrating that using climate variables and time\ndata together eliminate\
    \ the decreased effectiveness of models at deep depths. The study\nalso explicitly\
    \ shows the correlation of different climate variables with soil temperatures\n\
    at different depths, all of which decrease with increasing depth except for month\
    \ and day.\nThis is in keeping with the result from ANNs that using current climate\
    \ variables without\ntime data leads to less accurate models at greater depths.\n\
    Ref. [52] proposed an embedded network prediction model based on the gated recurrent\n\
    unit (GRU), a modified type of LSTM, to learn the features of the historical soil\
    \ temperature\nat local and global scales. By comparing the model with ANN, ELM,\
    \ and LSTM, it was\nconcluded that the proposed model outperformed the other models\
    \ in predicting multi-depth\nsoil temperature at different time points, including\
    \ 6 h, 12 h, and 24 h.\nRef. [53] compared the performance of ML-based models,\
    \ including the DL model\nand RBNN, with conventional approaches for soil temperature\
    \ interpolation in southeast\nCanada. According to the results, the spline deterministic\
    \ spatial interpolation method, even\nwith increasing the spline nonlinearity,\
    \ failed to provide the spatial distribution for the soil\ntemperature and soil\
    \ water content. On the other side, the ML models could capture the\nspatial variability\
    \ of soil temperature even in sharp transition areas. It should be noted that\n\
    deep learning, with a normalized RMSE of 9.0% and R2 of 89.2%, outperformed the\
    \ RBNN. A\nlist of studies related to soil temperature estimation by DL models\
    \ is given in Table 2.\nTable 2. Studies conducted to model soil temperature using\
    \ DL techniques.\nResearch\nModels\nOutput\nInput\nSoil Depth\nPerformance\nCriteria\n\
    Best Model(s)\n[48]\nEEMD-CNN,\nPF, BPNN,\nLSTM,\nEEMD-LSTM\nNext 1, 3, 5\nday’s\
    \ soil\ntemperature\nSoil temperature at\ndifferent depths\nand areas\n5, 10,\
    \ 30 cm\nMSE, RMSE,\nMAE, R2\nEEMD-CNN,\nEEMD-LSTM\n[49]\nEEMD-Conv3d,\nConv2D,\n\
    Conv3D,\nConvLSTM,\nEEMD-\nConv2D,\nEEMD-\nConvLSTM\nNext 1, 3, 5\nday’s soil\n\
    temperature\nSoil temperature\n7 cm\nMSE, RMSE,\nMAE, R2,\nMAPE\nEEMD-Conv3d\n\
    [50]\nLR, ridge\nregression,\nLasso, ENet,\nDT, RF, k-NN,\nXGBoost, SVM,\ngradient\n\
    boosting,\nstacking\nmethods, MLP,\nDL, ANFIS\nHourly soil\ntemperature\nAir temperature,\n\
    precipitation,\nsurface pressure,\nevaporation, wind\nspeed, dew point\ntemperature,\
    \ solar\nradiation, thermal\nradiation\n7 cm\nMAE, MSE,\nRMSE, R2,\nMAPE\nDL,\
    \ MLP,\nstacking model\n[51]\nBiLSTM, LSTM,\nDNN, RF, SVR,\nLR\nHourly soil\n\
    temperature\nMaximum and\nminimum air\ntemperature, wind\nspeed, solar\nradiation,\n\
    maximum and\nminimum relative\nhumidity, vapor\npressure, dew point\ntemperature\n\
    5, 10, 20, 50,\n100 cm\nRMSE, MAE,\nR2\nBiLSTM\nSustainability 2023, 15, 7677\n\
    12 of 26\nTable 2. Cont.\nResearch\nModels\nOutput\nInput\nSoil Depth\nPerformance\n\
    Criteria\nBest Model(s)\n[52]\nGRU-based\nmodel, ANN,\nELM, LSTM\nSoil\ntemperature\
    \ at\ndifferent time\npoints (6 h, 12 h,\n24 h)\nHistorical soil\ntemperature\n\
    5, 10, 15 cm\nRMSE, MAE,\nMSE, R2\nGRU-based\nmodel\n[53]\nRBFN, DL,\nspline\n\
    deterministic\nspatial\ninterpolation\nmethod\nSoil\ntemperature\nSoil temperature,\n\
    soil moisture,\nclimate data\n10 cm\nRMSE, NRMSE,\nSI, MAPE, Bias,\nR2, MAE, NSE,\n\
    VAF, AIC, MSE,\nMaxE\nDL\nAbbreviation: Deep Neural Network (DNN), Support Vector\
    \ Regression (SVR), Normalized RMSE (NRMSE),\nScatter Index (SI), Variance Accounted\
    \ For (VAF), Maximum Residual Error (MaxE).\n2.3. Kernel Models\nKernel functions\
    \ play a signiﬁcant role in machine learning because of their simplicity\nand\
    \ generality. Various kernel function embedded models were developed to capture\n\
    non-linear relationships among which the support vector machine (SVM) is a well-known\n\
    kernel model. This model was originally developed for classiﬁcation purposes in\
    \ which a\nclassiﬁcation hyperplane is obtained by maximizing the margin between\
    \ different classes\nas shown in Equation (1) [54].\nwx + b = 0\n(1)\nwhere w\
    \ is a weighting vector, x is the independent input vector, and b indicates the\
    \ bias.\nTo distinguish negative and positive samples, the hyperplane provides\
    \ two dashed lines\nw·x + b = −1 and w·x + b = 1 with a maximum distance of\n\
    2\n∥w∥. The optimization function\nis also expressed as follows:\n\x1A\nmin 1\n\
    2∥ w ∥2\nyi(wxi + b) ≥ 1, i = 1, 2, . . . l\n(2)\nwhere y is the dependent output\
    \ vector and l is the number of samples.\nSVMs models, which are based on the\
    \ statistical learning theory, can solve inverse\nproblems by past data to obtain\
    \ variables of interest forward in time. To predict the variables\nof interest,\
    \ these models formulate quadratic optimization by structural risk minimization\n\
    (SRM) instead of empirical risk minimization (ERM), which is their outstanding\
    \ charac-\nteristic, to ensure a global optimum [55]. This ML-based approach,\
    \ considered a sparse\nmethod without being affected by dimensionality, utilizes\
    \ the generation error bound and\nintensive loss function, leading to precise\
    \ predictions. Furthermore, SVMs can resist noises\nand generalize concepts under\
    \ limited data conditions [56]. However, kernel function\nselection is a challenging\
    \ stage of their learning process. In addition, the scale and speed of\nthe learning\
    \ process can be other limiting factors of SVM, especially for real-time data.\n\
    SVM models, because of their high processing speed and the need for fewer training\n\
    data besides appropriate performance, recently gained attention for extracting\
    \ geo-/bio-\nphysical parameters. For example, ref. [57] developed an SVM-based\
    \ model comprising an\nannual average soil temperature prediction model and a\
    \ daily soil temperature amplitude\nprediction model to retrieve the daily soil\
    \ temperature. The annual average of humidity,\nwind speed, radiation, soil, and\
    \ air temperature are employed to train the annual average\nsoil temperature prediction\
    \ model and the daily soil temperature amplitude prediction.\nSustainability 2023,\
    \ 15, 7677\n13 of 26\nDespite the signiﬁcant role of soil temperature in meteorological,\
    \ ecological, and hy-\ndrological processes, studies did not address soil temperature\
    \ evaluation with ﬁne temporal\nresolution in data-scarce regions. Furthermore,\
    \ most studies employed air temperature\nas an input training dataset to estimate\
    \ soil temperature while a signiﬁcant correlation\nwas observed between soil temperature\
    \ drop and soil moisture rise. To this end, ref. [58]\nexploited the SVM model\
    \ along with an extreme gradient boosting system (XGBoost),\nRF, and MLP to predict\
    \ the spatiotemporal variability of soil temperature in the Indian\nHimalayan\
    \ Region (IHR) by hourly and half-hourly time series data, including rainfall,\n\
    soil moisture, soil temperature, air temperature, relative humidity, vapor pressure\
    \ deﬁcit,\nand solar radiation. Different input data combinations were utilized\
    \ to estimate the soil\ntemperature: Meteorological parameters, Meteorological\
    \ parameters + rainfall, Meteorolog-\nical parameters + soil moisture, and Meteorological\
    \ parameters + rainfall + soil moisture.\nAmong the models, XGBoost showed the\
    \ best performance, followed by RF, MLP, and SVM.\nMoreover, the addition of soil\
    \ moisture, unlike rainfall, to meteorological data improved\nthe estimation accuracy\
    \ signiﬁcantly.\nIn addition to classiﬁcation, SVM can be used for regression\
    \ purposes, which is\nknown as support vector regression (SVR). The basis of SVR\
    \ is the iterative process of the\nsequential minimal optimization (SMO) algorithm\
    \ [59]. Similar to SVM, SVR, which can\ncapture nonlinear relationships between\
    \ input and output variables, is used to estimate soil\ntemperature due to its\
    \ robustness to noise and generalization ability under conditions with\nlimited\
    \ reference samples [60]. Ref. [61] investigated soil temperature at depths from\
    \ 10 to\n100 cm at ﬁve different locations across Iran, ranging from hyper-arid\
    \ to hyper-humid. SVR\nmodels were built with and without an input corresponding\
    \ to the month of the year, and\nthe models containing the month parameter were\
    \ found to be more accurate, especially in\ndeeper layers. Furthermore, the results\
    \ showed that SVR models were better in deep layers\nthan in shallow ones while\
    \ MLR models could predict daily soil temperature at surface\nlayers with relatively\
    \ good accuracy.\nRef. [62] assessed the accuracy of SVR and Elman neural network\
    \ (ENN) as well as\nSVR and ENN coupled with the ﬁreﬂy algorithm (SVR-FFA and\
    \ ENN-FFA) and the krill\nherd algorithm (SVR-KHA and ENN-KHA) in modeling soil\
    \ temperature at depths of 5, 10,\n20, 30, 50, and 100 cm. Various meteorological\
    \ data combinations were evaluated under ﬁve\nscenarios, which included (air temperature),\
    \ (air temperature, sunshine), (air temperature,\nsunshine, relative humidity),\
    \ (air temperature, sunshine, relative humidity, wind speed),\nand (air temperature,\
    \ sunshine, relative humidity, wind speed, pressure deﬁcit). With the\nbest performance\
    \ at 10 cm soil depth, all models showed a decrease in error from 5 to\n10 cm\
    \ and an increase from 10 to 100 cm. Additionally, optimization algorithms provided\n\
    relatively satisfactory results in modeling soil temperature, especially at lower\
    \ depths.\nRef. [63] estimated the daily soil temperature at depths of 5, 10,\
    \ 20, and 50 cm for\ntwo stations with semiarid and humid climates in Turkey by\
    \ Bayesian Tuned Support\nVector Regression (BT-SVR), Bayesian Tuned Gaussian\
    \ Process Regression (BT-GPR), and\nLSTM models. A variety of daily meteorological\
    \ indicators, including cloudiness, air\ntemperature, relative humidity, precipitation,\
    \ and pressure, were used as input variables,\nand soil temperature at different\
    \ depths was the output variable. To increase the accuracy,\nthe study used a\
    \ novel scheme based on the Bayesian optimization method to optimize the\nparameters\
    \ of kernel functions of the GPR and SVR models. A number of kernel functions\n\
    were used for GPR, such as constant, linear, polynomial, squared exponential,\
    \ rational\nquadratic, power, and Matern-3, as well as linear, polynomial, Gaussian,\
    \ and sigmoid\nfunctions for SVR. Among the models, the BT-GPR model exhibited\
    \ the highest accuracy\nfor both stations at depth of 5 cm. Table 3 presents a\
    \ list of studies carried out to model soil\ntemperature using kernel function\
    \ embedded models.\nSustainability 2023, 15, 7677\n14 of 26\nTable 3. Studies\
    \ conducted to model soil temperature using kernel functions.\nResearch\nModels\n\
    Output\nInput\nSoil Depth\nPerformance\nCriteria\nBest Model(s)\n[57]\nSVM\nDaily\
    \ soil\ntemperature\nHumidity, wind\nspeed, radiation,\nsoil temperature,\nair\
    \ temperature,\ntime of year\n5, 10, 20, 50,\n100 cm\nRMSE, MAE,\nR2\n[58]\nXGBoost,\
    \ SVM,\nRF, MLP\nHourly and\nhalf-hourly soil\ntemperature\nRainfall, soil\nmoisture,\
    \ soil\ntemperature, air\ntemperature,\nrelative humidity,\nvapor pressure\ndeﬁcit,\
    \ solar\nradiation\n15 cm\nR2, MAE\nXGBoost\n[61]\nSVR, MLR\nDaily soil\ntemperature\n\
    Minimum and\nmaximum air\ntemperature, solar\nradiation, relative\nhumidity, dew\n\
    point temperature,\natmospheric\npressure\n10, 30, 100 cm\nNRMSE, MBE,\nNSE, R2,\
    \ WR2\nSVR\n[62]\nSVR, ENN,\nSVR-FFA,\nENN-FFA,\nSVR-KHA,\nENN-KHA\nDaily soil\n\
    temperature\nAir temperature,\nsunshine hours,\nrelative humidity,\nwind speed,\n\
    pressure deﬁcit\n5, 10, 20, 30, 50,\n100 cm\nRMSE, MARE,\nR2\nSVR-KHA\n[63]\n\
    LSTM, BT-SVR,\nBT-GPR\nDaily soil\ntemperature\nCloudiness, air\ntemperature,\n\
    relative humidity,\nprecipitation,\npressure\n5, 10, 20, 50 cm\nR2, RMSE,\nMAE\n\
    BT-GPR\nAbbreviation: Mean Bias Error (MBE), Weighted Coefﬁcient of Determination\
    \ (WR2).\n2.4. Hybrid Models\nDespite considerable progress achieved in dealing\
    \ with dynamic, non-stationary, and\nnon-linear data by AI methods, the single\
    \ models suffer from insufﬁcient accuracy in some\ncases of environmental simulation.\
    \ To overcome the limitations of any single method,\ncoupled prediction models\
    \ were developed to improve the accuracy in both the prediction\nand optimization\
    \ stages by incorporating the superior features of individual models.\nAdaptive\
    \ neuro-fuzzy inference systems (ANFIS), which are a combination of ANN\nand fuzzy\
    \ logic, comprise an important category of hybrid models (Figure 3). These models\n\
    map input variables to output targets through an ensemble of membership functions\
    \ and\nif-then rules. Although ANFIS can predict target variable dynamics with\
    \ limited input\nrequirements and acceptable prediction accuracy, the long-term\
    \ generalization capability\nof NN is restricted by the ad hoc nature of fuzzy\
    \ logic rules. Moreover, additional pre-\nprocessing requires extensive time and\
    \ frequency domain computations. However, ANFIS\nis one of the most popular models\
    \ for simulating and predicting environmental compo-\nnents such as soil temperature.\
    \ Ref. [64] built several ANFIS models for soil temperature\nprediction to explore\
    \ different optimization schemes. Using only air temperature as an\ninput variable,\
    \ the models predicted soil temperature at locations in North Dakota, U.S., at\n\
    10 cm depth. The optimization schemes were the PSO, SSA, grey wolf optimizer (GWO),\n\
    genetic algorithm (GA), dragonﬂy algorithm (DA), grasshopper optimization algorithm\n\
    Sustainability 2023, 15, 7677\n15 of 26\n(GOA), and a proposed hybrid SSA-GOA\
    \ algorithm including a mutation phase (mSG). The\nproposed optimization scheme\
    \ resulted in a model with improved predictive power over\nother ANFIS models,\
    \ though the convergence time was longer than for most optimization\nschemes except\
    \ GOA.\nSustainability 2023, 15, x FOR PEER REVIEW \n17 of 27 \n \n \nFigure 3.\
    \ Structure of the ANFIS model. Input and output layers (pink), Fuzzification\
    \ and defuzzi-\nfication layers (yellow), product and normalization layers (green).\
    \ \nIn addition to ANFIS, researchers developed other hybrid models by combining\
    \ \nANN, SVM, DL, etc. For example, two ML-based models, FFBPNN and GEP, a time-se-\n\
    ries-based model, fractionally autoregressive integrated moving average (FARIMA),\
    \ and \ntwo hybrid models, FFBPNN-FARIMA and GEP-FARIMA, were used to estimate\
    \ the \ndaily soil temperature at depths of 5, 10, 50, and 100 cm [71]. To generalize\
    \ the models to \ndifferent climate classes, the stations were selected in arid,\
    \ semi-arid, and very humid \nclimates. At all depths, the ML-based models outperformed\
    \ the time-series-based model, \nand the hybrid models were superior to classical\
    \ models. \nIn order to overcome the generalization issues of classical standalone\
    \ models, opti-\nmization algorithms, such as GA, GWO, and PSO were integrated\
    \ into the models to de-\nvelop strong knowledge-based predictive systems. In\
    \ this regard, some researchers ad-\ndressed the lack of optimization algorithms\
    \ by developing optimized AI techniques. Ref. \n[72] evaluated the performance\
    \ of three hybrid models including SVM, MLP, and ANFIS \nboosted by the slime\
    \ mold algorithm (SMA), PSO, and spotted-hyena optimizer (SHO) in \nforecasting\
    \ daily soil temperature at 5, 15, and 30 cm in a semi-arid region of Punjab,\
    \ India. \nSince the performance of ML models highly depends on the input variables,\
    \ a gamma test \n(GT) was performed to determine the optimal input dataset for\
    \ ML models, resulting in \nan optimal combination of relative humidity, wind\
    \ speed, solar radiation, and air temper-\nature. Among the models, SVM-SMA provided\
    \ the best accuracy in predicting the soil \ntemperature at depths of 5, 15, and\
    \ 30 cm, respectively. To improve the ELM performance \nin estimating the daily\
    \ soil temperature at depths of 5, 10, 20, 30, 50, and 100 cm, ref. [73] \nused\
    \ the SaE algorithm to optimize the parameters of ELM’s hidden node. The input\
    \ var-\niables included the daily minimum, maximum, and average air temperatures\
    \ because of \ntheir high correlations with soil temperature data at all depths.\
    \ Despite the desirable be-\nhavior of both ELM and SaE-ELM against ANN and genetic\
    \ programming (GP), the hy-\nbrid model showed slightly better performance with\
    \ a lower mean absolute bias error \n(MABE) and a higher correlation coefficient\
    \ (R). Ref. [74] employed a hybrid multi-layer \nperceptron algorithm integrated\
    \ with the firefly optimizer algorithm (MLP-FFA) to pre-\ndict soil temperature\
    \ at multiple depths, including 5, 10, 20, 50, and 100 cm, using soil \ndepth,\
    \ periodicity (or the respective month), atmospheric pressure, air temperature,\
    \ and \nsolar radiation as model predictors. They compared the results with MLP\
    \ model and \nfound MLP-FFA model had better performance than the standalone MLP\
    \ model. Ref. [75] \nemployed ENN, which is a type of dynamic recurrent neural\
    \ network, in combination \nwith the gravitational search algorithm (GSA) and\
    \ ant colony optimization (ACO) to im-\nprove the estimation accuracy of daily\
    \ soil temperature. The hybrid models, i.e., ENN-\nFigure 3. Structure of the\
    \ ANFIS model. Input and output layers (pink), Fuzziﬁcation and defuzziﬁ-\ncation\
    \ layers (yellow), product and normalization layers (green).\nRef. [65] extended\
    \ a historical record of 1827 days of soil temperature data from two\nsites in\
    \ Illinois, US, each with data at 10 and 20 cm depths. The data were extended\
    \ using\nMLP and ANFIS with and without PSO as well as auto-regressive moving\
    \ average (ARMA).\nTo account for seasonal variation, some models were built using\
    \ data preprocessed with\nspectral analysis or wavelet decomposition to remove\
    \ the seasonal periodic component.\nThe ARMA model combined with spectral analysis\
    \ outperformed the AI techniques for\nboth depths.\nRef. [66] applied ANFIS, dynamic\
    \ evolving neurofuzzy inference system (DENFIS),\nWNN, and multivariate adaptive\
    \ regression spline (MARS) to predict land surface temper-\nature using NDVI,\
    \ normalized difference built-up index (NDBI), normalized difference\nbareness\
    \ index (NDBaI), normalized difference water index (NDWI), urban index (UI), and\n\
    elevation. According to the results, ANFIS showed the best performance in training\
    \ and\ntest periods with RMSE of 0.78 ◦C and 0.36 ◦C, respectively.\nIn [67],\
    \ the performance of ANFIS model against a time-series-based model, i.e., bi-\n\
    linear model, was evaluated for daily soil temperature retrieval at different\
    \ soil depths\n(5, 10, 50, and 100 cm) by daily recorded soil temperature. Furthermore,\
    \ two hybrid\nmodels built by combining ANFIS with bi-linear and wavelet analyses\
    \ were developed to\nimprove the retrieval accuracy of soil temperature. Based\
    \ on the soil temperature results,\nthe ANFIS model demonstrated better performance\
    \ than the bi-linear model as well as\nthe hybrid models were superior to classical\
    \ models. In addition to local evaluation, an\nexternal analysis was implemented\
    \ to assess the performance of ANFIS in modeling soil\ntemperature at 5 and 50\
    \ cm depths by soil temperature data at 10 and 100 cm, respectively,\nand vice\
    \ versa, denoting the positive effect of soil temperature data at another depth\
    \ in\nretrieving soil temperature at target depth.\nRef. [68] evaluated the applicability\
    \ of ANN, ANFIS, and GP in simulating monthly\nsoil temperature at different depths\
    \ by using weather data at two stations in Turkey. The\nclimatic data used to\
    \ model soil temperature were air temperature, relative humidity, solar\nradiation,\
    \ wind speed, and soil temperature at different depths (10, 20, and 100 cm). The\n\
    results illustrated the superior performance of GP in comparison with ANN and\
    \ ANFIS\nin estimating the soil temperature at 10, 50, and 100 cm. By including\
    \ periodicity (month\nSustainability 2023, 15, 7677\n16 of 26\nof the year) as\
    \ another input variable, considerable improvement was achieved in the\naccuracy\
    \ of the models.\nRef. [69] used ANN, CANFIS, WNN, and wavelet transformation\
    \ combined with\nCANFIS (WCANFIS) to retrieve soil temperatures at 5, 10, 20,\
    \ 30, and 100 cm by air\ntemperature data. The results indicated the suitable\
    \ performance of WCANFIS followed by\nANN, CANFIS, and WNN. In addition, the minimum\
    \ and maximum errors were obtained\nfor the depth of 20 and 100 cm, respectively.\
    \ Long-term soil temperature data are required\nto model soil temperature, which\
    \ restricts the prediction models in most situations due\nto insufﬁcient stations\
    \ recording soil temperature [35]. To address this gap, ref. [70] used\nshort-time\
    \ soil temperature data recorded by thermal sensors along with air temperature,\n\
    environmental parameters, and soil properties to model soil temperature at 5 and\
    \ 10 cm by\nANN, ANFIS, and MLR. The air temperature was found to be the most\
    \ effective parameter\nin soil temperature modeling. In addition, the best performance\
    \ belonged to ANFIS,\nfollowed by ANN and MLR, respectively.\nIn addition to ANFIS,\
    \ researchers developed other hybrid models by combining ANN,\nSVM, DL, etc. For\
    \ example, two ML-based models, FFBPNN and GEP, a time-series-\nbased model, fractionally\
    \ autoregressive integrated moving average (FARIMA), and two\nhybrid models, FFBPNN-FARIMA\
    \ and GEP-FARIMA, were used to estimate the daily soil\ntemperature at depths\
    \ of 5, 10, 50, and 100 cm [71]. To generalize the models to different\nclimate\
    \ classes, the stations were selected in arid, semi-arid, and very humid climates.\n\
    At all depths, the ML-based models outperformed the time-series-based model, and\
    \ the\nhybrid models were superior to classical models.\nIn order to overcome\
    \ the generalization issues of classical standalone models, op-\ntimization algorithms,\
    \ such as GA, GWO, and PSO were integrated into the models to\ndevelop strong\
    \ knowledge-based predictive systems. In this regard, some researchers\naddressed\
    \ the lack of optimization algorithms by developing optimized AI techniques.\n\
    Ref. [72] evaluated the performance of three hybrid models including SVM, MLP,\
    \ and\nANFIS boosted by the slime mold algorithm (SMA), PSO, and spotted-hyena\
    \ optimizer\n(SHO) in forecasting daily soil temperature at 5, 15, and 30 cm in\
    \ a semi-arid region of\nPunjab, India. Since the performance of ML models highly\
    \ depends on the input variables,\na gamma test (GT) was performed to determine\
    \ the optimal input dataset for ML models,\nresulting in an optimal combination\
    \ of relative humidity, wind speed, solar radiation, and\nair temperature. Among\
    \ the models, SVM-SMA provided the best accuracy in predicting\nthe soil temperature\
    \ at depths of 5, 15, and 30 cm, respectively. To improve the ELM\nperformance\
    \ in estimating the daily soil temperature at depths of 5, 10, 20, 30, 50, and\n\
    100 cm, ref. [73] used the SaE algorithm to optimize the parameters of ELM’s hidden\
    \ node.\nThe input variables included the daily minimum, maximum, and average\
    \ air temperatures\nbecause of their high correlations with soil temperature data\
    \ at all depths. Despite the\ndesirable behavior of both ELM and SaE-ELM against\
    \ ANN and genetic programming\n(GP), the hybrid model showed slightly better performance\
    \ with a lower mean absolute\nbias error (MABE) and a higher correlation coefﬁcient\
    \ (R). Ref. [74] employed a hybrid\nmulti-layer perceptron algorithm integrated\
    \ with the ﬁreﬂy optimizer algorithm (MLP-FFA)\nto predict soil temperature at\
    \ multiple depths, including 5, 10, 20, 50, and 100 cm, using\nsoil depth, periodicity\
    \ (or the respective month), atmospheric pressure, air temperature,\nand solar\
    \ radiation as model predictors. They compared the results with MLP model and\n\
    found MLP-FFA model had better performance than the standalone MLP model. Ref.\
    \ [75]\nemployed ENN, which is a type of dynamic recurrent neural network, in\
    \ combination with\nthe gravitational search algorithm (GSA) and ant colony optimization\
    \ (ACO) to improve\nthe estimation accuracy of daily soil temperature. The hybrid\
    \ models, i.e., ENN-GSA and\nENN-ACO, exploited optimization algorithms to train\
    \ the ENN’s parameters. The training\ndata were mean temperature, maximum temperature,\
    \ minimum temperature, dew point\ntemperature, wind speed, relative humidity,\
    \ precipitation, sunshine, and soil temperature\nat depths of 5, 10, 50, and 100\
    \ cm, which were used under different scenarios, including\ntemperature-based,\
    \ other meteorological parameters-based, and combined-based scenarios.\nSustainability\
    \ 2023, 15, 7677\n17 of 26\nAlthough hybrid models outperformed the classical\
    \ ENN, the ENN-GSA was identiﬁed as\nthe best-performing model at all depths.\
    \ In addition, the highest accuracy was achieved at\nthe full-input pattern for\
    \ both standalone and hybrid models.\nIn spite of the fact that ANNs are suitable\
    \ models for soil temperature prediction,\nthere are a number of problems related\
    \ to their application, including the scaling problem,\nthe intensive computational\
    \ effort, and the local minimum. To address these issues, Gill\nand [76] developed\
    \ an ANN-based model boosted by genetic algorithm to predict daily\nsoil temperature\
    \ at depths of 5, 10, and 30 cm by air temperature and rainfall as well as\npast\
    \ soil temperature data. The results showed that the developed model was successful\n\
    in predicting soil temperature. Table 4 presents a list of studies conducted to\
    \ estimate soil\ntemperature using hybrid models.\nTable 4. Studies conducted\
    \ to estimate soil temperature using hybrid models.\nResearch\nModels\nOutput\n\
    Input\nSoil Depth\nPerformance\nCriteria\nBest Model(s)\n[64]\nANFIS,\nANFIS-SSA,\n\
    ANFIS-GOA,\nANFIS-mSG,\nANFIS-GWO,\nANFIS-PSO,\nANFIS-GA,\nANFIS-DA\nDaily soil\n\
    temperature\nmaximum, average,\nand minimum air\ntemperature\n10 cm\nRMSE, STD,\
    \ MAE,\nRMSRE, AAPRE,\nR2, NSE\nANFIS-mSG\n[65]\nMLP, ANFIS,\nMLP-PSO,\nANFIS-PSO,\n\
    ARMA\nDaily soil\ntemperature\nAverage, minimum,\nmaximum, median,\nstandard deviation,\n\
    coefﬁcient of\nvariation,\nskewness, kurtosis,\nﬁrst quarter, and\nthird quarter\n\
    10, 20 cm\nR2, MAE, RMSE,\nMAPE\nARMA\n[66]\nMARS, WNN,\nANFIS, DENFIS\nLand surface\n\
    temperature\nNDVI, NDBI,\nNDWI, NDBaI, UI,\nelevation\n-\nR2, RMSE, MAE\nANFIS\n\
    [67]\nANFIS,\nbi-linear model,\nhybrid models\nbased on\nANFIS,\nbi-linear, and\n\
    wavelet\nanalysis\nDaily soil\ntemperature\nSoil temperature\n5, 10, 50,\n100\
    \ cm\nRMSE, MAE, KGE\nANFIS model\ncombined with\nbi-linear and\nwavelet\nanalysis\n\
    [68]\nANN, ANFIS,\nGP\nMonthly soil\ntemperature\nAir temperature,\nrelative humidity,\n\
    solar radiation,\nwind speed, month\nof year, soil\ntemperature at\ndifferent\
    \ depths\n10, 20,\n100 cm\nRMSE, MARE, R2,\nNSE\nGP\nSustainability 2023, 15,\
    \ 7677\n18 of 26\nTable 4. Cont.\nResearch\nModels\nOutput\nInput\nSoil Depth\n\
    Performance\nCriteria\nBest Model(s)\n[69]\nANN, CANFIS,\nWNN,\nWCANFIS\nSoil\n\
    temperature\nAir temperature\n5,10,20,30,\n100 cm\nNSE, RMSE, CRM\nWCANFIS\n[70]\n\
    ANN, ANFIS,\nMLR\nAir temperature,\nsoil temperature,\nenvironmental\nparameters,\
    \ soil\nproperties\n5, 10 cm\nR2, MAPE\nANFIS\n[71]\nFARIMA,\nFFBPNN, GEP\nGEP-FARIMA,\n\
    FFBPNN-\nFARIMA\nDaily soil\ntemperature\nHistorical records\nof soil temperature\n\
    data\n5, 10, 50,\n100 cm\nRMSE, MAE,\nRRMSE\nGEP-FARIMA\n[72]\nSVM, MLP, and\n\
    ANFIS\nhybridized\nwith SMA, PSO,\nand SHO\nDaily soil\ntemperature\nRelative\
    \ humidity,\nwind speed, solar\nradiation, air\ntemperature\n5, 15, 30 cm\nMAE,\
    \ RMSE, IS,\nNSE, R, WIA, radar\nchart, scatter plots,\nbox-whisker plot,\nTaylor\
    \ diagram\nSVM-SMA\n[73]\nELM, SaE-ELM,\nANN, GP\nDaily soil\ntemperature\nMinimum,\n\
    maximum, and\naverage air\ntemperature\n5, 10, 20, 30,\n50, 100 cm\nMAPE, RMSE,\
    \ R\nSaE-ELM\n[74]\nMLP, MLP-FFA\nMonthly soil\ntemperature\nSoil depth,\nperiodicity\
    \ (or\nthe respective\nmonth), air\ntemperature,\natmospheric\npressure, solar\n\
    radiation\n5,10,20,50,\n100 cm\nRMSE, MAE,\nMAPE, MBE,\nTaylor diagram\nMLP-FFA\n\
    [75]\nENN-GSA,\nENN-ACO\nDaily soil\ntemperature.\nMean temperature,\nmaximum\n\
    temperature,\nminimum\ntemperature, dew\npoint temperature,\nwind speed,\nrelative\
    \ humidity,\nprecipitation,\nsunshine hours,\nsoil temperature\n5, 10, 50,\n100\
    \ cm\nRMSE, RRMSE, R2,\na-20 index\nENN-GSA\n[76]\nANN- based\nmodel boosted\n\
    by genetic\nalgorithm\nDaily soil\ntemperature\nAir temperature,\nrainfall, past\
    \ soil\ntemperature data\n5, 10, 30 cm\nError value\nAbbreviation: Standard Deviation\
    \ (STD), Root Mean Squared Relative Error (RMSRE), Average Absolute Percent\n\
    Relative Error (AAPRE), Kling-Gupta Efﬁciency (KGE), Coefﬁcient of Residual Mass\
    \ (CRM), Relative RMSE\n(RRMSE), Mean Bias Error (MBE).\nUltimately, Table 5 summarizes\
    \ the weaknesses and strengths of different ML-based\nmodels to make a comparison\
    \ as follows:\nSustainability 2023, 15, 7677\n19 of 26\nTable 5. Strengths and\
    \ weaknesses of different ML-based models [42,77,78].\nModel\nStrength\nWeakness\n\
    ANN\n•\nEasy to implement\n•\nFew parameters\n•\nRelatively low\ncomputational\
    \ cost\n•\nAble to learn the multivariate\nnon-linear relationships\n•\nSensitive\
    \ to dimensionality\nof data\n•\nNeed for preliminary setting of\nneurons and\
    \ functions\n•\neasy falling into local optima\n•\nLack of considering\nspatiotemporal\
    \ patterns of data\n•\nscaling problem\nDL\n•\nHighly effective for\ncomplex applications\n\
    •\nAble to learn complex\nunderlying patterns in data\n•\nFlexible to data variations\
    \ over\ntime and space\n•\nStrong computing power\n•\nHigh computational speed\n\
    •\nDifﬁcult to interpret\n•\nHigh computational cost\n•\nLarge dataset requirement\n\
    Kernel-based\n•\nHighly effective for\ndata classiﬁcation\n•\nHandling non-linear\
    \ relationships\n•\nHandling high dimensional data\n•\nHigh accuracy\n•\nPreventing\
    \ overﬁtting\n•\nSensitive to kernel function\n•\nParameter tuning requirement\n\
    •\nComputationally expensive for\nlarge datasets\n•\nHigh memory usage\nHybrid\n\
    •\nImproving retrieval accuracy\n•\nAble to handle complex systems\nwith large\
    \ dataset requirement\n•\nFlexibility\n•\nRobustness\n•\nHigh computational\n\
    requirements\n•\nIncreased complexity\n•\nSelecting the suitable algorithms\n\
    3. Input Dataset\nThree general categories of input variables are used to train\
    \ ML-based models, includ-\ning climate data, time series of soil temperature,\
    \ and a combination of soil temperature\ntime series and climatic data. Climate\
    \ variables applied to ML models are relative humidity\n(average, maximum, and\
    \ minimum), solar radiation, wind speed, air temperature (average,\nmaximum, and\
    \ minimum), vapor pressure deﬁcit, sunshine hours, precipitation, dew point\n\
    temperature, potential evapotranspiration, evaporation, atmospheric pressure,\
    \ and cloudi-\nness. According to the studies, air temperature was identiﬁed as\
    \ the most effective variable\nin predicting soil temperature [20,28,31,50,70,73].\
    \ The importance of climate variables such\nas solar radiation, relative humidity,\
    \ precipitation, and soil moisture is disputed between\ndifferent studies; this\
    \ may be because the effect of moisture on soil temperature varies with\nthe soil\
    \ depth and the type of climate. However, most studies demonstrated that both\n\
    relative humidity and solar radiation are more effective than other variables\
    \ [28,31,40,50].\nMoreover, [58] showed a signiﬁcant correlation between soil\
    \ temperature and soil moisture\nthan soil temperature and precipitation.\nThe\
    \ models using climate parameters are less effective at greater depths, where\
    \ above-\nground climate has a decreased impact and the effect of previous temperatures\
    \ is corre-\nspondingly increased. It can be due to the relationships between\
    \ climate parameters and\nsoil temperature change with the soil depth. Therefore,\
    \ the inclusion of periodicity (number\nof days, months, and years) as another\
    \ input variable led to a considerable improvement\nin estimation accuracy, especially\
    \ at deeper soil depths [20,61,68]. In addition, combining\ncurrent climate conditions\
    \ with temporal information is recommended for the best results\nfor deep soil\
    \ temperature predictions [24,51].\nSustainability 2023, 15, 7677\n20 of 26\n\
    4. Conclusions and Future Outlook\nSoil temperature is a key factor affecting\
    \ the physical, chemical, and biological prop-\nerties of soil. In addition to\
    \ meteorological variables, soil temperature depends on to-\npographic conditions\
    \ and soil characteristics. The complex interactions between these\nvariables\
    \ make the estimation of soil temperature challenging.\nDirect measurement of\
    \ soil temperature by instruments such as thermistors, thermo-\ncouples, and thermocouple\
    \ wires on a large spatial scale is impractical because it is an\nexpensive and\
    \ time-consuming process. Therefore, soil temperature is mainly estimated\nusing\
    \ physically and statistically based models with a tradeoff between resolution,\
    \ accuracy,\nand computational efﬁciency.\nPhysically based models, despite their\
    \ wide use in soil temperature estimation, are\ncomplex with intense data requirement.\
    \ On the other hand, the empirical approach is\na simple method that requires\
    \ less input data; however, the statistical regression-based\nrelationship between\
    \ input and output is site dependent. The limitations of the above\nmethods led\
    \ to the development of data-driven ML techniques, such as ANN, DL, and\nSVM,\
    \ to estimate the soil temperature at multiple depths.\nANNs, as the most widely\
    \ used data-driven models, are capable of capturing nonlinear\ndata trends but\
    \ these models are used to extract single data features without learning\nspatiotemporal\
    \ patterns. DL techniques can address this issue by increasing the depth\nof neural\
    \ networks. However, the prediction accuracy may decrease as a result of an\n\
    inadequate sample size of the input data. Although the use of kernel function\
    \ embedded\nmodels such as SVMs ensures a global optimum, the selection of kernel\
    \ functions restricts\ntheir application. These traditional ML models have some\
    \ drawbacks, including ANN’s\nlow generalization performance, ANFIS’s need for\
    \ accurate weighting of the membership\nfunction, ELM’s large training datasets\
    \ requirement, and SVM’s high sensitivity to hyper-\nparameter selection, which\
    \ limit their applications.\nThe best ML technique for soil temperature retrieval\
    \ generally depends on training\ndatasets, model structure, and target level of\
    \ accuracy. Based on studies carried out\nto estimate soil temperature, DL models,\
    \ such as BiLSTM and LSTM, showed better\nperformance than other models. After\
    \ that, ANFIS exhibited the best performance followed\nby SVM, WNN, ELN, and ANN.\
    \ On the other hand, most studies found that hybrid\nmodels, which are mostly\
    \ standalone models boosted by optimization algorithms, were\nsuperior to classical\
    \ models. In addition to hybrid models with optimization schemes,\na new generation\
    \ of standalone AI-based models has the potential to offer promising\nalternatives\
    \ to traditional models because of their ﬂexibility.\nIn addition, combining current\
    \ climate conditions with time information is necessary\nfor the best results,\
    \ especially for deep soil temperature predictions. In this regard, im-\nproving\
    \ both machine learning and statistical methods to account for periodicity increases\n\
    the accuracy of the soil temperature prediction. If modeling for deeper soil depths\
    \ can\nbe brought up to the standard currently achieved by models for shallow\
    \ depths, it may\nbe possible to reduce the number of climate variables needed\
    \ as input. This can simplify\nthe process of soil temperature prediction and\
    \ make the models more generalizable to\ndifferent climates. For this purpose,\
    \ there are several approaches. The simplest approach\nis to add the month to\
    \ the set of input climate variables. This method should be easy to\nimplement\
    \ for any model using the current climate conditions for prediction. It relies\n\
    on seasons being relatively consistent in terms of temperature and timing from\
    \ year to\nyear. Another approach is the sliding window approach, which uses climate\
    \ variables\nfrom previous time steps as the additional input variables. The current\
    \ conditions are,\nthus, situated in a broader context in time without any assumptions\
    \ about the season. The\nsliding window approach relies on choosing a window that\
    \ is appropriate for the lag time\nbetween climate conditions and their effect\
    \ on soil temperatures. In complex models, lag\ntimes between climate variables\
    \ and soil temperatures may not be the same, nor may lag\ntimes between a variable\
    \ and soil temperatures at different depths. Future studies should\naddress these\
    \ issues. Moreover, remote sensing observations of soil properties such as\nSustainability\
    \ 2023, 15, 7677\n21 of 26\nmoisture content and vegetation cover can be combined\
    \ with machine learning models\nas a future perspective to achieve more accurate\
    \ soil temperature estimation. In addition,\nthe transferability of models over\
    \ different regions and climates can be more explored to\ndetermine the effective\
    \ factors on the model’s performance in soil temperature retrieval\nacross various\
    \ soil types and climates.\nAuthor Contributions: Conceptualization, A.M., H.S.,\
    \ P.P., H.I. and J.H.C.; data curation, M.T. and\nH.K.S.; formal analysis, A.M.,\
    \ M.T., H.K.S. and H.I.; funding acquisition, H.S. and J.H.C.; investigation,\n\
    A.M., H.S., P.P., H.I. and J.H.C.; methodology, A.M., M.T. and H.K.S.; project\
    \ administration, A.M.,\nH.S., P.P., H.I. and J.H.C.; resources, M.T. and H.K.S.;\
    \ supervision, A.M., H.S., P.P., H.I. and J.H.C.;\nvisualization, M.T.; writing—original\
    \ draft, M.T. and H.K.S.; writing—review and editing, A.M., P.P.\nand H.I. All\
    \ authors have read and agreed to the published version of the manuscript.\nFunding:\
    \ This research was funded by the National Research Council Canada through the\
    \ Artiﬁcial\nIntelligence for Logistics Supercluster Support Program, grant number\
    \ AI4L-120.\nInstitutional Review Board Statement: Not applicable.\nInformed Consent\
    \ Statement: Not applicable.\nData Availability Statement: Not applicable.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nAbbreviations\nAAPRE\n\
    Average Absolute Percent Relative Error\nACO\nAnt Colony Optimization\nAI\nArtiﬁcial\
    \ Intelligence\nAIC\nAkaike Information Criterion\nANFIS\nAdaptive Neuro-Fuzzy\
    \ Inference System\nANN\nArtiﬁcial Neural Network\nAPE\nAbsolute Percentage Error\n\
    ARMA\nAuto-Regressive Moving Average\nBiLSTM\nBi-directional LSTM\nBPNN\nBackpropagation\
    \ neural network\nBT-GPR\nBayesian Tuned Gaussian Process Regression\nBT-SVR\n\
    Bayesian Tuned Support Vector Regression\nCANFIS\nCo-Active Neuro-Fuzzy Inference\
    \ System\nCIT\nConditional Inference Tree\nCNN\nConvolutional Neural Network\n\
    ConvLSTM\nConvolutional LSTM\nCRM\nCoefﬁcient of Residual Mass\nCRT\nClassiﬁcation\
    \ and Regression Tree\nDA\nDragonﬂy Algorithm\nDL\nDeep Learning\nDNN\nDeep Neural\
    \ Network\nDT\nDecision Tree\nEEMD\nEnsemble Empirical Mode Decomposition\nEEMD-Conv2d\n\
    Ensemble Empirical Mode Decomposition- Convolutional 2 dimension\nEEMD-Conv3d\n\
    Ensemble Empirical Mode Decomposition- Convolutional 3 dimension\nELM\nExtreme\
    \ Learning Machine\nENN\nElman Neural Network\nERM\nEmpirical Risk Minimization\n\
    FARIMA\nFractionally Autoregressive Integrated Moving Average\nSustainability\
    \ 2023, 15, 7677\n22 of 26\nFFA\nFireFly Algorithm\nFFBPNN\nFeed Forward Back\
    \ Propagation Neural Network\nFFNN\nFeed-Forward Neural Network\nGA\nGenetic Algorithm\n\
    GaP\nGaussian Process\nGEP\nGene Expression Programming\nGMDH\nGroup Method of\
    \ Data Handling\nGOA\nGrasshopper Optimization Algorithm\nGP\nGenetic Programming\n\
    GRNN\nGeneralized Regression Neural Network\nGRU\nGated Recurrent Unit\nGSA\n\
    Gravitational Search Algorithm\nGT\nGamma Test\nGWO\nGrey Wolf Optimizer\nICR\n\
    Independent Component Regression\nIHR\nHimalayan Region\nKGE\nKling-Gupta Efﬁciency\n\
    KHA\nKrill Herd Algorithm\nk-NN\nk-Nearest Neighbors\nLAR\nLeast Angle Regression\n\
    LDAS\nLand Data Assimilation System\nLMI\nLegates and McCabe Index\nLR\nLinear\
    \ Regression\nLSM\nLand Surface Model\nLST\nLand Surface Temperature\nLSTM\nLong\
    \ Short-Term Memory network\nMABE\nMean Absolute Bias Error\nMAPE\nMean Absolute\
    \ Percentage Error\nMARS\nMultivariate Adaptive Regression Spline\nMaxE\nMaximum\
    \ residual Error\nMBE\nMean Bias Error\nMLP\nMultilayer Perceptron\nMLR\nMultiple\
    \ Linear Regression\nMSE\nMean Squared Error\nmSG\nA hybrid SSA-GOA algorithm\
    \ including a mutation phase\nM5 Tree\nM5 Model Tree\nNCPQR\nNon Convex Penalized\
    \ Quantile Regression\nNDBaI\nNormalized Difference Bareness Index\nNDBI\nNormalized\
    \ Difference Built-up Index\nNDVI\nNormalized Difference Vegetation Index\nNDWI\n\
    Normalized Difference Water Index\nNLR\nNon-Linear Regression\nNN\nNeural Network\n\
    NNLS\nNon Negative Least Square\nNRMSE\nNormalized RMSE\nNSE\nNash–Sutcliffe Efﬁciency\n\
    PBIAS\nPercent Bias\nPCA\nPrincipal Component Analysis\nPF\nPersistence Forecast\n\
    PPR\nProjection Pursuit Regression\nPSO\nParticle Swarm Optimization\nRBNN\nRadial\
    \ Basis Neural Network\nResNet\nResidual Network\nRF\nRandom Forest\nSustainability\
    \ 2023, 15, 7677\n23 of 26\nRMSE\nRoot Mean Square Error\nRMSRE\nRoot Mean Squared\
    \ Relative Error\nRNN\nRecurrent Neural Networks\nRRMSE\nRelative RMSE\nSaE-ELM\n\
    Self-Adaptive Evolutionary ELM\nSARIMA\nSeasonal Auto-Regressive Integrated Moving\
    \ Average\nSFO\nSunﬂower Optimization\nSHO\nSpotted Hyena Optimizer\nSI\nScatter\
    \ Index\nSMA\nSlime Mold Algorithm\nSMO\nSequential Minimal Optimization\nSRM\n\
    Structural Risk Minimization\nSSA\nSalp Swarm Algorithm\nSTD\nStandard Deviation\n\
    SVAT\nSoil Vegetation Atmosphere Transfer\nSVM\nSupport Vector Machine\nSVR\n\
    Support Vector Regression\nUI\nUrban Index\nVAF\nVariance Accounted For\nVRR\n\
    Variable Ridge Regression\nWCANFIS\nWavelet transformation combined with CANFIS\n\
    WI\nWillmott Index of Agreement\nWNN\nWavelet Neural Network\nWR2\nWeighted Coefﬁcient\
    \ of Determination\nXGBoost\nExtreme Gradient Boosting System\nReferences\n1.\n\
    Verma, P.; Yeates, J.; Daly, E. A stochastic model describing the impact of daily\
    \ rainfall depth distribution on the soil water balance.\nAdv. Water Resour. 2011,\
    \ 34, 1039–1048. [CrossRef]\n2.\nAli, I.; Greifeneder, F.; Stamenkovic, J.; Neumann,\
    \ M.; Notarnicola, C. Review of machine learning approaches for biomass and\n\
    soil moisture retrievals from remote sensing data. Remote Sens. 2015, 7, 16398–16421.\
    \ [CrossRef]\n3.\nColombo, R.; Bellingeri, D.; Fasolini, D.; Marino, C.M. Retrieval\
    \ of leaf area index in different vegetation types using high\nresolution satellite\
    \ data. Remote Sens. Environ. 2003, 86, 120–131. [CrossRef]\n4.\nMeroni, M.; Colombo,\
    \ R.; Panigada, C. Inversion of a radiative transfer model with hyperspectral\
    \ observations for LAI mapping\nin poplar plantations. Remote Sens. Environ. 2004,\
    \ 92, 195–206. [CrossRef]\n5.\nZhang, D.; Zhou, G. Estimation of soil moisture\
    \ from optical and thermal remote sensing: A review. Sensors 2016, 16, 1308.\n\
    [CrossRef] [PubMed]\n6.\nMonsivais-Huertero, A.; Graham, W.D.; Judge, J.; Agrawal,\
    \ D. Effect of simultaneous state–parameter estimation and forcing\nuncertainties\
    \ on root-zone soil moisture for dynamic vegetation using EnKF. Adv. Water Resour.\
    \ 2010, 33, 468–484. [CrossRef]\n7.\nKhanal, S.; Fulton, J.; Shearer, S. An overview\
    \ of current and potential applications of thermal remote sensing in precision\n\
    agriculture. Comput. Electron. Agric. 2017, 139, 22–32. [CrossRef]\n8.\nLakhankar,\
    \ T.; Jones, A.S.; Combs, C.L.; Sengupta, M.; Vonder Haar, T.H.; Khanbilvardi,\
    \ R. Analysis of large scale spatial\nvariability of soil moisture using a geostatistical\
    \ method. Sensors 2010, 10, 913–932. [CrossRef]\n9.\nGhedira, H.; Lakhankar, T.;\
    \ Jahan, N.; Khanbilvardi, R. Combination of passive and active microwave data\
    \ for soil moisture\nestimates. In Proceedings of the IGARSS 2004. 2004 IEEE International\
    \ Geoscience and Remote Sensing Symposium, Anchorage,\nAK, USA, 20–24 September\
    \ 2004; IEEE: Piscataway, NJ, USA, 2004.\n10.\nLi, P.; Zha, Y.; Shi, L.; Tso,\
    \ C.-H.M.; Zhang, Y.; Zeng, W. Comparison of the use of a physical-based model\
    \ with data assimilation\nand machine learning methods for simulating soil water\
    \ dynamics. J. Hydrol. 2020, 584, 124692. [CrossRef]\n11.\nBreen, K.H.; James,\
    \ S.C.; White, J.D.; Allen, P.M.; Arnold, J.G. A hybrid artiﬁcial neural network\
    \ to estimate soil moisture using\nswat+ and SMAP data. Mach. Learn. Knowl. Extr.\
    \ 2020, 2, 16. [CrossRef]\n12.\nKarpatne, A.; Watkins, W.; Read, J.; Kumar, V.\
    \ Physics-guided neural networks (pgnn): An application in lake temperature\n\
    modeling. arXiv 2017, arXiv:1710.11431.\n13.\nBergen, K.J.; Johnson, P.A.; de\
    \ Hoop, M.V.; Beroza, G.C. Machine learning for data-driven discovery in solid\
    \ Earth geoscience.\nScience 2019, 363, eaau0323. [CrossRef]\n14.\nNoé, F.; Olsson,\
    \ S.; Köhler, J.; Wu, H. Boltzmann generators: Sampling equilibrium states of\
    \ many-body systems with deep\nlearning. Science 2019, 365, eaaw1147. [CrossRef]\
    \ [PubMed]\n15.\nHassan-Esfahani, L.; Torres-Rua, A.; Jensen, A.; McKee, M. Assessment\
    \ of surface soil moisture using high-resolution multi-\nspectral imagery and\
    \ artiﬁcial neural networks. Remote Sens. 2015, 7, 2627–2646. [CrossRef]\nSustainability\
    \ 2023, 15, 7677\n24 of 26\n16.\nJiang, H.; Cotton, W.R. Soil moisture estimation\
    \ using an artiﬁcial neural network: A feasibility study. Can. J. Remote Sens.\
    \ 2004,\n30, 827–839. [CrossRef]\n17.\nGeorge, R.K. Prediction of soil temperature\
    \ by using artiﬁcial neural networks algorithms. Nonlinear Anal. Theory Methods\
    \ Appl.\n2001, 47, 1737–1748. [CrossRef]\n18.\nBasheer, I.A.; Hajmeer, M. Artiﬁcial\
    \ neural networks: Fundamentals, computing, design, and application. J. Microbiol.\
    \ Methods\n2000, 43, 3–31. [CrossRef]\n19.\nNugroho, A.S. Information Analysis\
    \ Using Softcomputing: The Applications to Character Recognition, Meteorological\
    \ Prediction,\nand Bioinformatics Problems. Ph.D. Thesis, Nagoya Institute of\
    \ Technology, Nagoya, Japan, 2003.\n20.\nKisi, O.; Tombul, M.; Kermani, M.Z. Modeling\
    \ soil temperatures at different depths by using three different neural computing\n\
    techniques. Theor. Appl. Climatol. 2015, 121, 377–387. [CrossRef]\n21.\nSanikhani,\
    \ H.; Deo, R.C.; Yaseen, Z.M.; Eray, O.; Kisi, O. Non-tuned data intelligent model\
    \ for soil temperature estimation: A new\napproach. Geoderma 2018, 330, 52–64.\
    \ [CrossRef]\n22.\nMehdizadeh, S.; Behmanesh, J.; Khalili, K. Evaluating the performance\
    \ of artiﬁcial intelligence methods for estimation of monthly\nmean soil temperature\
    \ without using meteorological data. Environ. Earth Sci. 2017, 76, 325. [CrossRef]\n\
    23.\nWu, W.; Tang, X.-P.; Guo, N.-J.; Yang, C.; Liu, H.-B.; Shang, Y.-F. Spatiotemporal\
    \ modeling of monthly soil temperature using\nartiﬁcial neural networks. Theor.\
    \ Appl. Climatol. 2013, 113, 481–494. [CrossRef]\n24.\nIkechukwu, M.; Ebinne,\
    \ E.; Yun, Z.; Patrick, B. Prediction of Land Surface Temperature (LST) Changes\
    \ within Ikon City in Nigeria\nUsing Artiﬁcial Neural Network (ANN). Int. J. Remote\
    \ Sens. Appl. 2016, 6, 96–107.\n25.\nAraghi, A.; Mousavi-Baygi, M.; Adamowski,\
    \ J.; Martinez, C.; van der Ploeg, M. Forecasting soil temperature based on surface\
    \ air\ntemperature using a wavelet artiﬁcial neural network. Meteorol. Appl. 2017,\
    \ 24, 603–611. [CrossRef]\n26.\nFeng, Y.; Cui, N.; Hao, W.; Gao, L.; Gong, D.\
    \ Estimation of soil temperature from meteorological data using different machine\n\
    learning models. Geoderma 2019, 338, 67–77. [CrossRef]\n27.\nSihag, P.; Esmaeilbeiki,\
    \ F.; Singh, B.; Pandhiani, S.M. Model-based soil temperature estimation using\
    \ climatic parameters: The\ncase of Azerbaijan Province, Iran. Geol. Ecol. Landsc.\
    \ 2020, 4, 203–215. [CrossRef]\n28.\nTabari, H.; Sabziparvar, A.-A.; Ahmadi, M.\
    \ Comparison of artiﬁcial neural network and multivariate linear regression methods\n\
    for estimation of daily soil temperature in an arid region. Meteorol. Atmos. Phys.\
    \ 2011, 110, 135–142. [CrossRef]\n29.\nKim, S.; Singh, V.P. Modeling daily soil\
    \ temperature using data-driven models and spatial distribution. Theor. Appl.\
    \ Climatol.\n2014, 118, 465–479. [CrossRef]\n30.\nBehmanesh, J.; Mehdizadeh, S.\
    \ Estimation of soil temperature using gene expression programming and artiﬁcial\
    \ neural networks\nin a semiarid region. Environ. Earth Sci. 2017, 76, 76. [CrossRef]\n\
    31.\nSamadianfard, S.; Asadi, E.; Jarhan, S.; Kazemi, H.; Kheshtgar, S.; Kisi,\
    \ O.; Sajjadi, S.; Manaf, A.A. Wavelet neural networks and\ngene expression programming\
    \ models to predict short-term soil temperature at different depths. Soil Tillage\
    \ Res. 2018, 175, 37–50.\n[CrossRef]\n32.\nKaur, S.; Randhawa, S. Global land\
    \ temperature prediction by machine learning combo approach. In Proceedings of\
    \ the 2018 9th\nInternational Conference on Computing, Communication and Networking\
    \ Technologies (ICCCNT), Bengaluru, India, 10–12 July\n2018; IEEE: Piscataway,\
    \ NJ, USA, 2018.\n33.\nZare Abyaneh, H.; Bayat Varkeshi, M.; Golmohammadi, G.;\
    \ Mohammadi, K. Soil temperature estimation using an artiﬁcial neural\nnetwork\
    \ and co-active neuro-fuzzy inference system in two different climates. Arab.\
    \ J. Geosci. 2016, 9, 377. [CrossRef]\n34.\nAlizamir, M.; Kisi, O.; Ahmed, A.N.;\
    \ Mert, C.; Fai, C.M.; Kim, S.; Kim, N.W.; El-Shaﬁe, A. Advanced machine learning\
    \ model for\nbetter prediction accuracy of soil temperature at different depths.\
    \ PLoS ONE 2020, 15, e0231055. [CrossRef]\n35.\nBilgili, M. Prediction of soil\
    \ temperature using regression and artiﬁcial neural network models. Meteorol.\
    \ Atmos. Phys. 2010,\n110, 59–70. [CrossRef]\n36.\nCitakoglu, H. Comparison of\
    \ artiﬁcial intelligence techniques for prediction of soil temperatures in Turkey.\
    \ Theor. Appl. Climatol.\n2017, 130, 545–556. [CrossRef]\n37.\nOzturk, M.; Salman,\
    \ O.; Koc, M. Artiﬁcial neural network model for estimating the soil temperature.\
    \ Can. J. Soil Sci. 2011,\n91, 551–562. [CrossRef]\n38.\nShamshirband, S.; Esmaeilbeiki,\
    \ F.; Zarehaghi, D.; Neyshabouri, M.; Samadianfard, S.; Ghorbani, M.A.; Mosavi,\
    \ A.; Nabipour,\nN.; Chau, K.-W. Comparative analysis of hybrid models of ﬁreﬂy\
    \ optimization algorithm with support vector machines and\nmultilayer perceptron\
    \ for predicting soil temperature at different depths. Eng. Appl. Comput. Fluid\
    \ Mech. 2020, 14, 939–953.\n[CrossRef]\n39.\nZeynoddin, M.; Ebtehaj, I.; Bonakdari,\
    \ H. Development of a linear based stochastic model for daily soil temperature\
    \ prediction:\nOne step forward to sustainable agriculture. Comput. Electron.\
    \ Agric. 2020, 176, 105636. [CrossRef]\n40.\nSeiﬁ, A.; Ehteram, M.; Nayebloei,\
    \ F.; Soroush, F.; Gharabaghi, B.; Torabi Haghighi, A. GLUE uncertainty analysis\
    \ of hybrid models\nfor predicting hourly soil temperature and application wavelet\
    \ coherence analysis for correlation with meteorological variables.\nSoft Comput.\
    \ 2021, 25, 10723–10748. [CrossRef]\n41.\nPaloscia, S.; Pampaloni, P.; Pettinato,\
    \ S.; Santi, E. A comparison of algorithms for retrieving soil moisture from ENVISAT/ASAR\n\
    images. IEEE Trans. Geosci. Remote Sens. 2008, 46, 3274–3284. [CrossRef]\n42.\n\
    Hinton, G.E.; Osindero, S.; Teh, Y.-W. A fast learning algorithm for deep belief\
    \ nets. Neural Comput. 2006, 18, 1527–1554. [CrossRef]\nSustainability 2023, 15,\
    \ 7677\n25 of 26\n43.\nLiu, Y.; Mei, L.; Ooi, S.K. Prediction of soil moisture\
    \ based on extreme learning machine for an apple orchard. In Proceedings of\n\
    the 2014 IEEE 3rd International Conference on Cloud Computing and Intelligence\
    \ Systems, Shenzhen, China, 27–29 November\n2014; IEEE: Piscataway, NJ, USA, 2014.\n\
    44.\nLeCun, Y.; Bengio, Y. Convolutional networks for images, speech, and time\
    \ series. Handb. Brain Theory Neural Netw. 1995,\n3361, 1995.\n45.\nHochreiter,\
    \ S.; Schmidhuber, J. Long short-term memory. Neural Comput. 1997, 9, 1735–1780.\
    \ [CrossRef] [PubMed]\n46.\nShi, X.; Chen, Z.; Wang, H.; Yeung, D.-Y.; Wong, W.-K.;\
    \ Woo, W.-C. Convolutional LSTM network: A machine learning approach\nfor precipitation\
    \ nowcasting. Adv. Neural Inf. Process. Syst. 2015, 28, 802–810.\n47.\nHe, K.;\
    \ Zhang, X.; Ren, S.; Sun, J. Deep residual learning for image recognition. In\
    \ Proceedings of the IEEE Conference on\nComputer Vision and Pattern Recognition,\
    \ Las Vegas Valley, NV, USA, 26 June–1 July 2016; IEEE: Piscataway, NJ, USA, 2016.\n\
    48.\nHao, H.; Yu, F.; Li, Q. Soil temperature prediction using convolutional neural\
    \ network based on ensemble empirical mode\ndecomposition. IEEE Access 2020, 9,\
    \ 4084–4096. [CrossRef]\n49.\nYu, F.; Hao, H.; Li, Q. An Ensemble 3D convolutional\
    \ neural network for spatiotemporal soil temperature forecasting. Sustainability\n\
    2021, 13, 9174. [CrossRef]\n50.\nImanian, H.; Hiedra Cobo, J.; Payeur, P.; Shirkhani,\
    \ H.; Mohammadian, A. A Comprehensive Study of Artificial Intelligence\nApplications\
    \ for Soil Temperature Prediction in Ordinary Climate Conditions and Extremely\
    \ Hot Events. Sustainability 2022, 14, 8065.\n[CrossRef]\n51.\nLi, C.; Zhang,\
    \ Y.; Ren, X. Modeling hourly soil temperature using deep BiLSTM neural network.\
    \ Algorithms 2020, 13, 173.\n[CrossRef]\n52.\nWang, X.; Li, W.; Li, Q. A new embedded\
    \ estimation model for soil temperature prediction. Sci. Program. 2021, 2021,\
    \ 5881018.\n[CrossRef]\n53.\nImanian, H.; Shirkhani, H.; Mohammadian, A.; Hiedra\
    \ Cobo, J.; Payeur, P. Spatial Interpolation of Soil Temperature and Water\nContent\
    \ in the Land-Water Interface Using Artiﬁcial Intelligence. Water 2023, 15, 473.\
    \ [CrossRef]\n54.\nVapnik, V. The Nature of Statistical Learning Theory; Springer\
    \ Science & Business Media: Berlin/Heidelberg, Germany, 1999.\n55.\nPasolli, L.;\
    \ Notarnicola, C.; Bruzzone, L. Estimating soil moisture with the support vector\
    \ regression technique. IEEE Geosci.\nRemote Sens. Lett. 2011, 8, 1080–1084. [CrossRef]\n\
    56.\nAdeyemi, O.; Grove, I.; Peets, S.; Domun, Y.; Norton, T. Dynamic neural network\
    \ modelling of soil moisture content for predictive\nirrigation scheduling. Sensors\
    \ 2018, 18, 3408. [CrossRef]\n57.\nXing, L.; Li, L.; Gong, J.; Ren, C.; Liu, J.;\
    \ Chen, H. Daily soil temperatures predictions for various climates in United\
    \ States using\ndata-driven model. Energy 2018, 160, 430–440. [CrossRef]\n58.\n\
    Nanda, A.; Sen, S.; Sharma, A.N.; Sudheer, K. Soil temperature dynamics at hillslope\
    \ scale—Field observation and machine\nlearning-based approach. Water 2020, 12,\
    \ 713. [CrossRef]\n59.\nHong, Z. A Data-Driven Approach to Soil Moisture Collection\
    \ and Prediction Using a Wireless Sensor Network and Machine\nLearning Techniques.\
    \ Master’s Thesis, University of Illinois at Urbana-Champaign, Urbana Champaign,\
    \ IL, USA, 2015.\n60.\nOkujeni, A.; Van der Linden, S.; Jakimow, B.; Rabe, A.;\
    \ Verrelst, J.; Hostert, P. A comparison of advanced regression algorithms for\n\
    quantifying urban land cover. Remote Sens. 2014, 6, 6324–6346. [CrossRef]\n61.\n\
    Delbari, M.; Sharifazari, S.; Mohammadi, E. Modeling daily soil temperature over\
    \ diverse climate conditions in Iran—A\ncomparison of multiple linear regression\
    \ and support vector regression techniques. Theor. Appl. Climatol. 2019, 135,\
    \ 991–1001.\n[CrossRef]\n62.\nMoazenzadeh, R.; Mohammadi, B. Assessment of bio-inspired\
    \ metaheuristic optimisation algorithms for estimating soil tempera-\nture. Geoderma\
    \ 2019, 353, 152–171. [CrossRef]\n63.\nGuleryuz, D. Estimation of soil temperatures\
    \ with machine learning algorithms—Giresun and Bayburt stations in Turkey. Theor.\n\
    Appl. Climatol. 2022, 147, 109–125. [CrossRef]\n64.\nPenghui, L.; Ewees, A.A.;\
    \ Beyaztas, B.H.; Qi, C.; Salih, S.Q.; Al-Ansari, N.; Bhagat, S.K.; Yaseen, Z.M.;\
    \ Singh, V.P. Metaheuristic\noptimization algorithms hybridized with artiﬁcial\
    \ intelligence model for soil temperature prediction: Novel model. IEEE Access\n\
    2020, 8, 51884–51904. [CrossRef]\n65.\nBonakdari, H.; Moeeni, H.; Ebtehaj, I.;\
    \ Zeynoddin, M.; Mahoammadian, A.; Gharabaghi, B. New insights into soil temperature\n\
    time series modeling: Linear or nonlinear? Theor. Appl. Climatol. 2019, 135, 1157–1177.\
    \ [CrossRef]\n66.\nMustafa, E.K.; Co, Y.; Liu, G.; Kaloop, M.R.; Beshr, A.A.;\
    \ Zarzoura, F.; Sadek, M. Study for predicting land surface temperature\n(LST)\
    \ using landsat data: A comparison of four algorithms. Adv. Civ. Eng. 2020, 2020,\
    \ 1–16. [CrossRef]\n67.\nMehdizadeh, S.; Ahmadi, F.; Kozekalani Sales, A. Modelling\
    \ daily soil temperature at different depths via the classical and hybrid\nmodels.\
    \ Meteorol. Appl. 2020, 27, e1941. [CrossRef]\n68.\nKisi, O.; Sanikhani, H.; Cobaner,\
    \ M. Soil temperature modeling at different depths using neuro-fuzzy, neural network,\
    \ and genetic\nprogramming techniques. Theor. Appl. Climatol. 2017, 129, 833–848.\
    \ [CrossRef]\n69.\nBayatvarkeshi, M.; Bhagat, S.K.; Mohammadi, K.; Kisi, O.; Farahani,\
    \ M.; Hasani, A.; Deo, R.; Yaseen, Z.M. Modeling soil\ntemperature using air temperature\
    \ features in diverse climatic conditions with complementary machine learning\
    \ models. Comput.\nElectron. Agric. 2021, 185, 106158. [CrossRef]\n70.\nFathololoumi,\
    \ S.; Vaezi, A.; Alavipanah, S.; Montzka, C.; Ghorbani, A.; Biswas, A. Soil temperature\
    \ modeling using machine\nlearning techniques. Desert (2008–0875) 2020, 25, 185–199.\n\
    Sustainability 2023, 15, 7677\n26 of 26\n71.\nMehdizadeh, S.; Fathian, F.; Safari,\
    \ M.J.S.; Khosravi, A. Developing novel hybrid models for estimation of daily\
    \ soil temperature\nat various depths. Soil Tillage Res. 2020, 197, 104513. [CrossRef]\n\
    72.\nMalik, A.; Tikhamarine, Y.; Sihag, P.; Shahid, S.; Jamei, M.; Karbasi, M.\
    \ Predicting daily soil temperature at multiple depths\nusing hybrid machine learning\
    \ models for a semi-arid region in Punjab, India. Environ. Sci. Pollut. Res. 2022,\
    \ 29, 71270–71289.\n[CrossRef] [PubMed]\n73.\nNahvi, B.; Habibi, J.; Mohammadi,\
    \ K.; Shamshirband, S.; Al Razgan, O.S. Using self-adaptive evolutionary algorithm\
    \ to improve\nthe performance of an extreme learning machine for estimating soil\
    \ temperature. Comput. Electron. Agric. 2016, 124, 150–160.\n[CrossRef]\n74.\n\
    Samadianfard, S.; Ghorbani, M.A.; Mohammadi, B. Forecasting soil temperature at\
    \ multiple-depth with a hybrid artiﬁcial neural\nnetwork model coupled-hybrid\
    \ ﬁreﬂy optimizer algorithm. Inf. Process. Agric. 2018, 5, 465–476. [CrossRef]\n\
    75.\nMehdizadeh, S.; Mohammadi, B.; Pham, Q.B.; Khoi, D.N.; Linh, N.T.T. Implementing\
    \ novel hybrid models to improve indirect\nmeasurement of the daily soil temperature:\
    \ Elman neural network coupled with gravitational search algorithm and ant colony\n\
    optimization. Measurement 2020, 165, 108127. [CrossRef]\n76.\nGill, J.; Singh,\
    \ S. An efﬁcient neural networks based genetic algorithm model for soil temperature\
    \ prediction. Int. J. Emerg. Technol.\nEng. Res. (IJETER) 2015, 3, 1–5.\n77.\n\
    Le, V.T.; Quan, N.H.; Loc, H.H.; Duyen, N.T.T.; Dung, T.D.; Nguyen, H.D.; Do,\
    \ Q.H. A multidisciplinary approach for evaluating\nspatial and temporal variations\
    \ in water quality. Water 2019, 11, 853. [CrossRef]\n78.\nAlmomani, A.; Wan, T.;\
    \ Manasrah, A.; Altaher, A.; Almomani, E. A survey of learning based techniques\
    \ of phishing email ﬁltering.\nInt. J. Digit. Content Technol. Its Appl. 2012,\
    \ 6, 119.\nDisclaimer/Publisher’s Note: The statements, opinions and data contained\
    \ in all publications are solely those of the individual\nauthor(s) and contributor(s)\
    \ and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility\
    \ for any injury to\npeople or property resulting from any ideas, methods, instructions\
    \ or products referred to in the content.\n"
  inline_citation: '>'
  journal: Sustainability
  limitations: '>'
  pdf_link: https://www.mdpi.com/2071-1050/15/9/7677/pdf?version=1683454526
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: A Review of Machine Learning Approaches to Soil Temperature Estimation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agriculture13061149
  analysis: '>'
  authors:
  - Emad S. Hassan
  citation_count: 2
  full_citation: '>'
  full_text: ">\nCitation: Hassan, E.S.\nEnergy-Efﬁcient Resource Allocation\nAlgorithm\
    \ for CR-WSN-Based Smart\nIrrigation System under Realistic\nScenarios. Agriculture\
    \ 2023, 13, 1149.\nhttps://doi.org/10.3390/\nagriculture13061149\nAcademic Editor:\
    \ Yufeng Luo\nReceived: 8 April 2023\nRevised: 15 May 2023\nAccepted: 22 May 2023\n\
    Published: 30 May 2023\nCopyright:\n© 2023 by the author.\nLicensee MDPI, Basel,\
    \ Switzerland.\nThis article is an open access article\ndistributed\nunder\nthe\n\
    terms\nand\nconditions of the Creative Commons\nAttribution (CC BY) license (https://\n\
    creativecommons.org/licenses/by/\n4.0/).\nagriculture\nArticle\nEnergy-Efﬁcient\
    \ Resource Allocation Algorithm for\nCR-WSN-Based Smart Irrigation System under\n\
    Realistic Scenarios\nEmad S. Hassan 1,2\n1\nDepartment of Electrical Engineering,\
    \ College of Engineering, Jazan University, Jizan 45142, Saudi Arabia;\neshassan@jazanu.edu.sa\n\
    2\nDepartment of Electronics and Electrical Communication Engineering, Faculty\
    \ of Electronic Engineering,\nMenouﬁa University, Menouf 32952, Egypt\nAbstract:\
    \ Cognitive radio wireless sensor networks (CR-WSNs) are a type of WSNs that use\
    \ cognitive\nradio technology to enhance the spectrum utilization and energy efﬁciency.\
    \ This paper proposes an\nenergy-efﬁcient resource allocation algorithm (EERAA)\
    \ to prolong the lifetime of a WSN-based smart\nirrigation system under realistic\
    \ scenarios. In the proposed algorithm, power allocation and subcarrier\nassignment\
    \ are performed consecutively. Considering the impact of the intercarrier interference\n\
    (ICI) caused by timing offset, the problem of maximizing network-averaged capacity\
    \ is formulated\nconsidering power and interference constraints in realistic scenarios.\
    \ The obtained results reveal that\nthe proposed algorithm attempts to maximize\
    \ the averaged capacity of the CR-WSN subject to the\ntotal power constraint and\
    \ tolerable interference. Numerically, the proposed algorithm can reduce\nthe\
    \ network energy consumption by up to 30%, compared with conventional approaches,\
    \ while\nmaintaining a high level of system performance in terms of secondary\
    \ users’ (SUs) averaged capacity.\nKeywords: smart irrigation; cognitive radio;\
    \ wireless sensor networks; resource allocation; energy\nefﬁciency; realistic\
    \ scenarios; IoT\n1. Introduction\nSmart irrigation is a transformative approach\
    \ that leverages advanced technologies to\noptimize water usage in agricultural\
    \ practices. With the increasing global demand for food\nproduction and the growing\
    \ scarcity of water resources, efﬁcient irrigation techniques are\ncrucial for\
    \ sustainable agriculture. Smart irrigation systems integrate various components,\n\
    such as sensors, actuators, and data analytics, to enable precise monitoring and\
    \ control of\nirrigation processes. These systems utilize a network of sensors\
    \ to collect real-time data\non environmental factors, soil moisture levels, and\
    \ plant conditions [1]. The collected data\nare then analyzed and processed using\
    \ sophisticated algorithms to determine the optimal\namount and timing of water\
    \ application. By considering factors such as weather conditions,\ncrop requirements,\
    \ and soil characteristics, smart irrigation systems can provide precise\nand\
    \ targeted irrigation, minimizing water waste and maximizing crop yield [2,3].\n\
    One key advantage of smart irrigation is its ability to enable remote monitoring\
    \ and\ncontrol. Farmers can access the system through web-based platforms or mobile\
    \ applications,\nallowing them to monitor ﬁeld conditions and adjust irrigation\
    \ schedules from anywhere\nat any time. This remote accessibility enhances operational\
    \ efﬁciency and reduces the need\nfor manual labor, saving time and resources.\
    \ Moreover, smart irrigation systems can be\nintegrated with weather forecasting\
    \ systems to further enhance their effectiveness. By\nincorporating real-time\
    \ weather data, these systems can adapt irrigation schedules based\non predicted\
    \ rainfall or temperature changes, ensuring optimal water usage and reducing\n\
    reliance on manual adjustments. The beneﬁts of smart irrigation extend beyond\
    \ water\nconservation and crop productivity. By minimizing water usage, farmers\
    \ can reduce their\nAgriculture 2023, 13, 1149. https://doi.org/10.3390/agriculture13061149\n\
    https://www.mdpi.com/journal/agriculture\nAgriculture 2023, 13, 1149\n2 of 13\n\
    overall operational costs, improve energy efﬁciency, and mitigate environmental\
    \ impacts,\nsuch as water pollution and soil erosion [1].\nA wireless sensor network\
    \ (WSN) is a network of many low-cost and power-limited\nsensors that are distributed\
    \ in an area to monitor and collect data about the physical or\nenvironmental\
    \ conditions. The sensors are outﬁtted with a diverse array of monitoring\ncapabilities,\
    \ including temperature, humidity, pressure, light, sound, and motion. They\n\
    establish wireless communication among themselves to establish a network. The\
    \ collected\ndata can then be processed, analyzed, and transmitted to a central\
    \ control unit or a remote\nserver for further processing and storage. The primary\
    \ advantage of WSNs is their ability\nto provide a real-time, continuous, and\
    \ ﬁne-grained monitoring of the physical world,\nwhich can be used in many applications,\
    \ such as environmental monitoring, smart cities,\nhealthcare, industrial automation,\
    \ and precision agriculture [4–7]. However, the design\nand deployment of WSNs\
    \ pose several challenges, such as limited power, bandwidth,\nprocessing capabilities,\
    \ communication and network management issues, security and\nprivacy concerns,\
    \ and the need for robust and energy-efﬁcient algorithms and protocols.\nNevertheless,\
    \ the widespread use of WSNs is expected to grow in the future as the Internet\n\
    of Things (IoT) continues to expand, providing new opportunities for innovation\
    \ and\nimproving the quality of life. Recently, several studies related to these\
    \ challenges have been\nconducted [7,8].\nCognitive radio wireless sensor networks\
    \ (CR-WSNs) are a type of WSNs that use\nCR technology to enhance the spectrum\
    \ utilization and power conservation [9–11]. In\nCR-WSNs, the sensor nodes are\
    \ equipped with cognitive radios that can sense the radio\nfrequency (RF) spectrum\
    \ and adapt the transmission parameters to avoid interference and\noptimize energy\
    \ consumption. This allows CR-WSNs to operate in a dynamic and hetero-\ngeneous\
    \ RF environment, where different types of wireless devices coexist and compete\
    \ for\nlimited spectrum resources. By using cognitive radio technology, CR-WSNs\
    \ can achieve\nhigher spectrum efﬁciency, better reliability, and longer network\
    \ lifetime compared with\ntraditional WSNs. CR-WSNs have various applications,\
    \ such as environmental monitor-\ning, smart irrigation, industrial control, healthcare,\
    \ and smart cities, where reliable and\nenergy-efﬁcient wireless communication\
    \ is critical [12–14]. In practical scenarios of CR\nnetworks, the estimation\
    \ algorithm design can be affected by channel sensing uncertainty\nresulting from\
    \ false alarms and misdetections. As a result, it is of interest to identify how\n\
    estimation algorithm quality is affected by channel sensing errors. As such, this\
    \ paper aims\nto investigate the impact of imperfect sensing on the performance\
    \ of CR-WSNs.\nOrthogonal frequency division multiplexing (OFDM) [15] is widely\
    \ regarded as a top\ncontender for the physical layer of CR systems due to its\
    \ ﬂexible, reconﬁgurable subcarrier\nstructure that enables easy adaptation and\
    \ adjustment of system parameters. OFDM\nis also capable of avoiding interference\
    \ through the addition of the cyclic preﬁx, and it\noffers large bandwidth efﬁciency\
    \ through orthogonality, resilience to frequency-selective\nfading channels, and\
    \ simpliﬁed equalizer design. However, OFDM is very sensitive to\ntiming discrepancies\
    \ due to synchronization error. The shortage of OFDM comes from\nhigh side lobes\
    \ in ﬁlters’ frequency response, which, in turn, lead to high interference\nbetween\
    \ subcarriers, which is a major source that declines the performance of wireless\n\
    communication systems [16–18]. In the current literature, optimizing the radio\
    \ resources\nunder power and interference constraints in the CR system remains\
    \ an area of ongoing\nresearch. This paper seeks to enhance the SU’s average capacity\
    \ with the consideration\nof quality of service (QoS) of the primary users (PUs).\
    \ Hence, it is necessary to consider\nthe interference produced by side lobes\
    \ between primary users and secondary users.\nAdditionally, the transmit power\
    \ of each SU subcarrier can be adapted with the best\npossible resource allocation\
    \ algorithm in order to not affect the PU while transmitting\ninformation. Unfortunately,\
    \ there are few studies that have focused on this problem.\nTherefore, in this\
    \ paper, the trade-off of increasing transmission capacity while maintaining\n\
    an acceptable interference will be investigated.\nAgriculture 2023, 13, 1149\n\
    3 of 13\nResource allocation is a critical process that involves distributing\
    \ resources, such as\ntime, energy, bandwidth, and computational power, among\
    \ competing demands. Efﬁcient\nresource allocation is essential in various ﬁelds,\
    \ including communication systems, trans-\nportation networks, manufacturing processes,\
    \ and energy management [12,13]. Concerning\nWSNs, resource allocation is especially\
    \ crucial since the resources available are typically\nlimited, and the sensors’\
    \ energy consumption must be optimized to prolong the network’s\nlifespan. Proper\
    \ resource allocation can lead to several beneﬁts, such as improved system\nperformance,\
    \ reduced energy consumption, increased reliability, and enhanced scalability.\n\
    Furthermore, resource allocation can help to ensure that critical tasks receive\
    \ adequate\nresources, prevent network congestion, and reduce the risk of system\
    \ failure. In summary,\nresource allocation is vital for optimizing the use of\
    \ resources, achieving efﬁcient operations,\nand achieving the desired system\
    \ performance in various applications [19,20].\nThe resource allocation algorithm\
    \ will take place after the SUs are allocated to the\ndetected spectrum opportunities.\
    \ Based on convex optimization techniques, we derive the\nresource allocation\
    \ algorithm for the SU to achieve the highest capacity considering the\ninterference\
    \ constraint, along with the peak/average transmit power constraint of the SU.\n\
    In summary, this work introduces the following contributions:\n(1)\nWe present\
    \ a practical scenario for CR-WSNs; then we investigate how imperfect\nchannel\
    \ sensing impacts the performance of CR-WSN-based systems.\n(2)\nWe propose a\
    \ resource allocation algorithm that aims to enhance the SU average\ncapacity\
    \ while ensuring that the interference level at the PU is below an acceptable\n\
    level considering power constraint and ICI constraint.\n(3)\nTo solve the above\
    \ nonconvex optimization problem, the proposed algorithm is\npresented to search\
    \ for the optimal transmit power of the SU.\nThe detailed abbreviations and deﬁnitions\
    \ used in this paper are listed in Table 1.\nTable 1. List of abbreviations.\n\
    Abbreviation\nDeﬁnition\nCR\ncognitive radio\nWSNs\nwireless sensor networks\n\
    CR-WSNs\ncognitive radio wireless sensor networks\nICI\nintercarrier interference\n\
    SU\nsecondary user\nPU\nprimary user\nIoT\nInternet of Things\nRF\nradio frequency\n\
    OFDM\northogonal frequency division multiplexing\nQoS\nquality of service\nCH\n\
    cluster head\nUAV\nunmanned aerial vehicles\nLEO\nlow earth orbit\nSNR\nsignal-to-noise\
    \ ratio\nLP\nlinear programming\nBER\nbit error rate\nJRA\njoint resource allocation\n\
    RASI\nresource allocation with sensing-based interference\nEERAA\nEnergy-efﬁcient\
    \ resource allocation algorithm\nThe rest of the paper is presented according\
    \ to the following sequence: The related\nwork is presented in Section 2. The\
    \ system model of CR-WSNs and presented channel\nsensing model are illustrated\
    \ in Section 3. The proposed resource allocation and problem\nformulation are\
    \ presented in Section 4. Section 5 provides the simulation results and\ndiscussion.\
    \ Finally, Section 6 presents the conclusions.\nAgriculture 2023, 13, 1149\n4\
    \ of 13\n2. Related Work\nIn [12], the authors presented a resource allocation\
    \ scheme that utilizes a Stackelberg\ngame approach to optimize the SUs’ throughput\
    \ while satisfying the PU’s interference\nconstraint in a multiuser CR network.\
    \ The authors in [13] proposed a resource allocation\nscheme for CR-WSNs that\
    \ incorporates energy harvesting capabilities. The authors consider\na CR-WSN\
    \ with a single CR node and multiple energy harvesting nodes, and they express\n\
    the resource allocation formula as an optimization problem that maximizes the\
    \ network\nthroughput subject to energy neutrality constraints for the energy\
    \ harvesting nodes and\ninterference constraints for the PUs. In [21], the authors\
    \ proposed an effective resource\nallocation technique, namely, the Improved Pliable\
    \ Cognitive Medium Access Protocol,\ndesigned to address the challenges of multilevel\
    \ heterogeneity in CR-WSN.\nIn [22], a computationally efﬁcient resource allocation\
    \ algorithm in a multi-carrier-\nbased CR network is presented to maximize the\
    \ system capacity. The assumption made\nin this work is to neglect the interference\
    \ from PU to SU. The authors in [23] proposed a\ntrajectory design and resource\
    \ allocation scheme to maximize the achievable rate of an\nSU in an unmanned aerial\
    \ vehicle (UAV) CR system. They optimized the UAV trajectory,\ntransmit power\
    \ to satisfy practical constraints, and an interference temperature threshold.\n\
    The work in [24] focuses on the achievable rate analysis and resource allocation\
    \ of the\ncognitive low earth orbit (LEO) satellite system. Speciﬁcally, a joint\
    \ power allocation scheme\nwas proposed to maximize the sum rate of the IoT transmission\
    \ subject to performance\nrequirements and constraints of the legacy satellite\
    \ system. The quasi-concave nature of\nthe sum rate of the IoT users over the\
    \ satellite terminal receive power was proved, which\nallows for optimal receive\
    \ powers to be derived.\nAn energy-efﬁcient resource allocation approach in secure\
    \ CR networks was presented\nin [25]. The paper introduces an ergodic secure energy\
    \ efﬁciency problem for a CR network\nwith a PU, an SU, and an eavesdropper, and\
    \ presents a convex optimization problem for\npower allocation using fractional\
    \ programming and dual decomposition techniques. The\nproposed approach aims to\
    \ maximize the ergodic secure energy efﬁciency of the SU with\nconstraints on\
    \ the average interference power and average transmit power.\nIn [26], the authors\
    \ propose a resource allocation algorithm to improve the sum rate\nconsidering\
    \ power and interference constraints using a Rayleigh fading channel. However,\n\
    the scenario where the SUs communicate while facing channel sensing uncertainty\
    \ has not\nbeen considered in any of these works. Therefore, we propose an energy-efﬁcient\
    \ resource\nallocation algorithm (EERAA) to enhance the average capacity and prolong\
    \ the lifetime of\na WSN-based smart irrigation system under realistic scenarios.\
    \ In the proposed algorithm,\npower allocation and subcarrier assignment are performed\
    \ sequentially.\nOur approach differs from that in [26] by considering the capacity\
    \ reduction on all\nsubcarriers occupied by a PU, rather than just on the ﬁrst\
    \ adjacent subcarrier to the SU.\nFurthermore, we employ a coarse approximation\
    \ of the channel’s gain for the SU. The\nobtained results illustrate that the\
    \ average capacity of SUs is close to that of the perfect\nchannel knowledge scenario.\n\
    3. CR-WSN System Model\nA WSN-based smart irrigation system is a modern and innovative\
    \ solution for ef-\nﬁcient and sustainable agriculture. The system comprises a\
    \ network of sensors that are\ndeployed in the soil, plants, and environment to\
    \ monitor and collect data related to soil\nmoisture, temperature, humidity, rainfall,\
    \ and other relevant parameters. These data are\nthen transmitted wirelessly to\
    \ a central control unit that processes the data and triggers the\nirrigation\
    \ system based on predeﬁned thresholds and algorithms. The WSN-based smart\nirrigation\
    \ system enables farmers to optimize water usage, increase crop yields, reduce\n\
    water wastage, and lower energy costs. Additionally, it is easily expandable and\
    \ can be\nadapted to achieve the speciﬁc requirements of various crops and farming\
    \ practices. With\nthe rise of climate change and water scarcity issues, WSN-based\
    \ smart irrigation systems\nare becoming increasingly popular and essential for\
    \ modern agriculture.\nAgriculture 2023, 13, 1149\n5 of 13\nThe CR-WSN-based smart\
    \ irrigation system model is illustrated in Figure 1 with an N\ncluster each with\
    \ one cluster head (CH) and many sensor nodes spread over an area with\nsize A.\
    \ The transmission between the sensor nodes and the CH within the cluster is carried\n\
    out using the unlicensed spectrum, while the transmission between the CH and the\
    \ sink\nnode takes place opportunistically through the licensed spectrum. The\
    \ licensed spectrum\nthat is being targeted includes M radio channels that exhibit\
    \ varying PU communications\nand signal-to-noise-ratios (SNRs) [27].\n \nthen\
    \ transmitted wirelessly to a central control unit that processes the data and\
    \ triggers \nthe irrigation system based on predefined thresholds and algorithms.\
    \ The WSN-based \nsmart irrigation system enables farmers to optimize water usage,\
    \ increase crop yields, re-\nduce water wastage, and lower energy costs. Additionally,\
    \ it is easily expandable and can \nbe adapted to achieve the specific requirements\
    \ of various crops and farming practices. \nWith the rise of climate change and\
    \ water scarcity issues, WSN-based smart irrigation \nsystems are becoming increasingly\
    \ popular and essential for modern agriculture. \nThe CR-WSN-based smart irrigation\
    \ system model is illustrated in Figure 1 with an \nN cluster each with one cluster\
    \ head (CH) and many sensor nodes spread over an area \nwith size A. The transmission\
    \ between the sensor nodes and the CH within the cluster is \ncarried out using\
    \ the unlicensed spectrum, while the transmission between the CH and \nthe sink\
    \ node takes place opportunistically through the licensed spectrum. The licensed\
    \ \nspectrum that is being targeted includes M radio channels that exhibit varying\
    \ PU com-\nmunications and signal-to-noise-ratios (SNRs) [27]. \n \nFigure 1.\
    \ CR-WSN-based smart irrigation system model. \nChannel Sensing \nThe first step\
    \ involves using CH nodes (i.e., SUs) to sense the transmission channel, \nto\
    \ decide whether it is currently available or busy by a PU. Energy detection methods\
    \ are \ncommonly used for this purpose, especially when the transmission modes\
    \ of PUs are un-\nknown. Assuming that \U0001D466௟ represents the PU’s signal\
    \ at a specific location, and \U0001D45B௟ repre-\nsents Gaussian white noise with\
    \ a mean of zero and a variance of \U0001D70E௡\nଶ for all \U0001D459, the CH’s\
    \ \nmeasurement can be denoted as \U0001D438௟. For each CH, a spectrum sensing\
    \ function is defined \nFigure 1. CR-WSN-based smart irrigation system model.\n\
    Channel Sensing\nThe ﬁrst step involves using CH nodes (i.e., SUs) to sense the\
    \ transmission channel,\nto decide whether it is currently available or busy by\
    \ a PU. Energy detection methods\nare commonly used for this purpose, especially\
    \ when the transmission modes of PUs\nare unknown. Assuming that yl represents\
    \ the PU’s signal at a speciﬁc location, and nl\nrepresents Gaussian white noise\
    \ with a mean of zero and a variance of σ2\nn for all l, the\nCH’s measurement\
    \ can be denoted as El. For each CH, a spectrum sensing function is\ndeﬁned by\
    \ establishing two hypotheses according to the measurement. In this mathematical\n\
    expression, the hypothesis checking for the channel sensing problem is performed\
    \ over M\nsymbol periods and can be expressed as follows [9]:\nH0 : El = nl\n\
    l = 1, 2, 3 . . . ..M\n(1)\nH1 : El = yl + nl\nl = 1, 2, 3 . . . ..M\n(2)\nAgriculture\
    \ 2023, 13, 1149\n6 of 13\nIn Equation (1), H0 means that the PU signal is absent,\
    \ while in Equation (2), H1 means\nthat the PU is present and using the channel.\
    \ The M received signal sample points are\ngathered by cognitive nodes (CH), allowing\
    \ for the detection statistics for energy detection\nto be expressed in the following\
    \ manner:\nE = 1\nM\nM\n∑\nl=1\n|zl|2\n(3)\nIf we assume that |El|2 with l = 1,\
    \ . . . .., M is composed of independently and identi-\ncally distributed random\
    \ variables, to verify the mean E for large values of M, we can use\nthe central\
    \ limit theorem. This is demonstrated in [26] as:\nE{Z} =\n\x1Aσ2\nn,\nunder H0\n\
    σ2\ns + σ2\nn,\nunder H1\n(4)\nwhere σ2\ns represents the PU’s signal variance.\
    \ It should be emphasized that the reliability\nof spectrum sensing is evaluated\
    \ using two metrics: the ﬁrst metric is the probability of\ndetection Pd, which\
    \ refers to the probability of an SU detecting the presence of a PU when\nthe\
    \ spectrum is actually used by the PU. The second metric is the false alarm probability\n\
    Pf , which represents the probability of an SU detecting the presence of a PU\
    \ when the\nchannel is free [9]. For instance, if H0 is the true hypothesis, then\
    \ P\n\b ˆH1\n\f\fH0\n\t\nindicates the\nprobability of a false alarm.\n4. The\
    \ Proposed Resource Allocation\nConcerning CR-WSNs, our attention is directed\
    \ to both energy consumption and SU\naverage capacity, which depends on its resource\
    \ allocation scenario done by CH nodes.\nThis paper proposes a resource allocation\
    \ algorithm that maximizes the average capacity,\ntaking into account both power\
    \ constraint and interference constraint [28]. Therefore, the\nenergy consumption\
    \ and ICI optimization are strongly interconnected with each other in\nthis case,\
    \ making it difﬁcult to solve it in general. To solve this issue, the successive\
    \ convex\noptimization technique presented in [29] is applied.\nWe consider CR-WSNs\
    \ with spectrum sharing between PUs and SUs as illustrated\nin Figure 2, with\
    \ the allocation of the PU (labelled “1”) and spectrum holes (denoted by\n“0”)\
    \ with cluster number Nc = 48 and FU = 18 subcarriers in each hole. We have utilized\n\
    the unambiguous interference formulas of OFDM, which previously obtained in [30]\
    \ and\nselected the cluster number and size based on the realistic values of WiMAX\
    \ 802.16.\n \nby establishing two hypotheses according to the measurement. In\
    \ this mathematical ex-\npression, the hypothesis checking for the channel sensing\
    \ problem is performed over M \nsymbol periods and can be expressed as follows\
    \ [9]: \n\U0001D43B଴: \U0001D438௟ = \U0001D45B௟      \U0001D459 = 1, 2, 3 … .\
    \ . \U0001D440 \n(1)\n\U0001D43Bଵ: \U0001D438௟ = \U0001D466௟ + \U0001D45B௟   \
    \   \U0001D459 = 1, 2, 3 … . . \U0001D440 \n(2)\nIn Equation (1), \U0001D43B଴\
    \ means that the PU signal is absent, while in Equation (2), \U0001D43Bଵ \nmeans\
    \ that the PU is present and using the channel. The M received signal sample points\
    \ \nare gathered by cognitive nodes (CH), allowing for the detection statistics\
    \ for energy de-\ntection to be expressed in the following manner: \n\U0001D438\
    \ = 1\n\U0001D440 ෍|\U0001D467௟|ଶ  \nெ\n௟ୀଵ\n \n(3)\nIf we assume that |\U0001D438\
    ௟|ଶ with \U0001D459 =  1, … . . , \U0001D440 is composed of independently and\
    \ iden-\ntically distributed random variables, to verify the mean E for large\
    \ values of M, we can \nuse the central limit theorem. This is demonstrated in\
    \ [26] as: \n\U0001D53C{\U0001D44D} = ൜ \U0001D70E௡\nଶ ,                     \U0001D462\
    \U0001D45B\U0001D451\U0001D452\U0001D45F \U0001D43B଴\n\U0001D70E௦\nଶ + \U0001D70E\
    ௡\nଶ,               \U0001D462\U0001D45B\U0001D451\U0001D452\U0001D45F \U0001D43B\
    ଵ     \n(4)\nwhere  \U0001D70E௦\nଶ represents the PU’s signal variance. It should\
    \ be emphasized that the reliability \nof spectrum sensing is evaluated using\
    \ two metrics: the first metric is the probability of \ndetection \U0001D443ௗ,\
    \ which refers to the probability of an SU detecting the presence of a PU when\
    \ \nthe spectrum is actually used by the PU. The second metric is the false alarm\
    \ probability \n\U0001D443௙, which represents the probability of an SU detecting\
    \ the presence of a PU when the \nchannel is free [9]. For instance, if \U0001D43B\
    ଴ is the true hypothesis, then P{ \U0001D43Bଵ\n෢ |\U0001D43B଴} indicates the \n\
    probability of a false alarm. \n4. The Proposed Resource Allocation \nConcerning\
    \ CR-WSNs, our attention is directed to both energy consumption and SU \naverage\
    \ capacity, which depends on its resource allocation scenario done by CH nodes.\
    \ \nThis paper proposes a resource allocation algorithm that maximizes the average\
    \ capacity, \ntaking into account both power constraint and interference constraint\
    \ [28]. Therefore, the \nenergy consumption and ICI optimization are strongly\
    \ interconnected with each other in \nthis case, making it difficult to solve\
    \ it in general. To solve this issue, the successive convex \noptimization technique\
    \ presented in [29] is applied. \nWe consider CR-WSNs with spectrum sharing between\
    \ PUs and SUs as illustrated in \nFigure 2, with the allocation of the PU (labelled\
    \ “1”) and spectrum holes (denoted by “0”) \nwith cluster number \U0001D441௖ =\
    \ 48 and \U0001D439௎ = 18 subcarriers in each hole. We have utilized the \nunambiguous\
    \ interference formulas of OFDM, which previously obtained in [30] and se-\nlected\
    \ the cluster number and size based on the realistic values of WiMAX 802.16. \
    \ \n \nFigure 2. Allocation of primary users and available subcarriers considering\
    \ 18 subcarriers allocated \nto each free sub-band. \nFigure 2. Allocation of\
    \ primary users and available subcarriers considering 18 subcarriers allocated\n\
    to each free sub-band.\nOne or more interferences can exist within a single spectrum\
    \ hole, as illustrated in\nFigure 2, where PUs and SUs utilize neighboring frequency\
    \ bands. We assume that the\nICI exists from the PU to the CH due to frequency\
    \ offset. Based on the OFDM ICI tables\nobtained in [31], it was observed that\
    \ “8” subcarriers (OFDM) induce the ICI to the channel.\nIn cases where a sequence\
    \ of intricate symbols is transmitted, the interference caused by\nAgriculture\
    \ 2023, 13, 1149\n7 of 13\na single subcarrier is the total of interference across\
    \ all the time slots. For the subsequent\nanalysis, we deﬁne the eight-element\
    \ interference vectors of OFDM as designed in [32].\nVo f dm = 10−2 × [8.94, 2.23,\
    \ 0.995, 0.560, 0.359, 0.250, 0.184, 0.112]\n(5)\nOne formulation of the problem\
    \ faced by the SU is to enhance the sum data rate\nthrough power allocation in\
    \ the detected spectrum holes:\nmax\nP : C(P) =\nU\n∑\nu=1\nFU\n∑\nf =1\nlog2\n\
    \"\n1 + pu f\ns Gu f\nss\nσ2n + Iu\nf\n#\n(6)\ns.t.\nU\n∑\nu=1\nFU\n∑\nf =1\n\
    pu f\ns\n≤ pth\n(7)\n0 ≤ pu f\ns\n≤ psub\n(8)\nNi\n∑\nn=1\npul(r)\ns\nGu f\nsp\n\
    N−n+1\n∑\ni=1\nVNi−i+1 ≤ Ith\n(9)\nIn Equation (9), U represents the number of\
    \ spectrum holes, while FU, pu f\ns , Gu f\nss , and\nIu\nf denote the subcarrier\
    \ number, SU power, CIR gain from the SU to its base station, and\nICI from the\
    \ PU to the SU on the f th subcarrier in the uth spectrum hole, respectively.\
    \ The\nvariables pth and psub are the extreme user power boundary and power limit\
    \ per subcarrier,\nrespectively. The interference vector V length is represented\
    \ by Ni, pul(r)\ns\nis the SU’s power\non the right (left) nth subcarrier in the\
    \ uth spectrum hole,Gu f\nsp is the gain of the propagation\nchannel from the\
    \ CH to the primary system on the right (left) PU’s subcarriers neighboring\n\
    the uth spectrum hole, and Ith represents the interference threshold. The last\
    \ constraint is to\nprotect the PU transmission, which needs that the received\
    \ interference power at the PU\ndue to the CH transmission is below a prescribed\
    \ threshold.\nThe interference from the primary system to the CH, Iu\nf , is written\
    \ as in Equation (10):\nIu\nf =\n\n\n\n\n\n\n\n\n\n\n\n\n\nN\n∑\n\
    n= f\nPul\np Gul\npsVn\nf = 1, 2, 3 . . . ..Ni\nN\n∑\nn=FU− f +1\nPur\np Gur\n\
    psVn\nf = FU − Ni + 1, . . . ..FU\n0\notherwise\n(10)\nIn Equation (10), Pul(r)\n\
    p\nand Gul(r)\nps\nrepresent the primary user transmitted power and\nchannel gain\
    \ existing at the right (left) of the uth spectrum hole to the SU on the f th\n\
    subcarrier of the uth spectrum hole, respectively.\nOur optimization problem in\
    \ (6) is formulated as a concave function, while the con-\nstraints in (7)–(9)\
    \ are linear, making it a convex optimization problem. This problem can be\nefﬁciently\
    \ solved using several linear programming (LP) methods, such as the CVX-SDPT3\n\
    toolbox [28]. The algorithm’s details are summarized in Algorithm 1.\nAlgorithm\
    \ 1 The procedure of the CVX optimization algorithm\n1: Input—Set the channel\
    \ gains, the maximum user power pth and power limits per subcarrier\npsub, and\
    \ the noise power.\n2: Solve—Solve the optimization problem (6) for given constraints\
    \ in (7)–(9).\n3: Output—The optimum power for all subcarriers.\nAgriculture 2023,\
    \ 13, 1149\n8 of 13\n5. Simulation Results and Discussion\nThe following section\
    \ illustrates the obtained results that assess the performance\nof the EERAA algorithm\
    \ in the presence of imperfect channel sensing. The probability\nof primary users’\
    \ presence is 0.25, i.e., P{H 1} = 0.25 and P{H 0} = 0.75. The EERAA\nalgorithm\
    \ is validated through Monte Carlo simulations over a frequency selective Rayleigh\n\
    fading channel between the secondary transmitter and receiver. The simulations\
    \ consider\n256 subcarriers and QPSK modulation.\nFigure 3 presents the bit error\
    \ rate (BER) performance of the proposed EERAA algo-\nrithm versus Eb/N0 compared\
    \ with the scenario of no sensing errors. The perfect estimation\nhas the same\
    \ performance as the case with no sensing errors, which indicate the validation\n\
    of the proposed algorithm. The simulation also considers different levels of sensing\
    \ errors.\nThe results indicate that the BER performance degrades as the sensing\
    \ errors increase.\nWhen the probability of detection Pd drops from 1 to 0, the\
    \ BER performance is affected.\n \nAlgorithm 1 The procedure of the CVX optimization\
    \ algorithm \n1: Input—Set the channel gains, the maximum user power \U0001D491\
    \U0001D495\U0001D489 and power limits per sub-\ncarrier \U0001D491\U0001D494\U0001D496\
    \U0001D483, and the noise power. \n2: Solve—Solve the optimization problem (6)\
    \ for given constraints in (7)–(9). \n3: Output—The optimum power for all subcarriers.\
    \  \n5. Simulation Results and Discussion  \nThe following section illustrates\
    \ the obtained results that assess the performance of \nthe EERAA algorithm in\
    \ the presence of imperfect channel sensing. The probability of \nprimary users’\
    \ presence is 0.25, i.e., P{\U0001D43Bଵ } = 0.25 and P{\U0001D43B଴ } = 0.75. The\
    \ EERAA algo-\nrithm is validated through Monte Carlo simulations over a frequency\
    \ selective Rayleigh \nfading channel between the secondary transmitter and receiver.\
    \ The simulations consider \n256 subcarriers and QPSK modulation. \nFigure 3 presents\
    \ the bit error rate (BER) performance of the proposed EERAA algo-\nrithm versus\
    \ \U0001D438௕/\U0001D441଴ compared with the scenario of no sensing errors. The\
    \ perfect estimation \nhas the same performance as the case with no sensing errors,\
    \ which indicate the validation \nof the proposed algorithm. The simulation also\
    \ considers different levels of sensing errors. \nThe results indicate that the\
    \ BER performance degrades as the sensing errors increase. When \nthe probability\
    \ of detection \U0001D443ௗ drops from 1 to 0, the BER performance is affected.\
    \  \n \nFigure 3. The impact of sensing errors on BER of the proposed EERAA algorithm\
    \ considering dif-\nferent scenarios of sensing errors. \nFigure 4 presents a\
    \ BER performance comparison among the proposed EERAA al-\ngorithm, the joint\
    \ resource allocation (JRA) [33], and resource allocation with sensing-\nbased\
    \ interference (RASI) [12] algorithms. It is clear that the EERAA algorithm gives\
    \ the \nbetter performance compared with the other algorithms.  \n0\n5\n10\n15\n\
    20\n25\nEb/N0 (dB)\n10-3\n10-2\n10-1\n100\nBER\nperfect channel knowledge\nNo\
    \ sensing error\nPd=0.8\nPd=0.6\nPd=0.4\nPd=0.2\nPd=0\nFigure 3. The impact of\
    \ sensing errors on BER of the proposed EERAA algorithm considering\ndifferent\
    \ scenarios of sensing errors.\nFigure 4 presents a BER performance comparison\
    \ among the proposed EERAA algo-\nrithm, the joint resource allocation (JRA) [33],\
    \ and resource allocation with sensing-based\ninterference (RASI) [12] algorithms.\
    \ It is clear that the EERAA algorithm gives the better\nperformance compared\
    \ with the other algorithms.\nThe following Figures 5 and 6 illustrate the performance\
    \ evaluation of the proposed\nresource allocation algorithm based on the average\
    \ spectral efﬁciency. Figure 5 depicts\nthe scenario where an SU, utilizing F\
    \ available subcarriers, is surrounded by subcarriers\nallocated to the PU, causing\
    \ interference from both sides. In this case, the SU’s spectral\nefﬁciency values\
    \ show an improvement compared with the initial allocation. The power\nallocation\
    \ algorithm attempts to avoid subcarriers adjacent to the PU, leading to the\n\
    localization of power allocation in the middle of the spectrum hole.\nAgriculture\
    \ 2023, 13, 1149\n9 of 13\nAgriculture 2023, 13, x FOR PEER REVIEW \n9 of 13 \n\
    \ \n \n \nFigure 4. BER comparison among the proposed EERAA, RASI [12], and JRA\
    \ [33]. \nThe following Figures 5 and 6 illustrate the performance evaluation\
    \ of the proposed \nresource allocation algorithm based on the average spectral\
    \ efficiency. Figure 5 depicts \nthe scenario where an SU, utilizing F available\
    \ subcarriers, is surrounded by subcarriers \nallocated to the PU, causing interference\
    \ from both sides. In this case, the SU’s spectral \nefficiency values show an\
    \ improvement compared with the initial allocation. The power \nallocation algorithm\
    \ attempts to avoid subcarriers adjacent to the PU, leading to the local-\nization\
    \ of power allocation in the middle of the spectrum hole. \n \nFigure 5. Common\
    \ channel scenarios in the case of a single user and F = 18. \nFigure 6 demonstrates\
    \ the impact of the maximum power levels. The graph in Figure 6 \nclearly shows\
    \ that increasing the average power per subcarrier, denoted as P, results in higher\
    \ \nspectral efficiencies (\U0001D443 = \U0001D45D௧௛/\U0001D439). It is also clear\
    \ that the performance of the proposed EERAA \nalgorithm can be observed to approach\
    \ that of the perfectly known channel scenario. \n0\n5\n10\n15\n20\n25\n30\nEb/N0\
    \ (dB)\n10-4\n10-3\n10-2\n10-1\n100\nJRA\nRASI\nProposed EERAA\nPerfect channel\
    \ Knowledge\n2\n4\n6\n8\n10\n12\n14\n16\n18\nNumber of subcarriers\n0\n0.002\n\
    0.004\n0.006\n0.008\n0.01\nFigure 4. BER comparison among the proposed EERAA,\
    \ RASI [12], and JRA [33].\n \n \nFigure 4. BER comparison among the proposed\
    \ EERAA, RASI [12], and JRA [33]. \nThe following Figures 5 and 6 illustrate the\
    \ performance evaluation of the proposed \nresource allocation algorithm based\
    \ on the average spectral efficiency. Figure 5 depicts \nthe scenario where an\
    \ SU, utilizing F available subcarriers, is surrounded by subcarriers \nallocated\
    \ to the PU, causing interference from both sides. In this case, the SU’s spectral\
    \ \nefficiency values show an improvement compared with the initial allocation.\
    \ The power \nallocation algorithm attempts to avoid subcarriers adjacent to the\
    \ PU, leading to the local-\nization of power allocation in the middle of the\
    \ spectrum hole. \n \nFigure 5. Common channel scenarios in the case of a single\
    \ user and F = 18. \nFigure 6 demonstrates the impact of the maximum power levels.\
    \ The graph in Figure 6 \nclearly shows that increasing the average power per\
    \ subcarrier, denoted as P, results in higher \nspectral efficiencies (\U0001D443\
    \ = \U0001D45D௧௛/\U0001D439). It is also clear that the performance of the proposed\
    \ EERAA \nalgorithm can be observed to approach that of the perfectly known channel\
    \ scenario. \n0\n5\n10\n15\n20\n25\n30\nEb/N0 (dB)\n10-4\n10-3\n10-2\n10-1\nJRA\n\
    RASI\nProposed EERAA\nPerfect channel Knowledge\n2\n4\n6\n8\n10\n12\n14\n16\n\
    18\nNumber of subcarriers\n0\n0.002\n0.004\n0.006\n0.008\n0.01\nFigure 5. Common\
    \ channel scenarios in the case of a single user and F = 18.\nFigure 6 demonstrates\
    \ the impact of the maximum power levels. The graph in Figure 6\nclearly shows\
    \ that increasing the average power per subcarrier, denoted as P, results\nin\
    \ higher spectral efﬁciencies (P = pth/F). It is also clear that the performance\
    \ of the\nproposed EERAA algorithm can be observed to approach that of the perfectly\
    \ known\nchannel scenario.\nFigure 7 illustrates the impact of the number of subcarriers\
    \ on the SU’s averaged\ncapacity. The performance of OFDM increases as the number\
    \ of subcarriers increases. Ad-\nditionally, it is worth noting that the performance\
    \ of the proposed algorithm approximates\nthe performance of the perfectly estimated\
    \ case.\nAgriculture 2023, 13, 1149\n10 of 13\nAgriculture 2023, 13, x FOR PEER\
    \ REVIEW \n10 of 13 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 6. SU’s\
    \ averaged capacity versus total power. \nFigure 7 illustrates the impact of the\
    \ number of subcarriers on the SU’s averaged ca-\npacity. The performance of OFDM\
    \ increases as the number of subcarriers increases. Ad-\nditionally, it is worth\
    \ noting that the performance of the proposed algorithm approxi-\nmates the performance\
    \ of the perfectly estimated case. \n \n \n \n \n \n \n \n \n \n \n \n \nFigure\
    \ 7. SU’s averaged capacity versus number of subcarriers. \n Perfect channel knowledge\
    \ \n Proposed EERAA \n0.005\n0.01\n0.015\n0.02\n0.025\n0.03\n0.035\n0.04\n0\n\
    1\n2\n3\n4\n5\n6\nTotal power limitted (Watt)\nAverage capacity per subcarrier\n\
    \ \n \n perfect channel knowlede\nEM estimation 5th iteration\nEM estimation 3rd\
    \ iteration\nEM estimation 1st iteration\n Perfect channel knowledge \n  Proposed\
    \ EERAA \n  RASI \n JRA \n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n50\n3\n3.5\n4\n\
    4.5\n5\n5.5\nNumber of subcarriers\nAverage capacity per subcarrier\n \n \nperfect\
    \ channel knowledge\nEM estimation 5th iteration\nProposed EERAA \n Perfect channel\
    \ knowledge \nFigure 6. SU’s averaged capacity versus total power.\n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \nFigure 6. SU’s averaged capacity versus total\
    \ power. \nFigure 7 illustrates the impact of the number of subcarriers on the\
    \ SU’s averaged ca-\npacity. The performance of OFDM increases as the number of\
    \ subcarriers increases. Ad-\nditionally, it is worth noting that the performance\
    \ of the proposed algorithm approxi-\nmates the performance of the perfectly estimated\
    \ case. \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 7. SU’s averaged capacity\
    \ versus number of subcarriers. \n Perfect channel knowledge \n Proposed EERAA\
    \ \n0.005\n0.01\n0.015\n0.02\n0.025\n0.03\n0.035\n0.04\n0\n1\n2\n3\n4\n5\n6\n\
    Total power limitted (Watt)\nAverage capacity per subcarrier\n \n \n perfect channel\
    \ knowlede\nEM estimation 5th iteration\nEM estimation 3rd iteration\nEM estimation\
    \ 1st iteration\n Perfect channel knowledge \n  Proposed EERAA \n  RASI \n JRA\
    \ \n0\n5\n10\n15\n20\n25\n30\n35\n40\n45\n50\n3\n3.5\n4\n4.5\n5\n5.5\nNumber of\
    \ subcarriers\nAverage capacity per subcarrier\n \n \nperfect channel knowledge\n\
    EM estimation 5th iteration\nProposed EERAA \n Perfect channel knowledge \nFigure\
    \ 7. SU’s averaged capacity versus number of subcarriers.\nFigure 8 illustrates\
    \ energy consumption per node in terms of number of clusters and\nnetwork size.\
    \ It is evident from this ﬁgure that, as the number of clusters increases, the\n\
    energy consumption decreases. It is also clear that the energy consumption of\
    \ WSN with\nthe proposed algorithm is approximately three times lower than the\
    \ conventional WSN\nthat does not use the proposed algorithm.\nAgriculture 2023,\
    \ 13, 1149\n11 of 13\nFigure 8 illustrates energy consumption per node in terms\
    \ of number of clusters and \nnetwork size. It is evident from this figure that,\
    \ as the number of clusters increases, the \nenergy consumption decreases. It\
    \ is also clear that the energy consumption of WSN with \nthe proposed algorithm\
    \ is approximately three times lower than the conventional WSN \nthat does not\
    \ use the proposed algorithm. \n \nFigure 8. Energy consumption versus number\
    \ of clusters and network size. \n6. Conclusions \nThis paper presented an EERAA\
    \ algorithm for CR-WSN-based smart irrigation sys-\ntems. The proposed algorithm\
    \ addresses the challenge of prolonging the WSN’s lifetime \nby reducing energy\
    \ consumption while achieving high secondary users’ average capacity. \nThe algorithm\
    \ performs power allocation and subcarrier assignment sequentially and \nconsiders\
    \ the effect of ICI. We formulated the maximization of system capacity under re-\n\
    alistic scenarios with power and interference constraints. Simulation results\
    \ indicate that \nthe proposed EERAA algorithm outperforms the conventional approaches\
    \ by reducing \nnetwork energy consumption by up to 30% while maintaining high\
    \ average capacity. The \nnumerical analysis and simulation results confirm that\
    \ EERAA can prolong the lifetime \nof WSN-based smart irrigation systems and enhance\
    \ their energy efficiency. \nIn conclusion, the proposed EERAA algorithm can effectively\
    \ address the energy ef-\nficiency and spectrum utilization challenges in CR-WSN-based\
    \ smart irrigation systems. \nThis research provides a valuable contribution towards\
    \ achieving sustainable agricultural \npractices by developing efficient resource\
    \ allocation algorithms for smart irrigation systems.  \nFuture research can explore\
    \ the implementation of the proposed algorithm in real-\nworld scenarios and evaluate\
    \ its performance in various wireless communication appli-\ncations. Future research\
    \ directions can further investigate the integration of advanced ma-\nchine learning\
    \ techniques into the proposed EERAA algorithm for CR-WSN-based smart \nirrigation\
    \ systems. This can involve exploring the use of reinforcement learning or deep\
    \ \nlearning algorithms to enhance the adaptive and autonomous decision-making\
    \ capabili-\nties of the system. Additionally, the scalability and robustness\
    \ of the algorithm can be \nFigure 8. Energy consumption versus number of clusters\
    \ and network size.\n6. Conclusions\nThis paper presented an EERAA algorithm for\
    \ CR-WSN-based smart irrigation sys-\ntems. The proposed algorithm addresses the\
    \ challenge of prolonging the WSN’s lifetime\nby reducing energy consumption while\
    \ achieving high secondary users’ average capacity.\nThe algorithm performs power\
    \ allocation and subcarrier assignment sequentially and\nconsiders the effect\
    \ of ICI. We formulated the maximization of system capacity under\nrealistic scenarios\
    \ with power and interference constraints. Simulation results indicate that\n\
    the proposed EERAA algorithm outperforms the conventional approaches by reducing\n\
    network energy consumption by up to 30% while maintaining high average capacity.\
    \ The\nnumerical analysis and simulation results conﬁrm that EERAA can prolong\
    \ the lifetime of\nWSN-based smart irrigation systems and enhance their energy\
    \ efﬁciency.\nIn conclusion, the proposed EERAA algorithm can effectively address\
    \ the energy\nefﬁciency and spectrum utilization challenges in CR-WSN-based smart\
    \ irrigation systems.\nThis research provides a valuable contribution towards\
    \ achieving sustainable agricultural\npractices by developing efﬁcient resource\
    \ allocation algorithms for smart irrigation systems.\nFuture research can explore\
    \ the implementation of the proposed algorithm in real-\nworld scenarios and evaluate\
    \ its performance in various wireless communication appli-\ncations. Future research\
    \ directions can further investigate the integration of advanced\nmachine learning\
    \ techniques into the proposed EERAA algorithm for CR-WSN-based\nsmart irrigation\
    \ systems. This can involve exploring the use of reinforcement learning\nor deep\
    \ learning algorithms to enhance the adaptive and autonomous decision-making\n\
    capabilities of the system. Additionally, the scalability and robustness of the\
    \ algorithm\ncan be studied in larger-scale deployments and under diverse environmental\
    \ conditions.\nFurthermore, the investigation of novel sensor technologies and\
    \ network architectures\ncan also contribute to the advancement of CR-WSNs in\
    \ smart agriculture. By addressing\nthese research areas, we can pave the way\
    \ for more efﬁcient and sustainable agricultural\npractices while ensuring optimal\
    \ resource utilization and environmental conservation.\nAgriculture 2023, 13,\
    \ 1149\n12 of 13\nFunding: This research was funded by the Deputyship for Research\
    \ and Innovation, Ministry of\nEducation in Saudi Arabia, grant number ISP22-43.\n\
    Institutional Review Board Statement: Not available.\nData Availability Statement:\
    \ No data availability statements are available.\nAcknowledgments: The authors\
    \ extend their appreciation to the Deputyship for Research and\nInnovation, Ministry\
    \ of Education in Saudi Arabia, for funding this research work through project\n\
    number ISP22-43.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nVallejo-Gómez, D.; Osorio, M.; Hincapié, C.A. Smart Irrigation\
    \ Systems in Agriculture: A Systematic Review. Agronomy 2023, 13, 342.\n[CrossRef]\n\
    2.\nQuimbita, W.; Toapaxi, E.; Llanos, J. Smart Irrigation System Considering\
    \ Optimal Energy Management Based on Model\nPredictive Control (MPC). Appl. Sci.\
    \ 2022, 12, 4235. [CrossRef]\n3.\nSharifnasab, H.; Mahrokh, A.; Dehghanisanij,\
    \ H.; Łazuka, E.; Łagód, G.; Karami, H. Evaluating the Use of Intelligent Irrigation\n\
    Systems Based on the IoT in Grain Corn Irrigation. Water 2023, 15, 1394. [CrossRef]\n\
    4.\nAl-Sadoon, M.E.; Jedidi, A.; Al-Raweshidy, H. Dual-Tier Cluster-Based Routing\
    \ in Mobile Wireless Sensor Network for IoT\nApplication. IEEE Access 2023, 11,\
    \ 4079–4094. [CrossRef]\n5.\nZhu, M.; Xu, W.; Guo, N.; Wei, Z. Joint Sensor Localization\
    \ and Data Collection in UAV-Assisted Wireless Sensor Network. In\nProceedings\
    \ of the 2022 14th International Conference on Wireless Communications and Signal\
    \ Processing (WCSP), Nanjing,\nChina, 14–17 October 2022; pp. 894–899. [CrossRef]\n\
    6.\nBochem, A.; Zhang, H. Robustness Enhanced Sensor Assisted Monte Carlo Localization\
    \ for Wireless Sensor Networks and the\nInternet of Things. IEEE Access 2022,\
    \ 10, 33408–33420. [CrossRef]\n7.\nXu, P. A Brief Overview of Wireless Sensor\
    \ Networks for Internet of Things. In Proceedings of the 2022 2nd International\n\
    Conference on Networking, Communications and Information Technology (NetCIT),\
    \ Manchester, UK, 26–27 December 2022; pp.\n54–57. [CrossRef]\n8.\nAnand, L.;\
    \ Seetha, P.S.J.; Juliana, R.; Kumar, P.N.; Parasa, G. Evaluation of Wireless\
    \ Sensor Networks Module using IoT Approach.\nIn Proceedings of the 2023 Third\
    \ International Conference on Artiﬁcial Intelligence and Smart Energy (ICAIS),\
    \ Coimbatore, India,\n2–4 February 2023; pp. 1543–1546. [CrossRef]\n9.\nHassan,\
    \ E.S. Adaptive Threshold to Guarantee both Detection and False Alarm Probabilities\
    \ in Multi-taper-based Spectrum\nSensing. J. Frankl. Inst. 2019, 356, 1640–1657.\
    \ [CrossRef]\n10.\nJoon, R.; Tomar, P. Cognitive Radio Wireless Sensor Networks:\
    \ A Survey. In Proceedings of the 2022 Fifth International Conference\non Computational\
    \ Intelligence and Communication Technologies (CCICT), Sonepat, India, 8–9 July\
    \ 2022; pp. 216–222. [CrossRef]\n11.\nSarthi, D.; Gurjar, S.; Sai, C.; Pattanayak,\
    \ P.; Bhardwaj, A. Performance Impact of Hardware Impairments on Wireless Powered\n\
    Cognitive Radio Sensor Networks. IEEE Sens. Lett. 2020, 4, 7500704. [CrossRef]\n\
    12.\nNing, B.; Sun, G.; Li, J.; Zhang, A.; Hao, W.; Yang, S. Resource Allocation\
    \ in Multi-User Cognitive Radio Network with Stackelberg\nGame. IEEE Access 2020,\
    \ 8, 58260–58270. [CrossRef]\n13.\nWang, Y.; Wang, Y.; Zhou, F.; Wu, Y.; Zhou,\
    \ H. Resource Allocation in Wireless Powered Cognitive Radio Networks Based on\
    \ a\nPractical Non-Linear Energy Harvesting Model. IEEE Access 2017, 5, 17618–17626.\
    \ [CrossRef]\n14.\nRai, P.; Ghose, M.K.; Sarma, H.K.D. Game Theory Based Energy\
    \ Efﬁcient Routing in Cognitive Radio Wireless Sensor Networks.\nIn Proceedings\
    \ of the 2020 IEEE International Symposium on Smart Electronic Systems (iSES)\
    \ (Formerly iNiS), Chennai, India,\n14–16 December 2020; pp. 35–39. [CrossRef]\n\
    15.\nHassan, E.S. Multi-Carrier Communication Systems with Examples in MATLAB®:\
    \ A New Perspective; CRC Press: Boca Raton, FL,\nUSA; Taylor & Francis: Abingdon,\
    \ UK, 2015; ISBN 9781498735322.\n16.\nKumar, G.P.; Dileep, M.; Satyanarayana,\
    \ B.V.V.; Manikanta, S.P. Modiﬁed Channel Estimation Techniques for DCT based\
    \ OFDM\nSystems. In Proceedings of the 2022 International Conference on Computer\
    \ Communication and Informatics (ICCCI), Coimbatore,\nIndia, 23–25 June 2022;\
    \ pp. 1–6. [CrossRef]\n17.\nZohra, S.; Abdelhaﬁd, A.; Yassine, N.I.; Fadela, B.\
    \ Performance Evaluation of a Broadband MIMO-CP-OFDM Communication\nSystem in\
    \ the context of 5G-and-Beyond-3GPP deﬁned Fading Channels. In Proceedings of\
    \ the 2022 2nd International Conference\non Innovative Research in Applied Science,\
    \ Engineering and Technology (IRASET), Meknes, Morocco, 3–4 March 2022; pp. 1–5.\n\
    [CrossRef]\n18.\nKapula, P.R.; Bandani, A.K.; Bollampally, A.; Rajesh, P.; Sravani,\
    \ P.; Dubey, S. Error Performance of MIMO-OFDM Communication\nSystem. In Proceedings\
    \ of the 2022 6th International Conference on Trends in Electronics and Informatics\
    \ (ICOEI), Tirunelveli,\nIndia, 28–30 April 2022; pp. 487–491. [CrossRef]\n19.\n\
    Dang, V.-H.; Nguyen, L.-M.; Vo, V.N.; Tran, H.; Ho, T.D.; So-In, C.; Sanguanpong,\
    \ S. Throughput Optimization for Noma Energy\nHarvesting Cognitive Radio With\
    \ Multi-UAV-Assisted Relaying Under Security Constraints. IEEE Trans. Cogn. Commun.\
    \ Netw.\n2022, 9, 82–98. [CrossRef]\nAgriculture 2023, 13, 1149\n13 of 13\n20.\n\
    Rezaie, M.; Dosaranian-Moghadam, M.; Bakhshi, H.; Bibalan, M.H. Achievable Rates\
    \ and Resource Allocation for CDMA-Based\nOverlay Cognitive Radio With RF Energy\
    \ Harvesting. IEEE Syst. J. 2023, 17, 1137–1145. [CrossRef]\n21.\nAl-Medhwahi,\
    \ M.; Hashim, F.; Ali, B.M.; Sali, A.; Alkholidi, A. Resource allocation in heterogeneous\
    \ cognitive radio sensor\nnetworks. Int. J. Distrib. Sens. Netw. 2019, 15, 1550147719851944.\
    \ [CrossRef]\n22.\nShaat, M.; Bader, F. Computationally Efﬁcient Power Allocation\
    \ Algorithm in Multicarrier-based Cognitive Radio Networks:\nOFDM and FBMC systems.\
    \ EURASIP J. Adv. Signal Process. 2010, 2010, 528378. [CrossRef]\n23.\nZhou, L.;\
    \ Xu, W.; Wang, C.; Chen, H.-H. RIS-Enabled UAV Cognitive Radio Networks: Trajectory\
    \ Design and Resource Allocation.\nInformation 2023, 14, 75. [CrossRef]\n24.\n\
    Cai, B.; Zhang, Q.; Ge, J.; Xie, W. Resource Allocation for Cognitive LEO Satellite\
    \ Systems: Facilitating IoT Communications.\nSensors 2023, 23, 3875. [CrossRef]\
    \ [PubMed]\n25.\nYadav, R.; Singh, K.; Kumar, A. Optimal Power Allocation for\
    \ Achieving Secure Green Cognitive Radio Networks. Electronics\n2022, 11, 1952.\
    \ [CrossRef]\n26.\nZhang, H.; Le Ruyet, D.; Roviras, D.; Medjahdi, Y.; Sun, H.\
    \ Spectral Efﬁciency Comparison of OFDM/FBMC for Uplink Cognitive\nRadio Networks.\
    \ EURASIP J. Adv. Signal Process. 2010, 2010, 14. [CrossRef]\n27.\nHassan, E.S.\
    \ Reduced-Complexity Selective Mapping for Improving Wireless Communication in\
    \ Smart Irrigation Systems. Wirel.\nPers. Commun. 2023, 129, 2653–2667. [CrossRef]\n\
    28.\nAbd El-Hamid, Z.; Hassan, E.S.; Zekry AH, A.; Elagooz, S.S.; Samir, M.; Abd\
    \ El-Samie, F.E. New multiple-input multiple-output-\nbased ﬁlter bank multicarrier\
    \ structure for cognitive radio networks. IET Commun. 2019, 13, 1514–1523. [CrossRef]\n\
    29.\nFilippou, M.C.; Ropokis, G.A.; Gesbert, D.; Ratnarajah, T. Joint Sensing\
    \ and Reception Design of SIMO Hybrid Cognitive Radio\nSystems. IEEE Trans Wirel.\
    \ Commun. 2016, 15, 6321–6341. [CrossRef]\n30.\nHong, M.; Razaviyayn, M.; Luo,\
    \ Z.-Q.; Pang, J.-S. A uniﬁed algorithmic framework for block-structured optimization\
    \ involving\nbig data: With applications in machine learning and signal processing.\
    \ IEEE Signal Process. Mag. 2016, 33, 57–77. [CrossRef]\n31.\nBellanger, M. Filter\
    \ banks and OFDM/OQAM for high throughput wireless LAN. In Proceedings of the\
    \ 3rd International\nSymposium on Communications, Control and Signal Processing.\
    \ ISCCSP 2008, St. Julian’s, Malta, 12–14 March 2008; pp. 758–761.\n32.\nMedjahdi,\
    \ Y.; Terre, M.; Le Ruyet, D.; Roviras, D.; Nossek, J.A.; Baltar, L. Inter-cell\
    \ Interference Analysis for OFDM / FBMC\nSystems. In Proceedings of the 10th IEEE\
    \ Signal Processing Workshop (SPAWC 2009), Perugia, Italy, 21–24 June 2009; pp.\
    \ 598–602.\n33.\nLu, W.; Nan, T.; Gong, Y.; Qin, M.; Liu, X.; Xu, Z.; Na, Z. Joint\
    \ Resource Allocation for Wireless Energy Harvesting Enabled\nCognitive Sensor\
    \ Networks. IEEE Access 2018, 6, 22480–22488. [CrossRef]\nDisclaimer/Publisher’s\
    \ Note: The statements, opinions and data contained in all publications are solely\
    \ those of the individual\nauthor(s) and contributor(s) and not of MDPI and/or\
    \ the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury\
    \ to\npeople or property resulting from any ideas, methods, instructions or products\
    \ referred to in the content.\n"
  inline_citation: '>'
  journal: Agriculture
  limitations: '>'
  pdf_link: https://www.mdpi.com/2077-0472/13/6/1149/pdf?version=1685426423
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Energy-Efficient Resource Allocation Algorithm for CR-WSN-Based Smart Irrigation
    System under Realistic Scenarios
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3389/fpls.2023.1239594
  analysis: '>'
  authors:
  - Debabrata Singh
  - Anil Kumar Biswal
  - Debabrata Samanta
  - Vijendra Singh
  - Seifedine Kadry
  - Awais Khan
  - Yunyoung Nam
  citation_count: 4
  full_citation: '>'
  full_text: ">\nSmart high-yield tomato\ncultivation: precision\nirrigation system\
    \ using\nthe Internet of Things\nDebabrata Singh 1, Anil Kumar Biswal 2*, Debabrata\
    \ Samanta 3,\nVijendra Singh 4, Seifedine Kadry 5,6,7,8, Awais Khan 9\nand Yunyoung\
    \ Nam 9*\n1Department of Computer Application (CA), Institute of Technical Education\
    \ and Research (ITER),\nSiksha ‘O’Anusandhan (SOA) Deemed to be University, Bhubaneswar\
    \ (BBSR), Odisha, India,\n2Department of Computer Science and Engineering (CSE),\
    \ Institute of Technical Education and\nResearch (ITER), Siksha ‘O’Anusandhan\
    \ (SOA) Deemed to be University, Bhubaneswar (BBSR),\nOdisha, India, 3Department\
    \ of Computing and Information Technologies, RIT Kosovo (A.U.K),\nRochester Institute\
    \ of Technology – RIT Global, Kosovo, Albania, 4School of Computer Science,\n\
    University of Petroleum and Energy Studies, Dehradun, India, 5Department of Applied\
    \ Data Science,\nNoroff University College, Kristiansand, Norway, 6Artiﬁcial Intelligence\
    \ Research Center (AIRC), Ajman\nUniversity, Ajman, United Arab Emirates, 7Department\
    \ of Electrical and Computer Engineering,\nLebanese American University, Byblos,\
    \ Lebanon, 8MEU Research Unit, Middle East University,\nAmman, Jordan, 9Department\
    \ of ICT Convergence, Soonchunhyang University,\nAsan, Republic of Korea\nThe\
    \ Internet of Things (IOT)-based smart farming promises ultrafast speeds and near\n\
    real-time response. Precision farming enabled by the Internet of Things has the\n\
    potential to boost efﬁciency and output while reducing water use. Therefore, IoT\n\
    devices can aid farmers in keeping track crop health and development while also\n\
    automating a variety of tasks (such as moisture level prediction, irrigation system,\n\
    crop development, and nutrient levels). The IoT-based autonomous irrigation\n\
    technique makes exact use of farmers’ time, money, and power. High crop yields\n\
    can be achieved through consistent monitoring and sensing of crops utilizing a\n\
    variety of IoT sensors to inform farmers of optimal harvest times. In this paper,\
    \ a\nsmart framework for growing tomatoes is developed, with inﬂuence from IoT\n\
    devices or modules. With the help of IoT modules, we can forecast soil moisture\n\
    levels and ﬁne-tune the watering schedule. To further aid farmers, a smartphone\
    \ app\nis currently in development that will provide them with crucial data on\
    \ the health of\ntheir tomato crops. Large-scale experiments validate the proposed\
    \ model’s ability to\nintelligently monitor the irrigation system, which contributes\
    \ to higher tomato yields.\nKEYWORDS\nadvanced network, Internet of Things (IoT),\
    \ crop water requirement, smart agriculture, ml\nAbbreviations: IoT, Internet\
    \ of Things; 5G, ﬁfth generation; WSNs, wireless sensor networks; FAO, Food and\n\
    Agriculture Organization; SM, soil moisture; GA, genetic algorithm; LAI, leaf\
    \ area index; CC, canopy cover;\nNSO, National Statistical Ofﬁce; ET, evapotranspiration;\
    \ CDMA, code division multiple access; WCDMA,\nwideband code division multiple\
    \ access; TDMA, time division multiple access; OFDM, orthogonal frequency\ndivision\
    \ multiplexing; BDMA, beam division multiple access; GSM, Global System for Mobile\n\
    Communication; LTE, long-term evolution; PSTN, public switched telephone network;\
    \ MIMO, multiple-\ninput multiple-output; WiMAX, Worldwide Interoperability for\
    \ Microwave Access.\nFrontiers in Plant Science\nfrontiersin.org\n01\nOPEN ACCESS\n\
    EDITED BY\nMuhammad Fazal Ijaz,\nSejong University, Republic of Korea\nREVIEWED\
    \ BY\nParvathaneni Naga Srinivasu,\nPrasad V. Potluri Siddhartha Institute of\n\
    Technology, India\nZari Farhadi,\nUniversity of Tabriz, Iran\nDebaleena Datta,\n\
    University of Engineering and\nManagement, India\n*CORRESPONDENCE\nAnil Kumar\
    \ Biswal\nanil.biswal123@gmail.com\nYunyoung Nam\nynam@sch.ac.kr\nRECEIVED 13\
    \ June 2023\nACCEPTED 25 July 2023\nPUBLISHED 22 August 2023\nCITATION\nSingh\
    \ D, Biswal AK, Samanta D,\nSingh V, Kadry S, Khan A and Nam Y (2023)\nSmart high-yield\
    \ tomato cultivation:\nprecision irrigation system using the\nInternet of Things.\n\
    Front. Plant Sci. 14:1239594.\ndoi: 10.3389/fpls.2023.1239594\nCOPYRIGHT\n© 2023\
    \ Singh, Biswal, Samanta, Singh, Kadry,\nKhan and Nam. This is an open-access\n\
    article distributed under the terms of the\nCreative Commons Attribution License\n\
    (CC BY). The use, distribution or\nreproduction in other forums is permitted,\n\
    provided the original author(s) and the\ncopyright owner(s) are credited and that\n\
    the original publication in this journal is\ncited, in accordance with accepted\n\
    academic practice. No use, distribution or\nreproduction is permitted which does\
    \ not\ncomply with these terms.\nTYPE Original Research\nPUBLISHED 22 August 2023\n\
    DOI 10.3389/fpls.2023.1239594\n1 Introduction\nIn recent years, no other invention\
    \ has generated as much\nexcitement in the computing world as the Internet. Because\
    \ of its\ntremendous strength and breadth of uses, it is virtually ubiquitous\n\
    in every sector of human endeavor (Kumar et al., 2017; Poyen et al.,\n2020; Terence\
    \ and Purushothaman, 2020). People and\norganizations have connected with amazing\
    \ agility and\nconvenience in recent years, thanks to a vast 5G network of\nwireless\
    \ sensor networks (WSNs), healthcare services, cellphones,\nand various sorts\
    \ of pervasive real-time monitoring systems\n(Lakshmiprabha and Govindaraju, 2019;\
    \ Hassan et al., 2021). The\nhuman population is expanding at an alarming rate,\
    \ but at the same\ntime, pollution is slowly depleting the earth’s water and land\n\
    supplies. Smart agriculture is seen as playing a crucial role in\nresponding to\
    \ these issues. Smart agriculture has the potential to\nvastly enhance both the\
    \ agroecological setting and the yield and\nquality of agricultural products while\
    \ simultaneously decreasing the\nneed for harmful chemical fertilizers and pesticides\
    \ (Zhang et al.,\n2022). The use of ICTs to automate and intelligently manage\n\
    agricultural cultivation and production is central to the concept\nof “smart agriculture.”\
    \ In particular, wireless communications play\na signiﬁcant role in the growth\
    \ of agriculture, and each new\ngeneration of wireless communication technology\
    \ propels farming\ntoward a higher level of intelligence.\nPeople and objects\
    \ may connect in real-time thanks to the 5G\nnetwork-based Internet of Things\
    \ (IoT), which provides important\nservices and value to millions of people across\
    \ the world (Guevara\net al., 2020; Biswal et al., 2021). 5G network-based IoT\
    \ has\ndeveloped organically into a gigantic technology platform. South\nAmerica\
    \ has initiated a yearly warm-season tomato yield that\nbelongs to the Solanaceae\
    \ family (Van Eck et al., 2019; Kumar\net al., 2022).\nDespite requiring high\
    \ amounts of fertilizer, tomato is a\npopular or demanding plant due to its health\
    \ signiﬁcance to the\nwhole world, with high levels of antioxidants such as carotenoid,\n\
    lycopene, and vitamins C and A and phenolic compounds, which\nprovide a wide range\
    \ of health advantages for the consumers\n(Campestrini et al., 2019; Samanta et\
    \ al., 2020; Chen P. et al.,\n2021). Tshiala and Olwoch reported that tomatoes\
    \ have been used\nin food preparation throughout the world as fresh vegetables\
    \ or as\nspices. It has a vital role in the Ethiopian marketing of vegetables\n\
    (Guodaar et al., 2020; Biswas et al., 2021). The production of\ntomatoes was used\
    \ as a job opportunity and as an income source\nfor producers.\nNutrient and water\
    \ supplies have a signiﬁcant impact on tomato\nquality, and their highest water\
    \ demand is quoted in an unpublished\npaper. Some poisonous elements and inorganic\
    \ substances that are\ndangerous to people can demonstrate water quality (Sanjuan-Delm´\n\
    as et al., 2020; Chen P. et al., 2021). This may be a problem for\nirrigation\
    \ using municipal wastewater. Although municipal\nwastewaters have been applied\
    \ as much as possible to irrigation,\nthey contain comparatively maximum sodium\
    \ quantities that can\nbe accumulated with this wastewater and have toxic effects\
    \ on plant\nsoils during optimized irrigation (Jayalakshmi and Gomathi, 2019;\n\
    Leuther et al., 2019; Casadei et al., 2021). The various types of crop\ngrowth\
    \ models are extremely useful in optimizing irrigation\npractices which are based\
    \ on physical or semi-empirical equations\nfor simpliﬁcation of the complex mechanism\
    \ and also having many\nparameters in the process (Sanjuan-Delm´as et al., 2020).\
    \ Because\nof its balance of simplicity, accuracy, and robustness, the AquaCrop\n\
    model developed by the Food and Agriculture Organization (FAO)\nhas provided a\
    \ method for calculating crop yields and optimal\nirrigation scheduling for various\
    \ crops in different climates. In the\ncurrent real-time model, parameters like\
    \ soil moisture (SM), crop\ncultivation, leaf area index (LAI), or canopy cover\
    \ (CC) are\ncollected using various remote sensing devices. As a result, this\n\
    real-time cultivation process is an upgraded and fully dynamic\nversion of the\
    \ traditional models (Leuther et al., 2019; Chen P.\net al., 2021).\nA fast and\
    \ dependable Internet connection is necessary for\nagricultural IoT devices to\
    \ function. The current generation of\nmobile networks is failing due to insufﬁcient\
    \ connectivity in rural\nareas, and even in areas with high-speed access, failure\
    \ occurs due to\nmassive demand. According to a recent survey, nearly 80% of rural\n\
    areas, even in the United Kingdom, are outside of the 4G range. The\ncurrent degree\
    \ of network access in rural areas is insufﬁcient in most\nnations (Tang et al.,\
    \ 2021). In addition, in some developed\ncountries, there are multiple farms with\
    \ a large number of IoT\ndevices and machines that require a constant reliable\
    \ high-speed\nInternet connection to exchange a large amount of data, and the\n\
    technologies of the current generation of mobile networks cannot\ncope with these\
    \ demands (Singh et al., 2022). To fulﬁll these goals,\nmany promising technologies,\
    \ such as massive multiple-input\nmultiple-output (MIMO), network slicing, and\
    \ smaller cells, are\nneeded to provide reliable connectivity over a larger distance.\n\
    Therefore, the smart mobile network is well suited to support\nsmart farming by\
    \ enabling wide coverage, low-energy\nconsumption, low-cost devices, and high\
    \ spectrum efﬁciency.\nUnfortunately, the IoT-based network’s usage of microwaves\n\
    (MWs) as carriers limits its ability to cover wide areas. The\nintroduction of\
    \ small base stations spaced at roughly 250 m\nintervals over coverage regions\
    \ that can be extended to any size\nallows for continuous connectivity, thanks\
    \ to the small cell\nconcept. In order to link the bigger areas, the related small\n\
    towers can be placed everywhere (on lamp posts, in trees, on\nroofs, on tops of\
    \ vehicles, etc.). Similar to 4G, this implementation\nmakes use of the massive\
    \ MIMO approach by equipping nodes\nwith many antennas for sending and receiving\
    \ data in order to\nincrease the network’s capacity. On the other hand, huge MIMO\n\
    makes signal interference more likely. Beamforming is used to\nincrease the throughput\
    \ of transmitted data and thereby solve this\nissue. Beamforming refers to an\
    \ antenna’s capability of directing\nfocused beams of radio waves at speciﬁc targets.\
    \ An advanced\nInternet connection provides very high (MW) operating\nfrequencies,\
    \ and the accompanying high bandwidth makes it\npossible for larger and more rapid\
    \ data transactions. In contrast\nto the static channels used by the 4G network,\
    \ the cognitive radio\napproach used by the smart network allows for device-speciﬁc\n\
    channel allocation.\nSingh et al.\n10.3389/fpls.2023.1239594\nFrontiers in Plant\
    \ Science\nfrontiersin.org\n02\nIn 2017, for the ﬁrst time, the 5G RuralFirst\
    \ project successfully\nplanted and harvested a crop using autonomous tractors\
    \ to sow\nseeds, drones to monitor crops, and machines to apply water,\nfertilizer,\
    \ and pesticides. The entire procedure was carried out\nwithout the need for any\
    \ laborers. Another initiative, Hands Free\nHectare, claimed a successful harvest\
    \ in 2018 (Al-Ghobari and\nMohammad, 2011). With greater technological breakthroughs,\
    \ 5G\nis projected to promote precision farming. As IoT-based network\ncoverage\
    \ grows, agricultural sector producers will beneﬁt greatly,\nallowing them to\
    \ manage farms, animals, and other assets from the\ncomfort of their own homes,\
    \ thanks to their big capacity, fast data\nspeed, and low latency. Smart technology\
    \ will help to advance IoT\nsensor connectivity to the next level, paving the\
    \ way for\nunprecedented innovation in smart farming components.\nImplementing\
    \ technology to automate, track, and monitor\nagricultural processes is a wise\
    \ solution to the irrigation problem.\nThe traditional irrigation method is fully\
    \ automated by using IoT\nintegration modules. However, with an advanced network\
    \ on the\nhorizon, smart agriculture will take off with lightning-fast\ndata transfer.\n\
    To improve farm produce quality, smart farming combines\ntraditional agronomic\
    \ practices with the IoT. The application of\nnew technology in agriculture can\
    \ assist farmers in reducing labor\nand costs while increasing crop yield and\
    \ production. To facilitate\nall of these agricultural beneﬁts, the IoT includes\
    \ a wide range of\ncomponents under digital and automated technologies. So, IoT-\n\
    based connectivity will vastly increase the impact due to low latency,\nhigh bandwidth,\
    \ and support for many sensors communicating at\nthe same time.\nThe IoT technology\
    \ platform already helps to increase\nproductivity and ensure proper resource\
    \ utilization through\nprecision agriculture. The implementation of IoT, on the\
    \ other\nhand, will help to accelerate the entire process with machine-to-\nmachine\
    \ services. The real-time data transfer capabilities of the IoT\nmodule can aid\
    \ in the rapid operation of these solutions, making\ndecision-making quick, robust,\
    \ data-oriented, and real-time. With\nan IoT-based network, these devices can\
    \ send real-time data about\nthe need for optimal irrigation, spoilt crops, and\
    \ their location to\nfollow-up machinery. Farmers can save time and money by\n\
    harvesting crops quickly and effectively with automated irrigation\nfor tomato\
    \ crop cultivation.\nThe key contributions of this paper are as follows:\n•\n\
    An efﬁcient IoT-based framework is proposed for tomato\ncultivation.\n•\nMoisture\
    \ levels in the soil are predicted with the help of IoT\nmodules to optimize the\
    \ irrigation system.\n•\nA mobile application is also developed that can help\
    \ farmers\nby providing useful information.\nThe remaining parts of the paper\
    \ are arranged as follows. Section\n2 discusses the literature review. Section\
    \ 3 explains the things used\nfor designing smart farming solutions. Section 4\
    \ details the proposed\nsystem and the methodology. The simulation setup and results\n\
    analyses are described in Section 5. Section 6 concludes the paper.\n2 Literature\
    \ review\nChen et al. (2019) discussed the proper utilization of water for\nthe\
    \ growth of tomatoes by using the fuzzy neural network with a\ngenetic algorithm\
    \ (GA). It predicted the volume of irrigation based\non the effect of greenhouse\
    \ and the growth of crops (Guha et al.,\n2021). Rodrı́guez et al (Rodr´ıguez-Ortega\
    \ et al., 2019). developed a\nsoilless technique to yield tomato crops through\
    \ the treatment of\nsalinity. Here, the salinity treatment was speciﬁcally used\
    \ to\nimprove the production of vegetables and nutritional imbalance\n(psychological\
    \ of plants) for crops. Zhai et al. (2015) proposed an\nidea for the cultivation\
    \ of tomatoes using saline water and the\nblossom-end rot technique. Implementing\
    \ these two yield methods\nenhanced the level of production.\nIn the study of\
    \ Shao et al. (2014), two levels of irrigation\ntechniques were designed for heavy\
    \ rain shelters and drainage\ntreatments for improving the productivity of crops.\
    \ An optimum\nirrigation management technique was designed for yielding quality\n\
    tomatoes through the proper arrangement of rain shelters (Keswani\net al., 2020;\
    \ Maroli et al., 2021; Mousavi et al., 2021). In the study of\nGil et al. (2019),\
    \ the smart grid system monitored the precision for\nirrigation of water on demand\
    \ using IoT. The authors added\ndesalination and solar energy processes in the\
    \ agricultural system\nfor efﬁcient cultivation.\nKrishna et al. (2017) designed\
    \ a smart farming method for\nintelligent water-saving irrigation using the Raspberry\
    \ Pi module\nand sensors. So, it automated the yielding of crops in a higher range\n\
    that regulates through IoT modules. Qiu et al. (2020) implemented\nan in-depth\
    \ process to collect phenotypic parameters for measuring\nthe growth of tomatoes.\
    \ This system precisely calculated the\ndeﬁciency of water level and fertilizer\
    \ with the help of a neural\nnetwork algorithm for the growth cycle of tomato\
    \ (Khamparia et al.,\n2020; Biswal et al., 2021). An intelligent irrigation system\
    \ was\ndeﬁned as the water requirement for the yielding of tomatoes\nduring a\
    \ various range of climate states by Mason et al. (2019). In\nthis study, smart\
    \ irrigation was used in an adverse situation through\nproper integration of the\
    \ IoT module, sensors, and connectionless\nenvironments (Chen M. et al., 2021).\n\
    In the agriculture industry, 4G/3G/NB-IoT wireless network\ntechnology is used\
    \ to connect IoT-based smart devices for the\npurposes of data sharing, precise\
    \ assessment, accurate calculation,\netc (Dell’Uomo and Scarrone, 2002). Although\
    \ the 3G/4G\nnetworking paradigm has shown much promise, there are still\nseveral\
    \ obstacles that may prevent it from being used to its full\npotential in the\
    \ agriculture sector. One of the main restraints is the\navailable working space.\
    \ Existing wireless networks do not reach out\nto rural areas or dense urban neighborhoods.\
    \ Channel\ncircumstances, resource allocation, ﬂuctuating data rates, and\nhandoff\
    \ problems between diverse networks all make it difﬁcult to\nfacilitate quality\
    \ of service (QoS) in 4G networks (Payaswini and\nManjaiah, 2014; Payero et al.,\
    \ 2017). Mobile devices in this network\nhave a short lifespan due to the utilization\
    \ of many antennas and\ntransmitters. Many modern agricultural sectors rely on\
    \ battery-\npowered technologies like drones and robots, but these have limited\n\
    usefulness in far-ﬂung crop ﬁelds. The number of IoT devices used\nSingh et al.\n\
    10.3389/fpls.2023.1239594\nFrontiers in Plant Science\nfrontiersin.org\n03\nin\
    \ smart farming, as well as the amount of research done on these\ndevices, is\
    \ growing rapidly, necessitating greater intelligence, speed,\nscalability, secure\
    \ communication capabilities, and processing\npower to handle the numerous complex\
    \ computational tasks and\nheavily utilized services. Having ultralow latency\
    \ in addition to high\nconnection is necessary for IoT devices to achieve quick\n\
    performance and low costs.\nThe current 4G networks (LTE) are limited in their\
    \ ability to\nenable such functionalities because they only permit connectivity\n\
    through IP-based packet switching (Zhaogan et al., 2007). The shift\nto 5G cellular\
    \ networks will eliminate these problems caused by\nprevious generations of wireless\
    \ technology. Due to advancements\nin 5G connectivity, farmers now have the option\
    \ of remotely\npiloting a drone over extensive distances, either manually or via\n\
    predetermined checkpoints (Faraci et al., 2018; Sinha and\nDhanalakshmi, 2022).\
    \ A farmer can get high-deﬁnition video\nstreams and other critical sensory data\
    \ and telemetry from drones\nin real time over the 5G cellular network, which\
    \ is more efﬁcient\nand reliable than previous-generation mobile networks\n(Bhattacharya\
    \ and De, 2021). Due to 5G technology, drones will\nnot need to carry a lot of\
    \ computing power and instead can upload\ntheir data to the cloud, where it will\
    \ be processed more quickly.\nTo demonstrate the importance of smart agriculture,\n\
    Thilakarathne et al. (2023) show a cloud-enabled, low-cost\nsensorized Internet\
    \ of Things platform for monitoring and\nautomating processes related to a tomato\
    \ plantation in a\ncontrolled indoor setting. We hope that the information gleaned\n\
    from this study will be used as a foundation for advancing smart\nagriculture\
    \ solutions that boost productivity and quality and pave\nthe way for a more sustainable\
    \ future.\nUsman et al. (2022) present a 6G use case for plant health\nmonitoring\
    \ using a terahertz (THz)-signal-based integrated\nsensor and communication system.\
    \ Precision agriculture is best\nunderstood as a smart management system with\
    \ the capacity to\ntrack and regulate plant health and water levels on both a\n\
    microscopic and a macro scale. The objective is to maximize\noutput while minimizing\
    \ waste of scarce resources. THz-based\nsensing technology, which can evaluate\
    \ plant health on a cellular\nlevel, combined with wireless sensor networks installed\
    \ within\ncrops to monitor multiple variables while making intelligent\ndecisions,\
    \ could have signiﬁcant implications for agriculture. A\nsustainable communication\
    \ infrastructure that takes into account\nthe needs of dispersed and adaptable\
    \ agricultural settings is\nnecessary for the integration and operation of such\
    \ a macro–\nnano-sensor system.\n3 Materials and methods\nThe growth and productivity\
    \ of plants depend mainly on how\nmuch water is formed during the seedling phase.\
    \ During this time,\nwater demand has an important effect on crops, which have\
    \ many\nenvironmental aspects like temperature, quality of soil, etc. The\napplication\
    \ of IoT in agriculture is limitless, which provides various\nintelligent devices\
    \ to improve yielding performance and proﬁt\n(Gomathy et al., 2020; Sivakumar\
    \ et al., 2020). However, there are\nvarious issues with investing in smart cultivation\
    \ and also difﬁculty\nin the development of agriculture-related IoT apps (Kamienski\n\
    et al., 2019; Conesa et al., 2021).\na) Hardware unit:\nThe information will inﬂuence\
    \ the development of IoT\nsolutions for farming, and there is a need to select\
    \ sensors to\ncreate the custom device that will collect data for the proposed\n\
    solution (Althar and Samanta, 2021; Guha and Samanta, 2021;\nZhang et al., 2021).\
    \ However, the quality of the sensors has a crucial\npart in production which\
    \ depends on the exactness of the collected\ndata and its consistency.\nb) Brain\
    \ unit:\nSmart agriculture should be used as data analytics for a design\nsolution\
    \ that will be helpful if yeomen cannot make sense of it, so\nthere is a need\
    \ to use powerful data analytics techniques and relate\npredictive algorithms\
    \ and machine learning methods for\ncollecting data.\nc) Maintenance unit:\nHardware\
    \ maintenance is a signiﬁcant challenge for IoT-based\nagriculture, while the\
    \ sensors are commonly used in the crop ﬁeld.\nThere are more chances for damaged\
    \ sensors, which needs to be\naddressed by making a smart device that is robust\
    \ and easy to\nsustain. Otherwise, it needs to be replaced with another sensor.\n\
    d) Mobility stage:\nSmart farming applications can be remotely monitored through\n\
    a smartphone or desktop computer for transmitting related yielding\ninformation\
    \ to the owner (Maheswari et al., 2021; Mekala et al.,\n2021). The integration\
    \ of devices should be autonomous and also\ncover enough wireless range to communicate\
    \ and send data to the\ncentral server.\ne) Infrastructure unit:\nA solid and\
    \ robust internal infrastructure needs to ensure that\nthe intelligent cropping\
    \ process performs well and securely handles\nthe data load in it.\nIf the process\
    \ disables the security, someone easily breaks the\nentire system and steals related\
    \ data or controls intelligent devices.\n3.1 Agricultural/crop production system\n\
    The cultivation model can be used to monitor or calculate the\namount of native\
    \ agricultural products, depending upon the\ncultivated area and supported by\
    \ the decision support system\n(Nagarajan and Minu, 2018). Figure 1 shows the\
    \ agricultural/crop\nproduction prediction factors.\nThe number of exports and\
    \ imports of agricultural products can\nbe derived from the prediction model of\
    \ the National Statistical\nOfﬁce’s (NSO) statistics database as depicted in this\
    \ section. The\nagricultural product crop and yielded area models are worked under\n\
    the production of the smart agricultural prediction model, which\nevaluates the\
    \ updated method as well as the predecessor observation\nmethod to reinterpret\
    \ it.\nlnAx,t = a0 + a1lnRPx,t−1 + a2lnRPy,t + a3lnAx,t−1\n(1)\nSingh et al.\n\
    10.3389/fpls.2023.1239594\nFrontiers in Plant Science\nfrontiersin.org\n04\nwhere\
    \ Ax,t is seeding in x yield design at t year, Ax,t−1 is seeding\nin x yield design\
    \ at t−1 year, RPx,t−1 is the marketplace value in x\nyield design at t−1 year,\
    \ and RPy,t is the market place value in y yield\ndesign at t year.\nY Dx,t =\
    \ b0 + b1WT1\nx,t + b2WT2\nx,t\n(2)\nwhere Y Dx,t is the crop in x yield design\
    \ at t year, WTx,t\n1 is the\nweather (temperature) in x yield design at t year,\
    \ and WTx,t\n2 is the\nclimate (amount of rainfall) in x yield design at t year.\n\
    The quantity of domestic products is the summation of\nagricultural products of\
    \ all individual yield areas and each\nfunctional value of it (Gurunath et al.,\
    \ 2018; Mohanty et al., 2019;\nBenyezza et al., 2021). The agricultural product\
    \ amount is the\nmultiplication of the ﬁeld with the crop model.\nThe demand method\
    \ of the crop is the multiplication of the\ndemand method per method in addition\
    \ to the demands of the\nwhole community. The resource purposes of agricultural\
    \ products\ndepend on export and import scenarios and other supporting\nfactors,\
    \ as depicted in Figure 1. The above equations must follow\n“Nerlove’s partial\
    \ adjustment model,” and the regional weather\ninformation can help concede the\
    \ prediction although there are\nsome missing values (El-Zawily et al., 2019).\n\
    3.2 Challenges in the purpose system\nDespite the many advantages that the 3G/4G\
    \ networking\nparadigm offers, there are still several obstacles that prevent\
    \ it\nfrom being used to its full potential in the agriculture industry.\nSpace\
    \ constraints pose serious problems. Current wireless networks\nare unable to\
    \ reach more remote places or crowded metropolitan\nneighborhoods. Supporting\
    \ the quality of service (QoS) in 4G\nnetworks is difﬁcult due to channel conditions,\
    \ resource\nallocation, varying data rates, and handoff problems between\nheterogeneous\
    \ networks. Due to the heavy use of antennae and\ntransmitters in this network,\
    \ the lifespan of mobile devices is short.\nIn order for Internet of Things devices\
    \ to deliver quick performance\nat low prices, ultralow latency must be paired\
    \ with a strong\nconnection. Due to the limitations of IP-based packet switching\n\
    connectivity on the existing 4G network (LTE), such features are\nnow unavailable.\
    \ These issues, which have plagued earlier\ngenerations of cellular networks,\
    \ will be eradicated with the\ntransition to IoT-based networks.\nDue to its massive\
    \ data capacity and speeds greater than 10 Gbps,\nIoT-based connection will be\
    \ able to link billions of devices. For both\ndownload and upload speeds, 5G networks\
    \ are expected to be up to 100\ntimes faster than their 4G and 4G LTE predecessors.\
    \ 5G can connect\nbillions of devices due to its increased bandwidth, in addition\
    \ to its large\ndata capacity and speeds faster than 10 Gbps. The download and\
    \ upload\nspeeds of IoT-based networks will be up to 100 times faster than those\
    \ of\n4G and 4G LTE networks. Consequently, a 2-h movie that would take 6\nmin\
    \ to download on 4G would take less than 4 s to download on an\nadvanced network.\
    \ Technical speciﬁcations for 5G are being developed\nby the International Telecommunication\
    \ Union (ITU). The uplink peak\ndata rate is 10 Gbps, and the downlink peak data\
    \ rate is 20 Gbps per\nmobile station. Therefore, an IoT-enabled network is used\
    \ for the\nInternet of Things-based smart irrigation system, which allows for\n\
    remote monitoring of soil moisture and watering.\n3.3 Mobile application\nA mobile\
    \ application is accessed by farmers on farms. Using this\napplication, we can\
    \ make predictions utilizing insight data and the\ncollected cultivation insights\
    \ data (Dhanush et al., 2017; Hota et al.,\n2020; Maheswari et al., 2021). The\
    \ mobile application will provide\ncrop-relevant information like crop health\
    \ alerts, pest control, and\nwarehouse inventory managing warnings as shown below.\
    \ The key\nfeatures of mobile applications are as follows:\n•\nobserving yield\
    \ health facts (nutrient levels, pH levels, etc.)\nthrough the functionality of\
    \ yield inspection (Ahmadi et al.,\n2019),\n•\nthe application of organizing fertilizer\
    \ and insecticides for\nthe farm (Kiryushin, 2019),\n•\nautomating the irrigation\
    \ system and controlling water\nlevels as well as soil health over the farm (Al-Ali\
    \ et al.,\n2019; Li et al., 2020), and\n•\ntracing yield records and checking\
    \ warehouse details (bin\ninventories) (Quitaleg and Ortiz, 2020).\nFIGURE 1\n\
    Crop-related and supply prediction factors.\nSingh et al.\n10.3389/fpls.2023.1239594\n\
    Frontiers in Plant Science\nfrontiersin.org\n05\n3.4 Impact of water quality on\
    \ tomato yield\nTomato yield is a broad view that encompasses the interactions\n\
    of various single-quality attributes. Irrigation water salinity\nenhanced tomato\
    \ amounts, fruit thickness, soluble solids, total\nacid, vitamin C, and the sugar–acid\
    \ ratio (Magán et al., 2008).\nFresh tomato yield, canopy diameter, fruit water\
    \ content,\ntomato ﬁrmness, and calcium and nitrogen concentrations\ndecreased\
    \ as water salinity levels increased, whereas increasing\nsalinity levels increased\
    \ texture strength (Shao et al., 2014). In\naddition, saline water irrigation\
    \ increased tomato fruit’s total\nsoluble solids and acidity (pH) by 11.1% and\
    \ 6.9%, respectively.\n3.5 Role of the contactless IR sensors for\ntomato crop\
    \ growth measurement\nThe contactless IR sensors are used to produce infrared\n\
    radiation to measure the plant’s growth from its stem, whereas\nthe radiation\
    \ is converted into some amount of electricity and is less\nthan 10 cm from the\
    \ target. In the proposed system, sensors are\nplaced more than 10 cm from the\
    \ plant, which will measure growth\nby using a method based on the speculation\
    \ of infrared energy. The\nIR sensors are ﬁtted with infrared ﬁlters to avoid\
    \ outside disturbing\nlight. IR sensors are ﬁtted to measure the thickness growth\
    \ of\ntomato crops through the analog output voltage. The energy\nradiations of\
    \ infrared sensors are transformed into distance data,\nwhich is not directly\
    \ propositional to distance data.\n4 Proposed system and methods\nThe evapotranspiration\
    \ (ET) crop is described as the amount of\nwater necessary for the perfect growth\
    \ of various crops in\nconnection with the lack of water by evapotranspiration\
    \ which is\ndiscussed in this system. The demand for yielding waters refers to\n\
    an optimally developed harvest, so that a consistent, disease-free\ncrop is actively\
    \ cultivated and completely sheltered. An advanced\nnetwork can connect billions\
    \ of devices due to its increased\nbandwidth, in addition to its large data capacity\
    \ and speeds faster\nthan 10 Gbps. The download and upload speeds of smart networks\n\
    will be up to 100 times faster than those of 4G and 4G LTE\nnetworks. So, this\
    \ method is advantageous in addition to IoT\nmodules, which gives a perfect way\
    \ to produce tomatoes in the\nseasonal and non-seasonal periods. The cultivation\
    \ process is\nmainly inﬂuenced by the following situations like weather, yield\n\
    type, and development stage of the harvest, which is depicted in\nFigures 2, 3.\n\
    The proposed system is integrated with the following\ncomponents which are described\
    \ below:\ni. Arduino Uno microcontroller:\nIt is an open-source microcontroller\
    \ that can be programmed\nby writing C or C++ code to control the overall system\
    \ automation.\nAfter installing and programming the Arduino, it is ready to collect\n\
    the number of inputs from IR moisture soil sensors and also provide\na remote\
    \ command to control the irrigation system. However, this\nmicrocontroller remotely\
    \ controls the overall execution process.\nii. NIR-soil moisture sensor:\nSoil\
    \ moisture is a main attribute of soil and an important soil\nproperty that plays\
    \ a vital role in a variety of farming activities,\nhydrological processes, and\
    \ environmental concerns. A near-\ninfrared (NIR) reﬂectance sensor is created\
    \ for the calculation of\nmoisture levels in the soil by implementing two light-emitting\n\
    diodes (LEDs) of different wavelengths: one with a wavelength of\n1,945 nm and\
    \ a strong water absorption band and the other with a\nwavelength of 1,850 nm\
    \ and a weak water absorption band. It is\nlinked to an Arduino controller to\
    \ record the moisture level of the\nsoil. Accordingly, it gives instructions to\
    \ the water controller for\nirrigation in the tomato cultivation land.\niii. Pinolex\
    \ drip automatic water controller:\nThe smart ﬂower irrigation timer is an efﬁcient\
    \ way to manage\nand control tomato crop irrigation needs. When you go on vacation\n\
    or anywhere, an automatic water timer is set by the Arduino\nmicrocontroller,\
    \ which is useful for watering tomato cultivation.\nIt ﬁts a 3/4-inch (19 mm)\
    \ thread tap. It can water the plants\nregularly, even when no one is at home,\
    \ and thus improve their\nsurvival rate.\niv. Wi-Fi access point:\nFIGURE 2\n\
    The proposed system for the smart irrigation of tomato yields.\nSingh et al.\n\
    10.3389/fpls.2023.1239594\nFrontiers in Plant Science\nfrontiersin.org\n06\nA\
    \ high-speed Ethernet wire links a router to an access point,\nwhich transforms\
    \ a connection-oriented signal into a\nconnectionless signal. Connectionless connectivity\
    \ is typically the\nonly available option for base stations, which use Wi-Fi to\
    \ establish\nlinks with destination devices. As a result, the Wi-Fi service is\
    \ linked\nto the 5G Internet, and it then provides a direct link with the end\n\
    user to remotely monitor and control automatic irrigation as well as\ntomato crop\
    \ cultivation.\n4.1 Working principle of the model\nThe purpose model generally\
    \ performs the operation in the\nfollowing steps:\nStep 1:\nFirst of all, the\
    \ NIR contactless sensor observes the moisture\nlevel of the soil. As a result,\
    \ it is connected near the tomato plant to\ncollect soil moisture. A ﬁeld’s soil\
    \ moisture status is critical for\nmaking planting, fertilizer application, and\
    \ irrigation decisions.\nStep 2:\nSecondly, the moisture levels are observed through\
    \ the Arduino\nUno module, which is also linked with a Wi-Fi access point to send\n\
    all the data to the mobile applications with the help of 5G\ntechnology. The 5G\
    \ network helps to gather the moisture levels\nthrough the cloud service and automatically\
    \ regulates the\nirrigation system.\nStep 3:\nWhen the moisture level is monitored\
    \ through the mobile app,\nthen the drip irrigation system is smartly controlled\
    \ through the\n5G-enabled IoT module (Arduino Uno microcontroller).\n4.2 Evaporation\
    \ and\ntranspiration processes\nEvaporation and transpiration happen at the same\
    \ time, and\nthere is no way to talk about them separately. The fraction of solar\n\
    radiation that reaches the cropped soil surface is used to calculate\nevaporation.\
    \ However, once the crop has matured to the point that\nit completely covers the\
    \ soil surface, transpiration becomes the ﬁrst\nprocess. IoT module sensors properly\
    \ calculate the moisture level of\nthe soil with the help of the calculation process\
    \ of ET.\nEvapotranspiration is commonly deﬁned in mm/time, and\nwater quantity\
    \ lost from a cropped plane is deﬁned in water\ndepth units. Because 2 hectares\
    \ has an area of 20,000 m2 and 2\nmm equals 0.002 m, a loss of 2 mm of water corresponds\
    \ to a loss of\n10 m3 of water per hectare. Finally, 2 mm day−1 corresponds to\
    \ 10\nm3 ha−1 day−l.\nThe quantity of energy received per unit area can also be\
    \ used to\ncharacterize water depths, with energy referring to the amount of\n\
    heat or energy required to evaporate free water. The latent heat of\nevaporation\
    \ (l) varies with the temperature of water. At 21°C, for\nexample, l is approximately\
    \ 2.50 MJ kg−1. To put it another way,\n2.50 MJ is required to evaporate 2 kg\
    \ or 0.002 m3 of water.\n4.3 Impact of weather on the yielding\nwater requires\
    \ reference crop\nevapotranspiration ETo\nThe main impact of weather information\
    \ on crop water\nrequirements is sunshine, temperature, moisture, and wind speed.\n\
    FIGURE 3\nTest scenario of the irrigation system.\nSingh et al.\n10.3389/fpls.2023.1239594\n\
    Frontiers in Plant Science\nfrontiersin.org\n07\nThe reference crop evapotranspiration\
    \ deﬁnes the evaporation energy\nof the atmosphere (ETo). Reference crop evapotranspiration,\
    \ also\nknown as reference evapotranspiration, is the evapotranspiration\nrate\
    \ from a reference surface that is not deﬁcient in water and is\nexpressed as\
    \ ETo.\nETo values measured in distinct locations or climates are\nequivalent\
    \ because they indicate identical reference surfaces.\nThese variables inﬂuencing\
    \ ETo can be parameters for climate,\nwhich can be measured using climate information.\
    \ ETo intimates at\na given location, the evaporating energy of the atmosphere.\n\
    In this research domain, different techniques are available for\ncalculating ETo.\
    \ It is tested either by an evapotranspiration pan or\ntheoretically by using\
    \ calculated weather information.\n4.3.1 Saucepan (pan) evaporation technique\n\
    The saucepan evaporation technique allows an environment to\nmonitor the combined\
    \ inﬂuence of temperature, moisture, wind\nspeed, and sunlight on the reference\
    \ yield evapotranspiration ETo.\nThe various evaporation pans are class A evaporation\
    \ pan and\nSunken Colorado pan. The evaporation saucepan is used in the\nfollowing\
    \ equation:\nETo = Kpan \x01 Epan\n(3)\nwhere Kpan is the pan coefﬁcient, Epan\
    \ is the pan evaporation,\nand ETo is the reference yield evapotranspiration.\n\
    4.3.2 Blaney–Criddle technique\nThe Blaney–Criddle method is a theoretical technique\
    \ to\ndetermine the reference yield evapotranspiration ETo, and more\nliterary\
    \ techniques have been used, but many of them were locally\ncalculated. If the\
    \ process is accessed locally, if it is available or if\nlocal procedures are\
    \ not available, then the theoretical method is\nused for the calculation.\nETo\
    \ = P(0:46Tmean + 8)\n(4)\nTmax = omonth(max)\nNdays=month\nTmin = omonth(min)\n\
    Ndays=month\nTmean = Tmax+Tmin\n2\n(5)\nWhere ETo = 1 month of average period,\n\
    Tmean = regular temperature, and\nP = regular proportion of yearly day time periods.\n\
    4.4 Impact of yield type on yield water\nrequires Kc\nThe single crop coefﬁcient\
    \ Kc plays a signiﬁcant role in crop\ncharacteristics as well as the averaged\
    \ effects of soil evaporation.\nAverage crop coefﬁcients are more relevant and\
    \ convenient than Kc\ncomputed on a daily time step using a separate crop and\
    \ soil\ncoefﬁcient for normal irrigation planning and management,\ndevelopment\
    \ of basic irrigation schedules, and most hydrologic\nwater balance studies (Farg\
    \ et al., 2012). The impact of yield type on\nthe yielding water requires dealing\
    \ with the yield type and the\ndevelopment yield stage on water needs. The ﬁeld\
    \ is harvested\nbetween the relationship of reference grown yield and grown yield.\n\
    ETY ield = ETo \x01 Kc\n(6)\nwhere ETYield = yield evapotranspiration process\
    \ (month/day),\nKc = yield inﬂuence, and ETo = reference evapotranspiration. Here,\n\
    ETYield and ETo are stated in equal units in month/day.\n4.4.1 Manipulation of\
    \ the overall growing stage\nFrom the beginning of transplantation to the last\
    \ day, the\noverall growing stage of the crop is determined. It is primarily\n\
    inﬂuenced by the following:\n•\nthe various harvest and its multiplicity,\n•\n\
    the condition of the weather, and\n•\nthe different stages of planting on the\
    \ ﬁeld.\n4.4.2 Manipulation of growth stages\nThe manipulation of the overall\
    \ growing stages of yield is\ndivided into four stages:\n•\nthe analysis of the\
    \ yield ﬁrst stage,\n•\nthe observation of the yield development stage in a ﬁeld,\n\
    •\nthe mid-time cultivation stage, and\n•\nthe late-time growth stage of the crop.\n\
    4.5 Different steps of estimation of the\ncrop water requirement\nThe analysis\
    \ of the requirement of aquatic crops ETcrop is\nevaluated as:\nETcrop = ETo \x01\
    \ Kc\n(7)\n4.5.1 Yield of water quantity requirement of\ntomatoes\nTable 1 shows\
    \ the given details of the crop.\nMethod of calculation:\nStep 1: The distinct\
    \ growth stages of crop estimation are\nconsidered (see Table 2).\nStep 2: The\
    \ month-wise tomato crop’s growth stages are\nobserved (see Table 3).\nStep 3:\
    \ The Kc factor for each of the four stages is estimated as\n(López-López et\
    \ al., 2014):\nKc, the starting stage of the crop = 0.45\nKc, the development\
    \ stage of the crop = 0.75\nKc, the mid–time stage of the crop = 1.15\nKc, the\
    \ late–time stage of the crop = 0.8\nSingh et al.\n10.3389/fpls.2023.1239594\n\
    Frontiers in Plant Science\nfrontiersin.org\n08\nTable 4 shows the Kc values.\n\
    Nov − Kc : Nov = 0:45Dec − 5day : Kc = 0:4525days : Kc = 0:75\nDec − Kc : Kc =\
    \ 5\n30 0:45 + 25\n30 0:75 = 0:07 + 0:62 = 0:69 ≃ 0:7\nJan − 15days : Kc = 0:75  15days\
    \ : Kc = 1:15,\nJan : Kc = 15\n30 0:75 + 15\n30 1:15 = 0:38 + 0:58 = 0:96 ≃ 0:95\n\
    Thus, Kc − Jan = 0:95, Feb − Kc = 0:95, Mar − 5days : Kc = 1:1525days :\nKc =\
    \ 0:80\nKc : Mar = 5\n30 1:15 + 25\n30 0:80 = 0:19 + 0:67 = 0:86 ≃ 0:85\nStep\
    \ 4:\nTable 4 shows the crop water requirement calculated on a\nmonthly basis.\n\
    Nov  =  5:0 \x01 0:45  =  2:25 mm=days\nDec  =  4:5 \x01 0:70  =  3:15 mm=days\n\
    Jan  =  4:0 \x01 0:95  =  3:8 mm=days\nFeb  =  5:0 \x01 1:15  =  5:75 mm=days\n\
    Mar  =  5:8 \x01 0:85  =  4:93 mm=days\nStep 5: Calculation of crop water requirement\
    \ monthly.\nEvery month is supposed to have 30 days.\nNov = ET yield = 30 \x01\
    \ 2:02 = 60 mm=month\nDec = ET yield = 30 \x01 2:8 = 84 mm\nJan = ET yield =  30\
    \ \x01 4:75 = 143 mm\nFeb = ET yield = 30 \x01 6:67 = 200 mm\nMar = ET yield =\
    \ 30 \x01 5:04 = 151 mm\nTABLE 1 The given details of the crop.\nMonth (mm)\n\
    November\nDecember–January\nFebruary\nMarch\nApril\nMay\nETo (mm/day of crop)\n\
    5.0\n4.5–4.0\n5.0\n5.8\n6.3\n6.8\nMoisture state\nMedium state\n(60%)\n–\n–\n\
    –\n–\nWind speed\nMedium state\n(3 m/s)\n–\n–\n–\n–\nThe growing interval (from\
    \ the period of sowing): 150 days\nThe speciﬁc date of planting: 1 February (direct\
    \ sowing)\nThis symbol means null or empty.\nTABLE 2 The distinct growth stages\
    \ of crop estimation.\nYield\ntype\nFinal growing session\n(days)\nYield starting\n\
    stage\nYield growing\nstage\nMid-time stage of\nyield\nLate-time stage of\nyield\n\
    Tomatoes\n150\n35\n40\n50\n25\nTABLE 3 Crop: tomato planting date: 1 November.\n\
    Month (mm)\nNovember\nDecember\nJanuary\nFebruary\nMarch\nApril\nMay\nETO (mm/day\
    \ of crop)\n5.0\n4.5\n4.0\n5.0\n5.8\n6.3\n6.8\nGrowth stages\nInitial crop and\
    \ development\nMid-time stage\nLast session\nCrop sowing date\n1 November\nStarting\
    \ stage of the crop, 35 days\n1 November–5 December\nDevelopment stage of the\
    \ crop, 40 days\n6 December–15 January\nMid-time stage of growth, 50 days\n16\
    \ January–5 February\nLate–time stage of growth, 25 days\n6 February–30 March\n\
    Last day of crop growth\n31 March\nSingh et al.\n10.3389/fpls.2023.1239594\nFrontiers\
    \ in Plant Science\nfrontiersin.org\n09\nTable 4 shows the water requirement for\
    \ the complete growing\ntime of tomato crop, which is 638 mm.\n5 Simulation setup\
    \ and results analysis\nIn the proposed system, the related experimental data\
    \ are received\nthrough the installed soil moisture and humidity sensor from the\n\
    tomato crop ﬁeld. The NIR REES52 Soil Sensor is used to collect the\npercentage\
    \ of moisture in the soil. Based on this,an irrigation process is\nautomated with\
    \ a developed mobile application which is depicted in\nFigure 4. By using this\
    \ app, the status of soil moisture and the growth of\nplants can be dynamically\
    \ observed, and the irrigation method can also\nbe controlled. Similarly, the\
    \ plant growth parameters like maximum\nheight, width, and diameter of the stem\
    \ of the tomato plant are\nmeasured using an infrared sensor. This is tested in\
    \ a regional area\n28 m in length and 7 m in width, but the experimental site\
    \ is portioned\ninto two rows, and tomatoes are planted 4 m in length and 1.2\
    \ m in\nwidth zone. On the other hand, 50-cm-high PVC plates are applied for\n\
    separation from communities, and a 50-cm row spacing is followed for\nthe plantation\
    \ of tomatoes. Data are captured continuously from the\nﬁeld of cultivation. The\
    \ fog nodes are implemented for sensing data in\nthe area of cultivation. The\
    \ overall implementation of the proposed\nwork is depicted in Figure 5.\nThe cultivation\
    \ time to the collection period is from 1\nNovember 2020 to 18 April 2021, as\
    \ depicted in Figure 6, but it is\ndrawn from the above data (Table 4), which\
    \ is deﬁned in step 5. The\ncultivation of the tomato growth period is evaluated\
    \ as the crop\nsowing period to seedling period (November 1 to December 5), the\n\
    development stage of the crop period (December 6 to January 15),\nthe mid-time\
    \ stage (ﬂowering) of the growth period (January 16 to\nFebruary 5), and the late-time\
    \ stage of growth (fruiting and mature\npicking) period (February 6 to March 30).\
    \ The analysis of irrigation\ndata for tomato cropping depends on the relevant\
    \ factor of the soil\nmoisture sensor at 22 cm depth. This measure predicts the\
    \ volume\nof irrigation.\nBy the observation of moisture level from the above,\
    \ Table 5\nshows a dynamic way of the automatic required level of irrigation\n\
    for tomato cultivation (Figure 7).\nTable 6 shows a feature-wise comparison of\
    \ this paper with the\nexisting literature. The existing work has been mostly\
    \ considered\nunder normal cultivation methods. However, in the proposed work,\n\
    it is found that 5G technology is integrated with the IoT module. As\na result,\
    \ the irrigation system is working intelligently for\nthe cultivation.\nIn Table\
    \ 7, we can see how the 5G network stacks up against\nother existing network generations.\
    \ High-deﬁnition video streaming\nand telephony were made possible on the road\
    \ by 4G networks, an\nimprovement above 3G. As network trafﬁc has increased, the\n\
    theoretical maximum for 4G speeds has been reached. According\nto the ITU, the\
    \ most recent 5G use cases fall into one of three\ncategories: ultrareliable low\
    \ latency communications (URLLC),\nmassive machine type communications (mMTC),\
    \ and enhanced\nmobile broadband (eMBB).\nTable 8 shows that Odisha is in the\
    \ ﬁfth position all over India.\nThis table shows only the seasonal production\
    \ of tomatoes in India.\nIf the display of tomatoes is required to produce in\
    \ non-seasonal\nduration (August to October), then the state Odisha is considered\
    \ in\nthe third position. The implementation of the intelligent cultivation\n\
    method improves the situation in the production table.\nTable 9 shows the exportation\
    \ of tomatoes from India to other\ncountries. The export is done in the seasonal\
    \ duration of\nproduction, but it is required to export in a non-seasonal period\n\
    through intelligent irrigation techniques. Table 10 shows the\nimportation of\
    \ tomatoes to India in the case of seasonal duration.\nThe IoT-based intelligent\
    \ irrigation method provides a technique to\ncultivate tomatoes in the non-seasonal\
    \ period, so that there is no\nneed to import from outside of the country, which\
    \ gives better\nperformance than the traditional cultivation process.\n6 Conclusion\
    \ with future work\nIn this approach, traditional ﬁelds such as agriculture require\n\
    technology (here, smart farming) to achieve higher crop yields with\nless human\
    \ intervention in a limited time frame. Smart farming, on\nthe other hand, necessitates\
    \ signiﬁcant investment, improved\ncoverage and connectivity, and more bandwidth\
    \ to manage the\nTABLE 4 The water requirement for the complete growing time of\
    \ tomato crop is 638 mm.\nMonth (mm)\nNovember\nDecember\nJanuary\nFebruary\n\
    March\nApril\nMay\nETo\n(mm/day of crop)\n5.0\n4.5\n4.0\n5.0\n5.8\n6.3\n6.8\n\
    Growth stages\nInitial crop and development\nMid-time stage\nLast session\nKc\
    \ per month\n0.45\n0.70\n0.95\n1.15\n0.85\nETo\n(mm/day of crop)\n2.25\n3.15\n\
    3.8\n5.57\n4.93\nETo\n(mm/month of crop)\n60\n84\n143\n200\n151\nSingh et al.\n\
    10.3389/fpls.2023.1239594\nFrontiers in Plant Science\nfrontiersin.org\n10\nmassive\
    \ amount of data generated by a huge number of sensors and\nequipment deployed\
    \ remotely. Although the 4G network has a huge\ncapacity and adequate coverage,\
    \ it is unable to transmit the massive\namount of real-time data between a large\
    \ number of devices. The\nintroduction of 5G meets current criteria and demands\
    \ in smart\nfarming to boost output with minimal human effort. Thus, the\nproduction\
    \ of tomatoes mostly suffers due to improper\nmanagement of moisture levels and\
    \ irrigation.\nTo overcome this problem, a smart irrigation system was\nproposed\
    \ by using the IoT framework. The required moisture\nD\nA\nB\nC\nFIGURE 4\nSmart\
    \ Irrigation Mobile App System. (A) App interface for monitoring various options.\
    \ (B) Overview of various status of sensors. (C) Map of cultivation\narea. (D)\
    \ Monitor soil moisture and crop status.\nSingh et al.\n10.3389/fpls.2023.1239594\n\
    Frontiers in Plant Science\nfrontiersin.org\n11\nD\nA\nB\nC\nFIGURE 5\nOverall\
    \ Implementation of Irrigation System in the Field. (A) Irrigation pipe setup\
    \ in between crops. (B) Automated water pump setup machine. (C)\nDrip irrigation\
    \ in single row view. (D) Drip irrigation in a double row view.\nA\nB\nFIGURE\
    \ 6\nPlot denotes the effect of (A) tomato yield on crop water requiring Kc per\
    \ month and (B) weather on crop water requiring ETo.\nSingh et al.\n10.3389/fpls.2023.1239594\n\
    Frontiers in Plant Science\nfrontiersin.org\n12\nTABLE 5 This is a calculated\
    \ 41-day tabular record representation from the growing interval of 150 days after\
    \ transplanting and also the percentage\nof soil moisture.\nDays after transplanting\n\
    Percentage (%) of soil moisture\nDays after transplanting\nPercentage (%) of soil\
    \ moisture\n29\n100\n98\n53\n32\n87\n101\n51\n35\n63\n104\n49\n38\n37\n107\n48\n\
    41\n23\n110\n45\n44\n18\n113\n43\n47\n27\n116\n46\n50\n42\n119\n47\n53\n57\n122\n\
    50\n56\n35\n125\n48\n59\n67\n128\n46\n62\n70\n131\n44\n65\n61\n134\n43\n68\n54\n\
    137\n47\n71\n48\n140\n46\n74\n42\n143\n47\n77\n40\n146\n48\n80\n41\n150\n49\n\
    83\n45\n86\n50\n89\n54\n92\n56\n95\n57\nFIGURE 7\nThe daily soil moisture percentage\
    \ (%) during the experiment.\nSingh et al.\n10.3389/fpls.2023.1239594\nFrontiers\
    \ in Plant Science\nfrontiersin.org\n13\nlevels and the amount of water were predicted\
    \ to improve the\nproduction of tomato yield. IoT modules were used to optimally\n\
    evaluate the requirement for water amount and smartly process the\nirrigation\
    \ system. A mobile application was also developed that can\nhelp farmers by providing\
    \ useful information. Extensive\nexperimental results indicated that the proposed\
    \ model can\nsmartly optimize the irrigation system which helps to improve\ntomato\
    \ production. Based on the simulation results and analyses of\npreviously stored\
    \ data, our platform could be used to generate\nimportant analytics of real-time\
    \ monitoring, enabling decisions and\nactions like managing the irrigation system\
    \ or building alters, for\nexample. Throughout our trial, we have only encountered\
    \ a few\nrestrictions, such as the need for a reliable power source and\nwireless\
    \ connectivity to communicate with the cloud. A\ncomparison of the proposed model\
    \ and other existing networks\nwas included in the manuscript as shown in Table\
    \ 6.\nIn the near future, we will implement the proposed framework for\nother\
    \ crops. Additionally, we will evaluate the suggested framework in\na simulated\
    \ environment by combining the nodes and transferring data\nbased on criteria\
    \ such as lifetime, throughput, and latency. More\napplication-speciﬁc case studies\
    \ would be helpful in tailoring the\ngeneral framework for QoS assurance.\nTABLE\
    \ 6\nComparison of the proposed technique with the existing techniques.\nModel\n\
    Approach\nData\nObjective\nAdvantages\nLimitations\nProposed\nprecision\nirrigation\n\
    system using\nthe IoT-\nbased model\nand mobile\napp\nThe 5G-enabled IoT-based\n\
    model is used to provide\nprecision irrigation and fast\ncommunication between\n\
    various nodes.\nMoisture level and\ncrop coefﬁcient\n(Kc) are followed\nfor the\
    \ smart\nirrigation system.\nSmartly cultivate tomato in the regional ﬁeld\nwith\
    \ the help of IoT-based technology.\nThrough 5G technology\nand a mobile app,\
    \ it can\ncontrol the operation of\nthe drip irrigation system\nremotely.\nEnergy\n\
    conservation of\nthe IoT module\nwith a suitable\ncommunication\nprotocol and\n\
    also applicable\nto other crops\nwill be designed\nin the near\nfuture.\nGenetic\n\
    optimization\nT-S fuzzy\nneural\nnetwork\nmodel (Chen\net al., 2019)\nThe modiﬁed\
    \ genetic\nalgorithm is used to\noptimize the weights and\nthresholds of the T-S\
    \ fuzzy\nneural network. Finally, the\ngenetic optimization T-S\nfuzzy neural\
    \ network is\nutilized to simulate and\nestimate the irrigation\nvolume for greenhouse\n\
    tomatoes based on the real\ndata set.\nThe experimental\ndata were collected\n\
    at the\nXiaotangshan\nNational Precision\nAgriculture\nResearch and\nDemonstration\n\
    Base’s tomato\nsunshine\ngreenhouse in\nBeijing’s\nChangping\nDistrict.\nA water-saving\
    \ irrigation decision-making\nalgorithm based on genetic optimization T-S\nfuzzy\
    \ neural network was developed to\noptimize greenhouse tomato irrigation water\n\
    resource consumption.\nWe also used the revised\ngenetic algorithm to tune\nthe\
    \ initial weights and\nthresholds of the T-S fuzzy\nneural network.\nFurthermore,\
    \ using the real\ndata set, we assessed the\naccuracy of the GA-\nTSFNN by simulating\
    \ and\npredicting greenhouse\ntomato irrigation volume.\nThe\noptimization\nalgorithm\
    \ and\nconstraint\noperators are\nnot properly\nincluded, which\nis why it is\n\
    required to be\nimproved.\nIoT-based\nmodel using\nRaspberry Pi\n(Krishna\net\
    \ al., 2017)\nA unique wireless mobile\nrobot based on the Internet\nof Things\
    \ (IoT) is created\nand implemented to\nperform diverse ﬁeld\noperations.\nThe\
    \ various data\nare collected\nthrough all the\nsensors such as\nthermo hygro\n\
    sensor, soil\nmoisture,\nhumidity,\nultraviolet, CO2,\nultrasonic, and pH.\nThis\
    \ suggested wireless robot is outﬁtted with\na variety of sensors that measure\
    \ various\nenvironmental conditions. It also includes the\nRaspberry Pi 2 model\
    \ B hardware for running\nthe entire process. The major characteristics\nof this\
    \ revolutionary intelligent wireless robot\nare that it can perform activities\
    \ such as\nmoisture detection, scaring birds and animals,\nspraying pesticides,\
    \ moving forward or\nbackward, and switching an electric motor\nON/OFF.\nIt is\
    \ outﬁtted with a variety\nof sensors to monitor\nvarious environmental\nconditions\
    \ relevant to crop\nyield. Wireless crop\nmonitoring reduces labor\ncosts while\
    \ also allowing\nfor accurate tracking of\nchanges that occur in real\ntime in\
    \ the ﬁeld.\nThe\nconstruction of\nthis model is\nnot always\nfriendly to the\n\
    environment\nand is\nexpensive.\nIoT and Big\nData-enabled\nself-driven\nmodel\n\
    (Keswani\net al., 2020)\nThis research focuses on the\nefﬁcient control of farm\n\
    irrigation by leveraging the\ncapabilities of the Internet of\nThings (IoT) and\
    \ Big Data-\nbased decision support\nsystem (DSS) to generate\nappropriate valve\
    \ control\norders.\nThe proposed IoT\nnode deployment\napproach, which\nhas been\
    \ ﬁeld-\ntested, is used to\ncapture real-time\ndata.\nAn integrated IoT-based\
    \ DSS framework is\nsuggested to collect 17 soil and ambient\ncharacteristics\
    \ in order to forecast future\nchanges in soil moisture levels in 1 h.\nIrrigation\
    \ regulation by\nzone and crop is a key\nresponsibility in all\nagricultural ﬁelds.\
    \ The\nsuggested IoT deployment\nframework has been\nthoroughly tested in the\n\
    ﬁeld to obtain uniform soil\nmoisture levels throughout\nthe target crop-speciﬁc\n\
    zones.\nThe irrigation\nsystem is not all\nclimate-\nsupported,\nwhich means it\n\
    needs to be\nimproved.\nSingh et al.\n10.3389/fpls.2023.1239594\nFrontiers in\
    \ Plant Science\nfrontiersin.org\n14\nTABLE 7 Comparison of the proposed generation\
    \ of network with existing networks.\nParameters\n2G\n3G\n4G\n5G (proposed network)\n\
    Year of launching\n1993\n2001\n2009\n2018\nTechnology\nGSM\nWCDMA\nLTE, WiMAX\n\
    MIMO, mmWaves\nActive system\nTDMA, CDMA\nCDMA\nCDMA\nOFDM, BDMA\nSwitching type\n\
    Circuit, packet\nCircuit, packet\nPacket\nPacket\nNetwork\nPSTN\nPSTN\nPacket\
    \ network\nInternet\nInternet access\nNarrowband\nBroadband\nUltra broadband\n\
    Connectionless World Wide Web\nBandwidth\n25 MHz\n25 MHz\n150 MHz\n30–300 GHz\n\
    Speed\n64 Kbps\n8 Mbps\n300 Mbps\n10–30 Gbps\nLatency\n300–100 ms\n100–500 ms\n\
    20–30 ms\n1–10 ms\nMobility\n60 km\n100 km\n200 km\n500 km\nTABLE 8 Tomato production\
    \ details in India.\nStates\nProduction qty (M tons)\nShare (%)\n1\nAndhra Pradesh\n\
    2,744\n13.9\nMajor tomato production state in India\n2\nMadhy Pradesh\n2,419\n\
    12.2\n3\nKarnataka\n2,081\n10.5\n4\nGujurat\n1,357\n6.9\n5\nOdisha\n1,312\n6.5\n\
    6\nWest Bengal\n1,265\n6.4\n7\nTelegana\n1,171\n5.9\n8\nTelegana\n1,087\n5.5\n\
    TABLE 9\nExportation of tomatoes from India to other countries.\nStates\nProduction\
    \ qty (M tons)\nValues (million US $)\n1\nU ARAB EMTS\n32,172.6\n16.33\n2\nQatar\n\
    14,309.6\n8.32\n3\nSingapore\n102.74\n0.12\n4\nMalaysia\n100.99\n0.06\n5\nSaudi\n\
    96.22\n0.05\n6\nAustria\n14.65\n0.03\nTABLE 10\nImportation of tomatoes from other\
    \ countries to India.\nStates\nProduction qty (M tons)\nValues (million US $)\n\
    1\nChina\n15,213\n12.74\n2\nUSA\n3,028\n3.01\n3\nSpain\n1,248\n1.06\n4\nItaly\n\
    796\n0.11\n5\nChile\n115\n0.05\n6\nBhutan\n65\n0.03\nSingh et al.\n10.3389/fpls.2023.1239594\n\
    Frontiers in Plant Science\nfrontiersin.org\n15\nData availability statement\n\
    The original contributions presented in the study are included\nin the article/Supplementary\
    \ Material. Further inquiries can be\ndirected to the corresponding author.\n\
    Author contributions\nDSi and AB: conceptualization. DSa and VS: methodology.\
    \ SK\nand AK: software and validation. YN: supervision. All authors\ncontributed\
    \ to the article and approved the submitted version.\nFunding\nThis research was\
    \ supported by the MSIT(Ministry of Science\nand ICT), Korea, under the ICAN(ICT\
    \ Challenge and Advanced\nNetwork of HRD) program(IITP- 2023-2020-0-01832) supervised\n\
    by the IITP(Institute of Information & Communications\nTechnology Planning & Evaluation)\
    \ and the Soonchunhyang\nUniversity Research Fund.\nConﬂict of interest\nThe authors\
    \ declare that the research was conducted in the\nabsence of any commercial or\
    \ ﬁnancial relationships that could be\nconstrued as a potential conﬂict of interest.\n\
    Publisher’s note\nAll claims expressed in this article are solely those of the\
    \ authors\nand do not necessarily represent those of their afﬁliated\norganizations,\
    \ or those of the publisher, the editors and the\nreviewers. Any product that\
    \ may be evaluated in this article, or\nclaim that may be made by its manufacturer,\
    \ is not guaranteed or\nendorsed by the publisher.\nReferences\nAhmadi, S., Nagpal,\
    \ R., Wang, S., Gagliano, J., Kitzman, D. W., Soleimanian-Zad, S.,\net al. (2019).\
    \ Prebiotics from acorn and sago prevent high-fat-diet-induced insulin\nresistance\
    \ via microbiome–gut–brain axis modulation. J. Nutr. Biochem. 67, 1–13. doi:\n\
    10.1016/j.jnutbio.2019.01.011\nAl-Ali, A., Al Nabulsi, A., Mukhopadhyay, S., Awal,\
    \ M. S., Fernandes, S., and\nAilabouni, K. (2019). Iot-solar energy powered smart\
    \ farm irrigation system. J.\nElectronic Sci. Technol. 17 (4), 100017. doi: 10.1016/j.jnlest.2020.100017\n\
    Al-Ghobari, H. M., and Mohammad, F. S. (2011). Intelligent irrigation performance:\n\
    evaluation and quantifying its ability for conserving water in arid region. Appl.\
    \ Water\nSci. 1 (3), 73–83. doi: 10.1007/s13201-011-0017-y\nAlthar, R. R., and\
    \ Samanta, D. (2021). The realist approach for evaluation of\ncomputational intelligence\
    \ in software engineering. Innov. Syst. Software Eng. 17 (1),\n17–27. doi: 10.1007/s11334-020-00383-2\n\
    Benyezza, H., Bouhedda, M., and Rebou, S. (2021). Zoning irrigation smart system\n\
    based on fuzzy control technology and iot for water and energy saving. J. Cleaner\n\
    Production 302, 127001. doi: 10.1016/j.jclepro.2021.127001\nBhattacharya, A.,\
    \ and De, D. (2021). “Agriedge: Edge intelligent 5g narrow band\ninternet of drone\
    \ things for agriculture 4.0,” in IoT-based intelligent modelling for\nenvironmental\
    \ and ecological engineering: IoT next generation ecoAgro systems (Cham:\nSpringer),\
    \ 49–79.\nBiswal, A. K., Singh, D., Pattanayak, B. K., Samanta, D., and Yang,\
    \ M.-H. (2021).\nIoT-based smart alert system for drowsy driver detection. Wireless\
    \ Commun. Mobile\nComputing 2021, 1–13. doi: 10.1155/2021/6627217\nBiswas, J.,\
    \ Kayal, P., and Samanta, D. (2021). Reducing approximation error with\nrapid\
    \ convergence rate for non-negative matrix factorization (NMF). Mathematics Stat\n\
    9 (3), 285–289. doi: 10.13189/ms.2021.090309\nCampestrini, L. H., Melo, P. S.,\
    \ Peres, L. E., Calhelha, R. C., Ferreira, I. C., and\nAlencar, S. M. (2019).\
    \ A new variety of purple tomato as a rich source of bioactive\ncarotenoids and\
    \ its potential health beneﬁts. Heliyon 5 (11), 02831. doi: 10.1016/\nj.heliyon.2019.e02831\n\
    Casadei, S., Peppoloni, F., Ventura, F., Teodorescu, R., Dunea, D., and Petrescu,\
    \ N.\n(2021). Application of smart irrigation systems for water conservation in\
    \ Italian farms.\nEnviron. Sci. pollut. Res. 28 (21), 26488–26499. doi: 10.1007/s11356-021-12524-6\n\
    Chen, P., An, J., Shu, S., Cheng, R., Nie, J., Jiang, T., et al. (2021). Super-durable,\
    \ low-\nwear, and high-performance fur-brush triboelectric nanogenerator for wind\
    \ and water\nenergy harvesting for smart agriculture. Advanced Energy Materials\
    \ 11 (9), 2003066.\ndoi: 10.1002/aenm.202003066\nChen, M., Sun, Y., Liu, B., Yan,\
    \ B., Li, X., Lu, K., et al. (2021). “Design and\nimplementation of a novel internet\
    \ of things irrigation system with a precision\nirrigation robot,” in 2021 IEEE\
    \ International Conference on Real-time Computing\nand Robotics (RCAR). (IEEE),\
    \ 1008–1015.\nChen, Z., Zhao, C., Wu, H., and Miao, Y. (2019). A water-saving\
    \ irrigation\ndecisionmaking model for greenhouse tomatoes based on genetic optimization\
    \ ts\nfuzzy neural network. TIIS 13 (6), 2925–2948.\nConesa, M. R., Conejero,\
    \ W., Vera, J., and Ruiz-S´anchez, M. C. (2021). Soil-based\nautomated irrigation\
    \ for a nectarine orchard in two water availability scenarios.\nIrrigation Sci.\
    \ 39 (4), 1–19. doi: 10.1007/s00271-021-00736-0\nDell’Uomo, L., and Scarrone,\
    \ E. (2002). “An all-ip solution for qos mobility management\nand aaa in the 4g\
    \ mobile networks,” in The 5th International Symposium on Wireless\nPersonal Multimedia\
    \ Communications, Vol. 2. (Honolulu, HI, USA: IEEE), 591–595.\nDhanush, V., Mahendra,\
    \ A. R., Kumudavalli, M. V., and Samanta, D. (2017).\nApplication of deep learning\
    \ technique for automatic data exchange with air-gapped\nsystems and its security\
    \ concerns. India: International conference on computing\nmethodologies and communication\
    \ (ICCMC), 324–328. doi: 10.1109/\nICCMC.2017.8282701\nEl-Zawily, A. E.-S., Meleha,\
    \ M., El-Sawy, M., El-Attar, E.-H., Bayoumi, Y., and\nAlshaal, T. (2019). Application\
    \ of magnetic ﬁeld improves growth, yield and fruit\nquality of tomato irrigated\
    \ alternatively by fresh and agricultural drainage water.\nEcotoxicology Environ.\
    \ Saf. 181, 248–254. doi: 10.1016/j.ecoenv.2019.06.018\nFaraci, G., Raciti, A.,\
    \ Rizzo, S., and Schembra, G. (2018). “A 5g platform for unmanned\naerial monitoring\
    \ in rural areas: Design and performance issues,” in 2018 4th IEEE Conference\n\
    on Network Softwarization and Workshops (NetSoft). (Montreal, QC, Canada: IEEE),\
    \ 237–241.\nFarg, E., Arafat, S., Abd El-Wahed, M., and El-Gindy, A. (2012). Estimation\
    \ of\nevapotranspiration etc and crop coefﬁcient kc of wheat, in south nile delta\
    \ of Egypt\nusing integrated fao-56 approach and remote sensing data. Egyptian\
    \ J. Remote Sens.\nSpace Sci. 15 (1), 83–89. doi: 10.1016/j.ejrs.2012.02.001\n\
    Gil, J. D., Mu˜noz, M., Roca, L., Rodr´ıguez, F., and Berenguel, M. (2019). “An\
    \ iot\nbased control system for a solar membrane distillation plant used for greenhouse\n\
    irrigation,” in 2019 Global IoT Summit (GIoTS). (Aarhus, Denmark: IEEE), 1–6.\n\
    Gomathy, V., Padhy, N., Samanta, D., Sivaram, M., Jain, V., and Amiri, I. S. (2020).\n\
    Malicious node detection using heterogeneous cluster based secure routing protocol\n\
    (HCBS) in wireless adhoc sensor networks. J. Ambient Intell. Humanized Computing\
    \ 11\n(11), 4995–5001. doi: 10.1007/s12652-020-01797-3\nGuevara, S., Singh, Y.,\
    \ Shores, A., Mercado, J., Postigo, M., Garcia, J., et al. (2020).\nDevelopment\
    \ of a pilot smart irrigation system for Peruvian highlands. J. Contemp.\nWater\
    \ Res. Educ. 171 (1), 49–62. doi: 10.1111/j.1936-704X.2020.3344.x\nGuha, A., and\
    \ Samanta, D. (2021). Hybrid approach to document anomaly\ndetection: an application\
    \ to facilitate RPA in title insurance. Int. J. Automation\nComputing 18 (1),\
    \ 55–72. doi: 10.1007/s11633-020-1247-y\nGuha, A., Samanta, D., Banerjee, A.,\
    \ and Agarwal, D. (2021). A deep learning model\nfor information loss prevention\
    \ from multi-page digital documents. IEEE Access, 1–1.\ndoi: 10.1109/ACCESS.2021.3084841\n\
    Singh et al.\n10.3389/fpls.2023.1239594\nFrontiers in Plant Science\nfrontiersin.org\n\
    16\nGuodaar, L., Asante, F., Eshun, G., Abass, K., Afriyie, K., Appiah, D. O.,\
    \ et al. (2020).\nHow do climate change adaptation strategies result in unintended\
    \ maladaptive\noutcomes? perspectives of tomato farmers. Int. J. Vegetable Sci.\
    \ 26 (1), 15–31. doi:\n10.1080/19315260.2019.1573393\nGurunath, R., Agarwal, M.,\
    \ Nandi, A., and Samanta, D. (2018). An overview: Security issue\nin iot network.\
    \ 2nd International Conference on I-SMAC (IoT in Social, Mobile, Analytics\nand\
    \ Cloud) (I-SMAC)I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC),\
    \ 2018\n2nd International Conference on. (India: Palladam) 104–107. doi: 10.1109/I-\n\
    SMAC.2018.8653728\nHassan, S. I., Alam, M. M., Illahi, U., Al Ghamdi, M. A., Almotiri,\
    \ S. H., and Su’ud,\nM. M. (2021). A systematic review on monitoring and advanced\
    \ control strategies in\nsmart agriculture. IEEE Access 9, 32517–32548. doi: 10.1109/ACCESS.2021.3057865\n\
    Hota, A., Singh, D., Mahapatra, A. K., and Panda, B. (2020). Energy efﬁcient\n\
    techniques for iot based smart agriculture. TEST Eng. Manage. 83, 7604–7612.\n\
    Jayalakshmi, M., and Gomathi, V. (2019). Sensor-cloud based precision agriculture\n\
    approach for intelligent water management. Int. J. Plant Production 14, 1–10.\n\
    Kamienski, C., Soininen, J.-P., Taumberger, M., Dantas, R., Toscano, A., Salmon\n\
    Cinotti, T., et al. (2019). Smart water management platform: Iot-based precision\n\
    irrigation for agriculture. Sensors 19 (2), 276. doi: 10.3390/s19020276\nKeswani,\
    \ B., Mohapatra, A. G., Keswani, P., Khanna, A., Gupta, D., and Rodrigues, J.\n\
    (2020). Improving weather dependent zone speciﬁc irrigation control scheme in\
    \ iot and\nbig data enabled self driven precision agriculture mechanism. Enterprise\
    \ Inf. Syst. 14 (9-\n10), 1494–1515. doi: 10.1080/17517575.2020.1713406\nKhamparia,\
    \ A., Singh, P. K., Rani, P., Samanta, D., Khanna, A., and Bhushan, B.\n(2020).\
    \ An internet of health things-driven deep learning framework for detection and\n\
    classiﬁcation of skin cancer using transfer learning. Trans. Emerging\nTelecommunications\
    \ Technol. 32, 1-11. doi: 10.1002/ett.3963\nKiryushin, V. (2019). The management\
    \ of soil fertility and productivity of\nagrocenoses in adaptive-landscape farming\
    \ systems. Eurasian Soil Sci. 52 (9), 1137–\n1145. doi: 10.1134/S1064229319070068\n\
    Krishna, K. L., Silver, O., and Malende, W. F. (2017). “Anuradha, K.: Internet\
    \ of\nthings application for implementation of smart agriculture system,” in 2017\n\
    International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud)(I-\n\
    SMAC). (Palladam, India: IEEE), 54–59.\nKumar, R., Kumar, R., Samanta, D., Paul,\
    \ M., and Kumar, V. (2017). A combining\napproach using dft and ﬁr ﬁlter to enhance\
    \ impulse response. India: International\nConference on Computing Methodologies\
    \ and Communication (ICCMC), 134–137.\ndoi: 10.1109/ICCMC.2017.8282660\nKumar,\
    \ R., Sinwar, D., Pandey, A., Tadele, T., Singh, V., and Raghuwanshi, G.\n(2022).\
    \ Iot enabled technologies in smart farming and challenges for adoption. Internet\n\
    Things Analytics Agric. 3, 141–164. doi: 10.1007/978-981-16-6210-2_7\nLakshmiprabha,\
    \ K. E., and Govindaraju, C. (2019). Hydroponic-based smart\nirrigation system\
    \ using internet of things. Int. J. Communication Syst. 36, 4071.\nLeuther, F.,\
    \ Schlu¨ter, S., Wallach, R., and Vogel, H.-J. (2019). Structure and\nhydraulic\
    \ properties in soils under long-term irrigation with treated wastewater.\nGeoderma\
    \ 333, 90–98. doi: 10.1016/j.geoderma.2018.07.015\nLi, W., Awais, M., Ru, W.,\
    \ Shi, W., Ajmal, M., Uddin, S., et al. (2020). Review of\nsensor network-based\
    \ irrigation systems using iot and remote sensing. Adv.\nMeteorology 2020, 1-14.\
    \ doi: 10.1155/2020/8396164\nLópez-López, R., Cohen, I. S., InzunzaIbarra, M.\
    \ A., Á lvarez, A. F., and Arriaga, G. E.\n(2014). Increasing water use efﬁciency\
    \ in husk tomato (physalis ixocarpa brot)\nproduction in tabasco, Mexico with\
    \ improved irrigation water management. J. Water\nResource Prot. 6 (13), 1248.\
    \ doi: 10.4236/jwarp.2014.613114\nMagán, J. J., Gallardo, M., Thompson, R. B.,\
    \ and Lorenzo, ,. P. (2008). Effects of\nsalinity on fruit yield and quality of\
    \ tomato grown in soil-less culture in greenhouses in\nmediterranean climatic\
    \ conditions. Agric. Water Manage. 95 (9), 1041–1055. doi:\n10.1016/j.agwat.2008.03.011\n\
    Maheswari, M., Geetha, S., Kumar, S. S., Karuppiah, M., Samanta, D., and Park,\
    \ Y.\n(2021). Pevrm: probabilistic evolution based version recommendation model\
    \ for\nmobile applications. IEEE Access 9, 20819–20827. doi: 10.1109/ACCESS.2021.3053583\n\
    Maroli, A. A., Narwane, V. S., Raut, R. D., and Narkhede, ,. B. E. (2021). Framework\
    \ for\nthe implementation of an internet of things (iot)-based water distribution\
    \ and management\nsystem. Clean Technol. Environ. Policy 23 (1), 271–283. doi:\
    \ 10.1007/s10098-020-01975-z\nMason, B., Ruf´ı-Sal´ıs, M., Parada, F., Gabarrell,\
    \ X., and Gruden, C. (2019).\nIntelligent urban irrigation systems: Saving water\
    \ and maintaining crop yields. Agric.\nWater Manage. 226, 105812. doi: 10.1016/j.agwat.2019.105812\n\
    Mekala, M. S., Patan, R., Islam, S. H., Samanta, D., Mallah, G. A., and Chaudhry,\
    \ S.\nA. (2021)DAWM: cost-aware asset claim analysis approach on big data analytic\n\
    computation model for cloud data centre. Available at: https://www.hindawi.\n\
    Mohanty, N. P., Singh, D., Hota, A., and Kumar, S. (2019). “Cultivation of cash\
    \ crops\nunder automated greenhouse using internet of things (iot),” in 2019 International\n\
    Conference on Communication and Signal Processing (ICCSP). (Chennai, India: IEEE).\n\
    Mousavi, S. K., Ghaffari, A., Besharat, S., and Afshari, H. (2021). Improving\
    \ the security of\ninternet of things using cryptographic algorithms: A case of\
    \ smart irrigation systems. J.\nAmbient Intell. Humanized Computing 12 (2), 2033–2051.\
    \ doi: 10.1007/s12652-020-02303-5\nNagarajan, G., and Minu, R. (2018). Wireless\
    \ soil monitoring sensor for sprinkler\nirrigation automation system. Wireless\
    \ Pers. Commun. 98 (2), 1835–1851. doi: 10.1007/\ns11277-017-4948-y\nPayaswini,\
    \ P., and Manjaiah, D. (2014). Challenges and issues in 4g networks\nmobility\
    \ management. International Journal of Computer Trends and Technology\n(IJCTT),\
    \ 4 (5), 1247-1250. arXiv preprint arXiv:1402.3985.\nPayero, J. O., Mirzakhani-Nafchi,\
    \ A., Khalilian, A., Qiao, X., and Davis, R. (2017).\nDevelopment of a low-cost\
    \ internet-of-things (iot) system for monitoring soil water\npotential using watermark\
    \ 200ss sensors. Adv. Internet Things 7 (3), 71–86. doi:\n10.4236/ait.2017.73005\n\
    Poyen, F. B., Ghosh, A., Kundu, P., Hazra, S., and Sengupta, N. (2020). Prototype\n\
    model design of automatic irrigation controller. IEEE Trans. Instrumentation\n\
    Measurement 70, 1–17. doi: 10.1109/TIM.2020.3031760\nQiu, Q., Cao, S., Kong, F.,\
    \ Zhou, X., Han, S., and Sun, W. (2020). “Intelligent control\nsystem of water\
    \ and fertilizer in greenhouse based on tomato phenotype discrimination\nand growth\
    \ environment prediction,” in IOP Conference Series: Earth and\nEnvironmental\
    \ Science, Vol. 440. 042081 (IOP Publishing).\nQuitaleg, A., and Ortiz, M. (2020).\
    \ “Design and development of data warehouse\nframework of highland vegetable crops\
    \ for benguet,” in IOP Conference Series:\nMaterials Science and Engineering,\
    \ Vol. 803. 012035 (IOP Publishing).\nRodr´ıguez-Ortega, W. M., Mart´ınez, V.,\
    \ Nieves, M., Sim´on, I., Lid´on, V.,\nFernandez-Zapata, J., et al. (2019). Agricultural\
    \ and physiological responses of\ntomato plants grown in different soilless culture\
    \ systems with saline water under\ngreenhouse conditions. Sci. Rep. 9 (1), 1–13.\n\
    Samanta, D., Galety, M. G., Mallaiah, S., and Kariyappala, S. (2020). A hybridization\n\
    approach based semantic approach to the software engineering. TEST Eng. Manage.\
    \ 83,\n5441–5447.\nSanjuan-Delm´as, D., Josa, A., Mun˜oz, P., Gass´o, S., Rieradevall,\
    \ J., and Gabarrell,\nX. (2020). Applying nutrient dynamics to adjust the nutrient-water\
    \ balance in\nhydroponic crops. a case study with open hydroponic tomato crops\
    \ from Barcelona.\nScientia Hortic. 261, 108908.\nShao, G.-c., Wang, M.-h., Liu,\
    \ N., Yuan, M., Kumar, P., and She, D.-L. (2014).\nGrowth and comprehensive quality\
    \ index of tomato under rain shelters in response to\ndifferent irrigation and\
    \ drainage treatments. Sci. World J. 2014, 1–13. doi: 10.1155/\n2014/457937\n\
    Singh, D. K., Sobti, R., Jain, A., Malik, P. K., and Le, D.-N. (2022). Lora based\n\
    intelligent soil and weather condition monitoring with internet of things for\n\
    precision agriculture in smart cities. IET Commun. 16 (5), 604–618. doi: 10.1049/\n\
    cmu2.12352\nSinha, B. B., and Dhanalakshmi, R. (2022). Recent advancements and\
    \ challenges of\ninternet of things in smart agriculture: A survey. Future Generation\
    \ Comput. Syst. 126,\n169–184. doi: 10.1016/j.future.2021.08.006\nSivakumar, P.,\
    \ Nagaraju, R., Samanta, D., Sivaram, M., HIndia, M. N., and Amiri, I.\nS. (2020).\
    \ A novel free space communication system using nonlinear InGaAsP\nmicrosystem\
    \ resonators for enabling power-control toward smart cities. Wireless\nNetworks\
    \ 26 (4), 2317–2328. doi: 10.1007/s11276-019-02075-7\nTang, Y., Dananjayan, S.,\
    \ Hou, C., Guo, Q., Luo, S., and He, Y. (2021). A survey on\nthe 5g network and\
    \ its impact on agriculture: Challenges and opportunities. Comput.\nElectron.\
    \ Agric. 180, 105895. doi: 10.1016/j.compag.2020.105895\nTerence, S., and Purushothaman,\
    \ G. (2020). Systematic review of internet of things\nin smart farming. Trans.\
    \ Emerging Telecommunications Technol. 31 (6), 3958. doi:\n10.1002/ett.3958\n\
    Thilakarathne, N. N., Bakar, M. S. A., Abas, P. E., and Yassin, H. (2023).\nTowards\
    \ making the ﬁelds talks: A real-time cloud enabled iot crop management\nplatform\
    \ for smart agriculture. Front. Plant Sci. 13, 1030168. doi: 10.3389/\nfpls.2022.1030168\n\
    Usman, M., Ansari, S., Taha, A., Zahid, A., Abbasi, Q. H., and Imran, M. A. (2022).\n\
    Terahertz-based joint communication and sensing for precision agriculture: a 6g\
    \ use-\ncase. Front. Commun. Networks 3, 3. doi: 10.3389/frcmn.2022.836506\nVan\
    \ Eck, J., Keen, P., and Tjahjadi, M. (2019). “Agrobacterium tumefaciens-\nmediated\
    \ transformation of tomato,” in Transgenic plants (New York, NY: Humana\nPress),\
    \ 225–234.\nZhai, Y., Yang, Q., and Hou, M. (2015). The effects of saline water\
    \ drip irrigation on\ntomato yield, quality, and blossom-end rot incidence—a 3a\
    \ case study in the south of\nChina. PloS One 10 (11), 0142204.\nZhang, H., He,\
    \ L., Di Gioia, F., Choi, D. D., and Heinemann, P. (2021). “Internet of\nthings\
    \ (iot)-based precision irrigation with lorawan technology applied to vegetable\n\
    production,” in 2021 ASABE annual international virtual meeting (American Society\
    \ of\nAgricultural and Biological Engineers), 1.\nZhang, F., Zhang, Y., Lu, W.,\
    \ Gao, Y., Gong, Y., and Cao, J. (2022). 6g-enabled smart\nagriculture: A review\
    \ and prospect. Electronics 11 (18), 2845. doi: 10.3390/\nelectronics11182845\n\
    Zhaogan, L., Taiyi, Z., Xiaodong, S., and Xiaohe, L. (2007). Limitations of current\
    \ 4g\nsystems and its substitute schemes with tdd/tdma. WSEAS Trans. Commun. 6\
    \ (11),\n850–860.\nSingh et al.\n10.3389/fpls.2023.1239594\nFrontiers in Plant\
    \ Science\nfrontiersin.org\n17\n"
  inline_citation: '>'
  journal: Frontiers in Plant Science
  limitations: '>'
  pdf_link: https://www.frontiersin.org/articles/10.3389/fpls.2023.1239594/pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart high-yield tomato cultivation: precision irrigation system using the
    Internet of Things'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/w15091657
  analysis: '>'
  authors:
  - Ibrahim Al-Shourbaji
  - Salahaldeen Duraibi
  citation_count: 1
  full_citation: '>'
  full_text: ">\nCitation: Al-Shourbaji, I.; Duraibi, S.\nIWQP4Net: An Efﬁcient Convolution\n\
    Neural Network for Irrigation Water\nQuality Prediction. Water 2023, 15,\n1657.\
    \ https://doi.org/10.3390/\nw15091657\nAcademic Editors: Padam Jee Omar,\nGanesh\
    \ Ji Omar and Pankaj Kumar\nGupta\nReceived: 19 March 2023\nRevised: 17 April\
    \ 2023\nAccepted: 20 April 2023\nPublished: 24 April 2023\nCopyright:\n© 2023\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nwater\nArticle\nIWQP4Net: An Efficient Convolution Neural Network for\
    \ Irrigation\nWater Quality Prediction\nIbrahim Al-Shourbaji *\nand Salahaldeen\
    \ Duraibi\nDepartment of Computer and Network Engineering, Jazan University, Jazan\
    \ 45142, Saudi Arabia;\nsduraibi@jazanu.edu.sa\n* Correspondence: alshourbajiibrahim@gmail.com\n\
    Abstract: With the increasing worldwide population and the requirement for efﬁcient\
    \ approaches to\nfarm care and irrigation, the demand for water is constantly\
    \ rising, and water resources are becoming\nscarce. This has led to the development\
    \ of smart water management systems that aim to improve the\nefﬁciency of water\
    \ management. This paper pioneers an effective Irrigation Water Quality Prediction\n\
    (IWQP) model using a convolution neural architecture that can be trained on any\
    \ general computing\ndevice. The developed IWQP4Net is assessed using several\
    \ evaluation measurements and compared\nto the Logistic Regression (LR), Support\
    \ Vector regression (SVR), and k-Nearest Neighbor (kNN)\nmodels. The results show\
    \ that the developed IWQP4Net achieved a promising outcome and better\nperformance\
    \ than the other comparative models.\nKeywords: irrigation system; water quality;\
    \ deep learning; convolutional neural network prediction\n1. Introduction\nThe\
    \ United Nations (UN) has asserted that access to safe domestic potable water\
    \ is\nan essential human right and a step towards improving people’s living standards.\
    \ An\naccessible, adequate, clean, and safe drinking water supply is one of the\
    \ main aspirations\nof the Millennium Development Goals (UN-MDGs), and it is one\
    \ of the core aims of the\nSustainable Development Goals (SDGs) [1]. The UN-MDGs\
    \ concluded that water sustains\nlife, but safe and clean drinking water is a\
    \ hallmark of civilization. In order to ensure that\nconsumers receive the required\
    \ quality of water supplied from treatment plants, there is\na need to deter,\
    \ detect and minimize any threats to the water supply such as accidents,\nbackﬂow,\
    \ vandalism, hazardous material releases, and terrorism. Natural disasters such\n\
    as waterborne disease outbreaks, bushﬁres, and ﬂoods can also affect the quality\
    \ of water\nsupplied. The supply of safe potable water to consumers implies that\
    \ there must be proper\nsecurity setups and safeguards in terms of how rapidly\
    \ to react to disasters and when they\noccur [2].\nA signiﬁcant amount of freshwater\
    \ is used in farming and agriculture, especially for\nirrigation. Due to a lack\
    \ of affordable clever irrigation technologies, developing nations use\nmore water\
    \ than industrialized nations to produce the same output. For instance, India\
    \ has\nonly 4% of the world’s freshwater resources to service 17% of the global\
    \ population, but\nsome of its key agricultural products require two to four times\
    \ more water than those of\nother nations such as China and the USA [3]. Therefore,\
    \ there is an urgent need to develop\nsmart methods and systems based on sophisticated\
    \ technologies for the efﬁcient use of\nfresh water.\nMany studies have used Deep\
    \ Learning (DL) approaches for irrigation water sys-\ntems [4–7]. The Internet\
    \ of Things (IoT) was used by the authors of [8] to collect data from\nthe ﬁeld\
    \ on a variety of variables, including soil moisture, soil temperature, weather,\
    \ and\nenvironmental conditions. Their strategy optimizes the nee and thereby\
    \ uses less energy\nwith the aid of different information. The collected data\
    \ from the IoT devices were saved in\nthe cloud, and they then employed ML models\
    \ for precise irrigation systems.\nWater 2023, 15, 1657. https://doi.org/10.3390/w15091657\n\
    https://www.mdpi.com/journal/water\nWater 2023, 15, 1657\n2 of 11\nIn [9], an\
    \ intelligent irrigation system for precision agriculture based on DL neural\n\
    networks is explored. The developed method can maintain its functionality better\
    \ over time\nand in any weather conditions. It uses an extended short-term memory\
    \ network (LSTM) to\nforecast the irrigation schedule, the spatial spread of water\
    \ needed to irrigate the arable\nland, and the volumetric soil moisture content\
    \ for the following day. In [10], the authors\nused IoT sensors to collect soil\
    \ moisture, temperature, humidity, and time data, and then\nthey used that data\
    \ as inputs to LR, Random Forest (RF), SVR, and Convolutional Neural\nNetwork\
    \ (CNN) techniques to classify the produced data from the IoT. Based on the results,\n\
    the RF model performed the best compared to the other techniques.\nIn the study\
    \ of [11], the regression analysis method showed better results than the\ncorrelation\
    \ for monitoring water quality and predicting trends in water quality variation.\n\
    In [12], an automation approach for the farm irrigation system was reported based\
    \ on\nIoT and ML. The authors established a distributed wireless sensor network\
    \ (WSN), where\nvarious sensors cover each region of the farm, and then these\
    \ data were transmitted\nto a server. They then used stored data were used to\
    \ predict irrigation patterns using\nML methods.\nIn order to estimate the inﬁltrated\
    \ water in the furrow irrigation system, the authors\nof [13] applied the SVR,\
    \ Group Method of Data Handling (GMDH), Adaptive Neuro-Fuzzy\nInference System\
    \ (ANFIS), Artiﬁcial Neural Network (ANN), and Multivariate Linear\nRegression\
    \ (MLR) models. The results showed that the Fireﬂy Algorithm (FA) has a high\n\
    ability to boost the accuracy of the implemented models. The authors in [14] present\
    \ a\nmachine learning (ML) algorithm-based smart system to anticipate irrigation\
    \ needs by\nsensing ground parameters such as soil moisture, temperature, humidity,\
    \ and water level.\nThe authors in [15] discussed the recent contributions of\
    \ both DL and IoT for precision\nagriculture. They also proposed a boot-strapping\
    \ method of transfer learning, where ﬁne-\ntuned VGG16 is improved by newly built\
    \ fully connected layers. The results showed that\ntheir improvement method accomplished\
    \ better accuracy than the other models used in\ntheir work.\nIn [16], a stacking\
    \ model of ML combined with feature selection methods was investi-\ngated to accurately\
    \ calculate the required amount of water for a plant. The relevance of the\nfeatures\
    \ was determined by using RF, state-of-the-art feature elimination, and SelectKBest.\n\
    An ensemble of CART, gradient boost regression, and XGBoost regressors was suggested\n\
    based on the best subset of characteristics. Several crops, such as tomatoes,\
    \ grapes, and\nlemons, were used to train and test the models, which incorporated\
    \ information on the\nweather, soil, irrigation, and crops. The feature selection\
    \ results showed the signiﬁcance of\nevapotranspiration, depletion, and shortfall\
    \ levels in maximizing the model’s accuracy.\nIn [17], the authors investigated\
    \ several ML-based methods and their performance to\ncalculate Water Quality Index\
    \ (WQI) using a dataset collected from the Kim Hai irrigation\nsystem. They applied\
    \ several feature selection methods to pick key parameters fed to the\nML models.\
    \ Results conﬁrmed that a combination of feature selection along with ML has\n\
    been an effective choice for calculating the WQI. In [18], Long Short-Term Memory\
    \ LSTM,\nCNN, and hybrid CNN-LSTM models, were examined in order to forecast water\
    \ quality.\nThe results showed that the hybrid model had a high ability to capture\
    \ low and high levels\nof water quality variables compared to LSTM and CNN alone.\
    \ As a result, improved water\nquality prediction still requires more sophisticated\
    \ prediction algorithms to deliver an\neffective approach with high performance.\
    \ The main contributions of this paper can be\nsummarized as follows:\n1.\nIntroduced\
    \ an effective Irrigation Water Quality Prediction (IWQP) approach based on\n\
    an efﬁcient CNN architecture which comprises two convolution layers, a max-pooling\n\
    layer, a dropout layer, and two dense layers;\n2.\nExamined and compared the performance\
    \ of IWQP4Net with the LR, SVR, and kNN\nmodels using different evaluation measurements\
    \ and visualizations methods;\n3.\nDemonstrated the efﬁciency of the developed\
    \ IWQP4Net for IWQP and its superiority\nover the other competitive models.\n\
    Water 2023, 15, 1657\n3 of 11\nThe remaining parts of this paper consist of four\
    \ sections. Section 2 presents an\noverview of the dataset used in this work and\
    \ the developed IWQP approach. Section 3\nprovides the evaluation measurements\
    \ used to evaluate the introduced IWQP model.\nSection 4 discusses the experimental\
    \ results of this work. Finally, Section 5 presents the\nconclusion of this paper.\n\
    2. Methods and Material\n2.1. Dataset\nOn the basis of the input data, which is\
    \ the historical data of other water-measurement\nindices, the spatiotemporal\
    \ water quality is to be forecast in terms of the “power of hy-\ndrogen (pH)”\
    \ value for the following day. The United States Geological Survey publishes\n\
    this dataset [19]. Depending on the water system they are a part of, such as the\
    \ water\nsystem of Atlanta, the Savannah River’s watershed, and others, high-level\
    \ prior spatial\ninformation is given. It comprises training data collected for\
    \ 423 days (1 December 2014 to\n28 January 2016), and testing data collected for\
    \ 282 days (25 March 2017 to 1 January 2018).\nThe input data comprises daily\
    \ samples taken from 37 water stations and that were used to\ncalculate the pH\
    \ levels in Georgia, USA. Due to the complexity of the water system, the\nprecise\
    \ connections between each location through water streams, or spatial connectivity,\n\
    are unknown. Eleven standard parameters, including temperature, speciﬁc conductance,\n\
    and the volume of dissolved oxygen, are used to predict the pH value for each\
    \ water\nstation. The input data at any time instant is spatially arranged as\
    \ a matrix of dimension\n(37 × 11), where rows correspond to different water stations\
    \ and columns correspond to\ndifferent features affecting the pH value. Hence,\
    \ the training input data has a dimension\nof (423 × 37 × 11), and a concatenation\
    \ of 423 days of spatial matrices. Similarly, the test\ninput data has a dimension\
    \ of (282 × 37 × 11). The output comprises the pH value for\n37 water stations\
    \ for each day. Hence, the training and test output data dimensions are\n(423\
    \ × 37) and (282 × 37), respectively. A statistical summary of input and output\
    \ training\nand testing data is presented in Table 1. It can be assumed that both\
    \ data are generated from\nthe same distribution and, hence, can be used to train\
    \ and evaluate the CNN for IWQP.\nTable 1. Statistical summary of training and\
    \ testing input data and corresponding pH values.\nMeasure\nFeat-1\nFeat-2\nFeat-3\n\
    Feat-4\nFeat-5\nFeat-6\nFeat-7\nFeat-8\nFeat-9\nFeat-10\nFeat-11\npH\nTraining\n\
    Mean\n0.0652\n0.8894\n0.0290\n0.0432\n0.5678\n0.8586\n0.6049\n0.5783\n0.5571\n\
    0.5368\n0.5532\n0.6644\nS.D.\n0.1614\n0.0348\n0.1208\n0.1333\n0.1205\n0.0311\n\
    0.1468\n0.1718\n0.2040\n0.2123\n0.1901\n0.0293\nMin\n0.0005\n0.5769\n0.0003\n\
    0.0005\n0.1250\n0.7195\n0.0758\n0.0315\n0.0594\n0.0256\n0.0901\n0.5741\nQ1\n0.0019\n\
    0.8718\n0.0016\n0.0018\n0.4868\n0.8415\n0.5152\n0.4803\n0.3938\n0.3654\n0.3983\n\
    0.6481\nQ2\n0.0026\n0.8974\n0.0022\n0.0024\n0.5658\n0.8537\n0.6061\n0.5906\n0.5313\n\
    0.5096\n0.5320\n0.6667\nQ3\n0.0055\n0.9103\n0.0035\n0.0048\n0.6579\n0.8780\n0.7121\n\
    0.7087\n0.7406\n0.7244\n0.7238\n0.6759\nMax\n1.0000\n0.9872\n1.0000\n1.0000\n\
    1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n0.9630\nTesting\nMean\n\
    0.0813\n0.8843\n0.0340\n0.0529\n0.5256\n0.8552\n0.5556\n0.5259\n0.6352\n0.6188\n\
    0.6244\n0.6622\nS.D.\n0.1780\n0.0360\n0.1243\n0.1415\n0.1138\n0.0312\n0.1405\n\
    0.1695\n0.1852\n0.1929\n0.1724\n0.0294\nMin\n0.0007\n0.4103\n0.0003\n0.0007\n\
    0.1184\n0.7317\n0.0682\n0.0315\n0.0625\n0.0224\n0.1105\n0.5741\nQ1\n0.0019\n0.8590\n\
    0.0015\n0.0018\n0.4671\n0.8415\n0.5000\n0.4646\n0.5281\n0.5032\n0.5291\n0.6481\n\
    Q2\n0.0026\n0.8846\n0.0022\n0.0024\n0.5263\n0.8537\n0.5682\n0.5512\n0.6750\n0.6571\n\
    0.6613\n0.6574\nQ3\n0.0056\n0.9103\n0.0040\n0.0050\n0.5921\n0.8780\n0.6288\n0.6142\n\
    0.7656\n0.7532\n0.7500\n0.6759\nMax\n1.0000\n1.0000\n0.8566\n0.8633\n0.9276\n\
    0.9878\n0.9848\n0.9606\n1.0000\n0.9936\n0.9913\n1.0000\n2.2. Proposed IWQP Approach\n\
    DL methods have attracted signiﬁcant research interest due to their response capability\n\
    to many data forms in diverse contexts, such as prediction and classiﬁcation issues.\
    \ They\nhave been successfully applied to smart homes [20], image segmentation\
    \ [21], self-driving\nvehicles [22], agriculture [23], and to many others. These\
    \ techniques teach a device to\nanalyse inputs using several layers, similar to\
    \ human brain processing, to aid in data\nclassiﬁcation and prediction, simulating\
    \ the brain’s capacity to process information and\nreach the right judgments [24].\
    \ In this work, the water quality dataset requires a quality\nvalue to be predicted\
    \ for each water station. This indicates that the given problem is\nWater 2023,\
    \ 15, 1657\n4 of 11\nmultivariate regression, with 37 outputs to be predicted\
    \ simultaneously. Figure 1 shows\nthe overall system ﬂow used in this work to\
    \ predict the water quality in terms of pH value\nin the irrigation system framework.\
    \ The input data is already divided into training and test\nsubsets. We use only\
    \ the training subset for model generation and validation, while the\ntesting\
    \ subset is used to evaluate the generalized performance of the model using three\n\
    different errors.\n t\ng\np\np\nbility to many data forms in diverse contexts, such as prediction and classiﬁcation issues. \n\
    They have been successfully applied to smart homes [20], image segmentation [21], self-\n\
    driving vehicles [22], agriculture [23], and to many others. These techniques teach a device \n\
    to analyse inputs using several layers, similar to human brain processing, to aid in data \n\
    classiﬁcation and prediction, simulating the brain’s capacity to process information and \n\
    reach the right judgments [24]. In this work, the water quality dataset requires a quality \n\
    value to be predicted for each water station. This indicates that the given problem is mul-\n\
    tivariate regression, with 37 outputs to be predicted simultaneously. Figure 1 shows the \n\
    overall system ﬂow used in this work to predict the water quality in terms of pH value in \n\
    the irrigation system framework. The input data is already divided into training and test \n\
    subsets. We use only the training subset for model generation and validation, while the \n\
    testing subset is used to evaluate the generalized performance of the model using three \n\
    diﬀerent errors. \n \nFigure 1. Overall system ﬂow of the IWQP approach. \nThe \
    \ developed  architecture  of  CNN  for  irrigation  water  quality  prediction \n\
    (IWQP4Net) is shown in Figure 2. It comprises two convolution layers, a max-pooling \n\
    layer, a dropout layer, and two fully-connected (dense) layers. The input data is arranged \n\
    in a 3D matrix as: (no. of training examples, no. of water stations, no. of features per sta-\n\
    tion). The training and test data dimensions are (423 × 37 × 11) and (282 × 37 × 11), respec-\n\
    tively. Hence, 2D convolution and 2D max-pooling layers are used to analyze the data \n\
    [25]. The initial convolution layer uses 20 kernel functions of (3 × 3) dimensions to extract \n\
    the coarse features. For the  \U0001D456th layer, the output  \U0001D466ሾ௜ሿሺ\U0001D457\
    , \U0001D458ሻ  at  \U0001D457th row and  \U0001D458th column is \ncalculated \
    \ by  convolving  the  kernel  \U0001D464ሾ௜ሿ   with  the  output  of  the  previous \
    \ layer \n൛\U0001D466ሾ௜ିଵሿሺ\U0001D457, \U0001D458ሻ s. t. \U0001D457 ∈ ሾ0, \U0001D43D\
    \ െ 1ሿ & \U0001D458 ∈ ሾ0, \U0001D43E െ 1ሿൟ  as, \nyሾ୧ሿሺj, kሻ ൌ ෍ ෍ wሾ୧ሿሺj, kሻ\
    \   yሾ୧ିଵሿሺj ൅ a, k ൅ bሻ\nଶ\nୠୀ଴\nଶ\nୟୀ଴\n \n(1)\nThe output dimension of the ﬁrst convolution layer is (35 × 9 × 20), corresponding to \n\
    a reduction of 2 in the ﬁrst two dimensions by kernel convolution, and the third dimension \n\
    is the same as the number of individual kernel functions. The zero-padding is not used to \n\
    eliminate redundant data and bottleneck sooner in the network, forcing only important \n\
    Figure 1. Overall system ﬂow of the IWQP approach.\nThe developed architecture\
    \ of CNN for irrigation water quality prediction (IWQP4Net)\nis shown in Figure\
    \ 2. It comprises two convolution layers, a max-pooling layer, a dropout\nlayer,\
    \ and two fully-connected (dense) layers. The input data is arranged in a 3D matrix\
    \ as:\n(no. of training examples, no. of water stations, no. of features per station).\
    \ The training and\ntest data dimensions are (423 × 37 × 11) and (282 × 37 × 11),\
    \ respectively. Hence, 2D convo-\nlution and 2D max-pooling layers are used to\
    \ analyze the data [25]. The initial convolution\nlayer uses 20 kernel functions\
    \ of (3 × 3) dimensions to extract the coarse features. For the ith\nlayer, the\
    \ output y[i](j, k) at jth row and kth column is calculated by convolving the\
    \ kernel\nw[i] with the output of the previous layer {y[i−1](j, k) s.t. j ∈ [0,\
    \ J − 1] & k ∈ [0, K − 1]} as,\ny[i](j, k) =\n2\n∑\na=0\n2\n∑\nb=0\nw[i](j, k)\
    \ y[i−1](j + a, k + b)\n(1)\nWater 2023, 15, x FOR PEER REVIEW \n5  of  11 \n\
     \nfeatures to pass further. The dimension of the ﬁrst layer’s output is further reduced by a \n\
    max-pooing layer that uses a (2 × 2) window function. With similar assumptions as above, \n\
    the output of any max-pooling layer can be calculated as, \n\U0001D466ሾ௜ሿሺ\U0001D457\
    , \U0001D458ሻ ൌ max ቀ\U0001D466ሾ௜ିଵሿሺ\U0001D457, \U0001D458ሻ, \U0001D466ሾ௜ିଵሿሺ\U0001D457\
    \ ൅ 1, \U0001D458ሻ, \U0001D466ሾ௜ିଵሿሺ\U0001D457, \U0001D458 ൅ 1ሻ, \U0001D466ሾ௜ିଵሿሺ\U0001D457\
    \ ൅ 1, \U0001D458 ൅ 1ሻቁ \n(2)\nIn simple terms, only the most signiﬁcant (highest-valued) convolutions are retained, \n\
    while others are discarded. The output dimension of max-pooled convolution is (17 × 4 × \n\
    20), compressing the ﬁrst two dimensions by the respective kernel size while the number \n\
    of ﬁlters dimension is retained. To generate more complex features that capture the ﬁner \n\
    details, another convolution layer comprising ten kernel functions, each of (3 × 3) dimen-\n\
    sion, is added. To maintain our objective, zero-padding was not allowed in this layer, sim-\n\
    ilar to the previous convolution layer. Hence, the output dimension reduces to (15 × 2 × \n\
    10). This ends the feature extractor part of the IWQP4Net. The details of layers, output \n\
    dimension, and trainable parameters are provided in Table 2. \n \nFigure 2. The architecture of the developed IWQP4Net. \n\
    Table 2. Developed IWQP4Net model’s parameters summary. \nLayer Type \nKernel Parameters \n\
    Output Shape \nTrainable Parameters \nInput \n- \n(37, 11) \n- \nConvolution 2D\n\
    (3 3 20) ReLU\n(35 9 20)\n200\nFigure 2. The architecture of the developed IWQP4Net.\n\
    Water 2023, 15, 1657\n5 of 11\nThe output dimension of the ﬁrst convolution layer\
    \ is (35 × 9 × 20), corresponding to\na reduction of 2 in the ﬁrst two dimensions\
    \ by kernel convolution, and the third dimension\nis the same as the number of\
    \ individual kernel functions. The zero-padding is not used to\neliminate redundant\
    \ data and bottleneck sooner in the network, forcing only important\nfeatures\
    \ to pass further. The dimension of the ﬁrst layer’s output is further reduced\
    \ by a\nmax-pooing layer that uses a (2 × 2) window function. With similar assumptions\
    \ as above,\nthe output of any max-pooling layer can be calculated as,\ny[i](j,\
    \ k) = max\n\x10\ny[i−1](j, k), y[i−1](j + 1, k), y[i−1](j, k + 1), y[i−1](j +\
    \ 1, k + 1)\n\x11\n(2)\nIn simple terms, only the most significant (highest-valued)\
    \ convolutions are retained,\nwhile others are discarded. The output dimension\
    \ of max-pooled convolution is (17 × 4 × 20),\ncompressing the ﬁrst two dimensions\
    \ by the respective kernel size while the number of ﬁl-\nters dimension is retained.\
    \ To generate more complex features that capture the ﬁner details,\nanother convolution\
    \ layer comprising ten kernel functions, each of (3 × 3) dimension, is\nadded.\
    \ To maintain our objective, zero-padding was not allowed in this layer, similar\
    \ to the\nprevious convolution layer. Hence, the output dimension reduces to (15\
    \ × 2 × 10). This\nends the feature extractor part of the IWQP4Net. The details\
    \ of layers, output dimension,\nand trainable parameters are provided in Table\
    \ 2.\nTable 2. Developed IWQP4Net model’s parameters summary.\nLayer Type\nKernel\
    \ Parameters\nOutput Shape\nTrainable Parameters\nInput\n-\n(37, 11)\n-\nConvolution\
    \ 2D\n(3, 3, 20), ReLU\n(35, 9, 20)\n200\nMax. Pooling 2D\n(2, 2)\n(17, 4, 20)\n\
    0\nConvolution 2D\n(3, 3, 10), ReLU\n(15, 2, 10)\n1810\nFlatten\n(1, 300)\n(300)\n\
    0\nDropout\n0.4\n(300)\n0\nDense\n60, ReLU\n(60)\n18,060\nDense\n37, ReLU\n(37)\n\
    2257\nTotal trainable parameters\n22,327\nThe 3D output of the feature extractor\
    \ part is rearranged to only one dimension by the\nﬂattened layer. It should be\
    \ noted that the ﬂattened layer, the fourth layer shown in the\nIWQP4Net architecture,\
    \ is non-trainable and has no parameters. It can be understood as a\ncylindrical\
    \ convolution layer with a unity valued kernel function of size (1 × 1) and the\n\
    number of ﬁlters equal to the total number of coefﬁcients in the previous convolution\
    \ layer\noutput. The resulting dimension is 300 (15 × 2 × 10). The large number\
    \ of parameters\nin the CNNs keeps them at risk of overﬁtting. In this work, training\
    \ examples are 423,\nwhich a large CNN model can easily memorize. To avoid overﬁtting\
    \ and increase general-\nization [26,27], a dropout layer with 40% of the input\
    \ being randomly set to 0 is added in\nthe sequential model. This is another example\
    \ of a non-trainable layer. It is followed by\nanother dense layer with 60 neurons\
    \ that acts as a reduction layer to ﬁlter out important\nfeatures for the current\
    \ regression task. Finally, an output layer with the number of neurons\nequal\
    \ to the number of water stations is added to get the ﬁnal water quality prediction.\
    \ All\ntrainable layers in the IWQP4Net architecture use Rectiﬁed Linear Unit\
    \ (ReLU) activation.\n3. Evaluation Measurements\nThe introduced approach and\
    \ the other models are evaluated using statistical evalua-\ntion criteria as given\
    \ in Table 3. Also, visualization approaches comprising the loss curve of\ntraining\
    \ and validation, scatter plots of prediction and observed values, and the histogram\n\
    of prediction error with Gaussian approximation are used to assess the models.\
    \ For the\nobserved water quality WQobs and predicted water quality WQpre, the\
    \ evaluation measures\ncan be calculated as follows:\nWater 2023, 15, 1657\n6\
    \ of 11\nTable 3. Evaluation measures of the models.\nMeasure\nDeﬁnition\nEquation\n\
    RMSE\nRoot Mean Squared Error\nRMSE =\ns\n1\nM\nM\n∑\nm=1\n\0WQobs(m) − WQpre(m)\n\
    \x012\n(3)\nMAPE\nMean Absolute Percentage Error\nMAPE =\n1\nM\nM\n∑\nm=1\n\f\f\
    WQobs(m) − WQpre(m)/WQobs(m)\n\f\f\n(4)\nMAE\nMean Absolute Error\nMAE =\n1\n\
    M\nM\n∑\nm=1\n\f\fWQobs(m) − WQpre(m)\n\f\f\n(5)\n4. Experimental Results and\
    \ Discussion\nThe open-source TensorFlow library in Python is used to implement\
    \ all of the models,\nwhich are then run on an Intel Xenon CPU running at 2.00\
    \ GHz with 13 GB of memory\nand a 12-GB NVIDIA Tesla P100 GPU. Table 4 shows the\
    \ hyper-parameters used in the\nmodeling stage of the LR, SVR, kNN, and IWQP models.\
    \ These settings are chosen after\nexperimental research showed that they are\
    \ the most effective ones for model training.\nTable 4. Model’s training of the\
    \ hyper-parameter settings.\nModels\nHyper-Parameters and Value\nLR\nFit intercept\
    \ = True, Normalization = True\nSVR\nKernel= Radial basis Function, Normalization\
    \ = True, C = 1.0, epsilon = 0.2\nkNN\nNeighbors = 5, weights = Uniform, leaf\
    \ size = 30, metric = Minkowski\nIWQP4Net\nLoss = MSE, optimizer = Adam, learning\
    \ rate = 0.01, batch size = 120,\nepochs = 80, validation split = 0.2\nThe IWQP4Net\
    \ has a large number of trainable parameters, as shown in Table 1. The\n423 training\
    \ examples are available in the dataset, which is very small compared to the\n\
    trainable parameters of the IWQP4Net. This puts the network at risk of overﬁtting.\
    \ During\ntraining, the optimum hyper-parameter set for the network was guided\
    \ by the loss curves\nfor training and validation. The learning rate and batch\
    \ size are searched over a logarithmic\nrange, while epochs are varied linearly.\
    \ For large learning rates, the loss function is noisy;\nhence, the CNN is unreliable\
    \ due to the high variance problem. This variance can be\nreduced up to a level\
    \ by increasing the batch size, but the predicted MAPE was high.\nAfter reducing\
    \ the learning rates to very small values, the optimum solution was obtained\n\
    after several hundreds of epochs. Figure 3 shows the training and validation loss\
    \ for the\ndeveloped IWQP4Net’s optimum hyper-parameters, as mentioned in Table\
    \ 4. It can be\nseen that both loss values decrease rapidly at the start, and\
    \ no overﬁtting has occurred.\nWater 2023, 15, x FOR PEER REVIEW \n7  of  11 \n\
     \nafter several hundreds of epochs. Figure 3 shows the training and validation loss for the \n\
    developed IWQP4Net’s optimum hyper-parameters, as mentioned in Table 4. It can be \n\
    seen that both loss values decrease rapidly at the start, and no overﬁtting has occurred. \n\
     \nFigure 3. Mean squared error of the IWQP4Net model with optimum hyper-parameters for the \n\
    training and validation data of water quality prediction. \nThe average training and testing performance of all competing models for 10 itera-\n\
    tions are tabulated in Table 5, using the three types of evaluation measures provided in \n\
    Section 3. The training errors for LR are the lowest, indicating the best training perfor-\n\
    mance. However, the testing performance of the LR model is the worst. This indicates that \n\
    the LR model suﬀers from an overﬁtting problem. The developed IWQP4Net approach \n\
    Figure 3. Mean squared error of the IWQP4Net model with optimum hyper-parameters\
    \ for the\ntraining and validation data of water quality prediction.\nWater 2023,\
    \ 15, 1657\n7 of 11\nThe average training and testing performance of all competing\
    \ models for 10 iterations\nare tabulated in Table 5, using the three types of\
    \ evaluation measures provided in Section 3.\nThe training errors for LR are the\
    \ lowest, indicating the best training performance. However,\nthe testing performance\
    \ of the LR model is the worst. This indicates that the LR model\nsuffers from\
    \ an overﬁtting problem. The developed IWQP4Net approach shows the second-\nhighest\
    \ training performance, followed by kNN and SVR. All three errors of the developed\n\
    IWQP4Net are lower during testing than the three competing models, which indicates\
    \ its\nhigher capability than the others for water quality prediction.\nTable\
    \ 5. Comparative analysis of different prediction models using error measures.\n\
    Model\nData Subset\nRMSE\nMAPE\nMAE\nLR\nTraining\n0.0008\n0.0009\n0.0006\nTesting\n\
    0.0549\n0.0855\n0.0406\nSVR\nTraining\n0.0122\n0.0251\n0.0097\nTesting\n0.0100\n\
    0.0211\n0.0085\nkNN\nTraining\n0.0052\n0.0085\n0.0036\nTesting\n0.0108\n0.0212\n\
    0.0090\nIWQP4Net\nTraining\n0.0048\n0.0078\n0.0034\nTesting\n0.0080\n0.0195\n\
    0.0068\nFurther investigation of the performance of the introduced approach is\
    \ also carried\nout by visualizing the scatter plots. Figure 4 shows scatter plots\
    \ with the observed pH\npredicted on the horizontal axis and the predicted pH\
    \ on the vertical axis of all four models\nfor training and testing data. Each\
    \ scatter plot is superimposed with a regression line with\nthe regression equation\
    \ mentioned at the top. As shown in Table 5, LR has the smallest\ntraining MAPE\
    \ and the testing MAPE is the worst. A similar visualization can be seen in\n\
    Figure 4.\nThe scatter plot for LR training shows the best performance with a\
    \ minimal deviation\nfor the regression line, but testing scatter plots show a\
    \ very high deviation from the\nregression line. Scatter plots for the IWQP4Net\
    \ model show a good match between the\nobserved and predicted water quality. The\
    \ SVR and kNN models show slightly higher\ndeviation from the regression line\
    \ than the developed model.\nThe prediction error analysis is examined to understand\
    \ the behavior of all four\nprediction models. Figure 5 shows the histograms (bin\
    \ width = 0.005) of prediction error\n(WQpre − WQobs) of all four models for training\
    \ and testing data. Kernel density (KDE)\nplots superimpose all histograms with\
    \ Gaussian kernel and bandwidth calculated using\nScott’s method [28]. As stated\
    \ above, an impulsive training error and an almost ﬂat (very\nhigh standard deviation)\
    \ testing error characterizes the overﬁtted LR model. The training\nhistogram\
    \ and KDE plots of IWQP4Net provide a high concentration with lower prediction\n\
    errors. Similar behavior can also be seen in the testing data with a slight bias\
    \ toward the\nvalue for predicted water quality. The kNN model also shows a concentration\
    \ of training\nand testing errors toward lower values with a slightly higher standard\
    \ deviation than the\ndeveloped method. The SVR model shows a signiﬁcantly large\
    \ variation in training and\ntesting errors.\nWater 2023, 15, 1657\n8 of 11\n\
    Water 2023, 15, x FOR PEER REVIEW \n8  of  11 \n \n \n \nTraining \nTesting \n\
    LR \n \n \nSVR \n \n \nkNN \n \n \nIWQP4\nNet \n \n \nFigure 4. Scatter plots of observed and predicted pH (marked by green dot) with regression (red \n\
    solid) for training and testing data. \nThe scatter plot for LR training shows the best performance with a minimal deviation \n\
    for the regression line, but testing scatter plots show a very high deviation from the re-\n\
    gression line. Scatter plots for the IWQP4Net model show a good match between the ob-\n\
    served and predicted water quality. The SVR and kNN models show slightly higher de-\n\
    viation from the regression line than the developed model. \nFigure 4. Scatter\
    \ plots of observed and predicted pH (marked by green dot) with regression (red\n\
    solid) for training and testing data.\nWater 2023, 15, 1657\n9 of 11\n \nhigh standard deviation) testing error characterizes the overﬁtted LR model. The training \n\
    histogram and KDE plots of IWQP4Net provide a high concentration with lower predic-\n\
    tion errors. Similar behavior can also be seen in the testing data with a slight bias toward \n\
    the value for predicted water quality. The kNN model also shows a concentration of train-\n\
    ing and testing errors toward lower values with a slightly higher standard deviation than \n\
    the developed method. The SVR model shows a signiﬁcantly large variation in training \n\
    and testing errors. \n \nTraining \nTesting \nLR \n \nSVR \n \n \nkNN \n \n \n\
    Water 2023, 15, x FOR PEER REVIEW \n10  of  11 \n \nIWQP4Net \n \n \nFigure 5. Histogram of the observed error and predicted pH with kernel density approximation (red \n\
    solid) for training and testing data. \n5. Conclusions and Future Works \nThe recent years have seen a rise in the interest in precision agriculture due to the \n\
    increasing demands for food and water from a population that is expanding worldwide. \n\
    To satisfy these demands, farmers thus need access to water and fertile land. In this paper, \n\
    an IWQP approach is developed by using an eﬃcient CNN structure. The IWQP4Net con-\n\
    sists of two convolution layers, a max-pooling layer, a dropout layer, and two dense lay-\n\
    ers. Some statistical measures, including RMSE, MSE, and MAE, are utilized to assess \n\
    IWQP4Net, and its performance is compared with the LR, SVR, and kNN models. The \n\
    results showed that the developed IWQP4Net approach has the lowest RMSE, MSE, and \n\
    MAE values compared to the other models. In the future, the proposed IWQP approach \n\
    can be applied to a large-scale IoT-based online monitoring system to predict the water \n\
    quality based on the real-time data fed from the IoT system Another possible avenue\
    \ is\nFigure 5. Histogram of the observed error and predicted pH with kernel density\
    \ approximation (red\nsolid) for training and testing data.\n5. Conclusions and\
    \ Future Works\nThe recent years have seen a rise in the interest in precision\
    \ agriculture due to the\nincreasing demands for food and water from a population\
    \ that is expanding worldwide.\nTo satisfy these demands, farmers thus need access\
    \ to water and fertile land. In this paper,\nan IWQP approach is developed by\
    \ using an efﬁcient CNN structure. The IWQP4Net\nconsists of two convolution layers,\
    \ a max-pooling layer, a dropout layer, and two dense\nlayers. Some statistical\
    \ measures, including RMSE, MSE, and MAE, are utilized to assess\nWater 2023,\
    \ 15, 1657\n10 of 11\nIWQP4Net, and its performance is compared with the LR, SVR,\
    \ and kNN models. The\nresults showed that the developed IWQP4Net approach has\
    \ the lowest RMSE, MSE, and\nMAE values compared to the other models. In the future,\
    \ the proposed IWQP approach\ncan be applied to a large-scale IoT-based online\
    \ monitoring system to predict the water\nquality based on the real-time data\
    \ fed from the IoT system. Another possible avenue is to\napply metaheuristic\
    \ methods as a feature selection along with the developed IWQP4Net\napproach in\
    \ the application of agriculture, because these optimization algorithms have\n\
    shown great potential in other domains.\nAuthor Contributions: Methodology, I.A.-S.\
    \ and S.D.; software I.A.-S., resources, I.A.-S.; data cura-\ntion, I.A.-S. and\
    \ S.D.; writing—original draft preparation, I.A.-S.; writing—review, I.A.-S. and\
    \ S.D.\nAll authors have read and agreed to the published version of the manuscript.\n\
    Funding: The authors extend their appreciation to the deanship for research and\
    \ innovation,\nand to the Ministry of Education in Saudi Arabia for funding this\
    \ research work through project\nnumber RUP3-1.\nData Availability Statement:\
    \ The data supporting the ﬁndings of this study are publicly available\nin Kaggle.\n\
    Conﬂicts of Interest: The authors declare that they have no conﬂict of interest.\n\
    References\n1.\nLi, P.; Wu, J. Drinking Water Quality and Public Health. Expo.\
    \ Health 2019, 11, 73–79. [CrossRef]\n2.\nFadel, A.A.; Shujaa, M.I. Water Quality\
    \ Monitoring System Based on IOT Platform. IOP Conf. Ser. Mater. Sci. Eng. 2020,\n\
    928, 032054. [CrossRef]\n3.\nNational Institution for Transforming India (NITI)\
    \ Aayog. Raising Agricultural Productivity and Making Farming Remunerative for\n\
    Farmers; NITI Aayog, Government of India: New Delhi, India, 2015.\n4.\nKondaveti,\
    \ R.; Reddy, A.; Palabtla, S. Smart irrigation system using machine learning and\
    \ IoT. In Proceedings of the 2019\nInternational Conference on Vision Towards\
    \ Emerging Trends in Communication and Networking (ViTECoN), Vellore, India,\n\
    30–31 March 2019.\n5.\nGoap, A.; Sharma, D.; Shukla, A.K.; Krishna, C.R. An IoT\
    \ based smart irrigation management system using Machine learning and\nopen source\
    \ technologies. Comput. Electron. Agric. 2018, 155, 41–49. [CrossRef]\n6.\nSaraiva,\
    \ M.; Protas, É.; Salgado, M.; Souza, C., Jr. Automatic mapping of center pivot\
    \ irrigation systems from satellite images\nusing deep learning. Remote Sens.\
    \ 2020, 12, 558. [CrossRef]\n7.\nChen, H.; Chen, A.; Xu, L.; Xie, H.; Qiao, H.;\
    \ Lin, Q.; Cai, K. A deep learning CNN architecture applied in smart near-infrared\n\
    analysis of water pollution for agricultural irrigation resources. Agric. Water\
    \ Manag. 2020, 240, 106303. [CrossRef]\n8.\nVianny, D.M.M.; John, A.; Mohan, S.K.;\
    \ Sarlan, A.; Adimoolam; Ahmadian, A. Water optimization technique for precision\n\
    irrigation system using IoT and machine learning. Sustain. Energy Technol. Assess.\
    \ 2022, 52, 102307. [CrossRef]\n9.\nKashyap, P.K.; Kumar, S.; Jaiswal, A.; Prasad,\
    \ M.; Gandomi, A.H. Towards precision agriculture: IoT-enabled intelligent irrigation\n\
    systems using deep learning neural network. IEEE Sens. J. 2021, 21, 17479–17491.\
    \ [CrossRef]\n10.\nIorliam, A.; Sylvester, B.U.M.; Aondoakaa, I.S.; Iorliam, I.B.;\
    \ Shehu, Y. Machine Learning Techniques for the Classiﬁcation of\nIoT-Enabled\
    \ Smart Irrigation Data for Agricultural Purposes. Gazi Univ. J. Sci. Part A Eng.\
    \ Innov. 2022, 9, 378–391. [CrossRef]\n11.\nNayak, S. Assessment of Water Quality\
    \ of Brahmani River Using Correlation and Regression Analysis. 2020. Available\
    \ online:\nhttps://www.preprints.org/manuscript/202003.0088/v1 (accessed on 18\
    \ March 2023).\n12.\nVij, A.; Vijendra, S.; Jain, A.; Bajaj, S.; Bassi, A.; Sharma,\
    \ A. IoT and Machine Learning Approaches for Automation of Farm\nIrrigation System.\
    \ Procedia Comput. Sci. 2020, 167, 1250–1257. [CrossRef]\n13.\nSayari, S.; Mahdavi-Meymand,\
    \ A.; Zounemat-Kermani, M. Irrigation water inﬁltration modeling using machine\
    \ learning. Comput.\nElectron. Agric. 2020, 180, 105921. [CrossRef]\n14.\nAkshay,\
    \ S.; Ramesh, T.K. Efﬁcient machine learning algorithm for smart irrigation. In\
    \ Proceedings of the 2020 International\nConference on Communication and Signal\
    \ Processing (ICCSP), Chennai, India, 28–30 July 2020; pp. 867–870.\n15.\nSaranya,\
    \ T.; Deisy, C.; Sridevi, S.; Anbananthen, K.S.M. A comparative study of deep\
    \ learning and Internet of Things for precision\nagriculture. Eng. Appl. Artif.\
    \ Intell. 2023, 122, 106034. [CrossRef]\n16.\nAbdallah, E.B.; Grati, R.; Boukadi,\
    \ K. A machine learning-based approach for smart agriculture via stacking-based\
    \ ensemble\nlearning and feature selection methods. In Proceedings of the 2022\
    \ 18th International Conference on Intelligent Environments\n(IE), Biarritz, France,\
    \ 20–23 June 2022; pp. 1–8.\n17.\nLap, B.Q.; Phan, T.-T.; Du Nguyen, H.; Quang,\
    \ L.X.; Hang, P.T.; Phi, N.Q.; Hoang, V.T.; Linh, P.G.; Hang, B.T.T. Predicting\
    \ Water\nQuality Index (WQI) by feature selection and machine learning: A case\
    \ study of An Kim Hai irrigation system. Ecol. Inform. 2023,\n74, 101991. [CrossRef]\n\
    Water 2023, 15, 1657\n11 of 11\n18.\nBarzegar, R.; Aalami, M.T.; Adamowski, J.\
    \ Short-term water quality variable prediction using a hybrid CNN–LSTM deep learning\n\
    model. Stoch. Environ. Res. Risk Assess. 2020, 34, 415–433. [CrossRef]\n19.\n\
    Zhao, L.; Gkountouna, O.; Pfoser, D. Spatial Auto-regressive Dependency Interpretable\
    \ Learning Based on Spatial Topological\nConstraints. ACM Trans. Spat. Algorithms\
    \ Syst. 2019, 5, 1–28. [CrossRef]\n20.\nBianchi, V.; Bassoli, M.; Lombardo, G.;\
    \ Fornacciari, P.; Mordonini, M.; De Munari, I. IoT Wearable Sensor and Deep Learning:\
    \ An\nIntegrated Approach for Personalized Human Activity Recognition in a Smart\
    \ Home Environment. IEEE Internet Things J. 2019, 6,\n8553–8562. [CrossRef]\n\
    21.\nMinaee, S.; Boykov, Y.Y.; Porikli, F.; Plaza, A.J.; Kehtarnavaz, N.; Terzopoulos,\
    \ D. Image segmentation using deep learning: A\nsurvey. IEEE Trans. Pattern Anal.\
    \ Mach. Intell. 2021, 44, 3523–3542. [CrossRef] [PubMed]\n22.\nGupta, A.; Anpalagan,\
    \ A.; Guan, L.; Khwaja, A.S. Deep learning for object detection and scene perception\
    \ in self-driving cars:\nSurvey, challenges, and open issues. Array 2021, 10,\
    \ 100057. [CrossRef]\n23.\nZheng, Y.-Y.; Kong, J.-L.; Jin, X.-B.; Wang, X.-Y.;\
    \ Su, T.-L.; Zuo, M. CropDeep: The Crop Vision Dataset for Deep-Learning-Based\n\
    Classiﬁcation and Detection in Precision Agriculture. Sensors 2019, 19, 1058.\
    \ [CrossRef]\n24.\nMoshayedi, A.J.; Roy, A.S.; Kolahdooz, A.; Shuxin, Y. Deep\
    \ Learning Application Pros and Cons over Algorithm. EAI Endorsed\nTrans. AI Robot.\
    \ 2022, 1, 1–13. [CrossRef]\n25.\nMathew, A.; Amudha, P.; Sivakumari, S. Deep\
    \ learning techniques: An overview. In Advanced Machine Learning Technologies\
    \ and\nApplications: Proceedings of AMLTA 2020; Springer: Singapore, 2021; pp.\
    \ 599–608.\n26.\nKim, T.Y.; Cho, S.B. Predicting the household power consumption\
    \ using CNN-LSTM hybrid networks. In Proceedings of the\nIntelligent Data Engineering\
    \ and Automated Learning–IDEAL 2018: 19th International Conference, Madrid, Spain,\
    \ 21–23 November 2018;\nPart I; Springer International Publishing: Cham, Switzerland,\
    \ 2018; Volume 19, pp. 481–490.\n27.\nAl-Shourbaji, I.; Kachare, P.H.; Abualigah,\
    \ L.; Abdelhag, M.E.; Elnaim, B.; Anter, A.M.; Gandomi, A.H. A Deep Batch Normalized\n\
    Convolution Approach for Improving COVID-19 Detection from Chest X-ray Images.\
    \ Pathogens 2022, 12, 17. [CrossRef]\n28.\nScott, D.W. On optimal and data-based\
    \ histograms. Biometrika 1979, 66, 605–610. [CrossRef]\nDisclaimer/Publisher’s\
    \ Note: The statements, opinions and data contained in all publications are solely\
    \ those of the individual\nauthor(s) and contributor(s) and not of MDPI and/or\
    \ the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury\
    \ to\npeople or property resulting from any ideas, methods, instructions or products\
    \ referred to in the content.\n"
  inline_citation: '>'
  journal: Water (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2073-4441/15/9/1657/pdf?version=1682317674
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'IWQP4Net: An Efficient Convolution Neural Network for Irrigation Water Quality
    Prediction'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.20944/preprints202306.1063.v1
  analysis: '>'
  authors:
  - Simone Ferrari
  - Milad Zoghi
  - Giancarlo Paganin
  - Giuliano Dall’O’
  citation_count: 1
  full_citation: '>'
  full_text: '>

    This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details             Deny Allow selection
    Allow all Instructions for Authors Awards About FAQ Submit Log in/Register preprints.org
    > engineering > architecture, building and construction > doi: 10.20944/preprints202306.1063.v1
    Preprint Review Version 1 Preserved in Portico This version is not peer-reviewed
    A Practical Review to Support the Implementation of Smart Solutions within Neighbourhood
    Building Stock Simone Ferrari , Milad Zoghi * , Giancarlo Paganin , Giuliano Dall''O''
    Version 1 : Received: 14 June 2023 / Approved: 14 June 2023 / Online: 14 June
    2023 (15:12:33 CEST) A peer-reviewed article of this Preprint also exists. Ferrari,
    S.; Zoghi, M.; Paganin, G.; Dall’O’, G. A Practical Review to Support the Implementation
    of Smart Solutions within Neighbourhood Building Stock. Energies 2023, 16, 5701.
    Copy Abstract The construction industry has witnessed the increasing use of digital
    tools and smart solutions, particularly, in the realm of buildings energy automation
    within the concept of smart cities. While to truly realize the potential benefits
    of smart cities, a broader scope of smart initiatives is required to support the
    transition from smart buildings towards smart neighbourhoods, appreciated as the
    critical unit of urban development. To support this interplay of smart solutions
    between buildings and neighbourhoods, this article aims to collect and review
    all smart solutions presented in existing scientific articles, technical literature,
    and realized European projects. These solutions are classified under two main
    sections of buildings and neighbourhoods, which are investigated through five
    domains: buildings energy-related uses, renewable energy sources, water, waste,
    and open space management. Showcasing the quantitative outcomes demonstrates the
    potential benefits of implementing smart solutions from buildings to neighbourhoods.
    Moreover, this research concludes that the true enhancement of energy conservation
    goes beyond the buildings’ energy component and can be genuinely achieved by integrating
    intelligent elements of the neighbourhood, due to their strong interdependencies.
    Future research is recommended to focus on assessing the effectiveness of these
    solutions towards resource conservation. Keywords Smart building; smart energy
    grid; smart energy management; neighborhood building stock; sustainable development
    goals Subject Engineering, Architecture, Building and Construction Copyright:
    This is an open access article distributed under the Creative Commons Attribution
    License which permits unrestricted use, distribution, and reproduction in any
    medium, provided the original work is properly cited. Download PDF Comments (0)
    We encourage comments and feedback from a broad range of readers. See criteria
    for comments and our Diversity statement. Leave a public comment Send a private
    comment to the author(s) * All users must log in before leaving a comment Related
    Articles Peer-review Articles Smart Building Integration into a Smart City (SBISC):
    Development of a New Evaluation Framework Rasa Apanaviciene et al. Energies, 2020
    Positive Energy Districts and Energy Efficiency in Buildings: An Innovative Technical
    Communication Sheet to Facilitate Policy Officers’ Understanding to Enable Technologies
    and Procedure Tiziana Ferrante et al. Energies, 2021 Support Decision Tool for
    Sustainable Energy Requalification the Existing Residential Building Stock. The
    Case Study of Trevignano Romano Fabrizio Cumo et al. Energies, 2020 Smarter Together:
    Monitoring and Evaluation of Integrated Building Solutions for Low-Energy Districts
    of Lighthouse Cities Lyon, Munich, and Vienna Ali Hainoun et al. Energies, 2022
    A Digital-Twin Evaluation of Net Zero Energy Building for Existing Buildings Sakdirat
    Kaewunruen et al. Sustainability, 2018 Net Zero Buildings—A Framework for an Integrated
    Policy in Chile María Piderit et al. Sustainability, 2019 Energy Modelling as
    a Trigger for Energy Communities: A Joint Socio-Technical Perspective Viktor Bukovszki
    et al. Energies, 2020 Smart Building Integration into a Smart City: Comparative
    Study of Real Estate Development Rasa Apanaviciene et al. Sustainability, 2020
    Analysis of Residential Buildings in Poland for Potential Energy Renovation toward
    Zero-Emission Construction Elżbieta Szymańska et al. Energies, 2022 Neighbourhood
    Modelling for Urban Sustainability Assessment Javier Orozco-Messana et al. Sustainability,
    2021 Views 43 Downloads 122 Comments 0 Get PDF Cite Share 0 Bookmark BibSonomy
    Mendeley Reddit Delicious Alerts Notify me about updates to this article or when
    a peer-reviewed version is published. Preprints.org is a free preprint server
    subsidized by MDPI in Basel, Switzerland. Contact us RSS MDPI Initiatives SciProfiles
    Sciforum Encyclopedia MDPI Books Scilit Proceedings JAMS Important links How it
    Works Advisory Board FAQ Friendly Journals Instructions for Authors About Statistics
    Subscribe Choose the area that interest you and we will send you notifications
    of new preprints at your preferred frequency. Subscribe © 2024 MDPI (Basel, Switzerland)
    unless otherwise stated Disclaimer Privacy Policy Terms of Use  Feedback'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: A Practical Review to Support the Implementation of Smart Solutions within
    Neighbourhood Building Stock
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.18297/etd/4029
  analysis: '>'
  authors:
  - Muhammad Zaigham Abbas Shah Syed
  citation_count: 0
  full_citation: '>'
  full_text: ">\nUniversity of Louisville \nUniversity of Louisville \nThinkIR: The\
    \ University of Louisville's Institutional Repository \nThinkIR: The University\
    \ of Louisville's Institutional Repository \nElectronic Theses and Dissertations\
    \ \n12-2022 \nIoT in smart communities, technologies and applications. \nIoT in\
    \ smart communities, technologies and applications. \nMuhammad Zaigham Abbas Shah\
    \ Syed \nUniversity of Louisville \nFollow this and additional works at: https://ir.library.louisville.edu/etd\
    \ \n Part of the Other Computer Engineering Commons \nRecommended Citation \n\
    Recommended Citation \nSyed, Muhammad Zaigham Abbas Shah, \"IoT in smart communities,\
    \ technologies and applications.\" \n(2022). Electronic Theses and Dissertations.\
    \ Paper 4029. \nhttps://doi.org/10.18297/etd/4029 \nThis Doctoral Dissertation\
    \ is brought to you for free and open access by ThinkIR: The University of Louisville's\
    \ \nInstitutional Repository. It has been accepted for inclusion in Electronic\
    \ Theses and Dissertations by an authorized \nadministrator of ThinkIR: The University\
    \ of Louisville's Institutional Repository. This title appears here courtesy of\
    \ \nthe author, who has retained all other copyrights. For more information, please\
    \ contact thinkir@louisville.edu. \nIOT IN SMART COMMUNITIES, TECHNOLOGIES AND\
    \ APPLICATIONS\nBy\nMuhammad Zaigham Abbas Shah Syed\nB.Eng., M.Sc.\nA Dissertation\n\
    Submitted to the Faculty of the\nJ.B. Speed School of Engineering of the University\
    \ of\nLouisville\nin Partial Fulfillment of the Requirements\nfor the Degree of\n\
    Doctor of Philosophy\nin Computer Science and Engineering\nDepartment of Computer\
    \ Science and Engineering\nUniversity of Louisville\nLouisville, Kentucky\nDecember\
    \ 2022\nCopyright 2022 by Muhammad Zaigham Abbas Shah Syed\nAll rights reserved\n\
    IOT IN SMART COMMUNITIES, TECHNOLOGIES AND APPLICATIONS\nBy\nMuhammad Zaigham\
    \ Abbas Shah Syed\nB.Eng., M.Sc.\nDissertation approved on\nNovember 8, 2022\n\
    by the following dissertation Committee:\nDissertation Director\nDr. Adel S. Elmaghraby\n\
    Dr. Daniel Sierrasosa\nDr. Anup Kumar\nDr. Ibrahim Imam\nDr. Monica Gentili\n\
    \    ii\nDEDICATION\nTo my late grandmother, Shireen Shah who always championed\
    \ the im-\nportance of education and personal values. She has had the biggest\
    \ impact\non the person that I have become.\nTo my parents, who worked hard to\
    \ provide us with the best opportunities\nthat can be provided to any child.\n\
    iii\nACKNOWLEDGMENTS\nI would like to thank my supervisor, Dr. Adel Elmaghraby\
    \ for his sup-\nport and guidance throughout the course of my research work here\
    \ at the\nUniversity of Louisville. Without his support and trust I would not\
    \ have\nbeen able to succeed in this endeavor.\nI would also like to thank Dr.\
    \ Anup Kumar and Dr. Daniel Sierra-Sosa\nfor their support in conducting my research\
    \ and providing feedback on\nour experiments which helped improve the quality\
    \ of the work.\nI would like to thank all my friends, both in the United States\
    \ and else-\nwhere who have been a tremendous support to me during my time in\n\
    Louisville. They were like a family away from home.\nFinally, I would like to\
    \ say thanks to my family, who have supported me\nthroughout think and thin. First\
    \ and foremost my parents, my mother\nNaheed and father Sher Muhammad. They through\
    \ their hard work and\ndetermination left no stone unturned to provide us with\
    \ the best upbring-\ning anyone can provide to their children. My wife Farwa,\
    \ who has always\nbeen a pillar of support for me. My siblings, Zafi, Shehram\
    \ and Fiza who\nhave been the best brothers and sister anyone can ask for. My\
    \ sisters in\nlaw, Madiha and Hina and my lovely niece Maryam, who is a cause\
    \ of\nmuch joy in our life.\niv\nABSTRACT\nIOT IN SMART COMMUNITIES, TECHNOLOGIES\
    \ AND APPLICATIONS\nMuhammad Zaigham Abbas Shah, Syed\nNovember 8, 2022\nInternet\
    \ of Things is a system that integrates different devices and technologies,\n\
    removing the necessity of human intervention. This enables the capacity of having\n\
    smart (or smarter) cities around the world. By hosting different technologies\
    \ and al-\nlowing interactions between them, the internet of things has spearheaded\
    \ the develop-\nment of smart city systems for sustainable living, increased comfort\
    \ and productivity\nfor citizens. The Internet of Things (IoT) for Smart Cities\
    \ has many different domains\nand draws upon various underlying systems for its\
    \ operation, in this work, we provide\na holistic coverage of the Internet of\
    \ Things in Smart Cities by discussing the fun-\ndamental components that make\
    \ up the IoT Smart City landscape, the technologies\nthat enable these domains\
    \ to exist, the most prevalent practices and techniques which\nare used in these\
    \ domains as well as the challenges that deployment of IoT systems for\nsmart\
    \ cities encounter and which need to be addressed for ubiquitous use of smart\
    \ city\napplications. It also presents a coverage of optimization methods and\
    \ applications\nfrom a smart city perspective enabled by the Internet of Things.\
    \ Towards this end,\na mapping is provided for the most encountered applications\
    \ of computational opti-\nmization within IoT smart cities for five popular optimization\
    \ methods, ant colony\noptimization, genetic algorithm, particle swarm optimization,\
    \ artificial bee colony op-\ntimization and differential evolution. For each application\
    \ identified, the algorithms\nused, objectives considered, the nature of the formulation\
    \ and constraints taken in\nv\nto account have been specified and discussed. Lastly,\
    \ the data setup used by each\ncovered work is also mentioned and directions for\
    \ future work have been identified.\nWithin the smart health domain of IoT smart\
    \ cities, human activity recognition\nhas been a key study topic in the development\
    \ of cyber physical systems and as-\nsisted living applications. In particular,\
    \ inertial sensor based systems have become\nincreasingly popular because they\
    \ do not restrict users’ movement and are also rel-\natively simple to implement\
    \ compared to other approaches. Fall detection is one of\nthe most important tasks\
    \ in human activity recognition. With an increasingly aging\nworld population\
    \ and an inclination by the elderly to live alone, the need to incor-\nporate\
    \ dependable fall detection schemes in smart devices such as phones, watches\n\
    has gained momentum. Therefore, differentiating between falls and activities of\
    \ daily\nliving (ADLs) has been the focus of researchers in recent years with\
    \ very good results.\nHowever, one aspect within fall detection that has not been\
    \ investigated much is di-\nrection and severity aware fall detection. Since a\
    \ fall detection system aims to detect\nfalls in people and notify medical personnel,\
    \ it could be of added value to health pro-\nfessionals tending to a patient suffering\
    \ from a fall to know the nature of the accident.\nIn this regard, as a case study\
    \ for smart health, four different experiments have been\nconducted for the task\
    \ of fall detection with direction and severity consideration on\ntwo publicly\
    \ available datasets. These four experiments not only tackle the problem\non an\
    \ increasingly complicated level (the first one considers a fall only scenario\
    \ and\nthe other two a combined activity of daily living and fall scenario) but\
    \ also present\nmethodologies which outperform the state of the art techniques\
    \ as discussed. Lastly,\nfuture recommendation have also been provided for researchers.\n\
    vi\nTABLE OF CONTENTS\nMotivation . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n1\nAims . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n2\nOrganization\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n2\nIOT SMART CITIES\n. . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nSmart\
    \ City Components . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5\n2.4\n\
    Smart Health . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.5\nSmart\
    \ Home . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.6\nSmart\
    \ Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.7\nSmart\
    \ Infrastructure . . . . . . . . . . . . . . . . . . . . . . .\n7\n2.8\nSmart\
    \ Transport\n. . . . . . . . . . . . . . . . . . . . . . . . .\n7\nInternet of\
    \ Things for Smart Cities . . . . . . . . . . . . . . . . . . . . . .\n7\n3.1\n\
    IoT Architectures for Smart cities . . . . . . . . . . . . . . . .\n8\n3.1.1\n\
    Cloud Computing Model . . . . . . . . . . . . . . . .\n9\n3.1.2\nFog Computing\
    \ Model . . . . . . . . . . . . . . . . .\n9\n3.1.3\nEdge Computing Model . .\
    \ . . . . . . . . . . . . . .\n10\n3.2\nIoT Challenges for smart Cities . . .\
    \ . . . . . . . . . . . . . .\n11\n3.2.1\nSecurity and Privacy . . . . . . . .\
    \ . . . . . . . . . .\n12\n3.2.2\nSmart Sensors . . . . . . . . . . . . . . .\
    \ . . . . . . .\n13\n3.2.3\nNetworking . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n13\n3.2.4\nBig Data Analytics . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3\nSensing Technologies . . . . . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3.1\nAmbient Sensors . . . . . . . . . . . . . . . . . . . .\n15\n3.3.2\n\
    Bio-Sensors . . . . . . . . . . . . . . . . . . . . . . .\n15\nvii\nDedication\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    iii\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\niv\nAbstract . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\nv\nList of Tables . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\nxi\nList of Figures\n. . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nxiii\nINTRODUCTION\
    \ AND DISSERTATION OVERVIEW\n. . . . . . . . . . . .\n1\n3.3.3\nChemical\n. .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n16\n3.3.4\nElectric Sensors . .\
    \ . . . . . . . . . . . . . . . . . . .\n16\n3.3.5\nHydraulic . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n16\n3.3.6\nIdentification . . . . . . . . .\
    \ . . . . . . . . . . . . .\n17\n3.3.7\nMotion Sensors . . . . . . . . . . . .\
    \ . . . . . . . . .\n17\n3.3.8\nPresence . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n17\n3.3.9\nOther Sensors . . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4\nNetworking Technologies . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4.1\nNetwork Topologies\n. . . . . . . . . . . . . . . . . .\n\
    18\n3.4.2\nNetwork Architectures . . . . . . . . . . . . . . . . .\n19\n3.4.3\n\
    Network Protocols . . . . . . . . . . . . . . . . . . .\n20\n3.5\nSecurity and\
    \ Privacy in Smart City IoT . . . . . . . . . . . . .\n23\n3.5.1\nApplication\
    \ Software Layers\n. . . . . . . . . . . . .\n24\n3.5.2\nNetwork Layer\n. . .\
    \ . . . . . . . . . . . . . . . . . .\n25\n3.5.3\nPerception Layer . . . . . .\
    \ . . . . . . . . . . . . . .\n27\n3.5.4\nSystem Wide Issues\n. . . . . . . .\
    \ . . . . . . . . . .\n27\nSWOT Analysis . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n28\n4.1\nStrengths\n. . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n29\n4.2\nWeaknesses\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n30\n4.3\nOpportunities . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .\n30\n4.4\nThreats\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n30\nConclusions . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n31\nAI IN IOT SMART CITIES .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nBig Data\
    \ Algorithms/Artificial Intelligence . . . . . . . . . . . . . . . . . .\n32\n\
    2.1\nMachine Learning . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    2.2\nDeep Learning . . . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    AI Applications for Smart Cities\n. . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n34\n3.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n36\n3.4\nSmart Health . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n38\n3.5\nSmart Homes . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n40\n3.6\nSmart Industry . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n41\n3.7\nSmart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\n3.8\nSmart Transport\n. . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\nConclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .\n46\nOPTIMIZATION IN IOT SMART CITIES\n. . . . . . . . . . .\
    \ . . . . . . . .\n49\nIntroduction . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n49\nOptimization and Heuristics in IoT Smart Cities\
    \ . . . . . . . . . . . . . . .\n49\nMeheuristic Algorithms . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n50\n3.1\nAnt Colony Optimization\n\
    . . . . . . . . . . . . . . . . . . . .\n50\n3.2\nGenetic Algorithm\n. . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n50\nviii\n3.3\nParticle Swarm Optimization\n\
    . . . . . . . . . . . . . . . . . .\n51\n3.4\nDifferential Evolution . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n52\n3.5\nArtificial Bee Colony . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n52\nOptimization Applications in Smart\
    \ Cities . . . . . . . . . . . . . . . . . .\n53\n4.1\nSmart Agriculture . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n53\n4.2\nSmart City Services .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n55\n4.3\nSmart Grid\n. . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n57\n4.4\nSmart Health . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n60\n4.5\nSmart Homes . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n64\n4.6\nSmart Industry . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n66\n4.7\nSmart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n69\n4.8\nSmart Transportation\n\
    . . . . . . . . . . . . . . . . . . . . . .\n71\nConclusion . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n73\nCASE STUDY - SMART\
    \ HEALTH . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIoT for\
    \ Fall Detection\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    76\n2.1\nChallenges/Requirements of a FDS . . . . . . . . . . . . . . .\n77\n\
    2.1.1\nNon-intrusiveness . . . . . . . . . . . . . . . . . . . .\n77\n2.1.2\n\
    Low Latency\n. . . . . . . . . . . . . . . . . . . . . .\n77\n2.1.3\nLow power\
    \ consumption . . . . . . . . . . . . . . . .\n77\n2.1.4\nAllow mobility\n. .\
    \ . . . . . . . . . . . . . . . . . . .\n77\n2.1.5\nDifferentiate between Falls\
    \ and Activities\n. . . . . .\n77\n2.1.6\nNotify caregivers . . . . . . . . .\
    \ . . . . . . . . . . .\n78\n2.1.7\nTrack history . . . . . . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2\nTypes of Fall Detection Systems . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2.1\nAmbient Sensor based systems\n. . . . . . . . .\
    \ . . .\n78\n2.2.2\nVision based systems . . . . . . . . . . . . . . . . . .\n\
    79\n2.2.3\nWearable Sensor based systems . . . . . . . . . . . .\n79\n2.3\nTypes\
    \ of Wearable FDS\n. . . . . . . . . . . . . . . . . . . . .\n80\n2.3.1\nThreshold\
    \ based systems . . . . . . . . . . . . . . . .\n80\n2.3.2\nMachine/Deep Learning\
    \ based systems . . . . . . . .\n80\n2.4\nSensors used in Wearable FDS . . . .\
    \ . . . . . . . . . . . . . .\n80\n2.4.1\nAccelerometers . . . . . . . . . . .\
    \ . . . . . . . . . .\n81\n2.4.2\nGryroscope . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n81\n2.4.3\nMagnetometer\n. . . . . . . . . . . . . . . . . . .\
    \ . .\n81\n2.4.4\nVarious Medical Sensors . . . . . . . . . . . . . . . .\n81\n\
    2.5\nDesign considerations for Wearable FDS\n. . . . . . . . . . . .\n81\n2.5.1\n\
    Sampling frequency . . . . . . . . . . . . . . . . . . .\n82\n2.5.2\nWindowing\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n82\n2.5.3\nFeature Extraction\
    \ . . . . . . . . . . . . . . . . . . .\n82\n2.6\nLiterature Review . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n82\n2.7\nFall detection Datasets .\
    \ . . . . . . . . . . . . . . . . . . . . .\n89\n2.7.1\nSisFall Dataset . . .\
    \ . . . . . . . . . . . . . . . . . .\n89\n2.7.2\nK-Fall Dataset\n. . . . . .\
    \ . . . . . . . . . . . . . . .\n90\nix\n2.8\nExperiments . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n90\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration 91\n2.8.2\nFall Detection with Severity and Direction\
    \ along with\nADL consideration using Wavelet Pooling and K-NN\n101\n2.8.3\nFall\
    \ Detection with Severity and Direction along with\nADL consideration using CNN-XGBoost\
    \ . . . . . . .\n111\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-\n\
    attention network . . . . . . . . . . . . . . . . . . . .\n119\nConclusion . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n125\nCONCLUSION\
    \ AND FUTURE WORK . . . . . . . . . . . . . . . . . . . . .\n128\nConclusion .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n128\n\
    Contribution\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n128\nFuture Work\n. . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n129\nREFERENCES . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .\n131\nAppendix A: Sample Plots for different fall categories\
    \ . . . . . . . . . . . . . .\n174\nAppendix B: Acronyms\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n180\nCurriculum Vita. . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . 183\nx\nLIST OF TABLES\n\
    1\nComparison of Cloud, Fog and Edge Computing Models\n. . . . . . . . .\n11\n\
    2\nSmart City IoT Challenges and Mitigation . . . . . . . . . . . . . . . . .\n\
    15\n3\nSensing Technologies for IoT Smart Cities by Smart City Component . .\n\
    18\n4\nComparison of Network Technologies for IoT Smart Cities\n. . . . . . .\
    \ .\n22\n5\nSecurity and Privacy issue for IoT Smart Cities . . . . . . . . .\
    \ . . . . .\n28\n6\nSWOT Analysis for IoT in Smart Cities\n. . . . . . . . . .\
    \ . . . . . . . .\n29\n7\nAI use for Smart Agriculture . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\n35\n8\nAI use for Smart city Services . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n37\n9\nAI use for Smart Energy . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n38\n10\nAI use for Smart Health\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n39\n11\nAI use for Smart\
    \ Homes . . . . . . . . . . . . . . . . . . . . . . . . . . .\n42\n12\nAI use\
    \ for Smart Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n44\n\
    13\nAI use for Smart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n45\n14\nAI use for Smart Transport\n. . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n46\n15\nAI applications for IoT Smart Cities\n. . . . . . . .\
    \ . . . . . . . . . . . .\n48\n16\nOptimization in Smart Agriculture\n. . . .\
    \ . . . . . . . . . . . . . . . . .\n56\n17\nData setup used for Smart Agriculture\
    \ Optimization\n. . . . . . . . . . .\n56\n18\nOptimization in Smart City Services\n\
    . . . . . . . . . . . . . . . . . . . .\n58\n19\nData setup used for Smart City\
    \ Services Optimization\n. . . . . . . . . .\n58\n20\nOptimization in Smart Grid\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .\n61\n21\nData setup used for\
    \ Smart Grid . . . . . . . . . . . . . . . . . . . . . . .\n62\n22\nOptimization\
    \ in Smart Health . . . . . . . . . . . . . . . . . . . . . . . .\n63\n23\nData\
    \ setup used for Smart Health . . . . . . . . . . . . . . . . . . . . . .\n64\n\
    24\nOptimization in Smart Homes . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n67\n25\nData setup used for Smart Homes . . . . . . . . . . . . . . . . .\
    \ . . . . .\n67\n26\nOptimization in Smart Industry . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n68\n27\nData setup for Smart Industry . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n70\n28\nOptimization in Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . .\n71\n29\nData types for Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . .\n71\n30\nOptimization in Smart Transportation\n\
    . . . . . . . . . . . . . . . . . . .\n74\n31\nData types for Smart Transportation\
    \ . . . . . . . . . . . . . . . . . . . .\n75\n32\nADL and Falls present in the\
    \ SisFall dataset. . . . . . . . . . . . . . . . .\n90\n33\nADL and Falls present\
    \ in the K-Fall dataset. . . . . . . . . . . . . . . . .\n91\n34\nLabeling used\
    \ for Fall only classification for the SisFall Dataset\n. . . . .\n92\n35\nFeatures\
    \ computed for each fall segment\n. . . . . . . . . . . . . . . . . .\n94\n36\n\
    Fall F1-scores (Fall direction only)\n. . . . . . . . . . . . . . . . . . . .\
    \ .\n99\n37\nFall F1-scores (Fall severity and direction) . . . . . . . . . .\
    \ . . . . . . .\n100\n38\nBest Results: Fall direction\n. . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n100\n39\nBest Results: Fall direction and Severity\
    \ . . . . . . . . . . . . . . . . . .\n101\nxi\n40\nADL Labels used for SisFall\
    \ Recordings. . . . . . . . . . . . . . . . . . .\n102\n41\nPerformance for different\
    \ observation window sizes. . . . . . . . . . . . .\n109\n42\nPerformance for\
    \ different sensing modalities. . . . . . . . . . . . . . . . .\n110\n43\nBest\
    \ Results (Obs. Window : 3 sec, Sensing Modality: Acc. + Gyro.) . .\n110\n44\n\
    One ADL vs. Individual Falls. . . . . . . . . . . . . . . . . . . . . . . . .\n\
    116\n45\nIndividual ADLs vs. Individual Falls. . . . . . . . . . . . . . . . .\
    \ . . . .\n116\n46\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n118\n47\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n119\n48\nLabeling for K-Fall Dataset\n. . . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n120\n49\nResults for SisFall: One ADL vs. Individual Falls\
    \ . . . . . . . . . . . . .\n122\n50\nResults for K-Fall: One ADL vs. Individual\
    \ Falls\n. . . . . . . . . . . . .\n122\n51\nResults for SisFall: Individual ADLs\
    \ vs. Individual Falls\n. . . . . . . . .\n123\n53\nComparison with State of the\
    \ art (Individual ADLs vs. Individual Falls.)\n125\n54\nComparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\n126\n55\nResults for the\
    \ four Experiments for the SisFall dataset (F1-Score[%]) . .\n126\nxii\nLIST OF\
    \ FIGURES\n1\nSmart City Components . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n5\n2\nIoT Architecture\n. . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .\n8\n3\nChallenges for IoT in Smart Cities. . . . . . .\
    \ . . . . . . . . . . . . . . .\n12\n4\nSensing Technologies for IoT Smart Cities.\
    \ . . . . . . . . . . . . . . . . .\n16\n5\nNetwork Technologies for IoT Smart\
    \ Cities.\n. . . . . . . . . . . . . . . .\n23\n6\nModified CERT Attack Taxonomy\
    \ for Smart Cities. . . . . . . . . . . . .\n24\n7\nAI for IoT Smart Cities. .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . .\n47\n8\nOptimization applications\
    \ in Smart Agriculture. . . . . . . . . . . . . . .\n54\n9\nOptimization applications\
    \ in Smart City Services. . . . . . . . . . . . . .\n57\n10\nOptimization applications\
    \ in Smart Grid. . . . . . . . . . . . . . . . . . .\n59\n11\nOptimization applications\
    \ in Smart Health.\n. . . . . . . . . . . . . . . .\n62\n12\nOptimization applications\
    \ in Smart Homes.\n. . . . . . . . . . . . . . . .\n64\n13\nOptimization applications\
    \ in Smart Industry. . . . . . . . . . . . . . . . .\n69\n14\nOptimization applications\
    \ in Smart Infrastructure.\n. . . . . . . . . . . .\n70\n15\nOptimization applications\
    \ in Smart Transportation . . . . . . . . . . . .\n72\n16\nOptimization applications\
    \ in IoT based Smart Cities. . . . . . . . . . . .\n75\n17\nFall Detection with\
    \ Direction and Severity. . . . . . . . . . . . . . . . . .\n93\n18\nHierarchical\
    \ classification scheme for ADL and Fall detection.\n. . . . . .\n103\n19\nSample\
    \ Wavelet (Mexican Hat). . . . . . . . . . . . . . . . . . . . . . . .\n104\n\
    20\nHaar Wavelet. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n105\n21\nExample: 4-2-1 1-D Spatial Pyramid Pooling. . . . . . . . .\
    \ . . . . . . .\n106\n22\nAverage F1-scores for each activity for the four classifiers.\n\
    . . . . . . . .\n108\n23\nCNN-XGBoost based classification scheme for ADL and\
    \ Fall detection. .\n112\n24\nIllustration of data augmentation. (X component\
    \ of Accelerometer, Lat-\neral Fall) . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n113\n25\nCNN Network for feature extraction and\
    \ XGBoost classification stage.\n.\n114\n26\nNetwork performance for different\
    \ fall directions.\n. . . . . . . . . . . . .\n117\n27\nNetwork performance for\
    \ different fall directions.\n. . . . . . . . . . . . .\n118\n28\nConvLSTM-attention\
    \ Network.\n. . . . . . . . . . . . . . . . . . . . . . .\n121\n29\nFall detection\
    \ performance for both experiments.\n. . . . . . . . . . . . .\n124\n30\nFall\
    \ severity performance.\n. . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    124\n31\nFall direction performance. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\n125\n1\nAccelerometer and Gyroscope measurements: Forward Hard Fall\
    \ . . . . .\n174\n2\nAccelerometer and Gyroscope measurements: Forward Soft Fall\n\
    . . . . .\n175\n3\nAccelerometer and Gyroscope measurements: Backward Hard Fall\
    \ . . . .\n176\n4\nAccelerometer and Gyroscope measurements:f Backward Soft Fall\
    \ . . . .\n177\n5\nAccelerometer and Gyroscope measurements: Lateral Hard Fall\n\
    . . . . .\n178\n6\nAcclerometer and Gyroscope measurements: Lateral Soft Fall\n\
    . . . . . .\n179\nxiii\nCHAPTER I\nINTRODUCTION AND DISSERTATION OVERVIEW\n1\n\
    Motivation\nThe world is experiencing a bulging world population and increasing\
    \ urbanization\nwhich is set to grow by more than 10% in the next 30 years [1]\
    \ resulting in a total\nof 70% living in cities by 2050. Countries around the\
    \ world are looking at equipping\ntheir cities to deal with the influx of people\
    \ and the stress it will bring to current\ncity systems [2]. This is to be performed\
    \ keeping in view the UN Sustainable De-\nvelopment Goals 2030 [3]. In this regard,\
    \ Smart Cities have come out as a major\ninitiative by various governments in\
    \ making cities more navigable and welcoming to\nthe expected population increase\
    \ and providing city dwellers a better living experi-\nence, as is evidenced by\
    \ the multiple projects ongoing on both the public and private\nlevel [4, 5, 6,\
    \ 7]. The Internet of Things (IoT) has been the prime enabler of smart\ncities\
    \ as it has provided the means in terms of sensors, architectures, storage and\n\
    other technologies to instrument cities. It allows stakeholders to gather data,\
    \ pro-\ncess it and then make decisions based on the analyses performed. There\
    \ are various\ndomains within smart cities, these include Smart Agriculture, Smart\
    \ City Services,\nSmart Grid, Smart Health, Smart Homes, Smart Industry, Smart\
    \ Infrastructure and\nSmart Transportation.With improvement of Artificial intelligence\
    \ (AI) capabilities\nin the last decade, there have been different applications\
    \ of machine learning (ML)\nand deep learning (DL) algorithms within each of these\
    \ domains providing for better\ndecision making and improvement of services. Apart\
    \ from various supervised and un-\nsupervised learning applications, several tasks\
    \ within different components of smart\ncities can be formulated into optimization\
    \ problems and/or require heuristics to be\nincorporated in some form. However,\
    \ in both such tasks, there is a dearth of an\noverall coverage of Smart City\
    \ IoT based ML/DL and combinatorial optimization\nproblems. Such a coverage would\
    \ be very beneficial to researchers starting in the\nfield and has been presented\
    \ herein.\nOne of the major applications of the IoT Smart Cities is for health\
    \ purposes.\nMany countries around the world, especially in the developed world\
    \ are facing an\naging population. With the retirement of the ’baby boomer’ generation,\
    \ countries\naround the world are facing a big question over caring for their\
    \ elderly population.\nOne of the major issues that elderly people face today\
    \ are falls [8]. In the US, falls\naccount for a majority of the deaths caused\
    \ by injury in population aged 65 and\nabove [9] and a fall related injury occurs\
    \ every 19 minutes [10]. As indicated in [11],\nfalls have been associated with\
    \ estimated medical costs ranging from $31.5 billion for\n2013 to $49.5 billion\
    \ for 2017. Moreover, Floerence et al. [12] notes that in 2018,\nfalls contributed\
    \ to 8% of Medicaid expenses in the US for older adults, consequently\n1\nfalls\
    \ have huge health as well as financial ramifications for people and governments.\n\
    Determining when a person has experienced a fall is therefore an important task\
    \ in\nthe healthcare of people, more so in the old age population who tend to\
    \ increasingly\nlive alone and are at increased risk of suffering from falls.\
    \ Apart from just detecting\nif a fall has occurred or not, the direction of a\
    \ fall is an important consideration\nas well. Bourke et al. [13] notes that even\
    \ though 60% of falls occurring in older\nadults are forward falls, falls occurring\
    \ sideways may result in fracture and thus\nare important to determine. Quick\
    \ dispatch of healthcare providers can result in\ntimely treatment of fall related\
    \ injuries, thereby reducing the overall impact to life\nand wealth. Additional\
    \ information about the fall could benefit the medical dispatch\nteam to help\
    \ decide emergency procedures which could be matched up with patient\nhistory\
    \ of potentially being injury prone in a certain part of the body. In light of\
    \ this\nall, the development of fall detection systems has been of keen interest\
    \ to researchers\nin the domain of human activity recognition, tele-medicine and\
    \ smart health.\n2\nAims\nCiting the importance of IoT usage in communities, the\
    \ aims of this dissertation are\nas follows:\n1. To provide a wholistic coverage\
    \ of IoT based Smart City system design consid-\nering important aspects such\
    \ as sensors, technologies used, IoT architectures,\nthe use of machine/deep learning\
    \ methods and optimization schemes as well as\nthe challenges.\n2. Considering\
    \ the case study of smart health and specifically fall detection, de-\nvelop methodologies\
    \ for detection of falls considering fall direction and severity.\n3\nOrganization\n\
    This dissertation is organized in to six chapters.\nChapter II presents a coverage\n\
    of the IoT for Smart Cities in terms of the technologies used, its architectures\
    \ and\nalso the challenges towards IoT usage in Smart Cities. Chapter III discusses\
    \ the the\napplications of machine and deep learning algorithms. This chapter\
    \ provides a com-\nprehensive discussion on IoT usage in Smart Cities by considering\
    \ the different types\nof systems devised for each application as well. Chapter\
    \ IV discusses the applications\nof optimization algorithms in IoT based smart\
    \ cities for five popular algorithms. It\nthus provides a coverage of optimization\
    \ applications under the IoT smart city um-\nbrella. Chapter V presents work on\
    \ a chosen case study of smart health based on\nIoT. The considered task is fall\
    \ detection with direction and severity consideration.\nFour experiments have\
    \ been performed in this regard considering three scenarios, one\nconsidering\
    \ falls only with direction and severity and two others considering falls and\n\
    activity of daily living (ADL) as a combined problem. The designed methodologies\n\
    have shown to outperform the state of the art as has been discussed in the chapter.\n\
    The conclusion and future work opportunities are discussed in chapter VI.\n2\n\
    CHAPTER II\nIOT SMART CITIES\n1\nIntroduction\nThis chapter provides an overeview\
    \ of the use of IoT in Smart Cities and discuss\nhow it facilitates such initiatives.\
    \ It starts by laying out the structure of Internet\nof Things in a Smart City\
    \ context, discussing its various applications, components\nand architectures\
    \ while also discussing the technologies used at the different levels of\nthe\
    \ IoT architecture. Lastly, a discussion of the technical challenges that exist\
    \ in the\ndeployment of IoT in the Smart City domain is provided along with identification\
    \ of\npotential solutions to those challenges followed by future directions.\n\
    It is hard to define a Smart City, in fact, cities claim to be ‘smart’ based on\
    \ a\nvariety of criteria, for e.g. implementing novel e-governance schemes, creating\
    \ so-\ncial learning ventures and community engagement programs, focusing on sustainable\n\
    living as well as the more typical application of Information and Communication\n\
    Technologies for innovation [14]. In this work, Smart Cities are defined to be\
    \ the ap-\nplication of various information and communication technologies (ICT)\
    \ with the aim\nof creating a better living experience for a city’s population.\
    \ This encompasses use\nof these technologies in all the domains discussed previously,\
    \ including governance,\ntransport, housing, business, sustainable living, social\
    \ learning, community engage-\nment, providing opportunities and more. In an ideal\
    \ sense, the idea of a smart city\ntranscends the typically set boundaries of\
    \ a traditional city’s administrative and so-\ncial structure by allowing interaction\
    \ between the two, thereby enabling it to operate\nin a more cohesive and engaged\
    \ manner. Smart cities offer several advantages (in\nterms of value) compared\
    \ to a traditional city ecosystem:\n1. Climate goal achievement: Smart cities\
    \ are at the forefront of pioneering tech-\nnologies to help enable countries\
    \ meet climate goals. Smart city focuses on\nsmart energy management, smart transportation\
    \ systems and city administra-\ntion which aim to reduce the carbon footprint\
    \ of cities and enable development\nand use of new technologies for cleaner living.\n\
    2. Money value: Smart City ventures will be a market of USD 1 Trillion by 2025\n\
    [15], this provides a huge monetary incentive for not only governments but\nprivate\
    \ companies to actively contribute to the development of technologies\nsupporting\
    \ smart city development.\n3. Societal impact: The centerpiece of the smart city\
    \ project is to improve the qual-\nity of life of a city’s inhabitants and help\
    \ develop an inclusive society wherein\nevery opinion is catered for and equal\
    \ opportunity is provided. Information and\n3\nCommunication Technologies in the\
    \ smart city context are a fundamental com-\nponent to the provision of public\
    \ services by facilitating interactions of citizens\nwith the city environment\
    \ and making life easier.\n2\nSmart City Components\nA smart city is made up of\
    \ several components which are illustrated in Figure 1.\nSmart city applications\
    \ typically have four aspects associated with them, the first is\nthe collection\
    \ of data, the next is its transmission/reception, third is the storage and\n\
    fourth is analysis. The collection of data is application dependent and has been\
    \ a real\ndriver for sensor development in the various domains. The second part\
    \ is the exchange\nof data, this involves data transmission from the data collection\
    \ units towards the\ncloud for storage and analysis.\nThis task has been achieved\
    \ in several manners,\nmany smart city ventures have city-wide Wi-Fi networks,\
    \ 4G and 5G technologies are\nbeing used, as well as various types of local networks\
    \ which can convey data either\non a local level or a global level. The third\
    \ stage is storage in the cloud, different\nstorage schemes are used to arrange\
    \ and organize data so as to make it usable for\nthe fourth stage which is data\
    \ analysis. Data Analysis refers to the extraction of\npatterns and inferences\
    \ from the gathered data to guide decision making. In some\nsituations, simple\
    \ analysis such as basic decision making and aggregating would work\ntoo. For\
    \ more complex decision making, the availability of the cloud allows not only\n\
    for heterogeneous data gathering/storage and processing but also analysis through\n\
    the use of statistical methods as well as machine and deep Learning algorithms\
    \ in\nreal-time [16].\n2.1\nSmart Agriculture\nFood security is one of the most\
    \ important parts of the United Nations Sustainable\nDevelopment goals for 2030.\
    \ With an increasing world population, worsening climate\nchange causing erratic\
    \ weather in food centers of the world, the race to ensure that\nfood production\
    \ is made sustainable and that dwindling resources such as water are\nutilized\
    \ efficiently has been a high priority for countries around the world. Smart\n\
    agriculture is the use of sensors embedded into plants and fields to measure various\n\
    parameters to help in decision making and prevent/diseases, pests etc [17]. A\
    \ part\nof the smart agriculture paradigm is precision agriculture, which involves\
    \ sensors\nbeing placed in plants to provide targeted measurements and therefore\
    \ allow for\ntargeted care mechanisms to be deployed. Precision agriculture will\
    \ be necessary\nfor food security in the future [18] and therefore is an essential\
    \ part of the fight for\nsustainable food production. The major applications of\
    \ AI in IoT for agriculture are\ncrop monitoring/disease detection and data driven\
    \ crop care and decision making.\n2.2\nSmart City Services\nSmart city services\
    \ encompass the activities that sustain a city’s population, these\ninvolve municipal\
    \ tasks such as supply of water, waste management, environmental\n4\nSmart \n\
    Energy\nSmart \nTransportation\nSmart \nAgriculture\nSmart \nInfrastructure\n\
    Smart  \nCity Services\nSmart Health\nSmart Homes\nSmart  Industry\nFigure 1.\
    \ Smart City Components\ncontrol and monitoring etc. Sensors for water quality\
    \ can be deployed to continually\nprovide an update about the quality of water\
    \ being used in the city and detect leaks\n[19]. One popular component of smart\
    \ city initiatives is the management of waste,\nand it has been the part of many\
    \ of the smart city initiatives mentioned earlier, from\nchutes in Barcelona to\
    \ having bins equipped with sensors and connected to the cloud\nso as to not only\
    \ inform the relevant authorities of the need to empty them but also\nusing AI\
    \ to determine the best route to reduce cost [20]. Sensors can also be used to\n\
    monitor the environmental conditions in a city to determine pollution levels [21]\
    \ and\nguiding citizens to the next free parking space to save fuel costs [22].\n\
    2.3\nSmart Energy\nTypical electrical systems have one-way energy flow from a\
    \ main generator source,\nusually a hydroelectric or fossil fuel based power plant.\
    \ Power generation is controlled\nvia feedback from the substations, however,\
    \ since there is no information feedback\nfrom the consumer end, the power generation\
    \ scheme used with these systems requires\nthat the power being produced by these\
    \ sources outstrips the demand by a large\namount to ensure continuous supply\
    \ of power. The process of detecting faults and\nperforming corrective actions\
    \ in such systems is also a time taking process. Moreover,\nwith renewable energy\
    \ technologies becoming cheaper, the consumer of today not\nonly has a supply\
    \ from the main utility but also performs their own generation.\nSmart Grids is\
    \ the use of ICT to make the current and newly installed grids more\nobservable,\
    \ allow for distributed energy generation, both at the consumer end as well\n\
    as the utility end and introduce self-healing capabilities in to the grid. One\
    \ aspect\n5\nof smart grids is that real time power data is transmitted to utilities\
    \ at different\npoints on the grid throughout the supply lines till the customer.\
    \ Since smart grids\nprovide real-time data about consumer usage, it allows for\
    \ better management of\npower generation using prediction models developed through\
    \ acquired consumption\ndata, integrating different energy sources as well as\
    \ self-healing [23] of the network\nto ensure an uninterrupted supply.\n2.4\n\
    Smart Health\nSmart Health refers to the use of ICT to improve health care availability\
    \ and quality.\nWith an increasing population and rising costs of healthcare,\
    \ this area has been of\nintense focus of researchers as well as healthcare providers.\
    \ Current health systems\nare over burdened and therefore cannot cater to the\
    \ increasing demand from the pop-\nulace. In this regard, smart health aims to\
    \ ensure that healthcare be available to as\nmany people as possible through telemedicine\
    \ services [24] and improved diagnosis\nassistance to doctors utilizing AI [25].\
    \ With the ubiquitousness of mobile phones\nand health trackers [26] that can\
    \ capture real-time data about peoples health (ECGs,\ntemperature, body oxygen\
    \ saturation and other biosensors) while also recording daily\nactivity and detecting\
    \ abnormal movements using inertial sensors, it has become pos-\nsible to leverage\
    \ cloud capabilities for processing this data to make better healthcare\ndecisions.\
    \ Thus reducing the overall costs as well as burden on healthcare facilities.\n\
    2.5\nSmart Home\nOne major component of Smart Cities is the Smart Home since it\
    \ is central to the\nlife of the city’s inhabitants. Smart Homes involve the use\
    \ of sensing units installed\nthroughout a person’s home that provide information\
    \ about the home as well as\nits occupants. These sensors might include user activity\
    \ monitors such as ambient\nsensors, motion trackers and power/energy consumption.\n\
    2.6\nSmart Industry\nIndustries around the world are busy in a continuous pursuance\
    \ of being more ef-\nficient and increasing productivity while reducing cost.\
    \ The industry 4.0 paradigm\nentails the vision of a connected factory where all\
    \ its intermediary functionaries are\nseamlessly integrated, working in tandem\
    \ with each other. This is made possible be-\ncause of the internet of things\
    \ [27]. The use of IoT in manufacturing and production\nprocesses, cyber physical\
    \ systems integrating workers and machines has led to several\nbenefits to the\
    \ industry such as faster and better innovation, optimization of manu-\nfacturing\
    \ schemes (resources and processes), better quality of products and enhanced\n\
    safety for factory workers. However, smart industries come with several challenges\n\
    for IoT usage, working with a set of heterogeneous devices and machines has its\
    \ own\nchallenges and requires cyber physical systems to have flexibility in configuration,\
    \ con-\nnectivity and quick implementation for use in IoT applications for Smart\
    \ Industry\n[28]. Artificial Intelligence has gone hand in hand with IoT to spur\
    \ the development\nand deployment of industry 4.0 services. With sensors being\
    \ embedded in machines\n6\nand other processes in the factory, data from these\
    \ sources provide an opportunity for\nusing AI techniques to increase automation,\
    \ perform business intelligence operations\nand more. In fact, researchers have\
    \ suggested frameworks for integrating AI within\nIoT for Smart Industry [28,\
    \ 29, 30]. The major applications of AI in the industry are\npredictive maintenance,\
    \ monitoring/fault detection (machine health) and production\nmanagement.\n2.7\n\
    Smart Infrastructure\nThe infrastructure of a city is paramount to its living\
    \ quality, city governments need\nto construct new bridges, roads and buildings\
    \ for the use of its inhabitants and also\nperform maintenance for uninterrupted\
    \ usage. Smart infrastructure helps cities in\nensuring their infrastructure is\
    \ in shape and usable by utilizing sensors for measuring\nbuilding/bridge structural\
    \ state for structural health monitoring using accelerome-\nters [31] and smart\
    \ materials [32]. Data collected through these sensors allows for\npredictive\
    \ maintenance of these essential units to maintain normal operation of the\ncity.\n\
    2.8\nSmart Transport\nMany urban centers suffer from traffic problems, this includes\
    \ congestion, pollution,\nscheduling and cost reduction issues for public transport.\
    \ The rapid development\nand implementation of new Information and Communication\
    \ Technologies, Vehicle-\nInfrastructure-Pedestrian communication has become commonplace.\
    \ Whether it be\nVehicle to Vehicle (V2V), Vehicle to Infrastructure (V2I), Vehicle\
    \ to Pedestrian (V2P)\nor Pedestrian to Infrastructure (P2I), such technologies\
    \ have made the design of smart\ntransportation systems possible. With cars having\
    \ a GPS device and the common-\nality of cellphones with every driver, many approaches\
    \ use GPS data to track driver\nbehavior and traffic patterns [33]. This real-time\
    \ data is already used for route map-\nping in applications such as Waze and Google\
    \ Maps and used for trip scheduling in\npublic transport. Parking systems equipped\
    \ with sensors can also guide drivers to\nthe nearest free parking spot.\n3\n\
    Internet of Things for Smart Cities\nAt the heart of the smart city initiatives\
    \ is the internet of things, it is the enabling\ntechnology that has allowed for\
    \ the pervasive digitization that gives rise to the con-\ncept of smart cities.\
    \ The internet of things refers to the ubiquitous connection of\ndevices to the\
    \ internet, allowing them to send information to the cloud and poten-\ntially\
    \ get directions for performing actions. IoT involves the collection of data and\n\
    performing data analytics operations to extract information in order to support\
    \ de-\ncision and policy making. It is estimated that by 2025 more than 75 billion\
    \ devices\nwill be connected to the internet [34], spearheading even more application\
    \ develop-\nment. Within the smart city context, IoT allows for sensors to collect\
    \ and send data\n7\nabout the city’s state to a central cloud, which is then mined\
    \ or processed for pattern\nextraction and decision-making purposes.\n3.1\nIoT\
    \ Architectures for Smart cities\nThe Internet of Things unifies the operations\
    \ of data sensing, transmission/recep-\ntion, processing and storage through the\
    \ use cloud services. Based on technology, a\ngeneric IoT architecture consists\
    \ of five layers where successive layers operate on the\ninformation from the\
    \ previous layer as shown in Figure 2. It also shows the three\ndifferent architectures\
    \ that exist for IoT systems.\nCloud Computing\nEdge computing\nFog Computing\n\
    Business layer\nActuators\nMobile Elements\nSensors\nNetwork Technologies\nNetwork\
    \ Topologies\nAPIs, Databases, Security\nApplications\nData Analytics (Machine\
    \ Learning, Optimization, Deep Learning)\nApplications \nLayer\nMiddleware \n\
    Layer\nNetwork Layer\nSensing Layer\nFigure 2. IoT Architecture\nThe Sensing layer,\
    \ also called the Perception layer consists of sensors that can\nget information\
    \ about physical quantities of interest in any application as well as\nactuators\
    \ which can act upon physical objects, such as Radio Frequency IDentification\n\
    (RFID) readers for reading RFID tags and other such devices. The data read by\
    \ the\nsensing layer is passed onward to the Middleware layer using the networking\
    \ layer\nthrough wireless network technologies such as Wi-Fi, cellular internet,\
    \ Zigbee and\nBluetooth etc.\nThe Middleware layer provides a generic interface\
    \ for the sensing\nlayer hardware and the Application layer which uses the data\
    \ through various API’s\nand database management services to provide users with\
    \ services. The Business layer\nis attached to the application layer and is used\
    \ to develop strategies and formulate\npolicies that help manage the complete\
    \ system.\nIn terms of architectures, typically, IoT architectures are categorized\
    \ based on\nthe type of operation responsibilities allocated to parts of the IoT\
    \ system, this cat-\negorization is based mainly on processing of data responsibilities.\
    \ There are three\narchitectures of IoT systems with respect to the stage of the\
    \ IoT framework where\nprocessing of data can be carried out and these are Cloud,\
    \ Fog and Edge Models.\nTable 1 lists the traits of each of three layers of the\
    \ IoT system. It is important to\n8\nmention that the three IoT architectures\
    \ discussed here are not mutually exclusive,\ninstead the aim of this hierarchy\
    \ is to complement the higher layer by providing it only\nuseful information which\
    \ makes the system more productive and dependable. For any\nIoT system designer,\
    \ the aim is to establish a balance between the capabilities of the\nthree layers\
    \ keeping in view system costs and requirements.\n3.1.1\nCloud Computing Model\n\
    This was the first proposed architecture for IoT systems and is based on the premise\n\
    that processing of data from the various components in the IoT system should take\n\
    place in the cloud. Cloud computing allows for the remote accessing of uninterrupted\n\
    shared resources (computing, storage and services) over the network. It should\
    \ be\nable to dynamically allocate these resources without human intervention,\
    \ schedule\nor pool as necessary and be able to be accessed from a variety of\
    \ different platforms\n[35]. The cloud can provide both hardware as well as software\
    \ services for smart city\napplications. It has the advantage that it provides\
    \ a central management platform\nfrom which to observe, control the IoT system\
    \ as well as to disseminate command\nactions based on the received data. Moreover,\
    \ this centralization also allows for cloud\nsystems to have sufficiently large\
    \ computing and storage capacities thereby allowing\nthem to perform complex tasks\
    \ of data mining, pattern extraction and making infer-\nences from sensor data\
    \ in smart cities to make use of it in the best manner possible.\nHowever, there\
    \ are a few disadvantages with using the cloud computing model for\nthe IoT. First,\
    \ transmitting all gathered data to the cloud increases network traffic,\neven\
    \ though this may not be true for applications in which measurements are not\n\
    very frequent, but in other cases, this could increase network costs. Moreover,\
    \ data\ntransmission overheads may increase due to the large amount of data that\
    \ needs to\nbe transmitted by the many sensors existing in the smart city scenario.\
    \ Another\ndisadvantage that the cloud computing model suffers from is data latency,\
    \ since the\nsensing units exist at the sensing layer and the decision making/data\
    \ processing takes\nplace in the cloud, this gives rise to data latency in the\
    \ transmission of sensing infor-\nmation, especially when many devices start sending\
    \ data at the same time. Network\nreliability can be an issue when using this\
    \ model, with the large volume of data traffic\non the network, it might not be\
    \ possible to enforce robust data transmission schemes\nas IoT systems get bigger.\n\
    3.1.2\nFog Computing Model\nSince most of the information produced with in IoT\
    \ takes place towards the sensing\nend of the IoT system, also called the edge,\
    \ Fog Computing was proposed in [36]\nto overcome some of the problems of the\
    \ cloud computing model for the IoT. Fog\ncomputing provides a more diverse distribution\
    \ of responsibilities than are dictated\nby the cloud computing architecture by\
    \ moving some of the processing to devices\non the local network.\nTypically,\
    \ Fog computing refers to data processing that is\ncarried out by routers and\
    \ other network devices within in the Network layer in the\nIoT. Since network\
    \ devices nowadays increasingly offer better computational capabil-\n9\nities,\
    \ one can leverage them to perform rudimentary operations on data. Operations\n\
    such as aggregation and collection of sensor data, simple processing operations\
    \ and\ndecision-making can be performed to reduce the amount of information flow\
    \ towards\nthe higher cloud layer. Questions that need to be answered for the\
    \ decision-making\nprocess include but are not limited to for e.g., does the decision\
    \ require the use of\naveraging for one quantity and instantaneous values of the\
    \ other? Is it possible to\nextrapolate data received for one quantity and use\
    \ the currently measured value for\nanother one? Based on the previous data for\
    \ a given period, can one provide higher\nlayers with decision options rather\
    \ than just data, thereby providing better quality\ninformation to the cloud layer\
    \ thus resulting in better utilization of cloud resources.\nFog layers can localize\
    \ decision making since they have access to the local state of a\ngiven region\
    \ [37]. This would be helpful in implementing distributed decision mak-\ning mechanisms\
    \ which might be necessary in some applications. Moreover, they also\nallow for\
    \ local networks to be established using non-internet technologies such as Zig-\n\
    bee, Bluetooth, RFID etc where sensors and other end devices transmit data to\
    \ the\nFog node (also referred to as access points in such systems) which is connected\
    \ to the\ncloud.\nFog computing results in reduced costs for deployment of IoT\
    \ systems, increases ro-\nbustness as latency, data overhead and errors in transmission\
    \ are reduced. This also\nimproves the efficiency of the applications as quicker\
    \ decisions can be made on the\nreceived data, which is important in critical\
    \ decision-making situations. Moreover,\nFog devices have the capability to not\
    \ only receive data from similar devices at the\nedge but also collect it from\
    \ many different types of devices. This capability to mea-\nsure different parameters\
    \ in the edge environment enable for an application neutral\nIoT system architecture\
    \ to be developed.\nData sent upward by the Fog layer in the IoT hierarchy would\
    \ be used to gain insights\nin to system behavior and to guide new rules of system\
    \ operation, this will typically\nbe carried out in the cloud. Devices in the\
    \ Fog layer may be provided decision making\nguidance from the higher cloud layer\
    \ to ensure smooth system operation. However,\na balance needs to be struck as\
    \ to the division of responsibilities between the cloud\nand the fog layer keeping\
    \ in view the costs involved.\n3.1.3\nEdge Computing Model\nThe purpose of Fog\
    \ Computing was to push some of the decision making towards\nthe edge of the network.\
    \ In recent years, with increasingly capable devices being\ndeveloped that are\
    \ attached to ‘edge’ nodes, simple decision making, and processing\nof data has\
    \ been increasingly moved on to these devices so as to reduce network\nand device\
    \ costs even further at the fog level and make for even deeper distributed\ndecision-making\
    \ schemes. Edge computing refers to data processing that is done at\nthe ”thing”\
    \ level, i.e. by sensors and other devices in the IoT system [38]. Another\nconcept\
    \ about Edge computing as discussed in [39] defines the Edge computing layer\n\
    as an intermediary layer between the Fog and the ‘things’ (sensors) rather than\
    \ edge\nnodes. The difference between them in this case is the Edge computing\
    \ nodes act\nas aggregation and decision-making units on a smaller scale compared\
    \ to fog devices\n10\nwhich act to provide seamless connectivity and data integrity\
    \ throughout the IoT\nnetwork. The aim of the Fog and the Edge computing paradigms\
    \ is to decentralize\nthe IoT system for purposes of reducing cost, increasing\
    \ scalability and increasing\nrobustness.\nTable 1. Comparison of Cloud, Fog and\
    \ Edge Computing Models\nCloud\nComputing\nModel\nFog Computing Model\nEdge Computing\
    \ Model\nContextual awareness on a\nglobal level encompassing all\naspects of\
    \ the application\nThe Fog layer has contextual aware-\nness of the local sensing\
    \ scenario\nEdge devices typically only\nhave\ninformation\nabout\ntheir own status.\
    \ Exchange\nstrategy possible but limited\nto local neighborhood\nFarthest away\
    \ from the edge\nand therefore decision mak-\ning can be slow and latency\nis\
    \ high\nBeing the closest unit to the edge,\nthe Fog layer can respond much\n\
    more quickly to the data being sent\nfrom sensors and other devices, as it\ncan\
    \ aggregate the information sent\nQuickest\ndecision\nmaking\npossible; however,\
    \ decisions\nwill be based on local states\nUtilizes heterogeneous data\nfrom\
    \ a variety of sensing de-\nvices\nUtilizes heterogeneous data,\nbut\nwithin a\
    \ small region\nUsually do not have access\nto different types of data\nHigh network\
    \ cost\nMedium network cost as data flow\nis reduced\nLeast network cost\nPotential\
    \ privacy risk as raw\ndata might be sent to the\nCloud\nIncreased\nprivacy\n\
    compared\nto\nCloud computing\nEven\ngreater\nprivacy\nen-\nforcement possible\
    \ than Fog\ncomputing model\nLeast\nrobust\nas\ndecision\nmaking is centralized\n\
    More robust than Cloud computing\nmodel\nMost robust as distributed\ndecision\
    \ making takes place\nBest capabilities in terms of\nresources\nLesser capable\
    \ than Cloud devices\nLeast capable\nScalability is low\nScalability is better\
    \ than Cloud\nScalability is highest\n3.2\nIoT Challenges for smart Cities\nThe\
    \ Internet of Things promises the digitization of all aspects of our lives. For\
    \ smart\ncities, this digitization process entails the proliferation of sensing\
    \ nodes in every\ndomain of a city’s operation mechanism. With an application\
    \ scope this broad, the\ncreation and subsequent deployment of IoT systems in\
    \ smart cities carry enormous\nchallenges that need to be considered. In this\
    \ section, a discussion is provided of\nthe challenges that IoT system designers\
    \ face when making deployments in smart\ncity applications.\nThe focus in this\
    \ work is on the technological challenges that\npertain to IoT use in smart cities\
    \ and has also been the focus of researchers. Figure 3\nshows the different challenges\
    \ which Smart City IoT system deployment encounters,\nnamely Security and Privacy,\
    \ Smart Sensors, Networking and Big Data Analytics. A\nsummary of the discussion\
    \ in this section is presented in Table 2.\n11\nSmart City\nChallenges\nSmart\
    \ \nSensors\nNetworking\nIntelligent \nData \nAnalytics\nSecurity and \nPrivacy\n\
    Interoperab\nility\nReliability\nRobustness\nPower\nMemory\nHeterogen\nous data\n\
    Scalability\nLow Power\nMobility\nRouting\nEncryption \nData \nLeakage\nAccess\
    \ \nControl\nNetwork \nAttacks\nFigure 3. Challenges for IoT in Smart Cities.\n\
    3.2.1\nSecurity and Privacy\nSecurity, along with Privacy is the primary concern\
    \ in smart cities.\nSmart cities\ninvolve having essential city infrastructures\
    \ online, any aberration in the operation\nof the city’s services will bring inconvenience\
    \ to its citizens and put human lives and\nproperty at risk. Therefore, security\
    \ is a big concern in smart cities. In today’s age\nwhere cybercrime and warfare\
    \ have become a tactic in world politics, smart cities\nare at an ever-greater\
    \ risk of being the target of such malicious attacks. Encryption\nof data transmitted\
    \ over the network is necessary in this scenario. For smart city\nprojects to\
    \ be successful, they require the trust and participation of citizens. The\nproliferation\
    \ of sensors in smart cities, which continuously collect data about the\nactivity\
    \ of people may expose the daily activities of citizens to unwanted parties.\n\
    Moreover, companies and corporations on the IoT network may use citizen data\n\
    without their approval for things like targeted advertising and may perform acts\
    \ such\nas eavesdropping etc. Solutions to this will require processes that anonymize\
    \ data\ncollection while retaining the integrity of the context of the measured\
    \ task so that\napt decision making is possible. Security and Privacy has been\
    \ covered in detail in a\nlater section.\n12\n3.2.2\nSmart Sensors\nSmart sensors\
    \ are the hardware components that gather data in smart cities. These\ndevices\
    \ are manufactured by a host of different vendors that adhere to different sens-\n\
    ing mechanisms, standards of measurement, data formats and connectivity proto-\n\
    cols. Smart city deployment will require all these devices to exchange data, perform\n\
    scheduling of tasks between them and be able to aggregate data together for mak-\n\
    ing inferences. A solution to this issue is to develop and use open protocols\
    \ and\ndata formats that will enable manufacturers to create equipment that can\
    \ communi-\ncate between each other, further spurring IoT system deployment. Another\
    \ solution\ncould be the development of ‘standard’ access point nodes for IoT\
    \ systems that can\ncommunicate to devices using several different communication\
    \ protocols and are able\nto decode the information received. Some manufacturers\
    \ have, in fact, made their\nproducts compatible with other protocols as mentioned\
    \ in [40].\nAnother challenge for smart sensors is reliability and robustness.\
    \ Reliability and\nrobustness refer to the dependability and correctness of the\
    \ IoT system. IoT is the\nbackbone of future smart cities and being imperative\
    \ to their operation, the IoT\nsystem needs to provide a smooth experience to\
    \ its users. This requires that service\nrequests from users of the application\
    \ receive an accurate and timely response. The\nquality of service needs to be\
    \ ensured for every citizen in the smart city. Systems\nthat deliver critical\
    \ utilities such as transport, electricity etc. should be decentralized.\nThe\
    \ distributed connection points will allow for robustness and increase reliability.\n\
    One such example is self-healing in Smart Grids [23].\nMany current networking\
    \ protocols are developed for infrastructure networked\ndevices which have access\
    \ to continuous power, however, sensors in smart cities will\nbe mobile in many\
    \ scenarios and thus be battery powered. Moreover, they will need\nto measure,\
    \ transfer and in some cases save data they have collected. This requires\nthe\
    \ development of not only low power, low overhead data transmission schemes\n\
    but also development of new memory and storage technologies as well as low power\n\
    devices that extend battery life as much as possible. Storing this large amount\
    \ of\ndata would require development of compression algorithms which will be employed\n\
    and database schemes that will need to be developed in the future as smart cities\n\
    and IoT are scaled up. Solutions for power issues necessitate the development\
    \ of new\nbattery technologies and perhaps the incorporation of energy harvesting\
    \ mechanisms\nin such devices to make long lasting service provision possible.\n\
    3.2.3\nNetworking\nThe IoT depends on the capability of sensing and other devices\
    \ to be able to send\nand receive information to each other and the Cloud. With\
    \ new smart city appli-\ncations coming up, providing networking to these devices\
    \ to remain connected is a\nbig challenge. Current networking methods are not\
    \ optimized to providing network-\ning services for smart city components. Many\
    \ devices in smart cities have mobility\nand data throughput requirements which\
    \ need to be met to provide an acceptable\nquality of service. Different approaches\
    \ have been suggested in terms of defining ac-\n13\ncess points, local networks\
    \ etc. to solve this problem. Another aspect of networking\nwould be working on\
    \ efficient and dynamic routing protocols that can serve IoT re-\nquirements capable\
    \ of working with stationary as well as devices in motion, which\nmany current\
    \ protocols do not offer sufficiently [41].\n3.2.4\nBig Data Analytics\nIoT connected\
    \ devices generated 13.6 Zetta Bytes of data in 2018 and this is expected\nto\
    \ grow to 79.4 Zetta Bytes till 2025 [34]. To make use of this data and continuously\n\
    improve the services that are delivered in smart cities, new data analytics algorithms\n\
    need to be developed. With the myriad of the different parameters that are measured\n\
    in smart cities, these algorithms need to be applicable to data of varying nature\
    \ (both\nstructured and unstructured), better data fusion techniques need to be\
    \ developed as\nwell so as to combine them in meaningful ways and be able to extract\
    \ inferences and\nrecognize patterns. Deep learning has been of interest in this\
    \ area as it can lever-\nage on this large amount of data to provide better results\
    \ for different applications.\nAnother important consideration would be to ensure\
    \ that the developed algorithms\nare scalable in that they have enough generality\
    \ and can be used through out the\nintended application. For, e.g., for the purposes\
    \ of activity recognition, the authors\nin [42] found that a CNN trained for activity\
    \ recognition on one dataset failed to\nperform well on others or in [43] where\
    \ the deep learning network performs poorly\nwhen the color of tomatoes is different\
    \ from what it was trained on. Concept drift is\nanother issue of concern as with\
    \ the continuous acquisition of data, the properties of\ndata may change over\
    \ time. Techniques such as incremental learning may be useful\nin this respect.\
    \ Explainability is another important factor for Smart City analytics\nto be widely\
    \ acceptable, specially in the area of smart health. There have been some\napproaches\
    \ suggested towards this end, in [44] a hybrid deep learning classifier and\n\
    semantic web technologies based solution is demonstrated for the application of\
    \ flood\nmonitoring. In [45], the authors present an explainable deep learning\
    \ based health-\ncare system at the Edge for COVID-19 care based on a distributed\
    \ learning paradigm\nwith promising results. However, more work needs to be performed\
    \ to incorporate\nexplainability techniques such as distillation, visualization,\
    \ and intrinsic methods into\nMachine and Deep Learning based smart city applications\
    \ in order to increase smart\ncity application proliferation.\n3.3\nSensing Technologies\n\
    Sensing is at the heart of smart city technologies. Sensors provide the knowledge\
    \ and\ndata from which smart city innovations are created. With the vastly different\
    \ nature\nof Smart City projects and its various components, there are numerous\
    \ sensors which\nare used as part of these initiatives. The authors in [58] have\
    \ provided a framework\nfor the comparison of IoT sensors and have listed sensors\
    \ they found in use for the\nInternet of Things. We use their work to direct our\
    \ survey of the sensing technologies\nused in smart cities. Sensors within IoT\
    \ can be divided in to several groups, these are\nambient, motion, electric, biosensors,\
    \ identification, presence, hydraulic and chemical\n14\nTable 2. Smart City IoT\
    \ Challenges and Mitigation\nChallenge\nMitigation/research direction\nReferences\n\
    Security and Pri-\nvacy\nEncryption\n[46][47][48][49][50][51][52]\nNew authentication\
    \ mechanisms\n[53][54][55]\nNew standards to anonymize data\nPrevent data leakage\n\
    Smart Sensors\nInteroperability: Open Standards\n[46][47][48][52][53][54][55]\n\
    Reliability and Robustness: Decen-\ntralized and distributed architec-\ntures\
    \ and decision making\n[56]\nPower and Memory:\nEnergy har-\nvesting, Low power\
    \ sensors, New\ndatabase storage systems\nNetworking\nLow\npower\nnetworks,\n\
    Network\nschemes that ensure fluent mobility\nand routing\n[41][52]\nBig data\
    \ analytics\nNew algorithms which work with\ndifferent\nnatured\ndata,\nDevelop\n\
    scalable and explainable AI\n[47][52][57]\nsensors as shown in Figure 4.\nSensors\
    \ are the key component in smart city IoT\nsystems which provide the interaction\
    \ between the smart city system and the city’s\ninhabitants and allow for new\
    \ services to be developed. One thing to note is that\nmany of the sensors find\
    \ applications in multiple areas as discussed. Furthermore,\nany given application\
    \ will require measuring different physical quantities and will\nrequire the use\
    \ of many different types of sensors. For, e.g., ambient, motion, electric,\n\
    identification, position, chemical and hydraulic sensors have been found to be\
    \ used in\nsmart homes. As noted in the challenges, working with different sensors\
    \ which might\nhave different output data types is a task that needs to be dealt\
    \ with when working\nwith multiple types of sensors. Table 3 presents a summary\
    \ of the sensors used in\neach smart city component.\n3.3.1\nAmbient Sensors\n\
    Ambient sensors include sensors used to measure physical quantities indicating\
    \ to\nenvironmental conditions such as temperature, humidity, light intensity\
    \ and pressure.\nAmbient sensors are used in a variety of smart city applications\
    \ including smart homes\nwhere they are used to regulate the comfort level, they\
    \ are also used for smart city\nservices.\n3.3.2\nBio-Sensors\nBio-sensors are\
    \ used for measuring health parameters of living things. Bio-sensors in\nsmart\
    \ cities are used for monitoring patients for healthcare purposes. Such sensors\
    \ in-\nclude ElectroEncepheloGram (EEG), ElectroMyoGram (EMG), ElectroCardioGram\n\
    15\nAmbient\nPresence\nMotion\nOther \nsensors\nIdentification\nElectric\nHydraulic\n\
    Smart City Services\nSmart Homes\nSmart Transport\nSmart Agriculture\nSmart City\
    \ Services\nSmart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart\
    \ Infrastructure\nSmart Transport\nSmart Health\nSmart Homes\nSmart Industry\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Homes\nSmart Industry\n\
    Smart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Agriculture\n\
    Smart City Services\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nBiosensors\nSmart City Services\nSmart Homes\nSmart Transport\n\
    Smart Sensors\nChemical\nSmart Agriculture\nSmart City Services \nSmart Homes\n\
    Smart Transport\nFigure 4. Sensing Technologies for IoT Smart Cities.\n(ECG),\
    \ skin resistance, heart beat, breath sensors, pulse oximetry, blood pressure\n\
    and more.\n3.3.3\nChemical\nChemical sensors are used to measure chemical properties\
    \ of materials, this includes\ngas sensors which can measure/detect carbon monoxide\
    \ (CO), carbon dioxide (CO2)\nand other gases for air quality monitoring, sensors\
    \ for detecting smoke, pH and other\nsensors for water quality monitoring etc.\n\
    3.3.4\nElectric Sensors\nElectric sensors allow for the measurement of electrical\
    \ power and are widely used in\nsmart grids and smart homes to monitor the power\
    \ consumption of consumers/ap-\npliances. Types include current transformers and\
    \ voltage sensors to measure current\nand voltage, respectively.\n3.3.5\nHydraulic\n\
    Hydraulic sensors refer to sensors used for liquid measurements such as level,\
    \ flow,\nleak detection. These are used for measurement of liquid levels in tanks\
    \ [59].\n16\n3.3.6\nIdentification\nIdentification sensors refer to RFID tags\
    \ and Near Field Communication (NFC) de-\nvices. These sensors are used in applications\
    \ involving payments, data exchange in\nthe domain of smart transportation and\
    \ smart city services.\n3.3.7\nMotion Sensors\nMotion sensors refer to sensors\
    \ that can be used for the detection of motion. Sensors\nfor motion sensing involve\
    \ inertial sensors such as accelerometers and gyroscopes.\nThese sensors are used\
    \ in smart health applications such as activity tracking as well\nas applications\
    \ like vibration sensing in smart homes and industry.\n3.3.8\nPresence\nPresence\
    \ sensors indicate to the presence of a humans or objects. Passive InfraRed\n\
    (PIR) sensors are very popular and are used to detect human motion, reed switches\n\
    can be used on windows and doors for security purposes, inductive loop sensors\
    \ which\nuse electromagnetic induction can be used to detect presence in transport\
    \ systems.\nUltrasonic sensors are also used to determine the distance of objects.\n\
    Capacitive\nsensors are also included in this type, these may be used to determine\
    \ position.\n3.3.9\nOther Sensors\nVarious smart city applications make use of\
    \ different sensing modalities such as audio\nor visual information or other signal\
    \ measurement devices, for, e.g., bluetooth and\nWi-Fi signal strength. Since\
    \ the sensors for these modalities capture raw information\nabout signals (visual,\
    \ sound or signal strength etc.), the gathered data is typically\nprocessed further\
    \ before it indicates to the target variable being measured.\n3.4\nNetworking\
    \ Technologies\nThe internet of things in smart cities depends on the aggregation\
    \ of data measured by\nindividual sensing units placed throughout the smart city\
    \ environment. Systems that\ncan use these measurements individually have long\
    \ existed and provided automation\nfor small projects. However, the ‘smart’ in\
    \ smart city comes from the collective usage\nof the data from these individual\
    \ sensing units to perform complex decisions while\ndelivering services to citizens.\
    \ The collective use of this data enables its analysis over\na wider scope compared\
    \ to individual levels so as to determine long term patterns\nand provide meaningful\
    \ insights to support services. The number of such IoT devices\ncurrently present\
    \ in the world [34] are multiple times that of the world population.\nTo enable\
    \ these devices to exchange data, wireless technologies need to be used as\nphysical\
    \ connections would, for one, be too costly (where ever they can be used),\nsecond,\
    \ would not satisfy the mobility requirements that are typical of many smart\n\
    city applications. The internet has provided connectivity to computers, smartphones\n\
    and other electronic devices around the world with each other, allowing for instant\n\
    17\nTable 3. Sensing Technologies for IoT Smart Cities by Smart City Component\n\
    Smart City Com-\nponent\nSensor Type\nReferences\nSmart Agriculture\nAmbient,\
    \ Chemical, Hydraulic, Other sen-\nsors\nSmart City Services\nAmbient, Chemical,\
    \ Hydraulic, Presence,\nOther sensors,\n[60][61][62]\nSmart Energy\nAmbient, Electric,\
    \ Motion\n[63][64]\nSmart Health\nBiosensors, Identification, Motion, Other\n\
    sensors\n[65][66][67]\nSmart Home\nAmbient, Chemical, Electric, Hydraulic,\nIdentification,\n\
    Motion,\nPresence,\nOther\nsensors,\n[63][68]\nSmart Industry\nAmbient, Biosensors,\
    \ Electric, Hydraulic,\nIdentification., Motion, Other sensors\nSmart Infrastructure\n\
    Ambient, Motion, Electric, Other sensors,\n[60]\nSmart\nTransporta-\ntion\nAmbient,\
    \ Chemical, Identification, Mo-\ntion, Presence, Other sensors\n[69][70][71]\n\
    transfer of information between them. However, for IoT the internet may not neces-\n\
    sarily be the only communication method [72] as many applications do not possess\n\
    edge devices that can connect to the internet. An application may consist of a\
    \ local\nnetwork of sensing units which can exchange data between them and rely\
    \ on a multi-\nhop communication protocol to send data to a central node, hub\
    \ or gateway. The\ngateway might be fixed and would be connected to the internet,\
    \ thereby relaying any\nmonitored data to the cloud for further processing or\
    \ use. It might also be possible\nthat devices within an application may use many\
    \ different protocols with the central\nnode having the capability to communicate\
    \ with all of them, a common case for such\narchitectures is the smart home where\
    \ manufacturers produce devices using propriety\nor incompatible protocols for\
    \ which a hub may be used, an example of such a system\nwas provided in [73] and\
    \ several hubs are commercially available. In this section, we\ndiscuss the network\
    \ types, topologies and protocols used in the Internet of Things for\nSmart City\
    \ applications as illustrated in Figure 5. We later provide a comparison of\n\
    these protocols in Table 4.\n3.4.1\nNetwork Topologies\nThere are three IoT network\
    \ topologies, point to point, star and mesh [74]. The first\ntype of topology\
    \ is the point to point topology where devices are connected to each\nother sequentially\
    \ in a point to point manner. Point to point networks introduce\ndata hops for\
    \ packets that need to be sent to other nodes as data needs to go through\neach\
    \ node in the path of the two nodes wanting to exchange data. Point to point\n\
    networks are not very popular in IoT systems as it ranks low on fault resiliency\
    \ and\nwill breakdown if there is a fault in any of the intermediate nodes. In\
    \ Star topology,\n18\nall units in a network are connected to a central node or\
    \ gateway and cannot send data\nto each other directly. In order to perform an\
    \ exchange of data among themselves, the\ndevices need to send it through the\
    \ central node. Star topology networks, with their\ncentral node structure provide\
    \ a natural aggregation scheme for data collection within\nthe internet of things,\
    \ however, large networks consisting of many devices, which can\nbe the case in\
    \ most smart city applications, may result in high latency and possible\nbottlenecks\
    \ in high information throughput scenarios. Star topology has been used in\nvarious\
    \ applications including disaster management [75] and environmental sensing\n\
    [76]. The last type of network topology that is used in IoT is the Mesh network\n\
    topology, mesh networks allow all individual devices to communicate between them.\n\
    By enabling communication between the nodes in a network, mesh topology offers\n\
    a larger range as data transmitted towards a certain node can make multiple hops\n\
    through the network, this also increases the networks resilience as alternate\
    \ paths\ncould be used if packet delivery fails due to any node becoming faulty.\
    \ In fact, such\ntopologies have been used in smart homes [77] as well as in smart\
    \ grids [78]. There are\nother topologies which have not been mentioned, for,\
    \ e.g., tree (which has multiple\nstar networks connected in a point by point\
    \ fashion).\n3.4.2\nNetwork Architectures\nNetwork Architecture refers to the\
    \ structure of the network used for a given appli-\ncation. As discussed earlier,\
    \ the ‘things’ in IoT may not necessarily be connected\nthrough the internet,\
    \ in fact a distributed connectivity structure may be imple-\nmented with only\
    \ one unit in the network being capable of sending data to the\ncloud depending\
    \ on the requirement. Work in [72] mentions three types of network\narchitectures\
    \ that are used for smart cities based on IoT. These are Home Area\nNetworks (HANs),\
    \ Wide Area Networks (WANs) and Field/Neighborhood Area Net-\nworks (FANs/NANs).\
    \ Home Area Networks are short range networks and are usually\nused to transmit\
    \ information to a central node which is responsible for data collection\nbefore\
    \ it is sent to the cloud. Communication within the network is performed using\n\
    some low power communication protocol such as Zigbee, Bluetooth, Wi-Fi etc. HANs\n\
    are very popular in smart homes where they are used to gather power consumption\n\
    and times of operation data from a multitude of appliances which are then sent\
    \ to\na smart meter as part of a smart grid [79]. The second type of network architecture\n\
    is Field Area Networks (FANs), sometimes also called Neighborhood Area Networks\n\
    (NANs). Field Area Networks have a larger communication range than HANs and\n\
    are used to provide connection between a customer (for, e.g., in a smart grid)\
    \ to the\nutility company. Wide Area Networks are used for network structures\
    \ that require\ncommunication over large distances. These networks are not as\
    \ dense as HANs or\nFANs and utilize technologies such as cellular services, wired\
    \ connections such as fiber\noptics as well as a class of low power protocols\
    \ designed for WANs themselves [80].\nWANs are used in a variety of smart city\
    \ applications including Smart Grids where\nthey are used to connect multiple\
    \ substations together or exchanging data between\nthe customer and the substation\
    \ [81].\n19\n3.4.3\nNetwork Protocols\nThe type of network to use depends on the\
    \ requirements of the application. It is\nimperative that the communication protocol\
    \ used in a smart city application meet\nthe desirable quality of service (QoS).\
    \ Several protocols have been used in the internet\nof things for smart cities\
    \ [48, 82, 83, 84], herein, we discuss the traits of the most\npopular wireless\
    \ networking protocols used in smart cities.\n3.4.3.1\nRFID\nRadio Frequency Identification\
    \ (RFID) utilizes radio frequencies\nto transmit and receive data. RFID communication\
    \ consists of two types of devices,\none device is the Reader and the other is\
    \ called the Tag. The Reader is usually\npowered and once a tag comes in the vicinity\
    \ of the reader, an exchange of information\ntakes place after authorization as\
    \ the tag harvests the energy from the reader. Such\ntags are called passive tags,\
    \ there are also active tags which are do not depend on the\nreader for their\
    \ power. Depending on the standard, RFID can operate on different\nfrequencies\
    \ in the radio frequency spectrum between 125 KHz to 928 MHz and can\nbe used\
    \ over short ranges. They are used in applications such as smart transport\n(toll\
    \ tax collection, parking), smart health and more.\n3.4.3.2\nNear Field Communication\n\
    Near Field Communication (NFC) is very\nsimilar to RFID, however, the structure\
    \ of NFC communication doesn’t consist of\ntags and readers. Unlike RFID, both\
    \ devices which want to communicate using NFC\nneed to be powered and data tranmission/reception\
    \ can take place in both directions\nunlike RFIDs. This enables the use of NFC\
    \ to control and configure devices unlike the\nRFID which cannot be used for measurement\
    \ or control tasks. NFC utilizes similar\nfrequencies to RFID but is used for\
    \ very short distances. NFC devices are popular\nfor applications involving payment\
    \ using smart phones and are also used in smart\nhomes.\n3.4.3.3\nBluetooth\n\
    Bluetooth is a low energy protocol popular in IoT applica-\ntions as it can support\
    \ an unlimited number of nodes [82]. The protocol is designed\nfor short range,\
    \ low bandwidth communication in an arrangement where devices can\neasily exit\
    \ or enter the network. Bluetooth natively supports the star topology as it\n\
    has a master device at the center of the communication mechanism. It operates\
    \ in\nthe 2.4 GHz ISM band and can have maximum data rates of 2 Mbps. Bluetooth\
    \ has\nbeen widely used in smart home due to it providing a direct connection\
    \ interface to\nsmart phones without the need for any intermediary hub device.\n\
    3.4.3.4\nZ-Wave\nZ-Wave or Zensys wave is a low power protocol developed to\n\
    be used in home automation applications. It is a low speed protocol with a short\n\
    range, operating in the frequencies of 868 MHz and 900 MHz. It operates in a master\n\
    slave fashion where a master can have multiple slave devices which can respond\
    \ to\ncommands from the master node. Therefore this is well suited for applications\
    \ where\na central control element is present and needs to gather data from multiple\
    \ sensing\nunits such as smart homes and smart healthcare systems.\n20\n3.4.3.5\n\
    Li-Fi\nLi-Fi (Light Fidelity) uses visible light instead of radio frequency\n\
    (RF) to exchange data. The advantage with using Li-Fi over RF communication is\n\
    that it can utilize already present lighting systems which also results in conservation\n\
    of power [85]. It offers very high speeds of data transfer for short distances\
    \ and has\nbeen used in parking systems.\n3.4.3.6\nWi-Fi\nWi-Fi (Wireless Fidelity)\
    \ operates using wireless frequencies in the\n2.4 GHz and 5 GHz bands to provide\
    \ high speed internet connectivity in a limited\ndistance. Wi-Fi is popular in\
    \ many smart city applications as it provides ready to\nuse interface to smart\
    \ phones, computers and other wearable gadgets.\n3.4.3.7\nZigbee\nThe ZigBee protocol\
    \ was developed as a low power low cost pro-\ntocol for wireless sensor networks\
    \ (WSNs) and has evolved to be used in the Internet\nof Things. The ZigBee protocol\
    \ operates in the 868 MHz/915 MHz/2.4 GHz band\nand offers moderate data transfer\
    \ speeds with distances similar to Wi-Fi in a multi-\nhop data transfer scheme.\
    \ Zigbee radios are low cost devices and therefore it is a\npopular protocol used\
    \ by many manufacturers of smart home, smart healthcare de-\nvices. A ZigBee network\
    \ will have three devices, one called the coordinator which\nis the controller\
    \ of the network, the router which is responsible for moving data to\nother devices\
    \ and the ZigBee end device (sensors and actuators).\n3.4.3.8\nWi-SUN\nThe Wireless\
    \ Smart Utility Network (Wi-SUN) is a network\napproved by Institute of Electrical\
    \ and Electronic Engineers (IEEE) and is used in\nfield area networks for utility\
    \ metering, automation of distribution for utilities such\nas electricity, gas\
    \ etc. and also for demand response systems for utility-based appli-\ncations.\
    \ It supports IPv6 addressing and can be used in star or mesh configuration\n\
    where it also allows for multi-hop communication [86].\n3.4.3.9\nCellular\nCellular\
    \ technologies refers to 3G, 4G and 5G communications.\nAlong with Bluetooth and\
    \ Zigbee, they are the most popular IoT enabling technolo-\ngies. Cellular communication\
    \ provides high data rate and supports more content rich\napplications compared\
    \ to the other protocols. With the long range they provide, they\nare preferred\
    \ for a variety of applications where power is not an issue. Depending on\nthe\
    \ technology, cellular bands range from 600 MHz to 80 GHz with very high data\n\
    rates.\n3.4.3.10\nLoRaWAN\nLoRaWAN stands for Long Range Wide Area Network (Lo-\n\
    RaWAN) and it is a Low Power Wide Area Network (LPWAN) that consists of several\n\
    gateways and multiple end devices with the gateways connected to a back-end net-\n\
    work server. The back-end server provides connection to the cloud. End devices\
    \ do\nnot have a fixed association with a specific gateway and may send data to\
    \ multiple\ngateways when it needs to transfer data to the cloud.\n21\n3.4.3.11\n\
    6LoWPAN\n6LoWPAN which is short for IPv6 over Low Power Net-\nworks was created\
    \ by the Internet Engineering Task Force (IETF) specifically for\ninternet of\
    \ things applications with the aim of making it possible for providing in-\nternet\
    \ connectivity to small devices. It is an IP based network and leverages IPv6\n\
    communication. This is a short-range network operating in Industrial, Scientific\
    \ and\nMedical (ISM) bands.\n3.4.3.12\nSigFox\nSigFox is a proprietary standard\
    \ developed by SigFox Inc., France.\nIt uses unlicensed bands to perform ultra-narrowband\
    \ bidirectional communication\nwith low speeds [87]. SigFox has a similar architecture\
    \ to LoRaWAN and like Lo-\nRaWAN and 6LoWPAN, SigFox is a popular LPWAN in the\
    \ IoT domain offering\nsufficiently large distances of communication of up to\
    \ 50 km. SigFox finds applica-\ntions in security in buildings, smart lighting\
    \ and environmental monitoring.\n3.4.3.13\nNB-IoT\nNB-IoT (Narrow Band IoT) is\
    \ a type of LPWAN which oper-\nates on Global System for Mobile Communications\
    \ (GSM) and Long-Term Evolution\n(LTE) bands. In fact, it can operate using the\
    \ same hardware with a software up-\ngrade as it is considered a bare bones version\
    \ of LTE. It allows for connecting up to\n100,000 devices per cell.\nTable 4.\
    \ Comparison of Network Technologies for IoT Smart Cities\nArchitecture\nTechnology\n\
    Frequency/Medium Data rate\nRange\nTopology\nHome\nArea\nNet-\nworks (HANs)\n\
    NFC\n125\nKHz,\n13.56\nMHz/860 MHz\n106 Kbps, 212\nKbps or 424\nKbps\n10 cm\n\
    Point to Point\nRFID\n125\nKHz,\n13.56\nMHz/902-928 MHz\n4 Mbps [82]\n3 - 10 m\n\
    Point to Point\nLi-Fi\nLED Light\n1 – 3.5 Gbps\n[85]\n10 m\nPoint\nto\npoint,\n\
    Star,\nMesh\nBluetooth\n2.4 GHz\nUp to 2 Mbps\n240 m\nStar\nZ-wave\n868 MHz/900\
    \ MHz\n40-100 Kbps\n30 – 100 m\nMesh\nZigbee\n868\nMHz/915\nMHz/2.4 GHz\n250 Kbps\n\
    Up to 100 m\nMesh,\nStar,\nTree\nWi-Fi\n2.4 GHz/5 GHz\n54 Mb/s, 6.75\nGb/s\n140\
    \ m , 100 m\nTree\n6LOWPAN\n[82]\n868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n250\nKbps\n\
    10 - 100 m\nMesh, Star\nField/Neighborhood\nArea\nNetworks\n(FANs/NANs)\nWi-SUN\n\
    868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n300\nKbps\nUp to 4 Km\nStar, Mesh\nWide\nArea\n\
    Net-\nworks (WANs)\nNB-IOT\nLicensed LTE bands\n200 Kbps\n1 - 10 Km\nTree\nLoRaWAN\n\
    433\nMHz/868\nMHz/915 MHz\n50 Kbps\n5 - 20 Km\nStar\nof\nStar\n(nested star)\n\
    Sigfox\n433\nMHz/868\nMHz/915 MHz\n100 bps\n10 – 50 Km\nOne hop star\n3G\n1.8\
    \ – 2.5 GHz\n2 Mbps\n-\nTree\n4G\n600 – 5.925 GHz\nup to 1 Gbps\n-\nTree\n5G\n\
    600 - 80 GHz\nUp to 20 Gbps\n-\nTree\n22\nHome Area \nNetworks (HANs)\nNFC\nRFID\n\
    Li-Fi\nBluetooth\nZ-Wave\nZigbee\nWi-Fi\n6LoWPAN\nField/ Neighborhood \nArea Networks\
    \ \n(FANs/NANs)\nWi-SUN\nWide Area Networks \n(WAN)\nNB-IoT\nLoRaWAN\nSigFox\n\
    Cellular\ndistance\n1 Km\n10 Km\n100 Km\nFigure 5. Network Technologies for IoT\
    \ Smart Cities.\n3.5\nSecurity and Privacy in Smart City IoT\nSmart Cities involve\
    \ the transmission of sensing data, control information through\nthe internet\
    \ as well as local networks. Moreover, several components in smart cities\ntend\
    \ to critical aspects of a citys operation and are highly intertwined with the\
    \ social\nand private life of its citizens. Consequently, security and privacy\
    \ in Smart Cities\nis of great importance and has been of high interest to researchers\
    \ [51, 88, 89, 90,\n91, 92]. The topic of Security of IoT has been covered in\
    \ [93] who deliberate upon\nthe challenges faced in the different architectures\
    \ of the IoT and present issues and\nsolutions. We cover security for IoT in smart\
    \ cities so as to highlight issues that are\npertinent to in the Smart City context\
    \ and to complete our discussion on this topic.\nSmart Cities are enabled by collecting\
    \ data through sensors within a city as well\nas its populace, process it and\
    \ then mine it to provide a better quality of life to the\npeople living. These\
    \ sensors can provide an estimate about the internal state of a\ncity’s components\
    \ such as transportation, power system, building condition/state,\nhuman mobility\
    \ and more. All of this data is sent to the cloud where it is processed\nand mined.\
    \ However, there are several issues that pertain to how these data are\nsent and\
    \ used and raises questions about integrity, protection and the confidentiality\n\
    23\nAttackers\nHackers\nSpies\nTerrorists\nCorporate \nRaiders\nProfessional \n\
    Criminals\nVandals\nVoyeurs\nTool\nPhysical \nAttack\nInformation \nExchange\n\
    User \nCommand\nScript or \nProgram\nAutonomous \nAgent\nToolkit\nDistributed\
    \ \nTool\nData Tap\nVulnerability\nDesign\nImplementation\nConfiguration\nAction\n\
    Probe\nScan\nFlood\nAuthenticate\nBypass\nSpoof\nRead\nCopy\nSteal\nModify\nDelete\n\
    Target\nAccount\nProcess\nData\nComponent\nComputer\nNetwork\nInternetwork\nUnauthorized\
    \ \nResult\nIncreased \nAccess\nDisclosure of \nInformation\nCorruption of \n\
    Information\nDenial of \nService\nTheft of \nResources\nObjectives\nChallenge,\
    \ \nStatus, Thrill\nPolitical Gain\nFinancial Gain\nDamage\nGovernments\nBusiness\n\
    Consumers\nTransport \nSystems\nUtilities\nCity \nAdministration\nSocial Panic\
    \ / \nUnrest\nBusiness Trust \nManipulation\nFigure 6. Modified CERT Attack Taxonomy\
    \ for Smart Cities.\nof this process. In fact, this concern is not unwarranted\
    \ for, in 2015 an attack on\nthe Ukranian power grid which left 225,000 people\
    \ without power [94] opened the\nworlds eyes to the very real threat posed by\
    \ cyber attackers. Data gathered in Smart\nCity applications can be used to perform\
    \ many undesired acts, GPS devices that are\npresent in every phone and most vehicles\
    \ are susceptible to providing information\nabout a persons location, habits as\
    \ well as lead to privacy issues as discussed in [91],\npower consumption and\
    \ ambient sensor data from a building may indicate to occu-\npancy [95] and even\
    \ indicate to the individual identities [96]. This information may\nbe used by\
    \ bad actors to carry out unlawful acts causing risk to life and property.\nTo\
    \ secure the Internet of Things for Smart Cities, typical security schemes might\
    \ not\nbe as effective in many cases and new methods will need to be developed\
    \ to cope\nwith the security and privacy issues in IoT for Smart Cities. In order\
    \ to provide a\nstandardized framework and terminology for discussing security\
    \ attacks, we adapt the\nstandard attack incident taxonomy [97] suggested by the\
    \ Computer Emergency Re-\nsponse Team (CERT) which was established by Defense\
    \ Advanced Research Projects\nAgency (DARPA) for use towards IoT for Smart Cities.\
    \ This is shown in Figure 6.\nThere are different types of security and privacy\
    \ issues in IoT in Smart Cities,\nthey exist on each of the three levels of the\
    \ IoT architecture, application software\nlayers, network layer and the perception\
    \ layer along with some system wide issues, a\ndiscussion is provided for each\
    \ of them. Furthermore, Table 5 provides a summary\nof the security and privacy\
    \ issues in IoT for Smart Cities and the counter measures\nthat one can take to\
    \ mitigate them.\n3.5.1\nApplication Software Layers\nApplication software layers\
    \ are comprised of the Middleware, Application and Busi-\nness Layers. Security\
    \ and privacy in the application software layers tend to issues\nrelating to storage\
    \ of data and its usage. These are data visibility, access and injec-\ntion.\n\
    24\n3.5.1.1\nData Visibility/Identification\nOnce data is gathered, it is sent\
    \ to the\ncloud where it is stored and mined to make inferences. Since the cloud\
    \ would be used\nby multiple entities with different standards of security protocols\
    \ and practices, it is\nextremely important that data stored in the cloud is encrypted\
    \ so as not to allow its\nexposure to unwanted entities. Any data stored in plain\
    \ form would be a risk to not\nonly user privacy but also company rapport.\n3.5.1.2\n\
    Data access/Secondary Use\nAccess control is also a major issue in\nsmart city\
    \ data. Most Smart City applications rely on the usage of data from different\n\
    applications to provide smart services, thus resulting in the gathered data to\
    \ be used\nby many different enterprises. To allow this to take place smoothly\
    \ while preserving\nprivacy, suitable access control schemes will need to be devised\
    \ to allow for responsible\naccess to users of this data. A well-defined hierarchy\
    \ of data users will need to be\ndeveloped and implemented to limit access only\
    \ to intended authorized personnel.\nInformation flow control should also be employed\
    \ that can track data flow as access\nto it is made and to detect any violation\
    \ of access or usage rules. Moreover, data\nmashups that will occur in the cloud\
    \ where multiple entities merge their data to\nwork on some common goal, should\
    \ be carried out with proper oversight.\nData\nanonymization may also be required\
    \ in such a scenario where specific values may be\nconverted in to a range perhaps\
    \ ( e.g., using k-anonymity [90]) and unwanted data be\ndeleted as necessary.\
    \ Blockchain has been suggested to be used for access control as\nwell as access\
    \ tracking of users in IoT applications where each user access to a service\n\
    or an application ends up as a transaction to form the applications IoT trail\
    \ [98].\n3.5.1.3\nData Injection/Data Integrity\nData injection refers to the\
    \ injection\nof false information or modification information about a user in\
    \ the system after\ngaining access. Since data is typically stored in databases,\
    \ SQL injection involves\nan attacker inserting queries to modify data or make\
    \ false data insertions into the\ndatabase. This can have far reaching consequences\
    \ for smart city applications such\nas patient record manipulation as well as\
    \ manipulation or deletion of government\nrecords. SQL injection prevention schemes\
    \ involve the validation of data before using\nit [99] such as positive pattern\
    \ matching. It also involves limiting database access\nbased on the user requirements\
    \ and performing penetration testing.\n3.5.2\nNetwork Layer\nLike other networks,\
    \ the IoT in Smart Cities are also susceptible to network attacks\nsuch as Denial\
    \ of service, Eavesdropping, Man in the middle attack, Side Channel\nand spoofing\
    \ attacks [100]. We discuss these attacks and discuss remedial actions\nthat should\
    \ be taken to prevent them.\n3.5.2.1\nMan in the Middle Attack\nMan in the middle\
    \ (MITM) attack refers\nto the interception of data on the network by faking the\
    \ identity of a network node\nor device. This is carried out by appearing as the\
    \ intended recipient to the sender\n25\nand the original sender to the recipient\
    \ by unauthorized actors. To prevent this,\nthe exchange of data between two entities\
    \ should employ cryptographic protocols\nwhich can ensure secure communication.\
    \ Many public networks do not make use of\nencryption when exchanging data, this\
    \ endangers user data and can give access to\nunwanted persons to user information\
    \ [90]. Policies need to be devised to allow for\nsuitable data communication\
    \ standards for such networks while keeping the user as\nwell as commercial interests\
    \ in mind.\n3.5.2.2\nEavesdropping/Sniffing Attack\nEavesdropping refers to the\
    \ listening\nof data on the network. In eavesdropping an unauthorized entity joins\
    \ the network\nand can listen to the data that is being exchanged between the\
    \ devices on the network.\nTo avoid this, strategies include the use of authenticate\
    \ always protocols which initiate\nauthentication steps whenever devices need\
    \ to communicate with each other. This will\nensure that no unwanted users are\
    \ allowed access to network traffic to prevent such\nattacks. Moreover, industry\
    \ standard security protocols such as the Transport Layer\nSecurity (TLS), Wi-Fi\
    \ Protected Access 2 (WPA2) should be used for authenticating\nremote access.\
    \ Furthermore, remote sessions should have time-outs implemented to\nensure that\
    \ mistakes are not made by forgetful employees.\n3.5.2.3\nSide Channel Attack\n\
    Side Channel Attacks refer to the extraction\nof information by observing operation\
    \ characteristics of the implemented computer\nalgorithms or systems such as power\
    \ consumed, time taken, traffic analysis, fault\nanalysis, acoustic analysis [101].\
    \ Side Channel attacks don’t give nonpermitted parties\naccess to the data within\
    \ the network but may allow them to determine important\ninformation about the\
    \ system, such as the protocol used, or allow them to drop\npackets so as to degrade\
    \ performance of the network. One solution to counter network\ntraffic side channels\
    \ attacks is to saturate network bandwidth to prevent patterns\nfrom being observed.\
    \ Another popular method of preventing side channel attacks is\nto make use of\
    \ masking [102].\n3.5.2.4\nDenial of Service Attack\nDenial of Service (DOS) or\
    \ Distributed DOS\n(DDOS) attacks involve an entity getting access to the network\
    \ and using legitimate\nnodes within it to flood the target with unnecessary requests\
    \ to consume network\nbandwidth and degrade quality of service. With a smart city\
    \ depending on sensors\nto provide it with a ‘view’ of the city, DOS attacks can\
    \ make the smart city system\nblind which can lead to loss of property and life.\
    \ Countermeasures for DOS attacks\ninvolve anomaly detection by monitoring of\
    \ network data to check for any irregular\nbehavior. Artificial Intelligence has\
    \ found applications in this area as noted by [103],\nfor, e.g., it has been used\
    \ to identify abnormal data in smart grids [104] as well as\ndetecting attacks\
    \ [105, 106].\n3.5.2.5\nSpoofing Attack\nIn a spoofing attack, an attacker adds\
    \ itself to the\nnetwork by appearing to be a legitimate device on the network,\
    \ thereby allowing\nthem to send irregular or abnormal data to upset normal operation\
    \ of a smart city\n26\nsystem. Due to the varying nature and types of IoT devices\
    \ having different levels of\nbuilt-in security, spoofing is a particularly dangerous\
    \ attack for IoT systems. Methods\nto prevent spoofing are the use of cryptography,\
    \ hybrid encryption [107] as well as the\nuse of blockchain [108] to validate\
    \ data exchange and as well as authenticate devices.\n3.5.3\nPerception Layer\n\
    Perception layers attacks refer to physical attacks on an IoT based smart city\
    \ system.\nThis requires the physical presence of an attacker near the sensing\
    \ elements in an IoT\nsystem. We cover these attacks to provide a holistic assessment\
    \ of the security and\nprivacy issues in IoT Smart Cities. Tempering and Radio\
    \ Interference (jamming)\nare attacks which can affect the performance of smart\
    \ city systems. Tempering may\noccur during the development or the manufacturing\
    \ process while jamming can take\nplace due to a generation of radio frequencies\
    \ which interfere with the frequencies\nused by devices on the network to exchange\
    \ data. To circumvent this, policies may\nbe incorporated into software which\
    \ alert businesses and other Smart City partners\nto missing or abnormal data\
    \ from sensing devices.\n3.5.4\nSystem Wide Issues\n3.5.4.1\nData Leakage\nData\
    \ leakage refers to the unintentional conveyance of\ninformation about subjects\
    \ in smart cities. The many data sources in smart cities\nmay contain information\
    \ related to a user’s identity, health, quality of life etc. Smart\nCity application\
    \ managers use this data to improve their services and provide a bet-\nter user\
    \ experience, however, it is possible that this data might be shared with third\n\
    party entities. It is therefore necessary to anonymize data before such assignments\n\
    are taken. Data leakage can also take place when devices within a network perform\n\
    discovery tasks and may provide personal information to rogue nodes in the network.\n\
    In Smart Grids, power consumption data should be anonymized by considering the\n\
    data on a neighborhood level rather than on the individual level, moreover, systems\n\
    could be installed in homes using batteries to modify the demand response signal.\n\
    Data aggregation is an important tool in preserving individual privacy and preventing\n\
    data leakage. Moreover, data should be encrypted when sending it over the network\n\
    so that any unauthorized access is avoided. Another strategy would be to use data\n\
    minimization. Typically, sensors used in smart cities will gather data of less\
    \ ‘interest’\nin addition to data of interest. For, e.g., navigation systems many\
    \ times record loca-\ntion information even when not in use or video applications\
    \ such as facial recognition\nsystems typically record other activities apart\
    \ from being activated whenever a face is\nobserved in the video. This extra information\
    \ increases the risk of data leakage. Data\nminimization can be employed in such\
    \ cases to limit the data that is being gathered\non the user.\n3.5.4.2\nTrustworthiness\n\
    Apart from the technical steps that need to be taken\nto provide a secure usage\
    \ experience of smart city applications and to encourage its\nuse, it is important\
    \ that smart city users be provided clear policy guidelines to how\n27\nTable\
    \ 5. Security and Privacy issue for IoT Smart Cities\nLayer\nIssue\nCountermeasure\n\
    Application\nSoftware\nLayers\nData\nvisibility/Identifica-\ntion\n- Use of encryption\
    \ to store data\n(Middleware,\nApplica-\ntion and Business)\nData access/Secondary\
    \ use\n- Access control schemes based on user hi-\nerarchy\n- Data anonymization\
    \ be employed\n- Use of blockchain for tracking user access\nData\ninjection/Data\n\
    in-\ntegrity\n- Use of data validation before usage\n- Limiting data access\n\
    - Query parameterization\n- Penetration testing\nNetwork Layer\nMan in the middle\
    \ attack\n- Use of cryptographic protocols for data\nexchanges\n- Encrypting data\
    \ on public networks\nEavesdropping/Sniffing\nat-\ntack\n- Use always authenticate\
    \ protocols\n- Remote access should use industry ac-\ncepted protocols such as\
    \ TLS, WPA2\n- Timeouts for remote sessions\nSide channel attacks\n- Bandwidth\
    \ saturation\n- Masking to prevent similar operational\npatterns\nDenial of Service\n\
    - Check irregular data requests (AI has\nbeen shown to be of use here)\nSpoofing\
    \ attacks\n- Use of cryptography\n- Use of hybrid encryption\n- Use blockchain\
    \ to validate data exchange\nas well as authenticate devices\nPerception Layer\n\
    Tempering and Jamming\n- Software policies for missing data\nSystem Wide\nData\
    \ leakage\n- Data anonymization\n- Data minimization\n- Data aggregation\nTrustworthiness\n\
    - Provide clear policy guidelines to users\n- Flexible policy development in consulta-\n\
    tion with users\ncompanies providing them these services will manage their data.\
    \ Transparency in this\nregard will help increase user trust and the feedback\
    \ will enable companies to develop\nbetter data privacy mechanisms. Another way\
    \ trust could be developed would be for\nthe companies to provide customers who\
    \ are vary of data collection, certain options\nin policies where they could choose\
    \ which parts of the data collection are acceptable\nto them and which aren’t.\n\
    4\nSWOT Analysis\nTo complete this discussion, we perform a Strength Weaknesses\
    \ Opportunities Threat\n(SWOT) analysis on the use of IoT for Smart Cities that\
    \ discusses the strengths that\nIoT offers for Smart cities, the weaknesses in\
    \ the current implementation scenario,\nthe opportunities which exist for future\
    \ work in this area as well as the threats that\nIoT application to smart cities\
    \ faces, a summary of our discussion has been given in\n28\nTable 6. SWOT Analysis\
    \ for IoT in Smart Cities\nPositive\nNegative\nStrengths\nWeaknesses\nInternal\n\
    - Sustainable living\n- Lack of data control policies\n- Improved quality of life\n\
    - Laws need to be developed\n- Efficient city operations\n- Interoperability of\
    \ networks\n- Well suited for big data algorithms\n- Incompatible sensor standards\n\
    - Scalability of applications\n- Myriad of different application\nframeworks\n\
    - Real-time/fast response due to distributed IoT\nstructure\n- Reduced costs\n\
    - Robustness\n- Enable heterogenous system connectivity\nOpportunities\nThreats\n\
    External\n- Development of new sensor technologies.\n-\nTrustworthiness\nissues\n\
    among\nusers\n- Development of low power and higher speed com-\nmunication schemes\n\
    - Network attacks\n- Development of Encryption techniques for stor-\nage and data\
    \ exchange\n- Data theft\n- Development of Data processing for privacy\npreservation\
    \ techniques\n- Data leakage\n- Development of new city services\n- Development\
    \ of scalable, explainable AI\nTable 6.\n4.1\nStrengths\nIoT smart city strengths\
    \ are the fact that they provide an improved quality of life for\na city’s population\
    \ along with reduction of costs in terms of operation and also enable\ncities\
    \ to be sustainable. IoT enables sensors and devices to be deployed throughout\
    \ a\ncity to give an overview of the state of the city’s main functions such as\
    \ transportation\nsystems, electric, water and gas distribution as well as crime\
    \ monitoring to name\na few. This real time information helps city administration,\
    \ businesses and other\nstakeholders to provide better services to people, increase\
    \ the effectiveness of those\nservices and reduce the cost through efficient operation.\n\
    On the technical side, IoT data has made possible to use data analytics to gauge\n\
    various aspects of the multitude of services which are being provided in the city\
    \ as\nwell as to determine interactions between them and utilize that information\
    \ for better\ndecision making to make life easier for citizens. Furthermore, the\
    \ distributed nature\nof IoT systems and the flexible architectures which enable\
    \ fluidity through movement\nof sensing units is easily scalable thereby requiring\
    \ little additional cost to upgrade\nand expand currently deployed systems. Moreover,\
    \ this distributed architecture also\nmakes such systems very robust to faults\
    \ thereby increasing reliability of deployments\nand offering self-healing in\
    \ applications such as electricity systems.\n29\n4.2\nWeaknesses\nIoT in Smart\
    \ cities do suffer from some weaknesses in terms of technology, for, e.g.,\nthe\
    \ current deployment scenario has a myriad of different technologies relating\
    \ to\nnetworks, hardware platforms and software frameworks which do not often\
    \ work to-\ngether very well as discussed. Different standards’ bodies such as\
    \ the IETF, European\nTelecommunications Standards Institute (ETSI), IEEE and\
    \ other organizations have\nbeen contributing with standards for communication,\
    \ network discovery, identifica-\ntion, management of devices etc. However, the\
    \ sheer number of ‘standards’ with\nmany of them not being compatible with each\
    \ other has not fully solved the inter-\noperability problem and this can cause\
    \ hurdles for expansion of IoT systems without\na significant overhaul of system\
    \ components. Another problem currently facing IoT\nsystems is the lack of data\
    \ policies and legislation. The concern here is that data\npolicies are not mature\
    \ enough to regulate how data is handled in IoT systems, as\nhas been discussed\
    \ previously. This is a major problem given the growing issue with\nuser data\
    \ privacy in a connected world.\n4.3\nOpportunities\nIoT in Smart cities presents\
    \ many opportunities to researchers and businesses alike\nin lieu of mitigating\
    \ the weaknesses and also in the provision of new city services.\nThe data gathered\
    \ by the sensors in IoT systems has the potential to provide a\nholistic overview\
    \ of the city’s state allowing for the use of big data algorithms to\ndevelop\
    \ new applications and services. For researchers in the data analytics domain,\n\
    this heterogenous data provides a wonderful opportunity for the development of\
    \ new\ndata science algorithms for service delivery. There is a large monetary\
    \ value towards\nthe development and usage of computationally cheap encryption\
    \ techniques, efficient\ndata storage methods and networking technologies to make\
    \ IoT deployment easier\nand cheaper.\nDevelopment of new sensor technologies\
    \ is another opportunity for\nresearchers in IoT for smart cities.\nThe development\
    \ of newer, efficient, low-cost\nsensors would aid to the creation of IoT services\
    \ and enable even wider usage.\n4.4\nThreats\nWith a connected system, there are\
    \ several threats that come with IoTs for Smart\nCities involving trust issues\
    \ among users, privacy concerns due to network attacks,\npotential data theft\
    \ etc. Privacy and security are the most important concerns of\nIoT applications,\
    \ with such a personalized interaction mechanism between people\nand devices as\
    \ is the case of smart cities, the risks for privacy breaches, data theft\nand\
    \ leakages are high and this is a constant concern for service users as well as\n\
    providers. Numerous attacks on Smart City systems have exposed the vulnerability\n\
    of this technology to cyber attacks and also demonstrated the consequences that\
    \ it\nhas on the population. Traditional security procedures and methods such\
    \ as access\nauthentication, routing and networking might not be enough or possible\
    \ in many IoT\ndeployments due to IoT devices typically not having sufficient\
    \ computing capabilities,\n30\nthis has exacerbated the privacy and security concerns\
    \ for IoT stakeholders. This can\nalso feed to a lack of trust by customers to\
    \ participate in smart city applications.\n5\nConclusions\nThis chapter presented\
    \ a broad coverage of the Internet of Things in Smart Cities.\nProviding a detailed\
    \ discussion of Smart Cities and its different domains, IoT was\npresented as\
    \ a vital enabler of smart city services and the various smart city architec-\n\
    tures and the challenges that are faced in the deployment of smart city applications\n\
    were deliberated upon. This was followed by a review of the sensing and networking\n\
    technologies used for such applications Finally, the security and privacy issues\
    \ faced\nby IoT based Smart Cities were discussed and a SWOT analysis is provided.\n\
    31\nCHAPTER III\nAI IN IOT SMART CITIES\n1\nIntroduction\nThis chapter provides\
    \ insight into different ways in which AI has been applied in\nthe IoT for Smart\
    \ Cities using the application of clustering, regression, classification\netc.\
    \ In addition, various applications, solutions and data used for implementing\
    \ the\noverall framework of Smart Cities are discussed in detail. along with the\
    \ types of\ndeployment used by these proposed approaches.\n2\nBig Data Algorithms/Artificial\
    \ Intelligence\nThe various sensors that make up the internet of things in a smart\
    \ city relay in-\nformation about the city’s state to the cloud. However, measuring\
    \ raw data is not\nenough, to utilize this data and to make the city ‘smart’,\
    \ data analysis is key. Data\nanalysis in smart cities has four layers, the first\
    \ is Data Acquisition, which deals with\nthe collection and storage of data, this\
    \ is followed by the Preprocessing layer which\nperforms operations (such as imputing\
    \ missing values, scaling, removing erroneous\ndata points etc.) on the data to\
    \ ensure that data is of suitable quality to be used for\nthe data analytics stage.\
    \ The data analytics stage involves the application of data\nscience techniques\
    \ on the data to extract patterns and insights which would be used\nfor policy\
    \ making, planning and other actions in the Service layer. In this section, we\n\
    focus our attention on the third stage of the data analysis process, i.e., data\
    \ analytics.\nData analytics in the Smart City based on the IoT involves the use\
    \ of Deep Learning\nand Machine Learning on the gathered data. The discussion\
    \ in this chapter considers\nthe following aspects of the use of AI (ML/DL) in\
    \ the IoT for smart cities:\n1. The type of application: This refers to the aim\
    \ of the application.\n2. Algorithm/Network: This refers to the algorithm being\
    \ used to perform the\ntask and can be any of the ML/DL algorithms covered.\n\
    3. System Architecture: System architecture refers to the IoT architecture pro-\n\
    posed for the covered work. This can be Cloud, Fog or Edge.\n4. Task: This refers\
    \ to the type of machine learning task being performed. This can\nbe classification,\
    \ clustering or regression. In this category, a brief description is\nalso presented\
    \ about what quantities/outcomes are being worked with.\n32\n5. Data Type: This\
    \ refers to the type of data being used. Data can be of two\ntypes, heterogeneous\
    \ or homogeneous. Heterogeneous refers to the use of data\nof different modalities\
    \ whereas homogenous refers to a single modality being\nused. The aim of providing\
    \ this information is to capture the complexity of the\ndata involved in an application.\n\
    2.1\nMachine Learning\nMachine learning (ML) has been a crucial element of smart\
    \ city application develop-\nment [109], helping in prediction (classification),\
    \ estimation (regression) and cluster-\ning tasks. Machine learning refers to\
    \ the set of approaches through which computers\ncan be used to learn from empirical\
    \ data [110] and has been used in smart cities\nin various applications. Since\
    \ there has been a lot of work in this area using ML\nalgorithms, we focus on\
    \ work in the last few years. It was found that most commonly\nused ML algorithms\
    \ have been the Support Vector Machine (SVM), Random Forests\n(RF), Decision Tree\
    \ (DT), Naive Bayes (NB), K-Means, K-Nearest Neighbor (K-NN)\nand Logistic Regression\
    \ (LR).\n2.2\nDeep Learning\nDeep learning is the use of successive layers of\
    \ Artificial Neural Networks (ANNs) to\nlearn patterns. The idea is that successive\
    \ non-linear layers of interconnected artificial\nneurons can be used to learn\
    \ patterns in data that simple machine learning algorithms\nmight not be able\
    \ to do. Deep learning architectures can process noisy data to provide\noutput\
    \ for classification and prediction tasks. This makes them very useful in the\n\
    Smart City environment where the IoT enables the collection of heterogeneous sensor\n\
    data which can be of varying nature. Data derived from sensors can be processed\
    \ to\nextract features or can be fed directly to deep learning algorithms which\
    \ can perform\nboth feature extraction as well as classification/prediction. Deep\
    \ Learning methods\nsuch as Recurrent Neural Networks (RNN)(Long Short-Term Machines\
    \ (LSTM) and\nGated Recurrent Units (GRU)), Convolutional Neural Networks (CNN),\
    \ Deep Neural\nNetworks (DNN) and Stacked Autoencoder Networks (SAE) were the\
    \ preferred deep\nlearning methodologies used for smart city applications and\
    \ our discussion revolves\naround the utilization of these methods.\n3\nAI Applications\
    \ for Smart Cities\nIn this section, the applications for of AI in smart cities\
    \ have been discussed, we also\nmention the kind of deployment as well as the\
    \ nature of data utilized to achieve their\ntask.\n3.1\nSmart Agriculture\nThe\
    \ major applications of AI in IoT for agriculture are crop monitoring/disease\
    \ de-\ntection and data driven crop care and decision making. Considering the\
    \ scarcity of\n33\nwater, the authors in [111, 112, 113] develop irrigation systems\
    \ which monitor and\ncontrol the amount of water being used for crops, all structured\
    \ around a cloud com-\nputing system. This problem has been devised both as a\
    \ classification as well as a\nregression problem as in [114], who develop a closed\
    \ loop water irrigation system using\nsupport vector regression and K-Means clustering.\
    \ The authors in [115, 116] propose\ncloud based greenhouse monitoring systems\
    \ using images and a host of physical pa-\nrameters from plants such as temperature,\
    \ humidity and light using several machine\nand deep learning methods. Plant disease\
    \ detection is also an important task within\nsmart agriculture and has been worked\
    \ on by the authors in [117, 118, 119, 120] who\npresent schemes for disease detection\
    \ for various crops including tomatoes and pota-\ntoes. The proliferation of sensing\
    \ systems in agricultural fields has also provided an\navenue for data driven\
    \ decision making and planning for farmers. This involves pre-\ndicting various\
    \ physical parameters which can affect crop growth like solar radiance\n[121]\
    \ and temperature, humidity, windspeed [122, 123, 124, 125, 126] to help in deci-\n\
    sion making in terms of plant care but also classification systems for recommending\n\
    crops to be sown [127, 128]. It is important to note that all of these implementations\n\
    are cloud based.\nThere have been some suggested methodologies for bringing fog\
    \ processing for AI\nin smart agriculture, for, e.g., in [129] a deep learning\
    \ entrusted to fog nodes (DLEFN)\nalgorithm is described to support efficient\
    \ use of resources and reduce cloud resource\nusage. However, as noted in [130],\
    \ who use an edge system for temperature prediction\nusing an LSTM, edge device\
    \ performance still lacks that of similar cloud systems but\nthe inclusion of\
    \ DL capable hardware does provide opportunities for further innova-\ntions. Previous\
    \ work by the same author [131], where they aimed to monitor crops\nfor frost\
    \ signs and trigger anti-frost measures, compared edge and cloud computing\nsystems\
    \ for outlier detection and determined that cloud implementations to provide\n\
    much better performance. However, they do note the potential for edge systems\
    \ to\nprovide highly responsive data analytics in smart agriculture. More applications\
    \ can\nbe envisaged for AI deployment in smart agriculture, for, e.g., monitoring\
    \ of crop\ngrowth, selection of the fertilizer and the timeline for it to be used\
    \ as well as targeted\napplication, pest detection and intelligent pesticide spraying\
    \ so as to reduce harm to\nthe environment, environmental monitoring to track\
    \ the effects of climate change and\nmore. Some of these applications have potential\
    \ to be deployed as edge computing\nsystems. A summary of the use of IoT based\
    \ AI in Smart Agriculture is presented in\nTable 7.\n3.2\nSmart City Services\n\
    A popular component of smart city initiatives is the management of waste and involves\n\
    having bins equipped with sensors and connected to the cloud to not only inform\
    \ the\nrelevant authorities of the need to empty them but also using AI to determine\
    \ the\nbest route to reduce fuel consumption. The use of IoT systems for waste\
    \ management\nhas been observed in the works of [133] who utilize IoT systems\
    \ to help reduce energy\nwastage in waste collection by municipalities. Hussain\
    \ et al. [134] develop a waste\nmanagement system that not only determines if\
    \ bins are full and need collecting\n34\nTable 7. AI use for Smart Agriculture\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nCrop\nMonitoring\n\
    /Plant care (Irriga-\ntion)\nLR [111]\nCloud\nClassification\n-\nDifferent\nstates\
    \ of crop [less water\netc])\nHeterogeneous\n(Temperature,\nSoil\nmoisture, Air\
    \ quality,\nSunlight etc)\nDT [113]\nCNN [112]\nClassification\n-\nDifferent\n\
    conditions of plants and soil\n[dry etc])\nHomogeneous\n(Im-\nages)\nSVR + K-Means\
    \ [114]\nRegression\n-\nPredicting\namount of moisture in soil\nHeterogeneous\n\
    (Soil moisture,\nSoil\ntemperature,\nAir\ntemperature,\nUltra-\nviolet\n(UV)\n\
    light\nradiation,\nRelative\nhumidity,\nWeather\nforecast data)\nCrop\nMonitoring\n\
    /Plant\ncare\n(Mon-\nitoring\nand\ndisease\ndetection)\nSVM [115]\nCloud\nRegression\n\
    -\nForecasting\ntemperature\nHeterogeneous (Tem-\nperature,\nHumidity,\nLight,\
    \ Soil moisture)\nSVM [118]\nRegression\n-\nDaily\ncrop\ngrowth\n(indirectly\n\
    from\nmeasured data)\nSVM [117]\nClassification\n–\nDifferent\ncrop conditions\n\
    Heterogeneous\n(Im-\nages, Gas)\nSVM + K-Means + CNN\n[116]\nClassification\n\
    -\nDifferent\nstages of tomato growth\nHomogeneous\n(Im-\nages)\nSVM [119]\nClassification\
    \ - Recognizing\nand detecting disease\nCNN [120]\nEdge\nData driven crop care\n\
    and decision making\n(Predicting\nphysical\nparameters)\nCNN + RNN(GRU) [122]\n\
    Cloud\nRegression - Prediction of\nTemperature, Humidity and\nWind speed\nHeterogeneous\
    \ (Tem-\nperature,\nHumidity,\nWind\nspeed,\nLoca-\ntion\nof\nmonitoring\nstation,\
    \ Time, Rain-\nfall, Solar radiation)\nRFC[126]\nRNN (LSTM) [123]\nDNN [125]\n\
    RNN (GRU) [124]\nDNN [121]\nRegression - Prediction of\nsolar radiance\nRNN (LSTM)\
    \ [132]\nEdge /Cloud\nRegression\n-\nTemperature\nforecasting\nData driven crop\
    \ care\nand decision making\n(Crop\nrecommenda-\ntion)\nDT [127]\nCloud\nClassification\n\
    -\nDifferent\ncrops\nHomogeneous (Tem-\nperature)\nDT [128]\nClassification -\
    \ Soil fertility\nand type, Regression - Pre-\ndiction of soil toxicity\nHeterogeneous\n\
    (Soil\nmoisture,\nTemper-\nature,\nHumidity,\nPH,\nSoil\nnutrient\ncontent/fertility)\n\
    35\n(using data from various sensors placed in the bin) but also predicts the\
    \ air quality\naround it using RNNs. The sensing modalities in each of these applications\
    \ is pretty\nsimilar in that they indicate to whether a waste bin is full or not\
    \ which is then\nused for route planning. Considering the requirements of such\
    \ a system, in terms\nof implementation, all of these systems are cloud based.\
    \ Sewer monitoring has been\nperformed in [135] in a cloud based system, they\
    \ use sewer water level and rain gauge\ndata along with a RNN to perform sewer\
    \ overflow monitoring. The RNN is used to\npredict sewer overflow ahead in time.\
    \ Water quality has monitoring has been the focus\nof [136, 137, 138] where the\
    \ authors use multiple sensors measuring pH value, chloride,\nnitrate content\
    \ and hardness of water to determine whether it is fit for drinking or\nnot. In\
    \ [139], Liu et al. use data from water monitoring stations along the Yangtze\n\
    river to predict water quality. Like the classification-based systems, they use\
    \ multiple\nchemical measurements from the water such as oxygen, pH, turbidity\
    \ etc. Apart from\nair quality, smart city monitoring systems are an important\
    \ application within the\nsmart city services domain. This includes urban noise,\
    \ which has been the focus of\nresearchers in [140, 141] as well as other more\
    \ comprehensive monitoring systems as\nproposed in [142, 143]. All these systems\
    \ are cloud based and use a combination\nof sensors for sound and/or image data\
    \ for performing noise monitoring/detection\nand various smart city dashboard\
    \ applications. In Table 8, we summarize the type\nof deployments, applications\
    \ task and data for smart city services applications. It\nis noted that most of\
    \ the applications relating to city services such as air quality\nmonitoring and\
    \ prediction, sewer monitoring, waste collection have been proposed as\ncloud\
    \ systems as data needs to be collected from nodes at various points in a city.\n\
    It is envisaged that due to the nature of the applications, many smart city services\n\
    would still rely on cloud or fog architectures as the decision-making taking place\
    \ in\nsuch situations isn’t possible on only a local level. It is also observed\
    \ that most of the\napplications required data from multiple sensors and therefore\
    \ utilized heterogeneous\ndata to carry out the task at hand.\n3.3\nSmart Energy\n\
    Load/energy consumption forecasting is an essential task for monitoring and control\n\
    of electrical power supply in the electricity grid and ensure appropriate demand\
    \ side\nmanagement. It has been performed by the authors of [148] who use data\
    \ collected\nfrom consumers in a smart grid to determine load for up to 24 h in\
    \ advance. They treat\nthis as primarily a clustering problem where they form\
    \ clusters of similar load profiles\nand then use distance functions to determine\
    \ energy consumption for the future. The\nauthors in [149] also use a cloud based\
    \ clustering approach, using historical power\ndata, they use K-Means clustering\
    \ to determine the closest historical records and then\ncombine them to predict\
    \ energy consumption 24 h in advance. The load forecasting\nproblem has been dealt\
    \ as a regression by [150] using a SVM and by [151] through an\nRNN using electricity\
    \ power data. A regression approach is also followed by [152, 153]\nwho use electricity\
    \ consumption in addition to environmental data for load forecasting\nusing deep\
    \ learning methods (DNN and a combination of Autoencoders and RNNs\n(GRU)). Edge\
    \ based systems have been suggested by the authors of [154, 155, 156]\n36\nTable\
    \ 8. AI use for Smart city Services\nApplication\nNetwork\nSystem\nAr-\nchitecture\n\
    Task\nData type\nAir quality\nK-NN [144]\nCloud\nClassification - Differentiate\n\
    between different air quality\nlevels\nHeterogenous\n(Gas,\nLight, Temperature,\n\
    Humidity, Pressure,\nRFC[145]\nWind\nspeed,\nWeather\ninfor-\nmation, Images,\n\
    RFC[146]\nTraffic\nflow\ndata,\nVisibility,\ninforma-\ntion about\nRNN (LSTM)\
    \ [147]\nRegression - Prediction of\nair quality levels\ntypes\nof\nbuildings\n\
    etc)\nWater quality moni-\ntoring\nNB [136]\nCloud\nClassification - Determine\
    \ if\nwater is fit to drink or not\nHeterogeneous\n(Chlorides, Nitrates,\nTotal\n\
    dissolved\nsolids,\nSVM [137]\npH\nand\nHardness,\nand\nother\nchemical\nproperties)\n\
    DNN [138]\nRNN (LSTM) [139]\nRegression - Prediction of\nwater quality\nSewer\
    \ Overflow Mon-\nitoring\nRNN (GRU,LSTM) [135]\nCloud\nRegression - Prediction\
    \ of\nwhen\nHeterogeneous (Wa-\nter level sensor data\n(ultrasonic)\nover\ndrain\
    \ holes as well as\nrain gauges)\nWaste management\nRNN (LSTM) for prediction\n\
    of air quality [134] , K-NN\nfor detection of waste bin be-\ning full\nCloud\n\
    Regression - Prediction of\nair pollutant levels, Classifi-\ncation - Bin full\
    \ or not\nHeterogeneous\n(Odor, Weight, Level\nsensing using\nRFC[133]\nClassification\
    \ - Empty bin or\nnot\nultrasonic\nsensor,\nGas\nsensor\nfor\nair\nquality, Vibration)\n\
    Urban noise monitor-\ning\nCNN [140]\nCloud\nClassification\n-\nDifferent\ntypes\
    \ of sounds\nHomogeneous\n(Sound)\nRNN (LSTM) [141]\nRegression – Prediction of\n\
    noise levels\nManagement\nof\nSmart City\nCNN [143]\nCloud\nApplication\n–\nDashboard\n\
    (object identification etc)\nHeterogeneous (Var-\nious sensors, Urban\nvideo\n\
    and\nsound\ndata)\nCNN [142]\nfor load forecasting for household consumers, [156]\
    \ use federated learning to train a\nRNN. In addition to load forecasting, smart\
    \ grid management/monitoring is also a\nnecessary application in this domain.\
    \ The authors in [157] use decision trees in a cloud\nbased system to classify\
    \ between different faults in a smart grid. In [158], the authors\nuse power consumption\
    \ data from consumers in China to determine electricity theft\nin a cloud based\
    \ system. They use wide and deep convolutional neural networks to\ncapture the\
    \ periodic and nonperiodic components from electricity consumption data\nand show\
    \ their network to be suitable for electricity theft detection. The authors in\n\
    [159] present a framework for edge computing based monitoring of the smart grid.\n\
    Edge computing in the smart grid has several advantages as it reduces delay and\
    \ also\nit is secure in terms of data privacy. A summary of the use of IoT based\
    \ AI in Smart\nEnergy is provided in Table 9.\n37\nTable 9. AI use for Smart Energy\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nEnergy/Load\n\
    con-\nsumption forecasting\nK-Means [148]\nCloud\nClustering - Determine clus-\n\
    ters of similar power con-\nsumption\nHomogeneous (Elec-\ntric power)\nK-NN [149]\n\
    Regression - Predict con-\nsumption\nof\nelectricity\nahead of time\nSVM [150]\n\
    RNN (LSTM) [151]\nDNN [152]\nHeterogeneous (Elec-\ntric\npower,\nTem-\nperature,\n\
    Humidity,\nTime, Holiday\nSAE + RNN (GRU) [153]\nCNN [155]\nEdge\nRNN (GRU) [154]\n\
    Homogeneous (Elec-\ntric power)\nRNN (LSTM) [156]\nSmart\nGrid\nline\nevent\n\
    classification\n(fault etc.)\nDT [157]\nCloud\nClassification\n-\nDifferent\n\
    powerline events\nHomogeneous (Elec-\ntric power)\nElectricity theft de-\ntection\n\
    CNN [158]\nCloud\nClassification - Theft detec-\ntion for abnormal patterns\n\
    of consumption\nHomogeneous (Elec-\ntric power)\n3.4\nSmart Health\nThere are\
    \ two major applications of IoT with AI in health, these are activity recog-\n\
    nition/fall detection and disease diagnosis/health monitoring, a summary of the\
    \ IoT\nbased AI systems used in Smart Health is presented in Table 10. Activity\
    \ recog-\nnition involves the use of movement sensors such as accelerometers,\
    \ gyroscopes and\nmagnetometers with the aim to help provide the user with feedback\
    \ on their health.\nThis can be in terms of them having enough physical exercise\
    \ or not, used for sports\ntherapy, fall detection and for monitoring of different\
    \ diseases such as Parkinson’s or\nother motor degenerative ailments. The most\
    \ popular sensor for activity recognition\nare inertial sensors which have been\
    \ used by [160, 161] in a cloud based setting using\nvarious deep and machine\
    \ learning algorithms. In [162], Castro et al. include vital\nsign data in addition\
    \ to movement information for human activity recognition in a\ncloud environment,\
    \ they utilize the DT as their classifier. In [163],, the authors pro-\npose an\
    \ edge-based system to perform activity recognition for people by recording\n\
    their movements using the accelerometer and gyroscope present on the phone. They\n\
    use a SVM as their classifier and differentiate between six different activities\
    \ of daily\nliving. Fall detection has been performed by [164, 165] in a fog and\
    \ edge environment,\nrespectively, using an accelerometer, Santos et al. [164]\
    \ use a CNN while Yacchirema\net al. [165] useRFCwith both approaches showing\
    \ promising results.\nEquipped with the power of AI in IoT, Smart Health systems\
    \ facilitate the provi-\nsion of telehealth services as well as real time monitoring\
    \ of patients, giving doctors\nand patients feedback on their health.\nHealth\
    \ monitoring systems and real time\ndisease diagnosis have been one of the most\
    \ important applications of IoT technol-\nogy. The authors in [166, 167, 168,\
    \ 169, 170, 171, 172, 173, 174, 175, 176] develop\ncloud based health monitoring\
    \ systems for detecting various types of diseases, such\n38\nas heart (stroke\
    \ [167], irregular sound [169], irregular rhythm [171, 173]), epilep-\ntic seizures\
    \ [172], Parkinson seizure [176] and multiple disease diagnosis systems\n[174,\
    \ 175]. In [174, 175], the authors formulate the problem of disease diagnosis\
    \ as\na classification problem and utilize medical data such as ECGs, EEG, heart\
    \ rate,\nblood pressure, blood sugar, heart sound, blood glucose, liver health\
    \ along with var-\nious machine and deep learning methods to achieve this task.\
    \ Fog and edge based\nhealth monitoring/disease diagnosis systems have also been\
    \ suggested by a number\nof researchers. The authors in [177] present a fog based\
    \ system using a deep neural\nnetwork to detect heart disease from a patients\
    \ vital signs (blood oxygen, heart rate,\nrespiration rate, EEG, ECG, EMG, blood\
    \ pressure, glucose) and activity data. In\n[178], Devarajan & Ravi work on a\
    \ fog computing based Parkinson detection system\nusing a persons speech. Moreover,\
    \ an edge computing system is presented in [179]\nwhich utilizes EEG signals to\
    \ determine seizures in patients.\nTable 10. AI use for Smart Health\nApplication\n\
    Network\nSystem\nArchi-\ntecture\nTask\nData type\nHuman\nactivity\nrecognition/Fall\n\
    de-\ntection\nDT [162]\nCloud\nClassification - Different activities,\nfall /non\
    \ falls\nHeterogeneous (Acceleration, Heart\nrate,\nPosture,\nECG, Respiration\n\
    rate)\nRFC[160]\nHomogeneous (Accelerometer)\nCNN [161]\nRNN\n(LSTM)\n[180]\n\
    Fog Edge\nHeterogeneous (Accelerometer, Gy-\nroscope, Magnetometer)\nCNN [164]\n\
    Fog\nRFC[165]\nEdge\nHeterogeneous (Accelerometer and\nGyroscope)\nSVM [163]\n\
    Patient health moni-\ntoring\nDT [166]\nCloud\nClassification\n-\nRecommendation\n\
    about diet etc\nHeterogeneous (Heart rate, Sleep,\nCalories burned, Weight, Physical\n\
    activity time, Water, Exercise etc)\nSVM [169]\nClassification - Different emotions\n\
    Heterogeneous (Speech and Image)\nRNN(LSTM)\n[181]\nHeterogeneous (ECG, BVP, GSR,\n\
    SKT, EMG)\nCNN\n+\nSAE [172]\nClassification - Abnormal/normal\nheart sounds\n\
    Homogeneous (EEG)\nRFC[168]\nClassification - Epileptic Seizure de-\ntection\n\
    Homogeneous (Heart sounds)\nSVM [171]\nClassification - ECG arrhythmias\nHomogeneous\
    \ (ECG)\nDisease diagnosis\nDT [173]\nCloud\nClassification - Different heart\
    \ dis-\neases\nHeterogeneous (Heart health infor-\nmation, Patient records and\
    \ other\nhealth sensors)\nK-Means\n[174]\nClassification - Kidney, Heart and\n\
    Liver disease\nHeterogeneous (Heart and Kidney\nhealth data)\nRFC[175]\nClassification\
    \ - Detection of various\ndiseases\nHeterogeneous\n(Diabetes,\nHeart,\nLiver,\
    \ Dermatology etc data)\nDNN [177]\nFog\nClassification - Presence of heart\n\
    disease or not\nHeterogeneous\n(Blood\noxygen,\nHeart rate, Respiration rate,\
    \ EEG,\nECG, EMG, Blood Pressure, Glu-\ncose and Activity data)\nParkinson detection/\n\
    RFC[167]\nCloud\nClassification - Parkinson detec-\ntion/stroke has happened/seizure\n\
    detection\nHeterogeneous\n(Blood\npressure,\nSugar, Pulse rate)\nSeizure monitoring\n\
    SVM [176]\nHomogeneous (Speech)\nK-NN\n[178]\nFog\nNB [179]\nEdge\nHomogeneous\
    \ (EEG)\n39\n3.5\nSmart Homes\nAmbient assisted living is a huge component of\
    \ Smart Homes.\nThis is especially\nneeded for the elderly and is typically achieved\
    \ by the use of ambient sensors, Wi-Fi\nand radio frequency systems in smart homes.\
    \ In this work, we include all monitoring\nmethods that depend on sensors placed\
    \ in the home/within the smart home domain.\nIn [182], Pirzada et al. use a network\
    \ of reed switches connected to the cloud to\nmonitor the activities of elderly\
    \ people as a clustering problem. They use the K-\nNN algorithm to determine anomalies\
    \ in the daily activities which can then be used\nto send medical or other help\
    \ requests to assist people. A similar setup for activity\nrecognition for ambient\
    \ assisted living has been presented in [183, 184, 185] where they\nuse data from\
    \ a number of different sensors including motion, presence, water float,\ntemperature\
    \ etc to determine various activities being performed in a home. In [186],\na\
    \ cloud based assisted living system for the deaf has been developed that performs\n\
    haptic conversions for sounds detected in a home. An array of sensors are used\
    \ to\nmonitor environmental sound and the authors use RNNs for detecting the sound\n\
    event before its passed on to the haptic vibration producer. Another task within\n\
    in monitoring is localization of people, this part of smart homes is also applicable\n\
    to smart infrastructure in that such systems are used in smart buildings as well.\n\
    Applications of localization include security, i.e., detecting unauthorized presence\n\
    and people monitoring in general (for, e.g., locating elderly people in homes)\
    \ etc.\nThe authors in [187] perform localization using a grid of Wi-Fi units\
    \ that measure\nsignal strength to determine peoples locations indoors for buildings.\
    \ They formulate\nthis both as a classification problem as well as a regression\
    \ problem. The classification\nproblem being formulated as coded locations (for,\
    \ e.g., a given room no) while the\nregression case estimating the location of\
    \ the user in a coordinate grid. Their system is\ncloud based and they use a deep\
    \ neural network to perform this task and have found\nsuitably good results. Occupancy\
    \ detection has been performed by the authors of\n[188] making use of various\
    \ ambient measurements (temperature, humidity, pressure\netc.) and passing them\
    \ to a cloud before using a deep neural network to classify\nbetween the various\
    \ number of people present in an indoor environment. In [189],\nZimmermann et\
    \ al. also make use of ambient sensors for the occupancy problem and\nuse a na¨ıve\
    \ bayes learner to determine both the presence of occupants as well as their\n\
    number.\nHome automation is another application that the IoT finds application\n\
    within the Smart Home domain. The integration of AI has helped develop smart\n\
    home automation systems that aim to reduce energy consumption in homes as well\n\
    as maintain user privacy, security. Chowdhry et al. [190] use a combination of\
    \ visual\ndata and motion sensing to perform home automation for security using\
    \ a SVM.\nAn interesting use of AI in home automation is presented in [191] who\
    \ develop a\ncloud based home automation system, they take measurements from various\
    \ ambient\nsensors and control appliances and use a Na¨ıve Bayes classifier to\
    \ determine which\ntechnician to call whenever sensor measurements appear aberrated.\
    \ The problem of\nintelligent consumption of energy has been considered by [192]\
    \ who develop an energy\ndisaggregation system on the appliance level in smart\
    \ homes using stacked denoising\nautoencoders. They achieve this using power data\
    \ for individual appliances as well\n40\nas the total power consumed in the home\
    \ and send it to a local cloud. Data is then\ndisaggregated for various appliances\
    \ to provide feedback to the user.\nMore work\nproviding energy intelligence to\
    \ consumers has been performed by [193, 194, 195].\nKonstantakopoulos et al. [195]\
    \ pose this as a regression problem, they propose a\ncloud-based system utilizing\
    \ both ambient sensor data (lighting, temperature etc)\nand appliance power data\
    \ to forecast resource usage for consumers using a RNN.\nThey show a reduction\
    \ in energy consumption for their users using this information.\nEventhough applications\
    \ covered in smart homes have been cloud based systems,\nthere have been recent\
    \ proposals for frameworks that combine edge and cloud pro-\ncessing as in [196]\
    \ who discuss a hierarchical control system for smart homes through\na edge microgrid\
    \ and a cloud power grid. Due to the nature of smart homes in that\nthe sensing\
    \ scheme is present within a finite space (within the home), edge and fog\ncomputing\
    \ based systems are expected to be increasingly incorporated smart home\napplications.\
    \ A summary of the use of IoT based AI in Smart Homes is presented in\nTable 11.\n\
    3.6\nSmart Industry\nOne of the major applications of AI in the IoT powered smart\
    \ industry is towards\nfault detection in products and anomaly detection in industrial\
    \ processes. This has\nseen the use of both Machine Learning (SVM [197, 198],RFC[199,\
    \ 200]) as well as\nDeep Learning (DNN [201, 202, 203], CNN [204]) methods using\
    \ a cloud computing\nstructure to perform anomaly detection/product inspection\
    \ and monitoring using a\nvariety of heterogeneous and homogenous data sources\
    \ such as inertial sensors for ma-\nchines, images for products and processes\
    \ and other process specific variables. Other\napproaches suggested in [205, 206]\
    \ propose a fog computing method along with edge\ncomputing systems suggested\
    \ in [207, 208]. An edge computing system for anomaly\ndetection is presented\
    \ in [209] where edge devices collaboratively train a deep anomaly\ndetection\
    \ model. Production management is another application that has found usage\nof\
    \ AI in IoT based smart Industry. For, e.g., the authors in [210, 211, 212, 213,\
    \ 214]\nuse cloud based data driven systems along with machine and deep learning\
    \ algorithms\nto help with task dispatching, performance analysis as well as worker\
    \ activity recog-\nnition utilizing a variety of sensing modalities. The work\
    \ of [213, 214] are especially\ninteresting as they aim is to not only perform\
    \ production management but also pro-\npose data for various health related analysis\
    \ to create a safer working environment\non the factory floor. A fog system for\
    \ production management has been presented in\n[215] who use activity data to\
    \ determine resource allocation locations to contribute\nto management of a production\
    \ operation. Furthermore, product inspection, which\nis a common application of\
    \ instrumentation systems in a factory, has been performed\nby [216, 217] who\
    \ utilize images and sensor data in a cloud based system to monitor\nproduct quality.\n\
    A factory has a multitude of machines and equipment working round the clock\n\
    manufacturing goods. Maintenance is an important aspect of this operation where\n\
    regular checks are performed on the equipment to ensure that no breakdown occurs\n\
    during the production process, which might result in monetary loss or loss of\
    \ life.\n41\nTable 11. AI use for Smart Homes\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nAmbient Assisted liv-\ning (Activity recogni-\n\
    tion/Fall detection)\nK-NN [182]\nCloud\nClustering - Detect abnor-\nmal clusters\n\
    Homogeneous (Reed switches)\nRNN (LSTM)\n[185]\nClassification - Different ac-\n\
    tivities\nHeterogeneous\n(Human\nmotion,\nWater float, Reed switches, Tem-\nperature,\n\
    Pressure,\nLuminance,\nGas and other environmental sen-\nsors in a home)\nRNN\
    \ (LSTM)\n[183]\nSAE [184]\nRNN\n(GRU)\n[186]\nClassification\n-\nDifferent\n\
    sounds\nHomogeneous\n(Sound\nrecordings\nfrom rooms in a house)\nAmbient\nAssisted\n\
    living\n(Localization\nand Occupancy de-\ntection)\nDNN [187]\nCloud\nClassification\n\
    and\nRegres-\nsion - Localization estima-\ntion\nHomogeneous\n(Wi-Fi\nsignal\n\
    strength and identifiers)\nNB [189]\nClassification - Presence of\npeople or not,\
    \ Regression-\nNumber of occupants\nHeterogeneous\n(Volatile\norganic\ncompounds,\n\
    CO,\nTemperature,\nHumidity)\nDNN [188]\nClassification\n-\nDifferent\nnumber\
    \ of people present\nHeterogeneous (Temperature, Lu-\nminance, Humidity, Pressure,\
    \ CO2,\nMotion, Magnetometer, Gyroscope,\nAccelerometer, Sound, Door and\nwindow\
    \ open/close status)\nEnergy management\n(Automation, Power\nconsumption\nprofil-\n\
    ing)\nSVM [190]\nCloud\nClassification - Intrusion de-\ntection\nHeterogeneous\
    \ (Images + Sound)\nSAE [192]\nRegression - Disaggregation\nof appliance power\
    \ data\nHomogeneous\n(Appliance\npower\nconsumption)\nRNN\n(LSTM)[195]\nRegression\
    \ – Forecasting oc-\ncupant resource usage\nHeterogeneous\n(Appliance\npower\n\
    consumption,\nLuminance,\nVibra-\ntion, Temperature, Humidity, Ac-\ncelerometer\
    \ [fan])\nSAE\nfor\ndisaggre-\ngation\nand\nRNN(LSTM)\nfor forecasting\n[194]\n\
    Classification - Energy dis-\naggregation,\nRegression\n-\nLoad forecasting\n\
    Heterogeneous\n(Temperature,\nLuminance,\nHumidity,\nProximity\nswitches, Ultraviolet\
    \ light sensors,\nPower consumption)\nNB [193]\nClassification\n-\nDetermine\n\
    appliances that are on\nHomogeneous\n(Appliance\npower\nconsumption)\nHowever,\
    \ with the data gathered by various sensors on these machines, it is often\nmore\
    \ beneficial to take an active approach rather than a passive one by using this\n\
    data for predictive maintenance purposes. Predictive maintenance utilizes data\
    \ from\nthe daily operation of machines in an industry to optimize the manufacturing\
    \ op-\neration [218] and is one of the main uses for AI in the industry. In [219,\
    \ 220], the\nauthors suggest a predictive maintenance scheme using SVMs utilizing\
    \ data from ac-\ncelerometers measuring vibration in a crane motor and data from\
    \ various sources in\na semiconductor manufacturing process, respectively, both\
    \ work in a cloud environ-\nment as evidenced from the architecture. Prediction\
    \ of failure can also be a regression\noperation, as was demonstrated by [221]\
    \ who use RNNs to predict future values of\na physical parameters of a pump using\
    \ a number of heterogeneous sensors used to\nmonitor it. As with the other two\
    \ systems, this system also had a cloud architecture.\nThe authors in [170] also\
    \ present a regression based health prognosis system for the\nindustry using a\
    \ CNN on machine data (Images, stress, temperature, vibration, po-\n42\nsition\
    \ and electromagnetic signal measurements). The use of IoT based AI in Smart\n\
    Industry has been presented in Table 12.\n3.7\nSmart Infrastructure\nAn application\
    \ within smart infrastructures also involves monitoring of civil structures\n\
    for structural health. The authors in [222] take a clustering approach to perform\n\
    health monitoring of a bridge using vibration data in a cloud setting.\nThey use\n\
    clustering to determine clusters of abnormal behavior in accelerometer measurements\n\
    from a bridge. In [223, 224, 225], accelerometer signals have been used where\
    \ as [226]\nhave used piezo electric transducers for performing structural health\
    \ monitoring of\nbridges formulated as a classification problem between different\
    \ damaged states of\na bridge. The prime sensing modality for monitoring has been\
    \ measuring vibration\nusing accelerometers, however, other sensors such as fiber\
    \ optic gratings can also be\nused to measure stress.\nThe second avenue for AI\
    \ applications in IoT for smart infrastructure is the use\nof IoT devices for\
    \ building environment control and energy management as well com-\nfort aware\
    \ control. This involves the prediction of building energy usage based on\nenvironmental\
    \ data (such as temperature, humidity) and electrical power data. The\nauthors\
    \ in [227] and [228] use electric power data and heat flow information in a\n\
    building to predict the energy requirements in the future so as to better manage\
    \ en-\nergy consumption. Ambience control of a museum has been performed in [229]\
    \ where\nthe authors use deep learning algorithms to predict the CO2 and humidity\
    \ levels\nfor the care of exhibits. Comfort aware energy management has been performed\
    \ in\n[230] where the authors use a CNN to regulate thermal comfort in a building\
    \ using\nvarious physical quantities. It can be noted that all of these mentioned\
    \ systems have\nbeen deployed in the cloud, this is due to the nature of the application.\
    \ However,\nthere have been efforts for developing fog/edge systems for smart\
    \ infrastructure. The\nauthors in [231] describe a framework for deploying edge\
    \ and fog computing services\nin smart buildings and demonstrate their systems\
    \ effectiveness for the case of energy\nmanagement. Table 13 summarizes the use\
    \ of IoT based AI in Smart Infrastructure.\n3.8\nSmart Transport\nMajor smart\
    \ transportation applications involve smart parking and transportation\nmanagement.\
    \ Smart parking aims to solve the problem of helping users finding park-\ning\
    \ spots in order to save time as well as reduce gas emissions and is therefore\
    \ a much-\nresearched topic for AI deployment towards smart transportation. Solutions\
    \ to this\nproblem have been formulated both as a regression problem as well as\
    \ a classification\none, both utilizing imaging and/or other occupancy sensing\
    \ modalities. Regression\nsolutions [232, 233, 234] are typically used to predict\
    \ a parking lots occupancy levels\nin the future whereas classification systems\
    \ [235, 236, 237] involve guiding drivers ac-\ncording to the shortest distance\
    \ as well as used for user localization purposes within\nsuch lots. In addition\
    \ to cloud based approaches, edge computing systems for smart\nparking have also\
    \ been devised as suggested in [238, 239] who deploy CNNs on edge\n43\nTable 12.\
    \ AI use for Smart Industry\nApplication\nNetwork\nSystem\nAr-\nchitecture\nTask\n\
    Data type\nFault\nand\nanomaly\ndetection\nDNN [203]\nCloud\nClassification -\
    \ Different classes of abnor-\nmality labels\nHeterogeneous (Mul-\ntiple sensor\
    \ and con-\ntrols [button states\netc] information)\nDNN [202]\nClassification\
    \ - Different damage stages of\na 3D printer\nHeterogeneous\n(Accelerometer, Gy-\n\
    roscope)\nRFC[199]\nClassification - Normal and abnormal op-\neration in wind\
    \ turbines\nHomogeneous\n(Ac-\ncelerometer)\nSVM [197]\nClassification\n-\nDifferent\n\
    wind\nturbine\nhealth conditions\nSVM [198]\nClassification - Normal and mixed\
    \ cement\nHomogeneous\n(Im-\nages)\nRFC[200]\nClassification - Different fault\
    \ types in steel\nmanufacturing\nHeterogeneous\n(Various\nsensors,\ndimensional\n\
    mea-\nsurements)\nDNN [201]\nClassification - Normal and arcing\nHomogeneous\n\
    (Cur-\nrent)\nCNN [204]\nClassification - Defected product or not\nHomogeneous\n\
    (Im-\nages)\nCNN [205]\nFog\nClassification - Different types of defects\nHomogeneous\n\
    (Im-\nages)\nCNN [206]\nSVM [207]\nEdge\nClassification - Abnormal and normal\
    \ pres-\nsure\nHomogeneous\n(Wa-\nter pressure)\nCNN\n+\nLSTM [209]\nClassification\
    \ - Abnormal and normal time\npower patterns\nHomogeneous (Elec-\ntrical power)\n\
    RNN (LSTM)\n[208]\nClassification - Faulty and normal state of\na machine\nHomogeneous\n\
    (Ac-\ncelerometer)\nProduction manage-\nment\nSVM [210]\nCloud\nRegression - Prediction\
    \ of the slotted coef-\nficient in a hydraulic press\nHeterogeneous (Var-\nious\n\
    measurements\nfrom\na\nhydraulic\npress)\nConvLSTM +\nSAE [211]\nRegression -\
    \ Forecasting machine speed to\nmake production more efficient\nHomogeneous (Speed\n\
    of machine [rotary])\nDNN [214]\nRegression - Bottle neck prediction in time\n\
    Heterogeneous\n(RFID,\nmovement\nsensors)\nCNN [212]\nClassification - Different\
    \ activities in an as-\nsembling factory\nHeterogeneous\n(IMU, EMG)\nSVM [213]\n\
    Classification - Different activities in a\nmeat processing plant evaluate worker\
    \ per-\nformance\nHeterogeneous\n(Accelerometer, Gy-\nroscope)\nRFC[217]\nClassification\
    \ - Bad or good product qual-\nity\nHeterogeneous (Var-\nious sensors from a\n\
    production floor in a\nfactory)\nCNN [216]\nClassification - Prediction of temperature,\n\
    Carbon content in steel\nHomogeneous (Spec-\ntrogram Images)\nRFC[215]\nFog\n\
    Classification - Determine Room ID, used\nfor system disruption\nHeterogeneous\n\
    (Ac-\ntivity\ndata,\nLoca-\ntion)\nPredictive\nmainte-\nnance\nCNN [170]\nCloud\n\
    Regression - Predict health index for ma-\nchines\nHeterogeneous\n(Im-\nages,\n\
    Temperature,\nVibration,\nPosition,\nElectromagnetic\nsignal measurements,\nStrain\
    \ gauge)\nSVM [219]\nClassification - Abnormal or normal vibra-\ntion data (from\
    \ electric motor in a crane)\nHomogeneous\n(Ac-\ncelerometer)\nRFC+\nSVM\n[220]\n\
    Classification - Failure prediction\nHeterogeneous (Mul-\ntiple\nsensors\nfrom\n\
    SECOM dataset)\nRNN (LSTM)\n[221]\nRegression - Predicting data from sensors\n\
    Heterogeneous\n(Different\nsensors\n[Pressure,\nTempera-\nture, Vibration etc])\n\
    44\nTable 13. AI use for Smart Infrastructure\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nStructural\nhealth\nmonitoring\nK-Means [222]\n\
    Cloud\nClustering – Look for abnor-\nmality of building state\nHomogeneous\n(Ac-\n\
    celerometers)\nK-NN [226]\nClassification\n–\nDifferent\ndamage states\nHomogeneous\
    \ (Piezo\nelectric sensors)\nDNN [223]\nHomogeneous\n(Ac-\ncelerometer)\nCNN +\
    \ RNN (LSTM) [225]\nSVM [224]\nEnergy and Environ-\nment management\nSVM [227]\n\
    Cloud\nRegression\n-\nForecasting\nelectrical power usage\nHeterogeneous\n(Power\
    \ and environ-\nmental data)\nSAE [228]\nRegression -Energy predic-\ntions for\
    \ buildings\nHomogeneous (Heat\nflow data in build-\nings)\nRNN (GRU, LSTM) [229]\n\
    Regression -Prediction of en-\nvironmental variables (CO2,\nHumidity etc)\nHeterogeneous\
    \ (envi-\nronmental data such\nas\nCO2,\nHumidity,\nAir velocity)\nCNN [230]\n\
    Regression - Comfort level\ndevices for occupancy detection and user localization,\
    \ respectively. Another applica-\ntion of AI IoT for smart transportation involves\
    \ determining traffic flow as well as\nprediction of traffic flow for traffic\
    \ light control and other management tasks such as\naccident detection. In this\
    \ regard, video cameras are popular for detection of vehicle\ndensity on roads\
    \ for traffic congestion determination. However, with most cars having\na GPS\
    \ device and the commonality of cellphones with every driver, many approaches\n\
    use the data from the GPS along with weather and generic traffic flow information\n\
    to determine traffic prediction. The nature of traffic flow prediction using sensing\n\
    modalities such as GPS require systems to be operated as cloud-based systems as\n\
    is the case in [240, 241, 242, 243]. Of these, Wangyang et al. [242] and Xiao\
    \ et al.\n[243] use deep learning based sequential modeling approaches to predict\
    \ traffic flow\nahead of time where as Aung & Naing [240] and Yunxiang Liu & Wu\
    \ [241] solve this\nthrough a classification formulation. A traffic management\
    \ system for public buses\nhas been proposed in [33, 244] where GPS data is used\
    \ to predict bus arrival times\nfor public transportation systems. Accident detection\
    \ has been performed using car\nposition and velocity information in a Vehicular\
    \ Adhoc NETworks (VANET) envi-\nronment by the authors of [245]. They do this\
    \ through a cloud based system that\ncan use this information to predict whether\
    \ an accident has occurred or not. Apart\nfrom typical sensing modalities, with\
    \ smart phones and user participation in social\nmedia, smart transportation systems\
    \ are expected to increasingly include more sens-\ning modalities [246] fused\
    \ together for use in decision making for traffic management\npurposes. Mukherji\
    \ et al. [247] use Wi-Fi signals to determine commuter traffic a\nsubway station.\
    \ They do this by using the measured signal strength of the Wi-Fi\nsignals along\
    \ with a Random Forest classifier in a cloud-based setting. Their system\nis able\
    \ to determine if a person is on the train or on the platform which can be used\n\
    to help with planning train times and routes. A summary of IoT based AI for Smart\n\
    Transport has been given in Table 14.\n45\nTable 14. AI use for Smart Transport\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nSmart\nParking\n\
    (Parking\noccupancy\ndetection/Rout-\ning/Location predic-\ntion)\nK-NN [237]\n\
    Cloud\nClassification - Presence of a\nvehicle\nHomogeneous\n(Im-\nages)\nK-Means\
    \ [232]\nRegression - Future occu-\npancy prediction\nHeterogeneous\n(Oc-\ncupancy,\n\
    Location,\nTime)\nRNN (LSTM) [234]\nLR [233]\nHomogeneous (RFID\ndata from cars)\n\
    DNN+ CNN [235]\nClassification - Different po-\nsitions based on beacons in-\n\
    stalled\nHomogeneous (Radio\nfrequency\nsignal\nstrength)\nDT [236]\nClassification\
    \ - Recommen-\ndation of parking lot based\non distance\nHeterogeneous\n(Parking\n\
    informa-\ntion, Time)\nCNN [238]\nEdge\nClassification - Detection of\nempty parking\
    \ space\nHeterogeneous\n(LI-\nDAR, Images)\nCNN [239]\nClassification\n–\nDifferent\n\
    user locations localization\nHomogeneous (Blue-\ntooth received signal\nstrength)\n\
    Transport\nman-\nagement\n(Public\ntransport\nmanage-\nment)\nK-Means [33]\nCloud\n\
    Regression – Transport de-\nlay prediction\nHeterogeneous (GPS,\nTicket\ninformation,\n\
    Time,\nArrival,\nDe-\nparture\ninformation\netc )\nK-Means [244]\nRegression –\
    \ Arrival time\nprediction\nRFC[247]\nClassification\n–\nLocaliza-\ntion, as on\
    \ platform or train\nHomogeneous (Wi-Fi\nsignal parameters)\nTransport\nmanage-\n\
    ment (Traffic flow)\nNB [240]\nCloud\nClassification\n-\nDifferent\ntraffic states\n\
    Homogeneous\n(GPS\ndata, current and his-\ntorical)\nRFC[241]\nHeterogeneous\n\
    (Weather,\nRoad\ndata)\nRNN (LSTM) [243]\nRegression - Traffic flow pre-\ndiction\n\
    Homogeneous (Traf-\nfic flow data[vehicle\nspeed count etc])\nRNN (LSTM) [248]\n\
    SAE + RNN (LSTM) [242]\nTransport\nman-\nagement\n(Traffic\nAccident detection)\n\
    RFC [245]\nClassification - Accident or\nnot\nHomogeneous\n(Ve-\nlocity, Position)\n\
    4\nConclusion\nThis chapter provided a coverage of the usage of AI in terms of\
    \ machine and deep\nlearning for applications within smart cities. For each of\
    \ the applications discussed\nfor the various components, the type of deployment\
    \ based on the technologies and\narchitectures discussed in the previous chapter\
    \ were identified. Figure 7 provides a\nsummary of the AI discussion in this section.\
    \ Moreover, a tabular version is provided\nin Table 15 for this section. It highlights\
    \ the applications in which each AI domain\nfinds use in for smart city components.\n\
    46\nAI for IoT Smart \nCities\nMachine Learning\nDeep Learning\nSupport \nVector\
    \ \nMachines \nDecision \nTrees\nK-Nearest \nNeighbor\nRandom \nForests\nLogistic\
    \ \nRegression\nNaïve Bayes\nK-Means\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Health\nSmart Industry\nSmart Transport\n\
    Smart Agriculture\nSmart Transport\nSmart Agriculture\nSmart Energy\nSmart Health\n\
    Smart Infrastructure\nSmart Transport\nRecurrent Neural \nNetworks (RNN, \nLSTM,\
    \ GRU)\nStacked Auto \nEncoders\nConvolutional \nNeural \nNetworks\nDeep Neural\
    \ \nNetworks\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\nSmart Energy\n\
    Smart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\nSmart Industry\n\
    Smart Infrastructure\nSmart Transport\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Health\nSmart Homes\nSmart Transport\nSmart\
    \ Agriculture\nSmart Energy\nSmart Health\nSmart Transport\nFigure 7. AI for IoT\
    \ Smart Cities.\n47\nTable 15. AI applications for IoT Smart Cities\nSmart\nCity\n\
    Component\nMachine Learning\nDeep Learning\nObservations\nSmart Agricul-\nture\n\
    - Crop Monitoring /Plant care\n(Irrigation)\n- Crop Monitoring /Plant care\n(Irrigation)\n\
    - Crop Monitoring /Plant care\n(Monitoring and disease detec-\ntion)\n- Crop Monitoring\
    \ /Plant care\n(Monitoring and disease detec-\ntion)\n- Data driven crop care\
    \ and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven crop\
    \ care and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven\
    \ crop care and de-\ncision making (Crop recommen-\ndation)\nSmart\nCity\nServices\n\
    - Air quality\n- Air quality\n- Water quality monitoring\n- Water quality monitoring\n\
    - Waste management\n- Waste management\n- Sewer Overflow Monitoring\n- Urban noise\
    \ monitoring\nSmart Energy\n-\nEnergy/Load\nconsumption\nforecasting\n-\nEnergy/Load\n\
    consumption\nforecasting\n- Smart Grid line event classifi-\ncation\n- Electricity\
    \ theft detection\nSmart Health\n- Human activity recognition/-\nFall detection\n\
    - Human activity recognition/-\nFall detection\n- Patient Health Monitoring\n\
    - Patient Health Monitoring\n- Disease diagnosis\n- Disease diagnosis\n- Parkinson\
    \ detection/Seizure\nmonitoring\n- Parkinson detection/Seizure\nmonitoring\nSmart\
    \ Homes\n- Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n\
    - Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n- Ambient\
    \ Assisted living (Lo-\ncalization and Occupancy de-\ntection)\n- Ambient Assisted\
    \ living (Lo-\ncalization and Occupancy de-\ntection)\n-\nEnergy\nmanagement\n\
    (Au-\ntomation, Power consumption\nprofiling)\n-\nEnergy\nmanagement\n(Au-\ntomation,\
    \ Power consumption\nprofiling)\nSmart\nIndus-\ntry\n- Fault and anomaly detection\n\
    - Fault and anomaly detection\n- Production management\n- Production management\n\
    Smart\nInfras-\ntructure\n- Structural health monitoring\n- Structural health\
    \ monitoring\n- Energy and Environment man-\nagement\n- Energy and Environment\
    \ man-\nagement\nSmart\nTrans-\nport\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Transport management (Pub-\nlic transport management)\n- Transport\
    \ management (Traf-\nfic flow)\n- Transport management (Traf-\nfic flow)\n- Transport\
    \ management (Traf-\nfic Accident detection)\nFor\napplications\nsuch\nas\nSmart\n\
    Agriculture,\nSmart\nEnergy,\nSmart\nHealth,\nSmart Industry and Smart\nTransport,\n\
    Deep\nLearn-\ning\nas\nwell\nas\nMachine\nLearning\nalgorithms\nhave\nbeen deployed\
    \ in Edge/Fog\nconfigurations.\nThe most popular machine\nlearning algorithms\
    \ were the\nSVM and RFC.\nThe\nmost\npopular\nDeep\nLearning\nalgorithms\nwere\n\
    RNNs and CNNs.\n48\nCHAPTER IV\nOPTIMIZATION IN IOT SMART CITIES\n1\nIntroduction\n\
    This chapter presents a coverage of combinatorial optimization in IoT based smart\n\
    cities by deliberating on the most popular applications of optimization algorithms\n\
    and providing an insight to how those problems are formulated and worked upon.\
    \ It\nprovides a mapped overview of the optimization landscape in the smart city\
    \ domain\nwhile considering the IoT. Through this mapping, the common optimization\
    \ problems\nacross the various components of the IoT enabled smart city have been\
    \ identified. For\neach problem discussed, the objective function used, the nature\
    \ of the objective as\nwell as the constraints considered have also been elaborated\
    \ on.\n2\nOptimization and Heuristics in IoT Smart Cities\nAs has been observed\
    \ by [249], combinatorial optimization problems in the real-world\nare known to\
    \ be difficult to formulate and generally are hard to solve. Moreover,\nchoosing\
    \ the right algorithm is also a tedious task as each comes with a different\n\
    set of characterizations. This is very applicable to the IoT bases smart city\
    \ where\napplications in each component caters to a different environment and\
    \ aspect of the\ncity’s operation and therefore requires intricate design of the\
    \ problem. This chapter\ntakes guidance from the work of [249]. They note that\
    \ the most popular algorithms for\nuse in combinatorial optimization problems\
    \ are the Ant Colony Optimization (ACO),\nGenetic Algorithm (GA), Particle Swarm\
    \ Optimization (PSO), Differential Evolution\n(DE) and Artificial Bee Colony (ABC).\
    \ Moreover, following from their discussion, six\nfactors are considered for each\
    \ application identified. These are:\n1. The type of application: This refers\
    \ to the problem being optimized within the\nsmart city domain.\n2. Data Setup:\
    \ For each application, we mention the data setup used. While doing\nso, we aim\
    \ to capture the various ways in which researchers have sourced data\nfor their\
    \ proposed method.\n3. Single-Parallel problems: Another thing to note in smart\
    \ city optimization\nproblems is whether a problem has been considered as a single\
    \ problem or\nmultiple sub-problems/parallel.\n4. Objective direction, function\
    \ and number of objectives: Maximization or mini-\nmization, lowest fitness function\
    \ value desirable or higher fitness function value\n49\nis desirable.\nSince we\
    \ list the objectives, we also covere the number of ob-\njectives inherently.\
    \ Single objective, where a single fitness is optimized for its\nbest value or\
    \ multi-objective where multiple objective functions need to be con-\nsidered\
    \ at the same time. The latter is a complex process as some objectives\nmay have\
    \ conflicts and thus requires the need to perform trade-offs with what’s\nacceptable.\n\
    5. Constraints: Constraints are a set of restrictions or prerequisites that may\n\
    sometimes be necessary to determine if a solution is considered valid or not.\n\
    Soft constraints are desirable but not necessary whereas hard constraints are\n\
    mandatory to be met. Constraints are put on the fitness function according to\n\
    application being considered. Covering this aspect is particularly important as\n\
    constraints are determined by the application being worked on.\n3\nMeheuristic\
    \ Algorithms\nMetaheuristic algorithms are widely used to solve combinatorial\
    \ optimziation prob-\nlems in the real-world [249]. The aim of these algorithms\
    \ is to determine the minima\nor maxima of an objective function which translates\
    \ an optimization objective in to\none or more mathematical equations. Five algorithms\
    \ have been considered in this\nchapter, these are the Ant Colony Algorithm, Genetic\
    \ Algorithm, Particle Swarm Op-\ntimization Algorithm, Differential Evolution\
    \ and Artificial Bee Colony. As mentioned\nearlier, these have been chosen as\
    \ these were the most commonly used optimzation\nalgorithms identified by [249].\
    \ In this section, we provide a brief intuitive description\nfor each of them.\n\
    3.1\nAnt Colony Optimization\nAnt colony optimization is derived from the behavior\
    \ of ants searching for food\n[250]. It was observed that during this process,\
    \ each ant deposits a chemical called\npheromone on the path which it takes towards\
    \ the food. The more the ants take a\ngiven path, the more the pheromone is deposited\
    \ on it. Subsequent ants that want\nto go towards the food use the amount of pheromone\
    \ on a given path or sub-path\nto decide which path to take so as to determine\
    \ the optimal route to the food. In\nthe artificial ant colony optimization algorithm,\
    \ the points on the path that form the\nsub-paths are encoded on a graph where\
    \ each ant can only visit a given vertex (travel\non the same sub-path) once.\
    \ Each iteration starts with a number of artificial ants,\nan ant would choose\
    \ the next vertex to visit based on the level of pheromone on the\npossible sub-paths\
    \ available to it as well as whether that path has been used before.\nAt the end\
    \ of each iteration, the pheromone levels are updated so as to prioritize the\n\
    use of the most used path for ants in the next iteration.\n3.2\nGenetic Algorithm\n\
    A genetic algorithm [251] is based on evolutionary science. The idea behind the\
    \ ge-\nnetic algorithm is that starting from a given population set of organisms,\
    \ subsequent\n50\nreproduction will result in fitter organisms being produced\
    \ given that the organisms\nchosen for reproduction have some level of fitness.\
    \ To solve an optimization prob-\nlem, a genetic algorithm begins with a given\
    \ population size of strings also called\na chromosome. Each ‘chromosome’ consists\
    \ of a ‘gene’ which may represent points\nin the population. The sequence in which\
    \ the genes are present would represent a\nsolution to the problem. For e.g. for\
    \ a route scheduling problem, this may be the\ncoordinates of the stops. The ‘goodness’\
    \ of a chromosome is determined by a fitness\nfunction that quantifies how appropriate\
    \ a given chromosome is as a solution for the\nproblem. Choosing the right fitness\
    \ function is an important consideration in genetic\nalgorithms as it needs to\
    \ gauge the kind of optimization that is to be performed.\nThe optimization process\
    \ starts with an initial population of a given size. Once a fit-\nness function\
    \ has been defined, in each iteration, two or more chromosomes (parents)\nare\
    \ taken at random from the population and one or more offsprings are generated.\n\
    The random selection takes the selected parents fitness function value in to account,\n\
    however, its necessary that not all parents chosen are the fittest of the population\
    \ as\notherwise, diversity will be compromised, and the algorithm may get stuck\
    \ in a local\nminimum. The method by which these offspring are generated is called\
    \ the Crossover\nfunction and the number of parents mated to form offsprings from\
    \ them depends\non the crossover rate. The Crossover function defines the way\
    \ the genes within the\nchromosomes are exchanged. Usually, the crossover rate\
    \ has a high value. Moreover,\ndepending on some mutation rate, a given fraction\
    \ of all offsprings are mutated. Mu-\ntation depends on the mutation function\
    \ used and involves members of the offspring\nbeing swapped in some manner. When\
    \ one iteration of the offspring creation from\nthe parents in the entire population\
    \ is completed, the offsprings replace members of\nthe original population (typically\
    \ the weakest) and one generation of the GA is said\nto be completed. In order\
    \ to converge to a sufficiently good result, GA’s need to run\nfor many generations.\n\
    3.3\nParticle Swarm Optimization\nParticle Swarm Optimization is modeled on the\
    \ social behavior of animals rather than\nthe evolutionary biological behavior\
    \ on which Genetic Algorithms are based. PSO\n[252] is particularly based on the\
    \ behavior of a flock of birds searching for food. Each\nbird in the flock searches\
    \ for food and can communicate with other birds in the flock\nas soon as it finds\
    \ food or a good direction for it. Therefore, each bird has two food\n‘directions’\
    \ that it needs to consider, first is on an individual level which is called\n\
    the personal best and the second is on the flock level which is the global best.\
    \ Using\nthese two values the bird will proceed towards that path and will inform\
    \ other birds\nin the flock too. The idea here is that after enough time and with\
    \ all the individuals\nworking together, the swarm will find the place with the\
    \ highest concentration of\nfood. In terms of using PSO for optimization tasks,\
    \ individual birds are equivalent\nto a solution as in a GA and each is considered\
    \ as a point or a particle, collectively\nthey make up the swarm. This swarm population\
    \ may be initialized randomly or\nbased on some domain knowledge about the problem.\
    \ The highest concentration of\nfood represents the optimal solution for the whole\
    \ swarm where as a good direction\n51\nrepresents the local optimal solution for\
    \ each case. The aim here, like birds in a flock\nis to determine the global optimal\
    \ solution using information from each individual\nparticle. Each particle has\
    \ three aspects to it, its position, its velocity and a value of\nits current\
    \ position’s ’goodness’. This ’goodness’ as in the GA is defined by a fitness\n\
    function. Like birds, each particle has a personal best fitness value and is also\
    \ aware\nof the global best fitness value. For any particle, the new direction\
    \ of movement is\ndecided by a combination of the personal best and the global\
    \ best as well as the\nparticle’s intention to maintain its current movement.\
    \ Furthermore, several different\ntopologies can be utilized, and a neighborhood\
    \ can also be set for each particle to\nconvey positions when limiting the global\
    \ best parameter to the local best scheme\nrather than the whole swarm. The algorithm\
    \ may be stopped till the best solution is\nreached or no more improvement is\
    \ observed.\n3.4\nDifferential Evolution\nDifferential evolution [253] is a stochastic\
    \ evolutionary algorithm which is used for\noptimization problems for continuous\
    \ functions. The DE algorithm does not expect\ngradient information and thus it\
    \ doesn’t need to be differentiable. Like other evolu-\ntionary algorithms, a\
    \ solution is searched for in the design space by maintaining a\nset of individual\
    \ candidate solutions. In each iteration, the solutions with the best\nfitness\
    \ are combined together and retained for the next iteration. The aim is to im-\n\
    prove upon the fitness value and this process is repeated until a pre-decided\
    \ condition\nfor termination of this process is satisfied. Differential Evolution\
    \ is very similar to\nGenetic Algorithms in that both are evolutionary in nature,\
    \ however, the difference\nis that the DE uses real numbers in the chromosome\
    \ and also that the mutation oper-\nation consists of the difference between two\
    \ or more chromosomes of the population\nwith the possible addition of some type\
    \ of noise to create a new individual. Like\nGA, DE also suffer from getting stuck\
    \ in local minima. The DE algorithm also has\nthree control parameters, the population\
    \ size, the mutation factor and the crossover\nprobability.\n3.5\nArtificial Bee\
    \ Colony\nArticle Bee Colony [254] is a swarm intelligence algorithm based on\
    \ the behavior of\nbees. Within bees, there are different social classes who work\
    \ together to complete\ntasks such as harvesting pollen and nesting through the\
    \ use of smell, ’swing dance’\nand other methods. Bee colonies consist of three\
    \ types of bees, queen, male and\nthe worker bees which work on activities such\
    \ as searching for food, gathering and\nstorage of honey.\nAfter gathering honey,\
    \ the worker bee comes to the nest and\ninforms other bees about the location\
    \ of the honey source site through a dance. The\nABC algorithm simulates the behavior\
    \ of bees by considering three elements, the\nfood source, employed bees and unemployed\
    \ bees. The food source is represented as\nrevenue considering its distance and\
    \ quality, the higher the revenue, the better is the\nvalue. In computational\
    \ optimization terms, the food source is a potential solution\nto the objective\
    \ formulation of the considered problem and the quality or value of\n52\nthe food\
    \ source represents the fitness value of that particular solution. At the start,\n\
    all bees are used as scouts, searching for food sources. When a food source is\
    \ found,\nfor a high value food source, bees who find those food sources become\
    \ hire bees and\ncollect the food source. If the food source is of intermediate\
    \ value, the bees become\nfollow bees and if the food source value becomes low,\
    \ the bees become scout bees to\nlook for better food sources. Hire bees, the\
    \ bees with a food source location having\na high value, lead the follow bees\
    \ to develop solutions in their neighborhood in order\nto come up with more solutions.\
    \ A subset of the highest-ranking solutions are then\nconsidered before this process\
    \ is repeated again until the end conditions are met.\n4\nOptimization Applications\
    \ in Smart Cities\nSeveral tasks in smart city operations require the use of metheuristics\
    \ to be solved,\nthe aim being to optimize the resources present in the city.\
    \ This section presents\nthe different uses of optimization techniques for IoT\
    \ enabled Smart Cities.\nThis\ntask is performed for all eight components, Smart\
    \ Agriculture, Smart City Services,\nSmart Grid, Smart Health, Smart Homes, Smart\
    \ Homes, Smart Industry, Smart\nInfrastructure and Smart Transportation.\n4.1\n\
    Smart Agriculture\nSmart Agriculture involves the use of digital technologies\
    \ such as sensors and in-\ntelligent systems to improve agricultural productivity.\
    \ The sustenance of agriculture\ndepends on water, and it is central to the agricultural\
    \ production of food items around\nthe world. However, water is becoming an ever-scarce\
    \ resource due to the increasing\ndemand caused by human population growth, increased\
    \ economic activity by indus-\ntries and also due to climate change. It therefore\
    \ is necessary to utilize this precious\nresource wisely so as make use of it\
    \ in the best manner possible.\nOne approach\ntowards ensuring that water and\
    \ land is used appropriately is by introducing irriga-\ntion management schemes\
    \ such as irrigation scheduling and water allocation in the\nfarming process.\
    \ A summary of the optimization problems, objectives, constraints in\nsmart agriculture\
    \ and the use of IoT is illustrated in Figure 8.\nMeasurements in water irrigation\
    \ systems are typically performed by sensors\nplaced at different points in the\
    \ canals and rivers to determine water flow, volume and\nspeed. This information\
    \ regarding water movement can be combined with economic\ninformation such as\
    \ yeild, crop profit to optimize water distribution. Irrigation man-\nagement\
    \ through scheduling has been performed by the authors of [255, 256, 257, 258]\n\
    to maximize net return on crop profits, water use efficiency and to minimize leakage\n\
    losses. In [259] Fuqiang et al. aim to optimize water delivery through canals\
    \ while\nalso performing scheduling. They do this using a genetic algorithm and\
    \ work with\ntwo objectives, minimizing the difference between the time of water\
    \ delivery and wa-\nter demand and the fluctuation in water discharge of the main\
    \ canal. Their model\nwas applied to a district in China.\nThe authors in [260,\
    \ 261] work on optimal allocation of water. Of these, Ikudayisi\net al. [260]\
    \ use the differential evolution algorithm to minimize the water allocated to\n\
    53\nSmart Agriculture \nIrrigaƟon\nWater\nScheduling \nIrrigaƟon\nWater\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon\nand Water\nControl \nObjectives: Minimize\nwater\nusage/deviation/leakage\n\
    Maximize benefits\nConstraints: Land area\navailable, water limits\nObjectives:Minimize\n\
    leakage \nMaximize net return,\nwater usage \nConstraints: Water\nlimits, capacity\
    \ of\nirrigation system, flow\ncapacity, discharge\nlimits, time limits\nObjectives:\
    \ Minimize\nenergy cost \nConstraints: Limited\nenergy available, water\nvolume\
    \ minimums\nIoT Usage: Sensors provide information about water flow, amount of\
    \ water and more\nConstraints: Water\nlimits, capacity of\nirrigation system,\
    \ flow\ncapacity, discharge\nlimits, time limits\nFigure 8. Optimization applications\
    \ in Smart Agriculture.\nfarms in South Africa while maximizing the benefits in\
    \ terms of job creation, ensuring\nfood security and the yield of crops.\nWu et\
    \ al.\n[261] approach this as problem\nof reducing deviation between different\
    \ channels and minimizing water seepage to\nensure a more consistent supply to\
    \ all water channels. An approach presented by\nOcampo et al. [262] tackles this\
    \ problem not as a task of allocation directly but\nconsiders the scenario of\
    \ providing sufficient water to a smart farm while controlling\ntwo water pumps.\
    \ The objective function is formulated to minimize the energy cost\nof the water\
    \ pumps while maintaining sufficient supply of water to the plants on the\nfarms.\
    \ Constraints considered for such applications include the limited quantities\
    \ of\nwater being worked with, the time for which the water was available and\
    \ the area\nof land which was to be considered. Another allocation based scheme\
    \ is presented\nby Zhuo et al. [263] who use a genetic algorithm for an irrigation\
    \ system based on\na reservoir and two pumping stations. Their aim is to ensure\
    \ that there is no water\n54\nshortage. The objective function used by them is\
    \ the minimization of the annual sum\nof squared water shortage. Other work in\
    \ [264] also minimizes use of groundwater\nand increase benefit to the regional\
    \ water supply through reduction of water deficits\nin the Dujiangyan region of\
    \ China.\nA precision agriculture scheme is presented by Roy et al.\n[265] who\
    \ combine\nan IoT system consisting of sensors on plants using a GA based rainfall\
    \ predictor.\nCombining predicted rainfall information along with the sensed moisture\
    \ level in\nthe crops, they control plant watering. Lin et al. [266] propose a\
    \ framework for the\nmanagement of fertigation and irrigation in precision agriculture.\
    \ They perform short\nterm management and long-term management. Soil and crop\
    \ growth data is gathered\nfrom IoT based sensor systems. Long term planning refers\
    \ to the allocation of water\nand fertilizer resources to crops in terms of quantity\
    \ so as to meet demands whereas\nshort term refers to when and how to use them.\
    \ They use a genetic algorithm for long\nterm planning considering the allocation\
    \ of water and fertilizer for crops to maintain\npH value and electrical conductivity.\
    \ This information has been presented in Table\n16 while a summary of the identified\
    \ data sources used by each considered work has\nbeen provided in Table 17.\n\
    4.2\nSmart City Services\nAccording to the world bank, the amount of annual solid\
    \ waste generated is set to be\n3.40 billion tons [268] in 2050. Managing this\
    \ waste and its collection in an efficient\nmanner is imperative for health and\
    \ climate reaons. The most common application\ntowards smart city services optimization\
    \ is waste management as illustrated in Figure\n9 which summarizes the objectives,\
    \ constraints and the use of IoT.\nSmart waste collection systems include sensors\
    \ attached to trash cans which can\ninform the municipal authority about the status\
    \ of the garbage amount present in\nthem.\nOnce the trash cans are close to being\
    \ full, it is the responsibility of the\nmunicipal corporation to perform garbage\
    \ collection in an efficient manner. In this\nrespect, data provided by the sensors\
    \ on garbage cans can be used to determine\nan optimized route for garbage collection\
    \ to construct the Vehicle Routing Problem\n(VRP) in the Smart City Services domain.\
    \ As such, this problem has been performed\nkeeping in view various goals. The\
    \ minimization of the route distance taken by a\ngarbage tuck has been performed\
    \ by the authors in [269, 270, 271, 272, 273]. The\naim in this case is to determine\
    \ a route for garbage collection vehicles that minimizes\nthe total distance traveled\
    \ by the them. Zhang et al. [273] consider multi-vehicle\nallocation while considering\
    \ the single objective of minimizing route distance. Wei\net al. [274] use the\
    \ Artificial Bee Colony algorithm to determine garbage collection\nroutes resulting\
    \ in the minimum emission of CO2. Another optimization objective\nin route optimization\
    \ for waste management has been the minimization of the total\ntravel time, such\
    \ a target is described by the authors of [275, 276, 277, 278] who aim\nto reduce\
    \ travel time while considering emptying of waste bins. Another optimization\n\
    consideration in route optimization for waste management is to reduce cost. This\
    \ has\nbeen carried out by Tirkolaee et al. [279] who formulate a multi-objective\
    \ function of\ntravel cost and total useage cost of vehicles and determine the\
    \ route with the minimum\n55\nTable 16. Optimization in Smart Agriculture\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nIrrigation Management\
    \ (Ir-\nrigation Water Scheduling)\nACO [255]\nSingle\nMaximizing net return on\
    \ crop\nConstraint on water avail-\nability\nPSO [256]\nCapacity of irrigation\
    \ sys-\ntem\nWater\nsavings\nshould\nbe\nmore than deficiency\nGA [259]\nSingle\n\
    Minimize water fluctuations and\ndifference between the time of wa-\nter demand\
    \ and need\nFinite canal capacity\nMaximum rotation time lim-\nitation\nGA [257]\n\
    Parallel\nMaximize yield, global and local\nwater use efficiencies\nConstraint\
    \ on irrigation in-\nterval\nMinimum and max irriga-\ntion amount\nGA [258]\n\
    Parallel\nMinimize leakage loss both individ-\nually and overall\nFlow\ncapacity\n\
    limited\nby\nmaximum\nIrrigation time constraint\nNet discharge constraint\nTotal\
    \ flow rate should be\nsum of individual flowrates\nIrrigation Management (Ir-\n\
    rigation Water Allocation)\nDE [260]\nSingle\nMinimize irrigation water allocated\n\
    and maximizes net benefits\nConstraint on the land area\navailable\nMinimum and\
    \ max planting\nareas for crops\nLimited water available for\nthe farm\nPSO [261]\n\
    Parallel\nMinimize deviation in the different\nchannels, water seepage in the\
    \ dis-\ntribution channels\nTime\nWater quantity constraints\nGA [264]\nParallel\n\
    Maximize benefit to regional wa-\nter supply, minimize water deficit\ngroundwater\
    \ exploitation in regions\nWater supply quantity con-\nstraints for annual water,\n\
    ground water\nIrrigation Management (En-\nergy Optimization)\nGA [262]\nParallel\n\
    Minimize energy cost while main-\ntaining water supply for plants\nLimited energy\
    \ available\nWater volume maintained in\nstorage tank, fish pond\nGA [263]\nSingle\n\
    Minimize sum of squared water\nshortage\nAnnual water availability in\nreservoir\n\
    Water rights of replenish-\nment pumping station\nWater rights of the irrigation\n\
    pumping station\nOperational rule constraints\nIrrigation\nManagement\n(Water\
    \ Control)\nGA [267]\nSingle\nMaximize yield\nMinimum\nand\nmaximum\nwater depth\
    \ limits\nMin and max soil moisture\nIrrigation\nand\nFertilizer\nManagement\n\
    GA [266]\nSingle\nMaximize economic profits and en-\nvironmental benefits\nLimits\
    \ on the demand of wa-\nter for each crop\nTotal water does not exceed\navailable\n\
    Total fertilizer doesn’t ex-\nceed availability\nWater allocation should be\n\
    positive\nTable 17. Data setup used for Smart Agriculture Optimization\nData Type\n\
    Papers\nSelf-collected / Presented\n[256, 258, 259, 262, 267, 266]\nGovernment\
    \ and private agencies\n[260, 256, 255, 267, 259, 257, 258, 261]\n56\nSmart City\
    \ Services \nWaste Management\nRoute OpƟmizaƟon \nObjectives: Minimize\ndistance,\
    \ CO2\nemissions, travel time\nConstraints: Road\nnetwork fixed, location\nserved\
    \ by one truck,\ncontinuous routes,\ndeadline to finish jobs,\ncapacity limited\n\
    IoT usage: Sensors for\ntrash fill level and\nweight detection\nFigure 9. Optimization\
    \ applications in Smart City Services.\ncosts using the ACO. Constraints considered\
    \ in such applications are related to a\nfixed road network which depends on the\
    \ locality for which the optimization is being\nperformed, the continuity in the\
    \ determined route as well as fulfillment of capacity\nrestrictions. The useage\
    \ of optimization algorithms in smart city services is provided\nin Table 18 and\
    \ the data sources used are provided in Table 19.\n4.3\nSmart Grid\nThe electricity\
    \ grid has been a major beneficiary of smart city technologies. The in-\ncreasing\
    \ demand for energy by consumers along with the environmental impact that\nfossil\
    \ fuel-based energy production has on the planet has forced utility companies\n\
    to introduce renewable energy sources within the electricity distribution system\
    \ and\nmake their energy production and distribution systems more efficient through\
    \ plan-\nning and design improvements. Optimization algorithms find applications\
    \ within the\nsmart grid domain in terms of power management and planning.\nA\
    \ summary of\n57\nTable 18. Optimization in Smart City Services\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nWaste\nManagement\n\
    Route Optimization\nACO [269]\nSingle\nMinimization of distance\nRoad Network\
    \ is fixed\nGA [270, 271,\n273]\nEach dumpster served by\none truck only\nTrucks\
    \ leave depot to go to\nlandfill\nPSO [272]\nRoutes are continuous\nABC [274]\n\
    Single\nMinimize Co2 emissions\nCapacity constraint for bins\nas well as trucks\n\
    ACO [275]\nSingle\nMinimize total travel time\nTrucks leave a depot empty\nGA\
    \ [276, 277]\nBins needs to be fully emp-\ntied by trucks\nVehicle start depot\
    \ and end\nat landfill\nPSO [278]\nDemand should not exceed\ncapacity\nACO [279]\n\
    Single\nMinimize travel cost and to-\ntal usage cost of vehicles\nSubtour elimination\n\
    Jobs should finish within a\ngiven deadline\nTable 19. Data setup used for Smart\
    \ City Services Optimization\nData Type\nPapers\nSelf-collected / Presented/ Generated\n\
    [269, 270, 271, 275, 279, 277, 273]\nGovernment Agency\n[276, 278]\nDataset\n\
    Capacitated VRP datasets [280] by [272], Capacitated VRP Instances [281] by [274]\n\
    the applications, objectives, constraints and IoT usage for optimization algorithms\
    \ in\nSmart Grids has been illustrated in Figure 10.\nAn increasing population\
    \ has led to an increasing demand for electricity around\nthe world. This burdening\
    \ of the electricity grid has led to measures for increasing\nthe performance\
    \ of the electricity distribution system by reducing loss, prevent over-\nload\
    \ and reduce cost. The authors in [282, 283, 284, 285, 286, 287, 288] work on\n\
    the improvement of grid performance by minimizing cost and reducing power losses.\n\
    Power loss minimization is specifically targeted by [282, 286, 284]. Of these,\
    \ Ettappan\net al. [282] aim for the reduction of power losses, voltage deviation\
    \ and increasing\nvoltage stability. Atteya et al. [286] also address this problem\
    \ by considering net-\nwork redistribution to minimize losses in the grid whereas\
    \ Sakr et al. [284] focuses\non minimizing transfer losses in the smart grid to\
    \ accomplish this task. Nguyen and\nMohammadi [285] attempt the reduction of power\
    \ losses and line congestion by deter-\nmining the location of thyristor controlled\
    \ series compensator devices. The problem\nis formulated as a multi-objective\
    \ problem aiming to minimize loadability of the lines,\nactive power loss and\
    \ the reactance of the transmission line. A cost reduction-based\napproach to\
    \ improve grid performance is followed by Das et al. [283] who aim to\nreduce\
    \ cost of maintaining electrical stability and also the cost of management of\
    \ the\ndistribution network. They do this by considering changing the location\
    \ of energy\nstorage systems within the grid. Kanwar et al. [287] take maximizing\
    \ profits and\n58\nSmart Grid \nPower Management \nImproved Grid\nPerformance\
    \ \nDistributed\nEnergy\nResource\nManagement \nPlanning \nExpansion of\nDistribuƟon\n\
    Network \nObjectives: Minimize power\nloss, voltage deviation,\nreactance, average\n\
    loadability, cost \nMaximize profit  \nConstraints: Power flow\nrestrictions,\
    \ location\nlimitations, operational\nlimitations. capacity limits,\nload balances,\
    \ power limits,\ntopology restrictions\nObjectives: Minimize cost,\nemissions\
    \ \nConstraints: Power limits\n(generation and\ndistribution), battery\ncharge/discharge\
    \ limits,\nload schedule restrictions,\ncapacity limits\nObjectives: Minimize\n\
    expansion cost, number of\nunits, power losses\nConstraints: Power flow\nrestrictions,\
    \ generation\nlimits, infrastructure limits\nIoT Usage: Loads and other devices\
    \ in the power network can be swithced on and off as needed. Phase\nmeasurement\
    \ units for e.g., provide capability to obtain measurements in the smart grid\n\
    Figure 10. Optimization applications in Smart Grid.\nminimization of power losses\
    \ while considering sizing of a distributed energy resource\ngeneration system.\n\
    Distributed energy resource (DER) management is another area where optimiza-\n\
    tion algorithms are used in Smart Grids. The management of distributed energy\n\
    sources within smart grids is dependent on the interconnectivity provided by IoT\n\
    in the smart grid system.\nSmart meters within the smart grid provide real-time\n\
    information relating to power consumption which can be used for controlling DER\n\
    electricity. Moreover, IoT devices allow for switching loads and generation sources\
    \ as\nrequired. This assists in creating a virtual power plant to aggregate all\
    \ energy sources\nin a DER scenario. With global warming and a changing climate,\
    \ utilities around\nthe world are increasingly incorporating various renewable\
    \ energy sources within their\ngrid which often times are an economically convenient\
    \ option as well. However, many\n59\nof these sources such as wind and solar (photo\
    \ voltaic [PV]) do not offer a consistent\nsupply of power throughout the day.\
    \ In this regard, systems such as batteries as\nwell as conventional generation\
    \ plants need to be used together along with renewable\nenergy sources. For utility\
    \ companies, it is necessary to optimize power production\nso that the maximum\
    \ amount of energy is utilized from these renewable sources so\nas to reduce cost\
    \ to the user while also maintaining the quality of service. The au-\nthors in\
    \ [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302] provide\n\
    a management scheme for DERs to minimize cost. In this regard, the authors in\n\
    [292, 293, 294, 297, 289, 290, 300, 301, 302] all formulate the problem of distributed\n\
    energy resource management as a single objective problem where the cost incurred\
    \ is\nminimized. On the other hand, the authors in [298, 295, 291] and [299] formulate\
    \ this\nas a multi-objective problem. Azaza and Wallin [299] not only target reduction\
    \ of\nelectricity production cost but also maximize reliability of the system\
    \ while reducing\nthe environmental impact of the distribution system. It is interesting\
    \ to note that the\nimprovement of system reliability is formulated as a minimization\
    \ problem as well.\nSimilarly, Das et, al. [291] consider the reduction of both\
    \ the total cost as well as\nthe environmental cost of the system. Their considered\
    \ scenario also consists of a\nPV, Wind Turbine and battery. The constraints considered\
    \ were constraints regard-\ning power flow, limitations on power and voltage values,\
    \ power balance constraint\nand power generation constraints on the renewable\
    \ energy sources. In [289, 302], a\nDER management system is developed for a microgrid\
    \ which consists of a controllable\ncollection of energy storage and generation\
    \ sources powered by IoT devices.\nPlanning in distribution networks has been\
    \ considered by the work of [303] and\n[304]. Mahdavi et al. [303] work on expanding\
    \ transmission lines utilizing the artificial\nbee colony algorithm to minimize\
    \ cost of network expansion, power losses in load\nand generation. On the other\
    \ hand, Maji and Acharjee [304] aim to determine the\nminimum number of Phase\
    \ Measurement Units (PMUs) to make the distribution\nnetwork observable. The constraints\
    \ used were power flow and balance of power as\nwell as limits on the number of\
    \ transmission lines available. The internet of things also\nfinds usefulness\
    \ in terms of the use of Phase Measurement Units that provide voltage\nand current\
    \ measurement capabilities within smart grids to perform maintenance and\nmonitoring\
    \ operations. A summary of this discussion has been provided in Table 20\nand\
    \ the data setups used by the covered research work is presented in Table 21.\n\
    4.4\nSmart Health\nSmart health refers to the use of technology to provide better\
    \ healthcare to patients.\nThis can be in the form of developing tools for better\
    \ diagnosis of diseases or the use\nof algorithms for better planning and healthcare\
    \ delivery. The deployment of timely\nemergency vehicles to a person in need is\
    \ imperative towards providing healthcare\nservices to people. Two applications\
    \ of optimization problems within Smart Health\nare emergency vehicle routing\
    \ and their allocation and relocation as shown in Figure\n11. It also summarizes\
    \ the objectives uses, constraints considered and role of IoT.\nLate arrival of\
    \ ambulances and other emergency vehicles to people in need may\nresult in irreversible\
    \ damage to life and property. Studies have shown that delayed\n60\nTable 20.\
    \ Optimization in Smart Grid\nApplication\nAlgorithm\nSingle/\nParallel\nproblems\n\
    Objectives\nConstraints\nPower\nManagement\n(Improve Grid Per-\nformance)\nABC\
    \ [282]\nSingle\nMinimize active power loss,\nvolage deviation and voltage\nstability\
    \ index (L-index)\nPower flow constraints\nGA [284]\nRestriction on power source\
    \ instal-\nlations and other components re-\nlated to power structure\nPSO\n[286,\
    \ 288]\nSingle\nMinimize power loss\nGeneration and other component\noperations\
    \ within limits\nGA [285]\nSingle\nMinimize average percent-\nage\nof\nloadability\n\
    of\nthe\nlines, active power loss, re-\nactance of transmission line\nLimitation\
    \ on values of bus voltage\nTransmission line capacity, genera-\ntor active and\
    \ reactive power.\nABC [283]\nSingle\nMinimize cost for maintain-\ning thermal\
    \ and voltage sta-\nbility and lower asset man-\nagement of distribution net-\n\
    works\nActive and reactive power must be\nbalanced\nLimits on voltage and load\
    \ maxi-\nmum\nESS max charging and discharging\nconstraints\nPSO [287]\nParallel\n\
    Maximize annual profit by\nreducing charges for annual\nenergy losses, peak power\n\
    loses etc\nConstraint on the node voltage\n(soft)\nMinimize power loss for the\n\
    network reconfiguration\nPower injected by DER and SG\nwithin limit\nPower generated\
    \ at a given node\nhas a limit\nFor reconfiguration:\nRadial topology,\nNode voltages\
    \ has a max hard con-\nstraint\nPower\nManagement\n(Distributed Energy\nResource\n\
    Manage-\nment)\nABC\n[292, 293, 294]\nSingle\nMinimize total cost\nPower\ngeneration\n\
    by\nrenewables\nwithin limits\nDE [295, 297,\n296]\nBattery charge and discharge\
    \ limits\nand system reliability\nGA [289, 290]\nPower balance constraint (gener-\n\
    ated equal to consumed)\nPSO\n[300, 301, 302]\nSpecific loads are interruptible\n\
    Constraints on the efficiencies of the\nsources\nDE [298]\nSingle\nMinimize cost\
    \ and emission\nABC [305]\nSingle\nMinimize cost and power im-\nported from outside\
    \ micro-\ngrid\nPower flow constraints for the DER\nGA [291]\nSingle\nMinimization\
    \ of cost of en-\nergy and life cycle emissions\n(CO2 and energy stored in\nbatteries\
    \ or converted by re-\nnewable sources during pro-\ncess of satisfying load re-\n\
    quirements)\nConstraints on battery capacity\nSystem reliability constraint\n\
    Energy produced equal or greater\nsthan required\nPSO [299]\nSingle\nMinimize\n\
    reliability\ncost,\ncost of electricity production\nand operation environmen-\n\
    tal impact ()using renewable\nfactor)\nExpansion of distri-\nbution network\n\
    ABC [303]\nSingle\nMinimize cost of network ex-\npansion, active losses and\n\
    loss of load and generation\nPower flow and active power bal-\nanced\nPower generation\
    \ limits\nNumber of transmission line limits\nPSO [304]\nSingle\nMinimize number\
    \ of PMUs\nSG Network should be observable\n61\nTable 21. Data setup used for\
    \ Smart Grid\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n25 Bus\
    \ network s[295, 297, 298, 291, 299, 300, 301, 302] [305]\nGovernment Agency/\
    \ other research work\n[292, 293, 294, 290, 299, 303]\nDataset/ Standard Network\n\
    IEEE 14 Bus [284, 304]\nIEEE 30 Bus [282, 284, 285]\nIEEE 33 Bus [286, 283, 287,\
    \ 296]\nIEEE 37 Bus [289]\nIEEE 57 Bus [282, 284, 304]\nIEEE 69 Bus [287]\n119\
    \ Node system of [306, 288]\nSmart Health \nEmergency\nVehicle\nAllocaƟon and\n\
    RelocaƟon \nEmergency\nVehicle RouƟng \nObjectives: Minimize time,\ncost\nConstraints:\
    \ Traffic balance,\ntraffic flow restrictions,\nvehicle speed and number\nlimits,\
    \ location of\nemergency vehicle\nObjectives: Minimize time,\nvehicle density\
    \ \nConstraints: Road connection\nrestrictions, time limits \nIoT Usage: Real\
    \ time location services, real time traffic\ninformation, vehicle to vehicle and\
    \ vehicle to infrastructure\ncommunication can also provide better navigation\
    \ and monitoring\nservices\nFigure 11. Optimization applications in Smart Health.\n\
    ambulance dispatch increases mortality [307], moreover, economically speaking,\
    \ a\none-minute delay in response time for cardiac patients found that the mortality\
    \ in-\ncreases by 1% and adds annual costs of USD 7 billion in healthcare expenditure\n\
    [308]. Keeping this in mind ambulance deployment and location determination have\n\
    been of considerable interest in the area of optimization for smart health. These\n\
    two problems are specific cases of the Vehicle Routing Problem [309] and Maximum\n\
    coverage problem [310] sometimes called the Ambulance Routing Problem [311] and\n\
    Ambulance Location Problem [312]. The authors in [313] work on the optimal allo-\n\
    62\ncation determination based on fixed sites and a finite number of ambulances\
    \ while\nminimizing lateness of ambulance arrival using the Ant Colony Optimization.\
    \ Later\non, in their work in [314], they do a comparison with using GAs and find\
    \ that GAs\nprovide better performance. Kochetov and Shamray [315] attempt localization\
    \ of\nambulance fleet at base stations with the aim to minimize the average waiting\
    \ time\nfor arrival of ambulances. An interesting approach to this problem is\
    \ presented in\nYan et al. [316] who work on this problem from a scheduling perspective\
    \ where they\ncontrol scheduling of emergency vehicles to reduce the total cost\
    \ in terms of money\nand time using a Genetic Algorithm. Another approach for\
    \ sequencing vehicles to\nensure emergency vehicles reach their destination in\
    \ time is presented by Lu et al.\n[317] who aim to prioritize emergency vehicle\
    \ thoroughfare on traffic intersections.\nThey do this by minimizing the entrance\
    \ time of the vehicle by manipulating vehicle\norder. Constraints used for these\
    \ problems include constraints on the speed of the\nambulances, the flow of vehicles\
    \ on the road, specific road connections present as well\nas time constraints.\
    \ The internet of things serves a pivotal role in enabling the allo-\ncation and\
    \ routing of emergency vehicles. The connectivity provided by IoT through\nvehicle-to-vehicle\
    \ communication as well as vehicle to infrastructure communication\nfacilitates\
    \ providing a real-time indication of the vehicle’s location as well as the con-\n\
    dition of traffic in a given area. This information can then be used to determine\
    \ an\noptimal route for emergency vehicles as well as for their optimal deployment\
    \ to serve\npeople in need. Information about optimization methods for smart health\
    \ has been\npresented in Table 22 and the data setups used in these approaches\
    \ in Table 23.\nTable 22. Optimization in Smart Health\nApplication\nAlgorithm\n\
    Single/\nParallel\nproblems\nObjectives\nConstraints\nEmergency\nVehicle\nAllocation\
    \ and Relo-\ncation\nACO [313]\nSingle\nMinimize lateness\nAmbulance\nfrom\nnearest\n\
    hospital\nis\ndispatched\nGA [314]\nSpeed of ambulance\nTotal number of am-\n\
    bulance limits\nGA [315]\nSingle\nMinimize\naverage\nwaiting\ntime of ambulances\n\
    Balance\nconstraints\non exit and entry vol-\numes\nFlow\nconservation\nconstraints\n\
    GA [316]\nSingle\nMinimize\ntotal\ncost\nin\nmoney and time\nEmergency\nVehicle\n\
    Routing\nPSO [318]\nSingle\nMinimize travel time, road\nlength traveled, density\
    \ of\nvehicles on the road\nRoad connections are\nspecific\nGA [317]\nSingle\n\
    Minimize the entrance time\nof\nemergency\nvehicle\nby\nchanging the order of\
    \ vehi-\ncles going through intersec-\ntions\nConstraint\non\nthe\ndifference\n\
    between\narrival times of cur-\nrent\nand\nprevious\nvehicles and on the\nentrance\
    \ time of the\nvehicle\n63\nTable 23. Data setup used for Smart Health\nData Type\n\
    Papers\nSelf-collected/ Presented/ Generated\n[313, 314, 315, 316, 318, 317]\n\
    Government Agency/ other research work\n[314, 315, 316]\n4.5\nSmart Homes\nHome\
    \ energy management has been the prime application of optimization in smart\n\
    homes, a summary of the objectives, constraints and the use of IoT has been shown\n\
    in Figure 12.\nSmart Homes \nHome Energy Management \nAppliance\nScheduling \n\
    Objectives: Minimize\ncost, time, peak to\naverage power ratio,\ndiscomfort \n\
    Constraints: Capacity\nlimits, flow, one level\nper location\nIoT usage: Sensors\
    \ for providing power consumption data and other environmental\nreadings such\
    \ as temperature etc for comfort determination in homes, smart meters\nprovide\
    \ interconnectivity betwen homes\nFigure 12. Optimization applications in Smart\
    \ Homes.\n64\nHome energy management refers to the development of demand side\
    \ manage-\nment schemes that aim to reduce the electricity cost billed to a customer\
    \ or maintain\ncomfort for the user. One way this is performed is by appropriate\
    \ appliance schedul-\ning. The idea here is to schedule the usage of appliances\
    \ in such a way that the\nmost power-hungry devices are turned on during off peak\
    \ hours when electricity costs\nmight be lower. The combination of the Smart Grid\
    \ and Smart Homes facilitates the\ndevelopment of optimization schemes that not\
    \ only benefit the customer (in terms\nof reduced electricity costs and maintaining\
    \ comfort) but also be useful for the util-\nities in ensuring that load profiles\
    \ (though minimizing the peak to average ratio)\nare more consistent thereby allowing\
    \ better planning of the power generation mix\nused by them. The authors of [319]\
    \ perform appliance scheduling for the purpose of\nminimizing electricity cost\
    \ and the waiting time for appliance usage. Interestingly,\nthey incorporate comfort\
    \ maintenance by adding it as a constraint. A similar ap-\nproach has been followed\
    \ by Bui et al [320] and Makhadmeh et al. [321] who aim to\nminimize the cost\
    \ of electricity usage with a constraint for maintenance of comfort.\nMakhadmeh\
    \ et al. [321] also include the reduction of waiting time rate for appliances\n\
    by the user and the reduction of the peak to average ratio of the power consumed\
    \ as\nconstraints. The authors in [322, 323, 324, 325] perform appliance scheduling\
    \ while\nconsidering electricity cost and peak to average ratio which need to\
    \ be minimized.\nAll of the authors present a multi-objective function for this\
    \ purpose combining the\nobjectives of minimizing the cost and the peak to average\
    \ power ratio. Azimi et al.\n[326] combine the problem of reducing cost and power\
    \ together as a single objective\nby considering the minimization of the ratio\
    \ of operating cost and load factor in a\nbattery supported system. The works\
    \ of [327, 328, 329, 330, 331] also consider user\ncomfort as part of the objective.\
    \ In [327], Essiet and Wang form a multi-objective\nminimization problem of electricity\
    \ cost, peak to average ratio for power and discom-\nfort of users in a smart\
    \ home supported by a renewable energy system consisting of a\nbattery and PV\
    \ system. In Chanra et al. [332], the authors aim to reduce electricity\ncost\
    \ by appliance scheduling in such a manner so as to make as much use of onsite\n\
    energy units as possible so as to reduce usage of utility provided electricity.\
    \ The\nenergy units they consider are a diesel generator, renewables and battery.\
    \ Another\napproach that aims to reduce cost of consumed electricity is presented\
    \ by Faia et\nal. [333] who formulate it as a problem of minimizing the energy\
    \ bill and the cost\nassociated with curtailment of power in a system with a battery\
    \ and a photovoltaic\nsystem. Work in [334, 330, 335, 336] also perform appliance\
    \ scheduling to reduce\ncost of electricity. Appliance scheduling for smart homes\
    \ has also been performed by\nFatima et al. [323] and Abid et al. [322] considering\
    \ a microgrid for homes where\ninstead of optimizing data from single homes, the\
    \ authors used data from connected\nsmart meters to determine an optimized control\
    \ scheme for appliances across the grid.\nThe constraints used for optimization\
    \ in smart homes are on the comfort needing to\nbe maintained, constraints on\
    \ the powerflow, time of operation, the maximum power\nthat is present or used\
    \ and which appliances are switchable appliances. Appliance\nscheduling is based\
    \ on smart meters as well as individual control and monitoring of\nappliances\
    \ using IoT systems. IoT devices enable the microgrid which is used to\ngather\
    \ data as well as control the switching on and off of sources from the houses\n\
    65\nelectricty supply. The information gathered from these IoT units can be processed\n\
    to optimize energy consumption patterns to reduce cost to the customer as well\
    \ as\nincrease comfort. The use of the considered optimization schemes for smart\
    \ homes\nhas been presented in Table 24 with the data setups presented in Table\
    \ 25.\n4.6\nSmart Industry\nOne of the biggest enablers of the Industry 4.0 concept\
    \ has been the use of AI tech-\nniques to improve the efficiency of the manufacturing\
    \ and production process. This\nhas led to the development of cyber physical systems\
    \ aiming to assist in activity recog-\nnition [339], machine health prediction\
    \ [340] and production management in terms of\nbottleneck prediction [341]. Apart\
    \ from conventional AI applications of anomaly de-\ntection, classification and\
    \ regression, computational optimization also finds numerous\napplications as\
    \ it fits well with the objective of efficient and streamlined manufac-\nturing.\
    \ The major applications for the use of computational optimization have been\n\
    in the area of routing and location for logistics and are variations of the vehicle\n\
    routing problem and are typically represented as Multidepot Vehicle Routing Prob-\n\
    lem (MVRP), Vehicle Routing Problem Pick-up and Delivery with Time Windows\n(VRPPDTW)\
    \ or Large-scale Dynamic Vehicle Routing Problem (LSDVRP). Figure\n13 summarizes\
    \ the objectives utilized, constraints and the role of IoT in optimization\nfor\
    \ Smart Industry.\nThe authors in [342] and [343] use the ABC and the GA respectively\
    \ to determine\nthe best location of service sites for logistic operations. Both\
    \ these approaches use\nmulti-objective formulations aiming to reduce cost of\
    \ operations, transportation as\nwell as the establishment of the centers. The\
    \ authors in Su et al. [344] use ACO,\nAlinaghia et al. [345] PSO and Utama et\
    \ al. [346] use ABC to address the problem\nof determining the best route for\
    \ logistics operations.\nThe routing and coverage\nproblem for logistics involves\
    \ determining the best route for either a single or multiple\nvehicles at a depot\
    \ which have to visit every customer. The works of [344, 345, 346]\nfocus on reducing\
    \ the cost incurred in the routing for vehicles in logistics as a single\nobjective\
    \ formulation. On the other hand, the authors of [347, 348] and [349] all\nwork\
    \ on the minimization of distance as their objective in determining the optimal\n\
    route for delivery vehicles trying to serve multiple locations.\nMounia and Bachir\n\
    [348] address routing in logistics as a multi-objective problem where they not\
    \ only\naim to minimize the distance traveled by the vehicles but also aim to\
    \ reduce CO2\nemissions and the number of vehicles used. A time based optimization\
    \ approach is\npresented by the authors of [350] and [351] with [350] also factoring\
    \ in reduction of fuel\nconsumption in their objective function formulation. Constraints\
    \ used for the routing\nand location determination problem are related to time,\
    \ capacity constraints for the\nvehicles, each customer being served only once,\
    \ constraints related to the route. The\ndetermination of the location and the\
    \ route for vehicles is dependent on real time\ninformation concerning the traffic\
    \ in the area as well as the loads to be collected from\neach site in addition\
    \ to other information which can be provided by IoT units. The\nusage of optimization\
    \ algorithms for smart industry has been presented in Table 26\nwith data setups\
    \ presented in Table 27.\n66\nTable 24. Optimization in Smart Homes\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nHome Energy Man-\n\
    agement\nACO [319]\nSingle\nMinimize cost and waiting\ntime\nComfort needs to\
    \ be main-\ntained\nACO [322]\nParallel\nMinimize cost and peak to\naverage ratio\n\
    Power flow constraints\nACO [323]\nSingle\nMinimize cost and peak to\naverage\
    \ ratio\nMaximum energy capacity\nconstraint\nDE [324]\nDevice counted that can\
    \ be\nshifted is positive\nPSO [325]\nNumber of devices shifted at\nany time should\
    \ not be more\nthan the available number of\ncontrollable devices\nGA [337]\n\
    Single\nMinimize peak to average\nratio for load shaping\nLoad shaping, redistribution\n\
    of load in a flexible manner\nGA [326]\nSingle\nMinimize ratio of operating\n\
    cost and load factor\nCharging and discharging of\nbatteries\nComplete load transfer\
    \ and\nload clipping limits\nDE [327]\nSingle\nMinimize\nelectricity\ncost,\n\
    peak\nto\naverage\nratio\nof\npower and discomfort mini-\nmization of users\n\
    Constraints on PV supply\nlimits\nACO [328]\nState of charge and rate of\ndischarge\
    \ of battery\nDE [329]\nSingle\nMinimize\nelectricity\ncost\nand discomfort\n\
    Time of operation within\nspecified limits\nPSO [331]\nTemperature,\nair\nquality,\n\
    illumination\nand\nenergy\nshould be within maximum\nlimits\nGA [330, 338,\n305]\n\
    Parallel\nA given appliance must be\non for specified times of the\nday\nPower\
    \ limits to be followed\nABC [320]\nSingle\nMinimize cost of electricity\nAppliances\
    \ for comfort have\nfixed times\nDE [332, 334]\nSome appliances cannot be\ndelayed\n\
    GA [335]\nPower balance constraints\nPSO\n[321, 336]\nSurplus\nsolar\npower\n\
    sold\nback to distribution system\nMaintain zero net energy in\nbuilding\nTime\
    \ constraints\nLoad safety factor\nLoad phases of appliances\nfulfill energy requirements\n\
    Comfort needs to be main-\ntained\nPeak to average power ratio\nbalancing\nPSO\
    \ [333]\nSingle\nMinimize\nenergy\nbill\nand\ncost associated with KWH\ncurtailment\n\
    Power\nvalues\nwithin\nlim-\nits, battery charge and dis-\ncharge limits\nTable\
    \ 25. Data setup used for Smart Homes\nData Type\nPapers\nSelf-collected/ Presented/\
    \ Generated\n[322, 319, 323, 324, 325, 326, 327, 329, 305, 338, 330, 320, 334,\
    \ 335, 321, 336]\nGovernment Agency/ other research work\n[322, 323, 337, 327,\
    \ 338, 331, 332, 321, 333]\n67\nTable 26. Optimization in Smart Industry\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nLocation determina-\n\
    tion for sites\nABC [342]\nSingle\nMinimize\ntransportation\nand hub establishment\
    \ cost\nSingle allocation for each de-\nmand node\nA given number of hubs are\n\
    established\nCovering radius constraint\nTime reliability constraint\nGA [343]\n\
    Parallel\nMinimize distribution cost\nand maximize profit\nLoad capacity meets\
    \ needs\nof customers\nA delivery vehicle can only\nbe delivered when it receives\n\
    a task\nCapacity constraints\nRouting for Logistics\nABC [348]\nParallel\nMinimize\
    \ distance travelled,\nCO2 emissions, number of\nvehicles used\nEvery customer\
    \ visited only\nonce\nEvery vehicle visiting a loca-\ntion must leave it too\n\
    Ensure route continuity\nDemands of any route must\nnot exceed capacity\nEdges\
    \ satisfying time win-\ndow constraint are allowed.\nABC [349]\nSingle\nMinimize\
    \ total transporta-\ntion distance\nEach customer served only\nonce\nGA[347]\n\
    Route should start and end\nat the same depot\nServed demand of each vehi-\ncle\
    \ does not exceed capacity\nlimit\nACO [344]\nSingle\nMinimizing total cost\n\
    Each customer served only\nonce\nPSO[345]\nDispatched\nvehicles\nnot\nmore than\
    \ available\nABC [346]\nVehicle routes don’t contain\ndisconnected routes\nCustomer\
    \ demand shouldn’t\nbe larger than vehicle capac-\nity\nABC [351]\nSingle\nMinimize\
    \ travelling time\nVehicle load constraint\nSubtours not allowed\nSpeed, time\
    \ and distance\nMaximum number of vehi-\ncles on a route\nEach customer served\
    \ by one\nvehicle\nVehicle number max limit\nPSO [350]\nParallel\nMinimize fuel\
    \ consumption\nand travel time\nEach customer serviced by\nonly one vehicle\n\
    Continuity in route\nVehicle\nload\nconservation\nbetween nodes,\nFirst\nin\n\
    first\nout\nproper\nwhen traveling time is com-\nputed\nTime taken for customers\
    \ as\nstated,\nMaximum time for servicing\nVehicle capacity constraint\nDepot\
    \ is the first and final\ndestination of each vehicle\n68\nSmart Industry \nLocaƟon\
    \ DeterminaƟon of sites \nRouƟng for LogisƟcs \nObjectives: Minimize\ntransportation,\n\
    establishment and\ndistribution cost, Maximize\nprofit\nConstraints: Number of\n\
    sites need to be met,\ndistance coverage for\nlocations, time limits,\ncapacity,\
    \ demands need to\nbe met\nObjectives: Minimize\ndistance travelled, CO2\nemissions,\
    \ number of\nvehicles, time, fuel, cost\nConstraints: Customer\nserved only once,\
    \ route is\ncontinuous, demand limits,\nvehicle count limits,\nvehicle load limits,\
    \ speed,\ntime and distance limits,\ntime limits\nIoT Usage: Sensing units provide\
    \ information relating to the loads to be\ncollected as well as traffic and other\
    \ information\nFigure 13. Optimization applications in Smart Industry.\n4.7\n\
    Smart Infrastructure\nWithin the infrastructure domain, the most common optimization\
    \ problem is the\narea of health monitoring of structures. Structural Health Monitoring\
    \ (SHM) is a\nnecessary application within the smart infrastructure domain as\
    \ it makes for safe\nusage of different structures of public use.\nThese structures\
    \ can be buildings as\nwell as transport structures such as bridges, tunnels.\
    \ Structural health monitoring\ntypically involves the use of sensors attached\
    \ to a structure at several points that can\ngauge some type of physical variable\
    \ (vibration, strain, acceleration, temperature,\ntilt etc) from the structure.\n\
    Data gathered from these connected sensors is then\nused to determine if any structural\
    \ damage has taken place or not.\nWithin the\ndomain of SHM, optimization algorithms\
    \ find application towards the Optimal Sensor\n69\nTable 27. Data setup for Smart\
    \ Industry\nData Type\nPapers\nSelf-collected / Presented/ Generated\n[342, 343,\
    \ 347, 351]\nGovernment Agency/ other research work\n[348, 349, 344, 346, 351]\n\
    Dataset/ Standard Network\nTest instances in [352] used by [345] and [350]\nPlacement\
    \ (OSP) Problem as illustrated in Figure 14. Figure 14 summarizes the\nobjectives\
    \ used, constraint and the use of IoT.\nSmart Infrastructure \nOpƟmal Sensor Placement\
    \ \nObjectives: Minimize error,\nredundancy \nMaximize sensor coverage,\nconnectivity,\
    \ relaibility\nConstraints: Sensor placement\nlocations limitations, number of\n\
    sensors limited\nIoT usage: The placement of sensors\nespecially is performed\
    \ using IoT\nwhere connected sensors povide the\ndata using which optimization\
    \ is\nperformed\nFigure 14. Optimization applications in Smart Infrastructure.\n\
    For the optimal sensor placement problem, the aim is to determine the best num-\n\
    ber and placement of sensors over a structure so as to reduce the number of sensors\n\
    used as well as improve the measurement process, both these aims result in increased\n\
    reliability of the SHM system as well as potentially lower the cost of the system\n\
    too. The authors in [353, 354, 355, 356, 357] work on the placement of sensors\
    \ for\nstructural health monitoring focusing on improving the effectiveness of\
    \ the deployed\nsystem. In this regard, [353] and [356] use the genetic algorithm\
    \ to solve a multi-\nobjective problem aiming to minimize the measurement error\
    \ and cost. Yang et al.\nin [355] formulate OSP as single objective minimization\
    \ where they aim to reduce\nthe ratio of sensor placement performance to the redundancy\
    \ of information resulting\nfrom each tested placement. Another approach that\
    \ works on the error is presented\nby [354] who use the Particle Swarm Optimization\
    \ to maximize the reconstruction\n70\nTable 28. Optimization in Smart Infrastructure\n\
    Application\nAlgorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\n\
    Sensor placement\nGA [353]\nSingle\nMinimize measurement er-\nror and measurement\
    \ cost\nPSO [354]\nSingle\nMaximize\nreconstruction\naccuracy\nand\nrobustness\n\
    of\ntransfer\nrelationship\nbetween\ndeformation\ndis-\nplacement and surface\
    \ strain\n(formulated as a minimiza-\ntion\nproblem\nfor\nnegated\naccuracy and\
    \ robustness)\nSensor\nplacements\nwithin\npredefined range and angles\nGA [355]\n\
    Single\nMinimize the ratio of sen-\nsor placement performance\nto redundancy information\n\
    Sensor placement is permit-\nted on chosen location\nGA [356]\nSingle\nMinimize\
    \ the MAE between\nthe system and the esti-\nmated response (global er-\nror)\
    \ and minimize the maxi-\nmum difference between the\nsystem and its estimated\
    \ re-\nsponse (local error)\nSensor locations are from a\nset of predefined locations\n\
    DE [357]\nSingle\nMaximize quality of cover-\nage,\nlifetime,\nconnectivity\n\
    uniformity of sensor nodes\nand cluster heads and relia-\nbility\nConstraint on\
    \ the number\nof cluster heads associated\nwith each sensor node and\ncluster\
    \ head\nGA [358]\nSingle\nMinimize cross correlation of\nthe sensing network\n\
    Sensor placement is permit-\nted on chosen location\nTable 29. Data types for\
    \ Smart Infrastructure\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n\
    [353, 354, 355, 356, 358, 358, 359, 360]\naccuracy and robust transfer relationship\
    \ between the deformation and surface strain\nwith different sensor placements.\
    \ It must be noted that the objective function is for-\nmulated as minimization\
    \ of negated accuracy and negated robustness measurement.\nOptimized structural\
    \ health monitoring for aircraft monitoring has been targeted\nin [358]. In their\
    \ setup consisting of vibration sensors, the authors optimize sensor\nplacement\
    \ by minimizing the cross correlation of the vibration waves in the sensing\n\
    network. The most common constraint for sensor placement is restrictions on the\n\
    places where sensors can be placed. This information has been provided in Table\
    \ 28\nand the data setups are presented in 29.\n4.8\nSmart Transportation\nOne\
    \ of the most popular optimization applications within smart cities are within\
    \ the\nsmart transport domain. These include parking system routing, traffic signal\
    \ control\nand scheduling. A summary of the applications, their objectives, constraints\
    \ and the\nrole of IoT is illustrated in Figure 15.\n71\nSmart TransportaƟon \n\
    Traﬃc Signal\nControl \nTraﬃc RouƟng \nParking System\nRouƟng \nRoad Traﬃc\nRouƟng\
    \ \nObjectives: Minimize\ntime delay\nConstraints: Traffic\nvolume constraint,\
    \ traffic\nflow constraint, duration\nof traffic light phases \nIoT usage: For\
    \ parking, IoT nodes indicate to free parking spots from which data is\ngathered\
    \ and sent to the cloud. Connected vehicles are also another source of IoT data\n\
    used for navigation purposes along with data from cellphones. \nObjectives: Minimize\n\
    travel distance, traffic\ncongestion\nConstraints: Roadmap\nto be followed is\
    \ fixed,\nroad connections fixed \nObjectives: Minimize\ntravel time, delay,\n\
    emissions, traffic flow\nConstraints: Road\nconnections are fixed,\nnumber of\
    \ routes are\nfixed \nFigure 15. Optimization applications in Smart Transportation\n\
    Smart transport systems consist of sensors along roads and traffic intersections\n\
    to measure relevant parameters while also providing communication services between\n\
    vehicles and infrastructure. This allows for measurement of the current state\
    \ of roads\nin terms of traffic congestion and usage thereby allowing for the\
    \ use of optimization\ntechniques to improve trip experiences for users and make\
    \ the transportation system\nmore efficient. The authors in [361, 362, 363, 364,\
    \ 365] work on the minimization\nof time (wait and travel) in traffic signal control.\
    \ The aim of such systems is to\nreduce traffic build up on signal intersections.\
    \ Of these, the work in [361, 362] and\n[363] use the artificial bee colony and\
    \ the genetic algorithm respectively for a single\nobjective function of minimizing\
    \ delay time. An interesting approach for this problem\nis presented by Li et\
    \ al. [365] who use a multi objective formulation targeting the\nminimization\
    \ of the average travel time both overall and individually for all vehiclesl.\n\
    Another multi-objective approach in traffic signal control is presented by Chen\
    \ and\nYuan [366] who form a mixed problem of minimizing vehicle emissions and\
    \ travel\ntime together. Korkmaz [367] work on the estimation of delays in traffic\
    \ signals using\na genetic algorithm, they use it to minimize the difference between\
    \ the estimated\n72\nand simulated values.\nTang et al.\n[364] carry out distributed\
    \ optimization in a\nfog and cloud hierarchy.\nFirst, fog nodes optimize phase\
    \ timings within a single\ncycle and if the number of vehicles exceeds a threshold,\
    \ the results are sent to the\ncentral controller to further optimize over different\
    \ cycles so that a traffic jam is\navoided or alleviated. Zhang et al. [368] attempt\
    \ traffic signal optimization using\nmulti objective optimization functions of\
    \ reducing time delay and increasing traffic\ncapacity.\nConstraints used for\
    \ traffic signal control are timing constraints on the\nphase durations, flow\
    \ rate of vehicles and on the travel time.\nTraffic routing is also another important\
    \ aspect in smart transportation. This\ntypically involves the determination of\
    \ the best route to the destination keeping in\nview various criteria such as\
    \ reduction of distance, time, cost etc.\nThe problem\nof traffic routing is addressed\
    \ by the works of [369, 370, 371, 372, 373, 374, 375,\n376, 377, 378, 379]. The\
    \ authors in [369] and [370] use the ant colony optimization\nand genetic algorithm\
    \ to minimize the travel distance in parking system routing.\nThey aim to minimize\
    \ distance traveled by a driver looking to find a free parking\nspot, using the\
    \ algorithm, an optimized route is determined for the parking spot.\nIn, [371,\
    \ 373] and [372] the ant colony optimization algorithm is used to determine\n\
    the best route in a generic traffic scenario where cars can communicate with road\n\
    side units in a VANET architecture. Routing for public transport is performed\
    \ by\n[380] and [375] in a connected vehicle scenario aiming to minimize travel\
    \ time. An\neconomic objective approach to traffic routing is taken by the authors\
    \ of [376, 378]\nand [379] who minimize the total cost of the trip.\nMao [379]\
    \ also include traffic\ncongestion and travel time as well in their computation.\
    \ Hassoune et al. [381] work\non a parking guidance using the ant colony optimization\
    \ algorithm to reduce traffic\ncongestion and minimize distance. Constraints for\
    \ traffic routing are related to the\nroad network allowing travel in specific\
    \ directions, signaling and travel time. Within\nsmart transportation, IoT nodes\
    \ are used to determine occupied parking spaces and\nthis data is used for routing\
    \ applications in parking. Traffic routing is based on vehicle\nto vehicle and\
    \ vehicle to infrastructure communication provided by VANETs within\nthe IoT framework.\
    \ These systems enable cars to exchange data with each other and\nalso with fixed\
    \ infrastructure on the roads. This discussion is also presented in Table\n30\
    \ and the data setups for the covered work are presented in Table 31.\n5\nConclusion\n\
    This chapter provides coverage of the application of five popular computational\
    \ algo-\nrithms in the IoT enabled Smart City. It provides a mapping of the various\
    \ applica-\ntions to the specific smart city domain as well as highlights the\
    \ different formulations\nof the objective function used to solve the considered\
    \ problem. This coverage is pro-\nvided in terms of the number of objectives as\
    \ well as whether the problem was solved\nas a single objective, in a hierarchical\
    \ manner or otherwise. It also highlights the con-\nstraints used by the researchers\
    \ in solving the problem which is an important aspect\nas constraints are governed\
    \ by the application at hand. An overview of the mapping\nof various smart city\
    \ optimization applications derived from this work is provided in\nFigure 16.\n\
    73\nTable 30. Optimization in Smart Transportation\nApplication\nAlgorithm\nSingle/\n\
    Parallel\nproblems\nObjectives\nConstraints\nTraffic signal control\nABC [380]\n\
    Single\nMinimize travel time\nInterval of feasible green\ntime length values\n\
    ABC [374]\nInterval of feasible offset\ntime length values\nConstraints\non\n\
    cycle\nlengths\nABC\n[361, 362]\nSingle\nMinimize time delay\nOnly one active\
    \ stage\nGA [363, 364]\nFlow dynamic constraint\nGA [365]\nParallel\nMinimize\n\
    time\ndelay\nand\nalso achieve traffic network\nequilibrium\nLink volume constraint\n\
    Constraints on duration\nof green/red phases\nOffset phase duration\nMinimize\
    \ average travel\ntime.\nRelationship\nbetween\nroute\nand\nlink\nflows\nneed\
    \ to be maintained\nas defined\nGA [366]\nSingle\nMinimize vehicle emissions\n\
    and travel time for vehicles\nSum of green time of\neach phase is equal to to-\n\
    tal available green time\nGreen time is set by a\nlower bound\nGA [368]\nParallel\n\
    Minimize delay, and exhaust\nemission and maximize traf-\nfic capacity (formulated\
    \ as\nminimization problem)\nCycle length of signals\nhas minimum and max-\nimum\
    \ limits\nTraffic\nRouting\n(Parking System)\nACO [369]\nParallel\nMinimize\n\
    distance\nwith\nbend straightening and turn\nreduction\nBend straightening and\n\
    turn reduction\nACO [381]\nParallel\nReduce\ntraffic\nflow\nand\nshortest\ndistance\n\
    towards\nparking\nGA [370]\nSingle\nMinimize distance\nSpecific prefixed routes\n\
    possible for free parking\nTraffic\nRouting\n(Road Traffic)\nACO\n[371, 373]\n\
    Single\nMinimize distance, minimize\ncongestion\nFollow roadmap\nACO [372]\nSingle\n\
    Maximize flow\nACO [375]\nSingle\nMinimize travel time\nConstraint on relation-\n\
    ship between green time\nlengths cycle length, off-\nset on the network calcu-\n\
    lation\nGA [377]\nInterval of feasible green\ntime length values\nInterval of\
    \ feasible offset\ntime length values\nSpecific road segments\nConnected\nconstraints\n\
    on the values of time\ntaken for vehicles\nDE [376]\nSingle\nMinimize travelling\
    \ cost and\nrental cost\nEach bus has one em-\nployee\nEmployees\ncan\nbe\nas-\n\
    signed when stop is avail-\nable\nBus stop assigned when\nbus is in use\nConstraint\
    \ on distance of\nbus stop from employee\nhome and more\nDE [378]\nSingle\nMinimize\
    \ total cost\nRoad\nnetwork\nconnec-\ntions followed\nSolutions contains cor-\n\
    rect number of routes\nACO [379]\nSingle\nMinimize\ntransit\ntime,\ntravel distance,\n\
    road con-\ngestion and traffic expenses\nVariable\nvalue\ncon-\nstraints\n74\n\
    Table 31. Data types for Smart Transportation\nData Type\nPapers\nSelf-collected\
    \ / Presented/ Generated\n[374, 362, 361, 363, 364, 365, 366, 368, 369, 381, 370,\
    \ 371, 373, 372, 380, 377]\nGovernmentAgency/ other research work\n[361, 365,\
    \ 366, 370, 374, 375, 377, 376, 378, 363]\nSmart\nAgriculture \nIrrigaƟon Water\n\
    Scheduling \nSmart Homes \nHome Energy\nManagement \nSmart City\nServices \nWaste\n\
    Management\nRoute\nOpƟmizaƟon \nSmart Industry \nSmart Grid \nPower\nManagement\
    \ \nPlanning \nSmart\nInfrastructure \nOpƟmal Sensor\nPlacement \nSmart Health\
    \ \nEmergency\nVehicle\nAllocaƟon and\nRelocaƟon \nEmergency\nVehicle RouƟng \n\
    Smart Transport \nTraﬃc Signal\nControl \nTraﬃc RouƟng \nOpƟmizaƟon in Smart CiƟes\
    \ \nRouƟng and\nLocaƟon\nDeterminaƟon\nfor LogisƟcs \nIrrigaƟon Water\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon and\nWater Control \nFigure 16. Optimization applications\
    \ in IoT based Smart Cities.\n75\nCHAPTER V\nCASE STUDY - SMART HEALTH\n1\nIntroduction\n\
    As discussed earlier, IoT finds usage in many different Smart City domains, both\
    \ for\nuse in classification/regression tasks as well as for optimization applications.\
    \ One\nof the most important applications of IoT within Smart Cities is within\
    \ the Smart\nHealth domain wherein IoT devices enable the monitoring of patients\
    \ for different\ndiseases such as heart disease etc. While there are a multitude\
    \ of IoT within Smart\nHealth, in order to develop algorithms on IoT sensor data,\
    \ the case of ambient assisted\nliving was chosen, in particular, this work considers\
    \ the case of fall detection.\n2\nIoT for Fall Detection\nThe United Nations estimates\
    \ that the number of old people (aged 60 and above) will\nbe 2.1 billion by 2050\
    \ and 3.1 billion by 2100 [382] leading to an increased old age\npopulation. With\
    \ people above 65 years suffering the greatest number of fatal falls\namong adults\
    \ aged 60 and over [383] healthcare costs related to fall related injuries\nrun\
    \ in to billions of dollars. These falls can result in injuries of moderate to\
    \ severe\nnature in the people experiencing the falls and may lead to decreased\
    \ mobility [384],\nespecially for the elderly [385]. Furthermore, following the\
    \ initial fall, the likelihood\nof experiencing additional falls increases [386]\
    \ and can lead to mental stress in the\nform of post-fall syndrome [387].\nThe\
    \ Internet of Things has spearheaded the development of cyber-physical systems\n\
    that facilitate the recognition of activities/events being performed by people\
    \ in their\ndaily life. One aspect of this application scenario is fall detection.\
    \ Falls can occur\ndue to a variety of reasons [388] and Fall Detection Systems\
    \ (FDS) are used for\npeople with different of health related ailments such as\
    \ in Parkinsons disease [389],\nepilepsy [390], arthritis, people suffering from\
    \ cardiovascular diseases and various\nneuro-degenerative diseases [391]. In any\
    \ scenario, it is pertinent that when a person\nundergoes a fall, they be provided\
    \ care as quickly as possible. Providing timely care\nafter a fall may improve\
    \ post-fall life quality of a patient. Fall detection Systems can\nplay a vital\
    \ role in contributing to the provision of timely care [389, 392] by alerting\n\
    healthcare professionals. As noted by [393] fall detection systems are necessary\
    \ for\nold people with cognitive impairments who may not be able to get up after\
    \ a fall for\nlong durations of time which may result in pressure sores and other\
    \ complications\nand due to vulnerability to injuries when experiencing a fall,\
    \ it may sometimes result\nin death [394].\n76\nA fall is an unintended and sudden\
    \ change of posture resulting in one resting on\nthe ground or some other lower\
    \ level elevation. The aim of a FDS is to monitor the\nmovement of a person and\
    \ determine when a fall has taken place with the aim to\nalert healthcare personnel\
    \ or other caregivers. Over the years different methodologies\nhave been suggested\
    \ to address this problem, however, before discussing the different\nmethods utilize\
    \ for fall detection purposes, it is important to mention what researchers\nenumerate\
    \ to be the traits of a ’good’ FDS [395].\n2.1\nChallenges/Requirements of a FDS\n\
    The following are the typical typical traits/requirements of a good fall detection\n\
    system.\n2.1.1\nNon-intrusiveness\nAn important requirement in fall detection\
    \ systems is to be non-intrusive. Any FDS\nshould not be an impediment in the\
    \ execution of daily activities of a person as it may\nrestrict movement or inconvenience\
    \ their lifestyle.\n2.1.2\nLow Latency\nAn FDS needs to be able to detect a fall\
    \ with low latency. Latency refers to the time\nduration between the occurring\
    \ of a fall and its detection. FDS need to detect falls\nas quickly as possible\
    \ to ensure that caregivers can be notified right away so that apt\ncare is provided\
    \ to the person. Low latency depends on not only the algorithm being\nused to\
    \ detect falls but also parameters like network speed and reliability. Sensor\
    \ data\ntransmission to the main system might also be included in this calculation\
    \ depending\non the FDS proposed.\n2.1.3\nLow power consumption\nPower consumption\
    \ is an important issue in FDS, especially for ones which are battery\npowered.\
    \ Many FDS are expected to be used by elderly people who might not be\nas regular\
    \ in charging the FDS, therefore FDS should consume as little power as\npossible.\n\
    2.1.4\nAllow mobility\nA FDS should not hamper mobility as it might be preventive\
    \ in adoption of a FDS\ntoo. FDS which require people to remain infront of a camera\
    \ at a certain viewpoint\netc can be difficult to deploy and use.\n2.1.5\nDifferentiate\
    \ between Falls and Activities\nA FDS should have low false positives and false\
    \ negatives. In other words it should\nbe able to confidently detect falls and\
    \ be able to differentiate them from activities of\n77\ndaily living such as walking,\
    \ sitting, jumping, running etc. Any false alarms will result\nin wastage of valuable\
    \ healthcare resources, on the contrary, any false negatives might\ncause the\
    \ patient/person having undergone the fall to not get appropriate medical\ncare\
    \ in time and lead to potential death or trauma.\n2.1.6\nNotify caregivers\nA\
    \ complete fall detection solution should have some mechanism of informing care-\n\
    givers whenever a fall is detected. Typically this is carried out in terms of\
    \ email,\nnotifications via some system or messages. Moreover, this process should\
    \ be quick so\nas to ensure the dispatch of any needed help as quickly as possible.\n\
    2.1.7\nTrack history\nA complete fall detection solution should be able to provide\
    \ the history about a\npatient in terms of falls that a person may have suffered\
    \ from as this will help monitor\nthe patients health and determine likelihood\
    \ to suffer from falls in the future. FDS\nmay sometimes also look at other biological\
    \ parameters during falls so as to help\ninvestigate the causes of falls using\
    \ the conditions prevalent at that time. Biological\nparameters that could be\
    \ measured include heart rate, perhaps an ECG or others as\ndeemed necessary based\
    \ on a patients history.\n2.2\nTypes of Fall Detection Systems\nFall detection\
    \ systems can be categorized in to three types based on the sensing\nmechanisms\
    \ used and their placement. These are Ambient Sensor based systems,\nVisual based\
    \ systems and Wearable Sensor based systems.\n2.2.1\nAmbient Sensor based systems\n\
    Ambient sensor based systems are also sometimes referred to as environmental sensor\n\
    based systems since these types of FDS rely on the use of a number of wirelessly\n\
    connected ambient sensors placed in a given area for the detection of falls. These\n\
    FDS make use of various sensors including Passive InfraRed (PIR) Sensors [396],\n\
    Acoustic sensors such as microphones, thermal sensors as well as sensors measuring\n\
    Wi-Fi signal strength etc. For e.g., the authors in [397] develop a fall detection\
    \ system\nbased on two PIR sensors and a vibration sensor to detect vibrations\
    \ on the floor\nwhen a person falls down. Using the PIR sensor to detect a persons\
    \ motion. feature\nextraction is performed on vibration measurements and an SVM\
    \ classifier is used to\ndetermine whether a fall has taken place or not. Another\
    \ approach presented in [398]\nutilize sounds in a home to determine falls in\
    \ the elderly. They do this by extracting\nfeatures in sound signals and like\
    \ [397] use a Support Vector Machine classifier to\ndetermine falls. The authors\
    \ in [399] make use of Wi-Fi channel state information\nfor fall detection. They\
    \ achieve this by feature extraction in the frequency domain\nfollowed by an SVM\
    \ classifier.\n78\nAmbient fall detection systems offer the advantage of not requiring\
    \ people to wear\nanything on their bodies and are thus nonrestrictive in that\
    \ sense. However, such\nsystems are prone to suffer high false positives due to\
    \ the large number of external\nfactors such as other heat emitting devices, multiple\
    \ people moving around at the\nsame time etc. Another issue that comes with ambient\
    \ fall detection systems is that\ndeployment could be cumbersome to cover a large\
    \ space, therefore they are typically\ndeployable in small places such as a home\
    \ or a small building but are very difficult\nto use outdoors due to the nature\
    \ of the setting as well as the possible sources of\nexternal interference.\n\
    2.2.2\nVision based systems\nVision based systems rely on the processing of video\
    \ frames or other visual infor-\nmation such as depth and thermal images or their\
    \ combination [400] to detect falls.\nTypically, the recorded data is sent to\
    \ a server or central computer which provides\nprocessing capabilities. Moreover,\
    \ recently, with the use of deep learning algorithms,\nsuch systems have found\
    \ to provide improved performance. For e.g. [401] use Convo-\nlution Neural Networks\
    \ on velocity information in video frames. Another approach\nthat uses CNNs is\
    \ given in [402] who model human motion from video frames using\nCNNs and then\
    \ use a logistic regression classifier to determine falls. Other approaches\n\
    with CNNs include the works in [403] and [404], both of which achieve very high\
    \ de-\ntection accuracy. Another DL network which has been useful in fall detection\
    \ systems\nbased on cameras is Long Short Term Machine, a recent example of that\
    \ is the use of\na CNN + LSTM combination on 360 degree video recordings of an\
    \ indoor facility to\ndetermine falls. The LSTM allows for capturing the changing\
    \ characteristics between\nvideo frames to provide fall recognition.\nEventhough\
    \ vision based FDS have been able to provide improved fall detection\nperformance\
    \ recently, like ambient sensor based systems, these systems suffer from\nsome\
    \ drawbacks. They are affected negatively in terms of performance and deploya-\n\
    bility from external factors such as occlusion, restricted mobility of the people\
    \ being\nmonitored, typically usable in environments over a small area, have high\
    \ computa-\ntional costs and are expensive. One other issue with vision based\
    \ systems is privacy,\nvision systems which use normal cameras pose risk of violation\
    \ to the privacy of peo-\nple being captured on video. The question of privacy\
    \ can be circumvented by the\nuse of depth cameras for e.g. a kinect [405, 406]\
    \ or using heatmaps using infrared\ncameras/sensors [407].\n2.2.3\nWearable Sensor\
    \ based systems\nWearable fall detection systems involve the use of a device attached\
    \ to the subject.\nThe wearable device monitors user activity by means of sensors\
    \ and can determine\nwhen a fall has occurred. Information about the fall is then\
    \ conveyed to a doctor or\nother medical professionals. Various types of sensors\
    \ can be used in these systems\nincluding inertial measurement sensors such as\
    \ accelerometers, gyroscopes, magne-\ntometers [408] or health sensors such as\
    \ ECGs, oxygen level and pulse rate sensors\n79\nas well. The devices that contain\
    \ these sensors can be worn on the hand, wrist, arm,\nchest, waist, legs, thigh\
    \ or even put inside shoes and are usually battery powered.\nWearable fall detection\
    \ systems have the advantage that they do not restrict move-\nment of the person\
    \ using them and consume less power than the other two approaches,\nhowever, a\
    \ disadvantage to this is the need to ’carry’ the device all the time. Another\n\
    disadvantage is the need to charge the device regularly which might be difficult\
    \ to do\nfor older people, a way this has been addressed in some approaches is\
    \ to make use of\nenergy harvesting [409].\n2.3\nTypes of Wearable FDS\nThere\
    \ are two types of wearable systems in use for fall detection purposes.\n2.3.1\n\
    Threshold based systems\nThe first of type of wearable FDS are threshold-based\
    \ fall detection systems where\nauthors have used various thresholding techniques\
    \ on sensor values measuring motion,\nparticularly the accelerometer. The major\
    \ advantage of threshold based fall detection\nsystems is their relative low computational\
    \ cost and use of sensor fusion techniques\nto improve fall detection accuracy\
    \ , however, the big disadvantage of such systems is\nthat threshold based systems\
    \ do not generalize well across subjects since people may\nhave different gaits,\
    \ this is especially true for people of different ages. As a result,\nthreshold\
    \ based FDS may suffer from having many false positives as well as false\nnegatives\
    \ since the FDS needs to differentiate between activities of daily living and\n\
    falls, which many times may appear to be fairly similar to each other in terms\
    \ of\nsensor readings.\n2.3.2\nMachine/Deep Learning based systems\nSince threshold-based\
    \ systems are rigid in terms of their usage, ML/DL methods\nprovide a flexible\
    \ method for fall detection. ML/DL algorithms can learn complex\npatterns from\
    \ sensor data which indicate to a fall while monitoring a persons activities\n\
    and therefore are useful in fall detection systems. As opposed to threshold based\n\
    systems, their generalizing capability allows them to be used across subjects.\n\
    A\ntypical ML framework for fall detection will involve data acquisition, prepossessing,\n\
    feature extraction and then usage of a suitable ML algorithm to make the inference\n\
    for a fall or no fall. A deep learning framework based FDS might have a similar\n\
    methodology, but depending on the DL algorithm used, feature extraction might\
    \ be\nomitted.\n2.4\nSensors used in Wearable FDS\nAs mentioned before, the sensors\
    \ used in wearable FDS are accelerometers, gyroscope,\nmagnetometer, ECG, Pulse\
    \ Rate and oxygen saturation levels. In this section, we will\ndiscuss briefly\
    \ the role of these sensors in wearable FDS and parameters of interest\nwhen using\
    \ them in FDS.\n80\n2.4.1\nAccelerometers\nAccelerometers, together with gyroscopes\
    \ are the most widely used sensors in wear-\nable FDS. One reason for this is\
    \ that both these sensors are typically present in\nsmartphones, which have been\
    \ used to either collect data for and/or deploy fall de-\ntection systems. An\
    \ accelerometer provides a measure of absolute acceleration and\nare used to detect\
    \ vibrations, force in a variety of applications involving monitoring\nof machines,\
    \ planes, civil architectures and more. In an FDS, an accelerometer is\nable to\
    \ capture the movement patterns of individuals which can be used to determine\n\
    falls.\n2.4.2\nGryroscope\nGyroscopes are used to measure tilt/orientation.\n\
    Gyroscopes find applications in\nvarious areas where orientation measurement is\
    \ required, for e.g. in airplanes and\nsubmarines where they are used in stabilization\
    \ systems, smartphones and game re-\nmotes for interactive gameplay, among other\
    \ things. Since orientation is an important\ncharacteristic of a fall, gyroscopes\
    \ are one of the most widely used sensors in FDS\nalong with acceleratorometers.\n\
    2.4.3\nMagnetometer\nA magnetometer is a device that measures the direction and\
    \ strength of magnetism\nrelative to the earths magnetic north. In addition to\
    \ other applications, magnetome-\nters are used in aircrafts for direction referencing.\
    \ These sensors are not very popular\nin FDS but have been proposed in some approaches\
    \ [410, 411] to be used for fall\ndetection in addition to accelerometers and/or\
    \ gyroscopes.\n2.4.4\nVarious Medical Sensors\nWearable fall detection systems\
    \ may also incorporate different types of medical sen-\nsors such as ElectroCardioGraphs,\
    \ ElectroMyoGraphs, Pulse Rate or Oxygen Level\nmeasurement in the FDS solution.\
    \ Even though there have been some approaches\nwhich have used medical sensors\
    \ exclusively for fall detection (such as EMG[412]),\nhowever, like magnetometers,\
    \ these sensors are usually used along with accelerome-\nters and/or gyroscopes.\
    \ Adding these sensors to fall detection systems has the added\nadvantage of assessing\
    \ falls from a health standpoint too as this information can be\nused to determine\
    \ risk of falls [413].\n2.5\nDesign considerations for Wearable FDS\nWearable\
    \ fall detection systems utilize sensor measurements to ascertain the occur-\n\
    rence of a fall. Since wearable FDS units are always attached to a persons body,\
    \ they\ncontinuously provide measurements of a persons movements and activities.\
    \ In order\nto use these measurements in a FDS, there are some design considerations\
    \ involved.\nWe discuss them in this section.\n81\n2.5.1\nSampling frequency\n\
    The sampling frequency dictates the number of sensor measurements recorded per\n\
    second. The sampling frequency used in an FDS should be high enough to capture\n\
    fall motion but not too high so as to increase data processing, storage requirements\n\
    as well as allow for energy efficient operation. In fact, depending on the position\n\
    of the sensors, significant reductions can be made in the sampling frequency used\n\
    for sensors with little or no change in performance as demonstrated by [414].\
    \ Such\nreductions could result in low power consumption by the wearable module\
    \ thereby\nenabling longevity of operation.\n2.5.2\nWindowing\nSince wearable\
    \ fall detection systems provide a continuous stream of sensor data, the\ndata\
    \ needs to be windowed for fall detection to be performed. Windowing refers to\
    \ the\nextraction of a subset of the sensor data stream in a sliding manner or\
    \ otherwise and\nis typically specified in terms of time duration for its size.\
    \ It is typical for wearable\nFDS designers to test different window sizes for\
    \ their fall detection algorithms. The\nsize of the window used would dictate\
    \ memory and computational requirements of\nthe unit used for deploying the FDS\
    \ system. Another important factor in windowing\nsensor signals is whether overlapping\
    \ is used during the windowing process or not.\nThis might be important to allow\
    \ for smooth transitions between different windows.\n2.5.3\nFeature Extraction\n\
    Feature extraction is the process of determining quantities from data which charac-\n\
    terizes it for a desired task appropriately. Feature extraction not only aims\
    \ to capture\nimportant aspects of the data being worked on but also to present\
    \ its content in a\nreduced size, thereby, making use of the data easier. Feature\
    \ extraction is a typ-\nical step of the a signal processing and machine learning\
    \ workflow and follows the\nwindowing step. There are different types of features\
    \ which have been computed\nfor fall detection applications, common feature computations\
    \ include the determina-\ntion of time domain features, frequency domain features,\
    \ statistical features etc. or\nsome combination from sensor data in FDS. Feature\
    \ extraction is followed by either a\nthresholding algorithm to sensor values\
    \ or a machine/deep learning model. For deep\nlearning, there have been some end\
    \ to end deep learning approaches which skip the\nstep of manual feature extraction.\
    \ In such approaches, deep learning networks such\nas CNN may be used to extract\
    \ features followed by other networks such as LSTM\nto determine falls, an example\
    \ is proposed in [415].\n2.6\nLiterature Review\nAs discussed previously, wearable\
    \ fall detection systems present several advantages\nwhen used for fall detection\
    \ purposes such as non-intrusiveness, ease of mobility, small\nsize of deployment,\
    \ low cost and that many implementations are typically standalone\nsystems. This\
    \ added with the fact that sensors and other components which are used\n82\nin\
    \ such systems have been becoming cheaper and cheaper to produce has resulted\
    \ in\na lot of interest in the development of wearable FDS by researchers and\
    \ technologists\nalike. Therefore, wearable FDS methodologies have gained considerable\
    \ interest in\nfall detection research. We discuss some of the popular methodologies\
    \ proposed in\nthis regard.\nThe authors in Mrozek et al. [416] present a complete\
    \ design of a wearable fall\ndetection system for an Internet of Things scenario.\
    \ They conduct two experiments\nwith their system, in one experiment, data is\
    \ collected from a gyroscope and an\naccelerometer and sent to the cloud for fall\
    \ detection (as a web service) while in\nthe second experiment, fall detection\
    \ is performed on the edge node (smart phone).\nThrough their experiments they\
    \ conclude that performing fall detection on the edge\nnode results in less network\
    \ traffic and storage requirements for the cloud. Algo-\nrithmically speaking,\
    \ they extract 3 second overlapping windows from measurements\nof both sensors,\
    \ perform feature extraction and pass it on to a boosted decision tree\nclassifier\
    \ for determining whether a fall has taken place or not. Moreover, the boosted\n\
    decision tree classifier was trained using the SisFall [417] dataset. Another\
    \ IoT based\nsystem is proposed by Marquez et al. [418] who develop a fall detection\
    \ system for\nIoT on the edge. They first gather data from an accelerometer and\
    \ a gyroscope placed\non the waist of multiple subjects and train a support vector\
    \ machine classifier on a\ncombination of raw sensor values and its standard deviation.\
    \ They are able to deploy\ntheir system successfully and achieve satisfactory\
    \ results. Moreover, feature selection\nis also performed before the classification\
    \ stage. A fog based fall detection model has\nbeen proposed by Sarabia-J’acome\
    \ et al. [419] who utilize a Long Short Term Memory\nRecurrent Neural Network\
    \ in their method. Edge nodes collect Inertial Measurement\nUnit (IMU) measurements\
    \ and relay them to a fog node which processes the data to\ndetermine if a fall\
    \ has taken place or not. One motivation for them to develop RNN\nmodels over\
    \ a Convolutional Neural Network one is the requirement of less param-\neters\
    \ and thus less computational requirements. Their final model consists of a 1D\n\
    CNN layer followed by two LSTM layers and a fully connected layer for classification\n\
    and is trained using raw data (window of 15s) from the SisFall dataset.\nZurbuchen\
    \ et al. in [420] provide a comparison of various machine learning al-\ngorithms\
    \ for fall detection while using data from the SisFall dataset. They perform\n\
    experiments using Decision Trees, Random Forest Classifier, Gradient Boosting\
    \ tree,\nK-Nearest Neighbor and Support Vector Machines. Segments of 10 seconds\
    \ are ex-\ntracted from the trials in the SisFall dataset and various time and\
    \ frequency domain\nfeatures are computed for those segments. These are then passed\
    \ on to the classifiers.\nThrough their experiments, they find that Random Forest\
    \ and Gradient Boosting\ntrees perform the best among the considered methods.\
    \ Another comparison of var-\nious ML algorithms is provided by Chelli and P¨atzold\
    \ in [421] who compare the\nperformance of a number of machine learning algorithms\
    \ on two datasets, the Cogent\nLabs dataset [422] and the one provided in [423].\
    \ The algorithms they consider are\nan artificial neural network, K-NN, an ensemble\
    \ bagged tree (EBT) and Quadratic\nSupport Vector Machine (QSVM). They compute\
    \ several time and frequency domain\nfeatures from accelerometer and gyroscope\
    \ signals and pass them on to the classi-\nfiers. Their best performing classifiers\
    \ were QSVM and EBT. Kerdjidj et al. in [424]\n83\nuse compressive sensing to\
    \ explore the use of different modalities for fall detection\npurposes. The performance\
    \ of accelerometer only and an accelerometer - gyroscope\nsensor combination in\
    \ a fall detection scenario is compared. A Shimmer device [425]\nis used to capture\
    \ data from 17 volunteers asked to perform activities of daily living\nas well\
    \ as fall like movements. They first extract segments of length 2.56 seconds\n\
    from their recordings before performing feature extraction and passing it on to\
    \ four\ndifferent machine learning classifiers, K-Nearest Neighbor, Support Vector\
    \ Machines,\nDecision Trees and an Ensemble Classifier (EC). They conduct two\
    \ such experiments,\none with compressive sensing and the other without. Their\
    \ results indicate that the\nEC classifier and SVM perform the best with the help\
    \ of compressive sensing included\nin the pipeline. A ’transfer learning’ approach\
    \ towards fall detection is provided by\nFanez et al. in [426] and they test it\
    \ on the UMAFall [427] dataset and the FallOVI\ndataset (created by them). Using\
    \ a finite state machine which captures windows\nof accelerometer measurements\
    \ based on peak values, the authors convert the win-\ndowed segments into string\
    \ representations using symbolic aggregate approximation\n(SAX) [428]. During\
    \ training each user performs normal ADLs and falls for a short\nperiod of time.\
    \ Peak values are determined from sensor measurements and used to\ncreate bag\
    \ of words using SAX. After this, normal operation of the system starts\nand information\
    \ retrieval (term frequency - inverse term frequency) values are used\nto determine\
    \ what label to give to new SAX words derived from sensor values. If a\ndetermined\
    \ word is not similar (using Manhattan distance) to any word in the bag of\nwords\
    \ (K-NN clustering is used to group similar words), a fall event is suggested\
    \ to\nhave occurred. ’Transfer learning’ involves the use of clusters formed by\
    \ other users\n(performing activities only) as the starting point of the training.\
    \ Their experiment\ncompared an SVM classifier with their information retrieval\
    \ based scheme. They are\nable to detect falls all the time with the UMAfall dataset\
    \ but have a high number\nof false positives for the FallOVI dataset. An noticeable\
    \ aspect of this approach is\nthe use of clustering and ’feature extraction’ as\
    \ strings. In Giuffrida et al. [429]\nthe authors use data from the SisFall dataset\
    \ and an SVM classifier to differentiate\nbetween falls and no-fall samples. They\
    \ extract slices (of 1 second) from the SisFall\ntrials and label each slice as\
    \ containing a fall or not. A number of features were then\ncomputed for each\
    \ slice before feature selection was performed and an SVM classifier\nwas trained\
    \ to determine the output class.\nDeep Learning methods have also been widely\
    \ used for fall detection purposes.\nCasilari et al. in [430] explore the contribution\
    \ of the gyroscope sensor for use in\ncombined accelerometer-gyroscope based fall\
    \ detection systems.\nTo do this, they\nmake use of measurements from the SisFall\
    \ dataset, extract observation windows of\n5 seconds around peaks of accelerometer\
    \ sensor signal values over a trace and pass\nthem on to a Convolutional Neural\
    \ Network with four convolutional layers, three\nmax pooling layers followed by\
    \ one fully connected layer for classification. Training is\nperformed in two\
    \ different sets of experiments, one including gyroscope data and the\nother without\
    \ it. They note that the results they get while using only accelerometer\nsignal\
    \ measurements are better than that when using data from both sensors. A\nCNN\
    \ is used for fall detection purposes by Santos et al. in [431] from accelerometer\n\
    measurements. Their network consists of six convolutional layers, two max pooling\n\
    84\nlayers in between followed by a fully connected layer for classification.\n\
    They use\ndata from the URFD dataset [432] and the Smart Watch and Notch datset\
    \ [433] in\ntheir experiments. They note that their model performs best when they\
    \ use data\naugmentation for both the datasets. However, this was achieved by\
    \ two different\nvariants of the same model. This highlights the point of a single\
    \ model not necessarily\nperforming well on all datasets. Another interesting\
    \ aspect of their work is the use of\nthe Mathews Correlation Coefficient to evaluate\
    \ performance of their algorithms. A\nmodified AlexNet [434] has been used in\
    \ [435] by Alarifi et. al. They collect tri-axial\ndata from inertial measurement\
    \ sensors consisting of accelerometer, gyroscope and\nmagnetometer at six different\
    \ positions on a subjects body. A total of 16 activities of\ndaily living and\
    \ 20 falls were recorded by them. Feature extraction is then performed\nin terms\
    \ of various statistical measurements as well as frequency analysis. This is\n\
    followed by principal component analysis and then passed on to the classification\n\
    stage consisting of an optimized AlexNet ConvNet. Waheed et. al. in [436] develop\n\
    a FDS using a Bi-Directional Long Short-Term Memory (Bi-LSTM) network. They\n\
    consider the binary case of fall and no fall and perform experiments using the\
    \ SisFall\ndataset as well as the UP-Fall dataset [437]. Their network consists\
    \ of eight layers\nin total. Two Bi-LSTM layers and two fully connected layers\
    \ with dropouts being\nused for regularization. Training is performed with creating\
    \ missing values in the\ndata to introduce noise tolerancy.\nCasiliri et al.\n\
    in [438] provide a performance\ncomparison for a CNN network on multiple public\
    \ fall detection datasets. The aim\nof their work is to test the cross-application\
    \ of a similar CNN network trained on\ndifferent datasets. They set their experiments\
    \ up by training a four layer CNN on\neach dataset separately for fall detection\
    \ on 14 datasets (using similar positions of\nsensor placement) on windows of\
    \ 5 seconds for accelerometer signals. Their results\nindicate a very good performance\
    \ of the network for the SisFall dataset, however, it\ndoesn’t perform very well\
    \ for most of the other datasets, in some cases, performing\nless than random\
    \ chance, which is quite surprising. Their experiments do however,\nhighlight\
    \ an issue with the well accepted notion that an algorithm developed on some\n\
    benchmark dataset will necessarily work similarly well with other datasets.\n\
    The\nauthors suggest that the erratic performance of their method could be due\
    \ to the\ndifference in the nature of the data in terms of sampling frequency\
    \ used, range of\nthe sensor and the varying type of movements. Another cross-dataset\
    \ approach for\nfall detection has been proposed in [439] where the authors use\
    \ a combination of a\nCNN and Long Short Term Memory network to extract features\
    \ followed by a K-\nNearest Neighbor classifer to detect falls as well as identify\
    \ the subjects within four\nfall datasets, DFNAPAS [440], SisFall, UniMiB-SHAR\
    \ [441] and ASLH [442]. The\nnetwork is trained using the DFNAPAS dataset, before\
    \ training the network however,\ndata augmentation is carried out for the fall\
    \ class. Their best results are achieved\nfor a value of K = 3 and they achieve\
    \ good results for all experiments. They observe\nthat using a deep learning architecture\
    \ for feature extraction purposes along with a\nmachine learning classifier performs\
    \ better than a using a fully connected layer at the\nclassification stage.\n\
    Post fall intelligence is an important research area in the field of fall detection\n\
    as it can be useful in determining various post fall injuries [443] and serve\
    \ as an\n85\nintelligence parameter [444] for doctors. Jung et al. in [445] also\
    \ target detection\nof pre-impact falls for wearable airbag deployment. Their\
    \ method involves the ap-\nplication of a threshold on determined features from\
    \ accelerometer and gyroscope\nmeasurement measurements. The thresholds are then\
    \ applied to a dataset collected\nby them and also on the SisFall dataset. The\
    \ threshold is determined by performing\na grid search on the extracted features\
    \ from their dataset to maximize specificity and\nsensitivity. They do note that\
    \ some activties like sitting down quickly on a chair or a\nmattress triggered\
    \ false positives. Moreover, when applied to SisFall, their methods\nperformance\
    \ is not as high as achieved by methods based on ML/DL. Koo et. al.\n[446] present\
    \ experiments for post fall detection from a combination of self collected\ndata\
    \ and the SisFall dataset. They conduct tests using sliding windows as well as\
    \ dis-\ncrete windows from these signals and compute statistical features from\
    \ them. After\nfeature extraction, two different classifiers, the artificial neural\
    \ network and support\nvector machine are tested with the computed features as\
    \ well as raw sensor values.\nThey find that both ANN and SVM are suitable for\
    \ use in post fall detection sce-\nnarios. Another approach looking at the different\
    \ phases of a fall has been presented\nin [447] where Hsieh et. al. use accelerometer\
    \ sensor data to differentiate between\nfive phases of a fall, pre-fall, free-fall,\
    \ impact, resting and recovery and the initial\nand end static phases. To do this,\
    \ they compute various time domain and statistical\nfeatures and test five classifiers,\
    \ SVM, K-Nearest Neighbors, Naive Bayes, Decision\nTrees and Adaptive Boosting\
    \ (AdaBoost). For their experimental setup, the best\nresults were achieved using\
    \ the K-NN classifier. In Musci et al. [448], the authors\npropose a RNN based\
    \ method to differentiate between falls, pre-impact falls (state\nwhere a person\
    \ is in a dangerous state of transition which may result in a falls) and\nnormal\
    \ activities. Their motivation for including preimpact falls is to enable timely\n\
    deployment of a fall protection system. First, they label data from the SisFall\
    \ dataset\nto form three classes. They then extract windows of duration 1.28 seconds\
    \ with an\noverlap of 50% from the sensor signals and pass them on to their network\
    \ which\nconsists of two fully connected layers and two-layer LSTM layers. Moreover,\
    \ due to\nan imbalanced training set, they define a new balancing loss function.\
    \ Their method\nresults in fall detection good results for the three classes considered.\
    \ A CNN-LSTM\napproach has been proposed in [449] by Yu et al. for detection of\
    \ pre-impact fall and\nfalls in the SisFall dataset. They provide a comparison\
    \ of standalone CNN, LSTM\nand a combined CNN-LSTM architecture for this task\
    \ and also implement them on\na Jetson Nano. They define a pre-impact fall as\
    \ the time interval where a subject\ntransitions from a controlled state to a\
    \ state which may lead to a fall. First, they\nlabel data in the SisFall dataset\
    \ as described in [448] to form a three class problem.\nThey achieved their best\
    \ results for their CNN+LSTM model having four CNN layers\nfollowed by two LSTM\
    \ layers and a fully connected layer for classification. Their ap-\nproach highlights\
    \ the combined capability of CNN-LSTM for feature extraction. An\naspect of fall\
    \ intelligence is direction, in [450] Lee et al. use the velocity vector from\n\
    the acceleration sensor in a smartphone for fall detection with direction and\
    \ then\nlater on in [451], they use the standard deviation of the accemerometer\
    \ and gyro-\nscope sensor measurements from a smart phone to determine falls and\
    \ fall direction.\nThey perform a small experiment and are able to differentiate\
    \ between left, right,\n86\nfront and backward falls. More work on fall detection\
    \ with direction was performed\nby the authors in [452] who use an accelerometer\
    \ and gyroscope combination along\nwith a kalman filter for tilt estimation. Fall\
    \ detection is then performed using an\nSVM classifier. Falls with direction detection\
    \ has been attempted in [453, 454] by\nthe same authors. They collect accelerometer\
    \ data from various subjects and extract\nthree features from the recordings for\
    \ each axis, the mean, standard deviation and\nprincipal components (using Principal\
    \ Component Analysis). These are then passed\non to a SVM classifier to differentiate\
    \ between a forward, backward, left and right\nfall and ADLs.\nWhile direction\
    \ aware fall detection is an important determination in terms of post\nfall intelligence,\
    \ fall detection with severity is necessary since it could help provide\nindications\
    \ to falls with immediate recovery or otherwise, as falls without immediate\n\
    recovery would be more detrimental to health than a fall with immediate recovery\
    \ as\nhas been suggested in [455]. In [456] the authors attempt to classify between\
    \ different\nfalls (direction: forward, backward, right, left and intensity: hard,\
    \ soft [fall on knees\nfirst, then on floor]) and five different ADLs using accelerometer\
    \ data. They collected\ndata for their experiments using a triaxial accelerometer\
    \ mounted on the chest. Fea-\nture extraction consists of first concatenating\
    \ acceleration values in each axis and\nthen using a Debauchies-2 level-3 wavelet\
    \ which are then sent to the classification\nstage. In the classification stage\
    \ five different classifiers, an ANN, a Radial Basis\nFunction (RBF) Network,\
    \ Probabilistic Principal Component Analysis (PPCA) and\nLinear Discriminant Analysis\
    \ (LDA) are used through a voting machine to determine\nfalls. A voting machine\
    \ (VM) involves multiple classifiers giving a vote towards any of\nthe multiple\
    \ classes and the sum of the vote is compared against a vote threshold to\ndetermine\
    \ the event that has taken place. In their work, the authors train individual\n\
    VMs for all the activity and fall types in their dataset by structuring them all\
    \ in par-\nallel and adding a comparator function at the end of the pipeline.\
    \ Moreover, a K-NN\nmulticlass classifier also feeds in to the comparator and\
    \ is trained while training of\nthe other classifier, it is provided the true\
    \ value of the activity being input to the\nclassification stage. The authors\
    \ show that their dataset works very well. A valuable\ninsight about their work\
    \ is the ensembling mechanism the authors have employed to\ndetermine fall directions.\
    \ In [457], Hussain et al. propose a fall detection system that\ncan first determine\
    \ falls and then the type of fall using data from the SisFall dataset.\nThey accomplish\
    \ this in a hierarchical setup where their system first considers fall\ndetection\
    \ as a binary problem, whether a fall has taken place or not, and if a fall\n\
    has been detected, it classifies between the various falls in the dataset. Their\
    \ system\nis designed to work with 10 second non-overlapping windows of accelerometer\
    \ and\ngyroscope signals. Data from each record is first low pass filtered before\
    \ two different\ntypes of feature sets, consisting of various time domain and\
    \ statistical features, are\ncomputed on the data. This is then followed by the\
    \ machine learning stage where\nthree different classifiers are tested, K-NN,\
    \ SVM and RFC. In the fall detection stage,\nstatistical features are computed\
    \ from ADL and fall signals and sent to the three clas-\nsifiers for the preliminary\
    \ binary classification. After a fall has been determined to\nhave happened, numerous\
    \ other statistical and time domain features are then com-\nputed on the data\
    \ before being sent to the next stage to determine the type of fall\n87\nactivity\
    \ taking place. In their experiments, the authors find that K-NN is most effec-\n\
    tive in differentiating between falls and ADLs where as RFC performs the best\
    \ when\nthe different fall activities need to be determined. This work highlights\
    \ the usefulness\nof a hierarchical approach towards non-binary fall detection.\
    \ One proposed method\nto perform combined activity recognition and fall detection\
    \ has been presented in\n[458]. In this, Li et. al. use multi-modal sensor fusion\
    \ and a Bi-LSTM classification\nnetwork to differentiate between five activities\
    \ of daily living and a fall. The sensors\nthey use are an inertial sensor placed\
    \ on the wrist, waist and ankle as well as a radar\nsensor. After pre-processing\
    \ both the inertial measurement and radar signals, various\nstatistical and moment\
    \ computations were performed to be used as features. These\nwere passed on to\
    \ the multilayer Bi-LSTM network after feature selection to deter-\nmine the output\
    \ class. One thing to note is that both both [458] and [421] consider\nfall as\
    \ a single category rather than considering falls as a detailed problem (direction\n\
    and/or severity) in itself. More recent work by We et al. [459] also considers\
    \ ac-\ntivity recognition and fall detection together. They use inertial measurement\
    \ sensor\ndata from two datasets, the MobiAct dataset [460] and the SmartFall\
    \ dataset [433].\nThe MobiAct dataset contains data from four falls and nine activities\
    \ of daily living\nwhereas the SmartFall dataset has non-fall and fall recordings.\
    \ In their experimenta-\ntion, they compare the performance of different machine\
    \ learning models and several\ndeep learning models, including a CNN, LSTM, CNN-LSTM\
    \ combination and Gated\nRecurrent Units. The machine learning models are trained\
    \ by computing time and\nfrequency domain features whereas the deep learning models\
    \ are trained using raw\nsensor data. They find that the GRU designed by them\
    \ consisting of two GRU units\nfollowed by a softmax classification layer is the\
    \ best performing model. Another deep\nlearning approach utilizing sequential\
    \ modeling for a fall detection system that also\nconsiders ADLs has been presented\
    \ by Seng¨ul et al. [461]. They collect their own\ndata for two types of falls\
    \ and four activities of daily living. After data augmentation\non the minority\
    \ classes, they use a Bi-LSTM for classification. Le et al. [462] propose\na non-binary\
    \ fall detection scheme utilizing a collection of time, frequency frequency\n\
    domain features in addition to the three Hjorth parameters of activity, mobility\
    \ and\ncomplexity. They use data from two datasets, the MobiAct dataset and the\
    \ UP-Fall\ndataset. They are able to achieve good results on both datasets using\
    \ all three feature\ntypes with a random forest classifier.\nThe use of attention\
    \ based models has also been finding increasing usage in fall\ndetection research.\
    \ Yhdego [463] use an attention model to perform binary fall de-\ntection. The\
    \ fall dataset is collected by them and after windowing, the authors use\ntime2vec\
    \ positional encoding on the data. Their network consists of three attention\n\
    blocks each consisting of multiheaded self attention followed by normalization\
    \ and a\nfully connected network. After the attention blocks follow two fully\
    \ connected layers.\nThey find that their network incorporating attention performs\
    \ well in differentiating\nbetween fall and non-fall samples. Another interesting\
    \ approach using attention is\npresented by Liu et al. [464]. Inorder to apply\
    \ attention on both temporal (step wise)\nand spatial (channel wise) aspects of\
    \ the signals, a gated scheme is suggested. A fully\nconnected layer is used to\
    \ determine the embeddings before positional information is\nadded to the data.\
    \ Positional encoding is only used for stepwise attention as channel\n88\nwise\
    \ positions are not useful. Self attention is performed in the step-wise part\
    \ of the\nnetwork and is carried out for the individual channels in a pairwise\
    \ fashion across all\ntime steps while the channel wise attention is performed\
    \ across the different channels\nacross all time-steps. The outputs of these two\
    \ units are combined through a fully\nconnected network which weighs them before\
    \ concatenation and classification.\n2.7\nFall detection Datasets\nThere are several\
    \ datasets published for use in algorithm development for fall detec-\ntion as\
    \ has been noted in [438]. Of these, for this case study, we choose two datasets,\n\
    these are the SisFall and the K-Fall dataset. The SisFall [417] dataset is chosen\
    \ as\nit contains recordings of elderly people which are most at risk from injury\
    \ due to\nfalls and therefore should provide a good representation of activities\
    \ of the elderly. It\nshould be noted that its one of the most used dataset for\
    \ fall detection purposes [438].\nThe other dataset used is the K-Fall [465] dataset.\
    \ It was released on the pattern of\nthe SisFall dataset and includes more activities\
    \ compared to SisFall. A summary of\nthe datasets is presented in the next section.\n\
    2.7.1\nSisFall Dataset\nThe SisFall dataset consists of accelerometer and gyroscope\
    \ recordings of 19 types of\nactivities of daily living and falls. Two accelerometers\
    \ and one gyroscope were placed\non the waist and used for making the measurements.\
    \ This location was chosen so as\nto ensure that all body movements while performing\
    \ the activities/falls were captured\nby the sensory system. Furthermore, the\
    \ data recordings involved 23 young people\nbetween the ages of 19-30 years old\
    \ and 15 elderly people between the ages of 60-75\nyears. The dataset contains\
    \ annotated sensor measurements of each of these ADLs\nand falls recorded as well\
    \ as video recordings of sample experiments. There are four\nmain types of falls\
    \ present, six of them are forward falls , three backward falls, four\nlateral\
    \ falls and two vertical falls. The types of falls performed were directed through\n\
    a survey taken from elderly people living independently as well as the ones living\n\
    in retirement homes and include scenarios of slipping and tripping. Moreover,\
    \ they\nare preceded by various types of ADLs being performed to make the recordings\
    \ as\nclose to a real world scenario as possible. The ADLs recorded were approved\
    \ by\nmedical personnel and were chosen so as to be similar to falls. The ADLs\
    \ include\nhigh mobility activities such as walking up/down stairs, jogging as\
    \ well as activities\nwhich can be confused with falls such as quickly sitting\
    \ in a chair, bending at the\nknee and stumble while walking etc. In total, there\
    \ were 2706 ADL recordings and\n1798 fall recordings. The SisFall data is utilized\
    \ in this study as it has been the\nthe dataset of choice for several previous\
    \ research approaches addressing the subject\nof fall detection [466, 467, 468,\
    \ 436, 469] and also because the volunteer makeup\nconsists of both men and women,\
    \ young adults and the elderly. The ADLs and Falls\nin the SisFall dataset have\
    \ been presented in Table 32 with a brief description of the\nactivities and falls\
    \ provided as well.\n89\nTable 32. ADL and Falls present in the SisFall dataset.\n\
    Activity/\nFall Code\nBrief Description\nD01\nWalking slowly\nD02\nWalking quickly\n\
    D03\nJogging slowly\nD04\nJogging quickly\nD05\nWalking upstairs and downstairs\
    \ slowly\nD06\nWalking upstairs and downstairs quickly\nD07\nSlowly sit in a half\
    \ height chair, wait a moment, and up slowly\nD08\nQuickly sit in a half height\
    \ chair, wait a moment, and up quickly\nD09\nSlowly sit in a low height chair,\
    \ wait a moment, and up slowly\nD10\nQuickly sit in a low height chair, wait a\
    \ moment, and up quickly\nD11\nSitting a moment, trying to get up, and collapse\
    \ into a chair\nD12\nSitting a moment, lying slowly, wait a moment, and sit again\n\
    D13\nSitting a moment, lying quickly, wait a moment, and sit again\nD14\nBeing\
    \ on one’s back change to lateral position, wait a moment, and change to\none’s\
    \ back\nD15\nStanding, slowly bending at knees, and getting up\nD16\nStanding,\
    \ slowly bending without bending knees, and getting up\nD17\nStanding, get into\
    \ a car, remain seated and get out of the car\nD18\nStumble while walking\nD19\n\
    Gently jump without falling (trying to reach a high object)\nF01\nFall forward\
    \ while walking caused by a slip\nF02\nFall backward while walking caused by a\
    \ slip\nF03\nLateral fall while walking caused by a slip\nF04\nFall forward while\
    \ walking caused by a trip\nF05\nFall forward while jogging caused by a trip\n\
    F06\nVertical fall while walking caused by fainting\nF07\nFall while walking,\
    \ with use of hands in a table to dampen fall, caused by\nfainting\nF08\nFall\
    \ forward when trying to get up\nF09\nLateral fall when trying to get up\nF10\n\
    Fall forward when trying to sit down\nF11\nFall backward when trying to sit down\n\
    F12\nLateral fall when trying to sit down\nF13\nFall forward while sitting, caused\
    \ by fainting or falling asleep\nF14\nFall backward while sitting, caused by fainting\
    \ or falling asleep\nF15\nLateral fall while sitting, caused by fainting or falling\
    \ asleep\n2.7.2\nK-Fall Dataset\nThe K-Fall dataset has been developed based on\
    \ the SisFall dataset and contains 15\nfall types and 21 ADLs. The falls in K-Fall\
    \ are the same as those in SisFall. However,\nin the case of ADLs, they remove\
    \ the activity of sitting in and getting out of a car\nand combine some of the\
    \ activities while adding static activities of sitting on a chair,\nsitting on\
    \ a sofa and lying down.\nA total of 2729 ADL recordings and 2346 fall\nrecordings\
    \ are present in the dataset. This dataset is included in the study to test\n\
    cross-dataset fall detection. The details of the K-Fall dataset are presented\
    \ in Table\n33.\n2.8\nExperiments\nThis section discusses the experiments conducted\
    \ for the purposes of fall detection.\nFour experiments have been performed in\
    \ this regard, first considering fall data only\n90\nTable 33. ADL and Falls present\
    \ in the K-Fall dataset.\nActivity/\nFall Code\nBrief Description\nD01\nStand\
    \ for 30 seconds\nD02\nStand, slowly bend the back with or without bending at\
    \ knees, tie shoe lace,\nand get up\nD03\nPick up an object from the floor\nD04\n\
    Gently jump (try to reach an object)\nD05\nStand, sit to the ground, wait a moment,\
    \ and get up with normal speed\nD06\nWalk normally with turn (4m)\nD07\nWalk quickly\
    \ with turn (4m)\nD08\nJog normally with turn (4m)\nD09\nJog quickly with turn\
    \ (4m)\nD10\nStumble while walking\nD11\nSit on a chair for 30 seconds\nD12\n\
    Sit on the sofa (back is inclined to the support) for 30 seconds\nD13\nSit down\
    \ to a chair normally, and get up from a chair normally\nD14\nSit down to a chair\
    \ quickly, and get up from a chair quickly\nD15\nSit a moment, trying to get up,\
    \ and collapse into a chair\nD16\nStand, sit on the sofa (back is inclined to\
    \ the support), and get up normally\nD17\nLie on the bed for 30 seconds\nD18\n\
    Sit a moment, lie down to the bed normally, and get up normally\nD19\nSit a moment,\
    \ lie down to the bed quickly, and get up quickly\nD20\nWalk upstairs and downstairs\
    \ normally (5 steps)\nD21\nWalk upstairs and downstairs quickly (5 steps)\nF01\n\
    Forward fall when trying to sit down\nF02\nBackward fall when trying to sit down\n\
    F03\nLateral fall when trying to sit down\nF04\nForward fall when trying to get\
    \ up\nF05\nLateral fall when trying to get up\nF06\nForward fall while sitting,\
    \ caused by fainting\nF07\nLateral fall while sitting, caused by fainting\nF08\n\
    Backward fall while sitting, caused by fainting\nF09\nVertical (forward) fall\
    \ while walking caused by fainting\nF10\nFall while walking, use of hands to dampen\
    \ fall, caused by fainting\nF11\nForward fall while walking caused by a trip\n\
    F12\nForward fall while jogging caused by a trip\nF13\nForward fall while walking\
    \ caused by a slip\nF14\nLateral fall while walking caused by a slip\nF15\nBackward\
    \ fall while walking caused by a slip\nand aiming to determine falls with direction\
    \ and severity. The second, third and\nfour experiments involved the inclusion\
    \ of activities of daily living classification in\naddition to the fall classes\
    \ considered in the first experiment. Moreover, experiment\nfour presents results\
    \ for a cross-dataset fall detection scenario.\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration\nThis section describes the work on fall detection\
    \ considering severity and direction\nwhile only considering sensor data for falls.\
    \ The experiment has been performed as\ntwo tasks, one for determining falls considering\
    \ direction only and the other while\nconsidering both direction as well as severity.\n\
    2.8.1.1\nData Labeling\nTo perform fall detection that is direction and severity\
    \ aware, we only considered fall\n91\ndata from the SisFall dataset. As can be\
    \ seen from Table 32, most of the falls in\nthe dataset have been labelled as\
    \ either being in the forward, backward or lateral\ndirection.\nHowever, two of\
    \ the falls (F06 and F07) are not labeled in terms of\ndirection. For the considerations\
    \ of this research work, these were assigned the labels\nof Forward and Lateral\
    \ respectively using the videos of sample trials provided by the\ndataset authors.\n\
    Concerning fall severity, while the original labels from the dataset contained\
    \ in-\nformation for most falls for direction, the approach followed by Gibson\
    \ et al. [456]\nwas used to determine the severity of falls. According to the\
    \ practice followed by\nthem, all falls where in some support was used to soften\
    \ the impact of the fall were\nconsidered as soft falls whereas all falls where\
    \ the subject fell directly were classified\nas hard falls. This resulted in six\
    \ classes for fall types with hard and soft for ima-\npact and forward, backward\
    \ and lateral for direction. These are Forward Soft Falls\n(FSF), Forward Hard\
    \ Falls (FHF), Backward Soft Falls (BSF), Backward Hard Falls\n(BHF), Lateral\
    \ Soft Falls (LSF) and Lateral Hard Falls (LHF). These labels have\nbeen summarized\
    \ in Table 34.\nTable 34. Labeling used for Fall only classification for the SisFall\
    \ Dataset\nExperiment Name\nFall\nCode\nAssigned Fall Name\nAssigned Fall Label\n\
    Direction\nF01\nForward Fall\nFF\nF02\nBackward Fall\nBF\nF03\nLateral Fall\n\
    LF\nF04\nForward Fall\nFF\nF05\nForward Fall\nFF\nF06\nForward Fall\nFF\nF07\n\
    Lateral Fall\nLF\nF08\nForward Fall\nFF\nF09\nLateral Fall\nLF\nF10\nForward Fall\n\
    FF\nF11\nBackward Fall\nBF\nF12\nLateral Fall\nLF\nF13\nForward Fall\nFF\nF14\n\
    Backward Fall\nBF\nF15\nLateral Fall\nLF\nDirection + Severity\nF01\nForward Hard\
    \ Fall\nFHF\nF02\nBackward Hard Fall\nBHF\nF03\nLateral Hard Fall\nLHF\nF04\n\
    Forward Hard Fall\nFHF\nF05\nForward Hard Fall\nFHF\nF06\nForward Soft Fall\n\
    FSF\nF07\nLateral Soft Fall\nLSF\nF08\nForward Soft Fall\nFSF\nF09\nLateral Soft\
    \ Fall\nLSF\nF10\nForward Soft Fall\nFSF\nF11\nBackward Soft Fall\nBSF\nF12\n\
    Lateral Soft Fall\nLSF\nF13\nForward Soft Fall\nFSF\nF14\nBackward Soft Fall\n\
    BSF\nF15\nLateral Soft Fall\nLSF\n92\nWindowing\nTime and Frequency\nDomain Feature\n\
    Computation\nRF-RFE Feature\nSelection\nFeature\nExtraction and\nFeature Selection\n\
    Classification\nData\nPreprocessing\nPeak SMV Detection\nOutput Class \n(FF, BF,\
    \ LF) \n(FHF, FSF, BHF, BSF, LHF, LSF)\nIMU Recording (Falls) \n(FF, BF, LF) \n\
    (FHF, FSF, BHF, BSF, LHF, LSF)\nSVM Classifier\nFigure 17. Fall Detection with\
    \ Direction and Severity.\n2.8.1.2\nMethodology\nThe methodology used for this\
    \ experiment follows a typ-\nical machine learning pipeline as shown in Figure\
    \ 17. First, we pre-process the data\nwhich involves extraction of sensor segments\
    \ representing falls. This is followed by\nfeature extraction that aims to extract\
    \ useful representations from the accelerometer\nand gyroscope sensor data. Lastly,\
    \ feature selection is carried out where we aim to\nreduce the number of features\
    \ used in the last stage that is classification.\nData Pre-processing\nRecordings\
    \ in the SisFall dataset vary in length between 12 and 100 seconds. The\ntrial\
    \ recordings for falls in the SisFall dataset consist of subjects performing various\n\
    activities before experiencing the fall. For a sound feature extraction process,\
    \ we\nextract equal duration segments of sensor readings from these trials that\
    \ represent\nthe fall taking place along with some part of the pre-fall activity\
    \ being performed.\nTo do this, for each record we first calculate the acceleration\
    \ magnitude (also called\nthe Signal Magnitude Vector (SMV) ) [430] for all sensor\
    \ value samples within a trial\nrecording. The SMV can be calculated as given\
    \ in Eq.1.\nSMVj =\nq\f\fAxj\n\f\f2 +\n\f\fAyj\n\f\f2 +\n\f\fAzj\n\f\f2\n(1)\n\
    93\nwhere SMVj represents the SMV value for a sample j in a given trial. The SMV\n\
    is calculated for all samples and the sample location for the SMV peak value is\n\
    determined within the trial. This is then used as the midpoint for extracting\
    \ a 2.5\nsecond segment from the trial. A segment length of 2.5 seconds was chosen\
    \ as it was\nvisually found to capture all the falls as well as some part of the\
    \ pre-fall activity being\nperformed. Using this scheme, segments were extracted\
    \ for all the fall trials in the\ndataset.\nThere are a total of 1798 fall samples\
    \ in the dataset, after the labeling used, there\nwere a total of 838 samples\
    \ for the forward fall category, 360 samples for the backward\nfall category and\
    \ 600 samples for the lateral fall category. Sample waveforms for the\nthree directions\
    \ of falls and three severity levels have been shown in Appendix A.\nFeature Extraction\n\
    Feature extraction is used to convert inputs in to more useful representations.\
    \ In\nthis experiment, we take cue from the work of [420, 470] who use various\
    \ time and\nfrequency domain features successfully for fall detection and recognition\
    \ of activities\nof daily living. Table 35 lists the features computed for each\
    \ extracted segment. Each\nof these features have been computed for every axis\
    \ of the considered accelerometer\nand gyroscope sensor measurements.\nTable 35.\
    \ Features computed for each fall segment\nDomain\nFeatures Computed\nTime\n25th\
    \ Percentile\n75th Percentile\nDelta\nInterquartile range\nKurtosis\nMean\nMedian\n\
    Maximum\nMinimum\nSkewness\nStandard Deviation\nVariance\nFrequency\nPower Spectral\
    \ Entropy\nPower Spectral Density Mean\nPower Spectral Density Median\nPower Spectral\
    \ Density RMS\nPercentiles (25th Percentile, 75th Percentile) and Interquartile\
    \ Range\nFor a set of numerical values X ordered in arranged ascending order,\
    \ the ith percentile\nis defined as the number n below which i percent of the\
    \ total numbers of X fall below\nit. Therefore, the 25th Percentile (also called\
    \ the First Quartile) is the number in X\nbelow which exactly 25% of the values\
    \ fall. Similarly, 75th Percentile (also called\nthe Third Quartile) is the number\
    \ in X below which exactly 75% of the values fall.\nAnother important quantity\
    \ concerning percentiles is the Interquartile Range (IQ\n94\nRange), also called\
    \ the Midspread. The IQ Range is the difference between the 75th\nPercentiles\
    \ and the 25th Percentiles.\nDelta\nThe Delta represents the difference between\
    \ the minimum and maximum\nvalue of a set of numeric values X.\nKurtosis\nIt’s\
    \ a metric for how much a distribution’s tails diverge from that of\na normal\
    \ distribution. A large Kurtosis values indicates to larger extremity of the\n\
    divergences which can be thought of as outliers. The Kurtosis for a set of numerical\n\
    values X can be calculated as given in Eq. 2.\nKurtosis(X) =\n1\nNσ4\nN\nX\ni=1\n\
    (xi − µ)4\n(2)\nMean\nFor a set of values X, the arithmetic mean or the average\
    \ returns the\ncenter value of X. Mathematically it is given in Eq. 3.\nMean(X)\
    \ =\nPN\ni=1 xi\nN\n(3)\nMedian\nFor a set of values X, the median indicates to\
    \ the central tendency of\nX. It divides a set of values in to two equal parts.\
    \ For a set X of size N arranged in\nascending order, the median can be calculated\
    \ as in Eq. 4.\nMedian(X) = X[N + 1\n2\n]\n(4)\nMaximum\nFor a set of values X,\
    \ the maximum value represents the largest\nvalue in the set X.\nMinimum\nFor\
    \ a set of values X, the minimum value represents the smallest\nvalue in the set\
    \ X.\nSkewness\nThe Skewness measures the lack of symmetry in the probability\
    \ dis-\ntribution of data around its mean. It is calculated as in Eq. 5.\nSkewness(X)\
    \ =\n1\nNσ3\nN\nX\ni=1\n(xi − µ)3\n(5)\nStandard Deviation and Variance\nThe Standard\
    \ Deviation measures the\nvariation of a set of numerical values around its mean.\
    \ For a set of numerical values\nX, the standard deviation can be calculated as\
    \ in Eq. 6.\n95\nStd(X) =\nsPN\ni=1(xi − µ)2\nN\n(6)\nwhere µ is the Mean of X.\
    \ The Variance of X is the square of the Standard\nDeviation.\nPower Spectral\
    \ Density\nThe Power Spectral Density (PSD) is an indication\nto the power content\
    \ of a signal with respect to its frequency. It therefore helps to\nunderstand\
    \ the distribution of power in the signal for the different frequencies that\n\
    comprise it. The PSD has been computed using the Welch method [471]. Once the\n\
    PSD has been computed, the mean, median and Root Mean Squared (RMS) values\nof\
    \ the PSD are computed.\nPower Spectral Entropy\nThe Power Spectral Entropy (PSE)\
    \ is a measure of\nthe entropy in the power spectrum of a signal and indicates\
    \ to the complexity present\ntherein. It is computed as an entropy calculation\
    \ on the normalized PSD estimate.\nSimilar to the PSD computation, the Welch method\
    \ was used to estimate the PSD\nbefore PSE calculations were performed.\nThe aforementioned\
    \ quantities were computed for all windowed samples of the fall\nrecordings. In\
    \ total, this resulted in 96 features being computed for each segment.\nBefore\
    \ these features are passed on to the next stage, normalization was performed\n\
    feature wise for each sensor.\nFeature Selection\nFeature selection is an important\
    \ step in the machine learning pipeline. It not only\nhelps to reduce the feature\
    \ set size used in an application which helps computationally\nbut may also result\
    \ in performance improvement as observed by [472]. Feature se-\nlection is performed\
    \ using Random Forest Recursive Feature Elimination (RF-RFE)\n[473] which involves\
    \ determining the importance of features by eliminating features\niteratively\
    \ and looking at classifier performance. It starts by developing a model us-\n\
    ing all the available features within the dataset, in every iteration, the feature\
    \ that\nhas the ’least importance/contribution’ is discarded and a new model is\
    \ fitted with\nthe remaining features. This process is carried out until a pre-decided\
    \ number of\nfeatures remain. Since in this work, our goal is to reduce the number\
    \ of features\nfrom the original count, we perform manual tests by establishing\
    \ a baseline for the\nperformance of our models. The baseline is formed by using\
    \ all features for each\nof our classification tasks and using the highest weighted\
    \ F1-score achieved as the\nperformance goal cut-off for the reduction of features.\
    \ This step will ensure that we\natleast get the same performance as the original\
    \ feature set.\nClassification\nClassification refers to the usage of a classification\
    \ algorithm, also called a classifier\n96\nto determine the output ’label’ or\
    \ category given a set of input values called features.\nIn the current setting,\
    \ the classification problem is a supervised one wherein the\nclassifier is provided\
    \ inputs and their corresponding output labels which allow it\nto learn the relationship\
    \ between the input and the output.\nOnce this mapping\nhas been sufficiently\
    \ learned (a process called training) the trained classifier can\nbe provided\
    \ unlabeled inputs for it to predict an output label value or class. The\nefficacy\
    \ of the classifier in predicting the correct output is measured through various\n\
    metrics such as accuracy, precision, recall, F1-score etc. This experiment consists\
    \ of\ntwo classification experiments being performed, one is the direction only\
    \ experiment\nwhere the classifiers used are trained to distinguish between the\
    \ three direction of falls\ngiven the input feature set and another experiment\
    \ where the classifiers are trained\nto determine fall directions and severity\
    \ together.\nFour different classifiers were tested to perform these tasks, these\
    \ are the Random\nForest Classifier, Support Vector Machines, Decision Trees and\
    \ Extreme Gradient\nBoost (XGBoost). All of the classifiers were trained using\
    \ five fold cross validation\nwith a stratified split and a parameter search being\
    \ performed for tuning purposes.\nSupport Vector Machines\nSupport Vector Machine\
    \ is a supervised learning\nalgorithm that, in its simplest form tries to fit\
    \ a line in between data samples of two\ndifferent classes to separate them. The\
    \ criteria used by the SVM to fit this line is\nthe maximization of the distance\
    \ between the line and the (data) points closest to it.\nThis concept of using\
    \ a line to separate two dimensional data can be extended to two\ndimensional\
    \ planes being used for separating three-dimensional data and hyperplanes\nfor\
    \ higher dimensional data. SVMs are quite flexible in that they can not only be\
    \ used\nto work with linearly separable data but also with data that is not linearly\
    \ separable.\nThis is achieved using Kernel functions which map the nonlinearly\
    \ distributed data\nin to a higher dimensional space to make it linearly separable\
    \ (as much as possible).\nThere are several kernel functions available to be used\
    \ for this purpose such as the\nhyperbolic tangent, radial basis, sigmoid, polynomial\
    \ etc. Optimizing the SVM re-\nquires the tuning of the cost parameter C, a small\
    \ value of C indicates an underfit\nwhereas a very large value of C indicates\
    \ an overfit.\nEven though, the current experiment considers using SVMs for a\
    \ classification\ntaks, it should also be mentioned that SVM’s are not limited\
    \ to application towards\nclassification problems and they have also been used\
    \ for regression applications too.\nDecision Tree\nDecision Trees are one of the\
    \ most widely used classification\nalgorithms due to their interpretability. The\
    \ aim of the algorithm is to come up with\nas simple a solution as possible while\
    \ successively dividing the data in to simpler and\nsimpler classification tasks\
    \ based on the values of the features. For a classification\nproblem, given a\
    \ set of input features of the training set, decision trees use the values\nof\
    \ the features to divide or split the dataset in to more simpler sub problems.\
    \ The\naim being to get the largest information gain when choosing the feature/s\
    \ for the\nsplit. Each split point in a decision tree is called a node and each\
    \ split is called a\nbranch. Branches from a given node represent all the possible\
    \ outcomes from that\n97\nnode and may contain subsequent decision nodes as well\
    \ which are called child nodes.\nEach branch ends at a node called the leaf node\
    \ where data points are assigned a\nclass label.\nDepending on the number of input\
    \ features and the output classes, decision trees\ncan be built to classify the\
    \ dataset in a ’complete’ manner due to its iterative parti-\ntioning scheme.\
    \ However, this is undesirable since that would lead to overfitting of the\nmodel\
    \ and also because such trees would lead to a complicated model, which is not\n\
    desirable since that would impact interpretability. The process of removing branches\n\
    and replacing them by leaf nodes is called pruning. Pruning aims to increase the\n\
    models generalizations capabilities and increase robustness. Two paramters which\n\
    are used for this purpose are tree depth limits the number of child nodes present\
    \ in\nevery branch and the number of features used at each split.\nRandom Forest\
    \ Classifier\nRandom forest is a bagging approach towards de-\ncision trees where\
    \ instead of deciding on where to split for each node, for each tree\na random\
    \ subset of features is used and the feature/threshold to split the data is\n\
    determined within that subset of features to separate the data in the best manner\n\
    possible. This process is repeated multiple times which results in various trees\
    \ pro-\nducing possibly different predictions. The predictions from each tree\
    \ are combined\nto form an ensemble either through majority voting or by averaging.\
    \ The imple-\nmentation of Random Forests used in this work uses the averaging\
    \ approach. There\nare several parameters that are important in the tuning of\
    \ Random Forests are the\nnumber of trees created before the averaging process\
    \ starts, the number of levels in\neach tree and more.\nExtreme Gradient Boost\n\
    Extreme Gradient Boost is another ensemble based\ntree algorithm, however compared\
    \ to the RFC, XGBoost uses boosting instead of\nbagging. In boosting, the input\
    \ samples are uniformly weighted and first a ’weak’\nlearner (classifier) is created\
    \ for a given task that doesnt perform well but is sufficient\nin the sense that\
    \ it is better than random guessing. In subsequent iterations of the\nlearner,\
    \ input samples which werent classified correctly by the learner are reweighted\n\
    by assigning larger weights to them while the weights for correctly classified\
    \ inputs\nis reduced. This step is repeated for a number of times with different\
    \ weak learners\nbeing trained.\nThe decision of the weak learners are combined\
    \ through majority\nvoting to determine the output class. Parameters used to tune\
    \ XGBoost are the\nmaximum depth allowed in each tree, the weight settings etc.\n\
    2.8.1.3\nResults\nAs mentioned previously, two separate experiments were conducted,\
    \ first was to dif-\nferentiate between fall directions only and the other to\
    \ differentiate between fall\ndirection as well as severity. The results from\
    \ those experiments are presented here.\nThe metrics considered for judging model\
    \ quality is the F1-score. The F1-score is the\nharmonic mean of the precision\
    \ and recall and is given as in Eq. 7.\n98\nF1 Score = 2 ∗ (Precision ∗ Recall)\n\
    Precision + Recall\n(7)\nwhere Precision is the ratio of the True positive samples\
    \ divided by the sum of the\nTrue positive and False positive samples as given\
    \ in Eq. 8. It is also called positive\npredictive value as it indicates to the\
    \ capability of the classifier to identify correctly\nthe samples of a given class.\n\
    Precision =\nTrue Positive\nTrue Positive + False Positive\n(8)\nand recall indicates\
    \ to the models capability to identify the samples of a given\nclass over the\
    \ whole dataset. It is also called the sensitivity and is the ratio of the\nTrue\
    \ positives to the sum of the True positives and False Negatives as shown in Eq.\n\
    9.\nRecall =\nTrue Positive\nTrue Positive + False Negative\n(9)\nWe report on\
    \ the F1-scores for each class when discussing classification perfor-\nmance and\
    \ deciding on the best classifier. Moreover, for the best classifier identified\n\
    the precision and recall have also been provided.\nFall direction\nIn this experiment,\
    \ fall segments labeled for direction only were used as input to the\nclassifiers.\
    \ To establish a baseline to be used as a reference in the feature selection\n\
    process, all computed features (96 in total) were passed to the four classifiers.\
    \ The\nbest performing model was found to be the SVM with a weighted F1-score\
    \ of 90.4%.\nFeature selection was then performed keeping in view baseline performance\
    \ of the\nSVM classifier so as to retain or improve this performance baseline\
    \ when choosing a\ngiven number of ’top’ features. Following this rule, feature\
    \ selection resulted in 90\nfeatures. The results are given in Table 36. It can\
    \ be observed from the table that\nthe SVM has outperformed the other algorithms\
    \ in detecting forward and lateral falls\nwhereas it achieves a slightly lower\
    \ F1-score for the backward fall class. Overall the\nSVM has shown to be better\
    \ at discriminating falls with direction.\nTable 36. Fall F1-scores (Fall direction\
    \ only)\nFall\nClassifier (F1-score %)\nSVM\nDT\nRFC\nXGBoost\nBF\n96.05\n92.22\n\
    96.59\n96.63\nFF\n92.67\n83.60\n90.10\n89.49\nLF\n88.67\n71.78\n85.63\n84.35\n\
    Average\n92.46\n82.53\n90.77\n90.15\n99\nFall direction and severity\nIn this\
    \ experiment, fall segments from the dataset were labeled for direction and\n\
    severity based on the labeling shown in Table 34 and passed to each of the classifiers\n\
    after feature selection. Like before, to establish a baseline, all computed features\
    \ (96\nin total) were passed to the four classifiers. The best weighted F1-score\
    \ of 78.44% was\nachieved by the SVM classifier. We used this value as the baseline\
    \ we aim to achieve\nafter feature selection. With this condition the number of\
    \ features were reduced to\n93. The performance achieved for each of the four\
    \ tested classifers is summarized in\nTable 37. It can be observed that the SVM\
    \ is the best performing classifier for all fall\ntypes bar FHF where the random\
    \ forest classifer achieves a slightly higher F1-score.\nThe highest F1-score\
    \ overall is achieved for the class BSF where as the lowest has\nbeen achieved\
    \ for LHF. When looking at fall direction, falls in the forward direction\ncan\
    \ be seen to be the hardest to identify followed by lateral falls. No such pattern\n\
    can be noted for soft/hard falls.\nTable 37. Fall F1-scores (Fall severity and\
    \ direction)\nFall\nClassifier (F1 Score %)\n[]\nSVM\nDT\nRFC\nXGBoost\nBHF\n\
    87.27\n50.00\n69.39\n66.67\nBSF\n95.08\n77.88\n88.33\n85.47\nFHF\n72.43\n54.02\n\
    75.56\n67.04\nFSF\n73.25\n50.60\n67.57\n58.93\nLHF\n66.67\n29.85\n35.90\n50.00\n\
    LSF\n84.65\n62.24\n75.17\n75.69\nAverage\n79.89\n54.10\n68.65\n67.30\n2.8.1.4\n\
    Discussion\nTo summarize the results from both experiments, we present the individual\
    \ F1-\nscores, Precision and Recall for the best performing classifier in each\
    \ case. These\nhave been presented in Table 38 and Table 39.\nTable 38. Best Results:\
    \ Fall direction\nFall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBF\n94.44\n97.70\n\
    96.05\nFF\n93.33\n92.02\n92.67\nLF\n88.67\n88.67\n88.67\nAverage\n92.16\n92.80\n\
    92.46\nIn both cases the best performing classifier was the SVM. This is inline\
    \ with\nthe findings of other research work as found from the literature review\
    \ [424, 429].\nA surprising outcome during this work was the unsatisfactory performance\
    \ of tree\nbased algorithms contrary to [420], we attribute this to the difference\
    \ in the data\nsegmentation scheme and also the fact that we follow different\
    \ labelling for the data\n100\nTable 39. Best Results: Fall direction and Severity\n\
    Fall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBHF\n80.00\n96.00\n87.27\nBSF\n\
    96.67\n93.55\n95.08\nFHF\n74.44\n70.53\n72.43\nFSF\n74.17\n72.36\n73.25\nLHF\n\
    60.00\n75.00\n66.67\nLSF\n85.00\n84.30\n84.65\nAverage\n78.38\n81.96\n79.89\n\
    in terms of a direction and severity aware system. Moreover, the final weighted\
    \ F1-\nscores for the fall direction experiment was 92% and for the fall direction\
    \ and severity\nwas 79.53% which resulted in an improvement of just above 1% in\
    \ both cases with a\nsmall reduction in the number of features utilized, 90 and\
    \ 93 respectively compared to\n96 in the original feature set. Commenting on the\
    \ direction, the hardest to predict fall\nwas in the lateral direction and the\
    \ classifier incorrectly predicted forward falls and\nlateral falls in both the\
    \ scenarios tested. This highlights the difficulty in capturing\nthe difference\
    \ between these two fall directions using the features considered.\n2.8.2\nFall\
    \ Detection with Severity and Direction along with ADL consid-\neration using\
    \ Wavelet Pooling and K-NN\nThis section provides a framework for a fall and activity\
    \ recognition system. It aims\nto determine an appropriate sensor modality to\
    \ use and the window size to be used\nfor the task. The framework does this as\
    \ a problem of differentiating between various\nactivities of daily living as\
    \ well as various types of falls with regard to fall datection\nbeing direction\
    \ and severity aware. To do this, data from the SisFall dataset is used\nand after\
    \ suitable pre-processing and feature extraction, machine learning algorithms\n\
    are utilized to differentiate between different activities of daily living and\
    \ falls\n2.8.2.1\nData Labeling\nSince we aim to perform activity recognition\
    \ and fall detection with direction and\nseverity, the ADL labeling of the original\
    \ dataset has been modified. This labeling\nhas been shown in Table 40. As can\
    \ be observed from Table 40, the activities Walking\n(W), Jogging (J), Sitting\
    \ (S) and Standing (SB) have been considered for this work\nwhich are typical\
    \ activities in ADL detection problems. Each of these labels includes\ndata from\
    \ multiple original activities, for e.g. activities with original labels of walking\n\
    upstairs and downstairs, walking slowly and walking quickly have been considered\
    \ as\nwalking in this work. A similar scheme has been used for the other three\
    \ activity\nlabels as well. Some of the activities such as being on one’s back\
    \ change to lateral\nposition, wait a moment, and change to one’s back (D14),\
    \ getting in and out of the\ncar (D17), stumble while walking (D18), and gently\
    \ jumping without falling while\ntrying to reach a high object (D19) have not\
    \ been considered. The reason for this\nis that they have very few samples to\
    \ be considered as standalone activities (only\none type of sub-activity and also\
    \ because most of these are not considered in typical\n101\nADL detection scenarios).\
    \ For falls, the labeling same as that for the direction and\nseverity experiment\
    \ has been retained.\nTable 40. ADL Labels used for SisFall Recordings.\nActivity\
    \ Code\nAssigned Activity Name\nAssigned Activity Label\nD01\nWalking\nW\nD02\n\
    Walking\nW\nD03\nJogging\nJ\nD04\nJogging\nJ\nD05\nWalking\nW\nD06\nWalking\n\
    W\nD07\nSit\nS\nD08\nSit\nS\nD09\nSit\nS\nD10\nSit\nS\nD11\nSit\nS\nD12\nSit\n\
    S\nD13\nSit\nS\nD14\n-\n-\nD15\nStanding\nSB\nD16\nStanding\nSB\nD17\n-\n-\nD18\n\
    -\n-\nD19\n-\n-\n2.8.2.2\nMethodology\nFigure 18 shows the methodology for this\
    \ work with individual parts being elab-\norated upon in the proceeding subsections.\
    \ As can be seen, the first stage consists of\ndata preprocessing, followed by\
    \ feature extraction and then evaluation or classifica-\ntion.\nData Preprocessing\n\
    Data preprocessing for this experiment was performed in a similar manner to section\n\
    2.8.1 for most recordings. The SMV was computed for the complete recording and\n\
    windowed segments of a fixed duration were extracted.\nWindowed segments are\n\
    extracted in this manner from all considered activities in the SisFall dataset\
    \ except\nthe activities of D01, D02, D03 and D04 which consist of a single trial\
    \ per subject of\nduration 100s. In such cases, continuous windowed segments of\
    \ duration n seconds\nare extracted from the recordings. It is also pertinent\
    \ to mention here that since\nboth accelerometers are placed at the same position,\
    \ we only consider one of the\naccelerometers along with the gyroscope readings\
    \ present in the recorded trials. To\ndetermine the value of n as well as the\
    \ appropriate sensor modality to use for the\nfinal system, experiments were performed\
    \ on the developed framework and the results\nhave been discussed in subsequent\
    \ sections.\nFeature extraction\nIn this experiment, feature extraction consists\
    \ of two steps. The first is the use of\n102\nWindowing\nWavelet Coefficient\n\
    Extraction\nSpatial Pyramid\nPooling\nKNN Classifier ADL\nvs Fall \n(W J, S, SB,\
    \ Fall)\nKNN Classifier\nSeverity \n(HF, SF)\nKNN Classifier\nDirection \n(F,\
    \ B, L)\nFeature\nExtraction\nHierarchical\nClassification\nData\npreprocessing\n\
    Peak SMV detection\nFall ?\nOutput Class \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF,\
    \ LSF)\nDetermination of Fall type (Voting)\nYes\nNo\nIMU Recording (Falls and\
    \ Activities) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFigure 18. Hierarchical\
    \ classification scheme for ADL and Fall detection.\nwavelets [474] for performing\
    \ wavelet decomposition and then performing pooling,\nthe inspiration for this\
    \ type of feature extraction came from the work of [475].\n103\nWavelet Decomposition\n\
    Wavelets can be used for a variety of applications\nsuch as spectral analysis\
    \ where they are used to analye a signal in the time-frequency\ndomain, denoising,\
    \ compression and signal enhancement. A wavelet is a function of\nfinite duration\
    \ and has an average value of zero, an example of a mexican hat wavelet\nis shown\
    \ in Figure. 19. The width of the wavelet is called its scale and it is analogous\n\
    to frequency in an inverse manner. A large value of the scale (wider window) allows\n\
    for capturing of low frequency components of the signal whereas a small scale\
    \ value\ncaptures low frequency components.\n0\n20\n40\n60\n80\n100\n0.2\n0.1\n\
    0.0\n0.1\n0.2\n0.3\n0.4\nAmplitude\nMexican Hat Wavelet\nFigure 19. Sample Wavelet\
    \ (Mexican Hat).\nWavelets are convolved with an input signal to produce two sets\
    \ of coefficients.\nThese are called the detail and approximation coefficients.\
    \ The detail component\nrepresents the high frequency component captured by the\
    \ wavelet whereas the ap-\nproximation component represents the low frequency\
    \ part. Since the wavelet has\nonly been convolved once with the signal, these\
    \ coefficients are said to be level 1\ncoefficients. At each level, resulting\
    \ coefficients are downsampled by half to result in\na lower resolution signal.\
    \ Subsequent approximation components can be convolved\nwith the wavelet to result\
    \ in approximation and detail components for the next level\nthus forming what\
    \ is called a wavelet decomposition tree.\nTo perform wavelet decomposition, in\
    \ this experiment, we make use of the Haar\nwavelet [476] shown in Figure. 20.\
    \ Level 4 haar wavelets were computed for each of\nthe extracted segments of the\
    \ signals.\nSpatial Pooling\nThe results from the decomposition provide a large\
    \ number\nof features which would pose a problem for use in the proceeding classification\
    \ stage.\nIn order to reduce the feature dimension size, Spatial Pyramid Pooling\
    \ [477] was\nused. Spatial Pyramid Pooling is an adaptive pooling method which\
    \ was developed\nto address the issue of fluctuating input sizes in CNNs for image-based\
    \ applications,\nand it entails converting varying-size convolutional feature\
    \ maps into fixed-length\nsummarizations. These summarizations, having uniform\
    \ length can then be passed\non to the fully connected parts of the CNN where\
    \ a fixed length input is necessary.\n104\n1.0\n0.5\n0.0\n0.5\n1.0\n1.5\n2.0\n\
    1.00\n0.75\n0.50\n0.25\n0.00\n0.25\n0.50\n0.75\n1.00\nAmplitude\nHaar Wavelet\n\
    Figure 20. Haar Wavelet.\nGiven a pooling size pxp, adaptive pooling works by\
    \ dividing the input in to pxp pieces\nwhile computing the size of each piece\
    \ automatically and performing any necessary\npadding. Once these pieces are created,\
    \ a pooling operation is typically performed\n(max pooling or average pooling\
    \ for e.g.) on each of these pieces to summarize the\ninput into an output of\
    \ fixed size pxp. This results in a fixed output length for any\nsize of the input.\
    \ In this experiment, 4-2-1 1D Spatial Pyramid pooling was used\non the detail\
    \ and approximation coefficients of the wavelet decomposition of activity\nand\
    \ fall data. This process has been shown in Figure 21. Each coefficient set was\n\
    divided in to four and two parts and then max pooling was used to determine the\n\
    maximum value in these divided parts and the coefficient set as a whole.\nThese\n\
    maximum values were then concatenated together to form the seven valued output\n\
    from that coefficient set. Furthermore, the results for each coefficient set within\
    \ each\naxis were also concatenated to form the feature vector for a sensor axis\
    \ measurement.\nThis operation was performed for each axis of accelerometer and\
    \ groscope sensor\ndata with the final feature vector of 210 values consisting\
    \ of the concatenations of\nthe individual vectors for each axis. It is hypothesized\
    \ that this way local as well as\nglobal information at each level of the wavelet\
    \ coefficients can be captured. For the\nwavelet decomposition, tests were performed\
    \ with level values of 2, 3, 4, 5 and 7 and\nit was determined that level-4 produced\
    \ the best results.\nClassification\nA hierarchical classification approach is\
    \ employed to discriminate between the vari-\nous activities and falls considered\
    \ from the SisFall dataset. Hierarchical classification\ninvolves the division\
    \ of a complex taxonomic classification problem in to a set of\nsubsets that are\
    \ potentially easier to differentiate as the task becomes more localized.\nHierarchical\
    \ classifiers have been used in multiple different applications [478] where\n\
    they have been found to improve upon the performance of many flat classification\n\
    schemes. The classification framework used in this work combines hierarchical\
    \ clas-\nsification with a vote based system. The classification problem is divided\
    \ into three\nparts, each with its own classifier to indicate to the subclass\
    \ of the output. The clas-\n105\nMaxpooling Size = 4\nMaxpooling Size = 2\nMaxpooling\
    \ Size = 1\nMaxpooled Coefficients - 4\nMaxpooled Coefficients - 2\nMaxpooled\
    \ Coefficients - 1\nConcatenated cofficients for maxpooled wavelet coefficients\n\
    c1\nc2\nc3\nc4\nc5\nc6\nc7\nc8\nc9\nc10\nc11\nc12\nn Wavelet coefficients ( n\
    \ = 12 e.g.)\nMax (c1, c2, c3)\nMax (c4, c5, c6)\nMax (c7, c8, c9)\nMax (c10,\
    \ c11, c12)\nMax (c1, c2, c3, c4, c5, c6)\nMax (c7, c8, c9, c10, c11, c12)\nMax\
    \ (c1, c2, c3, c4, c5, c6,c7, c8, c9, c10, c11, c12)\nFigure 21. Example: 4-2-1\
    \ 1-D Spatial Pyramid Pooling.\nsifier in part one consists of differentiating\
    \ whether a given recording is a fall or one\nof the four considered ADLs. In\
    \ order to train this stage, the activities of Standing,\nWalking, Sitting and\
    \ Jogging along with all falls combined in to one class are passed\nto the classifier.\
    \ This dilutes the original ten-class problems in to a five-class sub\nproblem.\
    \ The output of this stage is the determination of whether a given recording\n\
    is either one of the four ADLs (Standing, Walking, Sitting or Jogging) or a fall.\
    \ If a\nrecording has been detected to be a fall, it is sent to the second and\
    \ third stages.\nThe second and third stages work in parallel on samples detected\
    \ as falls from\n106\nthe first stage in the form of a voting machine. These two\
    \ stages vote individually\non the direction and severity of the detected fall\
    \ samples. In order to train them,\nfall samples were relabeled to represent direction\
    \ and severity only and are fed to the\nclassifiers. For the direction, the classification\
    \ problem is formulated as a three-class\nproblem of determining fall directions\
    \ as being Forward, Backward or Lateral. For\nthe severity classifier, the classification\
    \ problem is formulated as a two-class problem\nof a fall being either Soft or\
    \ Hard. After a signal has passed through all necessary\nstages, the outputs of\
    \ the individual stages are combined to indicate to the activity\nor type of fall\
    \ being fed at the input.\nFour classifiers were tested for each part of the hierarchical\
    \ scheme, the classifiers\nconsidered were K-Nearest Neighbors, Support Vector\
    \ Machines, Random Forests\nand eXtreme Gradient Boosting. Parameter tuning was\
    \ performed using gradient\nsearch for each classifier over a range of values\
    \ for each parameter.\nK-Nearest Neighbor\nCompared to the SVM which attempts\
    \ to create a deci-\nsion boundary between classes on a global level, the K-NN\
    \ algorithm operates locally.\nStarting from a data point, the 1 Nearest Neigbhor\
    \ algorithm will assign each new\nsample the class of its neighbor. However, using\
    \ a single neighborhood point to assign\nnew classes may lead to erroneous classes\
    \ being assigned. Therefore, typically mul-\ntiple neighboring points are used\
    \ to determine the label for a given point. In K-NN,\n’K’ represents the number\
    \ of points used in the neighborhood to assign labels to data\nsamples. Each considered\
    \ sample is assigned the majority label within a neighbor-\nhood of K points around\
    \ it. In this manner, the K-NN algorithm is successively able\nto create a decision\
    \ boundary separating the data in to the different output classes.\n2.8.2.3\n\
    Results\nThree experiments were performed in this section. The first was to choose\
    \ the best\nclassifier to use, once that was determined. experiments were conducted\
    \ to determine\nthe observation window size and different combination of sensor\
    \ modalities. We used\nthe weighted F1-score as our training metric due to the\
    \ imbalance in the samples\nof the different classes in the data. Moreover, for\
    \ evaluation purposes, we report on\nthe individual F1-scores for each output\
    \ class and provide discussions as necessary.\nFurthermore, for the best performing\
    \ results, the Precision and Recall and Specificity\nwere also specified. Specificity\
    \ can be calculated as given in Eq. 10. It is also called\nthe True Negative Rate\
    \ and indicates to a classifiers capability to correctly detect\nsamples which\
    \ don’t belong to a given class. These metrics have been computed on\na one versus\
    \ all basis.\nSpecificity =\nTrue Negative\nTrue Negative + False Positive\n(10)\n\
    The data after the feature extraction stage was split in to a train/test partition\n\
    based on a 75/25 ratio with a parameter grid being searched through to obtain\n\
    107\ntuning parameters for maximizing the weighted F1-score while using five-fold\
    \ cross\nvalidation.\nClassifier Selection\nThis test was conducted to determine\
    \ the best classifier to use for the proceeding\nexperiments of observation window\
    \ selection and sensor modality selection. Here,\nexperiments were performed for\
    \ the considered window durations for each activity\nand the classifier which\
    \ provided the best performance overall was chosen. The mean\nF1-scores for each\
    \ output class for each classifier are shown in Figure 22. It can be\nobserved\
    \ that in general K-NN and SVM perform better compared to the ensemble\nmodels,\
    \ the RFC and XGBoost. However, since the K-NN slightly outperforms the\nSVM in\
    \ eight of the ten considered classes, we choose K-NN as the classifier for this\n\
    framework.\nBHF\nBSF\nFHF\nFSF\nJ\nLHF\nLSF\nS\nSB\nW\n0\n20\n40\n60\n80\n100\n\
    F1 Score (%)\nAverage F1 Scores for each activity\nKNN\nSVM\nRFC\nXGB\nFigure\
    \ 22. Average F1-scores for each activity for the four classifiers.\nObservation\
    \ Window Duration\nAn important consideration in working with activity recognition\
    \ systems is to de-\ntermine the appropriate observation window size for the analysis\
    \ of sensor signals\nto accomplish the ADL recognition/fall detection task. The\
    \ size of the observation\nwindow is important as a smaller observation window\
    \ increases the response time of\nthe activity recognition/fall detection system\
    \ and it can also impact the time taken\nin the computation of features. In order\
    \ to find the best observation window size,\nwe perform experiments using five\
    \ values, 2, 3, 4, 5 and 6 seconds. The classification\nresults in terms of the\
    \ F1-score are presented in Table 41. For each case, samples\nof duration equal\
    \ to half of the observation window were extracted around the peak\nvalue of the\
    \ SMV. From the table, it can be observed that an observation window\n108\nof\
    \ size 3 seconds produces the best results for six out of the ten output classes.\
    \ It\nonly produces poorer results for the classes BHF, BSF and S, SB where window\
    \ sizes\nof 2 seconds, 6 seconds and 4 seconds respectively perform better than\
    \ the 3 second\nwindowing case. Upon further investigation of this phenomenon\
    \ using the result of\nother classifiers, it was observed that the activities\
    \ of (BHF and BHF) were best rec-\nognized by all the classifiers with a window\
    \ size of 2 seconds (for the case of K-NN,\nthere is a small difference between\
    \ the 2 second and 6 second case), for the other two\nactivities of S and SB too\
    \ the F1-score was obtained for the 4 second duration (for\nthe activity S, the\
    \ difference in performance over windows larger than 4 seconds is\nvery small).\
    \ This could be attributed to the feature aggregation process in the max\npooling\
    \ operation in the different spatial segments.\nTable 41. Performance for different\
    \ observation window sizes.\nActivity/Fall\nObservation Window Size (F1-score\
    \ [%])\n2 sec\n3 sec\n4 sec\n5 sec\n6 sec\nBHF\n86.79\n83.02\n79.25\n83.64\n85.19\n\
    BSF\n92.17\n90.76\n89.08\n90.76\n93.22\nFHF\n78.53\n80.47\n78.32\n79.21\n78.83\n\
    FSF\n73.39\n77.18\n72.5\n76.83\n76.79\nLHF\n52.83\n67.8\n62.75\n59.26\n58.62\n\
    LSF\n79.69\n82.73\n77.57\n81.46\n79.41\nJ\n97.53\n98.27\n98.08\n98.00\n98.16\n\
    S\n95.27\n96.20\n97.60\n95.84\n95.93\nSB\n87.29\n85.71\n91.98\n90.61\n91.71\n\
    W\n98.08\n98.46\n98.12\n98.35\n98.16\nAverage\n84.16\n86.68\n84.52\n85.40\n85.60\n\
    Sensor Modality\nThe second experiment in designing the proposed system is the\
    \ determination of\nthe best sensor modality to use.\nUsing a single sensor would\
    \ result in less data,\nfaster processing and reduced hardware costs compared\
    \ to the multisensor approach\ncombining accelerometer and gyroscope. To do this,\
    \ the classification framework was\ntested with 3 second windowed segments of\
    \ the combined acceleromter and gyroscope\ndata as well as data of the accelerometer\
    \ and gyroscope sensors individually. The\nresults of this experiment are presented\
    \ in Table 42. It can be observed that using\na combination of both accelerometer\
    \ and gyroscope data together produces the best\nresults for eight of the ten\
    \ output classes. An accelerometer-only system produces\nbetter results for the\
    \ detection of activity SB and the fall FHF. The outcome of this\nexperiment agrees\
    \ with previous work for fall detection by Waheed et. al. [436] on\nthe SisFall\
    \ dataset.\n2.8.2.4\nDiscussion\nTable 43 reports on the best results obtained\
    \ for the proposed classification frame-\nwork. These results were achieved by\
    \ using windowed segments of 3 seconds and\n109\nTable 42. Performance for different\
    \ sensing modalities.\nActivity/Fall\nSensing Modality (F1-score [%])\nAccelerometer\
    \ + Gyroscope\nAccelerometer\nGyroscope\nBHF\n83.02\n67.92\n82.14\nBSF\n90.76\n\
    85.48\n78.18\nFHF\n80.47\n83.33\n71.17\nFSF\n77.18\n73.21\n63.96\nJ\n98.27\n97.79\n\
    95.59\nLHF\n67.80\n54.55\n55.56\nLSF\n82.73\n76.34\n73.21\nS\n96.20\n95.61\n91.17\n\
    SB\n85.71\n86.21\n76.09\nW\n98.46\n98.24\n96.30\nAverage\n86.06\n81.87\n78.33\n\
    combined data from the accelerometer and the gyroscope with a weighted F1-score\n\
    of 94.67% on the test set.\nTable 43. Best Results (Obs. Window : 3 sec, Sensing\
    \ Modality: Acc. + Gyro.)\nActivity/Fall\nPrecision (%)\nSensitivity/Recall (%)\n\
    Specificity (%)\nF1-Score (%)\nBHF\n95.65\n73.33\n99.96\n83.02\nBSF\n91.53\n90.00\n\
    99.80\n90.76\nFHF\n86.08\n75.56\n99.57\n80.47\nFSF\n76.86\n77.50\n98.88\n77.18\n\
    LHF\n68.97\n66.67\n99.65\n67.80\nLSF\n79.85\n85.83\n98.96\n82.73\nJ\n97.87\n98.68\n\
    99.36\n98.27\nS\n95.00\n97.44\n99.31\n96.20\nSB\n93.75\n78.95\n99.80\n85.71\n\
    W\n97.95\n98.97\n98.36\n98.46\nAverage\n88.35\n84.29\n99.37\n86.06\nFrom Table\
    \ 43, the best recognized ADLs are W and J whereas the best rec-\nognized fall\
    \ is BSF. The worst performing class in ADLs is SB whereas the worst\nperforming\
    \ fall is LHF. Upon further inspection of the cause of the bad performance\nwith\
    \ LHF, looking at the confusion matrix, it was observed that LHF was most\ncommonly\
    \ confused with FSF which resulted in a reduction of the classification per-\n\
    formance for this class. On the other hand, in the case of FSF (the second worse\n\
    performing class), looking at the confusion matrix, it was observed that FSF was\n\
    confused with LSF and FHF. Furthermore, the specificity values indicate that there\n\
    has been very little mis-identification for each of the classes. When talking\
    \ about\nthe activity S, it was observed that samples from this activity were\
    \ confused with\nthe activity W which resulted in the sub-par performance of the\
    \ classifier for its\nrecognition.\n110\n2.8.3\nFall Detection with Severity and\
    \ Direction along with ADL consid-\neration using CNN-XGBoost\nThis section presents\
    \ a scheme for performing fall detection considering fall direction\nand severity\
    \ as well as activity recognition. Inertial sensor data taken from the SisFall\n\
    dataset is used to develop the methodology. Data pre-processing is first carried\
    \ out\nin terms of windowing and relabeling. Then, data augmentation is carried\
    \ out for\nclasses which do not have a sufficient number of samples. Lastly, feature\
    \ extraction is\nperformed along with classification. This work considers fall\
    \ and activity recognition\nas a holistic problem, in that different types of\
    \ falls and activities are considered\nthereby producing a more ’complete’ recognition\
    \ system for use in cyber-physical\nsystems. Moreover, towards this end, a CNN-XGBoost\
    \ combination is proposed.\n2.8.3.1\nMethodology\nThe proposed scheme follows\
    \ a typical deep learning so-\nlution framework. First, inertial sensor data from\
    \ the IMU sensors contained within\nthe SisFall dataset is pre-processed to extract\
    \ windowed segments, then data aug-\nmentation is performed for minority classes,\
    \ followed by feature extraction and then\nclassification. This has been illustrated\
    \ in Figure 23 and a discussion is provided for\neach of the steps in the proceeding\
    \ sections.\nData Pre-processing\nBefore the IMU sensor recordings can be used\
    \ for ADL and fall detection, raw sensor\nmeasurements need to be suitably processed.\
    \ In this experiment, data pre-processing\nconsists of two steps, the first is\
    \ the extraction of uniform sized windows as was\nperformed in the previous section\
    \ from the IMU recordings and the next is data\naugmentation. Since windowing\
    \ of the signals has already been discussed previously,\nonly data augmentation\
    \ is discussed here.\nData Augmentation\nThe use of deep learning methods require\
    \ a suitable\namount of data to be present for them to learn the data pattern\
    \ sufficiently well. Un-\nfortunately, due to the nature of the problem considered,\
    \ the relabeled data from the\nSisFall dataset contains a reduced amount of data\
    \ for some of the classes, especially\nfall classes and also for the ADL of Standing.\
    \ In order to alleviate this shortcom-\ning, data augmentation was employed to\
    \ increase the number of samples from these\nclasses. Three augmentations were\
    \ performed for each of the extracted recordings\nfor the classes SB, FHF, FSF,\
    \ BHF, BSF, LHFand LSF. These were the addition of\nnoise, scaling and resampling\
    \ after inerpolation [439]. For augmentation with noise,\nwhite gaussian noise\
    \ was added to the extracted windows of the considered classes.\nThe noise was\
    \ generated using a standard deviation equal to 0.01. The addition of\nthe noise\
    \ simulates measurement noise during recording which might be encountered\nwhen\
    \ IMU based fall detection systems are employed. For scale based augmentation,\n\
    the original extracted window was multiplied by a random number from the uniform\n\
    distribution between 0.8 and 1.2 thereby scaling it between 80% and 120% of its\
    \ orig-\ninal form. By doing so, changes in amplitude over the same type of activity/fall\
    \ are\nincorporated. This could indicate to a change in fixation (loosening etc)\
    \ of the sensing\n111\nPeak SMV Detection\nWindowing\nCNN\nXGBoost Classifier\n\
    Data Augmentation\nData Processing\nIMU Recording (Falls and Activities) \n(ADL,\
    \ FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\n\
    Output Class \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF,\
    \ BSF, LHF, LSF)\nFeature Extraction\nClassification\nFigure 23. CNN-XGBoost based\
    \ classification scheme for ADL and Fall detection.\nunit to a subject or their\
    \ different physique and subsequent fall intensity response.\nLastly, in order\
    \ to incorporate sampling inconsistencies, the windows are first upsam-\npled\
    \ and then downsampled. This was done by a scale of ten. With this strategy,\n\
    each from original window were produced three additional samples. An illustration\n\
    for the results of the augmentation process for an X-axis accelerometer measurement\n\
    for a lateral fall has been shown in Figure 24.\nFeature extraction\nThe aim of\
    \ feature extraction for a classification problem is to produce a representa-\n\
    tion of the input that can be better used to indicate to the output class. In\
    \ this regard,\nresearch in the area of fall detection with inertial sensors has\
    \ made use of different\ntypes of hand crafted features such as statistical, time\
    \ and frequency domain as well\nas wavelet transforms [479, 480, 481, 482]. Convolutional\
    \ Neural Networks (CNNs\nor Covnets) are a set of neural networks developed following\
    \ the visual cortex within\nthe brain [483]. CNNs perform operations on inputs\
    \ by introducing convolutions of\n112\nFigure 24.\nIllustration of data augmentation.\n\
    (X component of Accelerometer,\nLateral Fall)\nseveral filters with learnable\
    \ weights to gauge the importance of each datapoint in\nthe input. These layers\
    \ containing the filters and to which the input is provided are\ncalled convolutional\
    \ layers. Through these learnable weights, CNNs are able to cap-\nture temporal\
    \ and spatial dependencies of the input. Moreover, using the same filters\nfor\
    \ different inputs reduces the number of parameters as the weights are reused.\
    \ This\nallows CNNs to develop a deeper understanding of the provided input compared\
    \ to\ntypical multilayer perceptron models. CNNs have revolutionized the field\
    \ of computer\nvision where they have been used for a variety of tasks such as\
    \ classification, object\ndetection, segmentation and object counting [484, 485]\
    \ and they have also successfully\nbeen used for applications within the speech\
    \ and other time series signal application\ndomain [486, 487, 488]. In this experiment,\
    \ rather than using hand crafted features\n113\nas in the previous experiments,\
    \ a CNN has been used to perform feature extraction\nin order to take advantage\
    \ of the spatial and temporal dependency capturing capa-\nbilities of CNNs. CNNs\
    \ are usually comprised of several convolutional (Conv) layers.\nWithin a multilayer\
    \ CNN, the earlier Conv layers capture low level features from the\ninput with\
    \ more complex features being computed by the successive layers. Also,\nCNNs may\
    \ employ pooling layers between convolutional layers so as to reduce the\nsize\
    \ of the input passed on to successive layers and therefore reduce computation.\n\
    The proposed network along with the XGBoost classification stage is illustrated\
    \ in\nFigure 25.\nConv\n64 filters (3x1)\nConv\n64 filters (3x1)\nConv\n64 filters\
    \ (3x1)\nConv\n64 filters (3x1)\nAvg Pooling\nAvg Pooling\nAvg Pooling\nFlatten\n\
    XGB classification\nStage\nFigure 25. CNN Network for feature extraction and XGBoost\
    \ classification stage.\nAs seen from the figure, the network consists of four\
    \ Conv layers of 64 filters\neach.\nThese layers have filters of size 3x1 and\
    \ are used to extract features from\nraw inertial sensor measurements. Each Conv\
    \ layer is followed by a Relu activation\nfunction which applies a non-linearity\
    \ to the output of the Conv layers. To condense\nthe output of the first three\
    \ Conv layers, a pooling layer is utilized. Instead of max\npooling, average pooling\
    \ is used in this network. Max pooling picks out the largest\nvalue of the patch\
    \ of data being observed currently, in contrast, average pooling uses\nthe average\
    \ of the data being observed. Average pooling has been successfully used in\n\
    114\nplace of max pooling in a variety of scenarios [489, 490]. Normalization\
    \ is performed\nusing a batch normalization layer for each Conv layer. The output\
    \ of the last Conv\nlayer are feature maps derived from the input raw inertial\
    \ sensor measurements from\nboth the accelerometer and the gyroscope.\nClassification\n\
    Classification is carried out by using a eXtreme Gradient Boosting (XGBoost) clas-\n\
    sifier. The output from the CNN is first flattened and then provided as an input\
    \ to\nthe XGBoost stage. The parameters of the XGBoost classifier are tuned through\
    \ a\nparameter search over a range of values. We make use of an XGBoost classifier\
    \ due\nto its suitability for a large dimensional input which results from the\
    \ flattened CNN\noutput.\n2.8.3.2\nResults\nIn order to use the proposed CNN for\
    \ feature extraction, it must first be trained\naccordingly. In order to train\
    \ the network, a fully connected layer with a softmax\noutput was added as the\
    \ final stage to serve as the intermediate temporary output\ndeterminant stage.\
    \ The windowed data from the SisFall dataset was divided in to\nthree sets, train,\
    \ validation and test in a stratified manner. A learning rate of 0.01\nwas used\
    \ for the network with a batch size of 20 and the stochastic gradient descent\n\
    was used as the optimizer. Moreover, the metric chosen was the average of the\
    \ recall\nscores of all classes together, also called as the unweighted average\
    \ recall (UAR).\nThe recall is considered as one wants the system correctly classify\
    \ as many positive\nsamples for every class as possible. The final network was\
    \ determined using early\nstopping. The unweighted average recall (UAR) can be\
    \ computed as,\nUAR =\nk\nX\nn=0\n\x10\nTPn\nTPn+FNn\n\x11\nk\n(11)\nwhere k stands\
    \ for number of classes and TPn stands for the number of True\nPositive samples\
    \ in the nth class and FNn stands for number False Negative samples\nin the nth\
    \ class. Therefore, the average of the individual recall scores from all classes\n\
    was aimed to be maximized.\nData from the training set was provided to the CNN\
    \ network after performing data\naugmentation on the minority classes, during\
    \ training, the validation set was used\nto observe performance of the network\
    \ and determine the best performing instance.\nOnce training was finished, the\
    \ last fully connected classification layer was removed\nand replaced by an XGBoost\
    \ classification stage. To train the XGBoost stage, the\nweights of the final\
    \ best performing CNN model were loaded in to CNN layers of\nthe network and input\
    \ samples were then passed through them as before. Using the\noutput of the CNN\
    \ stage as an input for the XGBoost, a search was then carried\nout to determine\
    \ the optimal parameter values. After training of the XGBoost stage,\nthe completely\
    \ trained CNN-XGBoost model was tested using the test set.\nTwo\n115\nsets of\
    \ tests were performed, one while considering all ADLs as a single class versus\n\
    individual falls and the other considering common individual ADLs and individual\n\
    falls.\nOne ADL vs Individual Falls\nIn this experiment, all ADLs present in the\
    \ SisFall dataset were combined in to one\nclass to build a generic ADL versus\
    \ fall system. The results are presented in Table 44.\nIt can be observed from\
    \ the table that the ADL class has been detected with perfect\nrecall score. Among\
    \ the falls, the worst performance was observed for LHF with the\nbest performance\
    \ for FHF.\nTable 44. One ADL vs. Individual Falls.\nActivity/ Fall\nPrecision\n\
    (%)\nSensitivity/\nRecall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n91.67\n\
    100\n95.65\nBSF\n100\n95.83\n100\n97.87\nFHF\n85.37\n97.22\n99.41\n90.91\nFSF\n\
    92.86\n81.25\n99.71\n86.67\nLHF\n72.73\n66.67\n99.70\n69.57\nLSF\n89.58\n89.58\n\
    99.50\n89.58\nADL\n99.54\n100\n97.78\n99.77\nAverage\n91.44\n88.89\n99.44\n90.02\n\
    Individual ADLs vs Individual Falls\nThe results of the experiment have been shown\
    \ in Table 45.\nTable 45. Individual ADLs vs. Individual Falls.\nActivity/Fall\n\
    Precision (%)\nSensitivity/Recall (%)\nSpecificity (%)\nF1-Score (%)\nBHF\n100\n\
    75.00\n100\n85.71\nBSF\n95.83\n95.83\n99.90\n95.83\nFHF\n76.19\n88.89\n99.01\n\
    82.05\nFSF\n90.24\n77.08\n99.60\n83.15\nLSF\n86.79\n95.83\n99.30\n91.09\nLHF\n\
    75.00\n75.00\n99.71\n75.00\nJ\n96.71\n96.71\n99.01\n96.71\nS\n96.77\n96.77\n99.57\n\
    96.77\nSB\n91.18\n83.78\n99.70\n87.32\nW\n97.21\n97.63\n97.77\n97.42\nAverage\n\
    90.59\n88.25\n99.36\n89.11\nAn average recall of 88.25% was observed for the experiment.\
    \ From Table 45,\nwhen looking at the recall achieved for the individual activities,\
    \ it can be observed\nthat the best recognized activities are W and J with each\
    \ achieving a recall of around\n97%. The worst performance in terms of ADLs was\
    \ achieved for the activity SB for\nwhich a recall of 83.78% was attained. Considering\
    \ the case of falls, out of the six\nfalls, the worst recall score of 75% was\
    \ achieved for BHF and LHF whereas the best\nrecall score was of 95.83% was achieved\
    \ for BSF and LSF. The fall class FSF was also\n116\nnot identified well, achieving\
    \ a recall score of 77.08%. Furthermore, as observed from\nthe table, a high value\
    \ of specificity was obtained for all ADLs and falls indicating\nto correct determination\
    \ of negative samples for each class as well. Investigating the\nperformance of\
    \ the network from the confusion matrix, it was observed that the worst\nperforming\
    \ activity SB was equally confused as S and W, this can be attributed to\nthe\
    \ fact that the SB activity includes slight bending which could lead to confusion\
    \ for\nthe classifier. For the worst performing falls, it was observed that BHF\
    \ was confused\nwith LHF and LSF whereas LHF was confused with FHF and FSF. The\
    \ confusion\nbetween the falls is apparent from plots shown in Appendix A where\
    \ BHF has very\nsimilar accelerometer signal values to these classes.\n2.8.3.3\n\
    Discussion\nInorder to better understand the performance of the network for the\
    \ various fall\ndetection types from Tables 44 and 45, the performance of the\
    \ network for fall severity\nhas been illustrated in Figure 26. It can be observed\
    \ that soft falls are better detected\ncompared to hard falls with UARs for the\
    \ individual ADL and fall experiment being\n79.63% for hard falls and that for\
    \ soft falls is 89.58%. For the one ADL and individual\nfall experiment, the difference\
    \ is less stark, being 85.18% for hard falls and 88.88%\nfor soft falls.\n60\n\
    65\n70\n75\n80\n85\n90\n95\n100\nInd ADLs/Ind Falls\nOne ADL/Ind Falls\nPerformance\
    \ for Fall Severity\nHard Falls\nSoft Falls\nFigure 26. Network performance for\
    \ different fall directions.\nFigure 27 illustrates the performance of the network\
    \ in fall detection for the three\ndirections considered for both experiments,\
    \ regardless of severity. It can be observed\nthat falls in backward and lateral\
    \ directions are determined with equal effectiveness,\nan average recall score\
    \ (UAR) of 85.42% was achieved for both cases where as for\nthe forward direction,\
    \ the UAR was 82.99%. As can be seen, there is a only a small\ndifference (3.43%)\
    \ between the achieved UARs.\n117\n60\n65\n70\n75\n80\n85\n90\n95\n100\nOne ADL/Ind\
    \ Falls\nInd ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\n\
    Backward Falls\nLateral Falls\nFigure 27. Network performance for different fall\
    \ directions.\nIn order to further test the performance of the developed CNN-XGBoost\
    \ scheme,\ntests were performed with the CNN network architecture presented in\
    \ [430].\nWe\nchoose the technique of [430] as the authors provide very good results\
    \ for fall detection\nusing the SisFall dataset using a deep learning model. The\
    \ results for the performance\nof the considered technique in comparison to the\
    \ method presented in this experiment\nis shown Table 46 and 47. The Recall scores\
    \ have been presented. It can be observed\nthat the proposed method outperforms\
    \ the work of Casilari et. al. for all classes\nexcept LHF. Moreover, there is\
    \ a large difference in the average recall achieved.\nTable 46. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n66.67\n91.67\nBSF\n64.58\n95.83\n\
    FHF\n95.83\n97.22\nFSF\n75\n81.25\nLHF\n77.78\n66.67\nLSF\n87.5\n89.58\nADL\n\
    99.31\n100\nAverage\n80.95\n88.89\nThe mean recall score achieved is 85.69% for\
    \ [430] for the individual ADLs vs\nIndividual Fall experiment compared to more\
    \ than 88% for the proposed scheme.\nIt can be observed from Table 47 that the\
    \ proposed CNN-XGBoost combination\noutperforms the work of Casilari et al. [430]\
    \ in seven out of the ten output classes\nfor recall while achieving a similar\
    \ performance for the classes of BHF, LHFand S.\n118\nTable 47. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n75.00\n75.00\nBSF\n87.50\n95.83\n\
    FHF\n80.56\n88.89\nFSF\n72.92\n77.08\nLHF\n75.00\n75.00\nLSF\n93.75\n95.83\nJ\n\
    96.30\n96.71\nS\n96.77\n96.77\nSB\n81.08\n83.78\nW\n95.04\n97.63\nAverage\n85.39\n\
    88.25\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-attention\n\
    network\nThis section presents a discussion on fall detection with severity and\
    \ direction along\nwith ADL recognition on the SisFall and the K-Fall datasets.\
    \ Two experiments were\nconducted in this regard, one with all ADLs as one class\
    \ versus the six fall types\nconsidered and another for individual ADLs and falls.\n\
    2.8.4.1\nData Labeling\nSince this experiment also uses the K-Fall dataset, the\
    \ labeling scheme for K-Fall\nis shown in Table 48. The labeling for the SisFall\
    \ dataset was retained the same\nfor the individual ADL and fall experiment.\n\
    However, for the one ADL and fall\nexperiment, all activities were labeled as\
    \ a single class ADL.\n2.8.4.2\nMethodology\nThe methodology consists of the two\
    \ steps of data preprocessing and classifi-\ncation. Data preprocessing has been\
    \ performed in the same manner as in section\n2.8.3.1. Therefore, this section\
    \ focuses on the ConvLSTM network used. The net-\nwork used in this work is illustrated\
    \ in Figure 28. It consists of four layers, the first\nof these is the ConvLSTM\
    \ layer. The ConvLSTM layer combines the properties of\nsequential learning associated\
    \ with LSTMs with the feature extraction capabilities\nof convolutional neural\
    \ networks and they have found successful use in the human\nactivity recognition/fall\
    \ detection domain [491, 492]. By replacing the simple matrix\nmultiplication\
    \ within LSTM cells by a convolutional operation, the ConvLSTM can\ncapture spatio-temporal\
    \ dependencies as opposed to the temporal only qualities of-\nfered by LSTMs.\
    \ Such spatial information is useful for the problem of fall detection\nwhere\
    \ not only the sequence contained within the recordings is important but also\n\
    the spatial information is also important to determine things like direction for\
    \ e.g.\nThe ConvLSTM layer is followed by a Self-Attention layer to incorporate\
    \ attention\n119\nTable 48. Labeling for K-Fall Dataset\nActivity Code\nAssigned\
    \ Label\nFall code\nAssigned Label\nD01\nADL/-\nF01\nFSF\nD02\nADL/SB\nF02\nBSF\n\
    D03\nADL/SB\nF03\nLSF\nD04\nADL/-\nF04\nFSF\nD05\nADL/S\nF05\nLSF\nD06\nADL/W\n\
    F06\nFSF\nD07\nADL/W\nF07\nLSF\nD08\nADL/J\nF08\nBSF\nD09\nADL/J\nF09\nFSF\nD10\n\
    ADL/-\nF10\nLSF\nD11\nADL/-\nF11\nFHF\nD12\nADL/-\nF12\nFHF\nD13\nADL/S\nF13\n\
    FHF\nD14\nADL/S\nF14\nLHF\nD15\nADL/S\nF15\nBHF\nD16\nADL/S\n-\n-\nD17\n-/ADL\n\
    -\n-\nD18\nADL/S\n-\n-\nD19\nADL/S\n-\n-\nD20\nADL/W\n-\n-\nD21\nADL/-\n-\n-\n\
    mechanism. Through the attention layer, important parts in the signal which can\n\
    help to determine the output class correctly are identified. For the current work,\
    \ a\nglobal attention mechanism which looks at the complete sequence is used.\
    \ After the\nattention layer follow two fully connected layers, one with a relu\
    \ activation function\nand the other with a softmax function to determine the\
    \ output class.\n2.8.4.3\nResults\nTwo experiments were performed in total on\
    \ the two datasets considered. The\nexperiments consisted of a fall vs ADL scenario\
    \ and another scenario in which ADLs\nwere conisdered individually to provide\
    \ a combined fall and ADL recognition system.\nThe results for each of the experiments\
    \ have been presented in this section. The\nnetwork was trained using an Adam\
    \ optimizer for 40 epochs with early stopping\nbeing used to retain the best performing\
    \ model before running it on the test set.\nAlso, during training, the network\
    \ was tasked to maximize the average recall of all\nclasses combined to ensure\
    \ that positive samples of each class were prioritized for\ncorrect detection,\
    \ however, in addition to recall, the precision, specificity and F1-\nscore have\
    \ also been reported in the results presented for the sake of completeness.\n\
    One ADL vs Individual Falls\nIn this experiment, all the ADLs were considered\
    \ a single class while the categories for\nfalls were retained as per individual\
    \ directions and severity levels. Table 49 presents\nthe results for this experiment\
    \ with the SisFall dataset for which an average recall of\n90.02% was achieved.\
    \ It can be observed that the network is able to determine ADLs\nvery well achieving\
    \ a recall of 99.93%. Considering falls, the class LHF is the worst\n120\nConvLSTM\n\
    16 filters (3x1)\nSelf Attention\nFully connected\n(Relu)\nPeak SMV Detection\n\
    Windowing\nFully connected\n(Softmax) Classifier\nData Augmentation\nData Processing\n\
    IMU Recording (Falls and Activities) \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n\
    (W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nOutput Class \n(ADL, FHF, FSF, BHF,\
    \ BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFeature Extraction\n\
    Classification\nFigure 28. ConvLSTM-attention Network.\n121\nperforming fall which\
    \ has been detected with a recall of only 68.42%. It was observed\nthat falls\
    \ from LHF were confused with forward falls and LSF. The best performing\nfall\
    \ is FHF with a recall of 98.28%.\nTable 49. Results for SisFall: One ADL vs.\
    \ Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\nRecall (%)\n\
    Specificity\n(%)\nF1-score\n(%)\nBHF\n100\n94.74\n100\n97.30\nBSF\n94.74\n94.74\n\
    99.88\n94.74\nFHF\n83.82\n98.28\n99.36\n90.48\nFSF\n94.20\n84.42\n99.76\n89.04\n\
    LHF\n81.25\n68.42\n99.83\n74.29\nLSF\n89.61\n89.61\n99.53\n89.61\nADL\n99.8\n\
    99.93\n98.96\n99.87\nAverage\n91.92\n90.02\n99.62\n90.76\nTable 50. Results for\
    \ K-Fall: One ADL vs. Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n92.00\n100\n95.83\nBSF\n\
    98.00\n96.08\n99.90\n97.03\nFHF\n82.93\n91.89\n98.63\n87.18\nFSF\n93.41\n85.00\n\
    99.4\n89.01\nLHF\n78.57\n88.00\n99.44\n83.02\nLSF\n96.97\n96.00\n99.70\n96.48\n\
    ADL\n99.45\n99.72\n98.93\n99.59\nAverage\n92.76\n92.67\n99.43\n92.59\nTable 50\
    \ presents the results for the K-Fall dataset when all ADLs are combined in\n\
    to one class. It can be observed that like the case for the SisFall dataset, the\
    \ ADLs in\nthis case have been detected very well, resulting in a recall of 99.72%.\
    \ Considering the\nperformance of falls, the best performing fall classes were\
    \ BSF and LSF for which a\nrecall of 96% was achieved. The worst performing fall\
    \ class in this case was FSF with\na recall of 85%.\nIndividual ADL vs Individual\
    \ Falls\nIn this experiment, individual ADLs were considered as separate classes\
    \ in addition\nto the six fall classes mentioned before. This exercise was carried\
    \ out to assess the\ndesigned systems performance as a combined ADL recognition\
    \ and fall detection\nsystem. The result for the SisFall dataset are presented\
    \ in Table 51. The average\nrecall achieved for this experiment using the SisFall\
    \ dataset is 91.49%.\nConsidering fall performance, it can be observed from Table\
    \ 51 that the class\nBSF is the best recognized fall, having a recall of 94.74%\
    \ with the fall LHF being\nthe worst recognized one with a recall of 73.68%. The\
    \ best recognized ADL is the\nclass W with a near perfect recall of 99.06%. The\
    \ worst recognized ADL is S with\n96.98% which is not a large difference compared\
    \ to the performance for falls. Table\n?? presents the results of the network\
    \ for the K-Fall dataset for this experiment. It\n122\nTable 51. Results for SisFall:\
    \ Individual ADLs vs. Individual Falls\nActivity/\nFall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n89.47\n89.47\n99.88\n89.47\n\
    BSF\n100\n94.74\n100\n97.30\nFHF\n86.89\n92.98\n99.51\n89.83\nFSF\n94.37\n87.01\n\
    99.75\n90.54\nLHF\n70.00\n73.68\n99.64\n71.79\nLSF\n88.89\n93.51\n99.44\n91.14\n\
    J\n98.44\n97.42\n99.53\n97.93\nS\n97.97\n96.98\n99.73\n97.47\nSB\n94.74\n90.00\n\
    99.81\n92.31\nW\n98.00\n99.06\n98.39\n98.53\nAverage\n91.88\n91.49\n99.57\n91.63\n\
    can be observed that in this case, the best performance for the fall categories\
    \ is both\nfor BSF and LSF\neach of which have a recall of 98%. The worst performing\
    \ fall is\nthe class BHF , it was observed that samples from this class were confused\
    \ with the\nclass BSF. For the case of ADLs, the best performing ADL for the K-Fall\
    \ dataset is\nSB with a recall of 97.5% with the worst being the class J.\n2.8.4.4\n\
    Discussion\nWhen comparing the performance of ADLs and falls overall for both\
    \ experiments,\nit can be observed that ADL recognition performance was much better\
    \ than the\nperformance for fall detection. For both experiments conducted, when\
    \ comparing the\nperformance of the network across datasets, the network performs\
    \ better on the K-Fall\ndataset compared to the SisFall dataset. This could be\
    \ attributed to the difference\nin the volunteer make up of the participants as\
    \ K-Fall mostly had young people\nvolunteering to perform falls whereas SisFall\
    \ contains a wide variety of age groups\nand gender make up in its volunteers.\
    \ To gather further insights in to the performance\nof the network in terms of\
    \ fall detection for the two experiments conducted across both\ndatasets, Figure\
    \ 29 illustrates the networks performance for falls for both datasets\nand experiments.\
    \ An average recall of 88.37% was achieved for the SisFall dataset\nand 91.49%\
    \ for the K-Fall dataset for the one ADL vs individual falls experiment\nand 88.57%\
    \ and 91.33% respectively for the individual ADL and individual falls\nexperiment.\
    \ It can be observed that the classes LSF, FHF and BSF were recognized\nvery well,\
    \ each achieving a recall of nearly 90% or higher. The class FHF was also\ndetected\
    \ sufficiently well, achieving an average recall of more than 86% across all\n\
    experiments. For SisFall, the least performing class was LHF and for K-Fall it\
    \ was\nBHF.\nFigure 30 investigates the performance of the network when considering\
    \ different\nfall severity levels for all the experiments. It can be observed\
    \ that soft falls have\nbeen consistently better recognized compared to hard falls.\
    \ This difference is largest\n(6%) when individual ADLs are considered as separate\
    \ classes for both datasets. For\nthe experiment where ADLs are grouped in to\
    \ a single class, there is only a slight\n123\n60\n65\n70\n75\n80\n85\n90\n95\n\
    100\nBHF\nBSF\nFHF\nFSF\nLHF\nLSF\nFall Results: Both Experiments\nSisFall One\
    \ ADL/Individual Falls\nSisFall Individual ADLs/Individual Falls\nKfall One ADL/Individual\
    \ Falls\nKfall Individual ADLs/Individual Falls\nFigure 29. Fall detection performance\
    \ for both experiments.\ndifference observed between the fall severity levels\
    \ for the K-Fall dataset whereas for\nSisFall, there is still a significant difference\
    \ of more than 5% between the detection\nof soft and hard falls.\nSisFall\nKfall\n\
    60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall One ADL/Ind Falls\nKFall One ADL/Ind\
    \ Falls\nSisFall Ind ADLs/Ind Falls\nKFall Ind ADLs/Ind Falls\nPerformance for\
    \ Fall Severity\nHard Falls\nSoft Falls\nFigure 30. Fall severity performance.\n\
    In Figure 31, the results from the experiments for fall direction have been illus-\n\
    trated. In this case, the performance of the network for tests using SisFall yield\
    \ best\nresults for falls in the backward direction with falls in the lateral\
    \ directions being\nrecognized the worst. In contrast, for the K-Fall dataset,\
    \ falls in the lateral direc-\n124\n60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall\
    \ One ADL/Ind Falls\nKfall One ADL/Ind Falls\nSisFall Ind ADLs/Ind Falls\nKfall\
    \ Ind ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\nBackward\
    \ Falls\nLateral Falls\nFigure 31. Fall direction performance.\ntion have been\
    \ detected quite well, followed by backfward falls and forward falls. In\norder\
    \ to gauge the performance of the network, the work of We et al. [459] was\nused\
    \ as a comparison as they also utilize sequential modeling in their work and cater\n\
    to non-binary fall detection as well. Table 53 and 54 presents the results for\
    \ both\nexperiments with the cases where the work of Wu et al. outperforms the\
    \ presented\nmethod highlighted. It can be observed that the presented method\
    \ outperforms the\nmethod of [459] sufficiently well. Another thing to note is\
    \ that as observed with the\nresults presented, a similar pattern of variation\
    \ was observed for both data sets with\nrespect to the two experiments in that\
    \ a degradation was observed for experiments\nfor K-Fall whereas an improvement\
    \ was observed for SisFall.\nTable 53. Comparison with State of the art (Individual\
    \ ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall (%)\n[]\nWork\
    \ of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n63.16\n94.74\n92.00\n\
    92.00\nBSF\n86.84\n94.74\n96.08\n96.08\nFHF\n77.59\n98.28\n83.78\n91.89\nFSF\n\
    76.62\n84.42\n90.00\n85.00\nLHF\n68.42\n68.42\n64.00\n88.00\nLSF\n77.92\n89.61\n\
    93.00\n96.00\nADL\n98.78\n99.93\n99.58\n99.72\nAverage\n78.48\n90.02\n88.35\n\
    92.67\n3\nConclusion\nFall detection is an important task in the field of ambient\
    \ assisted living. Towards this\nend, four experiments were performed in this\
    \ chapter. In the first experiemt, a fall\n125\nTable 54. Comparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n58.33\n\
    89.47\n76.00\n76.00\nBSF\n87.50\n94.74\n100\n98.04\nFHF\n83.33\n92.98\n91.89\n\
    95.95\nFSF\n81.25\n87.01\n89.00\n88.00\nLHF\n41.67\n73.68\n64.00\n92.00\nLSF\n\
    81.25\n93.51\n95.00\n98.00\nJ\n98.77\n97.42\n55.45\n87.13\nS\n88.71\n96.98\n81.17\n\
    90.91\nSB\n83.78\n90.00\n87.50\n97.50\nW\n96.12\n99.06\n87.30\n95.24\nAverage\n\
    80.07\n91.48\n82.74\n91.88\nTable 55. Results for the four Experiments for the\
    \ SisFall dataset (F1-Score[%])\nActivity/Fall\nExp. 1\nExp. 2\nExp. 3 (One ADL)\n\
    Exp. 3 (Ind ADLs)\nExp. 4 (One ADL)\nExp. 4 (Ind ADLs)\nBHF\n87.27\n83.02\n95.65\n\
    85.71\n97.30\n89.47\nBSF\n95.08\n90.76\n97.87\n82.05\n94.74\n97.30\nFHF\n72.43\n\
    80.47\n90.91\n75.00\n90.48\n89.83\nFSF\n73.25\n77.18\n86.67\n95.83\n89.04\n90.54\n\
    LHF\n66.67\n67.80\n69.57\n83.15\n74.29\n71.79\nLSF\n84.65\n82.73\n89.58\n91.09\n\
    89.61\n91.14\nJ\n-\n98.27\n96.71\n-\n97.93\nS\n-\n96.20\n96.77\n-\n97.47\nSB\n\
    -\n85.71\n87.32\n-\n92.31\nW\n-\n98.46\n97.42\n-\n98.53\nADL\n-\n-\n99.77\n-\n\
    99.93\n-\nOverall Average\n-\n86.06\n90.02\n89.11\n90.76\n91.63\nFall Average\n\
    79.89\n80.32\n88.38\n85.47\n89.24\n88.34\nADL Average\n-\n94.66\n99.77\n94.55\n\
    99.87\n96.56\nonly detection system that considers the direction as well as the\
    \ severity of falls was\npresented. Inertial measurement sensor data from a publicly\
    \ available dataset was\nused to carry out this task. Following a typical machine\
    \ learning pipeline, the data\nwas first preprocessed by extracting equal duration\
    \ segments from the accelerometer\nand gyroscope sensor signals based on the acceleration\
    \ magnitude. This is followed\nby the computation of various time and frequency\
    \ domain features for each of these\nsegments. The next step is feature selection\
    \ and classification which is performed by\nusing four different machine learning\
    \ algorithms popular in fall detection systems.\nFirst, a baseline performance\
    \ is established and then feature reduction is performed\naiming to maintain or\
    \ improve algorithm performance by elimination of redundant\nfeatures. It was\
    \ observed that the weighted F1-score improved slightly (by just over\n1%) for\
    \ both experiments.\nThe other three experiments considered activity of daily\
    \ living and fall detection\nsimultaneously. For the second experiment, utilizing\
    \ inertial sensor data, a hierarchi-\ncal classification framework using wavelets\
    \ and adaptive pooling was presented. To\nachieve this, inertial sensor recordings\
    \ (accelerometer and gyroscope) from the Sis-\nFall dataset were utilized and\
    \ windowed segments were extracted from each recording.\nFollowing this, a level-4\
    \ haar wavelet was used to extract wavelet coefficients from\nthese windowed segments\
    \ and then 4-2-1 1-D Spatial Pyramid pooling was used to\n126\nsummarize the output\
    \ of the wavelet feature coefficients at each approximation and\ndetail level\
    \ before the max pooled coefficients were concatenated to form the final\nfeature\
    \ vector. A hierarchical classification scheme was then used consisting of three\n\
    classification stages, one for determining individual ADLs versus a generic fall\
    \ and the\nsecond and third for fall direction and severity respectively with\
    \ both voting together\nto determine the severity and direction of a fall. Towards\
    \ this end, experiments were\nconducted to determine the most appropriate size\
    \ of the observation window as well as\nsensing modality used. It was found that\
    \ for the proposed setup, a window duration\nof 3 seconds produced the best results\
    \ while using data from both the accelerometer\nand gyroscope. In the third experiment,\
    \ Inertial Measurement Unit (accelerometer\nand gyroscope) data from the SisFall\
    \ dataset is first windowed into non-overlapping\nsegments of duration 3 seconds.\
    \ After suitable data augmentation for the minority\nclasses, the windowed segments\
    \ are passed to a Convolutional Neural Network for\nfeature extraction. The CNN\
    \ is trained to maximize the unweighted average recall\nfor the validation partition.\
    \ Once the CNN is trained, an XGBoost last stage is used\nfor classification.\
    \ Experiments conducted on the test set achieve an unweighted aver-\nage recall\
    \ of 88% for both the one ADL versus individual falls and individual ADLs\nversus\
    \ fall experiments. In comparison with other techniques used for this task, the\n\
    proposed scheme produces sufficiently better results, thereby demonstrating the\
    \ effi-\ncacy of the proposed method. Lastly, a ConvLSTM network with attention\
    \ has been\nused for detection of falls considering fall direction and severity.\
    \ Using data from the\nSisFall and the K-Fall datasets, two experiments were conducted\
    \ on inertial sensor\ndata. The first considered falls versus ADLs and the other\
    \ combined ADL recognition\nand fall detection. Results for both experiments achieved\
    \ an average recall of more\nthan 90%. The results from the cross-dataset performance\
    \ indicate to the robustness\nof the designed methodology.\nTable 55 presents\
    \ the F-1 scores for the four experiments considering fall detection\nwith direction\
    \ and severity for the SisFall dataset. For experiment 1, only the fall\ndetection\
    \ with direction and severity part has been reported. A progression can be\nobserved\
    \ in the detection of falls wherein an increase of nearly 8.5% in the average\n\
    F1-score was achieved.\n127\nCHAPTER VI\nCONCLUSION AND FUTURE WORK\n1\nConclusion\n\
    This dissertation provided a coverage of the use of Internet of Things towards\
    \ the\ndevelopment of smart communities. While doing so, the main applications\
    \ of ML/DL\nalgorithms as well as optimization algorithms were discussed and mapped.\
    \ Further-\nemore, other technological components of the IoT such as sensing,\
    \ communication,\nsecurity and privacy were also talked about. Lastly, considering\
    \ the case of smart\nhealth, specifically fall detection, experimentation and\
    \ analysis was conducted and\nthe results presented.\nIn this regard, the usage\
    \ of inertial sensor data has been very popular as they do\nnot restrict a users\
    \ movement and are also easy to deploy compared to other methods.\nFour approaches\
    \ that considered fall detection with direction and severity were pre-\nsented.\
    \ In this regard, four experiments were conducted, first was the development\n\
    of a fall only detection system whereas the other three were for a combined ADL\
    \ and\nfall system. For the other three experiments, a hierarchical and two deep\
    \ learning\nbased approaches were tested. The designed methodologies were compared\
    \ to the\nstate of the art and were found to outperform them.\n2\nContribution\n\
    The Internet of Things has spearheaded tremendous change in society by allowing\
    \ for\ncapturing measurements in different facets of our daily lives. With such\
    \ a fundamental\nimpact being made, it is pertinent that researchers commit to\
    \ analyzing the current\npenetration that IoT possesses in city operation and\
    \ also providing impetuses for\nnew and novel application development. This work\
    \ aims to address these needs by\ndiscussing the use and role of the internet\
    \ of things in smart communities.\nThe\ncontribution of the work are as follows:\n\
    1. Provide a coverage of the IoT based smart city ecosystem in terms of the tech-\n\
    nologies utilized. Discussion has been provided about the sensors, communi-\n\
    cation technologies as well as the IoT architectures that enable IoT smart city\n\
    development. Finally a review of the security and privacy issues was also dis-\n\
    cussed.\n2. Present a study of the uses of ML and DL methods for different applications\
    \ of\nsmart cities in an IoT context. To this end, the type of architecture employed\n\
    and the data source type were also covered.\n128\n3. The use of optimization algorithms\
    \ in IoT smart cities has been provided. To\nthe best of our knowledge, this is\
    \ the first comprehensive review of optimization\nalgorithms in IoT Smart Cities.\n\
    4. Considering the case of smart health, methodologies have been devised for the\n\
    novel case of fall detection with direction and severity detection. In this respect,\n\
    the performance time, frequency domain and statistical features on inertial\n\
    sensor data has been analyzed and presented.\n5. A combined activity of daily\
    \ living and fall detection framework with fall di-\nrection and severity consideration\
    \ has been discussed.\nFour approaches in\nthis regard have been presented, one\
    \ utilizing time-frequency information us-\ning wavelets along with a hierarchical\
    \ classification scheme, third a Convolu-\ntional Neural Network-eXtreme Gradient\
    \ Boost combination and the last being\na ConvLSTM has been proposed. The proposed\
    \ approaches has been shown to\noutperform the state of the art in the field.\n\
    3\nFuture Work\nThe IoT is revolutionizing development of smart city applications.\
    \ There are several\nopportunities. Some of these are listed below:\n• IoT Systems\
    \ for Smart Cities\n– A major research area is in the security and privacy of\
    \ IoT in smart cities in\nterms of encryption techniques, authentication protocols,\
    \ data anonymiza-\ntion techniques and other methods to prevent unvalidated access\
    \ to the IoT\nnetwork. As mentioned before technologies such as blockchain could\
    \ help\nintroduce access tracking and control, secure device discovery, prevention\n\
    of spoofing, data loss while ensuring that end to end encryption is also\nused.\n\
    – Of the data transfer standards developed till now for IoT, many are not\ncompatible\
    \ with each other. Work needs to be carried out in this regard to\nenable intercommunication\
    \ of sensor nodes using different protocols while\nutilizing low power, which\
    \ is imperative for sensor nodes in the network.\n– Another area to work on, is\
    \ the development of efficient storage techniques\nand low power hardware which\
    \ can reduce operational costs. From a de-\nployment perspective, decentralized\
    \ systems have been proposed as the\nbest solutions to increase reliability of\
    \ the application. Techniques such as\nfederated learning allow for decentralized\
    \ DL system deployments.\n• AI/Combinatorial Optimization in IoT Smart Cities\n\
    – The development of data fusion techniques that can make the use of het-\nerogeneous\
    \ data sources easier, intelligent data reduction/feature selection\nmethods to\
    \ ensure that redundant or ’uninteresting’ data is not part of the\n129\nAI development\
    \ pipeline. This will help in a quicker turnaround time as\nwell as improved performance\
    \ of deployments. Current methods need to be\nused as well as new ones be researched\
    \ for making ML and DL algorithms\nmore explainable to suit the various applications\
    \ in a smart city.\n– Hybrid and novel optimization methodologies (for e.g. graywolf\
    \ optimiza-\ntion [493]) which combine characteristics of multiple heuristic schemes\n\
    could potentially outperform singular methodologies.\nThere have been\nseveral\
    \ works which combine multiple optimization techniques.\n– Reinforcement learning\
    \ (RL) has the potential to provide solutions to com-\nbinatorial optimization\
    \ problems as covered in [494]. The idea is to use\nmachine learning and reinforcement\
    \ learning to get rid of human created\nheurists which may lead to optimizations\
    \ towards local optimums. Agents\ncan be trained to search for these heuristics\
    \ to automate the process.\n• Smart Health: Fall detection\n– The addition of\
    \ additional sensor modalities apart from intertial sensor\nmeasurements might\
    \ help improve performance for the worst detected\nclasses from the experiments\
    \ conducted. Various authors have incorpo-\nrated medical or pressure sensors\
    \ in their fall detection systems.\nData\nfrom these sensors can be used together\
    \ as an input to a deep learning\nnetwork. This additional information gathered\
    \ for subjects while under-\ngoing a fall could also describe valuable health\
    \ parameters that can be used\nfor diagnosis or early detection of ailments which\
    \ might be the underlying\ncause of falls.\n– Another work opportunity in the\
    \ data science domain would be the as-\nsessment of this problem considering a\
    \ data centric approach, where, in\ncontrast to a model centric approach where\
    \ the focus is on developing the\nbest model, data centric focuses on working\
    \ with data to improve applica-\ntion performance using systematic procedures\
    \ for labeling, augmentation\netc. Such systematic procedures and qualitative\
    \ data analysis would aid\nin cross-dataset algorithm deployment as well.\n130\n\
    REFERENCES\n[1]\nWorldometers, “World population forecast - worldometers,” (2019).\n\
    [2]\nH. Ahvenniemi, A. Huovila, I. Pinto-Sepp¨a, and M. Airaksinen, “What\nare\
    \ the differences between sustainable and smart cities?” Cities 60, 234–\n245\
    \ (2017).\n[3]\nUnited Nations, “About the Sustainable Development Goals - United\
    \ Na-\ntions Sustainable Development,” .\n[4]\nP. Cardullo and R. Kitchin, “Being\
    \ a ‘citizen’ in the smart city: up and\ndown the scaffold of smart citizen participation\
    \ in dublin, ireland,” Geo-\nJournal 84, 1–13 (2019).\n[5]\nJ. Desdemoustier,\
    \ N. Crutzen, and R. Giffinger, “Municipalities’ under-\nstanding of the smart\
    \ city concept: An exploratory analysis in belgium,”\nTechnological Forecasting\
    \ and Social Change 142, 129–141 (2019).\n[6]\nM. S. Khan, M. Woo, K. Nam, and\
    \ P. K. Chathoth, “Smart city and\nsmart tourism: A case of dubai,” Sustainability\
    \ (Switzerland) 9 (2017).\n[7]\nD. Wu, N. Jiang, W. Du, K. Tang, and X. Cao, “Particle\
    \ swarm optimiza-\ntion with moving particles on scale-free networks,” IEEE Transactions\
    \ on\nNetwork Science and Engineering 7, 497–506 (2018).\n[8]\nM. L. Finlayson\
    \ and E. W. Peterson, “Falls, aging, and disability,” Phys-\nical Medicine and\
    \ Rehabilitation Clinics 21, 357–373 (2010).\n[9]\nB. M. Kistler, J. Khubchandani,\
    \ G. Jakubowicz, K. Wilund, and J. Sos-\nnoff, “Peer reviewed: Falls and fall-related\
    \ injuries among us adults aged\n65 or older with chronic kidney disease,” Preventing\
    \ chronic disease 15\n(2018).\n[10]\nL. Bolton, “Preventing fall injury.” Wounds:\
    \ a compendium of clinical\nresearch and practice 31, 269–271 (2019).\n[11]\n\
    Y. K. Haddad, G. Bergen, and C. Florence, “Estimating the economic\nburden related\
    \ to older adult falls by state,” Journal of public health\nmanagement and practice:\
    \ JPHMP 25, E17 (2019).\n[12]\nC. S. Florence, G. Bergen, A. Atherly, E. Burns,\
    \ J. Stevens, and C. Drake,\n“Medical costs of fatal and nonfatal falls in older\
    \ adults,” Journal of the\nAmerican Geriatrics Society 66, 693–698 (2018).\n[13]\n\
    A. Bourke, J. O’brien, and G. Lyons, “Evaluation of a threshold-based tri-\naxial\
    \ accelerometer fall detection algorithm,” Gait & posture 26, 194–199\n(2007).\n\
    131\n[14]\nR. G. Hollands, “Will the real smart city please stand up? intelligent,\n\
    progressive or entrepreneurial?” City 12, 303–320 (2008).\n[15]\nL. G. Anthopoulos\
    \ and C. G. Reddick, “Understanding electronic gov-\nernment research and smart\
    \ city: A framework and empirical evidence,”\nInformation Polity 21, 99–117 (2016).\n\
    [16]\nZ. Khan, A. Anjum, K. Soomro, and M. A. Tahir, “Towards cloud based\nbig\
    \ data analytics for smart future cities,” Journal of Cloud Computing\n4 (2015).\n\
    [17]\nA. Koubaa, A. Aldawood, B. Saeed, A. Hadid, M. Ahmed, A. Saad,\nH. Alkhouja,\
    \ A. Ammar, and M. Alkanhal, “Smart palm: An iot frame-\nwork for red palm weevil\
    \ early detection,” Agronomy 10, 1–21 (2020). No\nML or dL used.\n[18]\nM. O’Grady,\
    \ D. Langton, and G. O’Hare, “Edge computing: A tractable\nmodel for smart agriculture?”\n\
    Artificial Intelligence in Agriculture 3,\n42–51 (2019).\n[19]\nI. Rojek and J.\
    \ Studzinski, “Detection and localization of water leaks in\nwater nets supported\
    \ by an ict system with artificial intelligence methods\nas away forward for smart\
    \ cities,” Sustainability (Switzerland) 11 (2019).\n[20]\nK. Pardini, J. J. Rodrigues,\
    \ S. A. Kozlov, N. Kumar, and V. Furtado, “Iot-\nbased solid waste management\
    \ solutions: A survey,” Journal of Sensor and\nActuator Networks 8 (2019).\n[21]\n\
    J. Dutta, C. Chowdhury, S. Roy, A. I. Middya, and F. Gazi, “Towards\nsmart city:\
    \ Sensing air quality in city based on opportunistic crowd-\nsensing,” ACM International\
    \ Conference Proceeding Series (2017).\n[22]\nF. Al-Turjman and A. Malekloo, “Smart\
    \ parking in iot-enabled cities: A\nsurvey,” Sustainable Cities and Society 49\
    \ (2019).\n[23]\nE. Shirazi and S. Jadid, “Autonomous self-healing in smart distribution\n\
    grids using multi agent systems,” IEEE Transactions on Industrial Infor-\nmatics\
    \ 3203, 1–11 (2018).\n[24]\nR. V. Andre˜ao, M. Athayde, J. Boudy, P. Aguilar,\
    \ I. de Araujo, and\nR. Andrade, “Raspcare: A telemedicine platform for the treatment\
    \ and\nmonitoring of patients with chronic diseases,” in “Assistive Technologies\n\
    in Smart Cities,” (IntechOpen London, UK, 2018).\n[25]\nP. A. Keane and E. J.\
    \ Topol, “With an eye to ai and autonomous diag-\nnosis,” npj Digital Medicine\
    \ 1, 10–12 (2018).\n[26]\nG. Trencher and A. Karvonen, “Stretching “smart”: advancing\
    \ health\nand well-being through the smart city agenda,” Local Environment 24,\n\
    610–627 (2019).\n132\n[27]\nB. R. Haverkort and A. Zimmermann, “Smart industry:\
    \ How ict will\nchange the game!” IEEE Internet Computing 21, 8–10 (2017).\n[28]\n\
    F. Tao, J. Cheng, and Q. Qi, “Iihub: An industrial internet-of-things\nhub toward\
    \ smart manufacturing based on cyber-physical system,” IEEE\nTransactions on Industrial\
    \ Informatics 14, 2271–2280 (2018).\n[29]\nP. Trakadas, P. Simoens, P. Gkonis,\
    \ L. Sarakis, A. Angelopoulos, A. P.\nRamallo-Gonz´alez, A. Skarmeta, C. Trochoutsos,\
    \ D. Calvo, T. Pariente,\nK. Chintamani, I. Fernandez, A. A. Irigaray, J. X. Parreira,\
    \ P. Petrali,\nN. Leligou, and P. Karkazis, “An artificial intelligence-based\
    \ collaboration\napproach in industrial iot manufacturing: Key concepts, architectural\n\
    extensions and potential applications,” Sensors (Switzerland) 20, 1–20\n(2020).\
    \ Ni as this is about architecture of AI in to Smart industry.\n[30]\nJ. Wan,\
    \ J. Yang, Z. Wang, and Q. Hua, “Artificial intelligence for cloud-\nassisted\
    \ smart factory,” IEEE Access 6, 55419–55430 (2018).\n[31]\nY. Huang, Z. Dang,\
    \ Y. Choi, J. Andrade, and A. Bar-ilan, “High-precision\nsmart system on accelerometers\
    \ and inclinometers for structural health\nmonitoring: development and applications,”\
    \ in “2018 12th France-Japan\nand 10th Europe-Asia Congress on Mechatronics,”\
    \ (IEEE, 2018), pp. 52–\n57.\n[32]\nS. G. Farag, “Application of smart structural\
    \ system for smart sustainable\ncities,” in “2019 4th MEC International Conference\
    \ on Big Data and\nSmart City (ICBDSC),” (2019), pp. 1–5.\n[33]\nY. Wang, S. Ram,\
    \ F. Currim, E. Dantas, and L. A. Sab´oia, “A big data\napproach for smart transportation\
    \ management on bus network,” IEEE\n2nd International Smart Cities Conference:\
    \ Improving the Citizens Qual-\nity of Life, ISC2 2016 - Proceedings pp. 0–5 (2016).\n\
    [34]\nA. Lele, “Internet of things (iot),” Smart Innovation, Systems and Tech-\n\
    nologies 132, 187–195 (2019).\n[35]\nP. Mell and T. Grance, “The nist-national\
    \ institute of standars and\ntechnology- definition of cloud computing,” NIST\
    \ Special Publication 800-\n145 p. 7 (2011).\n[36]\nJ. B.-M. Numhauser, “Fog computing\
    \ introduction to a new cloud evolu-\ntion,” University of Alcal´a (2012).\n[37]\n\
    M. Aazam, S. Zeadally, and K. A. Harras, “Fog computing architecture,\nevaluation,\
    \ and future research directions,” IEEE Communications Mag-\nazine 56, 46–52 (2018).\n\
    [38]\nH. El-Sayed, S. Sankar, M. Prasad, D. Puthal, A. Gupta, M. Mohanty,\nand\
    \ C. T. Lin, “Edge of things: The big picture on the integration of\nedge, iot\
    \ and the cloud in a distributed computing environment,” IEEE\nAccess 6, 1706–1717\
    \ (2017).\n133\n[39]\nA. Yousefpour, C. Fung, T. Nguyen, K. Kadiyala, F. Jalali,\
    \ A. Niakan-\nlahiji, J. Kong, and J. P. Jue, “All one needs to know about fog\
    \ computing\nand related edge computing paradigms: A complete survey,” Journal\
    \ of\nSystems Architecture 98, 289–330 (2019).\n[40]\nB. L. R. Stojkoska and K.\
    \ V. Trivodaliev, “A review of internet of things\nfor smart home: Challenges\
    \ and solutions,” Journal of Cleaner Production\n140, 1454–1464 (2017). The authors\
    \ perform a literature reiew of the\narchitectures available for IoT in the Smart\
    \ home. After doing so, they\nprovide an architecture of their own which has been\
    \ derived from the other\narchitectures discussed. ¡br/¿¡br/¿*They provide a good\
    \ description of the\ntypes of appliances.\n[41]\nA. Saini and A. Malik, “Routing\
    \ in internet of things: A survey,” Com-\nmunication and Computing Systems - Proceedings\
    \ of the International\nConference on Communication and Computing Systems, ICCCS\
    \ 2016 I,\n855–860 (2017).\n[42]\nE. Casilari, J. A. Santoyo-Ram´on, and J. M.\
    \ Cano-Garc´ıa, “On the hetero-\ngeneity of existing repositories of movements\
    \ intended for the evaluation\nof fall detection systems,” Journal of Healthcare\
    \ Engineering 2020 (2020).\nThe authors in EC20 analyse various datasets which\
    \ contain accelerom-\neter signal measurements for people performing fall activities.\
    \ Within\nthis:¡br/¿¡br/¿Table 1 lists the datasets considered¡br/¿Table 2 illustrates\n\
    the characteristics of the collected data (duration etc) and the partici-\npants¡br/¿Table\
    \ 3 discusses the sampling rate and other properties of the\ndata ¡br/¿¡br/¿The\
    \ analysis involves extracting sliding time windows of\n0.5 seconds from the signals\
    \ and calculate the window with the maximum\ndifference of acceleration as described\
    \ in ref [60] to determine the win-\ndow where the fall has taken place. Once\
    \ this is done, they calculate 12\nstatistical features from the data.\n[43]\n\
    M. Rahnemoonfar and C. Sheppard, “Deep count : Fruit counting based\non deep simulated\
    \ learning,” Sensors 17, 1–12 (2017).\n[44]\nD. Thakker, B. K. Mishra, A. Abdullatif,\
    \ and S. Mazumdar, “Explainable\nartificial intelligence for developing smart\
    \ cities solutions,” Smart Cities\n3, 1353–1382 (2020).\n[45]\nA. Rahman, M. S.\
    \ Hossain, N. A. Alrajeh, and N. Guizani, “B5g and\nexplainable deep learning\
    \ assisted healthcare vertical at the edge : Covid-\n19 perspective,” IEEE Network\
    \ 34, 98–105 (2020).\n[46]\nM. Janssen, S. Luthra, S. Mangla, N. P. Rana, and\
    \ Y. K. Dwivedi, “Chal-\nlenges for adopting and implementing iot in smart cities,”\
    \ Internet Re-\nsearch ahead-of-p (2019).\n[47]\nR. S´anchez-Corcuera, A. Nu˜nez-Marcos,\
    \ J. Sesma-Solance, A. Bilbao-\nJayo, R. Mulero, U. Zulaika, G. Azkune, and A.\
    \ Almeida, “Smart cities\n134\nsurvey: Technologies, application domains and challenges\
    \ for the cities\nof the future,” International Journal of Distributed Sensor\
    \ Networks 15\n(2019).\n[48]\nB. N. Silva, M. Khan, and K. Han, “Towards sustainable\
    \ smart cities: A\nreview of trends, architectures, components, and open challenges\
    \ in smart\ncities,” Sustainable Cities and Society 38, 697–713 (2018).\n[49]\n\
    W. Ejaz and A. Anpalagan, “Internet of things for smart cities: overview\nand\
    \ key challenges,” Internet of Things for Smart Cities pp. 1–15 (2019).\n[50]\n\
    G. Marques, N. Garcia, and N. Pombo, “A survey on iot: architectures,\nelements,\
    \ applications, qos, platforms and security concepts,” in “Ad-\nvances in Mobile\
    \ cloud computing and big data in the 5G era,” (Springer,\n2017), pp. 115–130.\n\
    [51]\nK. Zhang, J. Ni, K. Yang, X. Liang, J. Ren, and X. S. Shen, “Security\n\
    and privacy in smart city applications: Challenges and solutions,” IEEE\nCommunications\
    \ Magazine 55, 122–129 (2017).\n[52]\nY. Mehmood, F. Ahmad, I. Yaqoob, A. Adnane,\
    \ M. Imran, and\nS. Guizani, “Internet-of-things-based smart cities: Recent advances\
    \ and\nchallenges,” IEEE Communications Magazine 55, 16–24 (2017).\n[53]\nW. Rong,\
    \ Z. Xiong, D. Cooper, C. Li, and H. Sheng, “Smart city archi-\ntecture: A technology\
    \ guide for implementation and design challenges,”\nChina Communications 11, 56–69\
    \ (2014).\n[54]\nE. Ahmed, I. Yaqoob, A. Gani, M. Imran, and M. Guizani, “Internet-of-\n\
    things-based smart environments: State of the art, taxonomy, and open\nresearch\
    \ challenges,” IEEE Wireless Communications 23, 10–16 (2016).\n[55]\nS. Chen,\
    \ H. Xu, D. Liu, B. Hu, and H. Wang, “A vision of iot: Ap-\nplications, challenges,\
    \ and opportunities with china perspective,” IEEE\nInternet of Things Journal\
    \ 1, 349–359 (2014).\n[56]\nB. Ahlgren, M. Hidell, and E. C. Ngai, “Internet of\
    \ things for smart\ncities: Interoperability and open data,” IEEE Internet Computing\
    \ 20,\n52–56 (2016).\n[57]\nI. Lee and K. Lee, “The internet of things (iot):\
    \ Applications, investments,\nand challenges for enterprises,” Business Horizons\
    \ 58, 431–440 (2015).\n[58]\nC. M. Morais, D. Sadok, and J. Kelner, “An iot sensor\
    \ and scenario\nsurvey for data researchers,” Journal of the Brazilian Computer\
    \ Society\n25 (2019).\n[59]\nA. Sharma and M. Sinha, “A differential evolution-based\
    \ routing algo-\nrithm for multi-path environment in mobile ad hoc network,” Interna-\n\
    tional Journal of Hybrid Intelligence 1, 23–40 (2019).\n135\n[60]\nG. P. Hancke,\
    \ B. de Carvalho de Silva, and G. P. Hancke, The role of\nadvanced sensing in\
    \ smart cities, vol. 13 (Multidisciplinary Digital Pub-\nlishing Institute, 2013).\n\
    [61]\nM. Penza, D. Suriano, M. G. Villani, L. Spinelle, and M. Gerboles, “To-\n\
    wards air quality indices in smart cities by calibrated low-cost sensors\napplied\
    \ to networks,” Proceedings of IEEE Sensors 2014-Decem, 2012–\n2017 (2014).\n\
    [62]\nF. Folianto, Y. S. Low, and W. L. Yeow, “Smartbin: Smart waste man-\nagement\
    \ system,” 2015 IEEE 10th International Conference on Intelligent\nSensors, Sensor\
    \ Networks and Information Processing, ISSNIP 2015 pp.\n1–2 (2015).\n[63]\nG.\
    \ Bedi, G. K. Venayagamoorthy, R. Singh, R. R. Brooks, and K. C.\nWang, “Review\
    \ of internet of things (iot) in electric power and energy\nsystems,” IEEE Internet\
    \ of Things Journal 5, 847–870 (2018).\n[64]\nE. Y. Song, G. J. Fitzpatrick, and\
    \ K. B. Lee, “Smart sensors and standard-\nbased interoperability in smart grids,”\
    \ IEEE Sensors Journal 17, 7723–\n7730 (2017).\n[65]\nA. A. Abdellatif, A. Mohamed,\
    \ C. F. Chiasserini, M. Tlili, and A. Erbad,\n“Edge computing for smart health:\
    \ Context-aware approaches, opportu-\nnities, and challenges,” IEEE Network 33,\
    \ 196–203 (2019).\n[66]\nK. Fan, S. Zhu, K. Zhang, H. Li, and Y. Yang, “A lightweight\
    \ authen-\ntication scheme for cloud-based rfid healthcare systems,” IEEE Network\n\
    33, 44–49 (2019).\n[67]\nA. Prati, C. Shan, and K. I. Wang, “Sensors, vision and\
    \ networks: From\nvideo surveillance to activity recognition and health monitoring,”\
    \ Journal\nof Ambient Intelligence and Smart Environments 11, 5–22 (2019).\n[68]\n\
    D. Ding, R. A. Cooper, P. F. Pasquina, and L. Fici-Pasquina, “Sensor\ntechnology\
    \ for smart homes,” Maturitas 69, 131–136 (2011).\n[69]\nB. Jan, H. Farman, M.\
    \ Khan, M. Talha, and I. U. Din, “Designing a smart\ntransportation system: An\
    \ internet of things and big data approach,”\nIEEE Wireless Communications 26,\
    \ 73–79 (2019).\n[70]\nJ. Guerrero-Ib´a˜nez, S. Zeadally, and J. Contreras-Castillo,\
    \ “Sensor tech-\nnologies for intelligent transportation systems,” Sensors (Switzerland)\
    \ 18,\n1–24 (2018).\n[71]\nA. Gharaibeh, M. A. Salahuddin, S. J. Hussini, A. Khreishah,\
    \ I. Khalil,\nM. Guizani, and A. Al-Fuqaha, “Smart cities: A survey on data manage-\n\
    ment, security, and enabling technologies,” IEEE Communications Sur-\nveys and\
    \ Tutorials 19, 2456–2501 (2017).\n136\n[72]\nS. Talari, M. Shafie-Khah, P. Siano,\
    \ V. Loia, A. Tommasetti, and J. P.\nCatal˜ao, “A review of smart cities based\
    \ on the internet of things con-\ncept,” Energies 10, 1–23 (2017).\n[73]\nD. M.\
    \ Park, S. K. Kim, and Y. S. Seo, “S-mote: Smart home framework\nfor common household\
    \ appliances in iot network,” Journal of Information\nProcessing Systems 15, 449–456\
    \ (2019).\n[74]\nI. Yaqoob, E. Ahmed, I. A. T. Hashem, A. I. A. Ahmed, A. Gani,\
    \ M. Im-\nran, and M. Guizani, “Internet of things architecture: Recent advances,\n\
    taxonomy, requirements, and open challenges,” IEEE wireless communi-\ncations\
    \ 24, 10–16 (2017).\n[75]\nP. Sakhardande, S. Hanagal, and S. Kulkarni, “Design\
    \ of disaster man-\nagement system using iot based interconnected network with\
    \ smart city\nmonitoring,” 2016 International Conference on Internet of Things\
    \ and\nApplications, IOTA 2016 pp. 185–190 (2016).\n[76]\nL. Kang, S. Poslad,\
    \ W. Wang, X. Li, Y. Zhang, and C. Wang, “A public\ntransport bus as a flexible\
    \ mobile smart environment sensing platform for\niot,” Proceedings - 12th International\
    \ Conference on Intelligent Environ-\nments, IE 2016 pp. 1–8 (2016).\n[77]\nT.\
    \ Adiono, M. Y. Fathany, R. V. W. Putra, K. Afifah, M. H. Santri-\naji, B. L.\
    \ Lawu, and S. Fuada, “Live demonstration: Minds - meshed\nand internet networked\
    \ devices system for smart home: Track selection:\nEmbedded systems,” 2016 IEEE\
    \ Asia Pacific Conference on Circuits and\nSystems, APCCAS 2016 pp. 736–737 (2017).\n\
    [78]\nA. Ghosh and N. Chakraborty, “Design of smart grid in an university\ncampus\
    \ using zigbee mesh networks,” 1st IEEE International Conference\non Power Electronics,\
    \ Intelligent Control and Energy Systems, ICPEICES\n2016 pp. 1–6 (2017).\n[79]\n\
    Y. Yan, Y. Qian, and H. Sharif, “A secure data aggregation and dispatch\nscheme\
    \ for home area networks in smart grid,” GLOBECOM - IEEE\nGlobal Telecommunications\
    \ Conference pp. 1–6 (2011).\n[80]\nU. Raza, P. Kulkarni, and M. Sooriyabandara,\
    \ “Low power wide area\nnetworks: An overview,” IEEE Communications Surveys and\
    \ Tutorials\n19, 855–873 (2017).\n[81]\nM. Kuzlu and M. Pipattanasomporn, “Assessment\
    \ of communication\ntechnologies and network requirements for different smart\
    \ grid applica-\ntions,” 2013 IEEE PES Innovative Smart Grid Technologies Conference,\n\
    ISGT 2013 pp. 1–6 (2013).\n[82]\nS. Al-Sarawi, M. Anbar, K. Alieyan, and M. Alzubaidi,\
    \ “Internet of things\n(iot) communication protocols: Review,” ICIT 2017 - 8th\
    \ International\nConference on Information Technology, Proceedings pp. 685–690\
    \ (2017).\n137\n[83]\nK. Mekki, E. Bajic, F. Chaxel, and F. Meyer, “A comparative\
    \ study of\nlpwan technologies for large-scale iot deployment,” ICT Express 5,\
    \ 1–7\n(2019).\n[84]\nS. S. I. Samuel, “A review of connectivity challenges in\
    \ iot-smart home,”\n2016 3rd MEC International Conference on Big Data and Smart\
    \ City,\nICBDSC 2016 pp. 364–367 (2016).\n[85]\nP. Kuppusamy, S. Muthuraj, and\
    \ S. Gopinath, “Survey and challenges\nof li-fi with comparison of wi-fi,” Proceedings\
    \ of the 2016 IEEE Inter-\nnational Conference on Wireless Communications, Signal\
    \ Processing and\nNetworking, WiSPNET 2016 pp. 896–899 (2016).\n[86]\nB.-S. A.\
    \ Heile and M. H. T. P. C (Futurewei) Liu, B(Huawei Technolo-\ngies) Zhang, “Wi-sun\
    \ fan overview,” (2017).\n[87]\nB. Hammi, R. Khatoun, S. Zeadally, A. Fayad, and\
    \ L. Khoukhi, “Iot\ntechnologies for smart cities,” IET Networks 7, 1–13 (2018).\n\
    [88]\nZ. A. Baig, P. Szewczyk, C. Valli, P. Rabadia, P. Hannay, M. Cherny-\nshev,\
    \ M. Johnstone, P. Kerai, A. Ibrahim, K. Sansurooah, N. Syed, and\nM. Peacock,\
    \ “Future challenges for smart cities: Cyber-security and dig-\nital forensics,”\
    \ Digital Investigation 22, 3–13 (2017).\n[89]\nT. Braun, B. C. Fung, F. Iqbal,\
    \ and B. Shah, “Security and privacy\nchallenges in smart cities,” Sustainable\
    \ Cities and Society 39, 499–507\n(2018).\n[90]\nD. Eckhoff and I. Wagner, “Privacy\
    \ in the smart city - applications, tech-\nnologies, challenges, and solutions,”\
    \ IEEE Communications Surveys and\nTutorials 20, 489–516 (2018).\n[91]\nA. S.\
    \ Elmaghraby and M. M. Losavio, “Cyber security challenges in smart\ncities: Safety,\
    \ security and privacy,” Journal of Advanced Research 5,\n491–497 (2014).\n[92]\n\
    D. POPESCUL and L. D. RADU, “Data security in smart cities: Chal-\nlenges and\
    \ solutions,” Informatica Economica 20, 29–38 (2016).\n[93]\nV. Hassija, V. Chamola,\
    \ V. Saxena, D. Jain, P. Goyal, and B. Sikdar, “A\nsurvey on iot security: Application\
    \ areas, security threats, and solution\narchitectures,” IEEE Access 7, 82721–82743\
    \ (2019).\n[94]\nD. E. Whitehead, K. Owens, D. Gammel, and J. Smith, “Ukraine\
    \ cyber-\ninduced power outage: Analysis and practical mitigation strategies,”\
    \ 70th\nAnnual Conference for Protective Relay Engineers, CPRE 2017 (2017).\n\
    [95]\nI. B. A. Ang, F. D. Salim, and M. Hamilton, “Human occupancy recogni-\n\
    tion with multivariate ambient sensors,” 2016 IEEE International Confer-\nence\
    \ on Pervasive Computing and Communication Workshops, PerCom\nWorkshops 2016 pp.\
    \ 1–6 (2016).\n138\n[96]\nL. Yang, K. Ting, and M. B. Srivastava, “Inferring occupancy\
    \ from oppor-\ntunistically available sensor data,” 2014 IEEE International Conference\n\
    on Pervasive Computing and Communications, PerCom 2014 pp. 60–68\n(2014).\n[97]\n\
    J. D. Howard and T. A. Longstaff, “A common language for computer\nsecurity incidents,”\
    \ Sandia National Laboratories (1998).\n[98]\nR. Agrawal, P. Verma, R. Sonanis,\
    \ U. Goel, A. De, S. A. Kondaveeti, and\nS. Shekhar, “Continuous security in iot\
    \ using blockchain,” ICASSP, IEEE\nInternational Conference on Acoustics, Speech\
    \ and Signal Processing -\nProceedings 2018-April, 6423–6427 (2018).\n[99]\nS.\
    \ Rizvi, J. P. Iii, A. Kurtz, and M. Rizvi, “Securing the internet of things\n\
    ( iot ): A security taxonomy for iot,” in “2018 17th IEEE International\nConference\
    \ On Trust, Security And Privacy In Computing And Commu-\nnications/ 12th IEEE\
    \ International Conference On Big Data Science And\nEngineering (TrustCom/BigDataSE),”\
    \ (IEEE, 2018), pp. 163–168.\n[100] A. Aldairi and L. Tawalbeh, “Cyber security\
    \ attacks on smart cities and\nassociated mobile technologies,” Procedia Computer\
    \ Science 109, 1086–\n1091 (2017).\n[101] M. Ali, N. Abrishamchi, A. H. Abdullah,\
    \ A. D. Cheok, and K. S.\nBielawski, “Side channel attacks on smart home systems\
    \ :\nA short\noverview,” in “IECON 2017 - 43rd Annual Conference of the IEEE In-\n\
    dustrial Electronics Society,” (2017), pp. 8144–8149.\n[102] J. Choi and Y. Kim,\
    \ “An improved lea block encryption algorithm to pre-\nvent side-channel attack\
    \ in the iot system,” in “2016 Asia-Pacific Signal\nand Information Processing\
    \ Association Annual Summit and Conference\n(APSIPA),” (Asia Pacific Signal and\
    \ Information Processing Association,\n2016), pp. 1–4.\n[103] M. A. Al-Garadi,\
    \ A. Mohamed, A. K. Al-Ali, X. Du, I. Ali, and\nM. Guizani, “A survey of machine\
    \ and deep learning methods for internet\nof things (iot) security,” IEEE Communications\
    \ Surveys & Tutorials 22,\n1646–1685 (2020).\n[104] X. Ouyang and Z. Ma, “Using\
    \ lstm networks to identify false data of smart\nterminals in the smart grid,”\
    \ Proceedings of the International Conference\non Parallel and Distributed Systems\
    \ - ICPADS 2017-Decem, 765–768\n(2018).\n[105] A. Diro and N. Chilamkurti, “Leveraging\
    \ lstm networks for attack detec-\ntion in fog-to-things communications,” IEEE\
    \ Communications Magazine\n56, 124–130 (2018).\n[106] N. Balakrishnan, A. Rajendran,\
    \ D. Pelusi, and V. Ponnusamy, “Deep\nbelief network enhanced intrusion detection\
    \ system to prevent security\nbreach in the internet of things,” Internet of Things\
    \ p. 100112 (2019).\n139\n[107] R. Khatoun and S. Zeadally, “Cybersecurity and\
    \ privacy solutions in\nsmart cities,” IEEE Communications Magazine 55, 51–59\
    \ (2017).\n[108] H. F. Atlam, A. Alenezi, M. O. Alassafi, and G. B. Wills, “Blockchain\n\
    with internet of things : Benefits , challenges , and future directions,” I.J.\n\
    Intelligent Systems and Applications 10, 40–48 (2018).\n[109] J. T. de Souza,\
    \ A. C. de Francisco, C. M. Piekarski, and G. F. do Prado,\n“Data mining and machine\
    \ learning to promote smart cities: A systematic\nreview from 2000 to 2018,” Sustainability\
    \ (Switzerland) 11 (2019).\n[110] Z. Rayan, M. Alfonse, and A. B. M. Salem, “Machine\
    \ learning approaches\nin smart health,” Procedia Computer Science 154, 361–368\
    \ (2018).\n[111] R. Varghese and S. Sharma, “Affordable smart farming using iot\
    \ and\nmachine learning,” Proceedings of the 2nd International Conference on\n\
    Intelligent Computing and Control Systems, ICICCS 2018 pp. 645–650\n(2019).\n\
    [112] S. AlZu’bi, B. Hawashin, M. Mujahed, Y. Jararweh, and B. B. Gupta,\n“An\
    \ efficient employment of internet of multimedia things in smart and\nfuture agriculture,”\
    \ Multimedia Tools and Applications 78, 29581–29605\n(2019).\n[113] K. S. P. Reddy,\
    \ Y. M. Roopa, L. N. K. Rajeev, and N. S. Nandan, “Iot\nbased smart agriculture\
    \ using machine learning,” Proceedings of the 2nd\nInternational Conference on\
    \ Inventive Research in Computing Applica-\ntions, ICIRCA 2020 pp. 130–134 (2020).\n\
    [114] A. Goap, D. Sharma, A. K. Shukla, and C. R. Krishna, “An iot based\nsmart\
    \ irrigation management system using machine learning and open\nsource technologies,”\
    \ Computers and Electronics in Agriculture 155, 41–\n49 (2018).\n[115] S. Rodr´ıguez,\
    \ T. Gualotu˜na, and C. Grilo, “A system for the monitor-\ning and predicting\
    \ of data in precision a agriculture system for the and\npredicting of wireless\
    \ data in precision in a monitoring rose greenhouse\nbased on sensor agriculture\
    \ in a rose greenhouse based on wireless sensor\nnetworks ne,” Procedia Computer\
    \ Science 121, 306–313 (2017).\n[116] N. Kitpo, Y. Kugai, M. Inoue, T. Yokemura,\
    \ and S. Satomura, “Internet\nof things for greenhouse monitoring system using\
    \ deep learning and bot\nnotification services,” 2019 IEEE International Conference\
    \ on Consumer\nElectronics, ICCE 2019 (2019).\n[117] A. K. Saha, J. Saha, R. Ray,\
    \ S. Sircar, S. Dutta, S. P. Chattopadhyay, and\nH. N. Saha, “Iot-based drone\
    \ for improvement of crop quality in agricul-\ntural field,” in “2018 IEEE 8th\
    \ Annual Computing and Communication\nWorkshop and Conference (CCWC),” (IEEE,\
    \ 2018), pp. 612–615.\n140\n[118] A. A. Araby, M. M. Abd Elhameed, N. M. Magdy,\
    \ N. Abdelaal, Y. T.\nAbd Allah, M. S. Darweesh, M. A. Fahim, H. Mostafa et al.,\
    \ “Smart iot\nmonitoring system for agriculture with predictive analysis,” in\
    \ “2019 8th\nInternational Conference on Modern Circuits and Systems Technologies\n\
    (MOCAST),” (IEEE, 2019), pp. 1–4.\n[119] S. A. Nandhini and R. H. S. Radha, “Web\
    \ enabled plant disease detec-\ntion system for agricultural applications using\
    \ wmsn,” Wireless Personal\nCommunications 102, 725–740 (2018).\n[120] L. Ale,\
    \ A. Sheta, L. Li, Y. Wang, and N. Zhang, “Deep learning based\nplant disease\
    \ detection for smart agriculture,” 2019 IEEE Globecom\nWorkshops, GC Wkshps 2019\
    \ - Proceedings pp. 1–6 (2019).\n[121] F. Balducci, D. Impedovo, and G. Pirlo,\
    \ “Machine learning applications\non agricultural datasets for smart farm enhancement,”\
    \ Machines 6 (2018).\n[122] X.-B. Jin, N.-X. Yang, X.-Y. Wang, Y.-T. Bai, T.-L.\
    \ Su, and J.-L. Kong,\n“Hybrid deep learning predictor for smart agriculture sensing\
    \ based on\nempirical mode decomposition and gated recurrent unit group model,”\n\
    Sensors 20, 1334 (2020).\n[123] S. A. M. Varman, A. R. Baskaran, S. Aravindh,\
    \ and E. Prabhu, “Deep\nlearning and iot for smart agriculture using wsn,” 2017\
    \ IEEE International\nConference on Computational Intelligence and Computing Research,\
    \ IC-\nCIC 2017 pp. 0–5 (2018).\n[124] X. bo Jin, X. hong Yu, X. yi Wang, Y. ting\
    \ Bai, and T. li Su, “Deep\nlearning predictor for sustainable precision agriculture\
    \ based on internet\nof things system,” Sustainability 12, 1433 (2020).\n[125]\
    \ K. Aliev, M. M. Jawaid, S. Narejo, E. Pasero, and A. Pulatov, “Inter-\nnet of\
    \ plants application for smart agriculture,” International Journal of\nAdvanced\
    \ Computer Science and Applications 9, 421–429 (2018).\n[126] A. L. Diedrichs,\
    \ F. Bromberg, D. Dujovne, K. Brun-laguna, T. Watteyne,\nand S. Member, “Prediction\
    \ of frost events using machine learning and iot\nsensing devices,” IEEE Internet\
    \ of Things Journal 5, 4589–4597 (2018).\n[127] R.\nReshma,\nV.\nSathiyavathi,\n\
    T.\nSindhu,\nK.\nSelvakumar,\nand\nL. SaiRamesh, “Iot based classification techniques\
    \ for soil content analysis\nand crop yield prediction,” in “2020 Fourth International\
    \ Conference on\nI-SMAC (IoT in Social, Mobile, Analytics and Cloud)(I-SMAC),”\
    \ (IEEE,\n2020), pp. 156–160.\n[128] M. Pawar and G. Chillarge, “Soil toxicity\
    \ prediction and recommendation\nsystem using data mining in precision agriculture,”\
    \ in “2018 3rd interna-\ntional conference for convergence in technology (I2CT),”\
    \ (IEEE, 2018),\npp. 1–5.\n141\n[129] K. Lee, B. N. Silva, and K. Han, “Deep learning\
    \ entrusted to fog\nnodes (dlefn) based smart agriculture,” Applied Sciences (Switzerland)\n\
    10 (2020).\n[130] M. A. Guill´en, A. Llanes, B. Imbern´on, R. Mart´ınez, E. Andr´es,\
    \ B. Cre-\nspo, and J. Carlos, “Performance evaluation of edge - computing platforms\n\
    for the prediction of low temperatures in agriculture using deep learning,”\n\
    The Journal of Supercomputing 77, 818–840 (2021).\n[131] M. A. Guill´en-navarro,\
    \ R. Mart´ınez-espa˜na, and J. M. Cecilia, “A high-\nperformance iot solution\
    \ to reduce frost damages in stone fruits,” Con-\ncurrency and Computation: Practice\
    \ and Experience 33, e5299 (2019).\n[132] M. A. Guill´en, A. Llanes, B. Imbern´on,\
    \ R. Mart´ınez-Espa˜na, A. Bueno-\nCrespo, J. C. Cano, and J. M. Cecilia, “Performance\
    \ evaluation of edge-\ncomputing platforms for the prediction of low temperatures\
    \ in agriculture\nusing deep learning,” (2020).\n[133] D. Rutqvist, D. Kleyko,\
    \ and F. Blomstedt, “An automated machine learn-\ning approach for smart waste\
    \ management systems,” IEEE Transactions\non Industrial Informatics PP, 1–1 (2019).\n\
    [134] A. Hussain, U. Draz, T. Ali, S. Tariq, M. Irfan, A. Glowacz, J. Alfonso,\n\
    A. Daviu, S. Yasin, and S. Rahman, “Waste management and prediction\nof air pollutants\
    \ using iot and machine learning approach,” Energies 13,\n3930 (2020).\n[135]\
    \ D. Zhang, G. Lindholm, and H. Ratnaweera, “Use long short-term mem-\nory to\
    \ enhance Internet of Things for combined sewer overflow monitor-\ning,” Journal\
    \ of Hydrology 556, 409–418 (2018).\n[136] P. Varalakshmi, S. Vandhana, and S.\
    \ Vishali, “Prediction of water quality\nusing naive bayesian algorithm,” 2016\
    \ 8th International Conference on\nAdvanced Computing, ICoAC 2016 pp. 224–229\
    \ (2017).\n[137] D. Jalal, “Toward a Smart Real Time Monitoring System for Drinking\n\
    Water Based on Machine Learning,” 2019 International Conference on\nSoftware,\
    \ Telecommunications and Computer Networks (SoftCOM) pp.\n1–5 (2019).\n[138] T.\
    \ Bin, M. M. Alam, N. Absar, K. Andersson, and M. Shahadat, “Iot\nbased real-time\
    \ river water quality monitoring system,” Procedia Com-\nputer Science 155, 161–168\
    \ (2019).\n[139] P. Liu, J. Wang, A. K. Sangaiah, Y. Xie, and X. Yin, “Analysis\
    \ and\nprediction of water quality using lstm deep neural networks in iot envi-\n\
    ronment,” Sustainability 11, 2058 (2019).\n[140] Z. Tariq, S. K. Shah, and Y.\
    \ Lee, “Smart 311 request system with au-\ntomatic noise detection for safe neighborhood,”\
    \ 2018 IEEE International\nSmart Cities Conference, ISC2 2018 pp. 1–8 (2019).\n\
    142\n[141] J. Zhang, S. I. Levitan, and J. Hirschberg, “Multimodal deception detec-\n\
    tion using automatically extracted acoustic, visual, and lexical features.”\n\
    in “INTERSPEECH,” (2020), pp. 359–363.\n[142] Y. Santur, E. Karak¨ose, M. Karak¨ose,\
    \ and E. Akın, “Deep learning based\nartificial manager for smart city,” in “5th\
    \ International Conference on\nAdvanced Technology & Sciences,” (2017), pp. 197–201.\n\
    [143] S. Sanaei, B. Majidi, and E. Akhtarkavan, “Deep multisensor dashboard\n\
    for composition layer of web of things in the smart city,” 9th International\n\
    Symposium on Telecommunication: With Emphasis on Information and\nCommunication\
    \ Technology, IST 2018 pp. 211–215 (2019).\n[144] P. D. Rosero-Montalvo, J. A.\
    \ Caraguay-Procel, E. D. Jaramillo, J. M.\nMichilena-Calderon, A. C. Umaquinga-Criollo,\
    \ M. Mediavilla-Valverde,\nM. A. Ruiz, L. A. Beltran, and D. H. Peluffo-Ord´onez,\
    \ “Air quality moni-\ntoring intelligent system using machine learning techniques,”\
    \ Proceedings\n- 3rd International Conference on Information Systems and Computer\
    \ Sci-\nence, INCISCOS 2018 2018-Decem, 75–80 (2018).\n[145] C. Feng, W. Wang,\
    \ Y. Tian, X. Que, and X. Gong, “Estimate air quality\nbased on mobile crowd sensing\
    \ and big data,” 18th IEEE International\nSymposium on A World of Wireless, Mobile\
    \ and Multimedia Networks,\nWoWMoM 2017 - Conference (2017).\n[146] R. Yu, Y.\
    \ Yang, L. Yang, G. Han, and O. A. Move, “RAQ–A random for-\nest approach for\
    \ predicting air quality in urban sensing systems,” Sensors\n(Switzerland) 16\
    \ (2016).\n[147] I. K¨ok, M. U. S¸im¸sek, and S. ¨Ozdemir, “A deep learning model\
    \ for air\nquality prediction in smart cities,” Proceedings - 2017 IEEE International\n\
    Conference on Big Data, Big Data 2017 2018-Janua, 1983–1990 (2017).\n[148] A.\
    \ Al-Wakeel, J. Wu, and N. Jenkins, “K -means based load estimation\nof domestic\
    \ smart meter measurements,” Applied Energy 194, 333–342\n(2017).\n[149] O. Valgaev,\
    \ F. Kupzog, and H. Schmeck, “Building power demand fore-\ncasting using k-nearest\
    \ neighbours model - practical application in smart\ncity demo aspern project,”\
    \ CIRED - Open Access Proceedings Journal\n2017, 1601–1604 (2017).\n[150] P. Vrablecov´a,\
    \ A. B. Ezzeddine, V. Rozinajov´a, S. ˇS´arik, and A. K. Sanga-\niah, “Smart grid\
    \ load forecasting using online support vector regression,”\nComputers and Electrical\
    \ Engineering 65, 102–117 (2018).\n[151] W. Kong, Z. Y. Dong, Y. Jia, D. J. Hill,\
    \ Y. Xu, and Y. Zhang, “Short-\nterm residential load forecasting based on lstm\
    \ recurrent neural network,”\nIEEE Transactions on Smart Grid 10, 841–851 (2019).\n\
    143\n[152] S. Hosein and P. Hosein, “Load forecasting using deep neural networks,”\n\
    2017 IEEE Power and Energy Society Innovative Smart Grid Technologies\nConference,\
    \ ISGT 2017 (2017).\n[153] K. Ke, S. Hongbin, Z. Chengkang, and C. Brown, “Short-term\
    \ electrical\nload forecasting method based on stacked auto-encoding and gru neural\n\
    network,” Evolutionary Intelligence 12, 385–394 (2019).\n[154] T. Han, K. Muhammad,\
    \ T. Hussain, J. Lloret, and S. W. Baik, “An\nefficient deep learning framework\
    \ for intelligent energy management in\niot networks,” IEEE Internet of Things\
    \ Journal (2020).\n[155] X. Liu, Z. Xiao, R. Zhu, J. Wang, L. Liu, and M. Ma,\
    \ “Edge sensing data-\nimaging conversion scheme of load forecasting in smart\
    \ grid,” Sustainable\nCities and Society p. 102363 (2020).\n[156] A. Ta¨ık and\
    \ S. Cherkaoui, “Electrical load forecasting using edge com-\nputing and federated\
    \ learning,” in “ICC 2020-2020 IEEE International\nConference on Communications\
    \ (ICC),” (IEEE, 2020), pp. 1–6.\n[157] D. Nguyen, R. Barella, S. A. Wallace,\
    \ X. Zhao, and X. Liang, “Smart\ngrid line event classification using supervised\
    \ learning over pmu data\nstreams,” 2015 6th International Green and Sustainable\
    \ Computing Con-\nference (2016).\n[158] Z. Zheng, Y. Yang, X. Niu, H. N. Dai,\
    \ and Y. Zhou, “Wide and deep\nconvolutional neural networks for electricity-theft\
    \ detection to secure\nsmart grids,” IEEE Transactions on Industrial Informatics\
    \ 14, 1606–1615\n(2018).\n[159] Y. Huang, Y. Lu, F. Wang, X. Fan, J. Liu, and\
    \ V. C. Leung, “An edge\ncomputing framework for real-time monitoring in smart\
    \ grid,” Proceed-\nings - 2018 IEEE International Conference on Industrial Internet,\
    \ ICII\n2018 pp. 99–108 (2018).\n[160] S. Batool, N. A. Saqib, and M. A. Khan,\
    \ “Internet of things data analytics\nfor user authentication and activity recognition,”\
    \ 2017 2nd International\nConference on Fog and Mobile Edge Computing, FMEC 2017\
    \ pp. 183–187\n(2017).\n[161] H. Zhang, Z. Xiao, J. Wang, F. Li, and E. Szczerbicki,\
    \ “A novel iot-\nperceptive human activity recognition ( har ) approach using\
    \ multihead\nconvolutional attention,” IEEE Internet of Things Journal 7, 1072–1080\n\
    (2020).\n[162] D. Castro, “Wearable-based human activity recognition using an\
    \ iot ap-\nproach,” Journal of Sensor and Actuator Networks 6, 28 (2017).\n[163]\
    \ D. N. Tran and D. D. Phan, “Human activities recognition in android\nsmartphone\
    \ using support vector machine,” in “Proceedings - Inter-\nnational Conference\
    \ on Intelligent Systems, Modelling and Simulation,\nISMS,” , vol. 0 (IEEE, 2016),\
    \ vol. 0, pp. 64–68.\n144\n[164] G. L. Santos,\nP. T. Endo,\nK. Henrique,\nand\
    \ D. C. Monteiro,\n“Accelerometer-based human fall detection using,” Sensors 19,\
    \ 1–12\n(2019).\n[165] D. Yacchirema, “Fall detection system for elderly people\
    \ using iot and en-\nsemble machine learning algorithm,” Personal and Ubiquitous\
    \ Computing\n23, 801–817 (2019).\n[166] I.\nMachorro-Cano,\nG.\nAlor-Hern´andez,\n\
    M.\nA.\nParedes-Valverde,\nU. Ramos-Deonati, J. L. S´anchez-Cervantes, and L.\
    \ Rodr´ıguez-Mazahua,\n“Pisiot: A machine learning and iot-based smart health\
    \ platform for over-\nweight and obesity control,” Applied Sciences (Switzerland)\
    \ 9 (2019).\n[167] R. Ani, S. Krishna, N. Anju, A. M. Sona, and O. S. Deepa, “Iot\
    \ based pa-\ntient monitoring and diagnostic prediction tool using ensemble classifier,”\n\
    2017 International Conference on Advances in Computing, Communica-\ntions and\
    \ Informatics, ICACCI 2017 2017-Janua, 1588–1593 (2017).\n[168] A. Ukil and U.\
    \ K. Roy, “Smart cardiac health management in iot through\nheart sound signal\
    \ analytics and robust noise filtering,” IEEE Interna-\ntional Symposium on Personal,\
    \ Indoor and Mobile Radio Communica-\ntions, PIMRC 2017-Octob, 1–5 (2018).\n[169]\
    \ A. Alamri, “Monitoring system for patients using multimedia for smart\nhealthcare,”\
    \ IEEE Access 6, 23271–23276 (2018).\n[170] Y. Qu, X. Ming, S. Qiu, M. Zheng,\
    \ and Z. Hou, “An integrative framework\nfor online prognostic and health management\
    \ using internet of things and\nconvolutional neural network,” Sensors (Switzerland)\
    \ 19 (2019).\n[171] M. S. Hossain and G. Muhammad, “Cloud-assisted industrial\
    \ internet\nof things (iiot) - enabled framework for health monitoring,” Computer\n\
    Networks 101, 192–202 (2016).\n[172] M. Alhussein, G. Muhammad, M. S. Hossain,\
    \ and S. U. Amin, “Cognitive\niot-cloud integration for smart healthcare: Case\
    \ study for epileptic seizure\ndetection and monitoring,” Mobile Networks and\
    \ Applications 23, 1624–\n1635 (2018).\n[173] M. Ganesan and N. Sivakumar, “Iot\
    \ based heart disease prediction and di-\nagnosis model for healthcare using machine\
    \ learning models,” 2019 IEEE\nInternational Conference on System, Computation,\
    \ Automation and Net-\nworking, ICSCAN 2019 pp. 1–5 (2019).\n[174] S. Mohapatra,\
    \ P. K. Patra, S. Mohanty, and B. Pati, “Smart health care\nsystem using data\
    \ mining,” Proceedings - 2018 International Conference\non Information Technology,\
    \ ICIT 2018 pp. 44–49 (2018).\n[175] P. Kaur, R. Kumar, and M. Kumar, “A healthcare\
    \ monitoring system\nusing random forest and internet of things (iot),” Multimedia\
    \ Tools and\n145\nApplications 78, 19905–19916 (2019). Ni, its one of those random\
    \ papers\nwhere they take data and run algorithms on them.\n[176] M. Alhussein,\
    \ “Monitoring parkinson’s disease in smart cities,” IEEE Ac-\ncess 5, 19835–19841\
    \ (2017).\n[177] S. Tuli, N. Basumatary, S. S. Gill, M. Kahani, R. C. Arya, G.\
    \ S. Wan-\nder, and R. Buyya, “Healthfog: An ensemble deep learning based smart\n\
    healthcare system for automatic diagnosis of heart diseases in integrated\niot\
    \ and fog computing environments,” Future Generation Computer Sys-\ntems 104,\
    \ 187–200 (2020).\n[178] M. Devarajan and L. Ravi, “Intelligent cyber-physical\
    \ system for an ef-\nficient detection of parkinson disease using fog computing,”\
    \ Multimedia\nTools and Applications 78, 32695–32719 (2019).\n[179] M. A. Sayeed,\
    \ S. P. Mohanty, E. Kougianos, V. P. Yanambaka, and H. Za-\nveri, “A robust and\
    \ fast seizure detector for iot edge,” Proceedings - 2018\nIEEE 4th International\
    \ Symposium on Smart Electronic Systems, iSES\n2018 pp. 156–160 (2018).\n[180]\
    \ J. P. Queralta, T. N. Gia, H. Tenhunen, and T. Westerlund, “Edge-ai in\nlora-based\
    \ health monitoring: Fall detection system with fog computing\nand lstm recurrent\
    \ neural networks,” in “2019 42nd international confer-\nence on telecommunications\
    \ and signal processing (TSP),” (IEEE, 2019),\npp. 601–604.\n[181] M. Awais, M.\
    \ Raza, N. Singh, K. Bashir, U. Manzoor, S. ul Islam, and J. J.\nRodrigues, “Lstm\
    \ based emotion detection using physiological signals:\nIot framework for healthcare\
    \ and distance learning in covid-19,” IEEE\nInternet of Things Journal (2020).\n\
    [182] P. Pirzada, N. White, and A. Wilde, “Sensors in smart homes for indepen-\n\
    dent living of the elderly,” 5th International Multi-Topic ICT Conference:\nTechnologies\
    \ For Future Generations, IMTIC 2018 - Proceedings pp. 1–8\n(2018).\n[183] J.\
    \ Park, K. Jang, and S. B. Yang, “Deep neural networks for activity\nrecognition\
    \ with multi-sensor data in a smart home,” IEEE World Forum\non Internet of Things,\
    \ WF-IoT 2018 - Proceedings 2018-Janua, 155–160\n(2018).\n[184] A. Wang, G. Chen,\
    \ C. Shang, M. Zhang, and L. Liu, “Human activity\nrecognition in a smart home\
    \ environment with stacked denoising autoen-\ncoders,” in “International Conference\
    \ on Web-Age Information Manage-\nment,” (Springer, 2016), pp. 29–40.\n[185] D.\
    \ Singh, E. Merdivan, I. Psychoula, J. Kropf, S. Hanke, M. Geist,\nand A. Holzinger,\
    \ “Human activity recognition using recurrent neural\n146\nnetworks,” Lecture\
    \ Notes in Computer Science (including subseries Lec-\nture Notes in Artificial\
    \ Intelligence and Lecture Notes in Bioinformatics)\n10410 LNCS, 267–274 (2017).\n\
    [186] G. Y. Kim, S. S. Shin, J. Y. Kim, and H. G. Kim, “Haptic Conversion\nUsing\
    \ Detected Sound Event in Home Monitoring System for the Hard-\nof-Hearing,” HAVE\
    \ 2018 - IEEE International Symposium on Haptic,\nAudio-Visual Environments and\
    \ Games, Proceedings pp. 17–22 (2018).\n[187] A. B. Adege, H. P. Lin, G. B. Tarekegn,\
    \ and S. S. Jeng, “Applying deep\nneural network (dnn) for robust indoor localization\
    \ in multi-building en-\nvironment,” Applied Sciences (Switzerland) 8, 1–14 (2018).\n\
    [188] R. Adeogun, I. Rodriguez, M. Razzaghpour, G. Berardinelli, P. H. Chris-\n\
    tensen, and P. E. Mogensen, “Indoor occupancy detection and estimation\nusing\
    \ machine learning and measurements from an iot lora-based mon-\nitoring system,”\
    \ in “2019 Global IoT Summit (GIoTS),” (IEEE, 2019),\npp. 1–5.\n[189] L. Zimmermann,\
    \ R. Weigel, and G. Fischer, “Fusion of nonintrusive en-\nvironmental sensors\
    \ for occupancy detection in smart homes,” IEEE In-\nternet of Things Journal\
    \ 5, 2343–2352 (2018).\n[190] D. Chowdhry, R. Paranjape, and P. Laforge, “Smart\
    \ home automation\nsystem for intrusion detection,” 2015 IEEE 14th Canadian Workshop\
    \ on\nInformation Theory, CWIT 2015 pp. 75–78 (2015).\n[191] V. H. Bhide and S.\
    \ Wagh, “I-learning iot: An intelligent self learning\nsystem for home automation\
    \ using iot,” 2015 International Conference\non Communication and Signal Processing,\
    \ ICCSP 2015 pp. 1763–1767\n(2015).\n[192] F. C. C. Garcia, C. M. C. Creayla,\
    \ and E. Q. B. Macabebe, “Develop-\nment of an intelligent system for smart home\
    \ energy disaggregation using\nstacked denoising autoencoders,” Procedia Computer\
    \ Science 105, 248–\n255 (2017).\n[193] C. C. Yang, C. S. Soh, and V. V. Yap,\
    \ “A non-intrusive appliance load\nmonitoring for efficient energy consumption\
    \ based on naive bayes classi-\nfier,” Sustainable Computing: Informatics and\
    \ Systems 14, 34–42 (2017).\n[194] D. Popa, F. Pop, C. Serbanescu, and A. Castiglione,\
    \ “Deep learning model\nfor home automation and energy reduction in a smart home\
    \ environment\nplatform,” Neural Computing and Applications 31, 1317–1337 (2019).\n\
    [195] I. C. Konstantakopoulos, A. R. Barkan, S. He, T. Veeravalli, H. Liu,\nand\
    \ C. Spanos, “A deep learning and gamification approach to improving\nhuman-building\
    \ interaction and energy efficiency in smart infrastructure,”\nApplied Energy\
    \ 237, 810–821 (2019).\n147\n[196] H. Albataineh, M. Nijim, and D. Bollampall,\
    \ “The design of a novel smart\nhome control system using smart grid based on\
    \ edge and cloud comput-\ning,” in “2020 IEEE 8th International Conference on\
    \ Smart Energy Grid\nEngineering (SEGE),” (IEEE, 2020), pp. 88–91.\n[197] P. H.\
    \ F. Sousa, N. M. M. Nascimento, J. S. Almeida, P. P. R. Filho,\nand V. H. C.\
    \ Albuquerque, “Intelligent incipient fault detection in wind\nturbines based\
    \ on industrial iot environment,” Journal of Artificial Intel-\nligence and Systems\
    \ 1, 1–19 (2019).\n[198] M. Salhaoui, A. Guerrero-Gonz´alez, M. Arioua, F. J.\
    \ Ortiz, A. E.\nOualkadi, and C. L. Torregrosa, “Smart industrial iot monitoring\
    \ and\ncontrol system based on uav and cloud computing applied to a concrete\n\
    plant,” Sensors (Switzerland) 19 (2019).\n[199] M. A. Ferreira, L. F. F. D. Souza,\
    \ F. H. S. D. Silva, E. F. Ohata, J. S.\nAlmeida, and P. P. Filho, “Intelligent\
    \ industrial iot system for detection\nof short-circuit failure in windings of\
    \ wind turbines,” Proceedings of the\nInternational Joint Conference on Neural\
    \ Networks (2020).\n[200] T. Nkonyana, Y. Sun, B. Twala, and E. Dogo, “Performance\
    \ evaluation of\ndata mining techniques in steel manufacturing industry,” Procedia\
    \ Man-\nufacturing 35, 623–628 (2019).\n[201] J. E. Siegel, S. Pratt, Y. Sun,\
    \ and S. E. Sarma, “Real-time deep neural\nnetworks for internet-enabled arc-fault\
    \ detection,” Engineering Applica-\ntions of Artificial Intelligence 74, 35–42\
    \ (2018).\n[202] J. Windau and L. Itti, “Inertial machine monitoring system for\
    \ auto-\nmated failure detection,” Proceedings - IEEE International Conference\n\
    on Robotics and Automation pp. 93–98 (2018).\n[203] A. N. Sokolov, I. A. Pyatnitsky,\
    \ and S. K. Alabugin, “Research of Classical\nMachine Learning Methods and Deep\
    \ Learning Models Effectiveness in\nDetecting Anomalies of Industrial Control\
    \ System,” Proceedings - 2018\nGlobal Smart Industry Conference, GloSIC 2018 (2018).\n\
    [204] D. C. Huang, C. F. Lin, C. Y. Chen, and J. R. Sze, “The internet tech-\n\
    nology for defect detection system with deep learning method in smart\nfactory,”\
    \ 2018 4th International Conference on Information Management,\nICIM 2018 pp.\
    \ 98–102 (2018).\n[205] L. Li, K. Ota, and M. Dong, “Deep learning for smart industry:\
    \ Efficient\nmanufacture inspection system with fog computing,” IEEE Transactions\n\
    on Industrial Informatics 14, 4665–4673 (2018).\n[206] S. Y. Lin, Y. Du, P. C.\
    \ Ko, T. J. Wu, P. T. Ho, V. Sivakumar, and\nR. subbareddy, “Fog computing based\
    \ hybrid deep learning framework in\neffective inspection system for smart manufacturing,”\
    \ Computer Commu-\nnications 160, 636–642 (2020).\n148\n[207] M. S. S. Garmaroodi,\
    \ F. Farivar, M. S. Haghighi, M. A. Shoorehdeli, and\nA. Jolfaei, “Detection of\
    \ anomalies in industrial iot systems by data min-\ning: Study of christ osmotron\
    \ water purification system,” IEEE Internet\nof Things Journal 4662, 1–1 (2020).\n\
    [208] D. Park, S. Kim, Y. An, and J. Y. Jung, “Lired: A light-weight real-time\n\
    fault detection system for edge computing using lstm recurrent neural\nnetworks,”\
    \ Sensors (Switzerland) 18 (2018).\n[209] Y. Liu, N. Kumar, Z. Xiong, W. Y. B.\
    \ Lim, J. Kang, and D. Niyato,\n“Communication-efficient federated learning for\
    \ anomaly detection in in-\ndustrial internet of things,” in “GLOBECOM,” , vol.\
    \ 2020 (2020), vol.\n2020, pp. 1–6.\n[210] H. Zheng, Y. Feng, Y. Gao, and J. Tan,\
    \ “A robust predicted performance\nanalysis approach for data-driven product development\
    \ in the industrial\ninternet of things,” Sensors (Switzerland) 18 (2018).\n[211]\
    \ A. Essien and C. Giannetti, “A deep learning model for smart manu-\nfacturing\
    \ using convolutional lstm neural network autoencoders,” IEEE\nTransactions on\
    \ Industrial Informatics 16, 6069–6078 (2020).\n[212] W. Tao, Z.-H. Lai, M. C.\
    \ Leu, and Z. Yin, “Worker activity recognition\nin smart manufacturing using\
    \ imu and semg signals with convolutional\nneural networks,” Procedia Manufacturing\
    \ 26, 1159–1166 (2018).\n[213] A. R. M. Forkan, F. Montori, D. Georgakopoulos,\
    \ P. P. Jayaraman,\nA. Yavari, and A. Morshed, “An industrial iot solution for\
    \ evaluating\nworkers’ performance via activity recognition,” in “2019 IEEE 39th\
    \ In-\nternational Conference on Distributed Computing Systems (ICDCS),”\n(IEEE,\
    \ 2019), pp. 1393–1403.\n[214] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J.\
    \ Jiang, “A proactive task\ndispatching method based on future bottleneck prediction\
    \ for the smart\nfactory,” International Journal of Computer Integrated Manufacturing\n\
    32, 278–293 (2019). Not included as it is a hybrid.\n[215] B. Brik, B. Bettayeb,\
    \ M. Sahnoun, and F. Duval, “Towards predicting\nsystem disruption in industry\
    \ 4.0: Machine learning-based approach,”\nProcedia Computer Science 151, 667–674\
    \ (2019).\n[216] Y. Han, C. J. Zhang, L. Wang, and Y. C. Zhang, “Industrial IoT\
    \ for Intel-\nligent Steelmaking with Converter Mouth Flame Spectrum Information\n\
    Processed by Deep Learning,” IEEE Transactions on Industrial Informat-\nics 16,\
    \ 2640–2650 (2020).\n[217] J. Wang, Y. Wang, and M. Yu, “A multi-period ambulance\
    \ location and\nallocation problem in the disaster,” Journal of Combinatorial\
    \ Optimiza-\ntion 9, 1–24 (2020). This paper presents a survey about fall detection\n\
    technologies and discusses how sensor fusion is one of the most popular\ntrends,\
    \ both in terms of data as well as algorithm.\n149\n[218] L. Spendla, M. Kebisek,\
    \ P. Tanuska, and L. Hrcka, “Concept of predictive\nmaintenance of production\
    \ systems in accordance with industry 4.0,” in\n“2017 IEEE 15th International\
    \ Symposium on Applied Machine Intelli-\ngence and Informatics (SAMI),” (IEEE,\
    \ 2017), pp. 405–410.\n[219] S. Hwang, J. Jeong, and Y. Kang, “Svm-rbm based predictive\
    \ main-\ntenance scheme for iot-enabled smart factory,” 2018 13th International\n\
    Conference on Digital Information Management, ICDIM 2018 pp. 162–\n167 (2018).\n\
    [220] E.-J. K. J.-H. Kwon, “Failure prediction model using iterative feature\n\
    selection for industrial internet of things,” Symmetry pp. 1–15 (2019).\n[221]\
    \ W. Zhang, W. Guo, X. Liu, Y. Liu, J. Zhou, B. Li, Q. Lu, and S. Yang,\n“Lstm-based\
    \ analysis of industrial iot equipment,” IEEE Access 6, 23551–\n23560 (2018).\n\
    [222] A. Diez, N. L. D. Khoa, M. M. Alamdari, Y. Wang, F. Chen, and P. Run-\n\
    cie, “A clustering approach for structural health monitoring on bridges,”\nJournal\
    \ of Civil Structural Health Monitoring 6, 429–445 (2016).\n[223] J. Guo, X. Xie,\
    \ and R. Bie, “Structural health monitoring by using a\nsparse coding-based deep\
    \ learning algorithm with wireless sensor net-\nworks,” Personal and ubiquitous\
    \ computing 18, 1977–1987 (2014).\n[224] G. Gui, H. Pan, Z. Lin, Y. Li, and Z.\
    \ Yuan, “Data-driven support vector\nmachine with optimization techniques for\
    \ structural health monitoring\nand damage detection,” KSCE Journal of Civil Engineering\
    \ 21, 523–534\n(2017).\n[225] H. V. Dang, H. Tran-ngoc, T. V. Nguyen, G. D. Roeck,\
    \ H. X. Nguyen,\nand S. Member, “Data-driven structural health monitoring using\
    \ feature\nfusion and hybrid deep learning,” IEEE Transactions on Automation Sci-\n\
    ence and Engineering pp. 1–17 (2020).\n[226] J. Vitola, F. Pozo, D. A. Tibaduiza,\
    \ and M. Anaya, “A sensor data fusion\nsystem based on k-nearest neighbor pattern\
    \ classification for structural\nhealth monitoring applications,” Sensors (Switzerland)\
    \ 17 (2017).\n[227] J. Yu, M. Kim, H. C. Bang, S. H. Bae, and S. J. Kim, “IoT\
    \ as a ap-\nplications: cloud-based building management systems for the internet\
    \ of\nthings,” Multimedia Tools and Applications 75, 14583–14596 (2016).\n[228]\
    \ S. Singaravel, P. Geyer, and J. Suykens, “Deep neural network archi-\ntectures\
    \ for component-based machine learning model in building energy\npredictions,”\
    \ Digital Proceedings of the 24th EG-ICE International Work-\nshop on Intelligent\
    \ Computing in Engineering 2017 pp. 260–268 (2017).\n[229] N. A. Eltresy, O. M.\
    \ Dardeer, A. Al-Habal, E. Elhariri, A. H. Hassan,\nA. Khattab, D. N. Elsheakh,\
    \ S. A. Taie, H. Mostafa, H. A. Elsadek, and\n150\nE. A. Abdallah, “Rf energy\
    \ harvesting iot system for museum ambience\ncontrol with deep learning,” Sensors\
    \ (Switzerland) 19 (2019).\n[230] W. Hu, Y. Wen, K. Guan, G. Jin, and K. J. Tseng,\
    \ “itcm : Toward\nlearning-based thermal comfort modeling via pervasive sensing\
    \ for smart\nbuildings,” IEEE Internet of Things Journal 5, 4164–4177 (2018).\n\
    [231] H. Mora and A. Jimeno-morenilla, “Deployment of iot edge and fog com-\n\
    puting technologies to develop smart building services,” Sustainability 10,\n\
    1–23 (2018).\n[232] D. H. Stolfi, E. Alba, and X. Yao, “Predicting car park occupancy\
    \ rates\nin smart cities,” Lecture Notes in Computer Science (including subseries\n\
    Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformat-\nics)\
    \ 10268 LNCS, 107–117 (2017).\n[233] R. K. Lenka, R. K. Barik, N. K. Das, K. Agarwal,\
    \ D. Mohanty, and\nS. Vipsita, “Psps: An iot based predictive smart parking system,”\
    \ 2017\n4th IEEE Uttar Pradesh Section International Conference on Electrical,\n\
    Computer and Electronics, UPCON 2017 2018-Janua, 311–317 (2017).\n[234] G. Ali,\
    \ T. Ali, M. Irfan, U. Draz, M. Sohail, A. Glowacz, M. Sulowicz,\nR. Mielnik,\
    \ Z. B. Faheem, and C. Martis, “Iot based smart parking system\nusing deep long\
    \ short memory network,” Electronics 9, 1696 (2020).\n[235] T. Ebuchi and H. Yamamoto,\
    \ “Vehicle/pedestrian localization system\nusing multiple radio beacons and machine\
    \ learning for smart parking,” in\n“2019 International Conference on Artificial\
    \ Intelligence in Information\nand Communication (ICAIIC),” (IEEE, 2019), pp.\
    \ 086–091.\n[236] F. M. Awan, Y. Saleem, R. Minerva, and N. Crespi, “A comparative\n\
    analysis of machine / deep learning models for parking space availability\nprediction,”\
    \ Sensors 20, 322 (2020).\n[237] X. Sevillano, E. M`armol, and V. Fernandez-Arguedas,\
    \ “Towards smart\ntraffic management systems:\nVacant on-street parking spot detection\n\
    based on video analytics,” FUSION 2014 - 17th International Conference\non Information\
    \ Fusion (2014).\n[238] H. Bura, N. Lin, N. Kumar, S. Malekar, S. Nagaraj, and\
    \ K. Liu, “An\nedge based smart parking solution using camera networks and deep\
    \ learn-\ning,” in “2018 IEEE International Conference on Cognitive Computing\n\
    (ICCC),” (IEEE, 2018), pp. 17–24.\n[239] C. Lee, S. Park, T. Yang, and S.-H. Lee,\
    \ “Smart parking with fine-grained\nlocalization and user status sensing based\
    \ on edge computing,” in “2019\nIEEE 90th Vehicular Technology Conference (VTC2019-Fall),”\
    \ (IEEE,\n2019), pp. 1–5.\n[240] S. S. Aung and T. T. Naing, “Na¨ıve bayes classifier\
    \ based traffic prediction\nsystem on cloud infrastructure,” Proceedings - International\
    \ Conference\n151\non Intelligent Systems, Modelling and Simulation, ISMS 2015-Octob,\n\
    193–198 (2015).\n[241] Y. Liu and H. Wu, “Prediction of road traffic congestion\
    \ based on random\nforest,” Proceedings - 2017 10th International Symposium on\
    \ Computa-\ntional Intelligence and Design, ISCID 2017 2, 361–364 (2018).\n[242]\
    \ W. Wei, H. Wu, and H. Ma, “An autoencoder and lstm-based traffic flow\nprediction\
    \ method,” Sensors 19, 1–16 (2019).\n[243] Y. Xiao, “Hybrid lstm neural network\
    \ for short-term traffic flow predic-\ntion,” Information 10, 105 (2019).\n[244]\
    \ F. Sun, Y. Pan, J. White, and A. Dubey, “Real-Time and Predictive An-\nalytics\
    \ for Smart Public Transportation Decision Support System,” 2016\nIEEE International\
    \ Conference on Smart Computing, SMARTCOMP\n2016 pp. 1–8 (2016).\n[245] N. Dogru\
    \ and A. Subasi, “Traffic accident detection using random forest\nclassifier,”\
    \ 2018 15th Learning and Technology Conference, L and T 2018\npp. 40–45 (2018).\n\
    [246] D. Nallaperuma, R. Nawaratne, T. Bandaragoda, A. Adikari, and\nS. Nguyen,\
    \ “Online incremental machine learning platform for big data-\ndriven smart traffic\
    \ management,” IEEE Transactions on Intelligent\nTransportation Systems 20, 4679–4690\
    \ (2019).\n[247] A. Mukherji, V. Raghuram, S. Pandey, H. Tran, and N. Bulusu,\
    \ “Com-\nmuterscanner: Towards smart indoor positioning systems in urban trans-\n\
    portation,” 2019 11th International Conference on Communication Sys-\ntems and\
    \ Networks, COMSNETS 2019 2061, 619–624 (2019).\n[248] S. Majumdar, M. M. Subhani,\
    \ B. Roullier, A. Anjum, and R. Zhu, “Con-\ngestion prediction for smart sustainable\
    \ cities using iot and machine learn-\ning approaches,” Sustainable Cities and\
    \ Society 64, 102500 (2021).\n[249] F. Peres and M. Castelli, “Combinatorial optimization\
    \ problems and\nmetaheuristics: Review, challenges, design, and development,”\
    \ Applied\nSciences 11, 6449 (2021).\n[250] M. Dorigo and K. Socha, “Ant colony\
    \ optimization,” Handbook of Ap-\nproximation Algorithms and Metaheuristics pp.\
    \ 26–1–26–14 (2007).\n[251] D. Whitley, “A genetic algorithm tutorial,” Statistics\
    \ and computing 4,\n65–85 (1994).\n[252] J. Kennedy and R. Eberhart, “Particle\
    \ swarm optimization,” in “Pro-\nceedings of ICNN’95-international conference\
    \ on neural networks,” , vol. 4\n(IEEE, 1995), vol. 4, pp. 1942–1948.\n[253] V.\
    \ Feoktistov, Differential evolution (Springer, 2006).\n152\n[254] D. Karaboga,\
    \ “Artificial bee colony algorithm,” scholarpedia 5, 6915\n(2010).\n[255] D. C.\
    \ H. Nguyen, J. C. Ascough II, H. R. Maier, G. C. Dandy, and A. A.\nAndales, “Optimization\
    \ of irrigation scheduling using ant colony algo-\nrithms and an advanced cropping\
    \ system model,” Environmental mod-\nelling & software 97, 32–45 (2017).\n[256]\
    \ B. Saeidian, M. S. Mesgari, B. Pradhan, and A. M. Alamri, “Irrigation\nwater\
    \ allocation at farm level based on temporal cultivation-related data\nusing meta-heuristic\
    \ optimisation algorithms,” Water 11, 2611 (2019).\n[257] D. Guo, J. E. Olesen,\
    \ K. Manevski, and X. Ma, “Optimizing irrigation\nschedule in a large agricultural\
    \ region under different hydrologic scenar-\nios,” Agricultural Water Management\
    \ 245, 106575 (2021).\n[258] S. Guo, F. Zhang, C. Zhang, C. An, S. Wang, and P.\
    \ Guo, “A multi-\nobjective hierarchical model for irrigation scheduling in the\
    \ complex canal\nsystem,” Sustainability 11, 24 (2019).\n[259] F. Zhang, C. He,\
    \ F. Yaqiong, X. Hao, and S. Kang, “Canal delivery and\nirrigation scheduling\
    \ optimization based on crop water demand,” Agri-\ncultural Water Management 260,\
    \ 107245 (2022).\n[260] A. Ikudayisi, J. Adeyemo, J. Odiyo, and A. Enitan, “Optimum\
    \ irriga-\ntion water allocation and crop distribution using combined pareto multi-\n\
    objective differential evolution,” Cogent Engineering 5, 1535749 (2018).\n[261]\
    \ J. Wu, R. Huang, T. Fang, and Y. Han, “Multi-objective model of irriga-\ntion\
    \ water distribution based on particle swarm optimization,” in “IOP\nConference\
    \ Series: Earth and Environmental Science,” , vol. 344 (IOP\nPublishing, 2019),\
    \ vol. 344, p. 012087.\n[262] A. L. P. De Ocampo and E. P. Dadios, “Energy cost\
    \ optimization in\nirrigation system of smart farm by using genetic algorithm,”\
    \ in “2017IEEE\n9th International Conference on Humanoid, Nanotechnology, Information\n\
    Technology, Communication and Control, Environment and Management\n(HNICEM),”\
    \ (IEEE, 2017), pp. 1–7.\n[263] L. Zhuo, J. Cheng, and Z. Gong, “Optimal water\
    \ allocation method based\non the genetic algorithm for a system of a reservoir\
    \ and two pumping\nstations,” Water Supply 22, 849–859 (2022).\n[264] R. Li, Y.\
    \ Chang, and Z. Wang, “Study of optimal allocation of water\nresources in dujiangyan\
    \ irrigation district of china based on an improved\ngenetic algorithm,” Water\
    \ Supply 21, 2989–2999 (2021).\n[265] S. K. Roy and D. De, “Genetic algorithm\
    \ based internet of precision agri-\ncultural things (iopat) for agriculture 4.0,”\
    \ Internet of Things p. 100201\n(2020).\n153\n[266] N. Lin, X. Wang, Y. Zhang,\
    \ X. Hu, and J. Ruan, “Fertigation manage-\nment for sustainable precision agriculture\
    \ based on internet of things,”\nJournal of Cleaner Production 277, 124119 (2020).\n\
    [267] C. Arif, B. I. Setiawan, M. Mizoguchi, and B. D. A. Nugroho, “Genetic\n\
    algorithms optimization for water management in irrigated paddy fields,”\nin “IOP\
    \ Conference Series: Earth and Environmental Science,” , vol. 335\n(IOP Publishing,\
    \ 2019), vol. 335, p. 012002.\n[268] WorldBank, “Solid waste management,” (2019).\n\
    [269] S. Sharmin and S. T. Al-Amin, “A cloud-based dynamic waste manage-\nment\
    \ system for smart cities,” Proceedings of the 7th Annual Symposium\non Computing\
    \ for Development, ACM DEV-7 2016 (2016).\n[270] R. Fujdiak, P. Masek, P. Mlynek,\
    \ J. Misurec, and E. Olshannikova, “Us-\ning genetic algorithm for advanced municipal\
    \ waste collection in smart\ncity,” 2016 10th International Symposium on Communication\
    \ Systems,\nNetworks and Digital Signal Processing, CSNDSP 2016 pp. 1–6 (2016).\n\
    [271] R. Assaf and Y. Saleh, “Vehicle-routing optimization for municipal solid\n\
    waste collection using genetic algorithm: the case of southern nablus city,”\n\
    Civil and environmental engineering reports (2017).\n[272] M. A. Hannan, M. S.\
    \ H. Lipu, M. Akhtar, R. A. Begum, M. A. A. Mamum,\nA. Hussain, M. S. Mia, and\
    \ H. Basri, “Solid waste collection optimization\nobjectives, constraints, modeling\
    \ approaches, and their challenges toward\nachieving sustainable development goals,”\
    \ Journal of cleaner production\np. 123557 (2020).\n[273] Y. Zhang, X. Luo, X.\
    \ Han, Y. Lu, J. Wei, and C. Yu, “Optimization of\nurban waste transportation\
    \ route based on genetic algorithm,” Security\nand Communication Networks 2022,\
    \ 1–10 (2022).\n[274] Q. Wei, Z. Guo, H. C. Lau, and Z. He, “An artificial bee\
    \ colony-based\nhybrid approach for waste collection problem with midway disposal\
    \ pat-\ntern,” Applied Soft Computing 76, 629–637 (2019).\n[275] S. P. Raflesia\
    \ and A. K. Pamosoaji, “A novel ant colony optimization\nalgorithm for waste collection\
    \ problem,” in “2019 4th International Con-\nference on Information Technology,\
    \ Information Systems and Electrical\nEngineering (ICITISEE),” (IEEE, 2019), pp.\
    \ 413–416.\n[276] M. Yazdani, K. Kabirifar, B. E. Frimpong, M. Shariati, M. Mirmozaffari,\n\
    and A. Boskabadi, “Improving construction and demolition waste collec-\ntion service\
    \ in an urban area using a simheuristic approach: A case study\nin sydney, australia,”\
    \ Journal of Cleaner Production 280, 124138 (2021).\n[277] S. Idwan, I. Mahmood,\
    \ J. A. Zubairi, and I. Matar, “Optimal management\nof solid waste in smart cities\
    \ using internet of things,” Wireless Personal\nCommunications 110, 485–501 (2020).\n\
    154\n[278] U. M. Faizal, R. Jayachitra, P. Vijayakumar, and M. Rajasekar, “Opti-\n\
    mization of inbound vehicle routes in the collection of bio-medical wastes,”\n\
    Materials Today: Proceedings 45, 692–699 (2021).\n[279] E. B. Tirkolaee, M. Alinaghian,\
    \ A. A. R. Hosseinabadi, M. B. Sasi, and\nA. K. Sangaiah, “An improved ant colony\
    \ optimization for the multi-trip\ncapacitated arc routing problem,” Computers\
    \ and Electrical Engineering\n77, 457–470 (2019).\n[280] “Branch and cut for vehicle\
    \ routing,” .\n[281] “Capacitated vrp instances — vehicle routing problem,” .\n\
    [282] M. Ettappan, V. Vimala, S. Ramesh, and V. T. Kesavan, “Optimal reac-\ntive\
    \ power dispatch for real power loss minimization and voltage stability\nenhancement\
    \ using artificial bee colony algorithm,” Microprocessors and\nMicrosystems 76,\
    \ 103085 (2020).\n[283] C. K. Das, O. Bass, G. Kothapalli, T. S. Mahmoud, and\
    \ D. Habibi,\n“Optimal placement of distributed energy storage systems in distribution\n\
    networks using artificial bee colony algorithm,” Applied energy 232, 212–\n228\
    \ (2018).\n[284] W. S. Sakr, R. A. El-Sehiemy, and A. M. Azmy, “Adaptive differential\n\
    evolution algorithm for efficient reactive power management,” Applied\nSoft Computing\
    \ 53, 336–351 (2017).\n[285] T. T. Nguyen and F. Mohammadi, “Optimal placement\
    \ of tcsc for conges-\ntion management and power loss reduction using multi-objective\
    \ genetic\nalgorithm,” Sustainability 12, 2813 (2020).\n[286] I. I. Atteya, H.\
    \ A. Ashour, N. Fahmi, and D. Strickland, “Distribution net-\nwork reconfiguration\
    \ in smart grid system using modified particle swarm\noptimization,” 2016 IEEE\
    \ International Conference on Renewable Energy\nResearch and Applications, ICRERA\
    \ 2016 5, 305–313 (2016).\n[287] N. Kanwar, N. Gupta, K. R. Niazi, A. Swarnkar,\
    \ and R. C. Bansal, “Si-\nmultaneous allocation of distributed energy resource\
    \ using improved par-\nticle swarm optimization,” Applied Energy 185, 1684–1693\
    \ (2017).\n[288] K. Utkarsh, A. Trivedi, D. Srinivasan, and T. Reindl, “A consensus-\n\
    based distributed computational intelligence technique for real-time opti-\nmal\
    \ control in smart distribution grids,” IEEE Transactions on Emerging\nTopics\
    \ in Computational Intelligence 1, 51–60 (2016).\n[289] A. Askarzadeh, “A memory-based\
    \ genetic algorithm for optimization of\npower generation in a microgrid,” IEEE\
    \ transactions on sustainable en-\nergy 9, 1081–1089 (2017).\n[290] O. H. Mohammed,\
    \ Y. Amirat, and M. Benbouzid, “Economical evaluation\nand optimal energy management\
    \ of a stand-alone hybrid energy system\nhandling in genetic algorithm strategies,”\
    \ Electronics 7, 233 (2018).\n155\n[291] B. K. Das, R. Hassan, M. S. H. K. Tushar,\
    \ F. Zaman, M. Hasan, and\nP. Das, “Techno-economic and environmental assessment\
    \ of a hybrid re-\nnewable energy system using multi-objective genetic algorithm:\
    \ A case\nstudy for remote island in bangladesh,” Energy Conversion and Manage-\n\
    ment 230, 113823 (2021).\n[292] D. K. Geleta and M. S. Manshahia, “Artificial\
    \ bee colony-based optimiza-\ntion of hybrid wind and solar renewable energy system,”\
    \ Research Anthol-\nogy on Clean Energy Management and Solutions pp. 819–842 (2021).\n\
    [293] M. M. Moghaddam, M. Marzband, and F. Azarinejadian, “Optimal en-\nergy management\
    \ for a home microgrid based on multi-period artifi-\ncial bee colony,” in “2017\
    \ Iranian Conference on Electrical Engineering\n(ICEE),” (IEEE, 2017), pp. 1446–1451.\n\
    [294] H. U. R. Habib, S. Wang, A. Waqar, B. S. Farhan, K. M. Kotb, and Y.-S.\n\
    Kim, “Combined heat and power units sizing and energy cost optimization\nof a\
    \ residential building by using an artificial bee colony algorithm,” IEEE\nAccess\
    \ 8, 218289–218303 (2020).\n[295] F. Lezama, J. Soares, R. Faia, T. Pinto, and\
    \ Z. Vale, “A new hybrid-\nadaptive differential evolution for a smart grid application\
    \ under uncer-\ntainty,” in “2018 IEEE Congress on Evolutionary Computation (CEC),”\n\
    (IEEE, 2018), pp. 1–8.\n[296] F. Lezama, L. E. Sucar, E. M. de Cote, J. Soares,\
    \ and Z. Vale, “Differential\nevolution strategies for large-scale energy resource\
    \ management in smart\ngrids,” in “Proceedings of the Genetic and Evolutionary\
    \ Computation\nConference Companion,” (2017), pp. 1279–1286.\n[297] V. Palakonda,\
    \ N. H. Awad, R. Mallipeddi, M. Z. Ali, K. C. Veluvolu,\nand P. N. Suganthan,\
    \ “Differential evolution with stochastic selection\nfor uncertain environments:\
    \ A smart grid application,” in “2018 IEEE\nCongress on Evolutionary Computation\
    \ (CEC),” (IEEE, 2018), pp. 1–7.\n[298] S. Mandal and K. K. Mandal, “Optimal energy\
    \ management of micro-\ngrids under environmental constraints using chaos enhanced\
    \ differential\nevolution,” Renewable Energy Focus 34, 129–141 (2020).\n[299]\
    \ M. Azaza and F. Wallin, “Multi objective particle swarm optimization of\nhybrid\
    \ micro-grid system: A case study in sweden,” Energy 123, 108–118\n(2017).\n[300]\
    \ H. A. Gabbar, M. R. Abdussami, and M. I. Adham, “Optimal planning\nof nuclear-renewable\
    \ micro-hybrid energy system by particle swarm opti-\nmization,” IEEE Access 8,\
    \ 181049–181073 (2020).\n[301] B. A. Bhayo, H. H. Al-Kayiem, S. I. U. Gilani,\
    \ and F. B. Ismail, “Power\nmanagement optimization of hybrid solar photovoltaic-battery\
    \ integrated\nwith pumped-hydro-storage system for standalone electricity generation,”\n\
    Energy Conversion and Management 215, 112942 (2020).\n156\n[302] L. F. Grisales-Nore˜na,\
    \ O. D. Montoya, and C. A. Ramos-Paja, “An en-\nergy management system for optimal\
    \ operation of bss in dc distributed\ngeneration environments based on a parallel\
    \ pso algorithm,” Journal of\nEnergy Storage 29, 101488 (2020).\n[303] M. Mahdavi,\
    \ A. Kimiyaghalam, H. H. Alhelou, M. Javadi, J. P. S. Catal˜ao,\nand A. Ashouri,\
    \ “Transmission expansion planning considering power\nlosses, expansion of substations\
    \ and uncertainty in fuel price using discrete\nartificial bee colony algorithm,”\
    \ IEEE Access (2021).\n[304] T. K. Maji and P. Acharjee, “Multiple solutions of\
    \ optimal pmu placement\nusing exponential binary pso algorithm for smart grid\
    \ applications,” IEEE\nTransactions on Industry Applications 53, 2550–2559 (2017).\n\
    [305] M. B. Rasheed and M. D. R-Moreno, “Minimizing pricing policies based\non\
    \ user load profiles and residential demand responses in smart grids,”\nApplied\
    \ Energy 310, 118492 (2022).\n[306] D. Zhang, Z. Fu, and L. Zhang, “An improved\
    \ ts algorithm for loss-\nminimum reconfiguration in large-scale distribution\
    \ systems,” Electric\nPower Systems Research 77, 685–694 (2007).\n[307] J. P.\
    \ Pell, J. M. Sirel, A. K. Marsden, I. Ford, and S. M. Cobbe, “Effect of\nreducing\
    \ ambulance response times on deaths from out of hospital cardiac\narrest: cohort\
    \ study,” Bmj 322, 1385–1388 (2001).\n[308] RapidSOS, “Outcomes: Quantifying the\
    \ impact of emergency response\ntime - rapidsos,” (2015).\n[309] P. Toth and D.\
    \ Vigo, The vehicle routing problem (SIAM, 2002).\n[310] A. A. Ageev and M. I.\
    \ Sviridenko, “Approximation algorithms for maxi-\nmum coverage and max cut with\
    \ given sizes of parts,” in “International\nConference on Integer Programming\
    \ and Combinatorial Optimization,”\n(Springer, 1999), pp. 17–30.\n[311] E. Mouhcine,\
    \ Y. Karouani, K. Mansouri, and Y. Mohamed, “Toward a\ndistributed strategy for\
    \ emergency ambulance routing problem,” in “2018\n4th International Conference\
    \ on Optimization and Applications (ICOA),”\n(IEEE, 2018), pp. 1–4.\n[312] L.\
    \ Brotcorne, G. Laporte, and F. Semet, “Ambulance location and relo-\ncation models,”\
    \ European journal of operational research 147, 451–463\n(2003).\n[313] M. Benabdouallah,\
    \ C. Bojji, and O. E. Yaakoubi, “Deployment and re-\ndeployment of ambulances\
    \ using a heuristic method and an ant colony\noptimization - case study,” Proceedings\
    \ - 2016 3rd International Confer-\nence on Systems of Collaboration, SysCo 2016\
    \ pp. 1–4 (2017).\n157\n[314] M. Benabdouallah and C. Bojji, “Comparison between\
    \ ga and aco for\nemergency coverage problem in a smart healthcare environment,”\
    \ in “Pro-\nceedings of the 2017 International Conference on Smart Digital Environ-\n\
    ment,” (2017), pp. 48–55.\n[315] Y. A. Kochetov and N. B. Shamray, “Optimization\
    \ of the ambulance fleet\nlocation and relocation,” Journal of Applied and Industrial\
    \ Mathematics\n15, 234–252 (2021).\n[316] Y. Yan, Y. Kong, and Z. Fu, “Dynamic\
    \ resource scheduling in emergency\nenvironment,” Journal of Information Hiding\
    \ and Privacy Protection 1,\n143 (2019).\n[317] Q. Lu and K.-D. Kim, “A genetic\
    \ algorithm approach for expedited cross-\ning of emergency vehicles in connected\
    \ and autonomous intersection traf-\nfic,” Journal of Advanced Transportation\
    \ 2017 (2017).\n[318] H. M. Amer, H. A. Al-Kashoash, A. Kemp, L. Mihaylova, and\
    \ M. May-\nfield, “Coalition game for emergency vehicles re-routing in smart cities,”\n\
    Proceedings of the IEEE Sensor Array and Multichannel Signal Process-\ning Workshop\
    \ 2018-July, 306–310 (2018).\n[319] B. N. Silva and K. Han, “Mutation operator\
    \ integrated ant colony opti-\nmization based domestic appliance scheduling for\
    \ lucrative demand side\nmanagement,” Future generation computer systems 100,\
    \ 557–568 (2019).\n[320] K. N. Bui, I. E. Agbehadji, R. Millham, D. Camacho, and\
    \ J. J. Jung,\n“Distributed artificial bee colony approach for connected appliances\
    \ in\nsmart home energy management system,” Expert Systems 37, e12521\n(2020).\n\
    [321] S. N. Makhadmeh, A. T. Khader, M. A. Al-Betar, S. Naim, Z. A. A.\nAlyasseri,\
    \ and A. K. Abasi, “Particle swarm optimization algorithm for\npower scheduling\
    \ problem using smart battery,” 2019 IEEE Jordan In-\nternational Joint Conference\
    \ on Electrical Engineering and Information\nTechnology, JEEIT 2019 - Proceedings\
    \ pp. 672–677 (2019).\n[322] S. Abid, A. Zafar, R. Khalid, S. Javaid, U. Qasim,\
    \ Z. A. Khan, and\nN. Javaid, “Managing energy in smart homes using binary particle\
    \ swarm\noptimization,” in “Conference on Complex, Intelligent, and Software In-\n\
    tensive Systems,” (Springer, 2017), pp. 189–196.\n[323] I. Fatima, A. Khalid,\
    \ S. Zahoor, A. Yasmeen, S. Arif, U. Zafar, and\nN. Javaid, “Home energy management\
    \ system using ant colony optimiza-\ntion technique in microgrid,” in “International\
    \ Conference on Broadband\nand Wireless Computing, Communication and Applications,”\
    \ (Springer,\n2017), pp. 267–279. Use ACO for appliance scheduling in a microgrid.\n\
    [324] N. U. Rehman, N. Javaid, and Z. A. Khan, “An enhanced differential\nevolution\
    \ based energy management system for smart grids,” in “2017\n158\n31st International\
    \ Conference on Advanced Information Networking and\nApplications Workshops (WAINA),”\
    \ (IEEE, 2017), pp. 132–137.\n[325] I. Gupta, G. N. Anandini, and M. Gupta, “An\
    \ hour wise device scheduling\napproach for demand side management in smart grid\
    \ using particle swarm\noptimization,” 2016 National Power Systems Conference,\
    \ NPSC 2016 pp.\n1–6 (2017).\n[326] M. A. Nasab, M. Zand, M. Eskandari, P. Sanjeevikumar,\
    \ and P. Siano,\n“Optimal planning of electrical appliance of residential units\
    \ in a smart\nhome network using cloud services,” Smart Cities 4, 1173–1195 (2021).\n\
    [327] I. O. Essiet, Y. Sun, and Z. Wang, “Optimized energy consumption model\n\
    for smart home using improved differential evolution algorithm,” Energy\n172,\
    \ 354–365 (2019).\n[328] I. Ullah and D. Kim, “An improved optimization function\
    \ for maximiz-\ning user comfort with minimum energy consumption in smart homes,”\n\
    Energies 10 (2017).\n[329] R. Reghukumar, S. Sambhu, and V. R. Pandi, “Multi-objective\
    \ optimiza-\ntion for efficient home energy management system using differential\
    \ evo-\nlution algorithm,” in “2018 3rd IEEE International Conference on Recent\n\
    Trends in Electronics, Information & Communication Technology (RTE-\nICT),” (IEEE,\
    \ 2018), pp. 1157–1162.\n[330] T. Pamulapati, R. Mallipeddi, and M. Lee, “Multi-objective\
    \ home appli-\nance scheduling with implicit and interactive user satisfaction\
    \ modelling,”\nApplied Energy 267, 114690 (2020).\n[331] A. R. Jordehi, “Binary\
    \ particle swarm optimisation with quadratic trans-\nfer function: A new binary\
    \ optimisation algorithm for optimal schedul-\ning of appliances in smart homes,”\
    \ Applied Soft Computing 78, 465–480\n(2019).\n[332] P. Chandra, A. Das, C. Das,\
    \ A. Naskar, B. Ganguly, and S. Paul, “Dif-\nferential evolution algorithm based\
    \ energy management of residential mi-\ncrogrid under appliance scheduling dsm,”\
    \ in “2020 IEEE VLSI DEVICE\nCIRCUIT AND SYSTEM (VLSI DCS),” (IEEE, 2020), pp.\
    \ 50–55.\n[333] R. Faia, P. Faria, Z. Vale, and J. Spinola, “Demand response optimiza-\n\
    tion using particle swarm algorithm considering optimum battery energy\nstorage\
    \ schedule in a residential house,” Energies 12, 1645 (2019).\n[334] D. Madathil,\
    \ V. R. Pandi, K. Ilango, and M. G. Nair, “Differential evo-\nlution based energy\
    \ management system for zero net energy building,” in\n“2017 International Conference\
    \ on Technological Advancements in Power\nand Energy (TAP Energy),” (IEEE, 2017),\
    \ pp. 1–5.\n159\n[335] H. Swalehe and B. Marungsri, “Intelligent algorithm for\
    \ optimal load\nmanagement in smart home appliance scheduling in distribution\
    \ sys-\ntem,” in “2018 International Electrical Engineering Congress (iEECON),”\n\
    (IEEE, 2018), pp. 1–4.\n[336] J.-C. Chang and T.-H. Wu, “Demand side management\
    \ of power for\ntime-of-use pricing based on particle swarm optimization,” in\
    \ “2020 3rd\nIEEE International Conference on Knowledge Innovation and Invention\n\
    (ICKII),” (IEEE, 2020), pp. 317–320.\n[337] C. Bharathi, D. Rekha, and V. Vijayakumar,\
    \ “Genetic algorithm based\ndemand side management for smart grid,” Wireless Personal\
    \ Communi-\ncations 93, 481–502 (2017).\n[338] Z. Chen, Y. Chen, R. He, J. Liu,\
    \ M. Gao, and L. Zhang, “Multi-objective\nresidential load scheduling approach\
    \ for demand response in smart grid,”\nSustainable Cities and Society 76, 103530\
    \ (2022).\n[339] W. Tao, Z. H. Lai, M. C. Leu, and Z. Yin, “Worker activity recognition\n\
    in smart manufacturing using imu and semg signals with convolutional\nneural networks,”\
    \ Procedia Manufacturing 26, 1159–1166 (2018).\n[340] R. Zhao, R. Yan, Z. Chen,\
    \ K. Mao, P. Wang, and R. X. Gao, “Deep\nlearning and its applications to machine\
    \ health monitoring,” Mechanical\nSystems and Signal Processing 115, 213–237 (2019).\n\
    [341] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J. Jiang, “A proactive task\n\
    dispatching method based on future bottleneck prediction for the smart\nfactory,”\
    \ International Journal of Computer Integrated Manufacturing\n32, 278–293 (2019).\n\
    [342] M. Sadeghi, R. Tavakkoli-Moghaddam, and R. Babazadeh, “An efficient\nartificial\
    \ bee colony algorithm for a p-hub covering location problem with\ntravel time\
    \ reliability.” International Journal of Industrial Engineering 25\n(2018).\n\
    [343] K. Guo, “Research on location selection model of distribution network\n\
    with constrained line constraints based on genetic algorithm,” Neural\nComputing\
    \ and Applications 32, 1679–1689 (2020).\n[344] Y. Su, J. Liu, X. Xiang, and X.\
    \ Zhang, “A responsive ant colony optimiza-\ntion for large-scale dynamic vehicle\
    \ routing problems via pheromone di-\nversity enhancement,” Complex and Intelligent\
    \ Systems pp. 1–16 (2021).\n[345] M. Alinaghian, M. Ghazanfari, N. Norouzi, and\
    \ H. Nouralizadeh, “A\nnovel model for the time dependent competitive vehicle\
    \ routing problem:\nModified random topology particle swarm optimization,” Networks\
    \ and\nSpatial Economics 17, 1185–1211 (2017).\n[346] D. M. Utama, T. A. Fitria,\
    \ and A. K. Garside, “Artificial bee colony\nalgorithm for solving green vehicle\
    \ routing problems with time windows,”\n160\nin “Journal of Physics: Conference\
    \ Series,” , vol. 1933 (IOP Publishing,\n2021), vol. 1933, p. 012043.\n[347] M.\
    \ Ibrahim, F. Nurhakiki, D. Utama, and A. Rizaki, “Optimised genetic\nalgorithm\
    \ crossover and mutation stage for vehicle routing problem pick-\nup and delivery\
    \ with time windows,” in “IOP Conference Series: Materials\nScience and Engineering,”\
    \ , vol. 1071 (IOP Publishing, 2021), vol. 1071,\np. 012025.\n[348] D. A. Mounia\
    \ and D. Bachir, “A hybrid discrete artificial bee colony for\nthe green pickup\
    \ and delivery problem with time windows,” Informatica\n44 (2020).\n[349] Z. Gu,\
    \ Y. Zhu, Y. Wang, X. Du, M. Guizani, and Z. Tian, “Applying\nartificial bee colony\
    \ algorithm to the multidepot vehicle routing problem,”\nSoftware: Practice and\
    \ Experience (2020).\n[350] N. Norouzi, M. Sadegh-Amalnick, and R. Tavakkoli-Moghaddam,\
    \ “Modi-\nfied particle swarm optimization in a time-dependent vehicle routing\
    \ prob-\nlem: minimizing fuel consumption,” Optimization Letters 11, 121–134\n\
    (2017).\n[351] K. K. H. Ng, C. K. M. Lee, S. Z. Zhang, K. Wu, and W. Ho, “A multiple\n\
    colonies artificial bee colony algorithm for a capacitated vehicle routing\nproblem\
    \ and re-routing strategies under time-dependent traffic conges-\ntion,” Computers\
    \ and Industrial Engineering 109, 151–168 (2017).\n[352] M. M. Solomon, “Algorithms\
    \ for the vehicle routing and scheduling prob-\nlems with time window constraints,”\
    \ Operations research 35, 254–265\n(1987).\n[353] Y. Huang, S. A. Ludwig, and\
    \ F. Deng, “Sensor optimization using a ge-\nnetic algorithm for structural health\
    \ monitoring in harsh environments,”\nJournal of Civil Structural Health Monitoring\
    \ 6, 509–519 (2016).\n[354] F. Zhao, H. Bao, S. Xue, and Q. Xu, “Multi-objective\
    \ particle swarm\noptimization of sensor distribution scheme with consideration\
    \ of the ac-\ncuracy and the robustness for deformation reconstruction,” Sensors\
    \ 19,\n1306 (2019).\n[355] C. Yang, K. Liang, X. Zhang, and X. Geng, “Sensor placement\
    \ algorithm\nfor structural health monitoring with redundancy elimination model\
    \ based\non sub-clustering strategy,” Mechanical Systems and Signal Processing\n\
    124, 369–387 (2019).\n[356] A. Downey, C. Hu, and S. Laflamme, “Optimal sensor\
    \ placement within\na hybrid dense sensor network using an adaptive genetic algorithm\
    \ with\nlearning gene pool,” Structural Health Monitoring 17, 450–460 (2018).\n\
    161\n[357] B. Cao, X. Kang, J. Zhao, P. Yang, Z. Lv, and X. Liu, “Differential\n\
    evolution-based 3-d directional wireless sensor network deployment opti-\nmization,”\
    \ IEEE Internet of Things Journal 5, 3594–3605 (2018).\n[358] R. Marks, A. Clarke,\
    \ C. A. Featherston, and R. Pullin, “Optimization of\nacousto-ultrasonic sensor\
    \ networks using genetic algorithms based on ex-\nperimental and numerical data\
    \ sets,” International Journal of Distributed\nSensor Networks 13, 1550147717743702\
    \ (2017).\n[359] H. Liu, X. He, and Y. Jiao, “Damage identification algorithm\
    \ of hinged\njoints for simply supported slab bridges based on modified hinge\
    \ plate\nmethod and artificial bee colony algorithms,” Algorithms 11, 198 (2018).\n\
    [360] H. Tran-Ngoc, S. Khatir, G. D. Roeck, T. Bui-Tien, L. Nguyen-Ngoc, and\n\
    M. A. Wahab, “Model updating for nam o bridge using particle swarm\noptimization\
    \ algorithm and genetic algorithm,” Sensors 18, 4131 (2018).\n[361] K. Gao, Y.\
    \ Zhang, A. Sadollah, and R. Su, “Improved artificial bee colony\nalgorithm for\
    \ solving urban traffic light scheduling problem,” in “2017\nIEEE Congress on\
    \ Evolutionary Computation (CEC),” (IEEE, 2017), pp.\n395–402.\n[362] R. F. Adebiyi,\
    \ K. A. Abubilal, M. B. Mu’azu, and B. H. Adebiyi, “Devel-\nopment and simulation\
    \ of adaptive traffic light controller using artificial\nbee colony algorithm,”\
    \ International Journal of Intelligent Systems and\nApplications 10, 68–74 (2018).\n\
    [363] T. Mao, A.-S. Mihaita, and C. Cai, “Traffic signal control optimization\n\
    under severe incident conditions using genetic algorithm,” arXiv preprint\narXiv:1906.05356\
    \ (2019).\n[364] C. Tang, S. Xia, C. Zhu, and X. Wei, “Phase timing optimization\
    \ for\nsmart traffic control based on fog computing,” IEEE Access 7, 84217–\n\
    84228 (2019).\n[365] Z. Li, M. Shahidehpour, S. Bahramirad, and A. Khodaei, “Optimizing\n\
    traffic signal settings in smart cities,” IEEE Transactions on Smart Grid\n8,\
    \ 2382–2393 (2017).\n[366] X. Chen and Z. Yuan, “Environmentally friendly traffic\
    \ control strategy-\na case study in xi’an city,” Journal of Cleaner Production\
    \ 249, 119397\n(2020).\n[367] E. Korkmaz and A. P. AKG¨UNG¨OR, “Delay estimation\
    \ models for sig-\nnalized intersections using differential evolution algorithm,”\
    \ Journal of\nEngineering Research 5 (2017).\n[368] X. Zhang, X. Fan, S. Yu, A.\
    \ Shan, S. Fan, Y. Xiao, and F. Dang, “Inter-\nsection signal timing optimization:\
    \ A multi-objective evolutionary algo-\nrithm,” Sustainability 2022, Vol. 14,\
    \ Page 1506 14, 1506 (2022).\n162\n[369] M. Wang, H. Dong, X. Li, L. Song, and\
    \ D. Pang, “A novel parking sys-\ntem designed for smart cities,” Proceedings\
    \ - 2017 Chinese Automation\nCongress, CAC 2017 2017-Janua, 3429–3434 (2017).\n\
    [370] I. Aydin, M. Karakose, and E. Karakose, “A navigation and reservation\n\
    based smart parking platform using genetic optimization for smart cities,”\nICSG\
    \ 2017 - 5th International Istanbul Smart Grids and Cities Congress\nand Fair\
    \ pp. 120–124 (2017).\n[371] F. Ferdous and M. S. Mahmud, “Intelligent traffic\
    \ monitoring system us-\ning vanet infrastructure and ant colony optimization,”\
    \ 2016 5th Interna-\ntional Conference on Informatics, Electronics and Vision,\
    \ ICIEV 2016 pp.\n356–360 (2016). The authors in FF16 use ACO in a smart transportation\n\
    system to efficient route vehicles using VANETS.\n[372] F. Pompei, “Ant colony\
    \ optimisation and geolocation technologies for the\ntransportation assignment\
    \ problem,” Proceedings - International Com-\nputer Software and Applications\
    \ Conference 2, 749–753 (2017). The au-\nthors in FP17 use ACO for planning of\
    \ public transport routes for Rome\nusing Phone data from transit users.\n[373]\
    \ A. Rehman, M. M. Rathore, A. Paul, F. Saeed, and R. W. Ahmad, “Ve-\nhicular\
    \ traffic optimisation and even distribution using ant colony in smart\ncity environment,”\
    \ IET Intelligent Transport Systems 12, 594–601 (2018).\n[374] A. Jovanovi´c and\
    \ D. Teodorovi´c, “Fixed-time traffic control at super-\nstreet intersections\
    \ by bee colony optimization,” Transportation Research\nRecord p. 03611981211058104\
    \ (2021).\n[375] T.-H. Nguyen and J. J. Jung, “Ant colony optimization-based traffic\
    \ rout-\ning with intersection negotiation for connected vehicles,” Applied Soft\n\
    Computing 112, 107828 (2021).\n[376] R. Pitakaso, K. Sethanan, and N. Srijaroon,\
    \ “Modified differential evolu-\ntion algorithms for multi-vehicle allocation\
    \ and route optimization for em-\nployee transportation,” Engineering Optimization\
    \ 52, 1225–1243 (2020).\n[377] Y. Yi, K. Choi, and Y. J. Lee, “Optimal limited-stop\
    \ bus routes selec-\ntion using a genetic algorithm and smart card data,” Journal\
    \ of Public\nTransportation 19, 178–198 (2016).\n[378] A. T. Buba and L. S. Lee,\
    \ “Differential evolution with improved sub-\nroute reversal repair mechanism\
    \ for multiobjective urban transit routing\nproblem,” Numerical Algebra, Control\
    \ and Optimization 8, 351 (2018).\n[379] X. Mao, “Study on ant colony optimization\
    \ algorithm for “one-day tour”\ntraffic line,” Cluster Computing 22, 3673–3680\
    \ (2019).\n[380] A. Jovanovi´c, M. Nikoli´c, and D. Teodorovi´c, “Area-wide urban\
    \ traffic\ncontrol: A bee colony optimization approach,” Transportation Research\n\
    Part C: Emerging Technologies 77, 329–350 (2017).\n163\n[381] K. Hassoune, W.\
    \ Dachry, F. Moutaouakkil, and H. Medromi, “Dynamic\nparking guidance architecture\
    \ using ant colony optimization and multi-\nagent systems,” Journal of Advances\
    \ in Information Technology 11, 58–63\n(2020).\n[382] U. Nations, “World population\
    \ prospects: the 2017 revision, key findings\nand advance tables,” Department\
    \ of Economics and Social Affairs PD,\neditor. New York: United Nations (2017).\n\
    [383] WHO, “Falls : Key facts,” (2018).\n[384] R. Afable,\nB. Averbeck,\nK. Holmen,\n\
    R. Dziedzicki,\nA. Nichols,\nJ. Schlegelmilch, and D. Caruso, “When i’m 64: How\
    \ boomers will change\nhealth care,” (2007).\n[385] M. K. James, M. C. Victor,\
    \ S. M. Saghir, and P. A. Gentile, “Characteri-\nzation of fall patients: Does\
    \ age matter?” Journal of Safety Research 64,\n83–92 (2018).\n[386] J. A. Stevens,\
    \ M. F. Ballesteros, K. A. Mack, R. A. Rudd, E. DeCaro, and\nG. Adler, “Gender\
    \ differences in seeking care for falls in the aged medicare\npopulation,” American\
    \ journal of preventive medicine 43, 59–62 (2012).\n[387] J. Morisod and M. Coutaz,\
    \ “Post-fall syndrome: how to recognize and\ntreat it?” Revue M´edicale Suisse\
    \ 3, 2531–2 (2007).\n[388] K. Chaccour, R. Darazi, A. H. El Hassani, and E. Andres,\
    \ “From fall de-\ntection to fall prevention: A generic classification of fall-related\
    \ systems,”\nIEEE Sensors Journal 17, 812–822 (2016).\n[389] A. L. S. D. Lima,\
    \ L. J. W. Evers, T. Hahn, L. Bataille, J. L. Hamilton,\nM. A. Little, Y. Okuma,\
    \ B. R. Bloem, and M. J. Faber, “Freezing of\ngait and fall detection in parkinson’s\
    \ disease using wearable sensors: a\nsystematic review,” Journal of neurology\
    \ 264, 1642–1654 (2017).\n[390] E. E. Geertsema, G. H. Visser, M. A. Viergever,\
    \ and S. N. Kalitzin,\n“Automated remote fall detection using impact features\
    \ from video and\naudio,” Journal of biomechanics 88, 25–32 (2019).\n[391] P.\
    \ Tsinganos and A. Skodras, “A smartphone-based fall detection system\nfor the\
    \ elderly,” in “Proceedings of the 10th International Symposium on\nImage and\
    \ Signal Processing and Analysis,” (IEEE, 2017), pp. 53–58.\n[392] N. El Halabi,\
    \ R. A. Z. Daou, R. Achkar, A. Hayek, and J. B¨orcs¨ok,\n“Monitoring system for\
    \ prediction and detection of epilepsy seizure,” in\n“2019 Fourth International\
    \ Conference on Advances in Computational\nTools for Engineering Applications\
    \ (ACTEA),” (IEEE, 2019), pp. 1–7.\n[393] J. Fleming and C. Brayne, “Inability\
    \ to get up after falling, subsequent\ntime on floor, and summoning help: prospective\
    \ cohort study in people\nover 90,” Bmj 337 (2008).\n164\n[394] K. Ozcan, A. K.\
    \ Mahabalagiri, M. Casares, and S. Velipasalar, “Auto-\nmatic fall detection and\
    \ activity classification by a wearable embedded\nsmart camera,” IEEE journal\
    \ on emerging and selected topics in circuits\nand systems 3, 125–136 (2013).\n\
    [395] A. Ramachandran and A. Karuppiah, “A survey on recent advances in\nwearable\
    \ fall detection systems,” BioMed research international 2020\n(2020).\n[396]\
    \ Q. Guan, C. Li, X. Guo, and B. Shen, “Infrared signal based elderly fall\ndetection\
    \ for in-home monitoring,” in “2017 9th International Confer-\nence on Intelligent\
    \ Human-Machine Systems and Cybernetics (IHMSC),”\n, vol. 1 (IEEE, 2017), vol.\
    \ 1, pp. 373–376.\n[397] A. Yazar, F. Erden, and A. E. Cetin, “Multi-sensor ambient\
    \ assisted\nliving system for fall detection,” in “Proceedings of the IEEE International\n\
    Conference on Acoustics, Speech, and Signal Processing (ICASSP’14),”\n(2014),\
    \ pp. 1–3.\n[398] S. M. Adnan, A. Irtaza, S. Aziz, M. O. Ullah, A. Javed, and\
    \ M. T. Mah-\nmood, “Fall detection through acoustic local ternary patterns,”\
    \ Applied\nAcoustics 140, 296–300 (2018).\n[399] S. Palipana, D. Rojas, P. Agrawal,\
    \ and D. Pesch, “Falldefi: Ubiquitous\nfall detection using commodity wi-fi devices,”\
    \ Proceedings of the ACM\non Interactive, Mobile, Wearable and Ubiquitous Technologies\
    \ 1, 1–25\n(2018).\n[400] I. Halima, J.-M. Lafert´e, G. Cormier, A.-J. Foug`ere,\
    \ and J.-L. Dillenseger,\n“Depth and thermal information fusion for head tracking\
    \ using particle\nfilter in a fall detection context,” Integrated Computer-Aided\
    \ Engineering\npp. 1–14 (2020).\n[401] Q. Han, H. Zhao, W. Min, H. Cui, X. Zhou,\
    \ K. Zuo, and R. Liu, “A\ntwo-stream approach to fall detection with mobilevgg,”\
    \ IEEE Access 8,\n17556–17566 (2020).\n[402] J. Zhang, C. Wu, and Y. Wang, “Human\
    \ fall detection based on body\nposture spatio-temporal evolution,” Sensors 20,\
    \ 946 (2020).\n[403] R. Gupta, P. Anand, S. Chaudhury, B. Lall, and S. Singh,\
    \ “Compressive\nsensing based privacy for fall detection,” arXiv preprint arXiv:2001.03463\n\
    (2020).\n[404] R. Espinosa, H. Ponce, S. Guti´errez, L. Mart´ınez-Villase˜nor,\
    \ J. Brieva,\nand E. Moya-Albor, “Application of convolutional neural networks\
    \ for fall\ndetection using multiple cameras,” in “Challenges and Trends in Multi-\n\
    modal Fall Detection for Healthcare,” (Springer, 2020), pp. 97–120.\n[405] M.\
    \ T. Pourazad, A. Shojaei-Hashemi, P. Nasiopoulos, M. Azimi, M. Mak,\nJ. Grace,\
    \ D. Jung, and T. Bains, “A non-intrusive deep learning based fall\n165\ndetection\
    \ scheme using video cameras,” in “2020 International Conference\non Information\
    \ Networking (ICOIN),” (IEEE, 2020), pp. 443–446.\n[406] Y. Nizam and M. M. A.\
    \ Jamil, “A novel approach for human fall detection\nand fall risk assessment,”\
    \ in “Challenges and Trends in Multimodal Fall\nDetection for Healthcare,” (Springer,\
    \ 2020), pp. 237–259.\n[407] Z. Liu, M. Yang, Y. Yuan, and K. Y. Kan, “Fall detection\
    \ and person-\nnel tracking system using infrared array sensors,” IEEE Sensors\
    \ Journal\n(2020).\n[408] A. Singh, S. U. Rehman, S. Yongchareon, and P. H. J.\
    \ Chong, “Sensor\ntechnologies for fall detection systems: A review,” IEEE Sensors\
    \ Journal\n20, 6889–6919 (2020).\n[409] M. Hubl, O. Pohl, V. Noack, P. Hahlweg,\
    \ C. Ehm, M. Derleh, T. Wei-\nland, E. Schick, H. M¨uller, D. Hampicke et al.,\
    \ “Embedding of wear-\nable electronics into smart sensor insole,” in “2016 IEEE\
    \ 18th Electronics\nPackaging Technology Conference (EPTC),” (IEEE, 2016), pp.\
    \ 597–601.\n[410] T. Shi, X. Sun, Z. Xia, L. Chen, and J. Liu, “Fall detection\
    \ algorithm\nbased on triaxial accelerometer and magnetometer.” Engineering Letters\n\
    24 (2016).\n[411] S. Hwang, M. Ryu, Y. Yang, and N. Lee, “Fall detection with\
    \ three-axis\naccelerometer and magnetometer in a smartphone,” in “Proceedings\
    \ of\nthe International Conference on Computer Science and Technology, Jeju,\n\
    Korea,” (2012), pp. 25–27.\n[412] X. Xi, M. Tang, S. M. Miran, and Z. Luo, “Evaluation\
    \ of feature extrac-\ntion and recognition for activity monitoring and fall detection\
    \ based on\nwearable semg sensors,” Sensors 17, 1229 (2017).\n[413] P. Melillo,\
    \ R. Castaldo, G. Sannino, A. Orrico, G. De Pietro, and L. Pec-\nchia, “Wearable\
    \ technology and ecg processing for fall risk assessment,\nprevention and detection,”\
    \ in “2015 37th Annual International Confer-\nence of the IEEE Engineering in\
    \ Medicine and Biology Society (EMBC),”\n(IEEE, 2015), pp. 7740–7743.\n[414] K.-C.\
    \ Liu, C.-Y. Hsieh, S. J.-P. Hsu, and C.-T. Chan, “Impact of sampling\nrate on\
    \ wearable-based fall detection systems based on machine learning\nmodels,” IEEE\
    \ Sensors Journal 18, 9882–9890 (2018).\n[415] J. Xu, Z. He, and Y. Zhang, “Cnn-lstm\
    \ combined network for iot enabled\nfall detection applications,” in “Journal\
    \ of Physics: Conference Series,” ,\nvol. 1267 (IOP Publishing, 2019), vol. 1267,\
    \ p. 012044.\n[416] D. Mrozek, A. Koczur, and B. Ma lysiak-Mrozek, “Fall detection\
    \ in older\nadults with mobile iot devices and machine learning in the cloud and\
    \ on\nthe edge,” Information Sciences (2020).\n166\n[417] A. Sucerquia, J. D.\
    \ L´opez, and J. F. Vargas-Bonilla, “Sisfall: A fall and\nmovement dataset,” Sensors\
    \ 17, 198 (2017).\n[418] L. M´arquez-Ordaz and H. Ponce, “Implementation of a\
    \ svm on an embed-\nded system: A case study on fall detection,” in “Mexican International\n\
    Conference on Artificial Intelligence,” (Springer, 2020), pp. 76–87.\n[419] D.\
    \ Sarabia-J´acome, R. Usach, C. Palau, and M. Esteve, “Highly-efficient\nfog-based\
    \ deep learning aal fall detection system,” Internet of Things p.\n100185 (2020).\n\
    [420] N. Zurbuchen, P. Bruegger, and A. Wilde, “A comparison of machine\nlearning\
    \ algorithms for fall detection using wearable sensors,” in “2020 In-\nternational\
    \ Conference on Artificial Intelligence in Information and Com-\nmunication (ICAIIC),”\
    \ (IEEE, 2020), pp. 427–431.\n[421] A. Chelli and M. P¨atzold, “A machine learning\
    \ approach for fall detec-\ntion and daily living activity recognition,” IEEE\
    \ Access 7, 38670–38687\n(2019).\n[422] O. Ojetola, E. Gaura, and J. Brusey, “Data\
    \ set for fall events and daily\nactivities from inertial sensors,” in “Proceedings\
    \ of the 6th ACM multi-\nmedia systems conference,” (2015), pp. 243–248.\n[423]\
    \ D. Anguita, A. Ghio, L. Oneto, X. Parra, and J. L. Reyes-Ortiz, “A public\n\
    domain dataset for human activity recognition using smartphones.” in\n“Esann,”\
    \ , vol. 3 (2013), vol. 3, p. 3.\n[424] O. Kerdjidj, N. Ramzan, K. Ghanem, A.\
    \ Amira, and F. Chouireb, “Fall\ndetection and human activity classification using\
    \ wearable sensors and\ncompressed sensing,” Journal of Ambient Intelligence and\
    \ Humanized\nComputing 11, 349–361 (2020).\n[425] A. Burns, B. R. Greene, M. J.\
    \ McGrath, T. J. O’Shea, B. Kuris, S. M.\nAyer, F. Stroiescu, and V. Cionca, “Shimmer™–a\
    \ wireless sensor platform\nfor noninvasive biomedical research,” IEEE Sensors\
    \ Journal 10, 1527–\n1534 (2010).\n[426] M. Fa˜nez, J. R. Villar, E. de la Cal,\
    \ J. Sedano, and V. M. Gonz´alez,\n“Transfer learning and information retrieval\
    \ applied to fall detection,”\nExpert Systems 37, e12522 (2020).\n[427] E. Casilari,\
    \ J. A. Santoyo-Ram´on, and J. M. Cano-Garc´ıa, “Analysis of\na smartphone-based\
    \ architecture with multiple mobility sensors for fall\ndetection,” PLoS one 11,\
    \ e0168069 (2016).\n[428] J. Lin, E. Keogh, S. Lonardi, and B. Chiu, “A symbolic\
    \ representation of\ntime series, with implications for streaming algorithms,”\
    \ in “Proceedings\nof the 8th ACM SIGMOD workshop on Research issues in data mining\n\
    and knowledge discovery,” (2003), pp. 2–11.\n167\n[429] D. Giuffrida, G. Benetti,\
    \ D. D. Martini, and T. Facchinetti, “Fall detec-\ntion with supervised machine\
    \ learning using wearable sensors,” in “2019\nIEEE 17th International Conference\
    \ on Industrial Informatics (INDIN),”\n, vol. 1 (IEEE, 2019), vol. 1, pp. 253–259.\n\
    [430] E. Casilari, M. ´Alvarez-Marco, and F. Garc´ıa-Lagos, “A study of the use\n\
    of gyroscope measurements in wearable fall detection systems,” Symmetry\n12, 649\
    \ (2020).\n[431] G. L. Santos, P. T. Endo, K. H. d. C. Monteiro, E. d. S. Rocha,\
    \ I. Silva,\nand T. Lynn, “Accelerometer-based human fall detection using convolu-\n\
    tional neural networks,” Sensors 19, 1644 (2019).\n[432] B. Kwolek and M. Kepski,\
    \ “Human fall detection on embedded platform\nusing depth maps and wireless accelerometer,”\
    \ Computer methods and\nprograms in biomedicine 117, 489–501 (2014).\n[433] T.\
    \ R. Mauldin, M. E. Canby, V. Metsis, A. H. Ngu, and C. C. Rivera,\n“Smartfall:\
    \ A smartwatch-based fall detection system using deep learn-\ning,” Sensors 18,\
    \ 3363 (2018).\n[434] K. Simonyan and A. Zisserman, “Very deep convolutional networks\
    \ for\nlarge-scale image recognition,” arXiv preprint arXiv:1409.1556 (2014).\n\
    [435] A. Alarifi and A. Alwadain, “Killer heuristic optimized convolution neural\n\
    network-based fall detection with wearable iot sensor devices,” Measure-\nment\
    \ 167, 108258 (2021).\n[436] M. Waheed, H. Afzal, and K. Mehmood, “Nt-fds—a noise\
    \ tolerant fall\ndetection system using deep learning on wearable devices,” Sensors\
    \ 21,\n2006 (2021).\n[437] L. Mart´ınez-Villase˜nor, H. Ponce, J. Brieva, E. Moya-Albor,\
    \ J. N´u˜nez-\nMart´ınez, and C. Pe˜nafort-Asturiano, “Up-fall detection dataset:\
    \ A mul-\ntimodal approach,” Sensors 19, 1988 (2019).\n[438] E. Casilari, R. Lora-Rivera,\
    \ and F. Garc´ıa-Lagos, “A study on the appli-\ncation of convolutional neural\
    \ networks to fall detection evaluated with\nmultiple public datasets,” Sensors\
    \ 20, 1466 (2020).\n[439] R. Delgado-Escano, F. M. Castro, J. R. C´ozar, M. J.\
    \ Mar´ın-Jim´enez,\nN. Guil, and E. Casilari, “A cross-dataset deep learning-based\
    \ classifier\nfor people fall detection and identification,” Computer methods\
    \ and pro-\ngrams in biomedicine 184, 105265 (2020).\n[440] C. Medrano, R. Igual,\
    \ I. Plaza, and M. Castro, “Detecting falls as novelties\nin acceleration patterns\
    \ acquired with smartphones,” PloS one 9, e94811\n(2014).\n[441] D. Micucci, M.\
    \ Mobilio, and P. Napoletano, “Unimib shar: A dataset for\nhuman activity recognition\
    \ using acceleration data from smartphones,”\nApplied Sciences 7, 1101 (2017).\n\
    168\n[442] A. T. ¨Ozdemir, “An analysis on sensor locations of the human body\
    \ for\nwearable fall detection devices: Principles and practice,” Sensors 16,\
    \ 1161\n(2016).\n[443] M. Tolkiehn, L. Atallah, B. Lo, and G.-Z. Yang, “Direction\
    \ sensitive\nfall detection using a triaxial accelerometer and a barometric pressure\n\
    sensor,” in “2011 Annual international conference of the IEEE engineering\nin\
    \ medicine and biology society,” (IEEE, 2011), pp. 369–372.\n[444] B. Watanapa,\
    \ O. Patsadu, P. Dajpratham, and C. Nukoolkit, “Post-fall\nintelligence supporting\
    \ fall severity diagnosis using kinect sensor,” Ap-\nplied Computational Intelligence\
    \ and Soft Computing 2018 (2018).\n[445] H. Jung, B. Koo, J. Kim, T. Kim, Y. Nam,\
    \ and Y. Kim, “Enhanced\nalgorithm for the detection of preimpact fall for wearable\
    \ airbags,” Sensors\n20, 1277 (2020).\n[446] B. Koo, J. Kim, Y. Nam, and Y. Kim,\
    \ “The performance of post-fall de-\ntection using the cross-dataset: Feature\
    \ vectors, classifiers and processing\nconditions,” Sensors 21, 4638 (2021).\n\
    [447] C.-Y. Hsieh, H.-Y. Huang, K.-C. Liu, C.-P. Liu, C.-T. Chan, and S. J.-P.\n\
    Hsu, “Multiphase identification algorithm for fall recording systems using\na\
    \ single wearable inertial sensor,” Sensors 21, 3302 (2021).\n[448] M. Musci,\
    \ D. De Martini, N. Blago, T. Facchinetti, and M. Piastra,\n“Online fall detection\
    \ using recurrent neural networks,” arXiv preprint\narXiv:1804.04976 (2018).\n\
    [449] X. Yu, H. Qiu, and S. Xiong, “A novel hybrid deep neural network to pre-\n\
    dict pre-impact fall for older people based on wearable inertial sensors,”\nFrontiers\
    \ in bioengineering and biotechnology 8 (2020).\n[450] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Detection of fall direction using\na velocity vector in the android\
    \ smartphone environment,” Journal of\nthe Korea Institute of Information and\
    \ Communication Engineering 19,\n336–342 (2015).\n[451] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Fall direction detection using the\ncomponents of acceleration\
    \ vector and orientation sensor on the smart-\nphone environment,” Journal of\
    \ Korea Multimedia Society 18, 565–574\n(2015).\n[452] J. K. Lee, “Determination\
    \ of fall direction before impact using support\nvector machine,” Journal of Sensor\
    \ Science and Technology 24, 47–53\n(2015).\n[453] S. F. Hossain, M. Z. Islam,\
    \ and M. L. Ali, “Real time direction-sensitive\nfall detection system using accelerometer\
    \ and learning classifier,” in\n“2017 4th International Conference on Advances\
    \ in Electrical Engineering\n(ICAEE),” (IEEE, 2017), pp. 99–104.\n169\n[454] F.\
    \ Hossain, M. L. Ali, M. Z. Islam, and H. Mustafa, “A direction-sensitive\nfall\
    \ detection system using single 3d accelerometer and learning classifier,”\nin\
    \ “2016 International Conference on Medical Engineering, Health Infor-\nmatics\
    \ and Technology (MediTec),” (IEEE, 2016), pp. 1–6.\n[455] L. Palmerini, J. Klenk,\
    \ C. Becker, and L. Chiari, “Accelerometer-based\nfall detection using machine\
    \ learning: Training and testing on real-world\nfalls,” Sensors 20, 6479 (2020).\n\
    [456] R. M. Gibson, A. Amira, N. Ramzan, P. C. de-la Higuera, and Z. Pervez,\n\
    “Multiple comparator classifier framework for accelerometer-based fall de-\ntection\
    \ and diagnostic,” Applied Soft Computing 39, 94–103 (2016).\n[457] F. Hussain,\
    \ F. Hussain, M. Ehatisham-ul Haq, and M. A. Azam,\n“Activity-aware fall detection\
    \ and recognition based on wearable sensors,”\nIEEE Sensors Journal 19, 4528–4536\
    \ (2019).\n[458] H. Li, A. Shrestha, H. Heidari, J. Le Kernec, and F. Fioranelli,\
    \ “Bi-lstm\nnetwork for multimodal continuous human activity recognition and fall\n\
    detection,” IEEE Sensors Journal 20, 1191–1201 (2019).\n[459] X. Wu, Y. Zheng,\
    \ C.-H. Chu, L. Cheng, and J. Kim, “Applying deep\nlearning technology for automatic\
    \ fall detection using mobile sensors,”\nBiomedical Signal Processing and Control\
    \ 72, 103355 (2022).\n[460] G. Vavoulas, C. Chatzaki, T. Malliotakis, M. Pediaditis,\
    \ and M. Tsik-\nnakis, “The mobiact dataset: Recognition of activities of daily\
    \ living using\nsmartphones.” in “ICT4AgeingWell,” (2016), pp. 143–151.\n[461]\
    \ G.\nS¸eng¨ul,\nM.\nKarakaya,\nS.\nMisra,\nO.\nO.\nAbayomi-Alli,\nand\nR. Damaˇseviˇcius,\
    \ “Deep learning based fall detection using smartwatches\nfor healthcare applications,”\
    \ Biomedical Signal Processing and Control\n71, 103242 (2022).\n[462] H.-L. Le,\
    \ D.-N. Nguyen, T.-H. Nguyen, and H.-N. Nguyen, “A novel fea-\nture set extraction\
    \ based on accelerometer sensor data for improving the\nfall detection system,”\
    \ Electronics 11, 1030 (2022).\n[463] H. Yhdego, J. Li, C. Paolini, and M. Audette,\
    \ “Wearable sensor gait\nanalysis of fall detection using attention network,”\
    \ in “2021 IEEE Inter-\nnational Conference on Bioinformatics and Biomedicine\
    \ (BIBM),” (IEEE,\n2021), pp. 3137–3141.\n[464] M. Liu, S. Ren, S. Ma, J. Jiao,\
    \ Y. Chen, Z. Wang, and W. Song, “Gated\ntransformer networks for multivariate\
    \ time series classification,” arXiv\npreprint arXiv:2103.14438 (2021).\n[465]\
    \ X. Yu, J. Jang, and S. Xiong, “A large-scale open motion dataset (kfall)\nand\
    \ benchmark algorithms for detecting pre-impact fall of the elderly\nusing wearable\
    \ inertial sensors,” Frontiers in Aging Neuroscience p. 399\n(2021).\n170\n[466]\
    \ J. A. Santoyo-Ram´on, E. Casilari, and J. M. Cano-Garc´ıa, “A study of\none-class\
    \ classification algorithms for wearable fall sensors,” Biosensors\n11 (2021).\n\
    [467] N. Zurbuchen, A. Wilde, and P. Bruegger, “A machine learning multi-\nclass\
    \ approach for fall detection systems based on wearable sensors with\na study\
    \ on sampling rates selection,” Sensors 21, 938 (2021).\n[468] M. Musci, D. De\
    \ Martini, N. Blago, T. Facchinetti, and M. Piastra, “On-\nline fall detection\
    \ using recurrent neural networks on smart wearable de-\nvices,” IEEE Transactions\
    \ on Emerging Topics in Computing 9, 1276–\n1289 (2020).\n[469] E. Boutellaa,\
    \ K. Ghanem, H. Tayakout, O. Kerdjidj, F. Harizi, and\nS. Bourennane, “A tensor\
    \ approach for activity recognition and fall de-\ntection using wearable inertial\
    \ sensors,” in “2020 First International Con-\nference of Smart Systems and Emerging\
    \ Technologies (SMARTTECH),”\n(IEEE, 2020), pp. 203–207.\n[470] S. Rosati, G.\
    \ Balestra, and M. Knaflitz, “Comparison of different sets of\nfeatures for human\
    \ activity recognition by wearable sensors,” Sensors 18,\n4189 (2018).\n[471]\
    \ J. O. Smith, Mathematics of the discrete Fourier transform (DFT): with\naudio\
    \ applications (Julius Smith, 2007).\n[472] M. A. O’Reilly, W. Johnston, C. Buckley,\
    \ D. Whelan, and B. Caulfield,\n“The influence of feature selection methods on\
    \ exercise classification with\ninertial measurement units,” in “2017 IEEE 14th\
    \ International Conference\non Wearable and Implantable Body Sensor Networks (BSN),”\
    \ (IEEE,\n2017), pp. 193–196.\n[473] A. Liaw, M. Wiener et al., “Classification\
    \ and regression by randomfor-\nest,” R news 2, 18–22 (2002).\n[474] O. Rioul\
    \ and M. Vetterli, “Wavelets and signal processing,” IEEE signal\nprocessing magazine\
    \ 8, 14–38 (1991).\n[475] M. G. Abdu-Aguye and W. Gomaa, “Competitive feature\
    \ extraction for\nactivity recognition based on wavelet transforms and adaptive\
    \ pooling,”\nin “2019 International Joint Conference on Neural Networks (IJCNN),”\n\
    (IEEE, 2019), pp. 1–8.\n[476] ¨U. Lepik and H. Hein, “Haar wavelets,” in “Haar\
    \ Wavelets,” (Springer,\n2014), pp. 7–20.\n[477] K. He, X. Zhang, S. Ren, and\
    \ J. Sun, “Spatial pyramid pooling in deep\nconvolutional networks for visual\
    \ recognition,” IEEE transactions on pat-\ntern analysis and machine intelligence\
    \ 37, 1904–1916 (2015).\n171\n[478] C. N. Silla and A. A. Freitas, “A survey of\
    \ hierarchical classification across\ndifferent application domains,” Data Mining\
    \ and Knowledge Discovery\n22, 31–72 (2011).\n[479] S. B. Khojasteh, J. R. Villar,\
    \ C. Chira, V. M. Gonz´alez, and E. De la\nCal, “Improving fall detection using\
    \ an on-wrist wearable accelerometer,”\nSensors 18, 1350 (2018).\n[480] Q. T.\
    \ Huynh and B. Q. Tran, “Time-frequency analysis of daily activities\nfor fall\
    \ detection,” Signals 2, 1–12 (2021).\n[481] J. Wang, X. Zhang, Q. Gao, X. Ma,\
    \ X. Feng, and H. Wang, “Device-free si-\nmultaneous wireless localization and\
    \ activity recognition with wavelet fea-\nture,” IEEE Transactions on Vehicular\
    \ Technology 66, 1659–1669 (2016).\n[482] C. Ellouzi and M. Trkov, “Fast trip\
    \ detection using continuous wavelet\ntransform,” in “Proceedings of the Poster,\
    \ Dynamic Walking Conference,”\n(2021).\n[483] J. Gu, Z. Wang, J. Kuen, L. Ma,\
    \ A. Shahroudy, B. Shuai, T. Liu, X. Wang,\nG. Wang, J. Cai et al., “Recent advances\
    \ in convolutional neural net-\nworks,” Pattern Recognition 77, 354–377 (2018).\n\
    [484] D. Bhatt, C. Patel, H. Talsania, J. Patel, R. Vaghela, S. Pandya, K. Modi,\n\
    and H. Ghayvat, “Cnn variants for computer vision: History, architecture,\napplication,\
    \ challenges and future scope,” Electronics 10, 2470 (2021).\n[485] S. P. Singh,\
    \ L. Wang, S. Gupta, H. Goli, P. Padmanabhan, and B. Guly´as,\n“3d deep learning\
    \ on medical images: a review,” Sensors 20, 5097 (2020).\n[486] S. Latif, R. Rana,\
    \ S. Khalifa, R. Jurdak, J. Qadir, and B. W. Schuller,\n“Survey of deep representation\
    \ learning for speech emotion recognition,”\nIEEE Transactions on Affective Computing\
    \ (2021).\n[487] F. G. Pratic`o, R. Fedele, V. Naumov, and T. Sauer, “Detection\
    \ and mon-\nitoring of bottom-up cracks in road pavement using a machine-learning\n\
    approach,” Algorithms 13, 81 (2020).\n[488] K. Saho, S. Hayashi, M. Tsuyama, L.\
    \ Meng, and M. Masugi, “Machine\nlearning-based classification of human behaviors\
    \ and falls in restroom via\ndual doppler radar measurements,” Sensors 22, 1721\
    \ (2022).\n[489] J. Kakarla, B. V. Isunuri, K. S. Doppalapudi, and K. S. R. Byla-\n\
    pudi, “Three-class classification of brain magnetic resonance images using\naverage-pooling\
    \ convolutional neural network,” International Journal of\nImaging Systems and\
    \ Technology 31, 1731–1740 (2021).\n[490] J. Yang, F. Xie, H. Fan, Z. Jiang, and\
    \ J. Liu, “Classification for der-\nmoscopy images using convolutional neural\
    \ networks based on region av-\nerage pooling,” IEEE Access 6, 65130–65138 (2018).\n\
    172\n[491] M. H. Mohd Noor, S. Y. Tan, and M. N. Ab Wahab, “Deep temporal\nconv-lstm\
    \ for activity recognition,” Neural Processing Letters pp. 1–23\n(2022).\n[492]\
    \ M. I. Amara, A. Akkouche, E. Boutellaa, and H. Tayakout, “A smart-\nphone application\
    \ for fall detection using accelerometer and convlstm\nnetwork,” in “2020 2nd\
    \ International Workshop on Human-Centric Smart\nEnvironments for Health and Well-being\
    \ (IHSH),” (IEEE, 2021), pp. 92–\n96.\n[493] J. Du, Z. Zhang, M. Li, J. Guo, and\
    \ K. Zhu, “Optimal scheduling of\nintegrated energy system based on improved grey\
    \ wolf optimization algo-\nrithm,” Scientific Reports 12, 1–19 (2022).\n[494]\
    \ N. Mazyavkina, S. Sviridov, S. Ivanov, and E. Burnaev, “Reinforcement\nlearning\
    \ for combinatorial optimization: A survey,” Computers & Oper-\nations Research\
    \ 134, 105400 (2021).\n173\nAppendix A: Sample Plots for different fall categories\n\
    Sample plots of the windowed accelerometer and gyroscope measurements of\ndifferent\
    \ fall types.\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n\
    500\n0\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n-10,000\n\
    -8000\n-6000\n-4000\n-2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n-10,000\n-8000\n-6000\n-4000\n-2000\n0\n2000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n1200\n1000\n800\n\
    600\n400\n200\n0\n200\n400\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n2000\n0\n2000\n4000\n6000\n8000\nAmplitude\nGyro Z\nForward Hard Fall\n\
    Figure 1. Accelerometer and Gyroscope measurements: Forward Hard Fall\n174\n0\n\
    100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n0\nAmplitude\n\
    Acc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n\
    500\n1000\n1500\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    200\n100\n0\n100\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n4000\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n400\n300\n200\n100\n0\nAmplitude\nAcc Z\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro Z\nForward Soft Fall\nFigure 2. Accelerometer and Gyroscope measurements:\
    \ Forward Soft Fall\n175\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n2000\n0\n2000\n4000\n6000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n2000\n1500\n1000\n500\n0\n500\nAmplitude\nAcc Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro\
    \ Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n200\n0\n200\n400\n600\n800\n\
    Amplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n500\n0\n500\n\
    1000\n1500\nAmplitude\nGyro Z\nBackward Hard Fall\nFigure 3. Accelerometer and\
    \ Gyroscope measurements: Backward Hard Fall\n176\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n600\n500\n400\n300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n\
    0\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\n600\nAmplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n300\n200\n100\n0\n100\n200\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\n800\n1000\nAmplitude\nGyro\
    \ Z\nBackward Soft Fall\nFigure 4. Accelerometer and Gyroscope measurements:f\
    \ Backward Soft Fall\n177\n0\n100\n200\n300\n400\n500\n600\nSample no\n1750\n\
    1500\n1250\n1000\n750\n500\n250\n0\n250\nAmplitude\nAcc X\n0\n100\n200\n300\n\
    400\n500\n600\nSample no\n6000\n4000\n2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n\
    0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n250\n200\n150\n\
    100\n50\n0\n50\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    1000\n0\n1000\n2000\n3000\n4000\n5000\n6000\n7000\nAmplitude\nGyro Z\nLateral\
    \ Hard Fall\nFigure 5. Accelerometer and Gyroscope measurements: Lateral Hard\
    \ Fall\n178\n0\n100\n200\n300\n400\n500\n600\nSample no\n700\n600\n500\n400\n\
    300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro X\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n1500\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n150\n100\n50\n\
    0\n50\n100\n150\n200\n250\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n1000\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro Z\n\
    Lateral Soft Fall \nFigure 6. Acclerometer and Gyroscope measurements: Lateral\
    \ Soft Fall\n179\nAppendix B: Acronyms\nABC - Artificial Bee Colony\nACO - Ant\
    \ Colony Optimization\nAdaBoost - Adaptive Boosting\nADL - Activity of Daily Living\n\
    AI - Artificial intelligence\nANN - Artificial Neural Networks\nBi-LSTM - Bi-Directional\
    \ Long Short-Term Memory\nCERT - Computer Emergency Response Team\nCNN - Convolutional\
    \ Neural Networks\nCO - Carbon Monoxide\nCO2 - Carbon Dioxide\nDARPA - Defense\
    \ Advanced Research Projects Agency\nDDOS - Distributed Denial of Service\nDE\
    \ - Differential Evolution\nDER - Distributed energy resource\nDOS - Denial of\
    \ Service\nDL – Deep Learning\nDLEFN - Deep Learning Entrusted to Fog Nodes\n\
    DNN - Deep Neural Networks\nDT - Decision Tree\nEBT - Ensemble Bagged Tree\nEC\
    \ - Ensemble Classifier\nECG - ElectroCardioGram\nEEG - ElectroEncepheloGram\n\
    EMG – ElectroMyoGram\nETSI - European Telecommunications Standards Institute\n\
    FANs - Field Area Networks\nFDS - Fall Detection System\nFN - False Negative\n\
    GA - Genetic Algorithm\nGRU - Gated Recurrent Units\nGSM - Global System for Mobile\
    \ Communications\nHANs - Home Area Networks\nICT - information and communication\
    \ technologies\nIEEE - Institute of Electrical and Electronic Engineers\nIETF\
    \ - Internet Engineering Task Force\nIQ Range - Interquartile Range\nIMU – Inertial\
    \ Measurement Unit\n180\nIoT - Internet of Things\nISM - Industrial, Scientific\
    \ and Medical\nK-NN - K-Nearest Neighbor\nLDA - Linear Discriminant Analysis\n\
    Li-Fi - Light Fidelity\nLoRaWAN - Long Range Wide Area Network\nLPWAN - Low Power\
    \ Wide Area Network\nLR - Logistic Regression\nLSDVRP - Large-scale Dynamic Vehicle\
    \ Routing Problem\nLSTM - Long Short-Term Machine\nLTE - Long-Term Evolution\n\
    MITM - Man in the Middle\nML - Machine Learning\nMVRP - Multidepot Vehicle Routing\
    \ Problem\nNANs - Neighborhood Area Networks\nNB - Naive Bayes\nNB-IoT - Narrow\
    \ Band IoT\nNFC - Near Field Communication\nOSP - Optimal Sensor Placement\nPCA\
    \ - Principal Component Analysis\nPIR - Passive InfraRed\nPMU - Phase Measurement\
    \ Units\nPSD - Power Spectral Density\nPSE - Power Spectral Entropy\nPSO - Particle\
    \ Swarm Optimization\nPPCA - Probabilistic Principal Component Analysis\nPV -\
    \ photo voltaic\nP2I - Pedestrian to Infrastructure\nQSVM - Quadratic Support\
    \ Vector Machine\nRBF - Radial Basis Function\nRF – Radio Frequency\nRFC - Random\
    \ Forest Classifier\nRFID - Radio Frequency Identification\nRF-RFE - Random Forest\
    \ Recursive Feature Elimination\nRMS - Root Mean Squared\nRNN - Recurrent Neural\
    \ Networks\nSAE - Stacked Autoencoder Networks\nSAX - Symbolic Aggregate Approximation\n\
    SHM - Structural Health Monitoring\nSMV - Signal Magnitude Vector\nSWOT - Strength\
    \ Weaknesses Opportunities Threat\nSVM - Support Vector Machine\nTLS - Transport\
    \ Layer Security\nTP - True Positive\nVANET - Vehicular Adhoc NETworks\n181\n\
    VM - Voting machine\nVRP - Vehicle Routing Problem\nVRPPDTW - Vehicle Routing\
    \ Problem Pick-up and Delivery with Time Win-\ndows\nV2V - Vehicle to Vehicle\n\
    V2I - Vehicle to Infrastructure\nV2P - Vehicle to Pedestrian\nWANs - Wide Area\
    \ Networks\nWi-Fi - Wireless Fidelity\nWi-SUN - Wireless Smart Utility Network\n\
    WPA2 - Wi-Fi Protected Access 2\nWSNs - wireless sensor networks\nXGBoost - Extreme\
    \ Gradient Boost\nZ-Wave - Zensys Wave\n182\nCURRICULUM VITA\nNAME:\nMuhammmad\
    \ Zaigham Abbas Shah Syed\nADDRESS:\nComputer Science and Engineering Department\n\
    J.B Speed School of Engineering\nUniversity of Louisville\nLouisville, KY 40292\n\
    United States of America.\n2022\nUniversity of Louisville, Louisville, KY, USA.\n\
    M.Sc. in Electronic and Electrical Engineering, Novem-\nber 2013\nUniversity of\
    \ Strathclyde, Glasgow, United King-\ndom\nB.Eng in Electronics Engineering, March\
    \ 2010\nMehran University of Engineering and Technol-\nogy, Jamshoro, Pakistan\n\
    WORK\nEX-\nPERIENCE:\nGraduate Assistant, Innovative Technologies Lab,\nUniversity\
    \ of Louisville, KY, USA, 2022\n183\nPh.D., Computer Science & Engineering, December\n\
    EDUCATION:\nPUBLICATIONS:\nJOURNAL\n1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup\
    \ Kumar, and Adel Elmaghraby.\nIoT in smart cities: a survey of technologies,\
    \ practices and challenges. Smart Cities,\nvol. 4, no. 2, pp. 429–475, 2021\n\
    2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nMaking\
    \ Cities Smarter—Optimization Problems for the IoT Enabled Smart City\nDevelopment:\
    \ A Mapping of Applications, Objectives, Constraints.Sensors, vol. 22,\nno. 12,\
    \ p. 4380, 2022\n3. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel\
    \ Elmaghraby. A\nhierarchical approach to activity recognition and fall detection\
    \ using wavelets and\nadaptive pooling.Sensors, vol. 21, no. 19, p. 6653, 2021\n\
    4. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby. A\ndeep\
    \ convolutional neural network-XGB for direction and severity aware fall detec-\n\
    tion and activity recognition.Sensors, vol. 22, no. 7, p. 2547, 2022\nCONFERENCE\n\
    1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nCross\
    \ dataset non-binary fall detection using a ConvLSTM-attention network. (ac-\n\
    cepted at IEEE GlobeCOM 2022).\n2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar,\
    \ and Adel Elmaghraby.\nDetermining Fall direction and severity using SVMs.2020\
    \ IEEE International Sym-\nposium on Signal Processing and Information Technology\
    \ (ISSPIT),2020, pp. 1–7.\n184\n"
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://ir.library.louisville.edu/cgi/viewcontent.cgi?article=5278&context=etd
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: IoT in smart communities, technologies and applications.
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.20868/upm.thesis.64746
  analysis: '>'
  authors:
  - Zhaoyu Zhai
  citation_count: 0
  full_citation: '>'
  full_text: ">\ni \n \nUniversidad Politécnica de Madrid \nEscuela Técnica Superior\
    \ de Ingeniería y Sistemas de\n \nTelecomunicación \n \nContributions to Case-Based\
    \ Reasoning \nEnabled Decision Support System for \nSmart Agriculture \n \nDoctoral\
    \ Thesis \n \nZhaoyu Zhai \nDoctorate in Systems and Services Engineering  \n\
    for the Information Society \n \nSupervisor: \nProf. Ph.D. José-Fernán Martínez\
    \ Ortega \n \n \n \n2020 \n \nii \n \n                                       \
    \       \n              \nDoctorado en Ingeniería de Sistemas y Servicios \npara\
    \ la Sociedad de la Información \nTesis Doctoral \nTítulo \nContributions to Case-Based\
    \ Reasoning Enabled \nDecision Support System for Smart Agriculture \nAutor \n\
    Zhaoyu Zhai \nTutor \nProf. José-Fernán Martínez Ortega \nVºBº \nPonente \n \n\
    Tribunal \nPresidente \nTomás Robles Valladares \nSecretario \nLourdes López Santidrian\
    \ \nVocal \nJuan Ramón Velasco Pérez \nVocal \nBaran Cürüklü \nVocal \nCarlos\
    \ García Rubio \nSuplente \nLuigi Glielmo \nSuplente \nMaría Victoria Beltrán\
    \ Martínez \n \nFecha de lectura \nE.T.S.I. y Sistemas de Telecomunicación (U.P.M.)\
    \ \nCalificación \n \n     El Presidente              El secretario          \
    \    Los vocales                      \n \nTesis Doctoral para obtención del título\
    \ de Doctor  \npor la Universidad Politécnica de Madrid \n2020 \niii \n \nTo my\
    \ beloved family. \n \n \n \n \n \n \n \ni \n \nAcknowledgements \n \n \n \nAt\
    \ this moment, I would like to express my gratitude to many people. Without the\
    \ help, care, \nand support from them, this thesis would not been accomplished.\
    \ The four-year Ph.D. study is \none of the best journeys in my life. It is a\
    \ great honor for me to work with the lovely people in the \n‘Next Generation\
    \ Networks and Services’ research group at Universidad Politécnica de Madrid.\
    \ \nFirst and foremost, I would like to sincerely thank Prof. José-Fernán Martínez\
    \ Ortega. As \nmy Ph.D. supervisor, Prof. José-Fernán not only provided me with\
    \ useful suggestions on the \nresearch, but also offered me the chance of participating\
    \ in international research projects. Under \nhis support, I was able to complete\
    \ several scientific papers. His professional knowledge, wisdom, \nrigor, and\
    \ extraordinary supervision inspired me a lot during my Ph.D. period. Prof. José-Fernán\
    \ \nis more than a professor and tutor, but a good friend as well. Overall, He\
    \ turned me from a fresh \ngraduate student to a good researcher. \nSecondly,\
    \ I would also like to thank all the professors and colleagues in the research\
    \ group. \nI will remember all the enjoyable moments and discussions with you.\
    \ \nLast but not the least, I would like to thank my family for their selfless\
    \ love and support to \nme, both financially and emotionally. Although we are\
    \ in different countries and have a six-hour \ntime difference, my family always\
    \ comforted me whenever I felt desperate. Without my family, \nI will be unable\
    \ to finish my Ph.D. study in Spain and I will not become who I am today! \n \n\
    \ \n \n \nii \n \nAbstract \n \n    Nowadays, high demands for food from the world-wide\
    \ growing population are impacting \nthe environment and putting many pressures\
    \ on agricultural productivity. As a farming \nmanagement concept, smart agriculture\
    \ tries to integrate advanced technologies like Internet of \nThings, Artificial\
    \ Intelligence, and Remote Sensing into current farming practices for the purpose\
    \ \nof boosting productivity and improving the quality of agricultural products.\
    \ The core of smart \nagriculture emphasizes on the use of information systems\
    \ and communication technologies in the \ncyber-physical farm management cycle.\
    \ However, farmers can hardly take advantage of collected \ninformation to make\
    \ proper decisions because it is difficult to transfer the explosive amount of\
    \ \nraw data from sensors, actuators, and networks into practical knowledge for\
    \ managing farming \noperations. Therefore, delivering an agricultural decision\
    \ support system to farmers to assist them \nin making evidence-based decisions\
    \ is needed. \nThe ultimate objective of this thesis is to design and implement\
    \ a decision support system \nwithin the Aggregate Farming in the Cloud (AFarCloud)\
    \ platform. Meanwhile, the proposed \ndecision support system tries to overcome\
    \ the current challenging problems in this topic. To \nachieve this objective,\
    \ this thesis follows the below three research areas. \nThe first area aims at\
    \ providing a general solution for delivering an agricultural decision \nsupport\
    \ system for the AFarCloud platform. An architectural proposal of the decision\
    \ support \nsystem framework for managing farming operations is presented in this\
    \ thesis. The proposed \nframework defines an algorithm manager and an algorithm\
    \ toolbox. The former component is \nresponsible to configure registered decision\
    \ support algorithms, while the latter component is \ncapable of selecting a certain\
    \ algorithm to generate decision supports. The proposed framework \ndemonstrates\
    \ how smart agriculture can benefit from the support of a decision support system,\
    \ \nand therefore assist farmers in making evidence-based decisions. \nThe second\
    \ area focuses on designing a case-based reasoning (CBR) algorithm to generate\
    \ \ndecision supports for farmers. This CBR algorithm is implemented within the\
    \ framework \nproposed in the first research area, in particular, within the algorithm\
    \ toolbox component. \nAccording to the nature of the CBR algorithm, it can be\
    \ divided into five steps, including \nrepresentation, retrieval, reuse, revision,\
    \ and retention. In this thesis, an improved CBR algorithm \nis proposed to overcome\
    \ the detected shortcomings of the current research work. Firstly, an \nassociated\
    \ case representation formalism is presented for enhancing the typical feature\
    \ vector \nrepresentation. The proposed representation formalism contains the\
    \ similar and dissimilar \niii \n \nassociations between past cases, enabling\
    \ to compare potential similar cases preferentially. \nSecondly, a triangular\
    \ similarity measure is designed by taking advantage of cosine and Euclidean \n\
    distance measures. For providing a precise measurement, the magnitude differences\
    \ between two \ncompared N-dimensional vectors are taken into consideration. Thirdly,\
    \ a fast case retrieval \nalgorithm is developed, enabling to determine a list\
    \ of similar past cases by comparing a fewer \nnumber of cases. As a consequence,\
    \ the retrieval efficiency is improved while the retrieval \naccuracy can be guaranteed\
    \ as well. Fourthly, a learning-based approach for solution reuse and \nrevision\
    \ is studied. This reuse and revision approach tries to identify the difference\
    \ between the \nproblem part of compared cases, and then update the retrieved\
    \ solution based on previous \nexperiences. Lastly, an associated case retention\
    \ approach is put forward. Apart from the typical \naddition and deletion strategies,\
    \ the proposed retention approach also concerns to update the \nexisted associations\
    \ and generate new associations for the learned cases. By enhancing each step\
    \ \nof the CBR loop, the proposed CBR algorithm is able to generate promising\
    \ decision supports \nwith great efficiency and accuracy. \nThe third area considers\
    \ a hybrid decision support mechanism for the AFarCloud platform. \nIt is noted\
    \ that though the improved CBR algorithm can generate a satisfied result for the\
    \ most \nqueries, it may be unable to generate the decision supports when the\
    \ CBR algorithm fails to \nretrieve a list of similar past cases. Under this circumstance,\
    \ the decision support system should \nstart other registered algorithms to carry\
    \ on the task. Therefore, for coordinating the interaction \nbetween various decision\
    \ support algorithms, a mediator design pattern is adopted in this hybrid \ndecision\
    \ support mechanism. Owing to the design of the mediator component, different\
    \ decision \nsupport algorithms do no need to interact with each other directly.\
    \ Instead, the communication \nwork between the algorithm manager and decision\
    \ support algorithms is handled by this mediator \ncomponent. This hybrid decision\
    \ support mechanism is verified through a preliminary proof, \nconsidering the\
    \ CBR algorithm and an artificial neural network algorithm. The result suggests\
    \ \nthat the hybrid decision support mechanism can enhance the robustness of the\
    \ overall decision \nsupport system. \nLastly, the proposed decision support system,\
    \ along with the improved CBR algorithm, are \nall verified by simulation. The\
    \ simulation results demonstrate that the proposal in this thesis is \neffective\
    \ and achieves better performance than previous works. \n \nKeywords: Smart agriculture,\
    \ decision support system, decision-making, artificial \nintelligence, case-based\
    \ reasoning. \niv \n \nResumen \n \n \n    Hoy en día, la alta demanda de alimentos\
    \ a consecuencia del crecimiento de la población \nmundial está afectando al medio\
    \ ambiente y ejerciendo muchas presiones sobre la producción \nagrícola. La agricultura\
    \ inteligente, entendida como un concepto de la gestión agrícola, intenta la \n\
    integración de tecnologías avanzadas, tales como Internet de las cosas, la inteligencia\
    \ artificial y \nla teledetección, en las prácticas agrícolas actuales, con el\
    \ fin de aumentar la productividad y \nmejorar la calidad de los productos agrícolas.\
    \ El núcleo de la agricultura inteligente hace hincapié \nen el uso de los sistemas\
    \ de información y las tecnologías de comunicaciones en el ciclo de gestión \n\
    de la granja ciberfísica. Sin embargo es difícil que los granjeros puedan aprovechar\
    \ la información \nrecopilada para tomar las decisiones adecuadas. La explosiva\
    \ cantidad de datos procedentes de \nlos sensores, actuadores y redes cuesta transformarla\
    \ en un conocimiento práctico que resulte útil \npara la administración de las\
    \ operaciones agrícolas. Por lo tanto, es necesario proporcionar a los \nagricultores\
    \ un sistema de apoyo a las decisiones agrícolas que les ayude a tomar decisiones\
    \ \nbasadas en la evidencia. \n \nEl objetivo final de esta tesis es diseñar e\
    \ implementar un sistema de soporte a decisiones \ndentro de la plataforma Aggregate\
    \ Farming in the Cloud (AFarCloud). En particular, el sistema \nde apoyo a decisiones\
    \ propuesto trata de superar los desafíos actuales en este tema. Para lograr \n\
    este objetivo, esta tesis sigue las siguientes tres áreas de investigación. \n\
    \ \nLa primera área tiene como objetivo proporcionar una solución general para\
    \ entregar un \nsistema de soporte a decisiones agrícolas para la plataforma AFarCloud.\
    \ En esta tesis se presenta \nla propuesta de un marco de referencia para la arquitectura\
    \ de un sistema de soporte a decisiones \npara la administración de las operaciones\
    \ agrícolas. Este marco define dos componentes: un \nadministrador de algoritmos,\
    \ y un grupo de herramientas de algoritmos. El primero es responsable \nde configurar\
    \ los algoritmos de soporte a decisiones que estén registrados, mientras que el\
    \ \nsegundo es capaz de seleccionar un cierto algoritmo de entre los registrados\
    \ para generar soportes \na decisiones. El marco propuesto demuestra cómo la agricultura\
    \ inteligente puede beneficiarse \ndel apoyo de un sistema de soporte a decisiones,\
    \ y por lo tanto, cómo ayuda a los agricultores a \ntomar decisiones basadas en\
    \ la evidencia. \n \nLa segunda área se centra en el diseño de un algoritmo de\
    \ razonamiento basado en casos \n(CBR) para generar soporte a decisiones para\
    \ los agricultores. Este algoritmo CBR se implementa \ndentro del marco propuesto\
    \ en la primera área de investigación, en particular, en el grupo de \nherramientas\
    \ de algoritmos. De acuerdo a su naturaleza el algoritmo CBR se puede dividir\
    \ en \nv \n \ncinco pasos, que incluyen: representación, recuperación, reutilización,\
    \ revisión y retención. En \nesta tesis, se propone un algoritmo CBR mejorado\
    \ para superar las deficiencias detectadas en el \ntrabajo de investigación. En\
    \ primer lugar, se presenta la representación formal de los casos \nasociados\
    \ para mejorar la representación típica del vector de características. La representación\
    \ \nformal propuesta contiene las asociaciones de similitud y diferencias entre\
    \ casos pasados, \npermitiendo comparar preferentemente los casos similares posibles.\
    \ En segundo lugar, se diseña \nuna medida de similitud triangular aprovechando\
    \ las medidas de distancia del coseno y euclidiana. \nPara proporcionar una medición\
    \ precisa se tienen en cuenta las diferencias al comparar la \nmagnitud entre\
    \ dos vectores N-dimensionales. En tercer lugar, se desarrolla un algoritmo de\
    \ \nrecuperación rápida de casos, que permite obtener una lista de casos pasados\
    \ similares \ncomparando un número menor de casos. En consecuencia, la eficiencia\
    \ de la recuperación mejora \na la vez que se garantiza su precisión. En cuarto\
    \ lugar se estudia un enfoque basado en el \naprendizaje para la reutilización\
    \ y revisión de soluciones. Este enfoque de reutilización y revisión \nintenta\
    \ identificar la diferencia entre la parte del problema de los casos comparados,\
    \ para \nposteriormente actualizar la solución recuperada en base a las experiencias\
    \ previas. Por último, \nse presenta un enfoque de retención del caso asociado.\
    \ Además de las estrategias típicas de \nadición y eliminación, el enfoque de\
    \ retención propuesto se refiere también a la actualización de \nlas asociaciones\
    \ existentes y a la generación nuevas asociaciones para los casos aprendidos.\
    \ Al \nmejorar cada uno de los pasos del ciclo CBR, el algoritmo CBR propuesto\
    \ puede generar soportes \nprometedores para la toma de decisiones, y además hacerlo\
    \ con gran eficiencia y precisión. \n \nLa tercera área considera un mecanismo\
    \ híbrido de soporte a decisiones para la \nplataforma AFarCloud. Se observa que,\
    \ aunque el algoritmo CBR mejorado puede \ngenerar resultados satisfactorios durante\
    \ la mayor parte del tiempo, es posible que no \npueda generar soportes a decisión\
    \ cuando el algoritmo CBR no pueda recuperar una lista \nde casos pasados similares.\
    \ Bajo esta circunstancia, el sistema de soporte a decisiones \ndebe iniciar otros\
    \ algoritmos registrados para llevar a cabo la tarea. Por lo tanto, para \ncoordinar\
    \ la interacción entre varios algoritmos de soporte a decisiones, se adopta un\
    \ \npatrón de diseño tipo mediador en este mecanismo híbrido de soporte a decisiones.\
    \ \nGracias al diseño del componente mediador, los diferentes algoritmos de soporte\
    \ a \ndecisiones no necesitan interactuar entre sí directamente. En cambio, este\
    \ componente \nmediador maneja el trabajo de comunicación entre el administrador\
    \ de algoritmos y los \nalgoritmos de soporte a decisiones. Este mecanismo híbrido\
    \ de soporte a decisión se \nverifica a través de una prueba preliminar que utiliza\
    \ el algoritmo CBR y una red neuronal \nvi \n \nartificial. El resultado sugiere\
    \ que el mecanismo híbrido de soporte a decisiones puede \nmejorar la solidez\
    \ del sistema general. \n \nPor último, el sistema de soporte a decisiones propuesto,\
    \ junto con el algoritmo CBR \nmejorado, se verifican por simulación. Los resultados\
    \ de la simulación demuestran que la \npropuesta en esta tesis es efectiva y logra\
    \ un mejor rendimiento que los trabajos \nanteriores. \n \nPalabras clave: Agricultura\
    \ inteligente, sistema de soporte a la toma de decisiones, toma de \ndecisiones,\
    \ inteligencia artificial, razonamiento basado en casos.\nvii \n \nTable of contents\
    \ \nAcknowledgements .......................................................................................\
    \ i \nAbstract ........................................................................................................\
    \ ii \nResumen ......................................................................................................\
    \ iv \nList of Figures ..............................................................................................\
    \ x \nList of Tables .............................................................................................\
    \ xiv \n1 \nIntroduction .............................................................................................\
    \ 1 \n1.1. Decision support and its importance in smart agriculture .................................................................\
    \ 2 \n1.2. Research framework ..........................................................................................................................\
    \ 4 \n1.3. Problem statements and thesis objectives ..........................................................................................\
    \ 6 \n1.4. Research contributions and thesis structure .......................................................................................\
    \ 9 \n2 \nBackground and related work ...............................................................\
    \ 12 \n2.1. Evolution history of agriculture .......................................................................................................\
    \ 13 \n2.1.1. Agriculture 1.0 to 3.0 ................................................................................................\
    \ 13 \n2.1.2. Agriculture 4.0 ..........................................................................................................\
    \ 14 \n2.1.3. Summary of agricultural evolution............................................................................\
    \ 15 \n2.2. Review of existing decision support systems ..................................................................................\
    \ 16 \n2.2.1. Optimization-based DSSs .........................................................................................\
    \ 17 \n2.2.2. Reasoning-based DSSs ..............................................................................................\
    \ 20 \n2.2.3. Distinctions with expert systems ...............................................................................\
    \ 22 \n2.2.4. Summary of DSSs .....................................................................................................\
    \ 23 \n2.3. Review of the case-based reasoning approach ................................................................................\
    \ 25 \n2.3.1. Review of case representation ...................................................................................\
    \ 26 \n2.3.2. Review of case retrieval ............................................................................................\
    \ 34 \n2.3.3. Review of solution reuse and revision ......................................................................\
    \ 41 \n2.3.4. Review of case retention ...........................................................................................\
    \ 43 \n2.3.5. Summary of the case-based reasoning approach .......................................................\
    \ 44 \n3 \nThe framework of decision support systems for smart agriculture ......\
    \ 45 \n3.1. General architecture of the AFarCloud platform .............................................................................\
    \ 46 \n3.1.1. The semantic middleware in the AFarCloud platform ..............................................\
    \ 47 \n3.1.2. The hardware layer in the AFarCloud platform ........................................................\
    \ 48 \n3.1.3. The farm management system in the AFarCloud platform .......................................\
    \ 49 \nviii \n \n3.2. Specific domain DSS in the AFarCloud platform ...........................................................................\
    \ 51 \n3.3. Framework of the AFarCloud DSS .................................................................................................\
    \ 53 \n4 \nAn improved case-based reasoning approach for the decision support\
    \ \nsystem ..........................................................................................................\
    \ 55 \n4.1. An associated case representation method ......................................................................................\
    \ 56 \n4.1.1. Generation of the association table ...........................................................................\
    \ 56 \n4.1.2. Distinction between the association table and other techniques................................\
    \ 59 \n4.1.3. Content of agricultural cases .....................................................................................\
    \ 62 \n4.1.4. Structure of the proposed case representation method ..............................................\
    \ 68 \n4.2. A triangular similarity measure .......................................................................................................\
    \ 69 \n4.2.1. Formula of the triangular similarity measure ............................................................\
    \ 69 \n4.2.2. Coefficient design in the triangular similarity measure ............................................\
    \ 71 \n4.2.3. The triangular similarity measure in N-dimensional space .......................................\
    \ 73 \n4.2.4. Feature weighting in the triangular similarity measure .............................................\
    \ 74 \n4.3. A fast case retrieval algorithm .........................................................................................................\
    \ 77 \n4.3.1. A set of policies for the retrieval algorithm ..............................................................\
    \ 77 \n4.3.2. Design of the case retrieval algorithm .......................................................................\
    \ 79 \n4.4. A learning-based approach for solution reuse and revision .............................................................\
    \ 82 \n4.4.1. Overview of the revision strategy .............................................................................\
    \ 83 \n4.4.2. Design of the learning component.............................................................................\
    \ 84 \n4.4.3. Adaptation actions: A case study ..............................................................................\
    \ 87 \n4.5. An associated case retention approach ............................................................................................\
    \ 93 \n4.5.1. Storing the learned case .............................................................................................\
    \ 93 \n4.5.2. Updating the existing association ..............................................................................\
    \ 95 \n5 \nA hybrid decision support mechanism..................................................\
    \ 97 \n5.1. A mediator approach for the hybrid decision support system .........................................................\
    \ 98 \n5.1.1. Problem statement in the mediator design pattern ....................................................\
    \ 98 \n5.1.2. Solution of the mediator approach ..........................................................................\
    \ 100 \n5.1.3. Design of the hybrid decision support system with the mediator\
    \ approach ............ 105 \n5.2. A preliminary proof of the hybrid concept ....................................................................................\
    \ 111 \n5.2.1. Result of the CBR algorithm ...................................................................................\
    \ 112 \n5.2.2. Result of the ANN algorithm ..................................................................................\
    \ 115 \n5.2.3. Result of the hybrid concept ....................................................................................\
    \ 115 \n6 \nImplementation and validation ...........................................................\
    \ 120 \nix \n \n6.1. Implementation scope and purpose ...............................................................................................\
    \ 121 \n6.2. The implementation details ...........................................................................................................\
    \ 121 \n6.2.1. Implementation of the associated representation formalism ...................................\
    \ 122 \n6.2.2. Implementation of the triangular similarity measure ..............................................\
    \ 126 \n6.2.3. Implementation of the fast case retrieval algorithm ................................................\
    \ 127 \n6.2.4. Implementation of the learning-based reuse and revision .......................................\
    \ 130 \n6.2.5. Implementation of the associated case retention approach .....................................\
    \ 131 \n6.3. The validation results ....................................................................................................................\
    \ 133 \n6.3.1. Result of the associated case representation ............................................................\
    \ 134 \n6.3.2. Result of the triangular similarity measure .............................................................\
    \ 139 \n6.3.3. Result of the fast case retrieval algorithm ...............................................................\
    \ 144 \n6.3.4. Result of the learning-based solution reuse and revision ........................................\
    \ 148 \n6.3.5. Result of the associated case retention ....................................................................\
    \ 155 \n7 \nConclusion and future work ................................................................\
    \ 160 \n7.1. Conclusion .....................................................................................................................................\
    \ 161 \n7.2. Future work ...................................................................................................................................\
    \ 163 \n7.3. Publications and projects ...............................................................................................................\
    \ 165 \n7.3.1. List of publications ..................................................................................................\
    \ 165 \n7.3.2. Research projects .....................................................................................................\
    \ 167 \nAppendix A ..........................................................................................................................................\
    \ 167 \nAppendix B ..........................................................................................................................................\
    \ 170 \nAppendix C ..........................................................................................................................................\
    \ 173 \nAppendix D ..........................................................................................................................................\
    \ 177 \nReferences ............................................................................................................................................\
    \ 179 \n \n \n \n \n \n \nx \n \nList of Figures \nFigure 1. Critical issues for\
    \ employing DSSs in smart agriculture ...............................................\
    \ 4 \nFigure 2. Overall view of the AFarCloud platform .......................................................................\
    \ 6 \nFigure 3. The evolution history of agriculture ............................................................................\
    \ 14 \nFigure 4. A general framework of decision support systems ......................................................\
    \ 16 \nFigure 5. A general framework of expert systems ......................................................................\
    \ 21 \nFigure 6. A generic workflow of case-based reasoning ..............................................................\
    \ 25 \nFigure 7. An example of the feature vector representation .........................................................\
    \ 26 \nFigure 8. An example of the textual representation ....................................................................\
    \ 27 \nFigure 9. An example of the frame-based representation ...........................................................\
    \ 29 \nFigure 10. An example of the object-oriented representation .....................................................\
    \ 30 \nFigure 11. An example of the ontology representation ...............................................................\
    \ 32 \nFigure 12. An extreme circumstance when measuring with the cosine similarity\
    \ ...................... 37 \nFigure 13. An extreme circumstance when measuring\
    \ with the distance-based similarity ......... 38 \nFigure 14. The architecture\
    \ of the AFarCloud platform .............................................................\
    \ 45 \nFigure 15. The internal connection within the farm management system ..................................\
    \ 49 \nFigure 16. The framework of the decision support system .........................................................\
    \ 52 \nFigure 17. The visualization of six cases in the case base ..........................................................\
    \ 56 \nFigure 18. The association connection between past cases .........................................................\
    \ 57 \nFigure 19. Principles of general hashing and locality sensitive hashing\
    \ approaches .................. 59 \nFigure 20. Principles of the rough set theory\
    \ ..............................................................................\
    \ 59 \nFigure 21. Principles of the filtering technique ...........................................................................\
    \ 60 \nFigure 22. An example of querying the disease type by using dissimilar\
    \ associations ............... 61 \nFigure 23. Some latest sensor equipment ....................................................................................\
    \ 63 \nFigure 24. Examples of multispectral equipment ........................................................................\
    \ 65 \nFigure 25. Examples of wearable technology .............................................................................\
    \ 67 \nFigure 26. Structure of the associated case representation method .............................................\
    \ 68 \nFigure 27. Two vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\
    \n⃗⃗⃗⃗⃗  in three-dimensional space ............................................\
    \ 69 \nFigure 28. Two triangles formed by three vectors \U0001D442\U0001D434\n\
    ⃗⃗⃗⃗⃗ ,  \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ , and \U0001D442\U0001D436\n⃗⃗⃗⃗⃗  .......................................\
    \ 70 \nFigure 29. The coefficient triangle for vectors \U0001D442\U0001D434\n\
    ⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  .....................................................\
    \ 70 \nFigure 30. An example for demonstrating the use of coefficient in TSM ...................................\
    \ 72 \nFigure 31. The mathematical prove of the TSM formula ............................................................\
    \ 73 \nFigure 32. The workflow of adjusting the weights for the Iris plant dataset\
    \ ............................... 75 \nFigure 33. The result of adjusted weights\
    \ for the four features................................................... 76\
    \ \nxi \n \nFigure 34. The workflow of the proposed case retrieval algorithm ............................................\
    \ 79 \nFigure 35. The pseudo code of the proposed case retrieval algorithm ........................................\
    \ 79 \nFigure 36. An example of the proposed case retrieval algorithm................................................\
    \ 80 \nFigure 37. The travelling trajectory of the proposed retrieval algorithm\
    \ in the example ............ 81 \nFigure 38. The overview of the proposed revision\
    \ process in CBR ............................................ 82 \nFigure 39.\
    \ Identifying the difference between the new case \U0001D4411 and retrieved past\
    \ case \U0001D434\U0001D4371 .. 83 \nFigure 40. The workflow of the learning component\
    \ .................................................................. 85 \nFigure\
    \ 41. An example of a normal pest management case ........................................................\
    \ 87 \nFigure 42. An example of adaptation case ..................................................................................\
    \ 88 \nFigure 43. Feature weights for pest management cases ..............................................................\
    \ 89 \nFigure 44. Data visualization of features of the new case and adaptation\
    \ case ........................... 89 \nFigure 45. Data visualization of features\
    \ of the adaptation case and retrieved past cases .......... 90 \nFigure 46. An\
    \ example of the case base for demonstrating coverage and reachability ..............\
    \ 93 \nFigure 47. An example of updating the existing association ......................................................\
    \ 95 \nFigure 48. An example of tightly coupled objects ......................................................................\
    \ 98 \nFigure 49. Tightly coupled decision support algorithms .............................................................\
    \ 99 \nFigure 50. The solution of the mediator approach ....................................................................\
    \ 100 \nFigure 51. The Python code of implementing the abstract Mediator interface\
    \ ......................... 101 \nFigure 52. The Python code of implementing the\
    \ concrete Mediator interface ........................ 101 \nFigure 53. The Python\
    \ code of implementing the base component ..........................................\
    \ 102 \nFigure 54. The Python code of implementing the ordinary components ..................................\
    \ 102 \nFigure 55. The Python code of implementing the main function ..............................................\
    \ 103 \nFigure 56. The test result of the mediator implementation .......................................................\
    \ 103 \nFigure 57. The framework of a general hybrid decision support system ..................................\
    \ 104 \nFigure 58. The workflow of the hybrid decision support system for situation\
    \ (i) ..................... 105 \nFigure 59. The workflow of the hybrid decision\
    \ support system for situation (ii).................... 106 \nFigure 60. The workflow\
    \ of the hybrid decision support system for situation (iii) ..................\
    \ 107 \nFigure 61. The structure of the “Request-Response-Fault” message ........................................\
    \ 109 \nFigure 62. The framework of the hybrid decision support system combining\
    \ CBR and ANN 110 \nFigure 63. The new project in the myCBR workbench .............................................................\
    \ 112 \nFigure 64. The attribute defined in the myCBR workbench .....................................................\
    \ 112 \nFigure 65. The case base in the myCBR workbench ................................................................\
    \ 112 \nFigure 66. The configuration of the similarity measure in the myCBR workbench\
    \ ................. 113 \nFigure 67. The retrieval process in the myCBR workbench\
    \ ..................................................... 113 \nFigure 68. The software\
    \ interface of the ANN algorithm .........................................................\
    \ 114 \nFigure 69. The structure of the message implemented by Python ............................................\
    \ 115 \nxii \n \nFigure 70. The structure of the request, response, and fault\
    \ parts implemented by Python ...... 115 \nFigure 71. An example of sending the\
    \ message to the CBR algorithm .................................... 115 \nFigure\
    \ 72. An example of returning the failure message from the CBR algorithm ..................\
    \ 116 \nFigure 73. An example of sending the message to the ANN algorithm ....................................\
    \ 117 \nFigure 74. An example of returning the response from the ANN algorithm\
    \ ............................ 117 \nFigure 75. Implementation scope within the\
    \ decision support system ...................................... 120 \nFigure\
    \ 76. The Spyder development environment ....................................................................\
    \ 121 \nFigure 77. The associated case representation formalism implemented in\
    \ XML ..................... 122 \nFigure 78. The associated case representation\
    \ formalism implemented in CSV ...................... 122 \nFigure 79. The parse\
    \ function in the DOM interface ................................................................\
    \ 123 \nFigure 80. The function of writing XML elements in Python ...................................................\
    \ 123 \nFigure 81. The function of reading and wiring XML-based cases in Python\
    \ ........................... 123 \nFigure 82. The function of reading and writing\
    \ CSV-based cases in Python ........................... 124 \nFigure 83. The code\
    \ of constructing the association implemented in Python ...........................\
    \ 125 \nFigure 84. The code of calculating the Euclidean distance, the cosine\
    \ similarity, and the magnitude \nimplemented in Python .............................................................................................................\
    \ 126 \nFigure 85. The code of constructing the association implemented in Python\
    \ ........................... 126 \nFigure 86. The code of comparing the new case\
    \ and entry-point case implemented in Python 127 \nFigure 87. The code of assigning\
    \ tokens implemented in Python ............................................. 127\
    \ \nFigure 88. The code of selecting the past case for the next iteration implemented\
    \ in Python .. 127 \nFigure 89. The code of retrieving unused past cases implemented\
    \ in Python .......................... 128 \nFigure 90. The code of calculating\
    \ the difference between cases implemented in Python ....... 129 \nFigure 91.\
    \ The code of normalizing the dataset implemented in Python ..................................\
    \ 129 \nFigure 92. The code of revising the solution of the adaptation case implemented\
    \ in Python ... 130 \nFigure 93. The process of updating the existing associations\
    \ in CSV files .............................. 131 \nFigure 94. The code of generating\
    \ a data frame from a CSV file implemented in Python ....... 131 \nFigure 95.\
    \ The code of updating associations implemented in Python .....................................\
    \ 131 \nFigure 96. The code of returning the data frame to a new CSV file implemented\
    \ in Python ... 132 \nFigure 97. Data visualization of past cases 328, 2997, and\
    \ 2998 .............................................. 134 \nFigure 98. Data visualization\
    \ of past cases 19 and 1836 ...........................................................\
    \ 135 \nFigure 99. Data visualization of past cases 19 and 674 .............................................................\
    \ 135 \nFigure 100. Data visualization of past cases 1836 and 674 .......................................................\
    \ 136 \nFigure 101. Data visualization of past cases 984, 748, and 749 ................................................\
    \ 137 \nFigure 102. Data visualization the new case 57 and the past case 1165\
    \ ................................... 140 \nFigure 103. Data visualization of\
    \ past cases 57 and the past case 1239 ................................... 140\
    \ \nFigure 104. Data visualization of the new case 113 and the past case 221 ...............................\
    \ 141 \nxiii \n \nFigure 105. Data visualization of new case 113 and the past\
    \ case 2483 ................................... 141 \nFigure 106. The average\
    \ precision of retrieved top three similar and dissimilar past cases ..... 144\
    \ \nFigure 107. Data visualization of new case 7 and the past case 52 ...........................................\
    \ 145 \nFigure 108. Data visualization of new case 7 and the past case 267 .........................................\
    \ 145 \nFigure 109. Data visualization of new case 7 and the past case 646 .........................................\
    \ 146 \nFigure 110. The best and worst revision result of prescription values\
    \ ...................................... 150 \nFigure 111. The best and worst\
    \ revision result of dilution factors ............................................\
    \ 150 \nFigure 112. Data visualization of the new case 1 and the past case 148\
    \ ................................... 151 \nFigure 113. Data visualization of\
    \ past cases 148 and 115 .........................................................\
    \ 152 \nFigure 114. Data visualization of past cases 148 and 689 .........................................................\
    \ 152 \nFigure 115. Data visualization of past cases 148 and 1570 .......................................................\
    \ 153 \nFigure 116. Times of updates in the association of past cases ..................................................\
    \ 156 \nFigure 117. Data visualization of the new case 1 and the past case 158\
    \ ................................... 157 \nFigure 118. Data visualization of\
    \ the new case 4 and the past case 2210 ................................. 158\
    \ \nFigure 119. Data visualization of the Iris plant dataset .............................................................\
    \ 168 \nFigure 120. An example of accessing the Iris plant dataset ......................................................\
    \ 168 \nFigure 121. The one-way message exchange pattern ................................................................\
    \ 172 \nFigure 122. The topological structure of a BP neural network .................................................\
    \ 173 \nFigure 123. The flow chart of the variable spray system ..........................................................\
    \ 175 \n \n \n \n \nxiv \n \nList of Tables \nTable 1. Comparison for distinguishing\
    \ DSSs with ESs .............................................................\
    \ 22 \nTable 2. Characteristics of three revision methods .....................................................................\
    \ 41 \nTable 3. An example of a case base ............................................................................................\
    \ 55 \nTable 4. The association table for the case base ..........................................................................\
    \ 56 \nTable 5. Key features of environmental variables in agricultural cases\
    \ ...................................... 62 \nTable 6. Key features of crop/planting\
    \ variables in agricultural cases ........................................ 64\
    \ \nTable 7. Key features of livestock variables in agricultural cases ..............................................\
    \ 65 \nTable 8. Correspondences between the similarity level and measurements\
    \ ............................... 77 \nTable 9. An example of problem differences\
    \ between the new case and adaptation case \n(Scenario 1) .................................................................................................................................\
    \ 84 \nTable 10. An example of problem differences between past cases (Scenario\
    \ 1) ........................ 84 \nTable 11. An example of problem differences\
    \ between the new case and adaptation case \n(Scenario 2) .................................................................................................................................\
    \ 84 \nTable 12. An example of problem differences between past cases (Scenario\
    \ 2) ........................ 84 \nTable 13. Similarity measurements and difference\
    \ values of retrieved past cases ...................... 90 \nTable 14. Solutions\
    \ of the adaptation case and retrieved past cases ...........................................\
    \ 90 \nTable 15. Analysis of the pest quantity and spray volume ..........................................................\
    \ 91 \nTable 16. Comparison of the revised solution and original one ..................................................\
    \ 91 \nTable 17. The statistical properties of the sample data .............................................................\
    \ 111 \nTable 18. Part of the similar association ...................................................................................\
    \ 133 \nTable 19. Part of the dissimilar association ...............................................................................\
    \ 133 \nTable 20. Statistical analysis of past cases 19, 1836, and 674 ..................................................\
    \ 136 \nTable 21. Statistical analysis of past cases 984, 748, and 749 ..................................................\
    \ 129 \nTable 22. Different past cases retrieved by TSM and the ED ...................................................\
    \ 138 \nTable 23. Statistical analysis of past cases 1165 and 1239 .......................................................\
    \ 140 \nTable 24. Statistical analysis of past cases 221 and 2483 .........................................................\
    \ 142 \nTable 25. Statistical analysis of 56 tests ....................................................................................\
    \ 142 \nTable 26. The average precision of the TSM and the ED .........................................................\
    \ 143 \nTable 27. Statistical analysis of the new case 7 and retrieved top three\
    \ similar past cases ....... 146 \nTable 28. The number of compared cases for\
    \ 1.5 million tests ................................................. 147 \nTable\
    \ 29. Comparison of revised and original pesticide types ..................................................\
    \ 148 \nTable 30. Comparison of revised and original prescription values ...........................................\
    \ 148 \nTable 31. Comparison of revised and original dilution factors .................................................\
    \ 149 \nxv \n \nTable 32. Statistical analysis of the new case 1 and the past\
    \ case 148 ...................................... 151 \nTable 33. Statistical\
    \ analysis of the past cases 148, 115, 689, and 1570 ..................................\
    \ 152 \nTable 34. The result of captured difference in the problem part of compared\
    \ cases ................. 153 \nTable 35. The values of prescription and dilution\
    \ factor in past cases 148, 115, 689, and 1570\n ...................................................................................................................................................\
    \ 154 \nTable 36. The result of revising the solution for adapting to the new\
    \ case ............................... 154 \nTable 37. List of unretained cases\
    \ .............................................................................................\
    \ 155 \nTable 38. Part of the similar association of newly retained cases .............................................\
    \ 156 \nTable 39. Part of the dissimilar association of newly retained cases ........................................\
    \ 157 \nTable 40. Characteristics of the Iris plant dataset .....................................................................\
    \ 166 \nTable 41. User guide for the Iris plant dataset ..........................................................................\
    \ 166 \nTable 42. Responses when the Oracle Mediator adopts the one-way interaction\
    \ ..................... 171 \nTable 43. The pseudo code of the BP neural network\
    \ ............................................................... 174 \n1 \n \n\
    1 Introduction\n2 \n \n    At first, this chapter presents the importance of decision\
    \ support in the agriculture domain \nby referring to several successful examples\
    \ like the Watson Decision Platform for agriculture. \nThe research framework\
    \ is briefly introduced and the problems of applying decision support \nsystems\
    \ to smart agriculture are claimed. For overcoming the detected challenges, the\
    \ objective \nof this thesis is summarized. Lastly, the structure of this thesis\
    \ is listed. \n1.1. Decision support and its importance in smart agriculture \n\
    According to the latest statistics from the United Nations Population Division\
    \ [1], there are \nmore human lives on Earth right now than ever before, reaching\
    \ 7.7 billion, and the number is \nstill growing rapidly. Based on the prediction\
    \ in 2015, the population is expected to reach up to \n9.7 billion by 2050 [2].\
    \ A population of this magnitude puts forward a lot of challenges like how \n\
    to increase food productivity, to maintain food quality, to ensure food security,\
    \ to avoid food \nwaste, and so on. In spite of progress made over the last two\
    \ decades worldwide, there are still \nmore than 870 million people suffering\
    \ from chronic hunger, 171 million under 5 years old are \nchronically malnourished,\
    \ 104 million are underweight, and 55 million are acutely malnourished \n[3].\
    \ \nMeanwhile, natural resources available for agriculture has been incredibly\
    \ stressed nowadays. \nOn the one hand, unused farmlands for cultivation are rare\
    \ and 25% of farmlands are marked as \nhighly degraded due to deforestation, overcutting\
    \ vegetation, inadequate fallow periods, \novergrazing, improper crop rotation,\
    \ unbalanced fertilization, etc. At the same time, near 44% of \nfarmlands are\
    \ rated as slightly degraded. It is a common sense that fewer farmlands may lead\
    \ to \nlower agricultural productivity [4]. On the other hand, water resources\
    \ are overused in an \nunreasonable way [5]. Some approaches like precise dripping\
    \ and irrigation are not widely \nadopted. Frequent water transfers from rivers\
    \ and lakes have caused critical environmental issues \nlike cutting off the rivers\
    \ and drying up the lakes. \nBoosting the agricultural productivity and allocating\
    \ natural resources under a reasonable \nmanner is not an easy task, but engineers\
    \ and farmers are working together on creating a \ntechnological solution: smart\
    \ agriculture. \nAs a farming management concept, smart agriculture [6-8] integrates\
    \ advanced technologies \ninto existing farming practices for the purpose of improving\
    \ work efficiency and the quality of \nagricultural products. In particular, smart\
    \ agriculture emphasizes the use of information systems \nand communication technologies\
    \ in the cyber-physical farm management cycle. Smart agriculture \nis also beneficial\
    \ for farmers to get rid of heavy labor and resolving repeated tasks. In the 21st\
    \ \ncentury, owing to the deployment of sensors, actuators, and networks, farmers\
    \ have access to a \n3 \n \nvariety of source data, which can be mainly categorized\
    \ into three groups: environmental, crop-\nrelated, and economic data [9]. It\
    \ is worth noting that data from all aspects are collected and \ngathered. Under\
    \ this circumstance, stakeholders may encounter difficulties in transferring this\
    \ \nexplosive amount of data into practical knowledge for managing farming operations.\
    \ As a \nconsequence, platforms like decision support systems (DSSs) are needed\
    \ in order to assist \nstakeholders in making evidence-based and proper decisions.\
    \ \n \nSome successful examples have illustrated how smart agriculture can benefit\
    \ from DSSs and \nwhy decision supports are important for managing farming operations.\
    \ For instance, the Watson \nDecision Platform for Agriculture was released by\
    \ the IBM Watson and Weather Company [10]. \nThis decision platform integrated\
    \ IBM’s advanced capabilities in Artificial Intelligence, Internet \nof Things,\
    \ and Cloud Computing into agriculture. On the one hand, this platform provides\
    \ a suite \nof solutions that spans the farm-to-fork ecosystem and it is able\
    \ to analyze any factors which have \npotential effects on the crops. Farmers\
    \ can obtain crop pictures by deploying unmanned aerial \nvehicles. Then, these\
    \ pictures are uploaded to the IBM Cloud for further analyses based on \ncomputer\
    \ vision algorithms. The analytic results keep farmers updated with health conditions\
    \ of \ncrops. As a consequence, working efficiency and accuracy of detecting crop\
    \ diseases can be \ngreatly improved. On the other hand, owners of large-scale\
    \ farms can use this platform to estimate \nthe price trending in trading markets.\
    \ Under this circumstance, the time for irrigation, pollination, \nphenology,\
    \ fertilization, harvesting, and reselling can be precisely controlled in order\
    \ to obtain \nthe maximum profits. It is worth mentioning that the Watson Decision\
    \ Platform for Agriculture \nconcerns various input sources, such as meteorological\
    \ data (provided by the Weather Company), \nsoil data (moisture at multiple depths,\
    \ nutrient content, fertility, and soil type), equipment data \n(gathered from\
    \ sensors onboard), workflow data (planting and harvesting dates, fertilizer and\
    \ \npesticide application rates, and harvesting outputs), and high definition\
    \ visual images (collected \nby satellites, drones, and fixed-wing aircrafts).\
    \ IBM is not the only company who contributed to \nsmart agriculture, another\
    \ company named Prospera [11] took advantage of techniques like \nComputer Vision,\
    \ Artificial Intelligence, and Cloud Computing for developing a digital farming\
    \ \nsystem that can help farmers to analyze data collected from their fields.\
    \ This digital farming \nsystem is capable of suggesting the most suitable time\
    \ for irrigation, fertilization, pollination, and \nharvesting by monitoring the\
    \ growth rates of crops. Farmers can also be notified when crops are \ninfected\
    \ by any diseases. According to the statistics from Prospera, yield production\
    \ was \nestimated with 95% accuracy and agricultural productivity was increased\
    \ by at least 30%. Though \nthis system only concerned scenarios in the facility\
    \ environment and large-scale rows for now, it \nstill shows its potential in\
    \ smart agriculture and further functionalities of this system are expected \n\
    in the near future for providing farmers with adequate suites of solutions. Furthermore,\
    \ Bazzani \n[12] developed DSIRR, a decision support system for irrigation. DSIRR\
    \ was more than a \n4 \n \nnormative platform to generate the optimal irrigation\
    \ suggestions, but also a DSS for exploring \nthe trade-off among conflict objectives\
    \ and offering farmers compromising solutions. It \nconsidered four categories\
    \ of data sources, including economic (farm income, profit, and gross \ndomestic\
    \ product), social (public support subsidy and farm employment), water (seasonality,\
    \ \nconsumption, marginal value, and irrigation technology), and environmental\
    \ indicators (soil \ncover, nitrogen, pesticide, and energy). On the basis of\
    \ these indicators, a linear model is used to \nassess the trade-off among economic-social-water-environmental\
    \ objectives. With a user-friendly \ngraphical interface, farmers can directly\
    \ control and monitor irrigation processes. \n \nOverall, judging from the above\
    \ successful examples, it is concluded that the decision \nsupport system indeed\
    \ plays a significant role in smart agriculture and it accelerates the \ndevelopment\
    \ paces of smart agriculture from various perspectives. \n1.2. Research framework\
    \ \nIn current literatures, though plenty of attempts have been made for addressing\
    \ how decision \nsupport systems can be employed in smart agriculture, this research\
    \ topic is still pending further \nexploration and discussion. It is acknowledged\
    \ that DSSs are helpful for smart agriculture, but \nthe unwelcome fact is that\
    \ the use of DSSs has been limited due to some critical issues presented \nin\
    \ Figure 1 [13]. \n \nFigure 1. Critical issues of employing DSSs in smart agriculture.\
    \ \n \nIn Figure 1, following issues have been pointed out by the research community.\
    \ \n• \nFarmers seldom have experiences or knowledge of using DSSs. The typical\
    \ graphical \ninterface of DSSs is sometimes not user-friendly and it may be confusing\
    \ for farmers to \nperform desired operations. \n5 \n \n• \nDSS developers may\
    \ ignore the requirement analyses from the end users, leading to the fact \nthat\
    \ inputs and outputs of DSSs may not fit the farmers’ needs and decision-making\
    \ styles. \n• \nThe functionalities of current DSSs are limited and task-specific.\
    \ A DSS may only focus on \na single perspective. As a consequence, farmers have\
    \ to use several DSSs to manage all the \nagricultural activities. \n• \nWhen\
    \ generating the advice, current DSSs may miss some fundamental factors, such\
    \ as \nclimate change, soil spatial variability, crop disease, etc. The lack of\
    \ these considerations \nmay result in imprecise outputs from DSSs. \nUnder these\
    \ circumstances, a new European project, named Aggregate Farming in the Cloud\
    \ \n(AFarCloud) [14], was launched in 2018. This project aims at providing a distributed\
    \ solution for \nautonomous farming that allows the integration and cooperation\
    \ of agricultural cyber physical \nsystems (CPSs) in real-time for increasing\
    \ efficiency, productivity, animal health, food quality, \nand reducing farm labor\
    \ costs. This platform will be integrated with the farm management \nsoftware\
    \ and support monitoring and decision-making solutions based on big data and real-time\
    \ \ndata mining techniques. The overall view of the AFarCloud platform is presented\
    \ in Figure 2. \nThis platform is composed of the services and applications layer,\
    \ semantic middleware layer, \ncommunication layer, hardware layer, and information\
    \ models. In general, the semantic \nmiddleware is designed to abstract the heterogeneity\
    \ and complexity of the underlying hardware \nlayer for offering a collection\
    \ of homogeneous interfaces used by the application layer to access \nthe services.\
    \ Meanwhile, this middleware ensures that all data are stored in the information\
    \ model \nand provides a publish/subscribe architecture based on the data distribution\
    \ services (DDS). \nIn Figure 2, the decision support system is implemented within\
    \ the application layer. After \nbeing fed by the farm modeling utilities, the\
    \ DSS is able to perform reasoning and suggest the \nactions to be executed. Moreover,\
    \ the DSS has the capability of configuring personalized \ndashboards to monitor,\
    \ optimize, and control the farming operations. \n6 \n \n \nFigure 2. Overall\
    \ view of the AFarCloud platform. \nMotivated by one of the goals defined in the\
    \ AFarCloud project, this thesis tries to find a \nsolution for modeling the decision\
    \ support system for smart agriculture. The DSS will be designed \nto provide\
    \ thoughtful decision supports during several interrelated stages of the missions,\
    \ i.e. (i) \npre-mission data analysis and reasoning; (ii) soft real-time data\
    \ analysis during a mission, and (iii) \npost-mission data analysis and reasoning.\
    \ On the basis of historical, current, and predicted data, \nthe end users are\
    \ able to plan and interpret ongoing processes to make appropriate and reasonable\
    \ \ndecisions, as well as analyze the outcome of a mission. Thus, along with adaptive\
    \ autonomy, \nintuitive interaction, and hierarchical planning, the DSS will support\
    \ users on the agricultural \nmanagement in an efficient and sustainable way.\
    \ \n1.3. Problem statements and thesis objectives \nDelivering a decision support\
    \ system for smart agriculture in the AFarCloud project is the \nultimate objective\
    \ of this thesis. However, this is a challenging task because of the problems\
    \ \nidentified as follow. \nProblem 1: Current decision support systems are usually\
    \ task specific, leading to the fact \nthat farmers have to adopt several DSSs\
    \ to manage farm operations. Meanwhile, few DSSs can \ncover the whole life cycle\
    \ of agriculture by providing farmers with adequate advice in short-term, \nmid-term,\
    \ and long-term decision-making activities [15]. Short-term planning should cover\
    \ the \ntactical day-to-day decision-making activities, such as assigning agricultural\
    \ tasks to the most \nappropriate machineries, generating the optimal travel paths\
    \ for each machinery, scheduling daily \n7 \n \nand weekly irrigation activities,\
    \ etc. Mid-term planning is supposed to offer seasonal decision \nsupports for\
    \ farmers. For instance, fertilization is typically performed by farmers according\
    \ to \ntheir own observations and experiences, usually resulting in imprecise\
    \ chemical usages and \ncausing serious damages to fields and crops. However,\
    \ with the help of mid-term planning, DSSs \ncan provide farmers with detailed\
    \ solutions about the perfect time to fertilize and the amount of \nchemical applications.\
    \ In regards to long-term planning, it usually refers to yearly decision \nsupports.\
    \ For example, agricultural machineries surely suffer from wear and gear. After\
    \ serving \nfor months, old and damaged components have to be replaced by new\
    \ ones. By monitoring the \nstatus of machineries, DSSs can notify farmers about\
    \ which machineries are non-operational \nanymore and what components should be\
    \ replaced. Unfortunately, current DSSs mainly focus on \nshort-term planning\
    \ and lack consideration on mid-term and long-term planning. Therefore, it is\
    \ \nurgent to integrate more functionalities of DSSs and enrich decision supports\
    \ throughout the \nwhole life cycle of agriculture. \nProblem 2: Uncertainty and\
    \ dynamic factors do exist in agriculture, but the fact is that few \nDSSs take\
    \ them into account. Generally, uncertainty and dynamic factors come from the\
    \ \nfollowing aspects. Firstly, meteorological conditions have a great influence\
    \ on crop growths. For \ninstance, rising temperature may shorten the growth circle\
    \ of crops. Consequently, fertilization, \nweeding, and harvesting periods should\
    \ change accordingly [16]. DSSs should take uncertainty \nand dynamic factors\
    \ of climate change into account for providing farmers with more accurate \ndecision\
    \ supports. Secondly, conditions of farmlands are dynamically changing as well,\
    \ especially \nsoil moisture and remaining nutrition in the fields [17]. A low\
    \ value of soil moisture requires \nfarmers to perform irrigation activities more\
    \ frequently, while a high volume of nutrition \nremaining in the fields requires\
    \ farmers to fertilize a fewer amount of manures. Monitoring \nenvironmental changes\
    \ is vital because decision supports are generated based on these dynamic \ndata.\
    \ Thirdly, farmers have to handle uncertainty and dynamic factors of economic\
    \ effects from \nthe market [18]. The price of an agricultural product may be\
    \ affected by several factors like total \nproduction, logistics, inventory in\
    \ local warehouses, consumers’ demands, etc. Any changes in a \nsingle factor\
    \ may lead to a chain reaction. In conclusion, it is suggested that DSSs should\
    \ pay \nattention to uncertainty and dynamic factors. \nProblem 3: Re-planning\
    \ in decision support systems is a challenging research topic. On the \none hand,\
    \ unexpected failures and issues may arise from time to time, such as mechanical\
    \ failures \nof an agricultural machinery and sudden changes in weather. These\
    \ failures and issues may lead \nto the impossibility of following the original\
    \ solutions to complete assigned missions [19]. \nTherefore, DSSs should have\
    \ the capability of adjusting current strategies or generating new ones \nfor\
    \ providing further decision supports for farmers to continue missions. On the\
    \ other hand, when \n8 \n \na mission is being executed, a DSS may detect a better\
    \ strategy for carrying on the rest of the \nmission [20]. Under this circumstance,\
    \ the DSS should inform farmers of the latest suggestions. \nBy adopting this\
    \ newly generated solution, farmers can complete the rest of the mission more\
    \ \nefficiently and smoothly. Conclusively, DSSs are supposed to have a re-planning\
    \ mechanism for \nupdating the decision supports. \nProblem 4: Some researchers\
    \ intend to develop DSSs that resolve complex problems \nautonomously without\
    \ any human interventions [21-23]. Unfortunately, current DSSs have not \nreached\
    \ such intelligent level yet. Due to the limitation of computation capability\
    \ and complexity \nof agricultural problems, DSSs may provide farmers with inaccurate\
    \ decision supports, \nsometimes even wrong suggestions. Therefore, agricultural\
    \ knowledge from experienced experts \nis expected for the purpose of validating\
    \ the feasibility of given strategies and correcting the \nmistakes in generated\
    \ solutions [24]. An interactive interface should be provided by DSSs, \nallowing\
    \ experts to express their knowledge and opinions. By checking generated solutions\
    \ before \nexecution, DSSs are able to lower the possibility of making mistakes.\
    \ \nProblem 5: Though predictions and forecasts are especially helpful for farmers\
    \ to get \nprepared in advance, few DSSs take this issue into consideration. Generally,\
    \ the following three \ntypes of predictions and forecasts are recommended. Firstly,\
    \ crop growths depend on multiple \nfactors like weather, soil, irrigation, and\
    \ fertilization. An early estimation on agricultural \nproduction is helpful for\
    \ farmers to detect whether certain operations should be performed to \nimprove\
    \ product quality [25]. Secondly, forecasts of climate change enable farmers to\
    \ adjust crop \nmanagement and avoid unnecessary climatic risks [26]. Lastly,\
    \ by detecting potential symptoms \nand early signs, DSSs are supposed to warn\
    \ farmers about possible occurrences of pests and crop \ndiseases for helping\
    \ them to take certain precautions and avoid further losses [27]. \nProblem 6:\
    \ Strategies of historical missions usually contain valuable information, including\
    \ \nnot only successful experience, but also failure cases. However, current DSSs\
    \ seldom analyze the \nhistorical information. A historical strategy is applicable\
    \ for its corresponding situation. It is \npromising to compare the real-time\
    \ data with historical ones to generate solutions for current \nmissions within\
    \ a shorter computation time by adopting intelligent algorithms like machine \n\
    learning, deep learning, bio-inspired algorithms [28]. Because similar patterns\
    \ between historical \nand new datasets may be recognized and matched. Successful\
    \ experiences in past cases can be \nused as references in performing current\
    \ agricultural activities. Meanwhile, DSSs can abandon \nuseless strategies by\
    \ judging from failures in past cases. Furthermore, by learning from historical\
    \ \ninformation, regular patterns can be drawn and used to predict future circumstances\
    \ [29]. In \n9 \n \nconclusion, the efficiency of decision-making and quality\
    \ of generated decision supports can be \nsignificantly improved by performing\
    \ analysis on the historical information. \nProblem 7: A DSS usually contains\
    \ a huge amount of information, some of which are \nclassified. Since decision-makers\
    \ uses this information as a basis when making decisions, the \ninformation sent\
    \ to the DSS should be reliable. Otherwise, it might have disastrous effects.\
    \ In \ngeneral, three categories of security issues should be considered when\
    \ delivering a DSS. First, the \nbasic threat is in regard to data loss, which\
    \ means that parts of the database can no longer be \nretrieved. This could blame\
    \ on the physical damage to the storage medium, human error, or \nhardware failures.\
    \ Second comes to the unauthorized access. Computer hackers may develop \nsophisticated\
    \ methods to obtain data from the databases and then use them for personal gain\
    \ or \nharm others. Third, security issues in a DSS should concern the attack\
    \ from viruses and other \nharmful programs. For tackling the above three security\
    \ issues, the use of firewall, encryption, \nand passwords are strongly recommended.\
    \ \nFor tackling the seven problems detected above, the following sub-goals are\
    \ defined in order \nto achieve the objective of this thesis step-by-step. \n\
    Sub-goal 1: Investigating and analyzing the requirements of smart agriculture.\
    \  \nSub-goal 2: Surveying the current state of the art of decision support systems\
    \ for smart \nagriculture. In particular, reviewing existing technologies and\
    \ selecting the appropriate ones for \nthis thesis. \nSub-goal 3: Reviewing the\
    \ selected technologies for identifying any shortcomings that this \nthesis can\
    \ supplement and any improvements that this thesis can contribute to. \nSub-goal\
    \ 4: Presenting a general framework of the decision support system for smart \n\
    agriculture and clarifying how the proposed decision support system serves within\
    \ the AFarCloud \nproject. \nSub-goal 5: Proposing a specific solution for designing\
    \ and implementing the decision \nsupport system based on the selected technology\
    \ with improvements. \nSub-goal 6: Implementing and validating the proposed decision\
    \ support system for smart \nagriculture within the AFarCloud project. \n1.4.\
    \ Research contributions and thesis structure \nThe contributions of this thesis\
    \ can be summarized as follows. \n10 \n \n• \nProposal of a decision support system\
    \ framework for smart agriculture. As a general solution, \nthis framework is\
    \ able to provide farmers with a complete set of decision supports for \nmanaging\
    \ farming operations. \n• \nWithin the proposed framework, a decision support\
    \ algorithm is designed by employing an \nimproved case-based reasoning approach.\
    \ \n• \nAn associated case representation formalism is presented for defining\
    \ agricultural cases. \nDiffering from the typical feature vector representation,\
    \ the proposed representation \nformalism pays attention to the interrelations\
    \ between cases. \n• \nA triangular similarity measure is proposed for providing\
    \ a more accurate retrieval result, \novercoming the shortcomings of typical approaches\
    \ like cosine and Euclidean distance \nmeasures. The proposed measure takes the\
    \ angles, magnitudes of compared vectors, their \nmagnitude difference, and feature\
    \ weights in each vector into account. \n• \nA fast case retrieval algorithm is\
    \ implemented by taking advantage of the proposed associated \ncase representation\
    \ formalism. Instead of traversing the whole case base for identifying the \n\
    most similar past case, this fast case retrieval algorithm compares associated\
    \ cases \npreferentially, leading to higher retrieval efficiency. \n• \nA learning-based\
    \ adaptation strategy is designed by taking advantage of hidden adaptation \n\
    knowledge in the case base, instead of relying on pre-set and refined rule sets.\
    \ \n• \nA new case retention approach is proposed. Apart from the typical addition\
    \ and deletion \nstrategies, the proposed retention approach also takes updating\
    \ the association of past cases \ninto account. \n• \nA hybrid decision support\
    \ mechanism is proposed to supplement the weakness of the case-\nbased reasoning\
    \ approach. A mediator component is integrated in this hybrid mechanism for \n\
    coordinating the communication between different decision support algorithms.\
    \ \nThe rest of this thesis is organized as follows. \nChapter 2: The background\
    \ of the study involved in this thesis is introduced, including the \nhistorical\
    \ evolution of agriculture. Meanwhile, the current state of decision support systems\
    \ and \nthe case-based reasoning approach is reviewed for detecting any potential\
    \ improvements. \nChapter 3: The framework of the decision support system for\
    \ smart agriculture is proposed \nin this chapter, providing an architectural\
    \ view of the system. The components involved within \nthe proposed framework\
    \ is described in detail. \nChapter 4: Contributions of this thesis towards the\
    \ case-based reasoning approach are \nexplained in this chapter. Firstly, the\
    \ associated case representation formalism is described. \n11 \n \nSecond comes\
    \ to the triangular similarity measure. Thirdly, the fast case retrieval algorithm\
    \ is \npresented, following by a learning-based adaptation strategy for solution\
    \ reuse and revision. \nLastly, an associated case retention approach is proposed\
    \ for completing the case-based reasoning \nloop. \nChapter 5: The hybrid decision\
    \ support mechanism is introduced in this chapter, as well as \na preliminary\
    \ analysis on this proposal proves its feasibility and effectiveness. \nChapter\
    \ 6: This chapter shows the detailed implementation of the decision support system,\
    \ \nincluding each step (retrieve, reuse, revise, and retain) within case-based\
    \ reasoning loop. The \nhybrid decision support mechanism is also validated through\
    \ experiments. \nChapter 7: The contributions of the thesis are highlighted in\
    \ this chapter. Meanwhile, future \nwork is discussed for further consideration.\
    \ \n12 \n \n2 Background and \nrelated work\n13 \n \nThis chapter presents the\
    \ background of the research. The evolution history of agriculture is \nanalyzed,\
    \ dating from Agriculture 1.0 to 4.0. Meanwhile, the state of the art of decision\
    \ support \nsystems is reviewed. The merits and demerits of both optimization-based\
    \ and reasoning-based \nsystems are compared. Based on the review result, the\
    \ case-based reasoning approach is selected \nfor modeling the decision support\
    \ system in this thesis, therefore, the current state of the case-\nbased reasoning\
    \ approach is surveyed for detecting any space of potential improvements. \n2.1.\
    \ Evolution history of agriculture \nHuman beings began to cultivate lands and\
    \ breed animals to obtain food for survival \nthousands of years ago. This practice,\
    \ known as agriculture, is the key development in the rise of \nsedentary human\
    \ civilization. Generally, agriculture has evolved following a long-term and \n\
    progressive process, going from Agriculture 1.0 to 4.0 [30]. \n2.1.1. Agriculture\
    \ 1.0 to 3.0 \nAgriculture 1.0 refers to the traditional agricultural era, dating\
    \ back to ancient times. It \nmainly relied on manpower and animal forces. In\
    \ this stage, though simple tools like sickles and \nshovels were used in agricultural\
    \ activities, humans still cannot get rid of heavy manual labors, \nso productivity\
    \ remained at a low level [31]. Until the 19th century, steam engines were improved\
    \ \nand widely used to provide new powers in all walks of life [32]. It came to\
    \ the era of Agriculture \n2.0 when various agricultural machineries were operated\
    \ by farmers manually and lots of \nchemicals were used. Obviously, Agriculture\
    \ 2.0 significantly increased efficiency and \nproductivity. Nevertheless, this\
    \ substantial improvement brought harmful consequences as well, \nsuch as field\
    \ chemical contamination, destruction of ecological environment, excessive \n\
    consumption of powers, and waste of natural resources. In the 20th century, Agriculture\
    \ 3.0 \nemerged from the rapid development of computers and electronics. Computer\
    \ programs and \nrobotic solutions allowed agricultural machineries to perform\
    \ farming operations efficiently [33]. \nBefore the problems left in Agriculture\
    \ 2.0 went too far, strategies were adjusted in Agriculture \n3.0. The reasonable\
    \ work distribution to agricultural machineries was able to reduce the use of\
    \ \nchemicals and improve the precision of farming operations. \nThough Agriculture\
    \ 2.0 relieved the burden of human labors and Agriculture 3.0 could assist \n\
    farmers in managing farming operations efficiently, further developments are still\
    \ expected in the \nera of Agriculture 4.0.  \n14 \n \n2.1.2. Agriculture 4.0\
    \ \nThe technological innovation is not new to agriculture. Various advances,\
    \ such as Internet \nof Things, Big Data, Artificial Intelligence, Cloud Computing,\
    \ and so on, have the potential to \nchange agriculture beyond recognition, and\
    \ hence shifting towards Agriculture 4.0 [34]. \nIn 2013, the German government\
    \ firstly proposed Industry 4.0, known as the fourth industrial \nevolution [35].\
    \ Two years later, Agriculture 4.0 was defined and quickly drew attention from\
    \ \nworldwide researchers [36]. Four main requirements were put forward and listed\
    \ as follows. \n• \nIncreasing productivity: The population growth and shortage\
    \ of food will consequently boost \nthe demand for agricultural production. Meanwhile,\
    \ people’s diet is changing as well, mainly \nreflected in demanding for high-value\
    \ animal protein and high-quality vegetables. \nFurthermore, with the development\
    \ of urbanization, various infrastructures and buildings \nwould take place of\
    \ farmlands [37]. \n• \nAllocating resources reasonably: Natural resources are\
    \ incredibly stressed nowadays. \nFirstly, unused farmlands for cultivation are\
    \ rare and 25% of farmlands are marked as highly \ndegraded due to deforestation,\
    \ overcutting vegetation, inadequate fallow periods, and so on \n[38]. Secondly,\
    \ water resources are overused in an unreasonable way [39]. Frequent water \n\
    transfers from rivers and lakes are causing serious environmental problems. Third\
    \ comes to \ninefficiency of the agricultural machinery deployment due to improper\
    \ work distributions. A \nlarge amount of energy resources is consequently wasted\
    \ [40]. \n• \nAdapting to climate change: Climate change has been greatly affecting\
    \ the farming \noperations. One of the main factors which leads to climate change\
    \ is manmade emissions of \ngreenhouse gases (GHGs). The side effects of climate\
    \ change result in frequent occurrences \nof droughts, floods, and extreme weather\
    \ conditions [41]. Additionally, agricultural \nproductions are especially vulnerable\
    \ and sensitive to the impacts of climate change [42]. \nLack of efforts in adapting\
    \ to climate change will cause an increase in uncertainty about food \nquality,\
    \ accessibility, and utilization. \n• \nAvoiding food waste: Food waste comes\
    \ from each stage of the agricultural life cycle, \nincluding producing, delivering,\
    \ marketing, etc. Firstly, due to the overuse of chemicals, lack \nof pest management,\
    \ and ignorance of climate change adaptation, agricultural products may \nbecome\
    \ contaminated and unqualified [43], leading to food waste and damage to farmlands.\
    \ \nSecondly, the world shares a globalized supply and marketing system [44].\
    \ However, food \ndelivery is time-sensitive, meaning that inappropriate decision-making\
    \ about delivery \nstrategies may cause food waste. Thirdly, wasted food is harmful\
    \ to the environment. Re-\n15 \n \ncycling and processing wasted food may even\
    \ consume more resources than producing new \nones [45]. \nFor tackling the above\
    \ requirements, some successful demonstrations haves illustrated how \nAgriculture\
    \ 4.0 can benefit from the technological applications. For instance, Ferrandez-Pastor\
    \ et \nal. [46] developed a low-cost sensor and actuator network platform by taking\
    \ advantage of \nInternet of Things. This platform aimed at optimizing production\
    \ efficiency, increasing food \nquality, minimizing environmental impacts, and\
    \ reducing the use resources like energy and water. \nDas and Jain [47] proposed\
    \ to use an analysis algorithm over the big dataset for identifying the \noptimum\
    \ growing technique for multiple cropping. In their research, they concluded that\
    \ the \ncombination of smart farming and the big data technique can generate the\
    \ most well-analyzed \nresults and the complex patterns which are not perceivable\
    \ to humans. These results and patterns \ncan provide the optimum use of farming\
    \ resources under the given constraints. Liakos et al. [48] \nexplored the current\
    \ state of machine learning techniques in agriculture. They drew a conclusion\
    \ \nthat the real-time artificial intelligence technique could enable computer\
    \ programs to generate \nadequate recommendations and insights for supporting\
    \ farmers to make proper decisions. Lopez-\nRiquelme et al. [49] presented a precision\
    \ agricultural application on the basis of FIWARE cloud. \nThis application was\
    \ able to reduce the amount of water for irrigation tasks. Thus, their work \n\
    demonstrated that using FIWARE cloud services in the agronomic context was highly\
    \ beneficial. \n2.1.3. Summary of agricultural evolution \nIn general, the evolution\
    \ history of agriculture can be summarized in Figure 3. \n \nFigure 3. The evolution\
    \ history of agriculture. \n16 \n \nAgriculture is undergoing a new revolution\
    \ supported by various smart technologies. In \nAgriculture 4.0, the key features\
    \ emphasize on the concept “smart”, in particular, smart systems \nand devices.\
    \ For instance, replacing human labor with smart robotics is a growing trend across\
    \ \nmultiple industries, and agriculture is no exception [50]. Autonomous vehicles\
    \ like unmanned \naerial vehicles (UAVs) and unmanned ground vehicles (UGVs) will\
    \ be deployed in the fields for \nperforming agricultural operations, including\
    \ seeding, planting, weeding, spraying, harvesting, \netc. On the basis of various\
    \ collected data, a swarm of smart robots is able to work together under \na cooperative\
    \ manner. Meanwhile, farmers are in the position of monitoring the working status\
    \ \nthrough portable devices like tablets and mobile phones. \nIt is worth noting\
    \ that smart systems and devices count on collected information for \nperforming\
    \ operations. In Agriculture 4.0, various data sources are gathered [51], such\
    \ as \nenvironmental data (i.e. meteorological condition and soil condition),\
    \ crop-related data (i.e. \ngrowth and disease), economic data (i.e. reselling\
    \ and logistics), and so on. Obviously, \ntransferring this explosive amount of\
    \ raw data into practical knowledge is a challenging task for \nfarmers. Therefore,\
    \ platforms like decision support systems and expert systems (ES) are needed \n\
    for assisting farmers in making evidence-based and precise decisions. \n2.2. Review\
    \ of existing decision support systems \nRegarding the definition of a DSS, many\
    \ researchers have described this term from various \nviewpoints. In 1980, Jones\
    \ [52] described this term “decision support system” as “a computer-\nbased support\
    \ system for decision makers who deal with semi-structured problems to improve\
    \ the \nquality of decisions”. Sheng and Zhang [53] defined it as “a human-computer\
    \ system which is \nable to collect, process, and provide information based on\
    \ computers”. Terribile et al. [54] \nexplained it as a smart system that provides\
    \ operational answers and supports decision-making \nactivities to specific demands\
    \ and problems based on collected data. Yazdani et al. [55] \nconsidered it as\
    \ “a specific class of computerized information system, enabling to manage \n\
    decision-making activities”. Fontana et al. [56] indicated that “a decision support\
    \ system was \nconceptually developed to support the decision makers to classify\
    \ the activities into core and non-\ncore competencies, and to establish their\
    \ outsourcing relationship”. Judging from the above \ndefinitions, it is concluded\
    \ that a decision support system in the context of agriculture is a human-\ncomputer\
    \ system which utilizes data from various sources, aiming at providing farmers\
    \ with a list \nof feasible advice for supporting their decision-making activities\
    \ under different circumstances. \nOne of the most representative characteristics\
    \ of a DSS is that it does not give direct instructions \nnor commands to farmers.\
    \ Because farmers are in the position of taking the final decisions. A \ngeneral\
    \ framework of a DSS is presented in Figure 4.  \n17 \n \n \nFigure 4. A general\
    \ framework of decision support systems. \n \nIn Figure 4, for solving the agricultural\
    \ problems, agricultural data should be collected in the \nfirst place, including\
    \ historical, current, and predicted data. When gathering these data, it is \n\
    necessary to consider the constraints of monitored objects like their availability,\
    \ coverage, \nresolution, accuracy, frequency, etc. Secondly, collected data are\
    \ treated as inputs to specific \nmodels like crop, irrigation, and production\
    \ estimation models. Additionally, the requirement of \ndata types and the necessity\
    \ of human interventions should be concerned. Thirdly, a set of advice \nfor tackling\
    \ agricultural problems is generated based on computational results. During the\
    \ \ncomputing process, external factors like social reactions, economic effects,\
    \ and environmental \nchanges should be taken into account. Finally, the generated\
    \ solutions are displayed to farmers \nfor supporting their final decisions. By\
    \ adopting these solutions, farmers are supposed to carry on \nfarming operations\
    \ with the minimum investment and the highest economic benefit. \nAccording to\
    \ the tools that DSSs adopt in Figure 4, DSSs can be mainly categorized into two\
    \ \ngroups, named optimization-based and reasoning-based DSSs. These two groups\
    \ of DSSs are \nreviewed in the following sub-sections. \n2.2.1. Optimization-based\
    \ DSSs \nAs a mathematical procedure, optimization is a collection of principles\
    \ and methods used to \nsolve quantitative problems [57]. The purpose of optimization\
    \ is to achieve the best design relative \nto a set of prioritized criteria or\
    \ constraints which include maximizing factors like productivity, \nefficiency,\
    \ profitability, etc. \n18 \n \nThis group of DSSs takes advantage of optimization\
    \ methods like gradient descent [58], \nstochastic gradient descent [59], gradient\
    \ ascent [60], Newton’s method [61], quasi-Newton \nmethod [62], conjugate gradient\
    \ [63], and heuristic optimization methods [64]. The research \ncommunity has\
    \ contributed to a lot towards optimization-based DSSs in the context of agriculture.\
    \ \nLenka and Mohapatra [65] proposed an optimization technique to train a neural\
    \ network \npattern classification algorithm by adopting gradient descent. Their\
    \ algorithm was tested for \npredicting soil moisture content one hour in advance.\
    \ Georgiou and Papamichail [66] tried to \nmaximize the total farm income by using\
    \ the simulated annealing global optimization stochastic \nsearch algorithm in\
    \ combination with the stochastic gradient descent algorithm. Their model was\
    \ \nproved to be applicable as a decision support tool for irrigation scheduling.\
    \ Manimuthu et al. [67] \npresented the application of Newton-Raphson algorithm\
    \ in combination with the pulse width \nmodulation bridge to characterize the\
    \ energy cost associated with locomotion gaits, providing \nrobots with the optimal\
    \ area coverage strategy for agriculture harvesting. Pornprakun et al. [68] \n\
    explored the optimal harvesting policies for sugarcane by using an epsilon-constraints\
    \ method \nand a quasi-Newton optimization method. The generated result was able\
    \ to assist farmers in \ndetermining the optimal harvesting time with the maximum\
    \ profits and the minimum harvesting \ncost. Goit et al. [69] optimized the control\
    \ of power extraction in a wind farm by employing a \nconjugate gradient method.\
    \ The experimental result demonstrated that the energy extraction was \nincreased\
    \ 7% by adopting the optimal control strategy. \nSome other DSSs adopted heuristic\
    \ optimization methods as the optimization tool. These \nmethods include simulated\
    \ annealing (SA), genetic algorithm (GA), ant colony optimization \n(ACO), and\
    \ particle swarm optimization (PSO). \nBrown et al. [70] proposed the Canterbury\
    \ irrigation scheduler as an innovative on-farm \nirrigation scheduling decision\
    \ support method under the circumstance of limited water availability. \nSA was\
    \ used to optimize a set of decision variables and generate the optimal irrigation\
    \ strategy \nthat maximized the expected future farm profit. Borge et al. [71]\
    \ also took advantage of SA and \nintegrated it within a decision support system\
    \ for assessing the impact of changes in prices and in \nagricultural policy on\
    \ land use patterns and on forestry. A case study in the region of southern \n\
    Portugal proved the usefulness and relevance of their proposal. Kong et al. [72]\
    \ presented a \nmathematical optimization model to bring real-time data and information\
    \ to precision decision-\nsupport and to optimize short-term farming operation.\
    \ Their result suggested that the tailored GA \nenabled rapid solution searching,\
    \ however, the solution quality cannot be guaranteed. Muleta and \nNicklow [73]\
    \ developed a DSS by associating GA and a watershed simulation model, aiming at\
    \ \nidentifying the optimal or near-optimal land use patterns. In their proposal,\
    \ GA was linked with \n19 \n \nthe US department of agriculture’s soil and water\
    \ assessment tool (SWAT) for single objective \nevaluations. Chaudhuri et al.\
    \ [74] implemented the ACO algorithm for forecasting the amount of \nsummer monsoon\
    \ rainfall for the next day over Kolkata, India. Compared with the forecast \n\
    generated by a Markov chain model, their proposal achieved greater accuracy. Sung\
    \ et al. [75] \nused ACO for aggregating agricultural data from various sensors.\
    \ The computational simulations \nverified that the proposed algorithm was able\
    \ to remarkably extend the life cycle of sensor nodes, \nand hence to provide\
    \ continuous data sources for decision support systems. Fereidoon and Koch \n\
    [76] presented a complex coupled simulation-optimization tool, SWAT-LINGO-MODSIM-PSO,\
    \ \nto detect the future optimum cultivation area of crops for maximizing the\
    \ economic benefits in \nsouthwest Iran. In their proposal, PSO was used to adjust\
    \ the cultivation areas of different crops, \ntaking into account their specific\
    \ prices and the optimal crop yields under water deficiency. Barak \net al. [77]\
    \ applied a multi-objective PSO algorithm to analyze management system of an \n\
    agricultural production. A case study in Kerman province was considered and the\
    \ average \ngreenhouse gas emissions in watermelon production was reduced by about\
    \ 30%, therefore their \nproposal was proved to provide promising modelling and\
    \ optimization results. \nMore research works on optimization-based DSSs can be\
    \ found in [78-95]. In general, the \napplications of current optimization-based\
    \ DSSs support the farming operation in various fields, \nincluding irrigation,\
    \ fertilization, harvesting, cropping, etc. Meanwhile, these DSSs are able to\
    \ \npartially serve Agriculture 4.0 by increasing productivity, allocating resources\
    \ reasonably, \nadapting to climate change, and avoiding food waste. \nThough\
    \ some of the above research works are not strictly DSSs, researchers mentioned\
    \ them \nas “planning tool”, “decision-making tool”, “optimization model”, “optimization\
    \ method”, \n“multi-objective programming”, “multi-objective optimization”, or\
    \ “optimal scheduling tool” \ninstead. However, these proposals indeed have great\
    \ potential to be integrated within DSSs, no \nmatter how researchers named them,\
    \ their nature is to provide farmers with decision supports. For \ninstance, the\
    \ prediction of soil moisture content in [65] can be treated as an input to a\
    \ DSS for \nassisting farmers in scheduling irrigation activities. The optimal\
    \ area coverage strategy generated \nin [67] is able to provide farmers with decision\
    \ supports on distributing harvesting tasks to the \nmost appropriate agricultural\
    \ machinery, and hence to improve harvesting efficiency. The \nselection of the\
    \ optimal cultivation area of crops in [76] also enables decision supports on\
    \ \ncropping for farmers. The output of the optimization model in [81] can provide\
    \ farmers with \nadvice about how to maximize the operating profit and organic\
    \ matter balance, as well as to \nminimize the labor requirement and soil nitrogen\
    \ losses. The method developed in [85] is \napplicable for providing decision\
    \ supports on enhancing food availability and reducing the \n20 \n \nenvironmental\
    \ impact of agriculture. Consequently, the above research works are all considered\
    \ \nbeing developed within the DSS context for smart agriculture. \nThe merits\
    \ and demerits of optimization-based DSSs will be discussed in Section 2.2.4,\
    \ as \nwell as its comparison with reasoning-based DSSs. \n2.2.2. Reasoning-based\
    \ DSSs \nAs a popular technique in Artificial Intelligence and knowledge-based\
    \ systems, reasoning \n[96] is a process of generating conclusions from the available\
    \ information by using logical \ntechniques. It has various applications, including\
    \ scheduling, problem solving, complex event \nprocessing, predictive analytics,\
    \ etc. Some typical reasoning approaches are listed as follows. \n• \nCase-based\
    \ reasoning (CBR) [97]: CBR refers to the process of solving new problems based\
    \ \non the solutions of similar past problems. It is not only a powerful method\
    \ for computer \nreasoning, but also a pervasive behavior everyday human problem\
    \ solving. \n• \nRule-based reasoning (RBR) [98]: RBR uses an inference engine\
    \ or a semantic reasoner to \ninfer information or take actions based on the interaction\
    \ of inputs and a rule base (a specific \ntype of knowledge base). It follows\
    \ the match-resolve-act cycle for solving new problems. \n• \nEvidential reasoning\
    \ (ER) [99]: ER adopts a belief structure to model an assessment with \nuncertainty,\
    \ a belief decision matrix to represent multi-criteria decision analysis problem\
    \ \nunder uncertainty, evidential reasoning algorithms to aggregate criteria for\
    \ generating \ndistributed assessments, and the concepts of the belief and plausibility\
    \ functions to generate \na utility interval for measuring the degree of ignorance.\
    \ \nSome latest contributions to reasoning-based DSSs are summarized as follows.\
    \ Though there \nare not so many reasoning-based DSSs applied in the context of\
    \ smart farming, DSSs proposed \nin other fields can also inspire the design of\
    \ agricultural DSSs. Thus, DSSs from all the fields are \nincluded in the following\
    \ review, as long as they are related to decision support and decision-\nmaking.\
    \ \nCBR DSSs \nRong and Li [100] described a web-based CBR system for fish disease\
    \ diagnosis. Instead of \ndepending on general domain knowledge, their proposal\
    \ utilized knowledge of previous cases and \nsolved new problems by hunting out\
    \ a similar past case and reusing its solution for tackling the \nnew problem.\
    \ Car and Moore [101] improved CBR with a novel interface, allowing users to select\
    \ \ncase parameters that interest them for case comparison. The updated CBR was\
    \ tested within \nAustralian irrigation cases and presented promising results.\
    \ Padma et al. [102] implemented an \n21 \n \nintelligent decision support system\
    \ (IDSS) for detecting pest and disease in an apple orchard. \nTheir proposal\
    \ adopted CBR and a database technology within a web-based client server \narchitecture.\
    \ The accuracy of decision-making processes achieved 90.20% and this IDSS was\
    \ able \nto provide significant supports for apple farmers to manage pest practices.\
    \ Zhu and Yin [103] \npresented a decision support system for managing crop diseases\
    \ and insect pests on the basis of \nCBR. The ontology data within their framework\
    \ can be processed for supporting on pest \nprevention and control. The prediction\
    \ accuracy of their proposal achieved 86.87% in the \nvalidation. Some DSSs that\
    \ adopted CBR in other fields (i.e. finance, healthcare, emergency \nresponse,\
    \ and industry) can be found in [104-111]. \nRBR DSSs \nBalleda et al. [112] presented\
    \ a rule-based agricultural system for rice and wheat crop pest \nmanagement.\
    \ This system facilitated different components, including a decision support module\
    \ \nand an interactive interface for diagnosis on the basis of responses of the\
    \ user made against the \nqueries related to particular disease symptoms. Naseem\
    \ et al. [113] proposed a rule-based DSS \nusing the semantic web technology.\
    \ This DSS can collect, store, and update agricultural \ninformation at a centralized\
    \ location, and then deliver knowledge through the semantic web, \nproviding query\
    \ services from a agricultural knowledge base. Han [114] adopted a mixed \nreasoning\
    \ strategy of RBR (as the main reasoning approach) and CBR (as a supplement) for\
    \ \nconstructing an animal disease diagnosis system. This system was able to reduce\
    \ the rate of \nmisdiagnosis and improve the quality of veterinary services. Katsiri\
    \ and Makropoulos [115] \nimplemented an ontology framework for decentralized\
    \ water management and analytics with the \nobjective of improving system availability.\
    \ RBR was used as an inference tool for obtaining high-\nlevel knowledge (i.e.\
    \ irrigation scheduling plans). Some DSSs that adopt RBR in other fields (i.e.\
    \ \nfinance, healthcare, emergency response, industry) can be found in [116-123].\
    \ \nER DSSs \nSun et al. [124] presented a method to map plant functional types\
    \ (PFTs) from moderate \nresolution imaging spectroradiometer (MODIS) data using\
    \ an ER algorithm. After utilizing \nMODIS data, multiple lines of evidence computed\
    \ from input data were then combined using \nDempster’s rule of combination. Their\
    \ preliminary result suggested that the multisource ER \nalgorithm can promisingly\
    \ improve the mapping of PFTs. Cohen and Shoshany [125] adopted ER \nin a knowledge-based\
    \ system for land-cover mapping derived from remotely sensed images. The \neffectiveness\
    \ of their proposal was verified by the task of crop recognition in a wide \n\
    heterogeneous region in Israel. Jiang et al. [126] developed a fuzzy evidential\
    \ reasoning approach \nfor selecting the optimal submarine power cable routing\
    \ for offshore wind farms. The decision \n22 \n \nsupport was generated by ER,\
    \ taking into account input variables (after fuzzification) and a belief \nrule\
    \ base. Sanz [127] applied a dynamic ER approach to crop classification. This\
    \ proposal allowed \nthe incorporation of new evidence for the classifier in order\
    \ to achieve better accuracy. Two \ndecision stages were concerned by calculating\
    \ the similarity between the maximum support value \nand other supports of the\
    \ rest of the classes. Some DSSs that adopt ER in other fields (i.e. finance,\
    \ \nhealthcare, emergency response, industry) can be found in [128-135]. \nThe\
    \ merits and demerits of reasoning-based DSSs will be discussed in Section 2.2.4,\
    \ as well \nas its comparison with optimization-based DSSs. \n2.2.3. Distinctions\
    \ with expert systems \nDecision support systems are usually compared with expert\
    \ systems. On the one hand, as \nmentioned in the beginning of Section 2.2, a\
    \ DSS is an interactive system that helps decision-\nmakers to utilize data and\
    \ models for solving unstructured or semi-structured problems. However, \non the\
    \ other hand, an ES [136] is a computer-based system that emulates the decision-making\
    \ \nability of human experts. A general framework of an ES is shown in Figure\
    \ 5. \n \nFigure 5. A general framework of expert systems. \n \nIn Figure 5, three\
    \ key components are demonstrated, including a knowledge base, an \ninference\
    \ engine, and a user interface. The process of capturing and transferring information\
    \ for \ngiven problems is conducted by human experts and knowledge engineers.\
    \ The inference engine \nis used to perform reasoning with expert knowledge and\
    \ users’ queries. Users can both raise \nqueries and obtain the inference result\
    \ through a user interface. A typical application of ESs is its \nemployment in\
    \ the medical fields. For example, Song et al. [137] proposed a data-based \n\
    interactive medical expert system for supporting pregnancy consultations. One\
    \ remarkable feature \n23 \n \nof ESs is that the users should have adequate knowledge\
    \ in the field. In the case of ESs for medical \napplications, users are mainly\
    \ medical personnel. \nThough both systems aim at improving the quality of decisions,\
    \ some distinctions between \nthese two have to be clarified [138,139], especially\
    \ in their objectives, users, orientation, etc. A \ncomparison table is provided\
    \ in Table 1. \nTable 1. Comparison for distinguishing DSSs with ESs. \nCharacteristics\
    \ \nExpert system \nDecision support system \nObjective \nReplication of human\
    \ \nexperts \nAssistance in decision-\nmaking \nOrientation \nExpertise transfer\
    \ \nDecision-making \nDecision maker \nSystem \nHuman \nUser \nPeople with expert\
    \ \nknowledge  \nPeople without much expert \nknowledge \nQuery \nMachine queries\
    \ human \nHuman queries machine \n \nIn general, the objective of an ES is to\
    \ replicate how human experts would perform reasoning. \nThe ES is in the position\
    \ of taking final decisions and therefore providing users with a list of \ncommands\
    \ or instructions on solving problems. While, the objective of a DSS focuses on\
    \ \nproviding assistance in decision-making activities for users. Under this circumstance,\
    \ users have \nthe right to make the final call after receiving a list of generated\
    \ advice from DSSs. It is also worth \nnoting that ESs and DSSs target to different\
    \ groups of users. DSSs are more suitable for ordinary \nusers who do not have\
    \ much expert knowledge. \nAs a consequence, DSSs are more suitable than ESs for\
    \ farmers in the context of agriculture. \n2.2.4. Summary of DSSs \nIn previous\
    \ sub-sections (Sections 2.2.1 and 2.2.2), the existing optimization-based and\
    \ \nreasoning-based DSSs have been reviewed. In this section, their features are\
    \ further discussed for \ndetermining which approach is going to be adopted in\
    \ this thesis. \nBy reviewing literatures [65-95], merits and demerits of the\
    \ optimization-based DSSs are \nsummarized as follows. \n \n \n24 \n \nMerits\
    \ of optimization-based DSSs: \n• \nOptimization-based DSSs are usually capable\
    \ of handling low dimensional problems through \nmathematical computations within\
    \ a short time. \n• \nUnder general circumstance, optimization-based DSSs are\
    \ able to find the true optimum of a \nresponse with fewer trials than the non-systematic\
    \ approaches or the one-variable-at-a-time \nmethods. \n• \nIt is acknowledged\
    \ that optimization algorithms are easy to implement. Meanwhile, \noptimization\
    \ algorithms are usually compatible with other components within DSSs. \nDemerits\
    \ of optimization-based DSSs: \n• \nFew optimization-based DSSs take historical\
    \ data into consideration. In general, optimization \nalgorithms tend to treat\
    \ the latest data as inputs to the programming models. However, \nhistorical data\
    \ undoubtedly contain valuable information, including not only the successful\
    \ \nexperiences, but also failure cases. As a consequence, it seems to be a wise\
    \ approach for \nsmart agricultural systems to take advantage of historical information.\
    \ \n• \nFor optimization-based DSSs, a complete programming model and a set of\
    \ objective \nfunctions has to be constructed beforehand. The performance of optimization-based\
    \ DSSs \ncan be hardly improved because the models and functions are usually fixed\
    \ during \noptimization. Though extra rules can be inserted to the systems that\
    \ might be helpful, the \ncomplexity of DSSs will then increase. \n• \nOptimization\
    \ algorithms are usually computationally expensive for dealing with high \ndimensional\
    \ problems. Because it is not easy to achieve a balance between all the objective\
    \ \nfunctions that have conflict with each other. Meanwhile, due to the natural\
    \ defect of \noptimization algorithms, they may be trapped within a local optimal\
    \ solution and give up on \nsearching for the global optimal ones due to inappropriate\
    \ initial settings for the parameters \nof optimization algorithms. \nBy reviewing\
    \ literatures [100-135], the merits and demerits of reasoning-based DSSs are \n\
    identified as follows. \nMerits of reasoning-based DSSs: \n• \nReasoning-based\
    \ DSSs usually take historical data into account, especially for those DSSs \n\
    that adopt the case-based reasoning approach. Consequently, new problems may be\
    \ handled \nby learning from successful historical experiences. It is also worth\
    \ noting that current and \npredicted data are considered as well. \n25 \n \n\
    • \nCompared with optimization-based DSSs, reasoning-based DSSs do not require\
    \ any \ncomplete domain models nor objective functions. Reasoning-based DSSs is\
    \ applicable when \na domain contains complex information that is difficult or\
    \ impossible to elicit, as well as the \nsystem requires constant maintenance.\
    \ \n• \nMost importantly, the generation of knowledge is on the basis of inference,\
    \ not the process \nof mathematical computation. The decision supports provided\
    \ by reasoning-based DSSs may \nhave a chance for improvement with time. Because\
    \ the coverage in domains will become \nmore complete when more source cases are\
    \ retained in the database. \nDemerits of reasoning-based DSSs: \n• \nReasoning-based\
    \ DSSs highly depends on the structure of information. A well-organized \ncollection\
    \ of information can enhance the performance of reasoning, while unstructured\
    \ data \nmay cause problems during the inference process. \n• \nConstructing the\
    \ knowledge base (case base / rule base) might be a challenging task. For \nexample,\
    \ for DSSs that adopt CBR, how many cases should be stored, how to remove \noverlapping\
    \ cases, how to weight features, etc. \n• \nTransferring a large volume of information\
    \ into practical knowledge is a time-consuming \nprocess. The inference time varies\
    \ in different reasoning techniques. \nIn conclusion, though optimization-based\
    \ DSSs have proved to be effective for solving \nspecific agricultural problems\
    \ and can provide farmers with decision supports to some extent, it \nis determined\
    \ that optimization approaches may not be suitable for designing a general platform\
    \ \nfor smart agriculture. Instead, reasoning techniques is employed to build\
    \ decision support systems \nfor the AFarCloud project. In particular, the case-based\
    \ reasoning approach is favored in this \nthesis, as the main technique in the\
    \ decision support system. Consequently, the current state of \ncase-based reasoning\
    \ is reviewed in the following sub-section. \n2.3. Review of the case-based reasoning\
    \ approach \nAs an important technique in artificial intelligence, CBR is defined\
    \ as the process of solving \nnew problems by matching and adapting cases that\
    \ have been successfully managed before. By \nmimicking how humans would perform\
    \ reasoning and learning, CBR seems to be a more \npsychologically plausible model\
    \ of human reasoning [97]. This unique characteristic makes CBR \na promising\
    \ approach for building intelligent systems [140]. Due to its effectiveness and\
    \ powerful \nreasoning capability, CBR has been applied to various fields, including\
    \ the domain of agriculture. \n26 \n \nCBR can be formalized as a 5R circle [141],\
    \ including the steps of represent, retrieve, reuse, \nrevise, and retain. A generic\
    \ workflow of CBR is presented in Figure 6. \n \nFigure 6. A generic workflow\
    \ of case-based reasoning. \nIn Figure 6, the problem statements are transformed\
    \ into a new case by a certain case \nrepresentation formalism. Given a target\
    \ problem, the retrieval process compares the new case \nwith historical ones\
    \ for the purpose of identifying the most similar past case. Generally, a past\
    \ \ncase consists of a problem and its solution, and typically, annotations about\
    \ how the solution can \nbe derived. Afterwards, the solution of this retrieved\
    \ case is reused to solve the new case. In order \nto perfectly fit the new case,\
    \ a revision process is required to update the proposed solution. After \napplying\
    \ the updated solution, the solved case will be stored in the case base for further\
    \ \ncomparisons. \nTherefore, each step (represent, retrieve, reuse, revise, and\
    \ retain) within the CBR loop is \nreviewed in the sub-sections for detecting\
    \ any room for improvements when applying CBR to the \ndecision support systems\
    \ for smart agriculture. \n2.3.1. Review of case representation \nExperiences\
    \ in the CBR systems are stored by the form of cases, thus the representation\
    \ \nformalism plays a significant role in CBR [142]. Case representation is the\
    \ task of enabling CBR \n27 \n \nsystems to recognize, store, and process past\
    \ contextualized experiences [143]. As a fundamental \nelement, a system without\
    \ cases cannot be a CBR system. Case representation in CBR makes use \nof knowledge\
    \ representation formalisms from artificial intelligence to represent the experiences\
    \ \ncontained in the cases for reasoning purposes. Most importantly, the reasoning\
    \ capability of CBR \nsystems depend on the content and structure of cases. Thus,\
    \ the main issues [144] in the context \nof case representations are identified\
    \ as: (i) defining attributes that describe a case, (ii) defining \nthe structure\
    \ that describes the case content, and (iii) defining the organization that manages\
    \ cases \nin the case base. The research community has proposed a variety of case\
    \ representation formalism, \nsuch as the following. \n• \nFeature vector representation\
    \ [145]: This representation formalism is also known as the \npropositional representation\
    \ or attribute-value pair. It is composed of a set of features \ndescribing the\
    \ problem and a corresponding solution. An example of the feature vector \nrepresentation\
    \ is presented in Figure 7 [146]. \n \nFigure 7. An example of the feature vector\
    \ representation. \nA feature is an individual measurable property or characteristic\
    \ of an observable \nphenomenon. It can be defined by numeric attributes, strings,\
    \ graphs, fuzzy variables, etc. In \nFigure 7, apart from the case IDs, a 4-dimensional\
    \ vector is used to reconstruct phylogenetic trees. \nThese features characterize\
    \ the relative difference of biological sequences. In this example, \n“Name”,\
    \ “Species”, “Accession no.”, and “Length” are the key features to determine the\
    \ \ncommonalities between different cases. \nDue to ease of use and simplicity,\
    \ the feature vector representation has been adopted by \nresearchers from all\
    \ fields. Asadi and Lin [147] employed the feature vector representation in \n\
    28 \n \nmulti-stage document ranking. This representation not only helped the\
    \ system to save more \nmemory, but also offered greater flexibility. Bringer\
    \ et al. [148] used the feature vector \nrepresentation for transforming a fingerprint\
    \ minutiae template into a binary format with a fixed \nlength. The experimental\
    \ result demonstrated that their proposal achieved promising \nimprovements for\
    \ utilization into fast identification algorithms. Svanberg [149] adopted the\
    \ \nfeature vector representation for identifying similar projects in App Inventor.\
    \ By measuring the \nsimilarity between projects, original projects can be distinguished\
    \ from unoriginal ones. Yagi et \nal. [150] proposed an edge-based feature vector\
    \ representation for a medical image recognition \nsystem. The robust nature of\
    \ the feature vector representation was verified through the \ncephalometric landmark\
    \ identification and expert dentists’ practice. \nJudging from the above literatures,\
    \ it is well acknowledged that the feature vector \nrepresentation has the merits\
    \ of simplicity, flexibility, and great robustness. However, there are \nno relationships\
    \ or constraints between features in this representation formalism. Meanwhile,\
    \ Due \nto lack of domain knowledge, semantic similarity can be hardly measured.\
    \ Moreover, if a case \ncontains incomplete or ambiguous information, difficulties\
    \ may be encountered during the \nprocess of case retrieval. \n• \nTextual representation\
    \ [151]: The textual representation method is commonly used in textual \ncase-based\
    \ reasoning (TCBR) systems [152]. As a subfield of CBR, TCBR aims at using \n\
    textual knowledge sources in an automated or semi-automated way for solving problems\
    \ \nthrough case comparisons. An example of the textual representation is shown\
    \ in Figure 8 \n[153]. \n \nFigure 8. An example of the textual representation.\
    \ \n29 \n \nIn Figure 8, the relevant information is interested in “Names and\
    \ Roles” and factors like \n“Security Measure”, “Disclosure-In-Negotiations”,\
    \ “Nondisclosure-Agreement”, and “Info-\nKnown-Competitors”. These pieces of information\
    \ are extracted from a plain text for further \nprocessing in TCBR. \nTwo research\
    \ lines were pointed out by Ozturk and Prasath [154]. The first one focused on\
    \ \nextracting contents of a case from a textual report and populating the obtained\
    \ knowledge into a \ncase base under s structure manner. Chan [155] described\
    \ a method for extracting the salient \ntextual patterns, with consideration of\
    \ moving away keywords and their associated limitations in \ntextual information\
    \ retrieval. Cardenosa et al. [156] presented a new approach for describing \n\
    contents through the use of interlinguas for facilitating the extraction of specific\
    \ pieces of \ninformation, highlighting the different dimensions of a document\
    \ and how these dimensions \ndefined the capacities of their respective contents\
    \ in the scalable process of finding information. \nAngelova [157] discussed the\
    \ role of domain knowledge in extracting structured information from \npatient\
    \ related texts. The prototype system was proved to be effective for providing\
    \ an ontological \nframework for information extraction tasks. The second research\
    \ line concentrated on retrieving \nknowledge from free texts without converting\
    \ them into structured cases. Cohen [158] presented \nWHIRL, a world-based information\
    \ representation language for integrating data from \nheterogeneous information\
    \ sources. WHIRL had proved its effectiveness in inductive text \nclassification.\
    \ Chan [159] proposed a novel textual information extraction method which was\
    \ \nbeyond purely keyword-based method. Instead of detecting specific keywords\
    \ or cue-phrases to \nevaluate the relevance of the sentence, the proposed method\
    \ focused on identification of the main \nfactors in the textual continuity. Buranasing\
    \ and Phoomvuthisarn [160] introduced a word vector \nrepresentation method for\
    \ information extracting from cultural heritage data sources by \nidentifying\
    \ named entities and determining the semantic relation triples and position tags.\
    \ \nA major advantage for adopting the textual representation is that it can handle\
    \ both semi-\nstructured and unstructured documents. This representation method\
    \ is sufficient when the amount \nof information is not too extensive. However,\
    \ it is noted that textual cases are usually presented \nby plain text, resulting\
    \ in difficulty for CBR systems to understand the information within cases. \n\
    Meanwhile, the textual representation is domain specific and it requires knowledge\
    \ engineers to \ndetermine which features are relevant in the target domain. As\
    \ a consequence, the retrieval \nprocess is complex. \n• \nFrame-based representation\
    \ [161]: Frames provide a natural way for the structured and \nconcise representation\
    \ of knowledge. In a single entity, a frame combines all necessary \nknowledge\
    \ about a particular object or concept. It organizes knowledge in a slot and describes\
    \ \n30 \n \nvarious attributes and characteristics of the objects. An example\
    \ of the frame-based \nrepresentation is shown in Figure 9 [162]. \n \nFigure\
    \ 9. An example of the frame-based representation. \n \nIn Figure 9, the frame\
    \ slots are used to represent the characteristics of the object. Each slot \n\
    consists of the slot name and a list of values. This list of values can be a pointer\
    \ to another frame, \na descriptive variable or a procedure. \nYao et al. [163]\
    \ utilized the frame-based representation to construct cases for ship repair \n\
    problems. CBR was adopted in their proposal for assessing the ship repair risk.\
    \ Mohamed et al. \n[164] proposed a hybrid rule and frame-based knowledge representation\
    \ approach to eliminate \ncurrent drawbacks on using both methods separately.\
    \ Their proposal had the advantage of well-\nstructured, supporting on a large\
    \ number of conditions and rules, supporting on complex tasks, \nand great flexibility.\
    \ Su et al. [165] employed CBR for safety accident pre-control and decision \n\
    making in the construction industry. Within their proposal, the frame-based knowledge\
    \ \nrepresentation method was adopted to establish the case database from dimensions\
    \ like slot, facet, \nand facet’s value. Sorenson et al. [166] described a frame-based\
    \ knowledge representation method \nto construct an adequately-explicit bedside\
    \ clinical decision support application for ventilator \nweaning. They concluded\
    \ that frames for knowledge representation were advantageous because \nthey can\
    \ be created, visualized, and conceptualized as self-contairied entities that\
    \ corresponded \nto accepted medical constructs. \nConcluding from the above literatures,\
    \ in the CBR terminology, a frame can represent a case \nand each slot is a case\
    \ feature. As a consequence, cases represented as frames can have semantic \n\
    relationships. As inheritance is an essential feature of the frame-based representation,\
    \ a hierarchy \n31 \n \nof cases connected by IS_A and PART_OF relationships can\
    \ be generated. This case hierarchy \ncan enhance the semantic retrieval and adaption\
    \ operations. The frame-based representation \nmethod has been formalized by description\
    \ logics [167,168]. The notion of “cases as terms” \nindicates that viewing structured\
    \ cases as terms in feature logics enables better understanding in \ncase-based\
    \ reasoning. \n• \nObject-oriented representation [169]: This representation is\
    \ a common way of defining \nIS_A, HAS_A, and PART_OF relationships. Cases can\
    \ be represented by classes and objects. \nA class is a general abstract of a\
    \ group of similar objects, gathering the general features of \nthe group. Usually,\
    \ a class is formulized by a 4-tuple expression, including (i) the \nidentification\
    \ of the class, (ii) the data structure description, (iii) the concrete implementation\
    \ \nof operations, and (iv) the unified external interface. An example of the\
    \ object-oriented \nrepresentation is shown in Figure 10 [170]. \nIn Figure 10,\
    \ two objects are defined, named “Maintenance Report” and “Maintenance \nActivity”.\
    \ Apart from the variable features, a pointer “Activity Code” links the two objects.\
    \ \n \nFigure 10. An example of the object-oriented representation. \n \nKhan\
    \ and Chaudhry [171] adopted the object-oriented case representation method and\
    \ CBR \nin structural analysis. The proposed representation scheme was a step\
    \ forward in the development \nof a system to be utilized for the time-consuming\
    \ structural analysis. Marefat and Britanik [172] \nexplored the CBR application\
    \ in process planning. By utilizing the object-oriented representation, \nthis\
    \ application was able to process selection and sequencing to combine the advantages\
    \ of the \nvariant and generative approaches to process planning. Chen and Lee\
    \ [173] proposed an object-\n32 \n \noriented representation of program trees.\
    \ The object serialization technology was used for storing \nand retrieving the\
    \ syntax trees and program models. In addition, the connection between the \n\
    object-oriented program graph and XML representations was established. Chen et\
    \ al. [174] \npresented an object-oriented hierarchical case representation for\
    \ automotive panels in process \nplanning. The representation scheme extended\
    \ the object model in object-oriented modelling \ntechnology, allowing the CBR\
    \ system to effectively represent and organize the abundant \ninformation in the\
    \ cases. \n \nBy reviewing the above literatures and [175-177], following advantages\
    \ of the object-\noriented representation are detected: (i) it provides a clear\
    \ modular structure for programming. In \nother words, the object-oriented representation\
    \ is beneficial for defining abstract datatypes when \nimplementation details\
    \ are hidden; (ii) objects can be reused within an across applications. It also\
    \ \nhelps to reduce the cost for development; (iii) the object-oriented representation\
    \ makes the CBR \nsystem easier for maintenance. Since this representation is\
    \ modular, part of the objects can be \nupdated without massive changes. However,\
    \ limitations of the object-oriented representation \ncannot be ignored. For example,\
    \ since such representation heavily relies on binary relations, it \nmight be\
    \ difficult to represent ternary relations. \n• \nOntology representation [178]:\
    \ Ontology is a formal explicit description of concepts and \ntheir relations.\
    \ It attempts to represent entities, ideas, and events, along with their \ninterdependent\
    \ properties and relations, on the basis of a system of categories. Within an\
    \ \nontology model, the main components include “Individuals” (instances or objects),\
    \ “Classes” \n(sets, collections, and concepts of things), “Attributes” (aspects,\
    \ properties, and features that \nclasses can have), “Relations” (in which way\
    \ classes and individuals are related to one \nanother), “Rules” (descriptions\
    \ of logical inferences), “Axioms” (assertions in a logical \nform), and “Events”\
    \ (changes of attributes or relations) [179]. An example of the ontology \nrepresentation\
    \ is shown in Figure 11 [180]. \nIn Figure 11, the observer indicates who describes\
    \ the case, the description clarifies what and \nhow the case is described, while\
    \ the target explains why the case is described. Therefore, the \nconcepts of\
    \ a case in the ontology representation are related by using the properties, like\
    \ \n“hasObserver”, “hasDescription”, and “hasTarget”. \n33 \n \n \nFigure 11.\
    \ An example of the ontology representation. \nVarious research works have contributed\
    \ to the ontology representation in CBR. Castro et al. \n[181] focused on a homogenous\
    \ conception of the case base with the aid of the ontology \nrepresentation, trying\
    \ to simplify case retrieval in case-based reasoning. Their conclusion pointed\
    \ \nout that cases may be recovered more effectively and efficiently in the initial\
    \ phase. Xiong et al. \n[182] combined CBR and the ontology representation for\
    \ modelling an e-government DSS. The \nontology was used to extract the case knowledge\
    \ and a similarity algorithm was adopted for case \nretrieval. El-Sappagh and\
    \ Elmogy [183] took advantage of ontology and fuzzy logic reasoning \nfor modelling\
    \ the knowledge within a case base in the diabetes mellitus domain. The fuzzy\
    \ \nontology representation was expected to improve the semantic and storage of\
    \ CBR knowledge \nbase. Zhukova et al. [184] proposed a knowledge-based approach\
    \ for supporting decision making \nin human resource management by employing CBR\
    \ and ontology. An algorithm for retrieving \nsimilar past cases was also designed\
    \ in their proposal. \nFrom above literatures, one of the major advantages of\
    \ applying the ontology representation \nis that by having the essential relationships\
    \ between concepts built into the concepts, it is possible \nfor performing automated\
    \ reasoning about data. Meanwhile, the ontology representation ensures \n34 \n\
    \ \na common understanding of information and enables to explicit domain assumptions.\
    \ As a \nconsequence, the interconnectedness and interoperability of ontology\
    \ models make it easier for \naddressing the challenges of accessing and querying\
    \ in large datasets. Though ontology provides \nan adequate tool for modelling\
    \ data, its usability surely comes with some limitations as well. For \ninstance,\
    \ data are usually imported from a new source into the RDF triples. It happens\
    \ that the \ndata are structurally inconsistent with the constraints set in the\
    \ ontology representation. \nConsequently, the new data have to be modified before\
    \ being integrated with what had already \nbeen loaded in the triples. \nSummary\
    \ of review of case representation methods \nAfter reviewing on the main case\
    \ representation methods (the feature vector representation, \nthe textual representation,\
    \ the frame-based representation, the object-oriented representation, and \nthe\
    \ ontology representation), a conclusion can be drawn that each representation\
    \ method has its \nown advantages and disadvantages.  \nThe choice of a particular\
    \ representation formalism is largely determined by the information \nto be stored\
    \ within a case. According to the content and characteristics of agricultural\
    \ cases, the \nfeature vector representation is selected. However, it is noticed\
    \ that this representation method \nfails to address the interconnectedness between\
    \ cases. In a case base, each case is stored \nindividually. Therefore, inspired\
    \ from the frame-based representation (the pointer concept), the \nfeature vector\
    \ representation is going to be further developed in this thesis. \n2.3.2. Review\
    \ of case retrieval \nCase retrieval plays an essential role in CBR systems because\
    \ the rest of steps (reuse, revise, \nand retain) cannot be further proceed without\
    \ successfully retrieving similar past cases at the first \nplace. Current studies\
    \ on the case retrieval tasks mainly concern the following two aspects: (i) \n\
    proposals of new similarity measures, and (ii) proposals of new indexing methods.\
    \ \nReview of similarity measures \nIn general, a similarity measure [185] is\
    \ a function that quantifies the similarity between two \nobjects. Usually, a\
    \ smaller distance means that the compared two objects have more \ncommonalities.\
    \ Similarity measures can be categorized mainly into two groups: (i) angle-based,\
    \ \nand (ii) distance-based measures. On the one hand, as one of the representative\
    \ angle-based \nmeasures, the cosine similarity measure [186] compares two non-zero\
    \ vectors and calculates the \ncosine angle between them. It evaluates the similarity\
    \ through their orientation, not magnitudes. \nA smaller cosine angle indicates\
    \ that compared vectors are more similar. On the other hand, \n35 \n \ntremendous\
    \ contributions towards distance-based similarity measures have been made, especially\
    \ \nthe Euclidean distance [187], the Manhattan distance [188], the Chebyshev\
    \ distance [189], and \nthe Hamming distance [190]. The smaller the distance is,\
    \ the more commonalities the compared \nobjects will have. The details of these\
    \ similarity measures are reviewed in the following. \n• \nCosine similarity measure:\
    \ The cosine similarity calculates the cosine angle between two \nnon-zero vectors.\
    \ It is widely used in case retrieval for CBR due to its simplicity and \neffectiveness.\
    \ The similarity of images, documents, and numeric values can be measured by \n\
    the cosine similarity because all these data can be represented by vectors. Mathematically,\
    \ \nthe cosine similarity can be formularized in Equation (1) [191]. \n\U0001D446\
    \U0001D456\U0001D45A(\U0001D465, \U0001D465′) = cos(\U0001D703) = \n∑\n\U0001D465\
    \U0001D456∗\U0001D465\U0001D456\n′\n\U0001D45B\n\U0001D456=1\n√∑\n\U0001D465\U0001D456\
    \n2\n\U0001D45B\n\U0001D456=1\n∗√∑\n\U0001D465\U0001D456\n′2\n\U0001D45B\n\U0001D456\
    =1\n                  (1) \nWhere \U0001D703 is the angle between vectors \U0001D465\
    \ and \U0001D465′. \U0001D465\U0001D456 and \U0001D465′\U0001D456represents the\
    \ \U0001D456\U0001D461ℎ attribute in the \nvectors \U0001D465 and \U0001D465′\
    \ respectively. The similarity between these two vectors will increase as the\
    \ \nvalue of cos(\U0001D703) increases. \nHassanien et al. [192] presented an\
    \ automatic CBR based system for assessing water quality \naccording to microscopic\
    \ images of fish gills and livers. The cosine similarity measure was used \nto\
    \ identify a small number of cases with the highest similarity from the case base\
    \ to the query. \nCompared with other similarity measures like Euclidean distance,\
    \ Canberra distance, and Squared \nchord distance, the proposed system achieved\
    \ water quality prediction accuracy of 97.9% when \nusing the cosine similarity\
    \ measure. Senanayke et al. [193] combined the fuzzy logic and CBR to \nbuild\
    \ an assistive tool for sports trainers, coaches, and clinicians for maintaining\
    \ athletes’ profiles, \nmonitoring their recoveries, and adjusting recovery protocols.\
    \ The cosine similarity matrix was \nused to retrieve the most similar past cases\
    \ from the identified cluster. The proposed system was \nverified through a group\
    \ of healthy and post-operated athletes. The experiment result showed the \nclassification\
    \ accuracy is more than 94%.  \n• \nEuclidean distance: The Euclidean distance,\
    \ also known as the Euclidean metric, calculates \nthe straight-line distance\
    \ between two points in the Euclidean space. It has been usually \nemployed to\
    \ measure the similarity of numeric, interval, and fuzzy variables. The formula\
    \ of \nthe Euclidean distance is defined in Equation (2). \n\U0001D437\U0001D456\
    \U0001D460\U0001D461(\U0001D465, \U0001D465′) = √∑\n(\U0001D465\U0001D456 − \U0001D465\
    \U0001D456\n′)2\n\U0001D45B\n\U0001D456=1\n                     (2) \n36 \n \n\
    Where \U0001D437\U0001D456\U0001D460\U0001D461() is the distance between compared\
    \ two points, while \U0001D465\U0001D456 and \U0001D465′\U0001D456 represents\
    \ the \n\U0001D456\U0001D461ℎ attribute in the vectors \U0001D465 and \U0001D465\
    ′ respectively. The similarity between these two points will \nincrease as the\
    \ value of \U0001D437\U0001D456\U0001D460\U0001D461() decreases. \nRahman et al.\
    \ [194] presented a retrieval-based decision support system for dermatoscopic\
    \ \nimages. The similarity between feature vectors was calculated by Bhattacharyya\
    \ and Euclidean \ndistance. Both measures were integrated into a single similarity\
    \ matching function for image \nretrieval. The experimental result showed that\
    \ the combined similarity measure was able to \nretrieve correct images, leading\
    \ to an improvement in diagnostic accuracy. Kwon et al. [195] \nevaluated the\
    \ performance of distance measurement methods for construction noise predictions\
    \ \nby using case-based reasoning. Euclidean distance was employed to measure\
    \ the shortest line \nsegment between two points in Euclidean space for case retrieval.\
    \ \n• \nManhattan distance: The Manhattan distance in N-dimensional space is the\
    \ sum of the \nlengths of the line segments between two points onto the coordinate\
    \ axes. The formula of the \nManhattan distance is defined in Equation (3). \n\
    \U0001D437\U0001D456\U0001D460\U0001D461(\U0001D465, \U0001D465′) = ∑\n|\U0001D465\
    \U0001D456 − \U0001D465\U0001D456\n′|\n\U0001D45B\n\U0001D456=1\n            \
    \          (3) \nWhere \U0001D437\U0001D456\U0001D460\U0001D461() is the distance\
    \ between compared two vectors, while \U0001D465\U0001D456 and \U0001D465′\U0001D456\
    \ represents the \n\U0001D456\U0001D461ℎ attribute in the vectors \U0001D465 and\
    \ \U0001D465′\U0001D456 respectively. The similarity between these two vectors\
    \ \nwill increase as the value of \U0001D437\U0001D456\U0001D460\U0001D461() decreases.\
    \ \n \nLi and Sun [196] adopted the CBR approach to predict business failures.\
    \ They used \nManhattan distance for case retrieval. The outputs from the CBR\
    \ system were then treated as \ninputs to a support vector machine (SVM) model\
    \ for combinations. The empirical result showed \nthat the proposed Multi-CBR-SVM\
    \ was feasible and effective. Ferreira and Oliveira [197] \nproposed a content-based\
    \ image retrieval method to provide specialists with decision supports for \n\
    analyzing the margin sharpness. The Manhattan distance was used to calculate the\
    \ similarity \nbetween the reference nodule and the image database. The authors\
    \ detected that the Manhattan \ndistance achieved a greater precision than the\
    \ Euclidean distance in regards to malignant nodules. \n• \nChebyshev distance:\
    \ The Chebyshev distance is defined as the greatest difference between \ntwo compared\
    \ vectors among any coordinate dimensions. The formula of the Chebyshev \ndistance\
    \ is defined in Equation (4). \n\U0001D437\U0001D456\U0001D460\U0001D461(\U0001D465\
    , \U0001D465′) = max (|\U0001D465\U0001D456 − \U0001D465\U0001D456\n′|)      \
    \                (4) \n37 \n \nWhere \U0001D437\U0001D456\U0001D460\U0001D461\
    () is the distance between compared two points, while \U0001D465\U0001D456 and\
    \ \U0001D465′\U0001D456 represents the \n\U0001D456\U0001D461ℎ attribute in the\
    \ vectors \U0001D465 and \U0001D465′ respectively. The similarity between these\
    \ two vectors will \nincrease as the value of \U0001D437\U0001D456\U0001D460\U0001D461\
    () decreases. \nRashid [198] built a CBR-based model for construction cost predictions.\
    \ The Chebyshev \ndistance was considered to measure the similarity between cases.\
    \ It ensured that relative cases \ncan be retrieved rapidly. Mousa and Yusof [199]\
    \ proposed an improved Chebyshev similarity \nmeasure in clustering analysis of\
    \ blood cancer images. The improved measure aimed at \nminimizing the distance\
    \ between any points and the cluster center of classes. The experimental \nresult\
    \ showed that the proposed measure can generate the smallest objective function\
    \ value and \nconverge at the lowest number of iterations. \n• \nHamming distance:\
    \ The Hamming distance is usually used to measure the similarity of \nstrings.\
    \ The length of strings should be equal. The Hamming distance counts the minimum\
    \ \nnumber of dis-matches between two strings. The formula of the Hamming distance\
    \ is defined \nin Equation (5). \n\U0001D437\U0001D456\U0001D460\U0001D461(\U0001D465\
    , \U0001D465′) = ∑\n(\U0001D465\U0001D456 ⊕ \U0001D465\U0001D456\n′)\n\U0001D45B\
    \n\U0001D456=1\n                      (5) \nWhere \U0001D437\U0001D456\U0001D460\
    \U0001D461() is the distance between compared two points, while \U0001D465\U0001D456\
    \ and \U0001D465′\U0001D456 represents the \n\U0001D456\U0001D461ℎ attribute in\
    \ the vectors \U0001D465 and \U0001D465′ respectively. The symbol ⊕ represents\
    \ the XOR operator. \nThe similarity between these two vectors will increase as\
    \ the value of \U0001D437\U0001D456\U0001D460\U0001D461() decreases. \nMustafa\
    \ [200] improved the Hamming distance by employing a probabilistic approach and\
    \ \napplied it to quick binary image matching. Compared with other binary image\
    \ matching methods \nlike correlation, sum of the absolute difference, and mutual\
    \ information, the improved Hamming \ndistance measure showed the superiority\
    \ among others. Zhang et al. [201] detected that the \ntraditional Hamming distance\
    \ measure may be insufficient to evaluate the similarity of binary \ncodes, thus\
    \ they proposed a weighted Hamming distance algorithm to rank the binary codes\
    \ of \nhashing methods. Extensive experiments were conducted and results demonstrated\
    \ the efficiency \nand accuracy of the improved measure. \nAfter reviewing the\
    \ above similarity measures, their shortcomings are detected as well. These \n\
    measures may generate wrong results under certain extreme circumstances [202-204].\
    \ For \nexample, the cosine similarity measure does not take vectors’ magnitudes\
    \ into consideration, thus \nit may have difficulties when meeting the following\
    \ situation shown in Figure 12. \n38 \n \n \nFigure 12. An extreme circumstance\
    \ when measuring with the cosine similarity. \n \nIn Figure 12, the target vector\
    \ is \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and it is compared with vectors \U0001D442\U0001D435\
    \n⃗⃗⃗⃗⃗ , \U0001D442\U0001D436\n⃗⃗⃗⃗⃗ , and \U0001D442\U0001D437\n⃗⃗⃗⃗⃗⃗ . On\
    \ \nthe one hand, though the angle between them is identical, there exists huge\
    \ differences between \ntheir magnitudes. However, due to the same value of the\
    \ cosine similarity measurement, vector \n\U0001D442\U0001D434\n⃗⃗⃗⃗⃗  is considered\
    \ similar to vectors \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D436\n⃗⃗⃗⃗⃗\
    \ , and \U0001D442\U0001D437\n⃗⃗⃗⃗⃗⃗ . On the other hand, the cosine similarity\
    \ \nbetween \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D436\n⃗⃗⃗⃗⃗ , and \U0001D442\
    \U0001D437\n⃗⃗⃗⃗⃗⃗  all equals to one, meaning that these vectors are exactly\
    \ the same. \nBut the fact tells a different story. It is obvious that these three\
    \ vectors are not the same due to \ntheir magnitude differences. Thus, it is concluded\
    \ that the cosine similarity measure may match \nwrong cases in the step of case\
    \ retrieval in the CBR system. \n \nIn terms of the distance-based measures, the\
    \ Euclidean distance also has certain drawbacks \n[205-207]. It may encounter\
    \ problems when the distances between compared vectors are the same. \nThis situation\
    \ is shown in Figure 13. \n39 \n \n \n \nFigure 13. An extreme circumstance when\
    \ measuring with the distance-based similarity. \nIn Figure 13, the target vector\
    \ is \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and it is compared with vectors \U0001D442\U0001D435\
    \n⃗⃗⃗⃗⃗ , \U0001D442\U0001D436\n⃗⃗⃗⃗⃗ , and \U0001D442\U0001D437\n⃗⃗⃗⃗⃗⃗ . \n\
    Though all these vectors have different magnitudes and orientations, the distance\
    \ between them \nis identical, indicating that vectors \U0001D442\U0001D435\n\
    ⃗⃗⃗⃗⃗ , \U0001D442\U0001D436\n⃗⃗⃗⃗⃗ , and \U0001D442\U0001D437\n⃗⃗⃗⃗⃗⃗  are all\
    \ similar to the vector \U0001D442\U0001D434\n⃗⃗⃗⃗⃗ . \nMeanwhile, it is acknowledged\
    \ that each attribute in an individual vector may offer different \ncontributions.\
    \ However, the Euclidean distance treats all involved attributes equally. Thus,\
    \ it is \nconcluded that the Euclidean distance measure can be further improved\
    \ to retrieve more accurate \ncases in the CBR systems. \nIn regards to the Manhattan\
    \ distance, the Chebyshev distance, and the Hamming distance, \nthey all have\
    \ the same drawbacks as the Euclidean distance measure. When the distance between\
    \ \ncompared vectors is the same, these measures can hardly tell which vector\
    \ is more similar to the \ntarget. \nReview of indexing methods \nAs a computational\
    \ data structure, an index enables a case to be stored and searched in \nmemory.\
    \ Case indexing assigns indexes to cases for facilitation their retrieval [208]\
    \ and it plays \na key role in case base maintenance. Many researchers have concerned\
    \ the indexing issues. \n40 \n \nHonigl and Kung [209] proposed a data quality\
    \ index method for maintaining the case base \nand avoiding storing redundant\
    \ cases. Three indices (average solutions per case, count of similar \nretained\
    \ queries, and missing values) were used to build an index for evaluating the\
    \ quality of the \ncase base. Wiltgen et al. [210] presented two indexing methods,\
    \ named functional indexing and \nstructural indexing. Both indexing methods generated\
    \ separate discrimination networks and had \nmechanisms for preventing the network\
    \ from having duplicate nodes. Similar past cases could be \nretrieved by adopting\
    \ the indexing methods and similarity measurements. Ahmad et al. [211] \nadopted\
    \ the locality sensitive hashing (LSH) technique for obtaining short binary codes\
    \ to \nrepresent medical radiographs. These hashing codes enabled indexing and\
    \ efficient retrieval in \nlarge scale image collections. Durmaz and Bilge [212]\
    \ proposed an approach named randomized \ndistributed hashing (RDH), which used\
    \ LSH in a distributed scheme. RDH randomly distributed \ndata to different nodes\
    \ on a cluster and used hash functions for indexing. Then the query sample \n\
    was locally searched in different nodes during the query stage. The experimental\
    \ result showed \nthat the proposed distributed scheme had great potential to\
    \ search images in large datasets with \nmultiple nodes. Ahmed and Sarma [213]\
    \ detected that accuracy of a system degraded with the \nincrease of the size\
    \ of database, therefore an indexing approach was designed to deal with the \n\
    feature deviation under noise. Considering the retrieval task, the proposed indexing\
    \ approach \nprovided a higher hit rate than existing approaches, even at a low\
    \ penetration rate. \nFrom the above review on current literatures, it is concluded\
    \ that indexing methods have \ngreat influence on case retrieval and case base\
    \ maintenance. LSH is especially popular in case \nindexing. LSH refers to use\
    \ a family of functions to map hash data points into buckets [214]. As \na result,\
    \ data points that are near to each other will be located in the same bucket with\
    \ high \nprobability, while data points that are far from each other will be likely\
    \ placed in different buckets. \nThis makes it easier and more efficient to identify\
    \ past cases that are similar to the new one. \nHowever, LSH does not guarantee\
    \ the accuracy of classified cases sometimes. For example, two \nsimilar data\
    \ points may be separated into different buckets due to the design of hashing\
    \ functions. \nThus, improvements on new indexing methods for case retrieval and\
    \ case base maintenance are \nexpected. It is worth noticing that none of above\
    \ literatures mentioned mining the internal \nassociations between past cases.\
    \ In other words, each case is still individually stored and searched. \nSummary\
    \ of review of case retrieval \nIn conclusion, though current similarity measures\
    \ and indexing methods have proved to be \neffective in case retrieval tasks in\
    \ case-based reasoning, they still require further development for \nenhancing\
    \ the accuracy, efficiency, and robustness of case retrieval. As a consequence,\
    \ a novel \ntriangular similarity measure is proposed in this thesis for overcoming\
    \ the drawbacks of current \n41 \n \nmeasures. Meanwhile, a fast retrieval algorithm\
    \ is developed for retrieving similar past cases by \ncomparing a fewer number\
    \ of cases. This retrieval algorithm is expected to achieve greater \nefficiency\
    \ and accuracy. \n2.3.3. Review of solution reuse and revision \nThe process of\
    \ reuse in the CBR 5R cycle concerns to propose a solution for resolving the \n\
    new problem based on solutions of retrieved similar past cases [215]. A CBR system\
    \ will be \ndegraded to a case retrieval system without reusing solutions of previous\
    \ cases. Reusing a \nretrieved case can be as easy as returning the retrieved\
    \ solution to the new problem without any \nchanges. This strategy is appropriate\
    \ for CBR applications in the classification tasks where each \nsolution is likely\
    \ represented frequently in the case base. However, it becomes more difficult\
    \ \nwhen there are significant differences between the new problem and the retrieved\
    \ cases. Under \nthis circumstance, the process of revising the retrieved solution\
    \ is required for adaptation purpose. \nThis is also the reason why researchers\
    \ usually concern the issue of solution reuse and revision in \ntheir research\
    \ works at the same time. For revision, it can be considered as a situation-action\
    \ pair. \nThe situation part contains the difference between the new and retrieved\
    \ problems, while the \naction part captures the update for the retrieved solution.\
    \ In general, three main categories of \nrevision methods are summarized [216]:\
    \ (i) substitution, (ii) transformation, and (iii) generative \nadaptation. \n\
    • \nSubstitution: This revision method simply replaces some parts of the retrieved\
    \ solution with \nnew values if appropriate. Lieber [217] applied the revision\
    \ theory to CBR for solution \nadaptation. This application claimed to keep as\
    \ much as possible from the solution to be \nrevised, while being consistent with\
    \ the domain knowledge. Ji et al. [218] improved the cost \nprediction accuracy\
    \ in multifamily housing projects by employing a CBR revision model. \nTheir revisional\
    \ formula was developed based on directly adjusting the proposed solution. \n\
    The process of revision focused on those data which had great influence on the\
    \ overall \nobjective. Yan et al. [219] presented an attribute difference revision\
    \ method in a CBR system. \nA support vector regression model was used to detect\
    \ the difference between the target case \nand similar past cases, and therefore\
    \ revising the value to generate the new solution. \n• \nTransformation: This\
    \ revision method alters the structure of the solution for adaptation by \nadding,\
    \ deleting, or replacing parts of the retrieved solutions, i.e. altering steps\
    \ in a plan. Yan \nand Wang [220] proposed a retrieval-based revision method for\
    \ the CBR classifiers. After \nthe reuse step, the target cases and suggested\
    \ solutions were divided into a trustworthy set \nand an untrustworthy set in\
    \ accordance with a threshold value of trustworthiness. Cojan and \nLieber [221]\
    \ applied a belief revision approach to CBR by defining an adaptation operator\
    \ \n42 \n \nthat took into account both the domain knowledge and the adaptation\
    \ knowledge. In \nparticular, a rule-based adaptation process was mentioned in\
    \ their proposal. Ontanon et al. \n[222] explained how revision can be performed\
    \ by attacking specific parts of a case and how \nthey can guide and prevent repentances\
    \ in future cases. It is also worth noting that some \nresearchers employed evolutionary\
    \ algorithms for solution revision. These research works \nhave been found in\
    \ [223-225]. \n• \nGenerative adaptation: Differing from substitution and transformation,\
    \ this revision method \nderives the new solution by replaying the method used\
    \ to derive the retrieved solution, instead \nof directly revising the retrieved\
    \ solution. Chen et al. [226] proposed a self-adaptive \nmechanism through an\
    \ incremental generative model, aiming at adapting the system \narchitecture to\
    \ the changing environments and contexts. Hong et al. [227] presented a \nprincipled\
    \ way to perform structured domain adaption for semantic segmentation. The \n\
    proposed conditional generator and the discriminator competed against each other,\
    \ so that \nthe generator learned to produce the result. Stuikys et al. [228]\
    \ introduced a stage-based \ngenerative learning object model with the capability\
    \ of automatic generation and adaptation. \nTheir proposal shared a similar structure\
    \ as the two-level generic models. \nThe characteristics of the above three revision\
    \ methods are summarized in Table 2 according \nto the review. \nTable 2. Characteristics\
    \ of three revision methods. \nCharacteristics \nSubstitution \nTransformation\
    \ \nGenerative adaptation \nComplexity \nLow \nHigh \nHigh \nAdaptability \nHigh\
    \ \nMedium \nHigh \nExtendibility \nLow \nHigh \nHigh \nDependence on \nretrieved\
    \ solutions \nHigh \nHigh \nLow \nApplicable scenario \nSimple \nComplex \nComplex\
    \ \nSolution reuse and revision is a challenging task in CBR. Revision methods\
    \ like substitution \nand transformation usually update the retrieved solution\
    \ by reasoning about how the differences \nbetween the new problem and past cases\
    \ are reflected in the adaptation process. Meanwhile, the \ngenerative adaptation\
    \ method is likely to perform a new reasoning process for providing an update\
    \ \nsolution. As a consequence, the acquisition of adaptation knowledge requires\
    \ substantial \nengineering efforts in the future.  \n43 \n \nIn conclusion, the\
    \ substitution method is adopted in this thesis for reusing and revising \nretrieved\
    \ solutions according to Table 2. \n2.3.4. Review of case retention \nRetention\
    \ is the process of storing the result as experiences in memory (i.e. a case base)\
    \ [216]. \nA CBR system is supposed to incorporate new useful results, as well\
    \ as forgetting worthless ones. \nAs the last step of the CBR cycle and also the\
    \ easiest part being ignored, the process of retention \nis not only closely related\
    \ to maintain the case base, but also has influence on the reasoning \nefficiency\
    \ and accuracy. Three issues have been pointed out as follows [229]. \n• \nIf\
    \ a worthless case is added into the case base instead of forgetting it, it may\
    \ bring harmful \nconsequences because noisy cases can lead to difficulties for\
    \ retrieval tasks. \n• \nIf a useful case is forgotten instead of retaining it,\
    \ it may weaken the ability of revision in the \nCBR systems. \n• \nIf new cases\
    \ are continuously added to the case base without adopting a proper retention\
    \ \nstrategy, it may also reduce retrieval efficiency. \nGenerally, there are\
    \ two main strategies adopted in the process of retention, named \nremembering\
    \ (addition) [230] and forgetting (deletion) [231] strategies. Yan et al. [232]\
    \ proposed \nan improved dynamic maintenance method for the CBR systems. They\
    \ imitated the memory \nfunction of the human brain to selectively save new cases,\
    \ update the forgotten values, and \nintentionally delete the old cases. These\
    \ policies were proved to significantly reduce the time and \nspace complexity,\
    \ as well as to improve the accuracy of the CBR classifiers. Yang and Zhu [233]\
    \ \naddressed the issue of keeping the case base concise and complete by defining\
    \ a case-addition \nmaintenance policy. Their proposal demonstrated that the coverage\
    \ of the case base computed by \nthe case-addition policy is better than the optimal\
    \ case-base coverage by a fixed lower bound. \nYang and Wu [234] presented a case\
    \ base maintenance method that partitioned cases into clusters. \nNew case bases\
    \ can be constructed based on those clusters, resulting in a smaller scale. Therefore,\
    \ \ncase retrieval tasks can be easily performed within the contents of the new\
    \ case base. Perner [235] \nalso took advantage of the clustering theory and introduced\
    \ case base maintenance method based \non the approximate graph subsumption. Two\
    \ strategies were applied, named divide-and-conquer \nand split-and-merge, allowing\
    \ to better fit the hierarchy to the actual structure of the application. \nTsang\
    \ and Wang [236] concerned the issue of removing redundant cases for maintaining\
    \ the CBR \nsystems. Their proposal was on the basis of the generalization capability\
    \ of cases, aiming at \nidentifying representative cases. The experimental result\
    \ showed the effectiveness of removing \nredundant cases, as well as the ability\
    \ of preserving a satisfying degree of the accuracy of solutions. \nSalamo and\
    \ Golobardes [237] introduced different sort-out techniques for case base maintenance.\
    \ \n44 \n \nTheir proposal was built upon a rough set competence model. The ultimate\
    \ objective was to \nmaintain the competence of the case base and to reduce its\
    \ size as much as possible. \nIn conclusion, it is acknowledged that both addition\
    \ and deletion strategies play significant \nroles in case retention and case\
    \ base maintenance. As a consequence, this thesis is going to adopt \nboth strategies\
    \ in the CBR system. Meanwhile, due to the adoption of an associated case \nrepresentation,\
    \ this thesis also considers the update of these associations when retaining new\
    \ cases \nin the case base. \n2.3.5. Summary of the case-based reasoning approach\
    \ \nAfter deeply reviewing the CBR approach, it is found that each step (represent,\
    \ retrieve, reuse, \nrevise, and retain) within the CBR cycle is under researched.\
    \ Though current contributions have \nproved to be effective in CBR applications\
    \ to some extent, their shortcomings cannot be ignored \nand require further improvements.\
    \ Most importantly, these contributions have provided valuable \ninspirations\
    \ for developing new design of CBR systems for smart agriculture. For applying\
    \ the \nCBR approach to model an agricultural DSS, some issues are listed as follows.\
    \ \n• \nCase representation: Interrelations between cases are ignored in most\
    \ case representation \nmethods. However, these interrelations not only enrich\
    \ the content of an individual case, but \nalso enable fast case retrieval. Consequently,\
    \ none of the existing approaches fulfil our \nrequirements and a new case representation\
    \ method is expected. \n• \nCase retrieval: Current case retrieval algorithms\
    \ usually intend to traverse all the past cases \nfor identifying a list of similar\
    \ ones, leading to low retrieval efficiency. Meanwhile, current \nsimilarity measures\
    \ have natural defect and result in wrong retrieval results. When the \nsimilarity\
    \ measurement is the same, it is hard to tell the differences between compared\
    \ cases. \nThus, the improvements on proposing new similarity measures are expected.\
    \ \n• \nSolution reuse and revision: The acquisition of adaptation knowledge requires\
    \ substantial \nengineering efforts. Because the solutions of retrieved past cases\
    \ do not always fit to the new \nproblem. Though three main categories of revision\
    \ methods have been developed, the \nadaptation process varies in the content\
    \ of problem statements and structures of solutions. As \na consequence, reusing\
    \ and revising solutions in the CBR system is a challenging task. \n• \nCase retention:\
    \ Though addition and deletion strategies have been well developed, few \nliteratures\
    \ addressed the issue of retaining the learned cases with an associated case structure.\
    \ \nProposing a new mechanism for updating the association is necessary as well.\
    \ \nLastly, for applying the CBR approach to develop a DSS for agriculture, the\
    \ seven problems \nstated in Section 1.3 should be also taken into account. \n\
    45 \n \n3 \nThe framework of \ndecision support systems \nfor smart agriculture\n\
    46 \n \nThis chapter presents the overview of the AFarCloud platform, as well\
    \ as how a specific \ndomain decision support system serves the AFarCloud platform\
    \ by integrating an algorithm \nmanage component and an algorithm toolbox component.\
    \ \n3.1. General architecture of the AFarCloud platform \nAs the decision support\
    \ system for smart agriculture is developed within the AFarCloud \nproject, it\
    \ is necessary to understand the architecture of the AFarCloud platform, shown\
    \ in Figure \n14. \n \nFigure 14. The architecture of the AFarCloud platform.\
    \ \nThe AFarCloud platform consists of three major functional components: (i)\
    \ the farm \nmanagement system, (ii) the semantic middleware, and (iii) deployed\
    \ hardware. Apart from these \nfunctional components, the AFarCloud platform also\
    \ interconnects with other data sources like \nthird-party data and legacy systems\
    \ databases.  \n47 \n \n3.1.1. The semantic middleware in the AFarCloud platform\
    \ \nIn Figure 14, the semantic middleware is a software layer used to hide the\
    \ underlying \ncomplexity of hardware and services in distributed systems. As\
    \ a consequence, the application \nlayers can access resources in a unified way.\
    \ In the AFarCloud platform, the middleware uses \nsemantic models which are specified\
    \ by an ontology to abstract the heterogeneity of the \nunderlying resources and\
    \ to ensure that all the information is stored according to a common \ninformation\
    \ model that guarantees interoperability. \nThe semantic middleware acts as a\
    \ communication centralizer, disseminating messages \nbetween the farm management\
    \ system and the hardware layer. The semantic middleware is also \nin charge of\
    \ unifying, processing, and analyzing the data coming from, or directed to, different\
    \ \ntypes of cyber-physical systems deployed in the AFarCloud platform. \nMost\
    \ of the AFarCloud middleware components are hosted by the cloud infrastructure\
    \ \ndeployed in the project, to take advantage of the features provided by cloud\
    \ resources. Cloud \ncomputing is based on the use of remote serves hosted on\
    \ the Internet to manage infrastructure \nand data, which provides promising benefits\
    \ like flexibility and scalability in infrastructure design, \ncost reduction,\
    \ and guaranteed reliability. Other components of the middleware need to be \n\
    deployed at the edge in the facilities of the farm. These components are listed\
    \ in the following. \n• \nImage processing platform: Due to the large size of\
    \ the images processed by this component \nand taken by the UAVs, the loading\
    \ of these images is carried out offline (i.e. through a \nmemory stick), to minimize\
    \ errors and communication costs in the transmission of files and \nto speed up\
    \ the loading process. \n• \nDDS manager: This module is responsible for processing\
    \ the real-time communication with \nUAVs. Therefore, this module should be deployed\
    \ as close as possible to the place where \ndata are generated, in order to minimize\
    \ latencies. \n• \nData pre-processor: For complex sensors, pre-processing data\
    \ is helpful to reduce latency as \ndata do not have to traverse over the network\
    \ to the cloud for processing. By only sending \nimportant data over the network,\
    \ the edge computing reduces both the data traversing the \nnetwork, the processing\
    \ time, and the cost of both transmission and storage. For simple \nsensors that\
    \ do not need pre-processing, it will be done in the cloud. \nThe semantic middleware\
    \ also provides the following interfaces to the rest of elements of \nthe AFarCloud\
    \ architecture. \n \n48 \n \n• \nInterface with the farm management system: \n\
    o Apache Thrift interface: For querying AFarCloud repositories, sending missions\
    \ to \nvehicles, sending commands to actuators, and collecting mission results,\
    \ sensor \nmeasurements, and alarms. \no Web Map Service (WMS) interface: For\
    \ retrieving images from the image catalogue. \no Apache Kafka interface: For\
    \ the DSS to consume streaming data in real-time and for \nenabling real-time\
    \ analytics. \n• \nInterface with the hardware layer: \no Data distribution service\
    \ (DDS) interface with UAVs and UGVs: For sending \ncommands and collecting results\
    \ and alarms. The DDS communications are managed in \nreal-time. \no ISOBUS interface\
    \ with ISOBUS systems: For sending agricultural tasks and collection \nresults.\
    \ \no MQTT interface with IoT compatible devices: For collecting measurements\
    \ from \nsensors, sending commands to actuators, collecting telemetry from tractors.\
    \ The MQTT \ncommunications are managed in real-time. \no Representational state\
    \ transfer (REST) interface with IoT compatible devices: For \ncollecting sensors\
    \ measurements. \n3.1.2. The hardware layer in the AfarCloud platform \nIn Figure\
    \ 14, the hardware layer can be divided into the following categories. \n• \n\
    Sensors: Multispectral sensor, thermal camera, soil sensor, environmental sensor\
    \ (i.e. air \ntemperature, air humidity, wind, CO2, light intensity, etc.), vehicle\
    \ data, and so on. \no Standalone sensors. \no Collars: Smart neck collars for\
    \ monitoring cows. \no Wireless sensor network (WSN): A group of spatially dispersed\
    \ and dedicated sensors \nfor monitoring and recoding the physical conditions\
    \ of the environment. \n• \nActuators: Devices that are responsible for moving\
    \ and controlling a mechanism or a system. \nSome examples included in the actuator\
    \ category refer to the air normal temperature and \npressure (NTP) actuator (for\
    \ taking filtering actions and improving the indoor air quality), \nwater NTP\
    \ actuator (for bio-stimulating the crop growth), greenhouse rooftop inflator\
    \ (for \nautomatically inflate the roof and protect the greenhouse from rain/hail\
    \ weather), etc. \n• \nGround vehicles (GVs): three different types of GVs are\
    \ covered by the AfarCloud platform. \n49 \n \no UGVs: These vehicles are able\
    \ to autonomously execute missions defined by the farm \nmanagement system. Missions\
    \ involve the autonomous movement of UGVs around certain \nareas of the demonstrators.\
    \ \no Legacy systems: GVs are able to autonomously execute a list of agricultural\
    \ tasks \ndefined by the farm management system. It is not the goal of those missions\
    \ to implement \nautonomous navigation (due to the lack of auto-steer abilities\
    \ of tractors, i.e. marching to a \nwaypoint). Two different types of legacy GVs\
    \ are considered in the AfarCloud platform. \n▪ \nISOBUS systems: Legacy GVs are\
    \ able to semi-autonomously \nexecute agricultural tasks carried out by the ISOBUS\
    \ compliant \nimplements of ISOBUS tractors. \n▪ \nTractors: Legacy GVs are able\
    \ to execute and configure specific \ncommands and parameters of the CAN bus of\
    \ the tractors. \n• \nUAVs: Drones are able to autonomously execute missions defined\
    \ by the farm management \nsystem, that consists of a list of commands. Missions\
    \ involve the autonomous movement of \nUAVs around certain areas of the demonstrators.\
    \ \n3.1.3. The farm management system in the AfarCloud platform \nIn Figure 14,\
    \ the farm management system (in the green block) is composed of a mission \n\
    management tool (MMT), a decision support system, a system configurator, and applications\
    \ for \nusers to manage and monitor the whole system, plan cooperative missions,\
    \ configure key \nhardware components, and make decisions. The internal connection\
    \ within the farm management \nsystem is shown in Figure 15. The MMT, the DSS,\
    \ and the system configurator are connected \nthrough a graphical user interface\
    \ plugin, while the rest of components communicates with each \nother through\
    \ the REST interface, Apache Thrift interface, and WMS protocol.  \n \n50 \n \n\
    \ \nFigure 15. The internal connection within the farm management system. \n \n\
    In Figure 15, the farm management system consists of the following components.\
    \ \n• \nMMT: The MMT component is used to define the conditions for cooperative\
    \ missions \ninvolving UAVs and UGVs ranging from fully autonomous UGVs to ISOBUS\
    \ systems. The \nvarious MMT solution will allow the user to access both services\
    \ in the MMT as well as \nthose belonging to the decision support system and system\
    \ configuration modules. \nMeanwhile, there is a main MMT for the operators to\
    \ process data, plan a mission, monitor \na mission, evaluate the results and\
    \ work with the decision support system, and two specific \nmobile MMT versions\
    \ for monitoring vehicles’ missions, the UAV-MMT for the pilots of \nthe UAVs\
    \ and the tractor-MMT, dedicated to in-vehicle usage. \n• \nDSS: The DSS component\
    \ is employed to assist users in making decisions during pre-\nmission, ongoing-mission,\
    \ and post-mission. \n• \nSystem configurator: The system configurator is adopted\
    \ to configure the AFarCloud \ninstance of each farm, to provide for the registration\
    \ of the farm inventory, such as UGVs \nand ISOBUS systems, UAVs and devices (sensors\
    \ and actuators), and to perform pre-mission \nstatus control of the vehicles\
    \ that are involved in a mission. \n• \nApplications: The designed applications\
    \ are supposed to provide users with functions of \nmanaging and monitoring the\
    \ whole AFarCloud system. \n \n51 \n \n3.2. Specific domain DSS in the AFarCloud\
    \ platform \nSustainable agriculture production and processing systems have become\
    \ more complex with \ninvolvement of biological, chemical, physical processes,\
    \ such as soil, water, climatic scenarios \nand crop management practices respectively.\
    \ A DSS can offer a framework within the complex \nsystems. By being represented\
    \ in a structured way, the complex systems can be more easily \nunderstood. \n\
    As concluded in Section 2.2, a DSS is an interactive computer-based system that\
    \ helps \ndecision makers who use communication technologies, data, documents,\
    \ knowledge, and models \nto identify and solve problems, as well as complete\
    \ decision process tasks. As a general term for \nany computer application, a\
    \ DSS is supposed to have the ability of improving the decision-making \nprocess.\
    \ Over the past 40 years, numerous researchers have conceptualized and classified\
    \ DSSs \nin three different categories. \n• \nPassive DSS: A system of aids to\
    \ decision-making process, however, it cannot carry out an \nexplicit decision,\
    \ suggestion, or solution. \n• \nActive DSS: A system of aids to carry out an\
    \ explicit decision, suggestion, or solution. \n• \nCooperative DSS: A system\
    \ that allows decision-makers to modify, supplement, and refine \nthe decision\
    \ supports provided by the system, before sending them back to the system for\
    \ \nvalidation. \nIn the AFarCloud platform, the DSS is designed as a cooperative\
    \ one. The main objective of \nthe AFarCloud DSS is to gather and analyze available\
    \ data, which are collected from sensors and \nretrieved from historical datasets.\
    \ By taking advantage of all the data, the DSS is able to plan, and \ninterpret\
    \ ongoing processes, therefore helping users to make correct decisions, analyze\
    \ the \noutcome, and finally converting raw data into practical knowledge. Some\
    \ DSS use cases in the \nAFarCloud platform are concluded as follows, including\
    \ decision support on pre-mission, \nongoing-mission, and post-mission. \n• \n\
    Pre-mission: This refers to the use cases before starting the mission. \n52 \n\
    \ \no Consulting the forecast: In order to keep the integrity of the vehicles\
    \ and structure, the \nDSS shall consult both the forecast and the current local\
    \ weather, and then warn the user if \nthe safety conditions are met or not (i.e.\
    \ heavy wind and rain). \no Listing the programmed missions, the available vehicles,\
    \ and their state: When \nplanning a mission, the user needs to be aware of the\
    \ pre-programmed missions to prevent \noverlaps. Meanwhile, the number of available\
    \ vehicles and their state (i.e. battery level) \nshould be checked as well. \n\
    o Checking the equipment: Before starting the mission, a set of tests on the vehicles\
    \ and \nequipment should be performed, in order to ensure their proper functions.\
    \ Depending on \nthe target of missions, the equipment to be tested may vary.\
    \ The results of these checks \nmust be reported to the user. \n• \nOngoing-mission:\
    \ This refers to the use cases when the mission is being executed. \no Reporting\
    \ the sensor data: The DSS should continuously report to the users the main \n\
    sensor data for detecting potential problems in real-time in case the automatic\
    \ algorithm \nfailed to do so. \no Detecting possible problems after processing\
    \ the gathered data: Whenever some \nproblems are detected (i.e. extremely dry\
    \ area), the user must be warned to take certain \nactions if appropriate. The\
    \ action might be asking for a more detailed survey. \no A non-critical sensor\
    \ stops working: Whenever a non-critical sensor stops working, the \nuser should\
    \ be notified. Then, the user can verify the warning and decide if the mission\
    \ \nmay continue or not without the data from that sensor. \no The level of battery\
    \ is not enough to finish the mission: Due to unexpected situations \n(i.e. an\
    \ abnormal energy consumption), the calculations in pre-mission stage for the\
    \ battery \nlevel might fail. If this event is detected during the mission (but\
    \ the battery is not in a \ncritical level), the user may decide either to continue\
    \ the mission until the vehicle reaches \nthe failsafe battery level and return\
    \ or ask for an immediate return and abort the current \nmission. \no Reporting\
    \ the vehicle and mission state: A DSS must provide the information about \nthe\
    \ vital sensors of the vehicles, as well as the current state of the missions.\
    \ \n• \nPost-mission: This refers to the use cases when the mission has been completed.\
    \ \no Saving the mission parameters: If a mission was successfully completed,\
    \ the DSS \nshould ask to the user if the mission profile is to be saved and used\
    \ in future operations. \no Data processing: Although the outputs of each sensor\
    \ are predefined, the user may ask \nto generate additional outputs (if the corresponding\
    \ sensors were used during the mission). \no Downloading/displaying outputs: The\
    \ user should have the option to download or view \nthe outcomes of the mission.\
    \ \n53 \n \no Generating notifications based on the processed data: The DSS may\
    \ generate a \nmission report, indicating the main outcomes of the mission. Using\
    \ the previously known \ninformation, the new data is compared with it and the\
    \ automatic analysis can be done to \ngenerate suggestions for future operations.\
    \ \n3.3. Framework of the AFarCloud DSS \nThe framework of the DSS within the\
    \ farm management system is presented in Figure 16. \nTwo main components are\
    \ involved in this framework, including an algorithm manager and an \nalgorithm\
    \ toolbox. \n• \nAlgorithm manager: This component is in charge of managing the\
    \ decision support \nalgorithms and interacting with users through the MMT. The\
    \ users can configure available \nalgorithms by sending commands like listing\
    \ registered algorithms, starting an algorithm, \nstopping an algorithm, and checking\
    \ the status of a running algorithm. \n• \nAlgorithm toolbox: This component registers\
    \ the decision support algorithms and provides \nthe access to the cloud databases\
    \ and external databases or services. Data retrieved from these \ndatabases are\
    \ treated as inputs to the selected algorithm for supporting their computation.\
    \ \nUnder the circumstance that the algorithm fails to provide any results, the\
    \ algorithm toolbox \nwill send an exception to the algorithm manager, asking\
    \ for any further requests. In general \ncases, the algorithm forwards the results\
    \ to the algorithm manager. \n \nFigure 16. The framework of the decision support\
    \ system. \n54 \n \nIn Figure 16, the core of the DSS counts on the algorithms,\
    \ since the decision supports are \ngenerated by these algorithms. Based on the\
    \ characteristics, the algorithms can be classified into \ntwo categories. \n\
    • \nCalculation of complex metrics for crop and animal welfare from raw data:\
    \ Note that these \ncomplex metrics are useful only if they are solving the right\
    \ problem and in a way that is \nunderstood by the users. For example, for calculating\
    \ the percentage of water stress in crop, \nthe metrics should include: (i) soil\
    \ humidity in several depths, (ii) solar radiation, (iii) amount \nof watering,\
    \ (iv) amount of rainfall, (v) soil type, etc. \n• \nRecommendation algorithms:\
    \ This stage represents the next step after calculating the output \nmentioned\
    \ above. The goal of the recommendation algorithm is to integrate metrics and\
    \ \nsuggest different alternatives, or solutions to the users, in order to help\
    \ them reach an \nobjective. An example of this recommendation could be when the\
    \ crops are irrigated \nconsidering the following: (i) levels of water stress\
    \ forecasting next days, (ii) low levels of \ndisease risk, (iii) expected amount\
    \ of irrigation, etc. \nIt is worth mentioning that data for both types of algorithms\
    \ are stored in the AFarCloud \nrepository. The DSS itself does not store any\
    \ data, although algorithms could use local \nrepositories for their own calculations.\
    \ \nIn conclusion, the DSS framework provides the architectural supports for integrating\
    \ \ndifferent decision support algorithms with great scalability, interoperability,\
    \ and robustness. This \nthesis focuses on designing and implementing an algorithm\
    \ (embedded in the algorithm toolbox) \nby adopting the CBR approach for providing\
    \ users with decision supports on managing farming \noperations. \n55 \n \n4 \n\
    An improved case-\nbased reasoning approach \nfor the decision support \nsystem\n\
    56 \n \n    As detected in Section 2.3, the typical CBR approach might be insufficient\
    \ to provide \naccurate results due to the improper case representation method,\
    \ the imprecise similarity measure, \nthe low-efficient case retrieval algorithm,\
    \ the poor solution reuse and revision strategy, and the \nrough case retention\
    \ approach. As a consequence, this thesis tries to improve each step within the\
    \ \nCBR circle for better serving decision support systems in smart agriculture.\
    \ In the following \nsubsections, an associated case representation formalism\
    \ is proposed for overcoming the \nshortcomings of the feature vector representation.\
    \ A triangular similarity measure and a fast case \nretrieval algorithm is proposed\
    \ for improving the efficiency and accuracy of case retrieval. A \nlearning-based\
    \ approach is proposed for solution reuse and revision. Lastly, an associated\
    \ case \nretention approach is presented for storing learned cases. \n4.1. An\
    \ associated case representation method \nThe proposed associated case representation\
    \ is on the basis of the feature vector \nrepresentation. Because agricultural\
    \ cases are usually composed of representative features and \ncorresponding values,\
    \ like soil moisture, soil temperature, air humidity, sunlight and radiation.\
    \ \nHowever, differing from the feature vector representation, this proposal extends\
    \ the “problem-\nsolution” structure with an additional association part. Consequently,\
    \ the proposed association \ncase representation is under the structure of “problem-solution-association”.\
    \ \n4.1.1. Generation of the association table \nThe association part enables\
    \ a single case to be interconnected with other relevant cases, \naiming at mining\
    \ the relationships between cases. Within a case base, a past case could be similar\
    \ \nor dissimilar to several other cases. An example of a case base is given in\
    \ Table 3. This case base \ncontains six past cases and each case has four features.\
    \ After normalization [238], all the cases \nare visualized in Figure 17. \nTable\
    \ 3. An example of a case base. \nCase ID \nFeature 1 \nFeature 2 \nFeature 3\
    \ \nFeature 4 \ncase 1 \n10 \n103 \n55 \n21 \ncase 2 \n15 \n99 \n79 \n98 \ncase\
    \ 3 \n11 \n105 \n52 \n22 \ncase 4 \n18 \n60 \n89 \n105 \ncase 5 \n9 \n112 \n60\
    \ \n25 \ncase 6 \n16 \n153 \n95 \n44 \n57 \n \n \nFigure 17. The visualization\
    \ of six cases in the case base. \nAccording to the visualization result in Figure\
    \ 17, it is obvious that case 1 is similar to cases \n3 and 5 because their data\
    \ deviation is small. Meanwhile, case 1 is dissimilar to cases 4 and 6 \nbecause\
    \ their data distribution has major differences. This result supports that a past\
    \ case could \nbe similar or dissimilar to several other cases. Consequently,\
    \ an association table for the case base \ncan be constructed in Table 4 and the\
    \ association connection between each case is presented in \nFigure 18. Each past\
    \ case is associated with similar and dissimilar cases. \nTable 4. The association\
    \ table for the case base. \nCase ID \nSimilar association \nDissimilar association\
    \ \n1st similar \n \n2nd similar \n \n1st dissimilar \n \n2nd dissimilar \n \n\
    case 1 \ncase 3 \n \ncase 5 \n \ncase 4 \n \ncase 6 \n \ncase 2 \ncase 4 \n \n\
    case 6 \n \ncase 3 \n \ncase 5 \n \ncase 3 \ncase 1 \n \ncase 5 \n \ncase 4 \n\
    \ \ncase 2 \n \ncase 4 \ncase 2 \n \nNULL \n \ncase 1 \n \ncase 3 \n \ncase 5\
    \ \ncase 3 \n \ncase 1 \n \ncase 4 \n \ncase 2 \n \ncase 6 \ncase 5 \n \ncase\
    \ 3 \n \ncase 4 \n \ncase 2 \n \n58 \n \n \nFigure 18. The association connection\
    \ between past cases. \nApart from the case 4, each past case is associated with\
    \ two similar cases. Because the \ncompetence of this case base is insufficient.\
    \ In other words, this case base does not cover enough \npast cases. However,\
    \ this situation rarely happens when more cases are retained in the case base.\
    \ \nIn Table 4, two types of associations are defined as follows. \n• \nSimilar\
    \ association: This association indicates that the features of compared two cases\
    \ have \ngreat commonalities. The IDs of these similar cases are stored in the\
    \ similar association, \nbuilding interconnections to the source case. \n• \n\
    Dissimilar association: This association specifies that there are significant\
    \ differences \nbetween the features of compared two cases. The IDs of these dissimilar\
    \ cases are stored in \nthe dissimilar association. \nThis association table is\
    \ constructed for the purpose of enabling fast case retrieval in the \nretrieval\
    \ process. In the typical case retrieval algorithm, the new case is evaluating\
    \ by traversing \nall the past cases in the case base, consequently leading to\
    \ low retrieval efficiency. However, with \nthe help of this association table,\
    \ the new case has the chance of being compared with the \nassociated cases preferentially.\
    \ For instance, once a new case is reported and the past case 1 is \ntreated as\
    \ the entry-point case for comparison. On the one hand, if this new case is considered\
    \ \nsimilar to the past case 1, then cases 3 and 5 are selected for being compared\
    \ with the new case. \nBecause potential similar cases might exist among the similar\
    \ association of the past case 1. In \n59 \n \nother words, the similar association\
    \ offers the possibility of evaluating the similarity between past \ncases within\
    \ a smaller range, instead of traversing the whole case base. As a result, the\
    \ number of \ncompared cases can be reduced and the retrieval efficiency can be\
    \ improved. On the other hand, \nif this new case is considered dissimilar to\
    \ the past case 1, then cases 4 and 6 are selected for \nbeing compared with the\
    \ new case. The reason why ignoring the cases in the similar association \nis\
    \ that there is a very low chance that the desired outputs are cases 3 and 5.\
    \ However, the cases in \nthe dissimilar association might be the target one.\
    \ Thus, the dissimilar association is able to adjust \nthe searching trajectory\
    \ for the retrieval process and therefore assist the new case in matching a \n\
    similar case as soon as possible. \n4.1.2. Distinction between the association\
    \ table and other techniques \nIt is important to clarify two issues for the association\
    \ table: (i) the distinction between the \nsimilar association and LSH, and (ii)\
    \ the distinction between the dissimilar association, the rough \nset theory,\
    \ and filtering techniques. \nFirstly, regarding the former issue, as introduced\
    \ in Section 2.3.2, LSH uses a family of hash \nfunctions to map data points into\
    \ buckets. The objective is to classify data points that are near to \neach other\
    \ into the same bucket, while locate data points that are far from each other\
    \ into different \nbuckets. This is the major difference between the general hashing\
    \ approach and LSH (See Figure \n19). \nIn Figure 19, the general hashing approach\
    \ simply maps data points into different buckets \nwithout any consideration of\
    \ their distances. For example, though blue and yellow points are near \nto each\
    \ other, they are still grouped in different buckets. However, the blue and yellow\
    \ data points \nare mapped into the same bucket by using the LSH approach. Under\
    \ this circumstance, LSH can \nbe used for data clustering and nearest neighbor\
    \ search tasks and it can achieve greater efficiency \nthan typical searching\
    \ techniques. LSH has a wide range of applications, including near-duplicate \n\
    detection (i.e. to deduplicate large quantities of documents and webpages) [239],\
    \ genome-wide \nassociation study (i.e. to identify similar gene expressions in\
    \ genome databases) [240], large-scale \nimage search (i.e. to identify similar\
    \ images for clustering) [241], and audio/video fingerprinting \n(i.e. to extract\
    \ audio fingerprint for detecting similar songs) [242]. \nHowever, it is noted\
    \ that LSH does not guarantee to present the exact answer due to the \ndesign\
    \ of hash functions. If two near data points are grouped into different buckets,\
    \ LSH can only \nretrieve one of them. Meanwhile, LSH does not build any actual\
    \ relationships between data points. \nDiffering from the LSH approach, the similar\
    \ association built in the proposal establishes real \nconnections between past\
    \ cases. The similar association does not rely on any mapping functions \n60 \n\
    \ \nnor indexing techniques. This association is built upon similarity measurements\
    \ between past \ncases. Therefore, it is guaranteed that similar past cases are\
    \ connected to each other. \n \nFigure 19. Principles of the general hashing and\
    \ locality sensitive hashing approaches. \n \nSecondly, regarding the latter issue,\
    \ there is a clear distinction between the dissimilar \nassociation, the rough\
    \ set theory and filtering techniques. In case retrieval tasks, the rough set\
    \ \ntheory and filtering techniques are helpful because they can avoid comparing\
    \ irrelevant cases.  \nOn the one hand, as an approximation technique, the rough\
    \ set theory defines the lower and \nupper approximations in the original dataset\
    \ (See Figure 20). \n \nFigure 20. Principles of the rough set theory. \nIn Figure\
    \ 20, it is shown that a boundary region can be formed by the lower and upper\
    \ \napproximations, and the rough set theory therefore enables users to have access\
    \ to the dataset they \nare interested in. Research work on applying the rough\
    \ set theory to CBR can be found in \n[243,244]. It is worth noting that other\
    \ regions (marked in yellow in Figure 20) are out of \n61 \n \nconsideration even\
    \ though they may contain relevant information. In other words, other regions\
    \ \ncan be regarded as the deletion part from the original dataset. Besides, one\
    \ of the disadvantages \nof the rough set theory is that it is usually applicable\
    \ to the categorical data. Meanwhile, for \nextracting the data that users are\
    \ interested in, the approximations have to be defined manually. \nOn the other\
    \ hand, the dissimilar association differs from existing filtering techniques\
    \ as well. \nSome researchers tried to set a collection of rules to extract desired\
    \ data [245,246]. These rules \nwere defined based on the observation of data\
    \ and researchers’ own interests (See Figure 21).  \n \nFigure 21. Principles\
    \ of the filtering technique. \n \nIn Figure 21, three filters are used to classify\
    \ the data. After each filtering process, irrelevant \ndata are removed from the\
    \ original dataset and the final dataset only contains the desired data. \nHowever,\
    \ the major drawback of the filtering technique is that the collections of rules\
    \ need to be \ndefined manually. In particular, the definition of the rule sets\
    \ varies in users’ requirements. \n \nDiffering from the rough set theory and\
    \ filtering techniques, the dissimilar association \ndefined in this thesis does\
    \ not remove nor delete any irrelevant data. The dissimilar association \naims\
    \ at building connections between past cases according to the similarity measurements.\
    \ Owing \nto this connection, the searching trajectory of case retrieval can be\
    \ adjusted. It is assumed that if \na new case is dissimilar to a past case, then\
    \ this new case might be potentially similar to the cases \nthat are dissimilarly\
    \ associated with this past case. A simple example is presented in Figure 22 \n\
    for demonstrating why the dissimilar association is helpful in the case retrieval\
    \ task. In this \nexample, the user would like to query about the rice disease\
    \ from a case base. There are two rice \ndiseases in this case base, named “brown\
    \ spot” (see ① and ② in Figure 22) and “blast” (see ③ \nand ④ in Figure 22). Each\
    \ image has one similar association and two dissimilar associations. \n \nIn Figure\
    \ 22, if the query sample (brown spot) is firstly compared with the stored image\
    \ ①, \nthe similarity measurement will indicate that the compared images are similar,\
    \ it is a natural sense to \ncompare the query sample with the image ② which is\
    \ similar to the image ①. However, if the query \nsample is firstly compared with\
    \ the image ④, the similarity measurement will indicate that the \ncompared images\
    \ are dissimilar. Therefore, there is a low chance that the associated similar\
    \ image ③ \n62 \n \nand the query sample have much commonalities. As a consequence,\
    \ the query sample is going to be \ncompared with the dissimilar associations\
    \ (images ① and ②) of the image ④. Under this \ncircumstance, the query sample\
    \ avoids being compared with the image ③, and therefore to accelerate \nthe retrieval\
    \ task. After retrieving the most similar image, the user will be notified that\
    \ the result of \nthe query sample is “brown spot”. \n \nFigure 22. An example\
    \ of querying the disease type by using dissimilar associations. \n \nIt is worth\
    \ noting that when applying the rough set theory or the filtering technique to\
    \ the \nabove example, images ③ and ④ are usually removed from the original dataset.\
    \ A boundary region \n(in the rough set theory) or a final dataset (in the filtering\
    \ technique) is generated for comparison. \nHowever, the association in the proposal\
    \ is built between data, no matter they are similar or dissimilar, \nall the data\
    \ are remained in the dataset. \n4.1.3. Content of agricultural cases \nThe content\
    \ of agricultural cases varies in their applications like pest management, fertilizer\
    \ \napplication, and irrigation scheduling. For instance, an agricultural case\
    \ of irrigation scheduling \ncares about variables like soil moisture, crop breed,\
    \ water consumption rate, and required water \nvolume [247]. While, an agricultural\
    \ case of pest management usually takes into account variables \nlike pest breed,\
    \ crop breed, infected area, and previous treatment [248]. \nJudging from the\
    \ above examples, it is concluded that the general content of agricultural \n\
    cases should contain the following. \n63 \n \nFirstly, environmental variables\
    \ usually include soil and meteorological information. \nEnvironmental variables\
    \ play a significant role in agricultural cases because these variables can \n\
    affect the growth of plants and operation performances. For example, the rising\
    \ temperature can \npossibly shorten the growth circle of crops. Agronomists estimate\
    \ that the growth circle of rice \nwill shorten by one more week if the temperature\
    \ increases by one Celsius [249]. Another \nexample may refer to deploying UAVs\
    \ for performing agricultural tasks. When the wind speed \nreaches over 10 m/s.\
    \ it is not applicable for launching UAVs due to safety concerns [250]. Thus,\
    \ \nsome key features of environmental variables in agricultural cases are summarized\
    \ in Table 5. \nTable 5. Key features of environmental variables in agricultural\
    \ cases. \nFeature category \nFeature name \nContent \nSoil variables \nSoil texture\
    \ \nThis variable refers to the determination of the soil \nclasses based on their\
    \ physical texture, including \nclay, silt, very fine sand, fine sand, medium\
    \ sand, \netc. \nSoil fertility \nThis variable refers to the ability of soil\
    \ to sustain \nagricultural plant growth. It concerns features like \nsoil depth,\
    \ internal drainage, and concentrations of \nplant nutrients. \nSoil moisture\
    \ \nThis variable refers to the measurement of the \nvolumetric water content\
    \ in the soil. \nSoil temperature \nThis variable refers to the measurement of\
    \ the \nwarmth in the soil. \nSoil pH \nThis variable refers to the measurement\
    \ of the \nconcentration of hydrogen ions in the soil. \nOrganic matter \nThis\
    \ variable refers to the organic matter component \nof soil, such as plant and\
    \ animal detritus, cells and \ntissues, and substances. \nMeteorological \nvariables\
    \ \nSolar irradiance \nThis variable refers to the power per unit area \nreceived\
    \ from the sun in the form of electromagnetic \nradiation in the wavelength range.\
    \ It can be \nmeasured by luminous intensity and duration time. \nPrecipitation\
    \ \nThis variable refers to any product of the \ncondensation of atmospheric water\
    \ vapor that falls \nunder gravity from clouds. It is usually measured by \n64\
    \ \n \nrainfall (in millimeters) and time (when to start and \nstop raining).\
    \ \nAir temperature \nThis variable refers to the measurement of how cold \nor\
    \ hot the air is. The most common units for this \nvariable include Celsius and\
    \ Fahrenheit. \nAir humidity \nThis variable refers to the measurement of the\
    \ \nconcentration of water vapor present in the air. \nWind \nThis variable refers\
    \ to the bulk movements of air on \nthe surface of the earth. It can be measured\
    \ by wind \nspeed, direction, and duration time. \n Owing to the advanced sensing\
    \ technology and Internet of Things, environmental data can \nbe collected and\
    \ utilized by various sensors deployed in the farms. Some latest sensor equipment\
    \ \nis shown in Figure 23 [251,252]. \n   \n \n(a)                           \
    \            (b) \nFigure 23. Some latest sensor equipment: (a) a perforated cylinder\
    \ coaxial dielectric sensor for \nmeasuring soil water content; (b) a time-domain\
    \ reflectometry sensor for measuring soil moisture. \nSecondly, crop/planting\
    \ variables are considered, including crop growth, crop yield, stress, \ndry weight,\
    \ flowering time, root biomass index, etc. These variables are essential for managing\
    \ \nfarming operations because agricultural decision-making varies in different\
    \ situations. For \ninstance, the planting density of crops may affect the dilution\
    \ factor of insecticides [253]. \nFurthermore, crops are sensitive to the applied\
    \ insecticides due to their growth stage. Toxic \ninsecticides may be lethal to\
    \ those crops at the seed stage. Thus, following key features of \ncrop/planting\
    \ variables are taken into account in Table 6. \n \n \n \n65 \n \nTable 6. Key\
    \ features of crop/planting variables in agricultural cases. \nFeature category\
    \ \nFeature name \nContent \nCrop variables \nCrop breed \nThis variable refers\
    \ to the types of agricultural \nproduction. Some common breeds that farmers are\
    \ \ngrowing now include cereals (i.e. rice, wheat, and \nbarley), pulses food\
    \ (i.e. red gram, black gram, and \ngreen gram), and oils (i.e. olive, peanut,\
    \ and \nsesame). \nGrowth stage \nThis variable refers to a process with different\
    \ \norgans developing, growing, and dying in \noverlapping sequences. (i.e. the\
    \ growth of cereal \ncrops usually includes vegetative, stem elongation, \nbooting,\
    \ heading, anthesis, milking, dough, and ripe \nseed stages.) \nYield \nThis variable\
    \ refers to the amount of crop harvested \nper area of land. The common units\
    \ for this variable \ninclude kilogram/hectare and tons/hectare. \nStress \nThis\
    \ variable refers to any external factors that \ndecrease crop yields from the\
    \ maximum to a lower \nlevel. Some common crop stresses include diseases, \ninsects,\
    \ salinity, and so on. \nMarket price \nThis variable refers to the profitability\
    \ when \nreselling the agricultural production in the market. \nIn particular,\
    \ this variable plays a key role in \ndecision making about harvesting and logistics.\
    \ \nPlanting variables \nPlanting area \nThis variable refers to the segmentation\
    \ of areas \nwhere crops are planted. \nPlanting \ndensity \nThis variable refers\
    \ to the amount of space left \nbetween plants. The more closely spaced plants\
    \ are, \nthe higher the density. \nApplied \nchemicals \nThis variable refers\
    \ to the chemicals previously \napplied during the planting period. These chemicals\
    \ \ncan be fertilizers, pesticides, insecticides, etc. \nFor monitoring crop/planting\
    \ variables, multispectral sensors have been widely adopted. \nUsually, UAVs and\
    \ remotely operated drones (RODs) carry multispectral cameras for collecting \n\
    66 \n \nimages when surveying an area. Then, techniques like feature extraction\
    \ and pattern recognition \nare adopted for further processing collected images\
    \ and obtaining crop variables. Examples of \nmultispectral equipment are shown\
    \ in Figure 24 [254,255]. \n    \n \n(a)                                     \
    \ (b) \nFigure 24. Examples of multispectral equipment: (a) a multispectral sensor\
    \ for crop \ndiscrimination; (b) an airborne multispectral sensor for assessing\
    \ nitrogen nutrition. \nThirdly, farming operations do not only refer to produce\
    \ crops, but also include grazing \nlivestock, since they can produce labors and\
    \ commodities like meat, eggs, milk, fur, leather, etc. \nAs a consequence, livestock\
    \ variables are also considered in the content of agricultural cases. \nThese\
    \ variables include feed, health, and movement control data. For example, by monitoring\
    \ the \nhealth status of animals can help the government to take the right decisions\
    \ on policies and fund \nallocation [256]. Generally, the key features in livestock\
    \ variables are listed in Table 7. \nTable 7. Key features of livestock variables\
    \ in agricultural cases. \nFeature \ncategory \nFeature name \nContent \nFeed\
    \ \nvariables \nFeed cost \nThis variable refers to the money spent on buying\
    \ \nfood for livestock (i.e. feeding a cow costs around \n360 US dollars per year).\
    \ \nFeed amount \nThis variable refers to the amount of food feed to \nlivestock\
    \ (i.e. a single cow consumes around 13 \nkilograms food per day). \nVariety of\
    \ feed \nThis variable refers to the feed type (i.e. grass, corn, \nand potato.).\
    \ \nRumination \nThis variable refers to the process of acquiring \nnutrients\
    \ from plant-based food (i.e. a cow takes two \nhours for rumination.). \n67 \n\
    \ \nWatering \nThis variable refers to an average amount of water \ndrunk by livestock.\
    \ \nHealth \nstatus \nBody temperature \nThis variable refers to the temperature\
    \ measurement \nof the animal. \nWeight \nThis variable refers to the animal’s\
    \ relative mass or \nthe quantity of matter contained by the animal. \nRuminal\
    \ ORP \nThis variable refers to the oxidation-reduction \npotential (ORP) of the\
    \ first stomach of a ruminant \nanimal. The normal value of this variable ranges\
    \ \nfrom -1000 to 0 mV. \nRuminal pH \nThis variable refers to the value, expressing\
    \ the \nacidity or alkalinity in the first stomach of a \nruminant animal. The\
    \ normal value of this variable \nranges from 4 to 9. \nRuminal temperature \n\
    This variable refers to the temperature measurement \ninside the first stomach\
    \ of a ruminant animal. The \nnormal value of this variable ranges from 20 to\
    \ 50 \nCelsius.  \nMovement \ncontrol \nActivity \nThis variable refers to the\
    \ movement of livestock, \nmeasured by steps per animal per day. \nPosition \n\
    This variable refers to locate where the animal is and \nit can be represented\
    \ by global positioning system \n(GPS) data. \nBehavior \nThis variable refers\
    \ to the current state of livestock \n(i.e. a female cow is mating with a male\
    \ one.).  \n \nFor monitoring livestock variables, wearable technologies have\
    \ been widely deployed. For \nexample, E-tags are used to monitor animal’s body\
    \ temperature, since it is one of the first \nsymptoms when body is fighting against\
    \ illnesses. Some latest wearable technologies are shown \nin Figure 25 [257,258].\
    \ \n68 \n \n           \n \n(a)                                   (b) \nFigure\
    \ 25. Examples of wearable technology: (a) a RFID based ear tag for cows; (b)\
    \ wearable \nsensors for monitoring heart rate, surrounding temperature and humidity.\
    \ \nThe above three groups of variables (environmental, crop/planting, and livestock)\
    \ form the \nproblem part of an agricultural case. Depending on the application\
    \ domain, agricultural cases \nshould be composed of selected key features. \n\
    In regards to the solution part of an agricultural case, it can also be formulated\
    \ by feature-\nvalue pairs as well. For instance, key features of a solution for\
    \ pest management include the \npesticide type, applied quantity, dilution factor,\
    \ spraying method, etc. While a solution for \nassigning tasks to agricultural\
    \ machinery should provide the information about the number of \ninvolved vehicles\
    \ and a list of task distribution strategies. \n4.1.4. Structure of the proposed\
    \ case representation method \nDiffering from the typical feature vector representation\
    \ method, the associated case \nrepresentation method extends the “problem-solution”\
    \ structure with an additional association \npart. Thus, the structure of our\
    \ proposal is “problem-solution-association” (See Figure 26). \nIn Figure 26,\
    \ the problem and solution parts have been explained in Section 4.1.3, while the\
    \ \nassociation part is referred to the association table which are generated\
    \ in Section 4.1.1. Each past \ncase retrieves its similar and dissimilar associations\
    \ from the association table and stores them \nwithin this structure, building\
    \ the connection with each other. \n \n69 \n \n \nFigure 26. Structure of the\
    \ associated case representation method. \n4.2. A triangular similarity measure\
    \ \nThe proposed triangular similarity measure (TSM) combines the cosine angle\
    \ between two \nvectors, their Euclidean distance, and their magnitudes. When\
    \ measuring the similarity, a triangle \nis formed by two compared vectors. The\
    \ area of this triangle is considered as a similarity metric. \nMeanwhile, for\
    \ enhancing the robustness of TSM, a coefficient is designed in the formula. It\
    \ \nconsiders the magnitude differences between two compared vectors. The smaller\
    \ the triangular \narea is, the more similar the two vectors will be. The formula\
    \ of TSM is explained in the next \nsub-sections in detail. \n4.2.1. Formula of\
    \ the triangular similarity measure \nFor two vectors in three-dimensional space,\
    \ \U0001D442\U0001D434\n⃗⃗⃗⃗⃗ = (\U0001D44E1, \U0001D44E2, \U0001D44E3) and \U0001D442\
    \U0001D435\n⃗⃗⃗⃗⃗ = (\U0001D44F1, \U0001D44F2, \U0001D44F3), they \ncan form a\
    \ triangle as follows in Figure 27. \n70 \n \n \nFigure 27. Two vectors \U0001D442\
    \U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  in three-dimensional space.\
    \ \nIn Figure 27, a triangle △AOB is formed by two vectors \U0001D442\U0001D434\
    \n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ . The area of this \ntriangle can be\
    \ calculated by two sides and the included angle (SAS formula). Firstly, the \n\
    magnitudes of the two vectors are calculated by Equations (6) and (7). \n|\U0001D442\
    \U0001D434\n⃗⃗⃗⃗⃗ | = √\U0001D44E1\n2 + \U0001D44E2\n2 + \U0001D44E3\n2      \
    \                           (6) \n|\U0001D442\U0001D435\n⃗⃗⃗⃗⃗ | = √\U0001D44F\
    1\n2 + \U0001D44F2\n2 + \U0001D44F3\n2                                 (7) \n\
    The cosine value of these two vectors is calculated by Equation (1) in Section\
    \ 2.3.2. For \nobtaining the value of the angle, the trigonometric inverse function\
    \ can be employed. Then, the \narea of this triangle is calculated by using the\
    \ SAS formula in Equation (8).  \n\U0001D446△AOB =\n|\U0001D442\U0001D434\n⃗⃗⃗⃗⃗⃗\
    \ |∗|\U0001D442\U0001D435\n⃗⃗⃗⃗⃗⃗ |∗sin (\U0001D703)\n2\n                    \
    \            (8) \n \nIn Equation (8), a smaller area of the triangle indicates\
    \ that the two compared vectors will \nhave more commonalities. An example is\
    \ presented in Figure 28. \nIn Figure 28, the target vector is \U0001D442\U0001D434\
    \n⃗⃗⃗⃗⃗  and it is compared with two source vectors \U0001D442\U0001D435\n⃗⃗⃗⃗⃗\
    \  and \n\U0001D442\U0001D436\n⃗⃗⃗⃗⃗ . Though all these three vectors have different\
    \ magnitudes and orientations, the distance \nbetween the source vectors and the\
    \ target vector is identical, demonstrating that source vectors \n\U0001D442\U0001D435\
    \n⃗⃗⃗⃗⃗  and \U0001D442\U0001D436\n⃗⃗⃗⃗⃗  have the same similarity measurement\
    \ with the target vector \U0001D442\U0001D434\n⃗⃗⃗⃗⃗ . However, by \nadopting\
    \ TSM in Figure 28, we can obtain that the area of the triangle △AOB is smaller\
    \ than the \ntriangle △AOC. Under this circumstance, it is concluded that vectors\
    \ \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  have more \ncommonalities\
    \ than vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D436\n⃗⃗⃗⃗⃗ ,\
    \ which is the expected result from common sense. As a \n71 \n \nconsequence,\
    \ compared with distance-based measures, TSM is able to provide an accurate result\
    \ \neven if the distance between the compared vectors is the same. \n \nFigure\
    \ 28. Two triangles formed by three vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗ ,  \U0001D442\
    \U0001D435\n⃗⃗⃗⃗⃗ , and \U0001D442\U0001D436\n⃗⃗⃗⃗⃗ . \n4.2.2. Coefficient design\
    \ in the triangular similarity measure \nThe robustness of TSM can be further\
    \ enhanced for overcoming the drawbacks of angle-\nbased similarity measures.\
    \ A coefficient, \U0001D43E\U0001D45A\U0001D44E\U0001D454, is designed to improve\
    \ the similarity precision, \ntaking into account the magnitude difference between\
    \ compared vectors. This coefficient is also \nformed by a triangle. Its value\
    \ is decided by calculating the area of the formed triangle. The \ncoefficient\
    \ for vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  is\
    \ shown in Figure 29. \n \nFigure 29. The coefficient triangle for vectors \U0001D442\
    \U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ . \n72 \n \nIn Figure 29, the\
    \ triangle △CAD is formed and its area represents the value of the coefficient\
    \ \nfor vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ .\
    \ The angle (∠CAD) between \U0001D434\U0001D436\n⃗⃗⃗⃗⃗  and \U0001D434\U0001D437\
    \n⃗⃗⃗⃗⃗  is same as the angle ∠AOB. \nThe magnitudes of |\U0001D434\U0001D435\n\
    ⃗⃗⃗⃗⃗ | and |\U0001D434\U0001D438\n⃗⃗⃗⃗⃗ | equal to the Euclidean distance between\
    \ vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \n\U0001D442\U0001D435\n⃗⃗⃗⃗⃗ , while\
    \ the magnitudes of |\U0001D435\U0001D436\n⃗⃗⃗⃗⃗ | and |\U0001D438\U0001D437\n\
    ⃗⃗⃗⃗⃗ | equal to the magnitude difference between vectors \n\U0001D442\U0001D434\
    \n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ . The magnitudes of |\U0001D434\U0001D436\
    \n⃗⃗⃗⃗⃗ | and |\U0001D434\U0001D437\n⃗⃗⃗⃗⃗ | are the sum of the Euclidean distance\
    \ and the \nmagnitude difference. The formula of calculating the magnitudes of\
    \ |\U0001D434\U0001D436\n⃗⃗⃗⃗⃗ | and |\U0001D434\U0001D437\n⃗⃗⃗⃗⃗ | can be \n\
    obtained by Equation (9). \n|\U0001D434\U0001D436\n⃗⃗⃗⃗⃗ | = |\U0001D434\U0001D437\
    \n⃗⃗⃗⃗⃗ | = √(\U0001D44E1 − \U0001D44F1)2 + (\U0001D44E2 − \U0001D44F2)2 + (\U0001D44E\
    3 − \U0001D44F3)2 + ||\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ | − |\U0001D442\U0001D435\n\
    ⃗⃗⃗⃗⃗ ||       (9) \nIn Equation (9), the former part is the Euclidean distance\
    \ between the vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n\
    ⃗⃗⃗⃗⃗ , \nwhile the latter part is the magnitude difference of compared vectors.\
    \ It is detected that the \nEuclidean distance and the magnitude difference have\
    \ a close relationship. When the magnitude \ndifference decreases, so does the\
    \ Euclidean distance. Therefore, both factors are taken into \nconsideration when\
    \ designing the coefficient. The area of the triangle △CAD is also calculated\
    \ \nby the SAS formula shown in Equation (10). \n\U0001D43E\U0001D45A\U0001D44E\
    \U0001D454 = \U0001D446△CAD =\n|\U0001D434\U0001D436\n⃗⃗⃗⃗⃗ |∗|\U0001D434\U0001D437\
    \n⃗⃗⃗⃗⃗⃗ |∗sin (\U0001D703)\n2\n                         (10) \nWith obtained\
    \ areas of triangles △AOB and △CAD, the similarity between vectors \U0001D442\U0001D434\
    \n⃗⃗⃗⃗⃗  and \n\U0001D442\U0001D435\n⃗⃗⃗⃗⃗  can be measured by Equation (11).\
    \ \nSim(\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ ) = \U0001D43E\
    \U0001D45A\U0001D44E\U0001D454 ∗ \U0001D446△AOB                          (11)\
    \ \nAn example is presented in Figure 30 for demonstrating how the designed coefficient\
    \ can \nenhance the robustness of TSM. In this figure, the target vector is \U0001D442\
    \U0001D434\n⃗⃗⃗⃗⃗ , while the source vectors \nare \U0001D442\U0001D435\n⃗⃗⃗⃗⃗\
    \  and \U0001D442\U0001D436\n⃗⃗⃗⃗⃗ . It is clear that the cosine similarity of\
    \ \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  is same as that\
    \ of \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \n\U0001D442\U0001D436\n⃗⃗⃗⃗⃗  because they\
    \ share the same angle. As a consequence, by employing the cosine similarity,\
    \ \nvectors \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D436\n⃗⃗⃗⃗⃗  are\
    \ considered to have the same commonalities with the target vector \U0001D442\U0001D434\
    \n⃗⃗⃗⃗⃗ . \nWhen the basic TSM (in Section 4.2.1) is adopted for measuring the\
    \ similarities in Figure 30, it \ncan be concluded that the vector \U0001D442\U0001D435\
    \n⃗⃗⃗⃗⃗  is more similar to the target vector \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  because\
    \ the area of \nthe triangle △AOB is smaller than the triangle △AOC. However,\
    \ this result may be inaccurate \ndue to the reason that vectors \U0001D442\U0001D434\
    \n⃗⃗⃗⃗⃗  and \U0001D442\U0001D436\n⃗⃗⃗⃗⃗  have similar magnitudes, but the magnitudes\
    \ of \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  \nand \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  have a major\
    \ difference. \n73 \n \n \nFigure 30. An example for demonstrating the use of\
    \ coefficient in TSM. \nTSM is able to generate a more accurate result when adopting\
    \ the coefficient because the \nproduct of the areas of two formed triangles is\
    \ more reliable. In Figure 30, though the area of the \ntriangle △AOB is smaller\
    \ than △AOC, its coefficient value (the area of the triangle △EBF) is \nmuch bigger\
    \ than the area of the triangle △ECF, leading to the fact that the similarity\
    \ of the \nvectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗\
    \  is lower than that of \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D436\
    \n⃗⃗⃗⃗⃗ . Conclusively, it is determined that the \nvector \U0001D442\U0001D436\
    \n⃗⃗⃗⃗⃗  is more similar to \U0001D442\U0001D434\n⃗⃗⃗⃗⃗ . \n4.2.3. The triangular\
    \ similarity measure in N-dimensional space \nFor two vectors in N-dimensional\
    \ space, \U0001D442\U0001D434\n⃗⃗⃗⃗⃗ = (\U0001D44E1, \U0001D44E2, … , \U0001D44E\
    \U0001D45B) and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ = (\U0001D44F1, \U0001D44F2, … , \U0001D44F\
    \U0001D45B), \nthe similarity can be measured by the TSM formula defined in Equation\
    \ (12). \n\U0001D446\U0001D456\U0001D45A(\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\
    \U0001D435\n⃗⃗⃗⃗⃗ ) =\n(√∑\n(\U0001D44E\U0001D456−\U0001D44F\U0001D456)2\n\U0001D45B\
    \n\U0001D456=1\n+|√∑\n\U0001D44E\U0001D456\n2\n\U0001D45B\n\U0001D456=1\n−√∑\n\
    \U0001D44F\U0001D456\n2\n\U0001D45B\n\U0001D456=1\n|)\n2\n∗[\U0001D460\U0001D456\
    \U0001D45B2(\U0001D703)+0.001]∗√∑\n\U0001D44E\U0001D456\n2\n\U0001D45B\n\U0001D456\
    =1\n∗√∑\n\U0001D44F\U0001D456\n2\n\U0001D45B\n\U0001D456=1\n4\n  (12) \nIn Equation\
    \ (12), the value of \U0001D460\U0001D456\U0001D45B(\U0001D703) is added by 0.001\
    \ due to the reason that the compared \ntwo vectors may be overlapped with each\
    \ other. Therefore, the value of \U0001D446\U0001D456\U0001D45A(\U0001D442\U0001D434\
    \n⃗⃗⃗⃗⃗ , \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ ) will equal \nto zero. As a consequence,\
    \ the final result will be zero without this adjustment. \n \n74 \n \nThe mathematical\
    \ prove of the TSM formula is given in Figure 31. \n \nFigure 31. The mathematical\
    \ prove of the TSM formula. \nIn Figure 31, the vectors \U0001D442\U0001D434\n\
    ⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗  refer to the vectors presented in Figure\
    \ 29. The \nvariable \U0001D438\U0001D437\U0001D434\U0001D435\n⃗⃗⃗⃗⃗  denotes\
    \ the Euclidean distance between vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\
    \U0001D435\n⃗⃗⃗⃗⃗ . |\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ | and |\U0001D442\U0001D435\n\
    ⃗⃗⃗⃗⃗ | \nrepresent the magnitudes of these two vectors respectively. Since the\
    \ formulas of the Euclidean \ndistance, magnitude of vectors, and the sine function\
    \ have been proved in N-dimensional space, \nthus the TSM formula is appliable\
    \ in N-dimensional space as well. \nIt might be difficult for humans to understand\
    \ the similarity of two vectors by directly reading \nthe value of the triangle\
    \ area. Therefore, it is better to convert the area values by using the inverse\
    \ \nexponential function [259]. Under this circumstance, the similarity measurement\
    \ can be \nrepresented by percentile values, ranging from 0 to 100%, which fit\
    \ human notions better. The \nsimilarity measurement in percentile values can\
    \ be obtained by using Equation (13).  \n\U0001D446\U0001D456\U0001D45A(\U0001D442\
    \U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ )[0,100%] = \U0001D452\U0001D465\
    \U0001D45D (−\U0001D446\U0001D456\U0001D45A(\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\
    \U0001D435\n⃗⃗⃗⃗⃗ ))               (13) \nA large value of \U0001D446\U0001D456\
    \U0001D45A(\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ )[0,100%]\
    \ means that vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\U0001D435\n⃗⃗⃗⃗⃗\
    \  are more similar. \nOnly if vectors \U0001D442\U0001D434\n⃗⃗⃗⃗⃗  and \U0001D442\
    \U0001D435\n⃗⃗⃗⃗⃗  are absolutely identical, the value of \U0001D446\U0001D456\
    \U0001D45A(\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ )[0,100%]\
    \ equals \nto one hundred percent. Because the value of \U0001D446\U0001D456\U0001D45A\
    (\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ ) equals to zero, indicating\
    \ that the \nEuclidean distance between vectors and their magnitude differences\
    \ are both zero. \n4.2.4. Feature weighting in the triangular similarity measure\
    \ \nAs an important aspect in the similarity measure, the objective of weighting\
    \ is to assign \nrelative importance to a set of features, thereby highlighting\
    \ those features that play key roles. \n75 \n \nTypically, each feature in the\
    \ dataset contributes equally to the final result. However, it is noted \nthat\
    \ some data should be adjusted to make a greater contribution than others. \n\
    Feature weighting can be regarded as a generalization of feature selection [260].\
    \ Considering \na dataset \U0001D706 containing n entities \U0001D465\U0001D45B\
    , \U0001D706 = {\U0001D4651, \U0001D4652, \U0001D4653, … , \U0001D465\U0001D45B\
    }. Each entity consists of the same \nset of features \U0001D439 = {\U0001D453\
    1, \U0001D4532, \U0001D4533, … , \U0001D453\U0001D45A} . In this scenario, feature\
    \ weighting tries to assign a weight \n\U0001D464\U0001D45A to each feature \U0001D453\
    \ ∈ \U0001D439. The value of the assigned weight is usually within the interval\
    \ [0,1] \nand it reflects the degree of relevance of the feature to the particular\
    \ problem at hand. \nIn this thesis, an adaptive feature weighting approach is\
    \ designed for determining the \nimportance of each feature. This weighting approach\
    \ is on the basis of the intra-cluster distance \nand the distance between different\
    \ clusters. The detail of the feature weighting approach is \nexplained as follows.\
    \ \nAt first, a matrix X is formed by n vectors and each vector has m features\
    \ in Equation (14). \n\U0001D44B = [\n\U0001D46511\n⋯\n\U0001D4651\U0001D45A\n\
    ⋮\n⋱\n⋮\n\U0001D465\U0001D45B1\n⋯\n\U0001D465\U0001D45B\U0001D45A\n]         \
    \                  (14) \n \nFor eliminating the dimensional differences, vectors\
    \ in the matrix X are normalized and \nmapped into a common scale, ranging from\
    \ 0 to 1. \n \nSecondly, all the vectors are going to be classified into K clusters\
    \ and the number of vectors \nin each cluster is \U0001D45B1, \U0001D45B2, … ,\
    \ \U0001D45B\U0001D458. Let \U0001D45A\U0001D458\U0001D457 denote the average\
    \ value of the cluster k for the \U0001D457\U0001D461ℎ \nfeature. Then, the sum\
    \ of the distance of the \U0001D457\U0001D461ℎ feature for all clusters can be\
    \ obtained by \nEquation (15). This sum result is treated as the intra-cluster\
    \ distance. \n\U0001D451\U0001D45B = ∑\n∑\n\U0001D45B\U0001D458 (\U0001D465\U0001D456\
    \U0001D457 − \U0001D45A\U0001D458\U0001D457)2\n\U0001D456=1\n\U0001D43E\n\U0001D458\
    =1\n                        (15) \nLet \U0001D45A\U0001D457 denote the average\
    \ value of the \U0001D457\U0001D461ℎ feature in the dataset, the distance of the\
    \ \U0001D457\U0001D461ℎ \nfeature between all clusters can be computed by Equation\
    \ (16). This sum result is regarded as the \ndistance between different clusters.\
    \ \n\U0001D451\U0001D464 = ∑\n(\U0001D45A\U0001D458\U0001D457 − \U0001D45A\U0001D457\
    )2\n\U0001D43E\n\U0001D458=1\n                         (16) \nTherefore, the contribution\
    \ of the \U0001D457\U0001D461ℎ feature to the final result can be obtained by\
    \ Equation \n(17). \n\U0001D450\U0001D457 =\n\U0001D451\U0001D464\n\U0001D451\U0001D45B\
    \                                (17) \n76 \n \nIf the intra-cluster distance\
    \ is close and the distance between different clusters is far, it means \nthat\
    \ this feature may potentially contribute more to the final result. However, if\
    \ the intra-cluster \ndistance is far and the distance between different clusters\
    \ is close, it indicates that this feature \nmay have a minor effect on the final\
    \ result. Conclusively, the weight of the \U0001D457\U0001D461ℎ feature is defined\
    \ \nin Equation (18). \n\U0001D464\U0001D457 =\n\U0001D450\U0001D457\n∑\n\U0001D450\
    \U0001D457\n\U0001D45A\n\U0001D457=1\n                              (17) \nWhere\
    \ \U0001D464\U0001D457 ∈ [0,1] and ∑\n\U0001D464\U0001D457\n\U0001D45A\n\U0001D457\
    =1\n= 1. \nConclusively, the formula of triangular similarity measure in Equation\
    \ (12) can be updated \nwith weights by Equation (18). \n\U0001D446\U0001D456\U0001D45A\
    (\U0001D442\U0001D434\n⃗⃗⃗⃗⃗ , \U0001D442\U0001D435\n⃗⃗⃗⃗⃗ ) =\n(√∑\n\U0001D464\
    \U0001D456(\U0001D44E\U0001D456−\U0001D44F\U0001D456)2\n\U0001D45B\n\U0001D456\
    =1\n+\U0001D464\U0001D456|√∑\n\U0001D44E\U0001D456\n2\n\U0001D45B\n\U0001D456\
    =1\n−√∑\n\U0001D44F\U0001D456\n2\n\U0001D45B\n\U0001D456=1\n|)\n2\n∗[\U0001D460\
    \U0001D456\U0001D45B2(\U0001D703)+0.001]∗√∑\n\U0001D464\U0001D456\U0001D44E\U0001D456\
    \n2\n\U0001D45B\n\U0001D456=1\n∗√∑\n\U0001D464\U0001D456\U0001D44F\U0001D456\n\
    2\n\U0001D45B\n\U0001D456=1\n4\n   (18) \nAn example is given for demonstrating\
    \ how this feature weighting approach works. The Iris \nplant dataset is employed\
    \ and the detail of this dataset is explained in Appendix A. The workflow \nof\
    \ adjusting the weights for the features (sepal length, sepal width, petal length,\
    \ and petal width) \nis presented in Figure 32. The result of the adjusted weights\
    \ is shown in Figure 33. \n \n Figure 32. The workflow of adjusting the weights\
    \ for the Iris plant dataset. \n77 \n \n \nFigure 33. The result of adjusted weights\
    \ for the four features. \nIn Figure 33, the initial weight for all four attributes\
    \ was 0.25 in the first iteration. According \nto the ranking of distances between\
    \ each feature and the cluster center, the weights were adjusted. \nFrom the result\
    \ in Figure 33, the features petal length and petal width contributed more than\
    \ other \ntwo. \n4.3. A fast case retrieval algorithm \nTypical case retrieval\
    \ algorithms try to identify the most similar past cases by traversing the \n\
    whole case base, leading to low efficiency in generating the results. In this\
    \ thesis, a fast case \nretrieval algorithm is designed, taking advantage of the\
    \ associations between past cases. At first, \nthe features of a new case are\
    \ compared with an entry-point case. According to the similarity \nmeasurement,\
    \ associated similar or dissimilar cases are then selected for comparison \npreferentially,\
    \ instead of traversing the whole case base. As a consequence, the proposed \n\
    algorithm can enhance the retrieval efficiency significantly. \n4.3.1. A set of\
    \ policies for the retrieval algorithm \nFirst and foremost, it is necessary to\
    \ determine whether the two compared cases are similar \nor dissimilar. Table\
    \ 8 is presented for demonstrating the correspondence between the similarity \n\
    level and measurements. \n \n \n \n78 \n \nTable 8. Correspondence between the\
    \ similarity level and measurements. \nLevel \nCondition \nIdentical \nThe compared\
    \ two cases are exactly the same, \nachieving a similarity measurement at 100.00%.\
    \ \nHighly similar \nThe compared two cases achieve a similarity \nmeasurement,\
    \ ranging from 75.00% to 99.99%. \nSimilar \nThe compared two cases achieve a\
    \ similarity \nmeasurement, ranging from 50.00% to 74.99%. \nDissimilar \nThe\
    \ compared two cases achieve a similarity \nmeasurement, ranging from 25.00% to\
    \ 49.99%. \nHighly dissimilar \nThe compared two cases achieve a similarity \n\
    measurement, ranging from 0.00% to 24.99%. \nIn regards to the association determination\
    \ (for selecting the associated similar or dissimilar \ncases), a set of policies\
    \ is defined in the proposed case retrieval algorithm, shown as follows. \n• \n\
    Policy 1 – Detection of identical cases: If a past case is detected identical\
    \ to the new case, \nthe case retrieval algorithm terminates immediately. The\
    \ output is this identical case. \n• \nPolicy 2 – Token assignments: \no If a\
    \ past case is considered highly similar to the new case, three positive tokens\
    \ will be \nassigned to this past case. \no If a past case is considered similar\
    \ to the new case, one positive token will be assigned \nto this past case. \n\
    o If a past case is considered dissimilar to the new case, one negative token\
    \ will be \nassigned to this past case. \no If a past case is considered highly\
    \ dissimilar to the new case, three negative tokens will \nbe assigned to this\
    \ past case. \n• \nPolicy 3 – Association selection: The association with more\
    \ tokens will be selected for \ncomparison. When the number of positive tokens\
    \ is greater than negative ones, the past case \nwith the highest similarity measurement\
    \ will be selected. The associated similar cases of this \nchosen one will be\
    \ evaluated in the next iteration. While the comparative result of the current\
    \ \niteration suggests that the number of negative tokens is more, then the past\
    \ case with the \nlowest similarity measurement will be selected. Consequently,\
    \ the associated dissimilar cases \nof this selected one are retrieved from the\
    \ case base for comparison in the next iteration. \n• \nPolicy 4 – Selection of\
    \ previous cases: It happens that all associated cases in a single iteration \n\
    have been compared previously due to the reason that a past case can be associated\
    \ with a 1-\n79 \n \nto-N relation. It makes no sense to repeatedly evaluate cases\
    \ that have been already compared \nbefore, resulting in an endless loop for the\
    \ algorithm. Under this circumstance, the cases to \nbe evaluated in the next\
    \ iteration are selected from previous iterations. Based on the number \nof tokens,\
    \ corresponding association is determined and the past case with the second highest\
    \ \n(or lowest) similarity measurement from the previous iteration will be chosen\
    \ for comparison. \nIf the past cases in the previous iteration have all been\
    \ selected, then the algorithm will repeat \nPolicy 4 one more time. \nThe above\
    \ set of policies is applicable under the circumstance that each past case is\
    \ \nassociated with three similar and three dissimilar cases. Because the number\
    \ of associated cases \ndepends on the size of the case base. When the case base\
    \ contains more past cases, more \nassociations should be built. As a consequence,\
    \ the number of tokens (in Policy 4) should be \nincreased for ensuring that the\
    \ highly similar and highly dissimilar associations can be compared \npreferentially.\
    \ \n4.3.2. Design of the case retrieval algorithm \nThe workflow of the proposed\
    \ case retrieval algorithm is presented in Figure 34. As shown \nin the figure,\
    \ the case retrieval algorithm firstly starts with the new case input by users.\
    \ An entry-\npoint case is randomly selected from the case base for comparison\
    \ in the first iteration. Based on \nthe similarity measurement, the algorithm\
    \ decides whether the new case is similar (or dissimilar) \nto the entry-point\
    \ case. Afterwards, the corresponding association is determined and associated\
    \ \nsimilar (or dissimilar) past cases are retrieved from the case base for comparison.\
    \ Then, the \nsimilarity between the new case and association similar (or dissimilar)\
    \ ones are measured in the \nnext iterations, until the termination condition\
    \ is reached. The termination condition of the \nalgorithm is defined as: (i)\
    \ the maximum iteration number is reached, or (ii) a set of satisfactory \nsimilar\
    \ past cases is retrieved successfully.  \nThe pseudo code of the proposed case\
    \ retrieval algorithm is displayed in Figure 35. \n80 \n \n \nFigure 34. The workflow\
    \ of the proposed case retrieval algorithm. \n \nFigure 35. The pseudo code of\
    \ the proposed case retrieval algorithm. \n81 \n \nFor better demonstrating the\
    \ proposed case retrieval algorithm, an example is presented in \nFigure 36. \n\
    \ \nFigure 36. An example of the proposed case retrieval algorithm. \nIn Figure\
    \ 36, Pi represents the ith past case in the case base, while N1 denotes the new\
    \ case. \nInitially, P1 is selected as the entry-point case for comparison with\
    \ N1 in the first iteration. The \nsimilarity measurement of P1 and N1 reaches\
    \ 30.96%, indicating that P1 is dissimilar to N1. \nTherefore, the dissimilar\
    \ association of P1 is chosen for comparison according to Policies 2 and \n3.\
    \ In the second iteration, P336, P157, and P479 are compared with N1. In this\
    \ iteration, the number \nof positive tokens is greater than negative ones, thus\
    \ the associated similar cases of P157, which \nhas the highest similarity measurement,\
    \ are selected for comparison in the next iteration according \nto Policies 2\
    \ and 3. The case retrieval algorithm keeps running until the 6th iteration, all\
    \ past cases \nhave been repeated and used previously. According to Policy 4,\
    \ P339 which has the second highest \nsimilarity measurement from the 5th iteration\
    \ is chosen as a substitution for comparison in the 6th \niteration. The output\
    \ of this retrieval algorithm is a past case which has the greatest commonalities\
    \ \nwith the new case. The travelling trajectory of the proposed case retrieval\
    \ algorithm in the above \nexample is presented in Figure 37. \n82 \n \n \nFigure\
    \ 37. The travelling trajectory of the proposed retrieval algorithm in the example.\
    \ \nIn Figure 37, it is shown that the proposed retrieval algorithm only compares\
    \ the interested \nassociations. For instance, the similarity measurement between\
    \ P1 and N1 indicates that the \ndissimilar association of P1 should be selected\
    \ for comparison next. Thus, the similar association \nof P1 is ignored. Under\
    \ this circumstance, the retrieval algorithm avoids comparing irrelevant \ncases,\
    \ and therefore improves the retrieval efficiency. \n4.4. A learning-based approach\
    \ for solution reuse and revision \nAfter retrieving the similar past cases, their\
    \ solutions are reused to solve the new problem. \nHowever, the retrieved cases\
    \ are not exactly same as the new ones in most scenarios. Therefore, \nthe solution\
    \ of retrieved cases needs to be revised. For a revision task, it should recognize\
    \ when \nan adaptation should be applied because there are major differences between\
    \ the new and \nretrieved cases. Moreover, the revision task should refine the\
    \ retrieved solution to reflect the \ndifference between the new problem and solved\
    \ ones, as appropriate. For instance, in a clinical \nCBR system, a retrieved\
    \ case with light symptoms should increase the treatment dosage to reflect \n\
    the additional symptoms in the new case [261]. \nInspired from the general case\
    \ representation formalism which consists of the problem and \nsolution pairs,\
    \ a revision can also be considered as situation and action pairs. The situation\
    \ part \nindicates the detected differences between the new and retrieved cases,\
    \ while the action part \ncontains the adaptation for the retrieved solution like\
    \ (i) new values for updating the solution, (ii) \nelements to be added, deleted,\
    \ or changed in the solution, and (iii) more specialized knowledge \nfor extending\
    \ the solution. \n83 \n \n4.4.1. Overview of the revision strategy \nThe case\
    \ base is full of useful knowledge about the problem-solving domain because a\
    \ set \nof cases and their solutions are stored in the case base. By this nature,\
    \ the revision strategy can be \nlearned from previous adaptation strategies.\
    \ Therefore, a learning-based approach is adopted for \ncompleting the revision\
    \ task. The overview of the proposed revision process in CBR is presented \nin\
    \ Figure 38. \n \nFigure 38. The overview of the proposed revision process in\
    \ CBR. \n \nIn Figure 38, four steps are followed for completing the adaptation.\
    \ \n• \nStep 1: The new case \U0001D4411 is compared with past cases in the full\
    \ case base. The most similar \npast case is retrieved and marked as an adaptation\
    \ case \U0001D434\U0001D4371. \n• \nStep 2: The adaptation case \U0001D434\U0001D437\
    1 is removed from the full case base, therefore a cut-down \ncase base is formed.\
    \ The same retrieval process is performed and a collection of similar past \n\
    cases \U0001D443\U0001D456 is retrieved from the cut-down case base. \n• \nStep\
    \ 3: The new case, adaptation case and all retrieved past cases are regarded as\
    \ inputs to \nthe learning component for obtaining the adaptation knowledge. \n\
    • \nStep 4: The learned adaptation strategy is applied to the new case \U0001D441\
    1. \nFor steps 1 and 2, the retrieval component employs the triangular similarity\
    \ measure and the \nfast retrieval algorithm explained in Sections 4.2 and 4.3\
    \ respectively. For the third step, the \nlearning component tries to identify\
    \ the differences between the new case and retrieved past cases. \n84 \n \nThe\
    \ detail of the learning component will be explained later in Section 4.4.2. For\
    \ the fourth step, \nthe adaptation strategy learned from the third step is applied\
    \ to the new case. \n4.4.2. Design of the learning component \nAs mentioned before,\
    \ the revision can be considered as a situation and action pair. The \nsolution\
    \ of the retrieved case can be adapted to the new problem by learning from other\
    \ past cases. \nFirstly, it is necessary to identify the difference between the\
    \ new case \U0001D4411 and the adaptation case \n\U0001D434\U0001D4371 (See Figure\
    \ 39). \nIn Figure 39, owing to the advantage of the feature vector representation,\
    \ the difference \nbetween the problem part of the new case \U0001D4411 and the\
    \ adaptation past case \U0001D434\U0001D4371 can be measured \nby Equation (19).\
    \ \n△\U0001D482\U0001D48D\U0001D48D= ∑\n\U0001D464\U0001D456|\U0001D465\U0001D456\
    \U0001D45A − \U0001D465\U0001D457\U0001D45A|\n\U0001D45B\n\U0001D456=1\n     \
    \                     (19) \nWhere △\U0001D482\U0001D48D\U0001D48D denotes the\
    \ overall difference between the cases. While \U0001D465\U0001D456\U0001D45A and\
    \ \U0001D465\U0001D457\U0001D45A represent \nthe values of features for each case\
    \ respectively. \U0001D464\U0001D456 indicates the weight for each feature. \n\
    \ \nFigure 39. Identifying the difference between the new case \U0001D4411 and\
    \ retrieved past case \U0001D434\U0001D4371. \nAfter obtaining the difference,\
    \ the adaptation case \U0001D434\U0001D4371 is treated as a new case for the \n\
    retrieval task within the cut-down case base. The objective of the second case\
    \ retrieval task is to \nidentify a collection of past cases which have similar\
    \ difference to the detected difference between \nthe new case and the adaptation\
    \ case. It is worth noting that each past case consists of a complete \npair of\
    \ problem and solution. Meanwhile, owing to the associated case representation\
    \ method, \neach past case is associated with several similar and dissimilar cases.\
    \ By looking into the \ndifferences of past cases, it is possible to learn the\
    \ adaptation strategy for revising the solution \nand applying the revised solution\
    \ to the new case. An example is given in Tables 9 to 12 for \n85 \n \ndemonstrating\
    \ how the adaptation strategy can be learned from the difference between past\
    \ cases. \nThis example describes an agricultural problem about applying the chemical\
    \ treatment, \nconcerning the relationships between infected areas and the amount\
    \ of the chemical applications. \nTable 9. An example of problem differences between\
    \ the new case and adaptation case (Scenario \n1). \nCase ID \nInfected area (m2)\
    \ \nDifference \nSolution (mg) \nN1 \n100 \nN/A \nN/A \nAD1 \n102 \n-2 \n0.05\
    \ \nTable 10. An example of problem differences between past cases (Scenario 1).\
    \ \nCase ID \nInfected area (m2) \nDifference \nSolution (mg) \nAdaptation action\
    \ \nAD1 \n102 \n-2 (target) \n0.05 \n0 \nP101 \n103 \n-1 \n0.05 \nN/A \nP102 \n\
    104 \n-2 \n0.05 \nN/A \nTable 11. An example of problem differences between the\
    \ new case and adaptation case (Scenario \n2). \nCase ID \nInfected area (m2)\
    \ \nDifference \nSolution (mg) \nN2 \n200 \nN/A \nN/A \nAD2 \n250 \n-50 \n0.10\
    \ \nTable 12. An example of problem differences between past cases (Scenario 2).\
    \ \nCase ID \nInfected area (m2) \nDifference \nSolution (mg) \nAdaptation action\
    \ \nAD2 \n250 \n-50 (target) \n0.10 \n-0.05 \nP201 \n300 \n-50 \n0.15 \nN/A \n\
    P202 \n305 \n-55 \n0.15 \nN/A \nThe following two scenarios are presented in the\
    \ above tables. \nTables 9 and 10 demonstrate the first scenario, the infected\
    \ area in the new case \U0001D4411 has a \nvalue of 100 m2 and the adaptation\
    \ case in the first retrieval task is \U0001D434\U0001D4371 with a value of 102\
    \ m2. \nTherefore, the difference between these two cases is calculated. In the\
    \ second case retrieval task, \n\U0001D434\U0001D4371 is treated as a new case\
    \ and two past cases \U0001D443101 and \U0001D443102 are retrieved from the cut-down\
    \ \ncase base. It is detected that these retrieved two cases have similar difference\
    \ (value of ‘-2’) with \n\U0001D4411 and \U0001D434\U0001D4371. Meanwhile, it\
    \ is noted that the solution part of \U0001D434\U0001D4371, \U0001D443101, and\
    \ \U0001D443102 is the same, \n86 \n \nmeaning that this solution is appliable\
    \ to all cases with such minor difference. Thus, the retrieved \nsolution of \U0001D434\
    \U0001D4371 (applying 0.05 mg of chemicals) will be used to deal with the new\
    \ case \U0001D4411 \nwithout any update. \nThe second scenario is presented in\
    \ Tables 11 and 12. In this scenario, the infected area of \nthe new case \U0001D441\
    2 has a value of 200 m2. It is assumed that the most similar past case that can\
    \ be \nretrieved from the full case base is \U0001D434\U0001D4372 with a value\
    \ of 250 m2. It is obvious that the new case \nand the retrieved past case has\
    \ a major difference in the feature value. Under this circumstance, \nthe solution\
    \ of the retrieved case \U0001D434\U0001D4372  might be not suitable for the new\
    \ case \U0001D4412 . As a \nconsequence, the adaptation case \U0001D434\U0001D437\
    2 is treated as a new case in the second case retrieval task \nand past cases\
    \ (\U0001D443201 and \U0001D443202) are retrieved from the cut-down case base.\
    \ It is noted that \U0001D434\U0001D4372, \n\U0001D443201 and \U0001D443202 achieve\
    \ a similar difference value at around minus 50. Thus, the knowledge of \nadapting\
    \ the solutions of \U0001D443201 and \U0001D443202 to solve \U0001D434\U0001D437\
    2 can be learned. In Table 12, considering \nthe differences between cases, the\
    \ amount of applied chemical treatments is reduced by 0.05 mg. \nConsequently,\
    \ it is possible to reduce 0.05 mg of chemicals in the solution of the adaptation\
    \ case \n\U0001D434\U0001D4372 for generating a new solution to solve the new\
    \ case \U0001D4412. The output result of the revised \nsolution is to apply 0.05\
    \ mg of chemicals to the infected area. \nConclusively, the learning component\
    \ can be summarized in Figure 40. \n \nFigure 40. The workflow of the learning\
    \ component. \nIn the upper part of Figure 40, it shows a typical retrieve process\
    \ in CBR. The retrieved \ncontent consists of both problem and solution parts\
    \ of a past case. In the lower part of Figure 40, \nthe difference between the\
    \ new case and the adaptation case is calculated based on the feature \nvalues\
    \ and their weights. The retrieved solution of the adaptation case is updated\
    \ based on the \n87 \n \ndetected difference between the retrieved past cases\
    \ from the cut-down case base. Lastly, the \nrevised solution is applied to the\
    \ new problem. \n4.4.3. Adaptation actions: A case study \nThe adaptation actions\
    \ capture the update that transforms the retrieved solution of the \nadaptation\
    \ case into a target solution for solving the new problem. For the numeric adaptation,\
    \ \nthe action part is simple because it usually involves a calculation like adding\
    \ the numeric \ndifference between the target and retrieved solutions. However,\
    \ the adaptation of symbolic \nsolutions is more challenging due to the reason\
    \ that the dissimilarity of numeric features can be \ncalculated for updating\
    \ a numeric solution, but this dissimilarity measurement is not appliable to \n\
    symbolic features. Nevertheless, the adaptation of numeric solutions provides\
    \ insight into what is \ndesirable for the adaptation of symbolic solutions. The\
    \ foundation of an adaptation action depends \non the detection of differences\
    \ between compared cases, and most importantly, how the update \nreflects these\
    \ differences. \nA case study on pest management is conducted for demonstrating\
    \ how the symbolic features \nin the solutions can be adapted. Generally, the\
    \ problem part of a pest management case mainly \nconcerns, but are not limited\
    \ to, the following factors. \n• \nPest variables: \no Pest species: This variable\
    \ affects the selection of a specific pesticide. \no Pest quantity: This variable\
    \ determines the amount of applied pesticide. \no Maturity of pests: This variable\
    \ affects the selection of a specific pesticide. \n• \nEnvironmental variables:\
    \ \no Solar irradiance: This variable may promote the breakdown of many chemicals.\
    \ Most \nof the pesticides are subjected to the photodecomposition. \no Temperature:\
    \ This variable is another important factor in the breakdown of pesticides. \n\
    Applying the chemicals near the root of plants or at the top of their leaves has\
    \ a major \ndifference because temperature at the top is higher than that near\
    \ the soil surface. \no Humidity: This variable affects the performance of pesticide\
    \ applications as well. In \nrainy days, the rain can wash away the pesticides\
    \ attached on the plants. Furthermore, the \nrain can dilute the pesticide concentration.\
    \ \no Soil pH: Soil is a mixture of organic and inorganic bases and acids, all\
    \ of which react \nwith each other to form the soil pH value. Since pesticides\
    \ can be categorized by acidic and \nalkaline ones, if a slightly acidic pesticide\
    \ is applied to an alkaline surface, this pesticide \nmay break down more rapidly.\
    \ For instance, Captan (also known as ethanethiol or ethyl \nmercaptan and it\
    \ is often added as a component of pesticide mixtures for controlling \n88 \n\
    \ \ndiseases on a number of fruits and vegetables as well as ornamental plants)\
    \ has a half-life \nof three hours at a pH value of 7.0, but only 10 minutes at\
    \ a pH value of 8.0. \nThe solution part of a pest management case should include\
    \ the following information [262]. \n• \nSelection of nozzle type: This variable\
    \ decides the nozzles for giving pesticides in the fields. \nThe nozzle type includes\
    \ cone, deflector, air induction, etc. \n• \nSpray volume: This variable determines\
    \ the number of pesticide droplets produced and the \ntarget is covered by a pesticide.\
    \ Usually, higher application volumes are required for effective \ncoverage of\
    \ the target. However, high-volume spraying can result in wastage of chemicals\
    \ as \nwell. \n• \nSpray concentration: This variable implies the applied dosage\
    \ which is the amount of \nformulation to be mixed with water. When the spray\
    \ volume rate is low, the spray \nconcentration should be higher, bringing the\
    \ advantage of wetting foliage more effectively. \n• \nOperating pressure: This\
    \ variable has influence on the flow rate and spraying quality. A \nproper operating\
    \ pressure can avoid potential spray drift. \n• \nSpray angle: This variable indicates\
    \ the angle of nozzles. Wide and narrow angles are both \nadopted. However, they\
    \ have different application scenarios. For instance, narrow angled \nnozzles\
    \ (i.e. 80 degree) are efficient for row crops. \nTaking into account both the\
    \ problem and solution parts, an example of the pest management \ncase is presented\
    \ in Figure 41. \n \nFigure 41. An example of a normal pest management case. \n\
    89 \n \nFor the content of a new case, it only contains the problem part, leaving\
    \ the solution and \nassociation parts empty temporarily. For all the past cases\
    \ in the case base, their contents should \ninclude all three parts. After the\
    \ first case retrieval task (Step 1 in Figure 38), an adaptation case \nis retrieved\
    \ and then treated as a new input to the second case retrieval task (Step 2 in\
    \ Figure 38). \nThere is a slight change in this new input due to the extension\
    \ of an additional part, named \ndifference part (See Figure 42). This difference\
    \ part is helpful for identifying a list of past cases \nwhich has similar differences\
    \ to the new input case. \n \nFigure 42. An example of an adaptation case. \n\
    In Figure 42, the difference between the new case and the adaptation case is calculated\
    \ by \nEquation (19). This adaptation case is treated as a new input to the second\
    \ case retrieval task. If \nthe similar difference between the adaptation case\
    \ and other past cases is detected, then the \nadaptation strategy can be learned\
    \ from these past cases and the revised solution may be \npotentially applicable\
    \ to the new problem. \nIn this case study, a new case, an adaptation case and\
    \ three past cases will be selected from \na case base where 300 cases are stored\
    \ [263]. The association parts of the adaptation case and \nother past cases are\
    \ not considered because the scale of the case base is small. This case study\
    \ \ntries to manage the pest problems for Chilo suppressalis (a pest of rice).\
    \ Therefore, the pest species \nare not taken into account when measuring the\
    \ similarity of cases. The initial weights for all other \nsix features are 0.1667\
    \ and they are updated by Equation (17) for determining which features have \n\
    90 \n \ngreater influence. The final weights are 0.2051 (pest quantity), 0.0938\
    \ (maturity of pest), 0.1723 \n(solar irradiance), 0.1724 (temperature), 0.1499\
    \ (humidity), and 0.2065 (soil pH) respectively, \nshown in Figure 43.  \n \n\
    Figure 43. Feature weights for pest management cases. \n \n After executing the\
    \ first case retrieval task, the adaptation case is retrieved from the case \n\
    base. The data visualization of features of these two cases is displayed in Figure\
    \ 44. The similarity \nmeasurement reaches 97.98%, while the difference between\
    \ these two cases has a value of 0.1120 \naccording to Equation (19). \n \nFigure\
    \ 44. Data visualization of features of the new case and adaptation case. \n \n\
    In Figure 44, it is observed that the main difference between these two cases\
    \ lies on the \nfeatures of maturity of pest and temperature. \n91 \n \n \nIn\
    \ the second case retrieval task, the adaptation case is treated as an input to\
    \ the retrieval \ncomponent. The retrieval result is a collection of three past\
    \ cases and the data visualization is \npresented in Figure 45. The similarity\
    \ measurement and difference values are listed in Table 13. \n  \nFigure 45. Data\
    \ visualization of features of the adaptation case and retrieved past cases. \n\
    Table 13. Similarity measurements and difference values of retrieved past cases.\
    \ \nCase ID Similarity measurement Difference values \n1 \n97.89% \n0.0812 \n\
    2 \n97.86% \n0.0862 \n3 \n96.32% \n0.9183 \n \nAfter identifying the difference\
    \ between the features of past cases, it is important to look into \nhow the solution\
    \ of the adaptation case can be revised to match the solutions of retrieved past\
    \ \ncases. The solutions are listed in Table 14. \nTable 14. Solutions of the\
    \ adaptation case and retrieved past cases. \nCase ID \nNozzle type \nSpray \n\
    volume \nSpray \nconcentration \nOperating \npressure \nSpray \nangle \nAdaptation\
    \ \ncase \nCone \n4600 \nHigh \n3 \n60 \nPast case 1 \nCone \n4411 \nHigh \n3\
    \ \n60 \nPast case 2 \nAir induction \n4930 \nLow \n5 \n90 \nPast case 3 \nCone\
    \ \n4858 \nHigh \n3 \n60 \n92 \n \n \nIn Table 14, apart from the past case 2,\
    \ other past cases and the adaptation case adopts similar \nsolutions (using a\
    \ cone nozzle, under high spray concentration, at 3 bar operating pressure, and\
    \ \nwith a narrow angle of 60 degree). The main difference is the spray volume,\
    \ depending on the \npest quantity and maturity of pest. Based on the difference\
    \ of the spray volume, it is learned that \na larger quantity of pests requires\
    \ a higher volume of pesticides. Therefore, the difference of the \nspray volume\
    \ is analyzed in Table 15. \nTable 15. Analysis of the pest quantity and spray\
    \ volume. \nCase ID \nPest \nquantity \nQuantity \ndifference \nSpray \nvolume\
    \ \nVolume \ndifference \n \nAdaptation \ncase \n857 \n+18 (with new \ncase) \n\
    4600 \nTBD \n \nPast case 1 \n841 \n-16 \n4411 \n-189 \n \nPast case 2 \n892 \n\
    +35 \n4930 \n+330 \n \nPast case 3 \n870 \n+13 \n4858 \n+258 \n \n \nAccording\
    \ to Table 15, it is determined that the difference value between the adaptation\
    \ case \nand past case 1 is minus 16, the volume difference between the adaptation\
    \ case and past case 3 is \n258. The difference value between the new case and\
    \ adaptation case is 18. For revising the \nsolution of the adaptation case, it\
    \ is possible to reduce the spray volume by a certain amount. \nTherefore, the\
    \ revised solution for the new case is to use a cone nozzle to spray 4377 units\
    \ \n(4600 − (189 + 258)/2) of pesticides under high spray concentration, at 3\
    \ bar operating \npressure, and with a narrow angle of 60 degree. Compared this\
    \ revised solution of the original \none stored in the case base, the result shows\
    \ a successful revision. The revised solution and the \noriginal one is shown\
    \ in Table 16. \nTable 16. Comparison of the revised solution and original one.\
    \ \nSolution \nNozzle type \nSpray \nvolume \nSpray \nconcentration \nOperating\
    \ \npressure \nSpray \nangle \nRevised \nsolution \nCone \n4377 \nHigh \n3 \n\
    60 \nOriginal \nsolution \nCone \n4420 \nHigh \n3 \n60 \n93 \n \n \nIn Table 16,\
    \ the revised solution only has a minor difference in the feature of the spray\
    \ \nvolume from the original solution. The rest of features is the same. In conclusion,\
    \ the learning-\nbased approach for solution reuse and revision is effective.\
    \ \n4.5. An associated case retention approach \nAfter successfully solving the\
    \ new problem with the revised solution, the learned case should \nbe retained\
    \ to the case base. The typical approach is to directly add the newly-solved case\
    \ into the \ncase base, along with its solutions. Under the circumstance when\
    \ the new case is extremely similar \nto a past case that has been already stored\
    \ in the case base, a deletion strategy could be applied \nafter evaluating the\
    \ quality of both cases. In this thesis, apart from the normal process of case\
    \ \nretention, the update of the association is also considered because the performance\
    \ of the case \nretrieval algorithm depends on the similar and dissimilar association\
    \ of cases. \nIn this thesis, the proposed case retention approach takes care\
    \ of case base maintenance in \nthe following two aspects: (i) storing the learned\
    \ case, and (ii) updating the existing association \nof past cases. \n4.5.1. Storing\
    \ the learned case \nIn CBR, the efficiency of the system is largely affected\
    \ by the presence of the number of \ncases that are stored in the case base. It\
    \ is desirable to only retain the useful cases, and therefore \nto improve the\
    \ efficiency of the CBR systems. \nIn this sub-section, a case competence model\
    \ is used to evaluate the goodness of a learned \ncase for determine whether this\
    \ case should be retained or not [264]. Generally, the competence \nof a CBR system\
    \ is decided by the range of a target problem that can be solved by the given\
    \ \nsystem. The competence of a case base relies on the local competence properties\
    \ of each case and \nthe relationship between these cases. The local competence\
    \ of an individual case can be \ncharacterized by its coverage and reachability.\
    \ Consider a set of cases (\U0001D436) and a space of target \nproblems (\U0001D447\
    ). For describing these properties, a relation ‘solves’ between a case \U0001D450\
    \ (\U0001D450 ∈ \U0001D436) and a \ntarget problem \U0001D461 (\U0001D461 ∈ \U0001D447\
    ) is defined (i.e. \U0001D460\U0001D45C\U0001D459\U0001D463\U0001D452\U0001D460\
    (\U0001D450, \U0001D461)). This relation specifies that a case \U0001D450 can\
    \ \nbe retrieved from the case base and its solution can be adapted to solve the\
    \ target problem \U0001D461. \n• \nCoverage: The coverage set of a case is the\
    \ set of all target problems that can be solved by \nthis case. This set can be\
    \ defined in Equation (20). \n\U0001D46A\U0001D490\U0001D497\U0001D486\U0001D493\
    \U0001D482\U0001D488\U0001D486\U0001D47A\U0001D486\U0001D495(\U0001D484) = {\U0001D450\
    ′ ∈ \U0001D436:\U0001D460\U0001D45C\U0001D459\U0001D463\U0001D452\U0001D460(\U0001D450\
    , \U0001D450′)}                     (20) \n94 \n \n• \nReachability: The reachability\
    \ set is the set of a target problem that all cases can be used to \nsolve it.\
    \ This set can be defined in Equation (21). \n\U0001D479\U0001D486\U0001D482\U0001D484\
    \U0001D489\U0001D482\U0001D483\U0001D48A\U0001D48D\U0001D48A\U0001D495\U0001D49A\
    \U0001D47A\U0001D486\U0001D495(\U0001D484) = {\U0001D450′ ∈ \U0001D436:\U0001D460\
    \U0001D45C\U0001D459\U0001D463\U0001D452\U0001D460(\U0001D450′, \U0001D450)} \
    \                  (20) \nMoreover, a related set can be defined in Equation (21),\
    \ referring to the set produced from \nthe union of a case’s coverage and reachability\
    \ sets. \n\U0001D479\U0001D486\U0001D48D\U0001D482\U0001D495\U0001D486\U0001D485\
    \U0001D47A\U0001D486\U0001D495(\U0001D484) = \U0001D436\U0001D45C\U0001D463\U0001D452\
    \U0001D45F\U0001D44E\U0001D454\U0001D452\U0001D446\U0001D452\U0001D461(\U0001D450\
    ) ⋃ \U0001D445\U0001D452\U0001D44E\U0001D450ℎ\U0001D44E\U0001D44F\U0001D456\U0001D459\
    \U0001D456\U0001D461\U0001D466\U0001D446\U0001D452\U0001D461(\U0001D450)     \
    \        (21) \nFor example, in Figure 46, \U0001D436\U0001D45C\U0001D463\U0001D452\
    \U0001D45F\U0001D44E\U0001D454\U0001D452\U0001D446\U0001D452\U0001D461(\U0001D450\
    1, \U0001D4502) = {\U0001D4503}, while \U0001D445\U0001D452\U0001D44E\U0001D450\
    ℎ\U0001D44E\U0001D44F\U0001D456\U0001D459\U0001D456\U0001D461\U0001D466\U0001D446\
    \U0001D452\U0001D461(\U0001D4504) =\n{{\U0001D4501, \U0001D4502, \U0001D4505},\
    \ {\U0001D4503}}.  \n \nFigure 46. An example of the case base for demonstrating\
    \ coverage and reachability. \nThe size of the coverage set of a case is only\
    \ a measure of its local competence. For instance, \na case coverage set can overlap\
    \ to limit the competence contributions of individual cases, or it \nmight be\
    \ isolated and exaggerate contributions of individual cases. It is possible that\
    \ a case with \na larger coverage set makes little or no contributions to the\
    \ global competence due to the reason \nthat its contribution is subsumed by the\
    \ local competences of other cases. Under certain extreme \ncircumstances, there\
    \ may be cases with relatively small contributions than others, but these \ncontributions\
    \ may nonetheless be crucial if there are no competing cases. Therefore, a measure\
    \ \nof the coverage of a case, relative to other nearby cases can be defined in\
    \ Equation (22), named \nrelative coverage. \n\U0001D479\U0001D486\U0001D48D\U0001D482\
    \U0001D495\U0001D48A\U0001D497\U0001D486\U0001D46A\U0001D490\U0001D497\U0001D486\
    \U0001D493\U0001D482\U0001D488\U0001D486(\U0001D484) = ∑\n1\n\U0001D450′∈\U0001D436\
    \U0001D45C\U0001D463\U0001D452\U0001D45F\U0001D44E\U0001D454\U0001D452\U0001D446\
    \U0001D452\U0001D461(\U0001D450) |\U0001D445\U0001D452\U0001D44E\U0001D450ℎ\U0001D44E\
    \U0001D44F\U0001D459\U0001D456\U0001D461\U0001D466\U0001D446\U0001D452\U0001D461\
    (\U0001D450′)|\n            (22) \n95 \n \n \nIn Equation (22), the relative coverage\
    \ estimates the unique competence contribution of an \nindividual case, as a function\
    \ of the size of the case’s coverage set. Generally, the relative \ncoverage weights\
    \ the contribution of each covered case by the degree to which these cases are\
    \ \ncovered. The essence of this concept is that if a case is covered by \U0001D45B\
    \ other cases, then each of \nthe \U0001D45B cases will receive a contribution\
    \ of 1 \U0001D45B\n⁄  from this case to their relative coverage measures. \n \n\
    Conclusively, if the new problem achieves a value of the relative coverage that\
    \ is greater \nthan the lowest relative coverage in the case base, then the learned\
    \ case will be retained in the \ncase base. Otherwise, the deletion strategy will\
    \ be adopted and the learned case will not be stored. \n4.5.2. Updating the existing\
    \ association \nAfter the CBR system decides to retain the learned case, the existing\
    \ association of cases should be \nupdated accordingly. The following two scenarios\
    \ are considered in this thesis. \n• \nScenario 1 – Updating the association of\
    \ the new case: If a closer similar or dissimilar \nassociation with the new case\
    \ is detected, the old association of the new case should be \nupdated (See Figure\
    \ 47(a)). \n• \nScenario 2 – Updating the association of the past cases: If a\
    \ new case shows a closer \nassociation with the compared past cases, the old\
    \ association of this past case should be \nreplaced by the new case (See Figure\
    \ 47(b)). \n \n(a) \n96 \n \n \n(b) \nFigure 47. An example of updating the existing\
    \ association: (a) scenario 1; (b) scenario 2. \nIn Figure 47(a), when a new case\
    \ N1 is compared with the past cases P133, P148, and P301, it is \ndetected that\
    \ the similarity measurement between N1 and P148 achieves a higher value. As a\
    \ result, \nP148 takes the first position in the similar association of N1. Meanwhile,\
    \ N1’s existing association \nwith P407 and P157 has a minor adjustment by moving\
    \ backward their positions in the association. \nIt works the same for updating\
    \ the association with P301. \nIn Figure 47(b), the similar and dissimilar association\
    \ of P14 is presented. During the iteration, \nP14 is compared with N1. The comparative\
    \ result indicates that N1 has a closer association than \nP256 with P14. Consequently,\
    \ N1 updates the third position in the similar association of P14 and P256 \n\
    is therefore removed from the association. \n \n97 \n \n5 \nA hybrid decision\
    \ \nsupport mechanism\n98 \n \n    As described in Chapters 3 and 4, the CBR approach\
    \ can be used to model the decision \nsupport system, assisting farmers in managing\
    \ farming operations. After retrieving a collection \nof similar past cases, their\
    \ solutions can be adapted to solve the current situations effectively and \n\
    efficiently. Lastly, the learned case can be stored in the case base for further\
    \ retrieval tasks. \nHowever, it is detected that CBR cannot always retrieve a\
    \ collection of similar past cases because \nthe case base is not wide enough\
    \ to cover everything. It happens that the new problem has never \noccurred before.\
    \ In other words, CBR cannot provide farmers with sufficient advice about solving\
    \ \nthe new problem. As a consequence, a mediator approach for developing a hybrid\
    \ decision \nsupport system is proposed in this chapter. \n5.1. A mediator approach\
    \ for the hybrid decision support system \nIn software engineering, the mediator\
    \ pattern is considered as a behavioral pattern due to the \nreason that it can\
    \ alter the program’s running behavior. It promotes loose coupling by keeping\
    \ \nobjects from referring to each other explicitly and interacting independently.\
    \ In terms of coupling, \nit refers to the degree to which objects depend on each\
    \ other. Usually, tightly coupled objects are \nhard to implement, change, test,\
    \ and reuse because they depend on many different objects. While \nloosely coupled\
    \ objects are easier to implement, change, test, and reuse because they are only\
    \ \nminimal dependencies on other objects. The mediator pattern defines an object\
    \ (Mediator) that \nencapsulates how a set of objects interact. The core of this\
    \ pattern is to let objects interact with \neach other indirectly, but though\
    \ the defined Mediator object that controls and coordinates the \ninteraction.\
    \ This makes the objects loosely coupled because they only depend on the simple\
    \ \nMediator interface. \n5.1.1. Problem statement in the mediator design pattern\
    \ \nThe mediator design pattern tries to solve the problems like the following:\
    \ \n• \nHow can tight coupling between a set of interacting objects be avoided?\
    \ \n• \nHow can the interaction between a set of objects be changed independently?\
    \ \nFor instance, an inflexible way is to define a set of interacting objects\
    \ (Objects1, Objects2, \n…) by referring to each other directly, leading to many\
    \ interconnections between them. An \nexample of tightly coupled objects is presented\
    \ in Figure 48. \n \n \n \n99 \n \n \n(a) \n \n(b) \nFigure 48. An example of\
    \ tightly coupled objects: (a) class diagram; (b) sequence diagram. \n \nIn Figure\
    \ 48, the tightly coupled objects make it impossible to change the interaction\
    \ \nindependently without changing other objects. Meanwhile, this design pattern\
    \ has difficulty in \nreusing and testing existing objects because objects are\
    \ interconnecting with each other tightly. \n \nThe same problem occurs in the\
    \ design of the hybrid decision support system. When the \nCBR decision support\
    \ algorithm is unable to generate the suggestions for farmers, the CBR \nalgorithm\
    \ will request other decision support algorithms for providing the advice. Under\
    \ this \ncircumstance, different decision support algorithms have to communicate\
    \ with each other, as \nshown in Figure 49. \n100 \n \n \n(a) \n \n(b) \nFigure\
    \ 49. Tightly coupled decision support algorithms: (a) class diagram; (b) sequence\
    \ diagram. \n \nIn Figure 49, extra functions have to be implemented if new algorithms\
    \ are added into the \nframework of the decision support systems, leading to high\
    \ communication costs. \n5.1.2. Solution of the mediator approach \nThe mediator\
    \ design pattern provides a solution by defining a separate Mediator object that\
    \ \nencapsulates how a set of objects interact. Instead of interacting with each\
    \ other directly, the \ncommunication between objects is controlled by this Mediator\
    \ object. The class and sequence \ndiagrams of the mediator approach are presented\
    \ in Figure 50. \n101 \n \n \n(a) \n \n(b) \nFigure 50. The solution of the mediator\
    \ approach: (a) class diagram; (b) sequence diagram. \n \nIn Figure 50, a separate\
    \ object, Mediator, is defined as an interface for interacting with other \nobjects.\
    \ Meanwhile, a class (Mediator1) is implemented for controlling and coordinating\
    \ the \ninteraction between objects. Owing to the class inheritance, this mediator\
    \ pattern enables great \nflexibility. For instance, new objects can be added\
    \ into this design and the interaction behavior of \nexisting ones can be changed\
    \ independently by defining new mediator classes. \n102 \n \n \nFor demonstrating\
    \ the effectiveness of the mediator pattern and how a mediator works in \ncontrolling\
    \ the interaction between several objects, an example is presented and implemented\
    \ in \nthe Python programming language. \n \nFirstly, the Mediator interface is\
    \ defined by abstract base classes, shown in Figure 51. \n \nFigure 51. The Python\
    \ code of implementing the abstract Mediator interface. \n \nIn Figure 51, the\
    \ Mediator interface declares a method used by components to notify the \nmediator\
    \ about various events. The mediator may react to these events and pass the execution\
    \ to \nother components. \n \nSecondly, the Mediator interface is instanced in\
    \ Figure 52. \n \nFigure 52. The Python code of implementing the concrete Mediator\
    \ interface. \n \nIn Figure 52, two components (conponent1 and component2) are\
    \ initialized and connected \nto the Mediator interface. Meanwhile, two types\
    \ of events are specified. If each one of the events \nis triggered, component1\
    \ and component2 will execute the assigned tasks accordingly. \n \nThirdly, the\
    \ base component is implemented in Figure 53. \n103 \n \n \nFigure 53. The Python\
    \ code of implementing the base component. \n \nIn Figure 53, the base component\
    \ provides the basic functionality of storing a mediator’s \ninstance inside component\
    \ objects. \n \nFourthly, the two ordinary components are instanced in Figure\
    \ 54. \n \nFigure 54. The Python code of implementing the ordinary components.\
    \ \n \nIn Figure 54, component1 and component2 can execute defined actions when\
    \ being triggered. \nIt is worth mentioning that these concrete components can\
    \ be enriched by various functionalities \nand they do not depend on other components.\
    \ These components do not rely on any concrete \nmediator classes as well. \n\
    \ \n \n \n \n104 \n \nLastly, the main function of the example is implemented,\
    \ shown in Figure 55. \n \nFigure 55. The Python code of implementing the main\
    \ function. \n \nIn Figure 55, two ordinary components are instanced as c1 and\
    \ c2 respectively. Two tests are \nperformed for verifying the mediator pattern\
    \ design. The test results are presented in Figure 56. \n \nFigure 56. The test\
    \ result of the mediator implementation. \nIn the first test, component1 is triggered\
    \ for taking the action A. As demonstrated in Figure \n52, if component1 is triggered,\
    \ component2 is requested to execute the action C. In the second \ntest, component2\
    \ is triggered for taking the action D. After this action, component1 reacts to\
    \ the \nmediator for executing the action B and component2 is taking the action\
    \ C. \n105 \n \nIn conclusion, the Mediator interface is able to coordinate the\
    \ ordinary components \neffectively and it enables a loosely coupled network.\
    \ Each ordinary component can execute tasks \nindependently. \n5.1.3. Design of\
    \ the hybrid decision support system with the mediator \napproach \n \nIn the\
    \ framework of the proposed DSS, it is promising to introduce this mediator pattern\
    \ for \nmanaging the decision support algorithms in case that the CBR algorithm\
    \ fails to retrieve a \ncollection of similar past cases. Considering the combination\
    \ of various algorithms, a framework \nof the hybrid DSS is proposed in Figure\
    \ 57. \n \nFigure 57. The framework of a general hybrid decision support system.\
    \ \n \nIn Figure 57, the mediator component is put between the algorithm manager\
    \ and the \nalgorithm toolbox. This mediator component is responsible to perform\
    \ the following tasks. \n• \nReceiving commands from the algorithm manager. \n\
    • \nForwarding the generated decision supports to the algorithm manager. \n• \n\
    Assigning received missions to the algorithm toolbox. \n• \nReceiving the generated\
    \ decision supports from the algorithm toolbox. \n• \nResponding to failures of\
    \ generating decision supports. \n• \nCoordinating the communication between different\
    \ decision support algorithms. \nBy adopting the mediator approach, various decision\
    \ support algorithms do not need to \ninteract with each other directly, instead,\
    \ the communication is controlled and coordinated by the \n106 \n \nmediator component.\
    \ Three situations are considered in the hybrid DSS: (i) the CBR algorithm \n\
    can generate the decision support independently (in Figure 58), (ii) the CBR algorithm\
    \ fails to \ngenerate the decision support and requests help from other algorithms\
    \ (in Figure 59), and (iii) all \nalgorithms fail to provide the decision supports\
    \ (in Figure 60). \n \nFigure 58. The workflow of the hybrid decision support\
    \ system for situation (i). \n \nFigure 58 displays the workflow of the hybrid\
    \ DSS for the situation that the CBR algorithm \ncan generate the decision supports\
    \ independently. The below steps are followed. \n• \nStep 1: Inputs are sent to\
    \ the MMT.  \n• \nStep 2: As a command and control center for planning and supervising\
    \ the missions, the \nMMT transforms the received inputs into a specific mission.\
    \ This mission is then sent to the \nalgorithm manager component. \n• \nStep 3:\
    \ According to the requirements and constraints of the mission, the algorithm\
    \ manager \ncomponent selects a suitable decision support algorithm and sends\
    \ a request to the mediator \ncomponent (i.e. starting the CBR algorithm). \n\
    • \nStep 4: The mediator component sends the command of starting the CBR algorithm\
    \ and \npasses the mission information to this algorithm for reasoning. \n• \n\
    Step 5: The CBR algorithm takes the mission information and collected data from\
    \ cloud and \nexternal databases as inputs for reasoning. After the decision support\
    \ is generated, the result \nis returned to the mediator component. \n• \nStep\
    \ 6: The mediator component sends the received result to the algorithm manager\
    \ \ncomponent. \n• \nStep 7: The algorithm manager component sends the received\
    \ result to the MMT. \n• \nStep 8: The MMT displays the final output to the users.\
    \ \n107 \n \nFor the above situation, the CBR algorithm can solve the new mission\
    \ independently. \nTherefore, the mediator only communicates with the CBR algorithm\
    \ and the algorithm manager \ncomponent. Other algorithms do not get involved.\
    \ \n \nFigure 59. The workflow of the hybrid decision support system for situation\
    \ (ii). \n \nFigure 59 displays the situation that the CBR algorithm cannot complete\
    \ the mission alone. \nUnder this circumstance, other algorithms are supposed\
    \ to take over the responsibility of \ngenerating the decision supports. As such,\
    \ the below steps are followed to achieve the objective. \n• \nStep 1: Inputs\
    \ are sent to the MMT. \n• \nStep 2: The MMT transforms the received inputs into\
    \ a specific mission. This mission is then \nsent to the algorithm manager component.\
    \ \n• \nStep 3: According to the requirements and constraints of the mission,\
    \ the algorithm manager \ncomponent selects a suitable decision support algorithm\
    \ and sends a request to the mediator \ncomponent (i.e. starting the CBR algorithm).\
    \ \n• \nStep 4: The mediator component sends the command of starting the CBR algorithm\
    \ and \npasses the mission information to this algorithm for reasoning. \n• \n\
    Step 5: When the CBR algorithm fails to retrieve a collection of similar past\
    \ cases, the CBR \nalgorithm returns a failure message to the mediator component\
    \ and requests additional help \nfrom other algorithms. \n• \nStep 6: The indicated\
    \ algorithm receives the request from the mediator component and starts \nthe\
    \ process of generating decision supports. \n• \nStep 7: The generated decision\
    \ support is returned to the mediator component. \n• \nStep 8: The mediator component\
    \ sends the received result to the algorithm manager \ncomponent. \n• \nStep 9:\
    \ The algorithm manager component sends the received result to the MMT. \n108\
    \ \n \n• \nStep 10: The MMT displays the final output to the users. \nFor the\
    \ above situation, since the CBR algorithm cannot provide an output, other decision\
    \ \nsupport algorithms are acting as supplementary components for supporting the\
    \ CBR algorithm. \nMeanwhile, owing to the presence of the mediator component,\
    \ the CBR algorithm and other \nsupplementary algorithms do not interact with\
    \ each other directly. All the communication and \ncoordination tasks are controlled\
    \ by the mediator component. \n \nFigure 60. The workflow of the hybrid decision\
    \ support system for situation (iii). \n \nFigure 60 presents the third situation\
    \ that all algorithms fail to generate the decision supports \nfor the given problem.\
    \ The workflow of this situation is listed as follows. \n• \nStep 1: Inputs are\
    \ sent to the MMT. \n• \nStep 2: The MMT transforms the received inputs into a\
    \ specific mission. This mission is then \nsent to the algorithm manager component.\
    \ \n• \nStep 3: According to the requirements and constraints of the mission,\
    \ the algorithm manager \ncomponent selects a suitable decision support algorithm\
    \ and sends a request to the mediator \ncomponent (i.e. starting the CBR algorithm).\
    \ \n• \nStep 4: The mediator component sends the command of starting the CBR algorithm\
    \ and \npasses the mission information to this algorithm for reasoning. \n• \n\
    Step 5: When the CBR algorithm fails to retrieve a collection of similar past\
    \ cases, the CBR \nalgorithm returns a failure message to the mediator component\
    \ and requests additional help \nfrom other algorithms. \n• \nStep 6: The mediator\
    \ component requests the Algorithm 2 for generating the decision support. \n•\
    \ \nStep 7: The Algorithm 2 sends a failure message to the mediator component.\
    \ \n• \nStep 8: The mediator component requests the Algorithm 3 for generating\
    \ the decision support. \n109 \n \n• \nStep 9: The Algorithm 3 sends a failure\
    \ message to the mediator component. \n• \nStep 10: The mediator component checks\
    \ the registered decision support algorithms. If all \nalgorithms fail to generate\
    \ any results, the mediator component sends a failure message to \nthe algorithm\
    \ manager component. \n• \nStep 11: The algorithm manager component returns the\
    \ failure result to the MMT. \n• \nStep 12: The MMT displays the failure result\
    \ as the output. \nFor the above situation, the mediator component confirms with\
    \ all registered algorithms. If \nall algorithms are unable to generate any results,\
    \ the mediator component will send a failure \nmessage to the algorithm manager\
    \ component. \nInspired by the Oracle Mediator [265] (See Appendix B), in particular\
    \ its functionality and \nmessage exchange patterns, the mediator in this thesis\
    \ has the following functionalities. \n• \nMessage routing: The mediator can consume\
    \ a message from one channel and republish it \nto a different channel based on\
    \ specified conditions. For instance, the algorithm manager \ncomponent would\
    \ like to start the CBR algorithm in the algorithm toolbox component for \nexecuting\
    \ a specific mission. A message should be sent from the algorithm manager to the\
    \ \nalgorithm toolbox through the mediator. \n• \nEvent handling: The mediator\
    \ can both subscribe and raise events. For instance, after a new \nalgorithm is\
    \ registered, an algorithm-registered event can be generated. \n• \nError handling:\
    \ The mediator supports error handling based on fault policies. For instance,\
    \ \nif the CBR algorithm fails to generate decision supports, the mediator is\
    \ able to coordinate \nother algorithms for offering supplementary help. \n• \n\
    Echo: The mediator is able to echo source messages back to the initial caller\
    \ after any \ntransformations, validations, assignments, or sequential operations\
    \ are performed.  \nConsidering the above three situations and four functionalities,\
    \ the structure of a message \ntransmitted between the mediator and other components\
    \ is defined as “Request-Response-Fault” \nin Figure 61. \nIn Figure 61, the header\
    \ of the message stores the information of the sender, receiver, and \ntime stamp.\
    \ For instance, the sender could be the algorithm manager component and the receiver\
    \ \ncan be any one of the algorithms.  \nThe request part starts with a request\
    \ ID, then explains the request information and request \nstatus (i.e. on-going\
    \ or complete). The following requests are considered. Registering an \nalgorithm.\
    \ \n110 \n \n• \nUnregistering an algorithm. \n• \nListing all registered algorithms.\
    \ \n• \nStarting an algorithm. \n• \nStopping an algorithm. \n• \nChecking a running\
    \ algorithm. \nThe response part is composed of a response ID and the response\
    \ information. In general, \nthe response information is the generated decision\
    \ support for the assigned mission. Under the \ncircumstance that the specified\
    \ algorithm fails to provide any results, the response will return a \nfailure\
    \ result. \nThe fault part includes a fault ID, a fault type, and a fault reason.\
    \ The following fault types \nare considered in the hybrid decision support system.\
    \ \n• \nFailure of registering an algorithm. \n• \nFailure of unregistering an\
    \ algorithm. \n• \nFailure of listing registered algorithms. \n• \nFailure of\
    \ starting an algorithm. \n• \nFailure of stopping an algorithm. \n• \nFailure\
    \ of checking a running algorithm. \n• \nFailure of generating a decision support.\
    \ \n \nFigure 61. The structure of the “Request-Response-Fault” message. \n \n\
    It is not necessary to fill each block of the message. For instance, when the\
    \ algorithm \nmanager component request to start the CBR algorithm for executing\
    \ a mission, the CBR \n111 \n \nalgorithm successfully generates the result. Under\
    \ this circumstance, there are not any errors \noccurred, therefore the values\
    \ of fault part are left empty (Null values). \n5.2. A preliminary proof of the\
    \ hybrid concept \nIn this section, a preliminary proof of the hybrid concept,\
    \ namely how the hybrid decision \nsupport system is envisaged to be useful in\
    \ the AFarCloud platform, is provided. In particular, \ntwo decision support algorithms\
    \ are taken into consideration in this hybrid concept, namely the \nCBR algorithm\
    \ and an artificial neural network (ANN) algorithm [266]. \nThis preliminary proof\
    \ concerns the situation that UAVs are adopted to execute plant \nprotection missions.\
    \ The objective is to improve the efficiency of agricultural aviation spraying,\
    \ \nto reduce the use of chemical pesticides, and to increase crop yields by employing\
    \ both CBR and \nANN algorithms. The framework of the hybrid decision support\
    \ system is presented in Figure 62. \n \nFigure 62. The framework of the hybrid\
    \ decision support system combining CBR and ANN. \nIn Figure 62, the mediator\
    \ is responsible to coordinate the communication between the \nalgorithm manager\
    \ component and the algorithm toolbox component.  \nWithin the algorithm toolbox\
    \ component, on the one hand, the CBR algorithm has been \nexplained in Section\
    \ 4, on the other hand, the ANN algorithm is briefly explained in Appendix C.\
    \ \nIn both algorithms, the flight speed (\U0001D45A/\U0001D460), flight altitude\
    \ (\U0001D45A), propeller pitch (\U0001D45A), nozzle \npitch (\U0001D45A), temperature\
    \ (Celsius), wind speed (\U0001D45A/\U0001D460), and prescription value (\U0001D43F\
    \ ℎ\U0001D45A2\n⁄\n) are taken as \ninputs, while the droplet deposition (µ \U0001D43F\
    \ ℎ\U0001D45A2\n⁄\n) is considered as the output. The statistical \nproperties\
    \ of the sample data are shown in Table 17. \n112 \n \nTable 17. The statistical\
    \ properties of the sample data. \nFeature name \nMax \nMin \nMean \nStandard\
    \ deviation \nFlight speed \n5.22 \n1.00 \n3.01 \n0.9842 \nFlight altitude \n\
    4.08 \n1.45 \n1.92 \n0.6912 \nTemperature \n32.00 \n25.00 \n28.77 \n1.7501 \n\
    Propeller pitch \n1.40 \n1.20 \n1.31 \n0.0991 \nNozzle pitch \n0.55 \n0.45 \n\
    0.513 \n0.0380 \nWind speed \n3.20 \n0.01 \n1.144 \n0.5853 \nPrescription \n48.00\
    \ \n5.00 \n20.50 \n9.5481 \nDeposition \n8.86 \n0.01 \n5.69 \n15.7242 \nFor testing\
    \ purpose, ten cases are selected from the sample data (100 cases) and their \n\
    recorded deposition values are removed from the solution part of cases. If a similar\
    \ case can be \nretrieved from the case base, then it is acknowledged that the\
    \ CBR algorithm can solve the \nproblem independently, otherwise, the ANN algorithm\
    \ is required to offer additional help for \nsolving the problem. The reuse, revision,\
    \ and retention parts are not considered in this preliminary \nproof because the\
    \ priority task is to retrieve a similar past case. \nApart from the effectiveness\
    \ of the CBR and ANN algorithms, the contribution of the \nmediator component\
    \ is another objective of this preliminary proof. It is important to verify \n\
    whether the mediator component can coordinate the communication between the algorithm\
    \ \nmanager component and the algorithm toolbox component. Therefore, the results\
    \ of the CBR and \nANN algorithms are presented in Sections 5.2.1 and 5.2.2 respectively,\
    \ while the result of the \nmediator component is presented in Section 5.2.3.\
    \ \n5.2.1. Result of the CBR algorithm \nThe CBR algorithm in this preliminary\
    \ proof is implemented by myCBR [266], which is an \nopen-source similarity-based\
    \ retrieval tool and software development kit (SDK). A new project \nis created\
    \ in the myCBR workbench, shown in Figure 63. \nIn Figure 63, a new project, named\
    \ “myTest”, is created and a concept, named \n“sprayMission”, is defined. For\
    \ each attribute, its minimum and maximum boundaries are \nspecified. For instance,\
    \ the attribute “flightAltitude” is defined by the float type and the value \n\
    ranges from 1.45 to 4.08, shown in Figure 64. \n \n113 \n \n \nFigure 63. The\
    \ new project in the myCBR workbench. \n \nFigure 64. The attribute defined in\
    \ the myCBR workbench. \nA case base is constructed by 90 past cases in the myCBR\
    \ workbench, named \n“myTestCaseBase”, shown in Figure 65. In this figure, it\
    \ displays the number of cases and the \nnumber of attributes in a case. The information\
    \ of the variety of each attribute is also included in \nthe statistics window.\
    \ For instance, the nozzle pitch has three values (0.45, 0.5, and 0.55). \n \n\
    Figure 65. The case base in the myCBR workbench. \n114 \n \n \nThe weight of each\
    \ attribute and the similarity measure can be specified by the user, as shown\
    \ \nin Figure 66. \n \nFigure 66. The configuration of the similarity measure\
    \ in the myCBR workbench. \n \nFor executing the retrieval task, the user has\
    \ to input the query data for each attribute and \nthen press the “Start retrieval”\
    \ button. Then, the retrieval result will be displayed. The retrieved \nsimilar\
    \ past cases are listed in descending order. Meanwhile, the attributes of retrieved\
    \ cases are \npresented. \n \nFigure 67. The retrieval process in the myCBR workbench.\
    \ \nConclusively, the CBR algorithm is able to solve the new problem as long as\
    \ a collection of \nsimilar past case is retrieved from the case base. Under this\
    \ circumstance, the response part of the \n115 \n \nmessage returns the successful\
    \ retrieval result and the information of the fault part is filled by null \n\
    values. \n5.2.2. Result of the ANN algorithm \nThe ANN algorithm is able to calculate\
    \ the value of droplet deposition independently as well. \nThe software interface\
    \ is shown in Figure 68. The software is mainly divided into model training \n\
    and deposition prediction parts. Firstly, the model is trained by the collected\
    \ samples and the BP \nneural network program. Secondly, the user inputs the UAV,\
    \ pesticide, and environmental \nparameters manually. Thirdly, the saved training\
    \ model is used for calculating the predicted \ndeposition value. Until the error\
    \ satisfied the preset threshold, the output is generated and returned \nto the\
    \ algorithm manager component through the mediator component. \n \nFigure 68.\
    \ The software interface of the ANN algorithm. \n5.2.3. Result of the hybrid concept\
    \ \nSince the hybrid DSS is implemented in the Python programming language, the\
    \ structure of \nthe message (see Figure 61) is defined in Figure 69. The structures\
    \ of the request, response, and \nfault parts are shown in Figure 70. \n116 \n\
    \ \n \nFigure 69. The structure of the message implemented by Python. \n \nFigure\
    \ 70. The structures of the request, response, and fault parts implemented by\
    \ Python. \n \nFor starting a spraying mission, a message is sent from the algorithm\
    \ manager component to \nthe algorithm toolbox component, containing the necessary\
    \ information of the header and main \nbody (request, response, and fault). An\
    \ example of sending the message is shown in Figure 71. \n \nFigure 71. An example\
    \ of sending the message to the CBR algorithm. \n117 \n \n \nAfter receiving the\
    \ message in Figure 71, the CBR algorithm reads the information from the \nrequest\
    \ part and executing the required actions (i.e. reading the mission information\
    \ from the \ndatabase and starting the CBR algorithm for generating the decision\
    \ support). \n \nIt is assumed that the CBR algorithm fails to retrieve a collection\
    \ of similar past cases, and \ntherefore the CBR algorithm cannot the complete\
    \ the assigned mission independently. At this \ntime, the CBR algorithm returns\
    \ the message to the algorithm manager with a failure result. An \nexample of\
    \ returning the message is shown in Figure 72. In this figure, the value of response\
    \ is \nleft empty due to the reason that the CBR algorithm fails to generate the\
    \ decision support. \n \nFigure 72. An example of returning the failure message\
    \ from the CBR algorithm. \nAfter receiving the message shown in Figure 72, the\
    \ algorithm manager checks the registered \nalgorithms to look for a substitution\
    \ algorithm for completing the mission. If there is an alternative \nalgorithm\
    \ is available, the algorithm manager component sends a new message for executing\
    \ the \nmission. In this preliminary proof, the alternative is the ANN algorithm.\
    \ Thus, the algorithm \nmanager component sends a new message to the ANN algorithm,\
    \ as shown in Figure 73. \n118 \n \n \n Figure 73. An example of sending the message\
    \ to the ANN algorithm. \nAfter receiving the message in Figure 73, the ANN algorithm\
    \ reads the information from the \nrequest part and executing the required actions.\
    \ As soon as the deposition value is calculated \nsuccessfully, the ANN algorithm\
    \ returns the response information back to the algorithm manager \ncomponent through\
    \ the mediator component, shown in Figure 74. \n \nFigure 74. An example of returning\
    \ the response from the ANN algorithm. \n \nIn Figure 74, the ANN algorithm obtains\
    \ the deposition value of 5.71 according to the \ncalculation over the mission\
    \ information. Since there is no error occurred during the calculation, \nthe\
    \ fault part is left empty and returned to the algorithm manager component. \n\
    \ \nJudging from the result of the preliminary proof, the mediator pattern design\
    \ is able to \ncoordinate various components and algorithms within the hybrid\
    \ DSS. In particular, the mediator \n119 \n \ncomponent is useful when the CBR\
    \ algorithm fails to generate the result and requires alternative \nalgorithms\
    \ to offer helps. \n120 \n \n6 \nImplementation and \nvalidation\n121 \n \n  \
    \  This section shows the implementation of the CBR decision support algorithm.\
    \ Additionally, \neach step of the CBR algorithm is validated through extensive\
    \ experiments. The experimental \nresults demonstrate that the proposed CBR decision\
    \ support algorithm is able to achieve great \nimprovements than the typical CBR\
    \ approach. \n6.1. Implementation scope and purpose \n    The scope and purpose\
    \ is to implement each step of the CBR algorithm, including the \nassociated case\
    \ representation formalism (introduced in Section 4.1), the triangular similarity\
    \ \nmeasure (introduced in Section 4.2), the fast case retrieval algorithm (introduced\
    \ in Section 4.3), \nthe learning-based approach for solution reused and revision\
    \ (introduced in Section 4.4), and the \nassociated case retention approach (introduced\
    \ in Section 4.5). The implementation of the CBR \nalgorithm within the DSS is\
    \ shown in Figure 75. \n \nFigure 75. Implementation scope within the decision\
    \ support system. \n \nIt is worth mentioning that the proposed CBR algorithm\
    \ takes advantage of some existing \ntechniques like the feature vector representation\
    \ and the Euclidean distance measure. In this thesis, \nthe newly proposed methods\
    \ largely extend over the foundations of these existing techniques, \ninstead\
    \ of starting from the scratch.  \n6.2. The implementation details \nThe proposed\
    \ CBR algorithm is mainly implemented by the Python programming language. \nSpyder\
    \ (version 3.3.3) [267], a scientific Python development environment, is adopted\
    \ for \n122 \n \nimplementation. The Python version in the Spyder environment\
    \ is 3.7.3, 64-bit for Windows 10. \nA screenshot of this development environment\
    \ is shown in Figure 76. \n \n Figure 76. The Spyder development environment.\
    \ \n6.2.1. Implementation of the associated representation formalism \nThe associated\
    \ case representation formalism is adopted in this thesis for managing the \n\
    content and structure of agricultural cases. This representation formalism follows\
    \ a “problem-\nsolution-association” structure. \nFor implementation, two approaches\
    \ are employed to organize these agricultural cases: (i) \nextensible markup language\
    \ (XML) files, and (ii) comma-separated values (CSV) files. On the \none hand,\
    \ the structure of XML-based cases is flexible and the case storage is relatively\
    \ \nindependent. Meanwhile, the node custom function in XML enables to create\
    \ new cases \nconveniently. An example of the XML implementation is shown in Figure\
    \ 77. On the other hand, \nthe structure of CSV-based cases allows data to be\
    \ stored in a tabular format. Since the CBR \nalgorithm is coded by the Python\
    \ programming language, libraries like “Numpy” and “Pandas” \ncan be used to manipulate\
    \ the stored past case easily. Furthermore, farmers can read and \nunderstand\
    \ data in CSV format without requiring any expertise in knowledge management or\
    \ \ncomputer science. An example of the CSV implementation is shown in Figure\
    \ 78. \n123 \n \n \nFigure 77. The associated case representation formalism implemented\
    \ in XML. \n \nFigure 78. The associated case representation formalism implemented\
    \ in CSV. \nFour functions are defined by the Python programming language for\
    \ reading and writing the \nXML and CSV files. \nFor reading and writing the XML\
    \ files, the document object model (DOM) interface, \n“xml.dom.minidom”, is adopted.\
    \ A DOM application typically starts by parsing XML into DOM. \nThe parse function\
    \ can take either a filename or an open file object. The parsing process is done\
    \ \nin Figure 79. This figure shows both approaches of using the parse function.\
    \ The DOM standard \nis briefly introduced in Appendix D. \n124 \n \n \nFigure\
    \ 79. The parse function in the DOM interface. \nMeanwhile, the Document module\
    \ in “xml.dom.minidom” is used to write new elements and \ntheir values into the\
    \ XML files. Figure 80 shows an example of writing XML elements in Python. \n\
    \ \nFigure 80. The function of writing XML elements in Python. \nIn summary, the\
    \ functions of reading and writing the XML cases are implemented as shown \nin\
    \ Figure 81. It is noted that “xml.dom” and “xml.dom.minidom” should be imported.\
    \ \n \nFigure 81. The function of reading and writing XML-based cases in Python.\
    \ \n125 \n \nSecondly, for reading and writing cases in the CSV format, two functions\
    \ are implemented \nas shown in Figure 82. \n \nFigure 82. The function of reading\
    \ and writing CSV-based cases in Python. \nIn Figure 82, the CSV module is imported\
    \ and this module implements classes to read and \nwrite tabular data in CSV format.\
    \ Mainly, the CSV module defines the following two functions. \n• \ncsv.reader(csvfile,dialect=’excel’,**fmtparams):\
    \ This function returns a reader object which \niterates over lines in the given\
    \ CSV files. The csvfile can be any object which supports the \niterator protocol\
    \ and returns s string each time. The dialect parameter is optional and used to\
    \ \ndefine a set of parameters specific to a particular CSV dialect. The dialect\
    \ parameter may be \nan instance of a subclass of the Dialect class or one of\
    \ the strings returned by the \nlist_dialects() function. The last parameter in\
    \ this function, named fmtparams, is optional as \nwell. This parameter can be\
    \ given to override individual formatting parameters in the current \ndialect.\
    \ \n• \ncsv.writer(csvfile,dialect=’excel’,**fmtparams): This function returns\
    \ a writer object which \nis responsible for converting the data into delimited\
    \ strings on the given file-like object. The \ncsvfile can be any object with\
    \ a write() method. The dialect parameter is optional and has the \nsame configuration\
    \ as it defines in the reader() function. The other optional keyword, \nfmtparams,\
    \ argues that it can be given to override individual formatting parameters in\
    \ the \ncurrent dialect. \nFor constructing the association of past cases, it\
    \ is necessary to measure the similarity \nbetween each of them. After obtaining\
    \ and sorting all the similarity measurements, each case can \nbe associated with\
    \ several similar and dissimilar ones. Though constructing the association is\
    \ a \ntime-consuming process when a large volume of cases is stored, it is still\
    \ essential to explore the \nrelations between past cases. Because this hidden\
    \ information could be useful for case retrieval. \n126 \n \nBesides, this construction\
    \ is a one-time task. The Python code for generating the similar \nassociation\
    \ of past cases is presented in Figure 83. \n \nFigure 83. The code of constructing\
    \ the association implemented in Python. \nIn Figure 83, in the first part, the\
    \ function getTSM(case1,case2) evaluates the proposed \ntriangular similarity\
    \ measurement between two cases. In the second part, all similarity \nmeasurements\
    \ are sorted by taking advantage of the NumPy package, in particular, the min()\
    \ and \nmax() functions. Lastly, the sorted results are saved to the original\
    \ CSV file. For generating the \ndissimilar association, it follows the same procedure.\
    \ \n6.2.2. Implementation of the triangular similarity measure \nThe triangular\
    \ similarity measure combines the Euclidean distance, the cosine similarity \n\
    measure, and the magnitude of compared vectors. Three functions, named getED,\
    \ getCosine, and \ngetMag, are implemented respectively. For manipulating the\
    \ vectors, NumPy, a fundamental \npackage for scientific computing with Python,\
    \ is adopted. The codes of implementing these three \nfunctions are shown in Figure\
    \ 84. The code of the proposed triangular similarity measure is shown \nin Figure\
    \ 85. \n127 \n \n \nFigure 84. The code of calculating the Euclidean distance,\
    \ the cosine similarity, and the magnitude \nimplemented in Python. \n \nFigure\
    \ 85. The code of calculating the triangular similarity measure implemented in\
    \ Python. \n \nIn Figure 85, The module math is imported, providing access to\
    \ the mathematical functions \ndefined by the C standard. Especially, the exp()\
    \ function is used. This function returns e raised to \nthe power x, where \U0001D452\
    \ = 2.718281. The exp() function converts the similarity measurements into \n\
    percentile values, which fit human notions better. After inputting the compared\
    \ two vectors, the \nfunction getTSM will return the similarity value in percentile.\
    \ \n6.2.3. Implementation of the fast case retrieval algorithm \nThe fast case\
    \ retrieval algorithm is implemented by the Python programming language as \n\
    well. As explained in Section 4.3, the fast retrieval algorithm takes advantage\
    \ of the similar and \ndissimilar associations of each past case. \nFirstly, the\
    \ case files should be loaded to the algorithm. Then, the new case is compared\
    \ with \nan entry-point case by the triangular similarity measure, shown in Figure\
    \ 86. \n128 \n \n \nFigure 86. The code of comparing the new case and entry-point\
    \ case implemented in Python. \n \nAfter obtaining the similarity measurement\
    \ between the new case and the entry-point case, \nthe corresponding association\
    \ is determined based on the number of assigned tokens. In order to \nassign the\
    \ tokens for the rest of iterations (apart from the entry-point comparison), the\
    \ following \ncodes are implemented in Figure 87, on the basis of the content\
    \ in Table 8. \n \nFigure 87. The code of assigning tokens implemented in Python.\
    \ \n \nFor determining the association in the next iteration, the number of positive\
    \ and \nnegative tokens are taken for comparison. According to the Policy 3 defined\
    \ in Section \n4.3, the corresponding association is selected, and therefore the\
    \ past case with the highest \n(or the lowest) similarity measurement is chosen\
    \ for being compared with the new case, \nshown in Figure 88. \n \nFigure 88.\
    \ The code of selecting the past case for the next iteration implemented in Python.\
    \ \n129 \n \n \nWhen it happens that all past cases in a single iteration have\
    \ been already compared, under \nsuch circumstance, the cases to be compared will\
    \ be selected from the previous iteration. \nTherefore, for managing those cases\
    \ which have been compared before, the fast retrieval \nalgorithm marks each past\
    \ case by two types of states: (i) used, and (ii) unused. The initial state \n\
    of each case is unused. After a past case is selected for comparison, its state\
    \ will become used. In \nthe fast case retrieval algorithm, the value “1” denotes\
    \ that a past case has been used while the \nvalue “0” denotes that a past case\
    \ has not been used. An array is defined to store the states of all \npast cases.\
    \ Meanwhile, an array for storing similarity measurement between the new case\
    \ and the \npast cases is defined, as well as an array for storing the history\
    \ of compared cases. For checking \nthe availability of unused cases in previous\
    \ iterations, the following code is implemented in Figure \n89.  \n \nFigure 89.\
    \ The code of retrieving unused past cases implemented in Python. \n \nIn Figure\
    \ 89, if all past cases have been used previously (the states of cases are marked\
    \ by \nthe value “1”), then the Python console will print the message “Error:\
    \ All cases are repeated!”. \nAfterwards, the retrieval algorithm will backtrack\
    \ unused past case in previous iterations. The \nvariable \U0001D450\U0001D45C\
    \U0001D462\U0001D45B\U0001D461 denotes the current number of iterations, while\
    \ the variable \U0001D456  denotes the \nbacktracked rounds. The backtracking\
    \ process is terminated until an unused past case is \nsuccessfully retrieved.\
    \ \n \nThe fast case retrieval algorithm terminates when the maximum iteration\
    \ number is reached \nor a past case which is identical to the new case is retrieved.\
    \ \n130 \n \n6.2.4. Implementation of the learning-based reuse and revision \n\
    The core of the learning-based reuse and revision approach is to detect the difference\
    \ between \nthe features of the new case and past cases. As defined in Equation\
    \ (19), the difference can be \nmeasured by the sum of local differences of features.\
    \ Therefore, the following code is \nimplemented in Figure 90. \n \nFigure 90.\
    \ The code of calculating the difference between cases implemented in Python.\
    \ \n \nIn Figure 90, the variables \U0001D463\U0001D452\U0001D4501 and \U0001D463\
    \U0001D452\U0001D4502 represent the compared cases, while the \nvariable \U0001D464\
    \ indicates the weight of each feature within the case. It is worth mentioning\
    \ that the \ncompared cases should be normalized before treating as inputs to\
    \ the function \U0001D450\U0001D44E\U0001D459\U0001D437\U0001D456\U0001D453\U0001D453\
    (). The \nnormalization process in the case retrieval algorithm takes advantage\
    \ of the package \nsklearn.preprocessing [268]. This package provides several\
    \ common utility functions and \ntransformer classes to change raw feature vectors\
    \ into a representation that is more suitable for \nthe downstream estimators.\
    \ The code of normalizing the dataset is implemented in Figure 91. \n \nFigure\
    \ 91. The code of normalizing the dataset implemented in Python. \n \nIn Figure\
    \ 91, the function min_max_scaler scales features to lie between a given minimum\
    \ \nand maximum value, usually between zero and one. \n \nAfter obtaining the\
    \ difference between the new case and the adaptation case, this difference \n\
    value is recorded, along with the adaptation case, are treated as inputs to the\
    \ case retrieval \nalgorithm for the purpose of identifying a collection of past\
    \ cases with similar difference. \n131 \n \n \nThe difference of solution between\
    \ the adaptation case and retrieved past cases is calculated \nas well by adopting\
    \ the same function \U0001D450\U0001D44E\U0001D459\U0001D437\U0001D456\U0001D453\
    \U0001D453(), presented in Figure 90. By learning from the \ndifference in the\
    \ solution part of past cases, the solution of the adaptation case can be revised\
    \ by \nincreasing or decreasing the value of features in the solution. The implementation\
    \ detail is \npresented in Figure 92. \n \nFigure 92. The code of revising the\
    \ solution of the adaptation case implemented in Python. \n \nIn Figure 92, the\
    \ function \U0001D45F\U0001D452\U0001D463\U0001D456\U0001D460\U0001D452\U0001D446\
    \U0001D45C\U0001D459\U0001D462\U0001D461\U0001D456\U0001D45C\U0001D45B() is defined.\
    \ The variable \U0001D44E\U0001D463\U0001D454\U0001D437\U0001D456\U0001D453\U0001D453\
    \ is the \nmean difference of the features within the retrieved past cases. By\
    \ updating each feature in the \nsolution part of the adaptation case, the revised\
    \ solution is generated and ready for being applied \nto the new case. \n6.2.5.\
    \ Implementation of the associated case retention approach \nAfter deciding to\
    \ retain a learned case, the problem, solution, and association parts of this\
    \ \nlearned case should be added into the case base. This retention process is\
    \ completed by adopting \nthe function \U0001D464\U0001D45F\U0001D456\U0001D461\
    \U0001D452\U0001D436\U0001D44E\U0001D460\U0001D452\U0001D436\U0001D446\U0001D449\
    \ shown in Figure 82. \n \nHowever, the update of existing associations cannot\
    \ be directly overwritten in the CSV files. \nMeanwhile, the deletion of a certain\
    \ past case cannot be completed by the writing functions. \nTherefore, the package\
    \ “Pandas” is adopted for managing these updates. The manipulation \nprocess is\
    \ presented in Figure 93. \n132 \n \n \nFigure 93. The process of updating the\
    \ existing associations in CSV files. \n \nIn Figure 93, the DataFrame from the\
    \ package “Pandas” is a two-dimensional size-mutable \ntabular data structure\
    \ with labeled axes (rows and columns). For generating a data frame from a \n\
    CSV file, the following function CSVtoDF is implemented, as shown in Figure 94.\
    \ \n \nFigure 94. The code of generating a data frame from a CSV file implemented\
    \ in Python. \n \nAfter the data frame is generated, the new association can be\
    \ added accordingly by adopting \nthe function updateAssociation, while the old\
    \ association can be deleted by the function \ndeleteAssociation, as shown in\
    \ Figure 95. \n \nFigure 95. The code of updating associations implemented in\
    \ Python. \n \nIn Figure 95, the function \U0001D459\U0001D45C\U0001D450() is\
    \ adopted for locating the position of desired data, while \nthe function \U0001D451\
    \U0001D45F\U0001D45C\U0001D45D() is employed for deleting the old association.\
    \ \n133 \n \n \nOnce all manipulations have been completed, the data frame is\
    \ written back to a new CSV \nfile, as shown in Figure 96. \n \nFigure 96. The\
    \ code of returning the data frame to a new CSV file implemented in Python. \n\
    6.3. The validation results \nAs described in Section 3, the CBR decision support\
    \ algorithm is mainly used by the \nalgorithm toolbox component. Due to the fact\
    \ that the MMT and the algorithm manager are still \nunder development and they\
    \ are also out of the scope of this thesis, the validation of the proposed \n\
    CBR algorithm is carried out by receiving direct commends from users and loading\
    \ data from \nlocal repositories, instead of receiving commands from the MMT and\
    \ loading data from the cloud \ndatabases. \nThe proposed CBR decision support\
    \ algorithm is employed to manage pest problems. The \npest considered in the\
    \ validation is Chilo suppressalis, while the target crop is rice. Totally, 3000\
    \ \npast cases are stored in the case base and 500 new cases are prepared for\
    \ tests. The objective of \nthe validation is to retrieve a collection of similar\
    \ past cases from the case base. The solutions of \nretrieved cases are reused\
    \ and revised to solve the new problems. Lastly, the learned case is \ndetermined\
    \ whether it should be retained in the case base or not. Though this CBR decision\
    \ \nsupport algorithm is developed within the AFarCloud European research project,\
    \ the deployment \nof sensors and vehicles has not been fully completed yet. Therefore,\
    \ simulated data are used \ncurrently and they are generated within a given range.\
    \ For instance, judging from the current \nliterature [269], the planting density\
    \ of rice usually ranges from 180 to 525 seeds/m2. The life \ncycle of rice can\
    \ be categorized by “embryogenesis”, “vegetative”, “ripening”, and “reproductive”\
    \ \nstages [270], encoded by integers “1”, “2”, “3”, and “4”. The simulated data\
    \ can be found in [271], \nincluding the problem part and solution part. The association\
    \ part is left empty for validation \npurpose. It is assumed that all the information\
    \ is complete and there are no missing data in both \nnew and past cases. \nEach\
    \ step of the CBR algorithm (including representation, retrieval, reuse, revision,\
    \ and \nretention) will be validated in the following sub-sections. In order to\
    \ evaluate the proposed CBR \nalgorithm, a typical CBR algorithm is used for comparison.\
    \ \n134 \n \nThe validation is carried out by using an Intel(R) Core (TM) i5-6200U\
    \ CPU @ 2.30GHz \n2.40GHz processor, being equipped with a RAM memory of 8.00\
    \ GB in a laptop, operating under \nthe 64-bit Windows 10 operating system. \n\
    6.3.1. Result of the associated case representation \nThe association part is\
    \ generated by sequentially comparing all past cases with each other. \nEach past\
    \ case is associated with three similar ones and three dissimilar ones, along\
    \ with their \nsimilarity measurements. A part of the similar and dissimilar associations\
    \ is presented in Tables \n18 and 19 respectively. \nTable 18. Part of the similar\
    \ association. \nPast Case \n1st sim \nsimValue  \n2nd sim \nsimValue \n3rd sim\
    \ \nsimValue \n1 \n541 \n94.53% \n588 \n94.18% \n2799 \n93.17% \n2 \n981 \n93.20%\
    \ \n1707 \n92.68% \n1931 \n91.32% \n3 \n2107 \n93.95% \n187 \n89.71% \n1946 \n\
    89.11% \n4 \n2687 \n93.85% \n1193 \n93.81% \n241 \n92.15% \n5 \n2454 \n97.14%\
    \ \n672 \n95.65% \n2438 \n94.97% \n… \n… \n… \n… \n… \n… \n… \n2996 \n2104 \n\
    92.91% \n405 \n91.34% \n2111 \n90.64% \n2997 \n644 \n96.98% \n563 \n95.31% \n\
    634 \n93.70% \n2998 \n2600 \n99.50% \n311 \n95.79% \n1265 \n93.52% \n2999 \n1263\
    \ \n95.41% \n246 \n94.67% \n373 \n94.45% \n3000 \n78 \n87.55% \n2258 \n87.15%\
    \ \n553 \n86.52% \nTable 19. Part of the dissimilar association. \nPast Case \n\
    1st dissim \nsimValue \n2nd dissim \nsimValue \n3rd dissim \nsimValue \n1 \n1356\
    \ \n6.31% \n1465 \n8.07% \n2764 \n8.15% \n2 \n2264 \n7.50% \n1446 \n9.50% \n2027\
    \ \n9.89% \n3 \n2134 \n6.08% \n184 \n6.67% \n1911 \n7.11% \n4 \n272 \n6.89% \n\
    2095 \n7.51% \n2990 \n8.14% \n5 \n964 \n17.58% \n2470 \n18.09% \n204 \n18.11%\
    \ \n… \n… \n… \n… \n… \n… \n… \n2996 \n1668 \n10.39% \n3000 \n11.06% \n2569 \n\
    11.79% \n2997 \n328 \n12.18% \n114 \n12.30% \n1898 \n12.84% \n2998 \n328 \n7.10%\
    \ \n2458 \n7.76% \n1316 \n8.12% \n135 \n \n2999 \n1140 \n13.44% \n1845 \n13.84%\
    \ \n2134 \n14.70% \n3000 \n2863 \n5.28% \n2430 \n5.49% \n548 \n5.67% \nOwing to\
    \ the adequate coverage, each past case is associated for at least one time. It\
    \ is noted \nthat a single past case can be associated with others for several\
    \ times, depending on the similarity \nmeasurements. For instance, in Table 19,\
    \ the past case 328 is dissimilarly associated with both \npast cases 2997 and\
    \ 2998, achieving the similarity measurements of 12.18% and 7.10% \nrespectively.\
    \ However, these dissimilar associations do not guarantee that past cases 2997\
    \ and \n2998 are similar with each other. For better demonstration, Figure 97\
    \ visualizes the normalized \nvalues of features in past cases 328, 2997, and\
    \ 2998. \n \nFigure 97. Data visualization of past cases 328, 2997, and 2998.\
    \ \nFigure 97 demonstrates that though both past cases 2997 and 2998 are dissimilar\
    \ to the past \ncase 328, they still have a major difference among data like pest\
    \ stage, infected area, and planting \ndensity. In fact, the similarity measurement\
    \ between past cases 2997 and 2998 only reaches \n67.08%. \nHowever, it is not\
    \ absolute that the above theory tells the whole story. There exists a \ncircumstance\
    \ that two cases are dissimilar to a single case at the same time, but these two\
    \ cases \nmay be similar with each other. An example is presented in Figures 98-100.\
    \ For evaluating the \ncommonalities among these three cases, the data covariance\
    \ function, root mean square error \n(RMSE), and mean absolute error (MAE) are\
    \ used. A smaller value of RMSE and MAE indicates \nthat the compared cases have\
    \ more commonalities. The analytic result of their data covariance is \npresented\
    \ in Table 20. \n136 \n \n \nFigure 98. Data visualization of past cases 19 and\
    \ 1836. \n \nFigure 99. Data visualization of past cases 19 and 674. \n137 \n\
    \ \n \nFigure 100. Data visualization of past cases 1836 and 674. \nTable 20.\
    \ Statistical analysis of past cases 19, 1836, and 674. \nCases \nSimilarity measurement\
    \ Data covariance RMSE \nMAE \n(P19, P1836) \n19.11% \n-0.0432 \n0.5859 \n0.4917\
    \ \n(P19, P674) \n19.17% \n-0.0355 \n0.5729 \n0.4878 \n(P1836, P674) \n93.85%\
    \ \n0.1447 \n0.1815 \n0.1466 \n \n \nIn Figures 98 and 99, and Table 20, it is\
    \ identified that past cases 1836 and 674 are both \ndissimilar to the past case\
    \ 19, reaching the similarity measurement of 19.11% and 19.17% \nrespectively.\
    \ Their values of data covariance are both negative as well, suggesting that past\
    \ cases \n1836 and 674 are truly dissimilar to the past case 19. This conclusion\
    \ is also verified through the \nvalues of RMSE and MAE. However, in Figure 100\
    \ and Table 20, the similarity measurement \nbetween past cases 1836 and 674 reaches\
    \ 93.85%, and the value of their data covariance is positive. \nIn other words,\
    \ these two cases are highly similar. \nAnother interesting fact is that a single\
    \ past case may appear in the similar association of \nothers for more than one\
    \ time. For example, the past case 984 appeared in the similar association \n\
    of past cases 748 and 749 respectively. The visualization of normalized data of\
    \ past cases 984, \n748, and 749 is displayed in Figure 101. The analytic result\
    \ is presented in Table 21. \n138 \n \n \nFigure 101. Data visualization of past\
    \ cases 984, 748, and 749. \nTable 21. Statistical analysis of past cases 984,\
    \ 748, and 749. \nCases \nSimilarity measurement Data covariance RMSE \nMAE \n\
    (P984, P748) \n95.76% \n0.0890 \n0.1630 \n0.1181 \n(P984, P749) \n95.79% \n0.0919\
    \ \n0.1590 \n0.1060 \n(P748, P749) \n86.78% \n0.0966 \n0.2422 \n0.1876 \n \nIn\
    \ Figure 101 and Table 21, the result shows that past cases 984, 748, and 749\
    \ all have great \ncommonalities, and their data inflections match with each other.\
    \ According to the data covariance \nspecification, if the covariance value is\
    \ positive, it means that the distribution of compared cases \nis within the same\
    \ direction. Meanwhile, a smaller covariance value indicates a closer correlation\
    \ \nbetween compared cases. From the result in Table 21, the covariance values\
    \ are all positive and \nthey have a tiny difference. Meanwhile, the values of\
    \ RMSE and MAE support this conclusion. \nA higher similarity measurement corresponds\
    \ to a smaller value of RMSE and MAE. \n \nAs a consequence, two conclusions can\
    \ be drawn according to the result of above examples. \n• \nIf a past case Px\
    \ is stored in the dissimilar association of past cases Py and Pz at the same\
    \ time, \nit is not guaranteed that past cases Py and Pz are similar or dissimilar.\
    \ \n• \nIf a past case Px is stored in the similar association of past cases Py\
    \ and Pz at the same time, \nthen past cases Py and Pz are potentially similar.\
    \ \n139 \n \nThis is the reason why the proposed fast case retrieval algorithm\
    \ tries to compare the \nassociated past cases preferentially, instead of traversing\
    \ all past cases in the case base. Under \ngeneral circumstances, the potential\
    \ target case usually exists among the association. \n6.3.2. Result of the triangular\
    \ similarity measure \nThe desired output of the evaluation for the triangular\
    \ similarity measure is the ID of the \nmost similar past case and its similarity\
    \ measurement with the new case. The experiment is \nconducted for 500 times since\
    \ there are 500 new cases. The fast case retrieval algorithm is not \nused in\
    \ this sub-section due to the reason that the efficiency of case retrieval is\
    \ not the main \nconcern for evaluating the triangular similarity measure. The\
    \ validation of the triangular similarity \nmeasure mainly focuses on the accuracy\
    \ of the measurement. In this sub-section, the proposed \ntriangular similarity\
    \ measure is compared with the typical Euclidean distance. The simulated data\
    \ \nof 500 new cases can be found in [272]. It is noted that after retrieving\
    \ a past case from the case \nbase, the learned case is not retained. Consequently,\
    \ the size of the case base is 3000 for the whole \ntime in this sub-section.\
    \ \nThe validation result suggests that the cases retrieved by the proposed TSM\
    \ differs from the \nresult retrieved by the ED in 56 tests. The rest of cases\
    \ retrieved by both similarity measures is \nthe same. Table 22 shows the different\
    \ past cases retrieved by the TSM and the ED. \nTable 22. Different past cases\
    \ retrieved by the TSM and the ED. \nNew case ID TSM \nED \nNew case ID TSM \n\
    ED \n2 \n2371  679  \n262 \n2783  2350  \n23 \n682  \n183  \n271 \n1674  1204\
    \  \n26 \n1301  1560  \n277 \n2392  1236  \n28 \n2214  763  \n286 \n2759  745\
    \  \n57 \n1165  1239  \n287 \n749  2989  \n67 \n888  2756 \n290 \n1161  2966 \
    \ \n76 \n461  \n767  \n303 \n1722  2866  \n87 \n1433  2865 \n314 \n1262  311 \
    \ \n107 \n2115  1762 \n317 \n2314  \n85  \n113 \n221  2483  \n323 \n2993  2895\
    \  \n126 \n2297 \n2063  \n344 \n1077  1168  \n134 \n2  \n984  \n353 \n773  \n\
    615  \n145 \n1172  \n68  \n360 \n2592  325  \n151 \n552  2776  \n362 \n903  2644\
    \  \n140 \n \n154 \n1705  1004  \n363 \n730  \n724  \n163 \n56  \n1479  \n371\
    \ \n1744  2525  \n169 \n295  2711  \n372 \n2572  2359  \n170 \n315  1463  \n390\
    \ \n1892  1306  \n191 \n2383  296  \n396 \n1819  2108  \n192 \n1372  1614  \n\
    406 \n583  \n746  \n197 \n43 \n2859 \n415 \n2255  401  \n199 \n1769  1214  \n\
    424 \n988  \n862  \n206 \n2257  \n59  \n428 \n141  \n411  \n214 \n109  2393  \n\
    430 \n2457  1475  \n218 \n798  \n93  \n439 \n2972  814  \n219 \n2304  785  \n\
    452 \n2257  1572  \n231 \n1609  948  \n473 \n682  1025  \n245 \n2487  2969  \n\
    490 \n643  2544  \n \nIn Table 22, under the columns of TSM and ED, it shows that\
    \ these two approaches retrieved \ndifferent past cases. For demonstrating the\
    \ difference between the retrieval results, two examples \nare picked from these\
    \ 56 tests. \n \nThe first example is the new case 57. In this example, the TSM\
    \ retrieves the past case 1165, \nwhile the ED retrieves the past case 1239. The\
    \ features of pest quantity, pest stage, infected area, \ngrowth stage of crops,\
    \ planting density, temperature, humidity, rainfall, sunlight, and wind speed\
    \ \nare displayed by the line charts in Figures 102 and 103. \n \nAccording to\
    \ the observation, it is determined that the past case 1165 (retrieved by the\
    \ TSM) \nis more similar to the new case 57 than the past case 1239 (retrieved\
    \ by the ED). Because the data \ndeviation between the new case 57 and the past\
    \ case 1165 is smaller. Figure 100 shows that though \nmost of features in the\
    \ new case 57 and the past case 1239 are similar, some features like the \ninfected\
    \ area, growth stage of crops, the minimum temperature of the day, and humidity\
    \ have \nsome mismatches. Table 23 displays the result of the statistical analysis\
    \ between these three cases. \nIn Table 23, the data covariance between the new\
    \ case and past cases are both positive, suggesting \nthat the retrieved past\
    \ cases are similar to the new case. However, the covariance value of the new\
    \ \ncase 57 and the past case 1165 is smaller, indicating a closer correlation\
    \ between these two cases. \nIn conclusion, the past case retrieved by the TSM\
    \ is more accurate in this example. \n141 \n \n \nFigure 102. Data visualization\
    \ of the new case 57 and the past case 1165. \n \nFigure 103. Data visualization\
    \ of the new case 57 and the past case 1239. \nTable 23. Statistical analysis\
    \ of past cases 1165 and 1239. \nCases \nSimilarity measurement Data covariance\
    \ RMSE \nMAE \n(P57, P1165) \n94.59% \n0.0583 \n0.4315 \n0.3273 \n(P57, P1239)\
    \ \n93.89% \n0.0676 \n0.6143 \n0.5081 \n142 \n \n \nThe second example is the\
    \ new case 113. In this example, the TSM retrieves the past case \n221, while\
    \ the ED retrieves the past case 2483. All the features in these three cases are\
    \ displayed \nin Figures 104 and 105. \n \nFigure 104. Data visualization of the\
    \ new case 113 and the past case 221. \n \nFigure 105. Data visualization of the\
    \ new case 113 and the past case 2483. \n \nIn Figures 104 and 105, it shows that\
    \ the past cases retrieved by the TSM and the ED are \nboth similar to the new\
    \ case 113. However, the past case retrieved by the TSM fails to match the \n\
    features like the pest quantity and infected area precisely. For analyzing the\
    \ differences between \nthe retrieved cases, the data covariation function is\
    \ applied and the analysis result is presented in \nTable 24. \n143 \n \nTable\
    \ 24. Statistical analysis of past cases 221 and 2483. \nCases \nSimilarity measurement\
    \ Data covariance RMSE \nMAE \n(P113, P221) \n95.87% \n0.0780 \n0.4041 \n0.3340\
    \ \n(P113, P2483) \n94.70% \n0.0687 \n0.3152 \n0.2612 \n \nIn Table 24, though\
    \ the similarity measured by the TSM is higher than the value calculated \nby\
    \ the ED, the covariance value of the new case 113 and the past case 2483 is smaller,\
    \ suggesting \na closer correlation between these two cases. In conclusion, the\
    \ past case retrieved by the ED is \nmore accurate in this example. \n \nJudging\
    \ from the above two examples, it is noted that both the TSM and the ED do not\
    \ \nguarantee that the retrieved past case is the most similar one under certain\
    \ circumstances. \nTherefore, the data covariance function is applied to all these\
    \ 56 tests for verifying which \nsimilarity measure is more accurate. The result\
    \ is presented in Table 25. \nTable 25. Statistical analysis of 56 tests. \nNew\
    \ case ID \nTSM \n  \nED \nNew case ID \nTSM \nED \n2 \n0.0793   0.0848 \n262\
    \ \n0.1177 0.1074 \n23 \n0.0244   0.0609 \n271 \n0.0493 0.0562 \n26 \n0.0578 \
    \  0.0606 \n277 \n0.0432 0.0217 \n28 \n0.0669   0.0680 \n286 \n0.0546 0.0565 \n\
    57 \n0.0583   0.0676 \n287 \n0.0833 0.0527 \n67 \n0.1106   0.0921 \n290 \n0.0912\
    \ 0.0922 \n76 \n0.1152   0.1256 \n303 \n0.1112 0.1492 \n87 \n0.0494   0.0742 \n\
    314 \n0.0773 0.1002 \n107 \n0.1239   0.1102 \n317 \n0.0559 0.0547 \n113 \n0.0780\
    \   0.0687 \n323 \n0.0516 0.0607 \n126 \n0.0703   0.0889 \n344 \n0.0481 0.0528\
    \ \n134 \n0.1305   0.1007 \n353 \n0.0361 0.0455 \n145 \n0.1050   0.1273 \n360\
    \ \n0.0635 0.0469 \n151 \n0.0716   0.0958 \n362 \n0.0890 0.0506 \n154 \n0.0716\
    \   0.0825 \n363 \n0.1329 0.1333 \n163 \n0.0866   0.0875 \n371 \n0.0643 0.0693\
    \ \n169 \n0.1116   0.0743 \n372 \n0.0551 0.0663 \n170 \n0.0792   0.0818 \n390\
    \ \n0.0872 0.0772 \n191 \n0.0533   0.0725 \n396 \n0.0312 0.0328 \n144 \n \n192\
    \ \n0.0577   0.0769 \n406 \n0.0617 0.0711 \n197 \n0.0463   0.0633 \n415 \n0.0710\
    \ 0.0908 \n199 \n0.0268   0.0432 \n424 \n0.0439 0.0381 \n206 \n0.1106   0.1178\
    \ \n428 \n0.0814 0.0858 \n214 \n0.0440   0.0507 \n430 \n0.1146 0.1165 \n218 \n\
    0.1207   0.1188 \n439 \n0.0207 0.0213 \n219 \n0.0715   0.0721 \n452 \n0.1049 0.0891\
    \ \n231 \n0.0848   0.0647 \n473 \n0.0284 0.0629 \n245 \n0.0569   0.0785 \n490\
    \ \n0.0516 0.0634 \n \nIn Table 25, the columns of TSM and ED display the value\
    \ of data covariance. A small \ncovariance value represents that the compared\
    \ two cases are more similar. For comparison, The \nTSM can correctly retrieve\
    \ the most similar past cases for 40 times, however, the past cases \nretrieved\
    \ by the ED are more accurate in 16 tests. The precision of the TSM and the ED\
    \ can be \nmeasured by the confusion matrix in Equation (23). \nAverage precision\
    \ = \n\U0001D447\U0001D443\n\U0001D447\U0001D443+\U0001D439\U0001D443 (%)    \
    \                 (23) \nwhere TP denotes true positive and FP denotes false positive.\
    \ \n \nThe average precision of the TSM and the ED is presented in Table 26. \n\
    Table 26. The average precision of the TSM and the ED. \nSimilarity measure \n\
    TSM \nED \nAverage precision \n96.80% 92.00% \n \nIn Table 26, the average precision\
    \ of the TSM reaches 96.80% (484/500), while the average \nprecision of the ED\
    \ reaches 92.00% (460/500). Thus, the effectiveness and accuracy of the TSM \n\
    is proved through comparative experiments. \n6.3.3. Result of the fast case retrieval\
    \ algorithm \nIn this sub-section, the fast case retrieval algorithm tries to\
    \ obtain the top three similar past \ncases from the case base. Meanwhile, the\
    \ proposed fast case retrieval algorithm is compared with \nthe typical algorithm\
    \ which traverses all the past cases in the case base. For evaluating the retrieval\
    \ \nresult, two aspects, retrieval accuracy and efficiency, are considered in\
    \ the validation. On the one \nhand, retrieval efficiency specifies that the number\
    \ of compared past cases should be as fewer as \npossible. Because visiting fewer\
    \ cases means higher retrieval efficiency. Please note that the new \n145 \n \n\
    cases are not retained in the case base after case retrieval and the association\
    \ part of each past \ncase is not updated during the experiments in this sub-section.\
    \ Thus, the total times of tests are \n1.5 million (3000 × 500). \nFirstly, retrieval\
    \ accuracy concerns the average precision of retrieved top three similar cases.\
    \ \nThe confusion matrix is adopted here as well and the average precision follows\
    \ the same as \nEquation (23) which presented in the previous sub-section. The\
    \ result is shown in Figure 106. \n \nFigure 106. The average precision of retrieved\
    \ top three similar and dissimilar past cases. \nIn Figure 106, the average precision\
    \ of retrieved top three similar cases reaches 90.52% \n(1357804/1500000), 82.11%\
    \ (1231654/1500000), and 75.03% (1125449/1500000). The average \nprecision of\
    \ retrieved top three dissimilar cases reaches 80.39% (1205858/1500000), 79.14%\
    \ \n(1187119/1500000), and 75.91% (1138655/1500000). The result of the average\
    \ precision \ndemonstrates that the proposed case retrieval algorithm achieves\
    \ promising retrieval accuracy. \nUnder certain circumstances, the proposed case\
    \ retrieval algorithm fails to retrieve the \ncorrect top three cases. For instance,\
    \ the proposed algorithm is sometimes unable to identify the \nmost similar past\
    \ case. The most similar one is missed during runtime due to the limitation of\
    \ \nretrieving time (iteration number). The second most similar past case usually\
    \ takes the first \nposition instead and is therefore treated as the output. This\
    \ is also the reason why the second and \nthe third similar past cases are not\
    \ 100% correctly retrieved. However, this is acceptable because \nCBR does not\
    \ necessarily require the successful retrieval of the most similar cases. All\
    \ retrieved \ntop three similar past cases are not exactly the same as the target\
    \ one. It is worth noting that apart \nfrom case retrieval, CBR also adopts the\
    \ processes of solution reuse and revision. These processes \nare responsible\
    \ to update the solutions of retrieved past cases for adapting to the current\
    \ situations. \nTherefore, successfully retrieving the second or the third similar\
    \ past cases is enough for the CBR \nsystems. For supporting this point of view,\
    \ an example is presented in Figures 107-109, displaying \n146 \n \nthe data visualization\
    \ of the new case 7 and retrieved top three similar past cases 52, 267, and 646.\
    \ \nTheir data covariance and similarity measurements are given in Table 27. \n\
    \ \nFigure 107. Data visualization of the new case 7 and the past case 52. \n\
    \ \nFigure 108. Data visualization of the new case 7 and the past case 267. \n\
    147 \n \n \nFigure 109. Data visualization of the new case 7 and the past case\
    \ 646. \nTable 27. Statistical analysis of the new case 7 and retrieved top three\
    \ similar past cases. \nCases \nSimilarity measurement Data covariance RMSE \n\
    MAE \n(P7, P52) \n95.28% \n0.0535 \n0.4849 \n0.3976 \n(P7, P267) \n95.14% \n0.0677\
    \ \n0.4598 \n0.4233 \n(P7, P646) \n95.09% \n0.0682 \n0.4624 \n0.4569 \nIn Figures\
    \ 107-109, it is shown that the retrieved top three past cases are all similar\
    \ to the \nnew case 7. The result from Table 27 also supports that past cases\
    \ 52, 267, and 646 achieve the \nsimilarity measurement with the new case at 95.28%,\
    \ 95.14%, and 95.09% respectively. \nMeanwhile, the value of data covariance is\
    \ positive, indicating a close correlation between the \nnew case and retrieved\
    \ past cases. The values of RMSE between these cases are similar, so do the \n\
    values of MAE. In other words, there are minor differences between the retrieved\
    \ top three similar \npast cases. The solutions of all these three cases can be\
    \ reused and revised. Therefore, retrieval \naccuracy of the proposed fast case\
    \ retrieval algorithm is proved. \nSecondly, the retrieval efficiency of the proposed\
    \ retrieval algorithm is evaluated by \ncomparing with the typical case retrieval\
    \ algorithm. Traditionally, the typical case retrieval \nalgorithm tries to identify\
    \ the most similar past cases by traversing the whole case base. As a \nconsequence,\
    \ the number of compared cases in this experiment reaches 3000 in total for a\
    \ single \nquery. Differing from the typical approaches, the proposed case retrieval\
    \ algorithm takes \nadvantage of the association part of each past case, and therefore\
    \ measures the similarity between \nthe new case and associated cases preferentially.\
    \ From the evaluation perspective, a fewer number \n148 \n \nof compared cases\
    \ means greater efficiency of case retrieval. The result of the number of \ncompared\
    \ cases for 1.5 million tests is summarized in Table 28. \nTable 28. The number\
    \ of compared cases for 1.5 million tests. \nNumber of compared cases [800,899]\
    \ [900,999] [1000,1099] [1100,1199] \nTimes \n320359 \n479221 \n490357 \n207363\
    \ \nProportion \n21.36% \n31.95% \n32.87% \n13.82% \n \nIn Table 28, the result\
    \ demonstrates that the number of compared past cases ranges from 800 \nto 1199\
    \ approximately. The fewest number of compared cases is 834, while the largest\
    \ number is \n1197. The average number of compared cases is around 1047 (1046.95)\
    \ in a single query. As a \nconsequence, compared with the result of typical case\
    \ retrieval algorithms (by traversing all 3000 \ncases), it is proved that the\
    \ proposed algorithm is able to retrieve similar past cases by fewer \ncomparisons.\
    \ In other words, the proposed algorithm achieves greater retrieval efficiency.\
    \ \nAfter successful case retrieval, the solutions of the retrieved past cases\
    \ can be reused and \nrevised to resolve the new problems.  \n6.3.4. Result of\
    \ the learning-based solution reuse and revision \nFor verifying the effectiveness\
    \ of the learning-based reuse and revision approach, 500 past \ncase (Case ID\
    \ 2501-3000) are drawn from the case base, as the test dataset, assigned with\
    \ new \ncase IDs (1-500). For testing purpose, the solution part of the selected\
    \ 500 cases are removed. \nThe rest of the 2500 (Case ID 1-2500) past cases form\
    \ a new case base. Correspondingly, the \nassociation part of the 2500 past cases\
    \ in the new case base differ from those presented in Section \n6.3.1, meaning\
    \ that the association table is newly generated in this sub-section. It is noted\
    \ that \nafter successful retrieval, reuse, and revision, the learned cases are\
    \ not retained in the case base. \nIn this sub-section, the evaluation of reuse\
    \ and revision focuses on comparing the revised and the \noriginal solutions.\
    \ It is noted that some solutions are left empty in the case base due to the reason\
    \ \nthat the given situation is not suitable for pesticide applications. For instance,\
    \ the probability of \nrainfall is higher than 90%, which usually leads to low\
    \ effectiveness of treatment. \nThe reuse and revision involve the processing\
    \ of three features in the solution part of past \ncases, namely (i) pesticide\
    \ type (“Abamectin-Chlorpyrifos” and “Fipronil”), (ii) prescription \nvalue (ranging\
    \ from 0.1632 to 38.7688), and (iii) dilution factor (ranging from 11.80% to 38.81%).\
    \ \nThe first one is a linguistic feature and the latter two are numeric features.\
    \ \n149 \n \nFor the pesticide type, the revision is considered successful when\
    \ the revised feature matches \nwith the original one. For the prescription value\
    \ and dilution factor, their deviations between the \nrevised and original values\
    \ are evaluated. \nRegarding the pesticide type, the experimental result demonstrates\
    \ that the revised solutions \nof 22 cases differ from the original ones, which\
    \ are listed in Table 29. \nTable 29. Comparison of revised and original pesticide\
    \ types. \nNew case ID Original Revised New case ID Original Revised \n2 \nAC\
    \ \nF \n227 \nF \nAC \n11 \nF \nAC \n244 \nAC \nF \n23 \nAC \nF \n267 \nAC \n\
    F \n27 \nAC \nF \n301 \nF \nAC \n51 \nF \nAC \n306 \nAC \nF \n55 \nF \nAC \n348\
    \ \nF \nAC \n75 \nAC \nF \n377 \nF \nAC \n117 \nF \nAC \n407 \nF \nAC \n141 \n\
    AC \nF \n420 \nF \nAC \n184 \nAC \nF \n492 \nAC \nF \n199 \nAC \nF \n496 \nF \n\
    AC \n \nIn Table 29, AC represents the application of “Abamectin-Chlorpyrifos”,\
    \ while F represents \nthe application of “Fipronil”. Concluding from this table,\
    \ among all the 500 tests, the revision \naccuracy is 95.60% (478/500). Since\
    \ these two pesticides are both appliable to handle the pest \nproblems of Chilo\
    \ suppressalis, even though the revision result in Table 29 may recommend to \n\
    use a different pesticide, these recommendations are not definitely wrong. In\
    \ other words, the \nCBR system should display the results and ask farmers to\
    \ make the final decisions. \n \nRegarding the numeric features, prescription\
    \ value and dilution factor, part of the \nexperimental results are presented\
    \ in Tables 30 and 31 respectively.  \nTable 30. Comparison of revised and original\
    \ prescription values. \nNew case \nID \nOriginal Revised Deviation \nNew case\
    \ \nID \nOriginal Revised Deviation \n1 \n3.9225 \n3.2757 \n-16.49% \n… \n… \n\
    … \n… \n2 \n3.7666 \n4.4258 \n17.5% \n492 \n2.4605 \n2.4504 \n-0.41% \n150 \n\
    \ \n3 \n7.7693 \n7.1214 \n-8.34% \n493 \n12.7588 \n12.7894 \n0.24% \n4 \n1.7067\
    \ \n1.9203 \n12.51% \n494 \n16.9055 \n17.4161 \n3.02% \n5 \n3.8409 \n4.3821 \n\
    14.09% \n495 \n16.7889 \n17.7022 \n5.44% \n6 \nNull \nNull \n0.00% \n496 \n3.7713\
    \ \n3.5326 \n-6.33% \n7 \n1.6006 \n1.7008 \n6.26% \n497 \nNull \nNull \n0.00%\
    \ \n8 \n4.8451 \n4.5704 \n-5.67% \n498 \n1.5257 \n1.4326 \n-6.10% \n9 \n2.3232\
    \ \n2.4305 \n4.62% \n499 \n6.4773 \n6.3815 \n-1.48% \n… \n… \n… \n… \n500 \nNull\
    \ \nNull \n0.00% \nTable 31. Comparison of revised and original dilution factors.\
    \ \nNew case \nID \nOriginal Revised Deviation \nNew case \nID \nOriginal Revised\
    \ Deviation \n1 \n16.15% \n17.87% \n10.70% \n… \n… \n… \n… \n2 \n25.58% \n30.42%\
    \ \n18.93% \n492 \n30.39% \n34.01% \n11.89% \n3 \n20.51% \n21.67% \n5.67% \n493\
    \ \n29.87% \n31.85% \n6.61% \n4 \n25.40% \n27.30% \n7.48% \n494 \n17.50% \n14.03%\
    \ \n-19.85% \n5 \n30.57% \n33.48% \n9.44% \n495 \n18.11% \n21.18% \n16.93% \n\
    6 \nNull \nNull \n0.00% \n496 \n19.58% \n16.16% \n-17.47% \n7 \n18.46% \n15.21%\
    \ \n-17.58% \n497 \nNull \nNull \n0.00% \n8 \n23.04% \n24.43% \n6.02% \n498 \n\
    25.81% \n29.98% \n16.15% \n9 \n15.87% \n16.76% \n5.61% \n499 \n19.66% \n16.91%\
    \ \n-14.01% \n… \n… \n… \n… \n500 \nNull \nNull \n0.00% \n \nIn Table 30, the\
    \ result of the revised prescription value is promising, with an average \ndeviation\
    \ reaching 9.54% in all 500 tests. The maximum deviation happens in the new case\
    \ 430, \nreaching 18.91%, while the minimum deviation happens in the new case\
    \ 287, achieving an almost \nperfect revision (the deviation is 0.12%). These\
    \ two situations are presented in Figure 110. \n151 \n \n \nFigure 110. The best\
    \ and worst revision result of prescription values. \n \nIn Table 31, the average\
    \ deviation of revised dilution factors is approximately 12.92%. The \nmaximum\
    \ deviation happens in the new case 50, reaching 19.97%, while the minimum deviation\
    \ \nhappens in the new case 153, reaching 5.01%. These two situations are presented\
    \ in Figure 111. \n \nFigure 111. The best and worst revision result of dilution\
    \ factors. \nAn example is given below for demonstrating how the learning-based\
    \ approach of solution \nreuse and revision works in the CBR system. This example\
    \ shows how past experiences can be \nreused and revised for solving the new case\
    \ 1. \nAfter treating the new case 1 as the input to the CBR system and starting\
    \ the first retrieval \ntask, an adaptation case is retrieved from the case base,\
    \ along with its stored solution. In this \n152 \n \nsituation, the past case\
    \ 148 is considered as the adaptation case. The data visualization of these \n\
    two cases is presented in Figure 112, while the analytics result is presented\
    \ in Table 32. \n \nFigure 112. Data visualization of the new case 1 and the past\
    \ case 148. \nTable 32. Statistical analysis of the new case 1 and the past case\
    \ 148. \nCases \nSimilarity measurement Data covariance RMSE \nMAE \n(P1, P148)\
    \ \n97.56% \n0.0357 \n0.1370 \n0.1142 \n \nFrom the result in Figure 112 and Table\
    \ 32, it is determined that the new case 1 and the past \ncase 148 have great\
    \ commonalities in all variables. Their similarity measurement reaches 97.56%,\
    \ \nwhile the values of data covariance, RMSE, and MAE are all small, supporting\
    \ that these two \ncases are similar. The difference value of the new case 1 and\
    \ the adaptation case reaches  \n \nThen, the adaptation case (the past case 148)\
    \ is input to the second retrieval task. By adopting \nthe triangular similarity\
    \ measure, a collection of similar past cases is retrieved from the case base.\
    \ \nThe IDs of these retrieved cases are 115, 689, and 1570. The data visualization\
    \ of these cases is \nshown in Figures 113-115. The data analytics result of these\
    \ cases is presented in Table 33. \n \n \n \n153 \n \nTable 33. Statistical analysis\
    \ of the past cases 148, 115, 689, and 1570. \nCases \nSimilarity measurement\
    \ Data covariance RMSE \nMAE \n(P148, P115) \n96.03% \n0.1000 \n0.1607 \n0.1001\
    \ \n(P148, P689) \n95.76% \n0.1022 \n0.1611 \n0.1216 \n(P148, P1570) \n95.02%\
    \ \n0.1189 \n0.1699 \n0.1327 \n \nFigure 113. Data visualization of past cases\
    \ 148 and 115. \n \nFigure 114. Data visualization of past cases 148 and 689.\
    \ \n154 \n \n \nFigure 115. Data visualization of past cases 148 and 1570. \n\
    \ \nFrom the result in Figures 113-115 and Table 33, the retrieved three past\
    \ cases are all similar \nto the past case 148. Their similarity measurements\
    \ all reach above 95.00%, while the values of \ndata covariance are all positive.\
    \ The values of RMSE and MAE suggest the same. \n \nAs two retrieval tasks have\
    \ completed, the new case, the adaptation case, and retrieved \nsimilar past cases\
    \ are treated as input to the learning component. This learning component tries\
    \ \nto capture the difference in the problem part of compared cases. The result\
    \ is presented in Table \n34. \nTable 34. The result of captured difference in\
    \ the problem part of compared cases. \nCases \nV1 \nV2 \nV3 \nV4 \nV5 \nV6 \n\
    V7 \nV8 \nV9 \nV10 \nV11 \nVall \n(N1, P148) \n0.08 \n0 \n0.09 \n0 \n-0.12 \n\
    0.14 \n0.14 \n0.27 \n0.20 \n-0.07 \n0 \n0.76 \n(P148, P115) \n0 \n0 \n0.01 \n\
    0 \n-0.13 \n-0.14 \n0 \n0.19 \n0.16 \n0.03 \n0.43 \n0.55 \n(P148, P689) \n-0.12\
    \ \n0 \n-0.20 \n0 \n-0.10 \n-0.14 \n0 \n0.34 \n0.04 \n-0.04 \n-0.14 \n0.70 \n\
    (P148, P1570) \n0.01 \n0.33 \n0.08 \n0 \n-0.19 \n-0.14 \n-0.14 \n0.09 \n0 \n-0.18\
    \ \n-0.29 \n0.68 \n \nJudging from the result in Table 34, it is determined that\
    \ the difference between the new case \n1 and the past case 148 is similar to\
    \ that between past cases 148 and 689. Therefore, the learning \ncomponent tries\
    \ to capture the pattern how the solution of the past case 689 adapts to solve\
    \ the \npast case 148, and then applies this pattern to update the solution of\
    \ the past case 148. \n155 \n \n \nIn past cases 148 and 689, the type of the\
    \ applied pesticide is both Fripronil. Therefore, this \nvariable does not need\
    \ any revisions. In regards to the prescription and dilution factor, these values\
    \ \nare presented in Table 35. \nTable 35. The values of prescription and dilution\
    \ factor in past cases 148, 115, 689, and 1570. \nCases Pesticide type Prescription\
    \ Dilution factor \nP148 \nFripronil \n2.2885 \n18.64% \nP689 \nFripronil \n5.3213\
    \ \n17.93% \n \nIn Table 35, for updating the prescription value, the solution\
    \ of past case 689 decreases by \n3.0328, while the dilution factor increases\
    \ by 0.71%. Referring to the difference comparison \nbetween the new case and\
    \ the adaptation case, it is concluded that for adapting to the new case, \nthe\
    \ prescription value in the adaptation case should increase, while the dilution\
    \ factor should \ndecrease. Therefore, the calculation result is presented in\
    \ Table 36. \nTable 36. The result of revising the solution for adapting to the\
    \ new case. \n \nPesticide type Prescription Dilution factor \nOriginal \nFripronil\
    \ \n3.9224 \n16.15% \nRevised \nFripronil \n3.4671 \n15.50% \n \nIn Table 36,\
    \ the deviation of revised prescription value is approximately 11.61%, while the\
    \ \ndeviation of revised dilution factor reaches around 8.37%. Concluding from\
    \ the revision result of \npesticide type, prescription value, and dilution factor,\
    \ the proposed learning-based reuse and \nrevision approach is proved effective\
    \ and accurate. \n6.3.5. Result of the associated case retention \nIn this sub-section,\
    \ the same 500 new cases and the same 3000 past cases which presented \nin Section\
    \ 6.3.2 are employed. It is noted that the new case is determined to be retained\
    \ in the \ncase base after successful retrieval, reuse, and revision. If the new\
    \ case is going to be retained, \nthen the association of both new and past cases\
    \ will be updated accordingly. Since there are 500 \nnew cases for testing, the\
    \ experiment is performed for 500 times. In each test, the past case 1 is \nselected\
    \ as the entry point for comparison at the initial iteration. \nThe experimental\
    \ result demonstrates that 30 new cases are not retained in the case base \nbecause\
    \ the similarity measurements between these cases and existed ones reach beyond\
    \ threshold. \nThese 30 new cases are listed in Table 37. \n156 \n \nIn Table\
    \ 37, it is worth mentioning that the deletion strategy is applied to new cases\
    \ 138 and \n399 due to the reason that these two cases have great commonalities\
    \ with newly retained cases \n3057 and 3185 respectively. The rest of unretained\
    \ cases is all similar to the past cases which \nhave been already stored in the\
    \ case base. \nTable 37. List of unretained new cases. \nUnretained \ncase ID\
    \ \nCause \nUnretained \ncase ID \nCause \nN1 \nSim (N1, P158) = 98.35% \nN183\
    \ \nSim (N183, P542) = 98.96% \nN4 \nSim (N4, P2210) = 98.65% \nN190 \nSim (N190,\
    \ P2468) = 98.73% \nN27 \nSim (N27, P1380) = 98.14% \nN307 \nSim (N307, P460)\
    \ = 98.25% \nN53 \nSim (N53, P2361) = 98.02% \nN324 \nSim (N324, P547) = 98.27%\
    \ \nN81 \nSim (N81, P2943) = 98.45% \nN365 \nSim (N365, P1440) = 98.18% \nN82\
    \ \nSim (N82, P1944) = 99.56% \nN367 \nSim (N367, P84) = 98.44% \nN84 \nSim (N84,\
    \ P1326) = 98.16% \nN376 \nSim (N376, P1353) = 98.41% \nN88 \nSim (N88, P411)\
    \ = 98.14% \nN399 \nSim (N399, P3185) = 98.58% \nN91 \nSim (N91, P299) = 98.80%\
    \ \nN411 \nSim (N411, P2237) = 98.51% \nN99 \nSim (N99, P196) = 98.29% \nN437\
    \ \nSim (N437, P921) = 99.30% \nN102 \nSim (N102, P2921) = 99.28% \nN447 \nSim\
    \ (N447, P1095) = 99.07% \nN125 \nSim (N125, P1551) = 98.35% \nN459 \nSim (N459,\
    \ P388) = 98.33% \nN138 \nSim (N138, P3057) = 98.06% \nN476 \nSim (N476, P1358)\
    \ = 98.13% \nN150 \nSim (N150, P324) = 98.49% \nN486 \nSim (N486, P2069) = 98.68%\
    \ \nN162 \nSim (N162, P1883) = 98.77% \nN496 \nSim (N496, P372) = 99.07% \n \n\
    For verifying the updated association of cases, the times of updates in both similar\
    \ and \ndissimilar associations are counted, shown in Figure 116. \n157 \n \n\
    \ \nFigure 116. Times of updates in the association of past cases. \n \nIn Figure\
    \ 116, updates in the association of past cases are counted 2594 in total, 43.71%\
    \ \nhappens in updating the similar association, while 56.29% in updating the\
    \ dissimilar association. \nFor retaining a learned case, the average number of\
    \ updates is approximately 6 times (5.52 times). \n \nThe similar and dissimilar\
    \ association of newly retained cases are considered. The result is \npresented\
    \ in Tables 38 and 39 respectively. \nTable 38. Part of the similar association\
    \ of newly retained cases. \nPast Case \n1st sim \nsimValue  \n2nd sim \nsimValue\
    \ \n3rd sim \nsimValue \n3001 \n679 \n94.91% \n555 \n94.19% \n2371 \n94.11% \n\
    3002 \n1398 \n96.78% \n3423 \n96.03% \n1956 \n95.82% \n3003 \n539 \n94.56% \n\
    1266 \n92.82% \n2799 \n91.31% \n3004 \n1119 \n95.17% \n3400 \n94.83% \n365 \n\
    94.40% \n3005 \n1135 \n94.69% \n386 \n94.51% \n53 \n93.29% \n… \n… \n… \n… \n\
    … \n… \n… \n3466 \n33 \n96.31% \n3253 \n93.46% \n3252 \n93.26% \n3467 \n542 \n\
    94.78% \n1846 \n94.76% \n3183 \n94.36% \n3468 \n2199 \n97.38% \n2167 \n94.12%\
    \ \n782 \n93.45% \n3469 \n2523 \n96.24% \n2860 \n95.84% \n2749 \n93.84% \n3470\
    \ \n2995 \n95.91% \n2882 \n94.79% \n2042 \n94.14% \n158 \n \nTable 39. Part of\
    \ the dissimilar association of the newly retained cases. \nPast Case \n1st dissim\
    \ \nsimValue \n2nd dissim \nsimValue \n3rd dissim \nsimValue \n3001 \n1845 \n\
    12.07% \n2095 \n12.75% \n685 \n13.03% \n3002 \n2807 \n18.75% \n2095 \n20.83% \n\
    490 \n21.70% \n3003 \n2396 \n11.95% \n2745 \n13.27% \n1132 \n13.36% \n3004 \n\
    1217 \n14.72% \n1557 \n14.93% \n2863 \n15.11% \n3005 \n38 \n14.48% \n3478 \n14.69%\
    \ \n1663 \n14.82% \n… \n… \n… \n… \n… \n… \n… \n3466 \n1278 \n16.07% \n3308 \n\
    16.48% \n2990 \n18.00% \n3467 \n2774 \n10.81% \n1079 \n13.97% \n2027 \n14.17%\
    \ \n3468 \n3472 \n11.35% \n3309 \n11.44% \n674 \n12.75% \n3469 \n2095 \n7.21%\
    \ \n564 \n9.39% \n396 \n10.57% \n3470 \n3218 \n13.61% \n3434 \n13.77% \n1239 \n\
    13.92% \n \nIn total, 470 newly retained cases have their own similar and dissimilar\
    \ associations, which \nmeans that the update of associations is successful. \n\
    \ \nAt last, for those unretained cases, two examples (new cases 1 and 4) are\
    \ selected and the \ndata visualization of these cases is presented in Figures\
    \ 117 and 118. \n \nFigure 117. Data visualization of the new case 1 and the past\
    \ case 158. \n159 \n \n \nFigure 118. Data visualization of the new case 4 and\
    \ the past case 2210. \nIn Figures 117 and 118, it is shown that the new cases\
    \ and past cases are extremely similar \nin both situations. Therefore, it is\
    \ unnecessary to replace the old past cases with the new cases, \nsince these\
    \ new cases offer similar contributions as the old ones provide. The cost of retaining\
    \ an \nunnecessary case is high due to the reason that the corresponding similar\
    \ and dissimilar \nassociations existed in the case base have to be updated as\
    \ well. However, this update does not \nadd useful knowledge in the case base.\
    \ Meanwhile, retaining unnecessary cases may reduce the \ncompetence of the case\
    \ base, leading to low retrieval performance. \n \n160 \n \n7 \nConclusion and\
    \ \nfuture work\n \n161 \n \n    This chapter summarizes the main achieved contributions.\
    \ This thesis mainly concentrates on the \nresearch of the decision support system\
    \ for smart agriculture. This decision support system is enabled \nby an artificial\
    \ intelligence technique, named case-based reasoning. The purpose of this thesis\
    \ is to \nimprove each step within the case-based reasoning approach as much as\
    \ possible, including \nrepresentation, retrieval, reuse, revision, and retention.\
    \ Meanwhile, for enhancing the robustness of the \ncase-based reasoning enabled\
    \ decision support system, a hybrid decision support mechanism is \nproposed by\
    \ taking advantage of the improved case-based reasoning approach and artificial\
    \ neural \nnetworks. Apart from summarizing the contributions achieved in this\
    \ thesis, the future work in the \nresearch area of decision support is presented,\
    \ including how each step within the case-based reasoning \napproach can be further\
    \ improved. Though the specific problem this thesis tried to address is only a\
    \ \nsmall fraction among the issues that many researchers are studying on, the\
    \ proposals presented in this \nthesis could be considered as novel trials of\
    \ the case-based reasoning approach and decision support \nmethods for the upcoming\
    \ area of smart agriculture. The results presented in this thesis could be helpful\
    \ \nfor those researchers who are interested in similar problems. \n7.1. Conclusion\
    \ \n    The DSS is an important enabler to assist farmers in managing farming\
    \ operations effectively and \nprofitably. Delivering a DSS for smart agriculture\
    \ in the AFarCloud project is the ultimate objective of \nthis thesis. The proposed\
    \ CBR enabled DSS is explained in detail and its performance is evaluated by \n\
    simulation in different scenarios. The main contributions of this thesis are summarized\
    \ as follows. \n• \nConcluding from the review on the agricultural evolution (from\
    \ Agriculture 1.0 to 4.0), it is \ndetermined that smart agriculture needs the\
    \ help of advanced technologies to boost agricultural \nproductivity and allocate\
    \ various resources under a reasonable manner. Therefore, a DSS is \nbeneficial\
    \ for smart agriculture due to the reason that it can utilize the explosive amount\
    \ of \nenvironmental, crop-related, and economic data, and transfer these data\
    \ into practical knowledge \nfor managing farming operations. Meanwhile, in Section\
    \ 2, both optimization-based and reasoning-\nbased DSSs are surveyed, and it is\
    \ concluded that the reasoning-based approach, in particular the \nCBR approach,\
    \ is more suitable for building a DSS for the AFarCloud platform. \n \n162 \n\
    \ \n• \nThe framework of the DSS in the AFarCloud platform is defined, consisting\
    \ of an algorithm \nmanager and an algorithm toolbox. On the one hand, the algorithm\
    \ manager is linked to the MMT \nfor receiving new missions and forwarding the\
    \ generated decision supports. Meanwhile, the \nmanager component is responsible\
    \ to configure available algorithms like starting, checking, and \nstopping an\
    \ algorithm. On the other hand, the algorithm toolbox is used to register the\
    \ decision \nsupport algorithms and provide the access to the databases and services.\
    \ Most importantly, the \ntoolbox component can generate and forward the decision\
    \ supports to the algorithm manager. The \nproposed DSS framework has great scalability,\
    \ interoperability, and robustness. \n• \nFor improving the performance of the\
    \ CBR enabled DSS, the following contributions are achieved \nin this thesis.\
    \ \no Proposal of an associated case representation formalism: This formalism\
    \ contains the similar \nand dissimilar associations between past cases, enabling\
    \ to compare potential similar cases \npreferentially, instead of comparing all\
    \ the cases in the case base. Therefore, the proposed \nrepresentation formalism\
    \ provides a solid foundation for improving the efficiency of case \nretrieval.\
    \ \no Proposal of a triangular similarity measure: This similarity measure achieves\
    \ great retrieval \naccuracy and robustness by taking advantage of the cosine\
    \ similarity and the Euclidean distance \nmeasures when evaluating the similarity\
    \ between two N-dimensional vectors. In particular, the \nmagnitude differences\
    \ between compared vectors are taken into consideration. \no Proposal of a fast\
    \ case retrieval algorithm: This algorithm aims at retrieving a collection of\
    \ \nsimilar past cases for the CBR system. Owing to the adoption of the associated\
    \ case \nrepresentation formalism, the case retrieval algorithm is able to determine\
    \ the similar past cases \nwith promising accuracy and efficiency. \no Proposal\
    \ of a learning-based approach for solution reuse and revision: This approach\
    \ tries to \nidentify the difference between the compared cases. The revision\
    \ can be considered as a situation \nand action pair. The situation part captures\
    \ the difference, while the action part updates the \nretrieved solution of the\
    \ adaptation case into the target solution for solving the new problem. This \n\
    learning-based approach is able to make the most use of the case base by learning\
    \ from past \nexperiences, and therefore provide a satisfied revision result for\
    \ the CBR system. \n \n163 \n \no Proposal of an associated case retention approach:\
    \ The general addition and deletion strategies \nfor retaining learned cases are\
    \ both concerned. Meanwhile, the retention approach considers to \nupdate the\
    \ existing associations and generate new associations for the learned cases. \
    \ \n• \nThe improvements of the whole CBR loop, including representation, retrieval,\
    \ reuse, revision, and \nretention, are verified through experiments. The experimental\
    \ result shows that the improved CBR \nalgorithm is able to provide users with\
    \ accurate and quick decision supports to manager farming \noperations, compared\
    \ with typical CBR approaches. \n• \nA hybrid DSS for the AFarCloud platform is\
    \ designed. In this hybrid mechanism, two decision \nsupport algorithms (CBR and\
    \ ANN) are both considered. The interaction between these two \nalgorithms is\
    \ coordinated by the mediator component. Based on the result of the preliminary\
    \ proof, \nit is concluded that the mediator component is able to coordinate various\
    \ components and \nalgorithms within the hybrid DSS for the AFarCloud platform.\
    \ In particular, the mediator \ncomponent is useful when the CBR algorithm fails\
    \ to generate decision supports and requires \nalternative algorithms to offer\
    \ helps. \n7.2. Future work \n    This section discusses several challenging issues\
    \ that are expected to be addressed in the future \nresearch. Based on the above\
    \ conclusions and considering the limitations of the current work, future \nresearch\
    \ can be carried out in the following areas: (i) the approaches and algorithms\
    \ proposed in this \nthesis can be further improved or can be applied to different\
    \ scenarios, and (ii) the issues which are not \ntaken into consideration in this\
    \ thesis can be investigated in the future. \n• \nFor the proposed approaches\
    \ and algorithms: \no Regarding the associated case representation formalism,\
    \ the problem of storing past cases is \nnot thoughtfully considered. As indicated\
    \ in Section 4.1, a single past case can be associated for \nmultiple times, which\
    \ surely leads to waste of storage memory. Therefore, it is promising to \nintroduce\
    \ the pointer concept from the object-oriented representation formalism for avoiding\
    \ \nstoring redundant information. Meanwhile, applying the proposed formalism\
    \ to a large-scale case \n \n164 \n \nbase is a challenging task due to the reason\
    \ that the number of associations should be increased \nas the size of the case\
    \ base becomes larger. \no In terms of the triangular similarity measure, it is\
    \ proved to work well on numeric features. \nHowever, it is worth exploring its\
    \ applicability to linguistic and fuzzy features. Agricultural cases \nusually\
    \ contain various features, not only numeric ones. Therefore, adapting the proposed\
    \ \nmeasure to evaluate the similarity between hybrid features is the next step.\
    \ Meanwhile, precisely \ndetermining the weight for each feature is very important.\
    \ Each feature does not offer equal \ncontributions when retrieving the similar\
    \ past cases. Thus, the features which contribute the most \nshould be assigned\
    \ with higher weights. \no In terms of the fast case retrieval algorithm, it may\
    \ not guarantee the converge under the \ncircumstance all selected past cases\
    \ for the current iteration had already been compared. As \nindicated in Section\
    \ 4.3, the proposed algorithm will roll back to previous iterations to find an\
    \ \nunused past case for comparisons. However, this process may result in oscillating\
    \ between similar \nand dissimilar cases without converting to a solution. Therefore,\
    \ designing a proper roll-back \nmechanism is crucial for the performance of the\
    \ proposed retrieval algorithm. \no In terms of the learning-based reuse and revision\
    \ approach, on the one hand, it is essential to \nunderstand the features of the\
    \ adaptation space for different domains. Therefore, the adaptation \ntasks can\
    \ adopt the appropriate learning algorithms. On the other hand, a suitable representation\
    \ \nof possible adaptation problems would be helpful, in particular, for those\
    \ problems where minor \ndifferences do not require adaptation. \no In terms of\
    \ the associated case retention approach, it lacks consideration of the updating\
    \ cost. \nAs mentioned in Section 4.5, the retention process considers both the\
    \ updates for existing \nassociations and for newly learned cases. If a learned\
    \ case is going to replace a past case, those \nassociations of other cases which\
    \ contain this past case should be updated as well, leading to a \nhigh updating\
    \ cost. \n• \nFor the issues which are not taken into consideration in this thesis:\
    \ \no Due to the fact that other components in the AFarCloud platform are still\
    \ under development, \nthe validation of the proposed CBR-based DSS adopts simulated\
    \ data. Integrating with other \ncomponent and using data from real fields for\
    \ verification should be carried out in the near future. \n \n165 \n \nMeanwhile,\
    \ it would be also interesting to consider if the developed algorithm does not\
    \ achieve \nexpected performance over the data collected from the field. Under\
    \ this circumstance, it is worth \nlooking into the process of data pre-processing\
    \ and the selection of appropriate features. \no Though the example used in this\
    \ thesis is mainly about the pesticide applications, it is \npromising to apply\
    \ the CBR algorithm to other agricultural activities like irrigation, fertilization,\
    \ \nharvesting, etc. Furthermore, this proposal may also be appliable in other\
    \ research fields like \nsmart city and smart industry. \no The hybrid decision\
    \ support mechanism proposed in this thesis only adopted two algorithms. \nHowever,\
    \ it is possible to integrate with more algorithms for managing various farming\
    \ \noperations. As more algorithms are involved in the hybrid mechanism, the decision\
    \ support \nsystem would be able to solve more complex problems and achieve better\
    \ performance. \no Maintaining the case base is not thoughtfully considered in\
    \ this thesis, i.e. the size of the case \nbase and its relationship between the\
    \ number of associated cases. It is widely acknowledged that \nthe competence\
    \ of the case base is a key factor in the case-based reasoning system and it would\
    \ \naffect the performance of retrieval, reuse, and revision steps. \n7.3. Publications\
    \ and projects \n7.3.1. List of publications \nThe results presented in this thesis\
    \ were published in the following journals indexed in the Journal \nCitation Report\
    \ (JCR). \n[1] Zhaoyu Zhai, José-Fernán Martínez Ortega, Néstor Lucas Martínez,\
    \ Jesús Rodríguez-Molina. A \nMission Planning Approach for Precision Farming\
    \ Systems Based on Multi-Objective Optimization. \nSensors. vol. 18, no. 6, Jun.\
    \ 2018. DOI: https://doi.org/10.3390/s18061795. (JCR Q1, Impact Factor = \n3.275)\
    \ \n[2] Zhaoyu Zhai, José-Fernán Martínez Ortega, Néstor Lucas Martínez, Castillejo\
    \ Pedro. A Rule-\nBased Reasoner for Underwater Robots Using OWL and SWRL. Sensors.\
    \ vol. 18, no. 10, Oct. 2018. \nDOI: https://doi.org/10.3390/s18103481. (JCR Q1,\
    \ Impact Factor = 3.275) \n \n166 \n \n[3] Peisen Yuan, Zhaoyu Zhai, José-Fernán\
    \ Martínez Ortega, Huanliang Xu. An End-to-End Based \nLow Dimensional Binary\
    \ Embedding for Chrysanthemum Phenotypic Petal Similarity Evaluation. \nIEEE \n\
    Access. \nvol. \n7, \npp. \n152214-152223, \nOct. \n2019. \nDOI: \nhttps://doi.org/10.1109/ACCESS.2019.2947687.\
    \ (JCR Q1, Impact Factor = 3.745) \n[4] Zhaoyu Zhai, José-Fernán Martínez Ortega,\
    \ Castillejo Pedro, Beltran Victoria. A Triangular \nSimilarity Measure for Case\
    \ Retrieval in CBR and Its Application to an Agricultural Decision Support \n\
    System. Sensors. vol. 19, no. 21, Nov. 2019. DOI: https://doi.org/10.3390/s19214605.\
    \ (JCR Q1, Impact \nFactor = 3.275) \n[5] Zhaoyu Zhai, José-Fernán Martínez Ortega,\
    \ Beltran Victoria, Néstor Lucas Martínez. An \nAssociated Representation Method\
    \ for Defining Agricultural Cases in a Case-Based Reasoning System \nfor Fast\
    \ Case Retrieval. Sensors. vol. 19, no. 23, Dec. 2019. DOI: https://doi.org/10.3390/s19235118.\
    \ \n(JCR Q1, Impact Factor = 3.275) \n[6] Zhaoyu Zhai, José-Fernán Martínez Ortega,\
    \ Beltran Victoria, Néstor Lucas Martínez. Decision \nSupport Systems for Agriculture\
    \ 4.0: Survey and Challenges. Computers and Electronics in Agriculture. \nvol.\
    \ 170, Mar. 2020. DOI: https://doi.org/10.1016/j.compag.2020.105256. (JCR Q1,\
    \ Impact Factor = \n3.858) \n[7] Néstor Lucas Martínez, José-Fernán Martínez Ortega,\
    \ Jesús Rodríguez-Molina, Zhaoyu Zhai. \nProposal of an Automated Mission Manager\
    \ for Cooperative Autonomous Underwater Vehicles. \nApplied Sciences-Basel. vol.\
    \ 10, no. 3, Jan. 2020. DOI: https://doi.org/10.3390/app10030855. (JCR Q2, \n\
    Impact Factor = 2.474) \n[8] Zhaoyu Zhai, José-Fernán Martínez Ortega, Néstor\
    \ Lucas Martínez, Vicente Hernández Díaz. \nApplying Case-Based Reasoning and\
    \ A Learning-Based Adaptation Strategy to Irrigation Scheduling \nin Grape Farming.\
    \ Computers and Electronics in Agriculture. vol. 178, Nov. 2020. DOI: \nhttps://doi.org/10.1016/j.compag.2020.105741.\
    \ (JCR Q1, Impact Factor = 3.858) \n[9] Zhaoyu Zhai, José-Fernán Martínez Ortega,\
    \ Néstor Lucas Martínez, Huanliang Xu. An Efficient \nCase Retrieval Algorithm\
    \ for Agricultural Case-Based Reasoning Systems, with Consideration of Case \n\
    \ \n167 \n \nBase \nMaintenance. \nAgriculture-Basel. \nvol. \n9(10), \nSept.\
    \ \n2020. \nDOI: \nhttps://doi.org/10.3390/agriculture10090387 (JCR Q2, Impact\
    \ Factor = 2.072) \n7.3.2. Research projects \nThe results presented in this thesis\
    \ were obtained from the following two European projects. \n[1] SWARMs – Smart\
    \ and Networking Underwater Robots in Cooperation Meshes, under Grant \nAgreement\
    \ No. 662107-SWARMs-ECSEL-2014-1, partially supported by the ECSEL JU and the\
    \ \nSpanish Ministry of Economy and Competitiveness (Ref: PCIN-2014-022-C02-02).\
    \ \n[2] AFarCloud – Aggregating Farming in the Cloud, under grant agreement No.\
    \ 783221-AFarCloud-\nH2020-ECSEL-2017-2, and supported in part by the ECSEL JU\
    \ and in part by the Spanish Ministry of \nScience, Innovation and Universities\
    \ under grant PCI2018-092965. \nAppendix A \nThe Iris plant dataset is a classic\
    \ and very easy multi-class classification dataset. The detail of this \ndataset\
    \ is listed in Table 40. \nTable 40. Characteristics of the Iris plant dataset.\
    \ \nCharacteristics \nContent \nNumber of instances \n150 \nNumber of classes\
    \ \n3 (50 instances in each class) \nNumber of attributes \n4 numeric features\
    \ \nName of classes \nIris-Setosa \nIris-Versicolour \nIris-Virginica \nName of\
    \ Attributes \nSepal length (cm) \nSepal width (cm) \nPetal length (cm) \n \n\
    168 \n \nPetal width (cm) \nMissing attributes \nNone \nThe user guide for this\
    \ Iris plant dataset is provided in Table 41. \nTable 41. User guide for the Iris\
    \ plant dataset. \nParameters: \nreturn_X_y: Boolean, default=False. \nIf True,\
    \ returns (data, target) instead of a Bunch \nobject. See below for more information\
    \ about the \ndata and target object. \nReturns: \ndata: Bunch \nDictionary-like\
    \ object, the interesting attributes are: \n‘data’, the data to learn, ‘target’,\
    \ the classification \nlabels, ‘target_names’, the meaning of the labels, \n‘feature_names’,\
    \ the meaning of the features, \n‘DESCR’, the full description of the dataset,\
    \ \n‘filename’, the physical location of iris csv dataset \n(added in version\
    \ 0.20). \n(data, target): tuple if return_X_y is True \nNew in version 0.18.\
    \ \nThe Iris plant dataset can be displayed in Figure 119. \n \n169 \n \n \n(a)\
    \ \n \n(b) \nFigure 119. Data visualization of the Iris plant dataset: (a) visualization\
    \ of the first two features (sepal \nlength and sepal width); (b) visualization\
    \ of the first three features (sepal length, sepal width, and petal \nlength).\
    \ \n \n170 \n \n \nFor accessing the instances in the Iris plant dataset and obtaining\
    \ their names of classes, the \nfollowing example is given in Figure 120. \n \n\
    Figure 120. An example of accessing the Iris plant dataset. \nAppendix B \nThe\
    \ Oracle Mediator is a service component of the Oracle SOA Suite that provides\
    \ mediation \ncapabilities like selective routing, transformation, and validation\
    \ capabilities, along with various \nmessage exchange patterns like synchronous,\
    \ asynchronous, and event publishing or subscriptions. As \na lightweight framework,\
    \ the Oracle Mediator mediates various components within a composite \napplication.\
    \ Meanwhile, it can convert data to facilitate communication between various interfaces\
    \ \nexposed by different components. Generally, the following primary functions\
    \ are considered in the \nOracle Mediator. \n• \nContent-based and header-based\
    \ routing: The Oracle Mediator enables to define rules based on \nthe message\
    \ payload or message headers. Actions (like routing and delivering data to a database)\
    \ \ncan be specified according to the elements or attributes from the message\
    \ payload or the message \nheaders. \n• \nSynchronous and asynchronous interactions:\
    \ The Oracle Mediator supports both synchronous \nand asynchronous request and\
    \ response interactions. In a synchronous interaction, the client can \nrequest\
    \ a service and then wait for a response to this request. In an asynchronous interaction,\
    \ the \nclient can invoke a service without waiting for a response to this request\
    \ and then specify an action \n(like raising an event or starting a process) after\
    \ an indicated timeout period. \n \n171 \n \n• \nSequential and parallel routing\
    \ of messages: The Oracle Mediator provides the configuration of \nexecuting routing\
    \ rules either in parallel or in sequence. \n• \nMessage resequencing: When incoming\
    \ messages arrive in a random order, the Oracle Mediator \nis able to order the\
    \ messages based on the sequential or chronological information and then send\
    \ \nthe message to the target services in the correct order. \n• \nData transformation:\
    \ The Oracle Mediator offers the possibility of interchanging data among \napplications\
    \ that use different schemas. For instance, a comma-delimited file can be converted\
    \ into \na database table structure. \n• \nPayload validation: The Oracle Mediator\
    \ can validate the incoming message payload by using a \nSchematron or an XSD\
    \ file. \n• \nJava callouts: The Oracle Mediator permits to add Java codes with\
    \ regular expressions to the \nrouting rules. \n• \nEvent handling: The Oracle\
    \ Mediator can both subscribe to and raise an event when a situation of \ninterest\
    \ occurs. \n• \nDynamic routing: The Oracle Mediator can separate the control\
    \ logic of a process from the \nexecution of the process. The control logic determines\
    \ the path taken by the process through the \nMediator Editor. \n• \nError handling:\
    \ The Oracle Mediator supports both manual error handling and error handling \n\
    based on fault policies. A fault policy is composed of conditions and actions,\
    \ where the conditions \nindicate the action to be carried out for a particular\
    \ error condition. \n• \nSending messages back to the caller (Echo): The Oracle\
    \ Mediator can echo source messages back \nto the initial caller after any transformations,\
    \ validations, assignments, or sequencing operations \nare performed. \n• \nMultiple\
    \ part messages: The Oracle Mediator can process messages that consist of multiple\
    \ parts. \nFor instance, some remote procedure call (RPC) web services contain\
    \ multiple parts in the SOAP \nmessage. \nFor maintaining the above-mentioned\
    \ functionalities, it is necessary to understand the message \nexchange patterns\
    \ of the Oracle Mediator. Some common message exchange patterns between the \n\
    Oracle Mediator service component and other applications include (i) one-way message\
    \ exchange \n \n172 \n \npatterns, (ii) request-reply message exchange patterns,\
    \ (iii) request-reply-fault message exchange \npatterns, (iv) request-callback\
    \ message exchange patterns, (v) request-reply-callback message exchange \npatterns,\
    \ and (vi) request-reply-fault-callback message exchange patterns. \nAll these\
    \ six exchange patterns have default configurations of handling responses, faults,\
    \ and \ncallbacks by Oracle JDeveloper when a routing rule is created. The following\
    \ points are applicable to \nall exchange patterns. \n• \nWhen a response, fault,\
    \ or callback is sent back to the caller, it is also possible to route the same\
    \ \nmessage to a different target service or event by clicking the button next\
    \ to the target and selecting \na different target. \n• \nWhen the caller of the\
    \ Mediator expects a response, one or more routing rules may route the request\
    \ \nto a target that does not return a response, but there should be at least\
    \ one sequential routing rule \nthat returns a response. \n• \nWhen there are\
    \ multiple routing rules in a request-response pattern with multiple rules sending\
    \ a \nresponse back to the initial caller, the first response that is received\
    \ is the one delivered to the caller. \nThe other responses are ignored. Thus,\
    \ the routing rules that send the response should precede other \nrouting rules\
    \ that forward the response (if any). \nFor demonstrating how the message exchange\
    \ patterns work, the one-way message exchange \npatterns are explained in the\
    \ following. \nIn a one-way interaction, the Oracle Mediator is invoked but it\
    \ does not send a response back to \nthe caller. Depending on the type of routing\
    \ rule target, the responses, faults, and callbacks are handled \nas shown in\
    \ Table 42. The one-way messages exchange pattern is presented in Figure 121.\
    \ \nTable 42. Responses when the Oracle Mediator adopts the one-way interaction.\
    \ \nRouting rule target type \nResponse \nRequest \nNo response. \nRequest-Response\
    \ \nResponse is forwarded to another target or event. \n \n173 \n \nRequest-Response-Fault\
    \ \nResponse and fault are forwarded to another target \nor event. \nRequest-Callback\
    \ \nCallback is forwarded to another target or event. \nRequest-Response-Callback\
    \ \nResponse and callback are forwarded to another \ntarget or event. \nRequest-Response-Fault-Callback\
    \ \nResponse, fault, and callback are forwarded to \nanother target or event.\
    \ \n \nFigure 121. The one-way message exchange pattern. \nAppendix C \nThe artificial\
    \ neural network (ANN) is a computing system inspired by the biological neural\
    \ \nnetworks that constitute animal brains. The ANN tries to perform tasks by\
    \ considering samples without \nbeing programmed with task-specific rules. A typical\
    \ application of the ANN is image recognition and \nclassification. In general,\
    \ an ANN is on the basis of a collection of connected units or nodes called \n\
    artificial neurons, enabling to transmit a signal to other neurons. Depending\
    \ on the complexity of the \nsystem, the neural network is capable of processing\
    \ information by adjusting the interconnection \nbetween several internal nodes.\
    \ \n \n174 \n \nThe structure of the neural network used in the preliminary proof\
    \ is a three-layer error back \npropagation (BP) neural network. The trained BP\
    \ neural network is able to process the input information \nof similar samples\
    \ and transform it nonlinearly with the minimum output error. The topological\
    \ \nstructure of a BP neural network is presented in Figure 122. The neural network\
    \ includes three hidden \nlayers between the input and output layers. \n \nFigure\
    \ 122. The topological structure of a BP neural network. \n \nIn Figure 122, the\
    \ involved parameters are listed as follows. \n• \n\U0001D43C1– \U0001D43C8 denote\
    \ the input layer neurons. \n• \n\U0001D43B1– \U0001D43B\U0001D45B and \U0001D43B\
    ′′1– \U0001D43B′′\U0001D45B denote the hidden layer neurons. \n• \n\U0001D45B\
    \ denotes the number of the hidden layer neurons. \n• \n\U0001D466 denotes the\
    \ output layer neuron. \n• \n\U0001D44A\U0001D458\U0001D45B denotes the weight\
    \ between the \U0001D458-th node of the input layer and the \U0001D45B-th node\
    \ of the hidden \nlayer. \n• \n\U0001D44F\U0001D456\U0001D45B denotes the bias\
    \ between the \U0001D456-th node of the input layer and the \U0001D45B-th node\
    \ of the hidden layer. \n \n175 \n \n• \n\U0001D44F\U0001D458\U0001D45B denotes\
    \ the bias between the \U0001D458-th node of the hidden layer and the \U0001D45B\
    -th node of the hidden \nlayer. \n• \n\U0001D44A\U0001D45B denotes the weight\
    \ between the \U0001D45B-th node of the hidden layer and the output layer. \n\
    • \n\U0001D44F\U0001D45B denotes the bias between the \U0001D45B-th node of the\
    \ hidden layer and the output layer. \nThe BP neural network is a computing model\
    \ with a learning function with the objective of \nobtaining the relation between\
    \ the input and output from the training samples. The training process \nconsists\
    \ of two steps: (i) signal positive spread, and (ii) error BP. The samples are\
    \ transferred from the \ninput layer to the hidden layer and processed to the\
    \ output layer. The error is computed by comparing \nthe actual value. If the\
    \ actual output satisfies the error range, the output will be obtained. Otherwise,\
    \ the \nerror will return to the input layer through the hidden layer. Under this\
    \ circumstance, the weight and \nbias of all input neurons will be adjusted until\
    \ the error is reduced within the given range. As mentioned \nin Section 5.2,\
    \ the flight speed (\U0001D453\U0001D460), flight altitude (\U0001D453\U0001D44E\
    \ ), propeller pitch (\U0001D45D), nozzle pitch (\U0001D45B\U0001D45D), \ntemperature\
    \ (\U0001D461), wind speed (\U0001D464\U0001D460), and prescription value (\U0001D463\
    ) are taken as input, while the droplet \ndeposition is taken as the output. The\
    \ pseudo code of the BP neural network is shown in Table 43. \nTable 43. The pseudo\
    \ code of the BP neural network. \nAlgorithm: The BP neural network \nDefinition:\
    \ \nInput layer neurons (\U0001D465\U0001D456) \nThe number of input layer neurons\
    \ (\U0001D45B) \nThe hidden layer neurons (\U0001D43B\U0001D457, \U0001D43B′\U0001D457\
    , \U0001D43B′′\U0001D457) \nThe number of input layer neurons (\U0001D458) \n\
    The output layer neurons (\U0001D466) \nInitialization: \nInitialize all weights\
    \ and biases in the network. \nMain body: \nfor \U0001D456 in range (1, \U0001D45B\
    ) do \n    \U0001D4658 = (\U0001D453\U0001D460, \U0001D453ℎ, \U0001D45D, \U0001D45B\
    \U0001D460, \U0001D461, \U0001D464\U0001D460, \U0001D463) \n \n176 \n \n    \U0001D466\
    \ = (\U0001D451) \n    \U0001D465\U0001D456 = \U0001D44B(\U0001D465\U0001D456\
    ) \nEnd \nfor \U0001D457 in range (1, \U0001D458) do \n    for \U0001D461 in range\
    \ (1,3) do \n        \U0001D43B\U0001D457 = ∑ \U0001D44A\U0001D456\U0001D457\U0001D465\
    \U0001D456 + \U0001D44F\U0001D457 \n        \U0001D43B′\U0001D457 = ∑ \U0001D44A\
    ′\U0001D456\U0001D457\U0001D43B\U0001D457 + \U0001D44F′\U0001D457 \n        \U0001D43B\
    ′′\U0001D457 = ∑ \U0001D44A′′\U0001D456\U0001D457\U0001D43B′\U0001D457 + \U0001D44F\
    ′′\U0001D457 \n        \U0001D4660 = \U0001D454(\U0001D43B′′\U0001D457) \n   \
    \ end \nend \nfor all j in range (1, \U0001D458) do \n    \U0001D438 =\n∑ \U0001D452\
    \U0001D457\n2\n2  \n    if (\U0001D438 > \U0001D438\U0001D45F\U0001D45F\U0001D45C\
    \U0001D45F) do \n        \U0001D44A\U0001D456\U0001D457 = \U0001D44A\U0001D456\
    \U0001D457 + α\U0001D43B\U0001D457\U0001D452\U0001D457 \n        \U0001D44F\U0001D457\
    \ = \U0001D44F\U0001D457 + β\U0001D452\U0001D457 \n    return \U0001D456 = 1 \n\
    \    else \U0001D466 = \U0001D4660 \nend \nFor the ANN application in the variable\
    \ spray system for crop protection, the flow chart is \npresented in Figure 123.\
    \ \n \n177 \n \n \nFigure 123. The flow chart of the variable spray system. \n\
    \ \nIn this spray system, the flight speed, flight altitude, and positioning information\
    \ of the UAVs are \nobtained by using the global positioning system (GPS). The\
    \ prescription value of the current position \nis determined by matching the position\
    \ of the UAV with that of the prescription map. Environmental \nparameters like\
    \ temperature and wind speed are collected by sensors. After information fusion,\
    \ the \ninformation is taken as inputs to the BP neural network to predict the\
    \ deposition. The flow rate of the \nspraying is acquired by combining the flight\
    \ speed of the UAV with the predicted deposition value. \nLastly, a pulse width\
    \ modulation square wave is generated to complete the process of flow rate \n\
    regulation. \nAppendix D \nThe “xml.dom.minidom” module is essentially a DOM 1.0-compatible\
    \ DOM with some DOM 2 \nfeatures (primarily namespace features). The usage of\
    \ the DOM interface in Python is straight-forward. \nThe following mapping rules\
    \ apply. \n• \nInterfaces are accessed through instance objects. Applications\
    \ should not instantiate the classes \nthemselves; they should use the creator\
    \ functions available on the Document object. Derived \ninterfaces support all\
    \ operations (and attributes) from the base interfaces, plus any new operations.\
    \ \n \n178 \n \n• \nOperations are used as methods. Since the DOM uses only in\
    \ parameters, the arguments are passed \nin normal order (from left to right).\
    \ There are no optional arguments. void operations return None \nvalues. \n• \n\
    Interface definition language (IDL) attributes map to instance attributes. For\
    \ compatibility with the \nobject management group (OMG) IDL language mapping\
    \ for Python, an attribute foo can also be \naccessed through accessor methods\
    \ (“_get_foo()” and “_set_foo()”). The readonly attributes must \nno be changed\
    \ and this is no enforced at runtime. \n• \nThe types short int, unsigned int,\
    \ unsigned long long, and boolean all map to Python integer objects. \n• \nThe\
    \ type DOMString maps to Python strings. “xml.dom.minidom” supports either bytes\
    \ or strings, \nbut will normally produce strings. Values of type DOMString may\
    \ also be None where allowed to \nhave the IDL null value by the DOM specification\
    \ from the W3C. \n• \nconst declarations map to variables in their respective\
    \ scope. \n• \nDOMException is currently not supported in “xml.dom.minidom”. Instead,\
    \ “xml.dom.minidom” \nuses standard Python exceptions such as TypeError and AttributeError.\
    \ \n• \nNodeList objects are implemented using Python’s built-in list type. These\
    \ objects provide the \ninterface defined in the DOM specification, but with earlier\
    \ versions of Python they do not support \nthe official API. They are, however,\
    \ much more “Pythonic” than the interface defined in the W3C \nrecommendations.\
    \ \n \n \n \n179 \n \nReferences \n1. \nCurrent world population. Available: https://www.worldometers.info/world-population/.\
    \ \n2. \nThe \nworld \npopulation \nprospects: \n2015 \nRevision. \nAvailable:\
    \ \nhttps://www.un.org/en/development/desa/publications/world-population-prospects-2015-\n\
    revision.html. \n3. \nCuesta, J. “A world free of poverty ... but of hunger and\
    \ malnutrition?” European Journal of \nDevelopment Research, vol. 25, no. 1, pp.\
    \ 1-4, Feb. 2013. https://doi.org/10.1057/ejdr.2012.43. \n4. \nUdias, A.; Pastori,\
    \ M.; Dondeynaz, C.; Moreno, C.C.; Ali, A.; Cattaneo, L.; Cano, J. “A decision\
    \ \nsupport tool to enhance agricultural growth in the Mekrou river basin (West\
    \ Africa),” Computers \nand \nElectronics \nin \nAgriculture, \nvol. \n154, \n\
    pp. \n467-481, \nNov. \n2018. \nhttps://doi.org/10.1016/j.compag.2018.09.037.\
    \ \n5. \nDong, C.; Huang, G.; Cheng, G.H.; Zhao, S. “Water resources and farmland\
    \ management in the \nSonghua river watershed under interval and fuzzy uncertainties,”\
    \ Water Resources Management, \nvol. 32, no. 13, pp. 4177-4200, Oct. 2018. https://doi.org/10.1007/s11269-018-2035-0.\
    \ \n6. \nFarooq, M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. “A survey on\
    \ the role of IoT in agriculture \nfor the implementation of smart farming,” IEEE\
    \ Access, vol. 7, pp. 156237-156271, Oct. 2019. \nhttps://doi.org/10.1109/ACCESS.2019.2949703.\
    \ \n7. \nMekala, M.S.; Viswanathan, P. “A survey: Smart agriculture IoT with cloud\
    \ computing,” In \nProceedings of International Conference on Microelectronic\
    \ Devices, Circuits and Systems \n(ICMDCS), Vellore, INDIA, Aug. 10-12, 2017.\
    \ \n8. \nWolfert, S.; Ge, L.; Verdouw, C.; Bogaardt, M.J. “Big data in smart farming\
    \ – A review,” \nAgricultural Systems, vol. 153, pp. 69-80, May 2017. https://doi.org/10.1016/j.agsy.2017.01.023.\
    \ \n9. \nTaechatanasat, P.; Armstrong, L. “Decision support system data for farmer\
    \ decision making,” In \nProceedings of Asian Federation for Information Technology\
    \ in Agriculture, pp. 472-486, 2014. \n10. Watson \nDecision \nPlatform \nfor\
    \ \nAgriculture. \nAvailable: \nhttps://www.ibm.com/downloads/cas/ONVXEB2A. \n\
    11. Prospera. Available: https://www.prospera.ag/. \n12. Bazzani, G.M. “An integrated\
    \ decision support system for irrigation and water policy design: \nDSIRR,” Environmental\
    \ Modelling & Software, vol. 20, no. 2, pp. 153-163, Feb. 2005. \nhttps://doi.org/10.1016/j.envsoft.2003.12.017.\
    \ \n13. Tyrychtr, J.; Vostrovsky, V. “The current state of the issue of information\
    \ needs and dispositions \namong small Czech farms,” Agricultural Economics–Zemedelska\
    \ Ekonomika, vol. 63, no. 4, pp. \n164-174, 2017. https://doi.org/10.17221/321/2015-AGRICECON.\
    \ \n14. AFarCloud project. Available: http://www.afarcloud.eu/. \n \n180 \n \n\
    15. Francis, C.A.; Lieblein, G.; Breland, T.A.; Salomonsson, L.; Geber, U.; Sriskandarajah,\
    \ N.; \nLanger, V. “Transdisciplinary research for a sustainable agriculture and\
    \ food sector,” Agronomy \nJournal, vol. 100, no. 3, pp. 771-776, May-Jun. 2008.\
    \ https://doi.org/10.2134/agronj2007.0073. \n16. Asseng, S.; Jamieson, P.D.; Kimball,\
    \ B.; Pinter, P.; Sayre, K.; Bowden, J.W. “Simulated wheat \ngrowth affected by\
    \ rising temperature, increased water deficit and elevated atmospheric CO2,” \n\
    Filed Crops Research, vol. 85, no. 2-3, pp. 85-102, Feb. 2004. https://doi.org/10.1016/S0378-\n\
    4290(03)00154-0. \n17. Banger, K.; Yuan, M.W.; Wang, J.M.; Nafziger, E.D.; Pittelkow,\
    \ C.M. “A vision for incorporating \nenvironmental effects into nitrogen management\
    \ decision support tools for US maize production,” \nFrontiers in Plant Science,\
    \ vol. 8, Jul. 2017. https://doi.org/10.3389/fpls.2017.01270. \n18. Lin, Y.Z.;\
    \ Deng, X.Z.; Jin, Q. “Economic effects of drought on agriculture in north China,”\
    \ \nInternational Journal of Disaster Risk Science, vol. 4, no. 2, pp. 59-67,\
    \ Jun. 2013. \nhttps://doi.org/10.1007/s13753-013-0007-9. \n19. Evers, L.; Barros,\
    \ A.I.; Monsuur, H.; Wagelmans, A. “Online stochastic UAV mission planning \n\
    with time windows and time-sensitive targets,” European Journal of Operational\
    \ Research, vol. \n238, no. 1, pp. 348-362, Oct. 2014. https://doi.org/10.1016/j.ejor.2014.03.014.\
    \ \n20. Zhou, H.X.; Zeng, Z.; Lian, L. “Adaptive re-planning of AUVs for environmental\
    \ sampling \nmissions: A fuzzy decision support system based on multi-objective\
    \ particle swarm optimization,” \nInternational Journal of Fuzzy Systems, vol.\
    \ 20, no. 2, pp. 650-671, Feb. 2018. \nhttps://doi.org/10.1007/s40815-017-0398-7.\
    \ \n21. Lofaro, A. “Decision support and autonomous decision systems using “Big\
    \ Data”,” in Proceedings \nof 11th IEEE International Conference on Application\
    \ of Information and Communication \nTechnologies (AICT), Moscow, RUSSIA, Sep.\
    \ 20-22, 2017. \n22. Zhang, Z.X.; Jiang, Q.; Wang, R.J.; Song, L.T.; Zhang, Z.Y.;\
    \ Wei, Y.Y.; Mei, T.; Yu, B. “Research \non management system of automatic driver\
    \ decision-making knowledge base for unmanned \nvehicle,” International Journal\
    \ of Pattern Recognition and Artificial Intelligence, vol. 33, no. 4, \nApr. 2019.\
    \ https://doi.org/10.1142/S0218001419590134. \n23. Pietrzykowski, Z.; Wolejsza,\
    \ P. “Decision support system in marine navigation,” In Proceedings \nof 16th\
    \ International Conference on Transport Systems Telematics (TST), Katowice Ustron,\
    \ \nPOLAND, Mar. 16-19, 2016. \n24. Kamali, F.P.; Borges, J.A.R.; Meuwissen M.P.M.;\
    \ de Boer, I.J.M.; Lansink, A.G.J.M.O. \n“Sustainability assessment of agricultural\
    \ systems: The validity of expert opinion and robustness \nof a multi-criteria\
    \ analysis,” Agricultural Systems, vol. 157, pp. 118-128, Oct. 2017. \nhttps://doi.org/10.1016/j.agsy.2017.07.013.\
    \ \n \n181 \n \n25. Chlingaryan, A.; Sukkarieh, S.; Whelan, B. “Machine learning\
    \ approaches for crop yield prediction \nand nitrogen status estimation in precision\
    \ agriculture: A review,” Computers and Electronics in \nAgriculture, vol. 151,\
    \ pp. 61-69, Aug. 2018. https://doi.org/10.1016/j.compag.2018.05.012. \n26. Han,\
    \ E.J.; Ines, A.V.M.; Baethgen, W.E. “Climate-agriculture-modeling and decision\
    \ tool \n(CAMDT): A software framework for climate risk management in agriculture,”\
    \ Environmental \nModelling \n& \nSoftware, \nvol. \n95, \npp. \n102-114, \nSep.\
    \ \n2017. \nhttps://doi.org/10.1016/j.envsoft.2017.06.024. \n27. Chougule, A.;\
    \ Jha, V.K.; Mukhopadhyay, D. “AgroKanti: Location-aware decision support system\
    \ \nfor forecasting of pests and diseases in grapes,” in Proceedings of 3rd International\
    \ Conference on \nInformation System Design and Intelligent Applications (INDIA),\
    \ Visakhapatnam, INDIA, Jan. 08-\n09, 2016. \n28. Ali, M.; Deo, R.C.; Downs, N.J.;\
    \ Maraseni, T. “Multi-stage committee based extreme learning \nmachine model incorporating\
    \ the influence of climate parameters and seasonality on drought \nforecasting,”\
    \ Computers and Electronics in Agriculture, vol. 152, pp. 149-165, Sep. 2018.\
    \ \nhttps://doi.org/10.1016/j.compag.2018.07.013. \n29. Ghorbani, M.A.; Deo, R.C.;\
    \ Karimi, V.; Kashani, M.H.; Ghorbani, S. “Design and implementation \nof a hybrid\
    \ MLP-GSA model with multi-layer perceptron-gravitational search algorithm for\
    \ \nmonthly lake water level forecasting,” Stochastic Environmental Research and\
    \ Risk Assessment, \nvol. 33, no. 1, pp. 125-147. Jan. 2019. https://doi.org/10.1007/s00477-018-1630-1.\
    \ \n30. Rose, D.C.; Chilvers, J. “Agriculture 4.0: Broadening responsible innovation\
    \ in an era of smart \nfarming,” \nFrontiers \nin \nSustainable \nFood \nSystems,\
    \ \nvol. \n2, \nDec. \n2018. \nhttps://doi.org/10.3389/fsufs.2018.00087. \n31.\
    \ Lavelle, P. “Rethinking Chinese history through the history of agriculture,”\
    \ Agricultural History, \nvol. 93, no. 4, pp. 717-718, 2019. \n32. Obrien, P.K.\
    \ “Agriculture and industrial revolution,” Economic History Review, vol. 30, no.\
    \ 1, pp. \n166-181, Feb. 1977. \n33. Marchant, J.A.; Moncaster, M.E. “Robotics\
    \ and automation in agriculture,” Outlook on \nAgriculture, vol. 19, no. 4, pp.\
    \ 221-228, Dec. 1990. https://doi.org/10.1177/003072709001900403. \n34. Zambon,\
    \ I.; Cecchini, M.; Egidi, G.; Saporito, M.G.; Colantoni, A. “Revolution 4.0:\
    \ Industry vs. \nAgriculture in a future development for SMEs,” Processes, vol.\
    \ 7, no. 1, Jan. 2019. \nhttps://doi.org/10.3390/pr7010036. \n35. Anderl, R. “Industrie\
    \ 4.0 – Technological approaches, use cases, and implementation,” AT-\nAutomatisierungstechnik,\
    \ vol. 63, no. 10, pp. 753-765, Oct. 2015. https://doi.org/10.1515/auto-\n2015-0025.\
    \ \n \n182 \n \n36. Agriculture \n4.0: \nThe \nfuture \nof \nfarming \ntechnology.\
    \ \nAvailable: \nhttps://www.worldgovernmentsummit.org/api/publications/document?id=95df8ac4-e97c-6578-\n\
    b2f8-ff0000a7ddb6. \n37. Yuan, J.J.; Lu, Y.L.; Ferrier, R.C.; Liu, Z.Y.; Su, H.Q.;\
    \ Meng, J.; Song, S.; Jenkins, A. \n“Urbanization, rural development and environmental\
    \ health in China,” Environmental \nDevelopment, vol. 28, pp. 101-110, Dec. 2018.\
    \ https://doi.org/10.1016/j.envdev.2018.10.002. \n38. Pang, C.; Yu, H.Y.; He,\
    \ J.; Xu, J.C. “Deforestation and changes in landscape patterns from 1979 \nto\
    \ 2006 in Suan Country, DPR Korea,” Forests, vol. 4, no. 4, pp. 968-983, Dec.\
    \ 2013. \nhttps://doi.org/10.3390/f4040968. \n39. Athukorala, W.; Wilson, C. “Groundwater\
    \ overuse and farm-level technical inefficiency: Evidence \nfrom Sri Lanka,” Hydrogeology\
    \ Journal, vol. 20, no. 5, pp. 893-905, Aug. 2012. \nhttps://doi.org/10.1007/s10040-012-0833-7.\
    \ \n40. Fountas, S.; Sorensen, C.G.; Tsiropoulos, Z.; Cavalaris, C.; Liakos, V.;\
    \ Gemtos, T. “Farm \nmachinery management information system,” Computers and Electronics\
    \ in Agriculture, vol. 110, \npp. 131-138, Jan. 2015. https://doi.org/10.1016/j.compag.2014.11.011.\
    \ \n41. Czimber, K.; Galos, B. “A new decision support system to analyse the impacts\
    \ of climate change \non the Hungarian forestry and agricultural sectors,” Scandinavian\
    \ Journal of Forest Research, vol. \n31, no. 7, pp. 664-673, Aug. 2016. https://doi.org/10.1080/02827581.2016.1212088.\
    \ \n42. Kmoch, L.; Pagella, T.; Palm, M.; Sinclair, F. “Using local agroecological\
    \ knowledge in climate \nchange adaptation: A study of tree-based options in northern\
    \ Morocco,” Sustainability, vol. 10, no. \n10, Oct. 2018. https://doi.org/10.3390/su10103719.\
    \ \n43. van Evert, F.K.; Fountas, S.; Jakovetic, D.; Crnojevic, V.; Travlos, I.;\
    \ Kempenaar, C. “Big data for \nweed control and crop protection,” Weed Research,\
    \ vol. 57, no. 4, pp. 218-233, Aug. 2017. \nhttps://doi.org/10.1111/wre.12255.\
    \ \n44. Borodin, V.; Bourtembourg, J.; Hnaien, F.; Labadie, N. “Handling uncertainty\
    \ in agricultural \nsupply chain management: A state of the art,” European Journal\
    \ of Operational Research, vol. \n254, no. 2, pp. 348-359, Oct. 2016. https://doi.org/10.1016/j.ejor.2016.03.057.\
    \ \n45. Pourmoayed, R.; Nielsen, L.R.; Kristensen, A.R. “A hierarchical Markov\
    \ decision process \nmodeling feeding and marketing decisions of growing pigs,”\
    \ European Journal of Operational \nResearch, vol. 250, no. 3, pp. 925-938, May\
    \ 2016. https://doi.org/10.1016/j.ejor.2015.09.038. \n46. Ferrandez-Pastor, F.J.;\
    \ Garcia-Chamizo, J.M.; Nieto-Hidalgo, M.; Mora-Pascual, J.; Mora-\nMartinez,\
    \ J. “Developing ubiquitous sensor network platform using Internet of Things:\
    \ Application \nin precision agriculture,” Sensors, vol. 16, no. 7, Jul. 2016.\
    \ https://doi.org/10.3390/s16071141. \n47. Das, V.; Jain, S. “Genetic algorithm\
    \ to find most optimum growing technique for multiple cropping \nusing Big Data,”\
    \ In Proceedings of International Conference on Innovative and Emerging \n \n\
    183 \n \nTechnologies for Farming – Energy and Environment – Water (ITsFEW), Vellore,\
    \ INDIA, Oct. \n12-14, 2018. \n48. Liakos, K.G.; Busato, P.; Moshou, D.; Pearson,\
    \ S.; Bochtis, D. “Machine learning in agriculture: \nA review,” Sensors, vol.\
    \ 18, no. 8, Aug. 2018. https://doi.org/10.3390/s18082674. \n49. Lopez-Riquelme,\
    \ J.A.; Pavon-Pulido, N.; Navarro-Hellin, H.; Soto-Valles, F.; Torres-Sanchez,\
    \ R. \n“A software architecture based on FIWARE cloud for precision agriculture,”\
    \ Agricultural Water \nManagement, vol. 183, pp. 123-135, Mar. 2017. https://doi.org/10.1016/j.agwat.2016.10.020.\
    \ \n50. Hajjaj, S.S.H.; Sahari, K.S.M. “Review of agriculture robotics: Practicality\
    \ and feasibility,” in \nProceedings of IEEE International Symposium on Robotics\
    \ and Intelligent Sensors (IRIS), Tokyo, \nJAPAN, Dec. 17-20, 2016. \n51. Sowmya,\
    \ B.J.; Chaitanya, S.K.; Seema, S.; Srinivasa, K.G. “Data analytic techniques\
    \ for \ndeveloping decision support system on agrometeorological parameters for\
    \ farmers,” International \nJournal of Cognitive Informatics and Natural Intelligence,\
    \ vol. 14, no. 2, pp. 92-107, Apr. 2020. \nhttps://doi.org/10.4018/IJCINI.2020040106.\
    \ \n52. Jones, J.W. “Decision support systems – An organizational perspective\
    \ – KEEN, PG, MORTON, \nMSS,” Administrative Science Quarterly, vol. 25, no. 2,\
    \ pp. 376-382, Jun. 1980. \nhttps://doi.org/10.2307/2392463. \n53. Sheng, Y.K.;\
    \ Zhang, S. “Analysis of problems and trends of decision support systems \ndevelopment,”\
    \ In Proceedings of 1st International Conference on E-Business and Information\
    \ \nSystem Security, Wuhan, PEOPLES R CHINA, May 23-24, 2009. \n54. Terribile,\
    \ F.; Agrillo, A.; Bonfante, A.; Buscemi, G.; Colandrea, M.; D’Antonio, A.; De\
    \ Mascellis, \nR.; De Michele, C.; Langella, G.; Manna, P.; Marotta, L.; Mileti,\
    \ F.A.; Minieri, L.; Orefice, N.; \nValentini, S.; Vingiani, S.; Basile, A. “A\
    \ web-based spatial decision supporting system for land \nmanagement and soil\
    \ conservation,” Solid Earth, vol. 6, no. 3, pp. 903-928, Jul. 2015. \nhttps://doi.org/10.5194/se-6-903-2015.\
    \ \n55. Yazdani, M.; Zarate, P.; Coulibaly, A.; Zavadskas, E.K. “A group decision\
    \ making support system \nin logistics and supply chain management,” Expert Systems\
    \ with Applications, vol. 88, pp. 376-\n392, Dec. 2017. https://doi.org/10.1016/j.eswa.2017.07.014.\
    \ \n56. Fontana, M.E.; Aragao, J.P.S.; Morais, D.C. “Decision support system for\
    \ outsourcing strategies,” \nProduction Engineering – Research and Development,\
    \ vol. 13, no. 5, pp. 547-555, Oct. 2019. \nhttps://doi.org/10.1007/s11740-019-00907-1.\
    \ \n57. Ekeocha, R.J.O. “Optimization of systems,” International Journal of Sciences,\
    \ vol. 8, no. 3, pp. \n118-125, Mar. 2019. https://doi.org/10.18483/ijSci.1964.\
    \ \n58. Ong, P.; Cortes, J. “Event-triggered interactive gradient descent for\
    \ real-time multi-objective \noptimization,” In Proceedings of 56th Annual IEEE\
    \ Conference on Decision and Control (CDC), \nMelbourne, AUSTRALIA, Dec. 12-15,\
    \ 2017. \n \n184 \n \n59. Hakizimana, A.; Scott, J.K. “Differentiability conditions\
    \ for stochastic hybrid systems with \napplication to the optimal design of microgrids,”\
    \ Journal of Optimization Theory and Applications, \nvol. 173, no. 2, pp. 658-682,\
    \ May 2017. https://doi.org/10.1007/s10957-017-1096-1. \n60. El-Hajj, A.M.; Niyato,\
    \ D.; Dawy, Z. “A DEC-MDP model for joint uplink/downlink resource \nmanagement\
    \ in OFDMA-based networks,” Physical Communication, vol. 17, pp. 107-117, Dec.\
    \ \n2015. https://doi.org/10.1016/j.phycom.2015.08.006. \n61. Wu, L.L.; Wu, Q.H.;\
    \ Jing, Z.X.; Wei, F.; Deng, S.; Zhou, X.X. “Optimal power and gas dispatch \n\
    of the integrated electricity and natural gas networks,” In Proceedings of IEEE\
    \ Innovative Smart \nGrid Technologies – Asia (ISGT-Asia), Melbourne, AUSTRALIA,\
    \ Nov. 28-Dec. 01, 2016. \n62. Tatsumi, K. “Modified perturbation-based chaotic\
    \ system using the quasi-Newton method with the \nsymmetric rank-one formula for\
    \ global optimization,” In Proceedings of IEEE International \nConference on Systems,\
    \ Man, and Cybernetics (SMC), Miyazaki, JAPAN, Oct. 07-10, 2018. \n63. Dhillon,\
    \ J.S.; Parti, S.C.; Kothari, D.P. “Fuzzy decision making in multiobjective long-term\
    \ \nscheduling of hydrothermal system,” International Journal of Electrical Power\
    \ & Energy Systems, \nvol. 23, no. 1, pp. 19-29, Jan. 2001. https://doi.org/10.1016/S0142-0615(00)00031-4.\
    \ \n64. Ozcan, E.; Misir, M.; Kheiri, A. “Group decision making hyper-heuristics\
    \ for function \noptimisation,” In Proceedings of 13th UK Workshop on Computational\
    \ Intelligence (UKCI), \nGuildford, ENGLAND, Sep. 09-11, 2013. \n65. Lenka, S.K.;\
    \ Mohapatra A.G. “Gradient descent with momentum based neural network pattern\
    \ \nclassification for the prediction of soil moisture content in precision agriculture,”\
    \ In Proceedings \nof IEEE International Symposium on Nanoelectronic and Information\
    \ Systems, Indore, INDIA, \nDec. 21-23, 2015. \n66. Georgiou, P.E.; Papamichail,\
    \ D.M. “Optimization model of an irrigation reservoir for water \nallocation and\
    \ crop planning under various weather conditions,” Irrigation Science, vol. 26,\
    \ no. 6, \npp. 487-504, Sept. 2008. https://doi.org/10.1007/s00271-008-0110-7.\
    \ \n67. Manimuthu, A.; Le, A.V.; Mohan, R.E.; Veerajagadeshwar, P.; Nhan, N.H.K.;\
    \ Cheng, K.P. \n“Energy consumption estimation model for complete coverage of\
    \ a Tetromino inspired \nreconfigurable \nsurface \ntiling \nrobot,” \nEnergies,\
    \ \nvol. \n12, \nno. \n12, \nJun. \n2019. \nhttps://doi.org/10.3390/en12122257.\
    \ \n68. Pornprakun, W.; Sungnul, S.; Kiataramkul, C.; Moore, E.J. “Determining\
    \ optimal policies for \nsugarcane harvesting in Thailand using bi-objective and\
    \ quasi-Newton optimization methods,” \nAdvances in Difference Equations, Jun.\
    \ 2019. https://doi.org/10.1186/s13662-019-2192-3. \n69. Goit, J.P.; Munters,\
    \ W.; Meyers, J. “Optimal coordinated control of power extraction in LES of a\
    \ \nwind \nfarm \nwith \nentrance \neffects,” \nEnergies, \nvol. \n9, \nno. \n\
    1, \nJan. \n2016. \nhttps://doi.org/10.3390/en9010029. \n \n185 \n \n70. Brown,\
    \ P.D.; Cochrane, T.A.; Krom, T.D. “Optimal on-farm irrigation scheduling with\
    \ a seasonal \nwater limit using simulated annealing,” Agricultural Water Management,\
    \ vol. 97, no. 6, pp. 892-\n900, Jun. 2010. https://doi.org/10.1016/j.agwat.2010.01.020.\
    \ \n71. Borge, P.J.; Fragoso, R.; Garcia-Gonzalo, J.; Borges, J.G.; Marques, S.;\
    \ Lucas, M.R. “Assessing \nimpacts of common agricultural policy changes on regional\
    \ land use patterns with a decision \nsupport system: An application in southern\
    \ Portugal,” Forest Policy and Economics, vol. 12, no. \n2, pp. 111-120, Feb.\
    \ 2010. https://doi.org/10.1016/j.forpol.2009.09.002. \n72. Kong, Q.Y.; Kuriyan,\
    \ K.; Shah, N.; Guo, M. “Development of a responsive optimisation \nframework\
    \ for decision-making in precision agriculture,” Computers & Chemical Engineering,\
    \ \nvol. 131, Dec. 2019. https://doi.org/10.1016/j.compchemeng.2019.106585. \n\
    73. Muleta, M.K.; Nicklow, J.W. “Decision support for watershed management using\
    \ evolutionary \nalgorithms,” Journal of Water Resources Planning and Management,\
    \ vol. 131, no. 1, pp. 35-44, \nFeb. 2005. https://doi.org/10.1061/(ASCE)0733-9496(2005)131:1(35).\
    \ \n74. Chaudhuri, S.; Goswami, S.; Das, D.; Middey, A. “Meta-heuristic ant colony\
    \ optimization \ntechnique to forecast the amount of summer monsoon rainfall:\
    \ Skill comparison with Markov chain \nmodel,” Theoretical and Applied Climatology,\
    \ vol. 116, no. 3-4, pp. 585-595, May 2014. \nhttps://doi.org/10.1007/s00704-013-0977-y.\
    \ \n75. Sung, W.T.; Chung, H.Y.; Chang, K.Y. “Agricultural monitoring system based\
    \ on ant colony \nalgorithm with centre data aggregation,” IET Communications,\
    \ vol. 8, no. 7, pp. 1132-1140, May \n2014. https://doi.org/10.1049/iet-com.2013.0995.\
    \ \n76. Fereidoon, M.; Koch, M. “SWAT-MODSIM-PSO optimization of multi-crop planning\
    \ in the \nKarkheh River Basin, Iran, under the impacts of climate change,” Science\
    \ of The Total \nEnvironment, vol. 630, pp. 502-516, Jul. 2018. https://doi.org/10.1016/j.scitotenv.2018.02.234.\
    \ \n77. Barak, S.; Yousefi, M.; Maghsoudlou, H.; Jahangiri, S. “Energy and GHG\
    \ emissions management \nof agricultural systems using multi objective particle\
    \ swarm optimization algorithm: A case study,” \nStochastic Environmental Research\
    \ and Risk Assessment, vol. 30, no. 4, pp. 1167-1187, Apr. 2016. \nhttps://doi.org/10.1007/s00477-015-1098-1.\
    \ \n78. Garcia-Vila, M.; Fereres, E. “Combining the simulation crop model AquaCrop\
    \ with an economic \nmodel for the optimization of irrigation management at farm\
    \ level,” European Journal of \nAgronomy, vol. 36, no. 1, pp. 21-31, Jan. 2012.\
    \ https://doi.org/10.1016/j.eja.2011.08.003. \n79. Navarro-Hellin, H.; Martinez-del-Rincon,\
    \ J.; Domingo-Miguel, R.; Soto-Valles, F.; Torres-\nSanchez, R. “A decision support\
    \ system for managing irrigation in agriculture,” Computers and \nElectronics\
    \ \nin \nAgriculture, \nvol. \n124, \npp. \n121-131, \nJun. \n2016. \nhttps://doi.org/10.1016/j.compag.2016.04.003.\
    \ \n \n186 \n \n80. Zhang, F.L.; Johnson, D.; Johnson, M.; Watkins, D.; Froese,\
    \ R.; Wang, J.J.; “Decision support \nsystem integrating GIS with simulation and\
    \ optimisation for a biofuel supply chain,” Renewable \nEnergy, vol. 85, pp. 740-748,\
    \ Jan. 2016. https://doi.org/10.1016/j.renene.2015.07.041. \n81. Groot. J.C.J.;\
    \ Oomen, G.J.M.; Rossing, W.A.H. “Multi-objective optimization and design of \n\
    farming \nsystems,” \nAgricultural \nSystems, \nvol. \n110, \npp. \n63-77, \n\
    Jul. \n2012. \nhttps://doi.org/10.1016/j.agsy.2012.03.012. \n82. Bravo, M.; Gonzalez,\
    \ I. “Applying stochastic goal programming: A case study on water use \nplanning,”\
    \ European Journal of Operational Research, vol. 196, no. 3, pp. 1123-1129, Aug.\
    \ 2009. \nhttps://doi.org/10.1016/j.ejor.2008.04.034. \n83. Memmah, M.M.; Lescourret,\
    \ F.; Yao, X.; Lavigne, C. “Metaheuristics for agricultural land use \noptimization.\
    \ A review,” Agronomy for Sustainable Development, vol. 35, no. 3, pp. 975-998,\
    \ Jul. \n2015. https://doi.org/10.1007/s13593-015-0303-4. \n84. Hu, J.; Mehrotra,\
    \ S. “Robust and stochastically weighted multiobjective optimization models and\
    \ \nreformulations,” Operations Research, vol. 60, no. 4, pp. 936-953, Aug. 2012.\
    \ \nhttps://doi.org/10.1287/opre.1120.1071. \n85. Galan-Martin, A.; Vaskan, P.;\
    \ Anton, A.; Esteller, L.J.; Guillen-Gosalbez, G. “Multi-objective \noptimization\
    \ of rainfed and irrigated agricultural areas considering production and environmental\
    \ \ncriteria: A case study of wheat production in Spain,” Journal of Cleaner Production,\
    \ vol. 140, pp. \n816-830, Jan. 2017. https://doi.org/10.1016/j.jclepro.2016.06.099.\
    \ \n86. Zhang, X.D.; Huang, G.H.; Nie, X.H. “Optimal decision schemes for agricultural\
    \ water quality \nmanagement planning with imprecise objective,” Agricultural\
    \ Water Management, vol. 96, no. 12, \npp. 1723-1731, Dec. 2009. https://doi.org/10.1016/j.agwat.2009.07.011.\
    \ \n87. Das, B.; Singh, A.; Panda, S.N. “Optimal land and water resources allocation\
    \ policies for \nsustainable irrigated agriculture,” Land Use Policy, vol. 42,\
    \ pp. 527-537, Jan. 2015. \nhttps://doi.org/10.1016/j.landusepol.2014.09.012.\
    \ \n88. Schutze, N.; Schmitz, G.H. “OCCASION: New planning tool for optimal climate\
    \ change adaption \nstrategies in irrigation,” Journal of Irrigation and Drainage\
    \ Engineering, vol. 136, no. 12, pp. 836-\n846, Dec. 2010. https://doi.org/10.1061/(ASCE)IR.1943-4774.0000266.\
    \ \n89. Meyer, B.C.; Lescot, J.M.; Laplana, R. “Comparison of two spatial optimization\
    \ techniques: A \nframework to solve multiobjective land use distribution problems,”\
    \ Environmental Management, \nvol. 43, no. 2, pp. 264-281, Feb. 2009. https://doi.org/10.1007/s00267-008-9225-0.\
    \ \n90. Aiello, G.; Giovino, I.; Vallone, M.; Catania, P.; Argento, A. “A decision\
    \ support system based on \nmultisensor data fusion for sustainable greenhouse\
    \ management,” Journal of Cleaner Production, \nvol. 173, pp. 4057-4065, Jan.\
    \ 2018. https://doi.org/10.1016/j.jclepro.2017.02.197. \n \n187 \n \n91. Bazzani,\
    \ G.M. “A decision support for an integrated multi-scale analysis of irrigation:\
    \ DSIRR,” \nJournal of Environmental Management, vol. 77, no. 4, pp. 301-314,\
    \ Dec. 2005. \nhttps://doi.org/10.1016/j.jenvman.2005.09.001. \n92. Nouiri, I.;\
    \ Yitayew, M.; Massmann, J. Tarhouni, J. “Multi-objective optimization tool for\
    \ \nintegrated groundwater management,” Water Resources Management, vol. 29, no.\
    \ 14, pp. 5353-\n5375, Nov. 2015. https://doi.org/10.1007/s11269-015-1122-8. \n\
    93. Garcia, I.F.; Montesinos, P.; Poyato, E.C.; Diaz, J.A.R. “Energy cost optimization\
    \ in pressurized \nirrigation \nnetworks,” \nIrrigation \nScience, \nvol. \n34,\
    \ \nno. \n1, \npp. \n1-13, \nJan. \n2016. \nhttps://doi.org/10.1007/s00271-015-0475-3.\
    \ \n94. Osaki, M.; Baatalha, M.O. “Optimization model of agricultural production\
    \ system in grain farms \nunder risk, in Sorriso, Brazil,” Agricultural Systems,\
    \ vol. 127, pp. 178-188, May 2014. \nhttps://doi.org/10.1016/j.agsy.2014.02.002.\
    \ \n95. Singh, A.; Panda, S.N.; Saxena, C.K.; Verma, C.L.; Uzokwe, V.N.E.; Krause,\
    \ P.; Gupta, S.K. \n“Optimization modeling for conjunctive use planning of surface\
    \ water and groundwater for \nirrigation,” Journal of Irrigation and Drainage\
    \ Engineering, vol. 142, no. 3, Mar. 2016. \nhttps://doi.org/10.1061/(ASCE)IR.1943-4774.0000977.\
    \ \n96. Verity, J.W. “Automated reasoning – Introduction and applications,” Datamation,\
    \ vol. 30, no. 18, \npp. 163, Jan. 1984. \n97. Watson, I.; Marir, F. “Case-based\
    \ reasoning – A review,” Knowledge Engineering Review, vol. 9, \nno. 4, pp. 327-354,\
    \ Dec. 1994. https://doi.org/10.1017/S0269888900007098. \n98. Hadzistevic, M.;\
    \ Matin, I.; Hodolic, J.; Vukelic, D.; Vukmirovic, S.; Godec, D.; Nedic, B. “Rule\
    \ \nbased reasoning in the knowledge-based mould design system,” Tehnicki Vjesnik-Technical\
    \ \nGazette, vol. 21, no. 5, pp. 1143-1148, Oct. 2014. \n99. Ruspini, E.H. “Conceptual\
    \ and methodological issues in evidential reasoning,” In Proceedings of \nConference\
    \ on Signal Processing, Sensor Fusion, and Target Recognition XVI, Orlando, FL,\
    \ USA, \nApr. 09-11, 2007. \n100. Rong, L.B.; Li, D.L. “DCDDS: A dairy cow disease\
    \ diagnosis system for dairy farm in China,” In \nProceedings of 4th International\
    \ Symposium on Intelligent Information Technology in Agriculture, \nBeijing, PEOPLES\
    \ R CHINA, Oct. 26-29, 2007. \n101. Car, N.J.; Moore, G.A. “Bridging the gap between\
    \ modelling advice and irrigator solutions through \nempirical reasoning techniques,”\
    \ In Proceedings of MSSANZ 19th Biennial Congress on Modelling \nand Simulation\
    \ (MODSIM), Perth, AUSTRALIA, Dec. 12-16, 2011. \n102. Padma, T.; Mir, S.A.; Shantharajah,\
    \ S.P. “Intelligent decision support system for an integrated pest \nmanagement\
    \ in apple orchard,” Studies in Computational Intelligence, vol. 705, pp. 225-245,\
    \ 2017. \nhttps://doi.org/10.1007/978-3-319-53153-3_12. \n \n188 \n \n103. Zhu,\
    \ C.L.; Yin, G.F. “A prediction method of crop diseases and insect pests based\
    \ on ontological \ncase reasoning,” Revista de La Facultad de Agronomia de La\
    \ Universidad del Zulia, vol. 36, no. \n6, pp. 1720-1731, Sept. 2019. \n104. Musto,\
    \ C.; Semeraro, G.; Lops, P.; de Gemmis, M.; Lekkas, G. “Personalized finance\
    \ advisory \nthrough case-based recommender systems and diversification strategies,”\
    \ Decision Support \nSystems, vol. 77, pp. 100-111, Sept. 2015. https://doi.org/10.1016/j.dss.2015.06.001.\
    \ \n105. Park, C.S.; Han, I. “A case-based reasoning with the feature weights\
    \ derived by analytic hierarchy \nprocess for bankruptcy prediction,” Expert Systems\
    \ with Applications, vol. 23, no. 3, pp. 255-264, \nOct. 2002. https://doi.org/10.1016/S0957-4174(02)00045-3.\
    \ \n106. Begum, S.; Ahmed, M.U.; Funk, P.; Xiong, N.; Folke, M. “Case-based reasoning\
    \ systems in the \nhealth sciences: A survey of recent trends and developments,”\
    \ IEEE Transactions on Systems Man \nand Cybernetics Part C – Applications and\
    \ Reviews, vol. 41, no. 4, pp. 421-434, Jul. 2011. \nhttps://doi.org/10.1109/TSMCC.2010.2071862.\
    \ \n107. Fan, C.Y.; Chang, P.C.; Lin, J.J.; Hsieh, J.C. “A hybrid model combining\
    \ case-based reasoning \nand fuzzy decision tree for medical data classification,”\
    \ Applied Soft Computing, vol. 11, no. 1, pp. \n632-644, Jan. 2011. https://doi.org/10.1016/j.asoc.2009.12.023.\
    \ \n108. Amailef, K.; Lu, J. “Ontology-supported case-based reasoning approach\
    \ for intelligent m-\nGovernment emergency response services,” Decision Support\
    \ Systems, vol. 55, no. 1, pp. 79-97, \nApr. 2013. https://doi.org/10.1016/j.dss.2012.12.034.\
    \ \n109. Fan, Z.P.; Li, Y.H.; Wang, X.H.; Liu, Y. “Hybrid similarity measure for\
    \ case retrieval in CBR and \nits application to emergency response towards gas\
    \ explosion,” Expert Systems with Applications, \nvol. 41, no. 5, pp. 2526-2534,\
    \ Apr. 2014. https://doi.org/10.1016/j.eswa.2013.09.051. \n110. Shokouhi, S.V.;\
    \ Skalle, P.; Aamodt, A. “An overview of case-based reasoning applications in\
    \ \ndrilling engineering,” Artificial Intelligence Review, vol. 41, no. 3, pp.\
    \ 317-329, Mar. 2014. \nhttps://doi.org/10.1007/s10462-011-9310-2. \n111. Lao,\
    \ S.I.; Choy, K.L.; Ho, G.T.S.; Yam, R.C.M.; Tsim, Y.C.; Poon, T.C. “Achieving\
    \ quality \nassurance functionality in the food industry using a hybrid case-based\
    \ reasoning and fuzzy logic \napproach,” Expert Systems with Applications, vol.\
    \ 39, no. 5, pp. 5251-5261, Arp. 2012. \nhttps://doi.org/10.1016/j.eswa.2011.11.014.\
    \ \n112. Balleda, K.; Satyanvesh, D.; Sampath, N.V.S.S.P.; Varma, K.T.N.; Baruah,\
    \ P.K. “Agpest: An \nefficient rule-based expert system to prevent pest diseases\
    \ of rice & wheat crops,” In Proceedings \nof 8th IEEE International Conference\
    \ on Intelligent Systems and Control, Coimbatore, INDIA, Jan. \n10-11, 2014. \n\
    113. Naseem, J.; Burney, S.M.A.; Mehmood, N. “An efficient rule based decision\
    \ support system using \nsemantic web technology,” International Journal of Advanced\
    \ Computer Science and \nApplications, vol. 9, no. 12, pp. 346-350, Dec. 2018.\
    \ \n \n189 \n \n114. Han, Q. “Development and application of remote intelligent\
    \ diagnosis mobile phone system for \nanimal diseases,” Revista Cientifica-Facultad\
    \ de Ciencias Veterinarias, vol. 29, no. 2, pp. 393-\n401, Apr. 2019. \n115. Katsiri,\
    \ E.; Makropoulos, C. “An ontology framework for decentralized water management\
    \ and \nanalytics using wireless sensor networks,” In Proceedings of 14th International\
    \ Conference on \nEnvironmental Science and Technology (CEST), Rhodes, GREECE,\
    \ Sept. 03-05, 2015. \n116. Lee, G.H. “Rule-based and case-based reasoning approach\
    \ of internal audit of bank,” Knowledge-\nBased \nSystems, \nvol. \n21, \nno.\
    \ \n2, \npp. \n140-147, \nMar. \n2008. \nhttps://doi.org/10.1016/j.knosys.2007.04.001.\
    \ \n117. Zeydan, M.; Kayserili, S. “A rule-based decision support approach for\
    \ site selection of automated \nteller machines (ATMs),” Intelligent decision\
    \ technologies–Netherlands, vol. 13, no. 2, pp. 161-\n175, May 2019. https://doi.org/10.3233/IDT-180084.\
    \ \n118. Yuan, B.C.; Herbert, J. “Context-aware hybrid reasoning framework for\
    \ pervasive healthcare,” \nPersonal and Ubiquitous Computing, vol. 18, no. 4,\
    \ pp. 865-881, Apr. 2014. \nhttps://doi.org/10.1007/s00779-013-0696-5. \n119.\
    \ Yin, Z.M.; Min, L.T.; Lu, X.D.; Duan, H.L. “A clinical decision support system\
    \ for primary \nheadache disorder based on hybrid intelligent reasoning,” in Proceedings\
    \ of 7th International \nConference on Biomedical Engineering and Informatics\
    \ (BMEI), Dalian, PEOPLES R CHINA, \nOct. 14-16, 2014. \n120. Soufi, M.D.; Samad-Soltani,\
    \ T.; Vandati, S.S.; Rezaei-Hachesu, P. “Decision support system for \ntriage\
    \ management: A hybrid approach using rule-based reasoning and fuzzy logic,” International\
    \ \nJournal \nof \nMedical \nInformatics, \nvol. \n114, \npp. \n35-44, \nJun.\
    \ \n2018. \nhttps://doi.org/10.1016/j.ijmedinf.2018.03.008. \n121. Shan, S.Q.;\
    \ Shi, J.H.; Ren, J.; Hu, Z.J. “Rule-based study on the fault diagnosis algorithm\
    \ of \nemergency response process,” In Proceedings of 12th International Conference\
    \ on Industrial \nManagement (ICIM2014), Chengdu, PEOPLES R CHINA, Sept. 03-05,\
    \ 2014. \n122. Azadeh, A.; Ebrahimipour, V. “A fuzzy inference system for pump\
    \ failure diagnosis to improve \nmaintenance process: The case of a petrochemical\
    \ industry,” Expert Systems with Applications, \nvol. 37, no. 1, pp. 627-639,\
    \ Jan. 2010. https://doi.org/10.1016/j.eswa.2009.06.018. \n123. Iqbal, A.; Zhang,\
    \ H.C.; Kong, L.L.; Hussain, G. “A rule-based system for trade-off among energy\
    \ \nconsumption, tool life, and productivity in machining process,” Journal of\
    \ Intelligent \nManufacturing, vol. 26, no. 6, pp. 1217-1232, Dec. 2015. https://doi.org/\
    \ 10.1007/s10845-013-\n0851-x. \n124. Sun, W.X.; Liang, S.L.; Xu, G.; Fang, H.L.;\
    \ Dickinson, R. “Mapping plant functional types from \nMODIS data using multisource\
    \ evidential reasoning,” Remote Sensing of Environment, vol. 112, \nno. 3, pp.\
    \ 1010-1024, Mar. 2008. https://doi.org/10.1016/j.rse.2007.07.022. \n \n190 \n\
    \ \n125. Cohen, Y.; Shoshany, M. “Analysis of convergent evidence in an evidential\
    \ reasoning knowledge-\nbased classification,” Remote Sensing of Environment,\
    \ vol. 96, no. 3-4, pp. 518-528, Jun. 2005. \nhttps://doi.org/10.1016/j.rse.2005.04.009.\
    \ \n126. Jiang, D.; Wu, B.; Yang, X.F.; Van Gelder, P.H.A.J.M. “A fuzzy evidential\
    \ reasoning based \napproach for submarine power cable routing selection for offshore\
    \ wind farms,” Ocean \nEngineering, vol. 193, Dec. 2019. https://doi.org/10.1016/j.oceaneng.2019.106616.\
    \ \n127. Sanz, C. “DER (Dynamic evidential reasoning), applied to the classification\
    \ of hyperspectral \nimages,” In Proceedings of IEEE International Geoscience\
    \ and Remote Sensing Symposium, \nSydney, AUSTRALIA, Jul. 09-13, 2001. \n128.\
    \ Chin, K.S.; Wang, Y.M.; Yang, J.B.; Poon, K.K.G. “An evidential reasoning based\
    \ approach for \nquality function deployment under uncertainty,” Expert Systems\
    \ with Applications, vol. 36, no. 3, \npp. 5684-5694, Apr. 2009. https://doi.org/10.1016/j.eswa.2008.06.104.\
    \ \n129. Eshghi, A.; Kargari, M. “Introducing a new method for the fusion of fraud\
    \ evidence in banking \ntransactions with regards to uncertainty,” Expert Systems\
    \ with Applications, vol. 121, pp. 382-392, \nMay 2019. https://doi.org/10.1016/j.eswa.2018.11.039.\
    \ \n130. Kong, G.L.; Xu, D.L.; Yang, J.B.; Ma, X.M. “Combined medical quality\
    \ assessment using the \nevidential reasoning approach,” Expert Systems with Applications,\
    \ vol. 42, no. 13, pp. 5522-5530, \nAug. 2015. https://doi.org/10.1016/j.eswa.2015.03.009.\
    \ \n131. Kong, G.L.; Jiang, L.L.; Yin, X.F.; Wang, T.B.; Xu, D.L.; Yang, J.B.;\
    \ Hu, Y.H. “Combining \nprincipal component analysis and the evidential reasoning\
    \ approach for healthcare quality \nassessment,” Annals of Operations Research,\
    \ vol. 271, no. 2, pp. 679-699, Dec. 2018. \nhttps://doi.org/10.1007/s10479-018-2789-z.\
    \ \n132. Wang, H.Y.; Ren, J.; Yang, J.Q.; Wang, J. “Evaluating the effectiveness\
    \ of ERS for vessel oil spills \nusing fuzzy evidential reasoning,” Ocean Systems\
    \ Engineering – An International Journal, vol. 5, \nno. 3, pp. 161-179, Sept.\
    \ 2015. https://doi.org/10.12989/ose.2015.5.3.161. \n133. Wu, B.; Zong, L.K.;\
    \ Yan, X.P.; Soares, C.G. “Incorporating evidential reasoning and TOPSIS into\
    \ \ngroup decision-making under certainty for handling ship without command,”\
    \ Ocean Engineering, \nvol. 164, pp. 590-603, Sept. 2018. https://doi.org/10.1016/j.oceaneng.2018.06.054.\
    \ \n134. Liu, H.C.; Lin, Q.L.; Ren, M.L. “Fault diagnosis and cause analysis using\
    \ fuzzy evidential \nreasoning approach and dynamic adaptive fuzzy Petri nets,”\
    \ Computers & Industrial Engineering, \nvol. 66, no. 4, pp. 899-908, Dec. 2013.\
    \ https://doi.org/10.1016/j.cie.2013.09.004. \n135. Zhou, Z.X.; Dou, Y.J.; Sun,\
    \ J.B.; Jiang, J.; Tan, Y.J. “Sustainable production line evaluation based \n\
    on \nevidential \nreasoning,” \nSustainability, \nvol. \n9, \nno. \n10, \nOct.\
    \ \n2017. \nhttps://doi.org/10.3390/su9101811. \n136. Kastner, J.K.; Hong, S.J.\
    \ “A review of expert systems,” European Journal of Operational \nResearch, vol.\
    \ 18, no. 3, pp. 285-292, Dec. 1984. https://doi.org/10.1016/0377-2217(84)90150-4.\
    \ \n \n191 \n \n137. Song, K.H.; De Jonckheere, J.; Zeng, X.Y.; Koehl, L.; Yuan,\
    \ X.J.; Zhao, X. “Development of a \ndata-based interactive medical expert system\
    \ for supporting pregnancy consultations: General \narchitecture and methodology,”\
    \ In Proceedings of 14th International-Federation-of-Automatic-\nControl (IFAC)\
    \ Symposium on Analysis, Design, and Evaluation of Human Machine Systems \n(HMS),\
    \ Tallinn, ESTONIA, Sept. 16-19, 2019. \n138. Ford, F.N. “Decision support systems\
    \ and expert systems – A comparison,” Information & \nManagement, vol. 8, no.\
    \ 1, pp. 21-26, Jan. 1985. \n139. Connell, N.A.D.; Powell, P.L. “A comparison\
    \ of potential applications of expert systems and \ndecision support systems,”\
    \ Journal of The Operational Research Society, vol. 41, no. 5, pp. 431-\n439,\
    \ May 1990. \n140. Marling, C.; Montani, S.; Bichindaritz, I. “Synergistic case-based\
    \ reasoning in medical domains,” \nExpert \nSystems \nwith \nApplications, \n\
    vol. \n41, \nno. \n2, \npp. \n249-259, \nFeb. \n2014. \nhttps://doi.org/10.1016/j.eswa.2013.05.063.\
    \ \n141. Aamodt, A.; Plaza, E. “Case-based reasoning – Foundational issues, methodological\
    \ variations, \nand system approaches,” AI Communications, vol. 7, no. 1, pp.\
    \ 39-59, Mar. 1994. \n142. Cheng, Z.H.; Chen, L.; Jia, X.S.; Zeng, H.Y. “Case\
    \ representation and retrieval in the intelligent \nRCM analysis system,” In Proceedings\
    \ of Conference on Electronic Commerce, Web Application \nand Communication, Wuhan,\
    \ PEOPLE R CHINA, Mar. 17-18, 2012. \n143. Bergmann, R.; Kolodner, J.; Plaza,\
    \ E. “Representation in case-based reasoning,” Knowledge \nEngineering \nReview,\
    \ \nvol. \n20, \nno. \n3, \npp. \n209-213, \nSept. \n2005. \nhttps://doi.org/10.1017/S0269888906000555.\
    \ \n144. Chen, J.G.; Chen, Y.Z. “Research on operation standard expert system\
    \ based on ontology and \nCBR,” In Proceedings of 18th International Conference\
    \ on Industrial Engineering and Engineering \nManagement, ChangChun, PEOPLES R\
    \ CHINA, Sept. 03-05, 2011. \n145. Abidi, S.S.R.; Manickam, S. “Leveraging XML-based\
    \ electronic medical records to extract \nexperiential clinical knowledge – An\
    \ automated approach to generate cases for medical case-based \nreasoning systems,”\
    \ International Journal of Medical Informatics, vol. 68, no. 1-3, pp. 187-203,\
    \ \nDec. 2002. https://doi.org/10.1016/S1386-5056(02)00076-X. \n146. Dufour-Lussier,\
    \ V.; Le Ber, F.; Lieber, J.; Nauer, E. “Automatic case acquisition from texts\
    \ for \nprocess-oriented case-based reasoning,” Information Systems, vol. 40,\
    \ pp. 153-167, Mar. 2014. \nhttps://doi.org/10.1016/j.is.2012.11.014. \n147. Asadi,\
    \ N.; Lin, J. “Document vector representations for feature extraction in multi-stage\
    \ document \nranking,” \nInformation \nRetrieval, \nvol. \n16, \nno. \n6, \npp.\
    \ \n747-768, \nDec. \n2013. \nhttps://doi.org/10.1007/s10791-012-9217-9. \n148.\
    \ Bringer, J.; Despiegel, V.; Favre, M. “Adding localization information in a\
    \ fingerprint binary \nfeature vector representation,” In Proceedings of Conference\
    \ on Sensing Technologies for Global \n \n192 \n \nHealth, Military Medicine,\
    \ Disaster Response, and Environmental Monitoring and Biometric \nTechnology for\
    \ Human Identification VIII, Orlando, FL, USA, Apr. 25-27, 2011. \n149. Svanberg,\
    \ M. “Using feature vector representations to identify similar projects in App\
    \ Inventor,” \nIn Proceedings of IEEE Blocks and Beyond Workshop (B&B), Raleigh,\
    \ NC, USA, Oct. 09-10, \n2017. \n150. Yagi, M.; Shibata, T.; Tanikawa, C.; Takada,\
    \ K. “A robust medical image recognition system \nemploying edge-based feature\
    \ vector representation,” In Proceedings of 13th Scandinavian \nConference on\
    \ Image Analysis (SCIA 2003), Halmstad, SWEDEN, Jun. 29-Jul. 02, 2003. \n151.\
    \ Dileep, K.V.S.; Chakraborti, S. “Eager to be lazy: Towards a complexity-guided\
    \ textual case-based \nreasoning system,” In Proceedings of 24th International\
    \ Conference on Case-Based reasoning \nResearch and Development (ICCBR), Atlanta,\
    \ GA, USA, Oct. 31-Nov. 02, 2016. \n152. Weber, R.O.; Ashley, K.D.; Bruninghaus,\
    \ S. “Textual case-based reasoning,” Knowledge \nEngineering \nReview, \nvol.\
    \ \n20, \nno. \n3, \npp. \n255-260, \nSept. \n2005. \nhttps://doi.org/10.1017/S0269888906000713.\
    \ \n153. Bruninghaus, S.; Ashley, K.D. “The role of information extraction for\
    \ textual CBR,” In \nProceedings of 4th International Conference on Case-Based\
    \ Reasoning (ICCBR 2001), Vancouver, \nCANADA, Jul. 30-Aug. 02, 2001. \n154. Ozturk,\
    \ P. Prasath, R. “Recognition of higher-order relations among features in textual\
    \ cases using \nrandom indexing,” In Proceedings of 18th International Conference\
    \ on Case-Based Reasoning, \nAlessandria, ITALY, Jul. 19-22, 2010. \n155. Chan,\
    \ S.W.K. “Extraction of salient textual patterns: Synergy between lexical cohesion\
    \ and \ncontextual coherence,” IEEE Transactions on Systems Man and Cybernetics\
    \ Part A – Systems and \nHumans, vol. 34, no. 2, pp. 205-218, Mar. 2004. https://doi.org/10.1109/TSMCA.2003.820570.\
    \ \n156. Cardenosa, J.; Gallardo, C.; Iraola, L. “UNL as a text content representation\
    \ language for \ninformation extraction,” In Proceedings of 7th International\
    \ Conference on Flexible Query \nAnswering Systems, Milan, ITALY, Jun. 07-10,\
    \ 2006. \n157. Angelova, G. “Use of domain knowledge in the automatic extraction\
    \ of structured representations \nfrom patient-related texts,” In Proceedings\
    \ of 18th International Conference on Conceptual \nStructures, Kuching, MALAYSIA,\
    \ Jul. 26-30, 2010. \n158. Cohen, W.W. “WHIRL: A word-based information representation\
    \ language,” Artificial \nIntelligence, vol. 119, no. 1-2, pp. 163-196, Apr. 2000.\
    \ https://doi.org/10.1016/S0004-\n3702(99)00102-2. \n159. Chan, S.W.K. “Beyond\
    \ keyword and cue-phrase matching: A sentence-based abstraction technique \nfor\
    \ information extraction,” Decision Support Systems, vol. 42, no. 2, pp. 759-777,\
    \ Nov. 2006. \nhttps://doi.org/10.1016/j.dss.2004.11.017. \n \n193 \n \n160. Buranasing,\
    \ W.; Phoomvuthisarn, S. “Information extraction for cultural heritage knowledge\
    \ \nacquisition using word vector representation,” In Proceedings of 12th International\
    \ Conference on \nComplex, Intelligent, and Software Intensive Systems (CISIS),\
    \ Matsue, JAPAN, Jul. 04-06, 2018. \n161. Ye, Q.; Liu, J.; Yu, T. “The prediction\
    \ model of case-based reasoning about project evaluation of \nXiamen city,” In\
    \ Proceedings of 3rd International Conference on Civil Engineering and \nTransportation\
    \ (ICCET 2013), Kunming, PEOPLES R CHINA, Dec. 14-15, 2013. \n162. Zeltmate, I.;\
    \ Grundspenkis, J. “An extension of frame-based knowledge representation schema,”\
    \ \nIn Proceedings of International Multi-Conference on Complexity, Informatics\
    \ and Cybernetics, \nOrlando, FL, USA, Apr. 06-09, 2010. \n163. Yao, L.; Chen,\
    \ Z.C.; Yang, J.J. “Research on risk assessment of ship repair based on case-based\
    \ \nreasoning,” In Proceedings of 8th International Conference on Intelligent\
    \ Systems and Knowledge \nEngineering (ISKE), Shenzhen, PEOPLES R CHINA, Nov.\
    \ 20-23, 2013. \n164. Mohamed, H.; Sulaiman, S.; Sabudin, M. “A hybrid of rule\
    \ and frame based approach in solving \nHajj complex problems,” In Proceedings\
    \ of International Conference of Soft Computing and \nPattern Recognition, Malacca,\
    \ MALAYSIA, Dec. 04-07, 2009. \n165. Su, Y.K.; Yang, S.J.; Liu, K.N.; Hua, K.C.;\
    \ Yao, Q. “Developing a case-based reasoning model \nfor safety accident pre-control\
    \ and decision making in the construction industry,” International \nJournal of\
    \ Environmental Research and Public Health, vol. 16, no. 9, May 2019. \nhttps://doi.org/10.3390/ijerph16091511.\
    \ \n166. Sorenson, D.; Grissom, C.K.; Carpenter, L.; Austin, A.; Sward, K.; Napoli,\
    \ L.; Warner, H.R.; \nMorris, A.H. “A frame-based representation for a bedside\
    \ ventilator weaning protocol,” Journal \nof \nBiomedical \nInformatics, \nvol.\
    \ \n41, \nno. \n3, \npp. \n461-468, \nJun. \n2008. \nhttps://doi.org/10.1016/j.jbi.2008.02.002.\
    \ \n167. Donini, F.M.; Lenzerini, M.; Nardi, D.; Nutt, W.; Schaerf, A. “An epistemic\
    \ operator for \ndescription logics,” Artificial Intelligence, vol. 100, no. 1-2,\
    \ pp. 225-274, Apr. 1998. \nhttps://doi.org/10.1016/S0004-3702(98)00009-5. \n\
    168. Cornet, R.; Abu-Hanna, A. “Using description logics for managing medical\
    \ terminologies,” In \nProceedings of 9th Conference on Artificial Intelligence\
    \ in Medicine in Europe, Protaras, CYPRUS, \nOct. 18-22, 2003. \n169. Quan, Q.;\
    \ Rui, Z.; Hong-Yi, C. “Object-oriented case representation and its application\
    \ in IDS,” \nIn Proceedings of 8th IEEE/ACIS International Conference on Computer\
    \ and Information Science, \nShanghai, PEOPLES R CHINA, Jun. 01-03, 2009. \n170.\
    \ Object-oriented \nrepresentation. \nAvailable: \nhttps://web.stanford.edu/class/cs227/Lectures/lec02.pdf.\
    \ \n \n194 \n \n171. Khan, A.A.; Chaudhry, I.A. “Object oriented case representation\
    \ for CBR application in structural \nanalysis,” Applied Artificial Intelligence,\
    \ vol. 29, no. 4, pp. 335-352, Apr. 2015. \nhttps://doi.org/10.1080/08839514.2015.1016390.\
    \ \n172. Marefat, M.; Britanik, J. “Case-based process planning using an object-oriented\
    \ model \nrepresentation,” Robotics and Computer-Integrated Manufacturing, vol.\
    \ 13, no. 3, pp. 229-251, \nSept. 1997. https://doi.org/10.1016/S0736-5845(97)00005-7.\
    \ \n173. Chen, C.W.; Lee, J.K. “Case study: An infrastructure for C/ATLAS environments\
    \ with object-\noriented design and XML representation,” Journal of Systems and\
    \ Software, vol. 71, no. 1-2, pp. \n83-95, Apr. 2004. https://doi.org/10.1016/S0164-1212(02)00151-6.\
    \ \n174. Chen, G.; Chen, J.; Zhao, Z.; Ruan, X.Y. “An object-oriented hierarchical\
    \ case representation of \nautomotive panels in a computer-aided process planning\
    \ system,” International Journal of \nAdvanced Manufacturing Technology, vol.\
    \ 26, no. 11-12, pp. 1323-1330, Nov. 2005. \nhttps://doi.org/10.1007/s00170-004-2105-8.\
    \ \n175. Dubitzky, W.; Bell, D.; Hughes, J. “A generic, object-oriented case-knowledge\
    \ representation \nscheme, and its integration into a wider information management\
    \ scenario,” Expert Systems, vol. \n13, no. 3, pp. 219-233, Aug. 1996. https://doi.org/10.1111/j.1468-0394.1996.tb00121.x.\
    \ \n176. Yeresime, S.; Pati, J.; Rath, S.K. “Review of software quality metrics\
    \ for object-oriented \nmethodology,” In Proceedings of 1st International Conference\
    \ on Internet Computing and \nInformation Communications (ICICIC), Chennai, INDIA,\
    \ Feb. 12-14, 2012. \n177. Mackie, R.I. “Object oriented programming for structural\
    \ mechanics: A review,” In Proceedings \nof 8th International Conference on Civil\
    \ and Structural Engineering Computing, Eisenstadt, \nAUSTRIA, Sept. 19-21, 2001.\
    \ \n178.  Avdeenko, T.V.; Makarova, E.S. “Knowledge representation model based\
    \ on case-based \nreasoning and the domain ontology: Application to the IT consultation,”\
    \ In Proceedings of 16th \nIFAC Symposium on Information Control Problems in Manufacturing\
    \ (INCOM), Bergamo, \nITALY, Jun. 11-13, 2018. \n179. Ding, Y.; Foo, S. “Ontology\
    \ research and development. Part I – A review of ontology generation,” \nJournal\
    \ \nof \nInformation \nScience, \nvol. \n28, \nno. \n2, \npp. \n123-136, \nApr.\
    \ \n2002. \nhttps://doi.org/10.1177/0165551024234020. \n180. Juarez, J.M.; Salort,\
    \ J.; Palma, J.; Marin, R. “Case representation ontology for case retrieval \n\
    systems in medical domains,” In Proceedings of IASTED International Conference\
    \ on Artificial \nIntelligence and Applications, Innsbruck, AUSTRIA, Feb. 12-14,\
    \ 2007. \n181. Castro, J.L.; Sanchez, J.M.; Zurita, J.M. “Simplifying case retrieval\
    \ in case-based reasoning using \nontologies,” In Proceedings of 9th IASTED International\
    \ Conference on Artificial Intelligence and \nSoft Computing, Benidorm, SPAIN,\
    \ Sept. 12-14, 2005. \n \n195 \n \n182. Xiong, C.C.; Wang, L.T.; Tao, X.; Deng,\
    \ Y. “E-government decision support system based on \ncase-based reasoning and\
    \ ontology,” In Proceedings of 12th International Conference on Fuzzy \nSystems\
    \ and Knowledge Discovery (FSKD), Zhangjiajie, PEOPLES R CHINA, Aug. 15-17, 2015.\
    \ \n183. El-Sappagh, S.; Elmogy, M. “A fuzzy ontology modeling for case base knowledge\
    \ in diabetes \nmellitus domain,” Engineering Science and Technology – An International\
    \ Journal – JESTECH, \nvol. 20, no. 3, pp. 1025-1040, Jun. 2017. https://doi.org/10.1016/j.jestch.2017.03.009.\
    \ \n184. Zhukova, I.; Kultsova, M.; Navrotsky, M.; Dvoryankin, A. “Intelligent\
    \ support for decision making \nin human resource management in using case-based\
    \ reasoning and ontology,” In Proceedings of \n11th Joint Conference on Knowledge-Based\
    \ Software Engineering (JCKBSE), Volgograd, \nRUSSIA, Sept. 17-20, 2014. \n185.\
    \ Liao, T.W.; Zhang, Z.M.; Mount, C.R. “Similarity measures for retrieval in case-based\
    \ reasoning \nsystems,” Applied Artificial Intelligence, vol. 12, no. 4, pp. 267-288,\
    \ Jun. 1998. \nhttps://doi.org/10.1080/088395198117730. \n186. Rachkovskij, D.A.\
    \ “Binary vectors for fast distance and similarity estimation,” Cybernetics and\
    \ \nSystems Analysis, vol. 53, no. 1, pp. 138-156, Jan. 2017. https://doi.org/10.1007/s10559-017-9914-\n\
    x. \n187. Elmore, K.L.; Richman, M.B. “Euclidean distance as a similarity metric\
    \ for principal component \nanalysis,” Monthly Weather Review, vol. 129, no. 3,\
    \ pp. 540-549, Mar. 2001. \nhttps://doi.org/10.1175/1520-0493(2001)129<0540:EDAASM>2.0.CO;2.\
    \ \n188. Jiang, W.; Wang, M.J.; Deng, X.Y.; Gou, L.F. “Fault diagnosis based on\
    \ TOPSIS method with \nManhattan distance,” Advances in Mechanical Engineering,\
    \ vol. 11, no. 3, Mar. 2019. \nhttps://doi.org/10.1177/1687814019833279. \n189.\
    \ Esmaeili-Najafabadi, H.; Ataei, M.; Sabahi, M.F. “Designing sequence with minimum\
    \ PSL using \nChebyshev distance and its application for chaotic MIMO radar waveform\
    \ design,” IEEE \nTransactions \non \nSignal \nProcessing, \nvol. \n65, \nno.\
    \ \n3, \npp. \n690-704, \nFeb. \n2017. \nhttps://doi.org/10.1109/TSP.2016.2621728.\
    \ \n190. Mustafa, A.A.Y. “A modified Hamming distance measure for quick detection\
    \ of dissimilar binary \nimages,” In Proceedings of International Conference on\
    \ Computer Vision and Image Analysis \nApplications (ICCVIA), Sousse, TUNISIA,\
    \ Jan. 18-20, 2015. \n191. Xia, P.P.; Zhang, L.; Li, F.Z. “Learning similarity\
    \ with cosine similarity ensemble,” Information \nSciences, vol. 307, pp. 39-52,\
    \ Jun. 2015. https://doi.org/10.1016/j.ins.2015.02.024. \n192. Hassanien, A.E.;\
    \ El-Bendary, N.; Sweidan, A.H.; Mohamed, A.; Hegazy, O.M. “Hybrid-biomarker \n\
    case-based reasoning system for water pollution assessment in Abou Hammad Sharkia,\
    \ Egypt,” \nApplied \nSoft \nComputing, \nvol. \n46, \npp. \n1043-1055, \nSept.\
    \ \n2016. \nhttps://doi.org/10.1016/j.asoc.2015.10.065. \n \n196 \n \n193. Senanayke,\
    \ S.M.N.A.; Malik, O.A.; Iskandar, P.M.; Zaheer, D. “A hybrid intelligent system\
    \ for \nrecovery and performance evaluation after anterior cruciate ligament injury,”\
    \ In Proceedings of \n12th International Conference on Intelligent Systems Design\
    \ and Applications (ISDA), Kochi, \nINDIA, Nov. 27-29, 2012. \n194. Rahman, M.M.;\
    \ Desai, B.C.; Bhattacharya, P. “Image retrieval-based decision support system\
    \ for \ndermatoscopic images,” In Proceedings of 19th IEEE Symposium on Computer-Based\
    \ Medical \nSystems, Salt Lake City, UT, USA, Jun. 22-23, 2006. \n195. Kwon, N.;\
    \ Lee, J.; Park, M.; Yoon, I.; Ahn, Y. “Performance evaluation of distance measurement\
    \ \nmethods for construction noise prediction using case-based reasoning,” Sustainability,\
    \ vol. 11, no. \n3, Feb. 2019. https://doi.org/10.3390/su11030871. \n196. Li,\
    \ H.; Sun, J. “Predicting business failure using multiple case-based reasoning\
    \ combined with \nsupport vector machine,” Expert Systems with Applications, vol.\
    \ 36, no. 6, pp. 10085-10096, Aug. \n2009. https://doi.org/10.1016/j.eswa.2009.01.013.\
    \ \n197. Ferreira, J.R.; Oliveira, M.C. “Evaluating margin sharpness analysis\
    \ on similarity pulmonary \nnodule retrieval,” In Proceedings of IEEE 28th International\
    \ Symposium on Computer-Based \nMedical Systems (CBMS), Sao Paulo, BRAZIL, Jun.\
    \ 22-25, 2015. \n198. Rashid, E. “Construction cost prediction on the basis of\
    \ multiple parameters using case-based \nreasoning method,” International Journal\
    \ of Services Technology and Management, vol. 23, no. \n4, pp. 255-261, Nov. 2017.\
    \ https://doi.org/10.1504/IJSTM.2017.10009179. \n199. Mousa, A.; Yusof, Y. “An\
    \ improved Chebyshev distance metric for clustering medical images,” \nIn Proceedings\
    \ of 2nd Innovation and Analytics Conference and Exhibition (IACE), Alor Setar,\
    \ \nMALASIA, Sept. 29-Oct. 01, 2015. \n200. Mustafa, A.A.Y. “Probabilistic binary\
    \ similarity distance for quick binary image matching,” IET \nImage Processing,\
    \ vol. 12, no. 10, pp. 1844-1856, Oct. 2018. https://doi.org/10.1049/iet-\nipr.2017.1333.\
    \ \n201. Zhang, L.; Zhang, Y.D.; Tang, J.H.; Lu, K.; Tian, Q. “Binary code ranking\
    \ with weighted \nHamming distance,” In Proceedings of 26th IEEE Conference on\
    \ Computer Vision and Pattern \nRecognition (CVPR), Portland, OR, USA, Jun. 23-28,\
    \ 2013. \n202. Ye, J. “Improved cosine similarity measures of simplified neutrosophic\
    \ sets for medical \ndiagnoses,” Artificial Intelligence in Medicine, vol. 63,\
    \ no. 3, pp. 171-179, Mar. 2015. \nhttps://doi.org/10.1016/j.artmed.2014.12.007.\
    \ \n203. Liu, H.F.; Hu, Z.; Mian, A.; Tian, H.; Zhu, X.Z. “A new user similarity\
    \ model to improve the \naccuracy of collaborative filtering,” Knowledge-Based\
    \ Systems, vol. 56, pp. 156-166, Jan. 2014. \nhttps://doi.org/10.1016/j.knosys.2013.11.006.\
    \ \n204. Liu, C.J. “Discriminant analysis and similarity measure,” Pattern Recognition,\
    \ vol. 47, no. 1, pp. \n359-367, Jan. 2014. https://doi.org/10.1016/j.patcog.2013.06.023.\
    \ \n \n197 \n \n205. Ling, H.B.; Jacobs, D.W. “Shape classification using the\
    \ inner-distance,” IEEE Transactions on \nPattern Analysis and Machine Intelligence,\
    \ vol. 29, no. 2, pp. 286-299, Feb. 2007. \nhttps://doi.org/10.1109/TPAMI.2007.41.\
    \ \n206. Zheng, Y.H.; Jeon, B.; Xu, D.H.; Wu, Q.M.J.; Zhang, H. “Image segmentation\
    \ by generalized \nhierarchical fuzzy C-means algorithm,” Journal of Intelligent\
    \ & Fuzzy Systems, vol. 28, no. 2, pp. \n961-973, 2015. https://doi.org/10.3233/IFS-141378.\
    \ \n207. Wu, J.X.; Rehg, J.M. “Beyond the Euclidean distance: Creating effective\
    \ visual codebooks using \nthe histogram intersection kernel,” In Proceedings\
    \ of 12th IEEE International Conference on \nComputer Vision, Kyoto, JAPAN, Sept.\
    \ 29-Oct. 02, 2009. \n208. Farhan, U.; Tolouei-Rad, M.; Osseiran, A. “Indexing\
    \ and retrieval using case-based reasoning in \nspecial purpose machine designs,”\
    \ International Journal of Advanced Manufacturing Technology, \nvol. 92, no. 5-8,\
    \ pp. 2689-2703, Sept. 2017. https://doi.org/10.1007/s00170-017-0274-5. \n209.\
    \ Honigl, J.; Kung, J. “A data quality index with respect to case bases within\
    \ case-based reasoning,” \nIn Proceedings of 6th Asian Conference on Intelligent\
    \ Information and Database Systems \n(ACIIIDS), Bangkok, THAILAND, Apr. 07-09,\
    \ 2014. \n210. Wiltgen, B.; Goel, A.K.; Vattam, S. “Representation, indexing,\
    \ and retrieval of biological cases \nfor biologically inspired design,” In Proceedings\
    \ of 19th International Conference on Case-Based \nReasoning, London, ENGLAND,\
    \ Sept. 11-14, 2011. \n211. Ahmad, J.; Sajjad, M.; Mehmood, I.; Baik, S.W. “SiNC:\
    \ Saliency-injected neural codes for \nrepresentation and efficient retrieval\
    \ of medical radiographs,” PLOS One, vol. 12, no. 8, Aug. \n2017. https://doi.org/10.1371/journal.pone.0181707.\
    \ \n212. Durmaz, O.; Bilge, H.S. “Fast image similarity search by distributed\
    \ locality sensitive hashing,” \nPattern \nRecognition \nLetters, \nvol. \n128,\
    \ \npp. \n361-369, \nDec. \n2019. \nhttps://doi.org/10.1016/j.patrec.2019.09.025.\
    \ \n213. Ahmed, T.; Sarma, M.; “Hash-based space partitioning approach to iris\
    \ biometric data indexing,” \nExpert \nSystems \nwith \nApplications, \nvol. \n\
    134, \npp. \n1-13, \nNov. \n2019. \nhttps://doi.org/10.1016/j.eswa.2019.05.026.\
    \ \n214. Aydar, M.; Ayvaz, S. “An improved method of locality-sensitive hashing\
    \ for scalable instance \nmatching,” Knowledge and Information Systems, vol. 58,\
    \ no. 2, pp. 275-294, Feb. 2019. \nhttps://doi.org/10.1007/s10115-018-1199-5.\
    \ \n215. Cunningham, P.; Smyth, B. “Case-based reasoning in scheduling: reusing\
    \ solution components,” \nInternational Journal of Production Research, vol. 35,\
    \ no. 11, pp. 2947-2961, Nov. 1997. \nhttps://doi.org/10.1080/002075497194237.\
    \ \n216. De Mantaras, R.L.; Mcsherry, D.; Bridge, D.; Leake, D.; Smyth, B.; Craw,\
    \ S.; Faltings, B.; Maher, \nM.L.; Cox, M.T.; Forbus, K.; Keane, M.; Aamodt, A.;\
    \ Watson, I. “Retrieval, reuse, revision and \n \n198 \n \nretention in case-based\
    \ reasoning,” Knowledge Engineering Review, vol. 20, no. 3, pp. 215-240, \nSept.\
    \ 2005. https://doi.org/10.1017/S0269888906000646. \n217. Lieber, J. “Application\
    \ of the revision theory to adaptation in case-based reasoning: The \nconservative\
    \ adaptation,” In Proceedings of 7th International Conference on Case-Based \n\
    Reasoning, Belfast, NORTH IRELAND, Aug. 13-16, 2007. \n218. Ji, C.; Hong, T.;\
    \ Hyun, C. “CBR revision model for improving cost prediction accuracy in \nmultifamily\
    \ housing projects,” Journal of Management in Engineering, vol. 26, no. 4, pp.\
    \ 229-\n236, Oct. 2010. https://doi.org/10.1061/(ASCE)ME.1943-5479.0000018. \n\
    219. Yan, A.J.; Zhang, K.H.; Yu, Y.H.; Wang, P. “An attribute difference revision\
    \ method in case-based \nreasoning and its application,” Engineering Applications\
    \ of Artificial Intelligence, vol. 65, pp. 212-\n219, Oct. 2017. https://doi.org/10.1016/j.engappai.2017.07.015.\
    \ \n220. Yan, A.J.; Wang, D.H. “Trustworthiness evaluation and retrieval-based\
    \ revision method for case-\nbased reasoning classifiers,” Expert Systems with\
    \ Applications, vol. 42, no. 21, pp. 8006-8013, \nNov. 2015. https://doi.org/10.1016/j.eswa.2015.06.027.\
    \ \n221. Cojan, J.; Lieber, J. “Applying belief revision to case-based reasoning,”\
    \ In Proceedings of \nInternational Workshop on Similarity and Analogy based Methods\
    \ in AI (SAMAI), Montpellier, \nFRANCE, Aug. 27, 2012. \n222. Ontanon, S.; Plaza,\
    \ E.; Zhu, J.C. “Argument-based case revision in CBR for story generation,” In\
    \ \nProceedings of 23rd International Conference on Case-Based Reasoning (ICCBR),\
    \ Bad Homburg, \nGERMANY, Sept. 28-30, 2015. \n223. Mohammed, M.A.; Ghani, M.K.A.;\
    \ Arunkumar, N.; Obaid, O.I.; Mostafa, S.A.; Jaber, M.M.; \nBurhanuddin, M.A.;\
    \ Matar, B.M.; Abdullatif, S.K.; Ibrahim, D.A. “Genetic case-based reasoning \n\
    for improved mobile phone faults diagnosis,” Computers & Electrical Engineering,\
    \ vol. 71, no. \n212-222, Oct. 2018. https://doi.org/10.1016/j.compeleceng.2018.07.053.\
    \ \n224. Grech, A.; Main, J. “A case-based reasoning approach for formulating\
    \ university timetables using \ngenetic algorithms,” In Proceedings of 9th International\
    \ Conference on Knowledge-Based \nIntelligent Information and Engineering Systems,\
    \ Melbourne, AUSTRALIA, Sept. 14-16, 2005. \n225. Recio-Garcia, J.A.; Wiratunga,\
    \ N. “Taxonomic semantic indexing for textual case-based \nreasoning,” In Proceedings\
    \ of 18th International Conference on Case-Based Reasoning, \nAlessandria, ITALY,\
    \ Jul. 19-22, 2010. \n226. Chen, B.H.; Peng, X.; Yu, Y.J.; Nuseibeh, B.; Zhao,\
    \ W.Y. “Self-adaptation through incremental \ngenerative model transformations\
    \ at runtime,” In Proceedings of 36th International Conference on \nSoftware Engineering\
    \ (ICSE), Hyderabad, INDIA, May 31-Jun. 07, 2014. \n227. Hong, W.X.; Wang, Z.Z.;\
    \ Yang, M.; Yuan, J.S. “Conditional generative adversarial network for \nstructured\
    \ domain adaptation,” In Proceedings of 31st IEEE/CVF Conference on Computer Vision\
    \ \nand Pattern Recognition (CVPR), Salt Lake City, UT, USA, Jun. 18-23, 2018.\
    \ \n \n199 \n \n228. Stuikys, V.; Burbaite, R.; Bespalova, K.; Blazauskas, T.;\
    \ Barisas, D. “Stage-based generative \nlearning object model for automated content\
    \ adaptation,” Baltic Journal of Modern Computing, \nvol. 5, no. 2, pp. 183-205,\
    \ 2017. https://doi.org/10.22364/bjmc.2017.5.2.03. \n229. Zhou, P.; Yin, W.D.;\
    \ Zhao, J.H. “Research on case retention strategy for industrial case-based \n\
    reasoning (CBR) system: A practical case study,” In Proceedings of International\
    \ Conference on \nComputer Science and Information Processing (CSIP), Xi’an, PEOPLES\
    \ R CHINA, Aug. 24-26, \n2012. \n230. Reinartz, T.; Iglezakus, I.; Roth-Berghofer,\
    \ T. “Review and restore for case-base maintenance,” \nComputational Intelligence,\
    \ vol. 17, no. 2, pp. 214-234, May 2001. https://doi.org/10.1111/0824-\n7935.00141.\
    \ \n231. Portinale, L.; Torasso, P. “Case-base maintenance in a multimodal reasoning\
    \ system,” \nComputational Intelligence, vol. 17, no. 2, pp. 263-279, May 2001.\
    \ https://doi.org/ 10.1111/0824-\n7935.00144. \n232. Yan, A.J.; Qian, L.M.; Zhang,\
    \ C.X. “Memory and forgetting: An improved dynamic maintenance \nmethod for case-based\
    \ reasoning,” Information Sciences, vol. 287, pp. 50-60, Dec. 2014. \nhttps://doi.org/10.1016/j.ins.2014.07.040.\
    \ \n233. Yang, Q.; Zhu, J. “A case-addition policy for case-base maintenance,”\
    \ Computational Intelligence, \nvol. 17, no. 2, pp. 250-262. https://doi.org/10.1111/0824-7935.00143.\
    \ \n234. Yang, Q.; Wu, J. “Keep it simple: A case-base maintenance policy based\
    \ on clustering and \ninformation theory,” In Proceedings of 13th Biennial Conference\
    \ of the Canadian-Society-for-\nComputational-Studies-of-Intelligence (AI 2000),\
    \ Montreal, CANADA, May 14-17, 2000. \n235. Perner, P. “Case-base maintenance\
    \ by conceptual clustering of graphs,” Engineering Applications \nof \nArtificial\
    \ \nIntelligence, \nvol. \n19, \nno. \n4, \npp. \n381-393, \nJun. \n2006. \nhttps://doi.org/10.1016/j.engappai.2006.01.014.\
    \ \n236. Tsang, E.C.C.; Wang, X.Z. “An approach to case-based maintenance: Selecting\
    \ representative \ncases,” International Journal of Pattern Recognition and Artificial\
    \ Intelligence, vol. 19, no. 1, pp. \n79-89, Feb. 2005. https://doi.org/10.1142/S0218001405003909.\
    \ \n237. Salamo, M.; Golobardes, E. “Deleting and building sort out techniques\
    \ for case base maintenance,” \nIn Proceedings of 6th European Conference on Case-Based\
    \ Reasoning, Aberdeen, SCOTLAND, \nSept. 04-07, 2002. \n238. Standardize \nor\
    \ \nNormalize? \n– \nExamples \nin \nPython. \nAvailable: \nhttps://medium.com/@rrfd/standardize-or-normalize-examples-in-python-e3f174b65dfc.\
    \ \n239. Garcia, F.T.; Villalba, L.J.G.; Orozco, A.L.S.; Ruiz, F.D.A.; Juarez,\
    \ A.A.; Kim, T.H. “Locating \nsimilar names through locality sensitive hashing\
    \ and graph theory,” Multimedia Tools and \nApplications, vol. 78, no. 21, pp.\
    \ 29853-29866, Nov. 2019. https://doi.org/10.1007/s11042-018-\n6375-9. \n \n200\
    \ \n \n240. Chen, L.; Wang, S.M.; Chen, R.S. “A method to detect gene co-expression\
    \ clusters from multiple \nmicroarrays,” Progress in Biochemistry and Biophysics,\
    \ vol. 35, no. 8, pp. 914-920, Aug. 2008. \n241. Dehghani, M.; Moeini, A.; Kamandi,\
    \ A. “Experimental evaluation of local sensitive hashing \nfunctions for face\
    \ recognition,” In Proceedings of 5th International Conference on Web Research\
    \ \n(ICWR), Tehran, IRAN, Apr. 24-25, 2019. \n242. Mau, T.N.; Inoguchi, Y. “Robust\
    \ optimization for audio fingerprint hierarchy searching on \nmassively parallel\
    \ with multi-GPGPUs using K-modes LSH,” In Proceedings of International \nConference\
    \ on Advanced Engineering Theory and Applications (AETA), Busan, SOUTH KOREA,\
    \ \nDec. 08-10, 2016. \n243. Li, H.; Song, Y.; Li, X.P.; Liu, Q.X.; Zhu, Y.F.\
    \ “Research of CBR retrieval method based on rough \nset theory,” In Proceedings\
    \ of 6th IEEE International Conference on Software Engineering and \nService Science\
    \ (ICSESS), Beijing, PEOPLES R CHINA, Sept. 23-25, 2015. \n244. Su, W.B.; Lei,\
    \ Z.F. “Rough case-based reasoning system for continues casting,” In Proceedings\
    \ of \n10th International Conference on Machine Vision (ICMV), Vienna, AUSTRIA,\
    \ Nov. 13-15, 2017. \n245. Singh, K.; Kansal, A.; Singh, G. “An improved median\
    \ filtering anti-forensics with better image \nquality and forensic undetectability,”\
    \ Multidimensional Systems and Signal Processing, vol. 30, \nno. 4, pp. 1951-1974,\
    \ Oct. 2019. https://doi.org/10.1007/s11045-019-00637-8. \n246. Rahman, M.M.;\
    \ Antani, S.K.; Thoma, G.R. “A learning-based similarity fusion and filtering\
    \ \napproach for biomedical image retrieval using SVM classification and relevance\
    \ feedback,” IEEE \nTransactions on Information Technology in Biomedicine, vol.\
    \ 15, no. 4, pp. 640-646, Jul. 2011. \nhttps://doi.org/10.1109/TITB.2011.2151258.\
    \ \n247. Zhang, L.; Li, D.X.; An, X.Y. “Study on water resources optimal allocation\
    \ of irrigation district \nand irrigation decision support system,” In Proceedings\
    \ of 4th IFIP TC 12 Conference on Computer \nand Computing Technologies in Agriculture,\
    \ Nanchang, PEOPLES R CHINA, Oct. 22-25, 2010. \n248. Rossi, V.; Sperandio, G.;\
    \ Caffi, T.; Simonetto, A.; Gilioli, G. “Critical success factors for the \nadoption\
    \ of decision tools in IPM,” Agronomy-Basel, vol. 9, no. 11, Nov. 2019. \nhttps://doi.org/10.3390/agronomy9110710.\
    \ \n249. El-Sharkawy, M.A. “Global warming: causes and impacts on agroecosystems\
    \ productivity and \nfood security with emphasis on cassava comparative advantage\
    \ in the tropics/subtropics,” \nPhotosynthetica, vol. 52, no. 2, pp. 161-178,\
    \ Jun. 2014. https://doi.org/10.1007/s11099-014-0028-\n7. \n250. Wang, J.; Lan,\
    \ Y.B.; Zhang, H.H.; Zhang, Y.L.; Wen, S.; Yao, W.X.; Deng, J.J. “Drift and \n\
    deposition of pesticide applied by UAV on pineapple plants under different meteorological\
    \ \nconditions,” International Journal of Agricultural and Biological Engineering,\
    \ vol. 11, no. 6, pp. \n5-12, Nov. 2018. https://doi.org/10.25165/j.ijabe.20181106.4038.\
    \ \n \n201 \n \n251. Chen, C.; Yan, X.F.; Ma, Y.H.; Yu, S.; Xu, Q.; Grantz, D.A.;\
    \ Lammers, P.S.; Wang, Z.Y.; Sun, \nY.R.; Cheng, Q. “Monitoring near-surface soil\
    \ water content using an innovative perforated \ncylinder coaxial dielectric sensor,”\
    \ Journal of Hydrology, vol. 573, pp. 746-754, Jun. 2019. \nhttps://doi.org/10.1016/j.jhydrol.2019.04.020.\
    \ \n252. Pytka, J.; Budzynski, P.; Kaminski, M.; Lyszczyk, T.; Jozwik, J. “Application\
    \ of the TDR moisture \nsensor \nfor \nterramechanical \nresearch,” \nSensors,\
    \ \nvol. \n19, \nno. \n9, \nMay. \n2019. \nhttps://doi.org/10.3390/s19092116.\
    \ \n253. Leistra, M.; Zweers, A.J.; Warinton, J.S.; Crum, S.J.H.; Hand, L.H.;\
    \ Beltman, W.H.J.; Maund, S.J. \n“Fate of the insecticide lambda-cyhalothrin in\
    \ ditch enclosures differing in vegetation density,” \nPest Management Science,\
    \ vol. 60, no. 1, pp. 75-84, Jan. 2004. https://doi.org/10.1002/ps.780. \n254.\
    \ Handique, B.K.; Khan, A.Q.; Goswami, C.; Prashnani, M.; Gupta, C.; Raju, P.L.N.\
    \ “Crop \ndiscrimination using multispectral sensor onboard unmanned aerial vehicle,”\
    \ Proceedings of the \nNational Academy of Sciences India Section A-Physical Sciences,\
    \ vol. 87, no. 4, pp. 713-719, Dec. \n2017. https://doi.org/10.1007/s40010-017-0443-9.\
    \ \n255. Arroyo, J.A.; Gomez-Castaneda, C.; Ruiz, E.; de Cote, E.M.; Gavi, F.;\
    \ Sucar, L.E. “Assessing \nnitrogen nutrition in corn crops with airborne multispectral\
    \ sensors,” In Proceedings of 30th \nInternational Conference on Industrial Engineering\
    \ and Other Applications of Applied Intelligent \nSystems (IEA/AIE), Arras, FRANCE,\
    \ Jun. 27-30, 2017. \n256. Saravanan, K.; Saraniya, S. “Cloud IoT based novel\
    \ livestock monitoring and identification system \nusing UID,” Sensor Review,\
    \ vol. 38, no. 1, pp. 21-23, Jan. 2018. https://doi.org/10.1108/SR-08-\n2017-0152.\
    \ \n257. Ariff, M.H.; Ismarani, I.; Shamsuddin, N. “RFID based systematic livestock\
    \ health management \nsystem,” In Proceedings of IEEE Conference on Systems, Process\
    \ and Control (ICSPC), Kuala \nLumpur, MALAYSIA, Dec. 12-14, 2014. \n258. Kumar,\
    \ A.; Hancke, G.P. “A Zigbee-based animal health monitoring system,” IEEE Sensors\
    \ \nJournal, vol. 15, no. 1, pp. 610-617, Jan. 2015. https://doi.org/10.1109/JSEN.2014.2349073.\
    \ \n259. Billot, A.; Gilboa, I.; Schmeidler, D. “Axiomatization of an exponential\
    \ similarity function,” \nMathematical \nSocial \nSciences, \nvol. \n55, \nno.\
    \ \n2, \npp. \n107-115, \nMar. \n2008. \nhttps://doi.org/10.1016/j.mathsocsci.2007.08.002.\
    \ \n260. Panday, D.; de Amorim, R.C.; Lane, P. “Feature weighting as a tool for\
    \ unsupervised feature \nselection,” \nInformation \nProcessing \nLetters, \n\
    vol. \n129, \nno. \n44-52, \nJan. \n2018. \nhttps://doi.org/10.1016/j.ipl.2017.09.005.\
    \ \n261. Montani, S. “Case-based reasoning for managing noncompliance with clinical\
    \ guidelines,” \nComputational Intelligence, vol. 25, no. 3, pp. 196-213, Aug.\
    \ 2009. https://doi.org/10.1111/j.1467-\n8640.2009.00338.x \n \n202 \n \n262.\
    \ Matthews, G.A. “How was the pesticide applied?” Crop Protection, vol. 23, no.\
    \ 7, pp. 651-653, \nJul. 2004. https://doi.org/10.1016/j.cropro.2003.12.001. \n\
    263. Case \nStudy \n– \nCase \nbase. \nAvailable: \nhttps://github.com/ZhaoyuZHAI/PhD-\n\
    thesis/blob/master/Case-Study. \n264. Lu, N.; Lu, J.; Zhang, G.Q. “Maintaining\
    \ footprint-based retrieval for case deletion,” In \nProceedings of 16th International\
    \ Conference on Neural Information Processing (ICONIP 2009), \nBangkok, Thailand,\
    \ Dec. 01-05, 2009. \n265. Oracle Mediator – Oracle® fusion middleware developer’s\
    \ guide for Oracle SOA suite. Available: \nhttps://docs.oracle.com/html/E10224_15/med_gsmed.htm.\
    \ \n266. myCBR. Available: http://mycbr-project.org/. \n267. Spyder. Available:\
    \ https://www.spyder-ide.org/. \n268. Scikit \nlearn \n– \n6.3. \nPreprocessing\
    \ \ndata. \nAvailable: \nhttps://scikit-\nlearn.org/stable/modules/preprocessing.html.\
    \ \n269. Sonderskov, M.; Fritzsche, R.; de Mol, F.; Gerowitt, B.; Goltermann,\
    \ S.; Kierzek, R.; Krawczyk, \nR.; Bojer, O.M.; Rydahl, P. “DSSherbicide: Weed\
    \ control in winter wheat with a decision support \nsystem in three south Baltic\
    \ regions – Field experimental results,” Crop Protection, vol. 76, pp. \n15-23,\
    \ Oct. 2015. https://doi.org/10.1016/j.cropro.2015.06.009. \n270. Itoh, J.; Nonomura,\
    \ K.; Ikeda, K.; Yamaki, S.; Inukai, Y.; Yamagishi, H.; Kitano, H.; Nagato, Y.\
    \ \n“Rice plant development: From zygote to spikelet,” Plant and Cell Physiology,\
    \ vol. 46, no. 1, pp. \n23-47, Jan. 2005. https://doi.org/10.1093/pcp/pci501.\
    \ \n271. Validation – Case base pastCase (1-3000). Available: https://github.com/ZhaoyuZHAI/PhD-\n\
    thesis/blob/master/caseBase%201-3000%20(Validation). \n272. Validation – Case\
    \ base newCase (1-500). Available: https://github.com/ZhaoyuZHAI/PhD-\nthesis/blob/master/caseBase%20newCase%201-500%20(Validation).\
    \ \n \n"
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: http://oa.upm.es/64746/1/ZHAOYU_ZHAI.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: Contributions to Case-Based Reasoning Enabled Decision Support System for
    Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
