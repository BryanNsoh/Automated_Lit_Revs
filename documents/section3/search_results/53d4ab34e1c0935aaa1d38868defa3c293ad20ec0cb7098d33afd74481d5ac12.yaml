- DOI: https://doi.org/10.1177/1550147719888166
  analysis: '>'
  authors:
  - Trung Dong
  citation_count: 3
  full_citation: '>'
  full_text: '>

    We value your privacy We and our partners store and/or access information on a
    device, such as cookies and process personal data, such as unique identifiers
    and standard information sent by a device for personalised advertising and content,
    advertising and content measurement, audience research and services development.
    With your permission we and our partners may use precise geolocation data and
    identification through device scanning. You may click to consent to our and our
    1437 partners’ processing as described above. Alternatively you may click to refuse
    to consent or access more detailed information and change your preferences before
    consenting. Please note that some processing of your personal data may not require
    your consent, but you have a right to object to such processing. Your preferences
    will apply to this website only. You can change your preferences or withdraw your
    consent at any time by returning to this site and clicking the "Privacy" button
    at the bottom of the webpage. MORE OPTIONS DECLINE ALL ACCEPT ALL Skip to main
    content Search this journal Enter search terms... Search Advanced search I have
    access via: UNIV NEBRASKA LIBRARIES Access/Profile Cart Browse by discipline Information
    for International Journal of Distributed Sensor Networks JOURNAL HOMEPAGE Open
    access Research article First published online November 20, 2019 Research on Internet
    of Things security architecture based on fog computing Trung Dong Mai https://orcid.org/0000-0001-8956-8521
    maitrungdong44@163.comView all authors and affiliations All Articles https://doi.org/10.1177/1550147719888166
    Contents PDF / ePub Cite article Share options Information, rights and permissions
    Metrics and citations Figures and tables Abstract The traditional data processing
    of the Internet of Things is concentrated in cloud computing, and its huge number
    of devices and massive real-time data transmission are extremely stressful on
    network bandwidth and cloud computing data centers. Fog computing is the infrastructure
    that can use processing power anywhere in the cloud. Virtual computing extends
    the power of cloud computing to the edge of the network, enabling any computing
    device to host and process software services, analyzing and storing data closer
    to where data are generated. The architecture of the fog computing brings enormous
    processing power. Since its processing power is often located near the required
    equipment, the distance of data transmission is reduced and the delay is reduced.
    This article explores how to use the fog computing layer between the cloud data
    center and the end node layer to store and process large amounts of local data
    in a timely manner, speeding decision making and enabling Internet of Things manufacturers
    and software developers to limit their ability to send data. They reduced cloud
    computing costs and built a reasonable security architecture. Introduction As
    the name implies, the Internet of Things (IoT) is the Internet connected by objects.
    There are two meanings: first, the core and foundation of the IoT is still the
    Internet. The IoT is a network that expands and expands over the Internet; second,
    its network composition and communication uses a unique addressing scheme that
    uses a variety of objects or devices around us (such as RFID (radio-frequency
    identification) tags, smartphones, sensors, activators, etc.), which extend and
    extend to any object. It constitutes a global network of interconnected entities.
    Entities in the network can interact with each other anytime and anywhere, completing
    various tasks of information exchange and communication,1 that is, the connection
    of objects. The IoT is widely used in network integration through communication
    sensing technologies such as smart sensing technology and pervasive computing
    technology. Therefore, it is called the third wave of the development of the world
    information industry after computers and the Internet. The IoT is also known as
    the fourth revolutionary technology after the steam revolution, the power revolution,
    and the Internet revolution. As a network of objects, the IoT has been given great
    expectations. The expected application areas include intelligent logistics, intelligent
    transportation, precision agriculture, smart home, environmental protection, smart
    power, retail management, healthcare, financial management, public. The seven
    areas, namely, safety, industrial supervision, intelligent building, urban management,
    military management, and so on, are the most common application areas. It can
    be said that the future of life, the world, and the Internet are closely related.
    According to the definition of the IoT, the IoT is a network that extends and
    expands on the Internet. Constrained networks (such as sensor networks) and resource-constrained
    devices (such as sensors, RFID tags, actuators, etc.) at the edge of the Internet
    are the main components of the IoT and are also secure for the IoT. The main bottleneck—resource-constrained
    networks are those that are currently difficult to implement the common link layer
    characteristics of the Internet. Resource-constrained networks usually have low
    throughput, high packet loss rate, and extremely asymmetric links. Resource-restricted
    nodes are those nodes that are currently difficult to implement many common characteristics
    of Internet nodes. Resource-constrained nodes are often seriously deficient in
    energy, storage, and processing capabilities. Although resource-constrained networks
    and resource-constrained nodes are different, there are usually a large number
    of resource-constrained nodes in resource-limited networks, and resource-constrained
    nodes are the main bottleneck of resource-constrained networks. For these resource-constrained
    devices, only considering their limited computing power and serious storage space,
    the node itself runs TLS, IPsec, and so on. These are end-to-end security mechanisms
    on the Internet and have power, high packet loss rates and other challenges. Therefore,
    in fact, for the actual situation of the IoT network, it is of great practical
    significance and value to study the end-to-end security technology applicable
    to the IoT. Related work Research on IoT security architecture based on fog computing
    has been a hot topic in academic and industrial research.2,3 C Dsouza et al.4
    proposed policy-based resource management in fog computing, extending the current
    fog computing platform to support secure collaboration and interoperability between
    resources requested by different users in fog computing. A Alrawais et al.5 proposed
    a mechanism that uses fog calculations to improve the distribution of certificate
    revocation information in IoT devices to improve security. C Thota et al.6 proposed
    an efficient centralized security architecture for end-to-end integration of IoT-based
    healthcare systems deployed in cloud environments. OH Alhazmi and Aloufi7 analyzed
    the performance of the fog-based IoT and proposed a security scheme based on the
    MQTT protocol. N Moustafa8 proposes a systemic IoT-fog-cloud architecture that
    clarifies the interaction between the IoT, fog, and cloud layers to effectively
    implement big data analytics and network security applications. PY Zhang et al.9
    discussed and analyzed the architecture of fog computing and pointed out the related
    potential security and trust issues. Z Wen et al.10 outline the core issues, challenges,
    and future research directions of business processes that support fog in IoT services.
    Fog computing system architecture Introduction to the system architecture of fog
    computing Compared with the cloud computing end user layer, the network layer,
    and the cloud layer, three-layer architecture, the fog computing system can be
    divided into five layers after the introduction of the intermediate fog layer.
    They are an end user layer, an access network layer, a fog layer, a core network
    layer, and a cloud layer, respectively, as shown in Figure 1. It is easy to see
    that the closer to the bottom layer, the larger the distribution area and the
    less delay the end user data is transmitted to the layer.11 Table 1 shows the
    central equipment and important functions of these five layers. Figure 1. System
    architecture of fog computing. Table 1. Fog computing of the main equipment and
    functions of each layer. Level Major equipment The main function End user layer
    Terminal devices and sensor nodes of users’ mobile phones, portable computers,
    etc. Terminal devices and sensor nodes of users’ mobile phones, portable computers,
    etc. Access network layer Wireless network equipment is the mainstay, supplemented
    by wired network equipment Send the end user’s task to the corresponding fog node
    according to a predetermined rule Fog layer Fog edge node, micro fog, fog server
    Provide a degree of computing, storage, and communication Core network layer Core
    network equipment Send tasks beyond the fog layer calculation or storage capacity
    to the cloud data center Cloud layer Cloud data center server Data backup, large
    computational task processing In the proposed fog computing framework, by extending
    the fog layer with computing and storage capabilities between the cloud server
    and the terminal device, the key data and computing services required for localization
    on the cloud server are moved to the fog server closer to the terminal device.
    By providing data caching, localized computing and other functions, the demand
    for high traffic and low latency of mobile applications is better met. The end
    user layer is mainly composed of the user’s mobile phone, portable computer, and
    other terminal devices. With the development of sensor network technology, the
    sensor node will also play an important role in this layer. These devices may
    be fixed devices placed somewhere, such as sensors placed on traffic lights, on
    both sides of the road, or on mobile terminals such as users’ mobile phones and
    laptops. At this level, these devices will act as content creators and content
    users. The task will be generated at this layer and the processed results will
    be returned to this layer. In addition, the terminal device also needs to discover
    and specify the fog node corresponding to the task forwarding.12 Design and implementation
    of fog computing system architecture In terms of implementation, CISCO® proposes
    an IOx framework where users can develop deployment applications.13 For small
    fog-based applications, a small universal fog computing platform was implemented
    using the Raspberry Pi.14 In addition, the existing work has also designed some
    fog computing platforms for specific application scenarios, similar to smart cities,
    intelligent transportation, and so on. These platforms will be described in detail
    in “Prospects and conclusion” section. In the research of virtual simulation platform,
    a simulation platform-iFogSim has been proposed, and the simulation platform adopts
    Java language design. The configuration of the terminal device, the cloud computing
    center, and the network link is implemented, and the fog computing resource scheduling
    and management algorithm can be implemented in different scenarios according to
    actual needs. In addition, the performance of the entire design algorithm can
    be based on delay and power consumption., network resource occupancy and control
    costs, and other indicators to measure. Although this brings new opportunities
    to the scheduling algorithm researchers, its function is not very high; there
    are still some differences between the effects of the simulation technology and
    the actual results. Resource scheduling in fog computing When the fog computing
    is performed, the virtual machine (VM) or the task loaded in the container15 will
    be run. In order to achieve the effect of efficiently using physical machine resources,
    VMs or containers are migrated between physical machines. The location for such
    a VM or container migration depends on the design of the scheduling algorithm.
    The design of the scheduling algorithm is more complicated than the cloud computing.
    On one hand, the fog computing is very high in the sensitivity to time. Therefore,
    the time of the user to the fog node, the time when the task migrates in different
    fog nodes, and the time that the fog node forwards tasks to the cloud data center
    will be accurately taken into account. On the other hand, the fog node not only
    sets the computing nodes, but also sets the nodes related to storage. Similarly,
    the way of placing these nodes affects the related service quality to some extent.
    In summary, the following factors need to be considered in the design of the scheduling
    algorithm. Storage capacity One of the main functions of the fog layer is storage.
    For the calculation of the task, the required source data are scattered on each
    fog node. The requirement for storage is to be able to bring the data as close
    as possible to the user’s needs, but at the same time require that the storage
    space be used as little as possible. In this regard, data collection time has
    become the most important assessment indicator. The location of the data can be
    used directly to obtain the response time of the data. But these problems can
    be adjusted by limiting the number of data backups. Therefore, the measurement
    of the storage situation will also use these two indicators. Delay In addition
    to storing this function, the fog node also assumes the function computed in the
    fog layer, and one of the most important metrics of computing power is latency.
    Compared with cloud computing, the calculation task of fog computing can be directly
    performed on the fog node, without uploading the task to the cloud data center
    and then to the node, so that the delay can be effectively reduced. Round Trip
    Time is the most accurate way to define the total time it takes to return a result
    from the start of a terminal device task to the upload terminal device. Although
    the same task is intuitive and convenient for horizontal comparison, the method
    completely ignores the difference between the amount of data that the task needs
    to transmit and the amount of task calculation. Although the number of instructions
    executed is in unit time, the reason for the user-specific implementation may
    be to make it impossible to handle the program with constant CPU use. Therefore,
    this measurement method has problems in measuring the calculation delay. Today,
    the method of calculating latency is more reasonable than service-level agreement
    (SLA) violations, which makes the measurement of resource shortages more reasonable.16
    In the case of a breach of SLA, the degree of shortage is defined as SLA violation
    = ∑ i = 1 m ∫ ( r i ( t ) − a i ( t ) ) dt ∑ i = 1 m ∫ r i ( t ) dt (1) where
    m is the number of tasks, (t) is the amount of resources requested by the tth
    task in t time, and A i ( t ) is the amount of resources actually allocated by
    the ith task in t time. As can be seen from equation (1), as the degree of resource
    occupancy becomes higher, the degree of delay becomes larger. There is a linear
    relationship between the two under certain conditions. In this regard, the proof
    is as follows. Assuming that each task is independent of each other, the requested
    resource amount is μ i mean X i , and the allocated resource quantity is X i +
    ε i , and then the expected value of resource shortage under the SLA is E [ SLA
    ] = ∑ i = 1 m E [ ∫ ( 1 − a i ( t ) r i ( t ) ) dt ] = ∑ i = 1 m ∫ E [ 1 − a i
    ( t ) r i ( t ) ] dt = ∑ i = 1 m ∫ ( 1 − E [ X i ] + E [ ε i ] E [ X i ] ) dt
    m E [ ε i ] (2) The expected value of the number of instructions that generated
    the delay due to insufficient resources is ∑ i = 1 m ∫ E [ X i − ( X i + ε i )
    ] dt = − ∑ i = 1 m μ i ∫ E [ ε i ] μ i dt (3) It can be seen that there is a proportional
    relationship between the expected value of the resource shortage degree and the
    expected value of the delay instruction number, and the number of delay instructions
    is also proportional to the delay time. Therefore, it can be concluded that there
    is a proportional relationship between the expected value of the resource shortage
    level and the time delay. It is not difficult to find that this measurement method
    not only ignores the delay cost of differential services in the network, but also
    does not reflect the nonlinear delay cost. Therefore, further research and improvement
    of the definition of delay cost is needed. Power consumption is also an important
    indicator of computing power. When task execution is generally loaded on a VM,
    multiple VMs on the same device share the resources of the device, which can greatly
    improve resource use efficiency. Figure 2 shows the power consumption parameters
    of some servers. Figure 2. Power consumption parameters. As can be seen from Figure
    2, there is a linear relationship between device power consumption and CPU resource
    usage, and the IBM serverx3250 consumes the least amount of power, and the HP
    ProLiant ML110G3 is the largest. Therefore, modeling power consumption can be
    defined as follows p = ∫ ∑ i = 1 m [ p idl e i + ( p ma x i − p idl e i ) a i
    ( t ) c i ] dt (4) where m is the total number of servers; p idl e i and p ma
    x i are the idle power consumption of the first server and the power consumption
    at full load, respectively; and a i ( t ) and c i are, respectively, the amount
    of resources and resources occupied by the server. It can also be seen from Figure
    2 that the power consumption when the CPU occupancy rate is 0 is much larger than
    the power consumption when sleeping. Therefore, people plan to install as few
    VMs as possible on as few devices as possible, but the greater the degree of installation,
    the higher the risk of resource shortage, and the risk of delay increases. Therefore,
    the unified consideration of computing power will generally combine the two indicators
    of power consumption and delay. In addition, there are similar indicators such
    as CO2 emissions proportional to resource consumption, which can have the same
    effect. Utility Fog computing has the same commercial value as cloud computing.
    Most of the current deployments of fog computing have specific application scenarios,
    mainly private fog. However, with the popularity of fog computing, tasks uploaded
    to a private fog node may not be able to meet their own needs. People can rent
    fog nodes like renting cloud servers. For example, using the computing power provided
    by the surrounding sensors and smart sensors on both sides of the road in the
    Internet of Vehicles, the pricing problem arises. However, since there is not
    yet a business model mature like cloud computing, this indicator is mainly for
    specific scenarios, but I believe it will be a research focus in the future. With
    the continuous development of the IoT, the number of IoT users has gradually increased,
    and the amount of data transmission has increased rapidly, causing the cloud server
    to be overburdened. As an emerging computing model, fog computing provides a new
    way to reduce the pressure on cloud servers. The fog nodes deployed at the edge
    of the network can share the work of cloud computing and can handle some simple
    tasks at the terminal. However, the rational use of the resources of the fog node
    is still a difficult point and a key point. The problem of fog computing resource
    management and scheduling is the key to affect the performance of fog computing
    services. Especially in the case of large-scale service requests, if the resource
    scheduling problem is not effectively solved, it will increase service delay and
    reduce resource use. Therefore, the optimal goal can be achieved by in-depth study
    of fog computing resource management and scheduling issues. Some researchers have
    proposed an agent-based cloud joint framework by improving the existing fog computing
    framework. In addition, there is also a service popularity-based smart resources
    partitioning (SPSRP) scheme proposed for enabling the IoT of fog computing.17
    Multi-layer security measures based on fog computing Main level According to relevant
    literature, it is logical to divide the IoT into three main levels: the perception
    layer, the transport layer, and the processing layer. In addition, the application
    of data formed by the processing layer can also be regarded as an application
    layer. Each logical layer is covered by the underlying security architecture of
    the IoT. The side of the sensing layer and the transport layer close to the sensing
    layer is mainly distributed by the fog computing layer, as shown in Figure 3.
    Figure 3. Relative position of the fog computing layer in the Internet of Things
    system. Some researchers have proposed different security measures for the hardware
    and embedded device layers under the fog computing layer to protect against the
    security challenges that the IoT system needs to face from the bottom.18 For example,
    in order to ensure the traceability and integrity of data, the physical layer
    anti-cloning function of the sensor has to be used; in order to enhance the reliability
    management, physical unclonable function and hardware performance counters are
    needed; in order to improve confidentiality and privacy protection, it is necessary
    to use a lightweight encryption algorithm. In addition to the above protection
    elements, there are various algorithms such as encryption algorithms, HASH functions,
    and key exchange algorithms that can be used for password elements of IoT security
    protection. Using different cryptographic algorithms and choosing to process data
    at different processing locations can make a large difference in the energy consumed.
    Therefore, in order not to consume too much energy, it is necessary to select
    an appropriate processing location and a suitable cryptographic algorithm according
    to the amount of data. For example, within the sensor, it can handle data within
    1 KB; if the data are within 1 MB, the fog node can be used as a processing place;
    if the data are within 1 GB or exceeds 1 GB, it must be processed at the gateway
    or higher level joint infrastructure. To make the system response time shorter,
    it is necessary to fully localize the data, which will greatly improve the efficiency
    of the IoT system. Powerful microcontrollers make the on-chip system of smart
    sensors more and more perfect. For example, the flash microcontroller produced
    by AD has built-in 64-KB program flash and 4-KB data flash, 2304 bytes of data
    RAM, and a large number of on-chip peripherals such as 12-bit ADC/DAC (analog
    to digital converter/digital to analog converter), time interval counter, watchdog
    timer, and so on. The 8052 core is used with a running cycle of up to 20 MHz.
    This level of system-on-a-chip is sufficient to support lighter weight cryptographic
    operations. Because the sensor network management on the IoT generally uses 16/32-bit
    advanced RISC machines-reduced instruction set processor + embedded Linux architecture,
    coupled with full support of power and hardware, it is fully capable of providing
    higher security encryption protection, the operation of which is basically equivalent
    to a personal computer. Foreign researchers have conducted in-depth research,
    summarized the available encryption elements of the various layers of the IoT
    from the research results, and made a relatively reliable recommendation (see
    Table 2). Table 2. Encryption elements of each layer of the Internet of Things.   Sensor
    Node Gateway Joint architecture Add and decrypt PRESENT CLEFIA ASE RSA Algorithm
    mCRYPTON AES ECC Hash function DM-PRESENT PROP HMAC SHA-3 Key DH-512 DH-512 ECDH
    DH Exchange algorithm Digital signature ECDSA-163 ECDSA-233 DSA ECDSA-409 Expected
    problems to be solved To build an IoT security architecture based on the fog computing
    layer, the first issue is to choose the right fog computing hardware configuration.
    Locate the appropriate security measures and deploy the location to build and
    validate the appropriate encryption method. Using the new fog computing layer
    to test the existing lightweight encryption method for delay and power consumption
    performance, improve the safety factor by improving the existing simple encryption
    method or switching to a higher strength security algorithm to meet the above
    requirements. Afterward, we will strive to optimize the underlying architecture
    of the IoT system and consolidate and strengthen the basis of the IoT system by
    reducing the computational delays caused by the use of security measures without
    reducing the security indicators and increasing the power consumption. In order
    to build an IoT security system based on fog computing, all kinds of resources
    introduced from the fog computing layer must be fully used. On the basis of meeting
    existing safety measures, the safety intensity is maximized. The key issues that
    are expected to be addressed include the following four aspects. Security algorithm
    optimization strategy for hardware such as sensors According to the relevant data,
    the safety factor of the traditional sensors is not high enough because they only
    generate the corresponding digital measurement results according to the objective
    quantity collected by themselves, and then directly encrypt and upload the results.
    Now, there is a way to improve the safety factor of the sensor, which is to try
    to extract the unique ID of each sensor, and then modify the corresponding security
    algorithm in the sensor, so that the unique ID of the sensor is also used as the
    encryption calculation. The parameters will greatly improve the security strength
    of the output. Improvement strategies for lightweight security algorithms Due
    to the limitations of various resources on IoT terminals, lightweight security
    algorithms are still the most widely used methods for IoT terminals. If the IoT
    terminal can introduce more computing power and space through fog computing, it
    has enough ability to support security algorithms with higher security strength
    and more complex calculation. In this way, IoT terminals can greatly improve their
    computing power and security performance. However, in order to realize this idea,
    it is necessary to properly improve and implement the security algorithm based
    on the full study, understand the existing lightweight security algorithms, speed
    up the operation, improve the security strength, and reduce energy consumption.
    Measurement of resource supply for fog nodes The fog computing layer is not just
    a simple collection between fog nodes, because multiple nodes can form a cluster
    to achieve efficient integration of resources. In order to grasp the maximum resource
    potential that the fog computing layer can provide, it is necessary to form a
    relatively stable node resource evaluation algorithm through appropriate stress
    testing, which is also to provide a feasible tool for future IoT network planning.
    Standards for measuring the degree of improvement in security algorithms The improvement
    effect of the security algorithm can be measured by many different indicators
    such as the length of the computing time of the device, the power consumption,
    and the strength of the anti-attack capability. In the continuous correction and
    continuous testing of security algorithms, researching the above sensors, nodes,
    gateways, and joint architecture for decryption will greatly benefit the improvement
    of security algorithms. With the rapid development of the IoT and Internet technologies,
    a large amount of data are generated, and how to use big data quickly, safely,
    and efficiently. Improvements can be made from hardware algorithm optimization
    such as sensors, improvement of security algorithms, measurement of fog node resource
    supply, and measurement of the degree of improvement of security algorithms to
    achieve the security level of fog calculation. In addition, some scholars have
    proposed a fog demand calculation enabled security demand response scheme for
    IoE (Internet of Energy) use consensus and access control encryption to prevent
    collusion attacks.19 Application of fog computing The fog computing architecture
    can have a variety of functions and components. It includes a fog computing gateway
    to receive data collected from IoT devices. It can also include a variety of wired
    and wireless fine-grained acquisition endpoints, including rugged routers and
    other switching devices. In other aspects, it may also include a client device
    and a gateway to access the edge node. In addition, higher level fog computing
    architectures will reach out to core networks and routers, and eventually reach
    global cloud services and server systems. The Open Fog Alliance’s Development
    Reference Architecture Group has proposed three goals for the development of the
    fog framework. The fog environment is horizontally scalable, which means it will
    support vertical applications in multiple industries; it can achieve coherent
    work from cloud to object; it is a system-level technology that will gradually
    evolve from objects and network edges. Taking intelligent driving as an example,
    the fog computing can complete the calculation task with strong time requirements.
    Below, we give the application of fog computing in intelligent driving. Intelligent
    driving demonstration application The smart driving demonstration application
    is shown in Figure 4. In the traditional driving mode, the position information
    of the vehicle is obtained from the satellite through the GPS (global positioning
    system) sensor, and the information is sent to the cloud data center of the navigation
    software. After the data center collects the data, it is carefully calculated
    to obtain the navigation information and send the information to the vehicle through
    the network. Due to the limitation of the delay and security of the network, the
    information obtained by such a method is relatively extensive, can only roughly
    show the driving paths of the roads through which the vehicle passes, and cannot
    perform the behaviors of acceleration, deceleration, and avoidance of the vehicle
    in real-time judging, so that unmanned driving cannot be achieved under such conditions.
    Compared with the traditional driving mode, the intelligent driving can obtain
    the real-time situation of the road through the sensing device such as the camera
    and the ultrasonic, thereby achieving the driverless driving of the vehicle more
    safely. The key issue that needs to be addressed most in these scenarios is the
    need to quickly transfer, process, and verify the collected information. Figure
    4. Intelligent driving demonstration application. In the specific application
    of fog computing, the bottleneck of delay is likely to occur in network transmission
    and task processing. In fog computing, network transmission mainly involves networks
    from users to fog nodes, between fog nodes, and from fog nodes to cloud data centers.
    Since the fog node needs to be responsible for the processing of delay-sensitive
    tasks, the transmission quality of the end user’s wireless access network to the
    fog node is particularly critical. In smart driving, the navigation information
    of the vehicle has little requirement for delay and can therefore be handled by
    the remote cloud data center. However, in order to avoid other vehicles and pedestrians
    during driving, there is a high demand for delay, and an accident may occur with
    a slight delay. Therefore, data collection and processing must be performed in
    the near-ground fog node. However, the transmission speed and signal quality of
    current wireless networks still cannot meet such requirements. In the future,
    when fifth-generation (5G) technology matures and commercializes, it can be used
    for atomization calculations in applications such as smart driving, which is extremely
    sensitive to time delay, because 5G transmission speed is 10 times faster than
    4G (fourth generation). Therefore, an important research direction in the future
    is to combine the fog computing of 5G technology. In the task processing, the
    existing resource allocation algorithm is summarized to enable the fog computing
    service provider to complete the task more efficiently. Due to the limited computing
    power of the vehicle itself, the task can be migrated to a fog node outside the
    vehicle for execution. Both VM migration and container migration require a large
    amount of information to be moved, resulting in unacceptable delays. The current
    research on virtualization technology for fog computing is still in a blank stage.
    In addition, because the fog computing needs to deal with the actual network environment,
    the environmental changes are more serious and have a certain time and space.
    This needs to be solved by an adaptive algorithm, and it is not recommended to
    presuppose the distribution. The current adaptive algorithm is mainly implemented
    by the reinforcement learning algorithm, but the method needs to consume a large
    amount of computing resources to achieve the adaptive effect. Therefore, its applicability
    in fog computing is questionable. In addition, since the position of the vehicle
    varies greatly over time in smart driving, this change may also introduce additional
    transmission delays. Therefore, how to use an efficient and low-cost adaptive
    scheduling algorithm to select the appropriate atomization node for migration
    and enable information users to obtain data as soon as possible is one of the
    urgent problems to be solved. Since fog nodes are mainly deployed in the open
    scene of intelligent driving, if criminals steal information or information is
    tampered with, it will have disastrous consequences.20 For example, if the rear
    car has made a decision to prepare for overtaking, but the front car did not receive
    the information in time or received the error message and failed to avoid it in
    time, it is likely to cause a traffic accident. So the key to this technology
    is to ensure the integrity and availability of the message. Although the current
    literature has analyzed the possible aggressive behaviors in fog computing, the
    delay and robustness of the proposed solution in specific applications has not
    been tested. Therefore, efficient encryption and verification algorithms in fog
    computing will also be the focus of research. Industrial Internet demonstration
    application Current industrial production is primarily based on cloud computing.
    However, in practice, it has been found that cloud server latency is too large
    and many fine operations cannot be completed on time (e.g. cutting micro-components).
    In addition, the amount of data collected by the underlying enterprises is increasing,
    and the backbone of the enterprise is also being tested. The industrial Internet
    demo application is shown in Figure 4. To address these issues, with latency-sensitive
    applications and big data feature extraction, organizations can deploy fog layer
    computing and storage devices between end devices and cloud data centers. In addition
    to the requirements for time delay and security, this also puts higher requirements
    on the unity of the platform and the synergy between clouds.21,22 First, because
    the underlying components involved in the industrial production environment are
    more complex, it is necessary to establish a unified control platform to effectively
    cover and connect the cloud architecture,23 which allows data collection and control
    of these components. At the same time, the software-defined fog node group is
    realized, which effectively covers and connects the cloud platform, heterogeneous
    network, and large-scale terminal equipment, and forms a standard API interface
    and specification with cloud fusion capability.24 However, the current research
    on unified interfaces is still in its infancy. At the same time, research on the
    number and location of controller deployments is still insufficient to manage
    resources such as networking, storage, and computing.25 These are all issues that
    need to be solved in the future. Second, in addition to delay-sensitive applications,
    fog nodes in industrial production environments require preliminary feature extraction
    for processing data submitted to the cloud data center.26 To reduce the load on
    the backbone of the enterprise. This involves key technologies for cloud convergence.27,28
    In this technology, it is necessary to study which tasks the fog layer will submit
    to the cloud data center and the status of submission to the cloud data center,
    and which server is submitted to the cloud data center, through which route submissions
    and other core issues. Prospects and conclusion Fog computing is still in the
    early stages of official deployment, but various application scenarios are considered
    ideal for fog computing applications. The following is the development of the
    combination of fog computing and the IoT in several areas: Connected cars: the
    emergence of semi-automatic and self-driving vehicles will only result in more
    and more data being generated by the vehicle. Independent driving of a car requires
    the ability to analyze certain data locally, such as the environment, driving
    conditions, and direction. Other data may need to be sent back to the manufacturer
    to help improve vehicle maintenance or track vehicle usage. The fog computing
    environment supports communication of all of these data sources in the edge (vehicle)
    and communication with the terminal (manufacturer). Smart City and Smart Grid:
    similar to connected cars, power systems are increasingly using real-time data
    for more efficient operation of the system. Sometimes, these data are located
    in remote areas, and if you want to process the data, you need to be close to
    where the data were generated. At other times, data from a large number of sensors
    need to be brought together. To solve both problems at the same time, the fog
    computing architecture can be designed. Real-time analysis: from manufacturing
    systems that respond when events occur, to financial institutions that use real-time
    data to inform transaction decisions or monitor fraud, a large number of application
    scenarios require real-time analysis. The fog computing deployment helps to transfer
    data between the data creation location and the run location. Research on IoT
    security system based on fog computing has important theoretical research significance.
    At the same time, it has a very wide application prospect in the field of data
    traceability and integrity of IoT system, identity authentication, credibility
    management, confidentiality, and privacy protection, and also has very important
    engineering value. The improvement of the IoT security system can win more trust
    from users in the IoT system and is of great significance to the development and
    promotion of the IoT itself. Declaration of conflicting interests The author(s)
    declared no potential conflicts of interest with respect to the research, authorship,
    and/or publication of this article. Funding The author(s) disclosed receipt of
    the following financial support for the research, authorship, and/or publication
    of this article: This research was supported by the Nature Science Foundation
    of China No. 61701020 and No. U1603116. ORCID iD Trung Dong Mai https://orcid.org/0000-0001-8956-8521
    Footnote Handling Editor: Jinsong Wu References 1. Mandl KD, Simons WW, Crawford
    WC, et al. Indivo: a personally controlled health record for health information
    exchange and communication. BMC Med Inform Decis 2007; 7(1): 25–25. GO TO REFERENCE
    Crossref PubMed Google Scholar 2. Kartheek DN, Bhushan B. Security issues in fog
    computing for internet of things. In: Goundar S, Bhushan SB, Rayani PK (eds) Architecture
    and security issues in fog computing applications. Hershey, PA: IGI Global, 2019,
    pp.53–63. GO TO REFERENCE Google Scholar 3. Atlam H, Walters R, Wills G. Fog computing
    and the internet of things: a review. Big Data Cogn Comput 2018; 2(2): 10. GO
    TO REFERENCE Crossref Google Scholar 4. Dsouza C, Ahn GJ, Taguinod M. Policy-driven
    security management for fog computing: preliminary framework and a case study.
    In: Proceedings of the 2014 IEEE 15th international conference on information
    reuse and integration (IEEE IRI 2014), Redwood City, CA, 13–15 August 2014, pp.16–23.
    New York: IEEE. GO TO REFERENCE Google Scholar 5. Alrawais A, Alhothaily A, Hu
    C, et al. Fog computing for the internet of things: security and privacy issues.
    IEEE Internet Comput 2017; 21(2): 34–42. GO TO REFERENCE Crossref Google Scholar
    6. Thota C, Sundarasekar R, Manogaran G, et al. Centralized fog computing security
    platform for IoT and cloud in healthcare system. In: Information Resources Management
    Association (ed.) Fog computing: breakthroughs in research and practice. Hershey,
    PA: IGI Global, 2018, pp.365–378. GO TO REFERENCE Crossref Google Scholar 7. Alhazmi
    OH, Aloufi KS. Fog-based internet of things: a security scheme. In: Proceedings
    of the 2019 2nd international conference on computer applications & information
    security (ICCAIS), Riyadh, Saudi Arabia, 1–3 May 2019, pp.1–6. New York: IEEE.
    GO TO REFERENCE Google Scholar 8. Moustafa N. A systemic IoT-fog-cloud architecture
    for big-data analytics and cyber security systems: a review of fog computing,
    2019, https://arxiv.org/ftp/arxiv/papers/1906/1906.01055.pdf GO TO REFERENCE Google
    Scholar 9. Zhang PY, Zhou MC, Fortino G. Security and trust issues in fog computing:
    a survey. Future Gener Comp Sy 2018; 88: 16–27. GO TO REFERENCE Crossref Google
    Scholar 10. Wen Z, Yang R, Garraghan P, et al. Fog orchestration for internet
    of things services. IEEE Internet Comput 2017; 21(2): 16–24. GO TO REFERENCE Crossref
    Google Scholar 11. Liu FC, Liu YL, Jin DH, et al. Research on workshop-based positioning
    technology based on internet of things in big data background. Complexity 2018;
    2018: 7875460. GO TO REFERENCE Crossref Google Scholar 12. Shen S, Huang L, Zhou
    H, et al. Multistage signaling game-based optimal detection strategies for suppressing
    malware diffusion in fog-cloud-based IoT networks. IEEE Internet Things 2018;
    5: 1043–1054. GO TO REFERENCE Crossref Google Scholar 13. Mulfari D, Celesti A,
    Villari M. A computer system architecture providing a user-friendly man machine
    interface for accessing assistive technology in cloud computing. J Syst Software
    2015; 100: 129–138. GO TO REFERENCE Crossref Google Scholar 14. Wang D, Fan J,
    Fu H, et al. Research on optimization of big data construction engineering quality
    management based on RNN-LSTM. Complexity 2018; 2018: 9691868. GO TO REFERENCE
    Google Scholar 15. Sharma PK, Chen MY, Park JH. A software defined fog node based
    distributed blockchain cloud architecture for IoT. IEEE Access 2017; 6: 115–124.
    GO TO REFERENCE Crossref Google Scholar 16. Massonet P, Deru L, Achour A, et al.
    Security in lightweight network function virtualisation for federated cloud and
    IoT. In: Proceedings of the 2017 IEEE 5th international conference on future internet
    of things and cloud, Prague, 21–23 August 2017, pp.148–154. New York: IEEE. GO
    TO REFERENCE Google Scholar 17. Li G, Wu J, Li J, et al. Service popularity-based
    smart resources partitioning for fog computing-enabled industrial internet of
    things. IEEE T Ind Inform 2018; 14(10): 4702–4711. GO TO REFERENCE Crossref Google
    Scholar 18. Yang AM, Li SS, Lin HL, et al. Edge extraction of mineralogical phase
    based on fractal theory. Chaos Soliton Fract 2018; 117: 215–221. GO TO REFERENCE
    Crossref Google Scholar 19. Li G, Wu J, Li J, et al. Fog computing-enabled secure
    demand response for Internet of energy against collusion attacks using consensus
    and ACE. IEEE Access 2018; 6: 11278–11288. GO TO REFERENCE Crossref Google Scholar
    20. Dutta J, Roy S. IoT-fog-cloud based architecture for smart city: prototype
    of a smart building. In: Proceedings of the international conference on cloud
    computing, data science & engineering—confluence, Noida, India, 12–13 January
    2017, pp.237–242. New York: IEEE. GO TO REFERENCE Google Scholar 21. Peralta G,
    Iglesias-Urkia M, Barcelo M, et al. Fog computing based efficient IoT scheme for
    the Industry 4.0. In: Proceedings of the 2017 IEEE international workshop of electronics,
    control, measurement, signals and their application to mechatronics, Donostia-San
    Sebastian, 24–26 May 2017, pp.1–6. New York: IEEE. GO TO REFERENCE Google Scholar
    22. Eyre JM, Dodd TJ, Freeman C, et al. Demonstration of an industrial framework
    for an implementation of a process digital twin. In: Proceedings of the ASME 2018
    international mechanical engineering congress and exposition, Pittsburgh, PA,
    9–15 November 2018, p.V002T02A070. New York: American Society of Mechanical Engineers.
    GO TO REFERENCE Google Scholar 23. Fu H, Li Z, Liu Z, et al. Research on big data
    digging of hot topics about recycled water use on micro-blog based on particle
    swarm optimization. Sustainability 2018; 10: 2488. GO TO REFERENCE Crossref Google
    Scholar 24. Ong SP, Cholia S, Jain A, et al. The Materials Application Programming
    Interface (API): a simple, flexible and efficient API for materials data based
    on REpresentational State Transfer (REST) principles. Comp Mater Sci 2015; 97(5):
    209–215. GO TO REFERENCE Crossref Google Scholar 25. Sutherland JC, Monteleone
    DC, Sutherland BM. Computer network for data acquisition, storage and analysis.
    J Photoch Photobio B 1997; 40(1): 14–22. GO TO REFERENCE Crossref PubMed Google
    Scholar 26. Goldstein SW. Information processing using a population of data acquisition
    devices. Patent application 10/045,321, USA, 2018. GO TO REFERENCE Google Scholar
    27. Duan Q, Yan Y, Vasilakos AV. A survey on service-oriented network virtualization
    toward convergence of networking and cloud computing. IEEE T Netw Serv Man 2012;
    9(4): 373–392. GO TO REFERENCE Crossref Google Scholar 28. Son J, Buyya R. A taxonomy
    of software-defined networking (SDN)-enabled cloud computing. ACM Comput Surv
    2018; 51(3): 59. GO TO REFERENCE Crossref Google Scholar   Related content Similar
    articles: Open Access Adoption of cloud computing as innovation in the organization
    Show details  Open Access Sensor-cloud data acquisition based on fog computation
    and adaptive block compressed sensing Show details  Free access Fog Computing
    and Edge Computing Architectures for Processing Data From Diabetes Devices Connected
    to the Medical Internet of Things Show details        View more Sage recommends:
    SAGE Knowledge Entry Cloud Computing Show details Show details SAGE Knowledge
    Entry Cloud Computing Show details View more Also from Sage CQ Library Elevating
    debate Sage Data Uncovering insight Sage Business Cases Shaping futures Sage Campus
    Unleashing potential Sage Knowledge Multimedia learning resources Sage Research
    Methods Supercharging research Sage Video Streaming knowledge Technology from
    Sage Library digital services About About Sage Journals Accessibility guide Historical
    content Advertising disclaimer Permissions Terms of use Sage discipline hubs Sage
    microsites Information for Authors Editors Librarians Promoters / Advertisers
    Researchers Reviewers Societies Frequently asked questions International Journal
    of Distributed Sensor Networks ISSN: 1550-1329 Online ISSN: 1550-1477 About SageContact
    usCCPA - Do not sell my personal informationCCPA Privacy Policy Copyright © 2024
    by SAGE Publications Ltd unless otherwise noted. Manuscript content on this site
    is licensed under Creative Commons Licenses We value your privacy We and our partners
    store and/or access information on a device, such as cookies and process personal
    data, such as unique identifiers and standard information sent by a device for
    personalised advertising and content, advertising and content measurement, audience
    research and services development. With your permission we and our partners may
    use precise geolocation data and identification through device scanning. You may
    click to consent to our and our 1437 partners’ processing as described above.
    Alternatively you may click to refuse to consent or access more detailed information
    and change your preferences before consenting. Please note that some processing
    of your personal data may not require your consent, but you have a right to object
    to such processing. Your preferences will apply to this website only. You can
    change your preferences or withdraw your consent at any time by returning to this
    site and clicking the "Privacy" button at the bottom of the webpage.'
  inline_citation: '>'
  journal: International journal of distributed sensor networks
  limitations: '>'
  pdf_link: https://journals.sagepub.com/doi/pdf/10.1177/1550147719888166
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Research on Internet of Things security architecture based on fog computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2018.2876088
  analysis: '>'
  authors:
  - Md. Asif-Ur-Rahman
  - Fariha Afsana
  - Mufti Mahmud
  - M. Shamim Kaiser
  - Muhammad Ejaz Ahmed
  - Omprakash Kaiwartya
  - Anne James
  citation_count: 149
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathZoom.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet
    of Things Journal >Volume: 6 Issue: 3 Toward a Heterogeneous Mist, Fog, and Cloud-Based
    Framework for the Internet of Healthcare Things Publisher: IEEE Cite This PDF
    Md. Asif-Ur-Rahman; Fariha Afsana; Mufti Mahmud; M. Shamim Kaiser; Muhammad R.
    Ahmed; Omprakash Kaiwartya; Anne James-Taylor All Authors 144 Cites in Papers
    4769 Full Text Views Open Access Under a Creative Commons License Abstract Document
    Sections I. Introduction II. State-of-the-Art of IoHT Frameworks III. Proposed
    IoHT Framework IV. Optimal Resource Allocation and Load Balancing V. Results Show
    Full Outline Authors Figures References Citations Keywords Metrics Footnotes Abstract:
    Rapid developments in the fields of information and communication technology and
    microelectronics allowed seamless interconnection among various devices letting
    them to communicate with each other. This technological integration opened up
    new possibilities in many disciplines including healthcare and well-being. With
    the aim of reducing healthcare costs and providing improved and reliable services,
    several healthcare frameworks based on Internet of Healthcare Things (IoHT) have
    been developed. However, due to the critical and heterogeneous nature of healthcare
    data, maintaining high quality of service (QoS)-in terms of faster responsiveness
    and data-specific complex analytics-has always been the main challenge in designing
    such systems. Addressing these issues, this paper proposes a five-layered heterogeneous
    mist, fog, and cloud-based IoHT framework capable of efficiently handling and
    routing (near-)real-time as well as offline/batch mode data. Also, by employing
    software defined networking and link adaptation-based load balancing, the framework
    ensures optimal resource allocation and efficient resource utilization. The results,
    obtained by simulating the framework, indicate that the designed network via its
    various components can achieve high QoS, with reduced end-to-end latency and packet
    drop rate, which is essential for developing next generatione-healthcare systems.
    Published in: IEEE Internet of Things Journal ( Volume: 6, Issue: 3, June 2019)
    Page(s): 4049 - 4062 Date of Publication: 14 October 2018 ISSN Information: DOI:
    10.1109/JIOT.2018.2876088 Publisher: IEEE Funding Agency: CCBY - IEEE is not the
    copyright holder of this material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction With the sudden growth of electronic devices and improved connectivity
    of the Internet, nowadays more devices are connected to the Internet than people
    [1]. This has been facilitated by a concept, called “Internet of Things” or IoT,
    which was coined back in 1999 by Kevin Ashton and was meant to connect Radio-frequency
    identification (RFID) devices in the supply chain of a consumer goods manufacturer
    [2]. However, currently the term is used in almost every field to describe a network
    of communicable devices [3], [4]. In recent years, IoT enabled devices have emerged
    exponentially and the estimated number of connected devices are to exceed 28 billion
    by 2021 [see Fig. 1(a)]. As a technology, the IoT has been adopted at a varied
    pace among different industries and sectors with their respective applications.
    The healthcare sector, which is slow in adopting new technologies, however, shows
    an incredible estimated growth and is expected to have over 50 million connected
    devices worldwide by 2021 [see Fig. 1(b)] [5]. Also, different application domains
    in healthcare have shown varied opportunities in applying IoT and, as per the
    current trend, the smart healthcare products application domain [e.g., smart pills,
    smart dispensing devices and syringes, smart monitoring devices, smart RFID cabinets,
    electronic health record (eHR), etc.] is the hottest [see Fig. 1(c)] [6]. Fig.
    1. Global connectivity through IoT devices. (a) Global estimation of connected
    IoT devices by the year 2021. (b) Global estimation of IoHT devices by the year
    2021. (c) Heatmap of current IoHT application opportunities. Show All Considering
    the increase of life expectancy, the Population Reference Bureau projected that
    by 2050 the World’s population will grow by 31% reaching 9.8 billion [7]. With
    this unprecedented growth rate, the older population (aged 65 and over) is expected
    to raise 16% more than the total population between 2025 and 2050 [8]. This will
    eventually result in increased vulnerability of the aging population toward chronic
    diseases which is expected to account for 73% of all deaths and 60% of the global
    burden diseases by 2020 [9]. On the other hand, as predicted by the World Health
    Organization, there will be a distressing shortage of 12.9 million healthcare
    workforce worldwide by 2035 [10]. Hence, energy-efficient, low cost, and scalable
    healthcare solutions are needed to meet the shortage of healthcare workforce to
    support disease prevention, treatment, care, and cure. Leveraging the fast advancements
    in information and communication technology, electronic healthcare ( e -healthcare)
    emerged itself as a revolutionary new paradigm [11]. Following the technological
    improvements, e -healthcare is rapidly swapping the means of conventional healthcare
    [12], and fostering development of novel healthcare applications [13]. In this
    ever changing scenario of healthcare, IoT plays a key role [14] in redefining
    e -healthcare as the Internet of Healthcare Things (IoHT), where both people and
    devices interact, communicate, collect, and exchange data through integration
    of physical objects, hardware, softwares, and computing devices [15]. Connecting
    the digital world to the physical world [16], IoHT—with the help of pervasive
    and ubiquitous computing, and e -healthcare systems—allows healthcare devices
    (e.g., Fitbits, sensors, Bluetooth, mobile devices, etc.) to collect health related
    information (e.g., blood oxygen saturation, blood pressure, weight, glucose level,
    respiratory and heart rate, etc.) [17], [18] over an extended period of time and
    save as eHR. However, the various players of the e -healthcare ecosystem generate
    a large amount of heterogeneous, multidimensional and multimodal data databasing
    which is a big challenge [19], [20]. In North America, during 2010 to 2015, the
    volume of healthcare data raised from 3 million Terabyte (TB) to 14 million TB
    [see Fig. 2(a)] [21] with general unstructured data and eHR had an incredible
    increment from 0.95 millon TB in 2010 to 3.26 million TB in 2015 [see Fig. 2(b)]
    and from 0.22 millon TB in 2010 to 2.36 million TB in 2015 [see Fig. 2(c)], respectively.
    In order to process this huge volume of healthcare data, systems with enormous
    storage and processing power are needed which can analyze the big data, thus,
    cloud computing was used [22], [23]. Therefore, to shape next generation of e
    -healthcare systems, IoHT, big data, and cloud computing needed to converge to
    create the IoHT ecosystem [24]. Cloud computing plays a prominent role in the
    IoHT ecosystem by providing ubiquitous and on-demand access to shared pool of
    reconfigurable resources. Nonetheless, the current number of growing IoHT devices
    cause increasing latency due to network overloading, thus, reducing the suitability
    of the system for real-time applications. To overcome this situation, the concept
    of fog computing was introduced, by Cisco Systems Inc., in 2012, which complemented
    the cloud by providing a substantial amount of storage, communication control,
    configuration, measurement and management at the edge devices [25], [26]. The
    concept of fog computing is to deploy cloud-like services closer to user end for
    local storage and preliminary data processing to reduce congestion and latency.
    The added flexibility of computation, geographical distribution and user mobility
    support make fog computing appealing for healthcare related applications which
    require secure data transfer with low latency [27]. However, fog computing architecture
    may susceptible to single point of failure as it mostly depends on gateway device
    [28]. To further increase the response time by reducing the data traffic on fog
    nodes in local networks, mist computing can be used to create an integrated network
    [29] which bridges the IoHT devices to the virtual computing world, thus, reducing
    the response latency and enhancing the performance and lifetime of IoHT devices.
    Fig. 2. Estimated data volume generated by different healthcare applications at
    North America between 2010 and 2015. (a) Aggregated volume of healthcare data,
    (b) volume of general unstructured data only, and (c) volume of electronic health
    records data only. Show All Different data types and applications of the IoHT
    ecosystem require different processing and response times. To this aim, this paper
    proposes a novel heterogeneous cloud-based IoHT communication framework supported
    by fog and mist computing. This heterogeneous IoHT framework consists of five
    layers—perception, mist, fog, cloud, and application. The novelty of this architecture
    lies in its capability to handle separately data routing paths for different data
    types coming from real-time as well as conventional data sources, optimally balance
    the network load on demand, and optimally allocate network resources as needed.
    The obtained results show that the proposed IoHT framework provides better quality
    of service (QoS) with low power consumption and reduced latency, thus, improving
    the existing e -healthcare systems. SECTION II. State-of-the-Art of IoHT Frameworks
    Majority of the contributions concerning IoHT frameworks have been in integrating
    IoT technology to healthcare systems. Islam et al. [14] surveyed diverse aspects
    of IoT-based healthcare technologies with descriptions of various existing network
    architectures, platforms, industrial trends, and applications which facilitate
    healthcare solutions in the context of IoT. Additionally, the trends of IoT-based
    healthcare research activities were examined to showcase how IoT can address various
    healthcare issues like—pediatric and elderly care, private healthcare, chronic
    disease supervision and fitness management, and pointed out different research
    problems along with current security requirements and challenges. Through a brief
    discussion on an intelligent collaborative security model, the authors provided
    means for anomaly detection. The survey concluded with some e -health and IoT
    policies and regulations across the world to healthcare stakeholders better understand
    IoT-based healthcare technologies for sustainable development [14]. IoT enabled
    personalized healthcare systems (PHS) were systematically reviewed by Qi et al.
    [30], where the authors focused on identifying the breadth and diversity of existing
    IoT enabled PHS, the underlying key technologies along with their applications
    and case studies on healthcare, and listed future research trends and challenges.
    Farahani et al. [31] surveyed the existing literature on IoT related e -healthcare
    systems from a viewpoint of transitioning from the conventional clinic-centric
    treatment to patient-centric treatment. The authors discussed existing challenges
    of IoT-based e -healthcare systems and proposed a multilayer e -healthcare ecosystem
    with their respective applications, such as, assisted living, mobile health, warning
    systems, e-medicine, and population monitoring. Kraemer et al. [32] were among
    the first to survey the benefits and challenges of fog computing within pervasive
    healthcare applications. The authors provided a summary of deployment scenarios,
    requirement of future healthcare and variety of fog processing tasks. Mutlag et
    al. [33] performed a systematic literature review of the existing technologies
    focusing on fog computing’s usage in the field of healthcare IoT systems. The
    study further identified the flaws of the current fog-based frameworks and provided
    some recommendations toward more secure and reliable IoT systems. Ahmad et al.
    [34] proposed HealthFog, a fog computing-based framework, capable of successfully
    removing additional E2E communication costs in comparison to their counterparts.
    Their framework also ensured enhanced privacy and security using cryptographic
    primitives. To enhance reliability of IoT architecture for healthcare, Rahmani
    et al. [35] combined fog computing with smart e-Health gateways and demonstrated
    that the proposed system is capable of coping with many challenges of pervasive
    healthcare systems. They also implemented it as an IoT-based early warning score
    health monitoring system. In addition to the studies mentioned above, other reported
    works on IoT-based healthcare include: emergency medical service [36], smart rehabilitation
    system [37], do-it-yourself solution focusing on patient oriented infrastructure
    development [38], smart hospital system [39], anomaly detection [40], body sensor
    network-based healthcare system [41], cardiac arrhythmia management system [42],
    and self-aware early warning system [43]. Laplante and Laplante discussed about
    their view on negetive effects of IoT in healthcare and showcased an example of
    the dissociation between patient and caregiver resulting in loss of care [44].
    With the growing amount of data, their processing and storage requirements also
    escalated. To tackle this need, the IoT-based healthcare systems were integrated
    into more extensive cloud computing architectures. This integration of “IoT” and
    “Cloud computing” has contributed toward the development of many innovative solutions
    [45]–[47] spanning in different fields including e -healthcare. With the aim of
    seamless integration of various remote health monitoring techniques (e.g., sensing
    analytics, visualization, etc.), Hassanalieragh et al. [48] discussed on the existing
    challenges related to such integration and their views on integrating those techniques
    in the clinical practice. Biswas et al. introduced e -health cloud, a three-layered
    cloud-based framework—capable of mining eHR data—where the network layer was designed
    using Rich Internet Application1-based client, the server layer with SimpleDB,2
    and a logic layer [49]. Pathinarupothi et al. [50] presented a multilayered architecture
    consisting of IoT devices coupled with body sensors which was implemented to remotely
    monitor cardiac patients. The cloud HealthIIoT (Health-care Industrial IoT) framework
    proposed by Hossain and Muhammad [51] transmitted healthcare data securely to
    the cloud to be accessed by healhcare professionals, and was validated through
    an IoT driven ECG-based health monitoring application. Suciu et al. proposed an
    e -health architecture based on exalead cloudview3 which securely integrates big
    data analytics with cloud-based Remote Telemetry Units4 [52]. Ma et al. [53] proposed
    a four-layered big health application, system supported by IoHT and big data,
    for remote disease diagnosis, smart clothing-based healthcare, LTE assisted telemedicine,
    and robotic interactions. Similar frameworks include: monitoring systems for chronic
    diseases, such as cardiovascular and respiratory diseases through IoT sensors
    [54], mobile healthcare systems for patient monitoring using big data analytics
    applied on sensor data [55], [56], heterogeneous healthcare big data analytics
    system for decision making in risk management and patient care [57]. The cloud
    can also be deployed to process and manage the IoT data online [58], [59]. Dehury
    and Sahoo [60] implemented a cloud-based service management framework for analyzing
    real-time IoT data. Various cloud-IoT (cIoT) frameworks have been suggested for
    pervasive healthcare [61]–[63]. A case study of voice pathology monitoring was
    proposed using an cIoT model [64]. Bagula et al. [65] introduced cIoT model to
    prioritize situation aware patients. Hasan et al. [66] introduced a cIoT model,
    called Aura, which allowed mobile clients to create ad-hoc clouds using IoT devices
    in their adjacent environments and provided the clients full control of the range
    of analyses to be performed regardless of their physical locations. Many studies
    have been reported which utilized the cIoT model to remotely monitor patients
    [67]–[69] using: ECG android application [70] along with other helathcare data
    [51], FIWARE5 platform [71], and wearable sensors (IoT) and body area network
    [72]. Additionally, other cIoT frameworks include: personnel altering system regarding
    lifestyle diseases from physical activity data [73], [74], collecting real-time
    patient data from wireless body area network [75], accumulating physiological
    and healthcare data smart clothing with IoT sensors [76], [77], selecting personalized
    treatment plan [78], providing personalized medical diagnosis [79], supporting
    the physically challenged with assistive devices [80]. The transmission and processing
    latency is the major bottleneck for real-time handling of data in the cloud. Dastjerdi
    and Buyya [81] proposed fog computing along with edge and cloud computing to handle
    the big data generated by IoT sensors. Shi et al. [82] outlined the various characteristics
    of fog computing to manage real-time IoT healthcare data. A low-cost fog-IoT healthcare
    system was presented which collected the ECG, respiration rate, and body temperature
    using energy-efficient sensor nodes and analyzed those data for automatic decision
    making which can be given to appropriate caregivers in real-time [83]. SECTION
    III. Proposed IoHT Framework Large scale IoT implementation results in large number
    of connected devices. By default, most of these connected devices are with limited
    processing power and resources. But, the voluminous and heterogeneous data generated
    by these devices require efficient and data type specific processing. Centralized
    cloud-based IoT scheme brings out an effective solution in this regard. However,
    solo cloud dependent processing is constrained by latency and power consumption
    issues which can be solved—up to certain extent—by introducing a fog layer. The
    fog assisted IoT framework with smart gateways (as proposed in [35]) is an approach
    to enhance reliability, energy-efficiency and performance of IoT frameworks. Nonetheless,
    there are still QoS issues with sensitive data transmission and there is no need
    to process various types of data (e.g., delay-sensitive and loss-sensitive) in
    each layer of a framework. An effective solution to this problem is to allow the
    framework to be able to handle different types of “on demand” data processing
    in different layers. This has been achieved in the proposed framework consisting
    of five layers (perception, mist, fog, cloud, and application). The introduction
    of an additional layer (i.e., the mist layer) to the existing fog-based architecture
    reduces data volume to be transmitted by the IoT devices through rule-based preprocessing
    of data. This reduction in data volume in turn reduces power consumption of the
    IoT devices, and latency (processing as well as transmission) and computational
    complexity of the framework. Therefore, the proposed IoHT framework is capable
    of selecting appropriate data transmission policies based on the disparate data
    sources to minimize latency; ensuring optimal resource utilization through delegating
    and delivering processes to layers with relatively less loads; guaranteeing minimal
    transmission delay through appropriate load balancing; and assuring most favorable
    data-sensitive resource allocation for prioritized data transmission. The following
    sections describes the various components of the framework. A. Ecosystem An interoperable
    ecosystem consisting of diverse devices, applications, and back-end systems is
    essential for successful architectural design of an IoHT framework which will
    ensure undisrupted information flow for accurate and timely decision making [84],
    [85]. A conceptual overview of the proposed IoHT ecosystem is shown in Fig. 3.
    As the ecosystem diagram indicates, various IoHT stakeholders who reside at the
    outer circle (e.g., healthcare organizations and professionals, patients, applications,
    and information systems) connect to their relevant counterparts to the inner circles
    aiming seamless information exchange. Outer circle is the most interactive and
    responsive one with very little analytical capabilities. Gradually moving toward
    the inner circles, the analytical capabilities along with latency and data storage
    increase. So, to ensure delay tolerant data transmission of real-time data as
    well as big data, the proposed architecture adopts appropriate layer-specific
    data transmission polices. Fig. 3. Overview of an IoHT ecosystem with its various
    stakeholders which implements the proposed framework. Show All B. Network Architecture
    Fig. 4 shows the proposed IoHT framework’s architecture. The five layers are:
    1) perception layer; 2) mist layer; 3) fog layer; 4) cloud layer; and 5) application
    layer. Each of these layers has been designed with predefined functionalities
    relevant to the IoHT framework’s data transmission and processing pipeline. Fig.
    5 shows a block diagram with the functionality of individual layers. Fig. 4. Architecture
    of the proposed IoHT framework indicating different layers and possible connectivities
    among them. The arrow directions indicate the flow of data. Show All Fig. 5. Layer-wise
    functionality of the proposed IoHT framework. Show All 1) Perception Layer: The
    perception layer is the lowest layer of the proposed IoHT framework. This layer
    is responsible for recognizing physical objects, and gathering contextual and
    healthcare data from devices generating (near) real-time as well as nonreal-time
    data. The data are mainly measured from individuals and their surroundings through
    small sensors, embedded systems, RFID tags, and readers, small to medium to large
    diagnostic and healthcare devices, medical and clinical imaging devices, and any
    data acquisition and transmission enabled devices. These hardware devices are,
    in general, connected to the data communication network. Besides the real-time
    healthcare data, there are healthcare big data [e.g., structured eHR, electronic
    medical record (eMR), (non-)clinical/medical imaging data, unstructured clinical
    notes, etc.] which demand separate handling due to their requirement of advanced
    data analytics [86], [87]. In the proposed framework, both kinds of healthcare
    data are transmitted to specific overlaying layer (either mist or fog or cloud)
    based on the data type and their processing requirements. 2) Mist Layer: To facilitate
    time-critical data processing, the mist computing layer has been introduced in
    the model. Mist computing resides directly within the network fabric and operates
    on the extreme edge of it with the help of sensor and actuator controllers. This
    layer is responsible for performing basic rule-based preprocessing of the sensor
    data (e.g., data aggregation, fusion, and filtering). At the edge of the IoT network,
    a fair share of the “Things” are with limited resources (e.g., power, communication
    bandwidth, and memory). Mist computing contributes to optimal resource utilization
    of the Things. For example, since communication consumes ∼5× the power of computing,
    ensuring required transmission instead of on demand transmission will facilitate
    in optimizing the power consumption [88]. 3) Fog Layer: One of the main driving
    forces behind development of the IoT technology is the necessity to process data
    “on the fly” to detect anomalies, provide alerts at real-time, and activate necessary
    actions automatically. This clearly demands a system with high responsiveness
    and minimal latency. To this goal, using centralized cloud-based models are inappropriate
    due to their high latency. In such situations, decentralizing and delegating the
    processing loads on different layers based on the application’s demand is needed.
    The fog layer forms a decentralized architectural pattern for bringing computing
    resources and application services closer to the edge, thus, reducing the response
    latency. As for the functional components, the fog layer supports—local data storage,
    data filtering, data compression, data fusion, and intermediate data analytics
    to reduce disposable load on the cloud, improve system performance and QoS, and
    save backbone bandwidth. 4) Cloud Layer: The cloud layer is capable of connecting
    to perception layer, fog layer, and application layer. Aggregated healthcare data
    from fog layer are sent to the cloud layer for long-term storage, and big data
    and advanced analytics. Also data from nonsensor sources, such as eMR, eHR, e-prescription
    platform, etc. get seamlessly integrated at this layer. In order to extract meaningful
    insights from the heterogeneous healthcare data, the cloud layer performs various
    advanced data analytics including, machine learning, data mining, rule-based processing,
    and automated reasoning-based algorithms. However, delegating appropriate computing
    loads to fog layer and using cloud layer for computationally expensive operations
    will improve system performance. 5) Application Layer: The application layer is
    the topmost layer of the proposed IoHT framework. It provides user interfaces
    between the IoHT stakeholders/consumers and the framework itself to directly reflect
    the generated economic and social benefits. Through these user interfaces various
    healthcare applications are delivered to the respective stakeholders. This layer
    also provides access—subject to access rights and privileges—to relevant resources
    from the cloud or fog layer directly to the healthcare application developers
    and consumers. C. Data Transmission Policy To facilitate seamless communication
    of heterogeneous data, a data-centric transmission scheme has been utilized in
    the proposed five-layered architecture of the IoHT framework. The perception layer
    generates three possible types of delay-sensitive data, i.e., real-time, near-real-time,
    and offline/batch mode data. In order to achieve better QoS, reduced latency,
    and optimized power consumption, separate transmission paths for real-time data
    and big data have been used. Fig. 6 represents the transmission and processing
    flow of data in the proposed model. Based on data traffic and resource availability,
    the computational loads (e.g., rule-based preprocessing, pretrained machine learning,
    advanced machine learning, big data analytics, etc.) are delegated to an appropriate
    layer (either mist or fog or cloud) in the layered architecture. This resulted
    in different scenarios with specific transmission paths as detailed in the following
    sections and shown in Fig. 7. Fig. 6. Flowchart of data transmission and processing
    taking place at different layers of the IoHT framework. Show All Fig. 7. Possible
    data transmission and processing paths in the IoHT framework’s layer stack. Show
    All 1) Real-Time Data Transmission: a) Scenario 1: Many healthcare applications
    require data to be processed at real-time. In the proposed IoHT model, real-time
    data analytics are hosted at the closest possible location, where the data is
    generated. As indicated in Fig. 7 by the red-dashed lines with arrows, the generated
    time-sensitive sensor data are at first forwarded to the mist layer for preprocessing,
    followed by the fog layer for necessary intermediate analytics, and finally rendering
    decision to the application layer. For example, if a patient experiences high
    blood pressure fluctuations along with symptomatic discomforts, it is necessary
    to process the generated data and forward a decision to the caregiver as soon
    as possible to prevent a possible stroke. In this case, the preprocessed data
    from mist layer are further processed in fog layer and forwarded to the application
    layer for necessary actions by the stakeholders. b) Scenario 2: The intermediate
    data analytics performed at the fog layer is not sufficient for some healthcare
    applications. Rendering a decision for these types of applications may require
    big data analytics and advanced machine learning or long-term data storage for
    longitudinal studies. In those cases, data are offloaded to the cloud layer for
    the required processing, analysis, and storage. This transmission path is shown
    in Fig. 7 using the green dotted-dashed line with arrows. The data and the analysis
    results are usually stored in the cloud for further reference. Adverse drug reaction
    (ADR) service can be an example of this scenario. Medication for a particular
    disease needs diagnosis as well as patients previous history as ADR is inherently
    generic. So, in this case, data sensed from patient’s terminal are forwarded to
    mist layer for recognizing the drug. Later on, fog forwards the identified drug
    to the cloud, where after careful analysis of relevant eMR and allergy profiles
    the drug compatibility is decided and the decision is sent to the application
    layer to be accessed by the healthcare professionals. 2) Conventional Data Transmission:
    a) Scenario 3: Massive data generated from advanced medical instruments, test
    results, eMR requires data mining, predictive analysis, and other advanced analytics.
    Only cloud computing is capable of performing these computationally demanding
    processing. So, in this scenario, data from conventional sources are directly
    offloaded to the cloud for processing. This transmission path is indicated by
    the arrowed blue dotted lines in Fig. 7. An example of such a scenario is that,
    MRI produces thousands of high resolution images per examination which require
    more computation power and storage, and can be efficiently served only by the
    cloud. In this scenario, data are directly forwarded to the cloud without any
    processing or holding in the mist or fog layers. SECTION IV. Optimal Resource
    Allocation and Load Balancing The IoHT nodes in the perception layer collect the
    (near) real-time as well as nonreal-time healthcare data to monitor patients.
    These collected data are forwarded to the IoT hub(s) (also called access point
    or AP). Based on the traffic class and processing requirements, these data can
    be processed in the mist, fog, and cloud layers as discussed in Sections III-B
    and III-C. In the process of effective handling of these data, the end-to-end
    (E2E) delay, throughput, packet loss, energy efficiency are crucial for maintaining
    the QoS of the proposed IoHT framework. To handle these heterogeneous data efficiently
    while maintaining the high QoS, the network resources are to be dynamically allocated.
    To this goal, the proposed IoHT framework relies on software defined networking
    (SDN), which is a programmable network structure that can be deployed on the top
    of IoHT framework as a centralized/distributed control layer for resources (e.g.,
    bandwidth and buffer size) allocation, scheduling, routing, and flow control through
    SDN controller (SDNC) [89]. As SDN fulfills the requirements of various applications
    and workloads through network virtualization by decoupling control plane from
    data plane [90], it has been considered with the IoHT framework to manage the
    resource demand of exponentially growing IoT devices. A. Traffic Classification
    The perception layer of the IoHT framework (as discussed in Section III-B1) generates
    heterogeneous data or network traffic. In order to achieve better QoS, these network
    traffic are classified as the delay-sensitive ( DS ), loss-sensitive ( LS ), and
    both delay- as well as loss-sensitive (termed as “Mixed”) ( M ) traffic. This
    classification is mainly based on transmission data rate ( C ) and queuing delay
    ( tQ ), and is used to prioritize the network traffic. Table I shows various traffic
    classes, their service types, transmission priority ( P ), and exemplary applications.
    TABLE I Traffic Classification of IoHT Healthcare Data B. Resource Allocation
    In order to achieve better QoS, the objective is to reduce the time delay ( tD
    ) and packet drop rate ( Pkt drop ) during the transmission process. All the IoHT
    nodes in the mist layer achieve the minimum threshold requirement for both of
    these parameters through an optimal resource allocation. Fig. 8(a) illustrates
    an example scenario of the resource allocation problem. Fig. 8. Exemplary scenario
    of the IoHT framework with mist, fog, and cloud layers. The network is configured
    using SDN. The AP allocates resources based on the latency and packet drop rate
    demand of each IoHT nodes. Show All Consider the output link capacity of an AP
    is C , there are N IoT devices in a mist (see Fig. 8), each IoHT device has packet
    size of Pkt size . In order to ensure the QoS requirement of i th IoT device,
    the user requirement is <t D i , Pkt drop i > and the corresponding resource demand
    is < B d i , L d i > , where B d i and L d i are the bandwidth demand and buffer
    length demand of the i th IoHT user node (see Table II). As the allocated resource
    to i th IoHT device is proportional to the requirement of that user, the maximum
    resource ( Γ i ) awarded to the i th IoHT node by the SDN-based resource allocator
    is Γ i = = max[ B i C , L i L ] max[ B d i C B i B d i , L d i L L i L d i ]=max[
    D c i U c i , D l i U l i ] (1) View Source where D c i = B d i /C and D l i =
    L d i /L are the ratios of bandwidth demand of the i th node and the maximum capacity,
    and buffer length demand of the i th node and the total buffer length of AP, respectively.
    The U c i = B i / B d i and U l i = L i / L d i are the requirement to demand
    ratio of bandwidth and buffer length, respectively, for the i th node. TABLE II
    QoS Requirement and Corresponding Resource Demand to Achieve the QoS Requirement
    of the i th IoHT Node Using the M/D/1 queue model [91], the E2E delay tD includes
    the transmission delay tTx , processing delay tP , and queuing delay tQ which
    are calculated by tD= = tT x i +tP+tQ ∑ cl ∑ fog ∑ sen [ N pkt Pkt size C +( λ
    2μ(μ−λ) + 1 μ )+cλ] (2) View Source where λ and μ are the arrival and service
    rate, N pkt is the number of packets, c is the constant duration required to complete
    a job by a processor, sen refers to sensor and cl refers to the cloud. The packet
    drop occurs when the average queuing length E[ Q i ] is higher than demanded buffer
    length L d i / Pkt size . Based on [91], the packet drop rate is expressed by
    Pkt drop i = E[ Q i ]− L d i / Pkt size E[ Q i ] . (3) View Source Finally, the
    resource allocation optimization problem is formulated as max s.t  [( U c 1 ,
    U l 1 ),( U c 2 , U l 2 ),…,( U c N , U l N )]  ∑ n=1 N B n ≤C ∑ n=1 N L n ≤L.
    (4) View Source C. Load Distribution In the Fog/access layer, the E2E latency
    can be reduced by link distribution and link fusion techniques. As illustrated
    in Fig. 8, a link scheduler selects multiple links, distributes the traffic to
    reduce the E2E delay and finally aggregates the traffic at the other end of the
    access layer. If the link scheduler selects M links based on the demand of the
    IoHT users, the link adaptation optimization problem can be formulated as max
    s.t.  f(T,1/ Pkt drop )  ∑ m=1 M γ m B d ≤C  ∑ m=1 M γ m L d ≤L (5) View Source
    where T is throughput, B d and L d are the bandwidth demand and buffer length
    demand of an AP. γ m is the fraction of bandwidth/buffer length allocated by the
    load balancer and is expressed by γ m = = Fraction of allocation in the mlink
    ( B m ∑ m B m )β+( L m ∑ m L m )(1−β) (6) View Source where β= ⎧ ⎩ ⎨ 0, 1, 0.5,
    if Traffic type is LS if Traffic type is DS if Traffic type is M. View Source
    The proposed load balancing scheme is shown in Algorithm 1. The central SDN, as
    a logical controller, selects M multiple links according to traffic demand to
    coordinate load distribution. At the beginning of the process, network controller
    specifies traffic classes based on demand. For each outgoing link i the value
    of γ i is calculated from (6). For delay-sensitive and loss-sensitive traffics,
    loads are distributed based on demanded bandwidth and demanded buffer length,
    respectively. For mixed type data traffic, load distribution is done based on
    comparatively greater requirement of demand. Algorithm 1 Algorithm for Load Balancing
    Require: Output link capacity of AP as C , Queuing buffer length as L , Bandwidth
    length demand of AP as B d , Buffer length demand of AP as L d Ensure: Distributed
    Load 1: procedure BalanceLoads( C , L , B d , L d ) 2: Initialize β , ν , η ,
    Ω , ω ; 3: SDNC selects M links based on traffic demand; 4: if TrafficPriorityClass
    == 1 then 5: β⟵1 ; 6: else if TrafficPriorityClass == 2 then 7: β⟵0 ; 8: else
    9: β⟵0.5 ; 10: end if 11: for all Selected Links as i do 12: Calculate γ i using
    equation (6); 13: Ω i = γ i B d ; and ω i = γ i L d ; 14: if β==1 then 15: Distribute
    load to link i using Ω i value; 16: else if β==0 then 17: Distribute load to link
    i using ω i value; 18: else 19: B= B d ∑ i B i ;L= L d ∑ i L i ; and η = max f(
    B,L ); 20: if η==B then 21: Distribute load to link i using Ω i value; 22: else
    23: Distribute load to link i using ω i value; 24: end if 25: end if 26: end for
    27: end procedure D. Computational Complexity Considering the decentralized data
    processing capability offered by the proposed framework enables it to perform
    processing at multiple levels reducing the amount of computations needed at subsequent
    levels. This is mainly because aggregating raw data from various IoT devices results
    in matrices with very large dimensions, leading to a resource demanding system
    with intolerable computation complexity. Therefore, the computational complexity
    of the proposed framework is lesser in comparison to other existing frameworks.
    Additionally, the proposed load balancing algorithm’s complexity has an upper
    bound of O(n) , where n is the number of active selected links of the network.
    SECTION V. Results An example model is considered in this section to demonstrate
    the feasibility and advantages of the proposed multilayer mist-fog-cloud architecture
    for the IoHT framework. Considering, there are 100 IoHT nodes collecting delay-sensitive
    and loss-sensitive healthcare data from a hospital/home. The links between IoHT
    nodes (through microcontroller or microcomputer) and APs are IEEE 802.11. There
    are 5 fog nodes, 1 cloud server, and the link data rate is 54 Mb/s. The raw data
    generated by these IoHT nodes can be processed using the resources available at
    the mist layer. When the process is high (i.e., high processing delay), the mist
    can offload the processing to the fog nodes (also called fog processors). The
    process availability are generated randomly. Also, the link bandwidth and the
    queue length in the router are assumed to be distributed randomly. The fog nodes
    can be selected based on the demand and the processing delay. Finally, the information
    extracted from the mist/fog layer are sent to the server in the cloud layer. The
    link speed between the fog and the cloud is 10 Gb/s. The processing speed ratio
    of the mist to fog and fog to cloud are 1: 1000 and 1: 100, respectively. The
    parameters used to simulate the heterogeneous mist-fog-cloud for the delay-sensitive
    and loss-sensitive IoHT healthcare data are listed in Table III. TABLE III Simulation
    Parameters for the Heterogeneous Mist-Fog-Cloud-Based IoHT Framework Simulation
    Fig. 9 shows the E2E delay (or latency) for the simulation settings given in Table
    III. The results indicate that the E2E delay decreases when mist-fog nodes are
    involved in the computation along with the cloud. However, involvement of more
    fog neighbors and mist resources can reduce the E2E delay as this process reduces
    the queuing and transmission delays. The computational latency decreases when
    the number of neighboring fog nodes increase. Fig. 9. E2E delay of cloud, fog-cloud,
    and mist-fog-cloud for the simulation setting listed in Table III. The latency
    is minimal when all the mist-fog-cloud layers are involved in the process of data
    transmission and processing. Show All Fig. 10 shows the effect of buffer size
    on the packet delivery rate. The buffer size reduces the packet drop. When the
    buffer size increases the packet delivery rates in mist and mist-fog layers reduce.
    However, it should also be noted that the increase of buffer size also increases
    the queuing delay and total latency. Thus, the appropriate size of the buffer
    must be selected to ensure high delivery rate and low latency. Fig. 10. Increase
    in buffer size reduces packet drop. When buffer size increases, packet delivery
    ratios improve for all the layers. Show All Fig. 11 illustrates the outcome of
    involving fog neighbors on the task distribution of fog and cloud layers. The
    simulation results suggest that when the flow controller includes more fog neighbors
    in the task distribution process, the load on the cloud decreases as the processing
    performance on the fog nodes increase. The load on the cloud is about 60% with
    one fog node, and the load drops exponentially to 37% when the number of fog neighbors
    are four. Fig. 11. Effect of number of fog neighbors on the task distribution
    of fog/fog-cloud layers. In both cases inclusion of more fog nodes decreases the
    work load on the layers. Show All While evaluating the efficacy of the proposed
    framework, we compared its transmission time with one of the state-of-the-art
    fog computing-based framework [35]. As shown in Fig. 12, the proposed heterogeneous
    framework (denoted by mist-fog-cloud) requires comparable or less time to transmit
    same amount of processed samples in comparison to fog-based framework (denoted
    by Fog-Cloud) proposed in [35]. The mist plays its role in reducing the transmission
    time while handling real-time data (i.e., smaller sample size). In transmitting
    60 KB samples in different network conditions defined in [35] (e.g., light load,
    medium load, and heavy load), the proposed mist-fog-cloud framework would require
    1.5, 2.16, and 3.39 ms in comparison to Fog-Cloud-based framework which would
    require 1.67, 2.4, and 3.395 ms. Fig. 12. Mist facilitates reduction in transmission
    time. At different network conditions the Mist-based proposed framework showed
    an improvement in the transmission time. Show All The above specified lower transmission
    time is also facilitated by the fact that there are multiple levels of data filtering
    in our proposed model. This reduces the amount of real-time data to be transmitted
    along the network, thus, reducing computational complexity of the proposed framework
    [92]–[94]. Additionally, sophisticated data analytic schemes can also be employed
    to further reduce the computational complexity [95]. SECTION VI. Conclusion This
    paper proposes a heterogeneous cloud-based IoHT communication framework with mist
    and fog computing. The framework consists of perception, mist, fog, cloud, and
    application layers which can handle separately data routing paths for real-time
    as well as conventional data sources. To ensure high QoS of such heterogeneous
    communication frameworks, reducing E2E latency and packet drop rate are two main
    challenges. Through optimizing resource allocation and flow control, the proposed
    framework delivers improved overall QoS. Simulation results show that the proposed
    framework can achieve low E2E latency and packet drop rate. The obtained results
    clearly indicate the suitability of the proposed IoHT framework in the healthcare
    domain. Nonetheless, this paper can be extended by incorporating advanced machine
    learning techniques (e.g., deep learning) in identifying the heterogeneous traffic,
    and employing bio-inspired models to ensure effective resource usage, schedule
    optimal flow to improve performance and increase data distribution to reduce overall
    computational complexity of next generation IoHT-based healthcare systems. Authors
    Figures References Citations Keywords Metrics Footnotes More Like This Integration
    of IoT, Edge Computing and Cloud Computing for Monitoring and Controlling Automated
    External Defibrillator Cabinets in Emergency Medical Service 2019 5th International
    Conference on Information Management (ICIM) Published: 2019 Quality of Service-Adaptive
    Industrial Internet of Things leveraging Edge Computing and Deep Reinforcement
    Learning : The Deep QoS-Adaptive Learning Environment (DeQALE) Architectu... 2022
    17th Iberian Conference on Information Systems and Technologies (CISTI) Published:
    2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE internet of things journal (Online)
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6488907/8738925/08491315.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Toward a Heterogeneous Mist, Fog, and Cloud-Based Framework for the Internet
    of Healthcare Things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2019.2934998
  analysis: '>'
  authors:
  - Saeed Hamood Alsamhi
  - Ou Ma
  - Mohd. Samar Ansari
  - Faris A. Almalki
  citation_count: 247
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathZoom.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Personal Sign In *
    Required *Email Address *Password Forgot Password? Sign In Don''t have a Personal
    Account? Create an IEEE Account now. Create Account Learn more about personalization
    features. IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08795473.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Survey on Collaborative Smart Drones and Internet of Things for Improving
    Smartness of Smart Cities
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.2991/icaita-18.2018.39
  analysis: '>'
  authors:
  - Xin Li
  - Bo Yang
  citation_count: 0
  full_citation: '>'
  full_text: ">\nFog Computing and Security Infrastructure of Internet \nof Things\
    \ \nXin Li* and Bo Yang \nSchool of Information Management, Hunan University of\
    \ Finance and Economics, Changsha, 410205, China \n*Corresponding author\n \n\
    \ \nAbstract—Typically most data processing of IOT focuses on \nCloud Computing.\
    \ The huge amount of end devices and real-time \ndata transmission leave great\
    \ pressure on network bandwidth \nand Cloud Computing data centers. The paper\
    \ suggests the \nintroduction of Fog Computing between data centers and end \n\
    devices of IOT to store and process massive local data on time, \nand to response\
    \ most requests quickly and efficiently, thus to play \nan important role in security\
    \ framework of IOT. \nKeywords—fog computing; cloud computing; internet of things;\
    \ \nsecurity infrastructure \nI. \nINTRODUCTION  \nIn 2005, Internet of Things\
    \ (IOT) was officially named by \nthe International Telecommunication Union (ITU).\
    \ It has \nquickly become a development highlight of the Internet \neconomy. By\
    \ 2020, more than 50 billion end devices will be \nconnected to the Internet of\
    \ Things, and this figure will reach \none trillion soon. These vast amounts of\
    \ equipment include \nsensors, actuators and intelligent terminal, which produce\
    \ large \namount of real-time data every second. Traditionally, all data \nprocessing\
    \ are dependent on cloud computing. \nCloud computing can supply and deploy a\
    \ lot of computing \nresources dynamically, and provide service on-demand. This\
    \ \novercomes the deficiencies of traditional application system, \nsuch as inefficient\
    \ utilization of system resources, limited \nphysical space, complicated application\
    \ deployment, and \ninflexible operation. However, with the characteristics of\
    \ \ninformation distribution and exchange, cloud computing also \nfaces great\
    \ challenges. \n \nTo support cloud computing, the network infrastructure \n\
    requires the ultra-high speed switching, unified \nexchange, virtualization exchange,\
    \ and transparent \nexchange, \nin \nwhich \nmost \nexisting \nnetwork \ninfrastructure\
    \ hardly achieve. \n \nThe information collected and exchanged in the \nInternet\
    \ of things is vast, multi-source heterogeneous, \nredundant, complementary and\
    \ real-time. The mass \ndata needs rapid processing and transmission. Cloud \n\
    computing is a highly aggregated computing service. \nIt’s simple and convenient\
    \ to use, but it consumes too \nmuch network bandwidth. With the increase of user\
    \ \naccess, it is likely to cause some service interruption, \nresponse delay\
    \ and so on. \nThe global research on the security of the Internet of Things \n\
    had been found in various kinds of literature since 2011. The \nsecurity infrastructure\
    \ of the Internet of Things is faced with \nfour major challenges: traceability\
    \ and integrity of data, \nidentification, trust management, and privacy protection.\
    \ The \nfocus of these studies is on data remote processing security. \nAccording\
    \ to the characteristics of Internet of Things, light-\nweight encryption elements\
    \ are proposed in embedded devices \nwith limited resources to build a new security\
    \ architecture of \nIOT [1]. \nSimilar research in China started almost at the\
    \ same time. \nTheir main opinions argue that because of multiple \nheterogeneous\
    \ of IOT, it is difficult to establish one unified set \nof security protection\
    \ standards, but it should take different \nmeasures for different security problems\
    \ faced by the three \nlevels of IOT: perception layer, transport layer and application\
    \ \nlayer, and to construct a mixed networking security \nmechanisms [2]. \nFor\
    \ the great number of IOT end devices with limited \nresource, many Chinese researchers\
    \ have proposed using \nlightweight security technology on perception layer of\
    \ IOT to \nsave resource consumption for storage, processing and \ntransmission\
    \ of information, and to improve response speed, \nand to avoid excessive pursuit\
    \ of high-level security, and to \nprovide appropriate security protection under\
    \ the resource \nconstrained situation [3]. \nOn the IOT perception layer, many\
    \ sensors and embedded \ndevices can be implanted into relatively simple security\
    \ \nmeasures, such as hardware based physical anti-copy function \nand light-weight\
    \ encryption method. However, these security \nmeasures generally have the following\
    \ shortcomings [4]: \n \nBecause of the weak computing power and small \nstorage\
    \ capacity of the terminal equipment, the security \noperation takes more time\
    \ and the response of the \nservice request is slow. \n \nThe energy supply of\
    \ terminal equipment is limited, \nand the encryption method with high energy\
    \ \nconsumption is difficult to be completed normally. \n \nThere are few data\
    \ localizing, and the pressure of \nnetwork bandwidth is great. \nTherefore, these\
    \ security means can only provide certain \ndegree of security protection, and\
    \ it is difficult to achieve a \nsatisfactory overall effect. Starting from the\
    \ most foundational \nPerception Layer to build the security system construction\
    \ of \n2nd International Conference on Artificial Intelligence: Technologies and\
    \ Applications (ICAITA 2018)\nCopyright © 2018, the Authors. Published by Atlantis\
    \ Press. \nThis is an open access article under the CC BY-NC license (http://creativecommons.org/licenses/by-nc/4.0/).\
    \ \nAdvances in Intelligent Systems Research, volume 146\n154\nIOT, is conducive\
    \ to the protection of all various parts of the \nsystem, but it must be considered\
    \ how to devote more \nresources to the security system. Using fog computing in\
    \ \nsecurity infrastructure can utilize more local computing \ncapacity and storage\
    \ space, and meet the energy needs of all \nkinds of security measures which can\
    \ be greatly enhanced. As \nresult, all application request response time are\
    \ significantly \nreduced, and network security system are also improved. \nII.\
    \ \nANALYSIS OF COMPUTING ADVANTAGES \nIn 2011, Dr. Flavio Bonomi, the president\
    \ of global R&D \nCenter in CISCO, and his researching team first proposed the\
    \ \nconcept of Fog Computing: The fog is between cloud \ncomputing and terminal\
    \ computing; it is distributed service \nmodel with semi-virtualization architecture;\
    \ terminal devices \ncan access the local cloud network whenever and wherever\
    \ \npossible (Local Cloud, also known as the fog node) [5, 6]. \nThe fog computing\
    \ layer includes both up and down \ngateways, and devices for temporary data storage\
    \ and \ncomputing. It can judge different kinds of data requests. If \nthese requests\
    \ involve long-term data storage or historical data \nanalysis, the layer will\
    \ directly upload requests and data to \ncloud data center directly as gateway,\
    \ otherwise data will be \ncompletely processed and stored locally. Fog computing\
    \ not \nonly inherits the advantages of cloud computing, but also has \nthe advantage\
    \ of edge computing. It can bring the advantage of \nterminal computing and local\
    \ processing into full play. The \nnearest processing can effectively support\
    \ rapid response for \nlatency-sensitive applications, whose operations are often\
    \ in the \ndata center edge, such as traffic control system, parking system, \n\
    health care system, local energy network system, etc. \nWith the introduction\
    \ of Fog Computing, the resources that \ncan participate in the edge computing\
    \ will be significantly \nincreased. Fog computing is a distributed computing\
    \ service \nsystem. Its most outstanding operation characteristic is that the\
    \ \nedge computing tasks can also be completed by gateway \ndevices such as gateways,\
    \ routers and access nodes. The \ncurrent network equipment always has more powerful\
    \ CPU and \nlarger memory size, comparing to those earlier personal \ncomputers.\
    \ Their location in the network can easily form a \ncluster, which can further\
    \ integrate many edge nodes in \ndistributed computation and storage capacity\
    \ and form a more \npowerful fog node cluster. This cluster provides not only\
    \ \nrelatively sufficient computing power and data storage space, \nbut also sufficient\
    \ energy that the layer can use, avoiding the \nbottleneck for processing capability.\
    \ \nFog calculation is not a substitute for cloud computing, but \na powerful\
    \ supplement. The fog computing layer can \nintelligently analyze whether the\
    \ application requests need \nintervention from the cloud computing layer. For\
    \ those real-\ntime or low-delay requests, such as real-time data stream \nservice,\
    \ intelligent traffic monitoring, intelligent parking, etc., \nthe system will\
    \ call the fog computing equipment and local \nworkstations and small storage\
    \ units as quickly as possible to \ncomplete the response. \nThe fog computing\
    \ layer can be regarded as a system \ncomposed of multiple independent fog nodes\
    \ (Fog Node). Each \nnode can contain several computing locations physically or\
    \ \nlogically, including the computing environment of application \nservices,\
    \ resource center, management and control center. The \nuser interaction between\
    \ nodes can be a remote Web \ncommunication mode or a local interaction. Users\
    \ between \nnodes can access local and remote cloud service center \nresources.\
    \ The changes in computing environment can cause \nsynchronous migration of processing\
    \ location and services, but \nthe users' resource centers are always in a relatively\
    \ stable [7]. \nIII. \nMULTI-LAYER SECURITY MEASURES BASED ON FOG \nCOMPUTING\
    \ \nThe Internet of Things can be logically divided into three \nmain levels:\
    \ the perception layer, the transmission layer and the \nprocessing layer. In\
    \ addition, application data formed by the \nprocessing layer can also be regarded\
    \ as an application layer. \nHowever, the basic security architecture of the Internet\
    \ of \nThings must cover every logical layer, and the fog computing \nlayer is\
    \ mainly distributed closer to the perceptual layer. (See \nthe Figure I) \nFor\
    \ the hardware and the embedded device layer, under the \nfog computing layer,\
    \ researchers have proposed to take \ndifferent security measures and start from\
    \ the bottom to meet \nthe security challenges of the Internet of Things [8].\
    \ For \nexample, sensor physical layer can use anti-clone functions \n(Sensor\
    \ PUF, Physical Unclonable Function) to keep data \nsecurity traceability and\
    \ integrity; the sensors and other \nhardware PUF can be used to solve identification\
    \ problems; \nPUF and hardware performance counters can strengthen the \ncredibility\
    \ management; lightweight encryption algorithms can \nsupport confidentiality\
    \ and privacy protection [2]. \nThere are many cryptographic elements that can\
    \ be used for \nsecurity protection of the Internet of Things, including \nencryption\
    \ algorithms, HASH functions, digital signatures and \nkey exchange algorithms.\
    \ In order to consume less energy, it is \nessential to select appropriate processing\
    \ sites and appropriate \ncryptographic algorithms based on the size of the data.\
    \ For \nexample, if the data to be processed is less than 1KB, sensor \ndata processing\
    \ is the best; if the data to be processed is less \nthan 1MB, the data processing\
    \ should be done in the fog node; \nif the data is less than 1GB, or more than\
    \ 1GB, the data \nprocessing must be respectively in the joint infrastructure\
    \ \ngateway or higher (including computing, storage and network \ncommunication\
    \ ability). This fully localization of data \nprocessing brings faster response.\
    \ \n \nFIGURE I.  FOG COMPUTING LAYER OF IOT \n \nAdvances in Intelligent Systems\
    \ Research, volume 146\n155\nVarious kinds of sensors in IOT have adopted more\
    \ and \nmore powerful single-chip microcontroller to build a complete \nsingle-chip\
    \ \nsystem, \nsuch \nas \nADc841/842/843 \nFlash \nMicrocontroller, which already\
    \ contains a 8052 kernel with the \noperation cycle of up to 20MHz, built-in 64KB\
    \ flash and 4KB \nflash program data, 2304 bytes of data RAM, and a large \nnumber\
    \ of peripherals, such as 12 ADC/DAC, a time interval \ncounter, serial I/O, watchdog\
    \ timer and power monitor etc.. \nThis class of on-chip systems is enough to support\
    \ lightweight \nencryption. \nThe sensor gateway of IOT is fully supported by\
    \ power and \nhardware. The16/32 bit RISC processor and embedded Linux \nstructure\
    \ are often used. Its computing power is basically \nequivalent to a personal\
    \ computer, and is fully capable of \nproviding \nencryption \nprotection \nwith\
    \ \nhigher \nsecurity \nperformance. \nInternational researchers have studied\
    \ and summarized the \nencrypted elements available in the various layers of the\
    \ \nInternet of Things, and made the following recommendations: \n[2]: \nTABLE\
    \ I.  ENCRYPTED ELEMENTS IN VARIOUS LAYERS OF IOT \nItems \nDeployment Layer \n\
    Sensor \nNode \nGatew\nay \nInfrast\nructure\nEncryption \nAlgorithm \nPRESENT\
    \ \nmCRYPTON \nCLEFIA \nAES \nAES \nECC \nRSA \nHASH Function \nDM-PRESENT \n\
    PROP \nHMA\nC \nSHA-3\nKey \nExchange \nAlgorithm \nDH-512 \nDH-512 \nECDH \n\
    DH \nDigital \nSignature \nECDSA-163 \nECDSA \n-233 \nDSA \nECDS\nA 409 \nThe\
    \ construction of IOT security architecture based on fog \ncomputing layer will\
    \ face three main problems: choosing the \nappropriate hardware configuration\
    \ for Fog Computing, \nbuilding and verifying appropriate encryption methods,\
    \ and \nlocating appropriate security measures deployment locations. \nThe main\
    \ work should focus on several aspects: to analysis \ntime delay and power consumption\
    \ of existing lightweight \nencryption algorithms used in the new fog layer, and\
    \ improve \nthe existing encryption algorithm or chose stronger security \nalgorithm.\
    \ The object should be a more consolidated security \narchitecture of IOT based\
    \ on fog computing with significantly \nreduce of time delay, same security, less\
    \ power consumption, \nand optimized system response. \nTo build such security\
    \ system of IOT, the key is to make \nfull use of all kinds of resources distributed\
    \ in fog computing \nlayer, such as computing power, storage space and energy\
    \ \nsupply. To maximize the security strength of existing security \nmeasures,\
    \ the key issues would include: \nA. Optimization Strategy of Security Algorithm\
    \ Based on the \nSensor and other Hardware \nGenerally, the traditional sensor\
    \ collects the objective value, \nproduces the corresponding digital measurement\
    \ results and \nencrypts and uploads. In order to improve the security strength,\
    \ \nit can be tried to collect the uniqueness of sensor ID, and \nmodify the corresponding\
    \ security algorithm in the sensor. The \nuniqueness of ID is also used as the\
    \ parameter of encryption \nalgorithm, which affects the output result.. \nB.\
    \ Improvement Strategy for Lightweight Security \nAlgorithms \nSubject to limited\
    \ resources, the current terminal of the \nInternet of Things always uses lightweight\
    \ security algorithms. \nWith the introduction of sufficient computing power and\
    \ \nmemory space in fog computing, it is fully capable of \nsupporting security\
    \ algorithms with higher security strength \nand more complex calculation. On\
    \ the basis of fully \nresearching the existing lightweight security algorithms,\
    \ it can \nbe possible to improve security strength, speed up operation \nand\
    \ maintain or reduce power consumption by properly \nalgorithm improvement. \n\
    C. Evaluation Measures of Resource Supply on Fog Nodes \nFog computing layer is\
    \ not a simple assembly of fog nodes, \nand multiple nodes can form a cluster\
    \ to achieve efficient \nintegration of resources. Based on some proper pressure\
    \ testing, \nresearcher can grasp the maximum resource potential that fog \ncomputing\
    \ layer can provide, form a relatively stable node \nresource evaluation algorithm,\
    \ and provide tools for future \nInternet of Things planning. \nD. Evaluation\
    \ Criterion on Improvement of the Security \nAlgorithm \nThe improvement effect\
    \ of the security algorithm can be \nmeasured by many indexes, such as the length\
    \ of operation \ntime, the size of power consumption and the strength of anti-\n\
    attack ability. During continuous correcting and testing of the \nsecurity algorithm,\
    \ the quantitative calculation method of the \nabove indexes can be achieved to\
    \ form a set of objective \nevaluation criterion for the improvement of the algorithm.\
    \ \nIV. \nAPPLICABLE EXPECTATION \nThe research of IOT security infrastructure\
    \ based on fog \ncomputing has not only theoretical significance, but also broad\
    \ \napplication prospects and very important engineering value of \nsystem data\
    \ traceability and integrity, credibility management, \nidentity authentication,\
    \ confidentiality and privacy protection \nand many other fields. The upgrading\
    \ of the security system of \nIOT can win more user trust to Internet of Things\
    \ system, and \nis of great significance for the development and popularization\
    \ \nof the Internet of Things. \n \nREFERENCES \n[1] \nCisco. The Internet of\
    \ Things - How the Next Evolution of the Internet is \nChanging Everything, 2011,\
    \ pp. 2-3. \n[2] \nArun Kanuparthi, Ramesh Karri, Sateesh Addepalli. Hardware\
    \ and \nEmbedded Security in the Context of Internet of Things. [C] \nProceedings\
    \ of the 2013 ACM workshop on Security, privacy & \ndependability for cyber vehicles\
    \ (CyCAR '13)  ACM New York, NY, \nUSA,2013, pp. 61-64. \n[3] \nChuankun Wu. Main\
    \ Technology and Challenges of IOT Security [J] \nJournal of Cryptologic Research，China\
    \ 2015,2(1), pp. 40–53. \nAdvances in Intelligent Systems Research, volume 146\n\
    156\n[4] \nGen Yang, Jian Xu.Characters and Technology of IOT Security \n[J].Journal\
    \ of Nanjing University of Post and Telecommunication \n(Nature Science),China.2010,\
    \ 30(4), pp. 20-29. \n[5] \nF. Bonomi. Connected vehicles, the internet of things,\
    \ and fog \ncomputing [C] The Eighth ACM International Workshop on Vehicular \n\
    Internet Working（VANET 2011）. Las Vegas，USA：ACM，2011: \npp. 1-2. \n[6] \nBonomi\
    \ F， Milito R， Zhu Jiang，et al. Fog Computing and Its Role \nin the Internet of\
    \ Things [C]. Proceedings of the first edition of the MCC \nworkshop on Mobile\
    \ cloud computing. New York，USA：ACM，\n2012,  pp. 13-14. \n[7] \nClickloud Company.\
    \ Fog Computing Introduction.[EB/OL].[2011-11-\n20]. http://www.tsgsites -hostmonster.com/fogcomputing/.\
    \ \n[8] \nK. Rosenfeld, E. Gavas, and R. Karri. Sensor physical unclonable \n\
    functions. In Hardware-Oriented Security and Trust (HOST), 2010 IEEE \nInternational\
    \ Symposium on, IEEE, 2010, pp. 112–117. \nAdvances in Intelligent Systems Research,\
    \ volume 146\n157\n"
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://download.atlantis-press.com/article/25894190.pdf
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Fog Computing and Security Infrastructure of Internet of Things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s20247353
  analysis: '>'
  authors:
  - J. A. Rincon
  - Sol Guerra-Ojeda
  - Carlos Carrascosa
  - Vicente Julián
  citation_count: 26
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nAn IoT and Fog Computing-Based Monitoring\nSystem\
    \ for Cardiovascular Patients with Automatic\nECG Classiﬁcation Using Deep Neural\
    \ Networks\nJaime A. Rincon 1,†\n, Solanye Guerra-Ojeda 2,†\n, Carlos Carrascosa\
    \ 1\nand Vicente Julian 1,*\n1\nInstitut Valencià d’Investigació en Intel·ligència\
    \ Artiﬁcial (VRAIN), Universitat Politècnica de València,\n46022 València, Spain;\
    \ jrincon@dsic.upv.es (J.A.R.); carrasco@dsic.upv.es (C.C.)\n2\nDepartment of\
    \ Physiology, School of Medicine, Universitat de València, 46010 València, Spain;\n\
    solanye.guerra@uv.es\n*\nCorrespondence: vjulian@upv.es\n†\nThese authors contributed\
    \ equally to this work.\nReceived: 23 October 2020; Accepted: 14 December 2020;\
    \ Published: 21 December 2020\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\
    \x04\x05\x06\a\nAbstract: Telemedicine and all types of monitoring systems have\
    \ proven to be a useful and low-cost\ntool with a high level of applicability\
    \ in cardiology. The objective of this work is to present an\nIoT-based monitoring\
    \ system for cardiovascular patients. The system sends the ECG signal to a Fog\n\
    layer service by using the LoRa communication protocol. Also, it includes an AI\
    \ algorithm based\non deep learning for the detection of Atrial Fibrillation and\
    \ other heart rhythms. The automatic\ndetection of arrhythmias can be complementary\
    \ to the diagnosis made by the physician, achieving a\nbetter clinical vision\
    \ that improves therapeutic decision making. The performance of the proposed\n\
    system is evaluated on a dataset of 8.528 short single-lead ECG records using\
    \ two merge MobileNet\nnetworks that classify data with an accuracy of 90% for\
    \ atrial ﬁbrillation.\nKeywords: cardiovascular diseases; ECG; IoT; Fog-AI; LoRa;\
    \ Edge-AI\n1. Introduction\nCardiovascular diseases (CVD), such as high blood\
    \ pressure, ischaemic heart disease or\narrhythmias, are currently the leading\
    \ cause of death in the world [1]. In Spain, 28.30% of deaths were\nrelated to\
    \ CVD, according to the latest report published by the National Institute of Statistics\
    \ (INE) on the\ncauses of death in 2018 (https://www.ine.es/dynt3/inebase/es/index.htm?padre=6177&capsel=6179).\n\
    According to the European Society of Cardiology (ESC), “The clinical specialty\
    \ of cardiology\nprovides expert care for patients with heart and circulatory\
    \ diseases” [2]. The cardiology service,\none of the most demanded in the healthcare\
    \ centers, has suffered very substantial changes caused by\nthe current pandemic\
    \ of COVID-19. For instance, in outpatient care, telematic consultation became\n\
    very important at a time when it was necessary to suspend face-to-face appointments.\
    \ To address\nthis challenge, healthcare centers had to incorporate telemedicine\
    \ systems, speciﬁcally telecardiology\nsystems, which proved to be a useful and\
    \ low-cost tool with a wide range of applications. In addition to\nproviding support\
    \ in the current pandemic situation, telecardiology supports those rural communities\n\
    that are far from urban areas and lack specialized medical services.\nIn telecardiology\
    \ systems, the primary diagnostic tool is the electrocardiogram (ECG),\nwhich\
    \ represents the standard method for evaluating patients with cardiovascular disorders\
    \ (rhythm\nor conduction disorders). [3]. In a conventional 12-lead ECG device,\
    \ the electrical potentials of the\nheart are measured using 10 Ag/AgCl electrodes\
    \ that are attached to different parts of the body\nsurface [4]. Several monitoring\
    \ systems are available on the market to record the ECG signal and send\nit to\
    \ an analysis station. These systems include conventional devices for non-invasive\
    \ monitoring such\nSensors 2020, 20, 7353; doi:10.3390/s20247353\nwww.mdpi.com/journal/sensors\n\
    Sensors 2020, 20, 7353\n2 of 19\nas the Holter or external cardiac event recorders\
    \ [5]. However, monitoring systems have progressively\nintroduced new devices\
    \ for ECG capture that incorporate more comfortable and less intrusive sensors,\n\
    known as wearable ECG monitoring systems [6,7]. Although now available, these\
    \ systems were\ntypically designed for recreational purposes and clinical experience\
    \ remains limited. Therefore, there is\nstill a demand for an easy-to-use, low-cost\
    \ monitoring system that reduces diagnostic time and prevents\nthe patient from\
    \ travelling to the health center. In this case, the Internet of Things (IoT)\
    \ could be the\nkey to developing a wearable ECG monitoring system.\nThe IoT is\
    \ a network of physical objects or devices that uses sensors and APIs to connect\
    \ and\nexchange data over the Internet [8,9]. It makes it possible to share information\
    \ in real time and\nalso to collect and analyze data on a small and large scale,\
    \ something that is already transforming\nthe way medicine is organized and conceived.\
    \ Currently, most interactions between a physician\nand a patient require equipment\
    \ and devices, including external medical devices, such as glucose\nmonitors;\
    \ implanted, such as pacemakers; or stationary, such as home monitoring devices\
    \ and scanners.\nProviding connectivity to these devices makes it possible to\
    \ create an infrastructure of health systems\nand services: the internet of medical\
    \ things (IoMT) [10]. The IoMT explosion is being driven by an\nincrease in the\
    \ number of connected medical devices that can generate, collect, analyze or transmit\n\
    health data and connect to health care provider networks, transmitting or storing\
    \ data in the cloud or\ninternal servers.\nThe large-scale development of more\
    \ efﬁcient IoT and IoMT applications has been made possible\nthanks to the emergence\
    \ of new hardware technologies such as radio frequency identiﬁcation (RFID),\n\
    wireless network technologies (Bluetooth, Wi-Fi, low energy ZigBee) and low energy\
    \ wireless area\nnetwork (LPWAN) technologies such as LoRa and SigFox, which help\
    \ improve the connection of\ndevices to the Internet.\nIntelligent devices generate\
    \ an enormous amount of IoT data that must be analyzed and exploited\nin real\
    \ time, so artiﬁcial intelligence (AI) tools are required to process and give\
    \ context to this data in\norder to generate actions without human intervention.\
    \ AI algorithms can make more accurate and\ncomprehensive diagnoses by offering\
    \ personalized treatments. For instance, automatic ECG diagnosis\nhas been studied\
    \ for decades. In the early years, machine learning techniques were applied, such\
    \ as\nfuzzy set theory [11], rough set theory [12], Hidden Markov models [13],\
    \ artiﬁcial neural network [14]\nand Support Vector Machine [15]. However, the\
    \ trend in automatic diagnosis points to the use of deep\nlearning, which attempts\
    \ to model high-level abstractions in data by using computer architectures\nthat\
    \ support multiple, iterative, non-linear transformations of data expressed in\
    \ matrix or tensor form.\nThis new automatic learning paradigm has opened the\
    \ door to countless applications in the ﬁeld of\nautomatic diagnostic [16,17].\n\
    Many of these applications usually run on web servers that analyze the information\
    \ sent by each\nof the devices. This massive sending of data causes a delay in\
    \ the reception of the results, so the\nanalysis can be done through a three-layer\
    \ architecture. The ﬁrst layer is the analysis embedded in the\ndevice, which\
    \ is known as Edge Computing. The second layer is a Fog computing service that\
    \ offers\nlow latency and fast response time for healthcare applications [18].The\
    \ third layer is the Cloud.\nIn this paper we propose a monitoring system for\
    \ patients with cardiovascular diseases,\nspeciﬁcally arrhythmias, equipped with\
    \ an ECG device. The system is capable of sending the ECG\nsignal to a service\
    \ located in the Fog layer using the LoRa communication protocol. In addition,\n\
    it includes a deep learning-based AI algorithm to help the physician make the\
    \ diagnosis. This tool\nautomatically classiﬁes single short ECG lead records\
    \ for the detection of Atrial Fibrillation and other\nheart rhythms. This monitoring\
    \ system could be especially interesting for patients who live in rural\nareas\
    \ or those who require telematic assistance during pandemics, such as the current\
    \ COVID-19,\nsince it allows the acquisition of bio-signals remotely and avoids\
    \ the need for a face-to-face consultation.\nSensors 2020, 20, 7353\n3 of 19\n\
    2. State of the Art\nECG signal monitoring is a major concern in cardiovascular\
    \ health care. In fact, many CVDs\ncan be better diagnosed, controlled, and prevented\
    \ through continuous monitoring systems.\nCurrently, new technologies are being\
    \ integrated into the development of ECG monitoring systems to\nprovide efﬁcient,\
    \ cost-effective, fully connected and powerful systems. In this section we present\
    \ the\nmost relevant and related works that approach the same domain or characteristics,\
    \ highlighting their\ncontributions to the state of the art.\nHolter-based ECG\
    \ monitoring is the traditional monitoring system used in clinical practice.\n\
    A Holter monitor is a 12-lead medical device connected to the patient’s body through\
    \ electrodes that\nrecords heart rhythms continuously for 24 or 48 h [19]. The\
    \ patient carries the Holter in a pocket\nor a bag placed around the neck or waist.\
    \ After the established period for registration, the monitor\nis returned to the\
    \ physician for analysis of the collected data. It is catalogued as a wearable\
    \ and\ncontinuous monitoring device, since it enables the correct diagnosis of\
    \ some CVD’s that may go\nunnoticed due to the absence of symptoms.\nThe current\
    \ COVID-19 pandemic scenario has had an enormous impact on healthcare around the\n\
    world, leading to a growing demand for remote health care that has accelerated\
    \ the implementation\nof new monitoring systems to reduce the workload in a saturated\
    \ healthcare system [20]. These new\nECG monitoring systems are based on two types\
    \ of emerging technologies: Monitoring devices and\nenabling technologies.\nThere\
    \ are a great number of devices for ECG monitoring systems that can be classiﬁed\
    \ as\nmobile devices, wearable devices and sensor devices, being the smartphone\
    \ the most relevant device.\nFor instance, Kailas et al. [21] developed a device\
    \ that monitors heart activity, which is easy to operate\nand non-invasive. In\
    \ addition, the power supply is supplemented by the energy harvesting from the\n\
    mobile phone via the audio jack. It is also noteworthy that the incorporation\
    \ of smart phones into\nmonitoring systems has improved the acquisition and transmission\
    \ of medical information. In this\nregard, Mahmud et al. [22] presented a prototype\
    \ of a wireless health monitoring system to capture\nECG and heart rate in real\
    \ time using a smart phone case.\nIn ECG monitoring systems, enabling technologies\
    \ support ECG processes, such as preprocessing,\nprocessing, storage, analysis\
    \ and display of ECG signals. These technologies include IoT and\nCloud/Fog computing.\n\
    Many of the studies related to IoT-based ECG monitoring systems evaluate the use\
    \ IoT devices\nto capture ECG signals that are transmitted in real time over the\
    \ Internet to the physician [23,24].\nNevertheless, other studies besides incorporating\
    \ IoT devices, focus on improving data acquisition\nand processing.\nIn this sense,\
    \ Sundarasekar et al. [25] proposed the use of Maximal Overlap\nDiscrete Wavelet\
    \ Transform to decompose the ECG and identify changes in the R waves of the\n\
    noisy signals. Similarly, Djelouat et al. [26] incorporated Compressive Sensing\
    \ in an IoT-based ECG\nmonitoring platform to leverage the ECG signal structure\
    \ and achieve high efﬁciency in the acquisition.\nIn addition, the platform provides\
    \ an abnormality detection for each heart beat using different pattern\nrecognition\
    \ algorithms.\nMany of these systems are not only used for monitoring elderly\
    \ people, there are military\napplications that use these technologies in order\
    \ to monitor soldiers in combat. Jethwa et al. [27]\ndeveloped a system for monitoring\
    \ the health of soldiers, which allows for the tracking of information\nfrom the\
    \ war zone on the health status of each soldier. The system helps to improve the\
    \ speed of\ndecision-making and can prevent potential problems affecting soldiers’\
    \ health. Another important\nfeature of the system is its low power consumption,\
    \ due to the use of the LoRa module for data\ntransmission instead of the high\
    \ power consumption GSM/GPRS modules. There are also conceptual\ndesigns for an\
    \ application in which the ECG will be monitored and transmitted via the LoRa\
    \ to a\nremote location. Panagi et al. [28] mention that this is one of the most\
    \ distinctive features that makes\nthe LoRa an attractive technology for this\
    \ application. It is the low implementation cost, the ease of\nimplementation,\
    \ the long area coverage and the acceptable transmission rate for the ECG. The\
    \ authors\nSensors 2020, 20, 7353\n4 of 19\nidentiﬁed several key components for\
    \ the LoRa node that can be integrated into a small unit that will\nfavour portability,\
    \ scalability and ease of use. The authors focused on the development of the LoRa\n\
    node and on performing functional tests with it to verify and characterize its\
    \ performance.\nRegarding Cloud Computing, some studies proposed the use of this\
    \ infrastructure to provide\nstorage and processing resources over the internet\
    \ [29,30]. In this way, ECG signal processing is\noptimized and the cost of data\
    \ transmission in ECG monitoring systems is reduced. Later, with the\nintegration\
    \ of monitoring systems to the cloud, and the use of Big-Data [31] as a tool for\
    \ analysis\nand storage, it has been necessary to introduce intermediate stations\
    \ in order to reduce high-power\nconsumption. This can be improved by reducing\
    \ the sending of data and processing it locally on the\nsame devices, such as\
    \ Fog devices.\nFog computing extends the cloud by migrating data processing closer\
    \ to the production\nsite, thereby accelerating the system’s responsiveness to\
    \ events. The Fog infrastructure allows the\nmanagement of multiple data from\
    \ IoMT devices that send the information to the Fog node reducing\nthe latency,\
    \ response time or data delay [32–34]. Several low-cost applications using IoT\
    \ and Fog\ndevices can be found in the literature in order to streamline diagnostics.\
    \ Gia et al. [35] proposed a Low\nCost Health Monitoring (LCHM) model to gather\
    \ the health information of different heart patients.\nThe sensor nodes monitor\
    \ and analyse the ECG signals to efﬁciently process the data of the cardiac\n\
    patients, however the response time of the LCHM is longer which reduces the performance.\
    \ Each of\nthe sensor nodes acquires ECG, respiratory rate and body temperature,\
    \ and then transmits this data to\nan intelligent gateway, which communicates\
    \ wirelessly with the system to analyze the information\nand make an automatic\
    \ decision. Mutlag et al. [36] developed a Multi-Agent Fog Computing (MAFC)\n\
    model for healthcare critical tasks management, which signiﬁcantly manages Fog\
    \ computing resources\nby providing two levels of task prioritization (local and\
    \ global). The MAFC model mapped between\nthree decision tables to optimize the\
    \ scheduling of critical tasks by assigning tasks with their priority,\nnetwork\
    \ load and network resource availability. He et al. [37] proposed a system to\
    \ address the\ncomplexity and high number of personalized services in large-scale\
    \ IoT-based healthcare applications.\nThe framework, called FogCEPCare, used a\
    \ set of custom services that work proactively using the\ncomplex event processing\
    \ architecture of cloud computing. Bandopadhaya et al. [38] presented an\nintegrated\
    \ health monitoring system based on IoT and distributed computing for deployed\
    \ soldiers.\nThe proposed IoT architecture was service-oriented in three layers,\
    \ where the computing functionalities\nwere distributed among all the layers in\
    \ order to improve the security of the soldier and to obtain a\nfast response\
    \ to any unexpected event\nCost reduction and communication efﬁciency are also\
    \ an extremely important purpose of many\nmonitoring systems. That is why some\
    \ IoT-based monitoring systems include low-cost computer\nboard such as the Arduino,\
    \ as a signal acquisition tool, and the Raspberry Pi, as a Fog Computing\ntool.\
    \ However, a new wireless transmission board has emerged on the market, the LoRa\
    \ ESP-32,\nwhich allows data to be communicated over very long distances with\
    \ low power consumption and\ncould be used in health monitoring systems. In fact,\
    \ some researchers have already proposed its use\nfor monitoring people in adverse\
    \ situations. For instance, Tayeh et al. [39] proposed a decentralized\nemergency\
    \ alert system based on LoRa devices, which allow to automatically identify and\
    \ locate a\nvictim in areas without network coverage. The system consists of an\
    \ intelligent clock that is used to\nobtain the user’s heart rate and physical\
    \ activity, an IoT device with a GPS that transmits an alert\nthrough the LoRa\
    \ device when the clock is activated, and ﬁnally a smartphone that displays the\
    \ alert\nalong with the victim’s location and address. This system was tested\
    \ in a remote area located in the city\nof Belfort in France. Shobha et al. [40]\
    \ presented a system based on the LoRa to track the movement\nof people in rural\
    \ areas, forest areas and hiking sites. The authors highlight the low consumption\
    \ of\nthe battery, which makes it durable and suitable for long-term monitoring.\
    \ They also point out the\nversatility of the LoRa, since it supports two-way\
    \ communication, which is useful for rescuing people\nin emergency situations.\n\
    Sensors 2020, 20, 7353\n5 of 19\nThere is still a long way to go to achieve monitoring\
    \ systems with complex computer requirements\nthat are energy efﬁcient and low\
    \ cost. We aim to close the gap by presenting a prototype of a monitoring\nsystem\
    \ for cardiovascular patients that includes new technologies such as IoT, Fog\
    \ Computing,\nand deep learning to provide a cost effective, fully connected,\
    \ and powerful ECG monitoring system.\n3. Problem Description\nFor the next few\
    \ years, in European countries, a progressive and important increase in\ncardiovascular\
    \ pathology is expected due to the aging of the population, the increase in the\
    \ presence\nof risk factors (smoking, obesity or sedentary life) and improvements\
    \ in the quality of treatments with\nthe consequent chroniﬁcation of the disease\
    \ [41]. For this reason, CVD continue to be a health priority\nthat justiﬁes and\
    \ makes it essential to monitor them.\nCardiac arrhythmias are one of the diseases\
    \ most often treated by the clinical cardiologist.\nAtrial ﬁbrillation (AF) is\
    \ the most common cardiac rhythm disorder among the population and\nits incidence\
    \ and prevalence are progressively increasing worldwide, especially in developed\n\
    countries [42]. For instance, in European countries, it is estimated that 1–3%\
    \ of the adult population\nis diagnosed with AF, exceeding 15% in people aged\
    \ 80 or over [43]. While normal sinus rhythm,\nmanifests as a single electrically\
    \ activated wave front that propagates from the atria to the ventricles,\nAF is\
    \ characterized by the presence of multiple errant wave fronts with different\
    \ patterns of propagation\nthat may be asymptomatic or result in symptoms such\
    \ as palpitations, dyspnea and dizziness [42].\nThis causes characteristic elements\
    \ to appear in the ECG signal such as discrete lack of P waves [44],\nas shown\
    \ in Figure 1. Therefore, detection of AF can be problematic, even more when episodic\n\
    occurrences of the arrhythmia are observed.\nFigure 1. Samples of 1 lead electrocardiogram\
    \ (ECG) records contained in the dataset of the 2017\nComputing in Cardiology\
    \ Challenge (https://www.physionet.org/content/challenge-2017/1.0.0/).\nFrom top\
    \ to bottom, ECG with Normal Rhythm and Atrial Fibrillation.\nConsequently, the\
    \ detection and treatment of this pathology requires continuous monitoring.\n\
    However, the european health care model is oriented towards individualized attention,\
    \ and is still not\nefﬁcient for the high demand of chronic patients who make\
    \ extensive use of health resources and need\nintensive and continuous monitoring.\
    \ In addition, in the current pandemic situation, Nishiga et al. [45]\nreport\
    \ that chronic cardiovascular patients are at greater risk of suffering from COVID-19,\
    \ having severe\nconditions with worse evolution and even death, so it is very\
    \ necessary for them to follow the treatment\nof their disease through telematic\
    \ consultation.\nSensors 2020, 20, 7353\n6 of 19\nThe monitoring of these patients\
    \ optimizes and controls the fulﬁllment of treatments,\nthus preventing costly\
    \ hospitalizations. Frequently, this follow-up takes place in the medical practice,\n\
    although the current trend is to refer them to home care based on remote consultation\
    \ through\na telecardiology system [46], specially for those living in rural areas\
    \ where access to primary or\nspecialized medical services, such as cardiology,\
    \ is often complicated by limited health, technical and\nhuman resources.\nTelecardiology\
    \ allows primary care health workers to interact in real or deferred time with\n\
    cardiologists to avoid transfers and resolve emergencies. The primary care physician\
    \ determines the\nneed to conduct a telecardiology consultation for the patient\
    \ based on the patient’s medical record,\ncomplete physical examination, and laboratory\
    \ tests. If the patient agrees to deferred or real-time\nreporting, he or she\
    \ will need to sign the informed consent form. In the medical ofﬁce, the signals\n\
    and images are acquired with the appropriate equipment and sent through a telecommunications\n\
    network to the cardiologist. Once the cardiologist has received the information,\
    \ it is displayed on a\nscreen to be able to examine it and issue a diagnostic\
    \ opinion, in order to suggest the most convenient\nspecialized treatment. The\
    \ technology used in a telecardiology consultation is a combination of\nportable\
    \ diagnostic devices (e.g., ECG ), computer/intelligent phone and wireless communication\n\
    infrastructure, which requires a stable data transmission network [46,47]. The\
    \ transmitted data can\nbe stored at a receiving station for immediate or later\
    \ processing and examination. In cardiology,\na wide range of invasive and non-invasive\
    \ variables are used, and most of them can be recorded\nmanually by the patients\
    \ themselves (e.g., blood pressure, heart rate, three-lead ECG, body weight,\n\
    or oxygen saturation).\nCurrently, the telecardiology method proposed in the context\
    \ of the remote ECG monitoring\nsystem is designed and developed for patients\
    \ who do not necessarily require their presence at home.\nThe trend in these systems\
    \ is to have intelligent wearable devices capable of detecting situations\nof\
    \ sudden falls, cardiac abnormalities, and hypertension/hypotension. therefore\
    \ they are suitable\nfor real-time monitoring, auto-diagnosis and remote diagnosis\
    \ [48]. We believe that it is necessary\nthat these type of systems should have\
    \ the following features: (1) low cost and easy to use devices\nfor the registration\
    \ of bio-signals, especially the ECG; (2) automatic analysis tools supported by\
    \ AI,\nthat help the physician to diagnose, or notify the health center in case\
    \ of a critical episode of the disease;\n(3) communications protocols that allow\
    \ sending the information quickly and efﬁciently (Figure 2).\nIn this way, it\
    \ would be possible to intervene quickly with the activities carried out by the\
    \ patient.\nAll this thanks to the two-way communication that the system has.\n\
    Figure 2. A general view of the problem description.\nSensors 2020, 20, 7353\n\
    7 of 19\n4. System Architecture\nThis section describes the architecture of the\
    \ proposed monitoring system which has been\nstructured in three levels as a typical\
    \ generalized architecture of Fog computing [49–51] as can be seen\nin Figure\
    \ 3.\n1.\nPhysical level (Level 1): formed of physical devices like the ECG device,\
    \ in addition to other\ndevices for capturing other bio-signals such as photoplethysmography\
    \ (PPG), oxygen saturation\n(SpO2), phonocardiography (PCG) or temperature. These\
    \ devices include an analog-to-digital\nconversion (ADC) system and a LoRa communication\
    \ protocol for the transmission of the\ncaptured signals.\n2.\nFog Level (Level\
    \ 2): is a middle level which consists of Fog computing elements typically called\n\
    Fog nodes. In this case, these nodes includes software tools like deep learning\
    \ algorithms and\nAI-Fog devices, which are responsible for analysing the ECG\
    \ signal and also, the rest of signals,\nclassifying them and making an auto-diagnosis.\n\
    3.\nCloud Level (Level 3): The top level is a cloud layer constituted of needed\
    \ cloud services or\napplications. In this case, this level involves health centers,\
    \ hospitals and any related clinical\nservice. These services receives alerts\
    \ from the second level if some kind of cardiac anomaly is\ndetected. If this\
    \ is the case, the device sends the auto-diagnostic (pre-analysis) along with\
    \ the\ndata acquired, allowing the top level services to analyze the problem in\
    \ depth.\nThe pillars of Fog architectures are security, scalability, openness,\
    \ autonomy, reliability, agility,\nhierarchical organization and programmability.\
    \ Moreover, the Fog Architecture deﬁnes the required\ninfrastructure to enable\
    \ building Fog as a Service (FaaS) to address certain classes of business\nchallenges\
    \ [51].\nFigure 3. System architecture.\nFog architecture is a very promising\
    \ technology that brings processing resources closer to the\nplace where the data\
    \ is generated, in our case the ECG acquisition, thus providing low latency\n\
    and energy efﬁciency. This paper focuses on the description of the ﬁrst two levels\
    \ of the proposed\narchitecture, since they constitute the core of the system.\
    \ The information provided by these levels can\nbe incorporated by services at\
    \ the Cloud level provided by third parties and is outside the scope of\nthis\
    \ paper. According to this, the following sections will describe in detail the\
    \ physical and Fog levels.\n4.1. Physical Level\nThe physical layer actually consists\
    \ of a set of capture devices to gather data on health-related\nsignals to diagnose\
    \ cardiovascular diseases. The data collected is then transmitted to the center\
    \ fog layer\nSensors 2020, 20, 7353\n8 of 19\nto make the processing and prediction\
    \ in real time. According to this, this section mainly describes\nthe proposed\
    \ equipment for capturing, pre-processing, transmission and analysis of bio-signals,\n\
    specially the ECG.\nThe layer for capturing and pre-processing the ECG signal\
    \ is divided into three stages. The ﬁrst\nstage is responsible for capturing the\
    \ ECG. This stage integrates a differential ampliﬁer instrument\nAD8232, which\
    \ is responsible for amplifying the heart signal by raising the amplitude from\
    \ milli-volts\n(mV) to approximately 3.3 volts. The second stage includes an analog-to-digital\
    \ converter ADS1115\nthat transforms the analog signal coming from the AD8232\
    \ to its corresponding digital value (with a\n16-bit resolution) (Figure 4 shows\
    \ the proposed architecture while Figure 5 shows how the hardware\nis deployed).\n\
    Figure 4. Architecture of Level 1.\nIn the stage three, the digital value corresponding\
    \ to the ampliﬁed analog signal is transmitted\nto a ESP-32 board via an I2C protocol.\
    \ This board is responsible for receiving the ECG data and\ntransmitting it to\
    \ the Fog device using a built-in SX1276 LoRa chip. The data structure with LoRa\n\
    protocol is shown in the Figure 6.\nLoRa is a LPWAN protocol integrated into devices\
    \ with limited power (e.g., battery powered)\nand transmission of a few bytes\
    \ at a time. LPWAN technologies have been developed to enable new\nhuman-centered\
    \ wireless and health monitoring applications [52]. In these devices the data\
    \ trafﬁc\ncan be initiated by the end-user device or by an external entity that\
    \ wants to communicate with the\nend-user device [53,54]. LPWAN and its open protocol\
    \ LoRaWAN® has become the solution for many\napplications, featuring some of 5G’s\
    \ strengths that allow it to take advantage of an open standard and\na thriving\
    \ global ecosystem. A LoRa device has high range of communication that can easily\
    \ reach\nmore than 10 km, being greater than that offered by Bluetooth®, Wi-Fi\
    \ or the 5G mm. Also, it operates\nin the 900 MHz ISM (Industrial Scientiﬁc and\
    \ Medical) band with a data rate between 0.3–50 Kb/s.\nAlthough the data rate\
    \ could be acceptable for the transmission of signals such as ECG [55], we do\n\
    not use real-time data transmission in our system. In this sense, the data is\
    \ stored for a period of time\n(1 min approx) and then transmits it to the Fog\
    \ module for classiﬁcation.\nThe data structure used in sending the ECG to the\
    \ Fog node converts the signal into an image.\nThis image is analyzed by the second\
    \ level, in order to determine if the user has any cardiac anomaly.\nThis will\
    \ be explained in next section.\nSensors 2020, 20, 7353\n9 of 19\nFigure 5. Hardware\
    \ Deployment.\nFigure 6. The data structure employed by ESP-32 to send the signal.\n\
    4.2. Fog Level\nThis second level is responsible for handling all incoming data\
    \ generated on the ﬁrst level and\nprocessing it to determine if there is an arrhythmia\
    \ in the ECG recording.\nThe Hardware part of this level is formed by a low-cost\
    \ raspberry pi system. This system will be\nin charge of the ECG data classiﬁcation\
    \ process.\nHowever, this system does not have the necessary computing power to\
    \ execute deep learning\nmodels, so it was necessary to incorporate a co-processor,\
    \ such as Intel Neural Compute Stick 2\n(NCS 2) (Figure 7), which decreases the\
    \ classiﬁcation time. The Intel NCS 2 is aimed at cases where\nneural networks\
    \ must be implemented without a connection to cloud-based computing resources.\n\
    It offers quick and easy access to deep-learning capabilities, with high performance\
    \ and low power\nfor integrated IoT applications, and affordably accelerates applications\
    \ based on MobileNet [56] and\ncomputer vision.\nSensors 2020, 20, 7353\n10 of\
    \ 19\nFigure 7. Fog-artiﬁcial intelligence (AI) System.\nAt the end of the process,\
    \ the raspberry pi system is connected to a WAN network, which can\nbe wired,\
    \ 4G or 5G. In this case, we used a 4G USB modem, which allows the system to send\
    \ the\ninformation obtained from the patient to a hospital, clinic or health center,\
    \ to be analyzed by the\ndoctor. The use of a wireless system for sending data\
    \ packages gives the system the ability to be placed\nanywhere in the city.\n\
    For the classiﬁcation process we used a MobileNet network, a computer vision model\
    \ for the open\nsource platform TensorFlow. MobileNets are small, low-latency,\
    \ low-power models that can be used\nfor classiﬁcation, detection, embeddings\
    \ and segmentation processes. These models were designed\nto operate quickly with\
    \ high accuracy in a resource-constrained environment, such as a device or an\n\
    integrated application. For our system, we designed two MobileNets which were\
    \ trained in the cloud\nand later embedded in the raspberry pi.\nFor the classiﬁcation,\
    \ it was considered to group the ECG signals into four classes of rhythm\npatterns:\
    \ Normal sinus rhythm (Nsr), Atrial ﬁbrillation (Af), Other rhythm (Or) and Too\
    \ noisy to classify\n(No), based on the data set of the 2017 Computing in Cardiology\
    \ Challenge (https://www.physionet.\norg/content/challenge-2017/1.0.0/). The data\
    \ set contains 8528 short (9–60 s long) and single-lead\nECG recordings donated\
    \ by AliveCor. ECG recordings were acquired and band pass ﬁltered by the\nKardia\
    \ device Mobile™. All data were provided in MATLAB V4 WFDB-compliant format.\n\
    The extraction of features that determine the class of each signal was done by\
    \ applying analysis\nin the time and frequency domain.\n4.3. Time Domain Signal\
    \ Analysis\nTo achieve this classiﬁcation process, it was decided to convert the\
    \ ECG signals into images.\nFirst, it was necessary to perform a series of image\
    \ pre-processing steps to remove all the axis in the\nimage, as well as crop the\
    \ image by extracting the area of interest (Figure 8).\nThe next step was to resize\
    \ the image from 1500 × 600 to 224 × 224 pixels, since to train the\nMobileNet\
    \ is necessary that all the images have the same size (224 × 224). The designed\
    \ MobileNet\nhas the following hyperparameters: Epochs: 70, batch size: 512, learning\
    \ rate: 0.001. In the training\nprocess, the test accuracy was about 0.6 due to\
    \ the limited amount of dataset samples. The MobileNet\nwas validated by using\
    \ a confusion matrix (see Figure 9) built from 100 non-used images from the\n\
    original dataset. In the confusion matrix it can be seen that in most cases the\
    \ classiﬁcation is done\ncorrectly, although it should be noted that 18% of the\
    \ images belonging to the class Or, have been\nclassiﬁed as Af. This is a slightly\
    \ elevated value for a false negative, the normal for this case is that the\n\
    value should be close to 0. Table 1 summarises the accuracy values of the classiﬁcation\
    \ process in the\ntime domain. For class Af the accuracy is 87%, which suggests\
    \ that our model works well enough in\nthe classiﬁcation process.\nSensors 2020,\
    \ 20, 7353\n11 of 19\nFigure 8. Extraction of the area of interest from the image.\n\
    Figure 9. Confusion matrix of time domain.\nTable 1. Accuracy for each class in\
    \ time domain. Samples used are the same ECG signals converted\ninto images.\n\
    Class\nAccuracy (%)\nNumber of Samples\nAtrial ﬁbrillation (Af)\n87\n100\nNormal\
    \ sinus rhythm (Nsr)\n80\n100\nToo noisy to classify (No)\n88\n100\nOther rhythm\
    \ (Or)\n75\n100\n4.4. Analysis of Signals in the Frequency Domain\nTaking into\
    \ account the possibility of improving the classiﬁcation, it is proposed to carry\
    \ out\nthe analysis of the signals in the frequency domain. In this sense, another\
    \ MobileNet network was\nbuilt with the same characteristics of the analysis in\
    \ time. To analyze the ECG signal in the frequency\ndomain, the spectrum of the\
    \ frequency components was used, showing how the signal’s energy is\nSensors 2020,\
    \ 20, 7353\n12 of 19\ndistributed over a range of frequencies. Figures 10 and\
    \ 11 show the frequency content of an ECG signal\nwith normal rhythm and with\
    \ atrial ﬁbrillation respectively.\nFigure 10. Spectrum of ECG signal with normal\
    \ rhythm.\nFigure 11. Spectrum of ECG signal with atrial ﬁbrillation.\nThe same\
    \ pre-processing steps for time domain images were performed for the classiﬁcation\
    \ with\nspectrum images. As a result of this classiﬁcation process, the confusion\
    \ matrix was extracted using\nthe data for validation. The confusion matrix obtained\
    \ using 81 non-used images from the original\ndataset, the result of this process\
    \ can be seen in the Figure 12. In this case, in the confusion matrix\nobtained\
    \ in the classiﬁcation process using the spectrogram images, it can be observed\
    \ that in 20% of\nthe cases the system classiﬁes the input as class No when it\
    \ should be class Nr. This value is excessively\nhigh, although the values of\
    \ the correct classiﬁcations are more than acceptable.\nSensors 2020, 20, 7353\n\
    13 of 19\nFigure 12. Confusion matrix of frequency domain.\nNevertheless, Table\
    \ 2 summarises the accuracy values of the classiﬁcation process in the frequency\n\
    domain. For class Af the accuracy values was 70%. In this case, a lower accuracy\
    \ value for class Af\nmay be due to the color uniformity of the images. However,\
    \ it is a good classiﬁcation result and an\nindicator of the correct performance\
    \ of the proposed model.\nTable 2. Accuracy for each class in frequency domain.Samples\
    \ used are the same ECG signals converted\ninto images.\nClass\nAccuracy (%)\n\
    Number of Samples\nAtrial ﬁbrillation (Af)\n70\n100\nNormal sinus rhythm (Nsr)\n\
    85\n100\nToo noisy to classify (No)\n60\n100\nOther rhythm (Or)\n81\n100\nConsidering\
    \ that two MobileNet networks have been used to analyze two types of images,\n\
    the result obtained from the classiﬁcations is considered acceptable. In both\
    \ cases we obtained\npercentages of classiﬁcation that did not go below 60% of\
    \ accuracy. The next step was to merge\nthese two networks and from this union\
    \ the real class associated to the input image was extracted.\nThis process is\
    \ explained in the following subsection.\n4.5. Merging Process of the Two Classiﬁcations\n\
    The result of these two networks makes it possible to have a better classiﬁcation,\
    \ which would\nbe similar to having the opinion of two different doctors who analyze\
    \ the same signal with different\nmethods. Consequently, we merge the output of\
    \ the two MobileNets, the one that analyzes the signals\nin the time domain (MobileNet-1)\
    \ and the other that analyzes the signals in the frequency domain\n(MobileNet-2).\
    \ This is done in order to obtain a more solid decision about which is the real\
    \ class.\nTo obtain this output we use the following equation:\ncvd_classi f ied\
    \ = argmax([θ1] ∗ α1 + [θ2] ∗ α2)\n(1)\nwhere cvd_classi f ied denotes the ﬁnal\
    \ result of the classiﬁcation. α1 is the output that analyzes the\nsignals in\
    \ the time domain and is a probability vector in which the probability of being\
    \ one of the four\nclasses is expressed. α2 is also a probabilistic vector but\
    \ represents the output of the MobileNet-2 which\nperforms the classiﬁcation in\
    \ the frequency domain. θ1 and θ2 are the weights for the MobileNet-1 and\nMobileNet-2\
    \ classiﬁers respectively (Figure 13).\nSensors 2020, 20, 7353\n14 of 19\nFigure\
    \ 13. Merging process of the two classiﬁers.\nFor the merging process, the dataset\
    \ was divided into three parts, following the distribution\nstandards when using\
    \ neural networks: 80% for training, 10% for testing and 10% for validation.\n\
    Figure 14 shows the confusion matrix obtained from the merging process and Table\
    \ 3 summarizes\nthe accuracy values of the merging process. For class Af the accuracy\
    \ values was 90%. This allows us\nto infer that the combination of the results\
    \ obtained when analyzing the signals in time and frequency,\ngives better results\
    \ than when analyzing the signals separately.\nFigure 14. Confusion matrix of\
    \ merge process.\nTable 3. Accuracy for each class in merge process. Samples used\
    \ are the same ECG signals converted\ninto images.\nClass\nAccuracy (%)\nNumber\
    \ of Samples\nAtrial ﬁbrillation (Af)\n90\n100\nNormal sinus rhythm (Nsr)\n89\n\
    100\nToo noisy to classify (No)\n92\n100\nOther rhythm (Or)\n95\n100\nTo illustrate\
    \ the classiﬁcation process with a real case, a healthy patient’s ECG (without\
    \ cardiac\narrhythmia) was recorded for one minute.\nThe ECG was captured over\
    \ an entire day using\nSensors 2020, 20, 7353\n15 of 19\nthe device described\
    \ in this document.\nThe signals were captured at intervals of 5 min each.\nAccordingly,\
    \ about 200 images were obtained during the testing process. Once the signals\
    \ were\ncaptured and sent to the AI-Fog device, this transmission process took\
    \ approximately 1 min and 3 s.\nLater, the conversion of the images was performed,\
    \ using the same pre-processing of the training\nphase. The images were resized\
    \ to (224 × 224) and the axes and magnitude values were eliminated\nto avoid noise\
    \ that interferes with classiﬁcation process. Figure 15 shows an ECG signal obtained\n\
    from a healthy subject using the proposed monitoring system. In the generated\
    \ input signal shown in\nFigure 15, the system determined that the user had a\
    \ Normal Sinus Rhythm, and the time it took the\nsystem to perform this classiﬁcation\
    \ was 19 ms.\nFigure 15. Pre-analysis of the signal was: Normal Sinus Rhythm.\
    \ Waiting time for classiﬁcation: 19 ms.\n(No magnitudes are indicated to avoid\
    \ noise to the neural network).\nThe results of the merged model indicate that\
    \ this model seems to work correctly with all the\nimages tested, allowing the\
    \ correct classiﬁcation of the classes that were previously trained.\n5. Conclusions\
    \ and Future Work\nThe world is facing an alarming growth in cardiovascular disease\
    \ due in part to an unhealthy\nlifestyle. Thanks to the high level of sophistication\
    \ that new technologies have reached in areas\nsuch as informatics and telecommunications\
    \ (e.g., IoT devices or AI techniques), effective solutions\ncan be developed\
    \ to address this challenge. In this sense, we present a ECG monitoring system\
    \ for\ncardiovascular patients. The system incorporate a deep learning tool based\
    \ on fog computing in order\nto perform an early detection of Atrial Fibrillation\
    \ and other heart rhythms.\nThe proposed approach was validated with a small group\
    \ of elderly people from a day care center\nnear the city of Valencia (Spain).\
    \ In this center, the necessary infrastructure was installed to simulate a\nremote\
    \ monitoring situation. Preliminary results indicated that the system is capable\
    \ of identifying\nabnormal heart rhythms. Similarly, the results obtained were\
    \ evaluated by medical personnel without\nany problems being detected in the use\
    \ of the system.\nCompared to traditional methods for signal analysis, the proposed\
    \ method analyzes the ECG\nin the time and frequency domain, obtaining two classiﬁcation\
    \ models that when merged improve\nthe accuracy of the procedure. Once the tests\
    \ were completed, the model was incorporated into the\nFog system, which included\
    \ an Intel NCS2 processor that optimizes the classiﬁcation and speeds up\nthe\
    \ process. It also incorporates a LoRa communication system, that compared to\
    \ other transmission\nmethods such as Bluetooth or Zigbee, has a longer range\
    \ and low power consumption. This makes it\nSensors 2020, 20, 7353\n16 of 19\n\
    ideal for the design of portable devices. Once the network has been trained and\
    \ the system sends the\nECG, the classiﬁcation result can be obtained quickly.\n\
    Future work will initially focus on acquiring other bio-signals such as photoplethysmography,\n\
    phonocardiography or oxygen saturation. This will allow us to have other variables\
    \ that increase the\nquality of monitoring the cardiovascular patient and advise\
    \ the specialized medical staff. At the same\ntime, we will continue, as far as\
    \ possible, to carry out more tests, collaborating with a greater number\nof elderly\
    \ people and thus expanding the experiments carried out to date.\nAuthor Contributions:\
    \ J.A.R., conceived the idea, implemented the algorithms, and performed the experiments.\n\
    S.G.-O., C.C., V.J., have contributed to the early versions of the manuscript\
    \ and contributed to deﬁne the\nmethodology. All authors contributed to writing,\
    \ reviewing, and editing the paper. All authors have read\nand agreed to the published\
    \ version of the manuscript.\nFunding: This work was partly supported by the Spanish\
    \ Government (RTI2018-095390-B-C31), Universitat\nPolitecnica de Valencia Research\
    \ Grant PAID-10-19. S.G-O has been funded by grant PDBCEx COLDOC 679,\nscholarship\
    \ programme from COLCIENCIAS (Administrative Department of Science, Technology\
    \ and Innovation\nof Colombia).\nConﬂicts of Interest: The authors declare no\
    \ conﬂict of interest.\nAbbreviations\nThe following abbreviations are used in\
    \ this manuscript:\nCVD\nCardiovascular diseases\nECG\nElectrocardiogram\nAF\n\
    Atrial ﬁbrillation\nIoT\nInternet of things\nIoMT\nInternet of Medical Thins\n\
    LPWAN\nLow energy wireless area network\nNCS2\nNeural Compute Stick 2\nReferences\n\
    1.\nJoseph, P.; Leong, D.; McKee, M.; Anand, S.S.; Schwalm, J.D.; Teo, K.; Mente,\
    \ A.; Yusuf, S. Reducing the global\nburden of cardiovascular disease, part 1:\
    \ The epidemiology and risk factors. Circ. Res. 2017, 121, 677–694.\n[CrossRef]\
    \ [PubMed]\n2.\nTanner, F.C.; Brooks, N.; Fox, K.F.; Gonçalves, L.; Kearney, P.;\
    \ Michalis, L.; Pasquet, A.; Price, S.; Bonnefoy, E.;\nWestwood, M.; et al. ESC\
    \ Core Curriculum for the Cardiologist. Eur. Heart J. 2020, 41, 3605–3692. [CrossRef]\n\
    3.\nMolinari, G.; Molinari, M.; Di Biase, M.; Brunetti, N.D. Telecardiology and\
    \ its settings of application:\nAn update. J. Telemed. Telecare 2018, 24, 373–381.\
    \ [CrossRef] [PubMed]\n4.\nMajumder, S.; Mondal, T.; Deen, M. Wearable Sensors\
    \ for Remote Health Monitoring. Sensors 2017, 17, 130.\n[CrossRef] [PubMed]\n\
    5.\nSteinberg, C.; Philippon, F.; Sanchez, M.; Fortier-Poisson, P.; O’Hara, G.;\
    \ Molin, F.; Sarrazin, J.F.; Nault, I.;\nBlier, L.; Roy, K.; et al. A Novel Wearable\
    \ Device for Continuous Ambulatory ECG Recording: Proof of\nConcept and Assessment\
    \ of Signal Quality. Biosensors 2019, 9, 17. [CrossRef] [PubMed]\n6.\nPani, D.;\
    \ Dessì, A.; Saenz-Cogollo, J.F.; Barabino, G.; Fraboni, B.; Bonﬁglio, A. Fully\
    \ Textile, PEDOT:PSS\nBased Electrodes for Wearable ECG Monitoring Systems.\n\
    IEEE Trans. Biomed. Eng. 2016, 63, 540–549.\n[CrossRef]\n7.\nXu, X.; Liu, Z.;\
    \ He, P.; Yang, J. Screen printed silver nanowire and graphene oxide hybrid transparent\n\
    electrodes for long-term electrocardiography monitoring. J. Phys. Appl. Phys.\
    \ 2019, 52, 455401. [CrossRef]\n8.\nElkhodr, M.; Shahrestani, S.; Cheung, H.\n\
    Emerging wireless technologies in the internet of things:\nA comparative study.\
    \ arXiv 2016, arXiv:1611.00861.\n9.\nRohokale, V.M.; Prasad, N.R.; Prasad, R.\
    \ A cooperative Internet of Things (IoT) for rural healthcare\nmonitoring and\
    \ control. In Proceedings of the 2011 2nd International Conference on Wireless\
    \ Communication,\nVehicular Technology, Information Theory and Aerospace & Electronic\
    \ Systems Technology (Wireless VITAE),\nChennai, India, 28 February–3 March 2011;\
    \ pp. 1–6.\nSensors 2020, 20, 7353\n17 of 19\n10.\nDarshan, K.; Anandakumar, K.\
    \ A comprehensive review on usage of Internet of Things (IoT) in healthcare\n\
    system. In Proceedings of the 2015 International Conference on Emerging Research\
    \ in Electronics, Computer\nScience and Technology (ICERECT), Mandya, India, 17–19\
    \ December 2015; pp. 132–136.\n11.\nJangra, M.; Dhull, S.K.; Singh, K.K. ECG arrhythmia\
    \ classiﬁcation using modiﬁed visual geometry group\nnetwork (mVGGNet). J. Intell.\
    \ Fuzzy Syst. 2020, 38, 1–15. [CrossRef]\n12.\nSun, J.; Huang, X.; Hu, Y.; Liu,\
    \ Z. A Severity Diagnosis Method for Heart Disease based on Fusion Rough\nSets.\
    \ In Proceedings of the 2020 2nd International Conference on Intelligent Medicine\
    \ and Image Processing,\nTianjin, China, 23–26 April 2020; pp. 86–89.\n13.\nSangaiah,\
    \ A.K.; Arumugam, M.; Bian, G.B. An intelligent learning approach for improving\
    \ ECG signal\nclassiﬁcation and arrhythmia analysis. Artif. Intell. Med. 2020,\
    \ 103, 101788. [CrossRef]\n14.\nMarinucci, D.; Sbrollini, A.; Marcantoni, I.;\
    \ Morettini, M.; Swenne, C.A.; Burattini, L. Artiﬁcial Neural\nNetwork for Atrial\
    \ Fibrillation Identiﬁcation in Portable Devices. Sensors 2020, 20, 3570. [CrossRef]\
    \ [PubMed]\n15.\nJothiramalingam, R.; Jude, A.; Patan, R.; Ramachandran, M.; Duraisamy,\
    \ J.H.; Gandomi, A.H. Machine\nlearning-based left ventricular hypertrophy detection\
    \ using multi-lead ECG signal. Neural Comput. Appl.\n2020, 1–11.\n16.\nLih, O.S.;\
    \ Jahmunah, V.; San, T.R.; Ciaccio, E.J.; Yamakawa, T.; Tanabe, M.; Kobayashi,\
    \ M.; Faust, O.;\nAcharya, U.R. Comprehensive electrocardiographic diagnosis based\
    \ on deep learning. Artif. Intell. Med.\n2020, 103, 101789. [CrossRef] [PubMed]\n\
    17.\nRibeiro, A.H.; Ribeiro, M.H.; Paixão, G.M.; Oliveira, D.M.; Gomes, P.R.;\
    \ Canazart, J.A.; Ferreira, M.P.;\nAndersson, C.R.; Macfarlane, P.W.; Wagner,\
    \ M., Jr.; et al. Automatic diagnosis of the 12-lead ECG using a\ndeep neural\
    \ network. Nat. Commun. 2020, 11, 1–9. [CrossRef]\n18.\nMoghadas, E.; Rezazadeh,\
    \ J.; Farahbakhsh, R. An IoT patient monitoring based on fog computing and data\n\
    mining: Cardiac arrhythmia usecase. Internet Things 2020, 11, 100251. [CrossRef]\n\
    19.\nAndreas, S.; Bothner, U.; de la Hoz, A.; Kloer, I.; Trampisch, M.; Alter,\
    \ P. A post hoc Holter ECG analysis of\nolodaterol and formoterol in moderate-to-very-severe\
    \ COPD. Int. J. Chronic Obstr. Pulm. Dis. 2020, 15, 1955.\n[CrossRef]\n20.\nAdam,\
    \ S.; Zahra, S.A.; Chor, C.Y.T.; Khare, Y.; Harky, A. COVID-19 pandemic and its\
    \ impact on service\nprovision: A cardiology prospect. Acta Cardiol. 2020, 1–8.\
    \ [CrossRef]\n21.\nJadhav, K.B.; Chaskar, U.M. Design and development of smart\
    \ phone based ECG monitoring system.\nIn Proceedings of the 2017 2nd IEEE International\
    \ Conference on Recent Trends in Electronics, Information\nCommunication Technology\
    \ (RTEICT), Bangalore, India, 19–20 May 2017; pp. 1568–1572.\n22.\nMahmud, M.S.;\
    \ Wang, H.; Esfar-E-Alam, A.M.; Fang, H. A Wireless Health Monitoring System Using\
    \ Mobile\nPhone Accessories. IEEE Internet Things J. 2017, 4, 2009–2018. [CrossRef]\n\
    23.\nWan, J.; Al-awlaqi, M.A.; Li, M.; O’Grady, M.; Gu, X.; Wang, J.; Cao, N.\
    \ Wearable IoT enabled real-time\nhealth monitoring system. Eurasip J. Wirel.\
    \ Commun. Netw. 2018, 2018, 298. [CrossRef]\n24.\nLi, C.; Hu, X.; Zhang, L. The\
    \ IoT-based heart disease monitoring system for pervasive healthcare service.\n\
    Procedia Comput. Sci. 2017, 112, 2328–2334. [CrossRef]\n25.\nSundarasekar, R.;\
    \ Thanjaivadivel, M.; Manogaran, G.; Kumar, P.M.; Varatharajan, R.; Chilamkurti,\
    \ N.;\nHsu, C.H. Internet of things with maximal overlap discrete wavelet transform\
    \ for remote health monitoring\nof abnormal ECG signals. J. Med. Syst. 2018, 42,\
    \ 228. [CrossRef] [PubMed]\n26.\nDjelouat, H.; Baali, H.; Amira, A.; Bensaali,\
    \ F.\nIoT based compressive sensing for ECG monitoring.\nIn Proceedings of the\
    \ 2017 IEEE International Conference on Internet of Things (iThings) and IEEE\
    \ Green\nComputing and Communications (GreenCom) and IEEE Cyber, Physical and\
    \ Social Computing (CPSCom)\nand IEEE Smart Data (SmartData), Exeter, UK, 21–23\
    \ June 2017; pp. 183–189.\n27.\nJethwa, B.; Panchasara, M.; Zanzarukiya, A.; Parekh,\
    \ R. Realtime Wireless Embedded Electronics for\nSoldier Security. In Proceedings\
    \ of the 2020 IEEE International Conference on Electronics, Computing and\nCommunication\
    \ Technologies (CONECCT), Bangalore, India, 2–4 July 2020; pp. 1–6.\n28.\nPanagi,\
    \ G.; Katzis, K. Towards 3-Lead Electrocardiogram Monitoring over LoRa: A Conceptual\
    \ Design.\nIn Proceedings of the 2020 IEEE International Conference on Communications\
    \ Workshops (ICC Workshops),\nDublin, Ireland, 7–11 June 2020; pp. 1–5.\n29.\n\
    Qaisar, S.M.; Subasi, A. Cloud-based ECG monitoring using event-driven ECG acquisition\
    \ and machine\nlearning techniques. Phys. Eng. Sci. Med. 2020, 43, 623–634. [CrossRef]\n\
    Sensors 2020, 20, 7353\n18 of 19\n30.\nHuda, N.; Khan, S.; Abid, R.; Shuvo, S.B.;\
    \ Labib, M.M.; Hasan, T. A Low-cost, Low-energy Wearable ECG\nSystem with Cloud-Based\
    \ Arrhythmia Detection. In Proceedings of the 2020 IEEE Region 10 Symposium\n\
    (TENSYMP), Dhaka, Bangladesh, 5–7 June 2020; pp. 1840–1843.\n31.\nZhang, X.; Xia,\
    \ X.; Leng, M. Big Health Data Resource Integration Method Based on Hybrid Cloud\
    \ and\nFog Computing. In Proceedings of the 3rd International Conference on Electronics,\
    \ Communications and\nControl Engineering, Phuket, Thailand, 8–10 April 2020;\
    \ pp. 13–20.\n32.\nShukla, S.; Hassan, M.F.; Khan, M.K.; Jung, L.T.; Awang, A.\
    \ An analytical model to minimize the latency in\nhealthcare internet-of-things\
    \ in fog computing environment. PLoS ONE 2019, 14, e0224934. [CrossRef]\n33.\n\
    Awaisi, K.S.; Hussain, S.; Ahmed, M.; Khan, A.A.; Ahmed, G. Leveraging IoT and\
    \ Fog Computing in\nHealthcare Systems. IEEE Internet Things Mag. 2020, 3, 52–56.\
    \ [CrossRef]\n34.\nShaheen, Q.; Shiraz, M.; Hashmi, M.U.; Mahmood, D.; Akhtar,\
    \ R. A Lightweight Location-Aware Fog\nFramework (LAFF) for QoS in Internet of\
    \ Things Paradigm. Mob. Inf. Syst. 2020, 2020. [CrossRef]\n35.\nGia, T.N.; Jiang,\
    \ M.; Sarker, V.K.; Rahmani, A.M.; Westerlund, T.; Liljeberg, P.; Tenhunen, H.\
    \ Low-cost\nfog-assisted health-care IoT system with energy-efﬁcient sensor nodes.\
    \ In Proceedings of the 2017 13th\nInternational Wireless Communications and Mobile\
    \ Computing Conference (IWCMC), Valencia, Spain,\n26–30 June 2017; pp. 1765–1770.\n\
    36.\nMutlag, A.A.; Khanapi Abd Ghani, M.; Mohammed, M.A.; Maashi, M.S.; Mohd,\
    \ O.; Mostafa, S.A.;\nAbdulkareem, K.H.; Marques, G.; de la Torre Díez, I. MAFC:\
    \ Multi-Agent Fog Computing Model for\nHealthcare Critical Tasks Management. Sensors\
    \ 2020, 20, 1853. [CrossRef]\n37.\nHe, S.; Cheng, B.; Wang, H.; Huang, Y.; Chen,\
    \ J. Proactive personalized services through fog-cloud computing\nin large-scale\
    \ IoT-based healthcare application. China Commun. 2017, 14, 1–16. [CrossRef]\n\
    38.\nBandopadhaya, S.; Dey, R.; Suhag, A. Integrated healthcare monitoring solutions\
    \ for soldier using the\ninternet of things with distributed computing. Sustain.\
    \ Comput. Inform. Syst. 2020, 26, 100378. [CrossRef]\n39.\nTayeh, G.B.; Azar,\
    \ J.; Makhoul, A.; Guyeux, C.; Demerjian, J. A Wearable LoRa-Based Emergency System\
    \ for\nRemote Safety Monitoring. In Proceedings of the 2020 International Wireless\
    \ Communications and Mobile\nComputing (IWCMC), Beijing, China, 28 June–2 July\
    \ 2020; pp. 120–125.\n40.\nShobha, H.; Bumika, N.; Lekhana, B.; Likhitha, B.;\
    \ Nithyashree, N. Real Time Tracking and Security System\nfor Rural Areas Using\
    \ LoRa Network. Int. J. Res. Eng. Sci. Manag. 2020, 3, 2581–5792.\n41.\nTownsend,\
    \ N.; Wilson, L.; Bhatnagar, P.; Wickramasinghe, K.; Rayner, M.; Nichols, M. Cardiovascular\n\
    disease in Europe: Epidemiological update 2016. Eur. Heart J. 2016, 37, 3232–3245.\
    \ [CrossRef]\n42.\nLip, G.Y.H.; Fauchier, L.; Freedman, Saul B.and Van Gelder,\
    \ I.; Natale, A.; Gianni, C.; Nattel, S.; Potpara, T.;\nRienstra, M.; Tse, H.F.;\
    \ Lane, D.A. Atrial ﬁbrillation. Nat. Rev. Dis. Prim. 2016, 2, 16016. [CrossRef]\
    \ [PubMed]\n43.\nDi Carlo, A.; Bellino, L.; Consoli, D.; Mori, F.; Zaninelli,\
    \ A.; Baldereschi, M.; Cattarinussi, A.; D’Alfonso,\nM.G.; Gradia, C.; Sgherzi,\
    \ B.; et al. Prevalence of atrial ﬁbrillation in the Italian elderly population\
    \ and\nprojections from 2020 to 2060 for Italy and the European Union: the FAI\
    \ Project. EP Eur. 2019, 21, 1468–1475.\n[CrossRef] [PubMed]\n44.\nXu, J.; Luc,\
    \ J.G.Y.; Phan, K. Atrial ﬁbrillation: review of current treatment strategies.\
    \ J. Thorac. Dis. 2016,\n8, E886–E900. [CrossRef] [PubMed]\n45.\nNishiga, M.;\
    \ Wang, D.W.; Han, Y.; Lewis, D.B.; Wu, J.C. COVID-19 and cardiovascular disease:\
    \ from basic\nmechanisms to clinical perspectives. Nat. Rev. Cardiol. 2020, 17,\
    \ 543–558. [CrossRef]\n46.\nAnker, S.D.; Koehler, F.; Abraham, W.T. Telemedicine\
    \ and remote management of patients with heart failure.\nLancet 2011, 378, 731–739.\
    \ [CrossRef]\n47.\nSchwab, J.O.; Helms, T.M. Derzeitige und zukünftige Bedeutung\
    \ der Telemedizin im Arrhythmienotfall.\nHerzschrittmachertherapie Elektrophysiologie\
    \ 2020, 31, 73–76. [CrossRef]\n48.\nYin, M.; Tang, R.; Liu, M.; Han, K.; Lv, X.;\
    \ Huang, M.; Xu, P.; Hu, Y.; Ma, B.; Gai, Y. Inﬂuence of Optimization\nDesign\
    \ Based on Artiﬁcial Intelligence and Internet of Things on the Electrocardiogram\
    \ Monitoring System.\nJ. Healthc. Eng. 2020, 2020, 8840910. [CrossRef]\n49.\n\
    Fog Computing and the Internet of Things: Extend the Cloud to Where the Things\
    \ are. Cisco White Paper.\n2015. Available online: https://www.cisco.com/c/dam/en_us/solutions/trends/iot/docs/computing-\n\
    overview.pdf (accessed on 14 December 2020).\n50.\nDastjerdi, A.V.; Gupta, H.;\
    \ Calheiros, R.N.; Ghosh, S.K.; Buyya, R. Fog computing: Principles, architectures,\n\
    and applications. In Internet of Things; Elsevier: Amsterdam, The Netherlands,\
    \ 2016; pp. 61–75.\nSensors 2020, 20, 7353\n19 of 19\n51.\nOpenFog Consortium.\
    \ OpenFog Reference Architecture for Fog Computing; Architecture Working Group;\n\
    OpenFog Consortium: Fremont, CA, USA, 2017; pp. 1–162.\n52.\nPetäjäjärvi, J.;\
    \ Mikhaylov, K.; Hämäläinen, M.; Iinatti, J. Evaluation of LoRa LPWAN technology\
    \ for remote\nhealth and wellbeing monitoring. In Proceedings of the 2016 10th\
    \ International Symposium on Medical\nInformation and Communication Technology\
    \ (ISMICT), Worcester, MA, USA, 20–23 March 2016; pp. 1–5.\n53.\nAugustin, A.;\
    \ Yi, J.; Clausen, T.; Townsley, W.M. A study of LoRa: Long range & low power\
    \ networks for the\ninternet of things. Sensors 2016, 16, 1466.\n54.\nIsmail,\
    \ N.L.; Kassim, M.; Ismail, M.; Mohamad, R. A review of low power wide area technology\
    \ in licensed\nand unlicensed spectrum for IoT use cases. Bull. Electr. Eng. Inform.\
    \ 2018, 7, 183–190. [CrossRef]\n55.\nSodhro, A.H.; Chen, L.; Sekhari, A.; Ouzrout,\
    \ Y.; Wu, W. Energy efﬁciency comparison between data rate\ncontrol and transmission\
    \ power control algorithms for wireless body sensor networks. Int. J. Distrib.\
    \ Sens.\nNetw. 2018, 14, 1550147717750030. [CrossRef]\n56.\nHoward, A.G.;\nZhu,\
    \ M.;\nChen, B.;\nKalenichenko, D.;\nWang, W.;\nWeyand, T.;\nAndreetto, M.;\n\
    Adam, H. Mobilenets: Efﬁcient convolutional neural networks for mobile vision\
    \ applications. arXiv 2017,\narXiv:1704.04861.\nPublisher’s Note: MDPI stays neutral\
    \ with regard to jurisdictional claims in published maps and institutional\nafﬁliations.\n\
    © 2020 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open\
    \ access\narticle distributed under the terms and conditions of the Creative Commons\
    \ Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/20/24/7353/pdf?version=1608624826
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: An IoT and Fog Computing-Based Monitoring System for Cardiovascular Patients
    with Automatic ECG Classification Using Deep Neural Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agronomy12010127
  analysis: '>'
  authors:
  - Amjad Rehman
  - Tanzila Saba
  - Muhammad Kashif
  - Suliman Mohamed Fati
  - Saeed Ali Bahaj
  - Huma Choudhary
  citation_count: 89
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Rehman, A.; Saba, T.;\nKashif, M.; Fati, S.M.; Bahaj, S.A.;\nChaudhry,\
    \ H. A Revisit of Internet of\nThings Technologies for Monitoring\nand Control\
    \ Strategies in Smart\nAgriculture. Agronomy 2022, 12, 127.\nhttps://doi.org/10.3390/\n\
    agronomy12010127\nAcademic Editor: Paul Kwan\nReceived: 7 October 2021\nAccepted:\
    \ 11 November 2021\nPublished: 5 January 2022\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nagronomy\nReview\nA Revisit of Internet of Things Technologies for Monitoring\n\
    and Control Strategies in Smart Agriculture\nAmjad Rehman 1,*\n, Tanzila Saba\
    \ 1,*\n, Muhammad Kashif 2, Suliman Mohamed Fati 1\n, Saeed Ali Bahaj 3\nand Huma\
    \ Chaudhry 4\n1\nArtiﬁcial Intelligence & Data Analytics Lab., CCIS Prince Sultan\
    \ University, Riyadh 11586, Saudi Arabia;\nsmfati@yahoo.com\n2\nDepartment of\
    \ Computer Science & Software Engineering, International Islamic University,\n\
    Islamabad 44000, Pakistan; drkashif491@gmail.com\n3\nMIS Department College of\
    \ Business Administration, Prince Sattam Bin Abdulaziz University,\nAlkharj 11942,\
    \ Saudi Arabia; s.bahaj@psau.edu.sa\n4\nMelbourne Institute of Technology, Melbourne,\
    \ VIC 3000, Australia; huma.bicse@gmail.com\n*\nCorrespondence: arkhan@psu.edu.sa\
    \ (A.R.); tsaba@psu.edu.sa (T.S.)\nAbstract: With the rise of new technologies,\
    \ such as the Internet of Things, raising the productivity of\nagricultural and\
    \ farming activities is critical to improving yields and cost-effectiveness. IoT,\
    \ in particular,\ncan improve the efficiency of agriculture and farming processes\
    \ by eliminating human intervention\nthrough automation. The fast rise of Internet\
    \ of Things (IoT)-based tools has changed nearly all life\nsectors, including\
    \ business, agriculture, surveillance, etc. These radical developments are upending\n\
    traditional agricultural practices and presenting new options in the face of various\
    \ obstacles. IoT aids in\ncollecting data that is useful in the farming sector,\
    \ such as changes in climatic conditions, soil fertility,\namount of water required\
    \ for crops, irrigation, insect and pest detection, bug location disruption of\n\
    creatures to the sphere, and horticulture. IoT enables farmers to effectively\
    \ use technology to monitor\ntheir forms remotely round the clock. Several sensors,\
    \ including distributed WSNs (wireless sensor\nnetworks), are utilized for agricultural\
    \ inspection and control, which is very important due to their exact\noutput and\
    \ utilization. In addition, cameras are utilized to keep an eye on the field from\
    \ afar. The goal\nof this research is to evaluate smart agriculture using IoT\
    \ approaches in depth. The paper demonstrates\nIoT applications, benefits, current\
    \ obstacles, and potential solutions in smart agriculture. This smart\nagricultural\
    \ system aims to find existing techniques that may be used to boost crop yield\
    \ and save time,\nsuch as water, pesticides, irrigation, crop, and fertilizer\
    \ management.\nKeywords: agriculture; land monitoring; control strategies; IoT;\
    \ sensors; economic growth; water\nmanagement and water resources\n1. Introduction\n\
    The Internet of Things (IoT) is an interconnected network of computing devices,\n\
    people with unique IDs, and the capacity to communicate via a network without\
    \ human\ninteraction. The Internet of Things (IoT) intends to connect the physical\
    \ and virtual worlds\nby interacting and exchanging data via the internet. Linked\
    \ industries, smart cities, smart\nhomes, smart energy, connected vehicles, smart\
    \ agriculture, connected buildings and\ncampuses, health care, and logistics are\
    \ all examples of IoT applications [1]. The increasing\nneed for food, both in\
    \ terms of quantity and quality, has required the development and\nmodernization\
    \ of the agricultural sector. The “Internet of Things” (IoT) is a promising set\
    \ of\ntechnologies that may be used to provide a variety of agricultural modernization\
    \ solutions.\nScientiﬁc institutions, research institutes, and the agricultural\
    \ sector are racing to provide\nmore and more IoT solutions to agricultural business\
    \ stakeholders, laying the foundation\nfor a clear role when IoT becomes a mainstream\
    \ technology [2]. The world’s biodiversity\nis anticipated to support between\
    \ 9.4 and 10.1 billion people by 2050, increasing the need\nfor specialized food\
    \ production zones, especially for harvesting and livestock. This means\nAgronomy\
    \ 2022, 12, 127. https://doi.org/10.3390/agronomy12010127\nhttps://www.mdpi.com/journal/agronomy\n\
    Agronomy 2022, 12, 127\n2 of 21\nthat by 2050, global food production will have\
    \ to grow by 70% [3]. Crop production is\nincreasingly crucial in agriculture,\
    \ with commodities, such as cotton, wheat, gum, and\nothers, playing signiﬁcant\
    \ roles in many nations’ economies.\nIn 2019, the IoT market was 690 billion dollars\
    \ and was projected to be 1256.1 billion\ndollars by 2025 with a 10.53% CAGR globally\
    \ from 2020 to 2025. Solutions are needed to\nassure timely and regular agricultural\
    \ growth and yield due to the combined effects of a\ngrowing population, natural\
    \ weather unpredictability, soil degradation, and climate change.\nFarm management,\
    \ animal monitoring, irrigation control, greenhouse environmental con-\ntrol,\
    \ autonomous agricultural machinery, and drones are examples of IoT applications\
    \ in\nagriculture, all of which contribute to agrarian automation. It also demands\
    \ contributing to\nagricultural food production’s long-term viability. Land appraisal,\
    \ crop protection, and\ncrop yield projection, according to these needs, are essential\
    \ to world food production [4].\nFarmers, for example, can manage ﬁeld environments\
    \ in real-time and more effortlessly\nregulate ﬁelds using wireless sensors and\
    \ mobile networks. Farmers may also utilize IoT\ntechnology to capture essential\
    \ data, subsequently creating yield maps that enable precision\nagriculture to\
    \ produce low-cost high-quality crops [5]. Figure 1 depicts the smart precision\n\
    agriculture cycle.\nFigure 1. Smart precision agriculture cycle.\nSmart agriculture\
    \ is becoming increasingly important to farmers in the modern day,\nand it will\
    \ become even more critical in the future to ensure proper ﬁeld expansion and\n\
    crop output. Unfortunately, traditional farming methods are not up to the task\
    \ of meeting\nrising demand. As a result, the ground stays barren and devoid of\
    \ fertility due to poor\nutilization of nutrients, water management, light, fertilizers,\
    \ and pesticides. Crop diseases,\nwater shortage, irrigation, and pesticide control\
    \ monitoring are only some of the challenges\nthat different IoT automation and\
    \ control systems can efﬁciently address [6]. This is why\ncontemporary agriculture\
    \ employs smart equipment and tools from sowing through crop\nharvesting, storage,\
    \ and transportation. The operation is smart and cost-effective due to its\naccurate\
    \ monitoring capabilities and fast reporting using a range of sensors. Autonomous\n\
    drones, harvesters, tractors, satellites, and robots are now complementing agricultural\n\
    equipment. Sensors may be instantly placed and begin collecting data, which is\
    \ then\nimmediately available for further analysis over the internet. By enabling\
    \ reliable data\ngathering at each place, sensor technology allows crop and site-speciﬁc\
    \ agriculture [7].\nUsing advanced control methods to automate agricultural activities\
    \ has increased crop\nproduction while also improving soil fertility.\nThe following\
    \ are the signiﬁcant contributions made by this study:\nAgronomy 2022, 12, 127\n\
    3 of 21\n•\nThe world’s expectations of the agriculture industry, based on existing\
    \ IoT approaches\nfor providing solutions and new applications and technology.\n\
    •\nIdentiﬁcation of numerous application ﬁelds, as well as a summary of the most\
    \ recent\nstate-of-the-art literature on IoT technology.\n•\nThe Internet of Things’\
    \ task is to address these constraints and other challenges, such\nas resource\
    \ scarcity and precise usage, climate change, etc.\nThe rest of the paper is laid\
    \ out in the following manner. Section 2 delves into the\ndetails of smart agricultural\
    \ applications based on IoT technologies. Section 3 discusses the\nmany types\
    \ of equipment and technology available. Section 4 identiﬁes unsolved problems\n\
    and potential remedies. Finally, Section 5 concludes the research.\n2. Major Applications\
    \ of Smart Agriculture\nPrecision farming, animal monitoring, and greenhouse monitoring\
    \ are a few agri-\ncultural businesses utilizing the Internet of Things. Every\
    \ element of traditional farming\noperation may be substantially improved by combining\
    \ cutting-edge sensors and Internet\nof Things technology. At the moment, the\
    \ Internet of Things’ (IoT’s) and wireless sensors’\nharmonious incorporation\
    \ into smart agriculture can catapult agriculture to formerly in-\nconceivable\
    \ heights. Appropriateness of land, pest monitoring and control, irrigation, and\n\
    yield optimization are just a few of the conventional agricultural issues that\
    \ IoT may assist\nin resolving through the implementation of smart agriculture\
    \ approaches [7]. Figure 2\nillustrates the comprehensive paradigm of smart agricultural\
    \ monitoring system applica-\ntions, facilities, and sensors. Agriculture applications\
    \ are classiﬁed as IoT agricultural apps,\nsmartphone-based agricultural apps,\
    \ and sensor-based agricultural apps. Wireless sensor\nnetworks (WSNs) have recently\
    \ been used to enable IoT applications for smart agriculture,\nincluding irrigation\
    \ sensor networks, frost event prediction, precision agriculture and soil\nfarming,\
    \ smart farming, and unsighted object recognition, among others [8]. Signiﬁcant\n\
    instances of how new technology assists in the general improvement of efﬁciency\
    \ at various\nstages are included here.\nFigure 2. General paradigm of smart agriculture.\n\
    Agronomy 2022, 12, 127\n4 of 21\n2.1. Monitoring of Soil Moisture and Water Levels\n\
    Soil monitoring has developed into one of the most challenging agricultural areas,\n\
    both for manufacturers and farmers. Numerous environmental issues associated with\
    \ soil\nmonitoring affect agricultural yield. When these sorts of obstacles are\
    \ correctly identiﬁed,\nfarming patterns and methods become readily understandable.\
    \ The soil’s moisture content,\nwetness, fertilizer application, and temperature\
    \ trends are all being monitored. Soil’s\nmoisture environment management system\
    \ uses soil humidity and moisture sensors. By\nproposing an appropriate fertilizer\
    \ approach, the results of a soil monitoring test report\nassist farmers in increasing\
    \ crop yield [9]. The sensor can read both analog and digital\noutputs. The judgment\
    \ is made based on data collected from sensors and compared to\npredeﬁned threshold\
    \ levels. The soil moisture sensor is used to regulate the irrigation\nsystem’s\
    \ automatic operation. When the moisture level goes below the threshold value,\
    \ the\nwater pump is triggered [10].\nSoil mapping enables you to sow many crop\
    \ types in the same ﬁeld, allowing you\nto match better soil characteristics,\
    \ such as seed compatibility, sowing timing, and even\nplanting depth, as certain\
    \ crops are deeply rooted while others are not. Additionally,\ngrowing many crops\
    \ concurrently may result in more prudent agricultural practices, such\nas resource\
    \ conservation. The system is composed of a distributed network of soil moisture\n\
    and temperature sensors located in the root zone of the plant, as well as rain\
    \ sensors\nlocated in various zones. The microcontroller collects and transmits\
    \ all sensor data and\ninformation. In addition, a temperature and soil moisture\
    \ threshold algorithm will be\ndevised and implemented in a microcontroller-based\
    \ gateway to regulate the amount of\nwater given to the ﬁelds. Finally, the user\
    \ is provided with control via an IoT module based\non rain sensor data to interrupt\
    \ or restart water ﬂow as needed [11].\nIf the ﬁeld contains an adequate amount\
    \ of water, no water will be pumped into\nit. However, when the soil’s water moisture\
    \ content falls below a predetermined level,\nwater is pumped into the ﬁeld until\
    \ the desired moisture content is attained. The DHT11\nsensor monitors the ﬁeld’s\
    \ temperature and humidity. In addition, a PIR motion sensor\ndetects when an\
    \ intruder (human or animal) enters the area. Consequently, sensor values\nare\
    \ continually monitored and displayed on the farmer’s mobile device through a\
    \ GSM\nsim900A module, which includes a sim card with a 3G data pack and adds\
    \ IoT capabilities\nto the system [12].\n2.2. System of Irrigation Monitoring\n\
    Numerous studies have been conducted on a smart irrigation system. Food production\n\
    technology must signiﬁcantly improve to keep up with the growing demand for food.\n\
    Numerous experts have worked diligently to create an alternative to irrigated\
    \ farming.\nThese efforts, however, have not yet resulted in a feasible solution\
    \ to the irrigation system’s\npresent problems. At the moment, crop irrigation\
    \ is carried out manually and by established\ncustomary practices. When crops\
    \ are given less water, they grow slower and absorb less\ncalcium. Frequent irrigation\
    \ kills roots and wastes water. As a result, accurate irrigation\nof crops becomes\
    \ a considerable difﬁculty [13]. A smart irrigation management and\nmonitoring\
    \ approach is developed to enable autonomous delivery of sufﬁcient water from\n\
    a tank to ﬁeld crops. Automatic sensor systems are cost-effective, offered for\
    \ determining\nwhether plants require watering based on information gathered from\
    \ monitoring and\nregulating the soil water levels to minimize dryness or overﬂow\
    \ [14].\nKamaruddin et al., 2019 [15] developed an Internet of Things (IoT)-based\
    \ wireless sen-\nsor network (WSN) architecture that manually or automatically\
    \ administers and monitors\nthe irrigation system. The proposed method used NRF24L01\
    \ and Arduino tools as the\ncommunication network transceiver and CPU. The soil\
    \ moisture sensor data will be sent to\nthe base station via NRF24L01. Then, the\
    \ sensor node’s data will be sent to the cloud server\nthrough the base station.\
    \ This project utilized Thingspeak as a cloud server to store all data\nin a database\
    \ and connect it to an Android application.\nAgronomy 2022, 12, 127\n5 of 21\n\
    2.3. Fertilizer Administration\nAkshaya et al., 2020 [16] proposed an IOT-based\
    \ technique and upgraded the previous\nsystem, which predicted agricultural yields\
    \ using backpropagation and a random forest\nalgorithm. It recommends fertilizer\
    \ application rates and exclusively monitors atmospheric\ndata via a mobile network\
    \ and pump on/off action. The suggested technique utilizes\na segmented tank to\
    \ collect NPK fertilizer and water. The user can select one of three\nmodes (manual,\
    \ auto, or smart). In manual mode, the user is provided with the fertil-\nizer\
    \ and water ratios for well-known plants and fertilizers. In auto mode, all required\n\
    is to know the plant’s name to select the appropriate fertilizer and water ratio.\
    \ Finally,\nin smart mode, if the user cannot recognize the plant’s name, fertilizer\
    \ ratio, or water,\nthe plant’s name, fertilizer ratio, and water will be recommended\
    \ automatically. The IoT\nmodule will continuously collect information on the\
    \ temperature and soil moisture. The in-\nformation collected will be stored in\
    \ the IoT cloud. The mobile phone will inform you\nwhenever the given data changes\
    \ and the needed fertilizer ratio will be shown on the liquid\ncrystal display.\n\
    2.4. Crop Diseases and Pest Control\nHuman operators frequently monitor insect\
    \ pests via time-consuming and costly on-\nsite inspections, which results in\
    \ low spatial and temporal resolution. Remote monitoring\nhas been possible due\
    \ to advancements in remote sensing, electronics, and informatics.\nMonitoring\
    \ costs and effectiveness can be optimized through the deployment of camera-\n\
    equipped traps. With minimum human intervention, image analysis algorithms can\
    \ locate\nand count insect pests captured in traps automatically.\nReddy et al.,\
    \ 2019 [17] created an IoT-based system for disease and insect pest man-\nagement\
    \ in agriculture and the prediction of plant climatic factors. The integrated\
    \ sensors\nhelp in the measurement of soil and atmospheric moisture and humidity.\
    \ These features\nhelp determine the environmental conditions in which the plant\
    \ ﬂourishes and the plants’\nillnesses. It detects disease on the ﬁeld and sprays\
    \ prescribed insecticides. Web cameras\ntake images that are then preprocessed\
    \ to include RGB to grayscale conversion, defect\ndetection, image scaling, image\
    \ enhancement, and edge detection. SVM is utilized to\ncategorize characteristics\
    \ generated from Citrus Canker diseases, such as energy, kurtosis,\nskewness,\
    \ and entropy (damaged Lemon crop). The Arm7 microcontroller is used for\nhardware,\
    \ power, sensors, and motor driver control. Once the illness is identiﬁed, the\n\
    program will propose fertilizers and transmit the results to an LCD and the recommended\n\
    fertilizers. By pump, the fertilizers will be sprayed on the diseased leaves.\
    \ This study was\nconﬁned to the lemon plant to demonstrate that the same method\
    \ may be used for various\ncrops with favorable outcomes in the future.\nA solution\
    \ is presented for forecasting and detecting grape disease using the CNN\napproach\
    \ and real-time gathered data on environmental factors. First, the CNN technique\n\
    is utilized to analyze the leaf images. Then, different layers of the CNN method\
    \ are used\nto create the image. Finally, it is scaled to a speciﬁc resolution\
    \ before data is sent into\nthe CNN layers for training and testing. The suggested\
    \ algorithm was evaluated on four\ndiseases known to have a higher effect on grape\
    \ production. The diseases include esca\nblack measles, anthracnose, leaf blight,\
    \ and black rot. This gadget not only detects but also\nforecasts illnesses based\
    \ on historical weather data. On the other side, the readings from\nthe humidity,\
    \ temperature, and soil moisture sensors are transferred through Raspberry\nPi\
    \ to Microsoft’s Azure Cloud. Following this, the sensor readings are used to\
    \ anticipate\nthe illness using a trained linear regression model. Based on the\
    \ ﬁndings of the preceding\ndetection and prediction stages, suggestions for appropriate\
    \ fertilizers in the right quantities\nwill be provided to minimize fertilizer\
    \ misuse and cost savings [18].\nTo detect pests in rice during ﬁeld production\
    \ and avoid rice loss, the Internet of Things\nsupported a model-based UAV with\
    \ the Imagga cloud offered. The Internet of Things-based\nUAV was developed on\
    \ AI mechanisms and the Python programming prototype to transmit\nrice disease\
    \ images to the Imagga cloud and supply insect data. The Approach identiﬁes the\n\
    Agronomy 2022, 12, 127\n6 of 21\ndisease and insects by integrating the conﬁdence\
    \ ratings of the labels. The label identiﬁes\nthe objects in the images. To determine\
    \ the pest, the tag with the greatest conﬁdence\nresults and more than or equal\
    \ to the threshold is chosen equal to the target label. If pests\nare discovered\
    \ in the rice, statistics will be transferred to the ﬁeld owner directly to take\n\
    preventative actions. The suggested method is capable of detecting all pests that\
    \ inﬂuence\nrice production. On the other hand, this research attempted to minimize\
    \ rice waste during\nproduction by conducting insect monitoring at regular intervals\
    \ [19]. Table 1 summarizes\nmany current smart agricultural applications.\nTable\
    \ 1. Selected applications based on smart agriculture.\nRef.\nApp\nDescription\n\
    [7]\nSoil Analysis\nLand management offers long-term promise based\non climate,\
    \ geography, and reasonably stable soil\ncharacteristics (like soil texture, depth,\
    \ and\nmineralogy). This application aids farmers in better\nunderstanding the\
    \ potential of their land and climate\nvariations alteration and extenuation measures.\n\
    [9]\nFarm Manager\nFarm Manager App helps the farmers to decide\nwhich techniques\
    \ should apply before planting\nstarts. This app views, organizes, and edits all\n\
    information about your ﬁeld like yield, planting, and\nspraying conditions without\
    \ your mobile phone.\n[7]\nPest Management\nBy collecting pest occurrence information\
    \ from\nfarms, Village Tree provides smart pest control\nsolutions. In addition,\
    \ it employs a crowdsourcing\nstrategy, sending images and location data to other\n\
    farmers who may be affected.\n[9]\nAgrippa\nFarmer can generate electronics maps\
    \ of ﬁeld, keep a\nhistory of growing crops in the ﬁeld (e.g., planting,\nfertilizing,\
    \ harvesting, warehouses, gas station), and\ntrack the location of objects in\
    \ the ﬁeld (e.g., soil\nsampling for agrochemical laboratory) by eFarmer\nApplication.\n\
    Semios\nCovers network coverage, orchard pests, frost,\ndiseases, and irrigation.\
    \ Event notiﬁcations are sent\nout in real-time as part of the monitoring services.\n\
    [7]\nFertilizer\nManagement\nEco Fert assists with fertilizer management so that\
    \ it\nmay be used to its full potential. It determines the\noptimal fertilizer\
    \ mixture created to cover the\nneeded nutrient suspension and considers the\n\
    demands of diverse yields. In addition, it considers\nthe cost of fertilizer based\
    \ on current market pricing.\n2.5. Yield Monitoring, Forecasting and Harvesting\n\
    The AWS IoT platform has been proposed for crop prediction using temperature and\n\
    rainfall monitoring. The Raspberry Pi is utilized as a gateway for remote monitoring\
    \ in this\nstudy. Raspberry Pi can connect with sensors to operate applications,\
    \ such as the DHT11\nTemperature Sensor and Soil Moisture Sensor, which forecasts\
    \ temperature and rainfall\nranges. The gateway is integrated with Amazon Web\
    \ Services’ (AWS) IoT platform. MQTT\nis a messaging protocol that allows for\
    \ various messages across distant connections [20].\nThe study reported establishing\
    \ an autonomous greenhouse smart aquaponics man-\nagement organized on temperature\
    \ via the use of an Android-based monitoring and\nautomatic correction system\
    \ and a Raspberry Pi-based plant growth monitoring system.\nReal-time data is\
    \ collected using the light intensity sensor and the ambient temperature\nand\
    \ humidity sensors. Additionally, the pH and temperature of the recirculating\
    \ water\nare monitored. Suppose the data acquired is beyond the threshold range.\
    \ In this case, the\nAgronomy 2022, 12, 127\n7 of 21\nsystem quickly engages the\
    \ correction devices, which comprise a peristaltic buffer device,\nan aerator,\
    \ an evaporative cooler, inlet and exhaust fans, and grow lights. The internet\n\
    remote access function enables real-time data transmission and receipt through\
    \ the android\napp amongst the smartphone and computer system. This study compared\
    \ plant devel-\nopment in smart aquaponics to traditional agriculture based on\
    \ soil systems employing\nimage processing in two investigational operations.\
    \ Following record collection, it was\ndetermined that the smart aquaponics system\
    \ achieved greater output than conventional\nagriculture monitoring. As lettuce,\
    \ mustard greens, and pak choi are produced in a smart\naquaponics system vs.\
    \ traditional soil-based farming, this study focused exclusively on\nlettuce,\
    \ mustard greens, and pak choi [21].\nA tree topology was used for the WSN-enabled\
    \ agricultural monitoring system to\nimprove performance. A cheap sensor node\
    \ like a commercial sensor or a NodeMCU\nmodule transmits data to the control\
    \ unit over Wi-Fi. Fertilizer, fertigation improvement,\nand agricultural operations\
    \ are monitored by data processing and thresholding. The in-\ncorporation of cost-effective\
    \ ICT technology with traditional crop management or weather\nmonitoring and sensor\
    \ data created the agronomic model. Minimal environmental impact\nfrom crop growing\
    \ was achieved as a consequence of large fertilizer and water savings [22].\n\
    2.6. Climate Conditions Monitoring\nIn farming, the weather is extremely important.\
    \ Incorrect climate knowledge can\nhave an impact on crop quality and quantity.\
    \ On the other hand, farmers may use IoT\nsolutions to put sensors in the ﬁeld,\
    \ including humidity sensors, temperature sensors,\nrainfall sensors, and water\
    \ level sensors, to collect real-time data from the environment.\nThese sensors\
    \ monitor the state of crops and the environment in which they grow. If a\nworrying\
    \ environmental situation is discovered, it is either automatically corrected\
    \ or a\nwarning is sent to the farmer.\nGreenhouses created an Internet of Things-based\
    \ weather station to address the cost\nand accuracy issues. The TI CC2650 Sensor\
    \ Tag and IBM Cloud Platform continuously\nmonitor weather and abiotic factors,\
    \ transfer the detected values to the cloud, and send\ne-mail notiﬁcations when\
    \ values deviate. As a result, this study may be expanded to\ninclude the use\
    \ of ML model-based classiﬁcation training to categorize a plant’s health as\n\
    excellent, moderate, or terrible based on the average temperature, humidity, light\
    \ intensity,\nand air pressure. This would help to clarify abstracts about a plant’s\
    \ health to a larger level\nand might aid in keeping the plants’ health in good\
    \ shape [23].\nArifﬁn et al. [24] used an autonomous temperature control system\
    \ to address the\ndrawbacks of traditional growing methods, which are expensive,\
    \ have low yields, and\nneed a lot of care. The suggested IoT-based architecture\
    \ was evaluated in a real-world\nsetting at the Bandar Puteri Centre of NASOM\
    \ (National Autism Society of Malaysia).\nThe ideal temperature for oyster mushrooms\
    \ is between 20 and 30 ◦C, with a humidity\nlevel of 70 to 80%. Two sensors were\
    \ installed in the mushroom house’s center and corner\nto detect temperature and\
    \ moisture, then communicated to a remote monitoring station\nthrough a microcontroller\
    \ unit for further action. The results of the six-day experiment\nrevealed that\
    \ an effective automatic monitoring system, which can regulate the farm’s\nhome\
    \ while reducing resources and human labor, was developed. The mushroom home,\n\
    IoT control box, and Web Client interface were all designed within the system.\
    \ As a result,\nthe mushroom house provided a regulated environment for mushroom\
    \ growing as well as\nprotection from pests and insects. The climate control system,\
    \ which automates controlling\nthe ideal environment for oyster mushroom production,\
    \ was housed in the IoT control box.\n3. Major Equipment and Technologies\nMajor\
    \ equipment and IoT technologies are fully demonstrated in the next subsections,\n\
    such as various sensors, agricultural drones, and harvesting robots.\nAgronomy\
    \ 2022, 12, 127\n8 of 21\n3.1. Sensors\nThe visual sensor, multispectral sensor,\
    \ thermal sensor, lidar sensor, and hyperspectral\nsensor are only a few of the\
    \ sensors utilized in IoT-based smart agriculture and drone\ntechnologies. Current\
    \ IoT-based sensor applications in smart agriculture are presented in\nTable 2.\n\
    Table 2. IoT-based sensors in smart agriculture used to increase production.\n\
    Sensors\nOperations of Different Sensors\nDHT11 Sensor:\nDHT11 sensor measures\
    \ temperature and humidity\n[12].\nSEN0193: Soil Moisture Sensor\nSEN0193 is a\
    \ Soil Moisture Sensor. The dielectric\npermittivity of soil is a consequence\
    \ of its moisture\ncontent. The sensor generates a voltage proportional\nto the\
    \ dielectric permittivity of the soil and hence to\nits water content. The sensor\
    \ takes an average of the\nwater content over its whole length. The Soil\nMoisture\
    \ Sensor is used to quantify moisture loss\nover time due to plant absorption\
    \ and evaporation,\ndetermine optimal soil moisture information for\ndifferent\
    \ plant species, monitor soil moisture\ninformation in greenhouses to regulate\
    \ irrigation,\nand optimize bottle biology research. [20].\nTurbidity Sensor SKU\
    \ SEN0189:\nThe turbidity sensor determines the quality of water\nby detecting\
    \ its turbidity level. It detects suspended\nparticles in water using light by\
    \ measuring the light\ntransmittance and scattering rate, which vary the\nquantity\
    \ of total suspended solids (TSS) in the water\n[25].\nMH-Z14A:\nThis is used\
    \ to monitor the CO2 level at high\nprecision.\nBH1750:\nThis is used to monitor\
    \ the light intensity level (as\nphotosynthesis is related to light intensity)\
    \ and to\nconduct experiments on the inﬂuence of light\nintensity on the greenhouse\
    \ environment’s\ntemperature [26].\nRain sensor:\nA rain sensor is a simple instrument\
    \ for detecting\nrain pressure. It may be used as a switch to\ndetermine the strength\
    \ of rainfall when a raindrop\nfalls through the rainy board [27,28].\nLidar sensor:\n\
    The top camera sensor is an imaging range camera\nthat estimates the distance\
    \ between the camera and\nthe subject at each point in the collected images [29].\n\
    3.2. Agricultural Drones\nUAVs can monitor the health of crops, apply pesticides,\
    \ and take hyperspectral images\nin precision agriculture. Drones can scan a crop\
    \ for issues in plants using visible and\nnear-infrared light, and they can determine\
    \ which plants reﬂect what quantities of green\nand NIR light. Photosynthetic\
    \ activity diminishes when a plant is stressed. This data may\nbe used to create\
    \ numerous images that track plant changes and indicate their health. As a\nresult,\
    \ farmers can more accurately administer treatments after a disease has been identiﬁed.\n\
    Drones are also utilized for surveillance, trafﬁc monitoring, and weather monitoring\
    \ in\nagriculture. Drone technology employs various sensors, including optical,\
    \ multispectral,\nthermal, lidar, and hyperspectral sensors, which are brieﬂy\
    \ detailed in Section 3.1.\nCrop management has beneﬁted from the Internet of\
    \ Things, remote sensing, and\nanalytic data approaches. Pests may be identiﬁed,\
    \ targeted, and managed to utilize remote\nAgronomy 2022, 12, 127\n9 of 21\nsensing\
    \ using UAVs. UAVs can ﬂy in tough and harsh terrains to take high-resolution\n\
    images that allow pests to be identiﬁed and controlled. Many crop security concerns\
    \ may\nbe solved using UAVs equipped with cameras, which are not possible with\
    \ traditional pest\nmanagement methods. UAVs have been used to automate insect\
    \ damage in agricultural\nareas [30,31].\nAn automated rotating device based on\
    \ sun illumination angle perception keeps the\nsolar panel perpendicular to the\
    \ sun and increases solar energy harvesting rates. Based on\nspectrum analysis\
    \ technology, Internet of Things approaches, including several wireless\ntechnologies,\
    \ such as TVWS, ZigBee, and LoRa, are suggested to collect data and send it\n\
    to a base station/gateway to assess the degree of damage caused by pests and diseases.\n\
    In addition, a technique for maximizing wind force usage and to extend the time\
    \ of ﬂight for\ndrones has been established to support drones in downwind by designing\
    \ the ﬂying path\nimplementation. The study’s scope is limited, with the goal\
    \ of developing a long-standing\ninsect and disease detection technique through\
    \ extensive data gathering and analysis.\nThe suggested model will be tested in\
    \ real-world scenarios. For example, crop diseases\nand insects might be tracked\
    \ in real-time and climatic changes could be analyzed [32].\nThe Internet of Things-based\
    \ approach is illustrated for smart agriculture monitoring in\nFigure 3.\nFigure\
    \ 3. IOT-based smart agriculture monitoring system.\n3.3. Harvesting Robots\n\
    Under speciﬁc climatic circumstances, a harvesting robot is intended to gather\
    \ fruits\nautonomously. The advancement of vision-based harvesting robots’ mechanism\
    \ is yet in its\nearly stages. Agricultural robotic systems, on the other hand,\
    \ have comparable architecture.\nThe system is comprised of an autonomous mobile\
    \ platform, a lightweight mechanical\narm with multiple degrees of freedom, an\
    \ adaptable end effector for a power response\nsystem, a multi-sensor machine\
    \ vision system, a smart decision and drive management\nsystem, and supplementary\
    \ hardware and software [33]. Kang et al., 2020 [34] developed\nan intense neural\
    \ network to assist robotic apple harvesting, which detects and grasps\nfruit\
    \ in a real-time environment using a computer vision system. The proposed robotic\n\
    harvesting system was implemented using a customized soft end-effector comprised\
    \ of\nIntel i7-6700 CPU and NVIDIA GTX-1070 GPU and DELL-INSPIRATION main computer\n\
    unit, Intel D-435 RGBD visualization camera, and UR5 Universal Robot (modern robotic\n\
    manipulator). The proposed approach uses Mobile-DasNet, a computationally efﬁcient\n\
    lightweight one-stage instance segmentation network to conduct fruit recognition\
    \ and\ninstance segmentation on sensory input. An improved PointNet model was\
    \ also developed\nto conduct fruit modeling and grip estimates from an RGB-D camera\
    \ through the point\nclouds technique. The two qualities described above were\
    \ utilized and integrated to\nAgronomy 2022, 12, 127\n10 of 21\ndevelop and build\
    \ a precise robotic system for autonomous fruit picking. The goal of the\nstudy\
    \ was to improve the vision algorithm’s performance, boost, and improvements.\n\
    Furthermore, the proposed soft end-effector robotic device may improve its grasping\n\
    recognition proportion and effectiveness under various situations. Ogorodnikova\
    \ and\nAli [35] devised a technique for recognizing ripe tomatoes in a greenhouse\
    \ setting using a\nmachine vision system of a harvesting robot. To effectively\
    \ execute the suggested image\nprocessing method for this purpose, RGB color images\
    \ from a typical digital camera are\nrequired. In the second stage, RGB color\
    \ images are converted to HSV, which is easier\nfor extracting red tomato from\
    \ the green backdrop in the image. Image segmentation,\nthresholding, and morphological\
    \ operations separate a red tomato from a green background\ncolor photograph.\
    \ The algorithm is built using Matlab methods and then evaluated to see\nif it\
    \ produces favorable results. The process can be converted into fast-acting codes\
    \ for the\nharvesting robot’s controller since it is basic and short. The research\
    \ is limited to moving\nthe gripper to the proper place in tomato detection and\
    \ developing efﬁcient algorithms\nusing 3D gripper models to transform the existing\
    \ research system into industrial robots.\nOnly a few robotic devices that can\
    \ successfully perform watering, planting, and\nweeding activities now exist.\
    \ FaRo (Cultivating RObot), a new smart robot based on a CNC\nmachine, has been\
    \ presented for automatic crop farming deprived of human involvement in\nagriculture.\
    \ What sets FaRo apart from other farming platforms is its capability to complete\n\
    the entire farming cycle, from sowing to harvesting. In addition, the FaRo harvesting\n\
    tool will be discussed and shown. FarmBot can only be used for a limited time,\
    \ from\nsowing to harvesting, after which the robot’s tool mount system will be\
    \ exchanged for crop\nharvest. In this example, the robot assumes the role of\
    \ a tomato collector. Both the FaRo\nharvesting robot and the unique kinematics\
    \ of the continuum manipulator design were\nthoroughly discussed. Due to implementation\
    \ problems, the robot’s design is currently in\nthe development stage. The objective\
    \ of the proposed system is to build a model with an\nintelligent agricultural\
    \ monitoring technique linked to the main database, and the robot\nwill have sufﬁcient\
    \ information to plant and cultivate crops without the need for human\nintervention\
    \ [36].\nA depth vision-based approach for detecting and placing truck containers\
    \ is proposed\nfor the joint harvesting system, along with three coordinate systems.\
    \ This method included\ndata preprocessing, point cloud poses transformation using\
    \ the SVD (singular value decom-\nposition) algorithm, upper edge segmentation\
    \ and projection, RANSAC (Random Sample\nConsensus) algorithm edge line extraction\
    \ and corner point positioning, and fusion and\nvisualization of results on the\
    \ depth image. Field trials show that the suggested approach\nis effective in\
    \ identifying and positioning vehicles. However, the study is restricted due\n\
    to its sensitivity to the appearance of truck containers and the presence of loud\
    \ sites in\nthe agricultural area. Autonomous driving and path planning in the\
    \ forage harvester’s\nunloading system is still challenging [37].\nIntelligent\
    \ robots have become extensively employed in various sectors as the in-\ntelligent\
    \ computer industry with automation expands. Currently, manual labor is still\n\
    used to harvest the majority of domestic crops. However, owing to constant worker\
    \ pay\nhikes, the manual picking technique increases the fruit farmer’s ﬁnancial\
    \ expenditures,\nand the appliances of robots in the farming business are challenging.\
    \ As a result, the\nsmart moveable robot picker has been introduced based on computer\
    \ vision machinery by\nincorporating the robot arm, selector, ﬂexible carrier,\
    \ track procedure, and the intelligence\nunit, which accomplishes the robot picker’s\
    \ travel channel coding, auto-judging the ripe\nfruit, and in addition a vision-based\
    \ binocular stereoscopic methodology employed for the\nfunctions of recognition\
    \ and placement. To begin with, precise segmentation recognition\nand maturity\
    \ evaluation of the target fruit is required for proper picking. Thus, the robot\n\
    picker may potentially replace human labor in manual picking. The most important\
    \ part\nof the recognition process is gathering fruit image samples, which is\
    \ performed using a\nCCD camera that shoots following the preprocessed fruit features\
    \ using image content.\nThe color model is then built up, and it separates the\
    \ fruit and surrounding surroundings\nusing segmentation technology before recognizing\
    \ the fruit. Additionally, it precisely traces\nAgronomy 2022, 12, 127\n11 of\
    \ 21\nand goes for the fruit location in relation to the three-dimensional coordinate\
    \ information\nprovided by the infrared source and the fruit contour and image\
    \ differences taken by\nthe two cameras simultaneously. To ﬁnish the picking operation,\
    \ it must program the\npath recognition to avoid the obstacle [38]. The overall\
    \ architecture of IoT-based fruit\nidentiﬁcation for harvesting is shown in Figure\
    \ 4.\nFigure 4. General architecture of IoT-based fruit detection for harvesting.\n\
    4. Open Issues and Key Challenges in Smart Agriculture\nThe problems of deploying\
    \ IoT-based agricultural systems are discussed in this section.\nThe sensors’\
    \ durability and cost are described. The IoT-based system requires a constant\n\
    source of electricity. Depending on the size, a lot of electricity may be required.\
    \ However,\nin rural and village communities, obtaining such electricity is challenging.\
    \ To meet the\nenergy requirement, alternative energy sources, such as solar and\
    \ wind, must be employed.\nThis will also raise the price signiﬁcantly. It is\
    \ necessary to have a dependable internet\nconnection in rural and village regions.\
    \ It is the most crucial aspect of establishing an\nIoT-based system. The connection\
    \ must have a sufﬁcient bandwidth to transport data in\naccordance with the application’s\
    \ requirements. Farmers need basic computer/tablet (HID\ndevice) training and\
    \ an understanding of how the IoT system operates. It is also necessary\nto provide\
    \ proper education on the unique IoT deployment in their farm [39].\nThere are\
    \ six major obstacles to developing a green IoT-based agriculture system,\ninvolving\
    \ infrastructure, mobility, maintenance, hardware, data privacy, data analytics,\
    \ and\ndata security. The selection of meters and sensors used for Internet of\
    \ Things tools is one\nof the hardware issues. As a result, many different sensors\
    \ may be utilized in Internet of\nThings applications, such as the water quality\
    \ sensor, humidity sensor, chemical sensor,\npressure sensor, temperature sensor,\
    \ and more. The data analytics problem is machine\nlearning, deep learning methods,\
    \ and prediction algorithm applications in smart agricul-\nture to produce a nutritional\
    \ suspension using IoT records. Routine sensor inspections\nof all Internet of\
    \ Things appliances are a maintenance issue while it may be certainly\nharmed\
    \ in the farm area. The mobility problem is related to 4G, 5G, WiFi, 6LowPan,\
    \ LoRa\nnetwork connection, which link sensors spread across a broad region in\
    \ the farm areas.\nSome infrastructural trials are developing and implementing\
    \ Internet of Things-connected\narchitectures that incorporate innovative technologies,\
    \ such as cloud and fog computing\nand network virtualization. Finally, the primary\
    \ issue in advancing smart agriculture based\non IoT is not physical maintenance\
    \ but rather ensuring security and privacy [8].\nAgronomy 2022, 12, 127\n12 of\
    \ 21\nThe UAVs that are linked wirelessly are subject to cyber-physical or harmful\
    \ assaults\nto fool the control signals due to open communication lines. Such\
    \ attempts represent a\nsigniﬁcant risk to the unmanned aerial vehicle system\
    \ in terms of private information\ncrash or theft, as well as mission failure.\
    \ Moreover, the faking of control signals may harm\nthe UAV mission and make it\
    \ harder to restore it. As a result, improving UAV wireless\ncommunication’s safety\
    \ and conﬁdentiality element, which necessitates in-depth research\nof security\
    \ concerns covering the entire network protocol layers [40], is an important\n\
    open subject.\nVisual harvesting of robots’ dynamic tracking of objects with great\
    \ precision remains\nan unresolved challenge. Further study should also aim to\
    \ enhance the precision placement\nand operation by merging smart behavior judgment,\
    \ adequate fault tolerance, robot vision\nwith artiﬁcial intelligence technology\
    \ for accurate placement, and function enhancement.\nThe recognition and location\
    \ accuracy are impacted when the crop situation is varied due\nto the lighting\
    \ and unconstrained circumstances of the ﬁeld ecosystem. A robot vision\napproach\
    \ would be efﬁcient in harvesting crops correctly to increase the success rate\
    \ of\nrobotic harvesting in such settings. The researchers used geometric features,\
    \ novel image\nalgorithms, and intelligent decision theory to address the challenges.\
    \ However, because\nmassive datasets are necessary to train efﬁcient deep learning\
    \ algorithms, further study\nis needed [33]. Table 3 presents a comparison of\
    \ the current state of the art on smart\nagriculture obstacles and beneﬁts.\n\
    Table 3. Research studies organized by goal, methodologies, and technology employed,\
    \ as well as\nobstacles and beneﬁts.\nAuthors\nResearch Purpose\nTechnology\n\
    Used/Techniques\nFindings and Challenges\nAdvantages\n[13]\nWater management\n\
    Bluetooth, Wi-Fi, RFID,\nZigbee, Raspberry pi\nHuman interaction\nLabor cost\n\
    Water consumption\nCrop from irregular\nirrigation.\nCan identify the moisture,\n\
    humidity, and temperature.\nConsistent management of\nall the regions containing\n\
    severe parts.\n[14]\nIrrigation monitoring\nWSN, data\nAnalytics, node sensors\n\
    and web\nApplication\n-\nOptimal irrigation of the\nwater for\nfarming crops.\n\
    [20]\nCrop management\nIrrigation\nmanagement\nMobile technology,\nGPRS, Wi-Fi,\
    \ Raspberry\npi, Zig Bee\nUnstable weather\nwater shortage, irregular\nwater usage\n\
    Improve the yield, low cost\n[38]\nHarvesting nodes\nWSN, Solar\nenergy system.\
    \ Image\nprocessing technique.\n-\nPrevents data loss and\ncollusion,\nincreases\
    \ the lifetime of\nWSN.\n[41]\nCrop growth\ngreen-crop gCrop\nbased on ML model,\n\
    Wireless Sensor\nNetwork and Internet\nof Things\nObtained accuracy was\n98% using\
    \ polynomial of\nthird-degree of Regression\nmodel while the\ncomputation time\
    \ is very\nhigh.\n-\n[42]\nNutrient\nManagement\nRaspberry pi\nMobile technology\n\
    Wi-Fi\nLow or high watering.\nLack of nutrition\nmanagement.\nCan monitor weather\n\
    conditions.\nCost-effective\nAutomatically monitored\ndisease associated with\
    \ rice\nspecies.\nAgronomy 2022, 12, 127\n13 of 21\nTable 3. Cont.\nAuthors\n\
    Research Purpose\nTechnology\nUsed/Techniques\nFindings and Challenges\nAdvantages\n\
    [43]\nCrop Productivity\nBig data\nstorage and analytics,\nIoT, Data\nMining,\
    \ Cloud\ncomputing, Data\nAnalytics.\n-\nNetwork architecture,\nplatform\nand\
    \ design helps access to\nIoT,\nimproves crop productivity,\nProvides an overview\
    \ of\nIoT\napplications, sensors,\nprotocols\nAnd data-enabled\ntechnologies.\n\
    One of the most challenging aspects of robotic grasping is estimation. Traditional\n\
    techniques have limitations since noise or partial loss of the point cloud might\
    \ impact the\nestimation’s accuracy and resilience. Estimation is more difﬁcult\
    \ in orchard situations than\nit was in interior environments.\nData Handling\
    \ and Processing\nTraditional vision algorithms’ performance is constantly restricted\
    \ in complicated\nand volatile settings [34]. World food consumption is predicted\
    \ to treble by 2050 due to\npopulation expansion and societal progress, yet increasing\
    \ food production is now difﬁcult\ndue to declining water, climate alterations,\
    \ less proper soil, and insects and illnesses. Pests\nand diseases have always\
    \ been signiﬁcant stumbling blocks to increased grain output.\nSatellite technology\
    \ is climate sensitive and has a limited illumination variation, making it\nchallenging\
    \ to satisfy the requirement for insects and infection management in farming\n\
    areas. Currently, low-altitude autonomous drones (offering excellent ﬂexibility\
    \ and image\nresolution) can satisfy the needs of agricultural insect and infection\
    \ management. In some\ncircumstances, such as when there is a high wind, drone\
    \ stability might be difﬁcult. As a\nresult, the drone’s ﬂight route must be designed\
    \ in conjunction with the actual conditions.\nLong ﬂights are necessary for ﬁeld\
    \ pest and disease data collection; thus, choosing a sunny\nday with a moderate\
    \ breeze might be a viable alternative [32]. Identifying malicious and\ncompromised\
    \ nodes among soil sensors interacting with the base station is a signiﬁcant\n\
    problem in the base station to cloud communications. The trust management method\
    \ is\npresented as one of the options for identifying these nodes in a lightweight\
    \ manner.\nFinally, the study highlighted the existing problems and possibilities\
    \ and future re-\nsearch in vegetable and fruit identiﬁcation and placement. The\
    \ majority of previous research\nshowed that illumination variations, grouping,\
    \ and unconstrained situations have been the\nmain obstacles to effective recognition\
    \ and localization of vegetables and fruits in the ﬁeld.\nFurther research will\
    \ be required to overcome the existing state-of-the-art challenges and\nenhance\
    \ the performance, accuracy, efﬁciency, effectiveness, recognition, and success\
    \ rate\nof controlling and image processing techniques. However, fruit recognition,\
    \ detection, posi-\ntioning, harvesting robots, and application robustness enhancement\
    \ need to minimize the\ninclusive computational cost and time. Future research\
    \ might include algorithms and cam-\nera operation advancements, sensor platforms\
    \ that can enhance illumination consistently,\nhorticultural changes, and human–machine\
    \ collaboration [29]. Furthermore, sophisticated\nmethodologies, algorithms, and\
    \ computational approaches are necessary to address the\nlack of precision in\
    \ harvesting operations.\n5. Discussion and Analysis\nIt is estimated that plant\
    \ diseases are a signiﬁcant contributor to global ﬁnancial\ndeﬁcits. Numerous\
    \ abiotic and biotic stresses and continual tension monitoring concerns\nthe impacts\
    \ of the loss of fruit-producing plants. Consequently, the $15 billion U.S. apple\n\
    Agronomy 2022, 12, 127\n14 of 21\nindustry loses millions of dollars every year.\
    \ Fruits are one of the most signiﬁcant sources\nof nutrients in plants; yet,\
    \ illnesses, pests, fungous, infectious, and microbial diseases all\naffect the\
    \ quality and quantity of fruits. Using computer vision-based methods, the issue\n\
    may now be alleviated. Diseases/infections may be detected early and effectively\
    \ using\nthese methods.\nThe sickness classiﬁcation of various fruit leaves was\
    \ achieved using a deep convolu-\ntional neural network DCNN approach. The deep\
    \ features are retrieved by ﬁrst utilizing\ndeep learning networks, such as AlexNet\
    \ and VGG-s, and then tweaked using a transfer\nlearning approach. Before the\
    \ selection step, a multi-level fusion strategy is offered, and\nthe chosen features\
    \ analyzed to produce the entropy basis features. To categorize the\nobtained\
    \ feature map, we employed a multi-SVM classiﬁer. The diseases investigated in\n\
    the experiments include apple rust, scab, black rot, peach bacterial spots, and\
    \ cherry pow-\ndery mildew, and they were all gathered from a plant village dataset.\
    \ The recommended\nmethod’s better performance in terms of a 97.8% accuracy, 97.6%\
    \ sensitivity, 97.6% precision,\nand G-measure was observed in the classiﬁcation\
    \ results (97.6%) [44]. Some research has\ninvestigated whether computer vision\
    \ approaches may be employed for scalable and early\nplant sickness detection.\
    \ There is still a critical lack of non-lab data sets that can be utilized\nto\
    \ allow vision-based plant disease detection. For visual plant disease identiﬁcation,\
    \ the\nPlantDoc dataset was supplied. The collection has 2598 data points in total,\
    \ encompassing\n13 plant species and up to 17 disease categories, and was developed\
    \ by annotating internet-\nscraped photos for 300 human hours. Three models for\
    \ plant disease classiﬁcation were\ntrained to illustrate the dataset’s effectiveness.\
    \ The ﬁndings demonstrate that employing\nour dataset models may enhance the recognition\
    \ rate by up to 31%. The recommended\ndataset, we feel, will contribute to decreasing\
    \ the entry barrier for computer vision algo-\nrithms in plant disease detection.\
    \ For photos featuring leaves from various classes in a\ndataset with contextual\
    \ noise, and low-resolution leaf images, the model fails to give proper\nconclusions.\
    \ Using image segmentation methods to extract leaves from the photos can\nboost\
    \ the dataset’s utility. Although the dataset has been rigorously veriﬁed, particular\n\
    photographs in the collection may be wrongly labeled owing to a lack of sufﬁcient\
    \ topic\nknowledge [45].\nIt is necessary to construct an improved VGG16-based\
    \ DCNN model to detect apple\nleaf diseases (scab, frogeye spots, and cedar rust).\
    \ The global average pooling layer re-\nplaces the fully connected layer to lessen\
    \ restrictions and a batch normalization layer is\nattached to boost the model’s\
    \ computational performance. Furthermore, to avoid a long\ntraining time, a transfer\
    \ learning approach is applied. To detect apple leaf diseases, the\nsuggested\
    \ model makes use of 2446 apple leaves, 2141 photos in the training phase and\
    \ 305\nimages in the testing phase. The experimental data reveal that utilizing\
    \ the recommended\napproach, the total accuracy of apple leaf classiﬁcation may\
    \ reach 99.01%. Furthermore,\nthe ﬁndings demonstrate that cedar rust is accurately\
    \ diagnosed, but one healthy person is\nmisclassiﬁed as scab and the other as\
    \ frogeye spots.\nFurthermore, the model parameters are cut by 89% compared to\
    \ the standard VGG16.\nAs a result, the classiﬁcation performance is raised by\
    \ 6.3%, and the computational com-\nplexity is cut to 0.56% of the innovative\
    \ model. Consequently, the DCNN model developed\nin this study provides a more\
    \ accurate and speedier way for recognizing apple leaf infec-\ntions [46]. Table\
    \ 4 compares the efﬁciency of several smart agricultural techniques.\nAgronomy\
    \ 2022, 12, 127\n15 of 21\nTable 4. Comparative analysis of different methods\
    \ based on smart agriculture.\nRef.\nTechnique Dataset\nDisease Classes\nAccuracy\n\
    Sensitivity\nPrecision\nRecall\nF1 Mea-\nsure\nG Mea-\nsure\n[44]\nDCNN\n[VGG\
    \ +\nAlexNet]\nplant\nvillage\ndataset\n5 (apple rust, scab\nblack rot, cherry\n\
    powdery mildew, and\npeach bacterial spots)\n97.8%\n97.6%\n97.6%\n-\n-\n97.6%\n\
    [46]\nDCNN\n[en-\nhanced\nVGG16]\n2446\napple\nleaves\n4 (apple leaf diseases\n\
    (Scab, frogeye spots,\ncedar rust and healthy)\n99.01%\n-\n99.02%\n99.02%\n99.02%\n\
    -\n[47]\nenhanced\nCNN\n[AlexNet]\nEnhanced\nPlant\nVillage\n52\n99.11%\n-\n99.49%\n\
    99.11%\n99.29%\n-\n[48]\nIoT\n[WSNs\n+ ML\nalgo-\nrithms]\nDifferent\ndata\n-\n\
    81.6%\n-\n-\n-\n-\n-\n[49]\nAlexNet\ndeep\nlearning\nalgo-\nrithm\n54,306\nimages\n\
    14 crop species and 26\ndiseases\n97.38%\n-\n97.42%\n97.37%\n97.36%\n[50]\nLeNet\n\
    DL tech-\nnique\n(X-\nFideo)\nPlantVillage\n3\n98.60%\n-\n98.82%\n97.18%\n96.89%\n\
    -\nFor the recognition and detection of olive diseases, such as peacock spot,\
    \ anthracnose,\nand canker, an improved convolutional neural network (CNN) dubbed\
    \ AlexNet was\nsuggested. Several innovations separate the proposed model from\
    \ others. It uses effective\nintelligent data preprocessing with a stable image\
    \ in each class, a transfer learning approach,\nand an extended and upgraded PlantVillage\
    \ dataset to work in more complicated situations.\nThe total accuracy of the suggested\
    \ technique is 99.11%, which is the best possible score.\nFurthermore, it possesses\
    \ precision, recall, and F1 measures of 99.49%, 99.11%, and 99.29%,\nrespectively.\
    \ Despite the fact that model training takes a long time, classiﬁcation during\n\
    testing takes only a few seconds on a CPU [47]. Citrus fruits, leaves, and stems\
    \ are included\nin the image dataset. The collection contains images of normal\
    \ and diseased citrus leaves\nand fruits, including greening, scab, blackspot,\
    \ canker, and melanosis. There are 759 images\nof normal and abnormal citrus leaves\
    \ and fruits in the data collection. The images had\na resolution of 5202 × 3465\
    \ (Mpix), and when scaled at 72 dpi, the width and height\nwere 256 × 256 pixels,\
    \ correspondingly. The contaminated images were divided into four\nvarious citrus\
    \ illnesses and left on their own. The entire process consists of four major\n\
    steps: (a) enhancing the dataset using Top-hat and then Gaussian functions; (b)\
    \ weighted\nsegmentation and segmentation of lesion through a saliency map, which\
    \ highlights the\ninfested area; (c) color, texture, and geometric feature extraction\
    \ from the diseased area;\nand (d) PCA, skewness, and entropy-based feature selection\
    \ and implementation.\nAgriculture management, water contamination, and air quality\
    \ analysis monitoring\nsystems were all investigated as part of the smart environment\
    \ monitoring (SEM) system.\nFigure 5 demonstrates that substantial investigation\
    \ of smart environment monitoring\nhas increased over the period in both cases,\
    \ speciﬁcally research involving the wireless\nsensor network and Internet of\
    \ Things along with research involving machine learning and\nInternet of Things\
    \ [41,51].\nAgronomy 2022, 12, 127\n16 of 21\nFigure 5. Research contribution\
    \ using IoT, WSN, and machine learning.\nImperfect network access, lack of a (or\
    \ no) power supply, and high framework costs\ncompared to an ordinary farmer’s\
    \ income were presented in a low-cost, energy-proﬁcient,\nprotected, dependable,\
    \ and heterogeneous three-layer approach for Internet of Things-\nbased smart\
    \ agriculture. IoT devices make up the ﬁrst layer, including IoT-based smart\n\
    agriculture monitoring like insect detection, theft detection, crop monitoring,\
    \ smart ir-\nrigation, smart poultry, food supply chain, and food preservation\
    \ monitoring systems.\nThe low-power LoRaWAN network connects the IoT devices\
    \ to the gateways. The next\nlayer is made up of local processing servers and\
    \ gateways that are connected with the\ngateways. The cloud layer, which uses\
    \ the publicly available FIWARE framework to offer a\nset of open-source API standards,\
    \ is the third layer. This study aimed to create diagnostic\ntechniques for packet\
    \ combination procedures at the fog node before they were sent over\nthe network\
    \ facility to cloud servers. This aims to decrease short IoT packet processing\n\
    overheads and optimize energy usage at the backbone, as billions of IoT devices\
    \ linked to\nfog nodes are projected to generate massive volumes of short IoT\
    \ packets [52].\nA Cuckoo Search Algorithm has been created, allowing water allocated\
    \ for farming\nunder all situations. Temperature, turbidity, pH, and moisture\
    \ were collected utilizing the\nInternet of Things (IoT) infrastructure outﬁtted\
    \ with wireless communication devices and\nsensors. ThingSpeak presented the sensor\
    \ data in the cloud system in this IoT platform.\nThe ThingSpeak data was utilized\
    \ in the suggested Cuckoo Search Algorithm, which\nidentiﬁed suitable yields for\
    \ a given soil [53]. Incorrect or late identiﬁcation can result in\noveruse or\
    \ underuse of chemicals, resulting in higher production costs and environmental\n\
    and health consequences. With varied lighting, angles, surfaces, noise, and high\
    \ resolutions,\n3651 real-time indication images of various apple infections were\
    \ manually collected.\nA subset of this dataset was labeled by experts, such as\
    \ cedar apple rust, scab, and normal\nleaves, and open-sourced for the Plant Pathology\
    \ Challenge to Kaggle community. We also\nused this data to train a standard CNN\
    \ (convolutional neural network), which obtained\n97% recognition on a held-out\
    \ test set and a maximum AUC value of 0.986. The project’s\ngoal was to keep adding\
    \ additional images to the pilot dataset from various perspectives,\nlighting,\
    \ and distances to create a bigger more complete labeled database by experts.\n\
    The dataset will contain pests and diseases, such as apple mites and aphids and\
    \ apple\nleaves comprising apple marssonina and alternaria leaf blotch, leaf spot,\
    \ frogeye, rot, cedar,\nand powdery mildew, ﬁre blight, and scab-labeled images.\n\
    Additionally, it will be photographed and remarked on fruit infected with apple\
    \ brown\nrot, bitter rot, or scab [54]. An Internet of Things-based cost-effective\
    \ monitoring system\nwas developed to address particular crop irrigation, soil\
    \ erosion, and irregular irrigation.\nAgronomy 2022, 12, 127\n17 of 21\nThe suggested\
    \ method entails building a distributed WSN (wireless sensor network), with\n\
    multiple sensor modules covering each part of the farm and transferring data to\
    \ a central\nserver. ML techniques will aid irrigation pattern forecasts based\
    \ on yields and climate\nenvironments. According to a comparison of several algorithms,\
    \ random forest regression\nhas a decent accuracy of 81.6%. However, due to harsh\
    \ weather conditions, the system\nis constrained in many ways: the forecast accuracy\
    \ is dependent on the setup’s correct\ninstallation, and the threat of wild animals\
    \ can harm the hardware setup [48]. Because\nhuman abilities and agricultural\
    \ gear are severely restricted compared to robot knowledge,\nrobotic systems in\
    \ agriculture can be highly beneﬁcial in achieving both high quality\nand quantity\
    \ goods. To integrate IoT systems with agricultural machinery, a new way\nof managing\
    \ control signals from the control system to the actuators is required. These\n\
    methods should increase economic viability while also lowering environmental impact\
    \ and\nenhancing food sustainability. It handles various agricultural tasks, including\
    \ moisture\nsensing, irrigation, crop monitoring, and insect and animal defense\
    \ [55]. Accordingly, a\nstate-of-the-art technologies-based accuracy comparison\
    \ is presented in Figure 6.\nFigure 6. Accuracy-based analysis of the different\
    \ state of the art techniques.\nWater monitoring is the most highly measured IoT\
    \ sub-vertical, followed by crop,\nsmart agriculture, animal, and irrigation monitoring.\
    \ All of these have the same proportion\nof peer-reviewed articles exploring the\
    \ possible uses of the Internet of Things. According\nto the ﬁndings, the most\
    \ important sensor data for measurement is 15.73% soil moisture,\n19.79% humidity,\
    \ and 24.87% ambient temperature. However, further sensor information,\nsuch as\
    \ soil pH and moisture, are also collected for IoT applications. Wi-Fi has the\
    \ highest\nclaimed use in farming and agriculture, with 30.27% and 21.10% use\
    \ of mobile tools, as\nshown in Figure 7. Other technologies like Bluetooth, WSN,\
    \ RFID, Raspberry Pi, ZigBee,\nLoRa, and GPRS are less popular in the agriculture\
    \ and farming industries. In the agri-\ncultural and farming business comparison,\
    \ the farming sector uses IoT for automation\nslower [42]. The Plant Server and\
    \ User View were created with phpMyAdmin to manage\nMySQL server management. The\
    \ F-RCNN-qualiﬁed model for anomaly detection had\n80% conﬁdence, while the technique\
    \ for the transfer of learning illness had 95.75% accu-\nAgronomy 2022, 12, 127\n\
    18 of 21\nracy. In reality, automatic image capturing software was deployed, and\
    \ the RCNN model\nsuccessfully recognized 91.67% of tomato plant illnesses [56].\n\
    Figure 7. An overview of 60 published articles on sensor and technology-based\
    \ data collection, as\nwell as a comparison of agriculture and farming utilizing\
    \ IoT.\n6. Conclusions and Future Directions\nThe implementation of sustainable\
    \ communication technologies and sensors based on\nIoT is necessary to increase\
    \ agricultural productivity. Wireless sensors, unmanned aerial\nvehicles, and\
    \ cloud computing have been shown to be practical tools for guaranteeing\nlong-term\
    \ agricultural productivity. Many processes throughout the production cycle,\n\
    including irrigation, soil sample and mapping, fertilizer or pest control, yield\
    \ monitoring,\nforecasting, and harvesting, may be automated using smart devices,\
    \ allowing for improved\ncrop quality and growth capacity. The key effective features,\
    \ important applications, IoT-\nbased smart agriculture technology and equipment,\
    \ and open barriers and possibilities\nwere all examined in this study. This research\
    \ will be expanded in the future to include\nsecurity and privacy issues in smart\
    \ agriculture using IoT methods.\nAuthor Contributions: All authors contributed\
    \ equally and scientiﬁcally. All authors have read and\nagreed to the published\
    \ version of the manuscript.\nFunding: No speciﬁc funding received for this research.\n\
    Acknowledgments: This research is supported by Artiﬁcial Intelligence & Data Analytics\
    \ Lab (AIDA)\nCCIS Prince Sultan University, Riyadh, Saudi Arabia. The authors\
    \ also would like to acknowl-\nedge the support of Prince Sultan University for\
    \ paying the Article Processing Charges (APC) of\nthis publication.\nConﬂicts\
    \ of Interest: There is no conﬂict of interest to declare.\nAgronomy 2022, 12,\
    \ 127\n19 of 21\nReferences\n1.\nMukhtar, H.; Khan, M.Z.; Khan, M.U.G.; Saba,\
    \ T.; Latif, R. Wheat Plant Counting Using UAV Images Based on Semi-supervised\n\
    Semantic Segmentation. In Proceedings of the 2021 1st International Conference\
    \ on Artiﬁcial Intelligence and Data Analytics\n(CAIDA), Riyadh, Saudi Arabia,\
    \ 6–7 April 2021; pp. 257–261.\n2.\nKhan, M.A.; Akram, T.; Sharif, M.; Alhaisoni,\
    \ M.; Saba, T.; Nawaz, N. A probabilistic segmentation and entropy-rank correlation-\n\
    based feature selection approach for the recognition of fruit diseases. EURASIP\
    \ J. Image Video Process. 2021, 2021, 14. [CrossRef]\n3.\nKhan, M.A.; Akram, T.;\
    \ Sharif, M.; Awais, M.; Javed, K.; Ali, H.; Saba, T. CCDF: Automatic system for\
    \ segmentation and\nrecognition of fruit crops diseases based on correlation coefﬁcient\
    \ and deep CNN features. Comput. Electron. Agric. 2018, 155,\n220–236. [CrossRef]\n\
    4.\nSafdar, A.; Khan, M.A.; Shah, J.H.; Sharif, M.; Saba, T.; Rehman, A.; Javed,\
    \ K.; Khan, J.A. Intelligent microscopic approach for\nidentiﬁcation and recognition\
    \ of citrus deformities. Microsc. Res. Tech. 2019, 82, 1542–1556. [CrossRef] [PubMed]\n\
    5.\nSinha, B.B.; Dhanalakshmi, R. Recent advancements and challenges of Internet\
    \ of Things in smart agriculture: A survey. Futur.\nGener. Comput. Syst. 2022,\
    \ 126, 169–184. [CrossRef]\n6.\nKolivand, H.; Fern, B.M.; Saba, T.; Rahim, M.S.M.;\
    \ Rehman, A. A New Leaf Venation Detection Technique for Plant Species\nClassiﬁcation.\
    \ Arab. J. Sci. Eng. 2019, 44, 3315–3327. [CrossRef]\n7.\nFriha, O.; Ferrag, M.A.;\
    \ Shu, L.; Maglaras, L.; Wang, X. Internet of Things for the Future of Smart Agriculture:\
    \ A Comprehensive\nSurvey of Emerging Technologies. IEEE/CAA J. Autom. Sin. 2021,\
    \ 8, 718–752. [CrossRef]\n8.\nKianat, J.; Khan, M.A.; Sharif, M.; Akram, T.; Rehman,\
    \ A.; Saba, T. A joint framework of feature reduction and robust feature\nselection\
    \ for cucumber leaf diseases recognition. Optik 2021, 240, 166566. [CrossRef]\n\
    9.\nSaba, T.; Rehman, A.; AlGhamdi, J.S. Weather forecasting based on hybrid neural\
    \ model. Appl. Water Sci. 2017, 7, 3869–3874.\n[CrossRef]\n10.\nSharma, Y.; Tyagi,\
    \ V.; Datta, P. IoT based smart agriculture monitoring system. Int. J. Innov.\
    \ Technol. Explor. Eng. 2020, 9, 325–328.\n11.\nFern, B.M.; Rahim, M.S.M.; Saba,\
    \ T.; Almazyad, A.S.; Rehman, A. Stratiﬁed classiﬁcation of plant species based\
    \ on venation state.\nBiomed. Res. 2017, 28, 5660–5663.\n12.\nSudarshan, K.; Hegde,\
    \ R.R.; Sudarshan, K.; Patil, S. Smart agriculture monitoring and protection system\
    \ using IoT. Perspect.\nCommun. Embed. Syst. Signal Process. PiCES 2019, 2, 308–310.\n\
    13.\nRajaram, K.; Sundareswaran, R. IoT Based Crop-Field Monitoring and Precise\
    \ Irrigation System Using Crop Water Requirement.\nIn International Conference\
    \ on Computational Intelligence in Data Science; Springer: Cham, Switzerland,\
    \ 2020; pp. 291–304.\n14.\nAbba, S.; Wadumi Namkusong, J.; Lee, J.A.; Liz Crespo,\
    \ M. Design and Performance Evaluation of a Low-Cost Autonomous\nSensor Interface\
    \ for a Smart IoT-Based Irrigation Monitoring and Control System. Sensors 2019,\
    \ 19, 3643. [CrossRef]\n15.\nKamaruddin, F.; Abd Malik, N.N.N.; Murad, N.A.; Latiff,\
    \ N.M.A.A.; Yusof, S.K.S.; Hamzah, S.A. IoT-based intelligent irrigation\nmanagement\
    \ and monitoring system using Arduino. Telkomnika 2019, 17, 2378–2388. [CrossRef]\n\
    16.\nAkshaya, M.; Kavipriya, P.R.; Yogapriya, M.; Karthikamani, R. IoT based fertilizer\
    \ injector for agricultural plants. Int. Res. J. Eng.\nTechnol. 2020, 7, 2950–2954.\n\
    17.\nReddy, H.S.; Hedge, G.; Chinnayan, D.R. IOT based leaf disease detection\
    \ and fertilizer recommendation. Int. J. Innov. Technol.\nExplor. Eng. 2019, 9,\
    \ 132–136.\n18.\nChavan, R.; Deoghare, A.; Dugar, R.; Karad, P. IoT Based Solution\
    \ for Grape Disease Prediction Using Convolutional Neural\nNetwork and Farm Monitoring.\
    \ Int. J. Sci. Res. Eng. Dev. 2019, 2, 494–500.\n19.\nBhoi, S.K.; Jena, K.K.;\
    \ Panda, S.K.; Long, H.V.; Kumar, R.; Subbulakshmi, P.; Bin Jebreen, H. An Internet\
    \ of Things assisted\nUnmanned Aerial Vehicle based artiﬁcial intelligence model\
    \ for rice pest detection. Microprocess. Microsyst. 2021, 80, 103607.\n[CrossRef]\n\
    20.\nGanesh, P.; Tamilselvi, K.; Karthi, P. Crop prediction by monitoring temperature\
    \ and rainfall using decision tree with IoT and\ncloud-based system. Proceedings\
    \ of the International Conference on Computational Intelligence and Data Science,\
    \ Gurugram, India, 7–8\nApril 2018, 1–9.\n21.\nTolentino, L.K. Yield evaluation\
    \ of Brassica rapa, Lactuca sativa, and Brassica integrifolia using image processing\
    \ in an IoT-based\naquaponics with temperature-controlled greenhouse. AGRIVITA\
    \ J. Agric. Sci. 2020, 42, 393–410. [CrossRef]\n22.\nVisconti, P.; Giannoccaro,\
    \ N.I.; de Fazio, R.; Strazzella, S.; Cafagna, D. IoT-oriented software platform\
    \ applied to sensors-based\nfarming facility with smartphone farmer app. Bull.\
    \ Electr. Eng. Inform. 2020, 9, 1095–1105. [CrossRef]\n23.\nKodali, R.K.; Rajanarayanan,\
    \ S.C.; Boppana, L. IoT based Weather Monitoring and Notiﬁcation System for Greenhouses.\n\
    In Proceedings of the 2019 11th International Conference on Advanced Computing\
    \ (ICoAC), Chennai, India, 18–20 December\n2019; pp. 342–345.\n24.\nArifﬁn, M.A.M.;\
    \ Ramli, M.I.; Amin, M.N.M.; Ismail, M.; Zainol, Z.; Ahmad, N.D.; Jamil, N. Automatic\
    \ Climate Control\nfor Mushroom Cultivation Using IoT Approach. In Proceedings\
    \ of the 2020 IEEE 10th International Conference on System\nEngineering and Technology\
    \ (ICSET), Shah Alam, Malaysia, 9 November 2020; pp. 123–128.\n25.\nNagamani,\
    \ P.; Sundari Jahnavi, M.; Govind Raju, N.N.; Bhanu Shankar, A.; Govind Reddy,\
    \ K.S. Smart Hydroponics Water\nMonitoring Using IoT. J. Emerg. Technol. Innov.\
    \ Res. 2019, 6, 114–120.\n26.\nJayasuriya, Y.P.; Elvitigala, C.S.; Wamakulasooriya,\
    \ K.; Sudantha, B. Low Cost and IoT Based Greenhouse with Climate Monitoring\n\
    and Controlling System for Tropical Countries. In Proceedings of the 2018 International\
    \ Conference on System Science and\nEngineering (ICSSE), New Taipei, Taiwan, 28–30\
    \ June 2018; pp. 1–6.\nAgronomy 2022, 12, 127\n20 of 21\n27.\nBoursianis, A.D.;\
    \ Papadopoulou, M.S.; Diamantoulakis, P.; Liopa-Tsakalidi, A.; Barouchas, P.;\
    \ Salahas, G.; Karagiannidis, G.;\nWan, S.; Goudos, S.K. Internet of Things (IoT)\
    \ and Agricultural Unmanned Aerial Vehicles (UAVs) in smart farming: A\ncomprehensive\
    \ review. Internet Things 2020, 100187. [CrossRef]\n28.\nOdesola, D.F.; Olivarez,\
    \ R.; Ramos, A.; Malolos, D.; Patrick, V.; Balba, N.P. Internet of things (IoT)\
    \ based home automated weather\nmonitoring system. LPU-Laguna J. Eng. Comput.\
    \ Stud. 2019, 4, 1–10.\n29.\nFu, L.; Gao, F.; Wu, J.; Li, R.; Karkee, M.; Zhang,\
    \ Q. Application of consumer RGB-D cameras for fruit detection and localization\n\
    in ﬁeld: A critical review. Comput. Electron. Agric. 2020, 177, 105687. [CrossRef]\n\
    30.\nDutta, J.; Dutta, J.; Gogoi, S. Smart farming: An opportunity for efﬁcient\
    \ monitoring and detection of pests and diseases. J.\nEntomol. Zool. Stud. 2020,\
    \ 8, 2352–2359.\n31.\nMaslekar, N.V.; Kulkarni, K.P.; Chakravarthy, A.K. Application\
    \ of Unmanned Aerial Vehicles (UAVs) for Pest Surveillance,\nMonitoring and Management.\
    \ In Innovative Pest Management Approaches for the 21st Century; Springer: Berlin,\
    \ Germany, 2020; pp.\n27–45.\n32.\nGao, D.; Sun, Q.; Hu, B.; Zhang, S. A Framework\
    \ for Agricultural Pest and Disease Monitoring Based on Internet-of-Things and\n\
    Unmanned Aerial Vehicles. Sensors 2020, 20, 1487. [CrossRef]\n33.\nTang, Y.; Chen,\
    \ M.; Wang, C.; Luo, L.; Li, J.; Lian, G.; Zou, X. Recognition and Localization\
    \ Methods for Vision-Based Fruit Picking\nRobots: A Review. Front. Plant Sci.\
    \ 2020, 11, 510. [CrossRef] [PubMed]\n34.\nKang, H.; Zhou, H.; Wang, X.; Chen,\
    \ C. Real-Time Fruit Recognition and Grasping Estimation for Robotic Apple Harvesting.\n\
    Sensors 2020, 20, 5670. [CrossRef]\n35.\nOgorodnikova, O.M.; Ali, W. Method of\
    \ ripe tomato detecting for a harvesting robot. In AIP Conference Proceedings;\
    \ AIP Publishing\nLLC: Melville, NY, USA, 2019.\n36.\nYeshmukhametov, A.; Al Khaleel,\
    \ L.; Koganezawa, K.; Yamamoto, Y.; Amirgaliyev, Y.; Buribayev, Z. Designing of\
    \ CNC Based\nAgricultural Robot with a Novel Tomato Harvesting Continuum Manipulator\
    \ Tool. Int. J. Mech. Eng. Robot. Res. 2020, 9, 876–881.\n[CrossRef]\n37.\nZhang,\
    \ W.; Gong, L.; Chen, S.; Wang, W.; Miao, Z.; Liu, C. Autonomous Identiﬁcation\
    \ and Positioning of Trucks during\nCollaborative Forage Harvesting. Sensors 2021,\
    \ 21, 1166. [CrossRef]\n38.\nLi, B.; Zhou, A.; Yang, C.; Zheng, S. The Design\
    \ and Realization of fruit Harvesting Robot Based on IOT. In Proceedings of the\n\
    2016 International Conference on Computer Engineering, Information Science & Application\
    \ Technology (ICCIA 2016); Atlantis Press:\nAmstelkade, AV, USA, 2016.\n39.\n\
    Rahaman, S.H.; Biswas, S. Advantages of Internet of Things (IoT) and It’s Applications\
    \ in Smart Agriculture System. Int. Res. J.\nAdv. Sci. Hub 2020, 2, 4–10. [CrossRef]\n\
    40.\nMishra, D.; Natalizio, E. A survey on cellular-connected UAVs: Design challenges,\
    \ enabling 5G/B5G innovations, and experimen-\ntal advancements. Comput. Netw.\
    \ 2020, 182, 107451. [CrossRef]\n41.\nUllo, S.L.; Sinha, G.R. Advances in Smart\
    \ Environment Monitoring Systems Using IoT and Sensors. Sensors 2020, 20, 3113.\n\
    [CrossRef]\n42.\nMadushanki, R.; Wirasagoda, H.; Halgamuge, M. Adoption of the\
    \ Internet of Things (IoT) in agriculture and smart farming\ntowards urban greening:\
    \ A review. Int. J. Adv. Comput. Sci. Appl. (IJACSA) 2019, 1. [CrossRef]\n43.\n\
    Vikranth, K. An Implementation of IoT and Data Analytics in Smart Agricultural\
    \ System—A Systematic Literature Review. Int. J.\nManag. Technol. Soc. Sci. 2021,\
    \ 6, 41–70. [CrossRef]\n44.\nKhan, M.A.; Akram, T.; Sharif, M.; Saba, T. Fruits\
    \ diseases classiﬁcation: Exploiting a hierarchical framework for deep features\n\
    fusion and selection. Multimed. Tools Appl. 2020, 79, 25763–25783. [CrossRef]\n\
    45.\nSingh, D.; Jain, N.; Jain, P.; Kayal, P.; Kumawat, S.; Batra, N. PlantDoc:\
    \ A dataset for visual plant disease detection. In Proceedings\nof the 7th ACM\
    \ IKDD CoDS and 25th COMAD, Hyderabad, India, 5–7 January 2020; pp. 249–253.\n\
    46.\nYan, Q.; Yang, B.; Wang, W.; Wang, B.; Chen, P.; Zhang, J. Apple Leaf Diseases\
    \ Recognition Based on an Improved Convolutional\nNeural Network. Sensors 2020,\
    \ 20, 3535. [CrossRef]\n47.\nAlruwaili, M.; Alanazi, S.; Abd, S.; Shehab, A. An\
    \ Efﬁcient Deep Learning Model for Olive Diseases Detection. Int. J. Adv. Comput.\n\
    Sci. Appl. 2019, 10, 486–492. [CrossRef]\n48.\nVij, A.; Vijendra, S.; Jain, A.;\
    \ Bajaj, S.; Bassi, A.; Sharma, A. IoT and Machine Learning Approaches for Automation\
    \ of Farm\nIrrigation System. Procedia Comput. Sci. 2020, 167, 1250–1257. [CrossRef]\n\
    49.\nMohanty, S.P.; Hughes, D.P.; Salathé, M. Using Deep Learning for Image-Based\
    \ Plant Disease Detection. Front. Plant. Sci. 2016,\n7, 1419. [CrossRef] [PubMed]\n\
    50.\nCruz, A.C.; Luvisi, A.; De Bellis, L.; Ampatzidis, Y. X-FIDO: An Effective\
    \ Application for Detecting Olive Quick Decline Syndrome\nwith Deep Learning and\
    \ Data Fusion. Front. Plant. Sci. 2017, 8, 1741. [CrossRef] [PubMed]\n51.\nRauf,\
    \ H.T.; Saleem, B.A.; Lali, M.I.U.; Khan, M.A.; Sharif, M.; Bukhari, S.A.C. A\
    \ citrus fruits and leaves dataset for detection and\nclassiﬁcation of citrus\
    \ diseases through machine learning. Data Brief. 2019, 26, 104340. [CrossRef]\n\
    52.\nKuaban, G.S.; Czekalski, P.; Molua, E.L.; Grochla, K. An Architectural Framework\
    \ Proposal for IoT Driven Agriculture; Springer:\nBerlin, Germany, 2019; pp. 18–33.\n\
    53.\nPathak, A.; Uddin, M.A.; Abedin, J.; Andersson, K.; Mustafa, R.; Hossain,\
    \ M.S. IoT based Smart System to Support Agricultural\nParameters: A Case Study.\
    \ Procedia Comput. Sci. 2019, 155, 648–653. [CrossRef]\n54.\nThapa, R.; Snavely,\
    \ N.; Belongie, S.; Khan, A. The plant pathology 2020 challenge dataset to classify\
    \ foliar disease of apples. arXiv\n2020, arXiv:2004.11958.\nAgronomy 2022, 12,\
    \ 127\n21 of 21\n55.\nRomeo, L.; Petitti, A.; Marani, R.; Milella, A. Internet\
    \ of Robotic Things in Smart Domains: Applications and Challenges. Sensors\n2020,\
    \ 20, 3355. [CrossRef] [PubMed]\n56.\nSangeetha, S.K.B. Comparison of Crop Disease\
    \ Detection Methods-An intensive analysis. Psychol. Educ. J. 2021, 58, 10540–10546.\n"
  inline_citation: '>'
  journal: Agronomy (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2073-4395/12/1/127/pdf?version=1642508054
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: A Revisit of Internet of Things Technologies for Monitoring and Control Strategies
    in Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/ijerph18189668
  analysis: '>'
  authors:
  - Se-Ra Oh
  - Young-Duk Seo
  - Euijong Lee
  - Young-Gab Kim
  citation_count: 28
  full_citation: '>'
  full_text: ">\nInternational  Journal  of\nEnvironmental Research\nand Public Health\n\
    Review\nA Comprehensive Survey on Security and Privacy for Electronic\nHealth\
    \ Data\nSe-Ra Oh 1\n, Young-Duk Seo 2\n, Euijong Lee 3\nand Young-Gab Kim 4,*\n\
    \x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Oh,\
    \ S.-R.; Seo, Y.-D.; Lee, E.;\nKim, Y.-G. A Comprehensive Survey\non Security\
    \ and Privacy for Electronic\nHealth Data. Int. J. Environ. Res.\nPublic Health\
    \ 2021, 18, 9668. https://\ndoi.org/10.3390/ijerph18189668\nAcademic Editors:\
    \ Mahmoud\nElkhodr, Omar Darwish and Belal\nAlsinglawi\nReceived: 28 July 2021\n\
    Accepted: 9 September 2021\nPublished: 14 September 2021\nPublisher’s Note: MDPI\
    \ stays neutral\nwith regard to jurisdictional claims in\npublished maps and institutional\
    \ afﬁl-\niations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nMiro Corporation, Incheon 21988, Korea; sroh@gomiro.com\n2\nDepartment\
    \ of Computer Engineering, Inha University, Incheon 22212, Korea; mysid88@inha.ac.kr\n\
    3\nDepartment of Computer Science, Chungbuk National University, Cheongju 28644,\
    \ Korea;\nkongjjagae@cbnu.ac.kr\n4\nDepartment of Computer and Information Security,\
    \ and Convergence Engineering for Intelligent Drone,\nSejong University, Seoul\
    \ 05006, Korea\n*\nCorrespondence: alwaysgabi@sejong.ac.kr\nAbstract: Recently,\
    \ the integration of state-of-the-art technologies, such as modern sensors, networks,\n\
    and cloud computing, has revolutionized the conventional healthcare system. However,\
    \ security\nconcerns have increasingly been emerging due to the integration of\
    \ technologies. Therefore, the\nsecurity and privacy issues associated with e-health\
    \ data must be properly explored. In this paper,\nto investigate the security\
    \ and privacy of e-health systems, we identiﬁed major components of the\nmodern\
    \ e-health systems (i.e., e-health data, medical devices, medical networks and\
    \ edge/fog/cloud).\nThen, we reviewed recent security and privacy studies that\
    \ focus on each component of the e-health\nsystems. Based on the review, we obtained\
    \ research taxonomy, security concerns, requirements,\nsolutions, research trends,\
    \ and open challenges for the components with strengths and weaknesses of\nthe\
    \ analyzed studies. In particular, edge and fog computing studies for e-health\
    \ security and privacy\nwere reviewed since the studies had mostly not been analyzed\
    \ in other survey papers.\nKeywords: security concerns; security requirements;\
    \ security solutions; e-health data; medical\ndevices; medical networks; edge\
    \ computing; fog computing; cloud computing\n1. Introduction\nThe advancement\
    \ of modern technologies, such as sensors and cloud computing,\nhas completely\
    \ changed conventional healthcare systems. Such systems can demonstrate\nthe strong\
    \ potential of next-generation healthcare services after digitizing paper-based\n\
    medical records. Individuals’ health conditions can be remotely sensed by medical\
    \ devices,\ntransmitted by medical networks, and processed by the edge, fog, and\
    \ cloud computing.\nInnovative healthcare systems that can improve quality of\
    \ life will become more essential\nfor various smart healthcare services such\
    \ as remote monitoring, diagnosis, treatment, and\nprescription based on personal\
    \ electronic health (e-health) data. However, the modern e-\nhealthcare system\
    \ is a double-edged sword. While it gives us advanced healthcare services,\nsecurity\
    \ concerns have increasingly emerged.\nE-health data are some of the most private\
    \ information for individuals. Regulations\nfor privacy protection such as the\
    \ Health Insurance Portability and Accountability Act\n(HIPPA) [1] and General\
    \ Data Protection Regulation (GDPR) [2] have been established to\nenhance the\
    \ governance of healthcare data; however, e-health data has been frequently\n\
    breached. In addition, as the accessibility and usability of e-health data increase,\
    \ its security\nattack vectors have also been widening. Over the last decade,\
    \ 1.5 million medical devices\nhave been compromised due to software vulnerabilities\
    \ and their wireless connection [3],\nand cloud computing services that store\
    \ and process e-health data have become a target\nfor big e-health data. According\
    \ to the Protenus Breach Barometer, 41.4 million patients’\nrecords were breached\
    \ in 2019 [4].\nInt. J. Environ. Res. Public Health 2021, 18, 9668. https://doi.org/10.3390/ijerph18189668\n\
    https://www.mdpi.com/journal/ijerph\nInt. J. Environ. Res. Public Health 2021,\
    \ 18, 9668\n2 of 47\nTherefore, security and privacy issues must be explored to\
    \ prevent breaches of e-health\ndata. In particular, security concerns, requirements,\
    \ and solutions must be identiﬁed to\nproperly study how to secure e-healthcare\
    \ systems. Consequently, the primary goal of this\npaper is to survey security\
    \ and privacy studies to identify security concerns, requirements,\nand solutions.\
    \ Speciﬁcally, because modern e-healthcare systems generally consist of\nseveral\
    \ components (i.e., e-health data, medical devices, medical networks, and edge,\
    \ fog,\nand cloud computing) that have their own characteristics, security concerns,\
    \ requirements,\nand solutions are surveyed by component. In addition, this paper\
    \ presents recent research\ntrends and open challenges for each component.\nDuring\
    \ the last ﬁve years, many survey papers focusing on the security and privacy\n\
    of e-health data have been published; however, there has been no comprehensive\
    \ survey of\nan overall e-healthcare system, such as e-health data, medical devices,\
    \ medical networks,\nand edge/fog/cloud computing that senses, transmits, stores,\
    \ and processes e-health data.\nThere have been some surveys focusing on speciﬁc\
    \ components of e-healthcare systems,\nthat is, e-health data security [5–8],\
    \ medical device security [3,9–12], and medical network\nsecurity [13,14]. Other\
    \ studies [15–18] have aimed at more than one component of the\ne-healthcare system.\
    \ However, the security and privacy issues for all components have not\nyet been\
    \ surveyed. To the best of our knowledge, this is the ﬁrst comprehensive survey\n\
    paper to identify security concerns, requirements, solutions, research trends,\
    \ and open\nchallenges for each component of the e-health system consisting of\
    \ e-health data, medical\ndevices, medical networks, and edge, fog, and cloud\
    \ computing. The main contributions\nof this paper are as follows:\n•\nA comprehensive\
    \ survey on the security and privacy issues for e-health data, medical\ndevices,\
    \ medical networks, edge, fog, and cloud computing;\n•\nIdentiﬁcation and taxonomies\
    \ of the security concerns, security requirements, and se-\ncurity solutions for\
    \ e-health data, medical devices, medical networks, and\nedge/fog/cloud computing;\n\
    •\nAnalysis and identiﬁcation of the strengths and weaknesses of the surveyed\
    \ studies;\n•\nIdentiﬁcation of the research trends and open challenges for each\
    \ component (i.e.,\ne-health data, medical devices, medical networks, edge, fog,\
    \ and cloud computing) of\ne-health systems.\nIn Section 2, the background of\
    \ this paper is described in terms of research questions,\nsearch strategy, target\
    \ domains, and related works. Section 3 then provides security con-\ncerns, requirements,\
    \ and solutions by reviewing recent security and privacy studies for\ne-health\
    \ data. Similarly, for the medical device, medical network, and edge/fog/cloud\n\
    computing, Sections 4–6, respectively, discuss security concerns, requirements,\
    \ and solu-\ntions. Then, Section 7 discusses research trends and open challenges\
    \ for the components of\nmodern e-health systems. Finally, Section 8 concludes\
    \ this survey.\n2. Background\nThis section presents a method of searching and\
    \ selecting security and privacy studies\nrelated to e-health data. Then, four\
    \ main components (i.e., e-health data, medical devices,\nmedical networks, and\
    \ edge/fog/cloud) of modern e-health systems are identiﬁed as\nthe target domains\
    \ of this survey. Finally, related works, which are existing security and\nprivacy\
    \ surveys in the medical domains, are also analyzed.\n2.1. Method\nIn this paper,\
    \ we created and followed a method based on the systematic literature\nreview\
    \ (SLR) approach [19] to search and select studies that focus on security and\
    \ privacy\nissues related to e-health data. Figure 1 denotes the literature review\
    \ procedure.\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n3 of 47\nFigure\
    \ 1. Overview of the literature review procedure.\nThe primary goal of this survey\
    \ is to highlight the security concerns, requirements,\nand solutions, research\
    \ trends, and open challenges for e-health data. For a consistent and\nmeaningful\
    \ survey, we carefully formed the following key research questions (RQs). Note\n\
    that the target domains of this paper are described in Section 2.2 based on the\
    \ analysis of\nthe selected studies.\n•\nRQ 1: What are the representative security\
    \ concerns, requirements, and solutions to\nprotect e-health data for each target\
    \ domain?\n•\nRQ 2: What are the strengths and weaknesses of the surveyed studies\
    \ for each target\ndomain?\n•\nRQ 3: What are the research trends and open challenges\
    \ for each target domain?\nTo answer the questions, we selected general search\
    \ keywords such as “security”,\n“privacy”, and “healthcare” as described in Figure\
    \ 1 for a comprehensive survey. We\ncompiled 831 studies from the international\
    \ literature databases (i.e., IEEE Xplore, ACM\nDigital Library, ScienceDirect,\
    \ SpringerLink, and PubMed). Then, following selection\ncriteria were considered\
    \ to select key studies for solving our questions.\n•\nSC 1: Studies must have\
    \ been published within ﬁve years;\n•\nSC 2: Studies must use English;\n•\nSC\
    \ 3: Studies must focus on medical or healthcare domains. There were various\n\
    security and privacy studies in diverse environments such as Internet of Things\
    \ (IoT),\nedge, fog, and cloud; however, we excluded studies that did not focus\
    \ on the medical\nor healthcare domains;\n•\nSC 4: Studies must focus on technical\
    \ research. we excluded some studies regarding\nmedical policies, social sciences,\
    \ etc.;\n•\nSC 5: Journals should be ranked top 15% in Journal Citation Reports\
    \ (JCR). If journals\nwere not ranked in the JCR, it should have around 0.8 or\
    \ higher SCImago Journal\nRank (SJR). However, medical journals were selected\
    \ even if they were ranked around\nthe top 50% in JCR or had 0.4 or higher SJR\
    \ because of their expertise.\nIn case of similar works, we compared their published\
    \ date, originality, and overall\nquality. After selection, we ﬁnally obtained\
    \ 96 studies that focus on security and privacy\nfor e-health domains. Table 1\
    \ shows which journals published the surveyed studies; the\nimpact factors (IFs)\
    \ and SJRs in Table 1 correspond to 2020.\nInt. J. Environ. Res. Public Health\
    \ 2021, 18, 9668\n4 of 47\nTable 1. Journal sources.\nPublisher\nJournal\nIF\n\
    SJR\nIEEE\nIEEE Access\n3.37\n0.59\nIEEE Systems Journal\n3.93\n0.86\nIEEE Journal\
    \ of Biomedical and Health Informatics\n5.77\n1.29\nIEEE Transactions on Information\
    \ Forensics and Security\n7.18\n1.61\nIEEE Internet of Things Journal\n9.47\n\
    2.08\nIEEE Transactions on Industrial Informatics\n10.21\n2.50\nIEEE Transactions\
    \ on Image Processing\n10.86\n1.78\nIEEE Transactions on Parallel and Distributed\
    \ Systems\n2.69\n0.76\nIEEE Transactions on Services Computing\n5.7\n0.97\nIEEE\
    \ Transactions on Cloud Computing\n8.22\n1.21\nIEEE Reviews in Biomedical Engineering\n\
    -\n1.64\nIEEE Transactions on Biomedical Engineering\n4.54\n1.15\nIEEE Transactions\
    \ on Wireless Communications\n7.02\n2.01\nIEEE Transactions on Biomedical Circuits\
    \ and Systems\n3.83\n1.02\nIEEE Journal on Selected Areas in Communications\n\
    9.14\n2.99\nIEEE Transactions on Dependable and Secure Computing\n7.33\n1.27\n\
    ACM\nCommunications of the ACM\n4.65\n0.97\nIEEE/ACM\nIEEE/ACM Transactions on\
    \ Computational Biology and\nBioinformatics\n3.71\n0.75\nIEEE/ACM Transactions\
    \ on Networking\n3.56\n1.02\nElsevier\nFuture Generation Computer Systems\n7.19\n\
    1.26\nComputer Methods and Programs in Biomedicine\n5.43\n0.92\nInternational\
    \ Journal of Medical Informatics\n4.05\n1.12\nComputers in Biology and Medicine\n\
    4.59\n0.88\nSpringer\nJournal of Medical Systems\n4.46\n0.69\nNeural Computing\
    \ and Applications\n5.61\n0.71\nJournal of Big Data\n-\n1.03\nSAGE\nHealth Informatics\
    \ Journal\n2.68\n0.56\nJMIR\nJournal of Medical Internet Research\n2.68\n1.45\n\
    JMIR Medical Informatics\n2.96\n-\nJMIR mHealth and uHealth\n4.77\n1.36\nOxford\n\
    University Press\nEuropace\n5.21\n2.12\nTaylor & Francis\nExpert Review of Medical\
    \ Devices\n3.17\n0.62\nDiabetes\nTechnology\nSociety\nJournal of diabetes science\
    \ and technology\n-\n1.04\n2.2. Target Domain\nDriven by diverse technical advancements,\
    \ studies on the security and privacy of\ne-health data have been conducted with\
    \ different target domains such as medical devices\nand networks. Therefore, to\
    \ comprehensively survey the security and privacy issues of\nprotecting data with\
    \ the consideration of overall domains, we analyzed existing studies\nto identify\
    \ the common components of modern e-health systems as the target domains of\n\
    this survey. Then, we surveyed the studies according to the domains to identify\
    \ security\nconcerns, requirements, solutions, research trends, and open challenges\
    \ for each domain.\nFigure 2 shows an overview of the e-health system and the\
    \ target domains of this survey.\nInt. J. Environ. Res. Public Health 2021, 18,\
    \ 9668\n5 of 47\nFigure 2. Overview of e-health system and the target domains.\n\
    In a modern e-health system, patients’ e-health data can be generated by medical\n\
    devices, transmitted via medical networks, stored, and processed in edge/fog/cloud.\n\
    Therefore, to comprehensively cover the security and privacy of e-health data,\
    \ e-health\ndata and the surrounding environments (i.e., medical devices, medical\
    \ networks, and\nedge/fog/cloud computing) are the main target domains of this\
    \ survey.\n2.3. Related Work\nBased on the searching and selection method described\
    \ in Section 2.1, we found\n15 security and privacy survey papers in medical/healthcare\
    \ domains. Table 2 shows the\npapers and their target domains.\nTable 2. Comparison\
    \ of the survey papers in terms of the target domains.\nReference\nE-Health Data\n\
    Medical Device\nNetwork\nEdge\nFog\nCloud\nKruse et al. [5]\n✓\nAbouelmehdi et\
    \ al. [6]\n✓\nMohammed et al. [7]\n✓\nAziz et al. [8]\n✓\nZheng et al. [9]\n✓\n\
    ✓\nWu et al. [10]\n✓\nYaqoob et al. [3]\n✓\n✓\nKintzlinger et al. [11]\n✓\n✓\n\
    AlTawy et al. [12]\n✓\n✓\nYaacoub et al. [13]\n✓\n✓\nSun et al. [14]\n✓\n✓\n✓\n\
    ✓\nChenthara et al. [15]\n✓\n✓\n✓\nYüksel et al. [16]\n✓\n✓\nWazid et al. [17]\n\
    ✓\n✓\n✓\nRazaque et al. [18]\n✓\n✓\n✓\n✓\nOur Survey\n✓\n✓\n✓\n✓\n✓\n✓\nMost surveys\
    \ focused on one or two speciﬁc domains. Some of the surveys [5–8]\nstudied the\
    \ security and privacy of e-health data such as electronic health record (EHR)\
    \ and\ngenomic data, and some surveys [3,9–12] focused on the security and privacy\
    \ of medical\ndevices. In addition, two surveys [13,14] focused on the security\
    \ and privacy of medical\nnetworks such as the Internet of Medical Things (IoMT)\
    \ and Body Area Network (BAN),\nInt. J. Environ. Res. Public Health 2021, 18,\
    \ 9668\n6 of 47\nand there were security and privacy surveys on e-health challenges\
    \ in the cloud, mobile\nhealthcare (mHealth) systems, electronic health services,\
    \ and the medical domain [15–18].\nHere follows a brief summary of each survey.\n\
    Several studies investigated security and privacy factors for e-health data. Kruse\
    \ et al. [5]\ncollected 25 journals from PubMed, CINAHL, and ProQuest Nursing\
    \ and Allied Health\nSource, and analyzed the journals to investigate security\
    \ techniques for EHRs. The security\ntechniques were analyzed and categorized\
    \ into three themes: administrative safeguard\n(e.g., risk management and system\
    \ security evaluation), physical safeguard (e.g., physical\naccess control and\
    \ workstation security), and technical safeguard (e.g., authentication,\naccess\
    \ control, audit, data encryption, and ﬁrewall). Abouelmehdi et al. [6] surveyed\n\
    security and privacy challenges for big healthcare data. To accomplish the survey,\
    \ several\nstudies including security factors (i.e., authentication, data encryption,\
    \ data masking, access\ncontrol, de-identiﬁcation, and identity-based anonymization)\
    \ were analyzed. In addition,\nMohammed et al. [7] and Aziz et al. [8] surveyed\
    \ security and privacy for genomic data.\nMohammed et al. identiﬁed three types\
    \ of attacks (i.e., identity tracing, attribute disclosure,\nand completion attacks)\
    \ to genome privacy. They also classiﬁed genome privacy-preserving\nsolutions\
    \ (e.g., differential privacy and homomorphic encryption) that is related to the\n\
    attacks. Aziz et al. [8] discussed privacy problems on genome data and reviewed\
    \ privacy-\npreserving solutions regarding homomorphic encryption, Garbled circuit,\
    \ secure hardware,\nand differential privacy.\nThere are survey papers related\
    \ to medical devices. Zheng et al. [9] surveyed chal-\nlenges for securing wireless\
    \ implantable medical devices (IMDs). In the paper, they\ndiscussed security requirements,\
    \ security solutions supporting emergency access, and\nlightweight security schemes\
    \ for access control. Wu et al. [10] speciﬁcally surveyed access\ncontrol schemes\
    \ for IMDs. They reviewed the existing studies for IMD access control\nand classiﬁed\
    \ the IMD access control schemes into four groups (i.e., direct access control\n\
    with preloaded keys, direct access control with temporary keys, indirect access\
    \ control via\na proxy, and anomaly detection-based schemes). Yaqoob et al. [3]\
    \ surveyed studies for\nmedical devices, but they focused on security vulnerabilities,\
    \ attacks, and countermeasures\nof the networked medical devices. In the study,\
    \ a network model and attack vector are\ndescribed, then security vulnerabilities,\
    \ attacks, and countermeasures were analyzed for\nthe medical device products.\
    \ In addition, Kintzlinger et al. [11] analyzed the security of\npersonal medical\
    \ devices (PMDs) and their ecosystems. They provided a speciﬁc attack\nﬂows in\
    \ the PMDs and its ecosystem. They also surveyed possible attacks and mechanisms\n\
    to protect the attacks. AlTawy et al. [12] also surveyed security attacks and\
    \ threats of\nmedical devices, but they focused on various types of security tradeoffs\
    \ between security,\nsafety, and availability.\nYaacoub et al. [13] and Sun et\
    \ al. [14] surveyed security and privacy for IoMT. Yaacoub\net al. [13] presented\
    \ the components of IoMT (e.g., the types of IoMT, devices, and protocols),\n\
    and analyzed the security issues, concerns, challenges, attacks, and countermeasures\
    \ in\nthe IoMT. Sun et al. [14] also surveyed security and privacy-related studies\
    \ for IoMT. They\nidentiﬁed 14 security and privacy requirements for the IoMT\
    \ on several levels: data level,\nsensor level, personal server level, and medical\
    \ server level.\nMoreover, several studies were investigated the security and\
    \ privacy of e-health chal-\nlenges in the cloud environments, mobile healthcare\
    \ system, electronic health services, and\nmedical domain [15–18]. Chenthara et\
    \ al. [15] reviewed security and privacy challenges and\napproaches of e-health\
    \ solutions for electronic health records (EHR) in the cloud environ-\nment. In\
    \ particular, they identiﬁed security and privacy requirements for e-health data\
    \ and\nanalyzed various studies focused on privacy-preserving approaches using\
    \ cryptographic\ntechniques (i.e., symmetric key encryption, public key encryption,\
    \ and a few alternative\ncryptographic primitives) and non-cryptographic techniques\
    \ (i.e., access control). In ad-\ndition, Yüksel et al. [16] conducted a survey\
    \ on the security and privacy for electronic\nhealth services (EHSs). They particularly\
    \ categorized recent studies into six groups (i.e.,\narchitecture, access control,\
    \ emergency, sharing, search, and anonymity), and presented\nInt. J. Environ.\
    \ Res. Public Health 2021, 18, 9668\n7 of 47\nanalyzed results and open challenges\
    \ based on the research groups. Wazid et al. [17] sur-\nveyed security protocols\
    \ for mHealth. They discussed security requirements, issues, and\nthreats for\
    \ mHealth systems, and presented a taxonomy of security protocols for mHealth.\n\
    They also performed a comparison of the protocols in terms of computation cost\
    \ and\ncommunication cost. Razaque et al. [18] introduced a survey on security\
    \ vulnerabilities\nand attacks for the medical domain. The security vulnerabilities\
    \ and attacks were analyzed\naccording to the dataﬂow (i.e., patient registration,\
    \ data collection, storing and utilizing the\ndata) in the medical domain.\nWe\
    \ found more than 40 survey papers. However, only 15 surveys are analyzed in this\n\
    paper because the others are not related to medical domains or not focused on\
    \ security\nand privacy issues. Moreover, according to Table 2, no surveys considered\
    \ the overall\ncomponents of modern e-health systems (i.e., e-health data, medical\
    \ device, medical\nnetwork, and edge/fog/cloud computing). Therefore, this survey\
    \ focuses on the four\nmajor components of e-health systems to comprehensively\
    \ identify the security concerns,\nrequirements, solutions, research trends, and\
    \ open challenges for each.\n3. E-Health Data\nThis section presents security\
    \ concerns, requirements, solutions, research trends, and\nopen challenges for\
    \ the security and privacy of e-health data.\n3.1. Overview\nThe initial goal\
    \ of this section was to explore various security and privacy studies\non e-health\
    \ data; however, there were no sufﬁcient security or privacy studies focusing\n\
    on e-health data itself. Most studies focused on proposing new security solutions\
    \ such\nas cryptography and authentication required to protect the e-health data.\
    \ Therefore, the\ncontents of this section were collected and analyzed based on\
    \ a few studies for e-health data\nand the various studies in diverse medical/healthcare\
    \ domains such as medical devices\nand networks that mention e-health data security\
    \ and privacy. Figure 3 shows a taxonomy\nfor security concerns, requirements,\
    \ and solutions for e-health data.\nFigure 3. A taxonomy on the security and privacy\
    \ for e-health data.\n3.2. Security Concern, Requirement, and Solution\nAccording\
    \ to our survey, most studies focused on other target domains such as medical\n\
    network and cloud computing rather than e-health data itself. Therefore, we collected\n\
    and analyzed the security concerns, requirements, and solutions for e-health data\
    \ from\ndiverse studies in different domains that partially mentioned the security\
    \ and privacy\nissues of e-health data. A few dedicated security and privacy studies\
    \ on e-health data are\nalso analyzed in this section.\n3.2.1. Security Concern\n\
    E-health data are some of the most critical and private information in modern\
    \ society.\nHowever, security concerns for the data have emerged because of insufﬁcient\
    \ security. For\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n8 of 47\n\
    example, attackers can exploit some security vulnerabilities of e-health systems\
    \ to breach\nthe data and forge their identities to deceive the systems. Tampering\
    \ e-health data becomes\na critical issue since it can pose medical accidents.\
    \ Four security concerns on e-health data,\nthat were commonly mentioned in the\
    \ surveyed studies are as follows.\nUnauthorized access. Various security vulnerabilities\
    \ in medical devices, networks,\nand platforms, such as edge, fog and cloud, are\
    \ at risk of unauthorized access. By using\ntheir vulnerabilities, an attacker\
    \ can access the system to capture sensitive e-health data.\nData disclosure.\
    \ Data disclosure can occur throughout the e-healthcare system such\nas medical\
    \ devices, networks, and edge/fog/cloud platforms because of their security\n\
    vulnerabilities or an administrative mistake. E-health data are an attractive\
    \ target for\nattackers since it is very valuable. According to AlTawy et al.\
    \ [12], a personal health record\n(PHR) on the black market was priced at around\
    \ $50 USD, while a social security number\nwas priced at around $3 USD.\nData\
    \ tampering. Data tampering denotes the modiﬁcation of data without appropri-\n\
    ate authentication and authorization. This attack, which is also known as data\
    \ modiﬁcation,\ncould be a critical security concern because tampered e-health\
    \ data may have strong\nimplications for patients.\nData forgery. E-health data\
    \ or user identities can be forged to deceive legitimate\nservice providers or\
    \ impersonate others. By forging data, an attacker can compromise\ne-health systems,\
    \ or a user with a malicious purpose can take inappropriate proﬁts.\n3.2.2. Security\
    \ Requirement\nThis section presents the six representative security requirements\
    \ for e-health data.\nTo securely protect e-health data with privacy preservation,\
    \ security solutions for the\ndata should consider proper security requirements.\
    \ Data conﬁdentiality, integrity, and\navailability are basic security requirements,\
    \ and data anonymity is required for the patient’s\nprivacy where the data are\
    \ shared with someone who is not the data owner. Detailed\ndescriptions of the\
    \ security requirements are as follows.\nAccess restriction. Access restriction\
    \ denotes the limitation of unauthorized access to\nassets such as e-health data,\
    \ medical devices, and e-healthcare systems. This attack can be\nposed across\
    \ entire medical domains; therefore, proper authentication and access control\n\
    for each domain must be provided to prevent e-health data leaking.\nData conﬁdentiality.\
    \ In medical domains, the data conﬁdentiality of e-health data\nis the most critical\
    \ security requirement. An attacker can infringe data conﬁdentiality by\ngathering\
    \ data from various sources such as databases and networks. In particular, data\n\
    can easily be captured from wireless medical networks such as IoMTs and wireless\
    \ body\narea networks (WBANs). Data conﬁdentiality is important; however, it can\
    \ be breached\nwhen special cases happen in relation to critical patients.\nData\
    \ integrity. Data integrity ensures that transmitted data are untampered with.\n\
    This requirement is vital because doctors treat patients and prescribe medicine\
    \ using\nthe received data. The data integrity violation can directly inﬂuence\
    \ patients’ health\nconditions. Therefore, receivers must verify whether transmitted\
    \ data are untampered.\nRecently, Amato et al. [20] proposed a methodology for\
    \ the validation of security and\nprivacy policies in e-health systems.\nData\
    \ availability. Databases and medical devices that store e-health data must be\
    \ able\nto provide data regardless of time or location. Based on data availability,\
    \ patients should\nbe able to check their e-health data and medical staff should\
    \ be able to use this data to treat\ntheir patients.\nData anonymity. Data anonymity\
    \ should be provided by anonymizing e-health data\nto provide patient privacy\
    \ when it has to be shared. In particular, there is a need to\nanonymize e-health\
    \ data that is unrelated to a speciﬁc purpose and identity information\nabout\
    \ patients and medical staff that can be used to link anonymized data to identities.\n\
    Auditability and accountability. All information regarding e-health data such\
    \ as\ngeneration time, owner, access records, and usage history must be recorded.\
    \ By using\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n9 of 47\nrecorded\
    \ data (i.e., an audit trail), accountability can be satisﬁed to identify the\
    \ person\nin charge when security incidents occur. These features, auditability\
    \ and accountability,\nbecome critical if security attacks have implications for\
    \ patients’ health conditions.\n3.2.3. Security Solution\nSix security solutions\
    \ (i.e., access control, cryptography, anonymization, blockchain,\nsteganography,\
    \ and watermarking) for the security and privacy of e-health data are pre-\nsented\
    \ in this section. E-health system must adopt access control systems to restrict\n\
    unauthorized access, and the data stored in the system must be encrypted or anonymized\n\
    using cryptography and data anonymization techniques. In addition, steganography\
    \ and\nwatermarking have widely been used to achieve medical image security, and\
    \ blockchain\nhas also been studied recently to ensure the integrity of the e-health\
    \ data.\nAccess control. Access control is an indispensable security solution\
    \ to protect e-health\ndata by restricting unauthorized access. Therefore, many\
    \ studies focused on the security\nand privacy of e-health data based on access\
    \ control.\nDankar et al. [21] proposed a risk-aware secure framework that controls\
    \ access to\nmedical data using contextual information related to data requests.\
    \ In the framework,\nto store e-health data, a risk evaluation module identiﬁes\
    \ the risk of the data, and an\naccess control module determines the proper data\
    \ protection level based on the risk. After\nselecting the protection level, a\
    \ protection level application module re-identiﬁes the data to\nstore the data.\
    \ The constraints to access the data are also decided using the data protection\n\
    level if the data are requested.\nIn addition, there are studies to design access\
    \ control frameworks using blockchains\nfor secure management in e-health data\
    \ [22–24]. However, the frameworks ensure several\nsecurity beneﬁts such as data\
    \ conﬁdentiality, integrity, availability, and accountability. Ra-\njput et al.\
    \ [22] applied an emergency scenario into an access control framework by deﬁning\n\
    some access rules for the emergent scenario. In the scenario, conditional permissions\n\
    are used for the authorization of emergent medical staff. Shahnaz et al. [23]\
    \ proposed a\nrole-based access control framework to protect EHRs and focused\
    \ on solving the scalability\nproblem of blockchain based on the off-chain scaling\
    \ method. Xu et al. [24] proposed\nHealthchain that controls access from medical\
    \ staff by sharing symmetric keys between a\nuser and the staff.\nFurthermore,\
    \ Sections 4–6 present other access control studies that focus on different\n\
    target domains, that is, medical devices, networks, and edge/fog/cloud computing.\n\
    Cryptography. Cryptography has been widely used as an essential security solution\n\
    to ensure several security requirements such as data conﬁdentiality and integrity.\
    \ Most\nstudies adopted existing cryptography for basic purposes such as encryption\
    \ and digital\nsignatures, and only a few studies have proposed new cryptographic\
    \ primitives, protocols,\ncryptosystems, and so forth. In general, well-known\
    \ cryptosystems such as advanced\nencryption standard (AES) and Rivest–Shamir–Adleman\
    \ (RSA) were utilized to protect\ne-health data in the studies, considering the\
    \ different security requirements of the speciﬁc\ntarget domain. AES, developed\
    \ by the National Institute of Standards and Technology\n(NIST) in 2001, is the\
    \ most frequently used symmetric encryption technique [25]. Symmetric\nkey techniques\
    \ including AES are used in the medical/healthcare security research areas\ndue\
    \ to their fast encryption/decryption speed. On the other hand, RSA, developed\
    \ in\n1978 [26], is a public-key cryptosystem (PKC) that has two types of cryptographic\
    \ key: a\npublic key for encryption and a private key for decryption. RSA has\
    \ been adopted for\ndigital signatures rather than data encryption and decryption\
    \ because it is neither a fast\nnor efﬁcient cryptosystem.\nSome studies focused\
    \ on the security of digital image and communication on medicine\n(DICOM) [27–29].\
    \ Elhoseny et al. [27] simply applied AES and RSA to secure DICOM.\nDzwonkowski\
    \ et al. [28] and Parvees et al. [29] employed quaternion rotation and enhanced\n\
    chaotic economic map (ECEM). They veriﬁed that the quaternion- and ECEM-based\
    \ encryp-\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n10 of 47\ntion\
    \ schemes were more secure and efﬁcient for medical image encryption than traditional\n\
    cryptosystems such as AES.\nIn addition, Sections 4–6 contain more studies based\
    \ on diverse cryptography schemes\nsuch as elliptic curve cryptosystem (ECC),\
    \ attribute-based encryption (ABE), and certiﬁcate-\nless public-key cryptosystem\
    \ (CL-PKC) that considered security concerns and requirements\nfor medical devices,\
    \ networks, and edge/fog/cloud computing.\nAnonymization. Data anonymization is\
    \ a process that eliminates, generalizes, or\nreplaces identiﬁable information\
    \ from personal information [30]. For data anonymization,\nfour traditional models\
    \ (i.e., k-anonymity, l-diversity, t-closeness, and differential privacy)\nhave\
    \ been widely adopted in medical research areas.\nK-anonymity is an anonymization\
    \ model proposed by Sweeney in 2002 [31] that\nreduces the possibility of specifying\
    \ sensitive attributes by producing k or more records\ncomposed of the same quasi-identiﬁer.\
    \ Therefore, if k-anonymity is satisﬁed, the probability\nof identiﬁability for\
    \ a speciﬁc person will be <1/k. The higher the k value, the better the\ndata\
    \ anonymity. However, if the k value is too high, data usability decreases because\
    \ it\nbecomes more difﬁcult to explore the correlation between anonymized data.\
    \ An optimal k\nvalue should be found to provide an appropriate trade-off between\
    \ data anonymization\nand usability.\nAlthough the individual is not identiﬁed\
    \ when k-anonymity is achieved, the more\nthe sensitive attributes remain the\
    \ same, the more likely they are to be re-identiﬁed. L-\ndiversity therefore proposed\
    \ by Machanavajjhala et al. in 2007 [32] can be adopted to\nprevent the limitation\
    \ of k-anonymity by diversifying sensitive attributes. This reduces the\npossibility\
    \ of re-identifying a speciﬁc individual with one or more sensitive attributes.\
    \ As\nwith k-anonymity, the higher the l value, the better the data anonymity.\n\
    If there is bias or patterns in anonymized data, personal privacy may be exposed\
    \ by\nmeans of these biases and patterns. In other words, even if k-anonymity\
    \ and l-diversity are\nsatisﬁed, privacy can be disclosed using the distribution\
    \ of sensitive attributes. Therefore,\nT-closeness proposed by Li et al. in 2007\
    \ [33] measures data distributions to prevent data\nfrom being closed in a speciﬁc\
    \ part.\nK-anonymity and l-diversity have the limitation that sensitive attributes\
    \ can be ex-\nposed if an attacker has experience exploiting vulnerabilities.\
    \ Therefore, differential pri-\nvacy was proposed by Dwork in 2006 [34] to mitigate\
    \ the limitations of k-anonymity and\nl-diversity. This mathematical model prevents\
    \ an attacker from inferring a speciﬁc individ-\nual with statistical data derived\
    \ from multiple database queries by adding noise into the\nresponse to each query.\
    \ The noise hinders the attacker from revealing the distribution of\ndata that\
    \ can be used for re-identiﬁcation.\nBlockchain. One critical threat to e-health\
    \ data is data tampering, which can lead to\npatient medical accidents. Blockchain,\
    \ which provides public and distributed ledger on a\npeer-to-peer network, was\
    \ proposed by Nakamoto in 2008 [35] to ensure data integrity by\nrecording all\
    \ veriﬁed transactions in a ledger based on a consensus algorithm.\nSome studies\
    \ have taken advantage of blockchains for secure data preservation [36],\nsecure\
    \ data sharing [37,38], and the access control [21–24]. Li et al. [36] designed\
    \ a reliable\ndata storage for primitiveness and veriﬁability of e-health data\
    \ based on the blockchain\nwhile preserving privacy. The anonymity of users and\
    \ the data was also considered\nby using cryptographic algorithms such as AES.\
    \ Fan et al. [37] and Patel [38] proposed\ne-health data sharing systems between\
    \ the heterogeneous databases of hospitals (i.e., cross-\ndomain). Because of\
    \ the lack of standard data management and data sharing policy in the\nconventional\
    \ EMR systems, Fan et al. [37] proposed MedBlock that is applied blockchain\n\
    with public and distributed ledger. In the proposed system, hospitals can upload\
    \ encrypted\ndata to MedBlock, thus a user who has the right decryption key can\
    \ retrieve and verify\nthe data anywhere at any time. Patel [38] also designed\
    \ a blockchain-based image sharing\nsystem. The blocks recorded a list of images\
    \ and related patients, authorized entities by\nthe patient to access the images,\
    \ and the retrieval endpoint (i.e., URL) that actually has the\nInt. J. Environ.\
    \ Res. Public Health 2021, 18, 9668\n11 of 47\nimages. Only authorized users by\
    \ the patient can access the endpoint and retrieve images\nstored in the hospital\
    \ database.\nHowever, blockchain is not suitable for big data, thus network location\
    \ information\nindicating the desired resource can be used instead of recording\
    \ large data.\nSteganography and watermarking. Steganography is a technology that\
    \ hides secret\ninformation within other data, such as a medical image, whereas\
    \ encryption converts\noriginal data into data that is unrecognizable without\
    \ the proper key for decryption. This\nprotects secret information and conceals\
    \ its existence. Furthermore, steganography is\ngenerally categorized into spatial\
    \ domain techniques (i.e., such as least signiﬁcant bit (LSB),\nembedding, and\
    \ spread technique) and transform domain techniques (i.e., discrete wavelet\n\
    transform (DWT) and discrete cosine transform (DCT)). Spatial domain techniques\
    \ are\nfast but vulnerable to compression and geometric distortion such as rotation,\
    \ scaling, and\ncropping, whereas transform domain techniques require high computational\
    \ power but\nhave resistance to compression and geometric distortions [39].\n\
    Karakı¸s et al. [39] proposed similarity-based LSB and fuzzy-logic-based LSB that\n\
    select non-sequential LSBs of image pixels to insert secret messages. The proposed\
    \ LSBs\nare compressed and encrypted in the message preprocessing stage in a cover\
    \ image. An\nonly authenticated user who has the right key can decrypt and read\
    \ the hidden message\nincluding electroencephalogram (EEG) signal, doctor’s comment,\
    \ and patient information.\nMantos and Maglogiannis [40] also developed a new\
    \ LSB-based steganography method.\nThe method hides patient data and integrity\
    \ hashes in the region of interest (ROI) and\nrecovery data into the region of\
    \ non-interest (RONI) that is required to recover the ROI. In\nthe method, the\
    \ patient data are protected by AES, and integrity is achieved as well with\n\
    the hashes of the ROI part and the hidden data. Moreover, Elhoseny et al. [27]\
    \ utilized 2D\nDWT to hide the secret data encrypted by AES for secure medical\
    \ data transmission in IoT\nenvironments. It has a high-security level by applying\
    \ AES, RSA, and 2D-DWT; however,\nthey could not be suitable for the IoT environments\
    \ that are resource-constrained in terms\nof network bandwidth, computational\
    \ power, memory capacity, and so forth.\nIn addition, digital watermarking is\
    \ a promising security solution that provides\ncontent authentication, integrity,\
    \ and credibility of medical images [41,42]. Digital water-\nmarking in e-healthcare\
    \ services embeds sensitive information such as patient identity and\ndiagnostic\
    \ details into medical images by converting the gray level of pixels without any\n\
    perceptible changes to the host image [43]. However, watermarking can distort\
    \ medical\nimages; this is a critical issue because it can lead doctors to misdiagnose\
    \ patients. Therefore,\nTuruk et al. [41] proposed a reversible watermarking scheme\
    \ based on quantized DWT,\nand the scheme supports watermark extraction from images\
    \ and restoring the original\nmedical image. The proposed scheme can also embed\
    \ multiple watermarks by means of\nquantization function, and recover the original\
    \ medical image using a tracking key which\npreserves sign change of the original\
    \ image’s coefﬁcient. Moreover, a fragile watermark\nwas proposed by Walton in\
    \ 2007 [44], and it has been studied to detect medical image\ntampering based\
    \ on the sensitivity. With the fragile watermark, image tampering can easily\n\
    be detected, because even a one-bit change can affect the veriﬁcation results\
    \ of integrity.\nShehab et al. [42] proposed a scheme with the advantages of the\
    \ fragile watermarking\ntechnique. The proposed scheme particularly used singular\
    \ value decomposition (SVD)\nwith the 4 × 4 size of image blocks for tamper localization\
    \ that can localize attacked pix-\nels and regions. The scheme can also be used\
    \ for recovering the tampered region with\nArnold transform.\nFinally, Table 3\
    \ shows a summary of studies related to e-health data.\nInt. J. Environ. Res.\
    \ Public Health 2021, 18, 9668\n12 of 47\nTable 3. Summary for e-health data security\
    \ and privacy studies.\nRef.\nTarget Security\nConcern\nTarget Security\nRequirement\n\
    Security Solution\nStrength\nWeakness\n[21]\n- Unauthorized access\n- Data disclosure\n\
    - Data tampering\n- Access restriction\n- Conﬁdentiality\n- Anonymity\n- Accountability\n\
    - Access Control\n- Anonymization\nAnonymization and access\ncontrol according\
    \ to the\nsensitivity of e-health data\nThe current\nanonymization method\nhas\
    \ some vulnerabilities\nthat could lead to\nre-identiﬁcation\n[22]\n- Unauthorized\
    \ access\n- Data disclosure\n- Data loss\n- Data tampering\n- Data forgery\n-\
    \ Access restriction\n- Conﬁdentiality\n- Integrity\n- Availability\n- Accountability\n\
    - Access Control\n- Blockchain\n(Hyperledger Fabric)\nNo single point of failure\n\
    (SPoF) problem and the\nemergency scenario is\nconsidered\nEmergency access\n\
    permission could be\nabused and access\ncontrol requires a\ntransaction fee\n\
    [23]\n- Unauthorized access\n- Data disclosure\n- Data loss\n- Data tampering\n\
    - Data forgery\n- Access restriction\n- Conﬁdentiality\n- Integrity\n- Access\
    \ Control\n- Blockchain\n(Ethereum)\nNo SPoF problem and\nemploying an off-chain\n\
    scaling method to solve\nthe scalability problem of\nblockchain\nLack of ﬁne-grained\n\
    access control and access\ncontrol requires a\ntransaction fee\n[24]\n- Unauthorized\
    \ access\n- Data disclosure\n- Data loss\n- Data tampering\n- Data forgery\n-\
    \ Access restriction\n- Conﬁdentiality\n- Integrity\n- Accountability\n- Access\
    \ Control\n- AES\n- Blockchain\nA user can revoke\npermission to access their\n\
    e-health data from medical\nstaff at any time\nSymmetric key was\nshared to control\
    \ access;\ntherefore, once a key has\nbeen shared with\nsomeone or\ncompromised,\
    \ the key\nshould be updated and\nrelated e-health data\nshould be re-encrypted\n\
    [27]\n- Data disclosure\n- Conﬁdentiality\n- AES\n- RSA\n- Steganography\nDiscrete\
    \ wavelet transform\nis compatible with\ncompression and has\nresistance to geometric\n\
    distortions\nIoT is a target\nenvironment; however,\nAES and RSA that\nrequire\
    \ high\ncomputational power\nwere used\n[28]\n- Data disclosure\n- Conﬁdentiality\n\
    - Quaternion-based\nEncryption\nFast computation speed for\nthe encryption of\
    \ a large\nvolume of e-health data\nThe computation speed\ncould be increased\
    \ if the\ndecomposition process\nwere omitted\n[29]\n- Data disclosure\n- Conﬁdentiality\n\
    - ECEM-based\nEncryption\nDifferential attack\nresistance\nPerformance should\
    \ be\nevaluated on diverse\nmedical images\n[36]\n- Data disclosure\n- Data tampering\n\
    - Data loss\n- Data forgery\n- Conﬁdentiality\n- Integrity\n- Anonymity\n- Accountability\n\
    - AES\n- Blockchain\nNo SPoF problem and\nmedical data can be\nsecurely preserved\
    \ with\nthe blockchain\nThe transaction fee is\nrelatively high\ncompared to\n\
    conventional data\nstorage\n[37]\n- Data disclosure\n- Data tampering\n- Data\
    \ loss\n- Data forgery\n- Access restriction\n- Conﬁdentiality\n- Integrity\n\
    - Anonymity\n- Accountability\n- Access Control\n- Blockchain\nEfﬁcient consensus\n\
    mechanism and access\ncontrol protocol for\ne-health data were also\nproposed\n\
    Access should be able to\nbe delegated to related\nmedical staff or other\npeople\
    \ in a secure\nmanner for ﬂexible data\nsharing\n[38]\n- Data disclosure\n- Data\
    \ tampering\n- Data loss\n- Data forgery\n- Integrity\n- Accountability\n- Blockchain\n\
    Blockchain only records\nURLs instead of medical\nimages that have a large\ndata\
    \ size\nSince real images are\nstored in the hospital’s\ndatabase, both the\n\
    blockchain and\nendpoints should be\nproperly protected\n[39]\n- Data disclosure\n\
    - Conﬁdentiality\n- Rijndael encryption\n- Steganography\nFast processing time\
    \ and\nhigh embedding capacity\nbased on LSB\nMessage capacity could\nbe increased\
    \ with noise\ncancellation and data\nreduction\n[40]\n- Data disclosure\n- Data\
    \ tampering\n- Conﬁdentiality\n- Integrity\n- AES\n- Steganography\nIt considered\
    \ both\nconﬁdentiality and\nintegrity and had high\ncapacity, robustness, and\n\
    imperceptibility\nAn error control\nmechanism should be\nadopted for a robust\n\
    steganography method\n[41]\n- Data disclosure\n- Data tampering\n- Data forgery\n\
    - Conﬁdentiality\n- Integrity\n- Watermarking\nResistance to sharpening\nand blurring\
    \ attacks while\nmaintaining acceptable\nimperceptibility\nA tracking key that\n\
    makes the proposed\nscheme reversible has to\nbe transmitted with each\nmedical\
    \ image\n[42]\n- Data disclosure\n- Data tampering\n- Data forgery\n- Conﬁdentiality\n\
    - Integrity\n- Watermarking\nProposes an effective\nscheme to localize and\nrestore\
    \ tampered pixels\nand regions\nVarious tampering\nattacks on image\nresizing,\
    \ skewing, and\nrotating should be\nstudied\nInt. J. Environ. Res. Public Health\
    \ 2021, 18, 9668\n13 of 47\n4. Medical Device\nWith the advancement of sensors\
    \ and network technologies, medical devices such as\nwearable devices and IMDs\
    \ have been connected to networks to enable smart e-healthcare\nservices, such\
    \ as remote diagnosis and prescription. Medical devices play a role of sources\n\
    that produce a huge amount of e-health data; therefore, the security of medical\
    \ devices\nshould be properly considered.\n4.1. Overview\nFigure 4 shows the taxonomy\
    \ for security and privacy on medical devices. In a\nnutshell, physical and logical\
    \ access control schemes, including proper authentication,\nmust be adopted to\
    \ prevent unauthorized access and network attacks on medical devices\nand cryptography\
    \ should be required to protect the sensed e-health data and credentials\nstored\
    \ in the device. In addition, secure hardware can be used to enhance the security\
    \ of\nresource-constrained medical devices, and malware detection techniques are\
    \ required since\ndevices can be compromised by malware.\nFigure 4. Taxonomy for\
    \ security and privacy on medical device.\n4.2. Security Concern, Requirement,\
    \ and Solution\nThis section presents security concerns, requirements, and solutions\
    \ for medical\ndevices. Note that a limited number of studies are surveyed because\
    \ of insufﬁcient studies\nfor medical devices that fulﬁll the selection criteria\
    \ described in Section 2.1.\n4.2.1. Security Concern\nThere are several security\
    \ concerns that have implications for medical devices. Since\nthe medical devices\
    \ are networked, an attacker can access the device through the network\nto breach\
    \ e-health data, or compromise the device using malware to make it follows some\n\
    malicious operations which can affect patients’ health condition. In addition,\
    \ depletion\nattacks can consume device resources such as computing power and\
    \ battery to interrupt\ndesired operations of the device so that it cannot provide\
    \ e-health data to someone who\nneeds the data. Detailed descriptions for the\
    \ security concerns that are commonly described\nin several studies are as follows.\n\
    Unauthorized access. An attacker can access medical devices by means of some secu-\n\
    rity holes in the devices. Unauthorized access from an attacker or user who has\
    \ a malicious\npurpose can cause a wide range of concerns from data breach of\
    \ patients to life threats.\nAccording to Yaqoob et al. [3], various attack methodologies\
    \ such as reverse engineering\nand communication channel exploitation (e.g., lack\
    \ of encryption, authentication, and\naccess control) were used for the unauthorized\
    \ access.\nData breach. As described in Section 3, data including e-health data\
    \ and credentials\nstored in medical devices can be leaked, tampered with, or\
    \ deleted by unauthorized\naccess. Protecting data stored in devices and transmitted\
    \ via the Internet requires proper\nInt. J. Environ. Res. Public Health 2021,\
    \ 18, 9668\n14 of 47\nsecurity solutions such as authentication, access control\
    \ and cryptography. In addition, user\nidentities should particularly be secured\
    \ since the loss, theft, and disclosure of personally\nidentiﬁable information\
    \ accounts for one-ﬁfth of all reported issues [45].\nNetwork attack. As medical\
    \ devices have been connected to medical networks and\nthe Internet to support\
    \ modern healthcare services, the network has become an entrance\nto medical devices\
    \ [12,46]. In general, there are two types of network attack: passive\nand active.\
    \ Passive attacks harm conﬁdentiality by observing or copying network trafﬁc\n\
    and active attacks infringe on the integrity and availability by controlling the\
    \ network\ntrafﬁc and modifying the messages in the trafﬁc. Section 5 describes\
    \ the network attacks in\nmore detail.\nPhysical attack. A physical attack is\
    \ one of the most representative security concerns\nfor medical devices. Medical\
    \ devices can be damaged by natural disasters or a malevolent\nperson. In particular,\
    \ someone can access or steal medical devices to capture patients’\nprivate information.\n\
    Resource depletion attack. Most medical devices have limited resources such as\n\
    computational power and battery life. An attacker can deplete medical device resources\
    \ so\nthat they no longer work properly. Since medical devices can directly affect\
    \ patients’ health\nconditions, a resource depletion attack is very critical to\
    \ the security of medical devices. A\npower-draining attack, which is a type of\
    \ resource depletion attack, was demonstrated by\nHei et al. [47].\nFirmware Modiﬁcation\
    \ attack. This attack modiﬁes the ﬁrmware stored in non-\nvolatile memory that\
    \ controls medical devices [3]. An attacker can inject malicious ﬁrmware\ninto\
    \ a device when it needs to be updated. By modifying or changing the original\
    \ ﬁrmware,\nan attacker can control the medical devices as desired.\nMalware.\
    \ Malware, such as spyware, botnets and Trojans, are malicious software that\n\
    can damage medical devices. Malware that controls devices are particularly critical\
    \ because\nthey can affect patients’ health condition and life [45]. Proper security\
    \ solutions must check\nthe data transmitted from other networks to detect or\
    \ prevent malware injection. Since\nmedical devices have constrained resources,\
    \ a proxy could facilitate the solutions instead\nof the devices.\n4.2.2. Security\
    \ Requirement\nAs medical devices are networked, network attacks must be considered\
    \ to secure\nthe devices and the e-health data that are generated and stored in\
    \ the devices. Security\nrequirements that are generally mentioned in the medical\
    \ device studies are as follows.\nAccess restriction. Unauthorized access to e-health\
    \ data must be restricted appropri-\nately. In other words, access must be authenticated\
    \ and authorized to determine whether\nthe user who requests data has proper permissions.\
    \ This requirement includes the restric-\ntion of physical access and information\
    \ access.\nConﬁdentiality. E-health data and the credentials of medical devices\
    \ must be con-\nﬁdential. In general, security by obscurity and cryptography are\
    \ used to protect data\nconﬁdentiality; however, security by obscurity is increasingly\
    \ insufﬁcient and strong cryp-\ntography has become important [48].\nIntegrity.\
    \ Protecting the integrity of ﬁrmware and software and data integrity are\ncritical\
    \ issues for medical devices since compromised ﬁrmware and software can control\n\
    devices. The violation of the integrity can affect patients’ health condition\
    \ and, thus, it is\none of the most important security requirements.\nAvailability.\
    \ In addition to data availability, medical devices must also be available\nany\
    \ time when the owner wants to use them or for medical staff in an emergency.\
    \ Several\nattacks such as DoS and packet ﬂooding attacks can infringe upon the\
    \ availability of medical\ndevices, similar to data availability. Fault tolerance\
    \ is the one of primary functionalities\nthat makes medical devices work consistently\
    \ even when compromised.\nResistance to network attack. Several network attacks\
    \ such as eavesdropping, replay,\nand impersonation can compromise medical devices.\
    \ To design secure medical devices,\nInt. J. Environ. Res. Public Health 2021,\
    \ 18, 9668\n15 of 47\nnetwork attacks must be considered since the devices have\
    \ been connected to both medical\nnetworks and the Internet. This requirement\
    \ is also important to protect against other\nattacks such as resource depletion\
    \ and malware. Section 5 describes network attacks and\nrelated requirements in\
    \ detail.\nReliability. A medical device has its own purpose and intrinsic features\
    \ are important\nto a patient’s health condition. Malfunction of medical devices\
    \ due to various causes\nsuch as software bugs, malware, and security attacks\
    \ could damage patients. To protect\npatients’ safety, medical devices must provide\
    \ reliability in terms of performing their\nintended function.\nLightweight. Security\
    \ solutions adopted in medical devices should be lightweight\nbecause medical\
    \ devices have resource constraints. Security solutions should work with\nlimited\
    \ resources to fulﬁll the minimum security requirements for medical devices and\
    \ the\ndata they hold.\nSecure patch. Firmware and software are imperfect; they\
    \ have hidden ﬂaws and\nvulnerabilities including zero-day vulnerabilities [46].\
    \ Therefore, medical devices must\nhave the ability to securely patch the ﬁrmware\
    \ and software when vulnerabilities are\nuncovered and must be able to verify\
    \ whether the ﬁrmware or software is untampered.\nThis veriﬁcation is required\
    \ since the ﬁrmware and software downloaded via the network\ncan be modiﬁed to\
    \ compromise devices [48].\n4.2.3. Security Solution\nRepresentative security\
    \ solutions to protect medical devices are authentication, access\ncontrol, and\
    \ cryptography. Since general medical devices are resource-constrained, the\n\
    security solutions should be efﬁcient and lightweight, and secure hardware can\
    \ be used to\nenhance the security of the device. Detailed descriptions for the\
    \ security solutions of the\nmedical device are as follows.\nAccess control. Access\
    \ control is an essential security solution to restrict unauthorized\naccess.\
    \ Access control for medical devices is crucial because it can be related to patients’\n\
    health condition and life. According to Wu et al. [10], there are two types of\
    \ direct access\ncontrol schemes: using a preloaded key and temporary key and\
    \ an indirect access control\nscheme using a proxy. The direct access control\
    \ schemes basically permit access by vali-\ndating a key within a medical device,\
    \ while the indirect access control scheme delegates\nthe access control to a\
    \ proxy server (e.g., smartphone and smartwatch) since the medical\ndevice has\
    \ limited resources.\nAuthentication. Any user who accesses medical devices must\
    \ be properly authenti-\ncated. In general, there are three factors in authentication\
    \ schemes: ownership, knowledge\nand biometric.\nMost medical devices authenticate\
    \ a valid user based on their knowledge such as ID\nand password; however, biometric-based\
    \ authentication schemes have recently emerged for\nthe medical devices. Security\
    \ by obscurity is not enough to secure medical devices [48]. Liu\net al. [49]\
    \ proposed local authentication and remote authentication for the cloud-assisted\n\
    wearable devices. In the local authentication protocol, Hash-based selective disclosure\n\
    mechanism and Chebyshev chaotic map are used to realize mutual authentication\
    \ between\na wearable device and a smartphone. After the local authentication,\
    \ the cloud performs\nremote authentication of the device based on a yoking-proof.\
    \ In addition, to make accessing\nthe device challenging, multi-factor authentication\
    \ [50], and biometric-based authentication\nschemes [51,52] can also be used.\
    \ Zheng et al. [51] proposed a ﬁnger-to-heart (F2H) IMD\nauthentication scheme\
    \ that allows a doctor to access a patient’s device by scanning the\nﬁngerprint\
    \ of the patient in an emergency. They emphasized that the proposed scheme is\n\
    suitable for IMDs than ECG-based authentication scheme. Because the scheme requires\n\
    only low resources because it is not required to capture or process biometric\
    \ in every access.\nBelkhouja et al. [52] proposed a two-factor authentication\
    \ scheme for IMDs using ECG\nsignal and ﬁngerprint.\nInt. J. Environ. Res. Public\
    \ Health 2021, 18, 9668\n16 of 47\nECG was used to authenticate medical staff\
    \ in an emergency, and ﬁngerprint was\nutilized as an assistance factor of the\
    \ authentication.\nMoreover, a lightweight and low power authentication scheme\
    \ is required to solve the\nresource constraint problem of medical devices. For\
    \ example, Halperin et al. [53] proposed\na zero-power authentication method based\
    \ on radio frequency (RF) power harvesting of\nan IMD programmer (i.e., a proxy\
    \ device).\nCryptography. Cryptography is required to protect e-health data produced\
    \ by medical\ndevices and the devices’ credentials. In particular, strong encryption\
    \ is required to protect\nhighly sensitive e-health data [48]. Zheng et al. [54]\
    \ proposed an ECG-based data encryp-\ntion scheme for IMDs. The scheme used one-time\
    \ pads (OTPs) generated from ECG signals\nas a key for encryption. In addition,\
    \ the OTP-based keys are dynamically generated for\neach round of encryption,\
    \ thus additional processes (i.e., require key distribution, storage,\nrevocation,\
    \ refreshment, and seed protection) are not required. In addition, lightweight\
    \ and\nlow-power cryptography are required for medical devices that are resource-constrained\
    \ in\nterms of computation power, memory, and battery.\nSecure hardware. Medical\
    \ devices generally have constrained resources in terms of\ncomputing power and\
    \ battery, which hinder their adoption of strong security. Therefore,\nsecure\
    \ hardware such as a hardware security module (HSM) and physical unclonable\n\
    function (PUF), which would take care of security-related processes, can be used\
    \ to en-\nhance the security of medical devices. Diverse security solutions such\
    \ as cryptography,\nauthentication, and access control can be supported by secure\
    \ hardware.\nMalware detection. Malware detection techniques such as control-ﬂow\
    \ integrity\nveriﬁcation and call stack monitoring are important for medical devices\
    \ because malware\nremains unknown until detected [45]. The detection techniques\
    \ are critical since undetected\nmalware can consistently affect devices. In addition,\
    \ hardware-based malware detection is\na promising security solution because of\
    \ the resource constraints of medical devices. Once\nthe malware has been detected,\
    \ it must be properly treated.\nTable 4 shows a summary of the security and privacy\
    \ studies for medical devices.\nTable 4. Summary for medical device studies on\
    \ security and privacy.\nRef.\nTarget Security Concern\nTarget Security\nRequirement\n\
    Security Solution\nStrength\nWeakness\n[49]\n- Unauthorized access\n- Data breach\n\
    - Network attack\n- Access restriction\n- Conﬁdentiality\n- Integrity\n- Resistance\
    \ to\nnetwork attack\n- Mutual authentication\nBoth local authentication\nand\
    \ remote authentication\nare considered for\ncloud-assisted wearable\ndevices\n\
    Details of\nimplementation and\nsecurity analysis against\ndiverse possible attacks\n\
    are insufﬁcient\n[51]\n- Unauthorized access\n- Network attack\n- Access restriction\n\
    - Availability\n- Resistance to\nnetwork attack\n- Biometric-based\nauthentication\n\
    (ﬁngerprint)\nA ﬁngerprint-based\nauthentication model is\nproposed that would\
    \ be\nsuitable for IMDs\nFingerprints cannot be\nre-generated; therefore,\nﬁngerprint-based\n\
    security solutions must\nconsider other solutions\nto protect ﬁngerprints\nsince\
    \ ﬁngerprint must\nthen never be leaked\n[52]\n- Unauthorized access\n- Network\
    \ attack\n- Access restriction\n- Availability\n- Resistance to\nnetwork attack\n\
    - Biometric-based\nauthentication\n(ECG and ﬁngerprint)\nA strong authentication\n\
    scheme is proposed using\ntwo-factors, ECG, and\nﬁngerprint\nA backdoor can be\n\
    abused by insiders or\nattackers\n[54]\n- Data breach\n- Network attack\n- Conﬁdentiality\n\
    - ECG- and OTP-based\nencryption\nOTP, which is theoretically\nunbreakable, is\
    \ used and it\ndoes not require key\ndistribution, storage,\nrevocation, or refreshment\n\
    using random ECG signals\nas OTP keys\nProposed scheme\nrequires an additional\n\
    device to capture ECG\nsignals and the ECG-\nand OTP-based\nencryption scheme\
    \ may\nnot be suitable for\nresource-constrained\nIMDs\nInt. J. Environ. Res.\
    \ Public Health 2021, 18, 9668\n17 of 47\n5. Medical Network\nThis section presents\
    \ security concerns, requirements, solutions, research trends and\nopen challenges\
    \ for security and privacy in medical networks. Since modern e-health\nsystems\
    \ are based on the network, the security and privacy for the network are must\
    \ be\nconsidered to design secure e-health systems. Note that the term “medical\
    \ networks” used\nin this paper includes diverse types of networks that transmit\
    \ e-health data such as IoMT\nand WBAN.\n5.1. Overview\nWe classiﬁed the security\
    \ and privacy studies that focused on medical networks in\nterms of security concerns,\
    \ requirements, and solutions. Figure 5 shows a taxonomy of\nthese studies.\n\
    Figure 5. Taxonomy for security and privacy on medical network.\nIn a nutshell,\
    \ as shown in Figure 5, there were ﬁve security solutions for medical net-\nworks,\
    \ 11 security requirements for the solutions, and eight security concerns remaining\
    \ to\nbe solved. In particular, cryptography, authentication, and access control\
    \ were widely stud-\nied to provide data conﬁdentiality, integrity, anonymity,\
    \ authenticity, and non-repudiation\nagainst diverse security concerns such as\
    \ eavesdropping attacks, denial of service (DoS),\nreplay attacks, impersonation,\
    \ man in the middle (MIMT) attacks, and spooﬁng attacks.\n5.2. Security Concern,\
    \ Requirement, and Solution\nThis section presents security concerns, requirements,\
    \ and solutions for medical\nnetworks, such as WBANs and IoMTs, based on the medical\
    \ network taxonomy.\n5.2.1. Security Concerns\nSimilar to the conventional network,\
    \ there are passive attacks and active attacks in\nmedical networks. In other\
    \ words, an attacker can eavesdrop the network communica-\ntions and interrupt\
    \ the communications to breach e-health data which is highly sensitive\ninformation.\
    \ The six general security concerns that are the goals of the recent studies are\n\
    as follows.\nEavesdropping. An adversary can eavesdrop on the trafﬁc of medical\
    \ networks to\ncapture useful information such as patients’ e-health data. Even\
    \ though the data in the\nair is generally anonymized or encrypted, this attack\
    \ can be one of most critical because\nother attacks use the data captured by\
    \ the eavesdropping attack; it becomes more serious if\nthe data has not been\
    \ properly anonymized or encrypted. Spooﬁng. Data such as nodes,\nInt. J. Environ.\
    \ Res. Public Health 2021, 18, 9668\n18 of 47\nidentity information, and network\
    \ addresses can be forged by an attacker in medical\nnetworks [55,56]. The attacker\
    \ exploits a spooﬁng attack to deceive legitimate users or\nsecurity systems for\
    \ unauthorized access or further attacks.\nImpersonation attack. An adversary\
    \ can impersonate a legitimate entity on a medical\nnetwork such as a user, device,\
    \ or server by eavesdropping on some network trafﬁc. The\nattacker can then perform\
    \ other attacks using the impersonated identity [57]. This attack\ncan be posed\
    \ by weak authentication [58].\nResource depletion attack. Resource depletion\
    \ in medical networks is an attack that\nthreatens to exhaust network resources\
    \ such as bandwidth and trafﬁc. Medical networks\nsuch as IoMTs and WBANs are\
    \ particularly lacking in resources; therefore, this type of\nattack can easily\
    \ hinder the availability of medical services operated in medical networks.\n\
    DoS is a typical resource depletion attack.\nReplay attack. A replay attack can\
    \ be done by capturing network packets and then\ntransmitting them instead of\
    \ the legitimate sender. This attack could be performed by an\nattacker to make\
    \ a medical device or a server unavailable or to impersonate a valid user.\nTo\
    \ avoid replay attacks, random numbers or timestamps are generally included in\
    \ packets.\nMan in the middle attack. A man in the middle (MITM) attack can be\
    \ done by\nintercepting and controlling the network communication between the\
    \ two parties (e.g.,\nmedical devices and servers). It is difﬁcult for the victims\
    \ to detect the presence of an\nadversary, so they should believe that communication\
    \ may be modiﬁed and transmitted\nby an adversary. If communication is related\
    \ to remote treatment and prescription, this\nattack becomes very critical to\
    \ patients.\nTracking attack. An attacker can track patient locations (e.g., their\
    \ workplace or\nhome) by monitoring medical networks to discover the identity\
    \ of the patient and some\nadditional related information [13]. The attacker can\
    \ track several networked devices such\nas smartphones, smartwatches, medical\
    \ devices, and RFID tags.\n5.2.2. Security Requirements\nSecurity concerns for\
    \ the medical networks are similar to the conventional networks;\nhowever, the\
    \ medical networks mostly transfer e-health data with the patient’s identity,\n\
    which are highly sensitive. Therefore, security requirements for medical networks\
    \ should\nbe more rigorous than the conventional network [14]. In this section,\
    \ the ten representative\nsecurity requirements commonly mentioned in the medical\
    \ network studies are presented.\nConﬁdentiality, integrity, and availability.\
    \ Data conﬁdentiality, integrity, and avail-\nability were already discussed in\
    \ Section 3; however, the requirements for these are more\nstringent when the\
    \ data are transmitted via medical networks. E-health data must satisfy\nconﬁdentiality\
    \ and integrity since an adversary in a medical network can eavesdrop and\nmodify\
    \ the data. In addition, data availability is a prominent requirement in medical\n\
    networks. Patients must be able to use their data whenever they want and medical\
    \ staff\nmust be able to use the data in a remote healthcare system, particularly\
    \ in an emergency.\nAuthenticity. An adversary in medical networks can forge a\
    \ message or impersonate\na user. Therefore, the authenticity of each message’s\
    \ origin [59] and a user’s identity [60]\nmust be properly checked to prevent\
    \ attacks on authenticity.\nNon-repudiation. Non-repudiation denotes the ability\
    \ that can assure that some-\none cannot deny the validity of something [61].\
    \ For example, non-repudiation could be\nprovided for a doctor’s diagnosis in\
    \ case of a medical incident [62].\nAnonymity. Data anonymity is important; moreover,\
    \ the identities of patients in medi-\ncal networks must be anonymized. By making\
    \ patients’ identities anonymized, an adversary\nwho eavesdrops on network communications\
    \ cannot obtain patients’ real identities.\nUnlinkability. Even though e-health\
    \ data or patient identity is anonymized, an\nadversary in medical networks must\
    \ not be able to link captured data with a speciﬁc sender.\nIf the data or identity\
    \ of communications is linkable, the adversary may combine some data\nto obtain\
    \ a personal health record by requesting different types of anonymized data for\
    \ a\nperson. Therefore, both anonymity and unlinkability are important in medical\
    \ networks.\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n19 of 47\nTraceability.\
    \ In general, a user’s true identity must be anonymized to prevent a\ntracking\
    \ attack for that identity by an adversary on medical networks. However, the\n\
    true identity might be conditionally revealed when it is related to the adversary\
    \ on the\nnetworks [60,63]. This requirement should be supported in special cases\
    \ and must be\ncarefully treated since it can also uncover a patient’s true identity.\n\
    Lightweight. Security solutions such as cryptography, authentication, and access\n\
    control for medical networks should be lightweight since medical networks have\
    \ limited re-\nsources in terms of bandwidth, trafﬁc, and network nodes’ hardware\
    \ speciﬁcations. Several\nstudies have focused on lightweight security solutions\
    \ [55,57,64–66], and the lightweight\nscheme becomes more important; however,\
    \ strong security solutions that require high\nlevels of resources are still needed\
    \ to secure e-health data. Therefore, maintaining an\nappropriate tradeoff between\
    \ efﬁciency and strength in security is a critical issue in medical\nnetwork security.\n\
    Scalability. As the number of users, medical devices, and e-health data increases\n\
    in medical networks, scalability for networks should be supported. Scalability\
    \ is an\nimportant security requirement because it is related to availability,\
    \ which is a very critical\nsecurity requirement in medical domains. Based on\
    \ scalability, medical services that use\nthe networks can be continuously provided\
    \ for patients.\n5.2.3. Security Solution\nThis section describes ﬁve security\
    \ solutions: cryptography, authentication, access con-\ntrol, compressive sensing,\
    \ and traceback technique. Most studies were particularly focused\non cryptography\
    \ to protect the patients’ data and authentication schemes to check the true\n\
    identity of network entities. In addition, since medical networks are resource-constrained,\n\
    the studies in this area mainly aimed at efﬁcient and lightweight security solutions.\n\
    Cryptography. There have been considerable studies on security and privacy that\
    \ take\nadvantage of diverse cryptography techniques in medical networks. A brief\
    \ introduction\nto cryptography techniques and studies is as follows.\nAdvanced\
    \ encryption standard. Lounis et al. [59] applied AES, and randomly generated\n\
    symmetric key (RSK) to encrypt medical data for cloud-based scalable architecture,\
    \ and the\narchitecture can securely store and shares patient’s health data in\
    \ wireless sensor networks\n(WSNs). The authors overcame the overhead of ABE by\
    \ encrypting an AES key (i.e., RSK)\nrather than encrypting the whole of medical\
    \ data. Guo et al. [55] also adopted AES for\na lightweight encryption/decryption\
    \ scheme in WBANs environment. They proposed a\nsecure and privacy-preserving\
    \ framework based on multi-level trust management with\nopportunistic computing\
    \ [67]. The opportunistic computing allows an opportunistically\ncontacted node\
    \ to assist other WBAN node’s operations when the node has not enough\nenergy\
    \ and computing power. In the framework, different privacy protection strategies\n\
    were applied for user’s privacy based on the groups which have different trust\
    \ levels.\nElliptic curve cryptography. Elliptic curve cryptography (ECC) is a\
    \ form of public-key\ncryptography using elliptic curves over ﬁnite ﬁelds. Compared\
    \ with conventional public-\nkey cryptosystem, ECC is faster and more efﬁcient\
    \ in terms of computational time, memory\ncapacity, and bandwidth [57]. Therefore,\
    \ most studies that use public-key cryptography\nwere based on ECC for resource-constrained\
    \ medical networks. Some studies [57,60,68]\nadopted ECC for design efﬁcient authentication\
    \ protocols, and Omala et al. [69] proposed\na secure transmission scheme based\
    \ on the ECC.\nAttribute-based encryption. Attribute-based encryption (ABE), which\
    \ is a type of public-\nkey cryptosystem, was ﬁrst proposed by Sahai and Waters\
    \ in 2005 [70]. In many studies\non medical network security, ABE was adopted\
    \ to implement ﬂexible and ﬁne-grained\naccess control systems [59,63,71] for\
    \ e-health data, since the data can be encrypted based on\ndiverse attributes\
    \ such as patient name and treatment date. Conventional ABE is divided\ninto two\
    \ types: ciphertext-policy ABE (CP-ABE) and key-policy ABE (KP-ABE). The main\n\
    difference between CP-ABE and KP-ABE is the position of the access policy. In\
    \ CP-ABE,\nan access policy is encrypted with e-health data, whereas the policy\
    \ is used to generate\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n20\
    \ of 47\na decryption key in KP-ABE. Figure 6 shows the difference and overview\
    \ of CP-ABE\nand KP-ABE.\nIn Figure 6a, Doctor A, who has a decryption key and\
    \ the attributes Doctor and\nPhysician, can decrypt the ciphertext A, which includes\
    \ the access policy consisting of\nDoctor AND Physician. Meanwhile, in Figure\
    \ 6b, Doctor B can decrypt the ciphertext B\nencrypted with the attributes Doctor\
    \ and Surgeon if they have a decryption key generated\nusing the access policy\
    \ consisting of Doctor AND Surgeon. CP-ABE and KP-ABE are very\npromising cryptographic\
    \ schemes for various applications; however, ABE is not suitable for\nresource-constrained\
    \ medical networks such as WBANs and IoMTs because it requires high\nperformance\
    \ for cryptographic operations. Therefore, some methods have been proposed\nto\
    \ overcome the resource limitations. To reduce computational overhead, Lounis\
    \ et al. [59]\nencrypted secret keys for e-health data rather than encrypting\
    \ the entire e-health data. On\nthe other hand, Zheng et al. [71] used online/ofﬂine\
    \ encryption techniques [72] to efﬁciently\napply ABE into medical networks. In\
    \ the ofﬂine phase, some cryptographic operations are\nperformed in advance before\
    \ the message to be encrypted is entered, which is required\nin the encryption\
    \ phase. Then, based on the results of the online phase, encryption is\nperformed\
    \ in the online phase.\nFigure 6. Overview of ABE schemes.\nHomomorphic encryption.\
    \ E-health data are highly sensitive. Even though the ag-\ngregation of e-health\
    \ data could be very useful for various e-healthcare services, data\nconﬁdentiality\
    \ should be preserved when aggregators collect data from personal medical\ndevices.\
    \ With homomorphic encryption, e-health data collected by aggregators can be\n\
    processed without decryption, thereby preserving privacy. In addition, data aggregation\n\
    techniques are used to reduce the communication cost of medical networks (e.g.,\
    \ WBANs\nand IoMTs) in real-time data transmission.\nAra et al. [73] proposed\
    \ a secure privacy-preserving data aggregation (SPPDA) scheme\nbased on the bilinear\
    \ ElGamal cryptosystem, which has the homomorphic property, for\nremote health\
    \ monitoring systems.\nTo privately aggregate the e-health data from sensing nodes\
    \ of patients, the aggre-\ngators adopt pairing-based homomorphic encryption and\
    \ send the collected data to the\nmedical server. In general, pairing operation\
    \ requires high computation cost, however,\nthis study executed heavy operations\
    \ such as key generations and decryption in remote\nmedical servers for efﬁciency.\
    \ Huang et al. [74] collected e-health data from WBANs and\ntransmitted the data\
    \ to wireless personal area networks through WSNs by means of ho-\nmomorphic encryption\
    \ based on the matrix (HEBM), and Tang et al. [64] also proposed a\nprivacy-preserving\
    \ health data aggregation scheme that can securely collect health data\nfrom healthcare\
    \ devices. In the study, Boneh–Goh–Nissim (BGN) cryptosystem was used\nInt. J.\
    \ Environ. Res. Public Health 2021, 18, 9668\n21 of 47\nwhich has some homomorphic\
    \ features. In addition, Wang and Zhang [75] proposed a\ndata division scheme\
    \ using homomorphic encryption to prevent eavesdropping attacks in\nWSNs. By using\
    \ the homomorphic encryption, e-health data was divided into three parts,\nsent\
    \ to the central server separately, then merged and stored in the server after\
    \ checking\nthe integrity with the message authentication code (MAC) of the divided\
    \ data. Wireless\nenvironments including WBANs and IoMTs are vulnerable to eavesdropping;\
    \ however,\npatient’s privacy may not be fully disclosed since the data are divided.\n\
    Certiﬁcateless public-key cryptography. Due to the resource constraint problem\
    \ in medical\nnetworks, traditional public-key infrastructure (PKI) is unsuitable\
    \ for medical networks.\nMoreover, certiﬁcate management that needs a trusted\
    \ third party, a certiﬁcate authority,\nis an obstacle. Therefore, an identity-based\
    \ cryptosystem (IBC) [76] was proposed to\nremove certiﬁcates. IBC had a key escrow\
    \ problem, but Al-Riyami and Paterson [77] solved\nthis problem by proposing certiﬁcateless\
    \ public-key cryptography (CL-PKC). In addition,\nsigncryption [78], which is\
    \ more efﬁcient than a conventional sign-then-encrypt technique,\nhas been widely\
    \ adopted in WBANs.\nTo secure transmission between WBANs and servers, Omala et\
    \ al. [69] designed an\nECC-based certiﬁcateless signcryption (CLSC) scheme, and\
    \ the scheme is lightweight and\nresistant to key escrow attack. Barbosa and Farshim\
    \ (BF) [79] previously built a base\nscheme of this study using bilinear pairing,\
    \ however, they improved the performance in\nterms of computation cost and energy\
    \ consumption by means of ECC, and they utilized the\nproposed scheme to secure\
    \ transmission from WBANs to a medical application provider.\nAccording to the\
    \ evaluation results, the proposed scheme showed better performance\nin terms\
    \ of energy consumption by 46% than BF’s scheme. Li et al. [80] also designed\n\
    a CLSC scheme based on the identity-based signcryption (IBSC) scheme [81]. Based\
    \ on\nCLSC, they solved key escrow and certiﬁcate management problems. Shen et\
    \ al. [57] and Ji\net al. [60] also adopted certiﬁcateless scheme to eliminate\
    \ public key certiﬁcates in their\nauthentication protocols.\nMoreover, Zhang\
    \ et al. [82] proposed a lightweight and secure device-to-device (D2D)-\nassisted\
    \ data transmission protocol based on the CL-PKC in m-health systems. In general,\n\
    there are three techniques of CL-PKC: certiﬁcateless signature, certiﬁcateless\
    \ encryption,\nand certiﬁcate signcryption. This study particularly adopted certiﬁcateless\
    \ generalized\nsigncryption (CLGSC), which can support the three CL-PKC techniques,\
    \ to provide data\nconﬁdentiality, integrity, mutual authentication, contextual\
    \ privacy. In addition, anonymity\nand unlinkability were also supported by using\
    \ pseudo-identity and a random nonce value.\nThey used D2D communications to transmit\
    \ big health data collected by BAN instead of\ncellular networks that are already\
    \ overburdened to transmit other data.\nAuthentication. Authentication is an essential\
    \ security function for medical network\nsecurity to authenticate unknown users\
    \ or devices. In medical networks, authentica-\ntion schemes/protocols have been\
    \ widely studied considering various security require-\nments such as integrity,\
    \ anonymity, unlinkability, authenticity, non-repudiation, and for-\nward/backward\
    \ secrecy to prevent several security concerns such as replay, impersonation,\n\
    MITM, and spooﬁng attacks. According to our survey, authentication studies for\
    \ medical\nnetworks generally considered efﬁciency and they were classiﬁed as\
    \ mutual, anonymous,\nor certiﬁcateless authentication.\nSome studies [62,83,84]\
    \ designed a mutual authentication protocol. Li et al. [62] pro-\nposed a mutual\
    \ authentication protocol and key agreement scheme based on Chebyshev\nchaotic\
    \ maps and Difﬁe–Hellman key exchange. In the proposed medical system, only\n\
    authorized doctors and medical staff can have permissions including access to\
    \ patients’\nhealth data collected from patients’ body sensors. In addition, a\
    \ digital signature was\nutilized to provide non-repudiation for the doctor’s\
    \ diagnosis. Cheng et al. [83] applied\nblockchain to avoid strong dependence\
    \ on a trusted third party for a mutual authentication\nscheme. Ibrahim et al.\
    \ [84] proposed a lightweight mutual authentication scheme for two-\ntier WBANs\
    \ to ensure the originality and integrity of patient health data with anonymity\n\
    between various body sensors. The proposed protocol only applied hash and XOR\
    \ opera-\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n22 of 47\ntions\
    \ and required 480 bits memory on each WBAN nodes, and this characteristic makes\n\
    the protocol is efﬁcient for resource-constrained environments.\nCertiﬁcateless\
    \ authentication scheme is also researched. Shen et al. [57] presented an\nefﬁcient\
    \ multi-layer authentication protocol with a secure session key generation scheme\n\
    and characteristics of WBANs. The proposed authentication protocols support two\
    \ layers\nin WBANs. In the communication layer, sensors-to-personal digital assistance\
    \ (PDA) group\nauthentication protocol considering resource constraint of WBAN\
    \ nodes was designed\nfor performing between PDA and sensors. In the second layer,\
    \ completely wireless en-\nvironments are considered, and a non-pairing certiﬁcateless\
    \ authentication protocol was\ndesigned to be used between PDA and application\
    \ providers based on ECC that is an\nefﬁcient scheme for WBANs. Ji et al. [60]\
    \ also proposed an efﬁcient and certiﬁcateless\nconditional privacy-preserving\
    \ authentication scheme for WBANs based on ECC. They\nconsisted that the traceability\
    \ of real identity in anonymous environments is conditionally\nrequired because\
    \ anonymity could be exploited by a malicious user. In an emergency, a\ntrusted\
    \ authority that acts as a key generation center (KGC) also can trace the real\
    \ identity\nof a patient. In addition, to improve performance, the proposed scheme\
    \ supported batch\nauthentication which validates multiple WBAN clients at the\
    \ same time.\nIn addition, there were authentication protocols for radio frequency\
    \ identiﬁcation\n(RFID). RFID is a promising identiﬁcation technology to manage\
    \ medical supplies, equip-\nment, medications, and patients. In medical domains,\
    \ RFID tags could contain sensitive\ninformation such as patients’ health data\
    \ that require high security. Rahman et al. [85] pro-\nposed a privacy-preserving\
    \ framework named PriSens-HSAC for RFID to support a group\nbased anonymous authentication\
    \ protocol. In order to authenticate a tag, a reader sends a\nchallenge to a tag,\
    \ and the tag responses to the reader by encrypting the challenge, identity\n\
    of the tag, and a nonce with a group key. Jin et al. [68] proposed a secure ECC-based\
    \ RFID\nmutual authentication scheme for patient medication safety. The proposed\
    \ scheme consists\nof two phases: setup phase and authentication phase. In the\
    \ setup phase, a back-end server\ncreates public/private keys and the identity\
    \ value of the tag (i.e., a random point on the\nelliptic curve), then the server\
    \ sends the identity to the tag. Based on the setup parameters,\nthe server and\
    \ the tag can authenticate each other.\nFan et al. [65] presented a lightweight\
    \ RFID medical privacy protection scheme in\nIoT. This study strongly depended\
    \ on the proposed cross operation (i.e., the operation\nof bit cross) and index\
    \ data table for an efﬁcient RFID authentication scheme. However,\nAghili et al.\
    \ [66] identiﬁed several vulnerabilities of the authentication protocol proposed\n\
    by Fan et al. [65] in terms of secret disclosure, reader impersonation, and tag\
    \ traceability\nattack. Then, they proposed an improved mutual RFID authentication\
    \ protocol, SecLAP,\nfor secure communication and privacy protection in medical\
    \ IoT. Recently, Attarian and\nHashemi [86] researched an anonymity communication\
    \ protocol based on blockchain and\nuser datagram protocol (UDP) in mHealth environments.\
    \ Their protocol was speciﬁcally\ndesigned to protect the data security and privacy\
    \ of clients’ identities.\nAccess control. There were various access control studies\
    \ in different target domains;\ntherefore, this section specifically presents\
    \ access control schemes focusing on medical\nnetworks. Lounis et al. [59] and\
    \ Yang et al. [63] proposed a fine-grained access control\nframework based on\
    \ ABE for the medical networks (i.e., WSNs and IoT). Lounis et al. [59]\nproposed\
    \ an efficient fine-grained access control that supports complex and dynamic\n\
    security policies using CP-ABE, and Yang et al. [63] also proposed a privacy-preserving\
    \ e-\nhealthcare system that provides fine-grained access control and flexible\
    \ access policy update.\nSince user identity is very sensitive information in\
    \ medical networks, Li et al. [80]\nproposed an anonymous access control model\
    \ based on the proposed certiﬁcateless sign-\ncryption (CLSC) scheme that is cost-effective\
    \ for WBANs. Their proposed access control\nmodel has advantages that it does\
    \ not have a key escrow problem and public key certiﬁcates\nthat is required to\
    \ be managed.\nIn addition, there was a study applied break-the-glass concept\
    \ for the emergent\nsituation. Maw et al. [87] proposed a ﬂexible access control\
    \ model, break-the-glass access\nInt. J. Environ. Res. Public Health 2021, 18,\
    \ 9668\n23 of 47\ncontrol (BTG-AC), for medical data in wireless medical sensor\
    \ networks. The model\nwas mainly considered to solve the conﬂict between data\
    \ privacy and availability using\nbreak-the-glass (BTG) concept. Unlike the conventional\
    \ BTG-RBAC model, the proposed\nBTG-AC used BTG policy only in emergency situations\
    \ with Ponder2 policy package, and\nit is designed to be lightweight for WSNs.\n\
    Compressive sensing. By using compressive sensing (CS), the effect of full sampling\n\
    can be achieved with just a few sampling points [88]. Since the medical networks\
    \ are\nresource-constrained, CS can be adopted to reduce communication costs while\
    \ maintaining\ndata conﬁdentiality.\nPeng et al. [58] proposed a secure and energy-efﬁcient\
    \ e-health data transmission sys-\ntem based on chaotic CS, which is energy-efﬁcient\
    \ and also has an encryption performance\nfor the medical networks. Since conventional\
    \ CS uses measurement matrices for both\nsenders and receivers, they need huge\
    \ storage space. Therefore, chaotic CS was adopted,\nwhich only requires partial\
    \ parameters for matrix generation such as the chaotic parameter,\ninitiation\
    \ value, sampling initial position and distance as a key, to save the storage\
    \ space. In\naddition, it is more secure than traditional CS techniques because\
    \ of the sensitivity of chaos.\nTraceback technique. A DDoS attack is a critical\
    \ attack against the medical networks\nsince it depletes the networks’ limited\
    \ resources and thus hinders the transmission reliabil-\nity of patients’ e-health\
    \ data. Therefore, DDoS detection techniques represent an important\nresearch\
    \ subject in this domain. According to Latif et al. [56], the probabilistic packet\n\
    marking (PPM) traceback technique is widely used in IP-based networks to detect\
    \ the\nsource of a DDoS; however, it cannot be directly applied to a resource-constrained\
    \ WBAN\nenvironment because of its high convergence time and overhead on sensor\
    \ nodes in WBAN.\nTherefore, Latif et al. [56] presented a novel approach, efﬁcient\
    \ traceback technique (ETT),\nbased on Dynamic Probabilistic Packet Marking (DPPM).\
    \ In other words, they utilized\nvariable marking probability based on the packet’s\
    \ traveling distance with DPPM label in\nthe MAC Protocol Data Unit (MPDU) to\
    \ the target node.\nFinally, Table 5 summarizes the study analysis.\nTable 5.\
    \ Summary for security and privacy study analysis on medical network.\nRef.\n\
    Target Security\nConcern\nTarget Security\nRequirement\nSecurity Solution\nStrength\n\
    Weakness\n[59]\n- Collusion attack\n- MITM attack\n- Scalability\n- Conﬁdentiality\n\
    - Availability\n- Integrity\n- Authenticity\n- AES\n- CP-ABE\n- Access Control\n\
    Efﬁcient approach of using\nABE by encrypting a\nsymmetric key, RSK, instead\n\
    of the whole data\nSecurity for e-health\ndata depends on a\nsecure socket layer\
    \ (SSL)\nthat could not be fully\nadopted in a\nresource-constrained\nWSN environment\n\
    [55]\n- Eavesdropping\n- Tracking\n- Spooﬁng attack\n- Conﬁdentiality\n- Availability\n\
    (reliability)\n- AES\n- ABE\n- Authentication\n- Access Control\nFlexible privacy\
    \ protection\nstrategies according to three\ntrust levels of a user or node\n\
    Security could easily be\nthreatened if a node that\nhas a high trust level is\n\
    compromised\n[57]\n- Eavesdropping\n- Impersonation attack\n- Replay attack\n\
    - DoS attack\n- Conﬁdentiality\n- Integrity\n- Authenticity\n- Non-repudiation\n\
    - Lightweight\n- Forward security\n- ECC\n- Mutual Authentication\nEfﬁcient authentication\n\
    protocol using a non-pairing\noperation and ECC-based\nscheme\nThe required\n\
    computation cost is still\nhigh for resource\nconstrained WBAN\nnodes because\
    \ of the\ncertiﬁcateless scheme\n[60]\n- Replay attack\n- Impersonation attack\n\
    - MITM attack\n- Anonymity\n- Unlinkability\n- Forward Secrecy\n- ECC\n- Mutual\
    \ Authentication\nConditionally anonymous\nauthentication to trace a\nmalicious\
    \ user and batch\nauthentication for efﬁciency\nConditional traceability\ncould\
    \ be abused by an\ninsider; however, there\nis no mention of this\ndrawback\n\
    [68]\n- Replay attack\n- Impersonation attack\n- Spooﬁng attack\n- DoS attack\n\
    - Location tracking\n- MITM attack\n- Conﬁdentiality\n- Anonymity\n- Availability\n\
    - Forward secrecy\n- Scalability\n- ECC\n- Mutual Authentication\nLow computation\
    \ cost and\ncommunication overhead\nThe communication\nbetween tag and reader\n\
    was insecure\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n24 of 47\nTable\
    \ 5. Cont.\nRef.\nTarget Security\nConcern\nTarget Security\nRequirement\nSecurity\
    \ Solution\nStrength\nWeakness\n[69]\n- Eavesdropping\n- Replay attack\n- Conﬁdentiality\n\
    - Authenticity\n- Lightweight\n- ECC\n- CLSC\n- Authentication\nEfﬁcient scheme\
    \ based on\nECC and signcryption\nAnonymity should be\nconsidered to ensure\n\
    patient privacy\n[71]\n- Eavesdropping\n- Replay attack\n- Conﬁdentiality\n- Lightweight\n\
    - ABE\nEfﬁcient ABE based on\nonline/ofﬂine encryption\ntechniques and ABF for\
    \ access\ncontrol policy to protect the\nprivacy of users’ attributes\nABF could\
    \ hinder the\nencryption performance\n[63]\n- Eavesdropping\n- Replay attack\n\
    - Impersonation attack\n- Tracking attack\n- Conﬁdentiality\n- Anonymity\n- Authenticity\n\
    - ABE\n- Access Control\nLow computation cost for\nEHR encryption/decryption\n\
    Pairing operation that\ncause high computation\ncost is required\n[73]\n- Eavesdropping\n\
    - Replay attack\n- Conﬁdentiality\n- Integrity\n- Authenticity\n- Pairing-based\
    \ HE\n- Aggregate Signature\nData conﬁdentiality is\npreserved while data\naggregation\
    \ and batch\nveriﬁcation are performed for\nefﬁciency\nRequires exponentiation\n\
    and pairing operations\nthat cause a high\ncomputation cost\n[74]\n- Eavesdropping\n\
    - Replay attack\n- Impersonation attack\n- Conﬁdentiality\n- Forward secrecy\n\
    - Backward secrecy\n- HE\n- Key Distribution\nDirect communication\nbetween a\
    \ patient’s mobile\ndevice and medical devices is\npossible\nDiagnosis reliability\n\
    should be provided\n[64]\n- Eavesdropping\n- Replay attack\n- Collusion attack\n\
    - Availability (Fault\nTolerance)\n- Collusion resistance\n- BGN cryptosystem\n\
    Differential attack and privacy\nare considered\nThe BGN cryptosystem\nhas a small\
    \ plaintext\nspace for e-health data\n[80]\n- Eavesdropping\n- Replay attack\n\
    - Anonymity\n- Conﬁdentiality\n- Integrity\n- Non-repudiation\n- CLSC\n- Authentication\n\
    - Access Control\nKey escrow resilience and\nelimination of certiﬁcate\nmanagement\
    \ based on\ncertiﬁcateless access control\nRequires exponentiation\nand pairing\
    \ operations\nthat cause high\ncomputation cost\n[82]\n- Eavesdropping\n- Impersonation\
    \ attack\n- Conﬁdentiality\n- Integrity\n- Anonymity\n- Lightweight\n- Unlinkability\n\
    - Forward secrecy\n- CLGSC\nKey escrow resilience and low\ncomputation cost by\n\
    eliminating pairing operations\nRequires a relay\nselection strategy to\nimprove\
    \ transmission\nefﬁciency and reliability\n[75]\n- Eavesdropping\n- Conﬁdentiality\n\
    - Integrity\n- HE\nEavesdropping in wireless\nenvironments could be\nmitigated\
    \ by dividing data\nA sensor node in WSNs\ncould not use HE\nbecause of the resource\n\
    constraint\n[62]\n- Eavesdropping\n- Replay attack\n- Impersonation attack\n-\
    \ MITM attack\n- Integrity\n- Non-repudiation\n- Forward secrecy\n- Mutual Authentication\n\
    - Key agreement based on\nChebyshev chaotic map\nThe major advantage is that it\n\
    provides continuous remote\npatient supervision that can\nimprove patient health\n\
    SPoF can be posed\nbecause of the centric\nmedical cloud that\nmanages all patients’\n\
    health data\n[83]\n- Eavesdropping\n- Replay attack\n- Impersonation attack\n\
    - MITM attack\n- Anonymity\n- Authenticity\n- Forward secrecy\n- Mutual Authentication\n\
    Medical data cannot be\ntampered with and is\nuntraceable by means of a\nblockchain\n\
    Using the cloud as a\ncentral database of\nmedical data can cause\nSPoF. This\
    \ drawback\ncould weaken the\nadvantages of\nblockchain\n[84]\n- Replay attack\n\
    - Eavesdropping\n- Impersonation attack\n- MITM attack\n- Conﬁdentiality\n- Integrity\n\
    - Availability\n- Anonymity\n- Lightweight\n- Unlikability\n- Forward secrecy\n\
    - Backward secrecy\n- Mutual Authentication\nVery low computation cost\nand energy\
    \ consumption\nMutual authentication is\nonly considered between\nthe WBAN and\n\
    controller nodes\n[85]\n- Eavesdropping\n- DoS attack\n- Impersonation attack\n\
    - Tracking attack\n- Conﬁdentiality\n- Anonymity\n- Authenticity\n- Unlinkability\n\
    - Authentication\n- Access Control\nA lightweight authentication\nprotocol for\n\
    resource-constrained RFID\ntags\nWhen an RFID reader\ngets an authentication\n\
    response from a tag, all\ngroup keys should be\nused to decrypt the\nresponse\
    \ until it\nsucceeds\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n25 of\
    \ 47\nTable 5. Cont.\nRef.\nTarget Security\nConcern\nTarget Security\nRequirement\n\
    Security Solution\nStrength\nWeakness\n[68]\n- Replay attack\n- DoS attack\n-\
    \ Impersonation attack\n- MITM attack\n- Spooﬁng attack\n- Tracking attack\n-\
    \ Conﬁdentiality\n- Availability\n- Anonymity\n- Forward secrecy\n- Scalability\n\
    - Mutual Authentication\nLow computation cost and\ncommunication overhead and\n\
    solves some security ﬂaws of\nprevious authentication\nschemes\nThe session key\
    \ should\nbe generated for security\nbetween a tag and\nreader because the\nsecure\
    \ channel between\nthe tag and reader was\nnot established\n[65]\n- Eavesdropping\n\
    - Replay attack\n- DoS attack\n- Tracking attack\n- Conﬁdentiality\n- Anonymity\n\
    - Forward security\n- Mutual Authentication\nLow computation cost\nCommunication\
    \ cost is a\nlittle high compared to\nother studies\n[66]\n- Eavesdropping\n-\
    \ Replay attack\n- Impersonation attack\n- Tracking attack\n- Conﬁdentiality\n\
    - Integrity\n- Forward secrecy\n- Backward secrecy\n- Mutual Authentication\n\
    Low computation power\nrequirement for RFID tag\nbased on the proposed\nlightweight\
    \ MRot(x,y)\nfunction\nIt could be vulnerable to\nsecret disclosure attack\n[87]\n\
    - Replay attack\n- DoS attack\n- Spooﬁng attack\n- Conﬁdentiality\n- Integrity\n\
    - Availability\n- Authenticity\n- Non-repudiation\n- Flexible Access Control\n\
    The proposed access control\nmodel supports a ﬂexible\naccess control policy based\
    \ on\nthe BTG concept\nID and password are\nrequired when the BTG\npolicy is applied,\
    \ and\nthe proposed access\ncontrol model did not\nprovide anti-tampering\nmeasures\n\
    [58]\n- Eavesdropping\n- Conﬁdentiality\n- Compressive sensing\nChaotic CS more\n\
    energy-efﬁcient and secure\nthan traditional CS\nEncrypted data might be\neasily\
    \ decrypted if an\nadversary takes a\nmeasurement matrix\nbecause the encryption\n\
    is performed with the\nsame matrix\n[56]\n- DoS attack\n- Availability\n- Traceback\
    \ technique\nLightweight to be applied in a\nWBAN environment\nThe proposed technique\n\
    is only based on WBAN\nand MAC header and\nthe number of bytes in\nthe DPPM label\
    \ depends\non the network\ntopologies\n6. Edge, Fog, and Cloud\nRecently, conventional\
    \ healthcare systems have been combined with diverse technolo-\ngies, such as\
    \ big data, IoMT and WBAN, to provide more advanced e-health services. Cloud\n\
    computing is a promising computing paradigm that is being used in medical research\n\
    areas since it provides various advantages such as cost efﬁciency, scalability,\
    \ availabil-\nity, and ﬂexibility. In addition, edge and fog computing have been\
    \ studied to support\ntime-sensitive medical operations. This section presents\
    \ security concerns, requirements,\nsolutions, research trends, and open challenges\
    \ in edge, fog, and cloud computing.\n6.1. Overview\nFigure 7 shows the taxonomy\
    \ for the security and privacy studies in edge, fog, and\ncloud computing. In\
    \ a nutshell, the security and privacy studies that deploy edge, fog, and\ncloud\
    \ computing generally applied cryptography, authentication, and access control\
    \ to\nensure various security requirements such as data conﬁdentiality, integrity,\
    \ availability, and\npublic veriﬁability, that solve several security concerns\
    \ such as unauthorized access, data\nbreach, and single point of failure (SPoF).\
    \ In particular, security solutions for cryptography,\nauthentication, and access\
    \ control have been studied to protect e-health data in the cloud\nsince the cloud\
    \ has mainly been utilized as secure data storage. Furthermore, provable\ndata\
    \ possession (PDP) and proofs of retrievability (PoR) that allow patients to verify\
    \ the\nintegrity and availability of outsourced e-health data have been studied\
    \ since the edge, fog,\nand cloud cannot be fully trusted.\nInt. J. Environ. Res.\
    \ Public Health 2021, 18, 9668\n26 of 47\nFigure 7. Taxonomy for security and\
    \ privacy on edge, fog, cloud computing.\n6.2. Security Concern, Requirement,\
    \ and Solution\nThese computing paradigms improve accessibility, usability, and\
    \ manageability for e-\nhealth data, meanwhile, responsibility for ensuring strong\
    \ security and privacy of e-health\ndata becomes increased because security attacks\
    \ on the edge, fog, and cloud can affect\nhuge number of patients. Therefore,\
    \ security concerns, requirements, and solutions for the\nedge, fog, cloud computing\
    \ for e-health data should be rigorously identiﬁed and discussed\nto securely\
    \ protect the big e-health data.\n6.2.1. Security Concern\nEdge, fog, and cloud\
    \ process and store diverse and various e-health data; hence, data\nbreach is\
    \ one of the most critical security concerns in the edge, fog, and cloud computing.\n\
    Six security concerns that are generally mentioned in surveyed studies on the\
    \ edge, fog,\nand cloud computing are as follows.\nUnauthorized access. In addition\
    \ to medical devices and networks, a secure storage\nthat stores and processes\
    \ e-health data based on edge, fog, cloud computing needs to restrict\nunauthorized\
    \ access to the storage. Since the edge, fog and cloud are data aggregation\n\
    points, robust access control is highly required to protect big e-health data\
    \ by restricting\nunauthorized access.\nData breach. Data breaches, including\
    \ data disclosure, tampering and forgery, present\ncritical threats to e-health\
    \ data in edge, fog, and cloud environments. Section 3 describes\ndata breaches\
    \ in more detail.\nDenial of service attack. The cloud centrally provides various\
    \ medical services;\ntherefore, DoS attacks are a serious threat to the cloud,\
    \ edge, and fog that can halt medical\nservices. If medical services stop working,\
    \ this can directly affect people’s lives.\nSingle point of failure. The major\
    \ characteristic of the cloud environment is central-\nization. Although there\
    \ are some advantages to centralization, SPoF has emerged as a\nmain drawback.\n\
    Malicious insider. Even if all security solutions are well-designed and properly\n\
    applied to the edge, fog, and cloud environments, malicious insiders who have\
    \ the correct\npermissions can abuse or misuse systems for malicious purposes.\n\
    Network attack. The network is an essential component for using the edge, fog,\
    \ and\ncloud; therefore, network attacks such as eavesdropping, replay, and impersonation\
    \ can\nbe used to attack the edge, fog, and cloud environments. For example, an\
    \ adversary can\neavesdrop on network trafﬁc in those environments to capture\
    \ useful information (e.g.,\nusers’ e-health and authentication data) for further\
    \ attacks on the edge, fog and cloud.\nInt. J. Environ. Res. Public Health 2021,\
    \ 18, 9668\n27 of 47\n6.2.2. Security Requirement\nData security is particularly\
    \ important security requirement in edge, fog, and cloud\ncomputing and a user\
    \ should be able to check the data status publicly because the edge,\nfog, and\
    \ cloud are generally managed by semi-trusted party which cannot be fully trusted.\n\
    In addition, efﬁciency and lightness are less important compared with other domains\
    \ such\nas the medical device and network since the edge, fog and cloud have sufﬁcient\
    \ resources.\nMore speciﬁcally, there are ten common security requirements that\
    \ can solve the security\nconcerns of the edge, fog and cloud computing.\nConﬁdentiality.\
    \ As described in Section 3, data conﬁdentiality is required in the edge,\nfog,\
    \ and cloud environments. In particular, data conﬁdentiality is more critical\
    \ in the cloud\nthan medical devices or networks because various and diverse e-health\
    \ data are collected\nextensively from patients over long periods of time. If\
    \ e-health data are disclosed when\ntransmitted via medical networks, it shows\
    \ very limited health information; however, if the\ndata stored in the cloud is\
    \ exposed, it can show the medical history of some or all patients\nin the cloud.\
    \ Therefore, data conﬁdentiality in the cloud, which is secure data storage, is\n\
    particularly important compared with other target domains.\nIntegrity and public\
    \ veriﬁability. Data integrity must be satisﬁed not only when\ntransmitted over\
    \ medical networks but also within the edge, fog, and cloud. The data stored\n\
    on personal medical devices can easily be checked by the patients; however, outsourced\n\
    data in the edge, fog, and cloud environments are difﬁcult to check despite the\
    \ patient\nbeing the data owner since the environments are managed by a service\
    \ provider. Therefore,\nthe patients should be able to check the integrity of\
    \ the outsourced data stored in the edge,\nfog, and cloud environments.\nAvailability.\
    \ E-health data in the edge, fog, and cloud environments must be available\nwhen\
    \ the patient who owns are the data owner wants to use it. To this end, the edge,\
    \ fog,\nand cloud environments must provide availability.\nAnonymity. Anonymity\
    \ of original e-health data in the cloud is achieved by means of\nencryption.\
    \ However, the data must have been anonymized if it is required to be analyzed\n\
    or shared for some reasons such as medical research.\nAuthenticity. To secure\
    \ e-health data, both data authenticity and identity authen-\nticity of a user\
    \ must be provided. In particular, the authenticity of a user is required to\n\
    authenticate them.\nAccountability. Since e-health data are highly sensitive,\
    \ the data processed and stored\nin edge, fog, and cloud environments should be\
    \ accountable.\nResistance to network attack. Network attacks must be considered\
    \ to secure com-\nmunication between clients (e.g., users and devices) and edge,\
    \ fog, and cloud servers. In\nother words, the edge, fog, and cloud servers must\
    \ properly authenticate and authorize\nusers and medical devices to protect against\
    \ network attacks such as eavesdropping, replay,\nand impersonation.\nFlexibility.\
    \ There are diverse clients in various environments that use the services pro-\n\
    vided by the edge, fog, and cloud environments; therefore, the edge, fog, and\
    \ cloud environ-\nments\nshould\nﬂexibly\naccommodate\ndifferent\nenvironments\n\
    and\ntheir\nvarious requirements.\nScalability. As the data are increased and\
    \ diversiﬁed, cloud storage must be scalable\nfor the large volume of big e-health\
    \ data. In addition, security solutions should provide\nscalability as clients\
    \ such as medical devices and users have recently increased.\n6.2.3. Security\
    \ Solution\nExisting strong security solutions can be adopted in edge, fog, and\
    \ cloud computing\nbased on the sufﬁcient resources; therefore, studies in this\
    \ research area focused on useful\nfunctionalities rather than efﬁcient and lightweight\
    \ security solutions. Six security solutions\nthat were adopted by the surveyed\
    \ studies to secure e-health data in the edge, fog, and\ncloud computing are as\
    \ follows.\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n28 of 47\nCryptography.\
    \ Cryptography is an essential security solution that has been used\nin across\
    \ entire medical domains as well as in edge, fog, and cloud computing. Useful\n\
    cryptographic schemes for the edge, fog, and cloud computing are as follows.\n\
    Proxy re-encryption. Permissions that allow a user to access e-health data could\
    \ be\nchanged according to the situations of a patient or medical staff. For example,\
    \ if a patient’s\nfamily doctor has changed, the access permission for the patient’s\
    \ e-health data must be\ntransferred from the former doctor to the new doctor.\
    \ In this context, proxy re-encryption\n(PRE), which was first introduced by Blaze\
    \ et al. in 1998 [89], can be used as seen in Figure 8.\nFigure 8. Overview of\
    \ proxy re-encryption.\nPRE enables a proxy to generate new ciphertext that can\
    \ be decrypted by the new\ndoctor’s private key. The re-encrypted ciphertext is\
    \ encrypted using the re-encryption key\ngenerated by the delegator (i.e., the\
    \ former family doctor). PRE makes the delegation more\neasy, secure, and private\
    \ because the re-encryption operates without any decryption of the\nciphertext.\
    \ There are two variations of PRE, unidirectional PRE and bidirectional PRE. Bidi-\n\
    rectional PRE schemes have the advantage that they can convert ciphertext several\
    \ times;\nhowever, this may cause a data breach because of the additional re-encryption\
    \ capability.\nTherefore, since e-health data are critical information, the unidirectional\
    \ PRE scheme that\nre-encrypts a ciphertext once is more suitable. In the medical/healthcare\
    \ research area, an\nidentity-based proxy re-encryption (IBPRE) scheme that was\
    \ ﬁrst proposed by Green and\nAteniese in 2007 [90] was widely adopted since the\
    \ identity-based encryption (IBE) scheme\ncan help simplify certiﬁcate management.\n\
    Identity-based encryption. Public-key cryptography randomly generates the public\n\
    key for a user. However, an IBE scheme, which is one type of public-key cryptography,\n\
    generates the public key with a user’s identity information, for example, email\
    \ address.\nTherefore, a sender who knows the receiver’s identity information\
    \ can encrypt some\nmessages without exchanging the receiver’s public key (i.e.,\
    \ public-key infrastructure; PKI).\nThe concept of IBE was ﬁrst introduced by\
    \ Shamir in 1984 [76]; however, the ﬁrst practical\nIBE scheme was proposed by\
    \ Boneh and Franklink in 2001 [91].\nWith the identity-based cryptographic concept,\
    \ Wang et al. [92] proposed a new IBE\nscheme and a new identity-based proxy re-encryption\
    \ (IBPRE) scheme and adopted the\nproposed identity-based cryptographic techniques\
    \ into an e-health cloud system to secure\ne-health data. In the proposed scheme,\
    \ some randomness is added to the private key to\nresist an adversary who compromises\
    \ the private key for information of the master key.\nThey showed the advantages\
    \ of IBE that authenticates public key implicitly and simpliﬁes\nthe certiﬁcate\
    \ management. In the proposed system, the cloud acted as secure storage and\n\
    medical service provider that supports the proposed encryption scheme.\nAttribute-based\
    \ Encryption. IBE generates a public key with a user’s identity informa-\ntion,\
    \ whereas the private key or ciphertext in ABE is generated by attributes. ABE\
    \ has\nbeen considered a more ﬂexible encryption scheme than IBE schemes since\
    \ the key can\nbe generated using diverse attributes (e.g., subject, resource,\
    \ action, and environmental\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n\
    29 of 47\nattributes) including identity information. In general, CP-ABE has been\
    \ widely used in\ncloud environments to provide secure data sharing because it\
    \ is much more ﬂexible and\nsuitable for general applications [93].\nThere were\
    \ several CP-ABE studies [93–97] to protect e-health data. Wang et al. [93]\n\
    proposed an efﬁcient ﬁle hierarchy CP-ABE (FH-CP-ABE) scheme in cloud computing\n\
    since the existing CP-ABE has not considered the hierarchy structure of shared\
    \ ﬁles. In\nthe scheme, the hierarchical ﬁles are encrypted with an integrated\
    \ access structure to\nefﬁciently reduce storage and time cost for encryption.\
    \ On the other hand, Eom et al. [94]\nfocused on the patient-centric CP-ABE scheme.\
    \ They proposed a new CP-ABE scheme,\npatient-controlled ABE (PC-ABE), which enables\
    \ patients to control access to their own\ne-health data. In PC-ABE, the decryption\
    \ key for encrypted e-health data was generated\nbased on a patient’s private\
    \ key and attributes of the parties that want to access the data.\nSince the decryption\
    \ key is not generated without the patient’s private key, the patient\ncan control\
    \ the access to the patient’s data consequently. In addition, Liu et al. [95]\
    \ and\nRao [96] proposed e-health data sharing scheme using CP-ABE signcryption\
    \ (CP-ABSC).\nLiu et al. [95] proposed a CP-ABSC scheme for PHR system in cloud\
    \ computing based on\nCP-ABE and attribute-based signature (ABS) which enables\
    \ a patient to sign e-health data\nof the patient with the patient’s private key\
    \ if the patient has proper a set of attributes for\nthe data. The CP-ABSC is\
    \ a promising cryptographic technology for ﬁne-grained access\ncontrol to share\
    \ e-health data in cloud computing; however, Rao [96] claimed that the Liu\net\
    \ al.’s scheme cannot provide conﬁdentiality because they did not adopt the standard\n\
    Signcryption techniques (i.e., encrypt-then-sign and sign-then-encrypt). Therefore,\
    \ Rao\nproposed a new CP-ABSC scheme based on previous studies [97,98], which\
    \ is more secure\nand efﬁcient. The proposed scheme also can provide signcryptor\
    \ (e.g., a patient) privacy\nand public veriﬁability, which are important security\
    \ requirements of e-health systems in\ncloud computing.\nHomomorphic encryption.\
    \ Homomorphic encryption is a promising cryptographic\nscheme in edge, fog, and\
    \ cloud computing as well as medical networks, which need to\nsecurely collect\
    \ e-health data with privacy preservation. Raisaro et al. [99] proposed MedCo\n\
    which enables a group of medical service providers to federate and protect the\
    \ e-health\ndata for secure sharing using the homomorphic encryption scheme in\
    \ a hybrid environ-\nment that includes central and decentral environments. In\
    \ other words, the proposed\nframework, MedCo, allows the multiple sites that\
    \ store e-health data to share their data\nby securely querying the data to the\
    \ distributed sites without sharing their databases. It\nalso provides differential\
    \ privacy by adding dummy records into patients’ e-health data.\nMoreover, Alabdulatif\
    \ et al. [100] adopted edge computing to aggregate and analyze the\nlarge-scale\
    \ bio-signal data in real-time. In the proposed edge of things (EoT) framework,\n\
    fully homomorphic encryption was performed in the edge IoT gateway, located between\n\
    medical devices and the cloud, to protect sensitive e-health data including patients’\
    \ privacy.\nSearchable encryption. According to Zhang et al. [101], outsourcing\
    \ e-health data and\ndata searching services to the cloud has been a promising\
    \ trend since the cloud is usually\nemployed as data storage. In this regard,\
    \ searchable encryption (SE), which was ﬁrst\nintroduced by Song et al. [102]\
    \ in 2000, can be used to share encrypted e-health data\nin the cloud. The SE,\
    \ which is a cryptographic primitive, encrypts e-health data to be\nkeyword-searchable\
    \ over encrypted data as described in Figure 9.\nFigure 9. Overview of searchable\
    \ encryption.\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n30 of 47\n\
    In a nutshell, if a patient (i.e., the data owner) ﬁrst encrypts their e-health\
    \ data to\nbe searchable and uploads that encrypted data to the cloud, users (e.g.,\
    \ doctors and\nresearchers) can then query the encrypted e-health data using desired\
    \ keywords. Yang\net al. [103], Xu et al. [104], and Chen et al. [105] adopted\
    \ searchable encryption to share\ne-health data in the cloud environments. Yang\
    \ et al. [103] proposed a new cryptographic\nprimitive, conjunctive keyword search,\
    \ with a proxy re-encryption function enabled by a\ndesignated tester (i.e., a\
    \ server that can execute equality test function) and timing. Based\non the proposed\
    \ time-limited SE scheme, a patient can delegate access permissions to\ndesired\
    \ people so that they can search over the patient’s e-health data for a limited\
    \ time. In\naddition, the time period to search and decrypt the patient’s data\
    \ can be controlled, and the\npermissions are automatically revoked after the\
    \ time period. Xu et al. [104] also proposed\na privacy-preserving e-health data\
    \ sharing scheme using SE with keyword range search\nand multiple keyword search.\
    \ Moreover, the encrypted data can be searched by comparing\ndifferent numeric\
    \ types based on the proposed equality test function. In the proposed\nscheme,\
    \ e-health data and keyword ﬁles for the data were encrypted using a symmetric\
    \ key,\nand homomorphic encryption was used to protect the privacy of keyword\
    \ in the equality\ntest phase. Chen et al. [105] designed blockchain-based searchable\
    \ encryption for e-health\ndata sharing. They stored the indices for the data\
    \ in blockchain as the form of complex\nlogic expressions (e.g., “gender”: “male”)\
    \ to make a user can use the indices for searching\nspeciﬁc e-health data. Since\
    \ the proposed scheme utilizes blockchain, it provides integrity,\nanti-tampering,\
    \ and accountability. In addition, Yao et al. [106] proposed a multi-source\n\
    order-preserving symmetric encryption (MOPSE) scheme. Compared with other searchable\n\
    encryption schemes, the proposed scheme enables a data owner to efﬁciently query\
    \ over\nmultiple data providers’ encrypted e-health data. To this end, the cloud\
    \ merges multiple\nencrypted indices from different data providers of the same\
    \ data owner.\nAuthentication. Authentication is an indispensable security solution\
    \ to prevent at-\ntackers and malicious users from accessing the data in the edge,\
    \ fog, and cloud computing.\nThe authentication becomes more important in cloud\
    \ environments because the cloud\nstores patients’ big e-health data, which can\
    \ show the patients’ medical history. There have\nbeen authentication studies\
    \ focusing on mutual [107–110], anonymous [111] and traceable\nauthentication\
    \ [112].\nFirst, mutual authentication schemes [107–110] were proposed for the\
    \ edge, fog, and\ncloud environments. Li et al. [107] proposed a cloud-assisted\
    \ mutual authentication scheme\nfor telecare medical information systems (TMIS)\
    \ by enhancing Mohit et al.’s authentication\nscheme [113] to be more secure and\
    \ support anonymity using a dynamic pseudo-random\nnonce. In addition, Liu et\
    \ al. proposed a novel privacy-preserving mutual authentica-\ntion (NPMA) [108]\
    \ and a blockchain-based privacy-preserving mutual authentication\n(MBPA) [109]\
    \ for TMIS environments. The NPMA was designed for secure remote user\nauthentication\
    \ in the mobile edge-cloud network, which medical services are distributed in\n\
    the most logical, nearby, and efﬁcient place of the network [108]. In addition\
    \ to the mutual\nauthentication, the NPMA also provided anonymity of a patient\
    \ and edge-cloud server and\ndata conﬁdentiality using anonyms and certiﬁcateless\
    \ cryptography, respectively. On the\nother hand, in [109], a privacy-preserving\
    \ mutual authentication was proposed for mobile\nmedical cloud architecture based\
    \ on blockchain to prevent data breach. They stored and\nmanaged the encrypted\
    \ e-health data in a blockchain cloud. Each blockchain node shares\nthe secret\
    \ value for authentication. Especially, their sharing process is conducted without\n\
    key negotiation rounds. Therefore, it only needs low computational cost between\
    \ terminal\nand node rather than the traditional blockchain model. Last but not\
    \ least, there was a\nmutual authentication study [110] designed for wearable\
    \ devices using hybrid computing\nthat consists of edge and cloud. In particular,\
    \ mutual authentication was performed using\nthe space-aware edge computing for\
    \ allowing users to access the local services in a hospital.\nMoreover, Mehmood\
    \ et al. [111] proposed an anonymous authentication scheme\nbased on cloud to\
    \ provide complete privacy and anonymity to a user from the adversaries\nand the\
    \ authentication server by utilizing a rotating group signature scheme based on\n\
    Int. J. Environ. Res. Public Health 2021, 18, 9668\n31 of 47\nECC. In a group,\
    \ all members share an expiration date and each of them updates their\nkeys periodically\
    \ to prevent the traceability. They also added an extra layer to provide\nanonymity\
    \ on the network level by utilizing TOR. This can prevent trafﬁc analysis attacks\n\
    from an eavesdropper. Meanwhile, Liu et al. [112] proposed a traceable authentication\n\
    protocol. They protected the privacy of patients and anonymity by means of randomized\n\
    pseudonyms. The real identity of patients can also be extracted from the pseudonyms\n\
    by the authentication server. The proposed authentication scheme is useful for\
    \ resource-\nconstrained mobile devices because it consumes low communication\
    \ cost and energy.\nAccess control. Access control is another indispensable security\
    \ solution with au-\nthentication for edge, fog, and cloud computing. Among various\
    \ access control mod-\nels, most studies were based on the ABE scheme to realize\
    \ a ﬁne-grained access control\nmodel [114–118] without a situation-based access\
    \ control model [119]. In addition, there\nwere access policy studies that focused\
    \ on privacy preservation for access policy [120],\ndynamic access policy transformation\
    \ [121], and updating access policies [122].\nSince access control studies [114–118]\
    \ are generally based on CP-ABE to provide a\nﬁne-grained access control model,\
    \ the fundamental access control mechanism remains the\nsame. E-health data are\
    \ encrypted with a desired access policy using attributes and only\nauthorized\
    \ users who have proper attributes for the corresponding data’s access policy\
    \ can\naccess it. However, there are some differences in the details among the\
    \ studies. Each study\nhas an additional security solution (i.e., trust evaluation\
    \ [114], dynamic auditing [115],\nonline/ofﬂine CP-ABE [117], and uniﬁed access\
    \ policy [118]) or a speciﬁc purpose (i.e.,\nsupporting multiple cloud servers\
    \ [116]). The ﬁve access control studies are described in\nmore detail below.\n\
    First, Yan et al. [114] proposed a ﬂexible access control scheme based on ABE.\
    \ Unlike\nthe other ABE-based access control schemes, they adopted context-aware\
    \ trust and rep-\nutation evaluation into the ﬂexible access control scheme to\
    \ support various data usage\nscenarios, for example, cloud data sharing with\
    \ others. For example, data access can\ndirectly be determined by the data owner\
    \ or reputation centers in an indirect way in case of\nthe data owner is not available\
    \ or cannot make an access decision. If a user has an adequate\nreputation, the\
    \ reputation centers apply PRE to make a new ciphertext that the user can\ndecrypt\
    \ based on the pre-deﬁned data owner’s access policy.\nSecond, Yeh et al. [115]\
    \ proposed a cloud-based ﬁne-grained access control framework.\nThey controlled\
    \ access using CP-ABE which enables a data owner to delegate access\npermissions\
    \ to others by deﬁning access policy. If a user has proper attributes for the\
    \ access\npolicy, a new ciphertext for the user is generated using PRE to make\
    \ only authorized users\ncan use the data. In addition, the proposed framework\
    \ is suitable for resource-constrained\nIoT devices because only symmetric key\
    \ encryption is used to encrypt the data when it is\nuploaded to the cloud. Dynamic\
    \ data auditing was also used to verify data integrity using\nMerkle hash tree\
    \ (MHT), which is a binary tree of hashes. Since a parent node’s hash is\ngenerated\
    \ using the child nodes’ hashes, fast and efﬁcient verifying integrity of e-health\n\
    data can be done by checking a parent node’s hash.\nThird, Roy et al. [116] designed\
    \ a ﬁne-grained access control for multi-server along\nwith mutual authentication\
    \ of users in mobile could computing environment. The proposed\nscheme guaranteed\
    \ a low communication cost and lightweight authentication procedure be-\ncause\
    \ of no involvement of a registration server. It is also suitable for resource-constrained\n\
    devices by mostly utilizing one-way hash function and bitwise XOR operations.\n\
    Fourth, Liu et al. [117] proposed a ﬁne-grained access control scheme; however,\
    \ they\nadopted online/ofﬂine CP-ABE to make resource-constrained devices in mobile\
    \ cloud\ncomputing perform ﬁne-grained data sharing. Based on the online/ofﬂine\
    \ cryptography, a\ndata owner can generate ofﬂine ciphertext before the data and\
    \ access policy to be encrypted\nare known. The ofﬂine ciphertext which consumed\
    \ a majority of computing power is then\nused to assemble the ﬁnal ciphertext\
    \ when the data and access policy are known.\nFifth, Li et al. [118] proposed\
    \ a new ABE scheme for ﬁne-grained access control\nframework based on uniﬁed access\
    \ policy generated from multiple access policies of\nInt. J. Environ. Res. Public\
    \ Health 2021, 18, 9668\n32 of 47\npatients’ various e-health data. The proposed\
    \ scheme improves the efﬁciency of encryption\nand decryption by combining encryption\
    \ of different patients’ data that share common\naccess policy to eliminate repetitive\
    \ processes.\nIn addition to the ABE-based ﬁne-grained access control schemes,\
    \ Gope et al. [119]\ndesigned an access control model that can cover diverse situations\
    \ including break-the-\nglass (i.e., emergency case) without compromising security\
    \ to share e-health data based on\nRBAC and mandatory access control (MAC) policy.\
    \ They speciﬁcally argued the access\ncontrol model for e-health data should not\
    \ compromise security even in an emergency\nbecause a user can misuse the break-the-glass\
    \ situation for malicious purposes. To this\nend, this study considered the situations\
    \ into the access control mechanism by proposing\na situation controller that\
    \ measures a patient’s situation according to the pre-deﬁned\nsituation types\
    \ (i.e., normal, critical, emergency, and super emergency) so that it can control\n\
    access depending on the situations.\nFurthermore, three studies have focused on\
    \ access policy in terms of privacy [120],\ntransformation [121], and updating\
    \ [122]. Ying et al. [120] designed a concealing algorithm\nof access policy,\
    \ that can also recover hidden attributes to provide privacy regarding\nthe access\
    \ policy. To hide the access policy, they used a linear secret sharing scheme\n\
    (LSSS) and proposed an element ﬁlter, Attribute Cuckoo Filter (ACF), to match\
    \ whether\ngiven attributes are in the anonymized access policy. Rezaeibagha et\
    \ al. [121] proposed a\nsecure and privacy-preserving e-health data sharing scheme\
    \ in hybrid cloud computing\nenvironments by transforming access policy from a\
    \ private cloud to a public cloud. For\nthe transformation, attribute-based proxy\
    \ re-encryption was used. Lastly, Ying et al. [122]\nproposed a method to update\
    \ access policy in the outsourced ciphertext of e-health data in\ncloud computing.\
    \ Conventional CP-ABE needs to re-encrypt entire e-health data when an\naccess\
    \ policy for the data is changed, whereas the proposed scheme changes only a part\
    \ of\nthe ciphertext using LSSS if an access policy is updated.\nLast but not\
    \ least, Wang et al. [123] and Saha et al. [124] proposed fog computing-\nenabled\
    \ access control schemes to protect e-health data. In more speciﬁc, Wang et al.\
    \ [123]\nused an access controller that controls access based on the task types\
    \ and pre-deﬁned\nprivacy levels, and Saha et al. [124] controlled access using\
    \ identity token generated using\nthe ABE scheme. They employed fog computing\
    \ to reduce communication costs and\nresponse time between medical devices and\
    \ the server.\nProvable data possession and proofs of retrievability. Cloud storage\
    \ is a semi-trust\nmodel, that is, an honest-but-curious model, so some security\
    \ concerns have emerged for\ncloud computing. Generally, a user who outsources\
    \ e-health data to the cloud cannot be\naware of the data’s status. In other words,\
    \ data stored in the cloud can be altered or deleted\nwithout the data owner’s\
    \ consent. To solve the problem of public veriﬁability, provable\ndata possession\
    \ (PDP), which is a technique for checking the integrity of outsourced data,\n\
    and proofs of retrievability (PoR), which is a technique that allows the owner\
    \ to check the\nretrievability of the data, have been studied. Figure 10 shows\
    \ a brief overview of PDP\nand PoR.\nFigure 10. Overview of PDP and PoR.\nIn PDP\
    \ (Figure 10a), a user requests a challenge to the cloud to check the integrity\n\
    of their e-health data. The cloud that received the challenge request then computes\
    \ the\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n33 of 47\nproof of\
    \ possession (P) and sends this to the user. Finally, the user who requested the\
    \ P can\nverify the integrity of their e-health data by comparing the P with the\
    \ metadata that the\nuser stored locally when they outsourced their data to the\
    \ cloud [125]. PDP is an efﬁcient\nscheme to verify the integrity of outsourced\
    \ data, because the user does not need to store\nor verify all of their data.\
    \ On the other hand, PoR (Figure 10b) encrypts data and randomly\nembeds a set\
    \ of randomly valued check blocks (i.e., sentinels). The user challenges the\n\
    cloud by specifying the positions of a set of sentinels and requesting that the\
    \ cloud respond\nto the sentinel values [126]. Based on the sentinels, the user\
    \ can check the availability and\nintegrity of the outsourced e-health data without\
    \ downloading all of their data.\nThere are studies that propose a scheme that\
    \ supports public veriﬁability for the\noutsourced data in cloud-based on PDP\
    \ and/or PoR. Wang et al. [127] proposed an identity-\nbased data outsourcing\
    \ (IBDO) to provide integrity and comprehensive auditing. In\nthe scheme, a user\
    \ or an authorized proxy can outsource data in the cloud with their\nidentities.\
    \ This is efﬁcient for multi-user environments because it does not depend on\n\
    the complex cryptographic certiﬁcates to identify the clients. In addition, the\
    \ origin,\ntype, and consistency of the outsourced data can be publicly veriﬁed\
    \ using the proposed\nscheme. Fan et al. [128] then proposed a privacy-preserving\
    \ identity-based auditing\nscheme. This scheme enables users to share e-health\
    \ data with others while it keeps the\nprivate information invisible to the cloud\
    \ and others including malicious cloud manager\nwho has high privileges. Lastly,\
    \ Shi et al. [129] proposed a certiﬁcateless provable data\npossession (CL-PDP)\
    \ scheme that provides public veriﬁability and complete anonymity. In\nparticular,\
    \ the proposed scheme can prevent the key escrow problem since it is based on\n\
    certiﬁcateless public-key cryptography, and it is efﬁcient because it eliminates\
    \ the bilinear\npairing operations which need high computational cost.\nBlockchain\
    \ A blockchain ensures data integrity and accountability by recording every\n\
    transaction in a distributed ledger; this has been widely adopted to securely\
    \ store and share\ne-health data. To provide a secure sharing scheme, studies\
    \ have combined a blockchain\nwith other security solutions, that is, access control\
    \ [130], searchable encryption [131],\nECC [132], and Tor [133]. Details on these\
    \ studies follow below.\nNguyen et al. [130] proposed a sharing framework for\
    \ e-health data in mobile cloud\ncomputing by combining blockchain and decentralized\
    \ interplanetary ﬁle system (IPFS)\nwhich is a solution to realize a ﬁle sharing\
    \ platform in blockchain [134]. Especially, they\ndesigned an access control mechanism\
    \ using smart contracts of blockchain to securely\nshare e-health data. However,\
    \ data conﬁdentiality may not be ensured since EHR manager\nwhere manages the\
    \ encryption and decryption keys of stored e-health data cannot be\nfully trusted.\
    \ Then, Wang et al. [131] proposed a blockchain-based privacy-preserving\ne-health\
    \ data sharing scheme using searchable encryption and proxy re-encryption. By\n\
    using the proposed scheme, a user can search required data then receive the data\
    \ under\nthe owner’s authorization. In the study, the cloud is used to store ciphertext\
    \ of e-health\ndata and re-encrypt the ciphertext for sharing, and blockchain\
    \ is used to store keyword\nciphertext required to search and share the data.\
    \ This scheme however cannot fully ensure\nthe owner’s data ownership because\
    \ of the data provider that uploads the data to the\ncloud server instead of the\
    \ owner. Therefore, Omar et al. [132] proposed a user-centric\ne-health data management\
    \ system that a user has full ownership of the data based on ECC.\nIn other words,\
    \ only the data owner can control access to the data since the owner manages\n\
    the encryption key. Similarly, Rahman et al. [133] proposed a blockchain-based\
    \ secure\ntherapy framework that provides e-health data integrity, privacy, ownership,\
    \ and sharing.\nHowever, compared with other works, they employed mobile edge\
    \ computing (MEC) and\nTor. The framework reduced network latency by means of\
    \ MEC and supported anonymity\nusing the Tor.\nDecoy. A decoy technique, also\
    \ known as a honeypot, can be used to lure intruders.\nIf an intruder touches\
    \ a decoy, it is closely monitored so that a security manager can detect\nthe\
    \ intrusion and prevent subsequent attacks. A good decoy should provide detectability,\n\
    conspicuousness, believability, enticement, differentiability, and non-interference\
    \ [135].\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n34 of 47\nThe decoy\
    \ should ﬁrst be easily detectable and accessible, and then seem authentic and\n\
    attractive to attackers; at the same time, it should be differentiable and non-interfering\n\
    to ensure that naive users do not use it. In a real scenario, a decoy can be e-health\
    \ data\nin the cloud to detect intrusions and prevent attacks. Al Hamid et al.\
    \ [136] proposed a\nsecurity model utilizing a decoy technique to protect big\
    \ medical data in the cloud using\nfog computing. In the proposed security model,\
    \ the fog computing facility in front of the\ncloud generates a decoy e-health\
    \ data then shows it to an attacker who accesses the system.\nTable 6 shows a\
    \ summary of the security and privacy studies on edge, fog, and\ncloud computing.\n\
    Table 6. Summary for the security and privacy studies on edge, fog, and cloud\
    \ computing.\nRef.\nTarget Security\nConcern\nTarget Security\nRequirement\nSecurity\
    \ Solution\nStrength\nWeakness\n[92]\n- Data disclosure\n- Conﬁdentiality\n- Authenticity\n\
    - Identity-based\nencryption\n- Proxy re-encryption\nEfﬁcient identity-based\n\
    cryptographic schemes were\nproposed and adopted in a\nmedical domain to provide\n\
    implicit authentication of the\npublic key and simple\ncertiﬁcate management\n\
    There is a key escrow\nproblem because it uses\na centralized server\n[93]\n-\
    \ Unauthorized access\n- Data disclosure\n- Malicious insider\n- Access restriction\n\
    - Conﬁdentiality\n- File hierarchy CP-ABE\nConsidered ﬁle hierarchy in\nthe CP-ABE\
    \ for efﬁcient\nencryption in terms of storage\nand time cost\nPairing operations\n\
    consume high\ncomputing power\n[94]\n- Unauthorized access\n- Data disclosure\n\
    - Access restriction\n- Conﬁdentiality\n- IBE\n- CP-ABE\nA patient-controlled\
    \ CP-ABE\nscheme was proposed\nconsidering emergency\nsituations\nIdentity authority\
    \ has\nthe capability to\ngenerate an emergency\nkey to decrypt a\npatient’s data,\
    \ which\ncould be compromised\nby an attacker or abused\nby an insider.\n[95]\n\
    - Unauthorized access\n- Data disclosure\n- Access restriction\n- Conﬁdentiality\n\
    - Anonymity\n- Authenticity\n- CP-ABE\n- Signcryption\n- Access control\nPromising\
    \ cryptographic\ntechnology, CP-ABSC, was\nproposed for ﬁne-grained\naccess control\
    \ allowing the\nsecure sharing of e-health\ndata in cloud computing\nRevocation\
    \ scheme of a\nuser and attributes\nshould be considered\nand Rao claimed that\
    \ it\ncannot provide\nconﬁdentiality [76]\n[96]\n- Unauthorized access\n- Data\
    \ disclosure\n- Access restriction\n- Conﬁdentiality\n- Anonymity\n- Authenticity\n\
    - Integrity and public\nveriﬁability\n- CP-ABE\n- Signcryption\n- Access control\n\
    The proposed CP-ABSC also\nsupports signcryptor privacy\nand public veriﬁability,\
    \ which\nare important security\nrequirements in cloud\nenvironments\nA high computation\
    \ cost\nis required for\ndesigncryption because\nof the pairing operations\n[99]\n\
    - Data breach\n- DoS attack\n- Single point of failure\n- Conﬁdentiality\n- Availability\n\
    - Anonymity\n- Flexibility\n- Scalability\n- Homomorphic\nencryption\nA hybrid\
    \ secure sharing\nscheme for e-health data is\nconsidered to cover both the\n\
    advantages of centralized and\ndecentralized approaches\nCollusion attacks\nbetween\
    \ cloud providers\nand users should be\nconsidered\n[103]\n- Unauthorized access\n\
    - Data breach\n- Eavesdropping\n- Access restriction\n- Conﬁdentiality\n- Searchable\
    \ encryption\n- Proxy re-encryption\nThe proposed SE scheme\nallows a patient\
    \ to delegate\naccess permissions to others\nto search and decrypt the\npatient’s\
    \ data, which is\nautomatically revoked after a\ntime limit\nAccess permissions\
    \ are\nrevoked after the time\nlimit expires; however,\nthe delegatee can use\
    \ the\ndata since they have\nalready obtained it in\nplaintext by decrypting\n\
    the data within the time\nlimit\n[104]\n- Unauthorized access\n- Data breach\n\
    - Eavesdropping\n- Access restriction\n- Conﬁdentiality\n- Integrity\n- Searchable\
    \ encryption\n- Homomorphic\nencryption\nThe proposed scheme can\nperform privacy-preserving\n\
    data sharing with key range\nsearch and multiple keyword\nsearch in e-health systems\n\
    A post management\nscheme for e-health data\nmay be required after\nsearching\
    \ and using the\ndata\n[105]\n- Unauthorized access\n- Data breach\n- Single point\
    \ of failure\n- Access restriction\n- Conﬁdentiality\n- Integrity\n- Authenticity\n\
    - Accountability\n- Searchable encryption\n- Blockchain\nA searchable encryption\n\
    scheme was used with the\nblockchain to provide\nintegrity, anti-tampering, and\n\
    accountability for e-health\ndata sharing\nSince the data are stored\nin the public\
    \ cloud, it\nmay require additional\nsecurity solutions for the\ndata\nInt. J.\
    \ Environ. Res. Public Health 2021, 18, 9668\n35 of 47\nTable 6. Cont.\nRef.\n\
    Target Security\nConcern\nTarget Security\nRequirement\nSecurity Solution\nStrength\n\
    Weakness\n[106]\n- Unauthorized access\n- Data breach\n- Access restriction\n\
    - Conﬁdentiality\n- Searchable encryption\n- Order-preserving\nsymmetric encryption\n\
    An efﬁcient query over\nmultiple data providers’ data\nThe cloud is required\n\
    since the proposed\nscheme may not be\nsuitable for\nresource-limited devices\n\
    (e.g., smartphones)\n[107]\n- Unauthorized access\n- Data breach\n- Eavesdropping\n\
    - Access restriction\n- Anonymity\n- Authenticity\n- Resistance to\nnetwork attacks\n\
    - Mutual authentication\nA mutual authentication\nscheme for telecare systems\n\
    providing patient anonymity\nThe time required for\nmutual authentication is\n\
    slower than the base\nscheme [114]\n[108]\n- Unauthorized access\n- Data breach\n\
    - Malicious insider\n- Eavesdropping\n- Access restriction\n- Anonymity\n- Authenticity\n\
    - Accountability\n- Resistance to\nnetwork attacks\n- Mutual authentication\n\
    - Secret sharing\nProposes privacy-preserving\nmutual authentication for\nmobile\
    \ edge-cloud\narchitecture\nThe communication cost\nshould be reduced for\nresource-constrained\n\
    medical networks such\nas IoMTs and WBANs\n[109]\n- Unauthorized access\n- Data\
    \ breach\n- Malicious insider\n- Eavesdropping\n- Access restriction\n- Anonymity\n\
    - Authenticity\n- Resistance to\nnetwork attacks\n- Mutual authentication\n- Blockchain\n\
    The proposed scheme is\nsuitable for big e-health data\nbecause of its cost-efﬁciency\n\
    More practical security\nthreats to the proposed\nscheme are identiﬁed\nand analyzed\n\
    [110]\n- Unauthorized access\n- Data breach\n- Single point of failure\n- Network\
    \ attacks\n- Access restriction\n- Conﬁdentiality\n- Integrity\n- Resistance to\n\
    network attacks\n- Mutual authentication\n- Access control\nEdge computing is\
    \ utilized to\nsecurely provide local services\nto users in a certain area (e.g.,\n\
    a hospital)\nMore security concerns\nincluding location\ntracking attack, which\n\
    emerge when adopting\nhybrid computing,\nshould be discussed\n[111]\n- Unauthorized\
    \ access\n- Data breach\n- Eavesdropping\n- Access restriction\n- Anonymity\n\
    - Authenticity\n- Resistance to\nnetwork attacks\n- Anonymous\nauthentication\n\
    Complete privacy and\nanonymity are provided to\nusers from adversaries and an\n\
    authentication server\nTraceability may be\nconditionally provided\nwhen security\
    \ incidents\nhappen to track\nattackers\n[112]\n- Unauthorized access\n- Data\
    \ breach\n- Malicious insider\n- Eavesdropping\n- Access restriction\n- Anonymity\n\
    - Authenticity\n- Resistance to\nnetwork attacks\n- Traceable authentication\n\
    The proposed scheme\nprovides conditional identity\ntraceability and is efﬁcient\
    \ in\nterms of communication cost\nand energy for\nresource-constrained devices\n\
    Providing conditional\ntraceability might be\nabused; therefore, a\nprevention\
    \ method for\nsuch abuse is required\n[114]\n- Unauthorized access\n- Data breach\n\
    - Access restriction\n- Conﬁdentiality\n- Availability\n- Flexibility\n- Proxy\
    \ re-encryption\n- Access control\n- Trust and reputation\nThe proposed scheme\
    \ can\nprovide ﬂexible access control\nbased on trust and reputation,\neven when\
    \ the data owner is\nunavailable or cannot make\naccess decisions\nThe level of\
    \ trust and\nreputation might be\nambiguous factors to\ndecide access to highly\n\
    sensitive e-health data\n[115]\n- Unauthorized access\n- Data breach\n- Single\
    \ point of failure\n- Access restriction\n- Conﬁdentiality\n- Integrity\n- Availability\n\
    - Proxy re-encryption\n- Access control\n- Dynamic data auditing\nIt is suitable\
    \ for\nresource-constrained devices\nand solves the cloud\nreciprocity problem\n\
    User anonymity should\nbe considered\n[116]\n- Unauthorized access\n- Data breach\n\
    - Malicious insider\n- Network attacks\n- Access restriction\n- Conﬁdentiality\n\
    - Anonymity\n- Authenticity\n- Resistance to\nnetwork attacks\n- Authentication\n\
    - Access control\nIt is designed to be\nlightweight for\nresource-constrained\
    \ devices\nand the access control scheme\nConditional traceability\nmay be required\
    \ and the\ncloud provider can\nabuse the ability to\nmanage the group key\n[117]\n\
    - Unauthorized access\n- Data breach\n- Access restriction\n- Conﬁdentiality\n\
    - Online/ofﬂine CP-ABE\n- Access control\nAn efﬁcient online/ofﬂine\nCP-ABE scheme\
    \ is proposed\nfor resource-constrained\ndevices in mobile cloud\ncomputing\n\
    Bilinear pairings used in\nthe proposed scheme\npose a high cost that\nhinders\
    \ efﬁciency\n[118]\n- Unauthorized access\n- Data breach\n- Access restriction\n\
    - Conﬁdentiality\n- ABE\n- Access control\nAn efﬁcient ABE scheme is\nproposed\
    \ to reduce the time\nrequired to encrypt and\ndecrypt data that has the\nsame\
    \ access policy\nPrivacy for access\npolicies should be\nsupported\n[119]\n- Unauthorized\
    \ access\n- Data breach\n- Access restriction\n- Conﬁdentiality\n- Flexibility\n\
    - Scalability\n- Access control\nA ﬂexible access control\nmodel is proposed using\n\
    situation-based access policy\nMore ﬁne-grained access\ncontrol could be\nconsidered\
    \ with an\nattribute-based access\ncontrol model\nInt. J. Environ. Res. Public\
    \ Health 2021, 18, 9668\n36 of 47\nTable 6. Cont.\nRef.\nTarget Security\nConcern\n\
    Target Security\nRequirement\nSecurity Solution\nStrength\nWeakness\n[120]\n-\
    \ Unauthorized access\n- Data breach\n- Access restriction\n- Conﬁdentiality\n\
    - Anonymity\n- Integrity\n- CP-ABE\n- Access control\n- LSSS\nPrivacy for access\
    \ policy is\nensured by hiding the entire\naccess policy with attributes\nResource-constrained\n\
    medical devices are not\nsuitable for the proposed\nscheme since hiding the\n\
    access policy requires\ngreater costs\n[121]\n- Unauthorized access\n- Data breach\n\
    - Access restriction\n- Conﬁdentiality\n- Flexibility\n- Proxy re-encryption\n\
    - ABE\n- Access control\nA method to transform a\nprivate cloud’s access policy\n\
    to the access policy of a public\ncloud\nThe proposed scheme\nmight be implemented\n\
    to show feasibility,\nperformance, etc.\n[122]\n- Unauthorized access\n- Data\
    \ breach\n- Access restriction\n- Conﬁdentiality\n- CP-ABE\n- LSSS\nA method for\
    \ updating an\naccess policy in ciphertext\nthat reduces the\ncomputational cost\n\
    The proposed scheme\nincurs additional\noverhead to cloud\n[100]\n- Data breach\n\
    - Single point of failure\n- Conﬁdentiality\n- Scalability\n- Fully homomorphic\n\
    encryption\nE-health data can be securely\naggregated and monitored in\nreal-time\
    \ using edge\ncomputing\nA performance\nevaluation for the fully\nhomomorphic\n\
    encryption would be\nhelpful and show the\nfeasibility of the\nproposed framework\n\
    [123]\n- Unauthorized access\n- Data breach\n- Access restriction\n- Conﬁdentiality\n\
    - Access control\nFog computing is adopted to\nreduce the communication\ncost\
    \ of IoMTs\nThe access control may\nnot be sufﬁciently\nﬁne-grained for diverse\n\
    e-healthcare systems\n[124]\n- Unauthorized access\n- Data breach\n- Access restriction\n\
    - Conﬁdentiality\n- Integrity\n- ABE\n- Access control\nA consensus-based access\n\
    control scheme is proposed\nIf the number of nodes\nthat participate in the\n\
    consensus is insufﬁcient,\nan attacker could control\naccess to e-health data\n\
    [127]\n- Data breach\n- Integrity and public\nveriﬁability\n- Identity-based auditing\n\
    It provides comprehensive\nauditing in terms of data\norigin, type, and consistency\n\
    Dynamic data auditing\nis unsupported\n[128]\n- Data breach\n- Malicious insider\n\
    - Conﬁdentiality\n- Integrity and public\nveriﬁability\n- Authenticity\n- Identity-based\
    \ auditing\nA privacy-preserving\nidentity-based auditing\nscheme is proposed\n\
    A manager who may\nhave malicious purposes\ncan check whether\nprivate information\n\
    exists in the e-health\ndata\n[129]\n- Data breach\n- Conﬁdentiality\n- Integrity\
    \ and public\nveriﬁability\n- Anonymity\n- Certiﬁcateless PDP\nThe proposed scheme\
    \ is\nefﬁcient and can prevent the\nkey escrow problem\nThe true identity of a\n\
    malicious user or\nattacker may be\nidentiﬁed and traced for\naccountability\n\
    [130]\n- Unauthorized access\n- Data breach\n- Single point of failure\n- Access\
    \ restriction\n- Conﬁdentiality\n- Integrity\n- Availability\n- Accountability\n\
    - Flexibility\n- Access control\n- Blockchain\nThe proposed framework was\nimplemented\
    \ to show\nfeasibility based on Ethereum\nAn EHR manager\nmanages the keys to\n\
    decrypt e-health data;\ntherefore, it can be\nmisused or targeted by\nan attacker\n\
    [131]\n- Unauthorized access\n- Data breach\n- Single point of failure\n- Access\
    \ restriction\n- Conﬁdentiality\n- Integrity\n- Availability\n- Accountability\n\
    - Searchable encryption\n- Proxy re-encryption\n- Authentication\n- Access control\n\
    - Blockchain\nAn efﬁcient and reliable\nconsensus mechanism—proof\nof authorization—was\n\
    proposed for this system\nThe proposed scheme\ncannot ensure full\nownership of\
    \ outsourced\ne-health data since data\nproviders exist\n[132]\n- Unauthorized\
    \ access\n- Data breach\n- Single point of failure\n- Access restriction\n- Conﬁdentiality\n\
    - Integrity\n- Authenticity\n- Accountability\n- ECC\n- Access control\n- Blockchain\n\
    A user-centric e-health data\nmanagement system is\nproposed\nPermission delegation\n\
    for e-health data may be\nsupported to share\ne-health data and a user\nmust manage\
    \ the key\nthemself\n[133]\n- Unauthorized access\n- Data breach\n- Single point\
    \ of failure\n- Access restriction\n- Conﬁdentiality\n- Integrity\n- Availability\n\
    - Anonymity\n- Scalability\n- Blockchain\n- Tor\nA secure therapy application\n\
    utilizing MEC is proposed\nand implemented\nThe study did not\nprovide in-depth\n\
    security analysis for the\nproposed MEC-based\ntherapy application\n[136]\n- Unauthorized\
    \ access\n- Data breach\n- Access restriction\n- Conﬁdentiality\n- Authenticity\n\
    - ECC\n- Mutual authentication\n- Decoy\nA security model is proposed\nthat utilizes\
    \ a decoy technique\nin e-healthcare cloud using\nfog computing\nDiverse network\
    \ attacks\n(e.g., MIMT) should be\ndiscussed to prove that\nthe proposed key\n\
    agreement protocol is\nhighly secure\nInt. J. Environ. Res. Public Health 2021,\
    \ 18, 9668\n37 of 47\n7. Research Trend and Open Challenge\nWe reviewed recent\
    \ security and privacy studies for the modern e-health systems in\nterms of data,\
    \ device, network, and edge/fog/cloud computing. Based on the review, we\nidentiﬁed\
    \ recent research trends and open challenges for each component of the e-health\n\
    systems. Therefore, we discuss the research trends and challenges in this section.\n\
    7.1. E-Health Data\nRecent studies focused on designing a security solution that\
    \ can protect the data.\nMost studies adopted cryptography and anonymization techniques\
    \ for data conﬁdentiality,\nintegrity, anonymity, and secure sharing of e-health\
    \ data. In addition, they proposed\nefﬁcient security solutions to enhance the\
    \ security and privacy of conventional e-health\nsystems. Detailed descriptions\
    \ of the research trends are as follows.\nFast and efﬁcient encryption scheme\
    \ with high security. Data conﬁdentiality is the\nmost important security requirement\
    \ in the medical/healthcare research areas. Traditional\ncryptosystems such as\
    \ AES and RSA have been widely utilized to design secure e-health\nsystems; however,\
    \ a faster and more efﬁcient encryption/decryption scheme is particularly\nrequired\
    \ when dealing with large volumes of e-health data. Since e-health data are highly\n\
    sensitive, maintaining a tradeoff between the strength of encryption is a crucial\
    \ issue. For\nexample, several studies researched faster and more efﬁcient cryptographic\
    \ primitives or\nalgorithms for medical image security [27–29,75].\nSecuring e-health\
    \ data with a blockchain. E-health data can be lost, tampered, and\ndeleted. A\
    \ blockchain with a public and distributed ledger becomes a promising technol-\n\
    ogy to secure e-health data since it records all transactions related to the data.\
    \ In general,\nblockchains provide e-health data integrity with transparency,\
    \ auditability, and account-\nability; however, authentication, access control,\
    \ and other security applications such as\nsecure data sharing have been studied\
    \ based on smart contracts, which is a small program\non a blockchain. In addition,\
    \ studies have proposed efﬁcient schemes to reduce blockchain\ntransaction fees.\n\
    Privacy-preserving sharing of e-health data with data anonymization. Sharing e-\n\
    health data is an emerging trend for several purposes such as remote care of individuals\n\
    and studying big e-health data. To preserve privacy while sharing e-health data,\
    \ data\nanonymization models such as k-anonymity, l-diversity, t-closeness, and\
    \ differential privacy\nhave been widely adopted in medical and healthcare research\
    \ areas. Regarding this research\ntopic, Zhang et al. [137] speciﬁcally studied\
    \ on the security and privacy requirements and\nrisks of medical data sharing\
    \ based on blockchain.\nVarious studies for security and privacy of e-health data\
    \ have been conducted; how-\never, there are still some open challenges. In particular,\
    \ re-identiﬁcation prevention of\nanonymized data is an important research area\
    \ since anonymized data can be re-identiﬁed,\nand data anonymization is the essential\
    \ technique when e-health data should be shared.\nThe detailed open challenges\
    \ are as follows.\nMore efﬁcient and faster cryptosystem. Though fast and efﬁcient\
    \ cryptosystems\nhave been studied, more efﬁcient and faster cryptosystems will\
    \ be required as e-health\ndata has become diversiﬁed and increased with emerging\
    \ smart healthcare devices and\nservices. Servers and aggregators of the e-health\
    \ systems in particular need efﬁcient, fast,\nand lightweight cryptosystems to\
    \ provide data conﬁdentiality with high scalability even in\nresource-constrained\
    \ environments such as WBANs and IoMTs. In addition, considering\nmedical imaging\
    \ may become important because the medical imaging process accounts for\n90% of\
    \ all medical information processes [39].\nResistance to re-identiﬁcation. Data\
    \ anonymization is an essential technique to\npreserve privacy when e-health data\
    \ are shared with someone. However, existing data\nanonymization techniques could\
    \ be broken by some re-identiﬁcation attacks. For example,\nRocher et al. [138]\
    \ recently proposed a model that can precisely estimate the re-identiﬁcation\n\
    likelihood of a speciﬁc person, even in an incomplete dataset. Data anonymization\
    \ tech-\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n38 of 47\nniques\
    \ will be evaluated on diverse datasets and attacks to prove that techniques can\n\
    provide complete privacy preservation under any circumstances.\nEmergent access\
    \ to patient’s data. Access control for e-health data is an indispens-\nable security\
    \ solution to prevent unauthorized access to patients’ e-health data. Only\nauthenticated\
    \ and authorized users should be able to access the data by means of access\n\
    control. However, medical staff may need to access patients’ data in an emergency,\
    \ despite\nthe data being highly conﬁdential and the staff normally lacking access\
    \ permission. This\nfunctionality is prominent since it can be directly related\
    \ to a patient’s health condition and\nlife in an emergency.\n7.2. Medical Device\n\
    Conventional security solutions cannot be applied to medical devices because of\n\
    the limited resources. Therefore, recent research trends for the security and\
    \ privacy of\nmedical devices are focused on efﬁcient security solutions or a\
    \ method that can alleviate\nthe resource constraint problem. Three research trends\
    \ for medical devices are as follows.\nOnline authentication. Online authentication\
    \ is required when a doctor need to\nremotely access and monitor a medical device\
    \ in an emergency situation. A secure channel\nshould be established for the online\
    \ authentication because it needs to access the device\nover the Internet. However,\
    \ this scheme has the disadvantage that the Internet must be\nconnected for authentication,\
    \ which may not always be available [10].\nProxy-based security. A proxy server\
    \ that supports security capabilities such as\ncryptography, authentication, and\
    \ access control can be used between medical devices\nand external devices because\
    \ medical devices lack the resources. Security solutions, such\nas IMD-Shield\
    \ and IMDGuard, enhanced the security of existing medical devices in the\nmiddle\
    \ of the communications [14,139,140] based on the proxy.\nLow-power and zero-power\
    \ security solutions. Security is not an essential part of\nthe function of medical\
    \ devices; however, it must be considered to secure medical devices\nand their\
    \ e-health data. The problem is that security solutions have high energy demands\n\
    for devices. Therefore, low-power and zero-power security solutions were studied\
    \ to\nresolve the resource constraint problem of medical devices [10]. Based on\
    \ the low-power\nor zero-power security solutions, a medical device can work securely\
    \ for longer.\nAccording to our survey, there are insufﬁcient studies for the\
    \ security and privacy of\nmedical devices; therefore, huge effort to research\
    \ the security and privacy for the modern\nmedical devices is required in the\
    \ near future. The open challenges are as follows.\nResource constraint of medical\
    \ devices. Medical devices have limited resources such\nas low computing power,\
    \ battery, and memory capacity; therefore, security solutions for\nmedical devices\
    \ should be designed with consideration of their constrained resources. To\nprovide\
    \ minimum security requirements for medical devices, efﬁcient and lightweight\n\
    security solutions for cryptographic primitives, encryption algorithms, authentication,\
    \ and\naccess control must be studied. As the demand for medical devices increases,\
    \ efﬁcient and\nlightweight security solutions for medical devices will become\
    \ more important.\nSecurity and privacy by design. Networked medical devices have\
    \ been newly de-\nveloped to support modern e-healthcare services. Therefore,\
    \ the security concerns and\nrequirements for medical devices have not been sufﬁciently\
    \ studied and conventional\nsecurity solutions are not suitable for medical devices\
    \ because of their characteristics. To\nimprove security and reliability, security\
    \ and privacy by design are required to identify\nand adopt optimal security solutions\
    \ for medical devices and their sensitive e-health data\nby studying their major\
    \ security concerns and requirements.\nTrust management. Medical devices that\
    \ sense a patient’s health condition should\nmanage the trust. It is important\
    \ to provide a certain level of trust because doctors’\ndiagnoses that can affect\
    \ patients’ health can differ depending on the sensed health infor-\nmation [3].\
    \ In particular, in the case of patients in critical condition, their medical\
    \ devices\nmust provide a high level of trust.\nInt. J. Environ. Res. Public Health\
    \ 2021, 18, 9668\n39 of 47\nEmergent access to medical devices. One important\
    \ challenge for medical devices is\nthe capability of emergent access to medical\
    \ devices [12,141]. Basically, strict authentication\nand authorization are required\
    \ to protect the security of medical devices; however, medical\nstaff should be\
    \ able to access patients’ medical devices in an emergency if patients are\nunavailable\
    \ or lose consciousness. This functionality is critical by dint of being directly\n\
    related to the patients’ life.\n7.3. Medical Network\nTo provide security and\
    \ privacy for e-health data with limited resources, security\nsolutions in the\
    \ surveyed studies have generally been focused on efﬁciency and simplicity.\n\
    Detailed research trends for the security and privacy of the medical networks\
    \ are as follows.\nEfﬁcient and secure transmission. Most security and privacy\
    \ studies applied cryp-\ntography to provide data conﬁdentiality and integrity,\
    \ which are the most important\nrequirements when transmitting e-health data via\
    \ a medical network. Meanwhile, ef-\nﬁciency should also be considered, since\
    \ medical networks are resource-constrained in\nterms of computational costs,\
    \ bandwidth, energy constraints, and so forth. Signcryption,\nonline/ofﬂine encryption,\
    \ compressive sensing, and batch operation are representative\ntechniques to improve\
    \ efﬁciency in the medical network research area.\nPrivacy-preserving data aggregation\
    \ with homomorphic encryption. Once e-health\ndata has been encrypted, only legitimate\
    \ participants such as the data owner and medical\nstaff must be able to decrypt\
    \ the data. However, there is a case that needs to decrypt\ne-health data where\
    \ the data has been aggregated and processed in the middle of the\nnetwork. In\
    \ this case, most studies adopted homomorphic encryption to protect data\nconﬁdentiality\
    \ by computing on ciphertext directly. In other words, sensitive e-health data\n\
    can be processed without data decryption by means of homomorphic encryption. The\n\
    studies utilized several cryptosystems that have the homomorphic property (e.g.,\
    \ ElGamal,\nPaillier, and Boneh–Goh–Nissim).\nCertiﬁcateless cryptography techniques.\
    \ Public-key cryptography is required to pro-\nvide authenticity and non-repudiation;\
    \ however, conventional public-key infrastructure\nhas some shortcomings such\
    \ as the key escrow problem and complex certiﬁcate man-\nagement. Therefore, certiﬁcateless\
    \ public-key cryptography has been utilized in various\nstudies to eliminate both\
    \ the key escrow problem and certiﬁcate management. In the\nsurveyed studies,\
    \ certiﬁcateless cryptography techniques were combined with diverse\nsecurity\
    \ solutions such as authentication, signature, and signcryption.\nMutual authentication.\
    \ Mutual authentication is essential to ensure that e-health\ndata are transmitted\
    \ from the right patient and is received by the desired medical staff.\nFor example,\
    \ mutual authentication is required to ensure the integrity of a patient’s e-\n\
    health data and the doctor’s prescription in a remote e-healthcare service. If\
    \ the patient’s\ndata or doctor’s prescription has been compromised, this can\
    \ lead to a critical situation.\nAccording to our survey, authentication studies\
    \ in the medical network research area\nwere generally categorized into lightweight\
    \ authentication schemes that are efﬁcient for\nresource-constrained environments\
    \ and anonymous authentication schemes that focus on\nprivacy preservation during\
    \ the authentication process.\nSince medical networks transmit e-health data,\
    \ strong security solutions should be\napplied. However, existing strong security\
    \ solutions cannot be directly adopted because\nof the limited resources of medical\
    \ networks. Maintaining a reasonable tradeoff between\nthe strength and efﬁciency\
    \ of the security solution, therefore, is the main challenge in the\nmedical network\
    \ research area. Open challenges for the security and privacy of the medical\n\
    network areas are as follows.\nResource constraint. Conventional security solutions\
    \ cannot be directly applied to\nmedical networks such as WBANs and IoMTs since\
    \ they are resource-constrained in terms\nof computing power, memory capacity,\
    \ and bandwidth. Although resources are limited,\nsecurity solutions such as cryptography\
    \ and authentication are indispensable for network\nsecurity. Efﬁcient security\
    \ solutions have been studied; however, it remains difﬁcult to\nInt. J. Environ.\
    \ Res. Public Health 2021, 18, 9668\n40 of 47\nprovide sufﬁcient security and\
    \ reliability for highly sensitive e-health data with limited\nresources compared\
    \ to other environments. Making a better tradeoff between security and\nefﬁciency\
    \ is a challenging problem.\nConditional privacy preservation. Patient privacy\
    \ must be preserved. The identities\nof patients in medical networks are anonymous\
    \ so that adversaries cannot specify patients’\nreal identities. However, a user’s\
    \ real identity should be discernible in some cases so that a\ntrusted provider\
    \ can trace them. Based on this traceability, an adversary who has malicious\n\
    purposes can be identiﬁed by a trusted server. To this end, Ji et al. [60] and\
    \ Yang et al. [63]\ndesigned a conditional identity preservation scheme; however,\
    \ some studies argued that\nidentities must be anonymous in any circumstances\
    \ to provide untraceability. Despite\nhaving the advantage that an adversary or\
    \ malicious user can be traced, a conditional\nprivacy-preserving scheme also\
    \ has the disadvantage that an insider can abuse its function-\nality. In the\
    \ near future, the tradeoff between the advantages and disadvantages should\n\
    be studied in detail. In addition, an abuse prevention scheme should be studied\
    \ for the\nconditional privacy-preserving function.\n7.4. Edge, Fog, and Cloud\n\
    Based on the sufﬁcient resources, security and privacy studies that deploy edge,\n\
    fog, and cloud computing have focused on useful functionalities such as secure\
    \ data\noutsourcing and sharing. Detailed descriptions for the research trends\
    \ on the edge, fog and\ncloud computing are as follows.\nSecure outsourcing. A\
    \ cloud-based service provider is an honest-but-curious model.\nThat is, although\
    \ it follows the security protocols and solutions, it could also extract some\n\
    private information during the process. Therefore, outsourcing e-health data to\
    \ a cloud-\nbased service provider must be secure and transparent. The data owner\
    \ must be able to\ncheck the integrity of the outsourced data because it could\
    \ be altered and deleted in the\ncloud. Efﬁcient and comprehensive data auditing\
    \ schemes that provide public veriﬁability\nsuch as PDP and PoR will become more\
    \ important as the use of cloud-based healthcare\nservices increases.\nSecure\
    \ sharing of e-health data. E-healthcare systems collect individuals’ e-health\n\
    data. Nowadays, big e-health data are considered a valuable resource for diverse\
    \ purposes.\nThe e-health data both provide personalized healthcare services (e.g.,\
    \ remote health condi-\ntion monitoring, diagnosis, and treatment) and can be\
    \ used to study diseases. To this end,\nsecurity and privacy must be required\
    \ to share highly sensitive e-health data. The data\nrequester (e.g., a patient)\
    \ and receiver (e.g., a doctor) must be authenticated and authorized\nand certain\
    \ cryptography schemes such as proxy re-encryption, attribute-based encryption,\n\
    and searchable encryption were used to securely share data. In addition, blockchain\
    \ is a\npromising security solution to ensure data integrity and accountability,\
    \ which are important\nsecurity requirements for e-health data sharing.\nFine-grained\
    \ access control using attribute-based encryption. The cloud is mostly\nused to\
    \ store e-health data; therefore, it is inevitable that the cloud will store big\
    \ e-health\ndata. In state-of-the-art studies, ﬁne-grained access control schemes\
    \ have been widely\nproposed to protect e-health data based on ABE. Since ABE\
    \ encrypts and decrypts data\nwith diverse attributes, it is very ﬂexible in terms\
    \ of realizing ﬁne-grained access control.\nMoreover, recent studies have adopted\
    \ additional security solutions such as blockchain,\ntrust management, dynamic\
    \ auditing, and online/ofﬂine cryptography schemes to support\nvarious security\
    \ requirements.\nVarious studies have been conducted, however, there are some\
    \ open challenges that\nshould be solved in the near future. In particular, as\
    \ e-health service providers increase,\na need for secure data sharing and interoperability\
    \ between the providers have been\nincreasingly grown. The rest of this section\
    \ presents the open challenges.\nImprovement of usability for secure data sharing.\
    \ Recently, secure data sharing\nstudies have been conducted, and a service that\
    \ shares e-health data has been launched.\nHowever, it still lacks usability because\
    \ of security and privacy concerns. For example, the\nInt. J. Environ. Res. Public\
    \ Health 2021, 18, 9668\n41 of 47\nHealthcare Big Data Platform [4], a South Korean\
    \ e-health data sharing service, has been\nlaunched for the public use of patients’\
    \ health data; however, it takes a long time to use\nthe data because of complex\
    \ request processes that consist of eight phases. In addition,\nresearchers can\
    \ request just limited data that is registered in the data catalog; therefore,\n\
    enhancing the usability of sharing e-health data, while ensuring the security\
    \ and privacy\nof data, is a challenging problem.\nSecure interoperability among\
    \ multiple e-health data providers. As e-healthcare\nservices increase, patients’\
    \ e-health data have been widely distributed in various service\nproviders. In\
    \ a real scenario, data can be distributed despite belonging to the same patient\n\
    because a patient can use various service providers. Therefore, secure interoperability\n\
    among multiple data providers is required to provide user-centric data governance\
    \ for\ndistributed data. In other words, users should be able to search, use,\
    \ and manage their\ndistributed data across heterogeneous data providers based\
    \ on secure interoperability.\nTo this end, end-to-end security and mutual authentication\
    \ must be established among\nproviders and other security solutions including\
    \ ﬁne-grained access control and access\npolicy translation should be studied\
    \ with the consideration of newly emerging security\nconcerns and requirements\
    \ for secure interoperability.\nComplete and conditional anonymity. E-health data\
    \ and user identities should be\nanonymized depending on the situation. To this\
    \ end, some studies provide complete\nanonymity in which data cannot be identiﬁed\
    \ in any situation, while other studies pro-\nvide conditional anonymity where\
    \ data can be identiﬁed in a special situation. There is\ncontroversy among researchers\
    \ over whether anonymity must not be breached in any\ncase or conditional anonymity\
    \ is required in a few cases to identity attackers. The two\ntypes of anonymization\
    \ studies have different advantages: strong privacy, and conditional\ntraceability,\
    \ respectively; however, complete anonymity cannot provide traceability while\n\
    conditional anonymity cannot provide a high level of privacy since identities\
    \ can be re-\nvealed. Therefore, ﬁnding anonymization schemes that can provide\
    \ high privacy while\nconsidering traceability is an open challenge.\nIn-depth\
    \ security analysis for edge and fog computing. Storing and processing e-\nhealth\
    \ data in cloud computing are prominent research trends; however, edge and fog\n\
    computing paradigms have been emerging because of the latency-sensitive and context-\n\
    awareness requirements [142,143]. In particular, edge and fog computing can be\
    \ utilized\nto develop real-time medical services that support space- and time-awareness\
    \ and can\nalso preprocess and analyze e-health data in a secure and private manner\
    \ to reduce the\ncommunication cost between medical devices and the cloud. Since\
    \ the edge and fog\ncomputing paradigms have recently been integrated into modern\
    \ e-healthcare systems,\nin-depth security analysis that considers real e-healthcare\
    \ scenarios will be required in the\nnear future to identify new types of security\
    \ concerns and requirements.\nA lack of open-source-based edge, fog, and cloud\
    \ computing platforms. According\nto our survey, few studies have implemented\
    \ the proposed security solutions based on\nreal edge, fog, and cloud environments.\
    \ The implementation of security solutions based\non real environments would be\
    \ valuable work to demonstrate their feasibility and real\nperformance; however,\
    \ it is difﬁcult to build environments based on edge, fog, and cloud\ncomputing.\
    \ Therefore, building open-source-based platforms for edge, fog, and cloud\ncomputing\
    \ that can simply be used to implement and evaluate the proposed security\nsolutions\
    \ remains an open challenge.\n8. Conclusions\nInnovations in e-health systems\
    \ present a double-edged sword. Although they provide\nadvanced healthcare services,\
    \ there are increasing security concerns with regard to e-health\ndata, which\
    \ is highly sensitive information. Therefore, we have surveyed recent studies\n\
    on security and privacy issues related to e-health data according to the target\
    \ domains,\nthat is, e-health data, medical devices, medical networks, and edge/fog/cloud\
    \ computing.\nIn this survey, we identiﬁed the security concerns and requirements\
    \ that are commonly\nInt. J. Environ. Res. Public Health 2021, 18, 9668\n42 of\
    \ 47\nmentioned in studies and provided promising security solutions. In particular,\
    \ based on\nthe literature review, we developed four taxonomies on the security\
    \ concerns, requirements,\nand solutions for each component of modern e-health\
    \ systems. Furthermore, we analyzed\nthe strengths and weaknesses of the surveyed\
    \ studies, and provided recent research trends\nand open challenges on security\
    \ and privacy for the e-health systems. Compared to\nother surveys, we comprehensively\
    \ reviewed the security and privacy issues for e-health\ndata including the surrounding\
    \ environments, that is, medical devices, medical networks,\nand edge/fog/cloud\
    \ computing. Finally, as e-health systems become more complex\nacross various\
    \ layers and data have been exchanged among different domains, secure\ninteroperability\
    \ among heterogeneous e-health systems should be speciﬁcally researched\nin the\
    \ near future.\nAuthor Contributions: The authors contributed to this paper as\
    \ follow: S.-R.O. wrote this article and\nand analyzed the research; E.L. and\
    \ Y.-D.S. performed checks of the manuscripts; Y.-G.K. supervised\nand coordinated\
    \ the investigation. All authors have read and agreed to the published version\
    \ of\nthe manuscript.\nFunding: This research was supported by a grant from the\
    \ Korea Health Technology R&D Project\nthrough the Korea Health Industry Development\
    \ Institute (KHIDI), funded by the Ministry of Health\n& Welfare, Republic of\
    \ Korea (grant number: HI18C1140).\nInstitutional Review Board Statement: Not\
    \ applicable.\nInformed Consent Statement: Not applicable.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nReferences\n1.\nHIPPA. Available\
    \ online: https://www.hhs.gov/hipaa/for-professionals/security/laws-regulations/index.html\
    \ (accessed on\n5 July 2021).\n2.\nGDPR. Available online: https://gdpr-info.eu/\
    \ (accessed on 5 July 2021).\n3.\nYaqoob, T.; Abbas, H.; Atiquzzaman, M. Security\
    \ vulnerabilities, attacks, countermeasures, and regulations of networked medical\n\
    devices—A review. IEEE Commun. Surv. Tutor. 2019, 21, 3723–3768. [CrossRef]\n\
    4.\nAvailable online: https://healthitsecurity.com/news/the-10-biggest-healthcare-data-breaches-of-2020-so-far\
    \ (accessed on\n5 July 2021).\n5.\nKruse, C.S.; Smith, B.; Vanderlinden, H.; Nealand,\
    \ A. Security techniques for the electronic health records. J. Med. Syst. 2017,\n\
    41, 127. [CrossRef]\n6.\nAbouelmehdi, K.; Beni-Hessane, A.; Khalouﬁ, H. Big healthcare\
    \ data: Preserving security and privacy. J. Big Data 2018, 5, 1.\n[CrossRef]\n\
    7.\nChen, Y. Ensuring privacy and security of genomic data and functionalities.\
    \ Brief. Bioinform. 2019, 21, 511–526.\n8.\nAziz, M.M.A.; Sadat, M.N.; Alhadidi,\
    \ D.; Wang, S.; Jiang, X.; Brown, C.L.; Mohammed, N. Privacy-preserving techniques\
    \ of\ngenomic data—A survey. Brief. Bioinform. 2019, 20, 887–895. [CrossRef] [PubMed]\n\
    9.\nZheng, G.; Shankaran, R.; Orgun, M.A.; Qiao, L.; Saleem, K. Ideas and challenges\
    \ for securing wireless implantable medical\ndevices: A review. IEEE Sens. J.\
    \ 2016, 17, 562–576. [CrossRef]\n10.\nWu, L.; Du, X.; Guizani, M.; Mohamed, A.\
    \ Access control schemes for implantable medical devices: A survey. IEEE Internet\n\
    Things J. 2017, 4, 1272–1283. [CrossRef]\n11.\nKintzlinger, M.; Nissim, N. Keep\
    \ an eye on your personal belongings! The security of personal medical devices\
    \ and their\necosystems. J. Biomed. Inform. 2019, 95, 103233. [CrossRef]\n12.\n\
    AlTawy, R.; Youssef, A.M. Security tradeoffs in cyber physical systems: A case\
    \ study survey on implantable medical devices.\nIEEE Access 2016, 4, 959–979.\
    \ [CrossRef]\n13.\nYaacoub, J.P.A.; Noura, M.; Noura, H.N.; Salman, O.; Yaacoub,\
    \ E.; Couturier, R.; Chehab, A. Securing internet of medical things\nsystems:\
    \ Limitations, issues and recommendations. Future Gener. Comput. Syst. 2020, 105,\
    \ 581–606. [CrossRef]\n14.\nSun, Y.; Lo, F.P.W.; Lo, B. Security and privacy for\
    \ the internet of medical things enabled healthcare systems: A survey. IEEE\n\
    Access 2019, 7, 183339–183355. [CrossRef]\n15.\nChenthara, S.; Ahmed, K.; Wang,\
    \ H.; Whittaker, F. Security and privacy-preserving challenges of e-health solutions\
    \ in cloud\ncomputing. IEEE Access 2019, 7, 74361–74382. [CrossRef]\n16.\nYüksel,\
    \ B.; Küpçü, A.; Özkasap, Ö. Research issues for privacy and security of electronic\
    \ health services. Future Gener. Comput.\nSyst. 2017, 68, 1–13. [CrossRef]\n17.\n\
    Wazid, M.; Zeadally, S.; Das, A.K.; Odelu, V. Analysis of security protocols for\
    \ mobile healthcare. J. Med. Syst. 2016, 40, 229.\n[CrossRef] [PubMed]\nInt. J.\
    \ Environ. Res. Public Health 2021, 18, 9668\n43 of 47\n18.\nRazaque, A.; Amsaad,\
    \ F.; Khan, M.J.; Hariri, S.; Chen, S.; Siting, C.; Ji, X. Survey: Cybersecurity\
    \ vulnerabilities, attacks and\nsolutions in the medical domain. IEEE Access 2019,\
    \ 7, 168774–168797. [CrossRef]\n19.\nKitchenham, B.; Brereton, O.P.; Budgen, D.;\
    \ Turner, M.; Bailey, J.; Linkman, S. Systematic literature reviews in software\n\
    engineering—A systematic literature review. Inf. Softw. Technol. 2009, 51, 7–15.\
    \ [CrossRef]\n20.\nAmato, F.; Casola, V.; Cozzolino, G.; De Benedictis, A.; Mazzocca,\
    \ N.; Moscato, F. A Security and Privacy Validation Methodology\nfor e-Health\
    \ Systems. ACM Trans. Multimed. Comput. Commun. Appl. (TOMM) 2021, 17, 67.\n21.\n\
    Dankar, F.K.; Badji, R. A risk-based framework for biomedical data sharing. J.\
    \ Biomed. Inform. 2017, 66, 231–240. [CrossRef]\n22.\nRajput, A.R.; Li, Q.; Ahvanooey,\
    \ M.T.; Masood, I. EACMS: Emergency access control management system for personal\
    \ health\nrecord based on blockchain. IEEE Access 2019, 7, 84304–84317. [CrossRef]\n\
    23.\nShahnaz, A.; Qamar, U.; Khalid, A. Using blockchain for electronic health\
    \ records. IEEE Access 2019, 7, 147782–147795. [CrossRef]\n24.\nXu, J.; Xue, K.;\
    \ Li, S.; Tian, H.; Hong, J.; Hong, P.; Yu, N. Healthchain: A blockchain-based\
    \ privacy preserving scheme for\nlarge-scale health data. IEEE Internet Things\
    \ J. 2019, 6, 8770–8781. [CrossRef]\n25.\nDaemen, J.; Rijmen, V. Reijndael: The\
    \ Advanced Encryption Standard. Dr. Dobb’S J. Softw. Tools Prof. Program. 2001,\
    \ 26, 137–139.\n26.\nRivest, R.L.; Shamir, A.; Adleman, L. A method for obtaining\
    \ digital signatures and public-key cryptosystems. Commun. ACM\n1978, 21, 120–126.\
    \ [CrossRef]\n27.\nElhoseny, M.; Ramírez-González, G.; Abu-Elnasr, O.M.; Shawkat,\
    \ S.A.; Arunkumar, N.; Farouk, A. Secure medical data\ntransmission model for\
    \ IoT-based healthcare systems. IEEE Access 2018, 6, 20596–20608. [CrossRef]\n\
    28.\nDzwonkowski, M.; Papaj, M.; Rykaczewski, R. A new quaternion-based encryption\
    \ method for DICOM images. IEEE Trans.\nImage Process. 2015, 24, 4614–4622. [CrossRef]\
    \ [PubMed]\n29.\nParvees, M.M.; Samath, J.A.; Bose, B.P. Secured medical images-a\
    \ chaotic pixel scrambling approach. J. Med. Syst. 2016, 40, 232.\n[CrossRef]\
    \ [PubMed]\n30.\nSei, Y.; Okumura, H.; Takenouchi, T.; Ohsuga, A. Anonymization\
    \ of sensitive quasi-identiﬁers for l-diversity and t-closeness.\nIEEE Trans.\
    \ Dependable Secur. Comput. 2017, 16, 580–593. [CrossRef]\n31.\nSweeney, L. k-anonymity:\
    \ A model for protecting privacy’International Journal on Uncertainty. Fuzziness\
    \ Knowl.-Based Syst. 2002,\n10, 557–570. [CrossRef]\n32.\nMachanavajjhala, A.;\
    \ Kifer, D.; Gehrke, J.; Venkitasubramaniam, M. l-diversity: Privacy beyond k-anonymity.\
    \ ACM Trans. Knowl.\nDiscov. Data TKDD 2007, 1. [CrossRef]\n33.\nLi, N.; Li, T.;\
    \ Venkatasubramanian, S. t-closeness: Privacy beyond k-anonymity and l-diversity.\
    \ In Proceedings of the 2007 IEEE\n23rd International Conference on Data Engineering,\
    \ Istanbul, Turkey, 11–15 April 2007; pp. 106–115.\n34.\nDwork, C.; McSherry,\
    \ F.; Nissim, K.; Smith, A. Calibrating noise to sensitivity in private data analysis.\
    \ In Proceedings of\nthe Theory of Cryptography Conference, New York, NY, USA,\
    \ 4–7 March 2006; Springer: Berlin/Heidelberg, Germany, 2006;\npp. 265–284.\n\
    35.\nNakamoto, S. Bitcoin: A peer-to-peer electronic cash system. Decentralized\
    \ Bus. Rev. 2008, 21260. http://dx.doi.org/10.2139/ssrn.3440802.\n[CrossRef]\n\
    36.\nLi, H.; Zhu, L.; Shen, M.; Gao, F.; Tao, X.; Liu, S. Blockchain-based data\
    \ preservation system for medical data. J. Med. Syst. 2018,\n42, 141. [CrossRef]\n\
    37.\nFan, K.; Wang, S.; Ren, Y.; Li, H.; Yang, Y. Medblock: Efﬁcient and secure\
    \ medical data sharing via blockchain. J. Med. Syst. 2018,\n42, 1–11. [CrossRef]\n\
    38.\nPatel, V. A framework for secure and decentralized sharing of medical imaging\
    \ data via blockchain consensus. Health Inform. J.\n2019, 25, 1398–1411. [CrossRef]\n\
    39.\nKarakı¸s, R.; Güler, ˙I.; Capraz, I.; Bilir, E. A novel fuzzy logic-based\
    \ image steganography method to ensure medical data security.\nComput. Biol. Med.\
    \ 2015, 67, 172–183. [CrossRef] [PubMed]\n40.\nMantos, P.L.; Maglogiannis, I.\
    \ Sensitive patient data hiding using a ROI reversible steganography scheme for\
    \ DICOM images. J.\nMed. Syst. 2016, 40, 156. [CrossRef]\n41.\nTuruk, M.; Dhande,\
    \ A. A novel reversible multiple medical image watermarking for health information\
    \ system. J. Med. Syst.\n2016, 40, 269. [CrossRef] [PubMed]\n42.\nShehab, A.;\
    \ Elhoseny, M.; Muhammad, K.; Sangaiah, A.K.; Yang, P.; Huang, H.; Hou, G. Secure\
    \ and robust fragile watermarking\nscheme for medical images. IEEE Access 2018,\
    \ 6, 10269–10278. [CrossRef]\n43.\nTan, C.K.; Ng, J.C.; Xu, X.; Poh, C.L.; Guan,\
    \ Y.L.; Sheah, K. Security protection of DICOM medical images using dual-layer\n\
    reversible watermarking with tamper detection capability. J. Digit. Imaging 2011,\
    \ 24, 528–540. [CrossRef]\n44.\nLiu, S.H.; Yao, H.X.; Gao, W.; Liu, Y.L. An image\
    \ fragile watermark scheme based on chaotic image pattern and pixel-pairs. Appl.\n\
    Math. Comput. 2007, 185, 869–882. [CrossRef]\n45.\nSametinger, J.; Rozenblit,\
    \ J.; Lysecky, R.; Ott, P. Security challenges for medical devices. Commun. ACM\
    \ 2015, 58, 74–82. [CrossRef]\n46.\nBurns, A.; Johnson, M.E.; Honeyman, P. A brief\
    \ chronology of medical device security. Commun. ACM 2016, 59, 66–72. [CrossRef]\n\
    47.\nHei, X.; Du, X.; Wu, J.; Hu, F. Defending resource depletion attacks on implantable\
    \ medical devices. In Proceedings of the 2010\nIEEE Global Telecommunications\
    \ Conference GLOBECOM 2010, Miami, FL, USA, 6–10 December 2010; pp. 1–5.\n48.\n\
    Mendenhall, G.S. The challenges of implanted cardiac device security: Lessons\
    \ from recent compromises. EP Eur. 2019, 21,\n535–538. [CrossRef]\nInt. J. Environ.\
    \ Res. Public Health 2021, 18, 9668\n44 of 47\n49.\nLiu, H.; Ning, H.; Yue, Y.;\
    \ Wan, Y.; Yang, L.T. Selective disclosure and yoking-proof based privacy-preserving\
    \ authentication\nscheme for cloud assisted wearable devices. Future Gener. Comput.\
    \ Syst. 2018, 78, 976–986. [CrossRef]\n50.\nPycroft, L.; Aziz, T.Z. Security of\
    \ implantable medical devices with wireless connections: The dangers of cyber-attacks.\
    \ Expert\nRev. Med. Devices 2018, 15, 403–406. [CrossRef]\n51.\nZheng, G.; Yang,\
    \ W.; Valli, C.; Qiao, L.; Shankaran, R.; Orgun, M.A.; Mukhopadhyay, S.C. Finger-to-heart\
    \ (F2H): Authentication\nfor wireless implantable medical devices. IEEE J. Biomed.\
    \ Health Inform. 2018, 23, 1546–1557. [CrossRef] [PubMed]\n52.\nBelkhouja, T.;\
    \ Du, X.; Mohamed, A.; Al-Ali, A.K.; Guizani, M. Biometric-based authentication\
    \ scheme for Implantable Medical\nDevices during emergency situations. Future\
    \ Gener. Comput. Syst. 2019, 98, 109–119. [CrossRef]\n53.\nHalperin, D.; Heydt-Benjamin,\
    \ T.S.; Ransford, B.; Clark, S.S.; Defend, B.; Morgan, W.; Fu, K.; Kohno, T.;\
    \ Maisel, W.H. Pacemakers\nand implantable cardiac deﬁbrillators: Software radio\
    \ attacks and zero-power defenses.\nIn Proceedings of the 2008 IEEE\nSymposium\
    \ on Security and Privacy (sp 2008), Oakland, CA, USA, 18–21 May 2008; pp. 129–142.\n\
    54.\nZheng, G.; Fang, G.; Shankaran, R.; Orgun, M.A. Encryption for implantable\
    \ medical devices using modiﬁed one-time pads.\nIEEE Access 2015, 3, 825–836.\
    \ [CrossRef]\n55.\nGuo, P.; Wang, J.; Ji, S.; Geng, X.H.; Xiong, N.N. A lightweight\
    \ encryption scheme combined with trust management for\nprivacy-preserving in\
    \ body sensor networks. J. Med. Syst. 2015, 39, 190. [CrossRef]\n56.\nLatif, R.;\
    \ Abbas, H.; Latif, S.; Masood, A. Distributed denial of service attack source\
    \ detection using efﬁcient traceback technique\n(ETT) in cloud-assisted healthcare\
    \ environment. J. Med. Syst. 2016, 40, 161. [CrossRef]\n57.\nShen, J.; Chang,\
    \ S.; Shen, J.; Liu, Q.; Sun, X. A lightweight multi-layer authentication protocol\
    \ for wireless body area networks.\nFuture Gener. Comput. Syst. 2018, 78, 956–963.\
    \ [CrossRef]\n58.\nPeng, H.; Tian, Y.; Kurths, J.; Li, L.; Yang, Y.; Wang, D.\
    \ Secure and energy-efﬁcient data transmission system based on chaotic\ncompressive\
    \ sensing in body-to-body networks. IEEE Trans. Biomed. Circuits Syst. 2017, 11,\
    \ 558–573. [CrossRef]\n59.\nLounis, A.; Hadjidj, A.; Bouabdallah, A.; Challal,\
    \ Y. Healing on the cloud: Secure cloud architecture for medical wireless sensor\n\
    networks. Future Gener. Comput. Syst. 2016, 55, 266–277. [CrossRef]\n60.\nJi,\
    \ S.; Gui, Z.; Zhou, T.; Yan, H.; Shen, J. An efﬁcient and certiﬁcateless conditional\
    \ privacy-preserving authentication scheme for\nwireless body area networks big\
    \ data services. IEEE Access 2018, 6, 69603–69611. [CrossRef]\n61.\nSaeed, M.E.S.;\
    \ Liu, Q.Y.; Tian, G.; Gao, B.; Li, F. Remote authentication schemes for wireless\
    \ body area networks based on the\nInternet of Things. IEEE Internet Things J.\
    \ 2018, 5, 4926–4944. [CrossRef]\n62.\nLi, C.T.; Lee, C.C.; Weng, C.Y. A secure\
    \ cloud-assisted wireless body area network in mobile emergency medical care system.\
    \ J.\nMed. Syst. 2016, 40, 117. [CrossRef] [PubMed]\n63.\nYang, Y.; Zheng, X.;\
    \ Guo, W.; Liu, X.; Chang, V. Privacy-preserving fusion of IoT and big data for\
    \ e-health. Future Gener. Comput.\nSyst. 2018, 86, 1437–1455. [CrossRef]\n64.\n\
    Tang, W.; Ren, J.; Deng, K.; Zhang, Y. Secure data aggregation of lightweight\
    \ e-healthcare iot devices with fair incentives. IEEE\nInternet Things J. 2019,\
    \ 6, 8714–8726. [CrossRef]\n65.\nFan, K.; Jiang, W.; Li, H.; Yang, Y. Lightweight\
    \ RFID protocol for medical privacy protection in IoT. IEEE Trans. Ind. Inform.\
    \ 2018,\n14, 1656–1665. [CrossRef]\n66.\nAghili, S.F.; Mala, H.; Kaliyar, P.;\
    \ Conti, M. SecLAP: Secure and lightweight RFID authentication protocol for Medical\
    \ IoT. Future\nGener. Comput. Syst. 2019, 101, 621–634. [CrossRef]\n67.\nConti,\
    \ M.; Kumar, M. Opportunities in opportunistic computing. Computer 2010, 43, 42–50.\
    \ [CrossRef]\n68.\nJin, C.; Xu, C.; Zhang, X.; Li, F. A secure ECC-based RFID\
    \ mutual authentication protocol to enhance patient medication safety. J.\nMed.\
    \ Syst. 2016, 40, 12. [CrossRef] [PubMed]\n69.\nOmala, A.A.; Robert, N.; Li, F.\
    \ A provably-secure transmission scheme for wireless body area networks. J. Med.\
    \ Syst. 2016,\n40, 247. [CrossRef] [PubMed]\n70.\nSahai, A.; Waters, B. Fuzzy\
    \ identity-based encryption. In Proceedings of the Annual International Conference\
    \ on the Theory and\nApplications of Cryptographic Techniques, Aarhus, Denmark,\
    \ 22–26 May 2005; pp. 457–473.\n71.\nZheng, D.; Wu, A.; Zhang, Y.; Zhao, Q. Efﬁcient\
    \ and privacy-preserving medical data sharing in Internet of Things with limited\n\
    computing power. IEEE Access 2018, 6, 28019–28027. [CrossRef]\n72.\nEven, S.;\
    \ Goldreich, O.; Micali, S. On-line/off-line digital signatures. In Proceedings\
    \ of the Conference on the Theory and\nApplication of Cryptology, Houthalen, Belgium,\
    \ 10–13 April 1989; Springer: Berlin/Heidelberg, Germany, 1989; pp. 263–275.\n\
    73.\nAra, A.; Al-Rodhaan, M.; Tian, Y.; Al-Dhelaan, A. A secure privacy-preserving\
    \ data aggregation scheme based on bilinear\nElGamal cryptosystem for remote health\
    \ monitoring systems. IEEE Access 2017, 5, 12601–12617. [CrossRef]\n74.\nHuang,\
    \ H.; Gong, T.; Ye, N.; Wang, R.; Dou, Y. Private and secured medical data transmission\
    \ and analysis for wireless sensing\nhealthcare system. IEEE Trans. Ind. Inform.\
    \ 2017, 13, 1227–1237. [CrossRef]\n75.\nWang, X.; Zhang, Z. Data division scheme\
    \ based on homomorphic encryption in WSNs for health care. J. Med. Syst. 2015,\
    \ 39, 188.\n[CrossRef]\n76.\nShamir, A. Identity-based cryptosystems and signature\
    \ schemes. In Proceedings of the Workshop on the Theory and Application\nof Cryptographic\
    \ Techniques, Paris, France, 9–11 April 1984; Springer: Berlin/Heidelberg, Germany,\
    \ 1984; pp. 47–53.\n77.\nAl-Riyami, S.S.; Paterson, K.G. Certiﬁcateless public\
    \ key cryptography. In Proceedings of the International Conference on the\nTheory\
    \ and Application of Cryptology and Information Security, Taipei, Taiwan, 30 November–4\
    \ December 2003; Springer:\nBerlin/Heidelberg, Germany, 2003; pp. 452–473.\nInt.\
    \ J. Environ. Res. Public Health 2021, 18, 9668\n45 of 47\n78.\nZheng, Y. Digital\
    \ signcryption or how to achieve cost (signature & encryption) ≪ cost (signature)+\
    \ cost (encryption).\nIn\nProceedings of the Annual International Cryptology Conference,\
    \ Santa Barbara, CA, USA, 17–21 August 1997; Springer:\nBerlin/Heidelberg, Germany,\
    \ 1997; pp. 165–179.\n79.\nBarbosa, M.; Farshim, P. Certiﬁcateless signcryption.\
    \ In Proceedings of the 2008 ACM Symposium on Information, Computer\nand Communications\
    \ Security, Tokyo, Japan, 18–20 March 2008; pp. 369–372.\n80.\nLi, F.; Han, Y.;\
    \ Jin, C. Cost-effective and anonymous access control for wireless body area networks.\
    \ IEEE Syst. J. 2016, 12, 747–758.\n[CrossRef]\n81.\nBarreto, P.S.; Libert, B.;\
    \ McCullagh, N.; Quisquater, J.J. Efﬁcient and provably-secure identity-based\
    \ signatures and signcryption\nfrom bilinear maps. In Proceedings of the International\
    \ Conference on the Theory and Application of Cryptology and Information\nSecurity,\
    \ Beijing, China, 2–6 December 2005; Springer: Berlin/Heidelberg, Germany, 2005;\
    \ pp. 515–532.\n82.\nZhang, A.; Wang, L.; Ye, X.; Lin, X. Light-weight and robust\
    \ security-aware D2D-assist data transmission protocol for mobile-\nhealth systems.\
    \ IEEE Trans. Inf. Forensics Secur. 2016, 12, 662–675. [CrossRef]\n83.\nCheng,\
    \ X.; Chen, F.; Xie, D.; Sun, H.; Huang, C. Design of a secure medical data sharing\
    \ scheme based on blockchain. J. Med. Syst.\n2020, 44, 52. [CrossRef] [PubMed]\n\
    84.\nIbrahim, M.H.; Kumari, S.; Das, A.K.; Wazid, M.; Odelu, V. Secure anonymous\
    \ mutual authentication for star two-tier wireless\nbody area networks. Comput.\
    \ Methods Programs Biomed. 2016, 135, 37–50. [CrossRef] [PubMed]\n85.\nRahman,\
    \ F.; Bhuiyan, M.Z.A.; Ahamed, S.I. A privacy preserving framework for RFID based\
    \ healthcare systems. Future Gener.\nComput. Syst. 2017, 72, 339–352. [CrossRef]\n\
    86.\nAttarian, R.; Hashemi, S. An anonymity communication protocol for security\
    \ and privacy of clients in IoT-based mobile health\ntransactions. Comput. Netw.\
    \ 2021, 190, 107976. [CrossRef]\n87.\nMaw, H.A.; Xiao, H.; Christianson, B.; Malcolm,\
    \ J.A. BTG-AC: Break-the-glass access control model for medical data in wireless\n\
    sensor networks. IEEE J. Biomed. Health Inform. 2015, 20, 763–774. [CrossRef]\n\
    88.\nWang, L.; Li, L.; Li, J.; Li, J.; Gupta, B.B.; Liu, X. Compressive sensing\
    \ of medical images with conﬁdentially homomorphic\naggregations. IEEE Internet\
    \ Things J. 2018, 6, 1402–1409. [CrossRef]\n89.\nBlaze, M.; Bleumer, G.; Strauss,\
    \ M. Divertible protocols and atomic proxy cryptography. In Proceedings of the\
    \ International\nConference on the Theory and Applications of Cryptographic Techniques,\
    \ Espoo, Finland, 31 May–4 June 1998; Springer:\nBerlin/Heidelberg, Germany, 1998,\
    \ pp. 127–144.\n90.\nGreen, M.; Ateniese, G. Identity-based proxy re-encryption.\n\
    In Proceedings of the International Conference on Applied\nCryptography and Network\
    \ Security, Zhuhai, China, 5–8 June 2007; Springer: Berlin/Heidelberg, Germany,\
    \ 2007, pp. 288–306.\n91.\nBoneh, D.; Franklin, M. Identity-based encryption from\
    \ the Weil pairing. In Proceedings of the Annual International Cryptology\nConference,\
    \ Santa Barbara, CA, USA, 19–23 August 2001; Springer: Berlin/Heidelberg, Germany,\
    \ 2001; pp. 213–229.\n92.\nWang, X.A.; Ma, J.; Xhafa, F.; Zhang, M.; Luo, X. Cost-effective\
    \ secure E-health cloud system using identity based cryptographic\ntechniques.\
    \ Future Gener. Comput. Syst. 2017, 67, 242–254. [CrossRef]\n93.\nWang, S.; Zhou,\
    \ J.; Liu, J.K.; Yu, J.; Chen, J.; Xie, W. An efﬁcient ﬁle hierarchy attribute-based\
    \ encryption scheme in cloud\ncomputing. IEEE Trans. Inf. Forensics Secur. 2016,\
    \ 11, 1265–1277. [CrossRef]\n94.\nEom, J.; Lee, D.H.; Lee, K. Patient-controlled\
    \ attribute-based encryption for secure electronic health records system. J. Med.\
    \ Syst.\n2016, 40, 253. [CrossRef]\n95.\nLiu, J.; Huang, X.; Liu, J.K. Secure\
    \ sharing of personal health records in cloud computing: Ciphertext-policy attribute-based\n\
    signcryption. Future Gener. Comput. Syst. 2015, 52, 67–76. [CrossRef]\n96.\nRao,\
    \ Y.S. A secure and efﬁcient ciphertext-policy attribute-based signcryption for\
    \ personal health records sharing in cloud\ncomputing. Future Gener. Comput. Syst.\
    \ 2017, 67, 133–151. [CrossRef]\n97.\nEmura, K.; Miyaji, A.; Rahman, M.S. Dynamic\
    \ attribute-based signcryption without random oracles. Int. J. Appl. Cryptogr.\
    \ 2012,\n2, 199–211. [CrossRef]\n98.\nChen, C.; Chen, J.; Lim, H.W.; Zhang, Z.;\
    \ Feng, D. Combined public-key schemes: The case of ABE and ABS. In Proceedings\n\
    of the International Conference on Provable Security, Chengdu, China, 26–28 September\
    \ 2012; Springer: Berlin/Heidelberg,\nGermany, 2012; pp. 53–69.\n99.\nRaisaro,\
    \ J.L.; Troncoso-Pastoriza, J.R.; Misbach, M.; Sousa, J.S.; Pradervand, S.; Missiaglia,\
    \ E.; Michielin, O.; Ford, B.; Hubaux, J.P.\nM ed C o: Enabling Secure and Privacy-Preserving\
    \ Exploration of Distributed Clinical and Genomic Data. IEEE/ACM Trans.\nComput.\
    \ Biol. Bioinform. 2018, 16, 1328–1341. [CrossRef]\n100. Alabdulatif, A.; Khalil,\
    \ I.; Yi, X.; Guizani, M. Secure edge of things for smart healthcare surveillance\
    \ framework. IEEE Access\n2019, 7, 31010–31021. [CrossRef]\n101. Zhang, R.; Xue,\
    \ R.; Liu, L. Searchable encryption for healthcare clouds: A survey. IEEE Trans.\
    \ Serv. Comput. 2017, 11, 978–996.\n[CrossRef]\n102. Song, D.X.; Wagner, D.; Perrig,\
    \ A. Practical techniques for searches on encrypted data.\nIn Proceedings of the\
    \ 2000 IEEE\nSymposium on Security and Privacy (S&P 2000), Berkeley, CA, USA,\
    \ 14–17 May 2000; pp. 44–55.\n103. Yang, Y.; Ma, M. Conjunctive keyword search\
    \ with designated tester and timing enabled proxy re-encryption function for e-health\n\
    clouds. IEEE Trans. Inf. Forensics Secur. 2015, 11, 746–759. [CrossRef]\n104.\
    \ Xu, C.; Wang, N.; Zhu, L.; Sharif, K.; Zhang, C. Achieving searchable and privacy-preserving\
    \ data sharing for cloud-assisted\nE-healthcare system. IEEE Internet Things J.\
    \ 2019, 6, 8345–8356. [CrossRef]\nInt. J. Environ. Res. Public Health 2021, 18,\
    \ 9668\n46 of 47\n105. Chen, L.; Lee, W.K.; Chang, C.C.; Choo, K.K.R.; Zhang,\
    \ N. Blockchain based searchable encryption for electronic health record\nsharing.\
    \ Future Gener. Comput. Syst. 2019, 95, 420–429. [CrossRef]\n106. Yao, X.; Lin,\
    \ Y.; Liu, Q.; Zhang, J. Privacy-preserving search over encrypted personal health\
    \ record in multi-source cloud. IEEE\nAccess 2018, 6, 3809–3823. [CrossRef]\n\
    107. Li, C.T.; Shih, D.H.; Wang, C.C. Cloud-assisted mutual authentication and\
    \ privacy preservation protocol for telecare medical\ninformation systems. Comput.\
    \ Methods Programs Biomed. 2018, 157, 191–203. [CrossRef] [PubMed]\n108. Liu,\
    \ X.; Ma, W.; Cao, H. NPMA: A novel privacy-preserving mutual authentication in\
    \ TMIS for mobile edge-cloud architecture. J.\nMed. Syst. 2019, 43, 318. [CrossRef]\n\
    109. Liu, X.; Ma, W.; Cao, H. MBPA: A medibchain-based privacy-preserving mutual\
    \ authentication in TMIS for mobile medical cloud\narchitecture. IEEE Access 2019,\
    \ 7, 149282–149298. [CrossRef]\n110. Liu, H.; Yao, X.; Yang, T.; Ning, H. Cooperative\
    \ privacy preservation for wearable devices in hybrid computing-based smart\n\
    health. IEEE Internet Things J. 2018, 6, 1352–1362. [CrossRef]\n111. Mehmood,\
    \ A.; Natgunanathan, I.; Xiang, Y.; Poston, H.; Zhang, Y. Anonymous authentication\
    \ scheme for smart cloud based\nhealthcare applications. IEEE Access 2018, 6,\
    \ 33552–33567. [CrossRef]\n112. Liu, X.; Ma, W. ETAP: Energy-efﬁcient and traceable\
    \ authentication protocol in mobile medical cloud architecture. IEEE Access\n\
    2018, 6, 33513–33528. [CrossRef]\n113. Mohit, P.; Amin, R.; Karati, A.; Biswas,\
    \ G.; Khan, M.K. A standard mutual authentication protocol for cloud computing\
    \ based\nhealth care system. J. Med. Syst. 2017, 41, 50. [CrossRef]\n114. Yan,\
    \ Z.; Li, X.; Wang, M.; Vasilakos, A.V. Flexible data access control based on\
    \ trust and reputation in cloud computing. IEEE\nTrans. Cloud Comput. 2015, 5,\
    \ 485–498. [CrossRef]\n115. Yeh, L.Y.; Chiang, P.Y.; Tsai, Y.L.; Huang, J.L. Cloud-based\
    \ ﬁne-grained health information access control framework for\nlightweightiot\
    \ devices with dynamic auditing andattribute revocation. IEEE Trans. Cloud Comput.\
    \ 2015, 6, 532–544. [CrossRef]\n116. Roy, S.; Das, A.K.; Chatterjee, S.; Kumar,\
    \ N.; Chattopadhyay, S.; Rodrigues, J.J. Provably secure ﬁne-grained data access\
    \ control\nover multiple cloud servers in mobile cloud computing based healthcare\
    \ applications. IEEE Trans. Ind. Inform. 2018, 15, 457–468.\n[CrossRef]\n117.\
    \ Liu, Y.; Zhang, Y.; Ling, J.; Liu, Z. Secure and ﬁne-grained access control\
    \ on e-healthcare records in mobile cloud computing.\nFuture Gener. Comput. Syst.\
    \ 2018, 78, 1020–1026. [CrossRef]\n118. Li, W.; Liu, B.M.; Liu, D.; Liu, R.P.;\
    \ Wang, P.; Luo, S.; Ni, W. Uniﬁed ﬁne-grained access control for personal health\
    \ records in\ncloud computing. IEEE J. Biomed. Health Inform. 2018, 23, 1278–1289.\
    \ [CrossRef]\n119. Gope, P.; Amin, R. A novel reference security model with the\
    \ situation based access policy for accessing ephr data. J. Med. Syst.\n2016,\
    \ 40, 242. [CrossRef]\n120. Ying, Z.; Wei, L.; Li, Q.; Liu, X.; Cui, J. A lightweight\
    \ policy preserving EHR sharing scheme in the cloud. IEEE Access 2018,\n6, 53698–53708.\
    \ [CrossRef]\n121. Rezaeibagha, F.; Mu, Y. Distributed clinical data sharing via\
    \ dynamic access-control policy transformation. Int. J. Med. Inform.\n2016, 89,\
    \ 25–31. [CrossRef]\n122. Ying, Z.; Jang, W.; Cao, S.; Liu, X.; Cui, J. A lightweight\
    \ cloud sharing PHR system with access policy updating. IEEE Access 2018,\n6,\
    \ 64611–64621. [CrossRef]\n123. Wang, X.; Wang, L.; Li, Y.; Gai, K. Privacy-aware\
    \ efﬁcient ﬁne-grained data access control in Internet of medical things based\
    \ fog\ncomputing. IEEE Access 2018, 6, 47657–47665. [CrossRef]\n124. Saha, R.;\
    \ Kumar, G.; Rai, M.K.; Thomas, R.; Lim, S.J. Privacy Ensured e-healthcare for\
    \ fog-enhanced IoT based applications. IEEE\nAccess 2019, 7, 44536–44543. [CrossRef]\n\
    125. Ateniese, G.; Burns, R.; Curtmola, R.; Herring, J.; Kissner, L.; Peterson,\
    \ Z.; Song, D. Provable data possession at untrusted stores.\nIn Proceedings of\
    \ the 14th ACM Conference on Computer and Communications Security, Alexandria,\
    \ VA, USA, 2 November–31\nOctober 2007; pp. 598–609.\n126. Juels, A.; Kaliski\
    \ Jr, B.S. PORs: Proofs of retrievability for large ﬁles. In Proceedings of the\
    \ 14th ACM Conference on Computer\nand Communications Security, Alexandria, VA,\
    \ USA, 2 November–31 October 2007; pp. 584–597.\n127. Wang, Y.; Wu, Q.; Qin, B.;\
    \ Shi, W.; Deng, R.H.; Hu, J. Identity-based data outsourcing with comprehensive\
    \ auditing in clouds.\nIEEE Trans. Inf. Forensics Secur. 2016, 12, 940–952. [CrossRef]\n\
    128. Fan, Y.; Liao, Y.; Li, F.; Zhou, S.; Zhang, G. Identity-based auditing for\
    \ shared cloud data with efﬁcient and secure sensitive\ninformation hiding. IEEE\
    \ Access 2019, 7, 114246–114260. [CrossRef]\n129. Shi, H.; Guo, R.; Jing, C.;\
    \ Feng, S. Efﬁcient and Unconditionally Anonymous Certiﬁcateless Provable Data\
    \ Possession Scheme\nWith Trusted KGC for Cloud-Based EMRs. IEEE Access 2019,\
    \ 7, 69410–69421. [CrossRef]\n130. Nguyen, D.C.; Pathirana, P.N.; Ding, M.; Seneviratne,\
    \ A. Blockchain for secure ehrs sharing of mobile cloud based e-health\nsystems.\
    \ IEEE Access 2019, 7, 66792–66806. [CrossRef]\n131. Wang, Y.; Zhang, A.; Zhang,\
    \ P.; Wang, H. Cloud-assisted EHR sharing with security and privacy preservation\
    \ via consortium\nblockchain. IEEE Access 2019, 7, 136704–136719. [CrossRef]\n\
    132. Al Omar, A.; Bhuiyan, M.Z.A.; Basu, A.; Kiyomoto, S.; Rahman, M.S. Privacy-friendly\
    \ platform for healthcare data in cloud based\non blockchain environment. Future\
    \ Gener. Comput. Syst. 2019, 95, 511–521. [CrossRef]\nInt. J. Environ. Res. Public\
    \ Health 2021, 18, 9668\n47 of 47\n133. Rahman, M.A.; Hossain, M.S.; Loukas, G.;\
    \ Hassanain, E.; Rahman, S.S.; Alhamid, M.F.; Guizani, M. Blockchain-based mobile\n\
    edge computing framework for secure therapy applications. IEEE Access 2018, 6,\
    \ 72469–72478. [CrossRef]\n134. Benet, J. Ipfs-content addressed, versioned, p2p\
    \ ﬁle system. arXiv 2014, arXiv:1407.3561.\n135. Karekar, S.P.; Vaidya, S.M. Perspective\
    \ of decoy technique using mobile fog computing with effect to wireless environment.\
    \ Int. J.\nSci. Eng. Technol. Res. 2015, 4, 2620–2626.\n136. Al Hamid, H.A.; Rahman,\
    \ S.M.M.; Hossain, M.S.; Almogren, A.; Alamri, A. A security model for preserving\
    \ the privacy of\nmedical big data in a healthcare cloud using a fog computing\
    \ facility with pairing-based cryptography.\nIEEE Access 2017,\n5, 22313–22328.\
    \ [CrossRef]\n137. Zhang, R.; Xue, R.; Liu, L. Security and Privacy for Healthcare\
    \ Blockchains. IEEE Trans. Serv. Comput. 2021. [CrossRef]\n138. Rocher, L.; Hendrickx,\
    \ J.M.; De Montjoye, Y.A. Estimating the success of re-identiﬁcations in incomplete\
    \ datasets using generative\nmodels. Nat. Commun. 2019, 10, 3069. [CrossRef] [PubMed]\n\
    139. Gollakota, S.; Hassanieh, H.; Ransford, B.; Katabi, D.; Fu, K. They can hear\
    \ your heartbeats: Non-invasive security for implantable\nmedical devices. In\
    \ Proceedings of the ACM SIGCOMM 2011 Conference, Toronto, ON, Canada, 15–19 August\
    \ 2011; pp. 2–13.\n140. Xu, F.; Qin, Z.; Tan, C.C.; Wang, B.; Li, Q. IMDGuard:\
    \ Securing implantable medical devices with the external wearable guardian.\n\
    In Proceedings of the 2011 Proceedings IEEE INFOCOM, Shanghai, China, 10–15 April\
    \ 2011; pp. 1862–1870.\n141. Halperin, D.; Heydt-Benjamin, T.S.; Fu, K.; Kohno,\
    \ T.; Maisel, W.H. Security and privacy for implantable medical devices. IEEE\n\
    Pervasive Comput. 2008, 7, 30–39. [CrossRef]\n142. Roman, R.; Lopez, J.; Mambo,\
    \ M. Mobile edge computing, fog et al.: A survey and analysis of security threats\
    \ and challenges.\nFuture Gener. Comput. Syst. 2018, 78, 680–698. [CrossRef]\n\
    143. Ren, J.; Zhang, D.; He, S.; Zhang, Y.; Li, T. A survey on end-edge-cloud\
    \ orchestrated network computing paradigms: Transparent\ncomputing, mobile edge\
    \ computing, fog computing, and cloudlet. ACM Comput. Surv. CSUR 2019, 52, 125.\
    \ [CrossRef]\n"
  inline_citation: '>'
  journal: International journal of environmental  research and public health (Online)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1660-4601/18/18/9668/pdf?version=1631612829
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Comprehensive Survey on Security and Privacy for Electronic Health Data
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s21144756
  analysis: '>'
  authors:
  - Bilal Naji Alhasnawi
  - Basil H. Jasim
  - Zain-Aldeen S. A. Rahman
  - Pierluigi Siano
  citation_count: 34
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nA Novel Robust Smart Energy Management and Demand\n\
    Reduction for Smart Homes Based on Internet of Energy\nBilal Naji Alhasnawi 1\n\
    , Basil H. Jasim 1\n, Zain-Aldeen S. A. Rahman 1,2\nand Pierluigi Siano 3,4,*\n\
    \x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Alhasnawi,\
    \ B.N.; Jasim,\nB.H.; Rahman, Z.-A.S.A.; Siano, P. A\nNovel Robust Smart Energy\n\
    Management and Demand Reduction\nfor Smart Homes Based on Internet of\nEnergy.\
    \ Sensors 2021, 21, 4756.\nhttps://doi.org/10.3390/\ns21144756\nAcademic Editors:\n\
    Panagiotis Papageorgas,\nGeorgios Vokas, Constantinos\nS. Psomopoulos, Radu A.\
    \ Munteanu,\nKyriakos Agavanakis\nand Juan M. Corchado\nReceived: 13 June 2021\n\
    Accepted: 9 July 2021\nPublished: 12 July 2021\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nElectrical Engineering Department, Basrah University, Basrah 61001,\
    \ Iraq; bilalnaji11@yahoo.com (B.N.A.);\nhanbas632@gmail.com (B.H.J.); as.zain9391@stu.edu.iq\
    \ (Z.-A.S.A.R.)\n2\nDepartment of Electrical Techniques, Qurna Technique Institute,\
    \ Southern Technical University,\nBasra 61016, Iraq\n3\nManagement and Innovation\
    \ Systems Department, Salerno University, 84084 Fisciano, SA, Italy\n4\nDepartment\
    \ of Electrical and Electronic Engineering Science, University of Johannesburg,\n\
    Johannesburg 2024, South Africa\n*\nCorrespondence: psiano@unisa.it\nAbstract:\
    \ In residential energy management (REM), Time of Use (ToU) of devices scheduling\
    \ based on\nuser-deﬁned preferences is an essential task performed by the home\
    \ energy management controller.\nThis paper devised a robust REM technique capable\
    \ of monitoring and controlling residential loads\nwithin a smart home. In this\
    \ paper, a new distributed multi-agent framework based on the cloud layer\ncomputing\
    \ architecture is developed for real-time microgrid economic dispatch and monitoring.\
    \ In\nthis paper the grey wolf optimizer (GWO), artiﬁcial bee colony (ABC) optimization\
    \ algorithm-based\nTime of Use (ToU) pricing model is proposed to deﬁne the rates\
    \ for shoulder-peak and on-peak hours.\nThe results illustrate the effectiveness\
    \ of the proposed the grey wolf optimizer (GWO), artiﬁcial bee\ncolony (ABC) optimization\
    \ algorithm based ToU pricing scheme. A Raspberry Pi3 based model of a\nwell-known\
    \ test grid topology is modiﬁed to support real-time communication with open-source\
    \ IoE\nplatform Node-Red used for cloud computing. Two levels communication system\
    \ connects microgrid\nsystem, implemented in Raspberry Pi3, to cloud server. The\
    \ local communication level utilizes\nIP/TCP and MQTT is used as a protocol for\
    \ global communication level. The results demonstrate\nand validate the effectiveness\
    \ of the proposed technique, as well as the capability to track the changes\n\
    of load with the interactions in real-time and the fast convergence rate.\nKeywords:\
    \ dynamic electricity price; optimization algorithms; home devices; Internet of\
    \ things;\nMQTT protocol\n1. Introduction\nInternet of Energy (IoE) plays a signiﬁcant\
    \ role in today’s world through promoting\nsocial and economic development. A\
    \ Wireless Sensor Network (WSN) is considered the\nkey technology in IoE architecture,\
    \ which plays a signiﬁcant role in promoting IoE. The\nIoE is now extensively\
    \ used in various ﬁelds such as smart cities, healthcare, smart power\ngrids,\
    \ etc. [1,2].\nThe development of a loE of systems assists Home Energy Management\
    \ System\n(HEMS) to monitor different home devices based on the collected information\
    \ of the devices\nwith different wireless technologies. The Wi-Fi platform for\
    \ HEMS is included in this paper.\nWi-Fi is a wireless network with standard number\
    \ IEEE 802.15.4 from the Electrical and\nElectronics Engineers Institute. The\
    \ main purpose of Wi-Fi is to design digital low-power\nsignal systems with a\
    \ low bandwidth (PAN) network [3]. Wi-Fi technology can assist\nHEMS in real-time\
    \ collecting the energy information to help the users to provide smart\nand efﬁcient\
    \ management on the smart home devices. According to the aforementioned\ncases,\
    \ home devices interact together through a wireless network for optimal and efﬁcient\n\
    monitoring by the aim of HEMS.\nSensors 2021, 21, 4756. https://doi.org/10.3390/s21144756\n\
    https://www.mdpi.com/journal/sensors\nSensors 2021, 21, 4756\n2 of 28\nIn order\
    \ to ensure an intelligent grid and to enhance the IoE integration, continuous\n\
    communication is necessary. In terms of output, market, distribution, transmission\
    \ and\ncustomer the intelligent grid is more effective than a conventional grid\
    \ [4]. The conventional\ngrids have limited power generation, and a large number\
    \ of small power producers are\nin the intelligent grid. A conventional grid transmission\
    \ includes large power lines and\npipelines with a smart grid that offers small\
    \ transmission and compensation for local\nsupply, thereby making the smart grid\
    \ signiﬁcantly more efﬁcient than the conventional\ngrid. Consumers of a smart\
    \ grid are very active and participate in a system in the form of\npriorities\
    \ and demands set. The national and centralized market for a conventional grid\n\
    is fragmented and the borders are ignored. A smart grid consists of billions of\
    \ intelligent\ndevices, sensors, intelligent meters and many other communication\
    \ networks, be they\nprivate or public [5,6].\nDemand response (DR) strategies\
    \ provide economic, effective and secure solutions\nin relation to energy management.\
    \ Energy management system (EMS) on the DR decen-\ntralized residential or housing\
    \ microgrid offers the most cost-effective demand proﬁle, so\nthat load control\
    \ will help the house owners have less discomfort [7]. However, installing\na\
    \ collocated roof generator and the variability of home appliances in the operation\
    \ of the\nstorage system can make it difﬁcult to manage the energy of a building\
    \ process. This is\nmore demanding as it is quite difﬁcult to estimate renewable\
    \ real-time generation and\nalso since the energy price in the day ahead is different\
    \ from the real-time energy price.\nStochastic optimization may address these\
    \ uncertainties, but it also requires appropriate\nrandom parameter probabilistic\
    \ estimates. For domestic energy management, the real-time\noptimization portfolio\
    \ is therefore required, which can provide an optimal solution in the\nabrupt\
    \ change in energy generation and the price of market energy. To fulﬁl the abovemen-\n\
    tioned requirement, this paper elucidates a real-time optimization system for\
    \ synergetic\nsource load storage dispatch in an intelligent home or an intelligent\
    \ residential microgrid.\nConventionally, control has been implemented as a single\
    \ centralized controller, in\nwhich all the energy nodes are connected to one\
    \ another and to the central control unit\nthrough bidirectional communication\
    \ links to gather system-wide information. These\ncommunication links increase\
    \ the cost and decrease the reliability of the MG. Centralized\ncontrol ensures\
    \ low-voltage performance through capability, accurate power sharing, etc.,\n\
    but is prone to a single point of failure; that is, if the central controller\
    \ or one of the\ncommunication links fails, it causes the entire MG to collapse.\
    \ Furthermore, this strategy\nplaces a large computational burden on the central\
    \ controller, thus making its design\ncomplex and costly.\nThe decentralized control\
    \ method comprises several individual controllers that need\nonly local measurements,\
    \ but it does not require a high-bandwidth communication infras-\ntructure (except\
    \ for synchronization purpose). Thus, it is proven to be more reliable than\n\
    the centralized strategy because of its limited communication infrastructure.\
    \ However, due\nto the lack of system-wide information, all the available energy\
    \ sources in an MG cannot\nbe efﬁciently harmonized in an optimum way [8].\nTo\
    \ counteract the stated limitations of the two control strategies, the distributed\
    \ control\nmethod has been proven to be very reliable; it is inﬂuenced by the\
    \ idea of a multi-agent\nsystem (MAS). In this method, the energy nodes are considered\
    \ to be agents that can\nexchange information with their neighboring nodes through\
    \ a sparse communication\ninfrastructure. Consequently, the cost of the communication\
    \ infrastructure decreases and\nthe system reliability increases [9]. Table 1\
    \ shows the main aspects of the control techniques.\nSensors 2021, 21, 4756\n\
    3 of 28\nTable 1. The main aspects of each control technique.\nTechnique\nCommunication\n\
    Scheme\nFault Tolerance\nCommunication\nConstraints\nCommunication\nBand Width\n\
    Centralized control\nOne to all\nWeek\nRobust\nHigh\nDecentralized local control\n\
    One to all\nStrong\nNone\nNone\nDistributed Control\nAll to all\nStrong\nStrong\n\
    Very High\nTherefore, this paper, a distributed method is proposed based on a\
    \ Multi-agent System\n(MAS) algorithm.\nThe rest of this study is organized as\
    \ follows: Section 2 provides Literature review of\nTheoretical background, Section\
    \ 3 provides proposed system description, Section 4 presents\nexperimental results\
    \ validation, Section 5 presents results discussion, Section 6 presents\nthe conclusions\
    \ of the paper.\n2. Literature Review of Theoretical Background\nThis section\
    \ describes some recent literature pertinent to energy management in\nmicrogrid.\
    \ Table 2 involves the contributions and shortcomings of the most recent research\n\
    applied energy management system in the.\nTable 2. Contributions versus shortcomings\
    \ of the most recent papers concerning energy management system.\nReference\n\
    Contributions\nShortcomings\n[10]\n•\nProposed a two-stage optimization model\
    \ for\noptimal planning of household renewable energy\nresources integration with\
    \ the association of\ncustomer-based EMS.\n•\nThe energy management for a multi-agent\n\
    system governed microgrid in Energy Internet\nnot investigated.\n[11]\n•\nProposed\
    \ a smart residential energy management\nsystem for customer of intelligent residential\n\
    buildings, and its beneﬁts are demonstrated by a\ncase study.\n•\nThe data processing\
    \ and storage using IoT layer\nplatform is not considered.\n[12]\n•\nProposed\
    \ a multi-objective day-ahead system\nmodel to optimize the economy and comfort\
    \ of\nthe occupants by delivering the source load\nstorage in a synergistic fashion.\n\
    •\nThe authors did not consider the real-time\nchange in users’ demand where there\
    \ is a chance\nof electricity loss whenever a user curtails his\nelectric load\
    \ demand.\n•\nThe multi-agent approach does not implement in\nthis paper.\n•\n\
    The data processing and storage using IoT layer\nplatform is not considered.\n\
    [13]\n•\nPresented an interdisciplinary approach that\ncombines machine education,\
    \ maximization and\ndesign of data structures to create a system to\nrespond to\
    \ real-life needs at home.\n•\nThe multi-agent approach does not implement in\n\
    this paper.\n•\nThe data processing and storage using IoT layer\nplatform is not\
    \ considered.\n[14]\n•\nProposed a stochastic model for the home energy\nmanagement\
    \ system by considering the\navailability uncertainties and small-scale\ngeneration\
    \ of renewable energy sources.\n•\nThe data processing and storage using IoT layer\n\
    platform is not considered.\n•\nThe multi-agent approach does not implement in\n\
    this paper.\nSensors 2021, 21, 4756\n4 of 28\nTable 2. Cont.\nReference\nContributions\n\
    Shortcomings\n[15]\n•\nProposed chance constrained optimization to\noptimize the\
    \ process of devices in a resident\nmanagement system in an indeterminate\nenvironment.\n\
    •\nThe energy management for a multi-agent\nsystem governed microgrid in Energy\
    \ Internet\nnot investigated.\n[16]\n•\nSuggested a new hierarchical energy\n\
    management system based on optimization for\nmulti-microgrid.\n•\nThese studies\
    \ do not consider the tradeoffs\nbetween electricity bills and user discomfort.\n\
    •\nThe energy management for a multi-agent\nsystem governed microgrid in Energy\
    \ Internet\nnot investigated.\n[17]\n•\nProposed a robust optimization method\
    \ for the\nday ahead home energy management system to\nreduce the energy price.\n\
    •\nThe energy management for a multi-agent\nsystem governed microgrid in Energy\
    \ Internet\nnot investigated.\n[18]\n•\nProposed more realistic and precise analytical\n\
    models under four power request control\nscenarios for peak demand determination\
    \ in a\nresidential environment.\n•\nThis study does not consider the tradeoffs\n\
    between electricity bills and user discomfort.\n•\nThe energy management for a\
    \ multi-agent\nsystem governed microgrid in Energy Internet\nnot investigated.\n\
    [19]\n•\nProposed a novel energy management system\nand control method for a smart\
    \ grid system\ndepended on green energy.\n•\nThe data processing and storage using\
    \ IoT layer\nplatform is not considered.\n•\nThe multi-agent approach does not\
    \ implement in\nthis paper.\n[20]\n•\nPresented an IoE transactive energy management\n\
    systems based on fog architecture.\n•\nThe multi-agent approach does not implement\
    \ in\nthis paper.\n[21]\n•\nPresented an IoT based computer energy\nmanagement,\
    \ which generates a consumer load\nproﬁle for remote access by a utility company\
    \ or\na consumer.\n•\nThe multi-agent approach does not implement in\nthis paper.\n\
    [22]\n•\nProposed an IoT house energy management\nsystem for fog computing applications\
    \ based on\nZigbee, MQTT and Wi-Fi sensor nodes.\n•\nA cloud-based platform for\
    \ multi-agents hybrid\nmicrogrid not investigated in this paper.\n•\nHowever,\
    \ the authors did not use a\nmeta-heuristic technique (the grey wolf\noptimizer,\
    \ artiﬁcial bee colony optimization\nalgorithm, etc.) to minimize the cost.\n\
    [23]\n•\nProposed a multi-objective problem, whose\nresolution takes place using\
    \ an evolutionary\nalgorithm and a task management methodology.\n•\nHowever, implementation\
    \ of these systems in a\nreal environment is costly and can in a user rang\nthrough\
    \ a centralized system (i.e., cloud or\nfog-based system).\n•\nA cloud-based platform\
    \ for multi-agents hybrid\nmicrogrid not investigated in this paper.\n[24]\n•\n\
    Proposed Adaptive Energy Management System\nfor Smart Microgrids.\n•\nThe multi-agent\
    \ approach does not implement in\nthis paper.\n•\nA cloud-based platform for multi-agents\
    \ hybrid\nmicrogrid not investigated in this paper.\nSensors 2021, 21, 4756\n\
    5 of 28\nTable 2. Cont.\nReference\nContributions\nShortcomings\n[25]\n•\nProposed\
    \ real-time optimum schedule controller\nfor EMS using binary game theory algorithm.\n\
    •\nThe data processing and storage using IoT layer\nplatform is not considered.\n\
    •\nThe multi-agent approach does not implement in\nthis paper.\n[26]\n•\nProposed\
    \ a novel robust control method for\noperated parallel inverters in green applications.\n\
    •\nThe multi-agent approach does not implement in\nthis paper.\n•\nThis study\
    \ does not consider the tradeoffs\nbetween electricity bills and user discomfort.\n\
    [27]\n•\nProposed a novel energy management system of\non-grid/off-grid utilizing\
    \ adaptive neuro-fuzzy\ninference framework.\n•\nThe multi-agent approach does\
    \ not implement in\nthis paper.\n•\nThe data processing and storage using IoT\
    \ layer\nplatform is not considered.\n[28]\n•\nProposed Voltage Over-scaling-based\n\
    Lightweight Authentication for IoT Security.\n•\nThe multi-agent approach does\
    \ not implement in\nthis paper.\n•\nThis study does not consider the tradeoffs\n\
    between electricity bills and user discomfort.\n[29]\n•\nProposed the ﬁrst Physical\
    \ Unclonable\nFunction-based key sharing method that the\nsame shared-key can\
    \ be generated in physically\nfor all devices so that it can be applied in the\n\
    lightweight key-sharing protocol for IoT devices.\n•\nThe multi-agent approach\
    \ does not implement in\nthis paper.\n•\nThis study does not consider the tradeoffs\n\
    between electricity bills and user discomfort.\n[30]\n•\nPresented a real-time\
    \ demand-side management\nframework based on robust model predictive\ncontrol\
    \ (RMPC) for residential smart grids.\n•\nThe energy management for a multi-agent\n\
    system governed microgrid in Energy Internet\nnot investigated.\n[31]\n•\nProposed\
    \ Energy Management in Electrical\nSmart Grid Environment Using Robust\nOptimization\
    \ Algorithm.\n•\nThe energy management for a multi-agent\nsystem governed microgrid\
    \ in Energy Internet\nnot investigated.\n[32]\n•\nProposed a distributed demand-side\n\
    management (DSM) approach for smart grids\ntaking into account uncertainty in\
    \ wind power\nforecasting.\n•\nThe energy management for a multi-agent\nsystem\
    \ governed microgrid in Energy Internet\nnot investigated.\n[33]\n•\nProposed\
    \ a robust economic model predictive\ncontrol method that guarantees an optimal\n\
    energy dispatch in a smart micro-grid.\n•\nThe energy management for a multi-agent\n\
    system governed microgrid in Energy Internet\nnot investigated.\n2.1. Research\
    \ Gaps\nFrom the literature, many essential research gaps have been identiﬁed.\n\
    1.\nIn many systems such as [10,15–18] The energy management for a multi-agent\
    \ system\ngoverned microgrid in Energy Internet not investigated.\n2.\nIn many\
    \ systems such as [30–33] a cloud-based platform for energy management\nsystem\
    \ in microgrid not investigated.\nSensors 2021, 21, 4756\n6 of 28\n3.\nIn many\
    \ systems such as [22,24,25], the authors did not use a meta-heuristic technique\n\
    (the grey wolf optimizer, artiﬁcial bee colony optimization algorithm, etc.) to\
    \ minimize\nthe cost.\n4.\nIn some of the above studies such as [26,28] the focus\
    \ of the authors is on approach to\nsolve energy management problem, However,\
    \ the transfer of a massive amount of\ndata on the existing communication infrastructure\
    \ is challenging.\n5.\nIn many papers, the user comfort and PAR are ignored, which\
    \ are directly linked with\nthe total electricity bill.\n6.\nIn some of the above\
    \ studies such as [11–13] the authors reduced peaks in demand\nwhile user comfort\
    \ is minimized.\n2.2. Paper Contribution\nIn this paper, a novel real-time electricity\
    \ scheduling for smart demand side manage-\nment system using the IoT is proposed\
    \ that employs: scalability, adaptability, Interoperabil-\nity and connectivity\
    \ between appliances over cloud platforms. The key contributions of\nthis paper\
    \ are summed up here:\n•\nFirstly, the researchers investigated the MAS-controlled\
    \ MGs in the Energy Internet,\nwhich has not been reported in the past.\n•\nProposed\
    \ an advanced demand management scheme based on the grey wolf opti-\nmizer (GWO),\
    \ artiﬁcial bee colony (ABC) optimization algorithm to minimize power\nmismatching,\
    \ energy bill and load energy waste.\n•\nThirdly, they implemented a framework\
    \ for the proposed control technique using\nMAS and cloud servers.\n•\nFurthermore,\
    \ we proposed an IoT-based communication protocol, which included\nspeciﬁcations\
    \ such as MQTT. This improves system ﬂexibility. The proposed system\noffered\
    \ analytics and business intelligence (BI), which allowed the researchers to gain\n\
    insights on the data collected by visualizing dashboards and reports. Additionally,\
    \ the\nuse of big data-based data storage technologies enabled the system’s scalability\
    \ at the\nnational level. This provided energy-efﬁciency strategies for the household\
    \ owners\nand the utility companies.\n•\nWe implemented a hierarchical two-layered\
    \ communication architecture based on\nthe MQTT protocol and using the cloud-based\
    \ server called Node-Red. This helped\ncustomers realize the global and local\
    \ communications necessary for the neighborhood\nappliance controllers.\n3. Methodology\n\
    3.1. Proposed System Description\nHere, the researchers considered that the DGs\
    \ consisted of the communication and\ncontrol agents in the Internet of Energy\
    \ realm, as described in Figure 1. It was noted that the\nDGs in microgrid were\
    \ controlled by a framework, wherein every DG was managed by one\nMAS (Multi agent\
    \ System). The MAS agents communicate by Local Area Network (LAN)\nand can access\
    \ the internet for remotely controlling the micro grid via the cloud servers.\n\
    In the Energy Internet, every distributed generator/microgrid was managed by various\n\
    stakeholders, and their controllers on the MAS/agents differed from MG components.\n\
    Figure 1 presents the proposed system.\nSensors 2021, 21, 4756\n7 of 28\nFigure\
    \ 1. Proposed system.\nSmart grid would need an effective measuring and communication\
    \ system in order to\ncontinuously track the power and cost proﬁle and regularly\
    \ quantify power losses. There\nare several stages of data processing.\nThis work\
    \ contains measurement units (MU) for every Distribution Network Bus. MU\nis MATLAB\
    \ modeling. Power and cost information is sent to the control center regularly\n\
    at ﬁxed time. The control center is designed as a virtual data management and\
    \ analysis\nplatform. One approach to communication relating to the device topology\
    \ proposed is\nconsidered. The case takes a Cloud approach, which sends its measured\
    \ data directly to\nthe Cloud by any MU connected to corresponding feeder bus\
    \ as illustrate in Figure 1.\nReal-time data transfer among the Raspberry Pi3\
    \ package and the open source IoT\nframework Node-Red are used to model proposed\
    \ communication architectures. Node-\nRed was chosen for the simulation of real\
    \ time cloud communication Due to its following\nbeneﬁts [34]:\n1.\nNode-Red Cloud\
    \ IoT platform data aggregation, tracking and analysis. In the smart\ngrid model,\
    \ power proﬁle is monitored on multiple Node-Red channels in real time\nand depicted\
    \ graphically.\n2.\nSecurity: The Username and password allow user authentication\
    \ while each channel\nis equipped with its own ID and can be accessible (see by\
    \ other users). There are two\nkeys in each channel for the application programming\
    \ interface. A randomly gener-\nSensors 2021, 21, 4756\n8 of 28\nated read key\
    \ and write key of the API. These keys can save or retrieve information\nfrom\
    \ stuff from each channel over the Internet or LAN.\n3.\nIt facilitates the double-way\
    \ ﬂow of data between user and virtual device and allows\ndata and remote control\
    \ to be exchanged in real time. The MATLAB Desktop Real-\ntime Toolbox offers\
    \ a communication between the simulated feeding model and the\nNode-Red IoT platform.\n\
    4.\nCommunication network enabling for real-time data transmission over the Internet\n\
    between Raspberry Pi3 and Node-Red.\n5.\nAllows importing, exporting, analyzing\
    \ and viewing data on multiple platforms and\ntheir ﬁelds simultaneously.\n3.2.\
    \ Problem Formulation\nWe consider a home energy management system that equips\
    \ a household with a\nsingle power management system and various types of appliances\
    \ to reduce its energy\nconsumption. A two-way communication network that enables\
    \ price exchange and in-\nformation about the energy consumption in accordance\
    \ with applied conditions is the\nenergy management system connected to the supplier.\
    \ The energy management system\nreceives the information on the hourly price of\
    \ the service provider and manages the energy\nconversion in response to the price\
    \ levels of each device.\nElectric household appliances are generally divided\
    \ into three main types according to\ntheir features and imports, containing non-shiftable,\
    \ shiftable and controllable loads. The\nfollowing paragraphs detail the mathematical\
    \ wording of the home energy management\nsystem counting the numerous operating\
    \ constraints for all appliance groups and the\nobjective function.\nTo minimize\
    \ the objective function of cost of devices in individual and community consumer:\n\
    minPn = ∑\nn∈N ∑\nt∈T ∑\nq∈Q ∑\nd∈D\n(αn,t\nqd × Ln,t\nqd × Pn,t\nE − βn,t\nr\
    \ × Sn,t\nr × Pn,t\nr + γn,t\nP × Ln,t\nL × Pn,t\nP ) (1)\nwhere, γn,t\nP is the\
    \ decision ﬂexible, N is the total amount of users, T is the time, Q is the\n\
    type of load, D is the total number of devices, αn,t\nqd is the decision variable\
    \ for the appliances,\nPn,t\nE\nis the electricity, Sn,t\nr\nis the decision variable\
    \ for energy, Ln,t\nL is the electricity storage\nat time t, Ln,t\nqd is the power\
    \ proﬁle of the house devices [35].\n3.2.1. Non-Shiftable Appliances\nNon-shifting\
    \ appliances require critical demands that have to be fulﬁlled during the\nenergy\
    \ distribution process, such as certain security alarm framework. The non-shiftable\n\
    load starts to work, it must work constantly and cannot be programmed. The energy\
    \ use\nof these appliances always meets energy demand [36].\nEnon\nn,h = enon\n\
    n,h\n(2)\nwheren ∈ {1, 2, 3, . . . ,N} indicateadevicen, Nistotalnumberofdevices,\
    \ h ∈ {1, 2, 3, . . . , H}\nrepresents an hour and H is a ﬁnal day hour. En,h\
    \ and en,h represents the actual energy\nconsumption and electricity demand of\
    \ devices n at hour h, respectively. The costs of\nsuch devices are only the energy\
    \ consumption bill for electricity. So, a non-shiftable utility\nfunction device\
    \ n is:\nUnon\nn,h = Ph · Enon\nn,h\n(3)\nwhere Ph represent price at h.\nSensors\
    \ 2021, 21, 4756\n9 of 28\n3.2.2. Shiftable Appliance\nShifting loads can plan\
    \ their demand for energy to off-peak hours if the price is low\non the horizon,\
    \ not only prevents the maximum energy consumption but also reduce the\nenergy\
    \ bill. Shift able appliances have two operating points available, ‘off’ and ‘on’.\n\
    Eshift\nn,h = In,h · eshift\nn,h\n(4)\nwhere In,h is a binary variable for device\
    \ n, i.e., In,h = 1 if device works at h; otherwise\nIn,h = 0.\nThere are two\
    \ types of costs for this type of device: the electricity bill for energy\nconsumption\
    \ and the lack of satisfaction with waiting times to start and then conclude\n\
    the operation of the device. For instance, during the work period, the washing\
    \ equipment\n(WM) usually operates (i.e., 18–23 pm), but time can be changed from\
    \ high price electricity\nto low price periods, if the WM starts to work at Tn,w,\
    \ in this case, the waiting time would\nbe Tn,w − Tn,ini (i.e., 3 h).\nShiftable\
    \ utility function [36]:\nUshift\nn,h\n= Ph · Eshift\nn,h\n+ kn · (Tn,w − Tn,ini)\n\
    (5)\nTn, ini ≤ Tn,w ≤ [Tn, end − Tn,ne]\n(6)\nTn,ne ≤ Tn, end − Tn, ini\n(7)\n\
    where electricity costs represent the ﬁrst term and the second term refers to\
    \ waiting time\ncosts in Equation (5). Kn is a system-dependent coefﬁcient, Tn,\
    \ ini is initial time and Tn, end\nis end time, Tn,w represent the operation starting\
    \ time and Tn,ne indicates the time required\nfor the shiftable devices.\n3.2.3.\
    \ Modeling of Energy Storage\nIn order to achieve green energy goals and ensure\
    \ system reliability, the energy storage\nsystem plays a vital role. Therefore,\
    \ an energy storage system is used for storing excess\navailable energy in our\
    \ considered home energy management system. Eb(t) indicates\nthe energy stored\
    \ in the battery at any time, t and given in Equation (8). Eb(t). has a\npositive\
    \ loading value, while the discharge is negative. ηc and ηd denote to charging\
    \ and\ndischarging efﬁciencies of the battery. The constraints given in Equations\
    \ (9) and (10) are\nconsidered for limiting the maximum charging and discharging\
    \ states of energy storage\nsystem. δb(t) is a binary variable at time t [37].\n\
    Eb(t)& = Ec\nb(t)\nηc\nδb(t) − Ed\nb(t)ηd(1 − δb(t))\n(8)\n0& ≤ Ec\nb(t)\nηc\n\
    ≤ Ec\nb,max(t)δb(t)\n(9)\n0& ≤ Ed\nb(t)ηd ≤ Ed\nb,max(t)(1 − δb(t))\n(10)\nSOC(t)\
    \ = SOC(t − 1) + Eb(t)\nCb\n(11)\nSOCmax ≤ SOC(t) ≤ SOCmin\n(12)\nThe state of\
    \ charge (SoC) of battery is modeled in Equations (11) and (12) models\nthe minimum\
    \ and maximum SoC limits of battery at time t. The battery rated capacity is\n\
    denoted by Cb.\n3.2.4. Modeling of Photovoltaic\nThis study model uses the probabilistic\
    \ models of beta distribution-based solar irradi-\nance and photovoltaic generation\
    \ variability. The probabilistic model of solar irradiance\nSensors 2021, 21,\
    \ 4756\n10 of 28\nrandom variable G is obtained by describing it in probability\
    \ density function (pdf) expres-\nsion as,\nf (G) = Γ(a + b)\nΓ(a)Γ(b)Γa−1(1 −\
    \ Γ)b−1, 0 < G < ∞\n(13)\nwhere f (G) is the probabilistic beta distribution function\
    \ of solar irradiance random\nvariable G. a and b are the parameters, which are\
    \ calculated using mean G and standard\ndeviation σ2\nG of random variable G.\n\
    b = (1 − µG) ×\n \n(µG(1 + µG))\nσ2\nG\n− 1\n!\n(14)\na =\nbµG\n1 − µG\n(15)\n\
    The power generated by the photovoltaic system after inverter, Ppv at time t in\
    \ the\nsuggested home energy management system is determined by Equations (16)\
    \ and (17):\nPpv(t)& = ηpvηinv Ppv,n\nG(t)\nGstc [1 − λ(Tc(t) − Tstc)]\n(16)\n\
    Tc(t)& = Ta +\nG(t)\nGNOCT\n(NOCT − 20)\n(17)\nwhere Ppv,n, ηpv and ηinv are rated\
    \ power of photovoltaic panel, photovoltaic panel\nefﬁciency and inverter efﬁciency,\
    \ respectively. The values of ηpv and ηinv are 92% and\n95%, respectively. λ is\
    \ temperature-dependent power degradation coefﬁcient. Tc(t) is\nphotovoltaic cell\
    \ temperature at time t. Gstc and Tstc are solar irradiance and temperature\n\
    at standard temperature condition (stc). NOCT is nominal operating cell temperature\
    \ [37].\n3.2.5. Preference of Operation Period\nThe binary matrix is utilized\
    \ for a ready-to-use factor. This requires the ready-to-use\nslot wn,t\nqd to\
    \ run the devices over time. Home users tend to operate a computer more often\n\
    throughout the day, and then substitute it with more devices.\nP1 : αn,t\nqd =\
    \ αn,t\nqd × wn,t\nqd\n(18)\n3.2.6. Variable Decision\nConstraint P2 is the decision\
    \ variable of the device ON/OFF. Constraints P3 is de-\ncision variable of user\
    \ for self generation power. If βn,t\nr\n= 1, user is a prosumer and\nβn,t\nr\n\
    = 0 for user is a consumer. Consumers purchase electricity from the neighborhood\n\
    microgrid or power grid.\nP2 : αn,t\nqd ∈ {0, 1}\n∀q, t ∈ T\n(19)\nP3 : βn,t\n\
    r\n∈ {0, 1}\n∀q, t ∈ T\n(20)\nP4 : γn,t\nP ∈ {0, 1}\n∀q, t ∈ T\n(21)\n3.2.7. Devices\
    \ Task\nFor the measurement of energy proﬁles, it is mandatory to know the working\
    \ life of\nintelligent devices. tqd is the operation time of dth devices in the\
    \ T slot time in P5. αn,t\nqd is the\ndecision variable to turn ON/OFF the device.\
    \ The constraints P5 and P6 are continuous\ntimes to accomplish a task and it\
    \ has to remain ON at time T , until it has ﬁnished a task.\nSensors 2021, 21,\
    \ 4756\n11 of 28\nFor instance, once a washing machine begins to work, it runs\
    \ continuously until the ﬁnal\ntime limit is set, P6 is formulated. ts is the\
    \ devices starting time [35].\nP5 :\nT\n∑\nt=1\nαn,t\nqd = tqd\n∀q, t ∈ T\n(22)\n\
    P6 :\nts+tqd−1\n∑\nt=ts\nαn,t\nqd = tqd\n∀q, t ∈ T\n(23)\n3.2.8. Devices Priority\n\
    When another system completes the service cycle, the appliance will start running.\n\
    A dryer will not operate until the laundry has completed its operating cycle.\
    \ si is the group\nof these kind of loads. The decision variable selects the devices\
    \ of each group for each\ntime span.\nP7 : ∑\nd∈si\nαn,t\nqd = 1\n∀q, t ∈ T\n\
    (24)\n3.2.9. Price\nThe price signal is received from the group micro grid. A\
    \ utility grid is optional for our\nstudy, the energy volume for export and import\
    \ from the community. The dynamic-pricing\nsystem is used for electronic transactions\
    \ from the grid. The prices are believed to be\naccepted and cannot be updated\
    \ after publication. The pricing system can be freely chosen\nby the customers.\
    \ The costs of the same load will differ at different times in one day. The\n\
    electricity is consistently low and expensive to obtain from the grid at night\
    \ and vice-versa.\nThe energy price depends on the energy used and the time per\
    \ day the energy is used.\nPn,t\nE\n=\n\n\n\nPr = 0.3\ni f rsa = 1\nPb = 0.7\n\
    i f Eba = 1\nPg > Pb > Pr\nO.W\n\n\n\n(25)\nwhere Pn,t\nE\nis the electricity\
    \ tariff, Pr and Pb are electricity prices from the community\nmicro grid and\
    \ Pg is a utility grid purchase.\n3.2.10. Energy Transaction with Grid\nThe home\
    \ management system imports energy from the main grid in case of local en-\nergy\
    \ depletion and exports energy to the main grid in case of local excess energy\
    \ availability.\nThe total energy transaction is calculated using the main grid\
    \ Equation (26)\nEtr(t) = Eha(t) − Epv(t) + Eb(t)\n(26)\nwhere Etr(t), Epv(t)\
    \ and Eb(t) are the total energy transacted with main grid, photovoltaic\nenergy\
    \ generation and the batteries charge (discharge) energy at time t, respectively.\
    \ A pos-\nitive of Eb(t) represent the charging of the batteries and negative\
    \ value of Eb(t) represent\nthe discharging state of the batteries [37].\n3.2.11.\
    \ Multi Agent System (MASs) Communication\nThe communication networks of microgrid\
    \ having N agents were represented us-\ning a graph: G = (PG, EG) having a deﬁned\
    \ set of nodes PG = {p1, p2, . . . , pN} and\nedges EG ⊆ PG × PG. All nodes presented\
    \ in the graph G(agents) showed a one-to-one\ncorrespondence to the nodes in the\
    \ graph T (DGs). Furthermore, the edges in G, which\nrepresented the communication\
    \ links for the data exchange, differed from the electrical\nconnection seen in\
    \ T . In addition, the set of neighbors described in the ith node of G was\nrepresented\
    \ by Ni =\n\b\npj ∈ PG :\n\0pi, pj\n\x01 ∈ EG\n\t\n. The researchers represented\
    \ the adjacency\nmatrix as\n\x02\naij\n\x03 ⊆ Rn×n. Here, the term aij represented\
    \ the information that was exchanged\nbetween the agents i and j, wherein aij\
    \ = 1 when agents i and j were connected with\nSensors 2021, 21, 4756\n12 of 28\n\
    the edge (pi, pj) ∈ EG, else aij = 0. The researchers represented the Laplacian\
    \ matrix as\nL =\n\x02\nlij\n\x03 ⊆ Rn×n where each element lij = ∑n\ni=1 aij\
    \ − aji. They described the pinning\nmatrix as G = diag[gi] ⊆ Rn×n and gi = 1\
    \ when the agent could access the references Pre f\nelse gi = 0. Figure 2 presents\
    \ an example of the data exchange between the controllers.\nFigure 2. Exchange\
    \ information among agents.\n3.3. Proposed Communication Platform of Energy Internet\n\
    The decentralised controller of a smart MG helps in managing the system operating\n\
    conditions if there is some disturbance. Furthermore, the IoT technology can be\
    \ used\nfor communicating between the appliances present in smart homes, central\
    \ controller or\npower management centres. The researchers proposed the IoT platform\
    \ for collecting\nthe data, monitoring, managing and controlling microgrid. All\
    \ appliances and energy\nresources were integrated and connected in this platform.\
    \ Proposed internet of energy\ncommunication platform presented in Figure 3.\n\
    Figure 3. Proposed simulation Internet of Energy platform architecture.\nIt is\
    \ a demanding job to develop an energy management distributed Energy Internet\n\
    (IoE) base. The role of the platform is to (1) incorporate the micro-grid tools\
    \ into the\ncommunications system and (2) link to the IoE cloud in order to track\
    \ and manage the\ndevices. The IoE communications network proposed is composed\
    \ of 4 different layers, as\ndeﬁned in Figure 2.\n3.3.1. The MQTT Knowledge\n\
    The MQTT is a lightweight protocol. The MQTT is operational in the TCP and ensures\n\
    that all messages are forwarded from agent to server.\nThree major players, i.e.,\
    \ A MQTT protocol includes MQTT Publisher, MQTT Broker\nand a MQTT subscriber.\
    \ MQTT’s subscribing and publishing companies have indirect\nconnections and no\
    \ IP address at the same time. An MQTT broker takes care of the cus-\ntomer authorization\
    \ and initialization process necessary for communication. To publish\nthe information,\
    \ the MQTT publishers utilize custom themes for catering to their clients.\nThe\
    \ MQTT protocol did not use a Metadata marking. Thereafter, the MQTT topic man-\n\
    agement presents the metadata for a message load. MQTT is known as a string with\
    \ the\nSensors 2021, 21, 4756\n13 of 28\nhierarchical structure of multi-attribute\
    \ and multi levels. Every stage can be separated\nfrom the forward slash in a\
    \ theme tree [38]. For routing data derivation, all subjects can be\nmodiﬁed.\
    \ Following the exchange of control packets among clients and brokers, Figure\
    \ 4a\npresents the link initialization. Check packets for CONNAC, Connect, PUBACK,\
    \ PUBLISH,\nSUBSCRIBE, SUBACK, etc., were shown to include speciﬁc instructions\
    \ concerning the\nsubject, transmission and payload service quality (QoS). Figure\
    \ 4b presents all components\nof the MQTT contact.\nFigure 4. (a) MQTT Procedure,\
    \ (b) MQTT Topic and Component.\n3.3.2. Proposed Architecture\nThe hierarchical\
    \ system provided for intelligent homes with a control-layer and\ncyber-layer\
    \ is presented in Figure 5. 2 communication layers were included in the hybrid\n\
    platform. It was seen that in the Layer 1 (local layer), the appliances in the\
    \ smart building\ntransmitted the MQTT messages to a Building MQTT Client (BMC)\
    \ and reported the\nmeasurement and subscribed to the MQTT message that were published\
    \ via MQTT Client\nfor protection/control purpose. A connection between the Cloud\
    \ and BMC using HTTP\nPOST/GET requests was seen in Layer 2 (who is the global\
    \ layer). Any appliance in this\narchitecture had Wi Fi unit connected to the\
    \ local gate way. Thus, values of a committed\nand pre-deﬁned subject could be\
    \ published regularly [39,40]. The BMC then subscribes\nto the various topics\
    \ and transmits the values obtained to the cloud channel. A MATLAB\ncloud interface,\
    \ which implements the built algorithm for allocating appliances, is available\n\
    to access all cloud data. The algorithm results are then transferred with BMC\
    \ from a cloud\nto intelligent devices that control them. The researchers found\
    \ that when communication\nin any layer fails, the suggested architecture is robust\
    \ (either local or global). Hence, the\nBMC was so designed that during any communication\
    \ link failure or high latency noted\nin the network, it could operate as a local\
    \ controller for all appliances in building. This\nfunction of BMC was highlighted\
    \ in the Results section.\nSensors 2021, 21, 4756\n14 of 28\nFigure 5. Smart home\
    \ proposed architecture of communication.3.4. Proposed Optimization Method.\n\
    3.3.3. Grey Wolf Algorithm\nThe proposed energy management strategy consists of\
    \ three phases: input, process and\nout. The demand-side management strategy home\
    \ energy management systems handle the\ninput variables to calculate the total\
    \ satisfactory desired day satisfaction values and provide\nthe grey wolf satisfaction\
    \ algorithm with all the input parameters calculated to identify the\noptimum\
    \ scheduling pattern for the devices that provide the highest level of satisfaction,\
    \ i.e.,\nthe output. The process of calculating the method designed is further\
    \ elaborated.\nThe Objective Function\nThe objective function via grey wolf accretive\
    \ satisfaction algorithm is the absolute\nsatisfaction level, via generating a\
    \ best scheduling pattern of house devices [41].\nObj\n\0µs, Cβ\n\x01 = max(µs)\n\
    (27)\nSensors 2021, 21, 4756\n15 of 28\nThat Cs_index ($) depends upon consumer\
    \ satisfaction and total consumer expenses\nthus Grey Wolf accretive satisfaction\
    \ algorithm cost function can also be described as\nObj(Cs_index ($)) = min\n\0\
    Cs−index ($)\n\x01\n(28)\nConstraints\nGrey Wolf accretive satisfaction algorithm\
    \ is subject to two constraints of energy consumption.\nBudget constraint of Grey\
    \ Wolf accretive satisfaction algorithm refer to as the total\nuser electricity\
    \ expenses TUexp must be less than the already deﬁned budget limit C of\nconsumer\
    \ which can be stated as:\nTUexp ≤ Cβ\n(29)\nTUexp = TEC × UT\n(30)\nTEC =\nZ\n\
    ∑\nn=A\n(TOTn × TPRn)\n(31)\nwhere TOTn is total operational time, TPRn represent\
    \ total power rating.\nThe maximum amount of energy available is the energy constraint\
    \ that should not be\ninfringed; the consumer can eat within one day. This is\
    \ why energy can be restricted:\nTEC ≤ TAE\n(32)\nTEA =\nCβ($)\nUT($/kWh)\n(33)\n\
    where total energy TEA is available to consumers as much as possible as their\
    \ energy\nbudget can be determined,\nXd(t + 1) =\n(\n1,\nS\n\x10\nXd\n1 + Xd\n\
    2 + Xd\n3/3\n\x11\n⩾ r8\n0,\notherwise\n(34)\nX1 =\n\f\fXα − 2a · r1 − a · Dα\n\
    \f\f\nX2 =\n\f\fXβ − 2a · r1 − a · Dβ\n\f\f\nX3 =\n\f\fXδ − 2a · r1 − a · Dδ\n\
    \f\f\n(35)\nwhere r1 belongs to a vector of [0, 1], Xd\n1, Xd\n2, Xd\n3 are updated\
    \ position at iteration t as\ndescribed in Equation (35). A value of Dα, Dβ, Dδ\
    \ can be obtained from [41]. It is evident in\nthe above equations that the loser\
    \ learns to update their positions by the winners; therefore,\nthe performance\
    \ of the BGWO will increase. The following details are given as to the steps\n\
    taken by GWASA to achieve an optimum scheduling pattern for device use. Figure\
    \ 6 shows\nﬂowchart of grey wolf algorithm:\nA = 2a × r1 − a\nC = 2r2\na = 2 −\
    \ 2(t/T)\n(36)\nLa =\n(\nrand(0, 1)\nif CR ≤ r9\nXd\nL,\notherwise\n(37)\nCR =\
    \ 0.9 − 0.9(t/T)\n(38)\nSensors 2021, 21, 4756\n16 of 28\nFigure 6. Flow diagram\
    \ of grey wolf algorithm.\n3.3.4. Artiﬁcial Bee Colony Algorithm\nIn 2005, Karaboga\
    \ described the algorithm for bee swarms known by its name as\nArtiﬁcial Bee Colony\
    \ (ABC). The chief idea is honey bee movements’ smart and behav-\nior [42]. The\
    \ best way of combating local extremes is to use a global algorithm such as\n\
    ABC algorithm. The food in the colony is composed of three players: (i) sources\
    \ of food;\n(ii) bees employed and (iii) unemployed bees divided to spectators\
    \ and scout bees. The\nEmployed bees look into a source of food and perform a\
    \ negotiated dance to attract visitors\nto the food sources after returning to\
    \ a colony. As the duration of dance is associated with\nthe consistent supply\
    \ of food, stronger suppliers (global Optima) are more likely to prefer\nonlooker\
    \ bees. The used bee becomes a bee that looks unexpectedly for fresh food when\n\
    the food supply is depleted.\nThe on-sight bee monitors and sends many employed\
    \ bees to ﬁnd the source of food.\nDuring each iteration, the scout bee offers\
    \ the same solution. The viewing bee then checks\non the best solution and saves\
    \ it in memory for ﬁtness (e.g., cost function). A viewer\nbee selects, after\
    \ a certain number of iterations, the best optimal solution from multiple\nsolutions.\
    \ In phase two, an onlooker bee is directed to ﬁnd the random source of food by\n\
    an observer (i.e., random solutions for DG size). The scout bee is assigned the\
    \ task for a\nglobal optimal solution in order to avoid trapping in local minima.\
    \ to the random search.\nSensors 2021, 21, 4756\n17 of 28\nThe ﬁrst factors are\
    \ the amount of food dots (NFP), which equal the total number of\nbees, within\
    \ the ABC algorithm. Random numbers are used to form the initial solution\npopulation,\
    \ with the following random positions [42]:\nXij = Xj,min + rand ×\n\0Xj,max −\
    \ Xj,min\n\x01\n, i = 1, 2, . . . NFP, j = 1, 2, . . . , J\n(39)\nwhere Xij is\
    \ the ith population and NFP is a set. Xj,min and Xj,max illustrate minimum and\n\
    maximum boundaries of jth vector. Rand is at the same time a random number, distributed\n\
    in a uniform way between 0 and 1. The following can show the ﬁtness function:\n\
    Fitnessi = Obj\n\0Xij\n\x01 +\nM\n∑\nm=1\nλeq,m\n\f\fh\n\0Xij\n\x01\f\f2 +\nN\n\
    ∑\nn=1\nλineq ,n\n\f\fg\n\0Xij\n\x01\n. − glim\n\f\f2\n(40)\nwhere Obj is the\
    \ objective function, while equality and inequality constraints are repre-\nsented\
    \ by h\n\0Xij\n\x01\nand g\n\0Xij\n\x01\n. The λeq,m and λineq ,n can be adjusted\
    \ in the optimisation\nprocess. glim can be represented as:\nglim =\n\n\n\n\
    Xj,\nif Xj,min ≤ Xj ≤ Xj,max\nXj,min,\nif Xj < Xj,min\nXj,max,\nif Xj > Xj,max\n\
    (41)\nWhen one or more variables violate the limits and person concerned is, therefore,\n\
    discarded to skip the infeasible solution, value of penalty factor can be increased.\
    \ Figure 7\nillustrates the ﬂowchart of the ABC algorithm.\nFigure 7. Flowchart\
    \ of Artiﬁcial Bee Colony Algorithm.\nSensors 2021, 21, 4756\n18 of 28\n4. Experimental\
    \ Results Validation\nTo experiment and prove the beneﬁts of proposed home energy\
    \ management system\nover a cloud as a service (HEMaaS), many services have been\
    \ evaluated and implemented\nover the platform.\nIn this section, HEMaaS results\
    \ have been presented and discussed with the suggested\nalgorithm through a platform\
    \ cloud to regulate devices in the smart home. A Raspberry-\nPi3 in the Main Command\
    \ and Control Unit (MCCU) organizes node-red platforms, as\ndeveloped in the Software\
    \ Communication and Architecture Interface. As a broker between\nthe home device\
    \ subscription and the publisher of the MCCU Protocol. A custom python\ncode using\
    \ the suggested algorithm is used for regulating the house device operation via\n\
    the MQTT Gateway. In this study, a user interface (UI) is designed with the Node-Red\n\
    dashboard interface, allowing a customer to access and interact via a Cloud Service\
    \ System\nwith HEMaaS. The dashboard control design is illustrated in Figure 8.\n\
    Figure 8. Node-Red platform.\n4.1. The Base Station Unit\nIn the proposed system\
    \ the Base Station Unit (BSU) plays an important role. The\nBSU is the coordinator\
    \ of the system. A Raspberry Pi3 board is a Base Station hardware\nunit. The Base\
    \ Station Unit analyzes and transmits data to the mobile and Web page of the\n\
    owner. To establish the Wi-Fi connection the terminal units can connect to this,\
    \ the basic\nstation unit should be set up in access point mode. Mosquito, an\
    \ open-source message\nbroker implementing the MQTT protocol, was installed in\
    \ the Base Station Unit. MQTT\noffers a lightweight method to perform messaging\
    \ using a publish/subscribe model, which\nconsists of a 2-byte ﬁxed-header method.\
    \ Figure 9 shows the Base Station Unit.\nSensors 2021, 21, 4756\n19 of 28\nFigure\
    \ 9. Base Station Unit structure.\n4.2. Terminal Unit\nThe Terminal Units (TUs)\
    \ are the sub-units of the Wireless Sensor Network (WSN) system.\nEach TU comprises\
    \ the sensor, processor, wireless communication and power module.\nThe agent controller\
    \ is a Wemos-D1 board that collects and processes sensor data and\ntransmits the\
    \ information obtained to the Base Station Unit. Figure 10 shows the internal\n\
    structure of the prototype Terminal Unit used for implementing the system. Figure\
    \ 11\nillustrates a ﬂowchart of the Terminal Unit.\nFigure 10. Terminal Unit.\n\
    Sensors 2021, 21, 4756\n20 of 28\nFigure 11. Terminal Unit ﬂowchart.\n4.3. Access\
    \ of Internet Web Page\nTo access the web page locally, Raspberry Pi3 IP local\
    \ ports 1880 for the Node-Red\nsite are used for internet protocol (IP). The local\
    \ IP is http://192.168.0.104:1880/ui. The\nNgrok server can convert the local\
    \ IP address of Raspberry Pi3 from anywhere in the world\nto a global IP address.\
    \ The web page http://4a652641cd68.ngrok.io, is accessible during\nNgrok’s registration\
    \ for the web page. Figure 12 shows the web page of a web browser\nafter the username\
    \ and password have been entered and provided in the URL.\nFigure 12. Web site\
    \ to enter username and password in the browser.\nSensors 2021, 21, 4756\n21 of\
    \ 28\nFor scheduling, where each house has several devices, three intelligent\
    \ homes are\nenvisaged. We considered the same energy demand for any consumer\
    \ for a fair comparison\nof the electricity bill for three households. Table 3\
    \ includes a comprehensive overview of\neach apparatus. The appliances selected\
    \ have three groups: no interruptible, interruptible,\nscheduled and non-schedulable.\n\
    Table 3. Micro grid appliances detail description.\nType\nDaily Usage\nPower (kW)\n\
    Appliances\nDevices of Fixed loads\n24\n0.25\nRefregrator\n5\n3\nHVAC\n8\n0.2\n\
    TV\n9\n0.25\nLights\n18\n0.3\nPC\n24\n0.1\nCameras\n3\n1\nOven\nDevices of Non\
    \ shiftable loads\n3\n1.5\nWashing machine\n4\n1\nClothes Dryer\n2\n1\nDish washer\n\
    2\n1.2\nElectric frying pot\nDevices of Shiftable loads\n6\n1.5\nWater heater\n\
    3\n1.7\nVacuum cleaner\n4\n1\nWater pump\n2\n3.5\nGayser\nThe home energy management\
    \ system comprises Graphical User Interface (GUI) and\nrelated software to facilitate\
    \ users power consumption and total cost, of microgrid devices;\ntheir power consumption\
    \ of all homes without corrective method is implemented as dis-\nplayed in Figure\
    \ 13 shows cost GUI of proposed home EMS before and after implementing\nthe GWO\
    \ and ABC algorithms, (a) cost proﬁles of ﬁrst house, (b) cost proﬁles of second\n\
    house, (c) cost proﬁles of third house, (d) cost proﬁles of fourth house, (e)\
    \ cost proﬁles of\nﬁfth house and (f) cost proﬁles of the sixth house\nSensors\
    \ 2021, 21, 4756\n22 of 28\nFigure 13. Cont.\nSensors 2021, 21, 4756\n23 of 28\n\
    Figure 13. Cont.\nSensors 2021, 21, 4756\n24 of 28\nFigure 13. Node-RED dashboard\
    \ GUI of proposed home EMS before and after implementing the GWO and ABC algorithms,\n\
    (a) cost proﬁles of ﬁrst house, (b) cost proﬁles of second house, (c) cost proﬁles\
    \ of third house, (d) cost proﬁles of fourth\nhouse, (e) cost proﬁles of ﬁfth\
    \ house and (f) cost proﬁles of the sixth house.\n5. Results Discussion\nElectricity\
    \ emission cost reduction and cost savings, as well as PAR, were examined\nin\
    \ an efﬁciency analysis of the microgrid. The time slots required for non-shiftable\
    \ and\nshiftable demand have been moved into the morning time following the application\
    \ of the\nsuggested energy management system, where the power prices of utilities\
    \ are low, as shown\nin Figure 12. The load proﬁle has therefore been corrected\
    \ as shiftable customer devices\nSensors 2021, 21, 4756\n25 of 28\nthat are not\
    \ shiftable can operate at low prices in time slots. As a result, consumption\n\
    energy costs have been reduced, emission costs decreased and PAR improved.\nThe\
    \ price before applying the proposed algorithm is 182.07 for home 1, 183.76 for\n\
    home 2 and 177.4667 for home 3, 184.0955 for home 4, 190.8146 for home 5 and 182.13\
    \ for\nhome 6. Whereas after applying the proposed GWO, the cost of is found 152.386\
    \ for home\n1, 144.5312 for home 2, 143.7466 for home 3, 138.9 for home 4, 153.3869\
    \ for home 5 and\n136.98 for home 6 in case of weekday. Whereas after applying\
    \ the proposed ABC, the cost\nof is found 137.1482 for home 1, 130.078 for home\
    \ 2, 130.27 for home 3, 120.4749 for home 4,\n136.19 for home 5 and 117.8039 for\
    \ home 6 in case of weekday. By comparing proposed\nalgorithms with traditional\
    \ method, the suggested GWO method in our work saved 19.47%\nfor home 1, 27.14%\
    \ for home 2, 23.45% for home 3, 32.5% for home 4, 24.4% for home 5\nand 32.96%\
    \ for home 6 per-day. The suggested ABC method in our work saved 32.75% for\n\
    home 1, 41.26% for home 2, 36.22% for home 3, 52.81% for home 4, 36.11% for home\
    \ 5 and\n54.6% for home 6 per-day. The comparison between with and without corrective\
    \ method is\nillustrated in Table 4. Figure 14 shows the comparison between without\
    \ suggested EMS\nand with suggested EMS.\nTable 4. Difference between with and\
    \ without corrective method.\nType\nHome 1\nHome 2\nHome 3\nHome 4\nHome 5\nHome\
    \ 6\nCost without corrective method (cent)\n182.07\n183.76\n177.4667\n184.0955\n\
    190.8146\n182.13\nCost with GWO corrective method (cent)\n152.386\n144.5312\n\
    143.7466\n138.9\n153.3869\n136.98\nPercentage improvement using GWO corrective\
    \ method\n19.47%\n27.14%\n23.45%\n32.5%\n24.4%\n32.96%\nCost with ABC corrective\
    \ method (cent)\n137.1482\n130.078\n130.27\n120.4749\n136.19\n117.8039\nPercentage\
    \ improvement using ABC corrective method\n32.75%\n41.26%\n36.22%\n52.81%\n36.11%\n\
    54.6%\nFigure 14. Cont.\nSensors 2021, 21, 4756\n26 of 28\nFigure 14. Comparison\
    \ between without suggested EMS and with suggested EMS, (a) microgrid cost, (b)\
    \ improvement (%)\nby using GWO and (c) improvement (%) by using ABC.\n6. Conclusions\n\
    In this study, a novel robust smart EMS and demand reduction for smart homes\n\
    based on internet of energy is proposed. The paper also uses energy sources to\
    \ access the\nintelligent framework, followed by a strategy on optimization of\
    \ time intervals with two\ndifferent satisfaction functions. The method is based\
    \ on Wi-Fi wireless technology. The\nSketch up environment has been established\
    \ for designing and placement of the considered\nhome devices. The paper then\
    \ used an improved version of GWO, and ABC optimization\nalgorithms to improve\
    \ the system efﬁciency in terms of energy consumption cost and the\nuser’s satisfaction.\
    \ The suggested platform uses Transmission Control Protocol/Internet\nProtocol\
    \ (TCP/IP) for local microgrid data exchange and as a backup communication\nmethod\
    \ among microgrid in case of a failure in the cloud level communication. MQTT\n\
    subscriber /publisher is adopted for cloud-level messaging and HTTP for interactions\n\
    between a cloud-server and the platform.\nWith implementing suggested EMS, it\
    \ is notable that micro grid consumed energy cost\nhave been minimized from 542.2977\
    \ cent to 412.9103 cent (31.335% of the operation cost)\nby using rainfall algorithm.\
    \ The scheduling controller suggested in this paper succeeded\nthe energy saving\
    \ of 25.98% for the ﬁrst home, 26.45% for the second home, 23.45% for\nthe third\
    \ home per day. Furthermore, it is notable the suggested GWO method in our\nwork\
    \ saved 19.47% for home 1, 27.14% for home 2, 23.45% for home 3, 32.5% for home\
    \ 4,\nSensors 2021, 21, 4756\n27 of 28\n24.4% for home 5 and 32.96% for home 6\
    \ per-day. In addition, it is notable the suggested\nABC method in our work saved\
    \ 32.75% for home 1, 41.26% for home 2, 36.22% for home\n3, 52.81% for home 4,\
    \ 36.11% for home 5 and 54.6% for home 6 per-day. The suggested\nstrategy gives\
    \ better efﬁciency to the users for participating in the demand response.\nFuture\
    \ extension of this work may include the integration of the LoRaWAN network\n\
    with the proposed IoT architecture, because the use of the LoRaWAN technology\
    \ could lead\nto a very promising solution, due to its good coverage capabilities\
    \ (both in outdoor and in\nhybrid environments), whereas its most critical aspect\
    \ is represented by the relatively low\ndata throughput and duty cycle limitation.\n\
    Author Contributions: B.N.A.: software, methodology, writing—original draft; B.H.J.:\
    \ supervision,\ninvestigation, resources; Z.-A.S.A.R.: methodology, and formal\
    \ analysis; P.S.: supervision, method-\nology, formal analysis, funding, software,\
    \ writing—review and editing. All authors have read and\nagreed to the published\
    \ version of the manuscript.\nFunding: This research received no external funding.\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: Data sharing not applicable.\n\
    Conﬂicts of Interest: The authors declare no conﬂict of interest.\nReferences\n\
    1.\nZareen, H.; Awan, S.; Sajid, M.B.E.; Baig, S.M.; Faisal, M.; Javaid, N. Blockchain\
    \ and IPFS based Service Model for the Internet\nof Things. In Proceedings of\
    \ the 7th International Conference on the Internet of ThingsAt, Linz, Austria,\
    \ 22–25 October 2017.\n[CrossRef]\n2.\nAlhasnawi, B.N.; Jasim, B.H. A new internet\
    \ of things enabled trust distributed demand side management system. Sustain.\
    \ Energy\nTechnol. Assess. 2021, 46, 101272. [CrossRef]\n3.\nWang, X.; Mao, X.;\
    \ Khodaei, H. A multi-objective home energy management system based on internet\
    \ of things and optimization\nalgorithms. J. Build. Eng. 2021, 33, 101603. [CrossRef]\n\
    4.\nAlhasnawi, B.N.; Basil, H.; Jasim, A. New Coordinated Control of Hybrid Microgrids\
    \ with Renewable Energy Resources Under\nVariable Loads and Generation Conditions.\
    \ Iraqi J. Electr. Electron. Eng. 2020, 16, 1–20. [CrossRef]\n5.\nLezama, F.;\
    \ Soares, J.; Canizes, B.; Vale, Z. Flexibility management model of home appliances\
    \ to support DSO requests in smart\ngrids. Sustain. Cities Soc. 2020, 55, 102048.\
    \ [CrossRef]\n6.\nChen, Y.-Y.; Lin, Y.-H.; Kung, C.-C.; Chung, M.-H.; Yen, I.-H.\
    \ Design and Implementation of Cloud Analytics-Assisted Smart\nPower Meters Considering\
    \ Advanced Artiﬁcial Intelligence as Edge Analytics in Demand-Side Management\
    \ for Smart Homes.\nSensors 2019, 19, 2047. [CrossRef] [PubMed]\n7.\nPaul, S.;\
    \ Padhy, N.P. Real Time Energy Management for Smart Homes. IEEE Syst. J. 2020,\
    \ 16, 1–12. [CrossRef]\n8.\nUllah, S.; Khan, L.; Jamil, M.; Jafar, M.; Mumtaz,\
    \ S.; Ahmad, S. A Finite-Time Robust Distributed Cooperative Secondary Control\n\
    Protocol for Droop-Based Islanded AC Microgrids. Energies 2021, 14, 2936. [CrossRef]\n\
    9.\nAlhasnawi, B.N.; Jasim, B.H.; Sedhom, B.E. Distributed secondary consensus\
    \ fault tolerant control method for voltage and\nfrequency restoration and power\
    \ sharing control in multi-agent microgrid. Int. J. Electr. Power Energy Syst.\
    \ 2021, 133, 107251.\n[CrossRef]\n10.\nBhamidi, L.; Sivasubramani, S. Optimal\
    \ sizing of smart home renewable energy resources and battery under prosumer based\n\
    energy management. IEEE Syst. J. 2020, 15, 105–113. [CrossRef]\n11.\nArun, S.L.;\
    \ Selvan, M.P. Intelligent residential energy management system for dynamic demand\
    \ response in smart buildings.\nIEEE Syst. J. 2018, 12, 1329–1340. [CrossRef]\n\
    12.\nZhou, L.; Ren, H.; Liu, X.; Talari, S.; Shaﬁe-khah, M.; Catalao, J.P. Multi-objective\
    \ optimization model of source-load-storage\nsynergetic dispatch for a building\
    \ energy management system based on TOU price demand response. IEEE Trans. Ind.\
    \ Appl. 2018,\n54, 1017–1028.\n13.\nZhang, D.; Li, S.; Sun, M.; O’Neill, Z. An\
    \ optimal learning based demand response and home energy management system. IEEE\n\
    Trans. Smart Grid 2016, 7, 1790–1801. [CrossRef]\n14.\nShaﬁe-Khah, M.; Siano,\
    \ P. A stochastic home energy management system considering satisfaction cost\
    \ and response fatigue. IEEE\nTrans. Ind. Inform. 2018, 14, 629–638. [CrossRef]\n\
    15.\nHuang, Y.; Wang, L.; Guo, W.; Kang, Q.; Wu, Q. Chance constrained optimization\
    \ in a home energy management system. IEEE\nTrans. Smart Grid 2018, 9, 252–260.\
    \ [CrossRef]\n16.\nAlhasnawi, B.N.; Jasim, B.H. A novel hierarchical energy management\
    \ system based on optimization for multi-microgrid. Int. J.\nElectr. Eng. Inform.\
    \ 2020, 12, 586–606. [CrossRef]\nSensors 2021, 21, 4756\n28 of 28\n17.\nPaul,\
    \ S.; Padhy, N.P. Resilient scheduling portfolio of residential devices and plug-in\
    \ eletric vehicle by minimizing conditional\nvalue at risk. IEEE Trans. Ind. Inform.\
    \ 2019, 15, 1566–1578. [CrossRef]\n18.\nVardakas, J.S.; Zorba, N.; Verikoukis,\
    \ C.V. Power demand control scenarios for smart grid applications with ﬁnite number\
    \ of\nappliances. Appl. Energy 2016, 162, 83–98. [CrossRef]\n19.\nAlhasnawi, B.N.;\
    \ Jasim, B.H.; Esteban, M.D. A New Robust Energy Management and Control Strategy\
    \ for a Hybrid Microgrid\nSystem Based on Green Energy. Sustain. J. Rec. 2020,\
    \ 12, 5724. [CrossRef]\n20.\nMoghaddam, M.H.Y.; Leon-Garcia, A. A fog-based internet\
    \ of energy architecture for Transactive energy management systems.\nIEEE Int.\
    \ Things J. 2018, 5, 1055–1069. [CrossRef]\n21.\nHashmi, S.A.; Ali, C.F.; Zafar,\
    \ S. Internet of things and cloud computing based energy management system for\
    \ demand-side\nmanagement in smart grid. Int. J. Energy Res. 2020, 45, 1007–1022.\
    \ [CrossRef]\n22.\nFroiz-Míguez, I.; Fernández-Caramés, T.M.; Fraga-Lamas, P.;\
    \ Castedo, L. Design, Implementation and Practical Evaluation of an\nIoT Home\
    \ Automation System for Fog Computing Applications Based on MQTT and ZigBee-WiFi\
    \ Sensor Nodes. Sensors 2018,\n18, 2660. [CrossRef]\n23.\nKhalid, A. Towards Energy\
    \ Effciency in Smart Buildings Exploiting Dynamic Coordination among Appliances\
    \ and Homes. Ph.D.\nThesis, COMSATS University Islamabad, Islamabad, Pakistan,\
    \ 2018.\n24.\nAlhasnawi, B.N.; Jasim, B.H. Adaptive Energy Management System for\
    \ Smart Hybrid Microgrids. In Proceedings of the 3rd\nScientiﬁc Conference of\
    \ Electrical and Electronic Engineering Researches (SCEEER), Basrah, Iraq, 15–16\
    \ June 2020. [CrossRef]\n25.\nKhalid, A.; Javaid, N.; Mateen, A.; Ilahi, M.; Saba,\
    \ T.; Rehman, A. Enhanced Time-of-Use Electricity Price Rate Using Game\nTheory.\
    \ Electronics 2019, 8, 48. [CrossRef]\n26.\nAlhasnawi, B.N.; Jasim, B.H.; Anvari-Moghaddam,\
    \ A.; Blaabjerg, F. A New Robust Control Strategy for Parallel Operated\nInverters\
    \ in Green Energy Applications. Energies 2020, 13, 3480. [CrossRef]\n27.\nAlhasnawi,\
    \ B.N.; Jasim, B.H. A New Energy Management System of On-Grid / Off-Grid Using\
    \ Adaptive Neuro-Fuzzy Inference\nSystem. J. Eng. Sci. Technol. 2020, 15, 3903–3919.\n\
    28.\nZhang, J.; Shen, C.; Su, H.; Araﬁn, M.T.; Qu, G. Voltage Over-scaling-based\
    \ Lightweight Authentication for IoT Security. IEEE\nTrans. Comput. 2021. [CrossRef]\n\
    29.\nZhang, J.; Qu, G. Physical Unclonable Function-Based Key Sharing via Machine\
    \ Learning for IoT Security. IEEE Trans. Ind.\nElectron. 2020, 67, 7025–7033.\
    \ [CrossRef]\n30.\nHosseini, S.M.; Carli, R.; Dotoli, M. A Residential Demand-Side\
    \ Management Strategy under Nonlinear Pricing Based on Robust\nModel Predictive\
    \ Control. In Proceedings of the 2019 IEEE International Conference on Systems,\
    \ Man and Cybernetics (SMC),\nBari, Italy, 6–9 October 2019. [CrossRef]\n31.\n\
    Melhem, F.Y.; Grunder, O.; Hammoudan, Z.; Moubayed, N. Energy Management in Electrical\
    \ Smart Grid Environment Using\nRobust Optimization Algorithm. IEEE Trans. Ind.\
    \ Appl. 2018, 54, 2714–2726. [CrossRef]\n32.\nScarabaggio, P.; Grammatico, S.;\
    \ Carli, R.; Dotoli, M. Distributed Demand Side Management with Stochastic Wind\
    \ Power\nForecasting. IEEE Trans. Control. Syst. Technol. 2021, 1–16. [CrossRef]\n\
    33.\nNassourou, M.; Bles, J.; Puig, V. Robust Economic Model Predictive Control\
    \ Based on a Zonotope and Local Feedback Controller\nfor Energy Dispatch in Smart-Grids\
    \ Considering Demand Uncertainty. Energies 2020, 13, 696. [CrossRef]\n34.\nForcan,\
    \ M.; Maksimovi´c, M. Cloud-Fog-based approach for Smart Grid monitoring. Simul.\
    \ Model. Pract. Theory 2020, 101, 101988.\n[CrossRef]\n35.\nAlhasnawi, B.N.; Jasim,\
    \ B.H.; Siano, P.; Guerrero, J.M. A Novel Real-Time Electricity Scheduling for\
    \ Home Energy Management\nSystem Using the Internet of Energy. Energies 2021,\
    \ 14, 3191. [CrossRef]\n36.\nLu, R.; Hong, S.H.; Yu, M. Demand Response for Home\
    \ Energy Management Using Reinforcement Learning and Artiﬁcial Neural\nNetwork.\
    \ IEEE Trans. Smart Grid 2019, 10, 6629–6639. [CrossRef]\n37.\nMuzaffar Iqbal,\
    \ M.; Fahad Zia, M.; Beddiar, K.; Benbouzid, M. Optimal Scheduling of Grid Transactive\
    \ Home Demand Responsive\nAppliances Using Polar Bear Optimization Algorithm.\
    \ IEEE Access 2020, 8, 222285–222296. [CrossRef]\n38.\nJamborsalamati, P.; Fernandez,\
    \ E.; Moghimi, M.; Hossain, M.J.; Heidari, A.; Lu, J. MQTT-Based Resource Allocation\
    \ of Smart\nBuildings for Grid Demand Reduction Considering Unreliable Communication\
    \ Links. IEEE Syst. J. 2019, 13, 3304–3315. [CrossRef]\n39.\nAlhasnawi, B.N.;\
    \ Jasim, B.H.; Esteban, M.D.; Guerrero, J.M. A Novel Smart Energy Management as\
    \ a Service over a Cloud\nComputing Platform for Nanogrid Appliances. Sustain.\
    \ J. Rec. 2020, 12, 9686. [CrossRef]\n40.\nAlhasnawi, B.N.; Jasim, B.H.; Esteban,\
    \ M.D.; Hossain, E.; Guerrero, J.M. A New Decentralized Control Strategy of Microgrids\
    \ in\nthe Internet of Energy Paradigm. Energies 2021, 14, 2183. [CrossRef]\n41.\n\
    Ayub, S.; Ayob, S.M.; Tan, C.W.; Ayuba, L.; Bukar, A.L. Optimal residence energy\
    \ management with time and device-based\npreferences using an enhanced binary\
    \ grey wolf optimization algorithm. Sustain. Energy Technol. Assess. 2020, 41,\
    \ 100798.\n[CrossRef]\n42.\nHabib, H.U.R.; Subramaniam, U.; Waqar, A.; Farhan,\
    \ B.S.; Kotb, K.M.; Wang, A.S. Energy Cost Optimization of Hybrid Renewables\n\
    Based V2G Microgrid Considering Multi Objective Function by Using Artiﬁcial Bee\
    \ Colony Optimization. IEEE Access 2020,\n8, 62076–62093. [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/21/14/4756/pdf?version=1626174073
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Novel Robust Smart Energy Management and Demand Reduction for Smart Homes
    Based on Internet of Energy
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/en14113191
  analysis: '>'
  authors:
  - Bilal Naji Alhasnawi
  - Basil H. Jasim
  - Pierluigi Siano
  - Josep M. Guerrero
  citation_count: 33
  full_citation: '>'
  full_text: ">\nenergies\nArticle\nA Novel Real-Time Electricity Scheduling for Home\
    \ Energy\nManagement System Using the Internet of Energy\nBilal Naji Alhasnawi\
    \ 1,*\n, Basil H. Jasim 1\n, Pierluigi Siano 2\nand Josep M. Guerrero 3,*\n\x01\
    \x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Alhasnawi,\
    \ B.N.; Jasim,\nB.H.; Siano, P.; Guerrero, J.M. A\nNovel Real-Time Electricity\n\
    Scheduling for Home Energy\nManagement System Using the\nInternet of Energy. Energies\
    \ 2021, 14,\n3191. https://doi.org/10.3390/\nen14113191\nAcademic Editors: Surender\n\
    Reddy Salkuti, George Halkos and\nJose A. Afonso\nReceived: 22 February 2021\n\
    Accepted: 24 May 2021\nPublished: 29 May 2021\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nElectrical Engineering Department, Basrah University, Basrah 61001,\
    \ Iraq; hanbas63@gmail.com\n2\nDepartment of Management & Innovation Systems,\
    \ University of Salerno Via Giovanni Paolo II, 132,\n84084 Fisciano, Italy; psiano@unisa.it\n\
    3\nCenter for Research on Microgrid (CROM), Energy Technology Department, University\
    \ of Aalborg,\n9220 Aalborg, Denmark\n*\nCorrespondence: bilalnaji11@yahoo.com\
    \ (B.N.A.); joz@et.aau.dk (J.M.G.); Tel.: +964-78-090-985 (B.N.A.)\nAbstract:\
    \ This paper presents a novel scheduling scheme for the real-time home energy\
    \ management\nsystems based on Internet of Energy (IoE). The scheme is a multi-agent\
    \ method that considers two\nchief purposes including user satisfaction and energy\
    \ consumption cost. The scheme is designed\nunder environment of microgrid. The\
    \ user impact in terms of energy cost savings is generally\nsigniﬁcant in terms\
    \ of system efﬁciency. That is why domestic users are involved in the management\n\
    of domestic appliances. The optimization algorithms are based on an improved version\
    \ of the rainfall\nalgorithm and the salp swarm algorithm. In this paper, the\
    \ Time of Use (ToU) model is proposed to\ndeﬁne the rates for shoulder-peak and\
    \ on-peak hours. A two-level communication system connects\nthe microgrid system,\
    \ implemented in MATLAB, to the cloud server. The local communication\nlevel utilizes\
    \ IP/TCP and MQTT and is used as a protocol for the global communication level.\
    \ The\nscheduling controller proposed in this study succeeded the energy saving\
    \ of 25.3% by using the salp\nswarm algorithm and saving of 31.335% by using the\
    \ rainfall algorithm.\nKeywords: internet of energy; rainfall optimization algorithm;\
    \ salp swarm algorithm; cloud platform\n1. Introduction\nThe intelligent micro\
    \ grid is an important ﬁeld for the Internet of Energy that aims\nto provide reliable\
    \ information transmission by means of intelligent installations and to\nre-evaluate,\
    \ manage accurately and make scientiﬁc decisions on the intelligent microgrid\n\
    via intelligent devices.\nThe Internet of Energy (IoE) is the next step and advancement\
    \ of today’s internet,\nwhere objects and things are embedded with communication\
    \ and computation capabilities.\nThe Internet of Energy (IoE) appliances can be\
    \ seamlessly assimilated to the internet at\nvarious levels. The IoE provides\
    \ the foundation for intelligent cities services such as intelli-\ngent transportation,\
    \ intelligent health, intelligent grid, intelligent surveillance, intelligent\n\
    home, and so forth. One of the biggest systems of the IoE is an intelligent grid,\
    \ which is\nnothing but a conventional grid augmented with the integration of\
    \ renewable energy and\ncommunication technologies. The IoE based intelligent\
    \ devices can be embedded into the\nintelligent grid via all of its main parts,\
    \ such as production, supply, communication, and\nuse [1]. Due to the population\
    \ growth in communities, the energy needs for this century\nare increasing quite\
    \ rapidly. Societies depend heavily on the efﬁcient and resilient delivery\nof\
    \ electricity for national security, economy, and health care. The normal electric\
    \ grids are\nstatic and unreliable in order to meet consumer demands accordingly.\
    \ The smart grid is the\nnext generation of grid that is able to transﬁgure the\
    \ modes of electricity output, control,\nand distribution. The microgrid can improve\
    \ the lives of the next generation of people,\nas intelligent grid users are very\
    \ involved and can participate in the system, as they form\npriorities and demands\
    \ settings. Therefore, different countries have begun implementing\nEnergies 2021,\
    \ 14, 3191. https://doi.org/10.3390/en14113191\nhttps://www.mdpi.com/journal/energies\n\
    Energies 2021, 14, 3191\n2 of 29\nintelligent grid systems for communities. The\
    \ market of a traditional grid is national and\ncentralized, where an intelligent\
    \ grid market is decentralized and ignores boundaries [2].\nIn order to ensure\
    \ an intelligent grid and to enhance the IoE integration, continuous\ncommunication\
    \ is necessary. In terms of output, market, distribution, transmission, and\n\
    customer the intelligent grid is more effective than a conventional grid [1,3,4].\
    \ The conven-\ntional grids have limited power generation, and a large number\
    \ of small power producers\nare in the intelligent grid. A conventional grid transmission\
    \ includes large power lines\nand pipelines with a smart grid that offers small\
    \ transmission and compensation for local\nsupply, thereby making the smart grid\
    \ signiﬁcantly more efﬁcient than the conventional\ngrid. Consumers of a smart\
    \ grid are very active and participate in a system in the form of\npriorities\
    \ and demands set. The national and centralized market for a conventional grid\n\
    is fragmented and the borders are ignored. A smart grid consists of billions of\
    \ intelligent\ndevices, sensors, intelligent meters, and many other communication\
    \ networks, be they\nprivate or public [5,6].\nDemand response (DR) strategies\
    \ provide economic, effective and secure solutions\nin relation to energy management.\
    \ EMS on the DR decentralized residential or housing\nmicrogrid offers the most\
    \ cost-effective demand proﬁle, so that load control will help the\nhouse owners\
    \ have less discomfort [7]. However, installing a collocated roof generator and\n\
    the variability of home appliances in the operation of the storage system can\
    \ make it difﬁcult\nto manage the energy of a building process. This is more demanding\
    \ as it is quite difﬁcult\nto estimate renewable real-time generation and also\
    \ since the energy price in the day ahead\nis different from the real-time energy\
    \ price. Stochastic optimization may address these\nuncertainties, but it also\
    \ requires appropriate random parameter probabilistic estimates.\nFor domestic\
    \ energy management, the real-time optimization portfolio is therefore required,\n\
    which can provide an optimal solution in the abrupt change in energy generation\
    \ and the\nprice of market energy. To fulﬁl the abovementioned requirement, this\
    \ paper elucidates a\nreal-time optimization system for synergetic source load\
    \ storage dispatch in an intelligent\nhome or an intelligent residential microgrid.\n\
    2. Literature Review of Theoretical Background\nIn Reference [8], the authors\
    \ present a system of optimization models for the optimal\nplanning of intelligent\
    \ house Renewable Energy Resource (RER) and batteries. In the\nﬁrst phase of optimization,\
    \ which has an objective function of the renewable energy\nresource and battery\
    \ life-cycles minimization, the optimal size problem of the renewable\nenergy\
    \ resource and batteries is suggested. With the help of multi-object domestic\
    \ energy\nmanagement, the intelligent home problems of daily energy operation\
    \ are formulated\nin the second stage. The authors in Reference [9] present a\
    \ smart energy management\nsystem for intelligent homes with intelligent appliances.\
    \ The proposed system schedules\nschedulable loads that take into account the\
    \ operative complexities of uncontrolled loads\nand the renewable resource non\
    \ schedulable conduct. The resources are optimally sized\nusing game theory. In\
    \ Reference [10] the authors proposed a day-to-day multi-objective\noptimization\
    \ model for ToU price based energy management system, integrated with the\nother\
    \ generation from built-in photovoltaic systems (BIPV) to maximize the economy\
    \ and\ncomfort of the occupant by providing a synergetic supply to the source\
    \ of the storage. In\nReference [11], the authors proposed an interdisciplinary\
    \ approach incorporating machine\nlearning, optimized architecture, and data structure\
    \ design to create an internal energy\nmanagement system that can fulﬁll real-life\
    \ needs. In Reference [12], the authors suggested\na stochastic system for demand\
    \ response framework, given the uncertainties concerning\nthe availability of\
    \ electric vehicles and the production of renewable energy (HEM). The\nsimulation\
    \ results veriﬁed, while guaranteeing the satisfaction of the residents with respect\n\
    to the technological limits of the electrical and household batteries and electric\
    \ equipment,\nthat the consumer costs can be minimized by taking into account\
    \ different demand response\nprograms (DRPs).\nEnergies 2021, 14, 3191\n3 of 29\n\
    A new strategy is suggested in Reference [13] to resolve an issue of demand opti-\n\
    mization of the provided uncertainties of must-run loads and electricity costs.\
    \ A new,\nembedded PSO-based approach for resolving stochastic optimization problems\
    \ was pro-\nposed in an embedded system to reduce the calculation burden. This\
    \ could be used as a\nstochastic programing model and a two-point estimation method.\
    \ In Reference [14] the\nauthors suggested a collaborative grid optimization model\
    \ to plan residential MGs and\nto deliver demand-side management support. The\
    \ complex constraints of the various\nintelligent home devices are applied to\
    \ the demand-side management load shifting process.\nThree different cases were\
    \ analyzed to assess the feasibility of the proposed template\nfor economic and\
    \ environmental objectives. In Reference [15] the authors developed a\nrisk-based\
    \ optimization algorithm for the risk assessment of solar energy and the energy\n\
    price insecurity.\nIn Reference [16] the authors proposed new and more practical\
    \ analytic models in four\nscenarios for assessing peaking demand. The suggested\
    \ method is based on assumption, in\na quasi-random method for arrivals or electricity\
    \ demands, of a ﬁnite amount of equipment\nin the region under study. In Reference\
    \ [17] the authors implemented a distributed load\nshifting algorithm in demand\
    \ management with an emphasis on the problem of planning\nfor residential intelligent\
    \ machines. The customer’s frustration is minimized by the sparse\nload shifting\
    \ approach. The authors proposed in Reference [18] a cloud-based multi-agent\n\
    (MAS) residential smart grid community network. The suggested multi agent system\
    \ (MAS)\nis made up of microgrid agents and intelligent household agents, with\
    \ the goal of relieving\nRMG’s top load and minimizing smart home energy costs.\
    \ In Reference [19] the authors\nproposed architecture for peer-to-peer control\
    \ of the insular microgrid framework. The\nmulti-cap and multi-agent algorithms\
    \ and design, where several goals are accomplished,\nachieve this P2P architecture.\
    \ The agent with communication and calculation capabilities\nthat adapt to multiplayer\
    \ monitoring can run these processes simultaneously. The authors\ninvestigated\
    \ effective DSM methods in Reference [20] to minimize the energy consumption\n\
    from a grid. They analyze the energy use trends, price of electricity, weather\
    \ and other\ncharacteristics of users to determine the best way to monitor charge\
    \ level. They suggest an\nenergy storage genetic algorithm and game-theory-based\
    \ energy management methods.\nIn Reference [21], the researchers presented a fog-based\
    \ internet of things framework for\ntrans active energy management framework.\
    \ In Reference [22], the authors introduced,\ndeveloped and implemented an architectural\
    \ structure for an IoT and cloud EMS producing\nthe user load proﬁle to be accessed\
    \ from a company or by the consumer on a remote basis.\nCompanies should monitor\
    \ and disseminate their incentives and allow customers to adjust\ntheir energy\
    \ usage with the user load proﬁles.\nThe authors developed and implemented a multi-agent\
    \ system for active network\nadministration for their distribution network in\
    \ Reference [23]. The goal is to give the\ndistribution network operator (DNO)\
    \ transaction in the distribution system operator (DSO)\nsector a dynamic framework,\
    \ which is relevant and useful. In Reference [24] the authors\nproposed a novel\
    \ agent-based framework for combining residential and industrial ﬂexibility\n\
    capacity. This approach suggests the alignment of the sensitive strategy for industrial\
    \ and\nresidential aggregators to include a central demand response provider.\
    \ In Reference [25],\nthe authors presented a multi-target problem whose resolution\
    \ occurs with an evolutionary\nalgorithm and task management method. The multi-target\
    \ problem calls for real-time\nresponse to demand (RTP). Two goals existed: daily\
    \ energy costs and user in satisfaction,\ndecreased by both. In Reference [26]\
    \ the researchers proposed an adaptive management\nmethod of energy for microgrid\
    \ modes. A hybrid structure that includes an electrical grid,\nphotovoltaics,\
    \ and batteries is used to satisfy demand as energy sources in the consumer\n\
    home. The system proposed allows organized operation of distributed energy resources\
    \ to\nprovide the active and additional power needed whenever necessary.\nIn Reference\
    \ [27] the authors proposed an EMS for smart households. Each home\ncomputer is\
    \ connected to the IoT object through a single IP address that results in a wide\n\
    network of appliances using a mesh wireless system. In Reference [28], a novel\
    \ binary\nEnergies 2021, 14, 3191\n4 of 29\nsearch algorithm (BBSA) was implemented\
    \ to control energy management in real time.\nThe BBSA gives the optimum scheduling\
    \ schedule for home appliances to minimize a\ndemand for total loads, and schedules\
    \ the running of house equipment at particular times\nduring the day. A novel\
    \ energy internet system for management of micro grid has been\nproposed in Reference\
    \ [29]. The platform proposed is based on a versatile, scalable IoT\nstructure\
    \ incorporating DERs. In Reference [30], the authors suggested a new approach\n\
    called demand response as a service, based on an algorithm of Q-learning. In Reference\
    \ [31]\na new energy management framework was introduced by the authors to be\
    \ introduced as\na fog platform. The implementation of the Fog Computing platform\
    \ achieves ﬂexibility,\nconnectivity, interoperability, real-time, privacy, and\
    \ EMS criteria. In Reference [32] the\nresearchers presented a Home-Management\
    \ Self-Learning (SHM) on a MAS platform\nwhich used Internet of Things (IoT) principles\
    \ to implement the communication and\ninteraction between agents. In Reference\
    \ [33], the authors proposed a new knowledge-\nbased multiphysics energy control\
    \ strategy for electric hybrid busses, emphasizing thermal\nsecurity as well as\
    \ on-board lithium-ion battery degradation. Innovation is used to achieve\nsmart\
    \ balance over conﬂicting objectives and almost optimize a power distribution\
    \ by\nmeans of an accelerated iterative concordance, by introducing a soft actor-critical\
    \ deep\nreinforcement learning method. In Reference [34] the researchers suggested\
    \ a novel robust\ncontrol method for renewable energy sources. However, the energy\
    \ management for a\nmulti-agent system governed microgrid in the Internet of Energy\
    \ was not investigated. In\nReference [35], the authors proposed a new energy\
    \ management-based machine learning\nmethod for an electric hybrid bus with an\
    \ emphasis on thermal security and the degradation\nof the lithium-ion batteries\
    \ structure. In Reference [36], researchers proposed a novel energy\nmanagement\
    \ for a grid connected mode and an island mode using an adaptive neuro fuzzy\n\
    interface system. However, the energy management for a MAS governed microgrid\
    \ in an\nInternet of Energy was not investigated.\nPaper Contribution\nIn this\
    \ article, a novel real-time electricity scheduling for smart energy management\n\
    system using the IoE is proposed that employs: scalability, adaptability, interoperability,\n\
    and connectivity between devices over cloud platforms.\nThe contributions of this\
    \ paper are:\n1.\nThis research proposed a new rainfall algorithm, and a salp\
    \ swarm algorithm based\nreal-time optimum schedule controller for home EMS to\
    \ energy savings and limit\nhome peak-demand in the household.\n2.\nA further\
    \ contribution of this study is the proposal of a Multi Agent System for\nmicrogrid\
    \ representation that integrates IoE appliances for energy management inside\n\
    the smart home. However, the proposed MAS uses the strong Internet penetration\n\
    of object appliances in households for EMS solutions. This is the most important\n\
    addition through this article\n3.\nThe two-layer hierarchical communications architecture,\
    \ based on the MQTT protocol\nand using a cloud server called ThingSpeak, is applied\
    \ to realize global and local\ncommunication required for neighborhood devices.\n\
    3. Proposed System Description\nHere, the researchers considered that the DGs\
    \ consisted of the communication and\ncontrol agents in the Internet of Energy\
    \ realm, as described in Figure 1. The physical\ncomponents of a general microgrid\
    \ included the inverter-interfaced distributed generator,\ndynamic and static\
    \ loads and the diesel generators. It was noted that the DGs in the\nmicrogrid\
    \ were controlled by a framework, wherein every DG was managed by one MAS\nagent.\
    \ The MAS agents communicate by the Local Area Network (LAN) and can access\n\
    the internet for remotely controlling the microgrid via the cloud servers. In\
    \ the Internet\nof Energy, every distributed generator/microgrid was managed by\
    \ various stakeholders,\nand their controllers on the MAS/agents differed from\
    \ MG components. It was expected\nEnergies 2021, 14, 3191\n5 of 29\nthat the number\
    \ of distributed generator and MG agents could be changed online, hence,\na remote,\
    \ ﬂexible and distributed control and implementation framework was necessary.\n\
    Figure 1 presents the suggested structure.\n \ncontrol agents in the Internet\
    \ of Energy realm, as described in Figure 1. The physical com\nponents of a general\
    \ microgrid included the inverter-interfaced distributed generator, dy-\nnamic\
    \ and static loads and the diesel generators. It was noted that the DGs in the\
    \ mi-\ncrogrid were controlled by a framework, wherein every DG was managed by\
    \ one MAS \nagent. The MAS agents communicate by the Local Area Network (LAN)\
    \ and can access \nthe internet for remotely controlling the microgrid via the\
    \ cloud servers. In the Internet of \nEnergy, every distributed generator/microgrid\
    \ was managed by various stakeholders, \nand their controllers on the MAS/agents\
    \ differed from MG components. It was expected \nthat the number of distributed\
    \ generator and MG agents could be changed online, hence, \na remote, flexible\
    \ and distributed control and implementation framework was necessary. \nFigure\
    \ 1 presents the suggested structure. \n \nFigure 1. Suggested structure \nFigure\
    \ 1. Suggested structure.\nThe smart grid would need an effective measuring and\
    \ communication system in\norder to continuously track the power and cost proﬁle\
    \ and regularly quantify power losses.\nThere are several stages of data processing.\n\
    This work contains Measurement Units (MU) for every distribution network bus.\n\
    MU is MATLAB modeling. The power and cost information is sent to the control center\n\
    regularly at a ﬁxed time. The control center is designed as a virtual data management\n\
    and analysis platform. One approach to communication relating to the device topology\n\
    proposed is considered. The case takes a Cloud approach, which sends its measured\
    \ data\ndirectly to the Cloud by any MU connected to a corresponding feeder bus\
    \ as illustrated in\nFigure 1.\nEnergies 2021, 14, 3191\n6 of 29\n3.1. Classiﬁcation\
    \ of Smart Appliances\nThe tasks for user usability have diversiﬁed, as possible\
    \ clever computer users are in\nhomes such as TVs, washing machines, boilers,\
    \ cooling and heating equipment, as well as\nlighting framework. There are two\
    \ important types of appliances: the shiftable equipment\nis de-signed and managed\
    \ by EMS over time (T = 24). Suppose a set of manageable\ndevices is represented\
    \ as D퓂,퓃 and 풹퓂 = 1, . . . , D퓂,퓃 for 퓃 ∈ N for every customer [37]:\nL퓂,퓃 =\n\
    ∑\n풹퓂∈D퓂\nLD퓂,퓃\n(1)\nwhere L퓂,퓃 is appliances load and D퓂,퓃 is appliances set.\
    \ Nonshiftable devices cannot\nbe shifted to hours of off-peak for minimize cost,\
    \ i.e., the consumption of power proﬁles\nof devices such as the refrigerator,\
    \ light, and TV. A nonshiftable device of the customer\n퓃 ∈ N is identiﬁed as:\n\
    L퓃퓂,퓃 =\n∑\n풹퓃퓂∈D퓃퓂\nLD퓃퓂,퓃\n(2)\nCommunity electricity is produced from RES in\
    \ the form of community microgrids.\nThe goal of the optimization model is to\
    \ plan limited energy resource for appliances\naccording to their needs for periods\
    \ and electricity costs. Electrical appliances work under\nthe electricity tariff\
    \ 24 h ahead of time of use. Where, L퓃,퓉 is a total consumption of power\nproﬁle\
    \ of customers 퓃 ∈ N in 퓉 ∈ T slot time.\nL퓃\n풹 = L퓂,퓃 + L퓃퓂,퓃\n(3)\nL퓃,퓉\n풹\n\
    =\nT\n∑\n퓉=1\nL퓃,퓉\n풹\n(4)\nwhere, LT is a total power of all customers.\nLT =\
    \ ∑\n퓃∈N ∑\n퓉∈T ∑\n풹∈D\nL퓃,퓉\n풹\n∀퓉 ∈ T\n(5)\nEach consumer has a separate power\
    \ consumption schedule that decreases bills and\ndemand peak in a different time\
    \ frame every day. The peak-to-average (PAR) ratio is\ncalculated by the combined\
    \ power proﬁles [37].\nLpeak = maxLT\n(6)\nLavg = 1\nT\nN\n∑\n퓃=1\nT\n∑\n퓉=1\n\
    L퓃,퓉\n∀ 퓉 ∈ T\n(7)\nPAR = Lpeak\nLavg\n(8)\n3.2. Problem Formulation\nTo minimize\
    \ the objective function of cost of devices in individual and community\nconsumer:\n\
    minP퓃 = ∑\n퓃∈N ∑\n퓉∈T ∑\n퓆∈Q ∑\n풹∈D\n(α퓃,퓉\n퓆풹 × L퓃,퓉\n퓆풹 × P퓃,퓉\nE\n− β퓃,퓉\n\
    퓇\n× S퓃,퓉\n퓇\n× P퓃,퓉\n퓇\n+ γ퓃,퓉\nP × L퓃,퓉\nL\n× P퓃,퓉\nP )\n(9)\nwhere, γ퓃,퓉\n\
    P is the decision ﬂexible, N is the total amount of users, T is the time, Q is\
    \ the\ntype of load, D is the total number of devices, α퓃,퓉\n퓆풹 is the decision\
    \ variable for the appliances,\nP퓃,퓉\nE\nis the electricity, S퓃,퓉\n퓇\nis the decision\
    \ variable for energy, L퓃,퓉\nL\nis the electricity storage\nat time 퓉, L퓃,퓉\n\
    퓆풹 is the power proﬁle of the house devices.\nEnergies 2021, 14, 3191\n7 of 29\n\
    3.2.1. Preference of Operation Period\nThe binary matrix is utilized for a ready-to-use\
    \ factor. This requires the ready-to-use\nslot 퓌퓃,퓉\n퓆풹 to run the devices over\
    \ time. Home users tend to operate a computer more often\nthroughout the day,\
    \ and then substitute it with more devices.\nP1 : α퓃,퓉\n퓆풹 = α퓃,퓉\n퓆풹 × 퓌퓃,퓉\n\
    퓆풹\n(10)\n3.2.2. Variable Decision\nConstraint P2 is the decision variable of\
    \ the device ON /OFF. Constraints P3 is\ndecision variable of user for self generation\
    \ power. If β퓃,퓉\n퓇\n= 1, user is a prosumer and\nβ퓃,퓉\n퓇\n= 0 for user is a consumer.\
    \ Consumers purchase electricity from the neighborhood\nmicrogrid or power grid.\n\
    P2 : α퓃,퓉\n퓆풹 ∈ {0, 1}\n∀퓆, 퓉 ∈ T\n(11)\nP3 : β퓃,퓉\n퓇\n∈ {0, 1}\n∀퓆, 퓉 ∈ T\n(12)\n\
    P4 : γ퓃,퓉\nP ∈ {0, 1}\n∀퓆, 퓉 ∈ T\n(13)\n3.2.3. Devices Task\nFor the measurement\
    \ of energy proﬁles, it is mandatory to know the working life\nof intelligent\
    \ devices. 퓉퓆풹 is the operation time of dth devices in the T slot time in P5.\n\
    α퓃,퓉\n퓆풹 is the decision variable to turn ON/OFF the device. The constraints P5\
    \ and P6 are\ncontinuous times to accomplish a task and it has to remain ON at\
    \ time T , until it has\nﬁnished a task. For instance, once a washing machine\
    \ begins to work, it runs continuously\nuntil the ﬁnal time limit is set, P6 is\
    \ formulated. 퓉퓈 is the devices starting time [37].\nP5 :\nT\n∑\n퓉=1\nα퓃,퓉\n퓆풹\
    \ = 퓉퓆풹\n∀퓆, 퓉 ∈ T\n(14)\nP6 :\n퓉퓈+퓉퓆풹−1\n∑\n퓉=퓉퓈\nα퓃,퓉\n퓆풹 = 퓉퓆풹\n∀퓆, 퓉 ∈ T\n\
    (15)\n3.2.4. Devices Priority\nWhen another system completes the service cycle,\
    \ the appliance will start running. A\ndryer will not operate until the laundry\
    \ has completed its operating cycle. 퓈풾 is the group\nof these kind of loads.\
    \ The decision variable selects the devices of each group for each\ntime span.\n\
    P7 : ∑\n풹∈퓈풾\nα퓃,퓉\n퓆풹 = 1\n∀퓆, 퓉 ∈ T\n(16)\n3.3. Price\nThe price signal is received\
    \ from the group micro grid. A utility grid is optional for our\nstudy, the energy\
    \ volume for export and import from the community. The dynamic-pricing\nsystem\
    \ is used for electronic transactions from the grid. The prices are believed to\
    \ be\naccepted and cannot be updated after publication. The pricing system can\
    \ be freely chosen\nby the customers. The costs of the same load will differ at\
    \ different times in one day. The\nelectricity is consistently low and expensive\
    \ to obtain from the grid at night and vice-versa.\nThe energy price depends on\
    \ the energy used and the time per day the energy is used.\nP퓃,퓉\nE\n=\n\n\n\
    \nP퓇 = 0.3\nP풷 = 0.7\nPℊ > P풷 > P퓇\ni f 퓇퓈풶 = 1\ni f E퓈풶 = 1\nO.W\n\n\n\n\
    (17)\nEnergies 2021, 14, 3191\n8 of 29\nwhere P퓃,퓉\nE\nis the electricity tariff,\
    \ P퓇 and P풷 are electricity prices from the community\nmicro grid and Pℊ is a\
    \ utility grid purchase.\n4. Proposed Internet of Energy Communication Platform\n\
    The decentralized controller of a smart MG helps in managing the system operating\n\
    conditions if there is some disturbance. Furthermore, the IoT technology can be\
    \ used\nfor communicating between the appliances present in smart homes, central\
    \ controller or\npower management centers. The researchers proposed the IoT platform\
    \ for collecting the\ndata, monitoring, managing and controlling the microgrid.\
    \ All appliances and energy\nresources were integrated and connected in this platform.\
    \ The proposed Internet of Energy\ncommunication platform is presented in Figure\
    \ 2.\n \n\U0001D513ℰ\nቐ\n\U0001D513ℊ > \U0001D513\U0001D4B7 > \U0001D513\U0001D4C7\
    \n\U0001D453\n\U0001D4B7\U0001D4B6\n\U0001D442. \U0001D44A\nቑ\n(\nWhere \U0001D513\
    ℰ\n\U0001D4C3,\U0001D4C9 is the electricity tariff, \U0001D513\U0001D4C7 and \U0001D513\
    \U0001D4B7 are electricity prices from the communit\nmicro grid and \U0001D513\
    ℊ is a utility grid purchase. \n4. Proposed Internet of Energy Communication Platform\
    \ \nThe decentralized controller of a smart MG helps in managing the system operatin\n\
    conditions if there is some disturbance. Furthermore, the IoT technology can be\
    \ used fo\ncommunicating between the appliances present in smart homes, central\
    \ controller o\npower management centers. The researchers proposed the IoT platform\
    \ for collecting th\ndata, monitoring, managing and controlling the microgrid.\
    \ All appliances and energy re\nsources were integrated and connected in this\
    \ platform. The proposed Internet of Energ\ncommunication platform is presented\
    \ in Figure 2. \nIt is a demanding job to develop a demand response based IoE\
    \ base. The role of th\nplatform is to (1) incorporate the micro-grid tools into\
    \ the communications system and (2\nlink to the IoE cloud in order to track and\
    \ manage the devices. The IoE communication\nnetwork proposed is composed of 4\
    \ different layers, as defined in Figure 2. \n \nFigure 2. Proposed Internet of\
    \ Energy platform architecture. \n(a) Agent Layer: \nThe device or perception\
    \ layer was referred to as the layer of different component\n[38]. Various IoT\
    \ users are included in the device layer, which is comprised of smart elec\ntric\
    \ vehicles, smart homes, and transportation systems, along with DGs such as FCs,\
    \ MT\nand the WTs. Additionally, this layer supported different kinds of sensors\
    \ for measurin\nthe real-time environmental and physical state of the components\
    \ and the actuator\nFigure 2. Proposed Internet of Energy platform architecture.\n\
    It is a demanding job to develop a demand response based IoE base. The role of\
    \ the\nplatform is to (1) incorporate the micro-grid tools into the communications\
    \ system and\n(2) link to the IoE cloud in order to track and manage the devices.\
    \ The IoE communications\nnetwork proposed is composed of 4 different layers,\
    \ as deﬁned in Figure 2.\n(a)\nAgent Layer:\nThe device or perception layer was\
    \ referred to as the layer of different components [38].\nVarious IoT users are\
    \ included in the device layer, which is comprised of smart electric\nvehicles,\
    \ smart homes, and transportation systems, along with DGs such as FCs, MTs and\n\
    the WTs. Additionally, this layer supported different kinds of sensors for measuring\
    \ the\nreal-time environmental and physical state of the components and the actuators\
    \ needed for\nadjusting them. Hence, WSNs and WSANs were seen to be an inseparable\
    \ component of\nthis layer.\n(b)\nIoT platform layer:\nThe IoT platform layer\
    \ is the sensors layer. Moreover, this layer funds different kinds\nof sensors\
    \ to monitor the physical condition of a connected agent and to adjust to them\n\
    in real-time. WirelessSensor and Actor-Network (WSAN) and Wireless-Sensor-Networks\n\
    (WSNs) are the two pieces of the sheet that are inseparable. WSNs can be described\
    \ as a\nnumber of sensors that are used to sense the environmental conditions\
    \ and transmit them\nthrough a wireless network to other appliances.\n(c)\nNetwork\
    \ layer:\nEnergies 2021, 14, 3191\n9 of 29\nA networks layer can assemble the\
    \ data from a cloud and perception layers and then\ntransfer it to the upper-layers\
    \ for extra processing. It can transmit the data to other smart\nappliances for\
    \ distributed functions present on the component edges. A few commu-\nnication\
    \ technologies that are used in different areas include WIFI, Bluetooth, Z-Wave,\n\
    3G/4G, Zigbee, LoRa, UMB, and cellular networks. These devices provide a wireless\n\
    communication facility and can be used in various applications.\n(d)\nLayer of\
    \ processing data:\nA data processing layer is deﬁned as the layer which allows\
    \ processing a huge volume\nof data which was assembled from lower-layer with\
    \ the help of powerful processors [38].\n(e)\nLayer of cloud:\nThe cloud layer\
    \ stores historical data from distributed energy resources (DERs) for the\npurpose\
    \ of global tracking. One of the features required for Internet of Energy applications\n\
    and services is to store historical data [39]. The IoE cloud layer includes virtualized\
    \ servers.\nIn addition, an application interface has been introduced with preserved\
    \ historical data for\neach DER. A vast volume of data can be saved and maintained\
    \ in the historical archive,\nwhich is supported by the application interface\
    \ to the cloud infrastructure.\n4.1. Platform of ThingSpeak\nThe ThingSpeak is\
    \ an open-source IoT application (IoT) and an Application Program-\ning Interface\
    \ (API) that allows the storage and recovery of data through internet or by\n\
    Local Area Network through the HTTP and MQTT protocol [40].\nTo operate, ThingSpeak\
    \ inherits the following elements:\n•\nReceived Signal Strength Indicator (RSSI)\
    \ channels: A collection of NRC ThingSpeak\nchannels for the upload of RSSI data\
    \ by target devices. NRC is a device parameter to\nbe chosen for the platform\
    \ installation time.\nThe data submitted to RSSI channel include the IoT appliances\
    \ ID, number of detected\nAPs ND\nRSSI. The device ID is compulsory, the other\
    \ data pieces may be missed if there\nare no technical capabilities in the IoT\
    \ device. Each channel is replicated with the ID of\nthe unit.\n•\nAn algorithm-based\
    \ Thing Speak Analysis, with the execution of data uploaded from\ndevices on RSSI\
    \ channels.\nThree MATLAB variables store RSSI data in the applications [40]:\n\
    •\nRSSI MAP dimension matrix NRP × NAP, where NRP is the number of point of refer-\n\
    ence and NAP the number of access points. The entry RSSI_MAPi,j is set on relation\
    \ to\nPNULL lower than the recipient sensitivity threshold for the generic AP\
    \ i not detected\nin the generic RP j;\n•\nDimensional RP MAP matrix of size NRP\
    \ × 3, with the j-th reference point coordinates\nin the j-th reference points.\n\
    •\nA NRP length vector access point ID, which stores each access point MAC adress,\
    \ in\nthe same order as the RSSI MAP matrix rows.\nThe algorithm k Nearest Neighbor\
    \ (kNN), the algorithm k is actually implemented on\nthe platform [40].\nˆx =\
    \ ∑k\nn=1 xn\nk\nˆy = ∑k\nn=1 yn\nk\n⇐⇒ ˆpkNN = ∑k\nn=1 pn\nk\nˆz = ∑k\nn=1 zn\n\
    k\n(18)\nEnergies 2021, 14, 3191\n10 of 29\nWkNN is an extension of kNN.\nˆpWkNN\
    \ = ∑k\nn=1 w(mn)pn\n∑k\nn=1 w(mn)\n(19)\nw(.) is usually deﬁned as a special\
    \ case of WkNN.\nThere are two choices for similarity tests at the moment for\
    \ ThingSpeak:\n•\nInverse Minkowski distance as:\nm(ST, Si) =\n NAP\n∑\nl=1\n\f\
    \fSl,T − Sl,i\n\f\fp\n!− 1\np\np ≥ 1\n(20)\n•\nCorrelation coefﬁcient squared\
    \ value R(ST − Si), as:\nR(ST, Si) =\n∑NAP\nl=1 (Sl,T − ST)(Sl,i − Si)\nq\n∑NAP\n\
    l=1 (Sl,T − ST)2q\n∑NAP\nl=1 (Sl,i − Si)2\n(21)\nProcedure of Thing Speak\nThe\
    \ process for setting and deploying the ThingSpeak platform provides for three\n\
    steps, given that WiFi hardware is already mounted within the ﬁeld of interest:\
    \ (1) environ-\nmental scan, (2) conﬁguration on the server-side, and (3) conﬁguration\
    \ on the device side.\n4.2. Proposed Communication Architecture\n4.2.1. The MQTT\
    \ Knowledge\nThe MQTT is a lightweight protocol. The MQTT is operational in the\
    \ TCP and ensures\nthat all messages are forwarded from agent to server.\nThree\
    \ major players, i.e., A MQTT protocol includes MQTT Publisher, MQTT Broker,\n\
    and a MQTT subscriber. MQTT’s subscribing and publishing companies have indirect\n\
    connections and no IP address at the same time. An MQTT broker takes care of the\
    \ cus-\ntomer authorization and initialization process necessary for communication.\
    \ To publish\nthe information, the MQTT publishers utilize custom themes for catering\
    \ to their clients.\nThe MQTT protocol did not use a Metadata marking. Thereafter,\
    \ the MQTT topic man-\nagement presents the metadata for a message load. MQTT\
    \ is known as a string with the\nhierarchical structure of multi-attributes and\
    \ multi-levels. Every stage can be separated\nfrom the forward slash in a theme\
    \ tree [41]. For routing data derivation, all subjects can be\nmodiﬁed. Following\
    \ the exchange of control packets among clients and brokers, Figure 3a\npresents\
    \ the link initialization. Check packets for CONNAC, Connect, PUBACK, PUBLISH,\n\
    SUBSCRIBE, SUBACK, etc., were shown to include speciﬁc instructions concerning\
    \ the\nsubject, transmission and payload service quality (QoS). Figure 3b presents\
    \ all components\nof the MQTT contact.\nEnergies 2021, 14, 3191\n11 of 29\nEnergies\
    \ 2021, 14, x FOR PEER REVIEW \n11 of 32 \n \n \n \n(a) \n(b) \nFigure 3. (a)\
    \ MQTT procedure, (b) MQTT topic and component. \n4.2.2. Proposed Architecture\
    \ \nThe hierarchical system provided for intelligent homes with a control-layer\
    \ and \ncyber-layer is presented in Figure 4. Two communication layers were included\
    \ in the hy-\nbrid system. It was seen that in the Layer 1 (local layer), the\
    \ appliances in the smart build-\ning transmitted the MQTT messages to a Building\
    \ MQTT Client (BMC) and reported the \nmeasurement and subscribed to the MQTT\
    \ message that were published via MQTT Client \nfor protection/control purpose.\
    \ A connection between the Cloud and BMC using HTTP \nPOST/GET requests was seen\
    \ in Layer 2 (which is the global layer). Any appliance in this \narchitecture\
    \ had Wi Fi unit connected to the local gate way. Thus, the values of a commit-\n\
    ted and pre-defined subject could be published regularly [42,43]. The BMC then\
    \ sub-\nscribes to the various topics and transmits the values obtained to the\
    \ cloud channel. A \nMATLAB cloud interface, which implements the built algorithm\
    \ for allocating appliances, \nis available to access all cloud data. The algorithm\
    \ results are then transferred with BMC \nfrom a cloud to intelligent devices\
    \ that control them. The researchers found that when \ncommunication in any layer\
    \ fails, the suggested architecture is robust (either local or \nglobal). Hence,\
    \ the BMC was so designed that during any communication link failure or \nhigh\
    \ latency noted in the network, it could operate as a local controller for all\
    \ appliances \nin building. This function of BMC was highlighted in the Section\
    \ 5. \nFigure 3. (a) MQTT procedure, (b) MQTT topic and component.\n4.2.2. Proposed\
    \ Architecture\nThe hierarchical system provided for intelligent homes with a\
    \ control-layer and cyber-\nlayer is presented in Figure 4. Two communication\
    \ layers were included in the hybrid\nsystem. It was seen that in the Layer 1\
    \ (local layer), the appliances in the smart building\ntransmitted the MQTT messages\
    \ to a Building MQTT Client (BMC) and reported the\nmeasurement and subscribed\
    \ to the MQTT message that were published via MQTT Client\nfor protection/control\
    \ purpose. A connection between the Cloud and BMC using HTTP\nPOST/GET requests\
    \ was seen in Layer 2 (which is the global layer). Any appliance in this\narchitecture\
    \ had Wi Fi unit connected to the local gate way. Thus, the values of a committed\n\
    and pre-deﬁned subject could be published regularly [42,43]. The BMC then subscribes\n\
    to the various topics and transmits the values obtained to the cloud channel.\
    \ A MATLAB\ncloud interface, which implements the built algorithm for allocating\
    \ appliances, is available\nto access all cloud data. The algorithm results are\
    \ then transferred with BMC from a cloud\nto intelligent devices that control\
    \ them. The researchers found that when communication\nin any layer fails, the\
    \ suggested architecture is robust (either local or global). Hence, the\nBMC was\
    \ so designed that during any communication link failure or high latency noted\n\
    in the network, it could operate as a local controller for all appliances in building.\
    \ This\nfunction of BMC was highlighted in the Section 5.\nEnergies 2021, 14,\
    \ 3191\n12 of 29\nEnergies 2021, 14, x FOR PEER REVIEW \n12 of 32 \n \n \nFigure\
    \ 4. Smart home proposed architecture of communication. \n4.3. Proposed Optimization\
    \ Method \n4.3.1. Salp Swarm Algorithm Based Scheduling Model \nAs shown in Figure\
    \ 5, the salp swarm home devices planning mechanism is sug-\ngested in the work\
    \ to optimally design home appliances. The action of the salp swarm \nalgorithms\
    \ is based on the navigation and foraging of the salp swarm in oceans. The key\
    \ \nexplanation for this optimization technique is its swarming activity in which\
    \ all salps \nmove and drill food together [44]. \nFigure 4. Smart home proposed\
    \ architecture of communication.\n4.3. Proposed Optimization Method\n4.3.1. Salp\
    \ Swarm Algorithm Based Scheduling Model\nAs shown in Figure 5, the salp swarm\
    \ home devices planning mechanism is suggested\nin the work to optimally design\
    \ home appliances. The action of the salp swarm algorithms\nis based on the navigation\
    \ and foraging of the salp swarm in oceans. The key explanation\nEnergies 2021,\
    \ 14, 3191\n13 of 29\nfor this optimization technique is its swarming activity\
    \ in which all salps move and drill\nfood together [44].\nEnergies 2021, 14, x\
    \ FOR PEER REVIEW \n13 of 32 \n \n \nEach salp is considered as a device in energy\
    \ management controller. Where the aim \nis to find a group of devices, namely\
    \ the best swarm. The swarm of the salps moves to-\ngether to find the best survival\
    \ option. In our case, the best optimal point for a group of \ndevices must be\
    \ found during an interval time. \n \nFigure 5. Salp swarm optimization algorithm.\
    \ \nA swarm chain is salp. Then the swarm is divided into followers and a leader.\
    \ It is \nsaid that the salp leading the chain is salp, while the others are also\
    \ salp. The leader of \nStart\nIs Iteration < Maximum \nIteration?\nInitialization\n\
    By use objective function \nCalculate the fitness of \neach swarm\nYes\nNo\nSelect\
    \ the best agent\nIs length (Population) =1 ?\nUpdate position of leading \nSalp\n\
    Yes\nUpdate position of follower \nSalp\nNO\nUpdate Salp\nSelect the best Salp\
    \ for schedule\nEnd\nFigure 5. Salp swarm optimization algorithm.\nEach salp is\
    \ considered as a device in energy management controller. Where the aim is\nto\
    \ ﬁnd a group of devices, namely the best swarm. The swarm of the salps moves\
    \ together\nto ﬁnd the best survival option. In our case, the best optimal point\
    \ for a group of devices\nmust be found during an interval time.\nEnergies 2021,\
    \ 14, 3191\n14 of 29\nA swarm chain is salp. Then the swarm is divided into followers\
    \ and a leader. It is\nsaid that the salp leading the chain is salp, while the\
    \ others are also salp. The leader of salp\nleads the follower of salp. Taking\
    \ the n-dimensional search ﬁeld into account. N deﬁnes\nthe number of optimization\
    \ problem variables. Z is a double-dimensional matrix used for\nlabeling the salp\
    \ location. D is a supposed food source in a search room. In a search space,\n\
    a salp target is D used to update leading position [44].\nZ1\n풾 = D풾 + 풶1((퓇퓎풾\
    \ − ℯ퓎풾)풶2 + ℯ퓎풾)풶3 ≤ 0Z1\n풾 = D풾 − 풶1((퓇퓎풾 − ℯ퓎풾)풶2 + ℯ퓎풾)풶3 > 0\n(22)\n풶1 is\
    \ a balance coefﬁcient of a exploitation and exploration.\n퓇퓎풾 and ℯ퓎풾 are upper\
    \ bound and lower bound of search space with dimension 풾.\n풶1, 풶2 and 풶3 are random\
    \ numbers. 풾 is search space dimenson. Z1\n풾 is salp leader. D풾 is\nconsidered\
    \ as a food source.\n풶1 = 2 × e−( 4ℯ\nℓ )\n2\n(23)\nNewton’s motion law will be\
    \ used to change the follower salps’ location.\nZ풿\n풾 = ℊo퓉 + 0.5 × κ × 퓉2\n(24)\n\
    where Z풿\n풾 represents the follower salp position of dimension 풾. 퓉 represent\
    \ the iteration,\nℊo indicate the initial speed. The κ =\nℊf inal\nℊo\nand ℊ =\
    \ Z−Zo\n퓉\n.\n4.3.2. Rainfall Algorithm Based Scheduling Model\nThe rainfall algorithm\
    \ is proposed in this work in order to plan home equipment\noptimally. The rainfall\
    \ algorithm imitates rainfall behavior. Any drop of rain in the energy\nmanagement\
    \ controller is regarded as a device. In the deepest valley, drops are collected\n\
    and the global optimal solution is found.\nThe particles are moving as the gradients\
    \ descend and ascend in the rainfall algo-\nrithm. Figure 6 demonstrates the suggested\
    \ algorithm. Rainfall optimization begins with\nparameters and population initialization.\
    \ The words used in the suggested algorithms\nare: active drop, point neighbor,\
    \ raindrop, explosion process, neighborhood, inactive drop,\nmerit order list,\
    \ and raindrops rank [44].\n퓃퓅풿\n풾 illustrate the neighbor devices 풿 of rain drop\
    \ 풾. Formula for 퓃퓅풿\n풾 is illustrated\nin Equations (25) and (26):\n||퓋퓀 × 퓇||\
    \ ≥ ||퓋퓀 × (A풾 − 퓃퓅풿\n풾 ||\n(25)\n퓇 = 퓇initial × fiteration\n(26)\nwhere, 풿 =\
    \ 1, 2, 3, . . . , m, 풾 = 1, 2, 3, . . . , 퓃퓅 and 퓀 = 1, 2, 3, . . . , n, and\
    \ 퓇 is real vector.\nA raindrop is said to be a single part of a population. It\
    \ is a vector used to record\nthe optimization problem variables. M is the population\
    \ size, 풾 is used for presenting the\ndecreased numbers. Equation (27) describes\
    \ it [45].\nA풾 = [Z풾,1, Z풾,2, Z풾,3 . . . Z풾,k, Z풾,n]풾∈1,2,...,m\n(27)\nwhere n\
    \ is variables in problem of optimization, Z풾,k illustrate kth variable used in\
    \ problem\nof optimization. A풾 is 풾th number drop.\nSubject used is illustrate\
    \ below in (28) [45].\nZ풾,k = 풻(low퓀, up퓀)\n(28)\n풻 is used to shows function\
    \ of uniform distribution. Lower and upper limits are\nrepresented as low퓀 and\
    \ up퓀.\nEnergies 2021, 14, 3191\n15 of 29\nEnergies 2021, 14, x FOR PEER REVIEW\
    \ \n15 of 32 \n \n \n \nFigure 6. Rainfall optimization algorithm. \nStart\nIs\
    \ Iteration < Maximum Iteration?\nInitialization\nGenerate np neighbor \npoints\n\
    Yes\nNo\nCalculate cost for raindrop and its \nneighbor points\nIs any dominant\
    \ neighbor ?\nReplace drop with the most non \ndominant neighbor point\nYes\n\
    Set the drop statues to \ninactive\nNO\nIncrease itration\nEnd\nCreate a merit\
    \ order list\nSet lowest rank raindrop as \ninactive\nIs Iteration < Maximum Itration\
    \ ?\nNO\nCalculate the cost function of all \nraindrops\nYes\nSelect the raindrop\
    \ with minimum \ncost function\nCalculate cost as optimum solution\nFigure 6.\
    \ Rainfall optimization algorithm.\nEnergies 2021, 14, 3191\n16 of 29\nF\n\x10\
    \n퓃퓅풿\n풾\n\x11\n풾∈{1,2,...,퓃퓅} − {풹} > F\n\x10\n퓃퓅풾\n풹\n\x11\n(29)\nThe explosion\
    \ phase is accomplished when this drop is inactive. This approach is\nused to\
    \ extract rain drop from the situation. The phase of explosion is Ne times. 퓃퓅ℯ퓍\n\
    used in the explosion method to search neighbors for equation (30) [44].\n퓃퓅ℯ퓍\
    \ = ℯ풸 × ℯ풷 × 퓃퓅\n(30)\nwhere explosion counter is given as ℯ풸, points neighbor\
    \ are shows as 퓃퓅, and explosion\nbase is illustrated as ℯ풷.\nTo save the raindrop\
    \ ranges in an increasing order, a merit list is used. An optimization\nproblem\
    \ eliminates a raindrop from the merit list. Randomly, the raindrops are formed\
    \ at\nﬁrst iteration. A neighborhood is allocated to each rainfall after rain\
    \ drop generation and\nneighborhood point are also randomly generated according\
    \ to objective feature restrictions.\nBelow are such restrictions for Equations\
    \ (31) and (32) to allocate neighboring points [44]:\ni f\n\x10\n퓃퓅풿\n풾\n\x11\n\
    퓀 > up퓀\nthen\n\x10\n퓃퓅풿\n풾\n\x11\n퓀 = up퓀\n(31)\ni f\n\x10\n퓃퓅풿\n풾\n\x11\n퓀 <\
    \ low퓀\nthen\n\x10\n퓃퓅풿\n풾\n\x11\n퓀 = low퓀\n(32)\nFor each rain fall and its neighbors,\
    \ the cost is measured. All neighborhood values are\ncompared to raindrop values\
    \ to detect the most dominant neighborhood point.\n4.4. Communication System Model\n\
    The smart grid would need an effective measuring and communication system in\n\
    order to continuously track the power and cost proﬁle and regularly quantify power\
    \ losses.\nThere are several stages of data processing.\nThis work contains measurement\
    \ units (MU) for every distribution network bus. MU\nis MATLAB modeling. Power\
    \ and cost information is sent to the control center regularly\nat ﬁxed time.\
    \ The control center is designed as a virtual data management and analysis\nplatform.\
    \ One approach to communication relating to the device topology proposed is\n\
    considered. The case takes a Cloud approach, which sends its measured data directly\
    \ to\nthe Cloud by any MU connected to corresponding feeder bus as illustrate\
    \ in Figure 1.\nThe real-time data transfer among the MATLAB software package\
    \ and the open source\nIoT framework ThingSpeak are used to model proposed communication\
    \ architectures.\nThingSpeak was chosen for the simulation of real time cloud\
    \ communication Due to its\nfollowing beneﬁts [40]:\n1.\nThingSpeak Cloud IoT\
    \ platform data aggregation, tracking and analysis. In the smart\ngrid model,\
    \ power proﬁle is monitored on multiple ThingSpeak channels in real time\nand\
    \ depicted graphically.\n2.\nSecurity: The username and passwords allow user authentication\
    \ while each channel\nis equipped with its own ID and can be accessible (seen\
    \ by other users). There are two\nkeys in each channel for the application programing\
    \ interface. A randomly generated\nread key and write key of the API. These keys\
    \ can save or retrieve information from\nstuff from each channel over the Internet\
    \ or LAN.\n3.\nIt facilitates the double-way ﬂow of data between the user and\
    \ virtual device and\nallows the data and remote control to be exchanged in real\
    \ time. The MATLAB\nDesktop Real-time Toolbox offers a communication between the\
    \ simulated feeding\nmodel and the ThingSpeak IoT platform.\n4.\nCommunication\
    \ network enabling for real-time data transmission over the Internet\nbetween\
    \ MATLAB and ThingSpeak.\n5.\nAllows importing, exporting, analyzing and viewing\
    \ data on multiple platforms and\ntheir ﬁelds simultaneously.\nEnergies 2021,\
    \ 14, 3191\n17 of 29\n5. Simulations Results\nThis part discusses the effect of\
    \ the microgrid communication system. The microgrid\nwill exchange information\
    \ in the presence of the communications device, such as load\nconsumption and\
    \ power generation. To reduce micro grid operating costs, instead of\npurchasing\
    \ from grid, the micro grid gets required power from neighboring microgrid\ninstead\
    \ of purchasing it from the utility grid. That mean, a communication system provides\n\
    the data needed to transfer power between the microgrids. Utilizing the cost optimization\n\
    algorithm in Reference [44].\nIn this simulation test, the outcomes of smart EMS\
    \ applied with the proposed method\nover a cloud-platform to control devices in\
    \ the microgrid are introduced and discussed.\nIn this paper the MATLAB is a chief\
    \ command and control unit organizing a ThingSpeak\nplatform, developed in a software\
    \ communication and architecture interface. MQTT\nfunctions as a broker between\
    \ subscribing microgrid devices and main control unit. In this\npaper, the ThingSpeak\
    \ platform interface that has been designed is a simple and convenient\nGraphical\
    \ User Interface (GUI) that allows a house owner to interact and access with\n\
    their home energy management as a service over the cloud system. Figure 7a shows\
    \ the\nThingSpeak web page to the enter user name and password of the customer,\
    \ Figure 7b,c\nshows the ThingSpeak dash-board illustrate the results of the proposed\
    \ system\nEnergies 2021, 14, x FOR PEER REVIEW \n18 of 32 \n \n \n(a) \n \n(b)\
    \ \nFigure 7. Cont.\nEnergies 2021, 14, 3191\n18 of 29\nEnergies 2021, 14, x FOR\
    \ PEER REVIEW \n19 of 32 \n \n \n \n(c) \nFigure 7. User interface design platform\
    \ (ThingSpeak platform), (a) the ThingSpeak web page to the enter username and\
    \ \npassword of the customer, (b,c) the ThingSpeak dashboard illustrate the results\
    \ of the proposed system. \nFor scheduling, where each house has several devices,\
    \ three intelligent homes are \nenvisaged. We considered the same energy demand\
    \ for any consumer for a fair compari-\nson of the electricity bill for three\
    \ households. \n5.1. Result without Corrective Method \nThe simulation is performed\
    \ to verify the impact of the ToU signal on the electricity \nbill of the user.\
    \ In ToU, electricity is regarded as a baseline in Reference [44]. The electricity\
    \ \nprices are volatile and time dependent on the costs of generation and energy\
    \ use. How-\never, the costs of production are confidential in several respects.\
    \ For the analysis, we there-\nfore assume that the generation with high ToU rates\
    \ will increase. \nThe home energy management system comprises a GUI and related\
    \ software to fa-\ncilitate users power consumption and total cost of the microgrid\
    \ devices; their power con-\nsumption of all homes without the corrective method\
    \ is implemented as displayed in Fig-\nure 8. Figure 9 shows the cost graphical\
    \ user interface of proposed home energy manage-\nment system without the corrective\
    \ method, (a) cost profiles of the first house, (b) cost \nprofiles of the second\
    \ house, (c) cost profiles of the third house. \nFigure 7. User interface design\
    \ platform (ThingSpeak platform), (a) the ThingSpeak web page to the\nenter username\
    \ and password of the customer, (b,c) the ThingSpeak dashboard illustrate the\
    \ results\nof the proposed system.\nFor scheduling, where each house has several\
    \ devices, three intelligent homes are\nenvisaged. We considered the same energy\
    \ demand for any consumer for a fair comparison\nof the electricity bill for three\
    \ households.\n5.1. Result without Corrective Method\nThe simulation is performed\
    \ to verify the impact of the ToU signal on the electricity\nbill of the user.\
    \ In ToU, electricity is regarded as a baseline in Reference [44]. The electricity\n\
    prices are volatile and time dependent on the costs of generation and energy use.\
    \ However,\nthe costs of production are conﬁdential in several respects. For the\
    \ analysis, we therefore\nassume that the generation with high ToU rates will\
    \ increase.\nThe home energy management system comprises a GUI and related software\
    \ to\nfacilitate users power consumption and total cost of the microgrid devices;\
    \ their power\nconsumption of all homes without the corrective method is implemented\
    \ as displayed\nin Figure 8. Figure 9 shows the cost graphical user interface\
    \ of proposed home energy\nmanagement system without the corrective method, (a)\
    \ cost proﬁles of the ﬁrst house,\n(b) cost proﬁles of the second house, (c) cost\
    \ proﬁles of the third house.\n5.2. Result with Corrective Method\nAfter scheduling\
    \ the electric devices, the energy bill can be decreased. Additional\nstudies\
    \ are carried out to study a effect of the scheduling utilizing the algorithm\
    \ of salp\nswarm and the algorithm of rainfall. After load shifting by scheduling,\
    \ we also investigated\nthe effect of the proposed pricing technic. Figure 10\
    \ shows power GUI of proposed\nhome management system after implementing the SSA\
    \ method, Figure 11 illustrates\nthe power GUI of the proposed home management\
    \ system after implementing the RFA\nalgorithm. Figure 12 shows the cost GUI of\
    \ the suggested home management system after\nimplementing the SSA method, Figure\
    \ 13 illustrates the cost GUI of the proposed system\nafter implementing the RFA\
    \ algorithm.\nEnergies 2021, 14, 3191\n19 of 29\nEnergies 2021, 14, x FOR PEER\
    \ REVIEW \n20 of 32 \n \n \n \n(a) \n \n(b) \nFigure 8. Cont.\nEnergies 2021,\
    \ 14, 3191\n20 of 29\nEnergies 2021, 14, x FOR PEER REVIEW \n21 of 32 \n \n \n\
    \ \n(c) \nFigure 8. Power GUI of the suggested home structure without corrective\
    \ method: (a) load profiles \nof the first house; (b) load profiles of the second\
    \ house; (c) load profiles of the third house. \n \n(a) \nFigure 8. Power GUI\
    \ of the suggested home structure without corrective method: (a) load proﬁles\
    \ of\nthe ﬁrst house; (b) load proﬁles of the second house; (c) load proﬁles of\
    \ the third house.\nEnergies 2021, 14, x FOR PEER REVIEW \n21 of 32 \n \n \n \n\
    (c) \nFigure 8. Power GUI of the suggested home structure without corrective method:\
    \ (a) load profiles \nof the first house; (b) load profiles of the second house;\
    \ (c) load profiles of the third house. \n \n(a) \nFigure 9. Cont.\nEnergies 2021,\
    \ 14, 3191\n21 of 29\nEnergies 2021, 14, x FOR PEER REVIEW \n22 of 32 \n \n \n\
    \ \n(b) \n \n(c) \nFigure 9. Cost GUI of the suggested home structure without\
    \ corrective method: (a) cost profiles of \nthe first house; (b) cost profiles\
    \ of the second house; (c) cost profiles of the third house. \n5.2. Result with\
    \ Corrective Method \nAfter scheduling the electric devices, the energy bill can\
    \ be decreased. Additional \nstudies are carried out to study a effect of the\
    \ scheduling utilizing the algorithm of salp \nswarm and the algorithm of rainfall.\
    \ After load shifting by scheduling, we also investi-\ngated the effect of the\
    \ proposed pricing technic. Figure 10 shows power GUI of proposed \nhome management\
    \ system after implementing the SSA method, Figure 11 illustrates the \npower\
    \ GUI of the proposed home management system after implementing the RFA algo-\n\
    rithm. Figure 12 shows the cost GUI of the suggested home management system after\
    \ \nimplementing the SSA method, Figure 13 illustrates the cost GUI of the proposed\
    \ system \nafter implementing the RFA algorithm. \nFigure 9. Cost GUI of the suggested\
    \ home structure without corrective method: (a) cost proﬁles of\nthe ﬁrst house;\
    \ (b) cost proﬁles of the second house; (c) cost proﬁles of the third house.\n\
    Energies 2021, 14, 3191\n22 of 29\nEnergies 2021, 14, x FOR PEER REVIEW \n23 of\
    \ 32 \n \n \n \n(a) \n \n(b) \n \n(c) \nFigure 10. Power GUI of the proposed system\
    \ after implementing the SSA algorithm: (a) load proﬁles\nof ﬁrst house; (b) load\
    \ proﬁles of second house; (c) load proﬁles of third house.\nEnergies 2021, 14,\
    \ 3191\n23 of 29\nEnergies 2021, 14, x FOR PEER REVIEW \n24 of 32 \n \n \nFigure\
    \ 10. Power GUI of the proposed system after implementing the SSA algorithm: (a)\
    \ load pro-\nfiles of first house; (b) load profiles of second house; (c) load\
    \ profiles of third house. \n \n(a) \n \n(b) \nEnergies 2021, 14, x FOR PEER REVIEW\
    \ \n25 of 32 \n \n \n(c) \nFigure 11. Power GUI of the suggested home structure\
    \ after implementing the RFA algorithm: (a) \nload profiles of first house; (b)\
    \ load profiles of second house; (c) load profiles of third house. \nFigure 11.\
    \ Power GUI of the suggested home structure after implementing the RFA algorithm:\n\
    (a) load proﬁles of ﬁrst house; (b) load proﬁles of second house; (c) load proﬁles\
    \ of third house.\nEnergies 2021, 14, 3191\n24 of 29\n \n \n(c) \nFigure 11. Power\
    \ GUI of the suggested home structure after implementing the RFA algorithm: (a)\
    \ \nload profiles of first house; (b) load profiles of second house; (c) load\
    \ profiles of third house. \n \n(a) \nEnergies 2021, 14, x FOR PEER REVIEW \n\
    26 of 32 \n \n \n(b) \n \n(c) \nFigure 12. Cost GUI of the suggested home structure\
    \ after implementing the SSA algorithm: (a) \ncost profiles of first house; (b)\
    \ cost profiles of second house; (c) cost profiles of third house. \nFigure 12.\
    \ Cost GUI of the suggested home structure after implementing the SSA algorithm:\
    \ (a) cost\nproﬁles of ﬁrst house; (b) cost proﬁles of second house; (c) cost\
    \ proﬁles of third house.\nEnergies 2021, 14, 3191\n25 of 29\nEnergies 2021, 14,\
    \ x FOR PEER REVIEW \n27 of 32 \n \n \n \n(a) \n \n(b) \nEnergies 2021, 14, x\
    \ FOR PEER REVIEW \n28 of 32 \n \n \n(c) \nFigure 13. Cost GUI of the suggested\
    \ home structure after implementing the RFA algorithm: (a) \ncost profiles of\
    \ first house; (b) cost profiles of second house; (c) cost profiles of third house.\
    \ \n6. Results and Discussion \nIn the analysis, electricity emission reduction,\
    \ cost-saving and PAR were used to \nevaluate the performing analysis of the microgrid.\
    \ The time slots demanded for unmova-\nble and changing demand are moved into\
    \ the early morning time after the implementa-\ntion of the energy management\
    \ system, as shown in Figures 12 and 13. Thus, the load \np ofile is co ected\
    \ as the custo\ne ca\no k\nith lo\np ice o\nti\ne slots as shiftable\nFigure 13.\
    \ Cost GUI of the suggested home structure after implementing the RFA algorithm:\
    \ (a) cost\nproﬁles of ﬁrst house; (b) cost proﬁles of second house; (c) cost\
    \ proﬁles of third house.\nEnergies 2021, 14, 3191\n26 of 29\n6. Results and Discussion\n\
    In the analysis, electricity emission reduction, cost-saving and PAR were used\
    \ to\nevaluate the performing analysis of the microgrid. The time slots demanded\
    \ for unmovable\nand changing demand are moved into the early morning time after\
    \ the implementation of\nthe energy management system, as shown in Figures 12\
    \ and 13. Thus, the load proﬁle is\ncorrected as the customer can work with low\
    \ price on time slots as shiftable, unshiftable de-\nvices. As a result, consumption\
    \ energy costs have been reduced, emissions costs decreased,\nand the PAR upgrade\
    \ was carried out. Figure 14 shows the comparison between without\nthe suggested\
    \ system and with the suggested system.\nEnergies 2021, 14, x FOR PEER REVIEW\
    \ \n29 of 32 \n \n \n(a) \n \n(b) \nFigure 14. Cont.\nEnergies 2021, 14, 3191\n\
    27 of 29\n \n \n(b) \n \n(c) \nFigure 14. Comparison between without the suggested\
    \ system and with the suggested system, (a) microgrid cost, (b) im-\nprovement\
    \ (%) by using salp swarm algorithm, (c) improvement (%) by using rainfall algorithm.\n\
    After applying the suggested scheme, it is notable that the micro grid energy\
    \ cost has\nbeen reduced from 542.2977 cents (USD) to 432.7899 cents (25.3%) by\
    \ using the salp swarm\nalgorithm, as depicted in Figure 14b. Additionally, it\
    \ is notable that the micro grid energy\ncost has been decreased from 542.2977\
    \ cents (USD) to 412.9103 cents (31.335%) by using the\nrainfall algorithm, as\
    \ depicted in Figure 14c.\n7. Conclusions\nIn this research, a novel optimization\
    \ technique, as well as the cloud device framework\nhas been established for the\
    \ home management system. This study proposed a new\ncommunication system with\
    \ a two level construction, which is suitable for microgrid\nmanagement system.\
    \ The suggested platform uses Transmission Control Protocol/Internet\nProtocol\
    \ (TCP/IP) for local microgrid data exchange and as a backup communication\ntechnique\
    \ among microgrid in case of a failure in the communication of cloud level. MQTT\n\
    subscriber/publisher is adopted for cloud-level messaging and HTTP for interactions\n\
    between a cloud-server and platform. Using the IoT and salp swarm algorithm and\
    \ rainfall\nalgorithm optimization technique, and optimal energy management scheme\
    \ for microgrid\nis proposed in this paper. This work is the main contribution\
    \ to the literature on energy\nmanagement functioning and it proposes Real-Time\
    \ Electricity Scheduling (RTES) for the\nhome energy management system, which\
    \ considers the errors of information prediction.\nUnlike the majority of the\
    \ earlier home energy management system approaches that revolve\naround Day Ahead\
    \ Electricity Scheduling (DAES). In addition, the energy management\nsystem was\
    \ applied to improve the microgrid consumed energy cost, emission price,\nand\
    \ PAR. To evaluate the performance of the suggested system models given in this\n\
    paper, different tests were performed on MATLAB. The cost analysis in the results\
    \ section\nshows how efﬁcient the suggested distributed platform is compared to\
    \ the centralized\nfunctionality of microgrid communications. The scheduling controller\
    \ proposed in this\nstudy succeeded the energy saving of 25.3% by using the salp\
    \ swarm algorithm and saving\nof 31.335% by using the rainfall algorithm.\nAuthor\
    \ Contributions: B.N.A., software, methodology, writing—original draft; B.H.J.,\
    \ supervision,\ninvestigation, resources; P.S., funding, and review, J.M.G., funding,\
    \ supervision, editing. All authors\nhave read and agreed to the published version\
    \ of the manuscript.\nFunding: This research received no external funding.\nEnergies\
    \ 2021, 14, 3191\n28 of 29\nData Availability Statement: Data sharing not applicable.\n\
    Conﬂicts of Interest: The authors declare no conﬂict of interest.\nReferences\n\
    1.\nBabar, M.; Tariq, M.U.; Jan, M.A. Secure and resilient demand side management\
    \ engine using machine learning for IoT-enabled\nsmart grid. Sustain. Cities Soc.\
    \ 2020, 62, 102370. [CrossRef]\n2.\nAhmad, T.; Zhang, H.; Yan, B. A review on\
    \ renewable energy and electricity requirement forecasting models for smart grid\
    \ and\nbuildings. Sustain. Cities Soc. 2020, 55, 102052. [CrossRef]\n3.\nZhou,\
    \ Q.; Shahidehpour, M.; Paaso, A.; Bahramirad, S.; AlAbdulwahab, A.; Abusorrah,\
    \ A. Distributed Control and Communica-\ntion Strategies in Networked Microgrids.\
    \ IEEE Commun. Surv. Tutor. 2020, 22, 2586–2633. [CrossRef]\n4.\nAlhasnawi, B.N.;\
    \ Jasim, B.H.; Issa, W.; Esteban, M.D. A Novel Cooperative Controller for Inverters\
    \ of Smart Hybrid AC/DC\nMicrogrids. Appl. Sci. 2020, 10, 6120. [CrossRef]\n5.\n\
    Lezama, F.; Soares, J.; Canizes, B.; Vale, Z. Flexibility management model of\
    \ home appliances to support DSO requests in smart\ngrids. Sustain. Cities Soc.\
    \ 2020, 55, 102048. [CrossRef]\n6.\nChen, Y.-Y.; Lin, Y.-H.; Kung, C.-C.; Chung,\
    \ M.-H.; Yen, I.-H. Design and Implementation of Cloud Analytics-Assisted Smart\n\
    Power Meters Considering Advanced Artiﬁcial Intelligence as Edge Analytics in\
    \ Demand-Side Management for Smart Homes.\nSensors 2019, 19, 2047. [CrossRef]\
    \ [PubMed]\n7.\nPaul, S.; Padhy, N.P. Real Time Energy Management for Smart Homes.\
    \ IEEE Syst. J. 2020, 1–12. [CrossRef]\n8.\nBhamidi, L.; Sivasubramani, S. Optimal\
    \ Sizing of Smart Home Renewable Energy Resources and Battery Under Prosumer-Based\n\
    Energy Management. IEEE Syst. J. 2021, 15, 105–113. [CrossRef]\n9.\nArun, S.L.;\
    \ Selvan, M.P. Intelligent Residential Energy Management System for Dynamic Demand\
    \ Response in Smart Buildings.\nIEEE Syst. J. 2018, 12, 1329–1340. [CrossRef]\n\
    10.\nWang, F.; Zhou, L.; Ren, H.; Liu, X.; Talari, S.; Shaﬁe-Khah, M.; Catalao,\
    \ J.P.S. Multi-Objective Optimization Model of Source–\nLoad–Storage Synergetic\
    \ Dispatch for a Building Energy Management System Based on TOU Price Demand Response.\
    \ IEEE\nTrans. Ind. Appl. 2018, 54, 1017–1028. [CrossRef]\n11.\nZhang, D.; Li,\
    \ S.; Sun, M.; O’Neill, Z. An Optimal and Learning-Based Demand Response and Home\
    \ Energy Management System.\nIEEE Trans. Smart Grid 2016, 7, 1790–1801. [CrossRef]\n\
    12.\nShaﬁe-Khah, M.; Siano, P. A Stochastic Home Energy Management System Considering\
    \ Satisfaction Cost and Response Fatigue.\nIEEE Trans. Ind. Inform. 2018, 14,\
    \ 629–638. [CrossRef]\n13.\nHuang, Y.; Wang, L.; Guo, W.; Kang, Q.; Wu, Q. Chance\
    \ Constrained Optimization in a Home Energy Management System. IEEE\nTrans. Smart\
    \ Grid 2018, 9, 252–260. [CrossRef]\n14.\nAlhasnawi, B.N.; Jasim, B.H.J. A Novel\
    \ Hierarchical Energy Management System Based on Optimization for Multi-Microgrid.\
    \ Int.\nJ. Electr. Eng. Inform. 2020, 12, 586–606. [CrossRef]\n15.\nPaul, S.;\
    \ Padhy, N.P. Resilient scheduling portfolio of residential devices and plug-in\
    \ eletric vehicle by minimizing conditional\nvalue at risk. IEEE Trans. Ind. Inform.\
    \ 2019, 15, 1566–1578. [CrossRef]\n16.\nVardakas, J.S.; Zorba, N.; Verikoukis,\
    \ C.V. Power demand control scenarios for smart grid applications with ﬁnite number\
    \ of\nappliances. Appl. Energy 2016, 162, 83–98. [CrossRef]\n17.\nAlhasnawi, B.N.;\
    \ Jasim, B.H.; Esteban, M.D. A New Robust Energy Management and Control Strategy\
    \ for a Hybrid Microgrid\nSystem Based on Green Energy. Sustainability 2020, 12,\
    \ 5724. [CrossRef]\n18.\nVagdoda, J.; Makwana, D.; Adhikaree, A.; Faika, T.; Kim,\
    \ T. A Cloud-Based Multiagent System Platform for Residential Microgrids\nTowards\
    \ Smart Grid Community. In Proceedings of the IEEE Power & Energy Society General\
    \ Meeting (PESGM), Portland, OR,\nUSA, 5–10 August 2018. [CrossRef]\n19.\nWang,\
    \ Y.; Nguyen, T.-L.; Xu, Y.; Tran, Q.-T.; Caire, R. Peer-to-Peer Control for Networked\
    \ Microgrids: Multi-Layer and Multi-\nAgent Architecture Design. IEEE Trans. Smart\
    \ Grid 2020, 11, 4688–4699. [CrossRef]\n20.\nWang, K.; Li, H.; Maharjan, S.; Zhang,\
    \ Y.; Guo, S. Green Energy Scheduling for Demand Side Management in the Smart\
    \ Grid.\nIEEE Trans. Green Commun. Netw. 2018, 2, 596–611. [CrossRef]\n21.\nMoghaddam,\
    \ M.H.Y.; Leon-Garcia, A. A fog-based internet of energy architecture for transactive\
    \ energy management systems.\nIEEE Internet Things J. 2018, 5, 1055–1069. [CrossRef]\n\
    22.\nHashmi, S.A.; Ali, C.F.; Zafar, S. Internet of things and cloud computing-based\
    \ energy management system for demand side\nmanagement in smart grid. Int. J.\
    \ Energy Res. 2021, 45, 1–16. [CrossRef]\n23.\nDavarzani, S.; Granell, R.; Taylor,\
    \ G.A.; Pisica, I. Implementation of a novel multi-agent system for demand response\
    \ management\nin low-voltage distribution networks. Appl. Energy 2019, 253, 113516.\
    \ [CrossRef]\n24.\nGolmohamadi, H.; Keypour, R.; Bak-Jensen, B.; Pillai, J.R.\
    \ A multi-agent based optimization of residential and industrial demand\nresponse\
    \ aggregators. Int. J. Electr. Power Energy Syst. 2019, 107, 472–485. [CrossRef]\n\
    25.\nCortés-Arcos, T.; Bernal-Agustín, J.L.; Dufo-López, R.; Lujano-Rojas, J.M.;\
    \ Contreras, J. Multi-objective demand response to\nreal-time prices (RTP) using\
    \ a task scheduling methodology. Energy 2017, 138, 19–31. [CrossRef]\n26.\nAlhasnawi,\
    \ B.; Jasim, B. Adaptive Energy Management System for Smart Hybrid Microgrids.\
    \ In Proceedings of the 3rd Scientiﬁc\nConference of Electrical and Electronic\
    \ Engineering Researches (SCEEER), Basrah, Iraq, 15–16 June 2020. [CrossRef]\n\
    Energies 2021, 14, 3191\n29 of 29\n27.\nAl-Ali, A.R.; Zualkernan, I.A.; Rashid,\
    \ M.; Gupta, R.; AliKarar, M. A smart home energy management system using IoT\
    \ and big\ndata analytics approach. IEEE Trans. Consum. Electron. 2017, 63, 426–434.\
    \ [CrossRef]\n28.\nAhmed, M.S.; Mohamed, A.; Khatib, T.; Shareef, H.; Homod, R.Z.;\
    \ Ali, J.A. Real time optimal schedule controller for home energy\nmanagement\
    \ system using new binary backtracking search algorithm. Energy Build. 2017, 138,\
    \ 215–227. [CrossRef]\n29.\nAlhasnawi, B.N.; Jasim, B.H. A new internet of things\
    \ enabled trust distributed demand side management system. Sustain.\nEnergy Technol.\
    \ Assess. 2021, 46, 101272. [CrossRef]\n30.\nMahapatra, C.; Moharana, A.K.; Leung,\
    \ V.C.M. Energy Management in Smart Cities Based on Internet of Things: Peak Demand\n\
    Reduction and Energy Savings. Sensors 2017, 17, 2812. [CrossRef] [PubMed]\n31.\n\
    Al Faruque, M.A.; Vatanparvar, K. Energy Management-as-a-Service Over Fog Computing\
    \ Platform. IEEE Internet Things J. 2015,\n3, 161–169. [CrossRef]\n32.\nLi, W.;\
    \ Logenthiran, T.; Phan, V.-T.; Woo, W.L. Implemented IoT-Based Self-Learning\
    \ Home Management System (SHMS) for\nSingapore. IEEE Internet Things J. 2018,\
    \ 5, 2212–2219. [CrossRef]\n33.\nWu, J.; Wei, Z.; Li, W.; Wang, Y.; Li, Y.; Sauer,\
    \ D.U. Battery Thermal- and Health-Constrained Energy Management for Hybrid\n\
    Electric Bus Based on Soft Actor-Critic DRL Algorithm. IEEE Trans. Ind. Inform.\
    \ 2021, 17, 3751–3761. [CrossRef]\n34.\nAlhasnawi, B.N.; Jasim, B.H.; Anvari-Moghaddam,\
    \ A.; Blaabjerg, F. A New Robust Control Strategy for Parallel Operated\nInverters\
    \ in Green Energy Applications. Energies 2020, 13, 3480. [CrossRef]\n35.\nWu,\
    \ J.; Wei, Z.; Liu, K.; Quan, Z.; Li, Y. Battery-Involved Energy Management for\
    \ Hybrid Electric Bus Based on Expert-Assistance\nDeep Deterministic Policy Gradient\
    \ Algorithm. IEEE Trans. Veh. Technol. 2020, 69, 12786–12796. [CrossRef]\n36.\n\
    Alhasnawi, B.N.; Jasim, B.H. A new energy management system of on-grid/off-grid\
    \ using adaptive neuro-fuzzy inference system.\nJ. Eng. Sci. Technol. 2020, 15,\
    \ 3903–3919.\n37.\nAfzal, M.; Huang, Q.; Amin, W.; Umer, K.; Raza, A.; Naeem,\
    \ M. Blockchain Enabled Distributed Demand Side Management in\nCommunity Energy\
    \ System With Smart Homes. IEEE Access 2020, 8, 37428–37439. [CrossRef]\n38.\n\
    Seyede, Z.; Mardaneh, M.T.; Taherian-Fard, E.; Izadian, A.; Ka-vousi-Fard, A.;\
    \ Dabbaghjamanesh, M.; Niknam, T. DoS-Resilient\nDistributed Optimal Scheduling\
    \ in a Fog Supporting IIoT-Based Smart Microgrid. IEEE Trans. Ind. Appl. 2020,\
    \ 56, 2968–2977.\n39.\nMarzal, S.; González-Medina, R.; Salas-Puente, R.; Garcerá,\
    \ G.; Figueres, E. An Embedded Internet of Energy Communication\nPlatform for\
    \ the Future Smart Microgrids Management. IEEE Internet Things J. 2020, 6, 7241–7252.\
    \ [CrossRef]\n40.\nDe Nardis, L.; Caso, G.; Di Benedetto, M.G. ThingsLocate: A\
    \ ThingSpeak-Based Indoor Positioning Platform for Academic\nResearch on Location-Aware\
    \ Internet of Things. Technologies 2019, 7, 50. [CrossRef]\n41.\nJamborsalamati,\
    \ P.; Fernandez, E.; Moghimi, M.; Hossain, M.J.; Heidari, A.; Lu, J. MQTT-Based\
    \ Resource Allocation of Smart\nBuildings for Grid Demand Reduction Considering\
    \ Unreliable Communication Links. IEEE Syst. J. 2019, 13, 3304–3315. [CrossRef]\n\
    42.\nAlhasnawi, B.N.; Jasim, B.H.; Esteban, M.D.; Guerrero, J.M. A Novel Smart\
    \ Energy Management as a Service over a Cloud\nComputing Platform for Nanogrid\
    \ Appliances. Sustain. J. Rec. 2020, 12, 9686. [CrossRef]\n43.\nAlhasnawi, B.N.;\
    \ Jasim, B.H.; Esteban, M.D.; Hossain, E.; Guerrero, J.M. A New Decentralized\
    \ Control Strategy of Microgrids in\nthe Internet of Energy Paradigm. Energies\
    \ 2021, 14, 2183. [CrossRef]\n44.\nKhalid, A.; Javaid, N.; Mateen, A.; Ilahi,\
    \ M.; Saba, T.; Rehman, A. Enhanced Time-of-Use Electricity Price Rate Using Game\n\
    Theory. Electronics 2019, 8, 48. [CrossRef]\n45.\nKhalid, A. Towards Energy Effciency\
    \ in Smart Buildings Exploiting Dynamic Coordination among Appliances and Homes.\
    \ Ph.D.\nThesis, COMSATS University Islamabad, Islamabad, Pakistan, 2018.\n"
  inline_citation: '>'
  journal: Energies (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1996-1073/14/11/3191/pdf?version=1622557990
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Novel Real-Time Electricity Scheduling for Home Energy Management System
    Using the Internet of Energy
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/jsan11030033
  analysis: '>'
  authors:
  - Vinicius Facco Rodrigues
  - Rodrigo da Rosa Righi
  - Cristiano André da Costa
  - Rodolfo Stoffel Antunes
  citation_count: 11
  full_citation: '>'
  full_text: ">\nCitation: Rodrigues, V.F.; Righi,\nR.d.R.; da Costa, C.A.; Antunes,\
    \ R.S.\nSmart Hospitals and IoT Sensors:\nWhy Is QoS Essential Here? J. Sens.\n\
    Actuator Netw. 2022, 11, 33. https://\ndoi.org/10.3390/jsan11030033\nAcademic\
    \ Editor: Sherali Zeadally\nReceived: 7 April 2022\nAccepted: 27 June 2022\nPublished:\
    \ 4 July 2022\nPublisher’s Note: MDPI stays neutral\nwith regard to jurisdictional\
    \ claims in\npublished maps and institutional afﬁl-\niations.\nCopyright:\n© 2022\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nJournal of \nActuator Networks\nSensor and\nArticle\nSmart Hospitals and\
    \ IoT Sensors: Why Is QoS Essential Here?\nVinicius Facco Rodrigues *,†\n, Rodrigo\
    \ da Rosa Righi †\n, Cristiano André da Costa †\nand Rodolfo Stoffel Antunes †\n\
    Unisinos Software Innovation Lab (SOFTWARELAB), Applied Computing Graduate Program,\n\
    Universidade do Vale do Rio dos Sinos (UNISINOS), São Leopoldo 93022-750, Rio\
    \ Grande do Sul, Brazil;\nrrrighi@unisinos.br (R.d.R.R.); cac@unisinos.br (C.A.d.C.);\
    \ rsantunes@unisinos.br (R.S.A.)\n* Correspondence: vfrodrigues@unisinos.br\n\
    † These authors contributed equally to this work.\nAbstract: Background: the increasing\
    \ adoption of smart and wearable sensors in the healthcare\ndomain empowers the\
    \ development of cutting-edge medical applications. Smart hospitals can employ\n\
    sensors and applications for critical decision-making based on real-time monitoring\
    \ of patients and\nequipment. In this context, quality of service (QoS) is essential\
    \ to ensure the reliability of application\ndata. Methods: we developed a QoS-aware\
    \ sensor middleware for healthcare 4.0 that orchestrates\ndata from several sensors\
    \ in a hybrid operating room. We deployed depth imaging sensors and real-\ntime\
    \ location tags to monitor surgeries in real-time, providing data to medical applications.\
    \ Results:\nan experimental evaluation in an actual hybrid operating room demonstrates\
    \ that the solution can\nreduce the jitter of sensor samples up to 90.3%. Conclusions:\
    \ the main contribution of this article relies\non the QoS Service Elasticity\
    \ strategy that aims to provide QoS for applications. The development\nand installation\
    \ were demonstrated to be complex, but possible to achieve.\nKeywords: healthcare\
    \ 4.0; internet of things; sensors; middleware; quality of service\n1. Introduction\n\
    Healthcare 4.0 is coming [1,2]. Hospitals are already adopting sensor devices\
    \ of many\ntypes to monitor medical processes. Patients and medical staff can\
    \ now wear sensors that\nprovide movement and health conditions information in\
    \ near-real time. Additionally, many\nsensors can monitor physical settings generating\
    \ information about the environment and\nmedical equipment. This set of sensors\
    \ has the potential to provide information to support\ndecision-making processes\
    \ and medical data analytics [1,3]. Currently, the analysis of data\nfrom medical\
    \ settings takes place reactively [4]. Medical staff take action to tackle problems\n\
    with the patients’ health only when critical situations occur. A physician decides\
    \ the actions\nto take based solely on traditional examination data from the patient.\n\
    This situation exempliﬁes the reactiveness of medical processes taking action\
    \ only\nafter an emergency. Further, this process is individual for each patient.\
    \ It does not contain a\ncentralized analysis of the medical environment. Ideally,\
    \ decision making should employ a\nglobal analysis of the medical processes, generated\
    \ in real time using data from all patients\nand the medical environment. In this\
    \ context, patient remote health monitoring becomes\ncrucial [5]. That would allow\
    \ proactive data analysis to predict critical situations before\nthey occur.\n\
    On top of such infrastructures, it is feasible to employ artiﬁcial intelligence\
    \ technolo-\ngies [2,5,6]. Among many strategies, three stand out: (i) data prediction\
    \ [7]; (ii) pattern\nrecognition [8]; and (iii) data correlation [9]. Data prediction\
    \ allows to forecast measure-\nments and situations, anticipating problems and\
    \ the required countermeasures. In turn,\npattern recognition offers strategies\
    \ to identify situations that have already occurred in the\npast. Lastly, data\
    \ correlation combines information from multiple parameters to identify\nthe source\
    \ of speciﬁc situations. For instance, data correlation strategies are currently\n\
    J. Sens. Actuator Netw. 2022, 11, 33. https://doi.org/10.3390/jsan11030033\nhttps://www.mdpi.com/journal/jsan\n\
    J. Sens. Actuator Netw. 2022, 11, 33\n2 of 15\nemployed for ICU patients with\
    \ Coronavirus Disease 2019 (COVID-19) to identify the\nrelation between many indicators\
    \ [10].\nFigure 1 presents an overview of future medical processes. Internet of\
    \ Things (IoT)\nis spreading among several areas, paving the way to a new industrial\
    \ revolution [6,11].\nIn hospitals, this is not different [4]. This context encompasses\
    \ the numerous sensor\ndevices scattered all over the hospital setting generating\
    \ information from various assets,\nincluding the patient and the medical team.\
    \ Currently, artiﬁcial intelligence applications\nemerge to handle an increasing\
    \ data volume. It supports the medical team by providing\ninformation to help\
    \ them perceive dangerous situations and patient condition deterioration.\nMedical\
    \ processes are highly critical, and errors or delays in handling critical situations\n\
    may harm the patient and even lead to death. With a wide variety of data provided\
    \ by IoT\ntechnology, centralized systems provide a global analysis of data from\
    \ patients improving\nhealthcare services.\nSENSING\nCOLLECTION & \nTRANSMISSION\n\
    MANAGEMENT CENTER\nINFORMATION\n80\n92\nACTUATOR: REAL-TIME FEEDBAK, PREDICTION,\
    \ \nPATTERN RECOGNITION, RISK MANAGEMENT, ALARMS, ...\nNFC\nRFID\nFigure 1. Real-time\
    \ data acquisition, analysis, and feedback in healthcare. Sensors close to the\
    \ patient\nand medical staff generate numerous information collected and transmitted\
    \ for remote processing.\nSeveral applications can proﬁt from this information\
    \ for further analysis and real-time feedback\nto actuators.\nAlthough positive,\
    \ centralized systems suffer from scalability problems which may\nincrease the\
    \ delay in data transmission. Scalability is the ability of a system to maintain\
    \ its\nperformance and quality of service (QoS) regardless of the input workload\
    \ and internal\nprocessing [12]. Centralized systems concentrate data processing\
    \ at a single point. As the\nnumber of sensors and applications connected increases,\
    \ the system can lose performance\ndue to network overload. That would cause instabilities\
    \ in the data ﬂow to different\nsystems, which can be critical depending on the\
    \ application. Therefore, a sensor data\nmiddleware for medical settings must\
    \ provide QoS to the applications. Currently, some\nstudies are focusing on improving\
    \ network performance using routing protocols [13,14].\nHowever, they still suffer\
    \ from problems such as network node overload [13] or lack of\nfocus on acute\
    \ care environments such as the operating room [14].\nFocusing on providing QoS\
    \ for such infrastructures, this article presents the design\nand implementation\
    \ of a sensor middleware for medical settings called Healthstack. Health-\nStack\
    \ introduces techniques to automatically adapt itself to workload changes to deliver\
    \ the\nsame QoS to applications. HealthStack works as a wrapper for applications\
    \ to access data\nfrom many devices installed in many medical settings between\
    \ the sensors and applications.\nThe main contributions of the current article\
    \ are listed as follows:\n•\nIt presents a middleware model for healthcare 4.0\
    \ with automatic QoS support for\nreal-time data transmission;\n•\nIt deﬁnes a\
    \ QoS strategy based on artiﬁcial neurons to choose which QoS services to\ndeliver\
    \ for each middleware component;\nJ. Sens. Actuator Netw. 2022, 11, 33\n3 of 15\n\
    •\nIt demonstrates several lessons learned in the actual deployment of the system\
    \ in a\nreal hybrid operating room.\nThe self-adaptative strategies of the HealthStack\
    \ are agnostic to the applications’\npoint of view. HealthStack performs reconﬁgurations\
    \ to accommodate all applications\ntransparently. Its leading role is to access\
    \ data from several sensors and provide these\ndata to applications with QoS,\
    \ not requiring from them any adaptions to proﬁt from the\nQoS strategy. In addition\
    \ to the technical contributions, it is also essential to mention\ncontributions\
    \ outside the scientiﬁc scope. By employing our strategy, hospitals can offer\n\
    even more reliable and secure services that directly impact the population. Therefore,\n\
    citizens can beneﬁt from the solution when seeking healthcare services.\n2. Related\
    \ Work\nThis section presents related studies proposing solutions employing QoS\
    \ in healthcare\napplications. Table 1 summarizes the main articles published\
    \ in the last four years and\ntheir goal and QoS strategy. Among different QoS\
    \ methods, studies focus mainly on\nfour common strategies: (i) scheduling protocols\
    \ [15,16]; (ii) data prioritization [15–22];\n(iii) routing protocols [22–27];\
    \ (iv) resource management [16,21]. Studies have examined\nthe use of data prioritization\
    \ to reduce transmission time. This strategy encompasses\ndistinct classes for\
    \ each data type, prioritizing high-priority packets. Some approaches use\nadmission\
    \ control algorithms to ensure a network’s quality. Thus, an algorithm checks\n\
    the current network state and estimates the future state to decide whether to\
    \ allow new\nconnections. Cloud environments commonly use resource elasticity,\
    \ and some researchers\nuse it as a way to provide QoS. During overloaded conditions,\
    \ such strategies use VM\nallocation and migration strategies to enhance the performance\
    \ of some modules. Finally,\nsome authors also employ routing and scheduling protocols\
    \ to improve the performance\nof networks and reduce transmission delays. The\
    \ routing algorithms determine the most\noptimal route for transmitting data based\
    \ on network conditions. On the other hand,\nscheduling protocols control the\
    \ time slot assignment for each data transmission and their\norder based on the\
    \ amount and type of data.\nTable 1. Summary of the research and QoS strategies\
    \ in healthcare solutions.\nPaper Year\nReal\nTime\nQoS Strategy\nDescription\n\
    [28]\n2019\n✓\nVideo smoothing\nQoS control algorithm to 5G telemedicine.\n[18]\n\
    2019\nData prioritization\nSlicing framework for eHealth media ap-\nplications\
    \ over 5G networks.\n[19]\n2019\nService differentiation, data categorization\n\
    and prioritization\nMedical grade QoS solution.\n[15]\n2019\n✓\nService differentiation,\
    \ routing protocol\nQoS-aware multipath algorithm for medi-\ncal data transmission\
    \ in a SDN.\n[29]\n2019\nClock synchronization\nProtocol for QoS and energy efﬁciency\
    \ in\nWBAN.\n[20]\n2019\n✓\nTrafﬁc differentiation\nIoT architecture for data\
    \ access.\n[21]\n2020\n✓\nData prioritization and data rate adapta-\ntion\nIoT\
    \ architecture for data access.\n[25]\n2020\n✓\nChannel selection\nDynamic channel\
    \ and superframe selec-\ntion scheme in IEEE 802.15.6 WBANs to\navoid interference.\n\
    [26]\n2020\n✓\nRouting protocol\nStrategy for selecting an optimal end-to-\nend\
    \ route in WBAN.\n[27]\n2020\nRouting protocol\nRouting protocol for WBAN medical\
    \ data.\n[22]\n2020\nRouting protocol and data prioritization\nWBAN architecture.\n\
    [23]\n2021\nRouting protocol\nQoS optimization in IoMT remote health\nmonitoring.\n\
    J. Sens. Actuator Netw. 2022, 11, 33\n4 of 15\nTable 1. Cont.\nPaper Year\nReal\n\
    Time\nQoS Strategy\nDescription\n[24]\n2021\nRouting protocol\nRouting algorithm\
    \ for WBAN health mon-\nitoring.\n[16]\n2021\nData prioritization, energy control,\
    \ packet\nscheduling protocol and data rate adapta-\ntion\nPatient monitoring\
    \ using WBAN.\n[17]\n2021\n✓\nData prioritization\nOpenFlow trafﬁc shaping in\
    \ the Fog using\nSDN for e-health services.\n[30]\n2022\n✓\nDynamic resource allocation\n\
    Private cloud with dynamic resource man-\nagement for health services.\n[31]\n\
    2022\n✓\nCommunication protocol\nIoT architecture employing edge and fog\ncomputing\
    \ for health services.\nSeveral studies present QoS strategies for Wireless Body\
    \ Area Network (WBAN)\ninfrastructures [16,22,24–27,29]. A WBAN comprises a private\
    \ network of connected\nsensors transmitting data to a master node that relays\
    \ the information to upper network\nlayers. Energy consumption and interference\
    \ are the main problems studies seek to resolve\nby employing routing protocols\
    \ and channel selection strategies. Their primary focus is\nto improve network\
    \ transmission from the WBAN to the upper network layers. Such\nstrategies can\
    \ solve the internal problems of WBANs; however, they do not focus on\nmultiple\
    \ WBANs simultaneously. In other words, initiatives focusing on WBAN propose\n\
    QoS strategies only within the WBAN boundaries and not the higher level which\
    \ consumes\ndata. Recent advances employ fog computing as a new solution to bridge\
    \ the gap between\nthe sensors and the cloud to decrease response time. Some strategies\
    \ employ fog to provide\ndata processing closer to the sensors and, therefore,\
    \ remove network hops needed to reach\nthe cloud [30,31]. Despite its advantages,\
    \ fog solutions still require data extraction and\ntransmission from the sensors\
    \ and the fog nodes. Depending on the infrastructure, the\nvolume of data and\
    \ the quality of the transmission channel can still impose restrictions and\n\
    impact the QoS.\nWithin a hospital, there are many critical locations, such as\
    \ operating rooms, in which\na system can provide helpful data from patients and\
    \ physicians. Most strategies focus on\nremote health sites, like nursing homes,\
    \ and only WBANs for patient health monitoring.\nIn addition, a healthcare system\
    \ has two main actors: the sensors at the hardware level,\ngenerating information,\
    \ and the users at the application level, which consume and process\ndata from\
    \ the system. Strategies focus mainly on the ﬁrst level to provide QoS in data\n\
    transmission from the sensor to the network. Furthermore, although some initiatives\n\
    present concerns regarding real time, they do not focus intensely on this issue.\
    \ In general,\nsolutions that focus on real time only consider improving time\
    \ delay from priority packets\nor providing an architecture that supports real-time\
    \ data transmissions.\n3. Materials and Methods\nOur strategy focuses on integrating\
    \ data from many devices in the hospital settings\nand providing it in a standard\
    \ format for applications. Therefore, applications do not\nneed to implement different\
    \ APIs (Application Programming Interfaces) to acquire data\nfrom different devices.\
    \ They can easily connect to the middleware and request data from\ndifferent sensors\
    \ in real time.\nThe strategy consists of placing software units, the Data Gateway\
    \ instances, close\nto the devices to extract data and provide QoS services individually.\
    \ The Middleware\nCore is the main component that collects the data from each\
    \ Gateway and provides it to\nthe applications. Therefore, it can collect data\
    \ from many different locations as long as\nthey have Gateway instances deployed.\
    \ The Core provides data to applications through a\npublish–subscribe interface\
    \ [32]. Applications connect to the Core, requesting data from a\nspeciﬁc sensor.\
    \ The Core supports additional parameters in the requests besides the target\n\
    J. Sens. Actuator Netw. 2022, 11, 33\n5 of 15\nsensor. The applications can provide\
    \ a desirable limit for jitter and delay. If the application\ndoes not provide\
    \ these limits, the Core assumes default values according to the type of\nthe\
    \ target sensor. For instance, for image sensors, the default maximum accepted\
    \ delay is\n50 milliseconds (ms), and the jitter is 25 ms.\nIn addition to the\
    \ architecture, the middleware provides a QoS strategy, called QoS\nService Elasticity,\
    \ to improve performance for applications. The QoS Service Elasticity\nconsists\
    \ of individual elastic service stacks for each Gateway instance. The Core manages\n\
    them according to the applications’ requirements and the current performance of\
    \ the\nmiddleware. The Core periodically monitors whether the applications’ limits\
    \ are respected\nor not. Once a limit violation occurs, the Core stacks different\
    \ QoS services for the sensor\ndevices to address the issue. Therefore, the service\
    \ stacks are elastic, and the Core changes\nthem when needed. The middleware comprises\
    \ four different QoS services: (i) Data\nPrioritization; (ii) Data Compression;\
    \ (iii) Adapting Frame Rate; and (iv) Resource Elasticity.\nFigure 2 illustrates\
    \ the middleware model showing the Core in more detail. The Middleware\nCore is\
    \ responsible for four main tasks: (i) Data Provisioning; (ii) Performance Tracking;\n\
    (iii) QoS Service Elasticity; and (iv) Data Persistence.\nMiddleware Core\nData\
    \ \nProvisioning\nPerformance \nTracking\nQoS Service\nElasticity\nApplications\n\
    Data Acquisition\nPerformance \nMonitoring\nQoS Monitoring\nData Dispatcher\n\
    Services \nEstimation\nElastic Service \nStacking\nData\nControl\nData \nGateway\
    \ j\nService\nService\nService\nSensor j\nData \nGateway i\nService\nService\n\
    Service\nSensor i\n...\nData \nGateway l\nService\nService\nService\nSensor l\n\
    Data \nGateway k\nService\nService\nService\nSensor k\n...\n...\nData\nPersistance\n\
    Database\nArea n\nArea 1\nFigure 2. Middleware model and its components. The model\
    \ comprises n hospital areas equipped\nwith several sensors. A Data Gateway component\
    \ extracts its data and sends them to the Core for\neach sensor. The Gateway instances\
    \ have individual dynamic service stacks that contain QoS services\nemployed to\
    \ the sensor data. In turn, the Core is the main component responsible for providing\
    \ data\nto applications, monitoring applications and Gateway instances’ performance,\
    \ and orchestrating the\nQoS service stacks.\nFigure 3 depicts the ﬂowchart representing\
    \ the QoS Service Elasticity decision loop.\nAfter starting, the Core periodically\
    \ collects several metrics (1) from each Gateway: CPU\nconsumption (C), memory\
    \ consumption (M), network consumption (N), delay (D), jitter (J),\nand the number\
    \ of applications (A) requesting data. The Core and Gateways implement a\ncontrol\
    \ message protocol which the Core uses to request the metrics from each Gateway.\n\
    Gateways collect CPU, memory and network consumption metrics from the node running\n\
    them. On the other hand, as applications connect to the Core, it registers the\
    \ number\nof applications consuming data each Gateway produces. In addition, each\
    \ data packet\nJ. Sens. Actuator Netw. 2022, 11, 33\n6 of 15\nthe Gateways send\
    \ to the Core contains a sensor timestamp. Therefore, on receiving a\nnew packet,\
    \ the Core computes the current delay of that Gateway using the current times\n\
    and the packet timestamp. Finally, the Core also computes the jitter for each\
    \ Gateway\nbased on the interval between packet arrivals. With all metrics collected,\
    \ the Core packs\nthem in a metric vector M = {C, M, N, D, J, A} for each Gateway,\
    \ which it will use in the\ndecision-making process. After computing M for each\
    \ Gateway, the Core checks for QoS\nviolations (2) to verify whether it needs\
    \ to deliver services or not. When an application\nconnects to the Core, it provides\
    \ a QoS limit value for delay or jitter. When checking for\nQoS violations, the\
    \ Core compares the current delay/jitter (M[3] and M[4] collected in\nphase (1)\
    \ the system is performing for each application with their respective limits.\
    \ If this\nvalue is higher than the application limit, then the QoS strategy must\
    \ take place to deliver\nQoS services. However, more than one application can\
    \ have its current QoS violated. As a\nQoS service can only be exclusively delivered\
    \ (e.g., Data Prioritization), the Core should\nselect one application from all\
    \ applications that have their QoS violated. In such a case,\nit analyzes the\
    \ metrics (3) for each application by combining them in a weighted sum to\ncompute\
    \ their Potential of Adaptation (PA).\n1. Collect metric\nmeasurements\n3. Analyze\n\
    metrics\n4. Perform the\nQoS Service \nElasticity\n2. QoS\nviolations?\n6. Wait\
    \ until next\nmonitoring cicle\nStart\nYES\nNO\nGateway 1\nResource Elasticity\n\
    Adapting Frame Rate\nData Compression\nData Prioritization\n...\nQoS Service Stacks\n\
    Gateway j\nResource Elasticity\nAdapting Frame Rate\nData Compression\nData Prioritization\n\
    5. Should\nstop?\nStop\nYES\nNO\nFigure 3. QoS Service Elasticity decision loop\
    \ depicting the steps the Core performs to deliver QoS\nservices.\nEquation (1)\
    \ represents the PA computation where it receives two vectors of size m:\na parameterized\
    \ weight vector W and the computed metric vector M for that particular\nGateway.\
    \ In the current version, m = 5 since the Core collects ﬁve metrics; however,\n\
    future versions can consider more or fewer metrics. When conﬁguring the middleware,\n\
    the administrator can provide ﬁve weight parameters in the interval [0, 1] to\
    \ be applied\nby the PA computation. Each weight is applied to its corresponding\
    \ metric as follows:\nW = {cpuw, memoryw, networkw, delayw, jitterw, applicationsw}\
    \ This particular metric is\nessential to deﬁne the criticality of each Gateway.\
    \ Some QoS services, such as the Data\nPrioritization, can be active for only\
    \ a single Gateway at the same time. Therefore, when two\nGateways need QoS services,\
    \ PA deﬁnes which one receives this type of service. Before the\nanalysis, the\
    \ Core ﬁrst normalizes the values from M that do not represent a consumption\n\
    level by dividing them by the highest metric measurement from all Gateways. For\
    \ instance,\nwith two Gateways with a delay of 50 ms and 100 ms, the values are\
    \ converted to 0.5 and 1,\nrespectively. Following, the Core stacks a single QoS\
    \ service for each application (4), using\nthe PA to decide which application\
    \ will receive an exclusive QoS service if it is the case. The\nCore sends a control\
    \ message to the particular Gateways activating or deactivating QoS\nservices\
    \ on them. Finally, Figure 3 also covers the Core workﬂow if any violations occur\
    \ in\nphase 2. In that case, the Core checks if it is still active (5) to decide\
    \ if it keeps running or\nﬁnishes. If true, it then waits for a time interval\
    \ (6) until it starts the workﬂow again.\nJ. Sens. Actuator Netw. 2022, 11, 33\n\
    7 of 15\nPA(W, M) =\nm\n∑\ni=0\nW[i] × M[i]\n(1)\nTo illustrate an actual deployment\
    \ of the model, Figure 4 depicts an actual operating\nroom with the middleware\
    \ installed. The ﬁgure shows three Data Gateway instances, each\non a dedicated\
    \ computer. In each computer, a Microsoft Kinect v2 [33] camera device\nproduces\
    \ image frames. Additionally, several location tags are attached to people in\
    \ the\noperating room. These tags provide the location of each person in a 3D\
    \ coordinate space.\nTherefore, it is possible to track the location of each individual\
    \ during the procedures.\nFinally, the Core runs on a dedicated server connected\
    \ to all three computers.\nApplication\nOperating Room\nControl Room\ntags\ncameras\n\
    Data \nGateway 2\nData \nGateway 3\nCore\nApplication\nApplication\nApplication\n\
    Application\nGigabit\nEthernet\nanchors\nData \nGateway 1\nMegabit\nEthernet\n\
    Figure 4. Deployment of the architecture in a real operating room. Three camera\
    \ devices and several\ntags track the surgery workﬂow.\nWe deployed a prototype\
    \ of HealthStack in a clinical partner of the project, the Cardi-\nology Institute—University\
    \ Foundation of Cardiology (Porto Alegre, Rio Grande do Sul,\nBrazil). They provided\
    \ us with access to an actual hybrid operating room, which primarily\naccommodates\
    \ cardiac procedures. Figure 5 demonstrates the hardware employed and\nhow we\
    \ deployed them in the surgical suite. We installed three Microsoft Kinect v2\
    \ devices\non three different walls to provide different points of view. Kinects\
    \ are camera devices\nthat provide different types of image data. However, due\
    \ to privacy restrictions related\nto surgical procedures, we only collect depth\
    \ images from them. Depth images are data\nmatrices in which each pixel represents\
    \ the distance between that point and the camera\nsensor [33]. Therefore, it is\
    \ impossible to see a color image and identify people as traditional\ncamera images.\
    \ Instead, this type of data allows 3D data visualization of the procedures. It\n\
    permits artiﬁcial intelligence techniques to reconstruct the scenes and recognize\
    \ human\nbodies, equipment and actions.\nBesides the image devices, we also installed\
    \ an Ultra-wideband (UWB) Real-Time\nLocation System (RTLS) solution from Sewio\
    \ [34]. We installed ﬁve UWB anchors in the\nceiling that read several UWB tags.\
    \ Each person involved in the procedures carries one\ntag with previous identiﬁcation.\
    \ A server software combines the readings of all anchors to\nlocate the tags in\
    \ a 3D coordinate space. It provides an API that delivers the 3D positions\nin\
    \ real time. Therefore, it is possible to track each person’s position and the\
    \ movement\npatterns of the medical staff and the patient. We installed individual\
    \ mini-computers to\nacquire data from the camera devices that run a Data Gateway\
    \ instance. The Gateway\ninstances extract information from the device attached\
    \ to its computer. In the RTLS server\nJ. Sens. Actuator Netw. 2022, 11, 33\n\
    8 of 15\ncase, a virtual machine runs at the computer processing the anchors’\
    \ information. A Data\nGateway connects the virtual machine through its API and\
    \ extracts tag positions in the\nsame computer.\nSewio UWB Anchor\nCamera: \n\
    Microsoft Kinect v2\nCamera: \nMicrosoft Kinect v2\nDell Optiplex\n3050 Mini\n\
    Virtual Machine\nData \nGateway 1\nData \nGateway 2\n(a) Equipment installed in\
    \ the walls\nSewio UWB Tags\n80 mm\n45 mm\n(b) UWB tags people carry on\nFigure\
    \ 5. Deployment in a real hybrid operating room. The Sewio RTLS Studio runs in\
    \ a virtual\nmachine in a physical machine connected to the same network as the\
    \ anchors. The ﬁgure depicts only\ntwo of three Data Gateways. The Core runs in\
    \ a separate room and does not appear in the image.\nEach node connects to a Gigabit\
    \ Ethernet switch; therefore, communication between\nthe Gateways and the Core\
    \ occurs in a private network. Additionally, Sewio requires\nthe UWB anchors to\
    \ communicate with each other through a wired network. Therefore,\nthe RTLS server\
    \ node also connects to the anchors’ network, which means that this node\nconnects\
    \ both the anchor network and the main network to reach the Core. Finally, the\n\
    Core server node has two network cards: (i) one to connect the private network\
    \ and reach\nthe Gateway nodes; and (ii) a second to connect a Gigabit Ethernet\
    \ switch to serve the\nclient applications.\n4. Results\nAt the time of our research,\
    \ we did not ﬁnd any workload benchmark for real-time\nmedical applications in\
    \ the literature. Therefore, we modeled a scenario composed of\n48 applications\
    \ that connect the HeathStack sequentially, one at every six seconds. Each\nnew\
    \ application connection requests a different data type than the previous one.\
    \ Speciﬁcally,\nJ. Sens. Actuator Netw. 2022, 11, 33\n9 of 15\nApplication 1 requests\
    \ depth data, Application 2 position data, Application 3 depth data, etc.\nAdditionally,\
    \ the applications deﬁne their target QoS threshold in a round-robin fashion:\n\
    delay 50 ms, delay 50 ms, jitter 25 ms and jitter 25 ms. In other words, Applications\
    \ 1 and 2\ndeﬁne delay to 50ms, Applications 3 and 4 determine jitter to 25 ms,\
    \ and the sequence\nrepeats for the subsequent applications. We extract these\
    \ values from some studies on\ntelemedicine [35–38].\nRegarding the infrastructure,\
    \ we used two Data Gateway instances. One of them\nextracts depth data from one\
    \ Microsoft Kinect v2 device. The other extracts tag location\ndata from the Sewio\
    \ RTLS solution. The Data Gateway instance 1 runs in a dedicated node\nthat runs\
    \ the Sewio RTLS Server and API. The Data Gateway instance 2 runs in a different\n\
    node with the Kinect device connected through a USB 3.0 port. Finally, a third\
    \ node runs the\nMiddleware Core and receives connections from remote applications.\
    \ Figure 6 depicts an\nend-to-end overview of the network employed in the experiments.\
    \ Two Gateways extract\ninformation directly from sensors using different connections.\
    \ Gateway 1 connects the RTLS\nanchors through a private Megabit Ethernet IPv4\
    \ network, while Gateway 2 connects the\nMicrosoft Kinect using a USB cable. Both\
    \ Gateways connect to a private Gigabit Ethernet\nIPv4 network, to which the Core\
    \ also connects. Finally, the Core connects to an external\nGigabit Ethernet IPv4\
    \ network that applications use to connect the middleware.\nSwitch 10/100 mbps\n\
    Switch 1000 mbps\nGateway 1\nNode\nETH 0\nETH 1\nGateway 2 \nNode\nUSB 3.0\nETH\
    \ 0\nSwitch 1000 mbps\nCore Node\nETH 0\nETH 1\nApplication\nServer\nTags\nMicrosoft\
    \ \nKinect\nUWB\nUSB\nUTP\nUTP\nUTP\nUTP\nUTP\nUTP\nUTP\nanchor\nFigure 6. End-to-end\
    \ network structure employed in the experiments.\nThe evaluation consisted of\
    \ observing the execution of the middleware and the ap-\nplications in ten minutes.\
    \ Time zero represents the instant the HealthStack starts running.\nWe started\
    \ the middleware and the script to run the applications simultaneously. This\n\
    particular script starts each application respecting the interval described above\
    \ (one at\nevery six seconds). In the beginning, the script sleeps for six seconds\
    \ and then starts the\nﬁrst application at the time 00:06 (mm:ss). Consequently,\
    \ the last application connects at\nthe time 4:42 (m:ss). We kept the applications\
    \ and the HealthStack running until minute\nten to visualize more data when all\
    \ applications are connected. We executed this appli-\ncation scenario under two\
    \ different conﬁgurations to provide a vision of the beneﬁts of\nemploying the\
    \ QoS Service Elasticity. We executed the HealthStack and applications in the\n\
    ﬁrst scenario without enabling the QoS Service Elasticity strategy. Following,\
    \ we executed\nit again but now, enabling the strategy. Additionally, in the experiments,\
    \ we implemented\nthe Data Prioritization and the Frame Rate Adaptation services.\n\
    Figure 7 illustrates the variation in average delay for each application when\
    \ enabling\nthe QoS Service Elasticity. Negative values represent a lower average\
    \ delay, which is an\nimprovement. As the application requested different data\
    \ types, we segmented the results\naccording to the data type to see if they were\
    \ relevant to the results.\nFigure 7a demonstrates that most of the applications\
    \ that consume depth data ex-\nperienced improvements, but not all of them. Comparing\
    \ diagrams (a) and (b), the data\nsize transmitted to applications from the ﬁrst\
    \ set is considerably higher than the second\nset’s data. Depth data requires\
    \ more processing and transmission time than position\ndata. Therefore, the changes\
    \ represent a smaller percentile than the improvements in the\nsecond set.\nFigure\
    \ 8 depicts the variation in average jitter for each application when enabling\
    \ the\nQoS Service Elasticity. Here, the variations are more expressive than the\
    \ ones for the delay.\nHowever, different data types resulted in contrasting results.\
    \ Figure 8b shows that all\nJ. Sens. Actuator Netw. 2022, 11, 33\n10 of 15\napplications\
    \ that consume position data had considerable high improvements. Considering\n\
    the 24 applications of this diagram, the mean of their average jitter was 2.1\
    \ when enabling\nQoS Service Elasticity versus 21.7 ms when disabling it. It represents\
    \ a substantial decrease\nof 90.3%. The main reason is that the RTLS system does\
    \ not provide tag position samples\nat a stable rate. It has a direct impact on\
    \ jitter. The Frame Rate Adaptation service plays\nan essential role in this scenario\
    \ because it stabilizes the frame rate to a lower value.\nIt stabilizes jitter\
    \ since the Data Gateway acquires samples at a lower rate. Comparing both\nFigures\
    \ 7 and 8, it is possible to note that the data type makes a difference in the\
    \ results.\n3.3%\n1.0%\n-1.4%\n-0.5%\n0.2%\n-0.1%\n0.1%\n-0.5%\n-0.3%\n1.4%\n\
    1.2%\n-0.4%\n-0.3%\n0.4%\n-0.4%\n-1.1%\n-0.3%\n-0.6%\n-0.2%\n-0.4%\n-1.0%\n-0.9%\n\
    -1.7%\n-0.8%\n-10.0%\n-8.0%\n-6.0%\n-4.0%\n-2.0%\n0.0%\n2.0%\n4.0%\n6.0%\n8.0%\n\
    10.0%\n1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n21\n23\n25\n27\n29\n31\n33\n35\n37\n\
    39\n41\n43\n45\n47\napplication id\n(a)\n3.9%\n-3.1%\n-8.0%\n-45.0%\n-2.2%\n-10.1%\n\
    -40.5%\n-39.2%\n-25.6%\n-21.7%\n-10.7%\n-19.1%\n-28.1%\n-42.4%\n-41.6%\n-38.7%\n\
    -36.2%\n-24.6%\n-21.4%\n-40.0%\n-34.0%\n-48.8%\n-45.9%\n-40.2%\n-100.0%\n-80.0%\n\
    -60.0%\n-40.0%\n-20.0%\n0.0%\n20.0%\n40.0%\n60.0%\n80.0%\n100.0%\n2\n4\n6\n8\n\
    10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n\
    application id\n(b)\nFigure 7. Variation in the average delay of each application.\
    \ The ﬁgures represent the results for\nthe applications that consume depth data\
    \ (a) and position data (b). The black arrow represents the\ndirection for better\
    \ results.\n-17%\n-19%\n21%\n26%\n44%\n19%\n30%\n21%\n-15%\n58%\n73%\n62%\n53%\n\
    42%\n101%\n51%\n19%\n51%\n59%\n-10%\n39%\n-20%\n69%\n18%\n-150%\n-120%\n-90%\n\
    -60%\n-30%\n0%\n30%\n60%\n90%\n120%\n150%\n1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n\
    21\n23\n25\n27\n29\n31\n33\n35\n37\n39\n41\n43\n45\n47\napplication id\n(a)\n\
    -86%\n-75%\n-89%\n-78%\n-91%\n-72%\n-95%\n-97%\n-97%\n-89%\n-97%\n-97%\n-96%\n\
    -96%\n-83%\n-93%\n-88%\n-96%\n-96%\n-97%\n-81%\n-97%\n-86%\n-97%\n-150%\n-120%\n\
    -90%\n-60%\n-30%\n0%\n30%\n60%\n90%\n120%\n150%\n2\n4\n6\n8\n10\n12\n14\n16\n\
    18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\napplication id\n\
    (b)\nFigure 8. Variation in the average jitter of each application. The ﬁgures\
    \ represent the results for\nthe applications that consume depth data (a) and\
    \ position data (b). The black arrow represents the\ndirection for better results.\n\
    Figure 9 compares the average resource consumption of each node when enabling\n\
    and disabling the QoS Service Elasticity. For most cases, the QoS Service Elasticity\
    \ has a\npositive effect on decreasing the required resources. The only exceptions\
    \ are the memory\nconsumption of Gateway 1, and the CPU consumption of Gateway\
    \ 2. All other cases yield\ngood results. Enabling the QoS Service Elasticity\
    \ strategy dramatically reduces network\nconsumption. The reason for that is the\
    \ Frame Rate Adaptation QoS service since both\nGateway 1 and Gateway 2 received\
    \ it during execution. This QoS service reduces data\ntransmission from both nodes\
    \ to the Core, resulting in a decrease for all nodes.\nJ. Sens. Actuator Netw.\
    \ 2022, 11, 33\n11 of 15\n9.70%\n2.03%\n9.64%\n6.92%\n1.05%\n10.21%\nCore\nGateway\
    \ 1 \n(position)\nGateway 2 \n(depth)\nDisabled\nEnabled\n(a) CPU\n4.35%\n19.93%\n\
    30.64%\n4.35%\n22.58%\n29.09%\nCore\nGateway 1 \n(position)\nGateway 2 \n(depth)\n\
    Disabled\nEnabled\n(b) Memory\n3.66%\n0.17%\n3.53%\n1.23%\n0.15%\n1.18%\nCore\n\
    Gateway 1 \n(position)\nGateway 2 \n(depth)\nDisabled\nEnabled\n(c) Network\n\
    Figure 9. Comparison of resource consumption of each node with the QoS Service\
    \ Elasticity enabled\nand disabled.\n5. Discussion\nHere, we discuss the aspects\
    \ of our experience in performing the study in a real\nhospital. We bring to discuss\
    \ some lessons learned in many aspects, from building the\npartnership to performing\
    \ experiments.\n5.1. Lesson 1: Build a Strong Partnership\nBringing scientiﬁc\
    \ research to real deployments in the healthcare scenario is, at the\nsame time,\
    \ challenging and essential. As a ﬁrst step, establishing a partnership requires\n\
    many meetings, including hospital and university staff, to clarify the project’s\
    \ aspects. Once\nthe project is approved, technical details should be well discussed\
    \ between the hospital’s\ntechnical team and the scientiﬁc team. That is important\
    \ since different technology and\nengineering sectors manage the whole hospital\
    \ infrastructure. Thanks to that, hardware\nand software deployment details within\
    \ the hospital settings must be discussed with both\nsectors. That spotlights\
    \ the necessity of negotiating the best solutions to install equipment\nwithout\
    \ causing problems to the current systems running in the operating room.\nWith\
    \ all details solved, the installation process also requires people from different\n\
    hospital sectors and even the scientiﬁc team to coordinate. The process demonstrates\
    \ that\nforming a partnership and making it happen requires several persons’ commitment\
    \ and\nproper communication. Although complicated, the process results in a partnership\
    \ with\noutstanding outcomes for both sides. The ideas developed for the hospital\
    \ can improve\ntheir services for patients, which also beneﬁts from it. It is\
    \ an excellent opportunity for\nresearchers to grow and evolve new ideas with\
    \ constant feedback from real settings.\n5.2. Lesson 2: Consider the Complexity\
    \ of the Environment in Your System Design\nMedical settings are highly critical\
    \ environments that encompass complex processes.\nSuch complexity includes a variety\
    \ of equipment and medical roles performed by several\npersons simultaneously.\
    \ On top of that, the patients are the central focus, and their well-\nbeing is\
    \ the ultimate goal of the process. As a result of all this complexity, implementing\n\
    new techniques requires awareness of multiple aspects. On the one hand, depending\
    \ on the\ntechnology, it is crucial not to have an adverse effects on the current\
    \ technologies already\nused in the hospitals. On the other hand, as medical processes\
    \ involve legal issues, privacy\nconcerns should also be considered. Thus, there\
    \ is a limitation on what we can do or not\ndo in the hospital facilities.\nConsidering\
    \ all of that, we deployed our solution as carefully as possible. Hence, we\n\
    opted to install our network infrastructure. We did that for two main reasons.\
    \ First, as\nwe consider that some sensors generate a considerable amount of data,\
    \ this could impact\nthe network and other services already running in the operating\
    \ room. Second, a private\nJ. Sens. Actuator Netw. 2022, 11, 33\n12 of 15\nnetwork\
    \ only for the middleware data exchange prevents raw data transmission through\n\
    the hospital network due to several privacy concerns. Moreover, this also prevents\
    \ network\nsniffers from capturing the middleware packets and corrupting them.\
    \ As a bonus, we have\nmore control over the experimental environment, enabling\
    \ customization and improving\nour tests’ reliability.\n5.3. Lesson 3: Tailor\
    \ Your Technology to the Target Environment\nHere, we deﬁne what is necessary\
    \ to bring such technology to modern hospitals. We\ncan divide it into two main\
    \ steps: deploy the architecture and design the applications. As\nmentioned before,\
    \ the ﬁrst step requires installing some equipment dedicated to running\nthe middleware\
    \ architecture. The hardware capacity will depend on the type of sensors. For\n\
    instance, more robust sensors, such as Microsoft Kinect v2, impose speciﬁc requirements\n\
    on the Data Gateway nodes. In particular, USB 3.0 interfaces and the Microsoft\
    \ Kinect API\nwill be required so that the Gateway can extract image frames from\
    \ the Kinect. In this case,\ngateways must be compatible with the demands of computer\
    \ vision techniques.\nOn the other hand, as Sewio RTLS, some lightweight sensors\
    \ only require the node to\nbe capable of running its virtual machine. Some sensors\
    \ even only require the compatibility\nof the node with some speciﬁc language\
    \ to run their APIs. Besides the nodes, the network\nmust be private. The technology\
    \ and performance should suit the amount of data to be\ntransmitted. All nodes\
    \ running the Data Gateway instances and the Core server should\nconnect to this\
    \ private network. The server requires at least two network interfaces: one for\n\
    the private network and another to connect to the hospital network. Therefore,\
    \ hospital\napplications can process data streams from the server in any hospital\
    \ area, including\nremote locations.\nConcerning the application’s design, nowadays,\
    \ there are already many well-known\npublish-subscribe platforms that provide\
    \ easy-to-use APIs for real-time data. Our mid-\ndleware is designed to be compatible\
    \ with such technologies. Thus, applications are only\nrequired to use our middleware\
    \ wrapper, which adds QoS arguments to the subscription\ncalls. The applications\
    \ do not need to implement any additional code but only add their\nparameters.\
    \ As the middleware has default delay and jitter limits, the application will\
    \ still\nbe compatible if the user does not inform them.\n5.4. Lesson 4: Critically\
    \ Analyze the Results to Find Solutions\nOne of the main problems when running\
    \ a distributed system is a bottleneck. This\nproblem occurs when a system provides\
    \ services for many clients through the same node\nor module. As the number of\
    \ clients increases, the node workload also increases. However,\ndue to hardware\
    \ limitations, this node can experience a performance loss due to overload\nperiods.\
    \ The node cannot handle the amount of work, which affects its performance directly.\n\
    We removed this problem from the sensors by dividing the amount of work among\
    \ several\nData Gateway instances. Each Gateway serves only one client connection\
    \ from the Core.\nAdditionally, the QoS Service Elasticity strategy brings beneﬁts\
    \ directly to the sensors,\nimproving data collection performance.\nLooking at\
    \ the evaluation we performed, we still suffered from a bottleneck at the\nCore\
    \ level. As we experimented with the middleware with only one core instance, we\
    \ could\nvisualize the delay increase according to client applications’ growth.\
    \ On the bright side, the\nservices stacked at the sensors level helped to improve\
    \ the results, even when the ascending\ndelay occurred. Additionally, our middleware\
    \ model also comprises resource elasticity,\nalthough we did not include it in\
    \ the experiments. Including an additional QoS service\ncan resolve directly the\
    \ increasing effect: admission control. This strategy is common in\nnetwork QoS\
    \ solutions. Its main beneﬁt is to prevent too many connections in the system.\n\
    Instead of accepting all connections, client applications can only connect while\
    \ the system\nsupports them. Therefore, the system can deliver a stable performance\
    \ for applications that\nare already connected.\nJ. Sens. Actuator Netw. 2022,\
    \ 11, 33\n13 of 15\nAs a ﬁnal point, the analysis of results must consider the\
    \ medical point of view.\nPresenting results to the medical team is an important\
    \ step. They can provide a different\nvision of the information the research team\
    \ can extract from the results. Workshops and\nmeetings with the medical partner\
    \ are part of this process. In such moments, discussion\nraise possible customization\
    \ to guide the next steps. It highlights the main aspects that the\nresearch team\
    \ should address to achieve different outcomes.\n6. Conclusions\nThe main contribution\
    \ of this article relies on the QoS Service Elasticity strategy that\naims to\
    \ provide QoS for applications. The development and installation demonstrated\n\
    to be complex but possible to achieve. In addition to technical beneﬁts, it also\
    \ provides\ncontributions to the hospital and patients on behalf of society. Envisioning\
    \ the hospitals of\nthe future, we provide strategies to guarantee performance\
    \ for real-time applications that\nprocess data from medical processes. More importantly,\
    \ future real-time applications will\nrequire reliability in data ﬂows from surgeries\
    \ to perform correctly. Many actuators will\nsupport surgeries according to real-time\
    \ data processing. Through our experiments, we\ndemonstrated some QoS strategies\
    \ and a proposal architecture. Future works can derive\nfrom our architecture\
    \ and include many other QoS services and data types.\nAuthor Contributions: Conceptualization,\
    \ V.F.R. and R.d.R.R.; methodology, V.F.R.; software, V.F.R.\nand R.S.A.; validation,\
    \ V.F.R.; formal analysis, V.F.R.; investigation, V.F.R.; resources, V.F.R.; data\n\
    curation, V.F.R.; writing—original draft preparation, V.F.R.; writing—review and\
    \ editing, V.F.R.,\nR.d.R.R., C.A.d.C. and R.S.A.; visualization, V.F.R.; supervision,\
    \ R.d.R.R. and C.A.d.C.; project\nadministration, C.A.d.C. All authors have read\
    \ and agreed to the published version of the manuscript.\nFunding: This research\
    \ received no external funding.\nInstitutional Review Board Statement: Not applicable.\n\
    Informed Consent Statement: Not applicable.\nData Availability Statement: Not\
    \ applicable.\nAcknowledgments: The authors would like to thank the following\
    \ Brazilian Agencies for support-\ning this work: the Research Support Foundation\
    \ of the State of Rio Grande do Sul—FAPERGS\n(19/2551-0001340-0, 21/2551-0000118-6),\
    \ the Coordination for the Improvement of Higher Education\nPersonnel—CAPES (Financial\
    \ Code 001), and the National Council for Scientiﬁc and Technological\nDevelopment—CNPq\
    \ (Grant Numbers 309537/2020-7, 305263/2021-8, and 404572/2021-9).\nConﬂicts of\
    \ Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nTortorella,\
    \ G.L.; Saurin, T.A.; Fogliatto, F.S.; Rosa, V.M.; Tonetto, L.M.; Magrabi, F.\
    \ Impacts of Healthcare 4.0 digital technologies\non the resilience of hospitals.\
    \ Technol. Forecast. Soc. Change 2021, 166, 120666. [CrossRef]\n2.\nPaul, S.;\
    \ Riffat, M.; Yasir, A.; Mahim, M.N.; Sharnali, B.Y.; Naheen, I.T.; Rahman, A.;\
    \ Kulkarni, A. Industry 4.0 Applications for\nMedical/Healthcare Services. J.\
    \ Sens. Actuator Netw. 2021, 10, 43. [CrossRef]\n3.\nGiatrakos, N.; Katzouris,\
    \ N.; Deligiannakis, A.; Artikis, A.; Garofalakis, M.; Paliouras, G.; Arndt, H.;\
    \ Grasso, R.; Klinkenberg, R.;\nPonce De Leon, M.; et al. Interactive Extreme-Scale\
    \ Analytics: Towards Battling Cancer. IEEE Technol. Soc. Mag. 2019, 38, 54–61.\n\
    [CrossRef]\n4.\nDa Costa, C.A.; Pasluosta, C.F.; Eskoﬁer, B.; da Silva, D.B.;\
    \ da Rosa Righi, R. Internet of Health Things: Toward intelligent vital\nsigns\
    \ monitoring in hospital wards. Artif. Intell. Med. 2018, 89, 61–69. [CrossRef]\n\
    5.\nPoncette, A.S.; Mosch, L.; Spies, C.; Schmieding, M.; Schiefenhövel, F.; Krampe,\
    \ H.; Balzer, F. Improvements in Patient Monitoring\nin the Intensive Care Unit:\
    \ Survey Study. J. Med. Internet Res. 2020, 22, e19091. [CrossRef]\n6.\nSong,\
    \ H.; Bai, J.; Yi, Y.; Wu, J.; Liu, L. Artiﬁcial Intelligence Enabled Internet\
    \ of Things: Network Architecture and Spectrum\nAccess. IEEE Comput. Intell. Mag.\
    \ 2020, 15, 44–51. [CrossRef]\n7.\nNyce, C.; Cpcu, A. Predictive Analytics White\
    \ Paper; American Institute for CPCU. Insurance Institute of America: Malvern,\
    \ PA, USA,\n2007; pp. 9–10.\n8.\nTveter, D. The Pattern Recognition Basis of Artiﬁcial\
    \ Intelligence, 1st ed.; IEEE Press: Piscataway, NJ, USA, 1997.\n9.\nWilliams,\
    \ A.M.; Liu, Y.; Regner, K.R.; Jotterand, F.; Liu, P.; Liang, M. Artiﬁcial intelligence,\
    \ physiological genomics, and precision\nmedicine. Physiol. Genom. 2018, 50, 237–243.\
    \ [CrossRef]\nJ. Sens. Actuator Netw. 2022, 11, 33\n14 of 15\n10.\nLiu, Y.; Gao,\
    \ W.; Guo, W.; Guo, Y.; Shi, M.; Dong, G.; Ge, Q.; Zhu, J.; Lu, J. Prominent coagulation\
    \ disorder is closely related to\ninﬂammatory response and could be as a prognostic\
    \ indicator for ICU patients with COVID-19. J. Thromb. Thrombolysis 2020,\n50,\
    \ 825–832. [CrossRef]\n11.\nMarques, G.; Pitarma, R. mHealth: Indoor Environmental\
    \ Quality Measuring System for Enhanced Health and Well-Being Based\non Internet\
    \ of Things. J. Sens. Actuator Netw. 2019, 8, 43. [CrossRef]\n12.\nBondi, A.B.\
    \ Characteristics of Scalability and Their Impact on Performance. In Proceedings\
    \ of the 2nd International Workshop\non Software and Performance, Ottawa, ON,\
    \ Canada, 17–20 September 2000; Association for Computing Machinery: New York,\n\
    NY, USA, 2000; WOSP ’00, pp. 195–203. [CrossRef]\n13.\nLeonardi, L.; Lo Bello,\
    \ L.; Patti, G.; Ragusa, O. A Network Architecture and Routing Protocol for the\
    \ MEDIcal WARNing System.\nJ. Sens. Actuator Netw. 2021, 10, 44. [CrossRef]\n\
    14.\nAbujassar, R.S.; Yaseen, H.; Al-Adwan, A.S. A Highly Effective Route for\
    \ Real-Time Trafﬁc Using an IoT Smart Algorithm for\nTele-Surgery Using 5G Networks.\
    \ J. Sens. Actuator Netw. 2021, 10, 30. [CrossRef]\n15.\nVenkatesh, K.; Srinivas,\
    \ L.; Krishnan, M.M.; Shanthini, A. QoS improvisation of delay sensitive communication\
    \ using SDN based\nmultipath routing for medical applications. Future Gener. Comput.\
    \ Syst. 2019, 93, 256–265. [CrossRef]\n16.\nKathuria, M.; Gambhir, S. Reliable\
    \ packet transmission in WBAN with dynamic and optimized QoS using multi-objective\
    \ lion\ncooperative hunt optimizer. Multimed. Tools Appl. 2021, 80, 10533–10576.\
    \ [CrossRef]\n17.\nBardalai, P.; Medhi, N.; Bargayary, B.; Saikia, D.K. OpenHealthQ:\
    \ OpenFlow based QoS management of Healthcare Data in\na Software-Deﬁned Fog environment.\
    \ In Proceedings of the ICC 2021—IEEE International Conference on Communications,\n\
    Montreal, QC, Canada, 14–23 June 2021; pp. 1–6. [CrossRef]\n18.\nWang, Q.; Alcaraz-Calero,\
    \ J.; Ricart-Sanchez, R.; Weiss, M.B.; Gavras, A.; Nikaein, N.; Vasilakos, X.;\
    \ Giacomo, B.; Pietro, G.; Roddy,\nM.; et al. Enable Advanced QoS-Aware Network\
    \ Slicing in 5G Networks for Slice-Based Media Use Cases. IEEE Trans. Broadcast.\n\
    2019, 65, 444–453. [CrossRef]\n19.\nAl-Tarawneh, L.A. Medical Grade QoS Improvement\
    \ Using IEEE802.11e WLAN Protocol.\nIn Proceedings of the Smart\nTechnologies\
    \ and Innovation for a Sustainable Future, Dubai, United Arab Emirates, 15–16\
    \ November 2017; Al-Masri, A., Curran,\nK., Eds.; Springer International Publishing:\
    \ Cham, Swizerland, 2019; pp. 229–235.\n20.\nKhalil, A.; Mbarek, N.; Togni, O.\
    \ IoT Service QoS Guarantee Using QBAIoT Wireless Access Method. In Proceedings\
    \ of the Mobile,\nSecure, and Programmable Networking, Mohammedia, Morocco, 23–24\
    \ April 2019; Renault, É., Boumerdassi, S., Bouzefrane, S.,\nEds.; Springer International\
    \ Publishing: Cham, Swizerland, 2019; pp. 157–173.\n21.\nGoyal, R.; Patel, R.;\
    \ Bhaduria, H.; Prasad, D. An Energy Efﬁcient QoS Supported Optimized Transmission\
    \ Rate Technique in\nWBANs. Wirel. Pers. Commun. 2020, 117, 235–260. [CrossRef]\n\
    22.\nIbrahim, A.A.; Bayat, O.; Ucan, O.N.; Salisu, S. Weighted Energy and QoS\
    \ based Multi-hop Transmission Routing Algorithm for\nWBAN. In Proceedings of\
    \ the 6th International Engineering Conference “Sustainable Technology and Development”\
    \ (IEC), Erbil,\nIraq, 26–27 February 2020; IEEE: Piscataway, NJ, USA, 2020; pp.\
    \ 191–195.\n23.\nGautam, A.; Mahajan, R.; Zafar, S., QoS Optimization in Internet\
    \ of Medical Things for Sustainable Management. In Cognitive\nInternet of Medical\
    \ Things for Smart Healthcare: Services and Applications; Hassanien, A.E., Khamparia,\
    \ A., Gupta, D., Shankar, K.,\nSlowik, A., Eds.; Springer International Publishing:\
    \ Cham, Swizerland, 2021; pp. 163–179. [CrossRef]\n24.\nAdhikary, S.; Ghosh, B.;\
    \ Choudhury, S., QoS Enhancement in WBAN with Twin Coordinators. In Advanced Computing\
    \ and Systems\nfor Security: Volume Eleven; Chaki, R., Cortesi, A., Saeed, K.,\
    \ Chaki, N., Eds.; Springer: Singapore, 2021; pp. 85–97. [CrossRef]\n25.\nTseng,\
    \ H.W.; Wang, Y.B.; Yang, Y. An Adaptive Channel Hopping and Dynamic Superframe\
    \ Selection Scheme With QoS\nConsiderations for Emergency Trafﬁc Transmission\
    \ in IEEE 802.15.6-Based Wireless Body Area Networks. IEEE Sens. J. 2020,\n20,\
    \ 3914–3929. [CrossRef]\n26.\nZuhra, F.T.; Baka, K.B.A.; Ahmed, A.; Khan, U.A.;\
    \ Bhangwar, A.R. MIQoS-RP: Multi-Constraint Intra-BAN, QoS-Aware Routing\nProtocol\
    \ for Wireless Body Sensor Networks. IEEE Access 2020, 8, 99880–99888. [CrossRef]\n\
    27.\nWaheed, T.; Rehman, A.U.; Karim, F.; Ghani, S. QoS Enhancement of AODV Routing\
    \ for MBANs. Wirel. Pers. Commun. 2020, 116,\n1379–1406. [CrossRef]\n28.\nSodhro,\
    \ A.H.; Luo, Z.; Sangaiah, A.K.; Baik, S.W. Mobile edge computing based QoS optimization\
    \ in medical healthcare\napplications. Int. J. Inf. Manag. 2019, 45, 308–318.\
    \ [CrossRef]\n29.\nBai, T.; Lin, J.; Li, G.; Wang, H.; Ran, P.; Li, Z.; Pang,\
    \ Y.; Wu, W.; Jeon, G. An optimized protocol for QoS and energy efﬁciency on\n\
    wireless body area networks. Peer Peer Netw. Appl. 2019, 12, 326–336. [CrossRef]\n\
    30.\nGong, S.; Zhu, X.; Zhang, R.; Zhao, H.; Guo, C. An Intelligent Resource Management\
    \ Solution for Hospital Information System\nBased on Cloud Computing Platform.\
    \ IEEE Trans. Reliab. 2022, 1–14. [CrossRef]\n31.\nDammak, B.; Turki, M.; Cheikhrouhou,\
    \ S.; Baklouti, M.; Mars, R.; Dhahbi, A. LoRaChainCare: An IoT Architecture Integrating\n\
    Blockchain and LoRa Network for Personal Health Care Data Monitoring. Sensors\
    \ 2022, 22, 1497. [CrossRef]\n32.\nBehnel, S.; Fiege, L.; Muhl, G. On Quality-of-Service\
    \ and Publish-Subscribe. In Proceedings of the 26th IEEE International\nConference\
    \ on Distributed Computing Systems Workshops (ICDCSW’06), Lisboa, Portugal, 4–7\
    \ July 2006; p. 20.\n33.\nYang, L.; Zhang, L.; Dong, H.; Alelaiwi, A.; Saddik,\
    \ A.E. Evaluating and Improving the Depth Accuracy of Kinect for Windows\nv2.\
    \ IEEE Sens. J. 2015, 15, 4275–4285. [CrossRef]\n34.\nNetworks, S. Real-Time Location\
    \ System (RTLS) for Indoor Tracking. 2020. Available online: https://www.sewio.net/\
    \ (accessed\non 6 August 2020).\nJ. Sens. Actuator Netw. 2022, 11, 33\n15 of 15\n\
    35.\nMukhopadhyay, A. QoS based telemedicine technologies for rural healthcare\
    \ emergencies. In Proceedings of the 2017 IEEE\nGlobal Humanitarian Technology\
    \ Conference (GHTC), San Jose, CA, USA, 19–22 October 2017; pp. 1–7.\n36.\nNanda,\
    \ P.; Fernandes, R.C. Quality of Service in Telemedicine. In Proceedings of the\
    \ First International Conference on the Digital\nSociety (ICDS’07), Washington,\
    \ DC, USA, 2–6 January 2007; p. 2.\n37.\nMalindi, P.; Kahn, M.T. Providing QoS\
    \ for IP-Based Rural Telemedicine Systems. In Proceedings of the 2008 Third International\n\
    Conference on Broadband Communications, Information Technology Biomedical Applications,\
    \ Pretoria, Gauteng, South Africa,\n23–26 November 2008; pp. 499–504.\n38.\nLee,\
    \ H.; Park, K.; Ko, Y.; Choi, C. Wireless LAN with medical-grade QoS for e-healthcare.\
    \ J. Commun. Netw. 2011, 13, 149–159.\n[CrossRef]\n"
  inline_citation: '>'
  journal: Journal of sensor and actuator networks
  limitations: '>'
  pdf_link: https://www.mdpi.com/2224-2708/11/3/33/pdf?version=1656944529
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart Hospitals and IoT Sensors: Why Is QoS Essential Here?'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/electronics8070776
  analysis: '>'
  authors:
  - Samuel Erskine
  - Khaled Elleithy
  citation_count: 16
  full_citation: '>'
  full_text: ">\nelectronics\nArticle\nReal-Time Detection of DoS Attacks in IEEE\
    \ 802.11p\nUsing Fog Computing for a Secure Intelligent\nVehicular Network\nSamuel\
    \ Koﬁ Erskine and Khaled M. Elleithy *\nComputer Science and Engineering Department,\
    \ University of Bridgeport, Bridgeport, CT 06604, USA\n* Correspondence: elleithy@bridgeport.edu;\
    \ Tel.: +1-203-576-4703\nReceived: 6 June 2019; Accepted: 5 July 2019; Published:\
    \ 11 July 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\
    \a\nAbstract: The vehicular ad hoc network (VANET) is a method through which Intelligent\
    \ Transportation\nSystems (ITS) have become important for the beneﬁt of daily\
    \ life. Real-time detection of all forms\nof attacks, including hybrid DoS attacks\
    \ in IEEE 802.11p, has become an urgent issue for VANET.\nThis is due to sporadic\
    \ real-time exchange of safety and road emergency message delivery in VANET.\n\
    Sporadic communication in VANET has the tendency to generate an enormous amount\
    \ of messages.\nThis leads to overutilization of the road side unit (RSU) or the\
    \ central processing unit (CPU) for\ncomputation. Therefore, eﬃcient storage and\
    \ intelligent VANET infrastructure architecture (VIA),\nwhich includes trustworthiness,\
    \ are required. Vehicular Cloud and Fog Computing (VFC) play an\nimportant role\
    \ in eﬃcient storage, computation, and communication needs for VANET. This research\n\
    utilizes VFC integration with hybrid optimization algorithms (OAs), which also\
    \ possess swarm\nintelligence, including Cuckoo/CSA Artiﬁcial Bee Colony (ABC)\
    \ and Fireﬂy/Genetic Algorithm (GA),\nto provide real-time detection of DoS attacks\
    \ in IEEE 802.11p, using VFC for a secure intelligent\nvehicular network. Vehicles\
    \ move ar a certain speed and the data is transmitted at 30 Mbps. Fireﬂy\nFeed\
    \ forward back propagation neural network (FFBPNN) is used as a classiﬁer to distinguish\n\
    between the attacked vehicles and the genuine vehicles. The proposed scheme is\
    \ compared with\nCuckoo/CSA ABC and Fireﬂy GA by considering jitter, throughput,\
    \ and prediction accuracy.\nKeywords: Cuckoo/CSA (ABC); Fireﬂy/Genetic Algorithm\
    \ (GA); Vehicular Cloud and Fog Computing\n(VFC); DoS attacks; IEEE 802.11P; VANET;\
    \ ITS\n1. Introduction\nVANET is a popular, modern network. The network is termed\
    \ an ad-hoc network, as the position\nof the vehicles changes at every instant\
    \ of time. The average speed of vehicular nodes varies from\n40 to 80 km/h [1].\
    \ Due to this high randomness in location, VANET is quite prone to security threats,\n\
    especially hybrid DoS attacks, including all forms of attacks. Uncertainties,\
    \ such as hybrid DoS attacks,\nare the biggest reasons for security threats. VANET\
    \ utilizes vehicles as mobile nodes in the form of\na sub-class of a mobile ad-hoc\
    \ network (MANET) to communicate with nearby vehicles and among\nvehicles close\
    \ to roadside units (RSUs) or equipment, though is diﬀers from other networks\
    \ according\nto its characteristics [2]. Particularly, the vehicles (nodes) are\
    \ inadequate for the road topology when\nmoving; thus, vehicles’ future positions\
    \ can be predicted when information of the road is available.\nAs per IEEE 1471-2000\
    \ and ISO/IEC 42010 framework general guidelines, VANET systems can be\ncategorized\
    \ into three domains, including mobile, infrastructure, and generic domains [3].\n\
    Figure 1 depicts the VANET infrastructure architecture (VIA). The mobile domain\
    \ transfers the\ninformation and communicates with the infrastructure domain.\
    \ It utilizes IEEE 802.11p beacons and\nsignals, which process the data and proceed\
    \ towards modulation [4]. Then, the infrastructure domain\nElectronics 2019, 8,\
    \ 776; doi:10.3390/electronics8070776\nwww.mdpi.com/journal/electronics\nElectronics\
    \ 2019, 8, 776\n2 of 36\ncommunicates with generic domains and then exchanges\
    \ the information. The ﬂows of data between\nthe mobile and stationary resources\
    \ results in eﬀective utilization of the road with the user, which\nutilizes IEEE\
    \ 802.11p beacon communication standard.\nElectronics 2019, 8, x FOR PEER REVIEW\
    \ \n2 of 35 \n \nFigure 1 depicts the VANET infrastructure architecture (VIA).\
    \ The mobile domain transfers the \ninformation and communicates with the infrastructure\
    \ domain. It utilizes IEEE 802.11p beacons and \nsignals, which process the data\
    \ and proceed towards modulation [4]. Then, the infrastructure domain \ncommunicates\
    \ with generic domains and then exchanges the information. The flows of data between\
    \ \nthe mobile and stationary resources results in effective utilization of the\
    \ road with the user, which \nutilizes IEEE 802.11p beacon communication standard.\
    \ \n \nFigure 1. The vehicular ad hoc network (VANET) Infrastructure Architecture\
    \ (VIA). The mobile \ndomain is composed of two parts. The infrastructure domain\
    \ also consists of two parts. The generic \ndomain has private and internet infrastructure.\
    \ It can be defined in the form of varied nodes with \nservers and varied computing\
    \ resources operating directly or indirectly for VANET. \nIn this research, the\
    \ transmission rate of information for real-time IEEE 802.11p information \ndelivery\
    \ in VANET is 30 Mbps. Vehicles move in groups, as they are directed in the VIA\
    \ to their \nintended destination (as shown in Figure 1). In the VIA also, vehicle\
    \ cooperation in the group \nmovement is such that they exchange frequent sporadic\
    \ broadcasts of safety messages. These \nbroadcasts carry the information of the\
    \ speed of the vehicle and their position, whilst utilizing the \nIEEE 802.11p\
    \ beacon’s dedicated channel [5]. During normal operation of the IEEE 802.11p\
    \ medium \naccess control (MAC) protocol random access specification, beacon loss\
    \ is possible. This can be \nattributed to impairment of wireless channels (i.e.,\
    \ beacon transmissions overlapping resulting from \nseveral vehicles, which can\
    \ lead to collision/congestion). Collision/congestion (CC) can be reduced \nbased\
    \ upon proper selection of MAC protocol real-time transmission methods, which\
    \ include secure \nauthentication and key distribution algorithm models, and secure\
    \ transmission range models, which \ncan be deployed in the VIA network. Based\
    \ upon this, performance parameters, such as real-time \nend-to-end delay sensitivity\
    \ for trust enforcement of neighboring nodes in VANET, can be measured \n[6,7].\
    \ \nNevertheless, it is possible that the IEEE 802.11p beacon transmissions can\
    \ also get corrupted \nthrough malicious attacker vehicles. They may also present\
    \ themselves in all forms of attacks, \nincluding hybrid DoS attacks (HDSA), which\
    \ include DoS jamming signal attack, (DoD JSA), packet \ndrop (PD), and resources\
    \ consumption/RSU or CPU overutilization (RCRCO) [8]. The VANET safety \ncan seriously\
    \ be at risk, since vehicles would not be capable of properly utilizing the information\
    \ \nobtained. However, vehicles are required to utilize and transmit the information\
    \ based upon the IEEE \n802.11p beacon’s relay through the RSU in order to sensitize\
    \ awareness in VANET. The RSU utilizes \nFigure 1. The vehicular ad hoc network\
    \ (VANET) Infrastructure Architecture (VIA). The mobile domain\nis composed of\
    \ two parts. The infrastructure domain also consists of two parts. The generic\
    \ domain\nhas private and internet infrastructure. It can be deﬁned in the form\
    \ of varied nodes with servers and\nvaried computing resources operating directly\
    \ or indirectly for VANET.\nIn this research, the transmission rate of information\
    \ for real-time IEEE 802.11p information\ndelivery in VANET is 30 Mbps. Vehicles\
    \ move in groups, as they are directed in the VIA to their intended\ndestination\
    \ (as shown in Figure 1). In the VIA also, vehicle cooperation in the group movement\
    \ is\nsuch that they exchange frequent sporadic broadcasts of safety messages.\
    \ These broadcasts carry the\ninformation of the speed of the vehicle and their\
    \ position, whilst utilizing the IEEE 802.11p beacon’s\ndedicated channel [5].\
    \ During normal operation of the IEEE 802.11p medium access control (MAC)\nprotocol\
    \ random access speciﬁcation, beacon loss is possible. This can be attributed\
    \ to impairment of\nwireless channels (i.e., beacon transmissions overlapping\
    \ resulting from several vehicles, which can lead\nto collision/congestion). Collision/congestion\
    \ (CC) can be reduced based upon proper selection of MAC\nprotocol real-time transmission\
    \ methods, which include secure authentication and key distribution\nalgorithm\
    \ models, and secure transmission range models, which can be deployed in the VIA\
    \ network.\nBased upon this, performance parameters, such as real-time end-to-end\
    \ delay sensitivity for trust\nenforcement of neighboring nodes in VANET, can\
    \ be measured [6,7].\nNevertheless, it is possible that the IEEE 802.11p beacon\
    \ transmissions can also get corrupted\nthrough malicious attacker vehicles. They\
    \ may also present themselves in all forms of attacks, including\nhybrid DoS attacks\
    \ (HDSA), which include DoS jamming signal attack, (DoD JSA), packet drop (PD),\n\
    and resources consumption/RSU or CPU overutilization (RCRCO) [8]. The VANET safety\
    \ can seriously\nbe at risk, since vehicles would not be capable of properly utilizing\
    \ the information obtained. However,\nvehicles are required to utilize and transmit\
    \ the information based upon the IEEE 802.11p beacon’s\nrelay through the RSU\
    \ in order to sensitize awareness in VANET. The RSU utilizes the information to\n\
    also update other vehicles about the requirements of end-to-end delay and jitter\
    \ in the network, which\nElectronics 2019, 8, 776\n3 of 36\nis imposed by the\
    \ automotive control system (ACS) from the traﬃc management center, as shown in\n\
    the VIA in Figure 1.\nConsequently, real-time detection of all forms of attacks,\
    \ including hybrid DoS attacks (HDSA),\nrequire trustworthiness, intelligent computation,\
    \ and eﬃcient storage, which can be achieved through\nvehicular cloud and fog\
    \ computing (VFC). These can provide trustworthiness in VANET. In addition,\n\
    integration with hybrid deployment of optimization algorithms (OAs) in VANET also\
    \ provides swarm\nintelligence. The OAs include Cuckoo/CSA (ABC), and Fireﬂy/Genetic\
    \ Algorithm (GA). These OAs\ncan also be integrated with authentication and KDE\
    \ mechanisms. This integration with the real-time\ndetection of HDSA can provide\
    \ secure methods in the MAC layer, which in turn can be used to mitigate\nall\
    \ forms of attacks, including HDSA, such as DoS JSA, PD, and RCRCO, which utilizes\
    \ IEEE 802.11p\nbeacon transmissions in VANET. This represents an urgent practical\
    \ problem that we are motivated to\ninvestigate in this research.\n1.1. Background\
    \ Study of This Research\nReal-time detection of only DoS JSA using IEEE 802.11\
    \ signal in VANET was proposed and\ninvestigated based upon previous studies [9,10].\
    \ In these studies, the MAC layer misbehavior of\nsome vehicles and nodes violates\
    \ IEEE 802.11 rules. Small back-oﬀ counters were chosen to access\nthe channel\
    \ more frequently than other nodes. However, their performance were degraded.\
    \ In these\ninvestigations, however, restriction in detection of all forms of\
    \ attacks, including HDSA, was an\nissue. Moreover, the investigation was based\
    \ on only a DoS JSA attack. In detecting DoS JSA only\nin VANET, the method in\
    \ a previous study [11] that utilized a unicast traﬃc method based upon the\n\
    regression model was proposed. However, the proposed method did not consider any\
    \ trustworthiness\ninvestigation of the nodes in the network. Real-time detection\
    \ of DoS attacks in the IEEE 802.11p\nvehicular network method was also proposed\
    \ in a previous study [12]. This considered beacons\ntransmission regularly in\
    \ IEEE 802.11p in broadcast mode only, without retransmission. This method\nalso\
    \ included an alternative jamming detector for considering detection of only DoS\
    \ JSA attacks in a\nVANET platoon. However, the investigation revealed gaps in\
    \ trustworthiness in the protocol. Based\nupon the investigation of these two\
    \ or more methods, we can verify that the DoS attacks considered\nfor investigation\
    \ in VANET were based only on DoS JSA. There are other forms of attacks eminent\
    \ in\nVANET, which include HDSA. The detection of all other attacks and HDSA still\
    \ presents the greatest\nchallenge in VANET safety application deployment. In\
    \ addition, there are other forms of DoS attacks,\nsuch as PD, RCRCO overutilization,\
    \ and DoS resilience attacker (DRA). These attacks altogether also\nform HDSA\
    \ [13], which mostly cause overutilization of the RSU. However, none of the above\
    \ deﬁned\nproposed schemes in VANET considered investigation for detecting HDSA,\
    \ which also includes DRA.\nMoreover, the authors’ investigations concerning utilizing\
    \ the above proposed schemes demonstrate\nonly limited recommendation and provision\
    \ for trusting methods, secure eﬃcient storage mechanisms,\nproper OAs, and authentication\
    \ and KDE methods based upon the investigations of the proposed\nschemes. The\
    \ authors detected only DoS JSA based upon the investigations of their proposed\
    \ schemes.\nDoS attacks encompass DRA for the sake of this research. Therefore,\
    \ it is important to investigate\nHDSA using a sophisticated approach. This new\
    \ approach will be capable of detecting all forms of\nDoS attacks, including HDSA\
    \ attacks, which should be supported in this research.\nVehicular Cloud and Fog\
    \ Computing (VFC) is a standard that comprehends FC and vehicular cloud\n(VCC)\
    \ [14]. VFC is also a solution that satisﬁes the requirements of VANET, such as\
    \ secure and eﬃcient\ncomputing, storage, and in-network resource provision [13].\
    \ In addition, optimization algorithms\n(OAs), such as Cuckoo/CSA (ABC) [15],\
    \ Fireﬂy algorithm (GA) [16], and ﬁreﬂy neural algorithm [17]\nare capable of\
    \ providing swarm intelligence. The OAs are either heuristic or metaheuristic\
    \ in nature\nand have problem-solving skills. They also have the capability to\
    \ adjust DoS JSA and HDSAs\n(i.e., congestion and collusion), which include all\
    \ other forms of attacks, such as DoS JSA, PD, and\nRCRCO, for optimum user experience\
    \ [18]. The OAs have also been used to evaluate a real-time data\ntransmission\
    \ in VANET [19], which utilized IEEE 802.11p for dedicated short-range communication\n\
    Electronics 2019, 8, 776\n4 of 36\n(DSRC) technology. VFC integration with OAs\
    \ and trust detection of the nodes in VANET, which\nalso utilize authentication/KDE\
    \ in VANET, can appropriately secure the VANET through the RSU.\nThis secure method\
    \ for VANET protection provide a real-time detection of DoS attacks in IEEE\n\
    802.11p, which utilizes the DSRC technology. It also provides the safety of roads\
    \ and highways based\nupon intelligent transportation system (ITS) opportunities.\
    \ Therefore, real-time detection of DoS\nJSA and HDSA utilizing IEEE 802.11p,\
    \ which is based upon VFC, requires investigation to evaluate\nend-to-end delay\
    \ and jitter in VANET, due to DoS JSA and HDSA attack, (congestion and collision)\
    \ for\ntrust evaluation.\nThe authors in previous studies [14–16] have conducted\
    \ investigations separately using\nCuckoo/CSA (ABC) and Fireﬂy Genetic Algorithm\
    \ (GA), respectively.\nThe investigations were\nperformed to evaluate delay sensitivity\
    \ for real-time detection for only DoS JSA attacks in VANET,\nwhich also utilized\
    \ DSRC technology. However, based upon the investigation conducted with the\n\
    Cuckoo/CSA (ABC) scheme, it revealed that it was not centered on VFC. In addition,\
    \ most of the\nschemes’ investigations dwell on only the unicast method for data\
    \ transmission. However, this method\ndid not achieve trustworthiness in the network.\
    \ The authors have conducted an investigation on Fireﬂy\n(GA), and utilized the\
    \ concept of VANET as key enabler of future ITS, utilizing real-time detection\
    \ of\nDoS attacks. The authors also trained the misbehavior of the nodes on the\
    \ paths of vehicles delayed\nin VANET. They also utilized the DSRC technology\
    \ and multicast data transmission. However, the\nauthor’s investigation was limited.\
    \ This is based upon the fact that the investigation does not include\nall forms\
    \ of attacks, including HDSA attacks, such as DoS JSA, PD, and RCRCO, in the network.\n\
    In addition, the absence of the VFC method was also a major limitation observed\
    \ in the schemes.\nTherefore, it can be concluded that there is a trustworthiness\
    \ limitation in VANET. This still presents\nthe greatest challenge.\nTo address\
    \ these challenges in VANET, in this paper we consider all forms of attacks, including\n\
    all forms of DoS attack detection in VANET, which includes but is not limited\
    \ to DoS JSA, HDSA\n(congestion and collusion), PD, and RCRCO/DoS attacks in our\
    \ proposed scheme VIA models. We\nalso consider the hybrid deployment of OAs with\
    \ VFCs and integrate full authentication/KDE trust\nmechanism deployment in the\
    \ VANET. These will be used to evaluate the end-to-end delay and jitter\nin real-time\
    \ IEEE 802.11p hybrid multicast and unicast data transmission in VANET. Therefore,\
    \ in this\npaper we propose real-time detection of DoS attacks in IEEE 802.11p\
    \ using VFC in a Secure Intelligent\nVehicular Network.\n1.2. Research Contribution\n\
    The main contributions of this research are:\n•\nDeployment of trust in VANET\
    \ utilizing VFC and hybrid integration of OAs, which include\nCuckoo/CSA (ABC)\
    \ and Fireﬂy (GA) with authentication/KDE. VFC provides a search space for\ninformation\
    \ processing and achieves eﬃciency in computational overhead due to advantages\n\
    in rapidly stored vehicular information processing using the V2V and V2RSU, and\
    \ RSU2FS\ncommunication behavior in this research.\n•\nReal-time detection of\
    \ all forms of attacks, including HDSA attack detection, such as DoS JSA, PD,\n\
    and RCRCO in VANET, to provide trustworthiness in the network.\n•\nProvision of\
    \ IEEE 802.11p beneﬁts information processing.\nwhich utilize hybrid multicast\n\
    and unicast broadcast data transmission in VANET for eﬃcient and real-time transmission\
    \ of\nsafety information.\n•\nProvision for single next hop vehicle (SNHV) probability\
    \ analysis for eﬃcient data processing\nwithin the elliptical segment area transmission\
    \ range (ESATR) in VANET.\n•\nProvision for regression model prediction based\
    \ upon reduced delay and jitter in VANET for\nsecure road safety provision.\n\
    Electronics 2019, 8, 776\n5 of 36\nThe rest of the paper is organized as follows.\
    \ Section 2 presents the related work. Section 3\npresents the secure real-time\
    \ detection of DoS attack models (DAM) and jamming signal attack models\n(JAM).\
    \ Both attack models provide Hybrid DoS attack model (HDAM) prevention mechanisms\
    \ in\nVANET. Section 4 presents the preventive mechanisms and the system models,\
    \ including the system\narchitecture model (SAM) and elliptical segment area transmission\
    \ range model (ESATRM), OA\ndeployment, and trustworthiness of nodes of the proposed\
    \ scheme. Section 5 presents the resulting\nanalysis and discussion. Section 6\
    \ is a miscellaneous section for background study comparison of\nVANET protocols,\
    \ and Section 7 presents the conclusions.\n2. Related Work\nThis section discusses\
    \ related work in VANET. The section is also categorized into two subsections,\n\
    which are Sections 2.1 and 2.2. Section 2.1 includes securing VANET-Centralized\
    \ Architecture based\non HDSA, including other related attacks. Section 2.2 includes\
    \ securing the VANET-Fog Computing\nCentric Architectures, as follows.\n2.1. Securing\
    \ VANET-Centralized Architecture Based on DoS Attacks and Other Related Attacks\n\
    In a previous study [20], the authors proposed malicious node detection on vehicular\
    \ ad-hoc\nnetworks. They used Dumpster Shafer theory to investigate DoS attacks.\
    \ However, during the\ninvestigation it was discovered that it was not centered\
    \ on secure storage solutions. In addition, hybrid\nmulticast and unicast data\
    \ transmissions were not used to investigate for real time detection of all\n\
    forms of attacks, including HDSA attacks. Instead, the authors’ investigation\
    \ was centered on an\nartiﬁcial neural network-based technique, which used a self-organized\
    \ map. In the investigation, the\nauthors also used only a trace ﬁle to train\
    \ the network, which works as an input to self-organize the\nmap. This was in\
    \ order to provide supervised learning to their network. Although, the authors\
    \ used a\nself-organized map (SOM) classiﬁer for detection of misbehavior nodes;\
    \ the method used was not fully\ninvestigated or explained. Moreover, there were\
    \ also limitations in investigation of the IEEE 802.11\nstandard data transmission\
    \ technique. The IEEE 802.11 utilizes the DSRC technology to investigate\ncommunication\
    \ of vehicles in the network. This is observed as a major limitation of the scheme.\
    \ In a\nprevious study [21], the authors proposed prevention of DoS attacks over\
    \ a vehicular ad hoc network\nusing a quick response table. However, based upon\
    \ the proposed scheme, there was a limitation.\nThis includes use of a clear security\
    \ method that was required to secure the network. This requires\nurgent attention.\
    \ Another limitation observed for the scheme was that the authors did not conduct\
    \ an\ninvestigation regarding an eﬃcient storage mechanism for the network deployment.\
    \ In addition, there\nwas no recommendation for any trustworthiness method, which\
    \ would be used to secure the network.\nIn addition, the detection of DoS attacks\
    \ was only based upon certain forms of attacks, such as gray\nhole, Sybil, and\
    \ black hole attacks only. However, these attacks are of diﬀerent categories.\
    \ Thus, the\nauthors’ investigation could not be considered appropriate, due to\
    \ absence of investigation of DoS JSA,\nPD, and RCRCO overutilization, which relates\
    \ mostly to the trustworthiness and eﬃcient provision of\ndata for RSU in VANET.\
    \ However, it was discovered in the authors’ investigation that the proposed\n\
    security mechanism was merely a discussion method for routing in VANET. The routing\
    \ method was\nonly used to identify and eliminate the existing security threats.\
    \ The authors did not recommend any\nreal-time investigation of the methods used\
    \ for investigation of trustworthiness in VANET.\nIn a previous study [22], the\
    \ authors proposed an eﬃcient and lightweight intrusion detection\nmechanism for\
    \ service-oriented vehicular networks (ELIDV). From the perspective of the authors,\
    \ they\ndesigned and implemented ELIDV with the aim of protecting the network\
    \ from only three kinds of\nattacks, namely DoS attacks, integrity targets, and\
    \ false alert generation. In addition, the proposed\nELIDV security method was\
    \ also based upon a set of rules that detected malicious nodes promptly.\nHowever,\
    \ the proposed method was not evaluated based upon high prediction accuracy evaluation\
    \ of\nHDSA for VANET. Also, the authors’ investigation concerning secure method\
    \ provision in VANET\nwas without consideration for any eﬃcient storage mechanism.\
    \ Therefore, it can be concluded that\nElectronics 2019, 8, 776\n6 of 36\nthere\
    \ was no trustworthiness protection provision in the network. In addition, another\
    \ limitation\nthat was discovered was that the DoS attack detection method used\
    \ was not centered on any HDSA,\nincluding DoS JSA, PD, or RCRCO overutilization.\
    \ The proposed scheme was also identiﬁed as having\na limitation in designing\
    \ a secure encryption and authentication mechanism. This would otherwise\nbe used\
    \ for providing a hybrid investigation of DoS attacks that would also include\
    \ investigation of\nreal-time data transmission in VANET. In a previous study\
    \ [23], the authors proposed detection and\nprevention mechanisms of distributed\
    \ denial of service (DDoS) attacks in VANETs. Based upon the\nproposed scheme,\
    \ the authors concentrated only on DDoS attack detection and the prevention scheme.\n\
    The basic principle of the scheme relied only on keeping track of the number of\
    \ packets injected into the\nnetwork. The authors claimed that the proposed scheme\
    \ did not include any communication overhead\n(CO) that would aﬀect the network\
    \ resources. Nevertheless, there were limitations in the network,\nwhich included\
    \ lack of provision of any eﬃcient storage mechanisms; these would be used to\
    \ secure\nthe network, however, they were not investigated in the proposed scheme,\
    \ which can lead to CO.\nTherefore, trustworthiness was an issue with the proposed\
    \ scheme. In addition, due to the limitation\nof trustworthiness in the network,\
    \ CO was increased in the proposed scheme. Another limitation\nobserved with the\
    \ proposed scheme was the unavailability of hybrid security method investigation.\n\
    This would be used for detection of all forms of attacks, including HDSA attacks\
    \ in the network.\nTherefore, we can verify that the proposed scheme would incur\
    \ DoS JSA, PD, and RCRCO, which aﬀects\nthe RSU secure information processing\
    \ in the network. In addition, the proposed scheme performance\nevaluation was\
    \ not based upon end-to-end delays in the network, which requires urgent attention.\n\
    The authors in another study [24] proposed a review of the intrusion detection\
    \ system (IDS).\nA survey of IDS, based upon DoS attacks, has been provided with\
    \ the examination and comparison\nof every technique, with advantages and disadvantages.\
    \ Few guidelines have been presented for\nthe development of IDS with prospective\
    \ application in VANET-cloud and fog computing (VFC).\nThe objective of the authors\
    \ was the identiﬁcation of open challenges, leading trends, and future\nresearch\
    \ in IDS deployment in the network. Bridging the gaps by means of overhead detection\
    \ rate and\nperformance, the authors proposed a proactive bait with respect to\
    \ the honeypot optimized system.\nHowever, leading to the discussion of the authors\
    \ proposed scheme, no investigation in network\nperformance metric evaluation\
    \ of end-to-end delay, throughput, and prediction accuracy performance\nof the\
    \ proposed scheme were evaluated. Based upon another limitation that was identiﬁed,\
    \ the\nproposed scheme did not include secure method and storage mechanism investigation,\
    \ which was also\na major concern. Therefore, trustworthiness and accurate processing\
    \ of safety information in VANET\nwas also a concern. Exploring further investigation\
    \ in VANET based upon VIA infrastructure, using\nVehicular Cloud and Fog Computing\
    \ (VFC), is important and the investigation below is based upon\nthe concept of\
    \ VFC.\n2.2. Securing the VANET-Fog Computing (VFC) Using Cloud-Centric Architectures\n\
    The authors in a previous study [25] identiﬁed the security goals for vehicular\
    \ cloud computing\n(VCC); also known as VFC) interoperability. The authors provided\
    \ an Authentication and Key\nAgreement (AKA) framework for VCC. Particularly,\
    \ the authors proposed the problems with the\nchallenges for the design of consistent\
    \ AKA with extra strong security assurance for VCC. A hybrid AKA\nframework has\
    \ been proposed, which combines “single server, 3-factor protocol” with “non-interactive,\n\
    identity-based, key established protocol” and computed the performance on the\
    \ basis of the simulated\nplatform. The authors in a previous study [26] introduced\
    \ a novel method for serving speed-based lane\nchanging, time of arrival (TOA),\
    \ and collision avoidance on the basis of localization in VANET. TOA\nhas been\
    \ designed for those areas in which there is an unavailability of GPS signals.\
    \ The design of TOA\nprovides clear line of sight for exact services for localization\
    \ and positioning applications. The authors\naddressed collision avoidance with\
    \ automatic braking and camera-based surveillance. The viability\nand feasibility\
    \ of the algorithms were established via simulation in Simulation of Urban Mobility\n\
    Electronics 2019, 8, 776\n7 of 36\n(SUMO) and Network Simulator (NS-2). The authors\
    \ designed an mobile application interface (MAI)\nfor the onboard unit for eﬀective,\
    \ smart monitoring of remote traﬃc.\nThe authors in a previous study [27] proposed\
    \ an exclusive hierarchy for cache discovery with a\nreview on co-operative caching\
    \ methods in VANET with the classiﬁcation of linked cache discovery\nmethods in\
    \ the classiﬁcation. According to this, the authors used varied cache discovery\
    \ methods and\nexamined the potential for addressing the appropriate challenges\
    \ that occurred, while also deploying a\nnon-safety application in VANET, which\
    \ avoided the common pitfalls. The future lies in the utilization\nof this research\
    \ for the development of new co-operative caching methods, such as fog computing,\n\
    which could oﬀer enhanced performance in VANET, while comparing the traditional\
    \ approaches on\nthe basis of co-operative caching methods. The authors in a previous\
    \ study [28] presented the VANET\ndesign architecture for authentication key delivery\
    \ with less delay between vehicles with more mobility,\nutilizing fog as well\
    \ as cloud computing. The authors introduced fog computing for the extension\n\
    of cloud computing, with the context of a middle fog layer among cloud and mobile\
    \ devices for the\nproduction of varied beneﬁts. As the keys are produced directly\
    \ from the middle layer, the latency is\nsigniﬁcantly diminished. Additionally,\
    \ the amount of message exchanges among vehicles varied in\nVANET as elements\
    \ lessened, as compared to traditional methods. Accordingly, the resultant system\n\
    was more eﬀective. The design was executed and validated by a network simulation\
    \ tool for a single\nas well as a multi-vehicle system.\nIn another study [29],\
    \ the authors presented a novel technique to address the problem of data\nsharing\
    \ and delegated the data management to a trusted third party (TPA) on the basis\
    \ of a bilinear\npairing method. For the achievement of this goal, the authors\
    \ utilized fog computing as the major tool\nfor a utility computing hypothesis\
    \ for storage of a large amount of data and executed the re-encryption\nprocedure\
    \ safely. Varied resources, such as an on-board unit, communication, endless battery\
    \ life, and\ncomputing are implanted in the vehicles for usage for the enhancement\
    \ of an intelligent transportation\nsystem (ITS). The main challenge for VANET\
    \ is to safely distribute the signiﬁcant information between\nthe vehicles. In\
    \ a few cases, the owner of the data was not accessible and could not control\
    \ the\nprocess of data-sharing with the novel user or revoke the traditional user.\
    \ The authors in another\nstudy [30] used Fireﬂy (genetic algorithm (FA)) to investigate\
    \ vehicles that travelled along highways\nthat encountered some form of VANET\
    \ attacks. These vehicles that were deployed in the VANET\nwere vulnerable due\
    \ to DoS attacks which caused delays in the network. Afterwards, the authors\n\
    utilized a clustering algorithm to facilitate good communication links, however,\
    \ VFC was a limitation\nfor the network. In another study [31], the authors proposed\
    \ a new unicast routing protocol for a\nvehicular network. The protocol was based\
    \ upon two techniques: clustering algorithm technique,\nwhich played a role in\
    \ organizing and optimizing the exchange of routing information based on quality\n\
    of service requirement, and the artiﬁcial bee colony Cuckoo (ABC) algorithm, which\
    \ was used to ﬁnd\nthe best route path from the source to the destination. This\
    \ complied with measuring the delay and\njitter in the network. However, investigation\
    \ of the network for trust was not based upon HDSA.\nIn addition, only multicast\
    \ data transmission was a limitation, including absence of VFC. Therefore,\nfurther\
    \ investigation and evaluation of delay and jitter in VANET is important.\nThe\
    \ authors in another study [32] proposed a scheme for Sybil attack prevention\
    \ through an\nidentity symmetric encryption scheme in vehicular ad hoc networks.\
    \ The authors’ investigation also\nincluded DoS attacks and all other forms of\
    \ attacks, such as spooﬁng and identity disclosure. Based\nupon the proposed protocol,\
    \ a novel lightweight approach for preventing all these many forms of\nattacks,\
    \ including Sybil attacks and DoS attacks in VANET, was proposed by the authors.\
    \ The scheme\nused symmetric key encryption and authentication between RSUs and\
    \ vehicles on the road. The intent\nwas to prevent malicious vehicles and nodes\
    \ from obtaining more than one identity inside the network.\nHowever, the proposed\
    \ scheme did not require management in RSUs or certiﬁcation authority (CA).\n\
    The scheme only utilized a minimum amount of message exchange with the RSU, with\
    \ the authors\ninsisting the scheme was eﬀective. However, based upon the network\
    \ deployment, some vehicles did\nElectronics 2019, 8, 776\n8 of 36\nnot share\
    \ information. Vehicles sent fake requests and caused breakdowns, leading to trustworthiness\n\
    concerns in the network.\nThe work proposed in a previous study [33], which included\
    \ early DoS attack detection in VANET,\nused an attacked packet detection algorithm\
    \ (APDA) for vehicles. The vehicle represents mobile nodes\nequipped with an on-board\
    \ unit (OBU) that allows them to send and also receive messages from\nthe other\
    \ nodes in the VANET. The messages successfully reached the intended destination\
    \ without\nany interruption. In another study [34], the authors discussed DoS\
    \ attacks in VANET and used the\nBloom-ﬁlter-based detection method, which provided\
    \ service availability for legitimate vehicles or\nnodes in the network. A series\
    \ of attacks were encountered in the network that caused a communication\nbreak.\
    \ This is due to DoS JSA, source sink attacks, and all other forms of attacks,\
    \ including HDSA,\nwhich were left uninvestigated.\nBased upon the above descriptions\
    \ and investigations, it can be reasoned that real-time detection\nof DoS attacks,\
    \ which utilized IEEE 802.11p deployment in VANET using the DSRC technology, was\n\
    an issue. Thus, secure method evaluation, including VFC and optimization algorithms,\
    \ were mainly\nissues that were left uninvestigated by the authors. This is based\
    \ upon the fact that they found the\ninvestigation of various proposed schemes\
    \ in VANET complex to carry out. Also, it was determined\nin the investigation\
    \ that VFC was a major design issue in VANET. Hybrid method investigation\ndeployment\
    \ limitations persist. In addition, most of the proposed schemes’ investigation\
    \ limitations\nrevealed trustworthiness and secure storage mechanism concerns,\
    \ and absence of hybrid optimization\nalgorithm deployment, which would be required\
    \ to evaluate network performance metrics, such as\nend-to-end delay and jitter\
    \ in the network.\nMoreover, most of the schemes proposed by the authors that\
    \ were based upon storage mechanisms\nfor processing of information, as discussed\
    \ previously, focused on either using only unicast, multicast,\nor broadcast methods\
    \ to assess VANET information, processing performance metrics with the RSU.\n\
    None of the proposed schemes considered hybrid unicast and multicast or broadcast\
    \ and secure\nauthentication/KDE deployment methods for investigating all forms\
    \ of attacks, including HDSA.\nHowever, these limitations are a major concern\
    \ that require further investigation in VANET in order to\nprocess safety and\
    \ emergency message delivery in VANET. Thus, the authors of the above proposed\n\
    schemes utilized insuﬃcient end-to-end delay measurement methods, as discussed\
    \ in Sections 2.1\nand 2.2 for VANET (VIA), for real-time detection of HDSA.\n\
    3. Secure Real-Time Detection of DoS Attacks, Prevention Measures in VANET\n3.1.\
    \ Hybrid DoS Attacks (HDSA)\nHybrid DoS attacks (HDSA) employ HDSA models. These\
    \ models are designated as the proposed\nscheme attack models. They also encompass\
    \ all of the attack models that mitigate DoS JSA, PD, and\nRCRCO (DoS attack/RCRCO)\
    \ attacks. These attacks should be identiﬁed and mitigated in the VIA\nsystem\
    \ architecture models, which include the proposed scheme system architecture model\
    \ (PSAM)\nand the proposed scheme elliptical segment area transmission range models\
    \ (PESATRM). These models\nutilize the attacked packet detection algorithm (APDA)\
    \ to identify and mitigate HDSA and DoS JSA,\nincluding other attacks in the network\
    \ (these models will be explained further in subsequent Sections 3\nand 4 as needed).\
    \ However, before we proceed on, it is important to initially understand the DoS\n\
    attack/RCRCO model, since it serves as the main target attack point investigated\
    \ in the proposed\nscheme of this research.\n3.2. DoS Attacks and Model\nDenial-of-service\
    \ (DoS) attacks block the availability of computing systems and network services.\n\
    Therefore, the DoS attack model is needed to mitigate these attacks. DoS attacks\
    \ also overwhelm the\nnetwork with excessive traﬃc through the channel with naturally\
    \ generated messages. The computing\nsystem and network services crash. In addition,\
    \ they are unable to operate as accurately and eﬀectively\nElectronics 2019, 8,\
    \ 776\n9 of 36\nas required. The computing system also denies services to legitimate\
    \ users [35]. In addition, as a\nsubstitute to the system to functioning appropriately,\
    \ it would rather perform other irrelevant functions\nnot required in the network.\n\
    All forms of DoS attacks, including HDSA model attacks such as DoS JSA, PD, and\
    \ RCRCO/DoS\nattacks, can be experienced through inside and outside malicious\
    \ intruders in the network. These halt\nprovision of network availability to its\
    \ real users. This occurs through ﬂooding of the control channel\nwith naturally\
    \ generated illegal and malicious messages sent at a high speed [12]. DoS attack/RCRCO\n\
    key resources include high bandwidth demands, CPU and RSU overutilization, and\
    \ excessive memory\ncomputation. DoS attack/RCRCOs have a tendency to reduce the\
    \ speed and volume of the legitimate\nnetwork by consuming high bandwidth resources.\
    \ Through DoS attack/RCRCOs, packet processing\nand network devices can be prevented\
    \ from responding to management requests. This can eﬀectively\nlock the devices\
    \ by consuming excessive memory, leading to CPU and RSU overutilization of resources.\n\
    Figure 2 depicts a DoS attack model (DAM), which is also an aspect of the HDSA\
    \ model used\nin this research. DAM include vehicles that have experienced all\
    \ forms of attacks, including HDSA.\nWhen DoS attack/RCRCOs occur, they result\
    \ in accidents at locations X and Y. Another scenario of DoS\nattack/RCRCO includes\
    \ high bandwidth CPU and RSU overutilization and high memory computation,\nwhich\
    \ also leads to broken signals. Since vehicles cannot appropriately utilize the\
    \ 802.11p beacons for\nmessage transmission, this leads to collision and congestion\
    \ of other vehicles. Consequently, this also\nleads to an encounter of broken\
    \ IEEE 802.11p beacon signals. This act also leads to not being able to\nfully\
    \ acquire the IEEE 802.11p beacons and signals, which results in end-to-end delays\
    \ to the network.\nMoreover, packet drop (PD), false information (FI), and jamming\
    \ signal attacks (DoS JSA) occurrence\nin VANET is possible. In the other scenario,\
    \ normal vehicles that are travelling to their intended\ndestinations communicate\
    \ with other vehicles. The vehicles utilize the unbroken 802.11p beacons and\n\
    signals, which encompass V2V, V2RSU, and RSU2RSU communication. Based upon this\
    \ scenario, the\nRSU and fog server connection is achieved through either wired\
    \ means or by wireless means. The\nconnection of the RSU and FS utilizes the unbroken\
    \ 802.11p beacons and signals with the road-side unit\nto vehicle (RSU2V) communication\
    \ and vehicle to road side unit (V2RSU) communication to process\ninformation\
    \ in the network.\nElectronics 2019, 8, x FOR PEER REVIEW \n9 of 35 \nlegitimate\
    \ network by consuming high bandwidth resources. Through DoS attack/RCRCOs, packet\
    \ \nprocessing and network devices can be prevented from responding to management\
    \ requests. This \ncan effectively lock the devices by consuming excessive memory,\
    \ leading to CPU and RSU \noverutilization of resources. \nFigure 2 depicts a\
    \ DoS attack model (DAM), which is also an aspect of the HDSA model used in \n\
    this research. DAM include vehicles that have experienced all forms of attacks,\
    \ including HDSA. \nWhen DoS attack/RCRCOs occur, they result in accidents at\
    \ locations X and Y. Another scenario of \nDoS attack/RCRCO includes high bandwidth\
    \ CPU and RSU overutilization and high memory \ncomputation, which also leads\
    \ to broken signals. Since vehicles cannot appropriately utilize the \n802.11p\
    \ beacons for message transmission, this leads to collision and congestion of\
    \ other vehicles. \nConsequently, this also leads to an encounter of broken IEEE\
    \ 802.11p beacon signals. This act also \nleads to not being able to fully acquire\
    \ the IEEE 802.11p beacons and signals, which results in end-to-\nend delays to\
    \ the network. Moreover, packet drop (PD), false information (FI), and jamming\
    \ signal \nattacks (DoS JSA) occurrence in VANET is possible. In the other scenario,\
    \ normal vehicles that are \ntravelling to their intended destinations communicate\
    \ with other vehicles. The vehicles utilize the \nunbroken 802.11p beacons and\
    \ signals, which encompass V2V, V2RSU, and RSU2RSU \ncommunication. Based upon\
    \ this scenario, the RSU and fog server connection is achieved through \neither\
    \ wired means or by wireless means. The connection of the RSU and FS utilizes\
    \ the unbroken \n802.11p beacons and signals with the road-side unit to vehicle\
    \ (RSU2V) communication and vehicle \nto road side unit (V2RSU) communication\
    \ to process information in the network. \nWarning Message\nAccident and collusion/congestion\n\
    \ at locations  X and Y\nAccident at X\nRSU\nFog server\nBroken IEEE 802.11p\n\
    \ \nFigure 2. DoS attacks model (DAM). \nThe RSU2V, V2RSU, and V2V effective signal\
    \ communication of the unbroken IEEE 802.11p \nbeacons and signals can also be\
    \ achieved through the fog server (FS) effective connection with the \nRSU. These\
    \ effective connections, which are secure, utilize the IEEE 802.11p beacons and\
    \ signals \ngenerated from the accident scenarios to sensitize awareness of the\
    \ road conditions. The scenario of \nthe vehicle information delivery may also\
    \ represent congestion and collision of vehicles that are used \nas a standard\
    \ for safe information dissemination to other vehicles and road users. Based upon\
    \ this, \nall other normal vehicles that have not yet encountered congestion,\
    \ collision, or accidents will \ni t l\nb\ni f\nd\nb\nt\nid\nt\nd\nlli i\nti\n\
    it\nti\nth t h\nFigure 2. DoS attacks model (DAM).\nThe RSU2V, V2RSU, and V2V\
    \ eﬀective signal communication of the unbroken IEEE 802.11p\nbeacons and signals\
    \ can also be achieved through the fog server (FS) eﬀective connection with the\n\
    Electronics 2019, 8, 776\n10 of 36\nRSU. These eﬀective connections, which are\
    \ secure, utilize the IEEE 802.11p beacons and signals\ngenerated from the accident\
    \ scenarios to sensitize awareness of the road conditions. The scenario\nof the\
    \ vehicle information delivery may also represent congestion and collision of\
    \ vehicles that are\nused as a standard for safe information dissemination to\
    \ other vehicles and road users. Based upon\nthis, all other normal vehicles that\
    \ have not yet encountered congestion, collision, or accidents will\nappropriately\
    \ be informed about any accident and collision or congestion situation that have\
    \ occurred.\nAn example is accidents and congestion and collisions situation that\
    \ have occurred, such as at locations\nX and Y in Figure 2. Moreover, the broken\
    \ IEEE 802.11p beacons and signals are intended to cause\nend-to-end delay in\
    \ the VANET, which requires evaluation of network performance metrics. When\n\
    accidents occur, they prevent timely relay of the IEEE 802.11p beacons, leading\
    \ to PD, FI, and DoS\nJSA. Therefore, through this research, we launch further\
    \ investigation to evaluate the presence of all\nforms of attacks, such as HDSA,\
    \ and including PD/FI and DoS JSA, using attacked packet detection\nalgorithms.\
    \ Anticipation of the implementation of the proposed scheme system architecture\
    \ model\n(PSAM) is needed. This will be used to detect attacked packet drop PD/FI\
    \ and DoS JSA scenarios.\nThis is also an important component of this research,\
    \ whereby HDSA model requirements should be\ninvestigated for VANET. Now, it is\
    \ important to understand the eﬀects of PD/FI and DoS JSA, which\nalso utilize\
    \ the HDSA model.\n3.3. Packet Drop (PD) and False Information (FI)\nA packet\
    \ drop (PD) DoS attack (PDA), including FI, is one of the attacks that originates\
    \ from\nthe HDSA model. It may occur due to interference of 802.11p beacons that\
    \ may be present in the\nPSAM. PDA may also lead to end-to-end delay of path detection\
    \ of the communication process in\nVANET, during the deployment of V2V, V2RSU,\
    \ and RSU2V communication in the network. On the\nother hand, PDA will also lead\
    \ to FI message delivery in VANET. FI may also represent incorrect or\nfake information\
    \ generated through packet drop (PD), which may have resulted from all forms of\n\
    attacks, including DoS attacks. Thus, PDA might be sent purposefully by a node\
    \ to another node\nin the network that has the tendency to create congestion/collision\
    \ (CC) traﬃc scenarios. This may\nalso lead to misinformation of the actual road\
    \ and traﬃc situation information prediction accuracy.\nUsually, when PD and FI\
    \ are encountered in the network, they will also lead to generation of falsiﬁed\n\
    information. Drivers or road users would usually leave the road due to PDA and\
    \ DoS JSA, since the\nroad becomes available for attackers to exploit for their\
    \ own purposes. Therefore, it is important that\nDoS JSA should also be considered\
    \ for investigations in the PSAM.\n3.4. DoS Jamming Signal Attack (DoS JSA)\n\
    DoS jamming signal attacks (DoS JSA) represent a high form of DoS attacks that\
    \ have been\ninvestigated mostly by researchers. They are also a component of\
    \ the HDSA model proposed in this\nresearch. During DoS JSA encounters, the attacker\
    \ usually jams the channel, which can be represented\nas the congestion/collision\
    \ scenario in VANET. The main objective of DoS JSA is for a jammer to\ntrick a\
    \ legitimate IEEE 802.11p beacon’s signal communication, and reduce or degrade\
    \ the overall\nVANET performance. During the DoS JSA encounter, network users\
    \ are not permitted to access the\nnetwork. This usually causes broken IEEE 802.11p\
    \ beacon signals and introduces end-to-end delays in\nthe network. Jammers or\
    \ DoS JSA also have an objective of causing packet dropping in the network.\n\
    DoS JSA strategies include introducing deceptive DoS JSA (DDJA), reactive DoS\
    \ JSA (RDJA), random\nDoS JSA (RADJA), and constant DoS JSA (CDJA). Semi-valid\
    \ packets are transmitted through DDJA.\nThrough the DDJA, the packet header of\
    \ the information becomes valid, whilst the payload may not be\nused. With CDJA,\
    \ the IEEE 802.11p beacon’s radio signals continue to be emitted.\nWith reactive\
    \ RDJA encounters in VANET, resources are wasted and the receiver is targeted\
    \ when\nmore noise encounters in the data packet occur. RADJA eﬀects can be experienced\
    \ in two modes. In\nthe ﬁrst mode RADJA leads to excessive traﬃc encounters of\
    \ traﬃc for random, intermittent periods\nof time, whereas in the second mode,\
    \ RADJA leads to transmission of the signal being stopped for\nElectronics 2019,\
    \ 8, 776\n11 of 36\nrandom, intermittent time frequency hopping spread spectrum\
    \ (FHSS) and direct sequence spread\nspectrum (DSSP) [36].\nFigure 3 represents\
    \ vehicular communication of the DoS jamming signal attack model (DJSAM)\nscenario\
    \ of the proposed scheme. This also serves as a component of the HDSA model (HDAM).\
    \ In\nthe ﬁgure there are two scenarios. In the ﬁrst scenario there are normal\
    \ vehicles that utilize the IEEE\n802.11p unbroken signals. The unbroken signals\
    \ are also utilized to initiate V2V communication to\nsensitize each vehicle to\
    \ safety information for the roads, and the DoS JSA situation that has occurred.\n\
    This can be achieved through the connection of the RSU, which is either wired\
    \ or wirelessly connected\nwith the fog server (FS). This connection arrangement\
    \ is used to disseminate road emergency situation\ninformation concerning accidents\
    \ and road safety conditions. In the second scenario, the vehicles\nare designated\
    \ to communicate within an elliptical segment area (ESA). The ESA represents a\
    \ region\nwhere vehicles that are moving within a speciﬁed communication range\
    \ encounter an actual channel\nDoS JSA situation in the network. The second scenario\
    \ also includes utilizing the IEEE 802.11p broken\nsignals. The broken signal\
    \ communication scenario incurs unacceptable end-to-end delays in the\nnetwork\
    \ through V2V, V2RSU, and RSU2V communication that also convey the DoS JSA condition\n\
    information of the road to other vehicles. However, due to the fact that DoS JSA\
    \ has already been\ndiscussed previously, investigation of end-to-end delay on\
    \ the path of each vehicle in the network\nwould be needed. This requires using\
    \ sophisticated system architecture models, such as the proposed\nPSAM scheme\
    \ (which will be explained shortly). The PSAM is required to utilize attacked\
    \ packet\ndetection algorithms combined with the HDAM model. This would be beneﬁcial\
    \ to use to detect\nthe end-to-end delayed path of all HDAM attacks, including\
    \ DoS JSA, PD, RCRCO, and all forms of\nassociated attacks in the network that\
    \ have the capability to introduce end-to-end delay and jitter. The\nHDAM implementation\
    \ will be explained in the prevention mechanism and the PSAM.\nElectronics 2019,\
    \ 8, x FOR PEER REVIEW \n11 of 35 \nchannel DoS JSA situation in the network.\
    \ The second scenario also includes utilizing the IEEE \n802.11p broken signals.\
    \ The broken signal communication scenario incurs unacceptable end-to-end \ndelays\
    \ in the network through V2V, V2RSU, and RSU2V communication that also convey\
    \ the DoS \nJSA condition information of the road to other vehicles. However,\
    \ due to the fact that DoS JSA has \nalready been discussed previously, investigation\
    \ of end-to-end delay on the path of each vehicle in \nthe network would be needed.\
    \ This requires using sophisticated system architecture models, such as \nthe\
    \ proposed PSAM scheme (which will be explained shortly). The PSAM is required\
    \ to utilize \nattacked packet detection algorithms combined with the HDAM model.\
    \ This would be beneficial to \nuse to detect the end-to-end delayed path of all\
    \ HDAM attacks, including DoS JSA, PD, RCRCO, and \nall forms of associated attacks\
    \ in the network that have the capability to introduce end-to-end delay \nand\
    \ jitter. The HDAM implementation will be explained in the prevention mechanism\
    \ and the PSAM. \nRSU\nFog Server\nBroken signal\nVehicle\n \nFigure 3. Vehicular\
    \ communication channel DoS Jamming Signal Attack Model (D-JSAM). \n4. Prevention\
    \ Mechanisms of the Proposed Scheme \n4.1. Proposed Scheme System Architecture\
    \ Model (PSAM) \nIn this research, PSAM represents the proposed scheme system\
    \ architecture model. It is used for \nthe detection of end-to-end delayed path\
    \ packets of vehicles in the network that have also \nencountered HDSA attacks\
    \ with the HDAM. PSAM utilizes the attacked packet detection algorithms \n(APDA)\
    \ deployed in the PSAM, as shown in Figure 4. The APDA is utilized to capture\
    \ all forms of \nattacks categories including HDSA and all other forms of associated\
    \ attacks with VANET as\nFigure 3. Vehicular communication channel DoS Jamming\
    \ Signal Attack Model (D-JSAM).\nElectronics 2019, 8, 776\n12 of 36\n4. Prevention\
    \ Mechanisms of the Proposed Scheme\n4.1. Proposed Scheme System Architecture\
    \ Model (PSAM)\nIn this research, PSAM represents the proposed scheme system architecture\
    \ model. It is used for\nthe detection of end-to-end delayed path packets of vehicles\
    \ in the network that have also encountered\nHDSA attacks with the HDAM. PSAM\
    \ utilizes the attacked packet detection algorithms (APDA)\ndeployed in the PSAM,\
    \ as shown in Figure 4. The APDA is utilized to capture all forms of attacks\n\
    categories, including HDSA and all other forms of associated attacks with VANET,\
    \ as identiﬁed with\nthe PSAM. The HDSA categories include PD/FI, DoS JSA, and\
    \ RCRCO, which would require high\nmemory computation and high bandwidth. Figure\
    \ 4 depicts the PSAM of this research, whereby the\nAPDA method has been implemented.\
    \ The APDA method used is attached through every RSU and\nthe FS via a packet\
    \ detection mechanism that distinguishes exact message positions on the path of\n\
    the vehicle. It also utilizes ESA communication range (ESACR), which has the objective\
    \ of evaluating\nend-to-end delay and jitter experienced in the network.\nIn addition,\
    \ one of RSU’s main job functions include serving as a gateway for the PSAM for\n\
    all vehicle communication. The RSU also coordinates with FS to disseminate secure\
    \ transmissions\nof V2V communication. The RSU is also connected with the FS logically\
    \ through wireless or wired\nmeans. After the detection of vehicle position, the\
    \ information or messages are derived based upon\nthe eﬀectiveness of the utilization\
    \ of the above two attacks models, which include the DoS attack\nmodel (DAM) and\
    \ jamming attack model (DJSAM). These two models (DAM and DJSAM) are together\n\
    known as the HDSA model (HDAM). These attack models are deployed for the proposed\
    \ scheme\nfor detection of the HDSA and other attacks, discussed previously in\
    \ Section 3. HDAM models, as\ndepicted in Figures 2 and 3, utilize RSUs and the\
    \ FS to process the communication. Thus, HDAM\nutilizes the IEEE 802.11p beacons\
    \ and signals for vehicle communication. IEEE 802.11p beacons\nemploy the devices\
    \ in the VANET, which have on-board units (OBUs) and Tamper Proof Devices\n(TPDs).\
    \ These are used to store the comprehensive information for the vehicles, such\
    \ as position,\nspeed, etc. The position of the vehicles is identiﬁed by the velocity\
    \ of the vehicles, frequency of the\nvehicles, the vehicle position, and the number\
    \ of packets sent to the vehicles. The vehicle position\nidentiﬁcation utilizes\
    \ the following communication processes: vehicle-to-vehicle (V2V) communication,\n\
    the vehicle-to-road-side unit (V2RSU), and the inter-roadside-communication unit\
    \ (RSU2RSU), as\nshown in Figure 4. The communication process also encompass the\
    \ relay of IEEE 802.11p beacons that\nutilize hybrid multicast/broadcast and unicast\
    \ data transmission. The communication process also\nsensitizes awareness for\
    \ road safety and driver vigilance.\nElectronics 2019, 8, x FOR PEER REVIEW \n\
    12 of 35 \nmeans. After the detection of vehicle position, the information or\
    \ messages are derived based upon \nthe effectiveness of the utilization of the\
    \ above two attacks models, which include the DoS attack \nmodel (DAM) and jamming\
    \ attack model (DJSAM). These two models (DAM and DJSAM) are \ntogether known\
    \ as the HDSA model (HDAM). These attack models are deployed for the proposed\
    \ \nscheme for detection of the HDSA and other attacks, discussed previously in\
    \ Section 3. HDAM \nmodels, as depicted in Figures 2 and 3, utilize RSUs and the\
    \ FS to process the communication. Thus, \nHDAM utilizes the IEEE 802.11p beacons\
    \ and signals for vehicle communication. IEEE 802.11p \nbeacons employ the devices\
    \ in the VANET, which have on-board units (OBUs) and Tamper Proof \nDevices (TPDs).\
    \ These are used to store the comprehensive information for the vehicles, such\
    \ as \nposition, speed, etc. The position of the vehicles is identified by the\
    \ velocity of the vehicles, frequency \nof the vehicles, the vehicle position,\
    \ and the number of packets sent to the vehicles. The vehicle \nposition identification\
    \ utilizes the following communication processes: vehicle-to-vehicle (V2V) \n\
    communication, the vehicle-to-road-side unit (V2RSU), and the inter-roadside-communication\
    \ unit \n(RSU2RSU), as shown in Figure 4. The communication process also encompass\
    \ the relay of IEEE \n802.11p beacons that utilize hybrid multicast/broadcast\
    \ and unicast data transmission. The \ncommunication process also sensitizes awareness\
    \ for road safety and driver vigilance. \n \nFigure 4. Proposed system architecture\
    \ model (PSAM) for the proposed scheme. \nIn the PSAM, when the packet is not\
    \ attacked, then the V2V communication, V2RSU, RSU2V, \nand RSU2RSU communication\
    \ will not track the path in end-to-end delay of the exact vehicle. This \ncapability\
    \ includes the tendency to reduce communication overhead (CO) in the PSAM. An\
    \ algorithm \nhas been designed on the basis of requirements as per the variations\
    \ in the positions of vehicles in \nthe VANET. The identification of the attacked\
    \ packets can be done by V (velocity) and F (Frequency); \nλ is a co-efficient\
    \ that has been determined by the characteristics of the road and Vmax is the\
    \ \nmaximum Speed,m as shown in the Equation (1): \nFigure 4. Proposed system\
    \ architecture model (PSAM) for the proposed scheme.\nElectronics 2019, 8, 776\n\
    13 of 36\nIn the PSAM, when the packet is not attacked, then the V2V communication,\
    \ V2RSU, RSU2V,\nand RSU2RSU communication will not track the path in end-to-end\
    \ delay of the exact vehicle. This\ncapability includes the tendency to reduce\
    \ communication overhead (CO) in the PSAM. An algorithm\nhas been designed on\
    \ the basis of requirements as per the variations in the positions of vehicles\
    \ in the\nVANET. The identiﬁcation of the attacked packets can be done by V (velocity)\
    \ and F (Frequency); λ is a\nco-eﬃcient that has been determined by the characteristics\
    \ of the road and Vmax is the maximum\nSpeed, m as shown in the Equation (1):\n\
    F = λ∗\f\f\f\fV − vmax\n2\n\f\f\f\f\n(1)\nwhere F is the number of packets unicast\
    \ and multicast (or broadcast) per second. The identiﬁcation of\nthe attacked\
    \ packets is done with the below conditions:\nThe ranges of F and V are high,\
    \ as the vehicle’s position varies instantly.\nThe ranges of F and V are low,\
    \ as the vehicle’s position does not vary instantly.\nThe algorithm is based upon\
    \ the variation in frequency, position, and velocity. Algorithm 1 is\nused for\
    \ the detection of attacked packets.\nAlgorithm 1. Detection of all attacked packets\
    \ based on hybrid DoS attacks (HDSA) and other attacked\npackets in the HDSA model\
    \ (HDAM).\n1.\nfunction RECOGNIZE (attacked packet for HDSA in the models).\n\
    2.\nStart\n3.\nDiscover F = λ∗\f\f\fV − vmax\n2\n\f\f\f\n4.\nIf (F ≥ high && V\
    \ ≥ high) then\n5.\nrecognize (Attacked packet)\n6.\nset attacked packet detection\
    \ Alg (req) then\n7.\nStart when validated (request)\n8.\nreturn true\n9.\nelse\n\
    10.\nif (F ≤ low && V ≤ low) then\n11.\nreturn invalid request\n12.\nelse\n13.\n\
    set attacked packet detection Alg (req)\n14.\nend if\n15.\nend if\n16.\nend\n\
    17.\nend\nThe above algorithm can be applied prior to the veriﬁcation time and\
    \ to increase the security. The\nalgorithm is utilized for detection of unacceptable\
    \ requests with the attacked packet. It can also be\nutilized to avoid the end-to-end\
    \ delay CO on the path of vehicles in the network. It is also worth noting\nthat\
    \ establishment of a safe and secure root is another matter, and sending the data\
    \ in secure manner is\nalso another matter. Even if the roots are safe, they cannot\
    \ be 100% trusted. The proposed scheme\nmodel utilizes a Vehicular RSA algorithm\
    \ (VRA) type at the transmitter end. The transmitting node also\nshares a key\
    \ to the universal port (a port that keeps an eye on data sharing and vehicle\
    \ information),\nwhich is established at the center of the network. The receiving\
    \ node has the same key, which is shared\nby the transmitting node, but obviously\
    \ there must be an intermediator who can verify it. The central\nport plays the\
    \ role of the intermediator. The receiving node and the transmitting node both\
    \ send their\nkey with the added registration number of the vehicle to the central\
    \ port. Suppose the key is 6612\nElectronics 2019, 8, 776\n14 of 36\nand the registration\
    \ number of the transmitter is 31, then the shared key will be 6612 + 31 = 6643.\n\
    The receiver will also show 6612, and assuming that the registration number of\
    \ the receiver is 45,\nthen the key which is shared by the receiver will be 6612\
    \ + 45 = 6657. The central port subtracts the\nregistration number from both the\
    \ sender and transmitter shared value. If after the subtraction both\nshare the\
    \ same common key, the decryption key is shared by the central port.\nThe vehicular\
    \ RSA encryption algorithm used at the transmitter end to further secure the network\n\
    given as Algorithm 2.\nAlgorithm 2. Vehicular RSA Encryption Algorithm.\n1.\n\
    if Sender vehicle Sv creates a key then\n2.\nreceiver vehicle Rv and Sv creates\
    \ two large prime numbers (P and Q) then//note that P and Q are each\nabout same\
    \ number of digits long, and are selected such that their product is long\n3.\n\
    set Sv and Rv to determine the value of large number N using, N = PQ then\n4.\n\
    Rv and Sv Creates the value M//using the given expression below, Euclidean algorithm\n\
    5.\nM = phi (N) = (P − 1) (Q − 1)\n6.\nif Sv and Rv select any integer value E\
    \ then\n7.\nE = positive integer//E lies between, 0 < E < M\n8.\nfunction GCD\
    \ (M, E) = 1//(GCD is Greater Common Divisor)\ninput: Sv and Rv calculate the\
    \ value of D\nOutput: The quotient and remainder of M and E\nIf (E × D) = 1 (mod\
    \ M) then\n(E × D) mod M = 1 &\n9.\nif Sv and Rv create the Public key: E, N then\n\
    10.\nset Sv and Rv to create Private Key using D and N\nEncryption/Veriﬁcation:\n\
    11.\nif Sv and Rv can utilize original plain text (a block value) = X ... X <\
    \ N then\n12.\nSv and Rv obtain Ciphertext = C ... C = (XE) mod N\nend if\n13.\n\
    Decryption/Signing:\n14.\nif Sv and Rv Utilize Ciphertext = C then\n15.\nSv and\
    \ Rv utilizes Deciphertext = Y\n16.\nend if\n17.\nend if\n18.\nend if\n19.\nend\
    \ if\n20.\nend\nThe proposed vehicular RSA is an algorithm used by modern fog\
    \ computing and cloud-based\ntechniques to encrypt and decrypt packet data during\
    \ the data transmission. It is an asymmetric\ncryptographic algorithm. Asymmetric\
    \ means that there are two diﬀerent keys. This is also called\npublic key cryptography\
    \ because one of the keys can be given to everyone. The other key must be\nkept\
    \ private.\nFigure 5 represents the authentication process of data packets using\
    \ the vehicular RSA encryption\nalgorithm. The transmission of data packets from\
    \ the transmitting vehicle or node to the receiving\nvehicle or node is represented\
    \ by an arrow. Every vehicle in VANET comprises an individual private\nkey generated\
    \ by each node along with the public key. The public key is same for every node,\
    \ whereas\nthe private key is diﬀerent. Therefore, whenever a node wants to transmit\
    \ the data, a private key\nalong with the public key must be generated and transmitted\
    \ along with the packet. In the case where\nthe key is matched, it means that\
    \ the node is genuine and the transmitting node transmits the data,\notherwise\
    \ the node is considered an attacker node and the route is changed without forwarding\
    \ data\nto the attacker node.\nElectronics 2019, 8, 776\n15 of 36\n \ng\np\ny\n\
    y\np\nindividual private key generated by each node along with the public key.\
    \ The public key is same for \nevery node, whereas the private key is different.\
    \ Therefore, whenever a node wants to transmit the \ndata, a private key along\
    \ with the public key must be generated and transmitted along with the \npacket.\
    \ In the case where the key is matched, it means that the node is genuine and\
    \ the transmitting \nnode transmits the data, otherwise the node is considered\
    \ an attacker node and the route is changed \nwithout forwarding data to the attacker\
    \ node. \n \nFigure 5. Authentication of data packets using vehicular RSA encryption\
    \ algorithm. \nRn \nTn \nPacket data \ntransmission \nTransmitting \nnode \nReceiving\
    \ \nnode \nFigure 5. Authentication of data packets using vehicular RSA encryption\
    \ algorithm.\nThe process of authentication of data packets in the proposed scheme\
    \ models are also required\nto be extended for further investigation on storage\
    \ of data in a model, based upon the ESA, which\nis determined based upon the\
    \ DJSAM elliptical segment transmission range. This is due to the fact\nthat there\
    \ is high anticipation of HDSA that can be identiﬁed in the ESA that would require\
    \ further\ninvestigation within a speciﬁed transmission range in VANET. In addition,\
    \ Vehicular Fog Computing\nand Cloud-based (VFC) integration, which utilize ESA,\
    \ are important in the network design. These\nare used to solve any limitations\
    \ in storage and eﬃcient computation in VANET. VFC should also\nbe deployed in\
    \ the elliptical segment area transmission range (ESATR) in order to also investigate\n\
    trustworthiness, using the storage prevention mechanism in the proposed scheme\
    \ network, which will\nbe investigated subsequently.\n4.2. Fog Computing (FC)\
    \ Storage Preventive Model\nVANET is mainly designed to optimize the communication\
    \ network between the vehicles. Due to\nthe high movement of the vehicles, Fog\
    \ Computing and cloud integration (VFC) has gained attention\nin this area. Fog\
    \ Computing that denotes VFC can store a lot of data, which can be reused and\
    \ can be\naggregated to prevent time succession searches, as the vehicles have\
    \ a lot of on-board storage [37].\nBroadcasting data for vehicles in the network\
    \ diﬀer, based upon fog computing status. When the\nvehicle status is in the state\
    \ of being elected for communication, in which the vehicles discover the\ndecision\
    \ of subsequent state on vehicle location information and speed, broadcasting\
    \ of vehicles data\npackets (dp) are considered so that they arrive at CM (Cloud\
    \ member) within the network. When the\nCL (Cloud leader) produces data packets,\
    \ it conﬁrms through the information acquired from vehicles if\npackets are either\
    \ received eﬀectively or not. When the vehicles in the cloud have the data packets,\
    \ then\nvehicles verify the packet source. When the source is from the parent\
    \ cloud, they multicast the data\npacket to the cloud member, otherwise, the packet\
    \ is taken from the vehicle as the state election mode.\nLater, vehicles unicast\
    \ the received packets towards the parent cloud to send the packet until\npackets\
    \ arrive at the cloud leader, which discloses the vehicle information. Accordingly,\
    \ as shown in\nthe below algorithms, if the cloud leader produces a data packet,\
    \ initially it veriﬁes the packet source.\nWhen the data packet approaches from\
    \ enode-B (an element of the long term evolution (LTE) radio\naccess network),\
    \ the cloud leader transfers the data packet to each cloud member or the packet\
    \ is sent\nfrom the parent cloud (prc) member. In this circumstance, the cloud\
    \ leader sends the data packet to the\ncloud member and generates the LTE data\
    \ packet (LTEdp), which transfer the packets to enode-B with\nElectronics 2019,\
    \ 8, 776\n16 of 36\nthe novel original received packet from the vehicle. In the\
    \ end, the packets are updated as cloud leader\nvehicle information (CLvInf).\n\
    The PSAM utilizes the multicast/broadcast and unicast modelling in order to fulﬁll\
    \ the requirement\nas needed. Obviously, the multicast architecture incurs some\
    \ latency and as it broadcasts the data, it\nwill consume some time.\nAlgorithms\
    \ 3, 4, and 5 decrease the issues of the broadcasting storm within the network\
    \ by\nlessening the iterated data broadcasting and by keeping less overhead information.\
    \ They also broadcast\nthe speciﬁc data using appropriate vehicles or nodes that\
    \ also decrease the network load. The reduction\nof network load action taken\
    \ is necessary due to consideration of overwhelming messages that may\noccur as\
    \ a result of all forms of attacks, including HDSA and DoS JSA in the network.\
    \ They also lessen\nthe problem of network disconnection by lessening the regular\
    \ downloading and subscription to the\nnetwork [38]. Table 1 depicts the notation\
    \ and descriptions of the algorithms and the models terms.\nAlgorithm 3. IEEE\
    \ 802.11p-LTE CM.\n1.\nOn dp generating or receiving: //on receiving or generating\
    \ the data packets\n2.\nﬁlter Iddata or reqdata; //Filter on Packets\n3.\nIf (Iddata,\
    \ reqdata) ϵ CLvInf &\n4.\nIf dp is from prc then\n5.\nmulticast on dp to CM;\
    \ //Multicast situation\n6.\nelse\n7.\nunicast dp to prc CL //Unicast situation\n\
    8.\nUpdate vInf;\n9.\nend if\n10.\nend if\n11.\nend\nAlgorithm 4. IEEE 802.11p-LTE\
    \ Cloud leader (CL).\n1.\nfor on dp generating or receiving then\n2.\nﬁlter Iddata\
    \ & reqdata;\n3.\nIf (Iddata, reqdata) ϵ CLvInf &\n4.\nIf (On dp is from eNodeB)\
    \ then\n5.\nsend on dp to CM;\n6.\nelse\n7.\nbroadcast dp to CM\n8.\ndevelop LTEdp\
    \ and send to eNodeB then\n9.\nUpdate vInf;\n10.\nend if\n11.\nend if\n12.\nend\
    \ for\n13.\nend\nElectronics 2019, 8, 776\n17 of 36\nAlgorithm 5. IEEE 802.11p-LTE\
    \ eNodeB.\n1.\nfor dp generating or receiving;\n2.\nﬁlter Iddata and req_data;\n\
    3.\nif (Iddata, reqdata) ϵ (CL, vInf) then\n4.\nbroadcast LTEdp to eNodeB-fog\
    \ then\n5.\nbroadcast LTEdp to CL then\n6.\nsend to server-fog then\n7.\nbroadcast\
    \ LTEdp to eNodeB then\n8.\nbroadcast LTEdp to CL\n9.\nUpdate eNodeB;\n10.\nend\
    \ for\n11.\nend if\n12.\nend\nTable 1. Notations and descriptions utilized in\
    \ the algorithms and models.\nNotations\nDescriptions\ndp\nData packet\nCM\nCloud\
    \ member\nLTE\nLong term evolution\nCL\nCloud leader\nprc\nParent cloud\nenode-B\n\
    Element of LTE network\nLTE_Datapacket\nLTE Data packet\nT\nTime of transmission\n\
    Rv\nReceiving vehicle\nSv\nSending vehicle\n(rv&ap)\nReceiver with access point\n\
    (ap&s)\nAccess point and server\n(s&frv)\nServer with feedback reporting from\
    \ vehicle\nt(p)\nServer processing time\nCLvInf\nCloud leader vehicle information\n\
    LTEDatapacket\nLTE data packet\nIddata\nIdentiﬁed data packet\nreqdata\nRequested\
    \ data packet\nVInf\nVehicle information\nVANET\nVehicular ad hoc network\nVCC/VCF\n\
    Vehicular cloud computing/Fog computing\nSUMO\nSimulation of urban mobility\n\
    SDN\nSoftware deﬁne network\nFCM\nFuzzy-c mean\nIoE\nInternet of everything\n\
    MGA\nModelling to generate alternative\nV\nVelocity\nF\nFrequency\nλ\nRoad characteristic\
    \ coeﬃcient\nVmax\nMaximum speed\nROI\nRegion of interest\nAlg(r)\nAlgorithm request\n\
    FFBPNN/GA\nFeed forward back propagation neural network\nutilizing genetic algorithm\n\
    DoS\nDenial of service\nAKA\nAuthentication and key agreement\nElectronics 2019,\
    \ 8, 776\n18 of 36\nIn order to investigate HDSA and DoS JSA, including other\
    \ attacks, using the PESATRM model,\nthe fog server (FS) and fog level (FL) authentication\
    \ preventive mechanism is important, which should\nbe utilized in the Elliptical\
    \ Segment Area Transmission Range Model (ESATRM), as explained below.\n4.3. Elliptical\
    \ Segment Area Transmission Range and Authentication Prevention Model\nIn order\
    \ for vehicles to communicate eﬀectively and get authenticated, a speciﬁed transmission\n\
    range of vehicles, which also utilize HDAM, is designated in the network. The\
    \ designated transmission\nrange is based upon the elliptical segment area (ESA)\
    \ transmission range (ESATR), which utilizes V2V\nstandardized road safety information\
    \ exchange (SRSIE). The ESATR requirement is also based upon\na model adoption\
    \ in VANET. Based upon the model, the contribution of HDAM is also important\n\
    for investigation. The model requires a further authentication prevention mechanism\
    \ in the network.\nTherefore, this research investigates a model in VANET known\
    \ as the proposed scheme elliptical\nsegment transmission range model (PESATRM).\
    \ PESATRM includes the tendency to utilize a secure\nauthentication prevention\
    \ method, which is integrated in the VANET communication process design.\nThis\
    \ is also used to mitigate all forms of attacks, including HDSA and DoS JSA attacks.\
    \ Further secure\nauthentication in the PESATRM can be achieved through FS and\
    \ RSU deployment. In the PESATRM,\nthe V2V communication process utilizes IEEE\
    \ 802.11p beacon transmission to communicate and also\nsecure the network links.\
    \ This provides the capability for each vehicle to exchange messages securely\n\
    within a speciﬁed ESATR. Based upon this, vehicles move along in the same direction\
    \ of travel to their\nintended destination (as shown in Figure 6). Therefore,\
    \ the PESATRM has been developed from a\nmodiﬁed circular segment area model (CSAM)\
    \ adopted in a previous study [39].\nHowever, investigation revealed that the\
    \ CSAM is insecure based upon limitations in HDSA and\nDoS JSA and other forms\
    \ of attack investigation. In addition, another limitation worth noting is that\n\
    the CSAM design does not utilize fog computing and cloud-based (VFC) integration\
    \ investigation.\nTherefore, it is suggested that the PESATRM communication process\
    \ should be designed to include\nVFC employing authentication/KDE (AKDE) to further\
    \ secure the network. In addition, it is estimated\nthat designing a secure PESATRM\
    \ would also prevent high incidences of communication overhead\n(CO). CSAM limitations\
    \ also include increased communication overhead (CO).\nElectronics 2019, 8, x\
    \ FOR PEER REVIEW \n18 of 35 \nalong in the same direction of travel to their\
    \ intended destination (as shown in Figure 6). Therefore, \nthe PESATRM has been\
    \ developed from a modified circular segment area model (CSAM) adopted in \na\
    \ previous study [39]. \nHowever, investigation revealed that the CSAM is insecure\
    \ based upon limitations in HDSA \nand DoS JSA and other forms of attack investigation.\
    \ In addition, another limitation worth noting is \nthat the CSAM design does\
    \ not utilize fog computing and cloud-based (VFC) integration \ninvestigation.\
    \ Therefore, it is suggested that the PESATRM communication process should be\
    \ \ndesigned to include VFC employing authentication/KDE (AKDE) to further secure\
    \ the network. In \naddition, it is estimated that designing a secure PESATRM\
    \ would also prevent high incidences of \ncommunication overhead (CO). CSAM limitations\
    \ also include increased communication overhead \n(CO). \nα -β \nM\nN\nO\na\n\
    b\nLegend\nNeighbor Vehicle\nSegment Vehicle\nOrigin Vehicle\nDestination \nVehicle\n\
    Segment Area\nR\nTransmission \nrange\nDestination \nRegion\nRSU\nFog \nServer\n\
    V2RSU \nIEEE \n802.11P \nsignal\nV2V Signal\nx\n \nFigure 6. Vehicles in the Elliptical\
    \ Segment Transmission Range Model (ESATRM). \nIn the design of PESATRM, we require\
    \ that integration with the PSAM model is possible, which \nshould include VFC.\
    \ VFC integration provides enhancement in the end-to-end delayed path attacked\
    \ \npacket detection process. This is based upon the fact that the neighbor-vehicle-to-neighbor-vehicle\
    \ \n(NV2NV) communication process requires further AKDE. Moreover, the SRSIE process\
    \ that prevents \nCO due to the end-to-end delay/jitter path in vehicles is anticipated\
    \ in the network, which requires \ntrustworthiness. Secure VFC and FS integration\
    \ provide secure real-time detection of all other forms \nof attacks, including\
    \ HDSA and DoS JSA, which utilize the IEEE 802.11p beacon transmission relay \n\
    process in a specified ESATR. \nFurthermore, in the design of the PESATRM, rapid\
    \ topology changes in VANET are important \nf\ni\nti\nti\nThi i b\nHDSA\ni\nl\
    \ di\nD S JSA\nd\nth\nl\nbiliti\ni\nt\nFigure 6. Vehicles in the Elliptical Segment\
    \ Transmission Range Model (ESATRM).\nIn the design of PESATRM, we require that\
    \ integration with the PSAM model is possible, which\nshould include VFC. VFC\
    \ integration provides enhancement in the end-to-end delayed path attacked\npacket\
    \ detection process. This is based upon the fact that the neighbor-vehicle-to-neighbor-vehicle\n\
    (NV2NV) communication process requires further AKDE. Moreover, the SRSIE process\
    \ that prevents\nElectronics 2019, 8, 776\n19 of 36\nCO due to the end-to-end\
    \ delay/jitter path in vehicles is anticipated in the network, which requires\n\
    trustworthiness. Secure VFC and FS integration provide secure real-time detection\
    \ of all other forms\nof attacks, including HDSA and DoS JSA, which utilize the\
    \ IEEE 802.11p beacon transmission relay\nprocess in a speciﬁed ESATR.\nFurthermore,\
    \ in the design of the PESATRM, rapid topology changes in VANET are important\
    \ for\ninvestigation. This is because HDSAs, including DoS JSA and other vulnerabilities,\
    \ are eminent in the\nair, or in the open environment in which VANET deployment\
    \ occur. Therefore, the PESATRM is also\ndesigned to detect traﬃc in DoS JSA and\
    \ its associated vulnerabilities faster and more accurately. The\nnetwork topology\
    \ design should utilize VFC and AKDE, which are able to store large volumes of\
    \ data\nutilized for secure delivery of SRSIE. Based upon this provision, it is\
    \ possible for the proposed scheme\nto detect and mitigate HDSA, including DoS\
    \ JSA and associated vulnerabilities that would incur CO in\nthe network. In addition,\
    \ VFC provides increased space search for SRSIE in the network and requires\n\
    hybrid optimization algorithms (HOA).\nHOA deployment and integration in VANET\
    \ is important. It provides swarm intelligence and\nutilizes a heuristic approach\
    \ in solving VFC limitations. Based upon this, we require that integration of\n\
    PSAM and PESATRM models should include intelligence for eﬃcient ESATR. HOA integration\
    \ with\nVFC utilizes HOA heuristics to solve problems in the network, such as\
    \ end-to-end delay and jitter\nperformance evaluation. Based upon this, the dynamic\
    \ transmission range is provided in the network.\nDynamic transmission is usually\
    \ more eﬀective in maintaining connectivity. HDSAs, including DoS\nJSA and all\
    \ other forms of DoS attacks, can be detected and eliminated from the network\
    \ when a\nspeciﬁed ESATR is deployed in the PSAM and the PESATRM integration.\
    \ We also anticipate that\nthe design of ESATR needs to be more secure. Comparatively,\
    \ the circle segment transmission range\n(CSAM) that PESATRM was modiﬁed from\
    \ is more conﬁned. Therefore, we anticipate that the CSAM\nwill incur a lot of\
    \ trustworthiness concerns, since it does not detect and eliminate HDSA and its\n\
    associated DoS JSA in the proposed scheme models. Figure 6 is used to explain\
    \ the deployment of the\nPESATRM. It is anticipated logically for the PESATRM\
    \ to utilize AKDE.\nIn Figure 6 (as shown below), the vehicles within the ESATR\
    \ are also known as neighbors. These\nneighbor vehicles (NV) are secure in the\
    \ network using the AKDE method. NVs are also required to keep\none global key\
    \ (Gk). The Gk provides the requirement in authentication of the NVs in the models\
    \ (PSAM\nthe PESATRM). The method of acquiring the Gk, which also represents the\
    \ public key, is given through\nFS and the RSU. In addition, secure sharing of\
    \ the Gk is important. This must be complied with for every\nNV using NV2NV communication.\
    \ In addition, secure sharing of the Gk includes SRSIE accurately.\nTherefore,\
    \ implementing a further authentication mechanism is required in the network,\
    \ which is\nalso investigated in the models. In addition, the objective of the\
    \ NV2NV communication is to utilize\nauthentication of each NV in the PESATRM.\
    \ This veriﬁes that the communicating NV entities are all\nneighbors with each\
    \ other. Subsequently, NVs exchange “hello” messages to initiate the communication\n\
    process. Thus, NVs are capable of utilizing suﬃcient time in the NV2NV communication\
    \ to be able to\ntransmit SRSIE. This successfully leads to processing of standardized\
    \ road safety traﬃc emergency\ninformation (SRSIE) exchange for VANET in the same\
    \ ESATR.\nBased upon this, Figure 6 also depicts the PESATRM, which utilizes V2Vcommunication.\
    \ The\nPESATRM NVs exchange “hello” neighbor messages. The hello message exchanged\
    \ by NVs is\ninitially broadcast or multicast and ﬁnally unicast using NV2NV and\
    \ secure NV communication.\nNV2NV and secure NV communication processes include\
    \ neighbor vehicles (NV), origin vehicles\n(OV), and the destination vehicle (DV).\
    \ Each NV that communicates with other NVs initially gets\nauthenticated. Afterwards,\
    \ NVs transfer the Gk securely with each other. Subsequently, NVs or\nNV2NV simultaneously\
    \ transmit the SRSIE with each NV.\nThe message transmitted is also used to obtain\
    \ the direction, speed, and time information of each\nNV. Since the NV2NV communication\
    \ process includes secure sharing of the common Gk and SRSIE,\nthese are designated\
    \ to occur in the proposed ESA. Each NV segment S is as shown in Figure 6 with\n\
    Electronics 2019, 8, 776\n20 of 36\nthe dark black lines. The probability analysis\
    \ of the proposed scheme PESATRM will be determined\nsubsequently below. For now\
    \ it is important to determine the ESATR as follows:\nFrom Figure 6, the area\
    \ of the ellipse is A = b\naπa2 = πab.\nAn elliptic sector is the region bounded\
    \ by an arc and line segments connecting the center of the\nellipse (which is\
    \ the origin in the ﬁgure) and the arc endpoints.\nTo determine the elliptic segment\
    \ area, we let lines x = acos ∝ and x = acosβ be perpendicular to\nthe x − axis.\
    \ The coordinates of M and N are (acos ∝, bsin ∝) and (acosβ, bsinβ), respectively.\
    \ Therefore,\nthe area of the elliptic sector MON is determined as:\nSegment area\n\
    SArea = [MON] = b\na\n ∝ −β\n2π\n!\nπa2 = 1\n2(∝ −β)ab.(α > β)\n(2)\nAn elliptic\
    \ segment area is bounded by an arc and the chord that connect the arc’s endpoint.\n\
    Hence, the elliptic segment area is given in Equation (3) as:\nSArea = [MON] =\n\
    ab\n2 (∝ −β) − b\na(a2\n2 sin(∝ −β)) = ab\n2 ((∝ −β) − sin(α − β))\n(3)\nFigure\
    \ 6 also demonstrates the movement of vehicles in the designated PESATRM. The\
    \ PESATRM\nutilizes maximum transmission range. It is based upon speciﬁed NV relationships\
    \ with each other\nNV. Based upon this, each NV is required to transmit the IEEE\
    \ 802.11p beacon’s “hello” message with\nevery other NV. The NVs also obtain their\
    \ speed, location, direction, and time information. At the\nsame time, further\
    \ AKDE is required in NV2NV communication. AKDE is initiated against all forms\n\
    of attacks, including HDSAs, such as DoS JSA attack, which occur at diﬀerent speeds,\
    \ directions, and\ntimes. It is also achieved through the FS and the RSU data\
    \ transmission and authentication process\nbased upon each NV, OV, and DV (NODV)\
    \ communication process, as follows.\n4.4. Fog Server (FS) Further Authentication\
    \ Process in the Elliptical Segment Area\nThe models encompass PSAM and PESATRM.\
    \ These models utilize FS and RSU for further\nauthentication processes. This\
    \ is in order to ensure safe arrival of NODVs that travel in the same\nESA. The\
    \ authentication process involves two-fold performances. In the ﬁrst performance,\
    \ V2V\ncommunications are authenticated with every other NODV. In addition, they\
    \ also share the common\nGk securely. Based upon this, each NODV is capable of\
    \ securely acquiring the Gk by FS and the RSU.\nThe authentication (AKDE) and\
    \ secure SRSIE of NODV ensures that all vehicles that fall in the same\nESATR\
    \ have achieved further trustworthiness protection in the network. Based upon\
    \ the PESATRM\nmodel, we also assume that the use of Vehicular RSA (VRSA) public\
    \ key deployment is important.\nThis include utilizing the common Gk as each NODV\
    \ public key.\nEach NODV vehicle or node is also required to pass a VRSA authentication\
    \ process check (this was\nformally achieved previously through the PSAM). The\
    \ following further authentication preventive\nmechanism, which also utilizes\
    \ the Gk, is formally deployed in the FS and the RSU authentication\nprocess,\
    \ as follows. This also utilizes the following assumptions that are important\
    \ for the FS and RSU\nfurther authentication process of the PESARTM integration\
    \ with PSAM models, as follows:\n•\nFS and RSU message authentication denotes\
    \ VANET safety message announcement\nas standardized.\n•\nPSAM integration with\
    \ the PESATRM utilizes the FS parameters, which include Gk, C, and T,\nwhere Gk\
    \ is the global public key of the sender vehicle or NODV, C is CertXn (n denotes\
    \ possible\npseudonyms of vehicles of entity X, whereby one is also a pseudonym\
    \ of NODV and others are\ncollected pseudonyms of other NVs), and T denotes the\
    \ authentication tag, which includes the\nintegration of PSAM and PESATRM, which\
    \ is installed through RSU and the FS.\nElectronics 2019, 8, 776\n21 of 36\n•\n\
    Based upon each possible signer vehicle that occurs in the PESATRM, a validation\
    \ σX is important.\nHere, σX denotes the PESATRM signature (PESATRMS) created\
    \ by vehicle entity X. When a\nvehicle entity Y is authenticated by a symmetric\
    \ encryption with key Gk = K, it is written as:\nEGk(Y)\nThe FS and RSU further\
    \ authentication algorithm is given as Algorithm 6.\nAlgorithm 6. Fog Server Further\
    \ Authentication Algorithms for Proposed Models.\n1.\nif Neighbour vehicle A (NVA)\
    \ sends authenticated safety message (ASM) and shares Gk through an initial\n\
    broadcast/multicast and ﬁnally unicast to all vehicles within same ESATR, based\
    \ upon the advocated\nscheme then\n2.\nAssume neighbour Vehicle B (NVB) is in\
    \ the same ESATR that also represents the next single hop vehicle\n(NSHV), which\
    \ also utilizes this application and receives the ASM from NVA &\nA.\nif NVB =\
    \ NSHV then\nB.\ngenerates a random key K and computes the proposed PSAM and the\
    \ PESATRM parameters Gk, C, T;\nC.\ncreates the PESATRMS σNVB over the calculated\
    \ PSAM and PESATRM parameters through its current\napplication-speciﬁc pseudonym,\
    \ including n − 1 collected pseudonym, then\nD.\nSet NVB to encrypt PESATRMS with\
    \ the chosen key K then\nE.\nsend resulting ciphertext through the PSAM and PESATRM\
    \ parameters;\n3.\nif NVB → NVB: Gk, C, T then\n4.\nset\nEGk(CertNVB1 , . . .\
    \ , CertNVBn,xNVB1 , . . . , xNVBn, σNVA)\n5.\nIf NVA → NVB then\n6.\nset EGk\n\
    \x10\nCertNVA1 , . . . , CertNVAn,xNVA1 , . . . , xNVAn, σNVB\n\x11\n7.\nend if\n\
    8.\nend if\n9.\nend if\n10.\nend\nIn the second performance, further FS and RSU\
    \ authentication processes are employed. Each V2V\ncommunication process utilizes\
    \ and transmits IEEE 802.11p beacons for SRSIE. This takes place so that\neach\
    \ NODV can also share and utilize SRSIE amongst themselves. This performance process\
    \ employ\nprobability analysis, including encryption/AKDE of each NV communication,\
    \ followed by successful\ndata exchange in the ESATR.\nVANET application models,\
    \ such as the PSAM and PESATRM integration, require an exchange\nof application-speciﬁc\
    \ trustworthiness data, which utilizes the secure Gk sharing. Thus, the data\n\
    exchanges must ﬁrst ensure that they have been protected from any form of HDSA,\
    \ including DoS JSA\nof NODV, which does not use the application. This enables\
    \ each communicating NODV that falls in\nthe same transmission range to become\
    \ convinced that each vehicle is eligible to securely obtain the Gk.\nMoreover,\
    \ vehicles also become securely authenticated and are capable of exchanging SRSIE\
    \ with each\nother accurately [40].\nThe probability analysis that encompass the\
    \ PSAM and the PESATRM integration for ﬁnding\neach NSHV also utilizes the proposed\
    \ scheme FS and RSU authentication algorithm for exchange of\nSRSIE. This occurs\
    \ in the encrypted non-shadowing environment (ENSE) region, as determined below.\n\
    4.5. Probability Analysis of Vehicles Based on Elliptical Segment Area Transmission\
    \ Range\nThis section discusses the probability analysis of vehicles based upon\
    \ PESATRM. The section\nalso includes utilization of the NSHV concept of authentication\
    \ based upon the FS and the RSU\nauthentication algorithm, and secure SRSIE. Based\
    \ upon this, NSHV links are set up to forward the\nattacked detected packet, utilizing\
    \ the transmission and relay of IEEE 802.11p beacons in the ESATRM.\nThis is based\
    \ upon the communication process of NV-to-NV utilized in the network. Based upon\
    \ this,\nElectronics 2019, 8, 776\n22 of 36\na sender NVA is required to ﬁnd at\
    \ least the NSHV NVB that is in the same ESATR. This is followed\nby authentication\
    \ and subsequent transmission of the SRSIE, which is based upon the PESATRM\n\
    deployment. NV/NODV that are present in the ESATRM utilize three parameters, namely\
    \ density λ,\nsegment angle (α − β), and transmission range R. The PESATRM probability\
    \ analysis has an objective\nof analyzing the impact of the parameters, (α − β),\
    \ and R. In addition, the PESATRM is also anticipated\nfor use where it is also\
    \ important for providing secure authentication. This secures each NV2NV\ncommunication,\
    \ and also sharing of Gk with individual NVs. The objective of utilizing sharing\
    \ of Gks\nthat fall in the same ESATR also include the probability analysis of\
    \ locating at least one NV for sharing\nof Gks in the segment area. This objective\
    \ can be achieved when diﬀerent values are assigned to (α − β)\nin increasing\
    \ order, until a NODV is found in the ESATR that would authenticate and also share\
    \ the\ncommon Gk with every other neighbor vehicle during the vehicle movement\
    \ of NODV in the ESATR.\nThe movement of NODV is considered to take place using\
    \ a two-dimensional network area. This\nis based upon the ESATR. NODV availability\
    \ in the network follows a Poisson distribution with NODV\ndensity λ. When considering\
    \ the mean density of NODV in the network, the number of NVs that\nare present\
    \ in the ESATR is obtained using a Poisson distribution. In addition, each NODV\
    \ arrival\nalso depends on how successfully it is able to initially be authenticated\
    \ with each other NV. It is then\nfollowed with the secure sharing of the Gk with\
    \ every other NODV vehicle. This also includes exchange\nof the standardized safety\
    \ and road emergency conditions with each driver or vehicle on the road.\nThe\
    \ proposed scheme uses NODV position to initially broadcast/multicast and ﬁnally\
    \ unicast\ninformation to other NVs that fall in the same ESATR. In addition,\
    \ it is presumed that the proposed\nscheme PESATRM probability analysis also utilizes\
    \ the attacked packet detection algorithm (APDA)\nthat was achieved in the PSAM.\
    \ This is in order to mitigate against HDSAs, including DoS JSA attacks,\nwhich\
    \ may be encountered in the ESATR. The proposed scheme PSAM, which is already\
    \ integrated\nwith the PESATRM, is also deployed together to prevent malicious\
    \ nodes becoming part of the network.\nThe NODV position information is represented\
    \ through both x and y coordinates on a plane using a\n2D network model.\nOptimal\
    \ transmission range investigation for VANET has been conducted by various researchers\n\
    in [41,42]. In those studies, it was revealed that transmission range requirements\
    \ in VANET decrease\nwith increases in vehicle density. High density vehicular\
    \ traﬃc situations require a smaller transmission\nrange. Moreover, we recall\
    \ that NV2NV communication would also require authentication and\nencryption of\
    \ data, including the sharing of the Gk in a non-shadow environment (ENSE). The\
    \ ENSE\navoids real-time conﬂict in transmissions of data authentication and exchange\
    \ of information in\nthe shadow area. Based upon this, neighbor vehicle transmissions\
    \ would result in collision and\ncongestion [43]. Therefore, we adopt our previous\
    \ proposed scheme, the ESATR detection process for\nDoS attacks [44]. By referring\
    \ to the eﬃcient transmission range for NV, we chose a transmission range\nbetween\
    \ 250 and 550 m. However, we consider the smaller transmission range of 250 m\
    \ as eﬀective.\nThis is because of reduced CO, which can be utilized in the elliptical\
    \ segment probability analysis of\nthe NV/NODV.\nWe consider X as the random variable,\
    \ which represents the number of NV/NODV present and\nlocated in the ESATR, whereby\
    \ each NV/NODV possesses the global key (Gk). After each NV/NODV is\nauthenticated\
    \ and shares the Gk securely, the probability PENSE\nSarea (X = n) in the presence\
    \ of n NV/NODV\nin the proposed ESATR, which utilizes encrypted SRSIE, in non-shadow\
    \ environment (ENSE) can be\nobtained in the given Equation (4) as:\nPENSE\nSarea\
    \ (X = n) = (λ × Sarea)n × e−(λ×Sarea)\nn!\n(4)\nSubstituting the value of Sarea\
    \ from Equation (3), we obtain Equation (4) as:\nElectronics 2019, 8, 776\n23\
    \ of 36\nPENSE\nSarea (X = n) =\n\n\n\x14\nλ\n\x1A\n( ab\n2 (∝−β)− b\n\
    a ( a2\n2 sin(∝−β))= ab\n2 ((∝−β)−sin(α−β))\n\e\x15n\nn!\n\n\n×e− λ{( ab\n\
    2 (∝−β)− b\na ( a2\n2 sin (∝−β))= ab\n2 ((∝−β)−sin (α−β))}\n(5)\nPENSE\nSarea\
    \ (X = 0) =\n\n\n\x14\nλ\n\x1A\n( ab\n2 (∝−β)− b\na ( a2\n2 sin(∝−β))=\
    \ ab\n2 ((∝−β)−sin(α−β))\n\e\x150\n0!\n\n\n×e− λ{( ab\n2 (∝−β)− b\na (\
    \ a2\n2 sin (∝−β))= ab\n2 ((∝−β)−sin (α−β))}\nPENSE\nSarea (X = 0) = e− λ{( ab\n\
    2 (∝−β)− b\na ( a2\n2 sin (∝−β))= ab\n2 ((∝−β)−sin (α−β))}\n(6)\nThe probability\
    \ of PENSE\nSarea (X ≥ 1) in the presence of at least one vehicle in the segment\
    \ area with\nencryptin and authentication and sharing of global key Gk in a non-shadowing\
    \ environment can be\nexpressed as given in Equation (7):\nPENSE\nSarea (X ≥ 1)\
    \ = 1 − e− λ{( ab\n2 (∝−β)− b\na ( a2\n2 sin (∝−β))= ab\n2 ((∝−β)−sin (α−β))}\n\
    (7)\nThe above PESATRM probability analysis model, which is integrated with the\
    \ PSAM, is proposed\nin addition to the message broadcast algorithms that were\
    \ investigated. These have been used\nto decrease the broadcasting storm in the\
    \ network.\nMoreover, the models’ integration reduces\ntrustworthiness concerns\
    \ in the network. The combined eﬀect of the PESATRM and algorithms also\nincrease\
    \ established trust in the network. This was possible through achieving an eﬃcient\
    \ ESATR.\nIn addition, the algorithms implemented in the proposed scheme models\
    \ PESATRM and PSAM also\nlessen the iterated broadcasting to keep less overhead\
    \ information and decrease the network load.\nThe process of using the PESATRM\
    \ and PSAM integration probability models and the\nbroadcast/multicast and unicast\
    \ algorithms to verify the network is secured from HDSAs, including\nDoS JSA and\
    \ other associated attacks. Even though the deployment of these models in the\
    \ scheme were\nsatisfactory, in order to make the model more eﬃcient for selection\
    \ of trustworthy vehicles or nodes in\nthe network, the Cuckoo/CSA (ABC) optimization\
    \ algorithm, which include swarm intelligence, is\napplied to select more trustworthy\
    \ nodes. This is based upon the probability of legitimate selection\nof the nodes\
    \ to be part of the network. Therefore, probability analysis speciﬁcation selection\
    \ using\nCuckoo/CSA (ABC) for selecting the legitimate nodes to be part of the\
    \ network communication process\nis determined as follows. Table 2 shows the Cuckoo/CSA\
    \ (ABC) speciﬁcation.\nTable 2. Cuckoo/CSA (ABC) speciﬁcation.\nCSA Population\n\
    Fitness Parameters Feedback\nTotal number of vehicular nodes in the coverage\n\
    elliptical segment region\nProbability of new vehicles as part of the network,\
    \ Vk\ni\nﬁtness value\nTo determine\nFitness value = Vk\ni\n(8)\nwhere V is the\
    \ vehicular node, k is evolved the from initial point (k = 0) to the total gen\
    \ iteration\nnumber, Cuckoo/CSA (ABC) has a powerful feature to generate new candidate\
    \ vehicle or node solutions\nto be part of the network. Based upon that approach,\
    \ a new candidate solution Vk+1\ni\n(i ∈ [1 . . . , N]) is\nproduced through disturbing\
    \ the current Vk\ni with a position change pi. N is the number of vehicular\n\
    nodes in the network. To obtain pi, random step si is generated through symmetric\
    \ Levy distribution\nusing an algorithm from a previous study [45].\nElectronics\
    \ 2019, 8, 776\n24 of 36\nFinally, the solution for a new vehicular node solution,\
    \ Vk+1\ni\n, is obtained using:\nVk+1\ni\n= Vk\ni + pi\n(9)\nThen, under replacement\
    \ of nodes a set of individual new nodes that should be part of the network\n\
    is probabilistically chosen and replaced with malicious or attacker nodes. Each\
    \ Vk\ni (i ∈ [1 . . . , N]) can\nbe chosen with a probability Pa ∈ [0, 1]\nThe\
    \ operation can be done with the following model:\nVk+1\ni\n=\n\nVk\ni\
    \ + rand.\n\x10\nVk\nr1 − Vk\nr2\n\x11\nwith probability Pa,\nVk\ni with probability\
    \ (1 − Pa),\n(10)\nwhere rand is a random number normally distributed, and r1\
    \ and r2 are random integers from 1 to N.\nAfter producing Vk+1\ni\nit must be\
    \ compared with its past value Vk\ni . If the ﬁtness value of Vk+1\ni\nis\nbetter\
    \ than Vk\ni , then Vk+1\ni\nis accepted as the ﬁnal solution. Otherwise, Vk\n\
    i is retained.\nThe procedure can be done through the following statement:\nVk+1\n\
    i\n=\n\nVk+1\ni\n,\nif f\n\x10\nVk+1\ni\n\x11\n< f(Vk\ni )\nVk\ni\n,\n\
    otherwise.\n(11)\nThis Cuckoo/CSA (ABC) selection with ﬁtness value Vk+1\ni\n\
    , as shown in the Equation (11) strategy,\ndemonstrates that only high quality\
    \ vehicular nodes that utilize relays of high IEEE 802.11p signals\n(best solution\
    \ near the optimal value) have the opportunity to interact with the RSU and the\
    \ FS to\ndeliver emergency feedback information, such as accidents and bad road\
    \ conditions, to alert road users.\nAfter the selection of the legitimate nodes\
    \ that are to be part of the network and after routes\nare discovered, assurance\
    \ in trustworthiness of the nodes in the network must be maintained, as\nshown\
    \ below.\n4.6. Trust Provision in the Proposed Scheme\nIn order to provide trust\
    \ in the network, it is anticipated that hybrid DoS attacks (HDSA),\nincluding\
    \ DoS JSA and other attacks that may be hard to detect in the proposed scheme\
    \ models, such as\nHDAM, PSAM, and PESATRM, have one solution that can also be\
    \ devised to evaluate the probability\ninformation received through a consensus\
    \ mechanism [46]. Thus, false information reaction due to\nthe HDSAs, including\
    \ DoS JSA and other attack, would require a vehicle to wait to receive given\n\
    information based upon binary numbers (ones and zeroes).\nLet us consider a vehicle\
    \ that transmits the information or message, where during the transmission,\n\
    HDSAs, including DoS JSA and all forms of attacks, occurs because of the neighboring\
    \ vehicles that\ndisturb or amend the actual information. To secure the network,\
    \ it is necessary to protect the network\nfrom all other forms of external attacks\
    \ as well. In order to determine the attacks in the network, past\ninformation\
    \ of the transmitting vehicles in the form of binary numbers are considered, on\
    \ the basis\nof which the genuine vehicle makes a decision if whether the driver\
    \ should consider the message as\ntrusted for the vehicle. When the number of\
    \ zeros is less than ones, the driver would consider the\nmessage as the genuine\
    \ message, or otherwise would ignore the message [47].\nVechiletrust =\nX\nnumber\
    \ of ones\n(12)\nTo decide how instantly the receiving vehicle would trust the\
    \ vehicle that transmits the message to the\nbase station (RSU and FS), the following\
    \ equation has been used:\nt (rv) =\nX\nt(rv&ap) + t(ap&S) + t(s&frv) + t(p)\n\
    (13)\nElectronics 2019, 8, 776\n25 of 36\nAs shown in the above equation, t (rv)\
    \ is the time to choose whether rv (receiving vehicle) could\ntrust the sv (sending\
    \ vehicle), t(rv&ap) is the time of transmission and reception with the access\
    \ points\nand vehicles, t(ap&S) is the time of transmission and reception with\
    \ the access points and server,\nt(s&frv) is the time of transmission and reception\
    \ with the fog server and feedback of reporting vehicles,\nand t(p) is the server’s\
    \ processing time [48].\nIn the proposed scheme model, namely PSAM, the communication\
    \ ranges from 250 to 500 m and\nthe information is transmitted at 30Mbps [49].\
    \ Therefore, the transmission time can be determined by\nusing the following equation:\n\
    Time = Distance\nSpeed\n(14)\nDistance (d) can be computed by using the following\
    \ equation:\nD =\nq\n(ym − yn)2 + (xm − xn)2\n(15)\nAs shown in the above equation,\
    \ (ym − yn) and (xm − xn) show the graph co-ordinates.\n4.7. RSU Network Prevention\
    \ Mechanism Against Hybrid DoS Attacks\nThe network construction is done with\
    \ the speciﬁcations given in Table 3. Algorithm 7 shows the\nrandom vehicle positioning\
    \ (Total Vehicles). Algorithm 8 shows random End-to-end delay detection\nin Vehicles.\n\
    Table 3. Network Speciﬁcations.\nTotal Number of Vehicles\n60–100\nThe height\
    \ of the network\n1000 m\nThe width of the network\n1000 m\nNode displacement\n\
    150–500 m/s\nSimulation iterations\n1500\nSimulation tool\nMatlab\nEncryption\
    \ technique\nVehicular rsa\nmac/phy\nIEEE 802.11p\nAlgorithm 7. Random Vehicle\
    \ Positioning (Total Vehicles).\n//for uncertainties in the network, the network\
    \ is placed in a random position manner\n1.\nfor each n in Nodes/vehicles\n2.\n\
    X pos (n) = 1000*rand//creating a random x coordinate\n3.\nY pos (n) = 1000*rand//creating\
    \ random y coordinate\n4.\nPlace (Xpos (n), Ypos (n))//Placing the node in their\
    \ position in the network\n5.\nend for\n6.\nend\nFunction Parameters (Nodes)//this\
    \ function initializes the node parameters\nAlgorithm 8. Random End-to-end delay\
    \ detection in Vehicles.\n1.\nfor i = 1: Vehicle/Nodes//Loop running for each\
    \ node\n2.\nset End2End Delay_n (i) = Random; //Putting an end-to-end delay value\
    \ for node acting normal\n3.\nEnd2End Delay (i) = (End2End Dealy_n)2; //now, the\
    \ expected reality is unpredictable and hence just for\nthe random//architecture\
    \ is set to be square of the normal delay\n4.\nend for\n5.\nend\nElectronics 2019,\
    \ 8, 776\n26 of 36\nAs the end-to-end delay is initialized, in a similar fashion\
    \ the other parameters, such as jitter,\npacket drop, jamming signal resource\
    \ consumption (RSU/CPU) overutilization, and all other forms\nof anticipated attacks,\
    \ including HDSA and DoS JSA attacks, in the network performance metric\nparameters\
    \ are also initialized.\nIn VANET, we envisage that there will be no excessive\
    \ battery\nconsumption. This is due to the fact that as the vehicles that are\
    \ in the communication process keep\nmoving in order to determine the end-to-end\
    \ delay of the network, the battery also keeps charging as\nlong as the vehicle\
    \ are running.\nIn addition, every node has a diﬀerent set of parameters. A function\
    \ is designed to initiate network\nparameters. The real-time simulation may have\
    \ a slightly diﬀerent structure. Networks do not have\nany ﬁxed structure, nevertheless,\
    \ for any simulation there are parameters that should be initialized.\n4.8. Modelling\
    \ of DoS Threat Prevention\nThis paper focuses on the prevention of all forms\
    \ of attacks, including HDSA and DoS JSA attacks.\nThe architecture for the attacks\
    \ are as follows.\nFigure 7a,b represents the path construction and the malicious\
    \ network for HDSA, including DoS\nJSA and other attack modes of the attackers,\
    \ respectively. Figure 7b shows that the intensity of dumping\nend-to-end delayed\
    \ packets of the HDSA, including DoS JSA attackers such as jamming of signals,\n\
    packet drop, and resources consumption via CPU/RSU overutilization, varies at\
    \ diﬀerent instances\nof time. If the intensity of all these forms of hybrid DoS\
    \ attackers and others are high, obviously the\nattackers attempt to dump more\
    \ packets, which results in more packet drop, jamming of signals, and\nresources\
    \ consumption via RSU/CPU overutilization, etc., which might aﬀect the RSU for\
    \ prolonged\nend-to-end delay in the network. Based upon this, we deﬁne the following\
    \ equation:\nTpd = Pdn + Pda\n(16)\nTpd is total packet drop, Pdn is the total\
    \ number of dropped packets in normal mode, and Pda is\nthe packet dropped when\
    \ the network is under threat, which has experienced all types of DoS attacks.\n\
    In addition, we also deﬁne the following equation in relation to the types of\
    \ attacks as:\nPdr = (Tp − Tpd)/Tp\n(17)\nElectronics 2019, 8, x FOR PEER REVIEW\
    \ \n26 of 35 \nTpd is total packet drop, Pdn is the total number of dropped packets\
    \ in normal mode, and Pda \nis the packet dropped when the network is under threat,\
    \ which has experienced all types of DoS \nattacks. In addition, we also define\
    \ the following equation in relation to the types of attacks as: \nPdr = (Tp −\
    \ Tpd)/Tp \n(17) \n \n \n(a) \n(b) \nFigure 7. (a) Path Constructed; (b) malicious\
    \ node HDSA and DoS JSA attackers. \nPdr is packet delivery ratio and Tp is the\
    \ total number of packets. Due to random behavior of \nthe attacks, the PSAM becomes\
    \ more sophisticated. Now, the challenge is to identify all the forms of \nDoS\
    \ attacks that are experienced in the network. The proposed scheme solution utilizes\
    \ FFBP-NN \nand the general functions of FFBP-NN and artificial intelligence are\
    \ given in Table 4. \nTable 4. Firely used Feed forward back propagation neural\
    \ network (FFBP-NN) structure. \nTotal Hidden Layer  \n1 \nNeuron Count  \n40\
    \ \nFigure 7. (a) Path Constructed; (b) malicious node HDSA and DoS JSA attackers.\n\
    Pdr is packet delivery ratio and Tp is the total number of packets. Due to random\
    \ behavior of the\nattacks, the PSAM becomes more sophisticated. Now, the challenge\
    \ is to identify all the forms of DoS\nElectronics 2019, 8, 776\n27 of 36\nattacks\
    \ that are experienced in the network. The proposed scheme solution utilizes FFBP-NN\
    \ and the\ngeneral functions of FFBP-NN and artiﬁcial intelligence are given in\
    \ Table 4.\nTable 4. Firely used Feed forward back propagation neural network\
    \ (FFBP-NN) structure.\nTotal Hidden Layer\n1\nNeuron Count\n40\nFeeding Iteration\n\
    140\nReverse Iteration\n30–60\nPropoFireﬂytion Type\nLinear\nAlgebraic Model\n\
    Levenberg\nThe artiﬁcial intelligence used in the proposed scheme consist of two\
    \ methods: (1) Training, and\n(2) Classiﬁcation/Optimization.\nThe proposed scheme\
    \ models, which include HDAM, PSAM, and the PESATRM, utilize two\nprocesses in\
    \ artiﬁcial intelligence (AI). They are the training process and the classiﬁcation/optimization\n\
    process. In the training process we utilized jitter as the training parameter\
    \ to train the neural network\nusing the MATLAB neural network tool box. Based\
    \ upon the training process, a target set is provided\nas well. The training is\
    \ orchestrated in two phases. In the initial phase, the training is done for\n\
    path identiﬁcation of all vehicles paths that were aﬀected by HDSA, including\
    \ DoS JSA and other\nattacks, based upon the communication process experience\
    \ of vehicles through the transmission\nof the IEEE 802.11p beacon relay. Then,\
    \ in the second process, the training is done to identify the\nvehicles on the\
    \ route that were also aﬀected by HDSA, including DoS JSA and other attacks. The\n\
    classiﬁcation/optimization process optimizes the real-time signal timings during\
    \ a given attack situation.\nThese would incur HDSAs, including DoS JSA and other\
    \ attack traﬃc, which would result in congestion\nor jamming of signals, packet\
    \ drop, and resource consumption via RSU overutilization.\nEquation (18) below\
    \ can be deﬁned by the end-to-end jitter based upon AI processes, as follows:\n\
    Jitr = E2EDP (at, nt) + Ntd\n(18)\nFrom Equation (18), Jitr is the jitter, E2EDP\
    \ is the end-to-end delay of the path, “at” and “nt”\nrepresent advanced (under\
    \ threat) and normal, respectively. Ntd is the network delay. For each path in\n\
    every iteration, there will be a jitter. The proposed solution uses the ﬁrst 450\
    \ to 600 iteration data points\nfor training, and then for the next 650 iterations\
    \ and above to train the structure for identiﬁcation\nof the path delayed in the\
    \ vehicle communication process based upon the proposed scheme and\nmodels. Algorithm\
    \ 9 shows Train_Neural (Reiteration Data, Total Reiterations). The used notations\n\
    are as follows:\nNotation\nDescription\nTpd\nTotal packet dropped\nPdn\nTotal\
    \ dropped packet in normal mode\nPda\nPacket dropped when network is under threat\n\
    Pdr\nPacket delivery ratio\nTp\nTotal number of packet\nJtr\nJitter\nDp\nDelay\
    \ path\n“a”\nAdvanced (under threat)\n“n”\nNormal (no threat)\nNd\nNetwork delay\n\
    k\nTotal neurons\nAvg_jitter\nAverage jitter\nMax_jitter\nMaximum jitter\nMin_jitter\n\
    Minimum jitter\nTdp\nTotal delivered packet\nTm\nTotal time of packet transfer\n\
    Electronics 2019, 8, 776\n28 of 36\nAlgorithm 9. Train_Neural (Reiteration Data,\
    \ Total Reiterations).\n1.\nfor i = 1: Total_Reiterations\n2.\nsetTraining_Data\
    \ (i) =Reiteration_Data (i) then;\n3.\nTarget_Lable (i) = Path_ID;\n4.\nend for\n\
    5.\nNeuralI = Initialize_Neural (Training_Data, Target_Label, k); //k is Total\
    \ Neurons (40 in proposed case)\n6.\nNeuralI.TrainParam.Epochs = 140; //total\
    \ training iterations\n7.\nTrain (NeuralITraining_Data, Target_Label); //training\
    \ with Initialized Neural and Training data\n8.\nend\nThe training section leads\
    \ into the following (Fireﬂy/GA) FFBP-NN structure.\nFigure 8a illustrates Feed\
    \ forward propagation structure and Figure 8b illustrates the back\npropagation\
    \ Fireﬂy graph. Based upon the graph, the proposed scheme and the models determine\
    \ the\ntraining data jitter and also validate it. The training data jitter also\
    \ represents the deviation between\npredicted y value and also the actual y value,\
    \ which is the measured MSE (mean square error). In\naddition, based upon Figure\
    \ 8b, we can also realize that we have 9 epochs of the proposed scheme\nmodel.\
    \ This implies that the proposed scheme models are trained over 9 epochs as the\
    \ forward iteration\nand 3 epochs for backwards iteration. We also expect that\
    \ the proposed scheme models will also\ndecrease with each epoch, meaning our\
    \ model predicts value y more frequently and accurately as the\nmodel is further\
    \ continued for training. The test graph also indicates that validation performance\
    \ at\nepoch 3 prediction of the proposed models is a good one.\nElectronics 2019,\
    \ 8, x FOR PEER REVIEW \n28 of 35 \n \n \n(a) \n(b) \nFigure 8. (a) Feed forward\
    \ propagation structure; (b) Firefly back Propagation. \n4.9. Identification of\
    \ All Affected Nodes and Retrieval \nThe proposed research work scheme also presents\
    \ a regression model with the back \npropagation, as shown in Figure 9. \nFigure\
    \ 8. (a) Feed forward propagation structure; (b) Fireﬂy back Propagation.\n4.9.\
    \ Identiﬁcation of All Aﬀected Nodes and Retrieval\nThe proposed research work\
    \ scheme also presents a regression model with the back propagation,\nas shown\
    \ in Figure 9.\nElectronics 2019, 8, 776\n29 of 36\n \n(a) \n(b) \nFigure 8. (a)\
    \ Feed forward propagation structure; (b) Firefly back Propagation. \n4.9. Identification\
    \ of All Affected Nodes and Retrieval \nThe proposed research work scheme also\
    \ presents a regression model with the back \npropagation, as shown in Figure\
    \ 9. \n \nFigure 9. Regression model. \n5. Analysis and Discussion of Results\
    \ \nFrom Figure 9, the regression model of the proposed scheme is evaluated. Based\
    \ upon the \nevaluation, the training result is 0.7847, the validation result\
    \ is NaN (not a number), the test result is \nNaN, and the overall result is 0.98727.\
    \ These values represent close but high regression values. \nGenerally, close\
    \ but high regression values represents healthy training and classification structures.\
    \ \nHigh regression values are also the reason that the prevention parameters\
    \ of HDSA are high, \nincluding DoS JSA and other attack activities causing jitter\
    \ and delay in the network. \nFigure 9. Regression model.\n5. Analysis and Discussion\
    \ of Results\nFrom Figure 9, the regression model of the proposed scheme is evaluated.\
    \ Based upon the\nevaluation, the training result is 0.7847, the validation result\
    \ is NaN (not a number), the test result\nis NaN, and the overall result is 0.98727.\
    \ These values represent close but high regression values.\nGenerally, close but\
    \ high regression values represents healthy training and classiﬁcation structures.\n\
    High regression values are also the reason that the prevention parameters of HDSA\
    \ are high, including\nDoS JSA and other attack activities causing jitter and\
    \ delay in the network.\nAs discussed earlier, this section classiﬁes the path\
    \ value on the basis of the trained structure.\nThe identiﬁed malicious vehicle\
    \ or node is always sent for recovery or maintenance. The following\nevaluations\
    \ are also made.\n5.1. Analysis of Jitter, Throughput, and Prediction Accuracy\
    \ of the Proposed Scheme and the Other\nContending Schemes\nBased upon the proposed\
    \ scheme models and algorithms, comparison analysis is made with\nthe other contending\
    \ schemes, such as CUCKOO/Artiﬁcial Bee Colony (ABC) and Fireﬂy/Genetic\nalgorithm\
    \ (GA) models and algorithms. We determined jitter, throughput, and the prediction\
    \ accuracy.\nBased upon this, we evaluated end-to-end delay using attacked packet\
    \ detection algorithms (APDA)\nand the models in the network, which detected HDSA,\
    \ including DoS JSA and other attacks observed\nin the paths of vehicles traveling\
    \ in the network. V2V, V2RSU, and RSU2V communication processes\nwere utilized.\
    \ We utilized the simulation with the APDA, including unicast and multicast/broadcast\n\
    data transmission. We also utilized single next hop vehicle (SNHV) data transfer\
    \ probability based\nupon the proposed scheme models (HDAM, and PSAM integrated\
    \ with PESATRM) concerning the\nvehicle communication processes, which include\
    \ V2V, V2RSU, and RSU2V communication. IEEE\n802.11p beacon transmissions were\
    \ utilized in the network, which is based upon DSRC technology.\nThus, the proposed\
    \ scheme prevention performed in the network, compared with the prevention\nperformed\
    \ with the other contending schemes, including CUCKOO (ABC) and Fireﬂy (GA), were\n\
    evaluated based on Jitter, throughput, and prediction accuracy, as follows.\n\
    Electronics 2019, 8, 776\n30 of 36\n5.2. Jitter Analysis\nFigure 10 illustrates\
    \ the Jitter for the proposed scheme versus two other schemes. Evaluating the\n\
    Jitter, the proposed scheme jitter was compared to the other contending schemes,\
    \ such as Fireﬂy (GA)\nand CUCKOO (ABC). This evaluation was based upon the end-to-end\
    \ delayed path of the vehicle\ncommunication process observed in the network.\
    \ For the proposed scheme models, which include\nHDAM, PSAM, and the PESATRM communication\
    \ process, the jitter is 60 ms less, whereas the jitter\nvalues for CUCKOO (ABC)\
    \ and Fireﬂy (GA) were 93 ms and 89 ms, respectively, which are high. This\nis\
    \ because the proposed scheme architecture models utilized the training structure\
    \ and did not have\nto compare the entire feature set, which consumes a lot of\
    \ time in the case of HDSA, including DoS\nJSA and other threat detection, based\
    \ upon the attacked packet transmitted in the model architecture.\nHowever, both\
    \ Fireﬂy (GA) and CUCKOO (ABC) are iterative in nature, and hence consume a lot\
    \ of\ntime. Mathematically, the jitter can be computed in Equation (19. The jitter\
    \ comparison are given in\nTable 5. Table 6 shows the average jitter value for\
    \ diﬀerent schemes.\nAvgJitter =\nMaxJitter − MinJitter\n2\n(19)\nTable 5. Jitter\
    \ comparison.\nIterations\nJitter-Proposed in ms\nJitter-Cuckoo in ms\nJitter-Fireﬂy\
    \ in ms\n100\n12\n23\n26\n500\n16\n35\n42\n1000\n60\n89\n93\nElectronics 2019,\
    \ 8, x FOR PEER REVIEW \n30 of 35 \n \nFigure 10. Jitter for the proposed scheme\
    \ versus two other schemes. \nTable 6. Average jitter value. \nProposed Average\
    \ Jitter \n24 \nFirefly Average Jitter \n33 \nCUCKOO Average Jitter \n33.5 \n\
    Proposed to FIREFLY \n72% \nProposed to CUCKOO \n71.64% \n \n% \U0001D43C\U0001D45A\
    \U0001D45D\U0001D45F\U0001D45C\U0001D463\U0001D452\U0001D45A\U0001D452\U0001D45B\
    \U0001D461 = (\U0001D439\U0001D456\U0001D45B\U0001D44E\U0001D459 ×  100)\n\U0001D43C\
    \U0001D45B\U0001D456\U0001D461\U0001D456\U0001D44E\U0001D459\n \n(20) \n5.3. Throughput\
    \ Analysis \nThe second evaluation is performed on the basis of throughput As\
    \ emphasized already the\nFigure 10. Jitter for the proposed scheme versus two\
    \ other schemes.\nTable 6. Average jitter value.\nProposed Average Jitter\n24\n\
    Fireﬂy Average Jitter\n33\nCUCKOO Average Jitter\n33.5\nProposed to FIREFLY\n\
    72%\nProposed to CUCKOO\n71.64%\nElectronics 2019, 8, 776\n31 of 36\n% Improvement\
    \ = (Final × 100)\nInitial\n(20)\n5.3. Throughput Analysis\nThe second evaluation\
    \ is performed on the basis of throughput. As emphasized already, the\nthroughput\
    \ evaluation is also based upon the comparison of the proposed scheme with the\
    \ other\ncontending schemes, which are Artiﬁcial Bee Colony (CUCKOO) and Genetic\
    \ Algorithm (Fireﬂy)\nschemes. The throughput is determined using the formula\
    \ as follows in Equation (21):\nThroughput = Tdp × tm\n(21)\nTdp is the total\
    \ delivered packets, and tm is total time tp transmit information from the transmitting\n\
    vehicle or node to the receiving vehicle or node in the proposed scheme SAM. Table\
    \ 7 shows\nthe throughput.\nTable 7. Throughput.\nIteration Count\nThroughput-Proposed\n\
    Throughput-CUCKOO\nThroughput-Fireﬂy\n100\n523,300\n235,411\n365,412\n500\n652,311\n\
    352,210\n356,221\n1000\n721,112\n396,521\n385,211\nThe proposed scheme algorithms\
    \ and models, which include HDAM, PSAM, and PESATRM,\nutilize maximum time. This\
    \ results in the least end-to-end delay of the path of the vehicles’ jitter\n\
    values. Thus, we envisage that time value is important and time value is utilized\
    \ in transferring the\ndata packets securely and eﬃciently. Hence, the proposed\
    \ scheme models have resulted in a higher\nthroughput value as compared to the\
    \ other contending schemes, which are CUCKOO (ABC) and the\nFireﬂy (GA) scheme\
    \ throughput, which are less.\n5.4. Prediction Accuracy Analysis\nThe third evaluation\
    \ is also done on the basis of the prediction accuracy of the proposed scheme.\n\
    It is also compared with the other contending schemes, including Artiﬁcial Bee\
    \ Colony (CUCKOO)\nand Genetic Algorithm (Fireﬂy) protocols. The prediction accuracy\
    \ of the proposed scheme compared\nto the other contending schemes, which are\
    \ CUCKOO (ABC) and the Fireﬂy (GA), are determined as\nshown in Table 8.\nTable\
    \ 8. Prediction Accuracy.\nProposed Scheme\n92%\nCuckoo\n63%\nFireﬂy\n63.89%\n\
    6. Miscellaneous\nTable 9 provides a comparison of VANET protocols based on trustworthiness,\
    \ attack detection,\nand mode of transmission.\nElectronics 2019, 8, 776\n32 of\
    \ 36\nTable 9. Summary of background study.\nProtocols\nData Transmission\nMode\n\
    Performance Measurement for\nAccuracy and Trustworthiness\nAttacks Detection\n\
    Storage and\nAuthentication\nMechanism\n[9] RTMD\nNone\nNo trustworthiness and\
    \ accuracy\nOnly DoS JSA\nNone\n[10] FECM\nNone\nNo trustworthiness and\nprediction\
    \ accuracy\nOnly DoS JSA\nNone\n[11] DRIA\nUnicast traﬃc\nmode\nNo trustworthiness\
    \ and\nprediction accuracy\nOnly DoS JSA\nNone\n[12] RTDD\nBroadcast traﬃc\nmode\n\
    No trustworthiness and\nprediction accuracy\nOnly DoS JSA\nNone\n[14] RTVA, and\
    \ [17]\nEMDV\nMostly multicast\nNo trustworthiness and\nprediction accuracy\n\
    Only DoS JSA\nVFC only and none\nProposed scheme\nprotocol\nUnicast,\nbroadcast/multicast\n\
    Trustworthiness and prediction\naccuracy\nHDSA, DoS JSA,\nPD, and RCRCO\nVFC,\
    \ HOA, and\nAKDE\n7. Conclusions\nThe vehicular ad hoc network (VANET) avoids\
    \ heavy traﬃc conditions and driving problems that\nmay be encountered on the\
    \ roads, including highways. Due to the environment in which VANET is\ndeployed,\
    \ VANET encounters a lot of trustworthiness issues. This includes hybrid DoS attacks\
    \ (HDSA),\nincluding DoS JSA and other forms of attacks that can be unpredictable\
    \ with VANET. This leads to\nsporadic processing of information. Sporadic information\
    \ processing prevents real-time information\ndelivery in VANET during V2V, V2RSU,\
    \ and RSU2V communication. Consequently, this introduces\nend-to-end delay and\
    \ jitter in the network. Alleviating end-to-end delay and jitter in the network\n\
    requires secure, eﬃcient storage delivery and trustworthiness solutions.\nThis\
    \ research has presented fog computing in a cloud-based integration (VFC) concept\
    \ to secure\nVANET. The research also utilized hybrid optimization algorithms\
    \ (HOAs), which are also intelligent\nand include CSA/ABC and Fireﬂy/GA. HOAs\
    \ are heuristics, and also have problem-solving skills.\nThe HOAs integrate with\
    \ vehicular authentication algorithms. In addition, they optimize FS and\nRSU\
    \ further authentication algorithms, and also help to select trustworthy nodes\
    \ in the network.\nThis process has also led to secure transmissions of IEEE 802.11p\
    \ beacon relays in VANET. Secure\ntransmission helps to ensure safe V2V, V2RSU,\
    \ and RSU2V VANET communication processes. VANET\ncommunication processes include\
    \ standardized road safety information exchange (SRSIE). This requires\nVANET\
    \ Infrastructure Architecture (VIA) system models.\nIn this research, the system\
    \ architecture models of VIA and several interesting application\nscenarios, i.e.,\
    \ challenging issues of VFC, have been discussed in the proposed scheme. The proposed\n\
    scheme VIA system models include HDAM, PSAM, and PESATRM. The HDAM is a hybrid\
    \ model\nof two models that utilize the DoS attack model (DAM) and jamming signal\
    \ attack model (DJSAM).\nThese two attack models are used to identify and mitigate\
    \ all forms of attacks, including HDSA, DoS\nJSA, and all other associated attacks.\
    \ These HDSAs including DoS JSA and other attacks, interfere with\nIEEE 802.11p\
    \ beacon transmission relays during V2V, V2RSU, and RSU2V information dissemination.\n\
    PSAM is the overall proposed scheme system model. PSAM utilizes attacked packet\
    \ detection\nalgorithms (APDA). APDA are used to identify the vehicle position\
    \ and frequency of the number\nof attacked packets. PSAM utilizes multicast/broadcast\
    \ and unicast modes of transmission of data,\nwhilst utilizing the IEEE 802.11p\
    \ beacons and signals for real-time data delivery. The PSAM also\nintegrates with\
    \ the PESATRM to provide robustness in VIA deployment. This integration model\
    \ serves\nas an additional model of the proposed scheme and utilizes eﬃcient ESATR\
    \ to process V2V, V2RSU,\nand RSU2V communication of SRSIE. The PSAM and PESATRM\
    \ integration models also provides\nfurther secure authentication and key distribution\
    \ establishment (AKDE) for the RSU and the FS. This\nsecures the network for trustworthiness.\
    \ In addition, PESATRM utilizes probability analysis and also\nencompass NSHV\
    \ and non-shadow environment encryption (NESE) concepts of VFC communication.\n\
    This provide secure and SRSIE to sensitize the vehicles that move in the same\
    \ transmission range in\norder to eﬀectively prevent road casualties in a timely\
    \ manner.\nElectronics 2019, 8, 776\n33 of 36\nVFC integration with HOA and AKDE\
    \ support rising VANET applications that demand predictable\nresults with minimum\
    \ energy consumption rate. This paper has focused on the dual training mechanism\n\
    of Fireﬂy (GA)/FFBP-NN to provide prevention and recovery mechanisms for all malicious\
    \ node\ndetection paths for end-to-end delay paths observed in VANET. It also\
    \ reduced jitter in the proposed\nscheme signiﬁcantly. As a result, the detection\
    \ and prevention of all forms of attacks, such as HDSAs,\nincluding DoS JSA and\
    \ other attacks, is high. Based upon this, the proposed scheme prediction accuracy\n\
    is 92%. The proposed scheme uses the concepts of authentication and encryption\
    \ and trustworthiness\nof nodes. The network provision also utilize hybrid information\
    \ broadcast/multicast and unicast in\nthe VANET. However, compared to Cuckoo (ABC)\
    \ and Fireﬂy (GA), their prediction accuracies are,\nrespectively, 63% and 63.89%.\
    \ These schemes have limitations in trustworthiness provision in VANET.\nThey\
    \ do not utilize HOAs and AKDE.\nIn addition, the proposed scheme algorithm and\
    \ the models, which include HDAM, PSAM, and\nPESATRM, signiﬁcantly contributed\
    \ to eﬃciently reducing the jitter value by 72%. The maximum\nattained throughput\
    \ for the proposed scheme is importantly high as compared to Cuckoo (ABC) and\n\
    Fireﬂy (GA). The paper utilized FFBP-NN over 100 iterations, out of which 30–40\
    \ iterations are reserved\nfor Fireﬂy back propation.\nIn our future work, we\
    \ would like to design the layout and implementation of VANET, which\nwould also\
    \ involve other forms of optimization techniques, including the Spline method\
    \ to minimize\nthe jitter problems in the fog computing environment. Then, performance\
    \ evaluation based upon\ndiﬀerent forms of attacks in the network, including HDSA,\
    \ would also be assessed.\nAuthor Contributions:\nConceptualization, S.E. and\
    \ K.E.; Methodology, S.E. and K.E.; Validation, S.E.;\nWriting—original draft,\
    \ S.E.; Writing—review & editing, K.E.\nFunding: This research has been sponsored\
    \ by the University of Bridgeport.\nAcknowledgments: The authors Samuel Koﬁ Erskine\
    \ and Khaled M. Elleithy acknowledge that the formulae and\nalgorithms developed\
    \ in this research were solely their own work.\nConﬂicts of Interest: The authors\
    \ declare no conﬂicts of interest.\nReferences\n1.\nSingh, D.; Ranvijay; Yadav,\
    \ R.S. A state-of-art approach to misbehavior detection and revocation in VANET:\n\
    Survey. Int. J. Ad Hoc Ubiquitous Comput. 2018, 28, 77–93. [CrossRef]\n2.\nCooper,\
    \ C.; Franklin, D.; Ros, M.; Safaei, F.; Abolhasan, M. A Comparative Survey of\
    \ VANET Clustering\nTechniques. IEEE Commun. Surv. Tutor. 2017, 19, 657–681. [CrossRef]\n\
    3.\nHasrouny, H.; Samhat, A.E.; Bassil, C.; Laouiti, A. VANet security challenges\
    \ and solutions: A survey.\nVeh. Commun. 2017, 7, 7–20. [CrossRef]\n4.\nSharma,\
    \ S.; Kaul, A. A survey on Intrusion Detection Systems and Honeypot based proactive\
    \ security\nmechanisms in VANETs and VANET Cloud. Veh. Commun. 2018, 12, 138–164.\
    \ [CrossRef]\n5.\nCampolo, C.; Molinaro, A. Multichannel communications in vehicular\
    \ Ad Hoc networks: A survey.\nIEEE Commun. Mag. 2013, 51, 158–169. [CrossRef]\n\
    6.\nCampolo, C.; Molinaro, A.; Vinel, A.; Zhang, Y. Modeling Prioritized Broadcasting\
    \ in Multichannel Vehicular\nNetworks. IEEE Trans. Veh. Technol. 2012, 61, 687–701.\
    \ [CrossRef]\n7.\nAnbuchelian, S.; Lokesh, S.; Baskaran, M. Improving Security\
    \ in Wireless Sensor Network Using Trust\nand Metaheuristic Algorithms. In Proceedings\
    \ of the 2016 3rd International Conference on Computer and\nInformation Sciences\
    \ (ICCOINS), Kuala Lumpur, Malaysia, 5–17 August 2016; pp. 233–238.\n8.\nPelechrinis,\
    \ K.; Iliofotou, M.; Krishnamurthy, S.V. Denial of Service Attacks in Wireless\
    \ Networks: The Case\nof Jammers. IEEE Commun. Surv. Tutor. 2011, 13, 245–257.\
    \ [CrossRef]\n9.\nTang, J.; Cheng, Y.; Zhuang, W. Real-time misbehavior detection\
    \ in IEEE 802.11 based wireless networks:\nAn analytical approach. IEEE Trans.\
    \ Mob. Comput. 2014, 13, 146–158. [CrossRef]\n10.\nDjahel, S.; Zhang, Z.; Nait-Abdesselam,\
    \ F.; Murphy, J. Fast andeﬃcient countermeasure for MAC Layer\nmisbehavior in\
    \ MANETs. IEEE Wirel. Commun. Lett. 2012, 1, 540–543.\nElectronics 2019, 8, 776\n\
    34 of 36\n11.\nHamieh, A.; Ben-othman, J.; Mokdad, L. Detection of radio interference\
    \ attacks in VANET. In Proceedings of\nthe 2009 IEEE Global Telecommunications\
    \ Conference, Honolulu, HI, USA, 30 November–4 December 2009.\n[CrossRef]\n12.\n\
    Lyamin, N.; Vinel, A.; Jonsson, M.; Loo, J. Real-Time Detection of Denial-of-Service\
    \ Attacks in IEEE 802.11p\nVehicular Networks. IEEE Commun. Lett. 2014, 18, 110–113.\
    \ [CrossRef]\n13.\nKolesnikov, V.; Lee, W.; Hong, J. MAC aggregation resilient\
    \ to DoS attacks. In Proceedings of the Cyver\nPhysical Security and Privacy (IEEE\
    \ 2011 smart GridComm), Brussels, Belgium, 17–20 October 2011;\npp. 226–228.\n\
    14.\nGrover, J.; Jain, A.; Singhal, S.; Yadav, A. Real-Time VANET Applications\
    \ Using Fog Computing. In Proceedings\nof First International Conference on Smart\
    \ System, Innovations and Computing. Smart Innovation, Systems and\nTechnologies;\
    \ Springer: Singapore, 2018; pp. 683–685.\n15.\nNarawade, V.E.; Kolekar, U. EACSRO:\
    \ Epsilon constraint-based Adaptive Cuckoo Search algorithm for Rate\nOptimized\
    \ Congestion Avoidance and Control in Wireless Sensor Networks. In Proceedings\
    \ of the 2017\nInternational Conference on I-SMAC (IoT in Social, Mobile, Analytics\
    \ and Cloud) (I-SMAC), Palladam, India,\n10–11 February 2017; pp. 715–720.\n16.\n\
    Kaur, G. A preventive approach to mitigate the eﬀect of gray hole using genetic\
    \ algorithm. In Proceedings\nof the 2016 IEEE International Conference on Advanced\
    \ in Computing, Communication, Automation\n(ICACCA), Dehradun, India, 8–9 April\
    \ 2016; pp. 1–2.\n17.\nGhaleb, F.A.; Zainal, A.; Rassam, M.A.; Mohammed, F. An\
    \ eﬀective misbehavior detection model using\nartiﬁcial neural network for vehicularad\
    \ hoc network applications. In Proceedings of the 2017 IEEE Conference\non Application,\
    \ Information and Network Security (AINS), Miri, Malaysia, 13–14 November 2017.\n\
    18.\nZhang, R.; Jiang, X.; Li, R. Decomposition based multiobjective spectrum\
    \ allocation algorithm for cognitive\nvehicular networks. In Proceedings of the\
    \ 2017 IEEE 17th International Conference on Communication\nTechnology (ICCT),\
    \ Chengdu, China, 27–30 October 2017; pp. 831–836.\n19.\nSaoucha, N.A.; Ghanem,\
    \ K.; Benmammar, B. On applying Fireﬂy Algorithm for Cognitive Radio Networks.\n\
    In Proceedings of the 2014 IEEE 21st Symposium on Communications and Vehicular\
    \ Technology in the\nBenelux (SCVT), Delft, The Netherlands, 10 November 2014;\
    \ pp. 1–2.\n20.\nKushwah, N.; Sonker, A. Malicious Node Detection on Vehicular\
    \ Ad-Hoc Network Using Dempster Shafer\nTheory for Denial Of Services Attack.\n\
    In Proceedings of the 2016 IEEE International Conference on\nComputational Intelligence\
    \ and Communication Networks, Tehri, India, 23–25 December 2016; pp. 432–433.\n\
    21.\nWaraich, P.S.; Batra, N. Prevention of Denial of Service Attack Over Vehicle\
    \ Ad hoc Networks using Quick\nResponse Table. In Proceedings of the 2017 IEEE\
    \ International Conference on Signal processing, Computing\nand Control (ASPCC),\
    \ Solan, India, 21–23 September 2017; pp. 586–587.\n22.\nSedjelmaci, H.; Senouci,\
    \ S.M.; Abu-Rghef, M.A. An Eﬃcient and Lightweight Intrusion Detection Mechanism\n\
    for Service-Oriented Vehicular Networks. IEEE Internet Things J. 2014, 1, 570–577.\
    \ [CrossRef]\n23.\nShabbir, M.; Khan, M.A.; Khan, U.S.; Saqib, N.A. Detection\
    \ and Prevention of Distributed Denial of Service\nAttacks in VANETs. In Proceedings\
    \ of the IEEE 2016 International Conference on Computational Science\nand Computational\
    \ Intelligence, Las Vegas, NV, USA, 15–17 December 2016; pp. 970–971.\n24.\nSharma,\
    \ S.; Kaul, A. Hybrid fuzzy multi-criteria decision making based multi cluster\
    \ head dolphin swarm\noptimized IDS for VANET. Veh. Commun. 2018, 12, 23–38. [CrossRef]\n\
    25.\nJiang, Q.; Ni, J.; Ma, J.; Yang, L.; Shen, X. Integrated Authentication and\
    \ Key Agreement Framework for\nVehicular Cloud Computing. IEEE Netw. 2018, 32,\
    \ 28–35. [CrossRef]\n26.\nAgarwal, Y.; Jain, K.; Karabasoglu, O. Smart vehicle\
    \ monitoring and assistance using cloud computing in\nvehicular Ad Hoc networks.\
    \ Int. J. Transp. Sci. Technol. 2018, 7, 60–73. [CrossRef]\n27.\nGlass, S.; Mahgoub,\
    \ I.; Rathod, M. Leveraging MANET-Based Cooperative Cache Discovery Techniques\
    \ in\nVANETs: A Survey and Analysis. IEEE Commun. Surv. Tutor. 2017, 19, 2640–2661.\
    \ [CrossRef]\n28.\nChaba, S.; Kumar, R.; Pant, R.; Dave, M. Secure and eﬃcient\
    \ key delivery in VANET using cloud and\nfog computing. In Proceedings of the\
    \ 2017 International Conference on Computer, Communications and\nElectronics (Comptelix),\
    \ Jaipur, India, 1–2 July 2017; pp. 27–31.\nElectronics 2019, 8, 776\n35 of 36\n\
    29.\nSookhak, M.; Yu, F.R.; Tang, H. Secure data sharing for vehicular ad-hoc\
    \ networks using cloud computing.\nIn Ad Hoc Networks; Springer: Cham, Switzerland,\
    \ 2016; pp. 306–315.\n30.\nKumar, R.; Chhabra, S. Eﬃcient routing in Vehicular\
    \ Ad-hoc Networks using Fireﬂy optimization.\nIn Proceedings of the 2016 International\
    \ Conference on Inventive Computation Technologies (ICICT),\nCoimbatore, India,\
    \ 26–27 August 2016; pp. 1–6.\n31.\nFekair, M.E.A.; Lakas, A.; Korichi, A. CBQoS-Vanet:\
    \ Cluster-based Artiﬁcial Bee Colony Algorithm for QoS\nRouting Protocol in VANET.\
    \ In Proceedings of the 2016 International Conference on Selected Topics in\n\
    Mobile & Wireless Network (MoWNeT), Cairo, Egypt, 11–13 April 2016; pp. 1–3.\n\
    32.\nKhalil, M.; Azer, M.A. Sybil attack Prevention through Identity Symmetric\
    \ Scheme in Vehicular Ad hoc\nNetworks. In Proceedings of the IEEE 2018 Wireless\
    \ days (WD), Dubai, UAE, 3–5 April 2018; pp. 184–185.\n33.\nRoselin Mary, S.;\
    \ Maheshwari, M.; Thamaraiselvan, M. Early Detection of DOS Attacks in VANET Using\n\
    Attacked Packet Detection Algorithm (APDA). In Proceedings of the 2013 IEEE International\
    \ Conference\non Information Communication and Embedded Systems (ICICES), Chennai,\
    \ India, 21–22 February 2013;\npp. 237–240.\n34.\nVerma, K.; Hasbullah, H. IP-CHOCK\
    \ (ﬁlter)-Based Detection Scheme for Denial of Service (DoS) attacks in\nVANET.\
    \ In Proceedings of the 2014 International Conference Computer and Information\
    \ Sciences (ICCOINS),\nKuala Lumpur, Malaysia, 3–5 June 2014; pp. 1–6.\n35.\n\
    Quyoom, A.; Ali, R.; Gouttam, D.N.; Sharma, H. A Novel Mechanism of Detection\
    \ of Denial of Service Attack\n(DoS) in VANET using Malicious and Irrelevant Packet\
    \ Detection Algorithm (MIPDA). In Proceedings of\nthe International Conference\
    \ on Computing, Communication and Automation (ICCCA2015), Noida, India,\n15–16\
    \ May 2015; pp. 414–416.\n36.\nEkici, E.; Heijenk, G.; Jarupan, B.; Weil, T.;\
    \ Karagiannis, G.; Altintas, O.; Lin, K. Vehicular Networking:\nA Survey and Tutorial\
    \ on Requirements, Architectures, Challenges, Standards and Solutions. IEEE Commun.\n\
    Surv. Tutor. 2011, 13, 584–616.\n37.\nLai, Y.; Zhang, L.; Wang, T.; Yang, F.;\
    \ Xu, Y. Data Gathering Framework Based on Fog Computing Paradigm\nin VANETs.\
    \ In Asia-Paciﬁc Web (APWeb) and Web-Age Information Management (WAIM) Joint Conference\
    \ on Web\nand Big Data; Springer: Cham, Switzerland, 2017; pp. 227–236.\n38.\n\
    Khan, A.A.; Abolhasan, M.; Ni, W. 5G next generation VANETs using SDN and fog\
    \ computing framework.\nIn Proceedings of the 2018 15th IEEE Annual Consumer Communications\
    \ & Networking Conference (CCNC),\nLas Vegas, NV, USA, 12–15 January 2018; pp.\
    \ 1–6.\n39.\nKaiwartya, O.; Kumar, S.; Lobiyal, D.K.; Abdullah, A.H.; Hassan,\
    \ A.N. Performance Improvement in\nGeographic Routing for Vehicular Ad Hoc Networks.\
    \ Sensors 2014, 14, 22342–22371. [CrossRef] [PubMed]\n40.\nButtner, C.; Bartels,\
    \ F.; Huss, S.A. Real-World Evaluation of an Anonymous Authenticated Key Agreement\n\
    Protocol for Vehicular Ad-Hoc Networks. In Proceedings of the 2015 IEEE 11th International\
    \ Conference\non Wireless and Mobile Computing, Networking and Communications\
    \ (WiMob), Abu Dhabi, UAE, 19–21\nOctober 2015; pp. 652–654.\n41.\nRaw, R.S.;\
    \ Das, S. Performance analysis of P-GEDIR protocol for vehicular adhoc network\
    \ in urban traﬃc\nenvironments. Wirel. Pers. Commun. 2013, 68, 65–78. [CrossRef]\n\
    42.\nYang, J.; Fei, Z. Broadcasting with Prediction and Selective Forwarding in\
    \ Vehicular Networks. Int. J. Distrib.\nSens. Netw. 2013, 1, 1–9. [CrossRef]\n\
    43.\nArtimy, M. Local Density Estimation and Dynamic Transmission-Range Assignment\
    \ in Vehicular Ad Hoc\nNetworks. IEEE Trans. Intell. Transp. Syst. 2007, 8, 400–412.\
    \ [CrossRef]\n44.\nErskine, S.K.; Elleithy, K.M. Secure Intelligent Vehicular\
    \ Network Using Fog Computing. Electronics 2019, 8,\n455. [CrossRef]\n45.\nCuevas,\
    \ E.; Reyna-Orta, A. A Cuckoo Search Algorithm for Multimodal Optimization. Sci.\
    \ World J. 2014,\n2014, 20. [CrossRef]\n46.\nVinel, A.; Campolo, C.; Petit, J.;\
    \ Koucheryavy, Y. Trustworthy Broadcasting in IEEE 802.11p/WAVE Vehicular\nNetworks:\
    \ Delay Analysis. IEEE Commun. Lett. 2011, 15, 1010–1012. [CrossRef]\n47.\nWu,\
    \ Q.; Liu, Q. A Trusted Routing Protocol Based on Bayesian in VANET. In Proceedings\
    \ of the IEEE 2014\nInternational Conference on Cyberspace technology (CCT), Beijing,\
    \ China, 8–10 November 2014; pp. 1–4.\nElectronics 2019, 8, 776\n36 of 36\n48.\n\
    Huang, N.J.; Wang, X. Vehicular Fog Computing: Enabling Real-Time Traﬃc Management\
    \ for Smart Cities.\nIEEE Wirel. Commun. 2019, 26, 87–93.\n49.\nHasan, K.F.; Wang,\
    \ C.; Feng, Y.; Tian, Y.C. Time synchronization in vehicular ad-hoc networks:\
    \ A survey on\ntheory and practice. Veh. Commun. 2018, 14, 39–51. [CrossRef]\n\
    © 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open\
    \ access\narticle distributed under the terms and conditions of the Creative Commons\
    \ Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Electronics (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2079-9292/8/7/776/pdf?version=1562837720
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Real-Time Detection of DoS Attacks in IEEE 802.11p Using Fog Computing for
    a Secure Intelligent Vehicular Network
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/iccworkshops49005.2020.9145053
  analysis: '>'
  authors:
  - Chamara Sandeepa
  - Charuka Moremada
  - Nadeeka Dissanayaka
  - Tharindu D. Gamage
  - Madhusanka Liyanage
  citation_count: 9
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2020
    IEEE International Confe... An Emergency Situation Detection System for Ambient
    Assisted Living Publisher: IEEE Cite This PDF Chamara Sandeepa; Charuka Moremada;
    Nadeeka Dissanayaka; Tharindu Gamage; Madhusanka Liyanage All Authors 9 Cites
    in Papers 250 Full Text Views Abstract Document Sections I. Introduction II. Related
    Work III. Proposed Architecture IV. Protocol V. Implementation Show Full Outline
    Authors Figures References Citations Keywords Metrics Abstract: This paper proposes
    “An Emergency Situation Detection System for Ambient Assisted Living (AAL)”, to
    support elderly people and patients with chronic conditions and potential health-related
    emergencies to live independently. It implements an Internet of Things (IoT) network
    that continuously monitors the health conditions of these people. The network
    includes mobile phones, to transmit the data generated by the IoT sensors to the
    cloud server. Especially, the paper proposes the 3 rd party unknown mobile relays
    instead of dedicated gateways as opposed to many existing solutions for IoT healthcare
    applications. The wireless communication technology used to provide the connectivity
    between the sensor nodes and mobile relays is Bluetooth Low Energy (BLE). To establish
    a secure end-to-end connectivity between low power IoT sensor nodes and cloud
    servers, the paper proposes several techniques. After the medical data transmission
    to the cloud server, it is responsible for emergency detection and alert generation
    accordingly. The type of emergency is not limited to a specific health issue,
    but new emergency situations can be defined and added to the proposed system.
    Ultimately, the interested parties such as family members, caretakers and doctors
    receive these alerts. The development of a prototype of the system as a part of
    the work using commercial off-the-shelf devices verifies the validity of the proposing
    system and evaluates the performance advantage over the existing systems. Published
    in: 2020 IEEE International Conference on Communications Workshops (ICC Workshops)
    Date of Conference: 07-11 June 2020 Date Added to IEEE Xplore: 21 July 2020 ISBN
    Information: ISSN Information: DOI: 10.1109/ICCWorkshops49005.2020.9145053 Publisher:
    IEEE Conference Location: Dublin, Ireland SECTION I. Introduction Recent advancements
    in IoT based techniques have made a significant influence on modern technological
    applications including continuous (e.g. patients) monitoring and healthcare [1].
    The improvements in these techniques would be very helpful for elderly people
    and people with chronic conditions. Often, they should be monitored continuously
    and their health condition should be analyzed based on the monitored data. If
    there is any situation where immediate attention or medical care is needed whenever
    they are in a position that no nearby support is available, these people would
    be at high risk and may sometimes face a life-threatening situation [2]. With
    this paper, we are introducing an IoT based solution for remote patient monitoring.
    The solution can be identified as a cost effective, flexible, mobility supported
    and comparatively power efficient way to establish a solid patient monitoring.
    Patients with chronic disease conditions and elderly people can get support from
    BLE wearable sensors to keep track of their health [3]. These BLE sensors facilitate
    communication with the user''s mobile phones. It is very important to continuously
    transmit the data from the sensor to the mobile, to keep track of their health
    conditions. But the elderly people may often forget to keep their mobile phones
    always charged. Also, during an emergency situation, the user''s mobile phone
    might be turned off or might get damaged. Healthcare devices using dedicated gateways
    cannot transmit the data in such instance. Also, when the healthcare devices are
    out of range from the gateway, the continuous monitoring is halted due to connection
    loss. Further, the devices that communicate through generic BLE protocol cannot
    establish a connection and transmit the person''s health data to an unknown gateway
    device in proximity in such a connection loss. Our Contribution Therefore, this
    paper proposes a secure, third party mobile relay-based solution to overcome the
    above issues, which are critical during an emergency situation. The paper contributes
    to followings: Proposes a protocol to successfully establish communication with
    a third party mobile relay and perform end-to-end secure communication with a
    cloud server. Implements a prototype of the emergency situation detection system
    with off-the-shelf BLE modules for the use case of heart rate monitoring by transmitting
    data to a remote server. Addresses the issues associated with real-time and stored
    data transmission from the IoT device. Discusses and experimentally analyzes the
    problems associated with the generic BLE communication channel implementation
    when transmitting data over a distance. Proposes a solution of handovering for
    relay mobiles to address the detected problems with BLE. The remainder of this
    paper is organized as follows: Section II provides the related work. Section III
    contains the proposed architecture. The details of the proposed protocol are given
    by Section IV. The implementation details is presented in section V. Section VI
    contains the experiments and results. Finally, conclusions and future research
    directions are presented in section VII. SECTION II. Related Work The work presented
    in [4] [5] introduces a mobile-based relay assistance system for the establishment
    of a secure End to End (E2E) connection between low-power IoT sensors and cloud
    servers without using any specific and dedicated gateway. This work proposes a
    basic prototype to accomplish the communication task and the E2E connection establishment
    is done through a secure AES-CCM encryption technique. The solution in [6] contains
    the main server and several other sensing servers which are acting as gateways.
    It describes the IoT sensor networks middleware to perform sensor data translations.
    As the system is not a cost-effective solution and due to its poor scalability,
    it is not a much feasible solution for IoT applications. The work, related with
    dedicated gateways presented in [7] describes the implementation of smart e-health
    gateways, named as UT Gates, at the edge of healthcare IoT in clinical environments.
    In addition to the cloud processing as in general case, they suggest the local
    data processing through the Smart Gateways. This step helps to create a fast response
    and avoids latency but it may be vulnerable to security problems such as the possibility
    of implementing malicious gateways that could eavesdrop on the patient''s data.
    Moreover, this system may not support the mobility-related aspects due to cost
    and it is hard to provide universal connectivity in the external environments
    with the proposed system. In [8], the authors introduce an open BLE platform (custom-designed
    beacon platform nRF24Cheep) and open source development of the BLE physical and
    Medium Access Control (MAC) layer in order to provide the capabilities of changing
    the communication stack. The Contiki OS port is provided for the new platform.
    In [9], authors propose an end-to-end security scheme for mobility enabled healthcare
    Internet of Things (IoT). Their scheme mainly consists 3 characteristics as, (i)
    a secure and efficient end-user authentication and authorization architecture
    which is based on the certificate based DTLS handshake, (ii) secure end-to-end
    communication developed on session resumption, and (iii) robust mobility implemented
    using the interconnected smart gateways. In [10], a model named iConfig is proposed
    for managing IoT devices in smart cities. This has an edge-driven platform that
    has mainly addressed the three major issues in current IoT management (i.e. registration,
    configuration and management). Under the [11], they propose a scheme named Collaborative
    on Demand Wi-Fi Sharing (COWS) and in this case, they propose a system to enable
    the Wi-Fi roaming facilities for users. But this system is not fully compatible
    with resource-constrained devices such as those that have power limitations with
    Wi-Fi. Other than [4], all the other related works use a dedicated gateway for
    data transmission. Moreover, the proposed solution in [4] supports a single relay
    for real-time data transmission only. If there is no relay nearby during the incident,
    the model proposed in [4] will not work. Therefore, a relay-based system is needed
    and it is suggested in our work. SECTION III. Proposed Architecture This system
    is about implementing an IoT based remote patient monitoring and caring system
    which facilitates maximum mobility and flexibility for users. The proposing system
    is similar to a fog computing approach [12], with third party mobile relays. An
    overview of the proposed system architecture is shown in Fig. 1. Fig. 1. Proposed
    system architecture Show All As indicated by Fig. 1, the whole architecture consists
    of four main components. At one end of the architecture, the network consists
    of BLE based sensor nodes with low power consumption. This part of the system
    is responsible for gathering the required patient data. For the use case scenarios,
    we selected the heart-rate and fall detection. The data generated from the sensors
    are forwarded into a 3rd party unknown mobile relay. In this case, the BLE sensor
    node selects a specific mobile relay before sending the information and the selection
    procedure is mentioned under the protocol section. Furthermore, each 3rd party
    mobile relay has a mobile application which enables and controls its connectivity
    with the network. At the mobile stations, there is no data processing or storing
    work, but the mobile can attach its location information with the transmitting
    data, to get the approximate patient location. In the next step, the mobile relay
    sends data to the cloud server via its internet connection accordingly. In this
    case, a secure socket communication establishes between the mobile relay and the
    cloud server. The server performs data processing, data storing and emergency
    situations detection. After the detection of any emergency, the server sends notifications
    to the registered carers of the patients as SMS and emails. Other than the alerts,
    the system also supports real-time data monitoring and location tracking services
    for the carers of the patient. Therefore, the patient''s data is available for
    the carers to view via a web application. SECTION IV. Protocol A. Single Mobile
    Relay Node BLE Connection The message flow of the protocol for a single mobile
    in the relay can be illustrated as the figure 2. Phase1: The donor mobile relay
    node connects with the Cloud Server(CS) via HTTPS connection request by the mobile
    app. Upon successful authentication, the CS issues an advertisement ID and a trust
    score. The advertisement ID is a plain text string which is used by the mobile
    to advertise itself. The trust score is an integer value about the mobile donor''s
    success in the previous data transmissions. Phase2: The mobile relay node starts
    advertising the received advertisement ID along with the trust score. Meanwhile,
    this mobile is also scanning for an advertisement from a BLE sensor advertising
    with the same ID. A BLE sensor device which is scanning for mobile relays can
    get the advertisement ID from the mobile relay node and start advertising itself
    with that same ID. In case of multiple mobile devices in proximity, the sensor
    node can select the mobile device with the best Received Signal Strength Indicator
    (RSSI) value and the best trust score. Then, the mobile app can establish a connection
    with a sensor if a match is found with its ID. Phase3: After the connection establishment
    with the mobile relay node, the BLE sensor can initiate a connection request from
    the CS. The mobile relay would forward this request to the cloud server. The server
    can then validate this request and approve the connection. Phase4: After the connection
    approval, the BLE sensor initiates the transmission of data to the mobile relay.
    These data packets may contain a timestamp and the data is encrypted so that the
    mobile relays cannot eavesdrop the user''s data. Once a fixed amount of data is
    transferred, the sensor expects an encrypted acknowledgment from the CS. If the
    acknowledgment is sent, then the data transmission is continued. Otherwise, the
    sensor terminates the connection with the relay and reports this session to the
    CS in the next successful data transmission. Phase5: The mobile donor can set
    the maximum threshold of data that a sensor can consume, so if the threshold value
    is reached, it can request to cease the connection from the CS. The CS then sends
    the last acknowledgment message to the BLE sensor and the sensor terminates the
    connection with the relay node. In this case, the sensor discards the session
    information as this is a legitimate session termination. To send more data, the
    sensor can restart from phase 2 and start scanning for nearby mobile relay devices.
    Fig. 2. Message flow of the proposed protocol Show All B. BLE Multi Connect Fig.
    3. Multiple mobile relay node connection Show All The transmission of real-time
    data and previously stored data together by a single mobile relay node may cause
    problems such as latency. Here, the stored data is the data that is generated
    by the sensors when the device is not connected to a nearby mobile relay. The
    paper proposes an expansion of the same protocol to transmit real-time and stored
    data separately by two mobile relays as indicated in Fig. 3. Here, the IoT device
    follows a procedure such that one mobile gateway is dedicated for transmitting
    the real-time data and another for the transmission of any stored data. In order
    to achieve this, there should at least two donor mobile devices. The real-time
    data has more priority and hence the selection of the mobile relay device for
    real-time data transmission is based on the best RSSI value and the trust score.
    To transmit the stored data, the IoT device selects the second best mobile. SECTION
    V. Implementation In order to implement the protocol, the selected use case scenario
    is the emergency situation detection system for people with problems in the heart.
    This involves sensors that can detect heart problems, a BLE device that can transmit
    the data, a relay mobile that supports BLE and a cloud server that performs operations
    such as user registrations, authentication, storage, detection of emergency situations
    and performing alert generation. The basic experimental setup which is implemented
    with the research work is shown in Fig. 4. Fig. 4. Prototype implementation Show
    All A micro-controller unit named ESP32, which is powered with BLE 4.2, is used
    to establish the communication pathway. The mobile phones used for the implementation
    were Samsung Galaxy M20 and Samsung Galaxy A20 with Android 9 Pie system and OPPO
    A37 running Android 5.1 Lollipop. The Android Studio 3 libraries were used for
    the mobile application. For the server-side implementation, Java Spring Boot framework
    is used. The database was implemented with PostgreSQL and for the time-series
    data storage, TimescaleDB extension of the PostgreSQL is used. The heart rate
    is obtained from a heart rate sensor model named MAX30100. Table I Configuration
    settings for ESP32 When a communication failure occurs or until the BLE sensor
    establishes a connection with the mobile relay, the data that is captured by the
    sensors are stored in an external flash memory connected to the ESP32. An external
    flash for the ESP32 was needed since ESP32 overall flash memory is 4 MB and a
    considerable amount of this space (3.5 MB) is allocated for the storage of the
    running application. The remaining amount of space would not be sufficient to
    store information generated over a long period of time. The ESP32 supports FreeRTOS
    and thus the parallel operation of multiple threads is possible from its dual-core
    CPU having Xtensa LX6 microprocessor. This can be used to establish the parallel
    operation of transferring real-time data from one thread and transferring stored
    data from another thread. It is more feasible than using a single thread as the
    real-time data should be given more priority over old stored data. Before beginning
    the data transmission, the device has to be registered by the user. For that,
    the remote server issues an IoT device ID to the patient and it should be saved
    within the BLE device''s memory. The server is able to distinguish each device
    and the patient associated with it for each data sent when attached with this
    saved device ID. After that, ESP32 continuously scans for the mobile relays within
    the close proximity of the sensor. Meanwhile, it saves the data generated from
    the heart rate sensors in the flash memory. When a single mobile device is discovered,
    it connects with the device directly and starts transferring data. In the presence
    of multiple mobile relay nodes, it selects the best mobile relay node based on
    the RSSI value and before connecting, it repeats the scanning multiple times to
    verify the availability of the best relay node. Once the connection is established,
    the data is encrypted by AES encryption and transmitted to the mobile app. From
    the app, this data is directed to the server. We have also appended location details
    of the mobile relay anonymously to detect the approximate location of the patient
    because rather than implementing it in the sensor, it is energy efficient as more
    energy will be drained to operate a dedicated GPS sensor along with the BLE device.
    The front end web user interface is made from the Angular framework. In the front
    end web application, it is required to perform user registration prior to the
    data transmission and is implemented as follows. A person should first undergo
    initial registration as a general user and he or she is able to select the role
    as a patient, donor or a carer. The donors are the third party mobile users who
    contribute to the mobile relay. The carer is someone who receives notifications
    about the patient''s health status. Carers will be able to receive these notifications
    and to view realtime health information about the patient after the patient gives
    permission for that. A user can perform any of these roles including all three.
    The real-time data from the patient can be rendered in a graph and viewed by both
    patient and the carers. The remote server back end of our system is implemented
    using Java Spring Boot as a set of Representational State Transfer (REST) Application
    Program Interfaces (API). We used web sockets to transfer data from the mobile
    app to the server. This data is continuously stored in the database. For each
    user session, the patient status is continuously monitored based on various criteria.
    The monitoring criterion can vary according to the patient''s healthcare device
    sensors. First, we selected heart rate detection as the use-case for the implemented
    system and implemented a criterion based on upper and lower threshold heart Beats
    Per Minute (BPM) where the lower is threshold is 60 BPM and the upper is 100 BPM.
    To test another use case, we used a device with an accelerometer sensor ADXL345
    to detect falls as well. Therefore, new devices can be added with different sensors
    that need any other criteria, according to the requirements of the patients or
    carers. If the emergency situation detection module detected any emergency situation
    it sends a request to the notification API to forward email and SMS notifications
    to patients and to pre-registered carers. Email notifications are sent via Gmail
    to the registered carers of a patient. To send SMS notifications, we used a cloud
    communication service named Twilio. SECTION VI. Experiments and Results To address
    several issues associated with the IoT device and BLE while designing the system,
    we conducted two experiments and integrated their results with the system. A.
    Data Processing Time Under Single Core and Dual Core Processing In this experiment,
    we observed the data processing times under the single and dual-core conditions
    of the ESP32 module. Under the single-core mode, both the stored data and realtime
    data are processed through a single-core and transmitted accordingly. But in contrast,
    two cores split the real-time data processing and stored data processing under
    the dual-core mode. For the experiment, we have selected 10 generated data samples
    with the sizes of, 5 kB, 10 kB, 20 kB, 30 kB, 50 kB, 75 kB, 100 kB, 150 kB, 300
    kB and 500 kB. Then each data sample is processed 30 times in the ESP32 module
    and the average processing times were calculated. Here, we observed a significant
    improvement in processing time when two cores are utilized for the data processing
    function in ESP32 as indicated in the following Fig. 5. Fig. 5. Stored data size
    vs processing time of data in a single core and dual cores Show All Moreover the
    achieved improvement can also be summarized as in Table III, as follows. As seen
    from the Table II table over 50% plus transmission time improvement can be achieved
    in each case through the utilization of two cores for the data processing ESP32.
    B. Data Transmission Losses with Distance This experiment intends to detect the
    transmission losses related to transmission distances. First, data is sent to
    the mobile phone from the ESP32 continuously and for every 1000 points of data,
    ESP32 sends an acknowledgment to the mobile. Meanwhile mobile also keeps track
    of the number of packets received. With higher inter-frame delays, the mobile
    phone was able to exactly synchronize this acknowledgment with its count. But
    when the delay is lower, we observed that the counts did not match each other.
    The observed data is indicated in Fig. 6 and it is clear that the transmission
    disparity increases with the increasing distance of transmission. It shows a clear
    variation of transmission success rate variation when the mobile is traveling
    away from the BLE sensor node ESP32. Moreover, we can clearly identify that more
    dissimilarities occur when the inter-frame delay is decreasing. Therefore, we
    can expect more reliable data transmission under sufficiently larger inter-frame
    delays. Table II Transmission time improvement under multi-connect Fig. 6. Distance
    vs successful data transmission count Show All Thus, when there are multiple relays
    nearby, the best mobile donor should be selected who is in the closest proximity
    and it is implemented in our work. Also, it shows the importance of implementing
    a handover mechanism to mitigate the issue of data transmission loss, when the
    previously selected mobile is moving away from the BLE sensor. In such a situation,
    IoT sensor scans and connects to the new best mobile as described in the protocol
    description. The handover mechanism can be illustrated as in Fig. 7. The BLE sensor
    can perform the handover from one mobile to another if the current host donor
    mobile goes away from the sensor than a threshold distance. In this case, it is
    halfway of 15 m distance that we have experimented. From Fig. 8, it can be observed
    that the successful data transmission possibility is significantly increased with
    the mobile handover because the distance between the BLE sensor and the mobile
    would not increase beyond the threshold distance when handovering is done. Fig.
    7. Handover of mobile relays at a threshold distance Show All Fig. 8. Distance
    vs successful data transmission count when handovering under 3ms and 5ms inter
    frame gaps Show All Table III shows the added features of proposed architecture
    in compared with existing solutions. With the table it is clear that the proposed
    system is a unique solution and addresses many problems existing with similar
    proposals and implementations. Table III Comparison of proposed solution with
    the existing pertinent works SECTION VII. Conclusion IoT has the potential to
    offer an extensive support for AAL to continuously monitor patients and detect
    emergencies. Most of the wearable IoT devices use dedicated gateways for data
    transmission. However, elderly people may often forget to keep their mobile phones
    always charged and also the user''s mobile phone might be turned off or might
    get damaged during an emergency. To mitigate these issues this paper proposed
    a BLE relay-based emergency situation detection system for AAL. The proposed solution
    extended the features of existing solutions by adding new capabilities such as
    multi-connect, automatic handovering, storage, forwarding data and load balancing.
    We have performed several experiments to get insights on the performance of the
    proposed system. It was detected that multi-core processing of real-time and stored
    data separately is a better solution than processing both together sequentially.
    The experiments revealed that the distance of the mobile from the sensor is important
    due to increase in the reliability of data with closer proximity. Therefore, it
    can be concluded that a data transmission handover mechanism in the BLE sensor
    node from a distant mobile relay to a closer one is important when implementing
    such systems. For the future work, we intend to extend the work to develop machine
    learning algorithms to detect emergencies and anomalies. ACKNOWLEDGEMENT This
    work is party supported by European Union in RESPONSE 5G (Grant No: 789658) and
    Academy of Finland in 6Genesis (grant no. 318927) and Secure Connect projects.
    Authors Figures References Citations Keywords Metrics More Like This Comparison
    Between Different Types of Sensor Architecture Using a Uniform Relay Protocol
    2020 8th International Conference on Wireless Networks and Mobile Communications
    (WINCOM) Published: 2020 A nearby server selection protocol based cross-shaped
    trajectory in sensor networks 2006 8th International Conference Advanced Communication
    Technology Published: 2006 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: An Emergency Situation Detection System for Ambient Assisted Living
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.jksuci.2021.09.015
  analysis: '>'
  authors:
  - Olivier Debauche
  - Saïd Mahmoudi
  - Pierre Manneback
  - Frédéric Lebeau
  citation_count: 10
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Related
    works 3. Methodology 4. Architectures 5. New trends 6. Towards Agriculture 5.0
    7. Conclusion Declaration of Competing Interest Acknowledgment References Show
    full outline Cited by (28) Figures (14) Show 8 more figures Tables (17) Table
    1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Journal of King Saud
    University - Computer and Information Sciences Volume 34, Issue 9, October 2022,
    Pages 7494-7514 Cloud and distributed architectures for data management in agriculture
    4.0 : Review and future trends Author links open overlay panel Olivier Debauche
    a b c, Saïd Mahmoudi a, Pierre Manneback a, Frédéric Lebeau b c Show more Add
    to Mendeley Share Cite https://doi.org/10.1016/j.jksuci.2021.09.015 Get rights
    and content Under a Creative Commons license open access Highlights • Cloud architectures
    used in Agriculture 4.0. • Distributed Architectures and Cloud Computing complements.
    • Strategies of association between Edge, Fog, Cloud. • New architectural and
    computing trends. Abstract The Agriculture 4.0, also called Smart Agriculture
    or Smart Farming, is at the origin of the production of a huge amount of data
    that must be collected, stored, and processed in a very short time. Processing
    this massive quantity of data needs to use specific infrastructure that use adapted
    IoT architectures. Our review offers a comparative panorama of Central Cloud,
    Distributed Cloud Architectures, Collaborative Computing Strategies, and new trends
    used in the context of Agriculture 4.0. In this review, we try to answer 4 research
    questions: (1) Which storage and processing architectures are best suited to Agriculture
    4.0 applications and respond to its peculiarities? (2) Can generic architectures
    meet the needs of Agriculture 4.0 application cases? (3) What are the horizontal
    development possibilities that allow the transition from research to industrialization?
    (4) What are the vertical valuations possibilities to move from algorithms trained
    in the cloud to embedded or stand-alone products? For this, we compare architectures
    with 8 criteria (User Proximity, Latency & Jitter, Network stability, high throughput,
    Reliability, Scalability, Cost Effectiveness, Maintainability), and analyze the
    advantages and disadvantages of each of them. Graphical abstract Download : Download
    high-res image (103KB) Download : Download full-size image Previous article in
    issue Next article in issue Keywords Agriculture 4.0Smart farmingSmart agricultureLambda
    architectureKappa architectureEdge computingFog computingMicro-service architectureData
    lakeData houseBlockchainOsmotic computingDew computing 1. Introduction Nowadays,
    the Internet of Things (IoT), also formerly named pervasive Internet, is present
    in all domains of our daily life and follows exponential growth. The number of
    connected devices is estimated at the horizon of 2022 at 42.5 billion and at the
    horizon of 2025 at 75.5 billion1. The global IP traffic is estimated to 333 ZB
    per month in 20222 with the need to store and treat this data (Carnevale et al.,
    2019). The European Commission has predicted that 18 billion of 29 billion connected
    devices will be related to the IoT in 2022 (Agency, 2020). Cisco in a white paper
    has announced that connected devices to the Internet will generate 850 ZB/year
    by 2021 (Cisco, 2018). It is difficult to precisely determine the number of connected
    devices on a world scale, but their number is about several billion. In addition,
    McKinsey Global Institute predicts a total economic impact of IoT and Edge Computing
    devices that will reach 11 trillion USD by 2025 (Manyika and Chui, 2015). In the
    sector of the agriculture, nearly 12 million agricultural sensors installed globally
    by 2023 with an increase of 20% annually, which is predicted by the Business Insider
    Intelligence Service (Meola, 2021). Moreover, the smart agriculture business was
    estimated at USD 13.8 billion in 2020 and is projected to reach USD 22 billion
    by 2025 at a Compound Annual Growth Rate (CAGR) of 9.8% (Meola, 2021). Within
    the IoT era, the type of clients is becoming increasingly lightweight. IoT devices
    and the network environment is gradually changing from high-speed wired networks
    to unstable wireless communication. Meanwhile, users'' demand IoT applications
    is also shifting to real-time and context-aware service provisioning, making the
    focus moving progressively from the cloud to the edge (Ren et al., 2017). The
    cloud is located within the Internet and is geographically centralized, is constituted
    of a few resourceful server nodes, and is inserted in multi hops in terms of distance
    among the clients (Munir et al., 2017). Cloud Computing (CC) is a paradigm widely
    available that offers benefits like minimal management effort, convenience, rapid
    elasticity, pay per use, ubiquity (Ai et al., 2018), easy maintenance, centralized
    management, and high server utilization (Shi et al., 2016). Furthermore, resources
    centralization implies an increase of average network latency, heavy bandwidth
    utilization, and high processing delay. Indeed, the tremendous amount of data
    handled in a unique server point can create congestion in the cloud servers and
    backhaul links (El-Sayed et al., 2017). Nevertheless, the rapid parallel development
    of the pervasive intelligent device, ubiquitous network, growth in popularity
    of virtual and augmented reality, self-driving vehicles, UAVs, social networks,
    networks applications, and services are not without consequences. As a matter
    of fact, the network bandwidth and speed limit performance and effectiveness of
    cloud computing especially for real-time and mission-critical applications cannot
    be guaranteed. Moreover, cloud computing can be hardly adapted or applied to various
    types of technologies and applications scenarios (Zhou et al., 2017). To address
    these issues, various extensions of central cloud computing have been proposed
    by industrial and academics to move computing and storage at the edge of the network
    close to users. Fog computing uses network elements between the central cloud
    and the edge of network and absolute edge elements such as microcontrollers close
    to sensors to process and store data with a distributed manner close to nodes.
    Whereas, with the developments of mobile devices, some new paradigms close to
    mobiles users have been proposed. For example, cloudlets or micro data centers
    are geographically implanted and accessible by means of Wi-Fi protocols; but,
    this approach does not always guarantee enough network quality. Manufacturers
    of cellular network equipment have proposed the Mobile Edge Computing (MEC) paradigm
    that associates fog servers with base stations to provide services to mobile devices.
    MEC associated with 5G allows to combine an ultra-low latency network with high
    available bandwidth, and processing resources accessible in the vicinity. The
    MEC original concept has been extended then to wireless networks and consequently
    renamed in “Multi-access Edge Computing” (Wang et al., 2020). Agriculture has
    previously undergone two waves of revolution. The first one was mechanization
    and the second was called the green revolution with genetic modifications (Saiz-Rubio
    and Rovira-Más, 2020). Since the late 1990s, the digital transformation of the
    agriculture in Agriculture 3.0 also called Precision Agriculture has begun with
    the integration of Geographical Information System (GIS), Global Positioning Systems
    (GPS), and the usage of sensors have invaded agriculture. They allowed the emergency
    of image processing, techniques using deep learning, and machine learning in the
    field of computer vision. This latter is implemented to discriminate weed, identify
    crops, detect diseases,…etc. The production of a large amount of data by agriculture
    3.0 has required the development of big data technologies to process them, reflecting
    important changes in various fields of research. Collected data must be recorded
    in a specific format in order to discover patterns, curate errors, eliminate duplicated
    or inconsistent data, or solve noise problems (Triantafyllou et al., 2019). Smart
    Farming also called Smart Agriculture or Agriculture 4.0 is a domain of IoT in
    full growth which bring innovative paths to improve the adaptability, the efficiency,
    and the resilience of the agriculture of production systems (Iaksch et al., 2021)
    boost competitiveness and profit (Triantafyllou et al., 2019), allocate resources
    reasonably, and avoid food waste (Zhai et al., 2020, Wolfert et al., 2017) thanks
    to the contribution of autonomous context awareness provided by sensors and the
    capability to execute autonomous or remote actions (Wolfert et al., 2017). Smart
    Farming displaces the strict application from the farm location to affect related
    fields such as decision making by farmers, biodiversity, supply chains management,
    food availability and quality, insurance, and research in environment and earth
    sciences,… Smart Farming is distinct from other domains of the Internet of Things
    (IoT) by the observation and action of biological objects (animals or plants).
    It differs from medical IoT by the fact that there are no issues related to privacy;
    but, the confidentiality of data is related to production processes. Like most
    areas of the IoT, Wireless Sensing and Actuating Network (WSAN) use Low-power
    and Lossy Network organized in hierarchical routing to collect data and actuate
    devices. Multi-path routing protocols can also be implemented to balance the data
    transfer load and conserve the energy of limited battery life, basic computational
    skills, unique communication identifier, and resources-constrained nodes. Due
    to the limited battery life, it is difficult and sometimes impossible to recharge
    or replace (Debauche et al., 2021). Moreover, energy-saving and ambient energy
    techniques must be applied to deal with the active and inactive operational time
    and schedule information transmission (Triantafyllou et al., 2019). To which objects
    can be added like connected agricultural vehicles, milking robots, Unmanned Aerial
    Vehicle (UAV) commonly known as drones, Unmanned Ground Vehicle (UGV) also called
    robots, mobile devices such as tablets used to encode punctual observations (Debauche
    et al., 2021), and external sources such as public geo-services (Triantafyllou
    et al., 2019). The use of IoT in agriculture 4.0 ranges from family farming as
    for example in India on a very small scale with a few low-cost sensors and actuators
    to very large scales with thousands of expensive commercial sensors and many connected
    agricultural pieces of machineries as in the American mid-west. Smart Farming
    is characterized as aforementioned by a wide variety of objects that can produce
    the highly contrasted amounts of data from few bytes/s to Gb/s. In addition, the
    availability of network protocols in rural areas to transmit this data impact
    also the type of architecture to implement. Applications need treatments in real-time
    and/or at a different time. The ”real-time” requirements are also very variable
    depending on the use case. For instance, remote control of drones requires reaction
    times of at most a few milliseconds while the Variable Rate Fertilizer (VRF) or
    Variable Spraying (VS) application aim to optimize nutrients and herbicides application
    respectively need reaction time in a range of few milliseconds to few seconds.
    The real-time processing for monitoring a herd of cattle is of the order of a
    few minutes to a few hours. The data retention time is very variable and is highly
    dependent on each use case. For example, UAVs produce tremendous quantities of
    images to transfer to the cloud in real-time where they must be quickly processed
    and stored. They can also be post-processed to extract additional data in batch
    processing. While UGVs images lose their value after processing and eventually
    actuating. However, if data is of a special, new or exceptional nature, it can
    be stored with a view, for example, to improving artificial intelligence algorithms.
    Other sensors transmit data only when anomalies are detected while others transmit
    at regular intervals a tiny amount of data. However, the adoption of Smart Farming
    is hampered by the lack of models to guide stakeholders on how to implement and
    to deploy dense and heterogeneous IoT-based monitoring systems and manage their
    interoperability (Triantafyllou et al., 2019). Commercial sensors are very expensive
    making it impossible for small farms to implement them (Garcia et al., 2020).
    In addition, two trends are currently opposed. That coming from the manufacturers
    of agricultural machinery who have developed their ecosystems and who want to
    extend the services offered to farmers by attracting them into the captive ecosystems
    in which they are locked. Furthermore, another trend is the development of open
    ecosystems in which farmers can preserve the ownership of their data and keep
    control of the processing carried out on this data and of their use. On one hand,
    farmers are therefore faced with a dilemma where they are in any case forced to
    use agricultural equipment that collects their data against their will; on the
    other hand, they want to keep control of their data collected through IoT sensors.
    Currently, it is difficult to predict which of these two trends will take precedence
    over the other or whether one of the two will coexist (Wolfert et al., 2017).
    In this context, both private and public researchers can either use generic commercial
    platforms offered by cloud players on which they have limited possibilities of
    adaptation or develop their own architecture on the basis of commercial or free
    bricks, but with much greater possibilities of adaptation. In this case, the choice
    is also delicate, and a bad evaluation of the constraints can jeopardize the research
    project. Due to the recent advances in big data, we present a survey that provides
    an overview of the state of the art regarding Smart Farming. It aims at summarizing
    parameters that condition the choice of architecture to collect, process, and
    store agricultural data. Since there is a wide variety of use cases, it is important
    to make an informed choice when it comes to architecture. In this way, we address
    the current gap in the literature with a review of cloud architecture used in
    Agriculture 4.0 to collect, process, and store data to enlighten the reader about
    the possible choices and the new trends that emerge. The rest of this paper is
    structured as follows: The second section is composed of two parts. In the first
    part, we summarize related previous review in the domain and their contributions,
    in order to contextualize our contribution to the literature. In the second part,
    we identify architectures implemented in Agriculture 4.0 use cases. In the third
    section, we describe the methodology used to identify papers, the conceptual framework
    used to analyze the literature, and the criteria used to compare the selected
    architectures. In the fourth section, we present architectures used to collect,
    process, and store data. We describe successively the cloud-centric architectures,
    the extension of cloud paradigm, the distributed architecture. In the fifth section,
    new trends and futures directions are presented. In the sixth section, we discuss
    the future evolution of Agriculture 4.0 to Agriculture 5.0. Finally, the last
    section concludes this paper with recommendations and perspectives. 2. Related
    works We begin our review by identifying the previous review realized in the field
    of Internet of Things applied to Smart Agriculture to take stock of the state
    of art and highlighting aspects that have not been explored at the present time.
    In this section, we focus to achieve two objectives. The first aims to position
    our work in relation to the existing literature. The second aims to identify architectures
    commonly used in the case of applications in Agriculture 4.0. 2.1. Previous reviews
    Reviewed papers presented in Table 1 were selected in the timeframe from January
    2017 to July 2021. The major contribution of each paper was extracted and highlighted
    to show our contribution to the literature. Table 1. Summary of previous review
    achieved on big data management in a context of Smart Farming. Major Contribution
    Reference Survey of agro-industrial and environmental solutions for monitoring,
    control, logistics, and prediction. (Talavera et al., 2017) Diagnosis and analysis
    of existing IoT deployments in regards to communication protocols. (Ray, 2017)
    Survey of IoT technologies in agriculture and highlighted the challenges going
    forward. (Tzounis et al., 2017) Identification of IoT challenges, its application
    in smart agriculture, and presentation of trends and technological innovation
    (Elijah et al., 2018) Review of IoT applications in Precision Agriculture, evaluation
    of previous contributions by researchers, and pathways to future innovation (Khanna
    and Kaur, 2019) Review of IoT deployment in protected agriculture, identification
    of its challenges, and prospection of the new research domain. (Shi et al., 2019)
    Review of existing IoT-based precision agriculture solutions for further achievement.
    (Ruan et al., 2019) Review, comparison, prospection, and challenges of wireless
    communication technologies applications in the field of Precision Agriculture.
    (Feng et al., 2019) Review, case study, and challenges of WSN in environmental
    behavior. (Shafi et al., 2019) Review, identification, challenges of current and
    future trends of IoT agriculture. (Ayaz et al., 2019) Survey of IoTbased agriculture,
    presentation of connection between IoT, big data, and cloud computing, regulation
    and policies of IoT, and its application in the field of agriculture. (Farooq
    et al., 2019) Survey of the use of UAVs, an overview of PA, and investigation
    of 20 UAV applications. (Radoglou-Grammatikis et al., 2020) Challenges of IoT-based
    agriculture architecture, a summary of existing surveys of smart agriculture.
    and classification of threats models, study, analysis of challenges and future
    works of security and privacy of green IoT-based agriculture. (Ferrag et al.,
    2020) Discuss the role of IoT and big data analysis in agriculture with an emphasis
    on the commercial status of applications and translational research outcomes.
    (Misra et al., 2020) resent different solutions to address IoT in arable farming
    challenges. (Villa-Henriksen et al., 2020) Systematic review presenting how IoT
    is used with smart farming (Navarro et al., 2020) Methodological review and analysis
    of IoT components and their applications in smart farming. (Debauche et al., 2021)
    Review of emerging technologies towards agriculture 4.0 and new pathways to agricultural
    practitioners. (Liu et al., 2020) Review, classification, presentation, comparison,
    and challenges of emerging technologies for IoT-based agriculture. (Friha et al.,
    2021) In the following paragraphs, we will draw a panoramic summary of the existing
    reviews during the past four years (2017–2021). In 2017, Ray (Ray, 2017) reviewed
    throughout his paper IoT applications and the challenges that have been faced
    while IoT deployment to improve farming. Talavera. et al. (Talavera et al., 2017)
    reviewed agro-industrial and environmental applications that are using the Internet
    of Things (IoT) for monitoring, control, logistics, and prediction. Tzounis et
    al. conducted a survey of IoT technologies in agriculture and the challenges that
    farmers face going forward (Tzounis et al., 2017). Elijah et al. identified the
    most encountered challenges in the field of IoT applications in smart agriculture
    and presented common trends for innovative ideas (Elijah et al., 2018). In 2019,
    Ayaz et al. provided a state-of-art about IoT-based architectures applied in agriculture
    and identified present and future trends in the same field of study (Ayaz et al.,
    2019). Farooq et al. presented the ingredients of IoT-based smart farming with
    used technologies that apply the utilization of network architecture and protocols;
    in addition to that, they provided an overview of the regulations and policies
    of the use of IoT in farming regarding security and privacy. They concluded their
    study by summarizing the main challenges encountered in this discipline (Farooq
    et al., 2019). Feng et al. provided an overview of the wireless communication
    technologies in the precision agriculture domain. They benchmarked the prospection
    and challenges of existing technologies with the regular communication time used
    (Feng et al., 2019). Shafi et al. conducted a literature review about IoT-based
    automation of agriculture along with Wireless Sensor Network (WSN). These authors
    presented a case study based upon two models: 1- a WSN to monitor real-time crop
    of health conditions, 2- system-base remote sensing imagery to classification
    between healthy and unhealthy yield (Shafi et al., 2019). In terms of agriculture
    protection, Shi et al. drew a panoramic review during the last decade to address
    the challenge and future works to further the research in the field of protected
    agriculture (Shi et al., 2019). Khanna et Kaur called into an evolutionary scenario
    to highlight the most significant impact of IoT in Precision Agriculture (PA).
    They evaluated the contribution of their predecessors and enhanced the challenges
    to open up a new direction of inspiration and innovation in IoT applied to PA
    (Khanna and Kaur, 2019). Ruan et al. reviewed literature works from 2009 to 2018
    to suggest new ideas for folks interested to conduct research in the field of
    agriculture IoT, infrastructures, data security, and data sharing (Ruan et al.,
    2019). In 2020, two studies have been carried out about 20 UAV applications that
    are devoted to either aerial crop monitoring processes or spraying tasks (Radoglou-Grammatikis
    et al., 2020) and about the dilemmas that researchers must overcome while deploying
    IoT in the green agriculture domain (Ferrag et al., 2020). Villa-Henriksen et
    al. identified different challenges encountered during the implementation of IoT
    in various applications and proposed different solutions to address them (Villa-Henriksen
    et al., 2020). Misra et al. discuss the role of IoT and big data analysis in Smart
    Farming (Misra et al., 2020). In 2021, a recent study conducted by Friha et al.
    hypothesize the use, application, classification, and comparison of the most developed
    emerging technologies such as Internet of Things (IoT), Unmanned Aerial Vehicles
    (UAV), Wireless Technologies, open-source IoT platforms, Software Defined Networking
    (SDN), Network Function Virtualization (NFV) technologies, cloud/fog computing,
    and middleware platforms (Friha et al., 2021). In the same year, Debauche et al.
    conducted a literature review to describe the main components of IoT and its applications
    in the field of Smart Farming (Debauche et al., 2021). 2.2. Platforms implemented
    in use cases We grouped applications into 4 categories: (1) Water Management in
    which we have aggregate all types of water use such as irrigation and watering
    animals. (2) Plant Disease and Pest groups all use cases in plant’s pathologies
    detection and treatment of plant pathologies (spraying of fungicides, pesticides,
    etc). (3) Crop Management brings together all the use cases relating to cropping
    operations: soil management (plowing, fertilizer application), sowing, weeding,
    and harvesting. (4) Livestock includes everything related to the breeding of farm
    animals (nutrition, behavior, diseases, treatments). Table 2 summarizes platform
    used to implement use cases in Smart Farming classified following our four categories.
    Table 2. Summary of cloud platforms, databases mentioned in Smart Farming reviews.
    Empty Cell Water Management Plant Diseases & Pest Crop Management Livestock Reference
    IoT platform Thingspeak x (Maureira et al., 2011) FIWARE x (Rodriguez et al.,
    2018) NETPIE x x (NECTEC, 2020) Ubidots x (Ubidots, 2021) SmartFarmNET x x (Jayaraman
    et al., 2016) Thinger.io x x (Luis Bustamante et al., 2019) Kaa IoT Platform x
    x (KaaIoT, 2021) IBM Watson IoT Platform x x x x (IBM, 2015) Microsoft Azure IoT
    Platform x x x (Microsoft, 2021b) AT&T M2X Cloud x (AT&T, 2021) Blynk x (Blynk,
    2021) MACQU x (Sigrimis et al., 2002) ERMES x (Granell et al., 2017) Agrocloud
    x x x (Kodati and Jeeva, 2019) CropInfra x (Pesonen et al., 2014) SensorCloud
    x (Corp, 2020) LoRaFarM x x x (Codeluppi et al., 2020)  Cloud platform Amazon
    Web Service x x x x (Amazon, 2021b) IBM Cloud x x x x (IBM, 2021) Microsoft Azure
    x x x x (Microsoft, 2021a) Integra x x (Souces and I., 2021)  Cloud Database DynamoDB
    x x x (Amazon, 2021) MongoDB Atlas x x x (Mongo, 2021) Firebase x x x (Google,
    2021) InfluxDB Cloud x x x (Influxdata, 2021)  Local Database MySQL x (Oracle,
    2021) SQLite x (SQLite, 2021) PostgreSQL/PostGIS x x (The PostgreSQL Global Development
    Group, 2021) Apache Cassandara x (Apache Software Foundation, 2021a) Apache Druid
    x x (Apache Software Foundation, 2021b) Garcia et al. give an overview on trends
    in Smart Irrigation in which they showed that data is stored in the database or
    in the cloud. On 151 reviewed papers, one uses Raspberry Pi, 18 databases, 53
    clouds, and 79 are self-developed or not mentioned (Garcia et al., 2020). Navarro
    et al. identified 21 Platforms used in 50 various use cases classified into 5
    categories: Artificial Intelligence, Big Data, Machine Learning, Computer Vision,
    and Other/Not Identified (Navarro et al., 2020). Jayaraman et al. present SmartFarmNet,
    an IoT platform offering effortless integration of sensors, supporting scalable
    data analytics, and proposing do-it-yourself tools to analyze and visualize data
    (Jayaraman et al., 2016). Codeluppi et al. describe LoRaFarM a general architecture
    modulated depending on the farm’s characteristics and requirements (Codeluppi
    et al., 2020). The monitoring of crops particularly more sensitive to them as
    saffron is crucial. The DIAS Architecture (Triantafyllou et al., 2019) uses different
    ground and leaf sensors to monitor the real-time 24/24 h cultivation process of
    saffron. This data is transmitted by LoRaWAN with IPv6 protocol and MQTT-SN protocol
    to FIWARE’s context broker. The broker manages all networking devices by means
    of sixteen types of messages exchanged following publish-subscribe model. The
    FIWARE NGSI API of oversees the consumption, subscription, and processing of all
    the information collected and its publication. Afterward, the data is stored and
    analyzed with a random forest algorithm which allows extracting information about
    the crop growth and health. Vegetation indexes: Normalized Difference Index (NDI),
    Excess Greenness Index (ExG) are calculated with PiX4D3 image processing tools.
    Object-based image analysis (OBIA) is used to recognize weeds or discriminate
    species. Finally, collected data are categorized and evaluated accordingly with
    vegetation index values, moisture level, and plant developing state by means of
    the Apache Spark framework for the Big Data analysis and Waikato Environment (WEKA)
    a framework specialized in data mining to produce reports and predictions. Decision-making
    is a very important task in the farmers’ activities but with the amount of data
    always increasing, they encounter difficulties on one hand to make proper decision
    about agricultural management and on the other hand translate this data into practical
    knowledge (Zhai et al., 2020). On the other hand, there is a need for platforms
    of the Agricultural Decision Support System (ADSS) to assist farmers to make precise
    decisions evidence-based. For example, Watson Decision Platform for Agriculture
    combines IBM Watson with IoT and Cloud Computing to detect crop disease from UAV
    images. It is also possible to optimize time for crop operations to obtain a better
    price on trading market. The second example is Digital Farming System4 takes advantage
    of computer vision, cloud computing, and AI to propose a better timing for corp
    operations, notify when a crop is infected by any disease. Smart Irrigation Decision
    Support System (SIDSS) is composed on one hand of a set of sensors and a weather
    station and on the other hand a DSS based on two machine learning algorithms.
    Partial Least Squares Regression (PLSR) to deduct unnecessary variables and Adaptive
    Neuro -Fuzzy Inference Systems (ANFIS) used to minimize estimated errors under
    a target threshold (Navarro-Hellin et al., 2016). SIDSS generates planning of
    water amount and time for irrigation. Multi-robot sense-act system (Conesa-Munoz
    et al., 2016) is a planner of aerial and ground vehicles which assign tasks to
    the most appropriate work units. A Harmony Search Algorithm is used to optimize
    plans for UAVs while meta heuristic is running for ground vehicles. 2.3. Analysis
    of previous literature The analysis of existing reviews about smart farming shows
    that applications use whether open source or commercial cloud architecture whether
    developing specific architecture responding to their aims or do not describe their
    storage and processing system. The latter represents more than half of the papers
    and means that some of the processing architectures remain unknown because they
    have never been specifically described and studied. Moreover, the fact that further
    development is being made in architecture may be the fact that commercial platforms
    do not fully address the needs of Agriculture 4.0. This brings us to our research
    questions and their respective motivation: 1. Which storage and processing architectures
    are best suited to Agriculture 4.0 applications and address its particularities?
    Motivation: On one hand generic architectures dedicated or not to IoT are able
    to address a large number of use cases but not specifically the needs of Agriculture
    4.0 exist. On the other hand, researchers develop architectures to address specific
    issues or requirements of use cases. The selection of an adapted architecture
    is crucial for the correct implementation of identified use cases. 2. Can generic
    architectures meet the needs of Agriculture 4.0 application cases? Motivation:
    Agriculture 4.0 has specific requirements described in the introduction section
    which cannot all be addressed by a single classical generic architecture. A comparison
    between the pros and the cons of major generic architecture in the context of
    agriculture 4.0 is important to highlight the choice during the conceptualization
    step. 3. What are the horizontal valuation possibilities that allow the transition
    from research to industrialization? Motivation: The use of architectural solutions
    which can be for example free of fees during the research phase but needs a reimplementation
    caused by license limitations, the cost of the license in the use cases budget,
    etc. The use of products in closed or semi-closed ecosystems is a barrier to the
    research valuation. 4. What are the vertical valuation possibilities to move from
    algorithms trained in the cloud to embedded or autonomous products? Motivation:
    The massive collection of data in the cloud allows to development of complex algorithms
    that need a large amount of computing resources to be elaborated. Afterward, they
    can be compressed, reduced, optimized in order to be deployed in embedded devices
    or divided and establish a collaboration between devices and computing resources
    such as cloud, fog, etc. In order to answer these questions, a review of the literature
    will make it possible to synthesize the different approaches currently used, to
    identify new trends and to consider new lines of research to be explored. 3. Methodology
    In order to address, our first and second research questions, we achieve a systematic
    review to identify generic architectures and combination of architectural elements
    used by researchers to implement concrete use cases. Moreover, we attempt also
    identify commercial products and existing services/ platforms used to implement
    projects in agriculture. 3.1. Systematic review methodology The research questions
    outlined at the end of the related work section has been addressed by combining
    keywords of the first group that refers to architectures (i.e. cloud architecture,
    distributed architecture, big data, Internet of Things, IoT) and of the second
    group contained keywords related to agriculture (i.e. agriculture, smart farming,
    food, agri-food, precision agriculture). Our methodology is based on 3 consecutive
    steps: literature identification, reading literature, and information extraction.
    During the first step, we have read and have collected individual papers based
    on the achieved of previous papers. We have reviewed and completed by a systematic
    survey of white literature (full articles and conference papers) from January
    2016 to December 2020. In addition, we targeted solely and exclusively papers
    written in English and focusing on architecture design have been considered. Our
    bibliographic review was limited to the last 5 years because the rapid development
    of IoT. The systematic review was retrieved from the following major bibliographic
    databases: Scopus (Elsevier), IEEE Xplore Digital Library, Wiley Online Library,
    ACM Digital Library, and Springer. These bibliographic databases have been chosen
    widely covering relevant bibliography and relevant advanced bibliometric features
    especially number of citation and relevant literature suggestion. From these databases
    1058 peer-reviewed articles were retrieved. After their screening 55 papers were
    classified relevant while remaining articles were considerate not relevant and
    therefore excluded from further reading and analysis. The high number of excluded
    papers is due to numerous papers describe i.e. conceptual or theoretic architectures
    which were never implemented, experimental architectures that have been the subject
    of a single article or that have never been proven by other research teams. We
    discard also papers that were not a directly related Big data and the agricultural
    sector. Table 3. Table 3. Keywords used for achieved the systematic review. Area
    Keywords Related concepts Agriculture Agriculture, Agricultural e-Agriculture
    Agri-Food Agribusiness Smart Farming Farming Precision Agriculture, Precision
    Farming  Internet of things IoT, Internet of Things, internet-of-things Big data
    Big Data Big Data Data Management Data Management Architecture Cloud Architecture,
    Distributed Architecture In a second step, we included English grey literature
    (reports, blogs, magazines, and web-items) into our review using Web of Science
    and Google Scholar. Table 4. We discarded papers that were written in other languages
    than English, Master and doctoral dissertation, and duplicated articles gathered
    from Google Scholar. Afterward, we have selected literature that has carefully
    been read in detail to extract relevant information of research questions. The
    extracted information was analyzed and summarized in a conceptual framework illustrated
    in the Fig. 1. Table 4. Sources of collected literature. Data source URL IEEE
    Xplore Digital Library https://ieeexplore.ieee.org Scopus https://www.scopus.com
    Springer https://link.springer.com/search Wiley Online Library https://onlinelibrary.wiley.com
    Google Scholar https://scholar.google.com Web of Science https://publons.com/publon
    ACM Digital Library https://dl.acm.org Download : Download high-res image (171KB)
    Download : Download full-size image Fig. 1. Conceptual framework of data processing.
    Three ways of treatment of data are possible. The first process data in real-time
    (left branch identified by (1) on Fig. 1), this one is generally not stored except
    eventually particular or exceptional data in order to enrich the training database
    of artificial intelligence algorithms. This way of data treatment is used for
    example by robots that inspect a crop, discover a pest, and then eliminate it.
    After intervention the value data is near null. The second way is a mixed way
    in which data must be processed as quickly as possible. This one addresses use
    cases where latency required must be comprised between few milliseconds to few
    seconds with data, which conserves a value during a certain period of time. This
    latter justifies its storage according to the use case data management plan that
    predicts the time after which the data will be aggregated and then deleted. This
    way in identified by (2) on Fig. 1. It addresses use cases where all data must
    be processed and then stored for eventual post-processing for example to estimate
    trends of parameters such as the milk quality, volume of palatable species available
    in a pasture. The third way is stored data theirs native format without transformation
    (Identified by (3) on Fig. 1). This way is implemented on use cases that do not
    require real time processing or use cases where the amount data is so important,
    which makes treatment impossible. In this latter case, data are consumed by micro
    services that sample data to exact knowledge. This way is also employed for data
    which have a low value or lose their value so quickly that there is no point in
    transforming them for long-term storage. For instance, a UGV identifies and eliminates
    a pest. The image of the insect is no longer relevant after its elimination. 3.2.
    Architecture comparison criteria In order to compare selected architectures, we
    chose to select 8 criteria:(1) User Proximity expresses the necessity to be close
    to the user. This criterion is important for applications where privacy and response
    time to query are critical. Attribute a value of one * when privacy is not crucial;
    ** when the proximity with user is desirable but not crucial for the development
    of the use case; *** when the user proximity is the corner stone of the application.
    (2) Latency & Jitter criterion describes the importance for the architecture to
    have a minimal latency and jitter. This criterion is particularly important for
    use cases where response time to query in quasi (real time) is required and/or
    time between data production and ingestion by the processing and storage architecture
    is essential. (3) Network stability criterion translate the necessity to have
    a stable network or if is interruption can be tolerated. Use a value of * if the
    use case implemented can tolerate the absence of network during few hours; **
    if few minutes of interruption are tolerable; *** is stability of the network
    is an essential element of the use case. (4) The high throughput criterion expresses
    the capability of the architecture to process quickly a wide amount of data arriving
    at high frequency; Use a value of * if the data arrive mostly at regular intervals;
    a value of ** if the data arrive in bursts, and *** if the data arrive continuously
    at high frequency ( 10 Hz). (5) Reliability is a criterion that expresses if the
    infrastructure is critical in other terms whether an interruption in infrastructure
    could cause loss of life or not. Attribute a weight of * if the data is not critical
    and potential damages caused by an interruption of the architecture are minors
    or null; ** if potential damageable but tolerable if they occur more than once
    a year; *** if the application cannot tolerate any interruption which would cause
    irreversible damage or loss of human life. (6) Scalability is a criterion that
    expresses the regularity of the evolution in terms of processing and storage during
    a period of one year. If the scalability must be achieved at most once a year
    use a weight of *; if the scalability is achieved at most twice a year use **;
    if the scalability must be achieved more than two times by year use a weight of
    ***. (7) Cost-Effectiveness criterion reflects the need to control infrastructure
    costs. This criterion is more important as the infrastructure is brought to evolve
    both in terms of scale and complexity. Use the weight of * if the project will
    remain in a relatively constant size and do not need to be scaled or dramatically
    modified; Use **, if the project evolves reasonably, i.e. should not undergo significant
    modification more than once a year. Use a weight of *** if the size of the project
    and/ or its complexity need a fine study of cost. (8) Maintainability criterion
    is directly linked to the sustainability of the project. If the sustainability
    of the project will not exceed two years to allocate a point of *; if the life
    of the project is between 2 and 5 years, assign a score of ** beyond 5 years,
    assign ***. 4. Architectures The numerous publications dealing with cloud architectures
    relating to Agriculture 4.0, summarized in Table 2, show that a great deal of
    effort has been devoted to solving a whole range of problems related to many use
    cases. Indeed, a universal and a unique architecture do not exist for IoT applications
    in Smart Agriculture which ensure all needs of all use cases. This is the reason
    why several researchers have proposed various architectures which address specific
    issues of generic architectures. The Fig. 2 gives a global overview on Agriculture
    4.0 organization. Download : Download high-res image (340KB) Download : Download
    full-size image Fig. 2. Global structure of IoT in Agriculture 4.0. 4.1. Central
    Cloud Architectures Central Cloud Architectures are based on two basic architectures
    that are associated or combined in order to form modern architectures. These two
    architectures are: Batch Architecture aims to process an entire dataset in an
    offline mode. For this type of architectures, as long as the processing of the
    dataset is not finished, it continues and produces results only when it has reached
    its end. Generally, the data is selected and distributed to different nodes in
    order to be processed more quickly. When all the treatments are achieved on all
    nodes, the results are sorted and aggregated to obtain a global output. This architecture
    is easily implemented, and the aggregation is done by a framework, but processing
    times can be long, and data extracted during the treatment cannot be processed
    before the end of the treatment in progress. Furthermore, it is possible to increment
    results of previous batch and produce a result that integrates treated data in
    progress. Sallah et al. used a batch architecture to update data within the AquaCrop
    model (FAO) embedded in R-environment in order to facilitate model calibration
    and validation, run and evaluate all fields in a single run (Sallah et al., 2019).
    Nolack Fote et al. presented an architecture to extract knowledge on the long
    term from data in Precision Livestock Farming (PLF) (Fote et al., 2020). Table
    5. Table 5. Pros and Cons of Batch Architecture. Pros Cons - Easy to implement
    and maintain. - Process only data previously stored in another form (file, database,
    etc). - Able to achieve long term treatments (several hours or days). - Processing
    cannot be modified before the end of the treatment. - Reprocessing of old data
    that are easy to achieve. - Results available only at the end of the treatment.
    Real-time Architecture also named Streaming Architecture processes data as it
    arrives, and results are progressively available by opposition to the batch architecture
    where it is not necessary to wait for the end of ingestion of all input data to
    obtain a result. The notion of real-time is strongly dependent on the analysis
    context with a processing time from a few milliseconds to a few minutes. Real-time
    architecture can be implemented in two different ways. On one hand with micro-batch
    in which a tiny amount of data is processed each n seconds and a result is obtained
    at the end of the treatment or on the other hand with a streaming approach in
    which each new data is immediately processed and output is quickly produced. This
    architecture is limited to data flow processing (Miloslavskaya and Tolstoy, 2016).
    Table 6. Table 6. Pros and Cons of Real-time Architecture. Pros Cons - Allow a
    rapid treatment of newly arrived data. - Not able to achieve processing on large
    size of the batch. - Batch processing can be emulated using micro batches but
    not all algorithms can be implemented. - Reprocessing of old data difficult to
    implement. - Easy to implement and maintain. - The need for real-time processing
    involves the use of an estimator rather than the precise values that would take
    too long to be calculated. Various data are produced by different fields or animals
    sensors, vehicles, and robots of the Agriculture 4.0. Afterward, this data must
    be on one hand stored in a raw state and processed in an offline way where long
    and complex treatments can be achieved. On the other hand, data can be processed
    before its storing with offline processing, streaming processing, or a combination
    of these ones. The storage time is extremely variable following the nature of
    the data and their loss of value over time. Offline processing is classically
    used to process images from UAVs, UGVs, or satellites, for example, to determine
    photosynthesis activity, evaluate the canopy development or stocks of palatable
    species available in a pasture, etc. While Streaming processing allows detecting
    anomalies in animals’ behaviors in real-time, or during agricultural operations
    such as the harvesting, disease and pest detection, weeds elimination. In these
    last cases, data is not stored because it quickly loses all value after its ingestion.
    Finally, a combination of the two previous ways i.e. Offline and Streaming processing
    is used to estimate real-time metrics and achieve complex treatments in an offline
    way at the same time. This approach is used by milking robots which detect anomalies
    in the production in real-time while the offline processing estimates the future
    production of each cow based on previous milking (Debauche et al., 2021). Lambda
    architectures are used in systems that need to process and expose quickly massive
    amounts of streaming data. This cloud architecture was proposed by Nathan Marz
    and James Warren (Marz and Warren, 2013) to handle tremendous quantities of data
    and resolve complex problems combining processing large volumes of data (Batch)
    while incorporating the most recent data processed in real-time processes (Singh
    et al., 2019). This architecture is generic, scalable, and fault-tolerant against
    hardware failures and human mistakes. The architecture is composed of three layers:
    (1) batch layer process very large quantities of data by batch; (2) speed layer
    which processes data in real-time and provides views based on the most recent
    data and (3) serving layer responding to queries. Data comes from either a data
    source or a message queue. This paradigm allows executing arbitrary queries over
    any real-time data and is particularly adapted for critical infrastructure and
    health systems (Diaz et al., 2016). Several implementations of Lambda Architecture
    in smart Environment management, big data storage and analytics can be found in
    (Villari et al., 2014). Among the criticisms that have been made against lambda
    architecture is the need to make twice the developments for the real-time branch
    and the batch branch. It is possible to perform a batch processing and in real
    time with flow processing is what the Kappa architecture described below does
    (Kreps, 2014). Fig. 3 Table 7. Download : Download high-res image (116KB) Download
    : Download full-size image Fig. 3. Lambda Architecture General Scheme. Table 7.
    Pros and Cons of Lambda Architecture. Pros Cons - Process data in real-time or
    in batch processing in separate ways. The reliability of two ways of treatment
    is most costly than other architectures if the two execute the same treatment.
    Among use cases in agriculture 4.0 using a lambda, we would like to highlight:
    Roukh et al. proposed WALLeSMART, a cloud platform based on lambda and specifically
    developed for Smart Farming. This platform implements Apache Kafka to store temporary
    data before their treatment. Apache Hadoop and the programming model Mapreduce
    is used for the batch processing while Apache Storm process data in realtime.
    The originality of this architecture is the coupling of a NoSQL database Apache
    Casandra and a SQL database, PostgreSQL where data is stored in the function of
    its nature. The GraphQL query language allows to querying databases. (Roukh et
    al., 2020, Roukh et al., 2020). Debauche et al. describe a lambda architecture
    for digital phenotyping (Debauche et al., 2020) and farm animals’ behaviors coupled
    with an Application Hosting Architecture based on Apache Mesos and Docker containerization
    to facilitate the deployment of various applications. An API interconnects and
    controls accesses between the Lambda Architecture and the Hosting Application
    Architecture. The Lambda architecture is based on Apache Beam to easily change
    the runner in the function of the technology evolution and improve its sustainability.
    Apache Druid is used to store time series data (Debauche et al., 2019) and metadata
    of data stored in the Datalake based on Apache Hadoop (Debauche et al., 2018).
    A variant of this architecture, named Unified Lambda architecture combines batch
    and stream pipelines which runs concurrently, and then the results are merged
    automatically (Siciliani, 2015). AllJoyn Lambda integrates AllJoyn a framework
    that offers: (1) proximal devices and applications discovering; (2) specific devices
    framework adapting; (3) transmission between devices with Bluetooth, Wi-Fi, etc.;
    (4) interoperability between operating systems; (5) efficient and secure data
    exchange through D-BUS (Villari et al., 2014). The Kappa architecture, proposed
    by Jay Kreps from LinkedIn (Kreps, 2014), simplifies the Lambda architecture by
    combining real-time and batch layers. This cloud architecture differs from the
    Lambda architecture by using a non-permanent storage system of data in an unchangeable
    log file such as system as Apache Spark or Apache Kafka, and consequently allow
    only storage for a limited time in order to allow an eventual reprocessing of
    these data. Batch and Speed Layers are also replaced by a stream processing engine.
    So, the Kappa Architecture is composed of two layers: streaming and serving layers
    and can be implemented with a publish-subscribe messaging like Apache Kafka, which
    facilitates data ingestion. Fig. 4. Download : Download high-res image (121KB)
    Download : Download full-size image Fig. 4. Kappa Architecture General Scheme.
    The main advantage of this architecture is its simplicity. It avoids having to
    maintain two separate code bases for the batch and speed layers. When processing
    on real-time and historical data are the same, a Kappa Architecture must be used.
    Fast Data Architecture is a variant of Kappa Architecture in which the data are
    no longer read from files but from an additional mechanism like Kafka that captures
    multiple streams combines them before being processed by the speed layer (Lakhe,
    2016). Persico et al. achieved a benchmark of Lambda and Kappa architectures and
    show that Lambda outperforms Kappa for social networks data (YFCC100M) processing
    (Persico et al., 2018). Table 8. Table 8. Pros and Cons of Kappa Architecture.
    Pros Cons - Very efficient for real-time processing thanks to in-memory processing.
    - Batch processing emulates thanks to micro-batch treated via the real-time way.
    - Optimized cost because allows real-time and batch processing. - Not able to
    process large batch size. - Must be finely tuned from data to obtain the best
    performances (Nkamla Penka et al., 2021). Other Architectures derived or inspired
    of the previous architectures have been developed to address specific problems
    such as (1) SMACK (Estrada and Ruiz, 2016) which attempts to propose an optimal
    architecture with fixed components; (2) Liquid (Fernandez et al., 2015) is an
    architecture which provide low latency, incremental processing, high available
    with isolated resource, and able to store high throughput data at low operational
    cost architecture; (3) Butterfly (Lakhe, 2016) proposes to unify batch, speed
    and serving layers in a unique platform in which data are organized as a collection
    of three types of abstractions; (4) Zeta (Scott, 2015) which integrates a lambda
    architecture with business aspect of the enterprise; (5) BRAID (Giebler et al.,
    2018) is a hybrid processing architecture where all coming data and configuration
    file of processing, and eventually processing results written back are stored
    in a shared storage; (6) IoT-a (Hausenblas, 2014) is composed of three blocks:
    Ad-hoc queries, a Database, and a Distributed File System; (7) Polystore (Meehan
    et al., 2016) implements a multiple database system PostgreSQL, SciDB and Accumulo
    because a database alone cannot store all types of data efficiently. Table 9.
    Table 9. Qualitative evaluation of cloud-centric architecture. Criterion Batch
    Stream Lambda Kappa User Proximity * * * * Latency & Jitter * * * * Network Stability
    * * * * High throughput *** *** *** *** Reliability *** *** *** *** Scalability
    *** *** *** *** Cost Effectiveness *** *** * ** Maintainability *** ** * ** The
    analysis of the literature achieved shows that two major generic architectures:
    Kappa and Lambda allows to address of various use cases and are widely implemented
    and proven in other domains of the Internet of Things. The Lambda is more expensive
    to implement than the Kappa because of the need to maintain two separate parallel
    processing branches for stream processing and batch processing. It is interesting
    if different processing are carried out on the two processing branches. Otherwise,
    a Kappa architecture with a single processing branch that processes both the streams
    and the data in batches is more appropriate in most cases because it is cheaper
    and easier to maintain because a single code performs both types of processing
    (stream and batch). Looking at our first two research questions, we observe that
    Lambda and Kappa cloud architectures are efficient but these architectures alone
    operating in central cloud cannot address, for example, use cases where very low
    latencies are required. They will have to be hybridized and completed to address
    these particular cases. Two possibilities are available to us. The first way consists
    in associating several specialized cloud platforms to make it possible to obtain
    greater genericity or at least to better cover a domain. The second consists of
    supplementing the cloud-centric architectures that we have just mentioned with
    other architectural elements in order to better address the specific needs of
    Agriculture 4.0. 4.2. Extension of the cloud paradigm With the increase of the
    amount of data produced by the myriad of connected things, the amount of data
    to process, to transfer by network, and to treat in the cloud computing have called
    into question the architecture of storage and data processing. To solve the problem,
    two ways have been proposed, the first is Multi-Cloud Computing, the objective
    of which is to ensure redundancy in order to improve latency. The second is the
    Federated Cloud with the aim of pooling resources for better use. Multi-Cloud
    Computing (MCC) (Manyika and Chui, 2015) is an extension of Cloud Computing paradigm
    where services are distributed on multi-clouds. In this architecture the workflow
    is distributed entirely in the cloud, data redundancy is also verified. One advantage
    of the MCC is the high recovery rate but it has the same disadvantages as Cloud
    Computing, along with complexity and portability issues. Kazim et al. proposed
    a framework to deliver IoT services and establish cooperation across multi-clouds.
    An authentication allows communicating cloud to authenticate each other cloud
    dynamically. While a service selects the best IoT service matching with user requirements
    among multiple clouds and taking into account the SLA parameters agreed between
    the user and the provider (Kazim et al., 2018). Federated Cloud (FC) aggregates
    resources of multiple cloud providers to improve users’ freedom and allows users
    to choose where they want to deploy their applications. A Federated cloud can
    be defined as a voluntary collaboration between heterogeneous cloud providers
    collaborating to share their own unused resources. Using a cloud federation helps
    to ensure service performance during load ups with resources borrowed from other
    clouds. In addition, the geographical dispersion of the installations makes it
    possible to migrate to another installation and to guarantee the service in case
    of breakdown. A unified interface allows to use it an easy consultation of the
    offered services. Finally, thanks to the dynamic distribution of the load, it
    is possible to bring the treatment closer to the user and consequently improve
    the Quality of Service (Assis and Bittencourt, 2016). Cloud federations include
    European Federated Cloud (Sipos et al., 2013), Massachusetts Open Cloud, Mosaic
    (Petcu et al., 2013), IEEE P2302, and Open stack Keystone. Drakos et al. described
    agINFA, a common research data infrastructure for agriculture, food and the environment
    using EGI Federated Cloud. This infrastructure allows to partner to share research
    infrastructure components, APIs, a registry of web-based information service and
    dataset for agriculture (Drakos et al., 2015). 4.3. Distributed architectures
    The post-cloud approaches allow to improve latency and jitter for immobile entities
    but do not provide an answer adapted for mobile devices and local awareness. The
    large amount of data generated at the edge has increased the speed of data transportation
    that is becoming the bottleneck for the cloud-based computing paradigms (Shi et
    al., 2016). Moreover, the treatment of data in the cloud does not offer any guarantees
    about privacy, on the response time and real-time actuation because the huge number
    of devices increases the latency and jitter. Moreover, the mobility of devices
    and power constraints makes the communicaion difficult with the cloud all the
    time (Botta et al., 2016, Zhou et al., 2017). The aim has been to bring data storage
    and processes data, filtering, and data analysis closer to data-producing objects
    to limit bandwidth consumption and relieve the cloud. Three major paradigms have
    been proposed to address these issues and bring cloud computing-like capabilities
    to the edge of the network. All these infrastructures manage mechanisms of Virtual
    Machine (VM) or containers migration and adjust if needed, the provisioning of
    capabilities where users are located. Moreover, the three paradigms allow the
    creation of federated infrastructures in which can coexist multiple edge infrastructures
    which can exchange information and services (Roman et al., 2018). 4.4. Elements
    of distributed architectures In order to always bring closer, the processing capacities
    of intermediate processing have been set up between connected objects and the
    cloud at the network level (Fog Computing) and at the level of telephony providers
    (Mobile Edge Computing). Fog Computing is a concept created by Cisco Systems and
    is an extension of the cloud computing paradigm (Munir et al., 2017) in which
    computation, storage and network services are provided between end devices and
    cloud/ classify and analyze the raw IoT data streams at near-edge and edge network
    level (Cisco, 2018). Fog nodes are either physical components such as gateways,
    switches, routers, servers etc. or virtual components such as virtualized switches,
    virtual machines, cloudlets, etc.; deployed following private, community, public
    or hybrid. Private nodes are reserved for a single organization, community nodes
    are used by a community, public nodes are dedicated to the general public, and
    hybrid mix the third previous modalities (Uehara, 2017). This paradigm allows
    to limit data transfer on cloud, reduce latency (Sethi and Sarangi, 2017), and
    jitter thanks to a three-tier architecture (Roman et al., 2018). In this hierarchical
    architecture, the analysis of local information is achieved at the low level and
    the coordination and global analysis are performed at the top level. The Fog Computing
    supports mobile devices (Sethi and Sarangi, 2017), response time in real-time
    or predictable latency (Lopez et al., 2015), bandwidth saving, an improving of
    security and resilience, scalability, multi-tenancy, advanced analytics, and automation
    (Byers, 2017), cost-effective services (Yang, 2017). Fog Computing allows also
    the federation of fog infrastructures in order to allow cooperation between multiple
    organizations (Roman et al., 2018). Furthermore, the architecture is optimized
    for a use case and applications which must run on them (Byers, 2017). Fog Computing
    differentiates from cloud computing mainly by the proximity with end-users at
    the edge of networks localized or distributed geographically consisting in many
    relatively less resourceful (Munir et al., 2017). In addition to network equipment,
    fog computing can also be carried out in cloudlets and micro data centers. Cloudlets
    were proposed to address the end-to-end responsiveness between mobile devices
    and associated clouds. Cloudlets (Mach and Becvar, 2017) are micro data center
    geographically deployed in vicinity of End Users. This mobility-enhanced small-scale
    cloud data center is composed of computers with high computation power which provide
    both computation resources and storage. Cloudlet is much more agile (highly dynamic
    provisioning) than cloud due to user mobility churning. The mobility of users
    implies the use of a virtual machine to rapidly instantiate compute-intensive
    and latency-intensive applications and migrate the offloaded services between
    different cloudlet in the function of the user mobility. Cloudlets must be firstly
    discovered, selected among several candidates before starting provisioning. At
    the end of the session, the instance is destroyed (Ai et al., 2018). Cloudlets
    are accessed by mobile user equipment via Wi-Fi imply a high latency caused by
    the network and switch between mobile network and Wi-Fi and by consequence Quality
    of Service (QoS) and Quality of Experience (QoE) are hard to fulfill (Mach and
    Becvar, 2017, Manyika and Chui, 2015). Moreover, Cloudlets cover usually a small
    region and do not offer any guarantee on ubiquitous computing and scalability
    in service (Manyika and Chui, 2015). MicroData Centers (MDCs) were proposed by
    Microsoft Research. It is designed to extend cloud data centers as cloudlets.
    MDCs are enclosures contemning all types of equipments (computing, storage, network)
    needed to provide a secure computing environment in order to run customs applications
    requiring low latency. MDCs are also well adapted to provide processing resources
    to end devices on battery or with limited computing capabilities. MDCs can be
    adapted in function network bandwidth and user needs thanks to certain flexibility
    in terms of latency and scalability of the capacity (Wang et al., 2020). Guardo
    et al. proposed a framework composed of two fog layers respectively filtering
    and aggregating data, and clustering analysis, actuation management, and alert.
    The framework aims to improve computational load balancing between fog and cloud
    in order to reduce the amount of data to transmit to the cloud, reduce the waiting
    time for the user (Guardo et al., 2018). Taneja et al. proposed a SmartHerd an
    IoT platform dedicated to smart dairy farming based on microservices and Fog-assisted.
    The IoT gateway received data from transceivers, archived data aggregation, preprocessing,
    classification, feature selection, send critical alerts to farmers, and transmit
    data to IBM Watson IoT platform via MQTT protocol. In the IBM Watson IoT platform,
    a broker picks up data and store them in a Cloudant NoSQL JSON Database. Python
    Virtual Machine and Java Virtual Machine were used as containers equivalent for
    microservices deployment at fog level (Taneja et al., 2019). Sharofidinov et al.
    described a 4 layers architecture (Sensors Layers, Fog Layer, Network/Cloud Layer,
    and Application Layer) based on LoRa to monitor and predict the state of a greenhouse
    from a random forest algorithm. In the Sensor Layer, sensors acquire temperature,
    soil and air humidity, CO2 rate, and illumination connected to TTGO LoRa32 (ESP32
    with LoRa Sx1276 chip) which are transmitted to the gateway by LoRa. At Fog Layer,
    preliminary analysis with Machine Learning algorithm, diagnosis of sensor status,
    and data compression are achieved. In the Network/Cloud Layer, compressed data
    are transmitted in order to be deeply analyzed and stored. Finally, in the Application
    Layer, analyzed data are converted in readable form to allows the monitoring and
    the control of the greenhouse (Sharofidinov et al., 2020). Table 10. Table 10.
    Pros and Cons of Fog Computing. Pros Cons - Fast response time in avoiding transmission
    of data to the cloud (Sharofidinov et al., 2020). - Failure or outage of the gateway
    can defeat thousands of devices. - The local storage and processing capabilities
    prevent data loss and outages when the Internet connectivity is limited (Sharofidinov
    et al., 2020). - The limited processing and memory capacities do not allow the
    deployment of algorithms requiring significant resources or the carrying out of
    long-term processing. - Sensitive data can be filtered locally. In this case,
    only the data model is moved in the cloud (Sharofidinov et al., 2020), and data
    validation, compression, and encryption. - Gateway at fog level ensure the compatibility
    between old and modern devices (Sharofidinov et al., 2020) and various protocols
    for communication. - Improve the resilience thanks to the decentralization of
    the treatment on network devices (Sharofidinov et al., 2020). Mobile Edge Computing
    (MEC) was proposed by ETSI and is deployed by telecommunication companies on the
    edge of the network, which is characterized by ultra-low latency and high bandwidth.
    (Roman et al., 2018, Zhou et al., 2017). At the very beginning, Mobile Edge Computing
    (MEC) aims to bring real-time, high-bandwidth, and low-latency access to dependent
    applications known as cloud computing capabilities; in addition to, information
    technology (IT) features of cloud computing. MEC is distributed at the edge of
    the network. In fact, a new class of cloud-native applications are easily accessible,
    because of the close position of Edge Computing to the end user and apps. Also,
    it allows network operators to open their environment to a new ecosystem. As a
    result of this significant change, MEC application can be used in LTE macro base
    stations (eNBs), 3G radio network controllers (RNCs), Wi-Fi access points, edge
    network routers, and enterprise edge servers. MEC platform contains two main hosting
    infrastructures. The first is formed by hardware resources and a high-resolution
    screen. The second is composed of manageable applications with numerous capabilities
    such as the application of virtualization manager and platform services (Zhou
    et al., 2017). An important challenge for the MEC is the VM migration that must
    optimize the tradeoff between migration gain and migration cost and select optimal
    location (Ai et al., 2018). Tran et al. investigated the collaborative Mobile
    Edge Computing in 5G Networks. MEC extends processing and storage resources at
    the edge of the Radio Access Network (RAN) while C-RAM is based on centralization
    of the base Station by means of the virtualization. Authors argue that both technologies
    are complementary in the 5G ecosystem (Tran et al., 2017). Fig. 5 Table 11. Download
    : Download high-res image (172KB) Download : Download full-size image Fig. 5.
    Mobile Edge Computing General Scheme. Table 11. Pros and Cons of MEC. Pros Cons
    - Reduces needs in connection, response time delay, the congestion of other parts
    of the network (Valecce et al., 2019). - Usable only for devices connected in
    Wi-Fi or 3GPP. - Use low level message from Wi-Fi to determine the location of
    each device (Location awareness) (Valecce et al., 2019). - MEC Server can be used
    as power open to applications and services (Valecce et al., 2019). Fan et al.
    combined MEC with data link management, combining with the industrial CAN bus
    characteristics to monitor water. Field Programmable Gate Arrays (FPGA) Altera
    implementing the AVALON bus was used to implement the system. Moreover, they propose
    a protocol to model random network disturbances and an online task offloading
    algorithm based on the monitoring of task execution (Fan and Gao, 2018). Valecce
    et al. proposed a 5G-robotics reference architecture for smart agriculture composed
    of UAV-Based Monitoring and connectivity, Machinery automation, and MEC Applications
    Server. UAVs/satellites capture high-resolution images during patrolling, which
    coupled with sensors data trigger a precise crop management. UAVs can also collect
    data or serve as a 5G mobile station. In field, image processing coupled with
    sensors data can be used for decision making. MEC allows to process gigabyte/s
    of data produced by autonomous vehicles and robots (Valecce et al., 2019). Table
    12. Table 12. Evaluation of distributed architecture with our criteria. Criterion
    Fog MEC User Proximity **(*) *** Latency & Jitter * * Network Stability *** **
    High throughput ** **(*) Reliability *** ** Scalability * * Cost Effectiveness
    ** ** Maintainability ** ** The development of fog computing and its counterpart
    for MEC wireless networks allow processing capabilities closer to users to improve
    response time but with lower computational capacities compared to the cloud. There
    are inherently two questions: Which association strategies to use between the
    cloud and the other levels of processing in the network? How to distribute the
    load between these different levels: local (Edge), network (Fog), and Cloud processing.
    4.5. Collaborative computing strategies In order to address, our fourth research
    question, we try to identify different possibilities to compose architectural
    elements. Indeed, different collaboration strategies between the different levels
    of data processing (cloud, fog, edge) can be considered depending on the particularities
    of the use cases. In the next paragraphs, we describe possibilities of collaboration
    between different treatment entries, and we illustrate each one with few examples.
    Edge-Cloud aims to connect devices directly with the cloud that performs data
    processing. This strategy is often used by UAVs and UGVs which preprocess data
    before its transfer to the cloud because image treatment needs processing power
    and storage capabilities. The default of this approach is that the delay of the
    whole process from data transfer via high throughput wireless or cellular protocol
    to the transmission of processing results cannot be guaranteed because of the
    fluctuation of data rates linked to wireless networks (Wang et al., 2020). The
    processing of data can be achieved in an online mode with a real-time data transmission
    and processing by a stream, Lambda, Kappa or derived architecture of these one.
    An offline strategy with a data transfer by means of a computer and Internet connection
    on the cloud after the UAV fly and processing with a Batch, a Lambda, or a Kappa
    architecture or a derived architecture of these one is also possible. This latter
    costly avoid data transmission and is suitable for monitoring crops or livestock
    that do not require direct action. Agriculture 4.0 uses in particular Unmanned
    Aerial Vehicles (UAVs) equipped with various sensors in order to improve the time
    of data collection, in reducing the cost of acquisition compared to traditional
    field phenotyping technologies. According to Tang et al., edge-cloud is majorly
    used in smart robots to reduce complexity (Tang et al., 2021). Indeed, the images
    of drones to be used must be orthorectified and assembled. These operations require
    significant resources in terms of computing power, and memory. All these collected
    data must be rapidly processed, analyzed, and visualized. Agroview (Ampatzidis
    et al., 2020) is a platform that developed a cloud and AI-based application to
    survey and assess the agriculture field, deployed on Amazon Web Services (AWS).
    A website allows the upload of images or existing orthomosaic, the consultation
    for each tree field e.g., number of trees, tree gaps count, area of the field,
    the average height of trees, canopy area, etc. The website also allows the stitching
    of an orthomosaic and the generation of a Digital Surface Model (DSM). A tree
    detection algorithm developed in C allows the detection of individual tree and
    tree gap, and estimate tree parameters such as height, canopy area, health/stress
    estimation. The pipeline of treatment uses a Faster R-CNN to detect the region
    of interest (ROI) and the ResNet101 network allows to detect trees and row orientation.
    Afterward, the Yolo classifier using Darknet19 was applied along each row of trees
    to obtain a more precise detection. Debauche et al. presented an Edge-Cloud architecture
    for the analysis of cattle behavior from 9-DOF IMU data sampled at 100 Hz and
    GPS location sampled at 0.5 Hz that is then processed with an algorithm proposed
    by (Andriamandroso et al., 2017) in batch processing (Debauche et al., 2019, Debauche
    et al., 2020). Popescu et al. proposed an integrated system UAV-WSN-IoT where
    WSN data is collected by UAVs before their transmission to the ground control
    station and afterward to the cloud (Popescu et al., 2020). Debauche et al. proposed
    an architecture for scientific research dedicated to honeybee Colony Collapse
    Disorder. In this architecture, data is compressed on LoPy at the edge level before
    its collection by the LoRaWan gateway and its transmission to the Lambda architecture
    in the cloud where it is processed (Debauche et al., 2018). Edge-Fog aims to connect
    devices directly with network components such as gateways, routers that perform
    data processing. The major benefits of this approach are an optimization of the
    bandwidth, a reduction of traffic and latency, a better privacy, and an improved
    security level (Badidi, 2020). Fog nodes collect, aggregate, filter, encrypt,
    compress, and process IoT data (Gupta et al., 2020). This way is used for example
    by milking robots where data are processed by a computer close the robot and can
    be viewed remotely by the farmer. 5G also promotes mobile edge computing (MEC).
    Debauche et al. presented an AI-IoT architecture for the deployment of Artificial
    intelligence algorithms and Internet of things services at fog level using docker
    containerization and Kubernetes orchestration. This architecture has been developed
    to automatically deploy AI algorithms after retraining when performances (accuracy,
    recall, precision) are improved (Debauche et al., 2020). Debauche et al. proposed
    a Multi-Agent System (MAS) deployed at edge level allowing to control abnormal
    data present in sensed data and eventually cure this data when it is possible.
    The MAS simultaneously manages pivot irrigation, plant diseases and pests'' detection,
    and their curation. The data is partially transmitted to the cloud to improve
    the detection of diseases and pests and retrain AI algorithms before their redeployment
    at the edge level (Debauche et al., 2020). Debauche et al. described a fog architecture
    in which a Gated Recursive Unit (GRU) algorithm is deployed on NVIDIA Jetson Nano
    for real-time poultry monitoring. GRU is simpler than LSTM algorithm. GRU is built
    to avoid varnish gradient problems. Periodically data is transmitted to the user
    interface implemented in NodeJS in the cloud (Debauche et al., 2020). Edge-Fog-Cloud
    is a paradigm in which data are partially processed in the fog and more complex
    treatments are achieved in the cloud. This way is used by wireless Sensor and
    Actuator Network (WSAN), which passes through a gateway that provides interconnection
    between the devices and the backhaul which transit then data to the cloud. However,
    the right balance between cloud and edge/fog computing is required (Badidi, 2020)
    based on available resources and whether or not the task is sensitive. Taneja
    et al. used a strategy Edge-Fog-Cloud to develop a detection system of lameness
    for cattle. The data from the pedometer is transmitted to the Fog node by means
    of a Long-Range proprietary protocol at 433 MHz on a distance of 2 km. Fog node
    stores in local database, preprocess and aggregates them. Fog node communicates
    with IBM Watson IoT Platform with MQTT protocol. Arriving data are picked up and
    stored in Cloudant NoSQL JSON database in IBM cloud. A mobile application synchronizes
    data with PouchDB, its local database via the REST API of Cloudant database when
    an Internet connection is available (Taneja et al., 2020). Alonso et al. presented
    Global Edge Computing Architecture (GECA), a modular tiered architecture (IoT
    Layer, Edge Layer, Business Solution Layer) to monitor dairy and feed grain state
    in real-time. In this architecture, a Distributed Ledger Technologies provides
    security from IoT Layer to Business Solution Layer. In the IoT layer, a set of
    agents call oracles to verify incoming data and afterward calculate hash of data
    with SHA-256 which is stored in the blockchain to verify the non-alteration of
    data. In parallel data is encrypted with the RSA algorithm and then sent to the
    Edge layer. The Edge Layer is responsible of the preprocessing of data and filters
    out data transmitted to the cloud. It enables also various data analyses. In the
    business Solution Layer, final storage, authentication, analysis for decision
    making is achieved. It provides also a knowledge base and APIs (Alonso et al.,
    2020). Edge-Edge is a paradigm in which devices interact to collaborate, exchange,
    and process data. The deployment of the 5G network allows the interconnection
    between UAVs and UGVs/ agricultural machinery (Tang et al., 2021). This high throughput
    network will allow to developping new collaboration between UAVs/ UGVs and agricultural
    machinery, for example, a drone will provide information to a harvester to avoid
    a non-desirable area of the field or avoid obstacles. A fleet of drones can also
    collaborate to coordinate their operations on the field between them of course
    subject to availability in rural areas, a transmission network with sufficient
    bandwidth and short-latency or capabilities to communicate between them in direct
    connection or in a mesh network. (Tang et al., 2021). Four cooperation strategies
    have been identified, two of which use the cloud, namely Fog-Cloud and Edge-Cloud.
    The other two remaing, do not involve the cloud; namely, Fog-Edge, and Edge-Edge
    cloud. The first two strategies complement the cloud to help us to address issues
    relating to production data and trade secrets, network congestion, and response
    times. The other two strategies do without the cloud and therefore assume that
    the devices/ vehicles have sufficient capacity to perform the processing. Despite
    these cooperation strategies between different levels of processing, some questions
    remain unanswered: How to store all the raw data when the data is so important
    that it would take colossal means to process it? What about security? How to organize
    the distribution of tasks between the edge, the fog, and the cloud? How to ensure
    operation and/ or treatment when network connections are intermittent or faulty?
    How to improve the maintainability of these architectures? These are the questions
    that the new trends that we describe in the next paragraph attempt to answer.
    5. New trends In this section, we present two emerging architectures not based
    on the batch or/and real-time architectures or their derivatives. Afterward, we
    describe Osmotic and Dew computing as two new paradigms, which allow us to respectively
    choose where the processing must be achieved and improve the user experience.
    New trends are additional elements that allow enriching the analysis of Section
    4 in order to address the third research question. The Microservices Architecture
    (MA) is a new system software design pattern that divides complex monolithic application
    in micro services dedicated for a single function. Microservice addresses defects
    of monolithic applications in which improving of service performance needs multiple
    deployment; a change in a function can affect all the monolith due to high dependencies
    between components; all the monolith uses a sole technology stack and development
    standards which limits possibilities to solve problems of physical heterogeneity.
    The advantages of this architecture are using a lightweight communication mechanism
    to interact between services with a minimal overload (Sun et al., 2017). The design
    proposed by (Sun et al., 2017) is composed of 8 microservices (Geo, Security,
    Tenant, Devices, Big Data, Automation, AI, and Application) and a core service
    coordinating. These services provide respectively: (1) Geo, a GIS layer to render
    data; (2) Security, user/group/role management, access control, administration,
    and authentication mechanism; (3) support for multiple IoT applications with a
    single core; (4) device plugins and communication protocols for sensing and actuating;
    (5) scalable persistence to store data; (6) process, analyze events and notify
    appropriate participant; (7) Artificial intelligence tools for IoT big data; (8)
    components to interact with client interfaces; (9) support for data exchanging
    by message with the devices. Authors argue that their approach is more flexible,
    scalable and platform-independent. Fig. 6 Table 13. Download : Download high-res
    image (189KB) Download : Download full-size image Fig. 6. Microservices Architecture
    General Scheme. Table 13. Pros and Cons of Microservices Architecture. Pros Cons
    - Fractionating of monoliths facilitates the maintainability and scalability of
    low coupled microservices. - Need to find microservice adapted with needs. - The
    discovery of micro-services allows the development new applications more easily
    than with monoliths. Fraction complex monolith is not easy. - More resilient,
    when a microservice is down, all others continue to function. Bixio et al. proposed
    a stream processing architecture event-driven based on proxy, adapter, and data
    processing microservices. This architecture extends the IoT platform Senseioty
    and using the Java OSGi framework (Bixio et al., 2020). The Data Lake Architecture
    (DLA) (Fang, 2015, Miloslavskaya and Tolstoy, 2016) enables the storage of large
    volumes of data of all types: raw data in its native format, structured, semi-structured,
    in a cost-effective manner. In this architecture, data is stored in its native
    format until it needs to process them by engines (Miloslavskaya and Tolstoy, 2016),
    which allows a fast transformation and refinement of stored data regardless of
    the amount of data stored. The architecture makes it possible to consume all types
    of data (logs, web services, database, files, etc.); different ingestion systems
    consume the data and then stored it in data repository. Once the data is stored,
    query systems can query the data lake. This architecture is considered in the
    corporate world as an evolution of existing architectures. The advantage of the
    Data Lake architecture is that it can easily and inexpensively store large amounts
    of data. It is particularly well suited to storing data in a typical format. In
    Enterprise Data Lakes are used; in addition to, data warehouses. Data lakes are,
    however, unsuitable for assessing data quality, data can be placed in data lakes
    without content control, and performance is also poorer than on specially designed
    and optimized infrastructures. The Lakehouse is a variant of the Data Lake where
    storages of data are generally achieved with Hadoop in the data lake is replaced
    by a distributed storage such as Amazon S3, Azure Blob Storage, Google Cloud Storage,
    and analysis are directly achieved by infrastructure managed by Cloud Service
    Providers such as Amazon Athena, EMR, or Databricks, Google Data proc, Azure HDInsight.
    The Fig. 7 provides a comparison between data lake and gatehouse structure. Download
    : Download high-res image (264KB) Download : Download full-size image Fig. 7.
    Data lake and Lakehouse General Scheme. It crucial in agriculture to explore datasets
    from different sources. The data lake is indicated to manage the complexity of
    agricultural ecosystems and centralized all data sources to find new correlations.
    (Madera et al., 2017). A data lake provides views based on metadata. It is nevertheless
    necessary to have advanced analysis tools for predictive modeling and statistical
    analysis. López et al. used a data lake to achieve the fusion of data from different
    domains in smart the agriculture context (López et al., 2020). Gallinucci et al.
    (Gallinucci et al., 2019, Gallinucci et al., 2020) present an innovative architecture
    3 tiers architecture, called Mo.Re.Farming (MOnitoring and REmote system for a
    more sustainable FARMING) based on a data lake using Apache Hadoop and storing
    structured, semi-structured, and unstructured raw data, and in which subsequent
    processing and enrichment activities are separated. An Operational Data Store
    (ODS) using PostgreSQL with PostGIS to stores structured and detailed data and
    address limitations of big data solutions in properly handling continuous field
    geographic data. Finally, a spatial cube enables Spatial OnLine Analytical Processing
    (SOLAP). Neves et al. described an architecture in which raw data is stored in
    a datalake. Then, ETLs transforms data to be storable in a database. The data
    is enriched thanks to a knowledge base and its exploration by data mining algorithms
    (machine learning). The result of processing is filtered to improve the quality
    of structured data (Neves and Cruvinel, 2020). Table 14. Table 14. Pros and Cons
    of Datalake/DataHouse. Pros Cons - Store the data in its raw form without transforming
    them immediately. - Availability of results depend of the ingesting speed by processing
    services. - Allow store massive low-value data without investing energy to transform
    and store them in a database. - Data analysis by sampling does not give exact
    results but is estimated. - Provides a solution to situations where the volume
    of data is so large that it can no longer be processed immediately - Data House
    may be limited by the services offered by cloud providers for data analysis. Osmotic
    Computing (OC) (Villari et al., 2016) is a new paradigm inspired by the chemical
    osmosis process that corresponds to a dynamic and bidirectional flow of microservices
    between cloud and edge. OC exploits container-based solution to allows an automatic
    deployment of portable, mobile, and cross-platform microservices between Edge
    and cloud levels (Villari et al., 2016). Osmotic computing introduces the concept
    of Micro Elements (MELS) which decouples user data and applications in Micro Services
    (MS) i.e. a docker container and Micro Data (MD) i.e. an entity self-explicative
    in JSON. MS associates one operating system (Micro Operation Service) with an
    application (Micro User Service) while MD associates a microservice configuration
    (Micro Operational Data) and User data (Micro User Data). These MELS can be deployed
    on Microcontrollers (MCU) or Multiprocessor (MPU) (Villari et al., 2017). Table
    15. Table 15. Pros and Cons of Osmotic Computing. Pros Cons - Micro Element (microservice  +
    micro dataset) easy to migrate between fog and cloud. - All datasets are not decomposable
    in micro dataset. The bidirectional migration of microservices between Edge and
    Cloud must, on one hand, avoid application breakdown and QoS degradation and on
    the other hand manage them dynamically, in high heterogeneously physical resources
    context, in the function of infrastructure and applications requirements (Villari
    et al., 2016). Carnevale et al. have applied osmotic computing to the Internet
    of Things by means of a distributed multi-agent system. Each agent is self-orchestrated,
    works independently, and manages the workflow as a composition of MELs. It monitors
    the overloading state of microservices by means of response time metric and decides
    to relocate them to another agent based on a Deep Reinforcement Learning algorithm
    or Time Series Analysis (Carnevale et al., 2019). Fig. 8, Fig. 9. Download : Download
    high-res image (119KB) Download : Download full-size image Fig. 8. Micro Element
    Structure. Download : Download high-res image (357KB) Download : Download full-size
    image Fig. 9. Osmotic Computing General Scheme. In an IoT context, OC allows to
    deploy lightweight micro services at edge level while complex micro services are
    deployed at fog/cloud level, and balance load between edge, fog, and cloud. (Maksimović,
    2018). Morshed et al. proposed to use OC to distribute Deep Learning across edge,
    cloud, and mobile edge in a holistic way (Morshed et al., 2017). However, Kaur
    et al. in their Osmotic Computing applications survey have identified the need
    of standardization in terms of infrastructure deployment and micro-services distribution.
    The orchestration is crucial to manage efficient services. Security remains an
    important challenge because the service migration is supported by different layers
    (Kaur et al., 2020). Dew Computing (DC) (Skala et al., 2015) allows to further
    improve response times by pushing from Central cloud to end-users, computing applications,
    data, and low-level services. Client microcomputers are used to store a part of
    the data locally in the background and to limit access to the cloud, reduce network
    dependency and drastically reduce processing cost (Skala et al., 2015). Dew computing
    is the additional piece of cloud computing. It is mainly composed of a wide range
    of heterogeneous devices and varied equipment ranging from smartphones to smart
    sensors (Wang, 2016). DC is highly and effectively capable in terms of scalability
    and ability to perform sophisticated operations and to process numerous applications
    and tools. Additionally, the equipment of DC is ad hoc programmable and self-adaptive.
    They have the qualifications to running the process within another process in
    a distributed way without a focal communication network (Skala et al., 2015).
    Applications running in the on-premises computers provide services to users and/or
    devices independently of the cloud but collaborating with cloud services (Wang,
    2016). DC can provide access web fraction without Internet connection (WiD), Storage
    in dew has a cloud copy (STiD), Local database has a cloud backup (DBiD), Software
    ownership and settings have a cloud copy (SiD), SDK and projects have a cloud
    copy (PiD), On-premises computer settings and data have a cloud copy (IaD), Other
    services (DiD) (Wang, 2016). The Fig. 10 presents the dew computing in the general
    scheme Cloud-Fog-Edge Computing. Table 16. Download : Download high-res image
    (84KB) Download : Download full-size image Fig. 10. Dew Computing General Scheme.
    Table 16. Pros and Cons of Dew Computing. Pros Cons - Allows access to a local
    copy of data when the connection is unavailable. - Replication of data is bandwidth-consuming.
    - Improve the reliability and the false tolerance. - Difficult to exploit if bandwidth
    is insufficient. Rajakaruna et al. presented a dew architecture based on a drone
    to retrieve and process data, manage WSN, and play the role of dew server. The
    drone communicates with sensors, and actuators with BLE protocol, collect, store
    data, and then when the drone is at the docking station it sends data to the cloud
    (Rajakaruna et al., 2018). Grovers et al. described a reliable and fault-tolerant
    architecture at 4 levels (edge, dew, fog, and cloud) in which sensed data is replicated
    at edge, fog and cloud level in order to take over the application’s control when
    a server is failed. In their architecture, dew servers are closed and linked with
    sensors producing data. The fault tolerance is ensured by mobile agents working
    as a resource exchanging the application and link-state information between us,
    and the network monitoring agent (Grover and Garimella, 2018). The Blockchain
    is a distributed digital ledger of transaction distributed maintained by a network
    of multiple computing nodes. This ledger can be deployed among the IoT nodes network
    (Bermeo-Almeida et al., 2018). In the blockchain, transactions namely blocks are
    managed by a specific software platform ensuring the data transmission, processing
    and storage, and its representation in a human-readable form allowing a consistent
    view and a consensus between the participants (Kamilaris et al., 2019). Different
    mechanisms of consensus whose two main ones are the “Proof of Work (PoW)” and
    the Proof of Stake (PoS). The PoW requires the solving of difficult computational
    tasks before validating transactions and the adding of the block in the blockchain.
    In this approach “miners” are in competition to be the first and obtain the rewards,
    which has an impact on the environment, need expending large a amount of computer
    and energy, and involves a risk of centralization. While the PoS approach, “validators”
    are randomly selected with a probability which depends on the amount of stake
    held. At the end of the validation process, it earns a fee. Other less used consensus
    mechanisms exist such as (1) Proof of Elapsed Time (PoET) in which each node generates
    a random wait time and goes to sleep for that specified duration; (2) Simplified
    Byzantine Fault Tolerance (SBFT), an improvement of Practical Byzantine Fault
    Tolerance (PBFT) specifically designed for blockchain in which each new block
    is maintained by a delegation of nodes with increasing authority. Each one uses
    the internal time to decide when actions must be done; (3) Proof of Authority
    (PoA) in which approved accounts process to the automated validation of transaction
    and blocks. Table 17. Table 17. Pros and Cons of Blockchain. Pros Cons - Data
    distributed (Alonso et al., 2020). - Energy consumption for the complex signature
    verification process can be important. - Immutable, durable, verifiable, secure,
    and transparent (Alonso et al., 2020). - Not adapted to store images, video. -
    Transactions P2P at low cost. The Fig. 11 shows the blockchain general scheme.
    Download : Download high-res image (251KB) Download : Download full-size image
    Fig. 11. Blockchain General Scheme. The block chain is mainly used in Agriculture
    to make the data of the supply chain transparent and open (Bermeo-Almeida et al.,
    2018) and ensure the complete traceability of the food chain from the fork to
    the plate. The block chain allows to record information about: (1) Transactions
    between provider and farmer as well as information relating to the crops, material
    and chemical products; (2) The farm, cultivation practices and management, animals
    feeding, and complementary information such as weather conditions, animals welfare,
    diseases, treatment, etc; (3) Information about factory and its equipment, the
    processing method, batch numbers but also financial transactions with producers
    and distributors; (4) Warehousing, storage conditions (temperature, humidity),
    methods of transport, transit time, and all financial transactions between the
    distributors and retailers; (5) food items information such as quantity available,
    quality, expiration date, time spent on the shelf or in the stock (Bermeo-Almeida
    et al., 2018, Kamilaris et al., 2019). The Fig. 12 shows an example of blockchain
    applied to an agri supply chain. Download : Download high-res image (112KB) Download
    : Download full-size image Fig. 12. Supply chain based on a blockchain. To a lesser
    extent, secured data storage, remote monitoring, and automation. The blockchain
    address some challenges of IoT such as decentralization, data anonymization, and
    security. Moreover, it allows faster and efficient operations, to improve reliability
    and scalability (Bermeo-Almeida et al., 2018). The analysis of new trends shows
    that: (1) Micro service architecture allows decomposing monoliths in microservices
    lowly coupled which makes it easier to maintain it while allowing other services
    to continue operating. Furthermore, this type of architecture is more resilient
    because if one of the services is down, the other services due to the weak coupling
    can continue to operate at least in a degraded mode. (2) Data Lake/DataHouse propose
    a new approach Load Transform Extract (LTE) where data are firstly stored in their
    original format, which are then transformed in order to extract information. This
    paradigm is particularly well adapted when the amount of data is so important
    that process all data is too costly. In this case, data can be sampled in order
    to obtain information. This paradigm is also well adapted if we want to conserve
    also raw data or complete a generic architecture, for example, to store data that
    will be processed in batch processing. (3) Osmotic Computing attempts to propose
    a solution to the repartition of workload between fog and cloud in decomposing
    treatments in microelements composed of a microservice associated with a micro
    dataset. The osmotic computing could also be associated with the micro service
    architecture to allow the distribution of instances of microservices at different
    levels of the network according to their respective load. (4) Dew Computing aims
    to replicate data near sensors or users to continue to store data or allows to
    continue to consult data when connection is intermittent. It allows improving
    the reliance of architectures on connection interruptions. (5) Blockchain provides
    an answer to authentication and security problems by making it possible in particular
    to verify that the data has not been altered or compromised. Nevertheless, it
    is not possible to store large amount of data such as high definitions images,
    or videos in the blockchain but hashes of datasets allowing to verify their authenticity
    well. 6. Towards Agriculture 5.0 According Myklevy et al., the world must improve
    the amount of food produced by 70% by 2050 to produce global food needs for a
    population (Mykleby et al., 2016) of 9.7 billion according to the Food and Agriculture
    Organization of the United Nations (FAO) (Zhang, 2016). To overcome these problems
    and contribute to achieve the second objective of 17 Sustainable Development Goals
    (SDGs) of the United Nations (UN) with a timeframe in the range 2015 to 2030,
    the concept of Agriculture 5.0 has been born (Martos et al., 2021). Agriculture
    5.0 aims to increase production sustainably while consuming fewer resources and
    taking care of the environment. This next wave of agricultural revolution will
    imply the use of robots integrating machine learning to compensate for the shortage
    of workers. Farm robots are drastically increasing productivity in improving the
    human labor workforce and can also harvest a more important volume faster than
    a human. Nevertheless, these early technologies are still too expensive for most
    farmers especially small farms (Saiz-Rubio and Rovira-Más, 2020). Fig. 13 show
    the coupling between Agriculture 4.0 and Agriculture 5.0 and their integration
    in the context of the agri-food supply chain, the Society 5.0 and 17 Sustainable
    Development Goals (SDGs) of United Nations (See Fig. 13). Download : Download
    high-res image (252KB) Download : Download full-size image Fig. 13. Integration
    of the Agriculture 5.0 in the context of the Society 5.0. 7. Conclusion Our review
    is boosted by four research questions dectitaed as follow: (1) Which storage and
    processing architectures are best suited to Agriculture 4.0 applications and address
    its particularities? (2) Can generic architectures meet the needs of Agriculture
    4.0 application cases? (3) What are the horizontal valuation possibilities that
    allow the transition from research to industrialization? (4) What are the vertical
    valuation possibilities to move from algorithms trained in the cloud to embedded
    or autonomous products?. The analysis of the literature shows that a multitude
    of architecture coexists. Nevertheless, the Lambada and Kappa architectures seem
    to emerge as generic architectures. These must generally be accompanied by complementary
    architectural components to address specific needs and be part of a storage and
    processing strategy in which the cloud architecture is a component of the chain
    or may also and more rarely be absent. The traditional centralized cloud computing
    will continue to remain an important part of computing systems (Ai et al., 2018),
    for sciences even if other paradigms appear. Indeed, cloud, fog, and edge computing
    complementary interact with each other to form a mutually beneficial and interdependent
    service continuum. Some functions are naturally more suitable or advantageous
    at a level than another in function of requirements in response time, computing,
    or latency tolerance. However, the cloud cannot be completely replaced by fog
    and edge computing because some computation-intensive tasks can only be processed
    at the cloud level, which has the computing power and storage capacities (Wang
    et al., 2020). In Agriculture 4.0, this is particularly the case for the processing
    of satellite images, the training of artificial intelligence algorithms such as
    Deep Convolutional Neural Network (DCNN). New trends make it possible to address
    various problems: (1) The Data lake/Data House offers a more economical alternative
    to massive cloud storage in databases. In this paradigm, all data are stored in
    a state and transform only when they are to be exploited. This approach is particularly
    interesting on one hand when all data are not exploited and on the other hand
    when a decision or an action is not expected immediately. Data lake also allows
    the fusion of agriculture data from various origins in different formats and granularity.
    (2) The blockchain provides solutions in particular to the security problems,
    the possibility of distributing data storage and ensuring the traceability of
    transactions in agrifood supply chains (3) As the literature has shown, Dew Computing
    can be placed in two different places in the network either as close as possible
    to the sensors to allow processing to continue during transmission interruptions
    or as close as possible to users in order to have a local copy of the data in
    order to be able to consult them offline. It should be noted, however, that for
    the second option, there are other means of local caching at the device level,
    for amounts of data of a few mega as those offered by Progressive Web Apps (PWA)
    by example. (4) Osmotic computing provides a solution to the question of how to
    distribute the load between the different processing levels (edge, fog, cloud).
    It uses the concept of microelement associating a microservice and its micro dataset.
    In addition, osmotic computing can also be associated with micro-service architectures.
    (5) The microservice architecture offers the possibility of decoupling the monolithic
    architectures into weakly coupled microservices. These services can be more easily
    associated, maintained, or evolved independently. The combination of these microservices
    makes it easier to develop new services for the end-user that are also easier
    and faster to evolve according to technological developments and needs. In addition,
    at the network level, the 5G network offers new possibilities in terms of Wireless
    Sensors and Actuators Network (WSAN), communication between machines, UAVs, and
    UGVs. Moreover, the coupling with MEC opens the field of processing close of end-users.
    The SDN/NFV Architecture allows to facilitate the design, and to improve the flexibility
    of network. Software-defined networking (SDN) allows decoupling transmission of
    data and network control functionality while Network function virtualization (NFV)
    abstracts transfer network and related network functions (Friha et al., 2021).
    Two trends in the use of processing architecture coexist, on the one hand, users
    of a paid or open source IoT platform, and on the other hand, users who develop
    specific architectures to implement particular use cases. From the point of view
    of transferability, we understand that it is easier for ready-made chargeable
    infrastructures and that it can be limited for turnkey open-source infrastructures
    where the type of license adopted may pose a problem. However, the sustainability
    of paid infrastructure is conditional on the development granted by the company
    that manages them and on its financial health. The development of architecture
    based on paid software bricks is facilitated but its durability is conditioned
    by the availability and the maintenance of these software bricks. As for transferability,
    it is linked to the acquisition of ad hoc licenses. The development of architecture
    using open source software bricks from foundations such as Apache Foundation makes
    it possible not to be limited by licenses but is dependent on developments and
    maintenance carried out by the community of developers. These software bricks
    can be abandoned by the community, the company that sponsors them, or the foundation
    that hosts them. The development of a sustainable architecture would go through
    an emancipation of software bricks which would make it possible to easily change
    them on the one hand when one of them disappears or if a new more efficient software
    brick appears. The deployment of 5G and satellite Internet will bring in a new
    player, which are the telecommunications companies that will be able to provide
    processing capacities and services as close as possible to users at the level
    of 5G antennas, which will impact processing architectures. The problem will then
    arise of interoperability between the networks of sensors and actuators with these
    new high-speed, low-latency networks. The new networks offered by the telecommunications
    companies will make it possible to offer new services or even to decouple the
    software from the hardware, which will make it possible to make the sensors and
    actuators interchangeable. This should make it possible to reduce the cost of
    the equipment and make it accessible to developing countries or areas not covered
    by traditional LPWAN and 3GPP networks. The impact of these new networks will
    have to be reviewed in the future to identify the new trends offered by 5G and
    satellite Internet. Declaration of Competing Interest The authors declare that
    they have no known competing financial interests or personal relationships that
    could have interfered with overall quality of the work reported in this paper.
    Acknowledgment This research is partially funded by Infortech and Numediart institutes.
    The authors would like to express their gratitude to Dr. Meryem Elmoulat for accepting
    to edit the writing of this paper and to Mr. Fabrice Nolack Fote for his help
    in the elaboration of the conceptual framework. References Agency, 2020 E.G. Agency
    Power-efficient positioning for THE Internet of Things – White Paper European
    GNSS Agency (2020), 10.2759/26127 Google Scholar Ai et al., 2018 Y. Ai, M. Peng,
    K. Zhang Edge computing technologies for internet of things: a primer Digital
    Commun. Networks, 4 (2018), pp. 77-86, 10.1016/j.dcan.2017.07.001 View PDFView
    articleView in ScopusGoogle Scholar Alonso et al., 2020 R.S. Alonso, I. Sittón-Candanedo,
    Óscar García, J. Prieto, S. Rodríguez-González An intelligent edge-iot platform
    for monitoring livestock and crops in a dairy farming scenario Ad Hoc Netw., 98
    (2020), Article 102047, 10.1016/j.adhoc.2019.102047 View PDFView articleView in
    ScopusGoogle Scholar Amazon, 2021 Amazon, 2021a. Amazon dynamodb. url:https://aws.amazon.com/fr/dynamodb/.
    Google Scholar Amazon, 2021b Amazon, 2021b. Amazon web services. url: https://aws.amazon.com/.
    Google Scholar Ampatzidis et al., 2020 Y. Ampatzidis, V. Partel, L. Costa Agroview:
    Cloud-based application to process, analyze and visualize uav-collected data for
    precision agriculture applications utilizing artificial intelligence Comput. Electron.
    Agricul., 174 (2020), Article 105457, 10.1016/j.compag.2020.105457 View PDFView
    articleView in ScopusGoogle Scholar Andriamandroso et al., 2017 A.L.H. Andriamandroso,
    F. Lebeau, Y. Beckers, E. Froidmont, I. Dufrasne, B. Heinesch, P. Dumortier, G.
    Blanchy, Y. Blaise, J. Bindelle Development of an open-source algorithm based
    on inertial measurement units (imu) of a smartphone to detect cattle grass intake
    and ruminating behaviors Comput. Electron. Agricult., 139 (2017), pp. 126-137,
    10.1016/j.compag.2017.05.020 View PDFView articleView in ScopusGoogle Scholar
    Apache Software Foundation, 2021a Apache Software Foundation, A., 2021a. Cassandra.
    url: https://cassandra.apache.org. Google Scholar Apache Software Foundation,
    2021b Apache Software Foundation, A., 2021b. Druid. url: https://druid.apache.org.
    Google Scholar Assis and Bittencourt, 2016 M.R. Assis, L.F. Bittencourt A survey
    on cloud federation architectures: identifying functional and non-functional properties
    J. Network Comput. Appl., 72 (2016), pp. 51-71, 10.1016/j.jnca.2016.06.014 View
    PDFView articleView in ScopusGoogle Scholar AT&T, 2021 AT&T, P., 2021. At&t continues
    to fuel growth of the internet of things with launch of new developer-friendly
    managed service. url: https://about.att.com/story/m2x_data_service_for_enterprise_developers.html.
    Google Scholar Ayaz et al., 2019 M. Ayaz, M. Ammad-Uddin, Z. Sharif, A. Mansour,
    E.H.M. Aggoune Internet-of-things (iot)-based smart agriculture: toward making
    the fields talk IEEE Access, 7 (2019), pp. 129551-129583, 10.1109/ACCESS.2019.2932609
    View in ScopusGoogle Scholar Badidi, 2020 E. Badidi Qos-aware placement of tasks
    on a fog cluster in an edge computing environment J. Ubiquitous Syst. Pervasive
    Networks, 13 (2020), pp. 11-19, 10.5383/JUSPN.13.01.002 Google Scholar Bermeo-Almeida
    et al., 2018 Bermeo-Almeida, O., Cardenas-Rodriguez, M., Samaniego-Cobo, T., Ferruzola-Gómez,
    E., Cabezas-Cabezas, R., Bazán-Vera, W., 2018. Blockchain in agriculture: A systematic
    literature review, in: International Conference on Technologies and Innovation,
    Springer. pp. 44–56. doi:10.1007/978-3-030-00940-3_4. Google Scholar Bixio et
    al., 2020 L. Bixio, G. Delzanno, S. Rebora, M. Rulli A flexible iot stream processing
    architecture based on microservices Information, 11 (2020), p. 565, 10.3390/info11120565
    Google Scholar Blynk, 2021 Blynk, 2021. Blynk iot platform: for businesses and
    developers. url:  https://blynk.io. Google Scholar Botta et al., 2016 A. Botta,
    W. De Donato, V. Persico, A. Pescapé Integration of cloud computing and internet
    of things: a survey Future Generat. Comput. Syst., 56 (2016), pp. 684-700, 10.1016/j.future.2015.09.021
    View PDFView articleView in ScopusGoogle Scholar Byers, 2017 C.C. Byers Architectural
    imperatives for fog computing: Use cases, requirements, and architectural techniques
    for fog-enabled iot networks IEEE Commun. Mag., 55 (2017), pp. 14-20, 10.1109/MCOM.2017.1600885
    View in ScopusGoogle Scholar Carnevale et al., 2019 L. Carnevale, A. Celesti,
    A. Galletta, S. Dustdar, M. Villari Osmotic computing as a distributed multi-agent
    system: the body area network scenario Internet of Things, 5 (2019), pp. 130-139,
    10.1016/j.iot.2019.01.001 View PDFView articleView in ScopusGoogle Scholar Cisco,
    2018 C. Cisco Cisco global cloud index: Forecast and methodology, 2016–2021 Cisco,
    San Jose (2018) Google Scholar Codeluppi et al., 2020 G. Codeluppi, A. Cilfone,
    L. Davoli, G. Ferrari Lorafarm: A lorawan-based smart farming modular iot architecture
    Sensors, 20 (2020), 10.3390/s20072028 url:  https://www.mdpi.com/1424-8220/20/7/2028
    Google Scholar Conesa-Munoz et al., 2016 J. Conesa-Muñoz, J. Valente, J. Del Cerro,
    A. Barrientos, A. Ribeiro A multi-robot sense-act approach to lead to a proper
    acting in environmental incidents Sensors, 16 (2016), p. 1269, 10.3390/s16081269
    View in ScopusGoogle Scholar Corp, 2020 Corp, P.H., 2020. Sensorcloud. url:  https://sensorcloud.com/.
    Google Scholar Debauche et al., 2018 O. Debauche, M. El Moulat, S. Mahmoudi, S.
    Boukraa, P. Manneback, F. Lebeau Web monitoring of bee health for researchers
    and beekeepers based on the internet of things Proc. Comput. Sci., 130 (2018),
    pp. 991-998, 10.1016/j.procs.2018.04.103 View PDFView articleView in ScopusGoogle
    Scholar Debauche et al., 2019 O. Debauche, S. Mahmoudi, A.L.H. Andriamandroso,
    P. Manneback, J. Bindelle, F. Lebeau Cloud services integration for farm animals’
    behavior studies based on smartphones as activity sensors J. Ambient Intell. Humanized
    Comput., 10 (2019), pp. 4651-4662, 10.1007/s12652-018-0845-9 View in ScopusGoogle
    Scholar Debauche et al., 2020 O. Debauche, S. Mahmoudi, M. Elmoulat, S.A. Mahmoudi,
    P. Manneback, F. Lebeau Edge ai-iot pivot irrigation, plant diseases, and pests
    identification Proc. Comput. Sci., 177 (2020), pp. 40-48, 10.1016/j.procs.2020.10.009
    View PDFView articleView in ScopusGoogle Scholar Debauche et al., 2020 O. Debauche,
    S. Mahmoudi, S.A. Mahmoudi, P. Manneback, J. Bindelle, F. Lebeau Edge computing
    and artificial intelligence for real-time poultry monitoring Proc. Comput. Sci.,
    175 (2020), pp. 534-541, 10.1016/j.procs.2020.07.076 View PDFView articleView
    in ScopusGoogle Scholar Debauche et al., 2020 O. Debauche, S. Mahmoudi, S.A. Mahmoudi,
    P. Manneback, J. Bindelle, F. Lebeau Edge computing for cattle behavior analysis
    2020 Second International Conference on Embedded & Distributed Systems (EDiS),
    IEEE (2020), pp. 52-57, 10.1109/EDiS49545.2020.9296471 View in ScopusGoogle Scholar
    Debauche et al., 2020 O. Debauche, S. Mahmoudi, S.A. Mahmoudi, P. Manneback, F.
    Lebeau A new edge architecture for ai-iot services deployment Proc. Comput. Sci.,
    175 (2020), pp. 10-19, 10.1016/j.procs.2020.07.006 View PDFView articleView in
    ScopusGoogle Scholar Debauche et al., 2020 O. Debauche, S.A. Mahmoudi, N. De Cock,
    S. Mahmoudi, P. Manneback, F. Lebeau Cloud architecture for plant phenotyping
    research Concurrency and Computation: Practice and Experience, 32 (2020), Article
    e5661, 10.1002/cpe.5661 View in ScopusGoogle Scholar Debauche et al., 2018 O.
    Debauche, S.A. Mahmoudi, S. Mahmoudi, P. Manneback Cloud platform using big data
    and hpc technologies for distributed and parallels treatments Proc. Comput. Sci.,
    141 (2018), pp. 112-118, 10.1016/j.procs.2018.10.156 View PDFView articleView
    in ScopusGoogle Scholar Debauche et al., 2021 O. Debauche, J.P. Trani, S. Mahmoudi,
    P. Manneback, J. Bindelle, S.A. Mahmoudi, A. Guttadauria, F. Lebeau Data management
    and internet of things: a methodological review in smart farming Internet of Things,
    14 (2021), Article 100378, 10.1016/j.iot.2021.100378 View PDFView articleView
    in ScopusGoogle Scholar Diaz et al., 2016 M. Díaz, C. Martín, B. Rubio State-of-the-art,
    challenges, and open issues in the integration of internet of things and cloud
    computing J. Network Comput. Appl., 67 (2016), pp. 99-117, 10.1016/j.jnca.2016.01.010
    View PDFView articleView in ScopusGoogle Scholar Drakos et al., 2015 Drakos, A.,
    Protonotarios, V., Manouselis, N., 2015. aginfra: a research data hub for agriculture,
    food and the environment. F1000Res. 4. doi:10.12688/f1000research.6349.2. Google
    Scholar El-Sayed et al., 2017 H. El-Sayed, S. Sankar, M. Prasad, D. Puthal, A.
    Gupta, M. Mohanty, C.T. Lin Edge of things: the big picture on the integration
    of edge, iot and the cloud in a distributed computing environment IEEE Access,
    6 (2017), pp. 1706-1717, 10.1109/ACCESS.2017.2780087 View in ScopusGoogle Scholar
    Elijah et al., 2018 O. Elijah, T.A. Rahman, I. Orikumhi, C.Y. Leow, M.N. Hindia
    An overview of internet of things (iot) and data analytics in agriculture: benefits
    and challenges IEEE Internet Things J., 5 (2018), pp. 3758-3773, 10.1109/JIOT.2018.2844296
    View in ScopusGoogle Scholar Estrada and Ruiz, 2016 Estrada, R., Ruiz, I., 2016.
    Big data smack: A guide to apache spark. Mesos, Akka, Cassandra, and Kafka. Google
    Scholar Fan and Gao, 2018 D. Fan, S. Gao The application of mobile edge computing
    in agricultural water monitoring system IOP Conference Series: Earth and Environmental
    Science, IOP Publishing (2018), p. 012015 CrossRefView in ScopusGoogle Scholar
    Fang, 2015 Fang, H., 2015. Managing data lakes in big data era: What’s a data
    lake and why has it became popular in data management ecosystem, in: 2015 IEEE
    International Conference on Cyber Technology in Automation, Control, and Intelligent
    Systems (CYBER), IEEE. pp. 820–824. doi:10.1109/CYBER.2015.7288049. Google Scholar
    Farooq et al., 2019 M.S. Farooq, S. Riaz, A. Abid, K. Abid, M.A. Naeem A survey
    on the role of iot in agriculture for the implementation of smart farming IEEE
    Access, 7 (2019), pp. 156237-156271, 10.1109/ACCESS.2019.2949703 View in ScopusGoogle
    Scholar Feng et al., 2019 X. Feng, F. Yan, X. Liu Study of wireless communication
    technologies on internet of things for precision agriculture Wireless Pers. Commun.,
    108 (2019), pp. 1785-1802, 10.1007/s11277-019-06496-7 View in ScopusGoogle Scholar
    Fernandez et al., 2015 Fernandez, R.C., Pietzuch, P.R., Kreps, J., Narkhede, N.,
    Rao, J., Koshy, J., Lin, D., Riccomini, C., Wang, G., 2015. Liquid: Unifying nearline
    and offline big data integration., in: CIDR, pp. 1–8. url:  http://hdl.handle.net/10044/1/23433.
    Google Scholar Ferrag et al., 2020 M.A. Ferrag, L. Shu, X. Yang, A. Derhab, L.
    Maglaras Security and privacy for green iot-based agriculture: review, blockchain
    solutions, and challenges IEEE Access, 8 (2020), pp. 32031-32053, 10.1109/ACCESS.2020.2973178
    View in ScopusGoogle Scholar Fote et al., 2020 F.N. Fote, A. Roukh, S. Mahmoudi,
    S.A. Mahmoudi, O. Debauche Toward a big data knowledge-base management system
    for precision livestock farming Proc. Comput. Sci., 177 (2020), pp. 136-142, 10.1016/j.procs.2020.10.021
    View PDFView articleView in ScopusGoogle Scholar Friha et al., 2021 O. Friha,
    M.A. Ferrag, L. Shu, L.A. Maglaras, X. Wang Internet of things for the future
    of smart agriculture: a comprehensive survey of emerging technologies IEEE CAA
    J. Autom. Sinica, 8 (2021), pp. 718-752, 10.1109/JAS.2021.1003925 View in ScopusGoogle
    Scholar Gallinucci et al., 2019 E. Gallinucci, M. Golfarelli, S. Rizzi A hybrid
    architecture for tactical and strategic precision agriculture C. Ordonez, I.Y.
    Song, G. Anderst-Kotsis, A.M. Tjoa, I. Khalil (Eds.), Big Data Analytics and Knowledge
    Discovery, Springer International Publishing, Cham (2019), pp. 13-23, 10.1007/978-3-030-27520-4_2
    View in ScopusGoogle Scholar Gallinucci et al., 2020 E. Gallinucci, M. Golfarelli,
    S. Rizzi Mo. re. farming: A hybrid architecture for tactical and strategic precision
    agriculture Data Knowl. Eng., 129 (2020), Article 101836, 10.1016/j.datak.2020.101836
    View PDFView articleView in ScopusGoogle Scholar Garcia et al., 2020 L. García,
    L. Parra, J.M. Jimenez, J. Lloret, P. Lorenz Iot-based smart irrigation systems:
    an overview on the recent trends on sensors and iot systems for irrigation in
    precision agriculture Sensors, 20 (2020), p. 1042, 10.3390/s20041042 View in ScopusGoogle
    Scholar Lopez et al., 2015 Garcia Lopez, P., Montresor, A., Epema, D., Datta,
    A., Higashino, T., Iamnitchi, A., Barcellos, M., Felber, P., Riviere, E., 2015.
    Edge-centric computing: Vision and challenges. doi:10.1145/2831347.2831354. Google
    Scholar Giebler et al., 2018 Giebler, C., Stach, C., Schwarz, H., Mitschang, B.,
    2018. Braid, in: Proceedings of the 7th International Conference on Data Science,
    Technology and Applications, pp. 294–301. doi:10.5220/0006861802940301. Google
    Scholar Google, 2021 Google, 2021. Firebase. url:  https://firebase.google.com/.
    Google Scholar Granell et al., 2017 Granell, C., Miralles, I., Rodríguez-Pupo,
    L.E., González-Pérez, A., Casteleyn, S., Busetto, L., Pepe, M., Boschetti, M.,
    Huerta, J., 2017. Conceptual architecture and service-oriented implementation
    of a regional geoportal for rice monitoring. ISPRS Int. J. Geo-Inform. 6. url:
    https://www.mdpi.com/2220-9964/6/7/191, doi:10.3390/ijgi6070191. Google Scholar
    Grover and Garimella, 2018 Grover, J., Garimella, R.M., 2018. Reliable and fault-tolerant
    iot-edge architecture, in: 2018 IEEE sensors, IEEE. pp. 1–4. doi:10.1109/ICSENS.2018.8589624.
    Google Scholar Guardo et al., 2018 E. Guardo, A. Di Stefano, A. La Corte, M. Sapienza,
    M. Scatà A fog computing-based iot framework for precision agriculture J. Internet
    Technol., 19 (2018), pp. 1401-1411, 10.3966/160792642018091905012 View in ScopusGoogle
    Scholar Gupta et al., 2020 M. Gupta, M. Abdelsalam, S. Khorsandroo, S. Mittal
    Security and privacy in smart farming: challenges and opportunities IEEE Access,
    8 (2020), pp. 34564-34584, 10.1109/ACCESS.2020.2975142 View in ScopusGoogle Scholar
    Hausenblas, 2014 Hausenblas, M., 2014. Internet of things architecture (iot-a)
    home page. url:  https://github.com/mhausenblas/iot-a.info. Google Scholar Iaksch
    et al., 2021 J. Iaksch, E. Fernandes, M. Borsato Digitalization and big data in
    smart farming–a review J. Manage. Anal., 8 (2021), pp. 333-349, 10.1080/23270012.2021.1897957
    View in ScopusGoogle Scholar IBM, 2015 IBM, 2015. Ibm watson iot platform. url:  https://internetofthings.ibmcloud.com/.
    Google Scholar IBM, 2021 IBM, 2021. Ibm cloud. url:  https://www.ibm.com/cloud.
    Google Scholar Influxdata, 2021 Influxdata, 2021. Infludb cloud. url:  https://www.influxdata.com/products/influxdb-cloud/.
    Google Scholar Souces and I., 2021 Integra Souces, I., 2021. Iot solution development
    services. url:  https://www.integrasources.com/iot-page/. Google Scholar Jayaraman
    et al., 2016 P.P. Jayaraman, A. Yavari, D. Georgakopoulos, A. Morshed, A. Zaslavsky
    Internet of things platform for smart farming: experiences and lessons learnt
    Sensors, 16 (2016), p. 1884, 10.3390/s16111884 View in ScopusGoogle Scholar KaaIoT,
    2021 KaaIoT, 2021. Ubidots. url:  https://docs.kaaiot.io/KAA/docs/current/Welcome/.
    Google Scholar Kamilaris et al., 2019 Kamilaris, A., Fonts, A., Prenafeta-Boldv́,
    F.X., 2019. The rise of blockchain technology in agriculture and food supply chains.
    Trends Food Sci. Technol. 91, 640–652. doi:10.1016/j.tifs.2019.07.034. Google
    Scholar Kaur et al., 2020 A. Kaur, R. Kumar, S. Saxena Osmotic computing and related
    challenges: a survey 2020 Sixth International Conference on Parallel, Distributed
    and Grid Computing (PDGC), IEEE (2020), pp. 378-383, 10.1109/PDGC50313.2020.9315757
    View in ScopusGoogle Scholar Kazim et al., 2018 M. Kazim, L. Liu, S.Y. Zhu A framework
    for orchestrating secure and dynamic access of iot services in multi-cloud environments
    IEEE Access, 6 (2018), pp. 58619-58633, 10.1109/ACCESS.2018.2873812 View in ScopusGoogle
    Scholar Khanna and Kaur, 2019 A. Khanna, S. Kaur Evolution of internet of things
    (iot) and its significant impact in the field of precision agriculture Comput.
    Electron. Agricul., 157 (2019), pp. 218-231, 10.1016/j.compag.2018.12.039 View
    PDFView articleView in ScopusGoogle Scholar Kodati and Jeeva, 2019 S. Kodati,
    S. Jeeva Smart agricultural using internet of things, cloud and big data Int.
    J. Innov. Technol. Exploring Eng. (IJITEE), 8 (2019), pp. 3718-3722, 10.35940/ijitee.J9671.0881019
    View in ScopusGoogle Scholar Kreps, 2014 Kreps, J., 2014. Questioning the lambda
    architecture. Online article, July 205. Google Scholar Lakhe, 2016 B. Lakhe Practical
    Hadoop migration: how to integrate your RDBMS with the Hadoop ecosystem and re-architect
    relational applications to NoSQL Apress (2016) Google Scholar Liu et al., 2020
    Y. Liu, X. Ma, L. Shu, G.P. Hancke, A.M. Abu-Mahfouz From industry 4.0 to agriculture
    4.0: current status, enabling technologies, and research challenges IEEE Trans.
    Industr. Inf., 17 (2020), pp. 4322-4334, 10.1109/TII.2020.3003910 Google Scholar
    López et al., 2020 I.D. López, J.F. Grass, A. Figueroa, J.C. Corrales A proposal
    for a multi-domain data fusion strategy in a climate-smart agriculture context
    Int. Trans. Oper. Res. (2020), 10.1111/itor.12899 Google Scholar Luis Bustamante
    et al., 2019 A. Luis Bustamante, M.A. Patricio, J.M. Molina Thinger. io: an open
    source platform for deploying data fusion applications in iot environments Sensors,
    19 (2019), p. 1044, 10.3390/s19051044 Google Scholar Mach and Becvar, 2017 P.
    Mach, Z. Becvar Mobile edge computing: a survey on architecture and computation
    offloading IEEE Commun. Surveys Tutorials, 19 (2017), pp. 1628-1656, 10.1109/COMST.2017.2682318
    View in ScopusGoogle Scholar Madera et al., 2017 Madera, C., Laurent, A., Rouge,
    T.L., Miralles, A., 2017. How can the data lake concept influence information
    system design for agriculture? In: 11th European conference dedicated to the future
    use of ICT in the agri-food sector, bioresource and biomass sector (EFITA 2017),
    pp. 181–182. Google Scholar Maksimović, 2018 M. Maksimović The role of osmotic
    computing in internet of things 2018 17th International Symposium INFOTEH-JAHORINA
    (INFOTEH), IEEE (2018), pp. 1-4, 10.1109/INFOTEH.2018.8345538 View in ScopusGoogle
    Scholar Manyika and Chui, 2015 Manyika, J., Chui, M., 2015. By 2025, internet
    of things applications could have $11 trillion impact. Insight Publications. Google
    Scholar Martos et al., 2021 V. Martos, A. Ahmad, P. Cartujo, J. Ordoñez Ensuring
    agricultural sustainability through remote sensing in the era of agriculture 5.0
    Appl. Sci., 11 (2021), p. 5911, 10.3390/app11135911 View in ScopusGoogle Scholar
    Marz and Warren, 2013 N. Marz, J. Warren Big Data: Principles and best practices
    of scalable real-time data systems Manning (2013) Google Scholar Maureira et al.,
    2011 M.A.G. Maureira, D. Oldenhof, L. Teernstra Thingspeak–an api and web service
    for the internet of things World Wide Web (2011) Google Scholar Meehan et al.,
    2016 J. Meehan, S. Zdonik, S. Tian, Y. Tian, N. Tatbul, A. Dziedzic, A. Elmore
    Integrating real-time and batch processing in a polystore 2016 IEEE High Performance
    Extreme Computing Conference (HPEC), IEEE (2016), pp. 1-7, 10.1109/HPEC.2016.7761585
    Google Scholar Meola, 2021 Meola, A., 2021. Smart farming in 2020: How iot sensors
    are creating a more efficient precision agriculture industry. url:  https://www.businessinsider.com/smart-farming-iot-agriculture?IR=T.
    Google Scholar Microsoft, 2021a Microsoft, 2021a. Azure. url:  https://azure.microsoft.com.
    Google Scholar Microsoft, 2021b Microsoft, 2021b. Azure iot. url:  https://azure.microsoft.com/en-us/overview/iot/.
    Google Scholar Miloslavskaya and Tolstoy, 2016 N. Miloslavskaya, A. Tolstoy Big
    data, fast data and data lake concepts Proc. Comput. Sci., 88 (2016), pp. 300-305,
    10.1016/j.procs.2016.07.439 View PDFView articleView in ScopusGoogle Scholar Misra
    et al., 2020 N. Misra, Y. Dixit, A. Al-Mallahi, M.S. Bhullar, R. Upadhyay, A.
    Martynenko Iot, big data and artificial intelligence in agriculture and food industry
    IEEE Internet Things J. (2020), 10.1109/JIOT.2020.2998584 Google Scholar Mongo,
    2021 Mongo, 2021. Mongodb atlas. url:  https://www.mongodb.com/en-us/cloud/atlas.
    Google Scholar Morshed et al., 2017 A. Morshed, P.P. Jayaraman, T. Sellis, D.
    Georgakopoulos, M. Villari, R. Ranjan Deep osmosis: holistic distributed deep
    learning in osmotic computing IEEE Cloud Comput., 4 (2017), pp. 22-32, 10.1109/MCC.2018.1081070
    View in ScopusGoogle Scholar Munir et al., 2017 A. Munir, P. Kansakar, S.U. Khan
    Ifciot: Integrated fog cloud iot: a novel architectural paradigm for the future
    internet of things IEEE Consumer Electron. Mag., 6 (2017), pp. 74-82, 10.1109/MCE.2017.2684981
    View in ScopusGoogle Scholar Mykleby et al., 2016 M. Mykleby, P. Doherty, J. Makower
    The New Grand Strategy: Restoring America’s Prosperity, Security, and Sustainability
    in the 21st Century St. Martin’s Press (2016) Google Scholar Navarro et al., 2020
    E. Navarro, N. Costa, A. Pereira A systematic review of iot solutions for smart
    farming Sensors, 20 (2020), p. 4231, 10.3390/s20154231 Google Scholar Navarro-Hellin
    et al., 2016 H. Navarro-Hellín, J. Martinez-del Rincon, R. Domingo-Miguel, F.
    Soto-Valles, R. Torres-Sánchez A decision support system for managing irrigation
    in agriculture Comput. Electron. Agricul., 124 (2016), pp. 121-131, 10.1016/j.compag.2016.04.003
    View PDFView articleView in ScopusGoogle Scholar NECTEC, 2020 NECTEC, 2020. Netpie
    - network platform for internet of everything. url:  https://netpie.io. Google
    Scholar Neves and Cruvinel, 2020 R.A. Neves, P.E. Cruvinel Model for semantic
    base structuring of digital data to support agricultural management 2020 IEEE
    14th International Conference on Semantic Computing (ICSC), IEEE (2020), pp. 337-340,
    10.1109/ICSC.2020.00067 View in ScopusGoogle Scholar Nkamla Penka et al., 2021
    J.B. Nkamla Penka, S. Mahmoudi, O. Debauche A new kappa architecture for iot data
    management in smart farming Proc. Comput. Sci. (2021) In press Google Scholar
    Oracle, 2021 Oracle, 2021. Mysql. url:  https://www.mysql.com. Google Scholar
    Persico et al., 2018 V. Persico, A. Pescapé, A. Picariello, G. Sperlí Benchmarking
    big data architectures for social networks data processing using public cloud
    platforms Future Gener. Comput. Syst., 89 (2018), pp. 98-109, 10.1016/j.future.2018.05.068
    View PDFView articleView in ScopusGoogle Scholar Pesonen et al., 2014 L.A. Pesonen,
    F.K.W. Teye, A.K. Ronkainen, M.O. Koistinen, J.J. Kaivosoja, P.F. Suomi, R.O.
    Linkolehto Cropinfra–an internet-based service infrastructure to support crop
    production in future farms Biosyst. Eng., 120 (2014), pp. 92-101, 10.1016/j.biosystemseng.2013.09.005
    View PDFView articleView in ScopusGoogle Scholar Petcu et al., 2013 D. Petcu,
    B. Di Martino, S. Venticinque, M. Rak, T. Máhr, G.E. Lopez, F. Brito, R. Cossu,
    M. Stopar, S. Šperka, et al. Experiences in building a mosaic of clouds J. Cloud
    Comput.: Adv., Syst. Appl., 2 (2013), pp. 1-22, 10.1186/2192-113X-2-12 View in
    ScopusGoogle Scholar Popescu et al., 2020 D. Popescu, F. Stoican, G. Stamatescu,
    L. Ichim, C. Dragana Advanced uav–wsn system for intelligent monitoring in precision
    agriculture Sensors, 20 (2020), p. 817, 10.3390/s20030817 View in ScopusGoogle
    Scholar Radoglou-Grammatikis et al., 2020 P. Radoglou-Grammatikis, P. Sarigiannidis,
    T. Lagkas, I. Moscholios A compilation of uav applications for precision agriculture
    Comput. Netw., 172 (2020), Article 107148, 10.1016/j.comnet.2020.107148 View PDFView
    articleView in ScopusGoogle Scholar Rajakaruna et al., 2018 Rajakaruna, A., Manzoor,
    A., Porambage, P., Liyanage, M., Ylianttila, M., Gurtov, A., 2018. Lightweight
    dew computing paradigm to manage heterogeneous wireless sensor networks with uavs.
    arXiv preprint arXiv:1811.04283. Google Scholar Ray, 2017 P.P. Ray Internet of
    things for smart agriculture: technologies, practices and future direction J.
    Ambient Intell. Smart Environ., 9 (2017), pp. 395-420, 10.3233/AIS-170440 View
    in ScopusGoogle Scholar Ren et al., 2017 J. Ren, H. Guo, C. Xu, Y. Zhang Serving
    at the edge: a scalable iot architecture based on transparent computing IEEE Network,
    31 (2017), pp. 96-105, 10.1109/MNET.2017.1700030 View in ScopusGoogle Scholar
    Rodriguez et al., 2018 M.A. Rodriguez, L. Cuenca, A. Ortiz Fiware open source
    standard platform in smart farming – a review L.M. Camarinha-Matos, H. Afsarmanesh,
    Y. Rezgui (Eds.), Collaborative Networks of Cognitive Systems, Springer International
    Publishing, Cham (2018), pp. 581-589, 10.1007/978-3-319-99127-6_50 View in ScopusGoogle
    Scholar Roman et al., 2018 R. Roman, J. Lopez, M. Mambo Mobile edge computing,
    fog et al.: a survey and analysis of security threats and challenges Future Gener.
    Comput. Syst., 78 (2018), pp. 680-698, 10.1016/j.future.2016.11.009 View PDFView
    articleView in ScopusGoogle Scholar Roukh et al., 2020 A. Roukh, F.N. Fote, S.A.
    Mahmoudi, S. Mahmoudi Big data processing architecture for smart farming Proc.
    Comput. Sci., 177 (2020), pp. 78-85, 10.1016/j.procs.2020.10.014 View PDFView
    articleView in ScopusGoogle Scholar Roukh et al., 2020 A. Roukh, F.N. Fote, S.A.
    Mahmoudi, S. Mahmoudi Wallesmart: cloud platform for smart farming, in 32nd International
    Conference on Scientific and Statistical Database Management (2020), pp. 1-4,
    10.1145/3400903.3401690 Google Scholar Ruan et al., 2019 J. Ruan, H. Jiang, C.
    Zhu, X. Hu, Y. Shi, T. Liu, W. Rao, F.T.S. Chan Agriculture iot: Emerging trends,
    cooperation networks, and outlook IEEE Wirel. Commun., 26 (2019), pp. 56-63, 10.1109/MWC.001.1900096
    View in ScopusGoogle Scholar Saiz-Rubio and Rovira-Más, 2020 V. Saiz-Rubio, F.
    Rovira-Más From smart farming towards agriculture 5.0: a review on crop data management
    Agronomy, 10 (2020), p. 207, 10.3390/agronomy10020207 View in ScopusGoogle Scholar
    Sallah et al., 2019 A.H.M. Sallah, B. Tychon, I. Piccard, A. Gobin, R. Van Hoolst,
    B. Djaby, J. Wellens Batch-processing of aquacrop plug-in for rainfed maize using
    satellite derived fractional vegetation cover data Agric. Water Manage., 217 (2019),
    pp. 346-355 Google Scholar Scott, 2015 Scott, J., 2015. Zeta architecture: Hexagon
    is the new circle. an enterprise architecture solution for scale and efficiency.
    url:  https://www.oreilly.com/ideas/zeta-architecture-hexagon-is-the-new-circle.
    Google Scholar Sethi and Sarangi, 2017 P. Sethi, S.R. Sarangi Internet of things:
    architectures, protocols, and applications J. Electr. Comput. Eng., 2017 (2017),
    10.1155/2017/9324035 Google Scholar Shafi et al., 2019 U. Shafi, R. Mumtaz, J.
    García-Nieto, S.A. Hassan, S.A.R. Zaidi, N. Iqbal Precision agriculture techniques
    and practices: From considerations to applications Sensors, 19 (2019), p. 3796,
    10.3390/s19173796 View in ScopusGoogle Scholar Sharofidinov et al., 2020 F. Sharofidinov,
    M.S.A. Muthanna, V.D. Pham, A. Khakimov, A. Muthanna, K. Samouylov Agriculture
    management based on lora edge computing system V.M. Vishnevskiy, K.E. Samouylov,
    D.V. Kozyrev (Eds.), Distributed Computer and Communication Networks, Springer
    International Publishing, Cham (2020), pp. 113-125 CrossRefView in ScopusGoogle
    Scholar Shi et al., 2016 W. Shi, J. Cao, Q. Zhang, Y. Li, L. Xu Edge computing:
    vision and challenges IEEE Internet Things J., 3 (2016), pp. 637-646, 10.1109/JIOT.2016.2579198
    View in ScopusGoogle Scholar Shi et al., 2019 X. Shi, X. An, Q. Zhao, H. Liu,
    L. Xia, X. Sun, Y. Guo State-of-the-art internet of things in protected agriculture
    Sensors, 19 (2019), p. 1833, 10.3390/s19081833 View in ScopusGoogle Scholar Siciliani,
    2015 Siciliani, T., 2015. Big data using lambda architecture. url: https://dzone.com/articles/lambda-architecture-big-data.
    Google Scholar Sigrimis et al., 2002 Sigrimis, N., Arvanitis, K., Ferentinos,
    K., 2002. Macqu: An open scada system for intelligent management and control of
    greenhouses, in: 2002 ASAE Annual Meeting, American Society of Agricultural and
    Biological Engineers. p. 1. doi:10.13031/2013.9618. Google Scholar Singh et al.,
    2019 K.N. Singh, R.K. Behera, J.K. Mantri Big data ecosystem: review on architectural
    evolution Emerging Technol. Data Mining Inform. Secur., 335–345 (2019), 10.1007/978-981-13-1498-8_30
    Google Scholar Sipos et al., 2013 Sipos, G., Turilli, M., Newhouse, S., Kacsuk,
    P., 2013. A european federated cloud: Innovative distributed computing solutions
    by egi, in: EGU General Assembly Conference Abstracts, pp. EGU2013–8690. Google
    Scholar Skala et al., 2015 K. Skala, D. Davidovic, E. Afgan, I. Sovic, Z. Sojat
    Scalable distributed computing hierarchy: cloud, fog and dew computing Open J.
    Cloud Comput. (OJCC), 2 (2015), pp. 16-24, 10.19210/1002.2.1.16 Google Scholar
    SQLite, 2021 SQLite, 2021. Sqlite. url: https://www.sqlite.org. Google Scholar
    Sun et al., 2017 L. Sun, Y. Li, R.A. Memon An open iot framework based on microservices
    architecture China Commun., 14 (2017), pp. 154-162, 10.1109/CC.2017.7868163 View
    in ScopusGoogle Scholar Talavera et al., 2017 J.M. Talavera, L.E. Tobón, J.A.
    Gómez, M.A. Culman, J.M. Aranda, D.T. Parra, L.A. Quiroz, A. Hoyos, L.E. Garreta
    Review of iot applications in agro-industrial and environmental fields Comput.
    Electron. Agricul., 142 (2017), pp. 283-297, 10.1016/j.compag.2017.09.015 View
    PDFView articleView in ScopusGoogle Scholar Taneja et al., 2020 M. Taneja, J.
    Byabazaire, N. Jalodia, A. Davy, C. Olariu, P. Malone Machine learning based fog
    computing assisted data-driven approach for early lameness detection in dairy
    cattle Comput. Electron. Agricul., 171 (2020), Article 105286, 10.1016/j.compag.2020.105286
    View PDFView articleView in ScopusGoogle Scholar Taneja et al., 2019 M. Taneja,
    N. Jalodia, J. Byabazaire, A. Davy, C. Olariu Smartherd management: a microservices-based
    fog computing–assisted iot platform towards data-driven smart dairy farming Software:
    Practice Experience, 49 (2019), pp. 1055-1078, 10.1002/spe.2704 View in ScopusGoogle
    Scholar Tang et al., 2021 Y. Tang, S. Dananjayan, C. Hou, Q. Guo, S. Luo, Y. He
    A survey on the 5g network and its impact on agriculture: challenges and opportunities
    Comput. Electron. Agricul., 180 (2021), Article 105895, 10.1016/j.compag.2020.105895
    View PDFView articleView in ScopusGoogle Scholar The PostgreSQL Global Development
    Group, 2021 The PostgreSQL Global Development Group, P., 2021. Postgresql: The
    world’s most advanced open source relational database. url:  https://www.postgresql.org/.
    Google Scholar Tran et al., 2017 T.X. Tran, A. Hajisami, P. Pandey, D. Pompili
    Collaborative mobile edge computing in 5g networks: new paradigms, scenarios,
    and challenges IEEE Commun. Mag., 55 (2017), pp. 54-61, 10.1109/MCOM.2017.1600863
    View in ScopusGoogle Scholar Triantafyllou et al., 2019 A. Triantafyllou, P. Sarigiannidis,
    S. Bibi Precision agriculture: a remote sensing monitoring system architecture
    Information, 10 (2019), p. 348, 10.3390/info10110348 View in ScopusGoogle Scholar
    Tzounis et al., 2017 A. Tzounis, N. Katsoulas, T. Bartzanas, C. Kittas Internet
    of things in agriculture, recent advances and future challenges Biosyst. Eng.,
    164 (2017), pp. 31-48, 10.1016/j.biosystemseng.2017.09.007 View PDFView articleView
    in ScopusGoogle Scholar Ubidots, 2021 Ubidots, 2021. Ubidots. url:  https://ubidots.com/.
    Google Scholar Uehara, 2017 Uehara, M., 2017. Mist computing: Linking cloudlet
    to fogs, in: International Conference on Computational Science/Intelligence &
    Applied Informatics, Springer. pp. 201–213. doi:10.1007/978-3-319-63618-4_15.
    Google Scholar Valecce et al., 2019 G. Valecce, S. Strazzella, L.A. Grieco On
    the interplay between 5g, mobile edge computing and robotics in smart agriculture
    scenarios M.R. Palattella, S. Scanzio, S. Coleri Ergen (Eds.), Ad-Hoc, Mobile,
    and Wireless Networks, Springer International Publishing, Cham (2019), pp. 549-559,
    10.1007/978-3-030-31831-4_38 View in ScopusGoogle Scholar Villa-Henriksen et al.,
    2020 A. Villa-Henriksen, G.T. Edwards, L.A. Pesonen, O. Green, C.A.G. Sørensen
    Internet of things in arable farming: implementation, applications, challenges
    and potential Biosyst. Eng., 191 (2020), pp. 60-84, 10.1016/j.biosystemseng.2019.12.013
    View PDFView articleView in ScopusGoogle Scholar Villari et al., 2017 Villari,
    M., Celesti, A., Fazio, M., 2017. Towards osmotic computing: Looking at basic
    principles and technologies, in: Conference on Complex, Intelligent, and Software
    Intensive Systems, Springer. pp. 906–915. doi:10.1007/978-3-319-61566-086. Google
    Scholar Villari et al., 2014 M. Villari, A. Celesti, M. Fazio, A. Puliafito Alljoyn
    lambda: an architecture for the management of smart environments in iot 2014 International
    Conference on Smart Computing Workshops, IEEE (2014), pp. 9-14, 10.1109/SMARTCOMP-W.2014.7046676
    View in ScopusGoogle Scholar Villari et al., 2016 M. Villari, M. Fazio, S. Dustdar,
    O. Rana, R. Ranjan Osmotic computing: a new paradigm for edge/cloud integration
    IEEE Cloud Comput., 3 (2016), pp. 76-83, 10.1109/MCC.2016.124 View in ScopusGoogle
    Scholar Wang et al., 2020 X. Wang, Y. Han, V.C. Leung, D. Niyato, X. Yan, X. Chen
    Edge AI: Convergence of Edge Computing and Artificial Intelligence Springer Nature
    (2020), 10.1007/978-981-15-6186-3 Google Scholar Wang, 2016 Y. Wang Definition
    and categorization of dew computing Open J. Cloud Comput. (OJCC), 3 (2016), pp.
    1-7, 10.19210/1002.3.1.1 View PDFView articleGoogle Scholar Wolfert et al., 2017
    S. Wolfert, L. Ge, C. Verdouw, M.J. Bogaardt Big data in smart farming–a review
    Agricult. Syst., 153 (2017), pp. 69-80, 10.1016/j.agsy.2017.01.023 View PDFView
    articleView in ScopusGoogle Scholar Yang, 2017 S. Yang Iot stream processing and
    analytics in the fog IEEE Commun. Mag., 55 (2017), pp. 21-27, 10.1109/MCOM.2017.1600840
    View in ScopusGoogle Scholar Zhai et al., 2020 Z. Zhai, J.F. Martínez, V. Beltran,
    N.L. Martínez Decision support systems for agriculture 4.0: Survey and challenges
    Comput. Electron. Agricul., 170 (2020), Article 105256, 10.1016/j.compag.2020.105256
    View PDFView articleView in ScopusGoogle Scholar Zhang, 2016 Zhang, Q., 2016.
    Precision agriculture technology for crop farming. Taylor & Francis. doi:10.1201/b19336.
    Google Scholar Zhou et al., 2017 Y. Zhou, D. Zhang, N. Xiong Post-cloud computing
    paradigms: a survey and comparison Tsinghua Sci. Technol., 22 (2017), pp. 714-732,
    10.23919/TST.2017.8195353 View in ScopusGoogle Scholar Cited by (28) The convergence
    of Digital Twins and Distributed Ledger Technologies: A systematic literature
    review and an architectural proposal 2024, Journal of Network and Computer Applications
    Show abstract Integrated design framework for smart agriculture: Bridging the
    gap between digitalization and sustainability 2024, Journal of Cleaner Production
    Show abstract Spatio-temporal semantic data management systems for IoT in agriculture
    5.0: Challenges and future directions 2024, Internet of Things (Netherlands) Show
    abstract Internet of agriculture: Analyzing and predicting tractor ride comfort
    through supervised machine learning 2023, Engineering Applications of Artificial
    Intelligence Show abstract A real-time decision-making tool based on dynamic thresholds
    for Phthorimaea absoluta management in greenhouse tomato 2023, Crop Protection
    Show abstract Information management infrastructures for multipurpose unmanned
    aerial systems operations 2023, Unmanned Aerial Systems in Agriculture: Eyes Above
    Fields Show abstract View all citing articles on Scopus Peer review under responsibility
    of King Saud University. 1 https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/
    2 https://www.statista.com/statistics/499431/global-ip-data-traffic-forecast/
    3 https://www.pix4d.com/ 4 http://prospera.ag/ © 2021 The Authors. Published by
    Elsevier B.V. on behalf of King Saud University. Recommended articles Multi-user
    routing algorithm for indoor spaces – Adapted for social distancing Journal of
    King Saud University - Computer and Information Sciences, Volume 34, Issue 9,
    2022, pp. 7045-7058 Abdullah Alamri, …, Sultan Alamri View PDF Embedding and generalization
    of formula with context in the retrieval of mathematical information Journal of
    King Saud University - Computer and Information Sciences, Volume 34, Issue 9,
    2022, pp. 6624-6634 Pankaj Dadure, …, Sivaji Bandyopadhyay View PDF mySense: A
    comprehensive data management environment to improve precision agriculture practices
    Computers and Electronics in Agriculture, Volume 162, 2019, pp. 882-894 Raul Morais,
    …, Emanuel Peres View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 21 Captures Readers: 194 Social Media Shares, Likes & Comments: 60 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply.'
  inline_citation: '>'
  journal: 'Maǧalaẗ ǧamʼaẗ al-malīk Saud : ùlm al-ḥasib wa al-maʼlumat'
  limitations: '>'
  pdf_link: null
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Cloud and distributed architectures for data management in agriculture 4.0
    : Review and future trends'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.11648/j.net.20190701.12
  analysis: '>'
  authors:
  - Shufen Wang
  citation_count: 13
  full_citation: '>'
  full_text: '>

    Home Journals Proceedings Books Events Information Contact Submit an Article Log
    in Register Advances in Networks Home About Archive Submission Special Issues
    Editorial Board Reviewers Join Events Contact Home SciencePG Journals Advances
    in Networks Archive Volume 7, Issue 1 | Peer-Reviewed | Edge Computing: Applications,
    State-of-the-Art and Challenges Shufen Wang Received: 10 October 2019    Accepted:
    31 October 2019    Published: 15 November 2019 Views: 1657      Downloads: 616
    Download PDF Share This Article Abstract The Internet of Things (IoT) is now infiltrating
    into our daily lives, providing important measurement and collection tools to
    inform us of every decision. Millions of sensors and devices continue to generate
    data and exchange important information through complex networks that support
    machine-to-machine communication and monitor and control critical smart world
    infrastructure. As a strategy to alleviate resource congestion escalation, edge
    computing has become a new paradigm for addressing the needs of the Internet of
    Things and localization computing. Compared to well-known cloud computing, edge
    computing migrates data calculations or storage to the edge of the network near
    the end-user. Thus, multiple compute nodes distributed across the network can
    offload computational pressure from a centralized data center and can significantly
    reduce latency in message exchanges. Besides, the distributed architecture balances
    network traffic and avoids spikes in traffic in the IoT network, reduces latency
    between edge/cloud servers and end-users, and reduces response time for real-time
    IoT applications compared to traditional cloud services. In this article, we conducted
    a comprehensive survey to analyze how edge computing can improve the performance
    of IoT networks. We classify edge calculations into different groups based on
    the architecture and study their performance by comparing network latency, bandwidth
    usage, power consumption, and overhead. Through the systematic introduction of
    the concept of edge computing, typical application scenarios, research status,
    and key technologies, it is considered that the development of edge computing
    is still in the initial stage. There are still many problems in practical applications
    that need to be solved, including optimizing edge computing performance, security,
    interoperability, and intelligent edge operations management services. DOI 10.11648/j.net.20190701.12
    Published in Advances in Networks (Volume 7, Issue 1, June 2019) Page(s) 8-15
    Creative Commons This is an Open Access article, distributed under the terms of
    the Creative Commons Attribution 4.0 International License (http://creativecommons.org/licenses/by/4.0/),
    which permits unrestricted use, distribution and reproduction in any medium or
    format, provided the original work is properly cited. Copyright Copyright © The
    Author(s), 2024. Published by Science Publishing Group Previous article Next article
    Keywords Edge Computing, Security, Interoperability References [1] Satyanarayanan
    M. Edge Computing [J]. Computer, 2017, 50 (10): 36-38. [2] Satyanarayanan M. The
    Emergence of Edge Computing [J]. Computer, 2017, 50 (1): 30-39. [3] Feng J, Zhi
    L, Wu C, et al. AVE: Autonomous Vehicular Edge Computing Framework with ACO-Based
    Scheduling [J]. IEEE Transactions on Vehicular Technology, 2017, PP (99): 1-1.
    [4] Ananthanarayanan G, Bahl P, Bodik P, et al. Real-Time Video Analytics: The
    Killer App for Edge Computing [J]. Computer, 2017, 50 (10): 58-67. [5] Y. Wu,
    Y. Liu, S. H. Ahmed, J. Peng, and A. A. A. El-Latif, “Dominant dataset selection
    algorithms for electricity consumption time-series data analysis based on affine
    transformation,” IEEE Internet of Things Journal, pp. 1–1, 2019. [6] Tuyen Xuan
    Tran, Pompili D. Joint Task Offloading and Resource Allocation for Multi-Server
    Mobile-Edge Computing Networks [J]. 2017, PP (99): 1-1. [7] Feng W, Jie X, Xin
    W, et al. Joint Offloading and Computing Optimization in Wireless Powered Mobile-Edge
    Computing Systems [J]. IEEE Transactions on Wireless Communications, 2017, PP
    (99): 1-1. [8] Mao Y, Zhang J, Song S H, et al. Stochastic Joint Radio and Computational
    Resource Management for Multi-User Mobile-Edge Computing Systems [J]. IEEE Transactions
    on Wireless Communications, 2017, 16 (9): 5994-6009. [9] Hsu R H, Lee J, Quek
    T Q S, et al. Reconfigurable Security: Edge Computing-based Framework for IoT
    [J]. IEEE Network, 2017, 32 (5). [10] Kai W, Hao Y, Wei Q, et al. Enabling Collaborative
    Edge Computing for Software Defined Vehicular Networks [J]. IEEE Network, 2018,
    32 (5): 1-6. [11] Y. Liu, J. Peng, J. J. Yu, and Y. Wu, “Ppgan: Privacy-preserving
    generative adversarial network,” arXiv preprint arXiv:1910.02007, 2019 [12] Kang
    J, Yu R, Huang X, et al. Enabling Localized Peer-to-Peer Electricity Trading Among
    Plug-in Hybrid Electric Vehicles Using Consortium Blockchains [J]. IEEE Transactions
    on Industrial Informatics, 2017, PP (99):1-1. [13] Tran T X, Hajisami A, Pandey
    P, et al. Collaborative Mobile Edge Computing in 5G Networks: New Paradigms, Scenarios,
    and Challenges [J]. IEEE Communications Magazine, 2017, 55 (4): 54-61. [14] Kang
    J, Xiong Z, Niyato D, et al. Incentive Design for Efficient Federated Learning
    in Mobile Networks: A Contract Theory Approach [J]. 2019. [15] Hong L, Yan Z,
    Tao Y. Blockchain-Enabled Security in Electric Vehicles Cloud and Edge Computing
    [J]. IEEE Network, 2018, 32 (3): 78-83. [16] Rimal B P, Van D P, Maier M. Cloudlet
    Enhanced Fiber-Wireless Access Networks for Mobile-Edge Computing [J]. IEEE Transactions
    on Wireless Communications, 2017, PP (99): 1-1. [17] Kang J, Xiong Z, Niyato D,
    et al. Toward Secure Blockchain-Enabled Internet of Vehicles: Optimizing Consensus
    Management Using Reputation and Contract Theory [J]. IEEE Transactions on Vehicular
    Technology, 2019, PP (99):1-1. [18] Li Z, Kang J, Yu R, et al. Consortium Blockchain
    for Secure Energy Trading in Industrial Internet of Things [J]. IEEE Transactions
    on Industrial Informatics, 2017:1-1. [19] Sun Y, Guo X, Song J, et al. Adaptive
    Learning-Based Task Offloading for Vehicular Edge Computing Systems [J]. 2019.
    [20] Zhang Yanjun, Yang Xiaodong, Liu Yi, Zheng Dayuan, Bi Shujun. Research on
    the Frame of Intelligent Inspection Platform Based on Spatio-temporal Data. Computer
    & Digital Engineering [J], 2019, 47 (03): 616-619+637. [21] Z. Zhao, J. Wang and
    Y. Liu, "User Electricity Behavior Analysis Based on K-Means Plus Clustering Algorithm,"
    2017 International Conference on Computer Technology, Electronics and Communication
    (ICCTEC), Dalian, China, 2017, pp. 484-487. doi: 10.1109/ICCTEC.2017.00111. [22]
    Liu Y, Yang C, Jiang L, et al. Intelligent Edge Computing for IoT-Based Energy
    Management in Smart Cities [J]. IEEE Network, 2019, 33 (2): 111-117. [23] Lin
    M, Chen Z, Liao H, et al. ELECTRE II method to deal with probabilistic linguistic
    term sets and its application to edge computing [J]. Nonlinear Dynamics, 2019
    (3): 1-19. [24] Ping Z, Durresi M, Durresi A. Multi-access edge computing aided
    mobility for privacy protection in Internet of Things [J]. Computing, 2018 (10):
    1-14. [25] Wang R, Yan J, Wu D, et al. Knowledge-Centric Edge Computing Based
    on Virtualized D2D Communication Systems [J]. IEEE Communications Magazine, 2018,
    56 (5): 32-38. [26] Yi Liu, Jiawen Peng, and Zhihao Yu. 2018. Big Data Platform
    Architecture under The Background of Financial Technology: In The Insurance Industry
    As An Example. In Proceedings of the 2018 International Conference on Big Data
    Engineering and Technology (BDET 2018). ACM, New York, NY, USA, 31-35. [27] Chen
    C H, Lin M Y, Liu C C. Edge Computing Gateway of the Industrial Internet of Things
    Using Multiple Collaborative Microcontrollers [J]. IEEE Network, 2018, 32 (1):
    24-32. [28] Huang X, Yu R, Kang J, et al. Exploring Mobile Edge Computing for
    5G-Enabled Software Defined Vehicular Networks [J]. IEEE Wireless Communications,
    2017, 24 (6): 55-63. [29] Kang J, Yu R, Huang X, et al. Privacy-Preserved Pseudonym
    Scheme for Fog Computing Supported Internet of Vehicles [J]. IEEE Transactions
    on Intelligent Transportation Systems, 2017:1-11. [30] Huang X, Yu R, Kang J,
    et al. Distributed Reputation Management for Secure and Efficient Vehicular Edge
    Computing and Networks [J]. IEEE Access, 2017, PP (99): 1-1. [31] Zhou F, Wu Y,
    Hu R Q, et al. Computation Rate Maximization in UAV-Enabled Wireless-Powered Mobile-Edge
    Computing Systems [J]. IEEE Journal on Selected Areas in Communications, 2018,
    PP (99): 1-1. [32] Huang X, Yu R, Kang J, et al. Software Defined Energy Harvesting
    Networking for 5G Green Communications [J]. IEEE Wireless Communications, 2017,
    24 (4):38-45. [33] Ju R, Yi P, Goscinski A, et al. Edge Computing for the Internet
    of Things [J]. IEEE Network, 2018, 32 (1): 6-7. [34] Muhammad G, Alhamid M F,
    Alsulaiman M, et al. Edge Computing with Cloud for Voice Disorder Assessment and
    Treatment [J]. IEEE Communications Magazine, 2018, 56 (4): 60-65. [35] Suganuma
    T, Oide T, Kitagami S, et al. Multiagent-Based Flexible Edge Computing Architecture
    for IoT [J]. IEEE Network, 2018, 32 (1): 16-23. [36] Wei L, Yang T, Delicato F
    C, et al. On Enabling Sustainable Edge Computing with Renewable Energy Resources
    [J]. IEEE Communications Magazine, 2018, 56 (5): 94-101. [37] Wang, Fanglin, Jialiang
    Peng, and Yongjie Li. "Hypergraph based feature fusion for 3-D object retrieval."
    Neurocomputing 151 (2015): 612-619. [38] Li S, Ning Z, Lin S, et al. Joint Admission
    Control and Resource Allocation in Edge Computing for Internet of Things [J].
    IEEE Network, 2018, 32 (1): 72-79. [39] Kang J, Yu R, Huang X, et al. Location
    privacy attacks and defenses in cloud-enabled internet of vehicles [J]. IEEE Wireless
    Communications, 2016, 23 (5): 52-59. [40] Mehrabi A, Siekkinen M, Yla-Jaaski A.
    Edge Computing Assisted Adaptive Mobile Video Streaming [J]. IEEE Transactions
    on Mobile Computing, 2018, PP (99): 1-1. [41] Cao J, Castiglione A, Motta G, et
    al. Human-Driven Edge Computing and Communication: Part 2 [J]. IEEE Communications
    Magazine, 2018, 56 (2): 134-135. [42] Yu R, Kang J, Huang X, et al. MixGroup:
    Accumulative Pseudonym Exchanging for Location Privacy Preservation in Vehicular
    Social Networks [J]. IEEE Transactions on Dependable and Secure Computing, 2015:1-1.
    Cite This Article Plain Text BibTeX RIS APA Style Shufen Wang. (2019). Edge Computing:
    Applications, State-of-the-Art and Challenges. Advances in Networks, 7(1), 8-15.
    https://doi.org/10.11648/j.net.20190701.12 Copy | Download ACS Style Shufen Wang.
    Edge Computing: Applications, State-of-the-Art and Challenges. Adv. Netw. 2019,
    7(1), 8-15. doi: 10.11648/j.net.20190701.12 Copy | Download AMA Style Shufen Wang.
    Edge Computing: Applications, State-of-the-Art and Challenges. Adv Netw. 2019;7(1):8-15.
    doi: 10.11648/j.net.20190701.12 Copy | Download Author Information Shufen Wang
    College of Information Engineering, Harbin Institute of Petroleum, Harbin, China
    Download PDF Sections Abstract Keywords References Cite This Article Author Information
    About Us Science Publishing Group (SciencePG) is an Open Access publisher, with
    more than 300 online, peer-reviewed journals covering a wide range of academic
    disciplines. Learn More About SciencePG Products Journals Special Issues Proceedings
    Books AcademicEvents ScholarProfiles Information For Authors For Reviewers For
    Editors For Conference Organizers For Librarians Article Processing Charges Special
    Issues Guidelines Editorial Process Peer Review at SciencePG Open Access Ethical
    Guidelines Important Link Manuscript Submission Propose a Special Issue Join the
    Editorial Board Become a Reviewer Copyright © 2012 -- 2024 Science Publishing
    Group – All rights reserved.'
  inline_citation: '>'
  journal: Advances in networks (Print)
  limitations: '>'
  pdf_link: http://article.sciencepublishinggroup.com/pdf/10.11648.j.net.20190701.12.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Edge Computing: Applications, State-of-the-Art and Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s11135-021-01251-2
  analysis: '>'
  authors:
  - Abderahman Rejeb
  - Karim Rejeb
  - Steven J. Simske
  - John G. Keogh
  citation_count: 32
  full_citation: '>'
  full_text: ">\nVol.:(0123456789)\nQuality & Quantity (2022) 56:2875–2906\nhttps://doi.org/10.1007/s11135-021-01251-2\n\
    1 3\nBlockchain technology in the smart city: a bibliometric \nreview\nAbderahman Rejeb1 ·\
    \ Karim Rejeb2 · Steven J. Simske3 · John G. Keogh4\nAccepted: 28 September 2021\
    \ / Published online: 6 October 2021 \n© The Author(s) 2021\nAbstract\nBlockchain\
    \ can function as a foundational technology with numerous applications in smart\
    \ \ncities. The objective of this paper is twofold. First, it provides a detailed\
    \ overview of the \nextant literature on blockchain applications in smart cities;\
    \ second, it reveals the trends \nand suggests future research directions for\
    \ scholars who wish to contribute to this rapidly \ngrowing field. We conducted\
    \ a bibliometric review using a keyword co-occurrence network \nand article co-citation\
    \ analysis. The analysis includes the assessment of 148 articles pub-\nlished\
    \ between 2016 and 2020 in 76 academic journals. The review results demonstrate\
    \ \nthat the number of articles devoted to the study of blockchain applications\
    \ and smart cities \nhas increased exponentially in recent years. More importantly,\
    \ the research identifies some \nof the most influential studies in this area.\
    \ The paper discusses trends and highlights the \nchallenges related to the deployment\
    \ of blockchain in smart cities. To the authors’ best \nknowledge, this represents\
    \ the first study to review the literature from leading journals on \nblockchain\
    \ applications in smart cities using bibliometric techniques.\nKeywords Blockchain\
    \ technology · Smart city · Bibliometric review · Co-citation analysis\n * Abderahman\
    \ Rejeb \n \nabderrahmen.rejeb@gmail.com\n \nKarim Rejeb \n \nkarim.rejeb@etudiant-isi.utm.tn\n\
    \ \nSteven J. Simske \n \nSteve.Simske@colostate.edu\n \nJohn G. Keogh \n \njohn@shantalla.org\n\
    1 \nDoctoral School of Regional Sciences and Business Administration, Széchenyi\
    \ István University, \nGyor 9026, Hungary\n2 \nHigher Institute of Computer Science\
    \ El Manar, 2, Rue Abou Raïhan El Bayrouni, 2080 Ariana, \nTunisia\n3 \nSystems\
    \ Engineering Department, Colorado State University, Fort Collins, CO, USA\n4\
    \ \nHenley Business School, University of Reading, Greenlands, Henley-on-Thames RG9 3AU,\
    \ UK\n 2876\nA. Rejeb et al.\n1 3\n1 Introduction\nRecent advances in technologies\
    \ have accelerated the development of smart cities. The \nsmart city concept represents\
    \ the next generation of urbanization (Li et al. 2016). Calvillo \net al. (2016)\
    \ described a smart city as \"a sustainable and efficient urban centre that pro-\n\
    vides a high quality of life to its inhabitants through optimal management of\
    \ its resources.\" \nAside from maintaining an advanced physical infrastructure,\
    \ smart cities are characterized \nby the availability, integrity and quality\
    \ of knowledge communication and social infra-\nstructure (Caragliu et al. 2011).\n\
    In a smart city, advanced technologies and intelligent networks constitute the\
    \ critical \nenablers for the effective functioning of the city. Critical components\
    \ of a smart city eco-\nsystem, including its broad infrastructure (e.g., mass\
    \ transit, emergency services, energy \ngrids) and government e-services (e.g.,\
    \ health services, permits, applications and approv-\nals), interoperate in real-time.\
    \ The wireless communication networks, coupled with self-\norganizing and self-healing\
    \ networks, are critical in smart city realization. High-speed, \nreal-time security\
    \ protocols constitute a crucial component in the smart city ecosystem by \nproviding\
    \ the necessary security services in authentication, confidentiality, integrity\
    \ and \navailability (Rathore et al. 2018).\nAlmost all smart applications continuously\
    \ generate large amounts of data from het-\nerogeneous sources. However, current\
    \ database technologies do not effectively manage \nand securely store voluminous\
    \ data. Sensors, devices, and vehicles connected through the \nInternet pose privacy\
    \ risks and security concerns (Dwivedi et al. 2019). Although emerg-\ning technologies\
    \ have overcome many infrastructure problems related to ageing infrastruc-\nture\
    \ and the increasing demands of citizens for better services, the benefits of\
    \ the smart \ncity and urban improvement are not yet realized (Berglund et al.\
    \ 2020). New technologies \nhave paved the way for numerous opportunities for\
    \ additional value creation; however, the \nprogress of smart cities is still\
    \ facing several challenges. A sustainable smart city should \nenhance the quality\
    \ of life of its population through improved data security, privacy, effi-\ncient\
    \ information sharing, effective decision-making, and high-quality services.\n\
    The emergence of blockchain technology promises vast improvements for smart city\
    \ \napplications. According to Treiblmaier (2018, p. 547), blockchain is defined\
    \ as \"a digital, \ndecentralized and distributed ledger in which transactions\
    \ are logged and added in chron-\nological order with the goal of creating permanent\
    \ and tamperproof records.\" Rejeb et al. \n(2018, 2019, 2020a, b) argue that\
    \ blockchain constitutes a combination of multiple tech-\nnologies, tools and\
    \ methods that can be used for specific problems and business use cases. \nBlockchain\
    \ technology has advanced as a potential solution to complex or persistent chal-\n\
    lenges within the smart city by enhancing transparency and providing a trust and\
    \ account-\nability layer through its transaction immutability. Blockchain technology\
    \ can transform \nsmart city infrastructures, alter ecosystems for enhanced consumer\
    \ services, and facilitate \ninnovative applications. Blockchain is considered\
    \ a new engine of growth and prosperity \nin the smart city as it enhances efficiencies,\
    \ secures the communication of sensitive data, \nand increases the interoperability\
    \ of smart city platforms. Besides underpinning cryptocur-\nrencies, researchers\
    \ and analysts envision that blockchain applications will span various \nsectors\
    \ and help redefine global urban development through the protection of transactions\
    \ \nand other services (Marsal-Llacuna 2018). Previous studies have attempted\
    \ to review the \nexisting applications of blockchain in the context of smart\
    \ cities (Bernabe et al. 2019; Li \net al. 2019), but to the best of our knowledge,\
    \ no previous study has reviewed blockchain \nand smart city research using bibliometric\
    \ tools such as keyword co-occurrence network \n2877\nBlockchain technology in the smart\
    \ city: a bibliometric review \n1 3\nand article co-citation analyses. This study\
    \ provides a systematic bibliometric review on \nblockchain research from the\
    \ smart city perspective to close this knowledge gap. In review-\ning the literature,\
    \ we aimed to understand the current state-of-the-art and fulfil the fol-\nlowing\
    \ objectives: reveal the evolution of blockchain and smart city research, identify\
    \ the \nmajor contributing countries, and catalogue the publishing journals. The\
    \ use of bibliomet-\nric tools serves to unfold the core content of blockchain-smart\
    \ city research, the structure \nof co-cited articles, and the influential studies\
    \ in the literature. Our main goal is to obtain a \nfocused but detailed overview\
    \ of the body of research. More specifically, in this investiga-\ntion, we attempt\
    \ to answer the following research questions (RQs):\n• RQ1 How did blockchain\
    \ and smart city research evolve since their inception?\n• RQ2 What are the leading\
    \ countries and journals publishing blockchain and smart city-\nrelated studies?\n\
    • RQ3 What are the critical research hotspots in blockchain and smart city research?\n\
    • RQ4 Which articles are the most influential in the academic literature?\nThis\
    \ study is structured as five sections. After the introduction, we present the\
    \ research \nmethodology adopted in this study. Section 3 discusses the review’s\
    \ findings, including \nthe temporal distribution of publications, the countries\
    \ contributing to blockchain research, \nand the main publication outlets. In\
    \ Sect. 4, we present the results of the keyword co-occur-\nrence network along\
    \ with the article co-citation analysis. Section 5 provides a discussion of \n\
    current and future trends and challenges in blockchain-smart city research, followed\
    \ by the \nlimitations of the study, the potential research directions, and the\
    \ managerial implications. \nThe last section briefly concludes the paper.\n2\
    \  Research methodology\n2.1  Data collection\nTo investigate the current state-of-the-art\
    \ of blockchain applications in the smart city, \nwe conducted a bibliometric\
    \ literature review. This type of review allows researchers to \nsynthesize previous\
    \ scholarly knowledge and inspire future research works. According to \nÁlvarez-García\
    \ et al. (2018), the power of bibliometric reviews lies in their capability to\
    \ \nidentify and classify a wide variety of documents within a specific area and\
    \ to facilitate the \nanalysis of information in order to show the trends based\
    \ on synthesized data. Similarly, \nthe use of bibliometric reviews ensures objectivity\
    \ and offers unique insights into the liter-\nature (Koseoglu, 2016). Using bibliometric\
    \ techniques, scholars can depict the conceptual \nspace of a given research field\
    \ and facilitate the interpretation of the findings.\nThe initial step of the\
    \ bibliometric review consists of identifying the most suitable \ndatabase for\
    \ the study. For the selection of articles, we carried out searches in the Scopus\
    \ \ndatabase. The capability of the database to handle bibliographic references\
    \ and quantify \ncitations has made Scopus a widely used instrument for the analysis\
    \ of any research field. \nApart from this, Scopus is one of the most highly regarded\
    \ academic databases globally, \nindexing approximately 70% more sources than\
    \ the Web of Science (Brzezinski 2015). As \nper Harzing and Alakangas (2016),\
    \ Scopus is one of the largest and trusted data reposi-\ntories for peer-reviewed\
    \ academic journals, books, chapters and conference proceedings \ncovering various\
    \ disciplines and depicting the dynamics of science and technology. We \n 2878\n\
    A. Rejeb et al.\n1 3\nconducted our search using the title, abstract, and keywords\
    \ fields by inserting the follow-\ning query and a Boolean operator; Blockchain\
    \ AND \"smart cit*\".\nUsing the outline of several studies as a reference, we\
    \ considered only articles published \nin academic journals to analyze and develop\
    \ bibliometric indicators. The selection of jour-\nnal articles helps to ensure\
    \ the reliability and academic nature of the analysis (Ramos-Rod-\nríguez and\
    \ Ruíz-Navarro 2004) because these resources provide a representative sample \n\
    of international scientific activity. To widen coverage, we considered all publications\
    \ in \nthe English language. All journal articles published before 2021 were considered.\
    \ After \nthis step, the Scopus database returned 162 documents. To further refine\
    \ the results, we \nlimited the subject areas to engineering, computer science,\
    \ social sciences, business, man-\nagement and accounting, decision sciences,\
    \ and economics. For clarity and transparency, \nthe advanced search function\
    \ used in Scopus is illustrated in Annex 1. Our review of past \nstudies focused\
    \ on identifying the connection of blockchain technology with the smart city.\
    \ \nTherefore, priorities were given to the previously mentioned disciplines.\
    \ The number of \narticles considered was reduced to 150. Each of these articles\
    \ was carefully screened for \nrelevance by reading the title, the abstract and\
    \ the keywords. Eventually, 148 journal arti-\ncles were retrieved for the final\
    \ review and analysis (two of the 150 articles were consid-\nered “false positives”\
    \ for the search result). Our sample included all articles that present the \n\
    applications of blockchain technology in smart cities. The review procedure followed\
    \ to \nobtain these articles, along with the eligibility criteria, is depicted\
    \ in Fig. 1.\n2.2  Bibliometric methods\nAfter the descriptive analysis of the\
    \ selected publications, we carried out a deeper exami-\nnation of the content\
    \ (i.e., keywords) and the relationships among the articles to obtain \nmore insights.\
    \ Network analysis was employed based on bibliometric data to depict the \nnetwork\
    \ structure of blockchain-smart city research by using the visualization software\
    \ \nVOSviewer (Eck and Waltman 2009).\nFig. 1  The literature review procedure\
    \ and eligibility criteria\n2879\nBlockchain technology in the smart city: a bibliometric\
    \ review \n1 3\nA keyword co-occurrence analysis was performed to generate a more\
    \ in-depth examina-\ntion of the blockchain-smart city research field. This analysis\
    \ helps to reveal the interac-\ntion between the different research directions\
    \ and partition the field of knowledge (Ding \net al. 2001). Unlike co-citation\
    \ analysis, which is based on clustering the related references \ninto groups\
    \ according to their link strength (Zheng et al. 2017), keyword co-occurrence\
    \ \nnetwork analysis extracts author-supplied keywords in each publication and\
    \ analyses their \nco-occurrence frequency (Ding et al. 2001). The high proximity\
    \ of two keywords means \nthat they are found in the same publications more frequently.\
    \ To depict the structure of the \nfield, VOSviewer was used because of its compatibility\
    \ with Bibexcel and its ability to cre-\nate the co-occurrence network. Moreover,\
    \ we used the LinLog/modularity normalization \nmethod to display the clusters\
    \ of keywords. This algorithm minimizes the distance between \nconnected nodes,\
    \ i.e., keywords (Newman 2004; Noack 2007).\nCo-citation analysis was introduced\
    \ by Small (1973). It was employed to investigate \nand visualize the dynamic\
    \ aspects of blockchain-smart city research. The analysis of co-\ncited articles\
    \ enables researchers to explore the links between such co-cited sources (Chen\
    \ \net al. 2010). As one of the most common relational techniques, article co-citation\
    \ analy-\nsis assumes an association between two publications if they are both\
    \ cited in subsequent \nstudies (Small 1973). Co-citation patterns and frequency\
    \ help identify knowledge domains \nsince higher co-citation frequencies between\
    \ two publications suggest stronger relation-\nships, uniformity of references\
    \ and collective knowledge (Fang et al. 2018). In this paper, \nVOSviewer was\
    \ used to generate the article co-citation network. Initially, the output file\
    \ \nfrom Bibexcel was loaded into VOSviewer. Several steps were followed to generate\
    \ the \narticle co-citation map. Before importing data to VOSviewer, we pre-processed\
    \ the biblio-\nmetric data of our sample, and we set a threshold of two co-citations\
    \ to be shown for the \nanalysis. As a result, a document with a co-citation frequency\
    \ below two is not considered \nin the co-citation analysis. As blockchain-smart\
    \ city research is still in a nascent stage, \nwe noted that setting a high threshold\
    \ would lead to over filtering and the display of few \narticles in the visualization\
    \ network. The clustering of research topics was displayed using \nnormalization\
    \ with the LinLog/modularity algorithm (Newman 2004; Noack 2007). The \nthickness\
    \ of the edges reflects the strength of the relationship between co-cited articles.\n\
    3  Findings\n3.1  Distribution of publications by year\nThe search was performed\
    \ on the 5th of January, 2021. Figure 2 illustrates the number of \njournal articles\
    \ published by year and extracted from the execution of the research proce-\n\
    dure. The first article that addresses the applications of blockchain technology\
    \ in the smart \ncity appeared in 2016. According to Rosati and Conti (2016),\
    \ “smart city” has been used \nas a term since at least 2009 and several sources\
    \ highlight that blockchain was first intro-\nduced in 2008. Our research reveals\
    \ it took 7–8 years for the joint usage of blockchain and \nsmart city in a research\
    \ paper authored by Sun et al. (2016), who studied the contribution \nof blockchain\
    \ technology in supporting the development of shared services in smart cities.\
    \ \nIn 2017, one article was published by Sharma et al. (2017), where the authors\
    \ investigated \nthe potentials of blockchain technology for intelligent transport\
    \ systems. According to this \nstudy, blockchain could be used to design more\
    \ intelligent, secure, distributed, and autono-\nmous transport systems. From\
    \ 2018 onward, there is a significant increase in the annual \n 2880\nA. Rejeb\
    \ et al.\n1 3\nvolume of articles, peaking in 2020 with 92 papers. As shown in\
    \ Fig. 2, the number of \narticles published in 2018 increased significantly compared\
    \ to the previous years. How-\never, the scholarly output in 2019 and 2020 doubled\
    \ from the previous year. Two factors \ncan explain the growing interest level\
    \ in blockchain applications in the smart city: first, \nthe number of scholars\
    \ worldwide has increased tremendously, concomitantly increasing \nthe number\
    \ of submissions to journals. Second, a high number of smart city-focused and\
    \ \nblockchain-based decentralized applications are being developed (Kundu 2019).\
    \ This find-\ning is consistent with Li et al. (2019), who argue that smart energy\
    \ and smart government \napplications are at an advanced stage with blockchain\
    \ implementations. The interest in \nblockchain has also rapidly increased in\
    \ other sectors such as healthcare (Bernabe et al. \n2019), sharing services (Sun\
    \ et al. 2016), transportation (Astarita et al. 2020), and energy \n(Makhdoom\
    \ et al. 2020; Park et al. 2018; Tanwar et al. 2020). At the time of writing,\
    \ we \nanticipate the number of publications incorporating blockchain technologies\
    \ and smart \ncities will experience an exponential increase in the coming years,\
    \ entering a ‘maturing \nphase’ of adoption and continued strong levels of academic\
    \ attention and focus.\n3.2  Distribution of publications by country\nTo study\
    \ the country-wise distribution of the selected papers, we extracted the authors’\
    \ \naffiliations. From Fig. 3, it is observed that a significant contribution\
    \ to the blockchain and \nsmart city literature came from China, India and the\
    \ USA, with 32, 27 and 27 papers each, \nrespectively. This is not surprising\
    \ as China has up to 300 cities with pilot projects for \nsmart city construction\
    \ (Sun et al. 2016). In such projects, blockchain is expected to enable \nsmart\
    \ cities and provide citizens with high-quality services. Related to the development\
    \ \nof practical solutions for urban areas, China represents one of the leading\
    \ countries that \nhas promoted the adoption of blockchain for the authentication\
    \ of data (Li et al. 2019), \nthe security of imaging sensors for surveillance\
    \ (Khan et al. 2020), the support of foreign \nexchange trade systems (Aggarwal\
    \ et al. 2019), and the traceability of supply chains (Rejeb \net al. 2020a, b,\
    \ 2021a; Shen and Pena-Mora 2018). In India, Prime Minister Modi’s flagship \n\
    project— the Smart Cities Mission— has placed a core emphasis on cutting-edge\
    \ technolo-\ngies such as blockchain in the country (Team Inc42 2018). The government\
    \ of India has \nofficially initiated the implementation of blockchain in the\
    \ port city of Vishakhapatnam to \n1\n1\n17\n37\n92\n0\n10\n20\n30\n40\n50\n60\n\
    70\n80\n90\n100\n2016\n2017\n2018\n2019\n2020\nNumber of publica\x1Fons\nYear\n\
    Fig. 2  Year-wise distribution of publications\n2881\nBlockchain technology in the smart\
    \ city: a bibliometric review \n1 3\nsecure digital transactions, maintain land\
    \ records, and streamline automobile registrations \n(Bragadeesh and Umamakeswari\
    \ 2018). The interest in blockchain has expanded rapidly \nin the past decade\
    \ in the United States, where the scope of the technology extends from \ncryptocurrencies\
    \ to public services, including accounting and taxation (Keibler 2019). The \n\
    impetus for improved data management and space communications in various interplane-\n\
    tary space missions has urged the National Aeronautics and Space Administration\
    \ (NASA) \nto consider blockchain technology for the development of an autonomous\
    \ spacecraft sys-\ntem called the Resilient Networking and Computing Paradigm\
    \ (RNCP) (Ismail and Mater-\nwala 2019). \nSimilarly, the Cook County Recorder\
    \ of Deeds in Chicago initiated a project to test how \ndigital property abstracts\
    \ could be created and managed using blockchain (Kundu 2019). \nWith the blockchain\
    \ implementation, US State authorities and local governments aspire to \nimprove\
    \ the public and private sector services, enhance the relationship between govern-\n\
    ment and citizens, and make operational and commissioning activities over smart\
    \ urban \ninfrastructures intrinsically secure and efficient. Scholars from South\
    \ Korea have contrib-\nuted to the literature with 17 studies. Researchers from\
    \ the United Kingdom (UK), Aus-\ntralia, and Spain have also contributed substantially\
    \ to the literature with 15, 13, and 11 \npapers, respectively. It should be noted\
    \ that the category \"Others\" comprises all countries \nwith less than five papers\
    \ (total papers from such countries = 35).\n3.3  Distribution of publications\
    \ by journal\nThe retrieved papers appeared in a wide variety of academic journals.\
    \ Figure 4 presents the \njournals publishing on blockchain and the smart city\
    \ and the respective number of articles. \nThe 148 articles were published in\
    \ 76 journals. In terms of output, IEEE Access was the \njournal publishing the\
    \ highest number of articles (n = 15). IEEE Internet of Things Journal \nand Future\
    \ Generation Computer Systems published 10 and 6 articles, respectively. The \n\
    remaining journals on the list published either four or five articles each. The\
    \ category \"Oth-\ners\" consists of 66 journals that published less than four\
    \ articles on blockchain applications \nin the smart city. In total, these journals\
    \ published 85 papers. Taking a closer look at the \nscope of all journals, we\
    \ observed that research on blockchain in the smart city context \n32\n27\n27\n\
    17\n15\n13\n11\n10\n9\n7\n7\n5\n≤ 4\n0\n5\n10\n15\n20\n25\n30\n35\nNumber of publica\b\
    ons\nCountry\nFig. 3  Country-wise distribution of publications\n 2882\nA. Rejeb\
    \ et al.\n1 3\nhas received remarkable attention from the engineering and computer\
    \ science communities \nand appeared in journals with a high impact factor.\n\
    Meanwhile, journals with a strong orientation toward management, business, urban\
    \ sci-\nences, and social sciences have published few articles on the subject.\
    \ As a result, this sug-\ngests that the low output from these journals may be\
    \ explained by either few submissions \nor high rejections if not aligned with\
    \ the charter of the journal. This finding increases the \nutility of this study\
    \ and makes this review invaluable for awakening the interest of social \nscience\
    \ scholars to examine the intricacies of blockchain research from the smart city\
    \ \nperspective.\n4  Bibliometric analysis\n4.1  Keyword co‑occurrence network\n\
    The analysis of keyword co-occurrence network assists researchers in identifying\
    \ the fun-\ndamental topics discussed in a particular research area. In this respect,\
    \ Zupic and Čater \n(2015) state that keyword co-occurrence is a useful scientometric\
    \ technique that enables \nvisualization and displaying the similarities present\
    \ among frequently co-occurring key-\nwords or topics in the literature. With\
    \ this bibliometric technique, scholars can obtain a \nbroad idea of the content\
    \ of a paper and essential information relating to methods, objec-\ntives, and\
    \ viewpoints. To map the keyword co-occurrence network, we pre-treated and \n\
    adjusted the original keywords whenever it was necessary. For instance, we merged\
    \ similar \nkeywords such as \"smart city\" and \"smart cities\", \"blockchain\"\
    \ and \"blockchain technol-\nogy\". After performing some data refinements, we\
    \ set the threshold of keyword co-occur-\nrence at a minimum of two in VOSviewer\
    \ and generated the co-occurrence network visu-\nalization of content. As illustrated\
    \ in Fig. 5, six clusters emerged, with 89 nodes appearing \nin the network. Each\
    \ node in the visualization constitutes a keyword; the node’s size is \nproportional\
    \ to the occurrence of the keyword in the reviewed literature. In other words,\
    \ \nlarger nodes indicate a higher frequency of keyword co-occurrence. Keywords\
    \ that often \n15\n10\n6\n5\n5\n5\n5\n4\n4\n4\n85\n0\n10\n20\n30\n40\n50\n60\n\
    70\n80\n90\nIEEE Access\nIEEE Internet of Things Journal\nFuture Genera\x1Fon\
    \ Computer Systems\nSustainable Ci\x1Fes and Society\nSustainability\nSensors\n\
    Journal of Parallel and Distributed Compu\x1Fng\nJournal of Network and Computer\
    \ Applica\x1Fons\nInterna\x1Fonal Journal of Advanced Computer Science and…\n\
    Future Internet\nOthers*\nNumber of publica\x1Fons\nJournals\nFig. 4  Distribution\
    \ of publications by professional journals\n2883\nBlockchain technology in the smart\
    \ city: a bibliometric review \n1 3\nco-occur tend to be located near each other\
    \ in the network. Hence, all authors’ keywords \nwere arranged in six clusters\
    \ with a different level of significance.\n4.1.1  The combination of blockchain\
    \ and IoT in smart cities\nBased on the size, the red cluster represents the most\
    \ significant, containing several key-\nwords that are strongly related to blockchain’s\
    \ foundational components, the IoT, and \na wide range of technologies that could\
    \ be leveraged in the smart city. These include \n\"blockchain\", “smart city”\
    \ \"IoT\", \"SDN\" (Software-Defined Networking), \"Edge Com-\nputing\", \"Fog\
    \ Computing\", \"Authentication\", \"IoV\" (Internet of Vehicles), \"ITS\" (Intel-\n\
    ligent Transport System), and \"healthcare\". The introduction of blockchain technology\
    \ \nhelps to establish an architecture that ensures improved security and privacy\
    \ in smart \ncommunities (Aggarwal et al. 2019; Bernabe et al. 2019), unmanned\
    \ aerial vehicle com-\nmunications (Mehta et al. 2020), IoT devices (Kamran et al.\
    \ 2020; Singh et al. 2019; Xu \net al. 2018), crowdsourcing services (Lin et al.\
    \ 2020; Stoyanova et al. 2020), healthcare \n(Dwivedi et al. 2019; Khatoon 2020;\
    \ Rejeb et al. 2021a, b), and supply chain manage-\nment (Astarita et al. 2020;\
    \ Mistry et al. 2020). The high co-occurrence of blockchain \nwith IoT, as shown\
    \ by the thick edge connecting them in the network, reflects the criti-\ncality\
    \ of these technologies to change the way smart citizens interact, think, live,\
    \ and \nFig. 5  The keyword co-occurrence network\n 2884\nA. Rejeb et al.\n1 3\n\
    manage information. The pervasiveness of IoT technologies can optimize information\
    \ \ncapture, facilitate data communication, and substantiate the value of blockchain\
    \ for the \ndevelopment of smart cities. Besides IoT and blockchain, the high\
    \ occurrence of ITS \nand healthcare in the author keywords field likely indicates\
    \ that most of published works \nfocused on the examination of blockchain’s potential\
    \ for transportation and healthcare \nactivities in the smart city.\nBlockchain\
    \ constitutes a viable solution to overcome several challenges facing trans-\n\
    portation activities such as congestion, emissions, and accidents. According to\
    \ Gupta \net al. (2021), blockchain can also be used to mitigate security concerns\
    \ of connected \nautomated vehicles, including vehicle hacking, traffic congestion,\
    \ information disclo-\nsure, spoofing, eavesdropping, Sybil, replay, data alteration,\
    \ and DoS attacks. In addi-\ntion, the technology can underpin a privacy-preserving,\
    \ open, and trustless architecture \nfor mobility services for citizens (Ahad\
    \ et al. 2020). By deploying a blockchain-based \nIoV, it is possible to improve\
    \ road traffic sustainability by reducing energy consump-\ntion, optimizing safety,\
    \ and minimizing pollution. The introduction of blockchain and \nthe transition\
    \ from fuel-based vehicles to blockchain-based electric and autonomous \nvehicles\
    \ have the potential to advance new business models in which mobility as a ser-\n\
    vice replaces the existing car ownership paradigms. As a result, citizens will\
    \ be able to \nbenefit from a high level of smart mobility, real-time tracking\
    \ of public transportation, \nefficient payment services, sufficient space for\
    \ parking, and convenient micro-mobility \n(e.g., finding and tracking scooters\
    \ or e-bikes with blockchain-based applications).\nIn the healthcare sector, blockchain\
    \ is a promising technology that can provide \ndecentralization in healthcare\
    \ networks, improving data provenance and enhancing net-\nwork security (Bhushan\
    \ et al. 2020). Medical professionals can securely store patients’ \nhealth data\
    \ in a blockchain that can be configured to enable interoperability across dif-\n\
    ferent healthcare entities. Moreover, blockchain systems can provide real-time\
    \ access \nto patients’ medical records and ensure protection against data manipulations\
    \ that are \notherwise difficult to trace, like adding or removing drug allergy\
    \ information, thereby \novercoming critical patient safety and institutional\
    \ trust concerns (S. Singh et al. 2020a, \nb). From a patients’ perspective, blockchain\
    \ can be augmented with identity manage-\nment tools that provide a secure access\
    \ framework to medical records and safeguard \npatient privacy. Data can be accessed\
    \ only by authorized healthcare actors and enti-\nties. To provide appropriate\
    \ and timely medical interventions and treatments, health-\ncare organizations\
    \ could utilize a blockchain-based system to obtain a full record of the \npatients’\
    \ personal health records and diagnoses notes, enabling real-time decision mak-\n\
    ing while reducing patient risk and enhancing the quality of care. Similarly,\
    \ blockchain \ncan streamline the processes related to medical insurance claims\
    \ because the technology \nenables the reduction of the layers of intermediaries\
    \ involved in the insurance industry \n(Salha et al. 2019). The ease of secure\
    \ access to medical data via blockchain can shorten \nthe process of approval\
    \ of insurance, especially by reducing intermediaries.\nFrom a supply chain perspective,\
    \ blockchain can be utilized to control and track the \nflow of medicines and\
    \ reduce the risk of pharmaceutical counterfeits (Rejeb et al. 2021a, \nb). Thanks\
    \ to its fraud-resistant nature, blockchain is capable of reducing pharmaceuti-\n\
    cal waste and various manipulations of supply chain data. The origin of drugs\
    \ can be \ntraced efficiently by logging chronological transaction data generated\
    \ by IoT devices to \nthe blockchain. Therefore, blockchain brings several benefits\
    \ to the healthcare sector, \nranging from timely diagnoses and personalized healthcare\
    \ services to reduced paper-\nwork and increased pharmaceutical supply chain traceability.\n\
    2885\nBlockchain technology in the smart city: a bibliometric review \n1 3\n4.1.2\
    \  The role of machine learning in smart cities\nThe second significant cluster\
    \ is the green one, and it comprises terms such as \"ML\" \n(Machine Learning),\
    \ \"Smart Grids\", \"Data Security\", \"Privacy-Preserving\", \"Reli-\nability\"\
    , \"Anomaly Detection\", \"Crowdsensing\". According to Tanwar et al. (2020),\
    \ the \ncombination of blockchain and ML ensures data reliability and security,\
    \ which is neces-\nsary to provide accurate analytics for decision-making processes.\
    \ Coupled with block-\nchain, ML can precisely identify patterns, anomalies, and\
    \ support predictions based on \nthe enormous data generated by IoT applications\
    \ in the smart city, including transporta-\ntion, healthcare, energy, and weather\
    \ forecasting. The integration of ML and IoT has \nsuffered from some limitations,\
    \ such as the lack of effectiveness in output and the need \nto embed security\
    \ from the start (Kaur et al. 2020). For this reason, Salah et al. (2019a; \n\
    b) believe that blockchain can mitigate these limitations and offer scalability,\
    \ security, \nand execution of transactions by consensus protocols (e.g., Proof\
    \ of Work (PoW), Proof \nof Stake (PoS)). Kumar et al. (2021) aim to establish\
    \ trust management, privacy protec-\ntion, and intrusion detection by fusing blockchain\
    \ and ML. As such, the authors intend \nto develop a trustworthy privacy-preserving\
    \ secured framework for constructing a sus-\ntainable smart city. Likewise, Shen\
    \ et al. (2019) propose a new privacy-preserving train-\ning scheme based on blockchain\
    \ and ML to tackle the issues of data privacy and integ-\nrity and to develop\
    \ a secure training algorithm in multi-part contexts where IoT data \nis captured\
    \ from multiple data providers in the smart city. Overall, smart city design-\n\
    ers can take advantage of the powerful combination of blockchain and ML to develop\
    \ \nsecure and privacy-preserving applications.\nWith the exponential increase\
    \ in sensors, there is an emphasis on big data and data \nanalytics. These technological\
    \ advances pave the way for the establishment of data-\ndriven smart cities. Moreover,\
    \ there is an increased focus on smart grids as a critical \nfeature of emerging\
    \ energy scenarios with the all-embracing purpose of better balancing \nenergy\
    \ demand and generation. Smart grids embody a significant improvement in the \n\
    fundamental structure of power grids, which can be facilitated by blockchain implemen-\n\
    tation. For instance, blockchain can help address the security and privacy issues\
    \ encoun-\ntered during the trading of excess power among smart citizens. In line\
    \ with Jaiswal et al. \n(2020), blockchain can be utilized effectively to facilitate\
    \ electricity trade among user \nnetworks. Sadik et  al. (2020) posit that blockchain\
    \ holds the key to the automation \nof smart grids due to its ability to facilitate\
    \ energy trading, financing for renewables, \nenergy billing, and metering processes.\
    \ The technology also incites the joint operation \nof renewable sources with\
    \ their energy storage units, the easy assessment of service \ncharge, and the\
    \ flexible and reliable payments of energy transactions through cryptogra-\nphy.\
    \ Therefore, blockchain offers more secure energy transactions and trading in\
    \ a smart \ncity while reducing costs, maximizing utility, and supporting real-time\
    \ processing of \nenergy trading computation (Chaudhary et al. 2019).\nThe high\
    \ frequency of crowdsourcing in the cluster suggests that this paradigm can \n\
    benefit from the deployment of blockchain in the smart city. To be specific, blockchain\
    \ \nhas been used to link and automate data processing for mobile crowdsensing,\
    \ thereby \nlaying the foundation for several smart city applications like smart\
    \ parking. In this \ncontext, Kim and Kim (2020) design a multi-blockchain structure\
    \ for data management \nemploying mobile crowdsensing technology to develop a\
    \ smart parking system, which \nrepresents a key service for constructing smart\
    \ cities. Furthermore, by incorporating \npublic–private blockchain, the proposed\
    \ system is useful owing to the benefits of the \n 2886\nA. Rejeb et al.\n1 3\n\
    public blockchain (e.g., transaction immutability, cryptography, and data integrity)\
    \ and \nthe private blockchain (e.g., secure data sharing and management). As\
    \ a result, block-\nchain can secure information exchange among different participants\
    \ in mobile crowd-\nsensing networks and achieve decentralization of crowdsensing\
    \ to prevent the issues \nthat a central platform causes.\n4.1.3  The technical\
    \ characteristics of blockchain\nThe blue cluster is related to the technical\
    \ characteristics of blockchain technologies such \nas security, privacy, latency,\
    \ throughput, transparency, and trust. Interest in the technol-\nogy stems from\
    \ the fact that blockchain provides security, confidentiality, and data integ-\n\
    rity without the need for a third party to control transactions. Ensuring security\
    \ is becom-\ning primary for smart city administrators in order to mitigate cybercrimes.\
    \ To address \nthe security and privacy issues encountered by smart cities, there\
    \ is a need to integrate \nblockchain to make sure that certain security loopholes\
    \ do not continue to affect the rest \nof the smart city networks. Singh et al.\
    \ (2020a; b) note that blockchain can be utilized \nto enhance the security infrastructure\
    \ of big enterprises as open ledgers can induce fault-\nproof integration of connected\
    \ IoT devices in intelligent networks. This prevents problems \nlike data visibility\
    \ and end-to-end process tracking, transaction automation and checking, \nreal-time\
    \ data sharing across the network, and IoT network issues. Bhushan et al. (2020)\
    \ \ncontend that blockchain-based systems require minimum overall security monitoring\
    \ cost \nand offer protection from adversaries attempting to gain access to private\
    \ information or \ncontrol over the entire network. Moreover, the keyword \"AI\"\
    \ appeared frequently in the \ncluster, illustrating the criticality of this technology\
    \ to support the development of future \nsmart cities. AI intersects considerably\
    \ with blockchain to deliver bug-free smart contracts, \noptimize energy consumption,\
    \ learn from distributed data sources, improve system resil-\nience, and improve\
    \ the design of mining hardware to maximize system performance (S. \nSingh et al.\
    \ 2020a, b). In turn, blockchain complements AI and ensures data quality and \n\
    resistance against hacking and human mistakes thanks to its decentralization,\
    \ immutability, \nand transparency (Radu 2020). With the emergence of 5G networks,\
    \ there is a potential to \ndevelop vertical applications in the smart city by\
    \ connecting heterogeneous devices and \nequipment with substantial enhancements\
    \ in terms of high service quality, high network \ncapacity, and increased system\
    \ throughput (Nguyen et al. 2020). 5G networks facilitate the \nintegration of\
    \ IoT and provide access to the smart city infrastructure through control and\
    \ \nvirtual network functions (Capossele et al. 2018). The amalgamation of blockchain\
    \ and 5G \nallows detecting and preventing various attacks, improving network\
    \ latency, and provid-\ning better connectivity for smart city applications, including\
    \ smart logistics. In fact, logis-\ntics is recognized as the most suitable sector\
    \ for the introduction of blockchain technology. \nAccording to Astarita et al.\
    \ (2020), the relevance of blockchain for logistics is claimed for \nits traceability\
    \ and integration capabilities in supply chain management. It is also argued \n\
    that enhanced trust and data sharing among supply chain partners are among the\
    \ virtues of \nblockchain in logistics. The high frequency of the keyword \"Literature\
    \ Review\" indicates \nthat researchers widely used reviews to investigate the\
    \ security and privacy issues of block-\nchain and the role of AI and 5G networks\
    \ in reshaping smart cities. However, a bibliomet-\nric approach synthesizing\
    \ research on blockchain applications in smart cities is still lack-\ning, making\
    \ this study the first attempt to analyze this topical area using quantitative\
    \ tools.\n2887\nBlockchain technology in the smart city: a bibliometric review\
    \ \n1 3\n4.1.4  The role of smart contracts in smart cities\nThe most frequent\
    \ keywords in the yellow cluster are \"Smart Contracts\", \"Ethereum\", \n\"Access\
    \ Control\", \"Consensus\", and “Bitcoin”. The collection of these keywords sug-\n\
    gests that blockchain supports the programmability and the communication of the\
    \ mul-\ntiple heterogeneous, mobile, autonomous and robotics devices used in the\
    \ smart city \nthrough smart contracts. This cluster provides the first and second\
    \ generations of block-\nchain applications for developing a ledger that records\
    \ signed monetary transactions and \nprovides a general-purpose programmable infrastructure\
    \ using smart contracts (Kosba \net al. 2016). Smart contracts represent self-executing\
    \ computer programs (Szabo 1996) \nthat can be stored within the blockchain and\
    \ automatically activated if certain condi-\ntions are met (Liao and Wang 2018).\
    \ According to Liao and Wang (2018), blockchain-\nenabled smart contracts could\
    \ provide a perfect mixture of security, privacy and ease \nof use for performing\
    \ business transactions, exchanging cryptocurrencies (e.g., Ether, \nbitcoin)\
    \ and resources. By using smart contracts, blockchain can be leveraged to tap\
    \ \ninto the underutilized assets of smart cities to generate profits for their\
    \ inhabitants and \nstrengthen the economy. The technology can accelerate the\
    \ transition from the smart \ncity economy toward a sharing economy. In their\
    \ recent study, Rahman et al. (2019) \nstate that blockchain-based sharing economy\
    \ services can be effectuated by employing \nsmart contracts. The authors further\
    \ note that with the help of smart contracts, block-\nchain can automate location-aware\
    \ agreement logic and provide complex spatio-tempo-\nral services (e.g., insurance)\
    \ to a global level without the need for a central verification \nbody. Moreover,\
    \ the combination of smart contracts and Ethereum blockchain supports \nseveral\
    \ use cases in the smart city. For example, Salah et  al. (2019a; b) apply smart\
    \ \ncontracts and Ethereum blockchain for food traceability and tracking across\
    \ agricultural \nsupply chains. In the system, all transactions are kept in the\
    \ blockchain’s ledger and are \nconnected to a decentralized file system to maintain\
    \ the targeted level of traceability. In \nthe same vein, Toyoda et al. (2017)\
    \ leverage Ethereum blockchain and smart contracts \nto develop a traceability\
    \ system for the tracking of product information and for identi-\nfying forged\
    \ products. In the context of the automotive industry, Sharma et al. (2019) \n\
    develop an Ethereum blockchain-based distributed system to ensure on-demand services\
    \ \nfor customers in smart cities. With the aid of this blockchain, suppliers\
    \ and manufactur-\ners would be able to protect their products from counterfeits\
    \ and establish a sustainable \nautomotive ecosystem. Finally, Longo et al. (2019)\
    \ use an Ethereum blockchain to allow \nfirms to validate the integrity, invariability,\
    \ and authenticity of data exchanged by other \nfirms, thus precluding companies\
    \ from sharing inaccurate or unreliable data. Another \nopen-source blockchain\
    \ that allows the development of smart contracts is Hyperledger \nFabric. Using\
    \ the smart contract of Hyperledger Fabric, Hang and Kim (2020) use this \nfunctionality\
    \ of blockchain to simplify the task management of sensors and verify IoT \ndevices\
    \ and actuators at runtime. Jamil et al. (2019) present a solution to data integrity\
    \ \nmanagement based on Hyperledger Fabric to increase data security in a smart\
    \ hospi-\ntal. Sifah et  al. (2020) design a system for smart city governance\
    \ using Hyperledger \nFabric as the blockchain platform and operating scheme.\
    \ As per the study findings, \nthe proposed platform permits the simultaneous\
    \ tackling of several security issues like \ntrust, privacy, and accountability.\
    \ It also establishes a healthy smart city environment \namong government workers.\
    \ In the supply chain context, Wang et al. (2020) develop \na blockchain-based\
    \ Hyperledger Fabric to solve traceability and fragmentation issues \nand improve\
    \ information sharing among business stakeholders. Other use cases of \n 2888\n\
    A. Rejeb et al.\n1 3\nHyperledger Fabric include education, insurance process\
    \ improvement, and transpor-\ntation (Shen and Pena-Mora 2018). Compared to Ethereum\
    \ blockchains, Hyperledger \nFabric-based blockchains are more efficient and able\
    \ to maintain stable time consump-\ntion during smart city transactions (Chiu\
    \ and Meng 2021).\nBeyond Ethereum and Hyperledger Fabric, Bitcoin blockchain\
    \ also attracts signifi-\ncant attention from smart city researchers. This blockchain\
    \ is widely used for crypto-\ncurrency and not appropriate for general purpose\
    \ applications. Nevertheless, being the \ninitial and largest public blockchain,\
    \ Bitcoin provides a safe and strong payment system \nthat outperforms any other\
    \ blockchains. In general, Bitcoin blockchain is more suitable \nfor smart city\
    \ applications that need limited business logic and high security, such as \n\
    protection of government documents (Beris and Koubarakis 2018), e-voting (Noizat\
    \ \n2015), and machine-to-machine micropayment (Lundqvist et al. 2017).\n4.1.5\
    \  The development of smart community\nThe purple cluster contains the following\
    \ keywords; \"Smart Community\", \"EVs\" (Elec-\ntronic Vehicles), \"Contract\
    \ Theory\", and \"Energy\". The smart community represents an \nessential element\
    \ of the Internet of Energy (IoE), to which blockchain can contribute \nby securing\
    \ EV charging, optimizing the allocation of energy resources, and satisfy-\ning\
    \ EV’s individual energy consumption preferences (Su et al. 2019). Blockchain\
    \ has \nemerged to develop smart communities and optimize their consumption of\
    \ resources \n(Alcarria et al. 2018). Aggarwal et al. (2019) posit that blockchain\
    \ can be used to realize \nauthentication, authorization, security, confidentiality,\
    \ integrity, non-repudiation, and \naccountability for real-time smart city applications,\
    \ which may not be enabled by cen-\ntralized systems in a smart community context.\
    \ Blockchain is also a critical element for \nstrengthening transaction security\
    \ at charging stations of public electric vehicles. Thus, \nthe technology can\
    \ facilitate electricity trading between charging stations and electric \nvehicles\
    \ (Bhushan et  al. 2020). In Kang et  al. (2017), the authors suggest a consor-\n\
    tium blockchain for electricity trading among vehicles and for optimizing prices\
    \ and \nthe amount of electricity traded. Huang et  al. (2018) develop a trading\
    \ model based \non blockchain to store the transaction information between electric\
    \ vehicles and charg-\ning stations and to automate trading activities. Therefore,\
    \ blockchain contributes to the \ndevelopment of green transportation systems\
    \ by streamlining transparent and decentral-\nized trading processes between vehicles\
    \ and charging stations. Demand information of \nelectric vehicles (e.g., necessary\
    \ energy amounts, geographic region, time interval) and \ncharging stations (e.g.,\
    \ location, pricing) can be maintained by blockchain; therefore, \nelectric vehicles\
    \ can make more effective decisions, particularly concerning the selec-\ntion\
    \ of the optimal charging station. Furthermore, blockchain encourages P2P transac-\n\
    tions and ushers in new prosumer markets, where transactive energy systems are\
    \ the \npredominant paradigm. In such systems, utilities and smart homes in the\
    \ city move \nfrom passively consuming energy and receiving demand-response calls\
    \ to actively trad-\ning energy and ancillary services on blockchain and even\
    \ to developing locally efficient \nmarket clearing prices (Qi and Shen 2019).\
    \ The use of blockchain-based P2P energy \ntransaction is able to establish sustainable\
    \ energy ecosystem between prosumers, cus-\ntomers, and existing energy suppliers\
    \ (Shojaei et al. 2019). Finally, the keyword \"Smart \nHome\" is indicative of\
    \ blockchain’s potential to monitor its resources, ensure security \nand privacy,\
    \ and increase home automation (Li et al. 2019).\n2889\nBlockchain technology\
    \ in the smart city: a bibliometric review \n1 3\n4.1.6  Blockchain as a driver\
    \ for sustainable smart cities\nFinally, the last cluster consists of the following\
    \ keywords: “Sustainability”, “Big Data”, \n“ICT”, “Citizens”. Terms shown in\
    \ this cluster reveal the role of blockchain to incorporate \nsustainability in\
    \ the infrastructure of smart cities. In general, a smart city is orchestrated\
    \ to \nenable operational efficiencies, increase environmental sustainability\
    \ efforts, and improve \ncitizens’ quality of life. By utilizing blockchain in\
    \ smart mobility, there is a chance for \nless vehicles and road traffic, helping\
    \ to reduce air pollution and fossil fuel emissions \n(Wong et al. 2020). To further\
    \ strengthen the sustainability of urban mobility, Jaffe et al. \n(2017) propose\
    \ an incentive model that could be used by blockchain to prompt citizens in \n\
    cycling and to recompense commuting practices. The reward system also involves\
    \ citizens \nchoosing public transport or shared rides in the smart city. Due\
    \ to the increasing urbani-\nzation, it is crucial to devise effective waste management\
    \ policies to enforce the sustain-\nable dimension of smart cities. Related to\
    \ waste, the coupling of blockchain, IoT sensors \nand AI has the potential to\
    \ assist in waste management processes, including waste collec-\ntion, disposal,\
    \ and recycling. Through the implementation of blockchain, civil engineers \n\
    can benefit from reliable big data to improve urban resources and services (Berglund\
    \ et al. \n2020). In the bargain, smart cities can take advantage of blockchain\
    \ to advance economic, \nenvironmental, and social sustainability. In response,\
    \ this can support a country’s commit-\nment to meet sustainable development goals.\
    \ While the literature emphasizes that block-\nchain is ready to assimilate a\
    \ key role in the sustainable development of smart cities and \nenhance people’s\
    \ life conditions (Shen and Pena-Mora 2018), sustainability still represents \n\
    the furthest research topic from the mainstream of the analyses represented by\
    \ other clus-\nters. Consequently, there is a need for additional studies ascertaining\
    \ the sustainability out-\ncomes of blockchain in the smart city (Table 1). \n\
    4.2  Article co‑citation network\nAn article co-citation network represents an\
    \ essential type of co-citation analysis. The ori-\ngin of this method can be\
    \ traced to the work of Small (1973), who recommends the analy-\nsis of the network\
    \ of co-cited references. In this method, the units of the network analysis \n\
    are the articles, and co-citation clusters constitute the underlying intellectual\
    \ structures of \na particular field. Consistent with Chen et al. (2010), article\
    \ co-citation enables researchers \nto interpret the nature of the cited articles\
    \ in the cluster and the interlinks between the clus-\nters. The purpose of this\
    \ study was to conduct an article co-citation analysis to determine \nthe structure\
    \ of the most relevant contributions to the research area of blockchain and the\
    \ \nsmart city. Figure 6 presents the findings of the article co-citation network\
    \ extracted from \nVOSviewer. As shown, the highly co-cited pair of articles are\
    \ those connected with thick \narcs. A pair of co-cited articles occur when two\
    \ articles are cited together in a single arti-\ncle. The thick arcs indicate\
    \ a strong relationship between these articles and suggest simi-\nlarities regarding\
    \ specific topics within the field of blockchain and smart city (Batistič et al.\
    \ \n2017; Small 1973; Zupic and Čater 2015).\nOn the other hand, thin arcs signify\
    \ a weak co-citation association between co-cited arti-\ncles and the lack of\
    \ content similarities (Mishra et al. 2017, 2018). For example, the thick \narc\
    \ connecting Khan and Salah  (2018) and Hammi et al (2018) suggests that these\
    \ articles \nhave a strong co-citation relationship and share common ideas and/or\
    \ related concepts. A \nsimilar pattern can be observed between Sharma et al.\
    \ (2017) and Sharma and Park (2018). \n 2890\nA. Rejeb et al.\n1 3\nTable 1  Top\
    \ 10 most frequent keywords in each cluster\nIoT: Internet of Things/SDN: Software-Defined\
    \ Network/IoV: Internet of Vehicle/ITS: Information Transportation System/ML:\
    \ Machine Learning/AI: Artificial Intelligence/\nDLT: Distributed Ledger Technology/P2P\
    \ Computing: Peer-to-Peer Computing/EV: Electrical Vehicles/ICT: Information and\
    \ Communication Technologies\nRank\nCluster 1\nCluster 2\nCluster 3\nCluster 4\n\
    Cluster 5\nCluster 6\n1\nBlockchain\nML\nSecurity\nSmart Contracts\nSmart Community\n\
    Sustainability\n2\nSmart City\nSmart Grids\nPrivacy\nEthereum\nEVs\nBig Data\n\
    3\nIoT\nData Security\nAI\nAccess Control\nContract Theory\nICT\n4\nSDN\nPrivacy-Preserving\n\
    DLT\nConsensus\nEnergy\nCitizens\n5\nEdge Computing\nReliability\n5G Networks\n\
    Bitcoin\nConsortium Blockchain\nDigital Cities\n6\nFog Computing\nAnomaly Detection\n\
    Computer Architecture\nDecentralization\nDemand Response\nMobility\n7\nAuthentication\n\
    Crowdsensing\nLatency\nAuthorization\nProsumer\nUrban Planning\n8\nIoV\nCryptography\n\
    Literature Review\nBusiness Process\nReputation\n9\nITS\nCybersecurity\nLogistics\n\
    Hyperledger Fabric\nSmart Home\n10\nHealthcare\nData Analytics\nProtocols\nP2P\
    \ Computing\n2891\nBlockchain technology in the smart city: a bibliometric review\
    \ \n1 3\nIn contrast, the thin arc between Hammi et al. (2018) and Mistry (2020)\
    \ reflects a weak co-\ncitation strength, and thus the lack of content similarities\
    \ (Mishra et al. 2017, 2018).\nSetting a threshold of at least two citations per\
    \ article, only 58 nodes of the most co-\ncited articles are displayed in the\
    \ co-citation network in Fig. 6. The radius of a node gives \nan idea about its\
    \ total link strength which is the sum of link strengths of this node over all\
    \ \nthe other nodes. Moreover, four clusters were generated by VOSviewer. In terms\
    \ of the \ntotal number of nodes, the red cluster is the most significant one.\
    \ This cluster provides a \ngeneral overview of blockchain applications in the\
    \ smart city (Rahman et al., 2019; E. Xie \net al., 2006) and the role of the\
    \ technology in optimizing the efficiency and strengthening \nthe security and\
    \ privacy of various smart city applications such as IoT (Gong et al. 2019; \n\
    Shen et al. 2019; Viriyasitavat et al. 2019), IoV (Chen et al. 2020; Iqbal et al.\
    \ 2020; Yin \net al. 2020; Zhou et al. 2019), and big data (Yu et al. 2019). As\
    \ a result, researchers inter-\nested in understanding the potentialities and\
    \ challenges of blockchain for the smart city in \ngeneral, and the combination\
    \ of the technology with IoT and IoV in particular, may refer to \nthe articles\
    \ grouped in the red cluster. The green cluster groups all authors belonging to\
    \ the \nFig. 6  Article co-citation network\n 2892\nA. Rejeb et al.\n1 3\nsame\
    \ area of research and studying the potentials of blockchain for securing the\
    \ security \nand privacy of IoT transactions and information sharing (Banerjee\
    \ et al. 2018; Khan and \nSalah 2018; Makhdoom et al. 2020; Xu et al. 2018). Furthermore,\
    \ the blue cluster revolves \naround the potentials of blockchain solutions for\
    \ smart communities (Aggarwal et  al. \n2019), energy trading (Chaudhary et al.\
    \ 2019; Jindal et al. 2019), transportation (Astarita \net al. 2020; Mehta et al.\
    \ 2020; Sharma and Park 2018), artificial intelligence (Singh et al. \n2019, 2020a,\
    \ b), and construction (Sun and Zhang 2020). Lastly, the yellow cluster primar-\n\
    ily comprises all significant works associated with the application of blockchain\
    \ for smart \nenergy (Alcarria et al. 2018; Park et al. 2018; Pieroni et al. 2018;\
    \ Su et al. 2019; Wang \net al. 2019), smart tourism and entertainment (Liao and\
    \ Wang 2018; Nam et al. 2019), and \nsmart education (Fernandez-Carames and Fraga-Lamas\
    \ 2019). This cluster mostly groups \nall authors discussing the ability of blockchain\
    \ to secure energy transactions and create a \ntransparent system for energy supply\
    \ and trading.\nThe privacy-by-design nature of blockchain is well-suited for\
    \ smart city applications \nsuch as healthcare (Dagher et al. 2018; Dwivedi et al.\
    \ 2019), data sharing (Makhdoom \net al. 2020), and sharing economy services (Rahman\
    \ et al. 2019). Regardless of health-\ncare policies, blockchain could be implemented\
    \ in the smart city to authenticate and secure \nthe sharing of medical records\
    \ among the healthcare sector stakeholders. The storage of \nsensitive medical\
    \ data in blockchain can be helpful in situations of emergency, crisis, and \n\
    pandemics, such as the recent COVID-19 outbreak. However, these application fields\
    \ have \nreceived less attention, especially from the empirical point of view.\n\
    From Fig. 6, it appears that the most pertinent and highly cited study is that\
    \ by Khan \nand Salah (2018), who conducted a review on IoT security, blockchain\
    \ solutions, and the \nchallenges faced by IoT technologies. Three articles with\
    \ more than 170 citations stand \nout for their number of citations (See Table 2).\
    \ The study of Khan and Salah (2018) has \nreceived the highest number of citations\
    \ and gained a significant level of academic atten-\ntion. The authors of this\
    \ study performed a comprehensive review of IoT and blockchain \ntechnologies.\
    \ Taken together, these technologies are expected to create several opportu-\n\
    nities for smart cities and introduce new challenges. The second study by Sharma\
    \ et al. \n(2017) received 189 citations. The authors proposed a vehicle network\
    \ architecture based \non blockchain in the smart city. Scholars recognize the\
    \ importance of the proposed sys-\ntem and the ability of blockchain to optimize\
    \ the use of infrastructure resources and cre-\nate intelligent transportation\
    \ systems. A study by Sun et al. (2016) received 172 citations. \nThis study developed\
    \ a conceptual framework and analyzed the benefits of blockchain for \nsupporting\
    \ communal sharing and renovating services in the smart city. Taking a closer\
    \ \nlook at all these articles, it is evident that blockchain holds the potential\
    \ to add value in \ndifferent smart city sectors and applications, including integration\
    \ with smart IoT technolo-\ngies, smart transportation, smart services, smart\
    \ healthcare, smart grids, and smart energy. \nOverall, since most influential\
    \ articles are recent, it may take a few years before the asymp-\ntotic behaviour\
    \ of their citations will become known.\n5  Discussion and research implications\n\
    5.1  Discussion\nOur findings reveal that the concept of blockchain has rapidly\
    \ evolved over recent \nyears. Due to the tremendous advances in technology, a\
    \ wide range of applications \n2893\nBlockchain technology in the smart city:\
    \ a bibliometric review \n1 3\nTable 2  Annual number of growth of citations received\
    \ for the top ten highly cited articles\nAuthors\nYear\nTitle\n2016 2017 2018\
    \ 2019 2020 Total\nKhan and Salah (2018)\n2018 IoT Security: Review, Blockchain\
    \ Solutions, and Open Challenges\n0\n0\n35\n240\n273\n548\nSharma et al. (2017)\n\
    2017 Block-VN: A Distributed Blockchain Based Vehicular Network Architecture in\
    \ Smart City\n0\n3\n31\n71\n84\n189\nSun et al. (2016)\n2016 Blockchain-Based\
    \ Sharing Services: What Blockchain Technology can Contribute to Smart Cities\n\
    1\n4\n24\n66\n77\n172\nDagher et al. (2018)\n2018 Ancile: Privacy-Preserving Framework\
    \ for Access Control And Interoperability of Electronic \nHealth Records Using\
    \ Blockchain Technology\n0\n0\n10\n52\n82\n144\nHammi et al. (2018)\n2018 Bubbles\
    \ of Trust: A Decentralized Blockchain-Based Authentication System for IoT\n0\n\
    0\n4\n53\n79\n136\nBanerjee et al. (2018)\n2018 A Blockchain Future for Internet\
    \ of Things Security: A Position Paper\n0\n0\n10\n54\n65\n129\nDwivedi et al.,\
    \ (2019)\n2019 A Decentralized Privacy-Preserving Healthcare Blockchain for IoT\n\
    0\n0\n0\n43\n81\n124\nSharma and Park (2018) 2018 Blockchain Based Hybrid Network\
    \ Architecture for the Smart City\n0\n0\n3\n35\n54\n92\nXie et al. (2019)\n2019\
    \ A Survey of Blockchain Technology Applied to Smart Cities: Research Issues and\
    \ Challenges\n0\n0\n0\n8\n64\n72\nSu et al. (2019)\n2019 A Secure Charging Scheme\
    \ for Electric Vehicles with Smart Communities in Energy Blockchain\n0\n0\n3\n\
    20\n45\n68\n 2894\nA. Rejeb et al.\n1 3\nhave emerged, including those that significantly\
    \ impact the way smart cities are \ndesigned and managed. The use cases of blockchain\
    \ in the smart city have become a \npriority topic for investigation by scholars,\
    \ practitioners, and governments worldwide. \nSeveral attempts were made to showcase\
    \ the promising capabilities of blockchain tech-\nnology for smart city applications.\
    \ To date, the proliferation of big data and the rapid \nevolution of IoT technologies\
    \ have helped to accelerate the development of smart cit-\nies. While these innovations\
    \ have played a critical role in reshaping different areas of \nhuman life, influencing\
    \ many sectors like healthcare, transportation, education, energy, \nand services,\
    \ they generate an array of challenges such as security threats (Ismail and \n\
    Materwala 2019; Khan and Salah 2018), privacy issues (Bernabe et  al. 2019), and\
    \ \ntechnical inefficiencies (Rathore et al. 2019).\n5.1.1  Blockchain for secure\
    \ smart city applications\nThe complexity underlying the administration and management\
    \ of a smart city through \nits infrastructure and systems creates a substantial\
    \ amount of sensitive data that neces-\nsitate a secure and large storage environment.\
    \ To mitigate cyber threats and ensure \nsafe data capture, data storage and data\
    \ access in smart cities, blockchain’s distributed \nledger, encryption, and immutability\
    \ features can provide a foundation layer for vari-\nous citizen and business\
    \ interaction applications with increased efficiency, improved \nsecurity, and\
    \ enhanced privacy. Features of blockchain such as enhanced reliability, \nunforgeability,\
    \ and fault tolerance, make the technology an effective tool for authenti-\ncation\
    \ problems (Khalid et al. 2020) and content integrity protection (Xie et al. 2019).\
    \ \nTherefore, the vision of the smart city can be achieved with the use of blockchain\
    \ (in \ncombination with other technologies) as the technology compliments a city’s\
    \ digital \ntransformation with enhanced security and privacy, both significant\
    \ pillars of smart \ncities (Ahad et al. 2020).\nFurthermore, the integration\
    \ of blockchain in smart cities can guarantee secure and \nreal-time data transmission\
    \ between smart city technologies (e.g., IoT, cyber-physical \nsystems, drones,\
    \ robotics) without the need for a central entity that manages and con-\ntrols\
    \ all the transmitted data. The security feature of blockchain helps facilitate\
    \ data \ntransfer (Dwivedi et al. 2019; Mehta et al. 2020), but also enables seamless\
    \ interac-\ntions between users of autonomous systems in a smart city environment.\
    \ For instance, \nthe combination of various devices applied in various smart\
    \ city applications (e.g., \nsmart transportation, smart healthcare, smart factory,\
    \ smart energy) can benefit from \nthe peer-to-peer network for authentication\
    \ and resilience against attacks. By taking \nadvantage of these merits, Singh\
    \ et al. (2019) argue that blockchain can support the \nconnection of artificial\
    \ intelligence (AI)-enabled data centres and allow decentralized \nand secure\
    \ big data analysis. Therefore, researchers of smart city applications that are\
    \ \nbased on data generated and collected by various technological components\
    \ have rec-\nognized the critical hardware and software security threats that\
    \ have arisen with the \ndeployment of new technologies. As per this review’s\
    \ findings, the nature of embed-\nded security and trust stresses the importance\
    \ of blockchain to enhance the integrity \nof smart city systems to overcome perceived\
    \ security risks. As a result, the use of \nblockchain to better manage the risks\
    \ related to system security may increase citizens’ \nacceptance and usage of\
    \ information technology-enabled services and maximize the \neffectiveness of\
    \ the smart city initiative.\n2895\nBlockchain technology in the smart city: a bibliometric\
    \ review \n1 3\n5.1.2  Blockchain for private smart city transactions\nBesides\
    \ robust security, blockchain technology provides privacy measures for the massive\
    \ \namounts of data generated in the smart city, including weather, energy, healthcare,\
    \ manu-\nfacturing, and services data. New technologies can pose significant privacy\
    \ concerns with-\nout reasonable privacy measures due to the massive aggregation\
    \ of location-based informa-\ntion and their transfer over smart city networks.\
    \ However, with the support of blockchain, \nit is possible to tackle the complexity\
    \ and privacy issues of using distributed databases \n(Ismail and Materwala 2019).\
    \ Blockchain provides a practical scheme, which preserves \ndata privacy and ensures\
    \ authorized access to different data types, including health, smart \ncars, smart\
    \ energy, and financial details (Makhdoom et al. 2020). Privacy applications of\
    \ \nblockchain can prevent breaches, protect personal data (Astarita et al. 2020),\
    \ and embed \nprivacy in products and services (Oliveira et al. 2020). According\
    \ to several studies, block-\nchain acts as an innovative and effective safeguard\
    \ to the privacy of transactions due to its \nauthentication and encryption mechanisms\
    \ (Altulyan et al. 2020; Chaudhary et al. 2019; \nKhan et al. 2020; Nam et al.\
    \ 2019; Treiblmaier et al. 2020). With fewer worries about \ntheir privacy, citizens\
    \ can rely on blockchain-enabled applications to protect their personal \ninformation.\n\
    5.1.3  Blockchain for smart city sustainability\nThe integration of blockchain\
    \ technology can transform every sector of the smart city. \nSuch transformation\
    \ can bring several smart city improvements in more resilient informa-\ntion systems,\
    \ proper governance models, sustainable use of resources, intelligent manage-\n\
    ment and allocation of natural resources and city facilities, and enhanced quality\
    \ of life. \nThe improvement of sustainability has always been one of the desired\
    \ targets in the smart \ncity. By integrating sustainability with blockchain technology,\
    \ the smart city can drive sus-\ntainable development and growth from an economic,\
    \ social, and environmental perspec-\ntive. For example, the challenges associated\
    \ with energy consumption can be addressed by \nblockchain. The technology can\
    \ be used as a foundation to develop a peer-to-peer (P2P) \nenergy-transaction\
    \ platform to connect energy resources and home appliances and provide \nlow-cost\
    \ energy at all times and locations (Park et al. 2018). The inclusion of sustaina-\n\
    bility aspects in a smart city also involves adopting blockchain for smart waste\
    \ manage-\nment, the reduction of environmental impacts (Berglund et al. 2020),\
    \ and the preservation \nof ecosystem resiliency (Hammi et al. 2018). Blockchain\
    \ is expected to support the smart \ncity paradigm, foster green strategies, and\
    \ enhance urban sustainability. Smart cities can \nbenefit from the emergence\
    \ of blockchain to increase efficiencies and reduce the strain on \nscarce resources.\
    \ Consequently, blockchain implementation enables system designers to \ncreate\
    \ a sustainable smart city, which is the engine of economic efficiency, growth,\
    \ and \nsocial inclusiveness (Berglund et al. 2020). This study shows that blockchain\
    \ can hasten \nmoves towards a more sustainable smart city, in which the wise\
    \ management of resources \nis aligned with social inclusion and urban liveability.\n\
    5.1.4  The fusion of blockchain and IoT in the smart city\nThe combination of\
    \ blockchain and IoT provides more robust and secure platforms for \nsmart sensors\
    \ and devices to interact seamlessly within the smart city environment. Also,\
    \ \n 2896\nA. Rejeb et al.\n1 3\nblockchain technology contributes to developing\
    \ ‘security-by-design’ and intelligent IoT \nsystems that can be used in smart\
    \ grids, smart homes, smart transportation, smart energy, \nand smart healthcare.\
    \ The phenomenal proliferation of IoT has enabled ubiquitous con-\nnectivity and\
    \ intelligent automation, contributing to the development of smart cities. To\
    \ \nadvance IoT-enabled smart cities, blockchain can play a critical role in improving\
    \ IoT net-\nworks, achieving fault tolerance, optimizing resource consumption,\
    \ and enhancing data \nprocessing performance (Liu et al. 2020). The combination\
    \ of blockchain and IoT is an \nenabler for transparency (Mistry et al. 2020),\
    \ seamless data integration (Viriyasitavat et al. \n2019), and increased security\
    \ (Rathore et al. 2018). Empowered by blockchain technol-\nogy, IoT can enable\
    \ trust-free transactions, automation, and secure machine-to-machine \ncommunications\
    \ between IoT devices. This paper, therefore, argues that in a smart city, \n\
    blockchain can respond to several needs for the secure interconnection between\
    \ devices \nand citizens, efficient sharing of information, resources, and services.\
    \ The application of \nblockchain technology for the smart city can create reliable\
    \ storage of big data, resulting in \nbetter smart city services. Using blockchain\
    \ data, decision-makers would have the opportu-\nnity to effectively plan for\
    \ enhancing smart city services, expanding resources, and making \ninformed decisions.\n\
    5.1.5  The challenges of blockchain in the smart city\nIn advancing the discussion\
    \ further, a relevant follow-up question we asked is \"What are \nthe challenges\
    \ of adopting blockchain in the smart city?\" Despite the enablers of block-\n\
    chain for smart cities, as evidenced in the reviewed literature, the relative\
    \ immaturity and \nlack of wide-scale implementations of the technology constitute\
    \ one of the significant sys-\ntems-related barriers (Astarita et al. 2020). This\
    \ technological immaturity may increase the \nrisk and uncertainty level of citizens,\
    \ smart city designers, and decision-makers, thereby \nreducing or delaying the\
    \ adoption of blockchain. However, the technology’s infancy does \nnot constitute\
    \ a problematic issue since blockchain applications are expected to mature \n\
    with time.\nAnother pressing challenge of blockchain deployments in the smart\
    \ city is the limited \nscalability of blockchain systems (Liu et al. 2020). For\
    \ instance, the early generations of \nblockchain implementations are notoriously\
    \ characterized by low scalability (Scekic et al. \n2019). Ismail and Materwala\
    \ (2019) argue that the low scalability of blockchain is essen-\ntially caused\
    \ by data redundancies and increasing computational and communication over-\n\
    heads. From the perspective of storage, throughput, and networking, the existing\
    \ block-\nchain designs still suffer from scalability issues. Thus, more decentralized,\
    \ energy-efficient, \nhigh transaction throughput, and highly scalable blockchain\
    \ consensus algorithms are \nrequired. The realization of these needs and the\
    \ development of scalable blockchains will \nhelp overcome the misalignment between\
    \ the existing protocols and the customer services \nand meet the requirements\
    \ of large-scale collaborative ecosystems in the smart city (Ismail \nand Materwala\
    \ 2019). Therefore, studies proposing practical solutions for blockchain scal-\n\
    ability in the smart city are welcome, considering security, reliability, and\
    \ fine-grained \ndecentralized access control (Mistry et al. 2020).\nAnother challenge\
    \ of blockchain implementations in the smart city refers to the lack \nof standards\
    \ and acceptance at the official level. So far, there are no technology standards\
    \ \nthat help blockchain integration with other technologies such as the IoT and\
    \ 5G networks \n(Mehta et al. 2020; Mistry et al. 2020). Ahmed et al. (2020) note\
    \ that current IoT frame-\nworks rely on unified or expedited standards with enormous\
    \ computational and capacity \n2897\nBlockchain technology in the smart city:\
    \ a bibliometric review \n1 3\nlimits. Given that the communication between devices\
    \ and nodes with multiple software \ninterfaces necessitates a shared platform\
    \ and protocol to facilitate data transfer, it is urgent \nto establish standards\
    \ and protocols globally in the smart city (Tiwari and Batra 2021). \nAs a result,\
    \ the adoption of blockchain in smart cities requires proper governance, poli-\n\
    cies, rules, and guidelines for the effective deployment of the technology. Without\
    \ stand-\nards and regulations, the smart city’s systems would not be able to\
    \ interoperate, making it \nimpossible to share information across platforms.\
    \ Likewise, the development of efficient \nand collaborative smart city applications\
    \ will become a complicated task, and undesirable \nconsequences (e.g., data inconsistencies\
    \ and fragmentation, software management issues, \noperational inefficiencies)\
    \ may arise when dealing with configured devices (Mistry et al. \n2020).\n5.2\
    \  Research implications\n5.2.1  Theoretical implications, limitations and future\
    \ research directions\nIn this study, we conducted a systematic bibliometric review\
    \ to generate some relevant \ninsights on blockchain research in the smart city\
    \ context. Nonetheless, our bibliometric \nanalyses have several limitations:\n\
    • The review results are based on a short period of the publications involved\
    \ (2016–2020) \nand are restricted to specific subject areas. Although the list\
    \ is comprehensive and cov-\ners leading academic journals with highly cited and\
    \ co-cited articles, the collection of \nstudies is not exhaustive. Several research\
    \ studies are expected to be conducted in the \nforeseeable future as blockchain\
    \ technology has gained worldwide traction.\n• We only conducted one method of\
    \ co-citation analysis, namely, article co-citation \nanalysis. Many different\
    \ methods exist to perform co-citation analyses, such as biblio-\ngraphic coupling,\
    \ author co-citation analysis, and co-authorship analysis.\n• The results of the\
    \ review were determined by the keywords used for the search and col-\nlection\
    \ of studies. Although we are confident that we surveyed an extensive knowledge\
    \ \nbase, there might be articles that are potentially relevant to the scope of\
    \ the study but \nnot captured.\n• We have only selected journal articles, ignoring\
    \ other vital sources of knowledge such \nas conference proceedings, books, and\
    \ book chapters. Though the selected articles pro-\nvide valuable insights for\
    \ academics and practitioners, non-journal articles may offer \ninteresting insights\
    \ that are not covered in our reviewed literature.\n• An important step in conducting\
    \ a bibliometric study is the preparation of data. Even \nthough numerous databases\
    \ and electronically accessible sources can be used in biblio-\nmetric studies,\
    \ most technology-oriented analyses choose only one database as a source \n(Suominen\
    \ and Seppänen 2014) because the bibliometric software (i.e., VOSviewer) \nis\
    \ only able to read data from one database and cannot merge data from multiple\
    \ data-\nbases (Yeung et al. 2019). Therefore, future researchers are encouraged\
    \ to use the Web \nof Science database in their bibliometric studies, which may\
    \ imply different clustering \nresults and novel insights.\nThis study applied\
    \ bibliometric techniques, including keyword co-occurrence net-\nwork analysis\
    \ and article co-citation analysis, to investigate the core content of block-\n\
    chain research in the context of smart cities and identify the intellectual structure\
    \ of this \n 2898\nA. Rejeb et al.\n1 3\nnascent literature. The overall analysis\
    \ comprised the evaluation of 148 articles published \nfrom 2016 to 2020. This\
    \ reveals that blockchain technology has attracted increasing atten-\ntion from\
    \ scholars who are active in the smart city research domain. Blockchain technol-\n\
    ogy is expected to penetrate the foundations layers of smart cities and pave the\
    \ way for \nmore innovative, secure, and smarter applications. The use of blockchain\
    \ is not without \nits challenges, given the embryonic nature of the technology\
    \ and its technical limitations. \nHowever, we believe that blockchain in the\
    \ smart city presents a unique opportunity for \nresearchers to examine the applicability\
    \ of the technology in different smart city sectors \nand propose workable solutions\
    \ that contribute to the wide-scale implementation of the \ntechnology. This review\
    \ might inspire researchers to study further the integration of block-\nchain,\
    \ big data, and the IoT.\nMoreover, from a theoretical perspective, several theoretical\
    \ lenses can be applied to \nsmart cities. Social exchange theory (SET) is one\
    \ of the oldest theories on social behaviour \nand interactions of individual\
    \ and the exchange of tangible and intangible resources. It may \ninform researchers\
    \ on the evolution of human behaviours and their technology-enabled \ninteractions\
    \ in smart cities. Further, researchers could apply a transaction cost economics\
    \ \n(TCE) lens to analyse the potential efficiencies created by using blockchain\
    \ and other tech-\nnologies to enable smart cities.\nFinally, we argue that blockchain\
    \ has the potential to offer fruitful avenues in the field \nof smart city and\
    \ urban research. We submit that the characteristics of the technology are \n\
    encouraging and open windows for future research. The researchers may be interested\
    \ in \nexploring the following knowledge gaps:\n• Blockchain technology can redefine\
    \ the economic, social, and environmental dimen-\nsions of sustainability in the\
    \ smart city environment.\n• Blockchain technology combined with IoT and big data\
    \ supports the vision for smart \ncities.\n• Blockchain technology can help mitigate\
    \ the problems caused by urban population \ngrowth by improving the competitive\
    \ profile of the city.\n• Blockchain technology can be a valuable solution to\
    \ promote participatory govern-\nance, fuel sustainable economic growth, and enable\
    \ effective management of natural \nresources.\n• Blockchain technology can create\
    \ effective sharing economy models in the smart city \nand optimize efficiencies\
    \ in meeting the demands for city services.\n• Blockchains can be used for simultaneous\
    \ assurance of confidentiality, integrity/non-\nrepudiation, and accessibility\
    \ of content.\n• Blockchain technology can drive significant operational efficiencies\
    \ and free up finan-\ncial resources in smart cities.\n• Blockchain technology\
    \ can automate and streamline public sector procurement and \nreduce the risk\
    \ of fraud in supply contracts.\n5.2.2  Managerial implications\nWe underline\
    \ the importance for smart city designers and practitioners operating in the \n\
    urban sector to be updated with blockchain technology and the different solutions\
    \ and \napplications that could be employed to achieve sustainable smart cities.\
    \ Smart city design-\ners are recommended to focus on technical features of blockchain\
    \ while responding to citi-\nzens’ concerns in terms of privacy, security, and\
    \ access control. Capitalizing on blockchain \n2899\nBlockchain technology in the smart\
    \ city: a bibliometric review \n1 3\ntechnology can accelerate the smart city\
    \ movement, ensure the proper functioning of cities, \nand meet the current and\
    \ emerging needs of citizens. Nations that are striving to make their \ncities\
    \ smarter might find blockchain capable of unleashing the innovative and competitive\
    \ \npotential of the city.\nMoreover, we stress the importance of best practices\
    \ and critical success factors in \ndeploying effective policies and strategies\
    \ to spread blockchain initiatives in smart cities. It \nis also imperative that\
    \ programmers, network developers, and smart city designers engage \nin an ongoing\
    \ discussion to understand blockchain’s finer points and anticipate and remove\
    \ \nloopholes that would unavoidably emerge. For governments challenged by the\
    \ complexi-\nties of transforming smart city initiatives into practice, they can\
    \ apply blockchain for cus-\ntomized smart city solutions, including transportation,\
    \ energy management, and city sur-\nveillance, to satisfy local needs and meet\
    \ development agendas. Hence, policymakers are \nadvised to rethink the role of\
    \ technology to foster the economic, environmental, and social \nstrategies and\
    \ substructures for the practical realization of sustainable smart cities.\n6\
    \  Conclusions\nThe rapid growth of global population along with an increasing\
    \ urbanization process have \nplaced pressure on the economic, environmental,\
    \ and social sustainability of cities. As a \nresult, the smart city paradigm\
    \ is suggested to leverage modern technologies in a smart \nfashion so as to construct\
    \ a livable urban environment and enhance the quality of citi-\nzens’ lives. Nevertheless,\
    \ smart cities are still endangered by a wide array of security and \nprivacy\
    \ threats. With the emergence of the blockchain, these proliferating issues can\
    \ be \neffectively overcome thanks to the intrinsic properties of the technology,\
    \ including immu-\ntability, transparency, auditability, and decentralization.\
    \ By integrating blockchains, cities \nare expected to become able to realize\
    \ sustainable targets because the technology can sup-\nport several smart city\
    \ sectors such as healthcare, transportation, logistics and supply chain \nmanagement,\
    \ and public administration. While weak citizen involvement, poor governance,\
    \ \nand threats of system failure are the main concerns hampering the development\
    \ of sustain-\nable smart cities (Aghimien et al. 2020), digitalization of administration,\
    \ citizenship, smart \ncity activities through blockchain can bring several advantages\
    \ in terms of system transpar-\nency, security, resilience. Moreover, the alignment\
    \ of blockchain with sustainability goals \ncan help cities encounter the degradation\
    \ of infrastructure and resources by supporting the \ndevelopment of smart applications\
    \ that alleviate traffic congestion, reduce global warming, \nand cater to the\
    \ needs of the citizens.\nDrawing on bibliometric tools and techniques, we conducted\
    \ an extensive review of lit-\nerature on blockchain and the smart city over 2016\
    \ and 2020. We generated interesting \ninsights into the evolutionary patterns\
    \ of blockchain-smart city research, the major con-\ntributing countries, and\
    \ the scientific journals taking part in advancing this emerging field. \nThrough\
    \ the keyword co-occurrence and article co-citation networks, we identified the\
    \ \ncore content of the retrieved literature and the influential studies contributing\
    \ to the con-\nceptual development of the field. For instance, the fusion of blockchain\
    \ and IoT is shown \nto boost security in accessing the data collected by sensors\
    \ and preserving data integrity \nfor IoT-enabled smart city systems. Blockchain\
    \ also provides privacy for the implementa-\ntion of machine learning algorithms\
    \ in the smart city. To gain significant insights from \nIoT devices, machine\
    \ learning can be utilized during data analysis, and its outcomes can \nbe maintained\
    \ in blockchain for secure storage and sharing. Benefitting from the technical\
    \ \n 2900\nA. Rejeb et al.\n1 3\ncharacteristics of blockchain, smart contracts\
    \ can be applied in numerous trading applica-\ntions due to their automation,\
    \ which offers transparent and reliable data sharing among \nservice providers\
    \ and network participants. Finally, blockchain is found to empower smart \ncommunities\
    \ and foster sustainability in smart cities.\nTo our best knowledge, this is the\
    \ first study attempting to conduct a bibliometric review \non blockchain and\
    \ the smart city, unravel the content of this research field, and classify \n\
    co-cited works. Even though these tools have been applied in other fields, there\
    \ is a lack \nof knowledge regarding the investigation of blockchain applications\
    \ in the smart city using \nbibliometrics. Therefore, we believe that the current\
    \ research has been unique, offering sig-\nnificant contributions to theory by\
    \ proposing fertile research areas. We did not cover all the \npotential applications\
    \ of blockchain, as we were concerned only with their impact on the \nsmart city\
    \ sectors. We hope the trajectory of the research described herein provides food\
    \ \nfor thought and encouragement for scholars to investigate further the intricacies\
    \ of adopt-\ning blockchain in smart cities and urban developments.\nAppendix\n\
    TITLE-ABS-KEY ( blockchain AND \"smart cit*\" ) AND ( LIMIT-\nTO ( DOCTYPE , \"\
    ar\" ) OR LIMIT-TO ( DOCTYPE , \"re\" ) ) AND ( LIMIT-\nTO ( SUBJAREA , \"COMP\"\
    \ ) OR LIMIT-TO ( SUBJAREA , \"ENGI\" ) OR LIMIT-\nTO ( SUBJAREA , \"SOCI\" )\
    \ OR LIMIT-TO ( SUBJAREA , \"BUSI\" ) OR LIMIT-\nTO ( SUBJAREA , \"DECI\" ) OR\
    \ LIMIT-TO ( SUBJAREA , \"ECON\" ) ) AND ( LIMIT-\nTO ( LANGUAGE , \"English\"\
    \ ) )\nFunding Open access funding provided by Széchenyi István University (SZE).\n\
    Declarations \nConflict of interest The authors have no conflict of interest to\
    \ declare. All co-authors have seen and agree \nwith the contents of the manuscript\
    \ and there is no financial interest to report. We certify that the submission\
    \ \nis original work and is not under review at any other publication.\nOpen Access\
    \ This article is licensed under a Creative Commons Attribution 4.0 International\
    \ License, \nwhich permits use, sharing, adaptation, distribution and reproduction\
    \ in any medium or format, as long \nas you give appropriate credit to the original\
    \ author(s) and the source, provide a link to the Creative Com-\nmons licence,\
    \ and indicate if changes were made. The images or other third party material\
    \ in this article \nare included in the article’s Creative Commons licence, unless\
    \ indicated otherwise in a credit line to the \nmaterial. If material is not included\
    \ in the article’s Creative Commons licence and your intended use is not \npermitted\
    \ by statutory regulation or exceeds the permitted use, you will need to obtain\
    \ permission directly \nfrom the copyright holder. To view a copy of this licence,\
    \ visit http:// creat iveco mmons. org/ licen ses/ by/4. 0/.\n2901\nBlockchain\
    \ technology in the smart city: a bibliometric review \n1 3\nReferences\nAggarwal,\
    \ S., Chaudhary, R., Aujla, G.S., Kumar, N., Choo, K.-K.R., Zomaya, A.Y.: Blockchain\
    \ for smart \ncommunities: applications, challenges and opportunities. J. Netw.\
    \ Comput. Appl. 144, 13–48 (2019)\nAghimien, D.O., Aigbavboa, C., Edwards, D.J.,\
    \ Mahamadu, A.-M., Olomolaiye, P., Nash, H., Onyia, M.: A \nfuzzy synthetic evaluation\
    \ of the challenges of smart city development in developing countries. Smart \n\
    Sustain. Built Environ. (2020). https:// doi. org/ 10. 1108/ SASBE- 06- 2020-\
    \ 0092\nAhad, M.A., Paiva, S., Tripathi, G., Feroz, N.: Enabling technologies\
    \ and sustainable smart cities. Sustain. \nCities Soc. (2020). https:// doi. org/\
    \ 10. 1016/j. scs. 2020. 102301\nAhmed, S., Shah, M.A., Wakil, K.: Blockchain\
    \ as a trust builder in the smart city domain: a systematic lit-\nerature review.\
    \ IEEE Access 8, 92977–92985 (2020). https:// doi. org/ 10. 1109/ ACCESS. 2020.\
    \ 29937 24\nAlcarria, R., Bordel, B., Robles, T., Martín, D., Manso-Callejo, M.-Á.:\
    \ A blockchain-based authorization \nsystem for trustworthy resource monitoring\
    \ and trading in smart communities. Sensors (switzerland) \n(2018). https:// doi.\
    \ org/ 10. 3390/ s1810 3561\nAltulyan, M., Yao, L., Kanhere, S.S., Wang, X., Huang,\
    \ C.: A unified framework for data integrity pro-\ntection in people-centric smart\
    \ cities. Multimedia Tools Appl. (2020). https:// doi. org/ 10. 1007/ \ns11042-\
    \ 019- 7182-7\nÁlvarez-García, J., Durán-Sánchez, A., del Río-Rama, M., de la\
    \ C. : Systematic bibliometric analysis \non Kaizen in scientific journals. The\
    \ TQM J. 30(4), 356–370 (2018). https:// doi. org/ 10. 1108/ \nTQM- 12- 2017-\
    \ 0171\nAstarita, V., Giofrè, V.P., Mirabelli, G., Solina, V.: A Review of blockchain-based\
    \ systems in transporta-\ntion. Information (switzerland) (2020). https:// doi.\
    \ org/ 10. 3390/ info1 10100 21\nBanerjee, M., Lee, J., Choo, K.-K.R.: A blockchain\
    \ future for internet of things security: a position \npaper. Digital Commun.\
    \ Netw. (2018). https:// doi. org/ 10. 1016/j. dcan. 2017. 10. 006\nBatistič,\
    \ S., Černe, M., Vogel, B.: Just how multi-level is leadership research? A document\
    \ co-citation \nanalysis 1980–2013 on leadership constructs and outcomes. Leadersh.\
    \ Q. 28(1), 86–103 (2017). \nhttps:// doi. org/ 10. 1016/j. leaqua. 2016. 10.\
    \ 007\nBerglund, E.Z., Monroe, J.G., Ahmed, I., Noghabaei, M., Do, J., Pesantez,\
    \ J.E., Khaksar Fasaee, M.A., \nBardaka, E., Han, K., Proestos, G.T., Levis, J.:\
    \ Smart infrastructure: a vision for the role of the \ncivil engineering profession\
    \ in smart cities. J. Infrastruct. Syst. (2020). https:// doi. org/ 10. 1061/\
    \ \n(ASCE) IS. 1943- 555X. 00005 49\nBeris, T., Koubarakis, M.: Modeling and Preserving\
    \ Greek Government Decisions Using Semantic Web \nTechnologies and Permissionless\
    \ Blockchains. In: Gangemi, A., Navigli, R., Vidal, M.-E., Hitzler, \nP., Troncy,\
    \ R., Hollink, L., Tordai, A., Alam, M. (eds.) The Semantic Web, pp. 81–96. Springer,\
    \ \nNew York (2018)\nBernal Bernabe, J., Luis Canovas, J., Hernandez-Ramos, J.L.,\
    \ Torres Moreno, R., Skarmeta, A.: Pri-\nvacy-preserving solutions for blockchain:\
    \ review and challenges. IEEE Access (2019). https:// doi. \norg/ 10. 1109/ ACCESS.\
    \ 2019. 29508 72\nBhushan, B., Khamparia, A., Sagayam, K.M., Sharma, S.K., Ahad,\
    \ M.A., Debnath, N.C.: Blockchain for \nsmart cities: a review of architectures,\
    \ integration trends and future research directions. Sustain. \nCities Soc. 61,\
    \ 102360 (2020). https:// doi. org/ 10. 1016/j. scs. 2020. 102360\nBragadeesh,\
    \ S.A., Umamakeswari, A.: Role of blockchain in the Internet-of-Things (IoT).\
    \ Int. J. Eng. \nTechnol. (UAE) 7(2), 109–112 (2018)\nBrzezinski, M.: Power laws\
    \ in citation distributions: evidence from Scopus. Scientometrics 103(1), 213–\n\
    228 (2015). https:// doi. org/ 10. 1007/ s11192- 014- 1524-z\nCalvillo, C.F.,\
    \ Sánchez-Miralles, A., Villar, J.: Energy management and planning in smart cities.\
    \ Renew. \nSustain. Energy Rev. 55, 273–287 (2016). https:// doi. org/ 10. 1016/j.\
    \ rser. 2015. 10. 133\nCapossele, A., Gaglione, A., Nati, M., Conti, M., Lazzeretti,\
    \ R., & Missier, P.: Leveraging Blockchain \nto Enable Smart-Health Applications.\
    \ In: 2018 IEEE 4th International Forum on Research and \nTechnology for Society\
    \ and Industry (RTSI), (2018). https:// doi. org/ 10. 1109/ RTSI. 2018. 85483\
    \ 57\nCaragliu, A., Bo, C.D., Nijkamp, P.: Smart cities in Europe. J. Urban Technol.\
    \ 18(2), 65–82 (2011). \nhttps:// doi. org/ 10. 1080/ 10630 732. 2011. 601117\n\
    Chaudhary, R., Jindal, A., Aujla, G.S., Aggarwal, S., Kumar, N., Choo, K.-K.R.:\
    \ BEST: blockchain-\nbased secure energy trading in SDN-enabled intelligent transportation\
    \ system. Comput. Sec. \n(2019). https:// doi. org/ 10. 1016/j. cose. 2019. 05.\
    \ 006\nChen, C., Ibekwe-SanJuan, F., Hou, J.: The structure and dynamics of cocitation\
    \ clusters: a multiple-per-\nspective cocitation analysis. J. Am. Soc. Inform.\
    \ Sci. Technol. 61(7), 1386–1409 (2010). https:// \ndoi. org/ 10. 1002/ asi. 21309\n\
    \ 2902\nA. Rejeb et al.\n1 3\nChen, W., Chen, Y., Chen, X., Zheng, Z.: Toward\
    \ secure data sharing for the IoV: a quality-driven incen-\ntive mechanism with\
    \ on-chain and off-chain guarantees. IEEE Internet Things J. (2020). https://\
    \ \ndoi. org/ 10. 1109/ JIOT. 2019. 29466 11\nChiu, W.-Y., Meng, W.: EdgeTC -\
    \ a PBFT blockchain-based ETC scheme for smart cities. Peer-to-Peer \nNetw. Appl.\
    \ 14(5), 2874–2886 (2021). https:// doi. org/ 10. 1007/ s12083- 021- 01119-0\n\
    Dagher, G.G., Mohler, J., Milojkovic, M., Marella, P.B.: Ancile: Privacy-preserving\
    \ framework for \naccess control and interoperability of electronic health records\
    \ using blockchain technology. Sus-\ntain. Cities Soc 39, 283–297 (2018)\nDing,\
    \ Y., Chowdhury, G.G., Foo, S.: Bibliometric cartography of information retrieval\
    \ research by using \nco-word analysis. Inf. Process. Manage. 37(6), 817–842 (2001).\
    \ https:// doi. org/ 10. 1016/ S0306- \n4573(00) 00051-0\nDwivedi, A.D., Srivastava,\
    \ G., Dhar, S., Singh, R.: A decentralized privacy-preserving healthcare block-\n\
    chain for IoT. Sensors (switzerland) (2019). https:// doi. org/ 10. 3390/ s1902\
    \ 0326\nFang, Y., Yin, J., Wu, B.: Climate change and tourism: a scientometric\
    \ analysis using CiteSpace. J. Sus-\ntain. Tour. 26(1), 108–126 (2018). https://\
    \ doi. org/ 10. 1080/ 09669 582. 2017. 13293 10\nFernandez-Carames, T.M., Fraga-Lamas,\
    \ P.: Towards next generation teaching, learning, and context-aware \napplications\
    \ for higher education: a review on blockchain IoT, fog and edge computing enabled\
    \ smart \ncampuses and universities. Appl. Sci. (2019). https:// doi. org/ 10.\
    \ 3390/ app92 14479\nGong, S., Tcydenova, E., Jo, J., Lee, Y., Park, J.H.: Blockchain-based\
    \ secure device management framework \nfor an internet of things network in a\
    \ smart city. Sustainability 11(14), 3889 (2019). https:// doi. org/ 10. \n3390/\
    \ su111 43889\nGupta, R., Kumari, A., Tanwar, S.: A taxonomy of blockchain envisioned\
    \ edge-as-a-connected autonomous \nvehicles. Trans. Emerg. Telecommun. Technol.\
    \ 32(6), e4009 (2021). https:// doi. org/ 10. 1002/ ett. 4009\nHammi, M.T., Hammi,\
    \ B., Bellot, P., Serhrouchni, A.: Bubbles of trust: a decentralized blockchain-based\
    \ \nauthentication system for IoT. Comput. Sec. 78, 126–142 (2018)\nHang, L.,\
    \ Kim, D.-H.: Reliable task management based on a smart contract for runtime verification\
    \ of sens-\ning and actuating tasks in IoT environments. Sensors 20(4), 1207 (2020).\
    \ https:// doi. org/ 10. 3390/ \ns2004 1207\nHarzing, A.-W., Alakangas, S.: Google\
    \ scholar, scopus and the web of science: a longitudinal and \ncross-disciplinary\
    \ comparison. Scientometrics 106(2), 787–804 (2016). https:// doi. org/ 10. 1007/\
    \ \ns11192- 015- 1798-9\nHuang, X., Xu, C., Wang, P., Liu, H.: LNSC: a security\
    \ model for electric vehicle and charging pile man-\nagement based on blockchain\
    \ ecosystem. IEEE Access 6, 13565–13574 (2018). https:// doi. org/ 10. \n1109/\
    \ ACCESS. 2018. 28121 76\nIqbal, S., Malik, A.W., Rahman, A.U., Noor, R.M.: Blockchain-based\
    \ reputation management for task off-\nloading in micro-level vehicular fog network.\
    \ IEEE Access 8, 52968–52980 (2020)\nIsmail, L., Materwala, H.: A review of blockchain\
    \ architecture and consensus protocols: use cases, chal-\nlenges, and solutions.\
    \ Symmetry (2019). https:// doi. org/ 10. 3390/ sym11 101198\nJaffe, C., Mata,\
    \ C., & Kamvar, S.: Motivating urban cycling through a blockchain-based financial\
    \ incentives \nsystem. In: Proceedings of the 2017 ACM international joint conference\
    \ on pervasive and ubiqui-\ntous computing and proceedings of the 2017 ACM international\
    \ symposium on wearable computers, \n81–84 (2017). https:// doi. org/ 10. 1145/\
    \ 31230 24. 31231 41\nJaiswal, R., Davidrajuh, R., Rong, C.: Fog computing for\
    \ realizing smart neighborhoods in smart grids. \nComputers 9(3), 76 (2020). https://\
    \ doi. org/ 10. 3390/ compu ters9 030076\nJamil, F., Hang, L., Kim, K., Kim, D.:\
    \ A novel medical blockchain model for drug supply chain integ-\nrity management\
    \ in a smart hospital. Electronics 8(5), 505 (2019). https:// doi. org/ 10. 3390/\
    \ elect ronic \ns8050 505\nJindal, A., Aujla, G.S., Kumar, N.: SURVIVOR: A blockchain\
    \ based edge-as-a-service framework for secure \nenergy trading in SDN-enabled\
    \ vehicle-to-grid environment. Comput. Netw. 153, 36–48 (2019)\nKamran, M., Khan,\
    \ H.U., Nisar, W., Farooq, M., Rehman, S.-U.: Blockchain and internet of things:\
    \ a biblio-\nmetric study. Comput. Electr. Eng. (2020). https:// doi. org/ 10.\
    \ 1016/j. compe leceng. 2019. 106525\nKang, J., Yu, R., Huang, X., Maharjan, S.,\
    \ Zhang, Y., Hossain, E.: Enabling localized peer-to-peer electric-\nity trading\
    \ among plug-in hybrid electric vehicles using consortium blockchains. IEEE Trans.\
    \ Industr. \nInf. 13(6), 3154–3164 (2017). https:// doi. org/ 10. 1109/ TII. 2017.\
    \ 27097 84\nKaur, M.J., Mishra, V.P., Maheshwari, P.: The Convergence of Digital\
    \ Twin, IoT, and Machine Learning: \nTransforming Data into Action. In: Farsi,\
    \ M., Daneshkhah, A., Hosseinian-Far, A., Jahankhani, H. \n(eds.) Digital Twin\
    \ Technologies and Smart Cities, pp. 3–17. Springer, New York (2020)\nKeibler,\
    \ S.: Smart Cities and Blockchain: Four Countries Where Artificial Intelligence\
    \ and Distributed \nLedger Technology Coexist | SAP Blogs (2019).https:// blogs.\
    \ sap. com/ 2019/ 09/ 11/ smart- cities- and- \nblock chain- four- count ries-\
    \ where- artifi cial- intel ligen ce- and- distr ibuted- ledger- techn ology-\
    \ coexi st/\n2903\nBlockchain technology in the smart city: a bibliometric review\
    \ \n1 3\nKhalid, U., Asim, M., Baker, T., Hung, P.C.K., Tariq, M.A., Rafferty,\
    \ L.: A decentralized lightweight block-\nchain-based authentication mechanism\
    \ for IoT systems. Cluster Comput. (2020). https:// doi. org/ 10. \n1007/ s10586-\
    \ 020- 03058-6\nKhan, M.A., Salah, K.: IoT security: review, blockchain solutions,\
    \ and open challenges. Futur. Gener. Com-\nput. Syst. 82, 395–411 (2018). https://\
    \ doi. org/ 10. 1016/j. future. 2017. 11. 022\nKhan, P.W., Byun, Y.-C., Park,\
    \ N.: A data verification system for cctv surveillance cameras using block-\n\
    chain technology in smart cities. Electronics (switzerland) (2020). https:// doi.\
    \ org/ 10. 3390/ elect ronic \ns9030 484\nKhatoon, A.: A blockchain-based smart\
    \ contract system for healthcare management. Electronics 9(1), 94 \n(2020). https://\
    \ doi. org/ 10. 3390/ elect ronic s9010 094\nKim, M., Kim, Y.: Multi-blockchain\
    \ structure for a crowdsensing-based smart parking system. Fut. Internet \n12(5),\
    \ 90 (2020). https:// doi. org/ 10. 3390/ fi120 50090\nKosba, A., Miller, A.,\
    \ Shi, E., Wen, Z., & Papamanthou, C.: Hawk: The Blockchain Model of Cryptography\
    \ \nand Privacy-Preserving Smart Contracts. In: Proceedings - 2016 IEEE Symposium\
    \ on Security and \nPrivacy, SP (2016), 839–858. https:// doi. org/ 10. 1109/\
    \ SP. 2016. 55\nKoseoglu, M.A.: Growth and structure of authorship and co-authorship\
    \ network in the strategic manage-\nment realm: evidence from the strategic management\
    \ journal. BRQ Bus. Res. Q. 19(3), 153–170 \n(2016). https:// doi. org/ 10. 1016/j.\
    \ brq. 2016. 02. 001\nKumar, P., Gupta, G.P., Tripathi, R.: TP2SF: A Trustworthy\
    \ Privacy-Preserving Secured Framework for \nsustainable smart cities by leveraging\
    \ blockchain and machine learning. J. Syst. Architect. 115, \n101954 (2021). https://\
    \ doi. org/ 10. 1016/j. sysarc. 2020. 101954\nKundu, D.: Blockchain and trust\
    \ in a smart city. Environ. Urban. Asia 10(1), 31–43 (2019)\nLi, J., Greenwood,\
    \ D., Kassem, M.: Blockchain in the built environment and construction industry:\
    \ a sys-\ntematic review, conceptual models and practical use cases. Autom. Constr.\
    \ 102, 288–307 (2019)\nLi, Y., Dai, W., Ming, Z., Qiu, M.: Privacy protection\
    \ for preventing data over-collection in smart city. \nIEEE Trans. Comput. 65(5),\
    \ 1339–1350 (2016). https:// doi. org/ 10. 1109/ TC. 2015. 24702 47\nLiao, D.-Y.,\
    \ Wang, X.: Applications of blockchain technology to logistics management in integrated\
    \ \ncasinos and entertainment. Informatics (2018). https:// doi. org/ 10. 3390/\
    \ infor matic s5040 044\nLin, C., He, D., Zeadally, S., Kumar, N., Choo, K.-K.R.:\
    \ SecBCS: a secure and privacy-preserving \nblockchain-based crowdsourcing system.\
    \ Sci. China Inform. Sci. (2020). https:// doi. org/ 10. 1007/ \ns11432- 019-\
    \ 9893-2\nLiu, Y., Wang, K., Qian, K., Du, M., Guo, S.: Tornado: enabling blockchain\
    \ in heterogeneous internet of \nthings through a space-structured approach. IEEE\
    \ Internet Things J. 7(2), 1273–1286 (2020)\nLongo, F., Nicoletti, L., Padovano,\
    \ A., d’Atri, G., Forte, M.: Blockchain-enabled supply chain: An exper-\nimental\
    \ study. Comput. Ind. Eng. 136, 57–69 (2019). https:// doi. org/ 10. 1016/j. cie.\
    \ 2019. 07. 026\nLundqvist, T., de Blanche, A., Andersson, H.R.H.: Thing-to-thing\
    \ electricity micro payments using \nblockchain technology. Glob. Internet Things\
    \ Summit (GIoTS) 2017, 1–6 (2017). https:// doi. org/ \n10. 1109/ GIOTS. 2017.\
    \ 80162 54\nMakhdoom, I., Zhou, I., Abolhasan, M., Lipman, J., Ni, W.: PrivySharing:\
    \ a blockchain-based frame-\nwork for privacy-preserving and secure data sharing\
    \ in smart cities. Comput. Sec. (2020). https:// \ndoi. org/ 10. 1016/j. cose.\
    \ 2019. 101653\nMarsal-Llacuna, M.-L.: Future living framework: is blockchain\
    \ the next enabling network? Technol. \nForecast. Soc. Change (2018). https://\
    \ doi. org/ 10. 1016/j. techf ore. 2017. 12. 005\nMehta, P., Gupta, R., Tanwar,\
    \ S.: Blockchain envisioned UAV networks: challenges, solutions, and com-\nparisons.\
    \ Comput. Commun. 151, 518–538 (2020)\nMishra, D., Gunasekaran, A., Papadopoulos,\
    \ T., Dubey, R.: Supply chain performance measures and \nmetrics: a bibliometric\
    \ study. Benchmark. Int. J. 25(3), 932–967 (2018)\nMishra, D., Luo, Z., Jiang,\
    \ S., Papadopoulos, T., Dubey, R.: A bibliographic study on big data: concepts,\
    \ \ntrends and challenges. Bus. Process. Manag. J. 23(3), 555–573 (2017). https://\
    \ doi. org/ 10. 1108/ \nBPMJ- 10- 2015- 0149\nMistry, I., Tanwar, S., Tyagi, S.,\
    \ Kumar, N.: Blockchain for 5G-enabled IoT for industrial automation: a \nsystematic\
    \ review, solutions, and challenges. Mech. Syst. Signal Process. (2020). https://\
    \ doi. org/ \n10. 1016/j. ymssp. 2019. 106382\nNam, K., Dutt, C.S., Chathoth,\
    \ P., Khan, M.S.: Blockchain technology for smart city and smart tour-\nism: latest\
    \ trends and challenges. Asia Pac. J. Tour. Res. (2019). https:// doi. org/ 10.\
    \ 1080/ 10941 \n665. 2019. 15853 76\nNewman, M.E.J.: Fast algorithm for detecting\
    \ community structure in networks. Phys. Rev. E 69(6), \n066133 (2004). https://\
    \ doi. org/ 10. 1103/ PhysR evE. 69. 066133\n 2904\nA. Rejeb et al.\n1 3\nNguyen,\
    \ D.C., Pathirana, P.N., Ding, M., Seneviratne, A.: Blockchain for 5G and beyond\
    \ networks: a \nstate of the art survey. J. Netw. Comput. Appl. 166, 102693 (2020).\
    \ https:// doi. org/ 10. 1016/j. jnca. \n2020. 102693\nNoack, A.: Energy models\
    \ for graph clustering. J. Graph Algorithms Appl. 11(2), 453–480 (2007). \nhttps://\
    \ doi. org/ 10. 7155/ jgaa. 00154\nNoizat, P.: Blockchain electronic vote. In\
    \ Handbook of digital currency (pp. 453–461) (2015). Elsevier.\nOliveira, T.A.,\
    \ Oliver, M., Ramalhinho, H.: Challenges for connecting citizens and smart cities:\
    \ ICT, \ne-governance and blockchain. Sustainability (switzerland) (2020). https://\
    \ doi. org/ 10. 3390/ su120 \n72926\nPark, L.W., Lee, S., Chang, H.: A sustainable\
    \ home energy prosumer-chain methodology with energy \ntags over the blockchain.\
    \ Sustainability 10(3), 658 (2018). https:// doi. org/ 10. 3390/ su100 30658\n\
    Pieroni, A., Scarpato, N., Di Nunzio, L., Fallucchi, F., Raso, M.: Smarter city:\
    \ smart energy grid based \non blockchain technology. Int. J. Adv. Sci. Eng. Inform.\
    \ Technol. 8(1), 298–306 (2018)\nQi, W., Shen, Z.-J.M.: A smart-city scope of\
    \ operations management. Prod. Oper. Manag. 28(2), 393–\n406 (2019). https://\
    \ doi. org/ 10. 1111/ poms. 12928\nRadu, L.-D.: Disruptive technologies in smart\
    \ cities: a survey on current trends and challenges. Smart \nCities 3(3), 1022–1038\
    \ (2020). https:// doi. org/ 10. 3390/ smart citie s3030 051\nRahman, M.A., Rashid,\
    \ M.M., Shamim Hossain, M., Hassanain, E., Alhamid, M.F., Guizani, M.: Block-\n\
    chain and IoT-based cognitive edge framework for sharing economy services in a\
    \ smart city. IEEE \nAccess 7, 18611–18621 (2019)\nRamos-Rodríguez, A.-R., Ruíz-Navarro,\
    \ J.: Changes in the intellectual structure of strategic manage-\nment research:\
    \ a bibliometric study of the Strategic Management Journal, 1980–2000. Strateg.\
    \ \nManag. J. 25(10), 981–1004 (2004). https:// doi. org/ 10. 1002/ smj. 397\n\
    Rathore, M.M., Paul, A., Ahmad, A., Chilamkurti, N., Hong, W.-H., Seo, H.: Real-time\
    \ secure com-\nmunication for smart city in high-speed big data environment. Futur.\
    \ Gener. Comput. Syst. 83, \n638–652 (2018). https:// doi. org/ 10. 1016/j. future.\
    \ 2017. 08. 006\nRathore, S., Wook Kwon, B., Park, J.H.: BlockSecIoTNet: Blockchain-based\
    \ decentralized security \narchitecture for IoT network. J. Netw. Comput. Appl.\
    \ 143, 167–177 (2019)\nRejeb, A., Keogh, J.G., Simske, S.J., Stafford, T., Treiblmaier,\
    \ H.: Potentials of blockchain technologies \nfor supply chain collaboration:\
    \ a conceptual framework. The Int. J. Logis. Manag. (2021a). https:// \ndoi. org/\
    \ 10. 1108/ IJLM- 02- 2020- 0098\nRejeb, A., Keogh, J.G., Treiblmaier, H.: Leveraging\
    \ the internet of things and blockchain technology \nin supply chain management.\
    \ Fut. Internet 11(7), 161 (2019). https:// doi. org/ 10. 3390/ fi110 70161\n\
    Rejeb, A., Keogh, J.G., Treiblmaier, H.: How blockchain technology can benefit\
    \ marketing: six pending \nresearch areas. Front. Blockchain 3, 1–12 (2020a).\
    \ https:// doi. org/ 10. 3389/ fbloc. 2020. 00003\nRejeb, A., Keogh, J.G., Zailani,\
    \ S., Treiblmaier, H., Rejeb, K.: Blockchain technology in the food indus-\ntry:\
    \ a review of potentials. Chall. Future Res. Direct. Logis. 4(4), 27 (2020b).\
    \ https:// doi. org/ 10. \n3390/ logis tics4 040027\nRejeb, A., Sűle, E., Keogh,\
    \ J.G.: Exploring new technologies in procurement. Transp. Logis. Int. J. \n18(45),\
    \ 76–86 (2018)\nRejeb, A., Treiblmaier, H., Rejeb, K., Zailani, S.: Blockchain\
    \ research in healthcare: a bibliometric \nreview and current research trends.\
    \ J. Data Inform. Manag. (2021b). https:// doi. org/ 10. 1007/ \ns42488- 021-\
    \ 00046-2\nRosati, U., Conti, S.: What is a smart city project? An urban model\
    \ or a corporate business plan? Proce-\ndia. Soc. Behav. Sci. 223, 968–973 (2016).\
    \ https:// doi. org/ 10. 1016/j. sbspro. 2016. 05. 332\nSadik, S., Ahmed, M.,\
    \ Sikos, L.F., Islam, A.K.M.N.: Toward a sustainable cybersecurity ecosystem.\
    \ \nComputers 9(3), 74 (2020). https:// doi. org/ 10. 3390/ compu ters9 030074\n\
    Salah, K., Nizamuddin, N., Jayaraman, R., Omar, M.: Blockchain-based soybean traceability\
    \ in agricul-\ntural supply chain. IEEE Access 7, 73295–73305 (2019a). https://\
    \ doi. org/ 10. 1109/ ACCESS. 2019. \n29180 00\nSalah, K., Rehman, M.H.U., Nizamuddin,\
    \ N., Al-Fuqaha, A.: Blockchain for AI: review and open \nresearch challenges.\
    \ IEEE Access 7, 10127–10149 (2019b). https:// doi. org/ 10. 1109/ ACCESS. \n\
    2018. 28905 07\nSalha, R.A., El-Hallaq, M.A., Alastal, A.I.: Blockchain in smart\
    \ cities: exploring possibilities in terms of \nopportunities and challenges.\
    \ J. Data Anal. Inform. Process. 7(3), 118–139 (2019). https:// doi. org/ \n10.\
    \ 4236/ jdaip. 2019. 73008\nScekic, O., Nastic, S., Dustdar, S.: Blockchain-supported\
    \ smart city platform for social value co-creation \nand exchange. IEEE Internet\
    \ Comput. 23(1), 19–28 (2019)\n2905\nBlockchain technology in the smart city:\
    \ a bibliometric review \n1 3\nSharma, P.K., Kumar, N., Park, J.H.: Blockchain-based\
    \ distributed framework for automotive industry in \na smart city. IEEE Trans.\
    \ Industr. Inf. 15(7), 4197–4205 (2019). https:// doi. org/ 10. 1109/ TII. 2018.\
    \ \n28871 01\nSharma, P.K., Moon, S.Y., Park, J.H.: Block-VN: a distributed blockchain\
    \ based vehicular network archi-\ntecture in smart city. J. Inform. Process. Syst.\
    \ 13(1), 184–195 (2017)\nSharma, P.K., Park, J.H.: Blockchain based hybrid network\
    \ architecture for the smart city. Future Gen. \nComput. Syst. 86, 650–655 (2018)\n\
    Shen, C., Pena-Mora, F.: Blockchain for cities—a systematic literature review.\
    \ IEEE Access 6, 76787–\n76819 (2018)\nShen, M., Tang, X., Zhu, L., Du, X., Guizani,\
    \ M.: Privacy-preserving support vector machine training over \nblockchain-based\
    \ encrypted IoT data in smart cities. IEEE Internet Things J. 6(5), 7702–7712\
    \ (2019)\nShojaei, A., Wang, J., Fenner, A.: Exploring the feasibility of blockchain\
    \ technology as an infrastructure \nfor improving built asset sustainability.\
    \ Built Environ. Proj. Asset Manag. 10(2), 184–199 (2019). \nhttps:// doi. org/\
    \ 10. 1108/ BEPAM- 11- 2018- 0142\nSifah, E.B., Xia, H., Cobblah, C.N.A., Xia,\
    \ Q., Gao, J., Du, X.: BEMPAS: a decentralized employee \nperformance assessment\
    \ system based on blockchain for smart city governance. IEEE Access 8, \n99528–99539\
    \ (2020). https:// doi. org/ 10. 1109/ ACCESS. 2020. 29976 50\nSingh, S.K., Jeong,\
    \ Y.-S., Park, J.H.: A deep learning-based IoT-oriented infrastructure for secure\
    \ smart \nCity. Sustain. Cities Soc. 60, 102252 (2020a). https:// doi. org/ 10.\
    \ 1016/j. scs. 2020. 102252\nSingh, S.K., Rathore, S., Park, J.H.: BlockIoTIntelligence:\
    \ a blockchain-enabled intelligent IoT architec-\nture with artificial intelligence.\
    \ Future Gen. Comput. Syst. (2019). https:// doi. org/ 10. 1016/j. future. \n\
    2019. 09. 002\nSingh, S., Sharma, P.K., Yoon, B., Shojafar, M., Cho, G.H., Ra,\
    \ I.-H.: Convergence of blockchain and \nartificial intelligence in IoT network\
    \ for the sustainable smart city. Sustain. Cities Soc. 63, 102364 \n(2020b). https://\
    \ doi. org/ 10. 1016/j. scs. 2020. 102364\nSmall, H.: Co-citation in the scientific\
    \ literature: a new measure of the relationship between two docu-\nments. J. Am.\
    \ Soc. Inform. Sci. 24(4), 265–269 (1973). https:// doi. org/ 10. 1002/ asi. 46302\
    \ 40406\nStoyanova, M., Nikoloudakis, Y., Panagiotakis, S., Pallis, E., Markakis,\
    \ E.K.: A survey on the internet \nof things (IoT) forensics: challenges, approaches\
    \ and open issues. IEEE Commun. Surv. Tutor. \n(2020). https:// doi. org/ 10.\
    \ 1109/ COMST. 2019. 29625 86\nSu, Z., Wang, Y., Xu, Q., Fei, M., Tian, Y.-C.,\
    \ Zhang, N.: A secure charging scheme for electric vehicles \nwith smart communities\
    \ in energy blockchain. IEEE Internet Things J. 6(3), 4601–4613 (2019)\nSun, J.,\
    \ Yan, J., Zhang, K.Z.K.: Blockchain-based sharing services: What blockchain technology\
    \ can \ncontribute to smart cities. Fin. Innov. (2016). https:// doi. org/ 10.\
    \ 1186/ s40854- 016- 0040-y\nSun, M., Zhang, J.: Research on the application of\
    \ block chain big data platform in the construction \nof new smart city for low\
    \ carbon emission and green environment. Comput. Commun. (2020). \nhttps:// doi.\
    \ org/ 10. 1016/j. comcom. 2019. 10. 031\nSuominen, A., Seppänen, M.: Bibliometric\
    \ data and actual development in technology life cycles: flaws \nin assumptions.\
    \ Foresight 16(1), 37–53 (2014). https:// doi. org/ 10. 1108/ FS- 03- 2013- 0007\n\
    Szabo, N.: Smart contracts: building blocks for digital free markets. Extropy\
    \ J. Trans. Thought 16, 1–10 \n(1996)\nTanwar, S., Bhatia, Q., Patel, P., Kumari,\
    \ A., Singh, P.K., Hong, W.-C.: Machine learning adoption in \nblockchain-based\
    \ smart applications: the challenges, and a way forward. IEEE Access 8, 474–448\
    \ \n(2020). https:// doi. org/ 10. 1109/ ACCESS. 2019. 29613 72\nTeam Inc42: for\
    \ a smart city to be really ‘Smart’, Blockchain Has To Be Its Brain—And Soul.\
    \ \nInc42 \nMedia \n(2018). \nhttps:// inc42. com/ featu res/ for-a- smart- city-\
    \ to- be- really- smart- block \nchain- has- to- be- its- brain- and- soul\nTiwari,\
    \ A., Batra, U.: IPFS enabled blockchain for smart cities. Int. J. Inf. Technol.\
    \ 13(1), 201–211 \n(2021). https:// doi. org/ 10. 1007/ s41870- 020- 00568-9\n\
    Toyoda, K., Mathiopoulos, P.T., Sasase, I., Ohtsuki, T.: A novel blockchain-based\
    \ product owner-\nship management system (POMS) for anti-counterfeits in the post\
    \ supply chain. IEEE Access 5, \n17465–17477 (2017). https:// doi. org/ 10. 1109/\
    \ ACCESS. 2017. 27207 60\nTreiblmaier, H.: The impact of the blockchain on the\
    \ supply chain: a theory-based research framework \nand a call for action. Supp.\
    \ Chain Manag. Int. J. 23(6), 545–559 (2018). https:// doi. org/ 10. 1108/ \n\
    SCM- 01- 2018- 0029\nTreiblmaier, H., Rejeb, A., Strebinger, A.: Blockchain as\
    \ a driver for smart city development: application \nfields and a comprehensive\
    \ research agenda. Smart Cities 3(3), 853–872 (2020). https:// doi. org/ 10. \n\
    3390/ smart citie s3030 044\nvan Eck, N., Waltman, L.: Software survey: VOSviewer,\
    \ a computer program for bibliometric mapping. \nScientometrics 84(2), 523–538\
    \ (2009). https:// doi. org/ 10. 1007/ s11192- 009- 0146-3\n 2906\nA. Rejeb et\
    \ al.\n1 3\nViriyasitavat, W., Anuphaptrirong, T., Hoonsopon, D.: When blockchain\
    \ meets Internet of things: char-\nacteristics, challenges, and business opportunities.\
    \ J. Ind. Inform. Integr. 15, 21–28 (2019)\nWang, Y., Su, Z., Zhang, N.: Bsis:\
    \ blockchain-based secure incentive scheme for energy delivery in \nvehicular\
    \ energy network. IEEE Trans. Ind. Inform. 15(6), 3620–3631 (2019)\nWang, Z.,\
    \ Wang, T., Hu, H., Gong, J., Ren, X., Xiao, Q.: Blockchain-based framework for\
    \ improving \nsupply chain traceability and information sharing in precast construction.\
    \ Autom. Constr. 111, \n103063 (2020). https:// doi. org/ 10. 1016/j. autcon.\
    \ 2019. 103063\nWong, P.F., Chia, F.C., Kiu, M.S., Lou, E.C.W.: Potential integration\
    \ of blockchain technology into \nsmart sustainable city (SSC) developments: a\
    \ systematic review. Smart Sustain. Built Environ. \n(2020). https:// doi. org/\
    \ 10. 1108/ SASBE- 09- 2020- 0140\nXie, E., Teo, H.-H., Wan, W.: Volunteering\
    \ personal information on the internet: effects of reputation, \nprivacy notices,\
    \ and rewards on online consumer behavior. Mark. Lett. 17(1), 61–74 (2006)\nXie,\
    \ J., Tang, H., Huang, T., Yu, F.R., Xie, R., Liu, J., Liu, Y.: A Survey of blockchain\
    \ technology \napplied to smart cities: research issues and challenges. IEEE Commun.\
    \ Surv. Tutor. 21(3), 2794–\n2830 (2019)\nXu, R., Chen, Y., Blasch, E., Chen,\
    \ G.: BlendCAC: a smart contract enabled decentralized capability-based \naccess\
    \ control mechanism for the IoT. Computers (2018). https:// doi. org/ 10. 3390/\
    \ compu ters7 030039\nYeung, A.W.K., Wong, N.S.M., Leung, Y.Y.: Are coronectomy\
    \ studies being cited? A bibliometric study. \nJ. Investig. Clin. Dent. 10(1),\
    \ e12366 (2019). https:// doi. org/ 10. 1111/ jicd. 12366\nYin, B., Wu, Y., Hu,\
    \ T., Dong, J., Jiang, Z.: An efficient collaboration and incentive mechanism\
    \ for internet \nof vehicles (IoV) With secured information exchange based on\
    \ blockchains. IEEE Internet Things J. \n(2020). https:// doi. org/ 10. 1109/\
    \ JIOT. 2019. 29490 88\nYu, H., Yang, Z., Sinnott, R.O.: Decentralized big data\
    \ auditing for smart city environments leveraging \nblockchain technology. IEEE\
    \ Access 7, 6288–6296 (2019)\nZheng, M., Fu, H.-Z., Ho, Y.-S.: Research trends\
    \ and hotspots related to ammonia oxidation based on bib-\nliometric analysis.\
    \ Environ. Sci. Pollut. Res. 24(25), 20409–20421 (2017). https:// doi. org/ 10.\
    \ 1007/ \ns11356- 017- 9711-0\nZhou, Z., Wang, B., Guo, Y., Zhang, Y.: Blockchain\
    \ and computational intelligence inspired incentive-com-\npatible demand response\
    \ in internet of electric vehicles. IEEE Trans. Emerg. Top. Comput. Intell. \n\
    3(3), 205–216 (2019)\nZupic, I., Čater, T.: Bibliometric methods in management\
    \ and organization. Organ. Res. Methods 18(3), \n429–472 (2015). https:// doi.\
    \ org/ 10. 1177/ 10944 28114 562629\nPublisher’s Note Springer Nature remains\
    \ neutral with regard to jurisdictional claims in published maps and \ninstitutional\
    \ affiliations.\n"
  inline_citation: '>'
  journal: Quality & Quantity
  limitations: '>'
  pdf_link: https://link.springer.com/content/pdf/10.1007/s11135-021-01251-2.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Blockchain technology in the smart city: a bibliometric review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1145/3555802
  analysis: '>'
  authors:
  - Hua Hu
  - Yutong Li
  - Tonghe Wang
  - Nanqing Dong
  - Wei Li
  - Junwei Cao
  citation_count: 45
  full_citation: '>'
  full_text: '>

    184

    Edge Computing with Artificial Intelligence: A Machine

    Learning Perspective

    HAOCHEN HUA, Hohai University, P. R. China

    YUTONG LI, Tsinghua University, P. R. China

    TONGHE WANG, Guangzhou Institute of Energy Conversion, P. R. China

    NANQING DONG, University of Oxford, United Kingdom

    WEI LI, University of Sydney, Australia

    JUNWEI CAO, Tsinghua University, P. R. China

    Recent years have witnessed the widespread popularity of Internet of things (IoT).
    By providing sufficient data

    for model training and inference, IoT has promoted the development of artificial
    intelligence (AI) to a great

    extent. Under this background and trend, the traditional cloud computing model
    may nevertheless encounter

    many problems in independently tackling the massive data generated by IoT and
    meeting corresponding

    practical needs. In response, a new computing model called edge computing (EC)
    has drawn extensive at-

    tention from both industry and academia. With the continuous deepening of the
    research on EC, however,

    scholars have found that traditional (non-AI) methods have their limitations in
    enhancing the performance

    of EC. Seeing the successful application of AI in various fields, EC researchers
    start to set their sights on AI,

    especially from a perspective of machine learning, a branch of AI that has gained
    increased popularity in the

    past decades. In this article, we first explain the formal definition of EC and
    the reasons why EC has become

    a favorable computing model. Then, we discuss the problems of interest in EC.
    We summarize the traditional

    solutions and hightlight their limitations. By explaining the research results
    of using AI to optimize EC and

    applying AI to other fields under the EC architecture, this article can serve
    as a guide to explore new research

    ideas in these two aspects while enjoying the mutually beneficial relationship
    between AI and EC.

    CCS Concepts: • General and reference → Surveys and overviews; • Computing methodologies
    →

    Artificial intelligence; • Computer systems organization → Distributed architectures;

    Additional Key Words and Phrases: Edge computing, artificial intelligence, machine
    learning

    This work is supported in part by the National Natural Science Foundation of China
    under Grant No. 52107089, in part

    by China Postdoctoral Science Foundation under Grant No. 2021M70040, in part by
    the Fundamental Research Funds

    for the Central Universities of China under Grant No. B200201071, and in part
    by the BNRist Program under Grant No.

    BNR2021TD01009.

    Authors’ addresses: H. Hua, College of Energy and Electrical Engineering, Hohai
    University, Nanjing, Jiangsu, P. R. China,

    211100; email: huahc16@tsinghua.org.cn; Y. Li, Department of Automation, Tsinghua
    University, Beijing, P. R. China,

    100084; email: liyt19@mails.tsinghua.edu.cn; T. Wang, Micro Energy Research Group,
    Guangzhou Institute of Energy

    Conversion, Chinese Academy of Sciences, Guangzhou, Guangdong, P. R. China, 510640;
    email: wangth@ms.giec.ac.cn;

    N. Dong, Department of Computer Science, University of Oxford, Oxford, England,
    United Kingdom, OX1 3QD; email:

    nanqing.dong@cs.ox.ac.uk; W. Li, Centre for Distributed and High Performance Computing,
    School of Computer Science,

    University of Sydney, Sydney, New SouthWales, Australia; email: weiwilson.li@sydney.edu.au;
    J. Cao (corresponding au-

    thor), Beijing National Research Center for Information Science and Technology,
    Tsinghua University, Beijing, P. R. China,

    100084; email: jcao@tsinghua.edu.cn.

    Permission to make digital or hard copies of all or part of this work for personal
    or classroom use is granted without fee

    provided that copies are not made or distributed for profit or commercial advantage
    and that copies bear this notice and

    the full citation on the first page. Copyrights for components of this work owned
    by others than ACM must be honored.

    Abstracting with credit is permitted. To copy otherwise, or republish, to post
    on servers or to redistribute to lists, requires

    prior specific permission and/or a fee. Request permissions from permissions@acm.org.

    © 2023 Association for Computing Machinery.

    0360-0300/2023/01-ART184 $15.00

    https://doi.org/10.1145/3555802

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:2

    H. Hua et al.

    ACM Reference format:

    Haochen Hua, Yutong Li, Tonghe Wang, Nanqing Dong, Wei Li, and Junwei Cao. 2023.
    Edge Computing with

    Artificial Intelligence: A Machine Learning Perspective. ACM Comput. Surv. 55,
    9, Article 184 (January 2023),

    35 pages.

    https://doi.org/10.1145/3555802

    1

    INTRODUCTION

    Cloud computing has been widely used since its inception and has greatly changed
    people’s

    lifestyle. Many large companies, including Google, Amazon, and Microsoft, have
    launched their

    own cloud computing services (Google Cloud, Amazon Web Services, Microsoft Azure,
    respec-

    tively). Equipped with a large number of remotely located servers, cloud computing
    can intelli-

    gently provide users with computing, storage, and network services in real time
    according to user

    needs in terms of resource type, quantity, and so on [1]. In this case, users
    can easily obtain these

    cloud services with a small fee or totally for free [2].

    1.1

    Edge Computing

    The development of Internet of things (IoT) has driven the production and application
    of a large

    number of hardware devices/sensors worldwide. These hardware devices/sensors have
    the ability

    to sense the surrounding physical environment and transform the environmental
    information into

    data. After these massive data are transmitted to the cloud for computing or storage,
    data con-

    sumers can access cloud data according to their individual needs and then extract
    the information

    they need [3].

    However, with the continuous development and widespread application of IoT, cloud
    com-

    puting has begun to expose more and more problems. For instance, if the data generated
    by

    global terminal devices are computed and stored in a centralized cloud, then it
    will cause a se-

    ries of problems, including low throughput, high latency, bandwidth bottlenecks,
    data privacy,

    centralized vulnerabilities, and additional costs (such as transmission cost,
    energy cost, storage

    cost, calculation cost). In fact, many application scenarios in IoT, especially
    Internet of vehicles

    (IoV), have requirements of high speed and low latency for data processing, analyzing,
    and result

    returning [4].

    To address these challenges of cloud computing mentioned above, a new computing
    paradigm,

    called edge computing (EC), has attracted widespread attention. Simply put, the
    core idea of the

    EC model is to offload the data processing, storage, and computing operations
    that were originally

    required by the cloud to the edge of the network near terminal devices. This helps
    to reduce data

    transmission time and device response times, reduce the pressure on network bandwidth,
    reduce

    the cost of data transmission, and also achieve decentralization [5].

    1.2

    Artificial Intelligence

    Artificial intelligence (AI) is a kind of technology that endows the machine with
    certain intelli-

    gence so that the machine has the same ability to solve tasks as human beings
    [6]. While heuristic-

    based algorithms and data mining (DM) [7] have both played an important role in
    AI solutions

    to IoT in the past decades, we mainly focus on machine learning (ML), a recently
    popular area in

    AI. It is worth mentioning that, though DM and ML share similarities in utilizing
    massive data, ML

    focuses on mimicking the human learning process, but DM is designed to extract
    the rules from

    data [8, 9]. In contrast to DM, ML is a higher-level intelligence and represents
    the future direction

    of AI.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:3

    The widespread application of AI, especially ML, has clearly become an inevitable
    trend in the

    “big data era” brought by IoT. It is worth noting that this article focuses on
    the new generation AI

    algorithm, e.g., deep learning (DL), and so on. Note that some of these applications
    have high

    requirements for latency and network stability, but these requirements are often
    not guaranteed

    by cloud computing. In contrast, the new EC model can meet these requirements
    by deploying

    AI at the edge and delegating some computing and storage resources to edge devices
    close to

    the terminal. Although EC brings benefits such as reduced latency, improved data
    privacy, and

    enhanced security, the limited computing and storage capacity of edge devices
    has brought new

    problems. Using AI to optimize EC and solve the problems faced by EC has become
    a new trend

    in related research [10].

    1.3

    Combination of Edge Computing and Artificial Intelligence

    The motivations of combining AI and EC in recent works can be roughly divided
    into two aspects,

    which fully illustrate the mutual benefit between AI and EC:

    (1) The development of EC still faces many challenges, e.g., task scheduling,
    resource allocation,

    delay optimization, energy consumption optimization, and privacy and security.
    In response,

    many researchers have adopted AI-based solutions to promote the development of
    EC.

    (2) In spite of the rapid development of AI, its application relies on strong
    computing power.

    Traditional cloud computing can provide abundant computing and storage resources,
    but

    cloud-based AI reasoning and training may lead to significant delay as well as
    data privacy

    and security issues. By executing AI tasks in edge nodes closer to the user side,
    EC can greatly

    alleviate the aforementioned issues with improved stability, reliability, and
    user experience.

    At present, researchers have made many great achievements in the above research
    problems.

    This article summarizes these results, hoping that readers can quickly get updated
    with the latest

    research status and relevant results.

    1.4

    Review of Existing Surveys

    EC and AI are very popular research fields, and some related reviews have been
    published. In

    Reference [11], authors focus on the motivation and research work of deploying
    AI algorithm on

    the edge of the network. The latest development of ML in mobile EC is reviewed
    in Reference

    [12], which includes the development of 5G network in automatic adaptive resource
    allocation,

    mobility modeling, security, and energy efficiency. Survey work [13] reviews the
    application of

    DL in EC, and it focuses on how to use DL to promote the development of edge applications,
    e.g.,

    intelligent multimedia, intelligent transportation, intelligent city, and intelligent
    industry. Various

    methods of fast implementation of DL reasoning in the combination of end devices,
    edge servers

    and cloud, and the methods of training DL models in multiple edge devices are
    also discussed

    in Reference [14]. To achieve the best performance of DL training and reasoning,
    Reference [15]

    comprehensively discusses how to design EC architecture with communication, computing
    power,

    and energy consumption constraints. From the perspective of algorithms and systems,
    [16] csys-

    tematically summarizes the latest approaches to overcome the communication challenges
    caused

    by AI reasoning and training at the edge of the network.

    Nonetheless, the mutually beneficial relationship between EC and AI (especially
    traditional ML,

    DL, reinforcement learning (RL), and deep reinforcement learning (DRL)) are seldom
    dis-

    cussed in previous surveys. From this point of view, this article reviews existing
    works on EC

    performance optimization and different application scenarios of AI. In addition
    to the DL methods

    discussed in References [13–15], other ML algorithms, especially RL and DRL, are
    also discussed

    in this article.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:4

    H. Hua et al.

    Fig. 1. Structure of the survey.

    1.5

    Our Contributions

    Our main contributions in this article are as follows:

    (1) We first outline the basic definition and architecture of EC and discuss the
    necessity of EC

    in the presence of cloud computing. We also describe the problems studied by EC.

    (2) We discuss the motivations for combining AI and EC from two perspectives:

    • AI algorithms can be utilized to optimize EC;

    • EC enables AI to be deployed on the edge to bring faster response speeds and
    network

    stability for AI applications in different fields.

    We summarize three ideas of deploying AI training and reasoning tasks in the EC
    architec-

    ture based on existing studies and analyze their advantages and disadvantages.

    (3) We mainly introduce popular ML algorithms in the field of AI and analyzes
    their respective

    advantages. We summarize the latest research on solving the problems of EC and
    optimizing

    the performance of EC by using AI algorithms. We also review the latest research
    on applying

    AI to other fields under the EC architecture.

    Roadmap. The remainder of this article is organized as follows: Section 2 introduces
    the defini-

    tion of EC, discusses why we need EC, and enumerates the challenges faced by EC
    and correspond-

    ing traditional (non-AI) solutions. In Section 3, we combine EC and AI. We first
    discuss the trends

    and reasons for the combination of the two, then introduce the corresponding AI
    algorithms, and

    finally conduct a comprehensive review of the research on using AI algorithms
    to optimize EC. In

    Section 4, we summarize recent works on applying AI to other fields under EC.
    We summarize this

    article in Section 5. The diagram in Figure 1 shows a clear picture of the structure
    of this article.

    2

    INTRODUCTION OF EDGE COMPUTING

    Cloud computing has been a very popular or even a household concept for the past
    decade. Cloud

    computing brings many conveniences. For example, small- and medium-sized enterprises
    only

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:5

    need to purchase cloud server resources at a relatively low cost, without the
    need of purchasing

    their own hardware and equipment at high prices. This greatly reduces the cost
    of business oper-

    ations and the threshold for companies to engage in technology research and development.

    The centralized computing, storage, and network resources of cloud computing has
    exposed a

    series of problems with the development of the times. In this context, EC, a new
    computing para-

    digm, has begun to attract the attention of all areas. In this section, we will
    give a brief overview of

    EC. We will first discuss why EC is needed, and then introduce what EC is. Finally,
    we will discuss

    the problems of EC and corresponding traditional solutions, and point out the
    shortcomings of

    these traditional solutions.

    2.1

    Why We Need Edge Computing

    We will explain the necessity of EC from the following three aspects: the “big
    data era” caused by

    IoT, more stringent requirements of high network stability and response speed,
    and the consider-

    ation of privacy and security.

    2.1.1

    The Big Data Era Caused by Internet of Things. The concept of IoT was proposed
    in 1999

    for supply chain management, but now IoT covers a much wider area [17]. With the
    integration

    of IoT into traditional industries, many new application areas have been spawned,
    such as smart

    home, smart grid, smart traffic, and intelligent manufacturing. The idea of IoT
    is that things con-

    nected to the Internet form a huge network, achieving the interconnection of these
    things at any

    time and place. With the continuous development of IoT, the number of various
    sensors, smart-

    phones, healthcare applications and online social platforms is soaring, and the
    resulting global

    data will increase to 175 zeta bytes (ZB) by 2025 according to the prediction
    of International

    Data Corporation (IDC) [18]. This huge data volume has facilitated the world of
    big data [19].

    In the era of big data, the most direct and simple method for handling those data
    is to transfer

    the data to the cloud for processing. The annual global cloud IP traffic of 2016
    was 6.0 ZB, and it is

    expected to reach 19.5 ZB in 2021, reported by Cisco in 2018 [20] . However, the
    computing power

    of the cloud is increasing linearly [21], which is much slower than the current
    rate of data growth.

    With the rapid growth of data, cloud computing will no longer be fully trusted.

    2.1.2

    More Stringent Requirements of Network Stability and Response Speed. There are
    some

    IoT application scenarios that require extremely fast response speeds. For example,
    in the scenario

    of intelligent driving, sensor devices such as cameras are installed in autonomous
    vehicles. These

    sensor devices can continuously obtain data from the surrounding environment during
    the au-

    tonomous driving mode. In the cloud computing model, these data will be uploaded
    to the cloud

    for computing, and the results will be returned back to the vehicle’s control
    chip. Considering the

    complicated driving environment of a vehicle, this method is actually very time-consuming,
    and

    it may even cause the smart vehicle to fail to make the right decision in a timely
    manner, resulting

    in serious consequences [3].

    In the fields of augmented reality (AR) and virtual reality (VR), mobile AR/VR
    applications

    need to continuously transmit high-resolution videos, so they have high requirements
    for data

    computing capabilities, network stability, and response speed [22]. At the current
    rate of data

    growth, the cloud’s computing power becomes less and less proficient in meeting
    these require-

    ments. However, uploading all the data to the cloud will cause serious network
    congestion. Due to

    the limited network bandwidth, the data generated by a large number of IoT devices
    will impose a

    lot of pressure on the network bandwidth, causing cloud computing to no longer
    meet the require-

    ments of latency and response speed in these scenarios. In addition, these data
    may have a large

    proportion of noise and errors. Some survey shows that only one third of the data
    obtained by

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:6

    H. Hua et al.

    most sensors are correct [23]. Putting these worthless data into the cloud will
    cause a huge waste

    of cloud server resources and a waste of network bandwidth.

    2.1.3

    Privacy and Security. Cloud computing has outsourcing features. Users need to
    host local

    data to the cloud when using cloud computing. This leads to a series of data security
    and privacy

    issues [21]. The data loss during long-distance transmission between devices and
    the cloud can

    damage the integrity and accuracy of the data. In addition, highly centralized
    computing and stor-

    age can also become serious problems. When one device in a centralized system
    goes wrong due

    to benign errors or malicious attacks, other devices will be negatively affected.
    The data privacy

    problem refers to the theft and utilization by other unauthorized persons, companies
    or organiza-

    tions. Actually, data owners have lost control of their data uploaded to the cloud,
    so it is difficult

    to guarantee data privacy [24].

    2.2

    The Definition of Edge Computing

    The origin of EC can be traced back to 1999 when Akamai proposed content delivery
    networks

    (CDN) for web page caching near the clients, aiming to improve the efficiency
    of web page load-

    ing [25]. The concept of EC was borrowed from the cloud computing infrastructure
    to expand the

    concept of CDN [26].

    EC now has many different definitions. For example, Openstack defines EC as a
    model that

    provides application developers and service providers with cloud services and
    IT environmental

    services at the edge of the network [27]. In Reference [28], the authors believe
    that the “edge” in

    EC refers to any computing and network resources between the data source and the
    cloud, such

    as smart phones, gateways, micro data center, and cloudnet. It can also be understood
    that EC

    offloads some cloud resources and tasks to the edge near users and data sources.

    It should be noted that EC cannot replace the roles and advantages of cloud computing
    due to

    the indispensable computing power and storage capacity of the cloud. The emergence
    of EC is

    to make up for the limitations of cloud computing, and the relationship between
    EC and cloud

    computing should be complementary. Therefore, how to coordinate the relationship
    between the

    cloud and the edge so that the two can cooperate more efficiently and securely
    is a problem that

    needs to be studied.

    EC’s general architecture is three-layered, as shown in Figure 2, which are end,
    edge, and

    cloud [29].

    • End. This layer has two main functions. The first is to perceive the world,
    which is to ob-

    serve, obtain and digitize the information of the physical world. This function
    is completed

    by various types of sensors, such as speed sensors on smart cars, or cameras in
    smart cities.

    The second is to receive information or data from the edge or cloud and perform
    the cor-

    responding tasks. Data obtained from the end is processed by the edge and the
    cloud, and

    then the results will be fed back to the end according to user needs, such as
    control signals

    in smart driving or video traffic accepted by smartphones. Devices in this layer
    may have

    some but very limited computing and storage capabilities.

    • Edge. The edge layer is between the cloud and the end. This layer contains certain
    computing,

    storage, and network resources, so some tasks that were originally performed in
    the cloud

    can be delegated to this layer for execution. Since this layer is closer to end
    devices, EC has

    the advantages of low latency. Generally, the edge layer is composed of gateways,
    control

    units, storage units, and computing units.

    • Cloud. This layer actually refers to cloud servers that has been widely used
    in practice. In

    addition to its powerful computing and storage capabilities, the cloud also has
    the ability to

    macro-control the entire EC architecture.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:7

    Fig. 2. Architecture of EC. Gray arrows indicate the data transmission between
    the end, the edge, and the

    cloud. Blue and gray boxes indicate that the task is scheduled to the edge and
    the cloud, respectively.

    EC has advantages in offloading some resources and tasks on the cloud to the edge.
    The edge

    layer is closer to end users and data source, so the transmission distance is
    greatly shortened, and

    the corresponding transmission time is greatly reduced. This effectively improves
    the response

    speed of user requests. At the same time, the shortened transmission distance
    also reduces the

    cost and data security issues caused by the long-distance transmission. From the
    perspective of

    the cloud, large-scale raw data will be processed on the edge to filter out a
    large number of useless

    and erroneous data first, and then the edge uploads important data or information
    to the cloud.

    This greatly reduces the bandwidth pressure, the transmission cost, and the possibility
    of user

    privacy leakage.

    2.3

    Problems Studied in Edge Computing

    Next, we will describe three problems studied in the field of EC in detail: computing
    offloading,

    resource allocation, and privacy and security. We will also explain the shortcomings
    of traditional

    solutions to these problems.

    2.3.1

    Computing Offloading. Computation offloading was originally proposed in cloud
    com-

    puting. The definition is that the terminal devices with limited computing power
    delegates part

    or all of the computing tasks to the cloud for execution. Similarly, computing
    offloading in EC

    refers to the problem that terminal devices with limited computing power delegate
    part or all of

    its computing tasks to the edge [30]. The main considerations are whether terminal
    devices will

    offload, how much they will offload and to which nodes they will offload. Computing
    offloading

    solves the problems of insufficient resources and high energy consumption in terminal
    devices.

    Traditional methods of computing offloading applied to cloud computing are based
    on many

    assumptions, including that the default server has sufficient computing power
    and does not care

    about its energy consumption or network condition. However, traditional methods
    based on

    the above assumptions are not suitable for solving the computing offloading in
    EC where edge

    devices and servers have limited computing capabilities [31]. Reasonable computing
    offloading

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:8

    H. Hua et al.

    strategies are able to reduce energy consumption and latency. Therefore, computing
    offloading is

    an important research topic for optimizing EC.

    2.3.2

    Resource Allocation. Compared to traditional cloud computing, the most prominent
    ad-

    vantage of EC is that it does not need to upload all the data to the cloud for
    computing and storage

    tasks, which largely frees up network bandwidth and other resources occupied by
    cloud comput-

    ing. In the meanwhile, since tasks are distributed on each edge node with limited
    resources, an

    intelligent and efficient solution for resource management is crucial for EC.

    2.3.3

    Privacy and Security. EC also faces new challenges regarding data security and
    pri-

    vacy [32]. Some of these challenges come from the inherent problems of cloud computing,
    and

    others come from the distributed and heterogeneity nature of EC itself [33]. Traditional
    solutions

    for data security and privacy issues of cloud computing are not applicable to
    the non-centralized

    computing model of EC. Therefore, further improving data security and further
    protecting data

    privacy is a problem worthy of researchers’ attention.

    2.4

    Summary

    Aiming at the problems described above, many studies based on traditional methods
    have made

    good progress. In solving the problem of resource allocation and computing offloading
    in EC,

    some researchers adopt Lyapunov optimization algorithm [34] to find the optimal
    decision [35, 36].

    Some studies also regard resource allocation and computing offloading as optimization
    problems

    such as linear programming [37] and mixed integer non-linear programming [38–40].
    Other tra-

    ditional methods include alternating direction method of multipliers (ADMM) [41],
    Stack-

    elberg game [42], and so on. In terms of security, Jing et al. [43] adopt a linear
    programming

    method to reduce data loss. Kang et al. [44] use blockchain technology to protect
    the security of

    data storage and sharing. In terms of privacy protection, traditional methods
    include differential

    privacy [45], wavelet transform [46], and so on.

    Although traditional methods above have achieved good results in optimizing EC,
    they still have

    some shortcomings. First, the underlying model needs to be known, which is not
    an easy task due

    to the complexity and dynamics of EC itself. Second, they are easy to converge
    to local optima,

    and their efficiency is usually very low. Moreover, they lack the ability to perform
    deep and high-

    dimensional data mining, automatically extract important features to make fast
    optimal decisions,

    and make prediction. Note that these are all advantages of AI algorithms, and
    we will describe

    how they optimize EC in the next section.

    In summary, this section mainly focuses on the concept and motivation of EC. At
    the same time,

    the problems and challenges faced by the development of EC are also described.
    It is worth noting

    that traditional methods have achieved good results in solving these problems,
    but they still suffer

    some shortcomings. In the future, AI algorithms might become more adaptable to
    new situations,

    able to change inputs, outputs, and constraints more easily, and do not need mathematical
    models

    when data are sufficient [12].

    3

    WHEN EDGE COMPUTING MEETS ARTIFICIAL INTELLIGENCE

    In this section, we will first analyze the respective development of AI and EC
    and the motiva-

    tion for the combination of the two, and then we will give an overview of related
    AI algorithms.

    Finally, we will summarize AI-based algorithms for topics such as computing offloading
    optimiza-

    tion, non-computing offloading methods to reduce energy consumption, EC security,
    data privacy,

    and resource allocation optimization.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:9

    Fig. 3. Mutually beneficial relationship between AI and EC. The right-to-left
    arrow indicates that the opti-

    mization and development of EC require the assistance of AI algorithms (e.g.,
    computation offloading opti-

    mization). The left-to-right arrow indicates that EC needs to be deployed closer
    to terminal devices to meet

    the requirements of some latency-sensitive AI applications (e.g., smart city).

    3.1

    Motivations of Combining Edge Computing and Artificial Intelligence

    Artificial intelligence is a very critical technology in the era of big data.
    It brings intelligence and

    reasoning capabilities to a large number of terminal devices in IoT. At present,
    many studies and

    applications have combined the two hot areas of AI and EC, and their motivations
    can be roughly

    divided into two aspects:

    • The optimization and deployment of EC requires the assistance of AI algorithms;

    • EC provides necessary computing functions for AI applications that need to be
    deployed

    close to terminal devices for low latency and high network stability [47].

    It can be seen that the development of AI and EC is mutually beneficial (see Figure
    3 for a straight-

    forward description), and the combined development of the two has attracted the
    attention of

    many researchers.

    3.1.1

    Edge Computing Benefits Artificial Intelligence. In detail, EC brings benefits
    to the appli-

    cation of AI. With the advent of the big data era, the widespread application
    of AI in people’s

    daily lives has become an irresistible trend. Of course, this trend still faces
    challenges. For exam-

    ple, AI’s reasoning and training requires strong computing power and sufficient
    energy support,

    but terminal devices often do not meet these two requirements. In recent years,
    cloud computing

    has fulfilled these needs by offloading AI model training and reasoning tasks
    that terminal devices

    cannot perform to the cloud server. However, relying solely on cloud computing
    will cause prob-

    lems like insufficient bandwidth and high latency when a large number of AI models
    are used by a

    large number of terminal devices [48]. With the advent of EC, AI can be deployed
    near terminal de-

    vices and users on the edge and terminal with certain computing resources and
    storage resources,

    therefore meeting the needs for low latency and high network stability [11].

    In return, EC also brings three ideas to the application of AI in other fields
    (visually represented

    by Figure 4).

    (a) Massive data are preprocessed and then uploaded to the cloud for AI training
    and reason-

    ing [49]. Although this idea has greatly reduced the pressure of massive data
    on bandwidth

    and transmission costs, it does not meet the requirements of many applications
    in terms of

    latency (e.g., IoV and AR/VR applications).

    (b) To reduce the latency of applications, AI reasoning tasks are performed on
    the edge or the

    end, while model training tasks are still performed in the cloud [50].

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:10

    H. Hua et al.

    Fig. 4. Hierarchical modes for deploying AI in EC. The figure is divided into
    three parts by two vertical dotted

    lines, which correspond to three hierarchical modes. Neural networks and cylinders
    represent training tasks

    and reasoning tasks, respectively. (a) The leftmost part describes that both training
    and reasoning tasks are

    deployed in the cloud. (b) The blue part in the middle describes that the training
    tasks are performed in the

    cloud, but the reasoning tasks are performed in both cloud and edge. The red part
    in the middle describes

    that the training tasks are in the cloud, while the reasoning tasks are performed
    completely on the edge.

    (c) The blue part in the rightmost part indicates that both training and reasoning
    tasks are deployed in both

    cloud and edge. The red part describes the training and reasoning tasks performed
    only on the edge.

    (c) Delegate part or all of AI training and reasoning tasks to the edge [51].
    With distributed

    characteristics, this idea helps enhance the location awareness of AI models while
    reducing

    the latency and bandwidth pressure [33]. Note that the requirements for energy
    consumption

    and computing power of edge devices will also increase as the number of tasks
    devolved to

    the edge side increases.

    As can be seen from the above, these three ideas have their own advantages and
    disadvantages, so

    existing studies are more inclined to choose the best idea according to the specific
    situation.

    3.1.2

    Artificial Intelligence Benefits Edge Computing. AI is playing an important role
    in the opti-

    mization of EC [52]. Since EC is distributed and the workload of each edge device
    changes dynam-

    ically with time and location, this uncertainty and unpredictability have brought
    huge obstacles

    to the application of EC. In this sense, EC still needs to be optimized and improved
    in many as-

    pects, such as optimizing computing offloading, optimizing resource allocation,
    reducing latency

    and energy consumption, and improving user experience.

    Many optimization problems in EC are very complex non-convex problems. As the
    number of

    devices and users increases, the scale of these problems will also rapidly increase
    [53]. Compared

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:11

    to traditional methods, ML is more suitable for solving optimization problems
    of EC and has better

    results [54]. In addition, AI algorithms are also good at effectively mining hidden
    information and

    laws from data in complex and noisy EC environments, which has plagued traditional
    optimization

    methods for a long time.

    3.2

    Introduction of Artificial Intelligence Algorithms in Edge Computing

    We are going to introduce these AI algorithms used in EC, namely, traditional
    ML algorithms, DL,

    RL and DRL algorithms. We will also provide some examples of application accordingly.
    In this

    article, we mainly focus on the field of ML in AI algorithm. Other algorithms
    such as evolutionary

    algorithm are not the focus of this article, but are briefly introduced in this
    section.

    3.2.1

    Traditional Machine Learning. The traditional ML algorithms in this work particularly

    refer to those ML algorithms other than DL and RL. Given the availability of label
    information,

    the traditional ML algorithms can be divided into supervised learning, semi-supervised
    learn-

    ing, and unsupervised learning. Among them, supervised learning requires labeled
    data to train

    the model, while unsupervised learning can autonomously discover the principles
    implicit in the

    data. As a hybrid of supervised learning and unsupervised learning, semi-supervised
    learning has

    access to both labeled data and unlabeled data. For example, the common supervised
    learning

    methods include support vector machines (SVM), boosting, and random forests; the
    common

    semi-supervised learning methods include label propagation and graphical models;
    the common

    unsupervised learning methods include clustering algorithms such as K-means and
    dimension re-

    duction algorithms such as principal component analysis (PCA).

    There are some obvious shortcomings of traditional ML algorithms. For instance,
    they are sen-

    sitive to data sets, the data become less effective when the data set is large
    enough, and they need

    complicated artificial feature engineering. In spite of these shortcomings, traditional
    ML has small

    energy consumption, small computing power cost, and is easy to deploy compared
    to DL and

    RL. Due to the distributed nature of EC, the appropriate AI algorithm can be reasonably
    selected

    according to the resource situation and task requirements of each edge and terminal
    device, so

    traditional ML can also rely on these advantages to find its place in EC [55].

    3.2.2

    Deep Learning. DL resembles the functions of human brains. It has the ability
    to au-

    tonomously learn high-level features from raw data, thereby efficiently performing
    classification

    and prediction tasks [56, 57]. DL is usually deployed in a multi-layer structure.
    These layers can

    be fully connected layers, convolutional layers, pooling layers, normalization
    layers, or activation

    layers. A DL algorithm can be formed by the free combination of these layers.
    The more layers

    the algorithm includes, the “deeper” it is. The input of a neuron in each layer
    is the weighted sum

    of the outputs of the neurons in the previous layer. After the input is activated
    by an activation

    function, the obtained number is used as the output of the neuron [58]. Compared
    to traditional

    ML algorithms, DL has a more powerful ability to extract high-level features from
    massive data

    due to its multilayer structure [59].

    The common DL models include: deep neural networks (DNN), convolutional neural
    net-

    works (CNN), recurrent neural networks (RNN), and so on.

    • DNN, also known as multiple linear perceptrons (MLP), is a neural network with
    multi-

    ple hidden layers. The neural network layer in DNN can be divided into three types:
    input

    layer, hidden layer and output layer. By adding hidden layers, DNN model can obtain
    more

    powerful learning ability.

    • CNN is composed of a series of different convolution layers. High-level features
    hidden in

    the input data can be extracted through the convolution operation in these convolution

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:12

    H. Hua et al.

    layers [60]. CNN has powerful representation abilities and picture recognition
    capabilities.

    Based on this, some studies have adopted CNN algorithms in the fields of fault
    detection

    and video surveillance in EC. For example, Zhang et al. [61] detects microseismic
    events by

    deploying CNN models on edge devices.

    • RNN is a DNN algorithm that is good at modeling and processing sequence data.
    However, a

    major disadvantage of RNN is that it is easy to forget. That is, the impact of
    the input of the

    starting moment on the later moments will become smaller and smaller with time.
    Therefore,

    an improved version of RNN named long short-term memory (LSTM) [62] is proposed.

    At present, some studies [63–65] have adopted the LSTM algorithm to solve the
    issues faced

    by EC.

    When a large number of labeled data are available, compared with traditional ML
    algorithms,

    DL performs better in natural language processing, computer vision and many other
    fields [57].

    The characteristics of EC make the data collected from the physical environment
    can be processed

    locally, which meets the requirements of DL. Therefore, some EC studies also focus
    on using DL

    in EC anomaly detection [66], task scheduling and resource allocation in EC [67],
    and privacy

    protection [68].

    3.2.3

    Reinforcement Learning and Deep Reinforcement Learning. Unlike supervised learning

    and unsupervised learning that rely on static data, RL is a learning algorithm
    that trains mod-

    els through dynamic interaction with the environment. The core idea is that agents
    receive the

    state of environment and make actions to maximize the reward according to historical
    experience.

    Because reinforcement learning is good at solving decision-making problems, some
    studies [69, 70]

    have adopted RL algorithm in the decision-making of EC resource management, allocation,
    and

    scheduling.

    Typical algorithms in RL are model-free and value-based Q-learning algorithm [71].
    Each iter-

    ation of Q-learning algorithm will calculate an expected cumulative reward, called
    the Q-value,

    according to current state and given action. However, as the environment becomes
    more complex,

    the state space and action space will expand exponentially, thus reducing the
    convergence speed

    and taking up a lot of memory [72].

    To solve this problem, deep Q network (DQN) [73] is proposed, which utilizes a
    DNN to ap-

    proximate the Q-values. Compared with the classical RL algorithms, DQN has three
    advantages

    in dealing with EC with high complexity [74]. First, it is able to deal with high
    dimensional and

    complex systems. Second, it can learn the regularity of system environment. Last
    but not least, it

    is able to make optimal decisions based on current and past long-term reward.
    Therefore, some

    studies [75, 76] use DQN algorithms to optimize the control decision-making problems
    in EC and

    obtain good results.

    However, DQN also has its shortcomings. Especially, when using nonlinear functions
    such as

    neural network to approximate the Q-function, the learning result of DRL is unstable
    or even

    divergent. To solve this problem, an experience replay mechanism using the prior
    experience is

    integrated into DQN [77, 78].

    3.2.4

    Federated Learning. Federated learning (FL) is a distributed ML framework, which
    can

    effectively help multiple organizations train models under the requirements of
    user privacy pro-

    tection, data security, and government regulations [79]. In this framework, different
    local users do

    not need to put all the raw data on the central server for training, but train
    the local model through

    privacy related data, then all the local models are aggregated into a global model
    on the central

    server [80].

    As discussed above, the goal of EC is to deploy computing tasks at the edge of
    the network

    near the client. However, the data of a single edge node may not meet the requirements
    of model

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:13

    training. Therefore, the cooperation model training between different nodes under
    data privacy

    protection is a research hotspot; see, e.g., Reference [81].

    3.2.5

    Evolutionary Algorithms. Evolutionary algorithms are a kind of optimization methods

    inspired by biological evolution mechanism and biological behavior [82]. Evolutionary
    algorithms

    include particle swarm optimization (PSO), genetic algorithm (GA), differential
    evolution

    (DE), and so on.

    Generally speaking, evolutionary algorithms are divided into the following steps.
    The first step

    is to initialize variables. After that, the evolutionary algorithms continuously
    iterate three steps

    named fitness evaluation and selection, population reproduction and variation,
    and population

    updating [82]. Finally, the second step is iterated until the termination condition
    is satisfied.

    At present, evolutionary algorithm has been applied in many problems of EC, such
    as resource

    scheduling optimization [83], load balancing [84], and task scheduling [85]. In
    this article, we

    mainly discuss ML, a recently popular AI subclass, so evolutionary algorithm is
    only briefly intro-

    duced here.

    3.3

    Artificial Intelligence Solutions for Optimizing Edge Computing

    Now, we are going to provide a comprehensive summary of studies (listed in Table
    1) that uses AI

    methods to optimize EC in different scenarios including computing offloading,
    reducing energy

    consumption, increasing the security of EC, keeping data privacy, and resource
    allocation.

    3.3.1

    Computing Offloading Optimization. At present, more and more studies have begun
    to

    make full use of AI to solve computing offloading [86]. We will summarize the
    AI-based computing

    offloading schemes in existing research to reduce energy consumption, reduce latency,
    and reduce

    both.

    Reducing energy consumption. In terms of reducing energy consumption, a partial
    computing

    offloading scheme based on DL decision-making is proposed by Ali et al. [31].
    The authors estab-

    lish a new type of decision-making process, which can intelligently select the
    optimal computing

    offloading strategy, thus reducing the total energy consumed in the execution
    of computing tasks.

    Compared with its previous work in Reference [87], this strategy additionally
    considers the energy

    consumption of user equipment in the cost function, which reduces its energy consumption
    by 3%.

    Reducing latency. Although EC itself has the advantage of low latency compared
    to cloud com-

    puting, it still has room for optimization. Smart-Edge-CoCaCo [88] is proposed
    to minimize the

    latency by jointly optimizing the wireless communication model, the collaborative
    filter caching

    model, and the computing offloading model. In addition, since the computing power
    of edge de-

    vices is limited, offloading all tasks to edge devices may exceed the capacity
    of the edge device.

    With this in mind, Xu et al. [89] propose a DL-based heuristic offloading method.
    This method uses

    origin-destination electronic communications network distance estimation and heuristic
    searching

    to find the optimal computing offloading strategy.

    Reducing both energy consumption and latency. All the methods mentioned in previous
    para-

    graphs either only minimize energy consumption, or only minimize latency. There
    are also studies

    that consider the minimization of both through RL. Kiran et al. [54] propose a
    scheme that uses

    Q-learning to make optimal control decisions to reduce the delay in EC and adds
    constraints to

    the cost function to reduce energy consumption in EC. Although this scheme has
    a good effect on

    reducing energy consumption and delay, it does not take into account the curse-of-dimensionality

    problem of EC.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:14

    H. Hua et al.

    Table 1. Summary of Research on AI-optimized EC

    Problem

    Goal

    Citation

    AI

    Contribution

    Reduce energy

    consumption

    [98]

    Distributed DL-based

    offloading algorithm

    Add the cost of changing local

    execution tasks in the cost

    function

    Reduce

    latency

    [88]

    Smart-Edge-CoCaCo

    algorithm based on

    DL

    Joint optimization of wireless

    communication, collaborative

    filter caching and computing

    offloading

    [89]

    A heuristic offloading

    method

    Origin-destination electronic

    communication network

    distance estimation and heuristic

    searching to find optimal

    strategy for shorting the

    transmission delay of DL tasks

    [54]

    Cooperative

    Q-learning

    Improve the search speed of

    traditional Q-learning

    [90]

    TD learning with

    postdecision state and

    semi-gradient descent

    method

    Approximate dynamic

    programming to cope with

    curse-of-dimensionality

    [91]

    Online RL

    Special structure of the state

    transitions to overcome

    curse-of-dimensionality;

    additionally consider the EC

    scenario with energy harvesting

    Computing

    offloading

    optimization

    Reduce both

    energy

    consumption

    and latency

    [93]

    DRL-based offloading

    scheme

    No prior knowledge of

    transmission delay and energy

    consumption model; compress

    the state space dimension

    through DRL to further improve

    the learning rate; additionally

    consider the EC scenario with

    energy harvesting

    [94]

    DRL-based computing

    offloading approach

    Markov decision process to

    represent computing offloading;

    learn network dynamics through

    DRL

    [95]

    Q-function

    decomposition

    technique combined

    with double DQN

    Double deep Q-network to

    obtain optimal computing

    offloading without prior

    knowledge; a new function

    approximator-based DNN model

    to deal with high dimensional

    state spaces

    [10]

    RL based on neural

    network architectures

    An infinite-horizon

    average-reward continuous-time

    Markov decision process to

    represent the optimal problem; a

    new value function

    approximator to deal with high

    dimensional state spaces

    (Continued)

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:15

    Table 1. Continued

    Problem

    Goal

    Citation

    AI

    Contribution

    Optimize the

    hardware

    structure of

    edge devices

    [102]

    Binary-weight CNN

    A static random access memory

    for binary-weight CNN to

    reduce memory data

    throughput; parallel execution

    of CNN

    [104]

    DNNs

    FPGA-based binarized DNN

    accelerator for weed species

    classification

    Other ways to

    reduce energy

    consumption

    Control

    device

    operating

    status

    [105]

    DRL-based joint

    mode selection and

    resource

    management

    approach

    Reduce the medium- and

    long-term energy consumption

    by controlling the

    communication mode of the

    user equipment and the

    light-on state of the processors

    Combine

    with energy

    Internet

    [106]

    Model-based DRL

    Solve the energy supply

    problem of the multi-access

    edge server

    [70]

    RL

    A fog-computing node powered

    by a renewable energy

    generator

    [113]

    Minimax-Q learning

    Gradually learn the optimal

    strategy by increasing the

    spectral efficiency throughput

    [114]

    Online learning

    Reduced bandwidth usage by

    choosing the most reliable

    server

    [115]

    Multiple AI

    algorithms

    Algorithm selection mechanism

    capable of intelligently

    selecting optimal AI algorithm

    Security of

    edge

    computing

    [117]

    Hypergraph

    clustering

    Improve the recognition rate by

    modeling the relationship

    between edge nodes and DDoS

    through hypergraph clustering

    [112]

    Extreme Learning

    Machine

    Show faster convergence speed

    and stronger generalization

    performance of the Extreme

    Learning Machine classifier

    than most classical algorithms

    [56]

    Distributed DL

    Reduce the burden of model

    training and improve the

    accuracy of the model

    [120]

    DL, restricted

    Boltzmann machines

    Give active learning capabilities

    to improve unknown attack

    recognition

    (Continued)

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:16

    H. Hua et al.

    Table 1. Continued

    Problem

    Goal

    Citation

    AI

    Contribution

    [122]

    Deep PDS-Learning

    Speed up the training with

    additional information (e.g., the

    energy utilization of edge

    devices)

    Privacy

    protection

    [124]

    Generative

    adversarial networks

    An objective perturbation

    algorithm and an output

    perturbation algorithm that

    satisfy differential privacy

    [125]

    A deep inference

    framework called

    EdgeSanitizer

    Data can be used to the

    maximum extent, while

    ensuring privacy protection

    [77]

    Deep Q-learning

    Derive trust values using

    uncertain reasoning; avoid local

    convergence by adjusting the

    learning rate

    Resource

    allocation

    optimization

    [166]

    Actor-critic RL

    An additional DNN to represent

    a parameterized stochastic

    policy to further improve

    performance and convergence

    speed; a natural policy gradient

    method to avoid local

    convergence

    [76]

    DRL-based resource

    allocation scheme

    Additional SDN to improve QoS

    [127]

    Multi-task DRL

    Transform the last layer of

    DNN that estimates Q-function

    to support higher dimensional

    action spaces

    The curse-of-dimensionality refers to the problem that the complexity of the problem
    solving

    will increase at an exponential speed as the dimensionality increases [90, 91].
    To solve the curse-

    of-dimensionality problem, Xu et al. [91] propose an algorithm that uses the special
    structure of

    state transitions of the considered EC system to overcome the curse-of-dimensionality
    problem. It

    is worth noting that the authors use energy harvesting [92] to reduce the consumption
    of tradi-

    tional energy by fully utilizing renewable energy, but the transmission delay
    model and the energy

    consumption model are required to be known (this requirement can be eliminated
    by the method

    proposed in Reference [93]).

    Compared with RL algorithms, DRL algorithms have stronger abilities to deal with
    high-

    dimensional state space. Therefore, Cheng et al. [94] propose a model-free DRL-based
    comput-

    ing offloading method based on a space-air-ground integrated network to reduce
    EC latency and

    energy consumption. This method uses Markov decision process to represent the
    computing of-

    floading decision process, and uses DRL to learn network dynamics.

    Yet the ability of DRL algorithms to cope with high-dimensional state space is
    not perfect in ev-

    ery respect. Chen et al. [95] propose a new DNN model based on function approximator,
    and they

    also adopt double deep Q-network so that the optimal offloading strategy can be
    discovered with-

    out prior knowledge. Similarly, Lei et al. [10] propose a new type of value function
    approximator

    to deal with high-dimensional state equations. The authors also use an infinite-horizon
    average-

    reward continuous-time Markov decision process to represent the optimal problem.
    Finally, DRL

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:17

    is applied to solve the optimal computing offloading decision to reduce the energy
    consumption

    and latency of EC.

    The DRL-based methods mentioned above use a centralized style for model learning.
    However,

    there is a potential assumption in this style that edge devices in EC have sufficient
    computing

    power. In fact, many edge devices do not yet have such powerful computing capabilities.
    As a

    result, Ren et al. propose a distributed computing offloading strategy combining
    federated learning

    and multiple DRLs [96]. It is proved by experiments that this method outperforms
    the centralized

    learning method in reducing the transmission cost in EC. In addition, distributed
    learning also

    has the advantage of fast convergence [97]. This is proved in Reference [98] by
    the method of

    optimizing computing offloading through distributed ML.

    3.3.2

    Non-computation Offloading Methods to Reduce Energy Consumption. EC provides cer-

    tain computing capabilities near the data source, so that many computing tasks
    do not need to

    be delivered to the cloud for execution. While this model brings high response
    speed to people,

    it will inevitably cause a surge in energy consumption on the edge side. Moreover,
    many applica-

    tions in EC require AI algorithms to make real-time decisions (such as intelligent
    driving [99] and

    intelligent monitoring systems [100]), but AI algorithms are computationally intensive
    to varying

    degrees. This is a huge challenge for devices with limited power. From the perspective
    of overall

    energy consumption, with the gradual popularization and widespread application
    of AI, how to

    control global overall energy consumption or improve energy efficiency is also
    very important.

    Apart from computation offloading, there are many other factors that affect the
    energy con-

    sumption of edge devices. For example, different AI algorithms and different hardware
    structures

    adopted by edge devices will also affect energy consumption [101]. We will introduce
    AI solutions

    to reduce EC energy consumption in terms of optimizing hardware structure, controlling
    operating

    status, and combining energy Internet.

    Optimizing hardware structure. A static random access memory (SRAM) [102] is able
    to re-

    duce memory data throughput, and it combines parallel CNNs to enable simultaneous
    access to

    different memory blocks. Experiments show that this architecture significantly
    reduces energy

    consumption compared to traditional digital accelerator using small bitwidths.
    Based on field-

    programmable gate array (FPGA) [103], Lammie et al. [104] design a binarized DNN
    accelera-

    tor for weed species classification, which reduces energy consumption by 7 times
    compared with

    GPU-based accelerator under the same conditions. The authors believe that well-cultivated
    FPGA-

    based accelerator for AI algorithms is an ideal choice for edge devices with limited
    resources but

    need to perform learning and reasoning tasks.

    Controlling operating status. Sun et al. propose a method based on DRL to reduce
    the medium

    and long-term energy consumption of EC by controlling the communication modes
    of user devices

    and the light-on state of processors [105]. This method uses Markov process to
    model the energy

    consumption of cache states and cloud processors and DRL to make decisions. According
    to some

    constraints (quality of service constraints, transmission power constraints, and
    the computing ca-

    pability constraint in the cloud), the method uses an iterative algorithm to optimize
    the precoding

    of user devices.

    Combining Energy Internet. EC has distributed characteristics, and the workload
    of edge-side

    devices will dynamically change with different geographical locations and times,
    which makes the

    energy consumption of each edge node unpredictable and uneven. To deal with the
    huge energy

    demand of EC and its heterogeneity, the combination of energy Internet (including
    smart grid

    and microgrid) with EC can provide renewable energy for EC [70, 106]. Energy Internet
    is a dis-

    tributed energy production model that achieves local energy self-sufficiency by
    making full use

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:18

    H. Hua et al.

    of renewable energy sources [107, 108]. This feature of energy Internet is very
    suitable for provid-

    ing energy to EC, thereby reducing the consumption of non-renewable energy. Since
    renewable

    energy is infinite, reducing non-renewable energy consumption is also equivalent
    to reducing en-

    ergy consumption. However, due to the uncertainty of renewable energy production
    [109], some

    studies [70, 106] also aim to balance the energy supply and demand of EC through
    DRL-based con-

    trol strategies. With the deployment of EC devices into energy Internet, energy
    management will

    also become more complex [110]. DRL combined with curriculum learning [111] has
    been used to

    realize a bottom-up energy management scheme [110].

    3.3.3

    Security of Edge Computing. Delegating computing and storage tasks from the cloud
    to

    the edge can reduce the security problems caused by network congestion and centralization
    to

    some extent. However, the distributed environment of EC also brings new security
    problems, such

    as distributed denial of service (DDoS) attacks and jamming attacks that cause
    illegal distri-

    bution of distributed system resources [33, 112]. What was previously applicable
    to a centralized

    environment (like cloud computing) is no longer applicable to solving these new
    security issues.

    In this part, we will review the studies on improving the security of EC based
    on AI algorithms.

    Traditional machine learning methods. Traditional ML can help with the identification
    and clas-

    sification of different attacks. In response to jamming attacks that threaten
    EC security, Wang

    et al. [113] propose a stochastic game framework that maximizes the spectral efficiency
    through-

    put by minimax-Q learning, thereby gradually learning the optimal strategy. The
    disadvantage

    of this method is that it needs extra bandwidth to avoid jamming attacks. This
    can be avoided

    by selecting the most reliable server based on online learning to reduce the security
    risks caused

    by jamming attacks [114]. To reduce the false alarm rate and data transmission
    delay of tradi-

    tional intrusion detection systems, an algorithm selection mechanism can be deployed
    on the edge

    side [115]. This enables intelligent selection of the optimal ML algorithm for
    edge devices to dis-

    tinguish false alarms. The experimental results prove that the method based on
    AI algorithm can

    improve the security of EC more effectively than the method based on non-AI algorithm.

    Among various network attacks, DDoS is a relatively common attack method. Hypergraph
    clus-

    tering [116] can be adopted to model the relationship between edge nodes and DDoS
    to improve

    the recognition rate [117]. Kozik et al. uses a single-layer neural network to
    build the extreme

    learning machine classifier [112]. In this method, the training task of the attack
    detection classifier

    model is performed in the cloud with powerful computing resources. The trained
    classifier model

    is then offloaded to the edge devices for attack detection. In addition, experiments
    have also proven

    that the extreme learning machine classifier has faster convergence speed and
    stronger general-

    ization performance than most traditional classification algorithms (such as SVM,
    or single-layer

    perceptron).

    DL methods. Although traditional ML algorithms can improve the accuracy and robustness

    of network attack detection and recognition, they lack the ability of automatic
    feature extrac-

    tion [118]. As a result, traditional AI algorithms are not sensitive to known
    but slightly changed

    attacks. At the same time, due to the lack of prior knowledge of unknown vulnerabilities,
    they

    can not effectively detect zero-day attacks [119]. Deep learning, however, has
    been successfully

    applied in image processing, computer vision and many other fields in recent years
    because of

    its structure that can automatically mine and learn the hidden features in massive
    data [63]. Re-

    searchers begin to focus on DL, since the problem of cyber-security attack identification
    in EC is

    similar to the tasks in these fields.

    Abeshu et al. [56] propose a DL-based method for attack detection in EC. To reduce
    the bur-

    den of model training and improve the accuracy of the model, this method uses
    a pretrained

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:19

    stacked autoencoder to screen the real valuable features and then uses softmax
    to do classification.

    This method shows great advantages in the aspects of availability, scalability
    and effectiveness

    compared with traditional ML algorithms. However, the authors fail to take into
    account the im-

    provement of the detection rate of new attacks. This can be solved by unsupervised
    learning. The

    DL-based algorithm proposed in Reference [120] learns the characteristics of the
    attack through

    the deep belief network and uses the softmax function to identify various attacks
    on the EC. The

    difference is that this solution incorporates unsupervised learning restricted
    Boltzmann machines

    into the proposed model. Since unsupervised learning restricted Boltzmann machines
    is a stochas-

    tic artificial neural network with active learning characteristics, this model
    enables active learning

    to improve the recognition rate of attacks that have never occurred before.

    3.3.4

    Data Privacy. To a certain extent, EC reduces the risk of privacy leakage caused
    by upload-

    ing data to cloud servers that users cannot control. However, the problem of data
    privacy leakage

    also exists on the edge side. On the one hand, the distributed nature of EC brings
    new challenges to

    privacy protection. On the other hand, the application of AI on the edge side
    requires massive data

    for model training and reasoning, which are inevitably mixed with a large amount
    of user privacy.

    During the training process, some models may save part of the training set with
    private data, so

    an attacker can illegally obtain users’ privacy by analyzing these models [121].
    Consequently, it

    is very important to ensure the data privacy and security of edge-side users without
    affecting the

    performance of EC. This topic has attracted the attention of many researchers
    in recent years.

    Post-decision state learning. A post-decision state (PDS) learning method is proposed
    in Refer-

    ence [122], in which the state transition function is factored into known and
    unknown components.

    This method first uses the Markov decision process to describe EC’s offloading
    problem and then

    solves the problem by combining PDS-learning technique with the traditional deep
    Q-network

    algorithm. This combination can well balance task scheduling and privacy protection.
    It is worth

    noting that compared with the traditional deep Q-network, the new algorithm can
    speed up the

    model training by learning some additional information (such as the energy utilization
    of edge

    devices).

    Federated learning. A privacy-preserving asynchronous FL mechanism (PAFLM) for
    EC is

    proposed, which allows multiple edge nodes to realize more efficient FL without
    sharing private

    data and affecting inference accuracy [81]. Because the local model training of
    each node depends

    on the data inside the node to a large extent, it is easier to lead to local optimum.
    Through FL, the

    local model can be optimized with the help of the model parameters of other nodes,
    which can

    solve local optimum problem and improve the accuracy of model.

    Differential privacy. To protect the user privacy in the training data set under
    EC, AI algorithms

    are usually combined with differential privacy, a system where including or excluding
    any piece

    of data will not change the results of related data analysis to a great extent
    [123]. In other words,

    by applying differential privacy, observers cannot tell from its output if any
    particular piece of

    information has been used [123]. Du et al. [124] propose two AI-based algorithms
    that satisfy

    differential privacy: objective perturbation algorithm and output perturbation
    algorithm. The dif-

    ference between the two is that objective perturbation adds Laplace noise to objective
    functions,

    while output perturbation adds the noise to outputs. By injecting Laplace noise,
    ML algorithms

    show better efficiency and accuracy in prediction, and they are more effective
    in protecting the

    privacy of training data used in EC. Similarly, a deep reasoning framework based
    on differential

    privacy, called EdgeSanitizer, is proposed in Reference [125]. The framework uses
    as much useful

    information as possible with a DL-based data minimization method. Then it removes
    as much sen-

    sitive private information as possible from data sets by adding random noise to
    the original data

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:20

    H. Hua et al.

    through a local differential privacy method [126]. This approach ensures that
    the data is used to

    the maximum extent while protecting the privacy in EC.

    3.3.5

    Resource Allocation Optimization. DRL has been proven to be capable of handling
    dy-

    namic decision problems with high-dimensional states and action spaces [127].
    At present, some

    studies have focused on DRL to solve the resource allocation problem in EC.

    The method in Reference [77] captures the fact that the EC environment state is
    constantly

    changing. The information about wireless channel conditions, each node’s trust
    value, the con-

    tents in the cache, and the vacant computational capacity is passed to the DNN
    to estimate the

    Q-function. The network operator’s revenue is regarded as the reward, and the
    agent trains the

    DNN through the obtained reward. It avoids local convergence by adjusting the
    learning rate. Al-

    though this method has a good effect, there is still room for improvement in convergence
    and

    performance.

    Although the study above proves that DQN has a good performance in optimizing
    dynamic

    decision problems with high-dimensional state space, there are still some limitations
    when solving

    problems based on high-dimensional action space. Therefore, Chen et al. [127]
    propose a new DRL-

    based resource allocation decision framework that makes the following two contributions:

    • The framework uses DNN to train with a self-supervised training process to predict
    the

    resource allocation action, with the training data generated by the Monte Carlo
    tree search

    (MCTS) [128] algorithm;

    • The authors modify the last layer of the traditional DNN used to estimate Q-function,
    so

    that it can support higher-dimensional action space.

    The experiment proves that compared with the method of directly using DQN, this
    method has

    reduced the delay by 51.71%.

    3.4

    Summary

    In this section, we first explain the mutual benefit between AI and EC. Then,
    we introduce AI

    algorithms (especially traditional ML, DL, RL, and DRL) in detail. Finally, from
    the perspectives of

    task scheduling, resource allocation, privacy protection and security, the research
    results of using

    AI algorithms to optimize the performance of EC are reviewed. In the future, considering
    that the

    EC is faced with large-scale computing tasks, it would be very important to combine
    the multi-

    dimensional perspectives of network, computing, power allocation, and task scheduling
    for real-

    time joint optimization. To deal with these complex optimization problems, it
    is a potential research

    direction that uses the model-free method of AI algorithms to learn efficient
    strategies [11].

    4

    APPLICATION OF ARTIFICIAL INTELLIGENCE UNDER EDGE COMPUTING

    In recent years, AI has made many achievements in various fields. Among them,
    smart city, smart

    manufacturing, and the IoV usually have more critical requirements for network
    delay and sta-

    bility than other scenarios such as AR/VR, online gaming, or content distribution.
    Unfortunately,

    traditional cloud computing often fails to guarantee these requirements. Some
    researchers have

    started using EC to provide computing and storage resources on edge. To emphasize
    the advan-

    tages of EC in AI applications, this section will focus on summarizing the research
    results of AI

    applications in smart city, smart manufacturing, and the IoV under the EC framework.

    This section summarize the existing research from the perspective of EC hierarchical
    architec-

    ture. The categorization of EC architecture, together with the corresponding target
    field and AI

    (ML) algorithm, are detailed in Table 2.

    In this article, different EC architectures used in AI applications are summarized
    into three

    categories with detailed explanation and analysis. The three modes are: (a) the
    edge side is only

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:21

    Table 2. Summary of AI Algorithms and Architectures

    Field

    Goal

    DL

    DRL

    RL

    Traditional

    ML

    EC Architecture

    Citation

    √

    (c)

    [131]

    Security of city

    √

    (c)

    [100]

    √

    (c)

    [132]

    √

    (b)

    [133]

    Smart city

    Urban healthcare

    √

    (b)

    [135]

    √

    (c)

    [51]

    √

    (a)

    [49]

    Urban energy

    management

    √

    (a)

    [138]

    √

    (b) & (c)

    [140]

    √

    √

    (a)

    [143]

    Smart

    manufacturing

    √

    (b)

    [50]

    √

    (a)

    [65]

    √

    (b)

    [145]

    √

    (b)

    [61]

    √

    (c)

    [149]

    Internet of Vehicles

    √

    (c)

    [152]

    √

    (c)

    [53]

    √

    √

    (b)

    [153]

    √

    (b)

    [157]

    The EC architectures are defined in Section 4, which can be divided into the following
    three categories. (a) The edge

    side is only responsible for data cleaning, and the cloud is responsible for training
    and reasoning. (b) The cloud is

    responsible for training, while the edge side is responsible for inference. (c)
    Delegate part or all of AI training and

    reasoning tasks to the edge (see Section 3.3.1 and Figure 4 for details).

    responsible for data cleaning, and the cloud is responsible for training and reasoning;
    (b) the cloud

    is responsible for training, while the edge side is responsible for inference;
    (c) part or all of AI

    training and reasoning tasks are delegated to the edge (see Section 3.3.1 and
    Figure 4 for details).

    This section will accordingly summarize the research works (listed in Table 2)
    of AI application

    in many fields under above different EC hierarchical modes to emphasize the advantages
    of EC

    in AI application. Table 2 classifies and summarizes them from the perspective
    of architecture, AI

    algorithm, and target field.

    4.1

    Smart City

    With the explosive growth of urban population and the trend of urbanization, the
    concept of smart

    city has been proposed and attracted widespread attention. Smart city uses smart
    means to reduce

    energy consumption in cities, enhance energy efficiency, ease traffic pressure
    [129], ensure the

    safety of cities and residents, and improve the quality of life of residents.
    In the smart city environ-

    ment, there are a large number of hardware devices that generate data all the
    time. These devices

    include light smart devices for daily life (such as smart phones, smart bracelets,
    and portable medi-

    cal devices), as well as surveillance cameras and various environmental detection
    sensors for urban

    security. AI is a good choice for smart city to improve the accuracy and efficacy
    of data analysis

    because of its proficiency in dealing with massive data [130].

    In a population- and equipment-intensive area like a city, smart city has stricter
    requirements on

    real-time response and network stability to ensure the comfort and security of
    civil life in the city.

    However, the intensive computing tasks of AI training and reasoning pose a great
    challenge to the

    above requirements. To meet this challenge, some researchers have turned their
    attention to EC.

    We will subsequently describe in detail the schemes of using AI algorithms under
    EC architecture

    to deal with the problems in smart city scenarios.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:22

    H. Hua et al.

    4.1.1

    Security of City. Smart cities need to continuously monitor the infrastructure
    and opera-

    tion of the city, and they need to make quick judgments and respond quickly to
    security incidents.

    Integrating AI algorithms can improve the accuracy of security event identification.
    However, the

    network bandwidth is limited, and excessive data transmission will cause instability
    in network

    transmission. How to deal with massive data is therefore a very difficult problem
    for real-time

    monitoring systems. EC performs most of the data processing and analysis tasks
    on the edge and

    transmits only part of the data to the cloud. This can greatly reduce the network
    transmission pres-

    sure caused by massive monitoring data while improving the response speed of the
    application.

    To ensure the safety of urban residents in public places or private places, a
    series of monitoring

    systems (e.g., traffic monitoring, indoor and outdoor monitoring, facility monitoring,
    violence and

    crime detection) need to be widely deployed to analyze and tackle the surrounding
    environment

    in real time. In urban monitoring, for instance, person re-identification is an
    important part to

    ensure the safety of residents. A new Siamese network architecture for person
    re-identification

    is proposed in Reference [131]. This architecture speeds up the retrieval of pedestrians
    by intro-

    ducing EC. Considering that traditional methods may learn poorly and inefficiently
    due to the low

    resolution of images, together with the limited computing power on the edge side,
    the architecture

    introduces a residual model layer that can mine deep features and reduce the complexity
    of the

    global average pooling layer.

    Utilizing the distributed characteristics of EC and the geo-distribution characteristics
    of monitor-

    ing data, it is a good idea to apply different AI algorithms to EC in a distributed
    way. A monitoring

    system based on distributed deep learning model is mentioned in Reference [100].
    By introducing

    EC, the system reduces the cost of communication and improves response speed.
    This article uses

    the distributed characteristics of the edge side to deploy a distributed DL training
    method based on

    task-level and model-level parallel training. The goal is to speed up the training
    of the sub-model by

    taking advantage of different learning models while also using the computing power
    of edge nodes.

    In contrast, Tang et al. [132] adopt the idea of configuring different AI algorithms
    in the edge and

    the cloud. The proposed general-purpose EC architecture for urban pipeline monitoring
    systems

    takes advantage of the low latency of edge nodes so that pipeline faults can be
    discovered in

    time, and response decisions can be made quickly. The architecture consists of
    four layers, and the

    architecture deploys different AI algorithms and control strategies in different
    layers to achieve

    low latency, low energy consumption, and high accuracy for smart pipeline monitoring
    to ensure

    the safety of pipelines in cities.

    Challenges. In the process of protecting urban security, data privacy and security
    are also crucial.

    AI is an effective method of identifying malicious attacks and preventing privacy
    leakage, but the

    computing resources of edge devices are limited. Therefore, it is still a major
    challenge to design

    lightweight and effective AI algorithms suitable for EC [131].

    4.1.2

    Urban Healthcare. With the popularity of IoT and cloud computing, more and more

    personal medical devices are being used in daily life. These devices can collect
    users’ physical

    data and upload the data to a cloud server. Through AI analysis, these data can
    greatly improve

    the accuracy of medical systems for disease classification and diagnosis. However,
    this model of

    cloud computing cannot really meet the requirements of telemedicine for time delay
    and data

    transmission.

    Compared with traditional cloud computing, the application of EC meets the requirements
    of

    medical system for stable data transmission, transmission delay, and data security.
    In some emer-

    gency situations, for example, just the occurrence of errors such as long response
    time or data loss

    may directly threaten human life. Besides, EC has strong location awareness characteristics
    [33].

    The higher processing speed of EC becomes a critical factor for location-sensitive
    medical systems.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:23

    Next, we will summarize existing urban medical and residents’ health works that
    use EC to

    improve AI algorithms in terms of remote diagnosis and early warning of diseases,
    infectious

    disease prevention and control, and smart assessment.

    Remote diagnosis and early warning. Muhammad et al. [133] propose a voice disorder
    assessment

    and treatment system. The sound data collected by the system is pre-processed
    by edge devices

    before being uploaded to the cloud. The system configures the CNN model to the
    edge server, so

    that the edge side has the capability of voice disorder detection and classification.
    Compared with

    the method without EC architecture in Reference [134], this method has lower latency
    and can

    effectively reduce the pressure on network bandwidth. However, this system still
    needs to send

    the diagnosis to a human expert, and the human expert decides the treatment plan.

    For some diseases that are not easy to detect at an early stage and those that
    can be best treated

    in the early stages of the disease (e.g., lung cancer), the patient’s survival
    can be significantly

    extended if a patient is diagnosed and treated early in the disease [135]. To
    improve the early

    diagnosis rate and accuracy of lung cancer, a lung cancer diagnosis system based
    on EC and AI is

    proposed in Reference [135]. This system can not only improve the early accuracy
    of lung cancer

    but also improve the efficiency and security of diagnosis. In the future, how
    to combine EC and

    AI algorithms to diagnose diseases and generate corresponding treatment plans
    without a human

    doctor is a valuable research direction.

    Infectious disease prevention and control. The use of EC’s powerful location awareness
    feature

    can effectively strengthen the prevention and control of infectious diseases.
    The healthcare frame-

    work proposed in Reference [51] can diagnose whether a user has been infected
    by Kyasanur

    forest disease and can map out areas where infectious diseases are likely to occur
    on the map. The

    network edge near the data source in this structure is responsible for data preprocessing,
    model

    training and reasoning. To more accurately identify infected people and outbreak-prone
    areas, this

    layer incorporates a classifier called EO-NN, which combines hybridization of
    the extremal op-

    timization (EO) and the neural networks (NN). Once a new infected person is detected,
    it will

    inform the infected person and nearby hospitals immediately. With the distributed
    nature of EC,

    the system has the ability to identify areas prone to infectious diseases.

    Smart assessment. Residents’ daily dietary structure management is also an important
    part of

    urban medical care, which also plays an important role in the prevention of diseases.
    Based on

    food image recognition, Liu et al. [49] propose a dietary assessment system under
    an EC architec-

    ture. The edge layer between end users and the cloud can minimize the response
    time and energy

    consumption, and the CNN algorithm can improve the accuracy of recognition. Compared
    to the

    previous system in Reference [136], which is only suitable for small data computing
    tasks, this

    system has the ability to perform large-scale data computing tasks.

    Challenges. Medical diagnosis needs accurate judgment, which requires AI algorithms
    to extract

    all useful information from big data. However, the useful information that can
    be obtained by

    existing algorithms is rather limited. For supervised learning, manual labeling
    of data may also

    lead to unknown mistakes. In addition, the data acquisition system of smart medical
    in the future

    will be mainly deployed on wearable devices. To quickly analyze and respond to
    the collected data,

    it is also an important direction to deploy AI model to these wearable devices
    [136], which poses

    a great challenge to the energy supply of devices. How to balance the accuracy
    and lightweight of

    AI models is a direction worthy of studying [137].

    4.1.3

    Urban Energy Management. The trend of urbanization is also prompting the rapid
    in-

    crease of energy consumption in cities. This poses many challenges for urban energy
    management.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:24

    H. Hua et al.

    Fig. 5. A typical structure of smart energy management in smart city [140]. The
    architecture mainly includes

    three parts: (1) cloud with central control capability and powerful computing
    resources; (2) edge severs with

    local energy control through data analysis; (3) energy devices deployed at the
    terminal, including users,

    energy-producing and energy-consuming equipment, sensors, and so on.

    For example, to meet the city’s demand for energy, energy companies need to produce
    excess elec-

    tricity to ensure continuous energy supply to the city. This leads to a certain
    degree of waste of

    energy [138]. In the era of big data, a large number of sensors deployed in various
    corners of the

    city can obtain data related to energy consumption in real time. These data include
    population

    density, electricity usage, and a wealth of environmental information that helps
    predict energy

    consumption and energy management. In addition, applying AI algorithm to energy
    management

    has greater advantages than traditional methods [139]. Under these conditions,
    the introduction

    of EC and AI can make energy consumption prediction and energy management faster
    and more

    accurate. A typical EC-based smart city energy management architecture is shown
    in Figure 5.

    Real-time energy management decisions require dynamic predictions of energy consumption.

    However, the complexity and diversity of energy data and the dynamic nature of
    IoT data make

    it rather difficult to build an effective energy prediction system. In response
    to this problem, Liu

    et al. [140] design an EC-based energy management framework for reducing energy
    consumption

    in cities. Under this framework, the authors propose two DRL-based energy scheduling
    strategies:

    • Edge DRL: model training and reasoning tasks are executed on the edge;

    • Cooperative DRL: model training tasks are executed in the cloud, and dynamic
    energy man-

    agement is implemented on the edge side based on models obtained from the cloud.

    The authors prove by experiment that cloud-edge collaboration works best in terms
    of energy

    consumption, followed by the method of deploying AI algorithms only on the edge
    side, and the

    worst is the method of deploying AI algorithms only on the cloud [138]. This also
    indicates that EC

    is not a substitute for cloud computing, and the relationship between the two
    should be synergistic

    and complementary.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:25

    Challenges. The rapid growth of the number of edge devices deployed to cities
    has exacerbated

    the global energy crisis and global warming. One way to alleviate this problem
    is to use renewable

    energy to power edge devices. Considering that edge devices are scattered in different
    locations of

    the city, the energy consumption of traditional energy can be greatly reduced
    by using distributed

    renewable energy generation devices. However, this solution still faces many challenges,
    such as

    how to minimize the consumption of traditional energy while ensuring the normal
    operation of

    edge devices, and how to establish a complementary power system for different
    edge devices [140].

    As a control center in EI system, energy router needs certain computing power
    [141, 142]. There-

    fore, it is also a feasible idea to combine energy router with EC in future research.

    4.2

    Smart Manufacturing

    Introducing EC and AI in industrial production can maximize the use of hardware
    devices and

    the use of distributed computing and storage resources. The combination of the
    two also achieves

    efficient and secure resource management and task distribution, thereby greatly
    improving the

    plant’s production efficiency, production quality and plant safety [143, 144].

    Dynamic control. To improve the automation and intelligence of the real-time production
    con-

    trol process, the authors of Reference [143] propose an intelligent robot factory
    system architecture

    called iRobot-Factory. With the assistance of EC, the architecture can dynamically
    adjust the con-

    figuration of the production line, collect and process a variety of data generated
    in the factory in

    real time, and identify and judge by AI means to achieve more efficient feedback
    control. The archi-

    tecture shows great advantages over the traditional factory using cloud computing
    with respect

    to network communication time delay and recognition rate. Different devices in
    the factory need

    to cooperate with each other through groups to achieve swarm intelligence, not
    just each device

    operating independently. To realize swarm intelligence, how to use AI and EC technology
    in smart

    factory is a new challenge.

    Equipment monitoring. In terms of industrial production site safety, it is essential
    to monitor

    the operating status of the machinery in the factory, since the quality issue
    of the machinery

    will inevitably arise during long-term work. To detect the running status of the
    machine, Wu

    et al. [50] propose an EC framework that includes a device layer, a local private
    edge cloud near

    the device layer, and a remote public cloud. The framework uses powerful public
    cloud to train

    the predictive model and then delegates the model to private edge cloud where
    online diagnostic

    and prognosis tasks are performed. This reduces the delay to a certain extent
    and enhances the

    accuracy of diagnosis and prognosis.

    To better monitor and manage the equipment in the factory, it is important to
    clarify the type

    and quantity of onsite equipment. In response to the high cost of manual classification
    methods,

    a non-intrusive load monitoring system is proposed based on EC and LSTM [65].
    In the system

    architecture, the edge is responsible for data cleaning and feature selection,
    while the cloud with

    the LSTM algorithm deployed analyzes power features uploaded by edge devices to
    classify and

    count field devices.

    Defective product detection. In addition to ensuring the safety of factory equipment,
    some re-

    searchers have also turned their attention to monitor the quality of products
    more accurately and

    efficiently. Li et al. [145] build a DL-based product quality classification system
    for production

    quality monitoring, so that products with quality defects can be quickly detected
    on the edge side.

    The system deploys lower-level CNN layers at edge layers to capture defective
    products that are

    more easily to identify and high-level CNN in the cloud to capture defective products
    that are dif-

    ficult to identify with edge layers. This design improves the efficiency and accuracy
    of identifying

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:26

    H. Hua et al.

    defective products, on the one hand, and it also reduces the network transmission
    cost, on the

    other hand.

    Microseismic monitoring. In oil and gas production, the low signal-to-noise ratio
    and the need

    for real-time data transmission bring challenges in high-precision microseismic
    monitoring. Zhang

    et al. [61] design a neural network-based EC architecture called Edge-to-Center
    LearnReduce Mi-

    croseismic Monitoring Platform under the environment of oil and gas production.
    The platform

    uses EC architecture with a new microseismic events detection algorithm based
    on LSTM, and

    CNN is deployed in the data center (i.e., the cloud). The model obtained through
    data training in

    the cloud will be delegated to each edge device, so that the edge device has the
    ability to recognize

    microseismic events. The real-time performance is improved by analyzing and processing
    data on

    the edge side that can get detection results faster and take corresponding actions.
    However, the

    data generated will first be processed by the edge device to extract useful information
    for the data

    center. This greatly reduces the volume of the data that need to transfer to the
    data center, so the

    platform can effectively improve transmission efficiency and reduce network transmission
    pres-

    sure. Experiments have shown that this monitoring platform combining neural network
    and EC

    can achieve an accuracy rate of more than 96% and improve the data transmission
    efficiency by

    about 90%.

    4.3

    Internet of Vehicles

    IoV is currently a hot academic and commercial field, and it is a key step for
    humans to move

    towards an intelligent life in the future [147]. IoV can ease traffic congestion,
    reduce traffic acci-

    dents caused by improper driving, and improve passenger experience [99]. Abundant
    in-vehicle

    applications, road condition sensors, and intelligent systems bring a very convenient,
    comfortable,

    and safe riding experience for people traveling.

    Although traditional cloud computing is currently the mainstream solution to the
    challenges

    brought by the increasing number of applications and data, it cannot meet the
    requirements of IoV

    (e.g., stable networks and low latency), due to the limitations of cloud computing
    itself. Using EC

    can effectively make up for the limitations of cloud computing [148]. IoV has
    the characteristics

    of limited resources, such as distributed computing and storage. How to allocate
    limited resources

    and how to schedule tasks are the problems that IoV needs to solve.

    EC and AI can bring faster and more precise control, faster network communication,
    better user

    experience, and more computing resources for traditional vehicular network [149].
    A typical EC-

    based IoV architecture is shown in Figure 6. Today, more and more fields use AI
    as a means to solve

    optimal strategies, and AI algorithms can also be applied to IoV to deal with
    the above problems. We

    will summarize the application of the combination of EC and AI in IoV from three
    perspectives:

    optimizing task offloading and resource allocation in IoV, improving the user
    experience of on-

    board entertainment, and improving vehicle intelligence.

    4.3.1

    Optimizing Task Offloading and Resource Allocation. The rapidly changing network
    struc-

    ture, communication status, and computing load have led to the dynamics and uncertainty
    of task

    offloading [150], making efficient task offloading and resource allocation decisions
    more difficult.

    Feng et al. [148] use the ant colony optimization algorithm with fast convergence
    to solve the

    NP-hard task assignment problem. This method establishes multiple objective functions,
    and uses

    heuristics algorithm for optimization. However, this method is not good at making
    optimal de-

    cisions for offloading multiple data dependency tasks. In response to this problem,
    an EC frame-

    work for obtaining the optimal solution of task offloading through DRL is proposed
    in Reference

    [149]. The framework takes into account data dependencies, as well as resource
    requirements, ve-

    hicle movements, and access networks. It uses the asynchronous advantage actor-critic
    (A3C)

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:27

    Fig. 6. A typical structure of IoV [146]. In this architecture, the edge is composed
    of roadside units with

    certain computing capabilities, so computing tasks on vehicles can be offloaded
    directly to roadside units

    for processing instead of offloading into the distant cloud [146].

    algorithm [151] for the online optimization of task offloading decision to adapt
    to the dynamic

    changes of the vehicular network. Edge nodes will first distribute the trained
    decision model to

    the surrounding vehicles, and then upload the decision model online after vehicles’
    complete learn-

    ing. To improve the performance of resource allocation and management, the prediction
    of wire-

    less channel parameters is a very important means. Liu et al. [152] use LSTM to
    excel in spatio-

    temporal correlation in channel parameters and propose a wireless channel parameter
    prediction

    model based on LSTM and EC to optimize resource allocation and task scheduling
    in vehicular

    network.

    In IoV, energy consumption is a huge obstacle that restricts its development.
    However, the stud-

    ies mentioned above fail to consider the issue of energy consumption while making
    optimal of-

    floading decisions. Yang et al. [53] put forward a joint optimization problem
    consisting of power

    control, user association, and resource allocation to minimize energy consumption
    in IoV. Finally,

    the feasible solution of this problem is obtained by an algorithm based on fuzzy
    c-means clustering

    that allows one data point to join multiple clusters.

    4.3.2

    Improving On-board Experience. The maturity and application of autonomous driving

    technology will bring more free time to passengers and drivers in the future.
    This will increase

    passengers and drivers’ demand for on-board entertainment, such as listening to
    music, watching

    videos, and more [153]. These on-board entertainment activities have extremely
    high requirements

    for network latency, so implementing these computing-intensive applications in
    a connected ve-

    hicle with limited resources is facing great challenges [154]. These challenges
    include how to effi-

    ciently cache network content and how to efficiently schedule tasks and allocate
    resources.

    The traditional content caching method is to cache the current popular content
    in roadside units

    in advance, but this also causes a waste of storage resources. To coordinate passenger
    experience

    and content caching costs, Hou et al. [153] propose a Q-learning-based caching
    strategy under

    the EC architecture. The action of this caching strategy consists of two parts,
    one is the cache

    amount, and the other is the roadside units to which the content is cached. The
    reward of this

    caching strategy is the elapsed time of transmitting the content required by the
    user. In addition,

    this article uses LSTM to predict the driving direction of the vehicle to better
    select roadside units.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:28

    H. Hua et al.

    In contrast, the method of Reference [155] imposes the task of content caching
    on both roadside

    units and vehicles. It uses a collaborative model based on Q-learning vehicles
    and roadside units for

    content caching and computation distribution. This model can make full use of
    the limited storage

    and computing resources of vehicles. In other words, the system will select vehicles
    and roadside

    units to perform the tasks of caching and computing according to the position
    and direction of

    motion of the car requesting the service. If the vehicles and roadside units around
    the car cannot

    meet their requirements, then the cache and calculation tasks will be handed over
    to the base

    station.

    Aiming at the challenges of executing compute-intensive applications on cars with
    limited re-

    sources, Ning et al. [154] first use finite-state Markov chains to model vehicle-to-infrastructure

    communication and computing states and then express the resource allocation and
    task schedul-

    ing strategy as a goal to maximize users’ quality of experience (QoE).

    4.3.3

    Improving Vehicle Intelligence. In addition to the macro-control of resource allocation,
    it

    is also an important research direction to give AI technology to vehicle intelligence
    under the EC

    architecture [156]. For example, Ferdowsi et al. [157] propose an EC architecture
    that integrates

    DL to handle complex vehicle and traffic information. The architecture enables
    functions such as

    vehicle automatic control and driving route analysis. This architecture uses different
    DL algorithms

    according to the characteristics of different problems:

    • Restricted Boltzmann machines are used to process complex data in intelligent
    transporta-

    tion systems (ITS);

    • CNN and LSTM are used to perform real-time analysis of road conditions;

    • Bi-RNN is used to predict driver behavior;

    • LSTM is used to ensure data transmission security.

    The increasing number of vehicles aggravates the problem of traffic jam. Traffic
    scheduling is a

    very effective way to deal with this problem. However, due to the large number
    of vehicles and

    the scale of road network, the number of routes that vehicles can choose increases
    exponentially.

    Therefore, it is not feasible to use centralized controller for route planning.
    Based on this problem,

    a distributed cooperative routing algorithm based on evolutionary game theory
    is proposed in

    Reference [158]. Each edge node deploys a roadside unit (RSU), in which normal
    RSU is respon-

    sible for collecting traffic information, and game RSU controls nearby vehicles
    through proposed

    evolutionary game strategy.

    4.3.4

    Challenges. The combination of EC and IoV improves the response speed of vehicle
    sched-

    uling and control, which further promotes the vehicle intelligence. However, there
    are still some

    challenges [159]. For example, when the vehicle is moving at a high speed, its
    communication

    connection needs to be switched between different edge servers, which may lead
    to a series of

    problems, such as disconnection or the degradation of user experience. In addition,
    one of the

    cores of IoV systems is resource sharing between different vehicles. As a result,
    how to set a rea-

    sonable incentive mechanism to encourage participants to share resources is vital.
    Finally, resource

    sharing will also bring some data privacy and security issues [160].

    4.4

    Summary

    Table 2 summarizes the research works of combining EC with three different AI
    application sce-

    narios. Apparently, these works adopt different AI algorithms and EC architectures
    in different

    scenarios according to their respective requirements for response speed, privacy,
    and so on, to

    maximize the performance of the AI models.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:29

    In essence, offloading all or part of the computing process of AI algorithms to
    the edge of the

    network is nevertheless to transfer AI computing tasks from a resource intensive
    environment to

    a resource limited environment [6]. Therefore, how to lighten AI models so that
    they can work

    efficiently at the edge of the network with limited computing, energy, and other
    resources needs

    further exploration [164]. In addition, an AI application often needs to collect
    data from different

    edge nodes, which poses a great threat to user privacy. Federated learning, as
    a very popular and

    potential research direction [96] can enable participants to learn jointly without
    sharing data. In

    recent years, the blockchain technology has been widely applied in many fields
    to establish mutual

    trust among participants in an open and distributed way [162, 165]. Incorporating
    blockchain to

    tackle the challenges of combined systems of AI and EC mentioned in this section
    is also a direction

    worthy of further exploration.

    5

    CONCLUSION

    EC is a very promising new computing paradigm to make up for the shortcomings
    of existing

    cloud computing, while AI is a very popular field in both academia and industry.
    By summarizing

    the existing research results on the combination of AI and EC, we come to two
    conclusions. On the

    one hand, AI can further improve and optimize the performance of EC, because traditional
    non-AI

    methods have limitations in dealing with the complicated and dynamic environment
    in EC. On

    the other hand, EC can bring faster response time and more stable network status
    to the practical

    application of AI.

    Although the research on combining AI and EC has made a lot of progress, there
    are still prob-

    lems to be solved. For example, in the first aspect mentioned above, the complexity,
    dynamics,

    and high dimensions of the EC process make accurate modeling rather difficult.
    Therefore, it is

    an important research direction to design and adopt model-free methods to obtain
    efficient strate-

    gies [94]. In addition, for the second aspect, the key to deploying AI to the
    edge of the network

    is how to enhance the efficiency of AI algorithms with limited computing and energy
    resources,

    which requires further research and design of lightweight AI models [6, 164].

    In summary, we hope that researchers will understand the importance of combining
    AI and EC

    and the mutually beneficial relationship between them through this article. We
    believe that there

    should be more academic research focusing on enabling EC to have higher computing
    offloading,

    privacy, and security performance and to enable wider use of AI. In the future,
    we plan to explore

    more research fields that combine the two, for example, distributed training and
    reasoning in the

    setting of EC.

    REFERENCES

    [1] A. U. R. Khan, M. Othman, S. A. Madani, and S. U. Khan. 2014. A survey of
    mobile cloud computing application

    models. IEEE Commun. Surv. Tutor. 16, 1 (2014), 393–413.

    [2] F. Durao, F. Carvalho, A. Fonseka, and V. C. Garcia. 2014. A systematic review
    on cloud computing. J. Supercomput.

    68, 3 (2014), 1321–1346.

    [3] W. Shi and S. Dustdar. 2016. The promise of edge computing. Computer 49, 5
    (2016), 78–81.

    [4] M. Qin, L. Chen, N. Zhao, Y. Chen, F. R. Yu, and G. Wei. 2018. Power-constrained
    edge computing with maximum

    processing capacity for IoT networks. IEEE Internet Things J. 6, 3 (2018), 4330–4343.

    [5] A. M. Ghosh and K. Grolinger. 2021. Edge-cloud computing for internet of things
    data analytics: Embedding intelli-

    gence in the edge with deep learning. IEEE Trans. Ind. Inform. 17, 3 (2021), 2191–2200.

    [6] P. Zhou, W. Chen, S. Ji, H. Jiang, L. Yu, and D. Wu. 2019. Privacy-preserving
    online task allocation in edge-computing-

    enabled massive crowdsensing. IEEE Internet Things J. 6, 5 (2019), 7773–7787.

    [7] E. I. Gaura et al. 2013. Edge mining the internet of things. IEEE Sens. J
    13, 10 (2013), 3816–3825.

    [8] Z. Xu et al. 2020. Artificial intelligence for securing IoT services in edge
    computing: A survey. Secur. Commun. Netw.

    2020 (2020), 1–13.

    [9] C. Savaglio and G. Fortino. 2021. A simulation-driven methodology for IoT
    data mining based on edge computing.

    ACM Trans. Internet. Techn. 21, 2 (2021), 1–22.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:30

    H. Hua et al.

    [10] L. Lei, H. Xu, X. Xiong, K. Zheng, W. Xiang, and X. Wang. 2019. Multiuser
    resource control with deep reinforcement

    learning in IoT edge computing. IEEE Internet Things J. 6, 6 (2019), 10119–10133.

    [11] Z. Zhou, X. Chen, E. Li, L. Zeng, K. Luo, and J. Zhang. 2019. Edge intelligence:
    Paving the last mile of artificial

    intelligence with edge computing. Proc. IEEE 107, 8 (2019), 1738–1762.

    [12] M. Miranda, C. Cristina, and S. Sebastiá. 2020. Deep learning at the mobile
    edge: Opportunities for 5G networks.

    Appl. Sci. 10, 14 (2020), 4735.

    [13] F. Wang, M. Zhang, X. Wang, X. Ma , and J. Liu. 2020. Deep learning for edge
    computing applications: A state-of-the-

    art survey. IEEE Access 8 (2020), 58322–58336.

    [14] J. Chen and X. Ran. 2019. Deep learning with edge computing: A review. Proc.
    IEEE 107, 8 (2019), 1655–1674.

    [15] X. Wang, Y. Han, V. C. M. Leung, D. Niyato, X. Yan, and X. Chen. 2020. Convergence
    of edge computing and deep

    learning: A comprehensive survey. IEEE Commun. Surv. Tut. 22, 2 (2020), 869–904.

    [16] Y. Shi, K. Yang, T. Jiang, J. Zhang, and K. B. Letaief. 2019. Communication-efficient
    edge AI: Algorithms and systems.

    IEEE Commun. Surv. Tut. 22, 4 (2020), 2167–2191.

    [17] J. Gubbi, R. Buyya, S. Marusic, and M. Palaniswami. 2013. Internet of things
    (IoT): A vision, architectural elements,

    and future directions. Future Gener. Comp. Syst. 29, 7 (2013), 1645–1660.

    [18] D. Reinsel, J. Gantz, and J. Rydning. 2018. Data age 2025. The Digitization
    of the World: From Edge to Core. IDC White

    Paper # US44413318.

    [19] M. Marjani, F. Nasaruddin, A. Gani, I. Abaker, T. Hashem, A. Siddiqa, and
    I. Yaqoob. 2017. Big IoT data analytics:

    Architecture, opportunities, and open research challenges. IEEE Access 5 (2017),
    5247–5261.

    [20] Index, Cisco Global Cloud. Forecast and Methodology, 2016–2021 White Paper.
    Updated: February 1, 2018.

    [21] J. Zhang, B. Chen, Y. Zhao, X. Cheng, and F. Hu. 2018. Data security and
    privacy-preserving in edge computing

    paradigm: Survey and open issues. IEEE Access 6 (2018), 18209–18237.

    [22] S. Sukhmani, M. Sadeghi, M. Erol-Kantarci, and A. E. Saddik. 2019. Edge caching
    and computing in 5G for mobile

    AR/VR and tactile internet. IEEE MultiMedia 26, 1 (2019), 21–30.

    [23] H. Cai, B. Xu, L. Jiang, and A. V. Vasilakos. 2017. IoT-based big data storage
    systems in cloud computing: perspectives

    and challenges. IEEE Internet Things J. 4, 1 (2017), 75–87.

    [24] M. B. Mollah, M. A. K. Azad, and A. Vasilakos. 2017. Security and privacy
    challenges in mobile cloud computing:

    Survey and way ahead. J. Netw. Comput. Appl. 84 (2017), 38–54.

    [25] Content Delivery Network. Retrieved from https://www.akamai.com/us/en/resources/content-delivery-network.

    jsp.

    [26] M. Satyanarayanan. 2017. The emergence of edge computing. Computer 50, 1
    (2017), 30–39.

    [27] Brian E. Whitaker. 2019. Cloud edge computing: Beyond the data center. Retrieved
    from https://www.openstack.org/

    edge-computing/cloud-edge-computing-beyond-the-data-center/.

    [28] W. Shi, J. Cao, Q. Zhang, Y. Li, and L. Xu. 2016. Edge computing: Vision
    and challenges. IEEE Internet Things J. 3, 5

    (2016), 637–646.

    [29] R. Yang, F. Yu, P. Si, Z. Yang, and Y. Zhang. 2019. Integrated blockchain
    and edge computing systems: A survey, some

    research issues and challenges. IEEE Commun. Surv. Tutor. 21, 2 (2019), 1508–1532.

    [30] L. Huang, X. Feng, A. Feng, Y. Huang, and L. Qian. 2018. Distributed deep
    learning-based offloading for mobile edge

    computing networks. Mobile Netw. Appl. (2018), 1–1. DOI:10.1007/s11036-018-1177-x

    [31] Z. Ali, L. Jiao, T. Baker, G. Abbas, Z. H. Abbas, and S. Khaf. 2019. A deep
    learning approach for energy efficient

    computational offloading in mobile edge computing. IEEE Access 7 (2019), 149623–149633.

    [32] M. Yahuza, M. Idris, A. Wahid, A. T. S. Ho, S. Khan, N. Musa, and A. Taha.
    2020. Systematic review on security and

    privacy requirements in edge computing: State of the art and future research opportunities.
    IEEE Access 8 (2020),

    76541–76567.

    [33] D. Liu, Z. Yan, W. Ding, and M. Atiquzzaman. 2019. A survey on secure data
    analytics in edge computing. IEEE

    Internet Things J. 6, 3 (2019), 4946–4967.

    [34] G. Wang, X. Yang, W. Cai, and Y. Zhang. 2021. Event-triggered online energy
    flow control strategy for regional

    integrated energy system using Lyapunov optimization. Int. J. Elec. Power 125,
    3 (2021), 106451.

    [35] L. Chen, S. Zhou, and J. Xu. 2018. Computation peer offloading for energy-constrained
    mobile edge computing in

    small-cell networks. IEEE ACM Trans. Netw. 26, 4 (2018), 1619–1632.

    [36] C. Liu, M. Bennis, M. Debbah, and H. V. Poor. 2019. Dynamic task offloading
    and resource allocation for ultra-reliable

    low-latency edge computing. IEEE Trans. Commun. 67, 6 (2019), 4132–4150.

    [37] Y. Chiang, T. Zhang, and Y. Ji. 2019. Joint cotask-aware offloading and scheduling
    in mobile edge computing systems.

    IEEE Access 7 (2019), 105008–105018.

    [38] M. Chen and Y. Hao. 2018. Task offloading for mobile edge computing in software
    defined ultra-dense network. IEEE

    J. Select. Areas Commun. 36, 3 (2018), 587–597.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:31

    [39] Z. Ning, P. Dong, X. Kong, and F. Xia. 2019. A cooperative partial computation
    offloading scheme for mobile edge

    computing enabled internet of things. IEEE Internet Things J. 6, 3 (2019), 4804–4814.

    [40] J. Du, L. Zhao, J. Feng, and X. Chu. 2018. Computation offloading and resource
    allocation in mixed fog/cloud com-

    puting systems with min-max fairness guarantee. IEEE Trans. Commun. 66, 4 (2018),
    1594–1608.

    [41] Y. Wang, X. Tao, X. Zhang, P. Zhang, and Y. H. Hou. 2019. Cooperative task
    offloading in three-tier mobile computing

    networks: An ADMM framework. IEEE Trans. Veh. Technol. 68, 3 (2019), 2763–2776.

    [42] Z. Zheng, L. Song, Z. Han, G. Y. Li, and H. V. Poor. 2018. A stackelberg
    game approach to proactive caching in

    large-scale mobile edge networks. IEEE Trans. Wirel. Commun. 17, 8 (2018), 5198–5211.

    [43] W. Jing, Q. Miao, H. Song, and X. Chen. 2019. Data loss and reconstruction
    of location differential privacy protection

    based on edge computing. IEEE Access 7, (2019), 75890–75900.

    [44] J. Kang, R. Yu, X. Huang, M. Wu, S. Maharjan, S. Xie, and Y. Zhang. 2019.
    Blockchain for secure and efficient data

    sharing in vehicular edge computing and networks. IEEE Internet Things J. 3, 6
    (2019), 4660–4670.

    [45] Q. Wang, D. Chen, N. Zhang, Z. Ding, and Z. Qin. 2017. PCP: A privacy-preserving
    content-based publish-subscribe

    scheme with differential privacy in fog computing. IEEE Access 5 (2017), 17962–17974.

    [46] Y. Qiao, Z. Liu, H. Lv, M. Li, Z. Huang, Z. Li, and W. Liu. 2019. An effective
    data privacy protection algorithm based

    on differential privacy in edge computing. IEEE Access 7 (2019), 136203–136213.

    [47] M. S. Hossain, G. Muhammad, and S. U. Amin. 2018. Improving consumer satisfaction
    in smart cities using edge

    computing and caching: A case study of date fruits classification. Future Gener.
    Comp. Syst. 88 (2018), 333–341.

    [48] F. Samie, L. Bauer, and J. Henkel. 2019. From cloud down to things: An overview
    of machine learning in internet of

    things. IEEE Internet Things J. 6, 3 (2019), 4921–4934.

    [49] C. Liu, Y. Cao, L. Yan, G. Chen, and H. Peng. 2018. A new deep learning-based
    food recognition system for dietary

    assessment on an edge computing service infrastructure. IEEE Trans. Serv. Comput.
    11 (2019), 249–261.

    [50] D. Wu, S. Liu, L. Zhang, J. Terpenny, R. Gao, T. Kurfess, and J. Guzzo. 2017.
    A fog computing-based framework for

    process monitoring and prognosis in cyber-manufacturing. J. Manuf. Syst. 43 (2017),
    25–34.

    [51] M. Abhishek, D. Tapas, et al. 2018. Kyasanur forest disease classification
    framework using novel extremal optimiza-

    tion tuned neural network in fog computing environment. J. Med. Syst 42, 10 (2018),
    187.

    [52] S. Deng, H. Zhao, W. Fang, J. Yin, S. Dustdar, and A. Y. Zomaya. 2020. Edge
    intelligence: The confluence of edge

    computing and artificial intelligence. IEEE Internet Things J. 7, 8 (2020), 7457–7469.

    [53] Z. Yang, C. Pan, K. Wang, and M. Shikh-Bahaei. 2019. Energy efficient resource
    allocation in UAV-enabled mobile

    edge computing networks. IEEE Trans. Wirel. Commun. 18, 9 (2019), 4576–4589.

    [54] N. Kiran, C. Pan, S. Wang, and C. Yin. 2020. Joint resource allocation and
    computation offloading in mobile edge

    computing for SDN based wireless networks. J. Commun. Netw. 22, 1 (2020), 1–11.
    DOI:10.1109/JCN.2019.000046

    [55] Y. Guo, S. Wang, A. Zhou, J. Xu, J. Yuan, and C. Hsu. 2019. User allocation-aware
    edge cloud placement in mobile

    edge computing. Software Pract. Exper. 50, 10 (2019), 489–502.

    [56] A. Abeshu and N. Chilamkurti. 2018. Deep learning: The frontier for distributed
    attack detection in fog-to-things

    computing. IEEE Commun. Mag. 56, 2 (2018), 169–175.

    [57] Y. LeCun and Y. Bengio. 2015. Deep learning. Nature 521, 7553 (2015), 436–444.

    [58] D. L. Elliot. 1993. A Better Activation Function for Artificial Neural Networks.
    University of Maryland, Systems Research

    Center.

    [59] H. Li, K. Ota, and M. Dong. 2018. Learning IoT in edge: Deep learning for
    the internet of things with edge computing.

    IEEE Netw. 32, 1 (2018), 96–101.

    [60] P. Monkam, S. Qi, H. Ma, W. Gao, Y. Yao, and W. Qian. 2019. Detection and
    classification of pulmonary nodules using

    convolutional neural networks: A survey. IEEE Access 7 (2019), 78075–78091.

    [61] X. Zhang, J. Lin, et al. 2018. An efficient neural-network-based microseismic
    monitoring platform for hydraulic

    fracture on an edge computing architecture. Sensors 18, 6 (2018), 1828.

    [62] S. Hochreiter and J. Schmidhuber. 1997. Long short-term memory. Neural Comput.
    9, 8 (1997), 1735–1780.

    [63] A. Diro and N. Chilamkurti. 2016. Leveraging LSTM networks for attack detection
    in fog-to-things communications.

    IEEE Commun. Mag. 56, 9 (2016), 124–130.

    [64] D. Park, S. Kim, Y. An, and J. Jung. 2018. iReD: A light-weight real-time
    fault detection system for edge computing

    using LSTM recurrent neural networks. Sensors 18 (2018), 2110–2124.

    [65] C. Lai, W. Chen, L. Yang, and W. Qiang. 2019. LSTM and edge computing for
    big data feature recognition of industrial

    electrical equipment. IEEE Trans. Ind. Inform. 15 (2019), 2469–2477.

    [66] B. Hussain, Q. Du, S. Zhang, A. Imran, and M. A. Imran. 2019. Mobile edge
    computing-based data-driven deep learning

    framework for anomaly detection. IEEE Access 7 (2019), 137656–137667.

    [67] R. Dong, C. She, W. Hardjawana, Y. Li, and B. Vucetic. 2019. Deep learning
    for hybrid 5G services in mobile edge

    computing systems: Learn from a digital twin. IEEE Trans. Wirel. Commun. 18, 10
    (2019), 4692–4707.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:32

    H. Hua et al.

    [68] S. A. Osia, A. S. Shamsabadi, A. Taheri, H. R. Rabiee, and H. Haddadi. 2018.
    Private and scalable personal data analytics

    using hybrid edge-to-cloud deep learning. Computer 51, 5 (2018), 42–49.

    [69] Y. Wang, K. Wang, H. Huang, T. Miyazaki, and S. Guo. 2019. Traffic and computation
    co-offloading with reinforcement

    learning in fog computing for industrial applications. IEEE Trans. Ind. Inf. 15,
    2 (2019), 976–986.

    [70] S. Conti, G. Faraci, R. Nicolosi, S. A. Rizzo, and G. Schembra. 2017. Battery
    management in a green fog-computing

    node: A reinforcement-learning approach. IEEE Access 5 (2017), 21126–21138.

    [71] X. Zhao, G. Huang, L. Gao, and M. Li. 2021. Low load DIDS task scheduling
    based on Q-learning in edge computing

    environment. J. Netw. Comput. Appl. 188, 1 (2021), 103095.

    [72] B. Guo, X. Zhang, Y. Wang, and H. Yang. 2019. Deep-Q-network-based multimedia
    multi-service QoS optimization

    for mobile edge computing systems. IEEE Access 7 (2019), 160961–160972.

    [73] V. Mnih, K. Kavukcuoglu, et al. 2015. Human-level control through deep reinforcement
    learning. Nature 518, 7540

    (2015), 529–533.

    [74] F. Xu, F. Yang, S. Bao, and C. Zhao. 2019. DQN inspired joint computing and
    caching resource allocation approach

    for software defined information-centric internet of things network. IEEE Access
    7 (2019), 61987–61996.

    [75] D. Zeng, L. Gu, S. Pan, J. Cai, and S. Guo. 2019. Resource management at
    the network edge: A deep reinforcement

    learning approach. IEEE Netw. 33, 3 (2019), 26–33.

    [76] J. Wang, L. Zhao, J. Liu, and N. Kato. 2019. Smart resource allocation for
    mobile edge computing: A deep reinforcement

    learning approach. IEEE Trans. Emerg. Top. Com. DOI:10.1109/TETC.2019.2902661

    [77] Y. He, F. Yu, Y. He, S. Maharjan, and Y. Zhang. 2019. Secure social networks
    in 5G systems with mobile edge comput-

    ing, caching, and device-to-device communications. IEEE Wirel. Commun. 25, 3 (2019),
    103–109.

    [78] Z. Qin, D. Liu, H. Hua, and J. Cao. 2021. Privacy preserving load control
    of residential microgrid via deep reinforce-

    ment learning. IEEE Trans. Smart Grid 12, 5 (2021), 4079–4089.

    [79] B. McMahan, E. Moore, D. Ramage, S. Hampson, and B. A. Arcas. 2017. Communication-efficient
    learning of deep net-

    works from decentralized data. Proceedings of the 20th International Conference
    on Artificial Intelligence and Statistics

    (AISTATS). Washington, USA. 1273–1282.

    [80] S. Yu, X. Chen, Z. Zhou, X. Gong, and D. Wu. 2021. When deep reinforcement
    learning meets federated learning:

    Intelligent multitimescale resource management for multiaccess edge computing
    in 5G ultradense network. IEEE

    Internet Things J. 8, 4 (2021), 2238–2251.

    [81] X. Lu, Y. Liao, P. Lio, and P. Hui. 2020. Privacy-preserving asynchronous
    federated learning mechanism for edge

    network computing. IEEE Access 8 (2020), 48970–48981.

    [82] J. Zhang, Z. Zhan, Y. Lin, N. Chen, and Y. Gong. 2020. Evolutionary computation
    meets machine learning: A survey.

    IEEE Comput. Intell. Mag. 6, 4 (2020), 68–75.

    [83] Y. Li and S. Wang. 2018. An energy-aware edge server placement algorithm
    in mobile edge computing. In Proceedings

    of the IEEE International Conference on Edge Computing (EDGE’18). IEEE. San Francisco.
    2018, 66–73.

    [84] H. Gao, W. Li, R. Banez, Z. Han, and H. Poor. 2019. Mean field evolutionary
    dynamics in ultra dense mobile edge

    computing systems. In Proceedings of the IEEE Global Communications Conference
    (GLOBECOM). IEEE, 1–6.

    [85] C. Dong and W. Wen. 2019. Joint optimization for task offloading in edge
    computing: An evolutionary game approach.

    Sensors 19, 3 (2019), 740–764.

    [86] Y. Zhan, S. Guo, P. Li, and J. Zhang. 2020. A deep reinforcement learning
    based offloading game in edge computing.

    IEEE Trans. Comput. 69, 6 (2020), 883–893.

    [87] S. Yu, X. Wang, and R. Langar. 2017. Computation offloading for mobile edge
    computing: A deep learning approach.

    In Proceedings of the IEEE Annual International Symposium on Personal, Indoor,
    and Mobile Radio Communications

    (PIMRC’17). IEEE, 1–6.

    [88] Y. Hao, Y. Mian, L. Hu, M. S. Hossain, G. Muhammad, and S. U. Amin. 2019.
    Smart-edge-coCaCo: AI-enabled smart

    edge with joint computation, caching, and communication in heterogeneous IoT.
    IEEE Netw. 33, 2 (2019), 58–64.

    [89] X. Xu, D. Li, Z. Dai, S. Li, and X. Chen. 2019. A heuristic offloading method
    for deep learning edge services in 5G

    networks. IEEE Access 7 (2019), 67734–67744.

    [90] L. Lei, H. Xu, X. Xiong, K. Zheng, and W. Xiang. 2019. Joint computation
    offloading and multiuser scheduling using

    approximate dynamic programming in NB-IoT edge computing system. IEEE Internet
    Things J. 6, 3 (2019), 5345–5362.

    [91] J. Xu, L. Chen, and S. Ren. 2017. Online learning for offloading and autoscaling
    in energy harvesting mobile edge

    computing. IEEE Trans. Cogn. Commun. Netw. 3, 3 (2017), 361–373.

    [92] D. Mishra, S. De, S. Jana, S. Basagni, K. Chowdhury, and W. Heinzelman. 2015.
    Smart RF energy harvesting commu-

    nications: Challenges and opportunities. IEEE Commun. Mag. 53, 4 (2015), 70–78.

    [93] M. Min, L. Xiao, Y. Chen, P. Cheng, D. Wu, and W. Zhuang. 2019. Learning-based
    computation offloading for IoT

    devices with energy harvesting. IEEE Trans. Veh. Technol. 68, 2 (2019), 1930–1941.

    [94] X. Cheng, L. Feng, W. Quan, C. Zhou, H. He, W. Shi, and X. Shen. 2019. Space/aerial-assisted
    computing offloading

    for IoT applications: A learning-based approach. IEEE J. Sel. Area. Comm. 37,
    5 (2019), 1117–1129.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:33

    [95] X. Chen, H. Zhang, C. Wu, S. Mao, Y. Ji, and M. Bennis. 2019. Optimized computation
    offloading performance in

    virtual edge computing systems via deep reinforcement learning. IEEE Internet
    Things J. 6, 3 (2019), 4005–4018.

    [96] J. Ren, H. Wang, T. Hou, S. Zheng, and C. Tang. 2019. Federated learning-based
    computation offloading optimization

    in edge computing-supported internet of things. IEEE Access 7 (2019), 69194–69201.

    [97] H. Cao and J. Cai. 2018. Distributed multiuser computation offloading for
    cloudlet-based mobile cloud computing: A

    game-theoretic machine learning approach. IEEE Trans. Veh. Technol. 67, 1 (2018),
    752–764.

    [98] L. Huang, X. Feng, A. Feng, Y. Huang, and L. Qian. 2018. Distributed deep
    learning-based offloading for mobile edge

    computing networks. Mobile Netw. Appl. 66, 12 (2018), 6353–6367.

    [99] Z. Ning, P. Dong, X. Wang, L. Guo, and R. Kwok. 2019. Deep reinforcement
    learning for intelligent internet of vehicles:

    An energy-efficient computational offloading scheme. IEEE Trans. Cogn. Commun.
    5 (2019), 1060–1072.

    [100] J. Chen, K. Li, Q. Deng, K. Li, and P. Yu. 2019. Distributed deep learning
    model for intelligent video surveillance

    systems with edge computing. IEEE Trans. Ind. Inform. 5, 4 (2019), 1060–1072.

    [101] S. A. Magid, F. Petrini, and B. Dezfouli. 2019. Image classification on
    IoT edge devices: Profiling and modeling. Cluster

    Comput. 23 (2019), 1025–1043.

    [102] A. Biswas and A. P. Chandrakasan. 2019. CONV-SRAM: An energy-efficient SRAM
    with in-memory dot-product

    computation for low-power convolutional neural networks. IEEE J. Solid-St. Circ.
    54, 1 (2019), 217–230.

    [103] C. Maxfield. 2004. The design warrior’s guide to FPGAs: Devices, tools and
    Flows. Elsevier.

    [104] C. Lammie, A. Olsen, T. Carrick, and M. Rahimi Azghadi. 2019. Low-power
    and high-speed deep FPGA inference

    engines for weed classification at the edge. IEEE Access 7 (2019), 51171–51184.

    [105] Y. Sun, M. Peng, and S. Mao. 2019. Deep reinforcement learning-based mode
    selection and resource management for

    green fog radio access networks. IEEE Internet Things J. 6, 2 (2019), 1960–1971.

    [106] M. S. Munir, S. F. Abedin, N. H. Tran, and C. S. Hong. 2019. When edge computing
    meets microgrid: A deep rein-

    forcement learning approach. IEEE Internet Things J. 6, 5 (2019), 7360–7374.

    [107] H. Hua, Y. Qin, C. Hao, and J. Cao. 2018. Stochastic optimal control for
    energy internet: A bottom-up energy man-

    agement approach. IEEE Trans. Ind. Inf. 15, 3 (2019), 1788–1797.

    [108] Y. Qin, H. Hua, and J. Cao. 2019. Stochastic optimal control scheme for
    battery lifetime extension in islanded micro-

    grid. IEEE Trans. Smart Grid 10, 4 (2019), 4467–4475.

    [109] H. Hua, J, Cao, G. Yang, and R. Guang. 2018. Voltage control for uncertain
    stochastic nonlinear system with applica-

    tion to energy internet: Non-fragile robust H∞ approach. J. Math. Anal. Appl.
    463, 1 (2018), 93–110.

    [110] H. Hua, Z. Qin, N. Dong, M. Ye, Z. Wang, X. Chen, and J. Cao. 2022. Data-driven
    dynamical control for bottom-up

    energy internet system. IEEE Trans. Sustain. Energ. 13, 4, (2022), 315–327.

    [111] Y. Bengio, J. Louradour, R. Collobert, and J. Weston. 2009. Curriculum learning.
    In Proceedings of the International

    Conference on Machine Learning (ICML’09). ACM. Montreal, 2009, 41–48.

    [112] R. Kozik, M. Ficco, M. Choraś, and F. Palmieri. 2018. A scalable distributed
    machine learning approach for attack

    detection in edge computing environments. J. Parallel Distr. Com. 119 (2018),
    18–26.

    [113] B. Wang, Y. Wu, K. R. Liu, and T. C. Clancy. 2011. An anti-jamming stochastic
    game for cognitive radio networks.

    IEEE J. Select. Area. Commun. 29, 4 (2011), 877–889.

    [114] B. Li, T. Chen, and G. B. Giannakis. 2019. Secure mobile edge computing
    in IoT via collaborative online learning.

    IEEE Trans. Signal Process. 67, 23 (2019), 5922–5935.

    [115] Y. Wang, W. Meng, W. Li, Z. Liu, Y. Liu, and H. Xue. 2019. Adaptive machine
    learning-based alarm reduction via edge

    computing for distributed intrusion detection systems. Concurr. Comp.-Pract. E
    31, 19 (2019), 1–12.

    [116] L. Yu, X. Shen, J. Yang, K. Wei, and R. Xiang. 2020. Hypergraph clustering
    based on game-theory for mining microbial

    high-order interaction module. Evolution. Bioinform. Online 16 (2020), 117693432097057.

    [117] X. An, J. Su, X. Lu, and F. Lin. 2018. Hypergraph clustering model-based
    association analysis of DDOS attacks in fog

    computing intrusion detection system. J. Wirel. Comm. Netw. 1 (2018), 249–258.

    [118] L. Fernández Maimó, A. Huertas Celdrán, M. Gil Pérez, F. García Clemente,
    and G. Martínez Pérez. 2019. Dynamic

    management of a deep learning-based anomaly detection system for 5G networks.
    J. Amb. Intel. Hum. Comp. 10, 8

    (2019), 3083–3097.

    [119] M. Zhang, L. Wang, S. Jajodia, A. Singhal, and A. Massimiliano. 2016. Network
    diversity: A security metric for

    evaluating the resilience of networks against zero-day attacks. IEEE Trans. Inf.
    Foren. Section 11, 5 (2016), 1071–1086.

    [120] Y. Chen, Y. Zhang, S. Maharjan, M. Alam, and T. Wu. 2019. Deep learning
    for secure mobile edge computing in

    cyber-physical transportation systems. IEEE Netw. 33, 4 (2019), 36–41.

    [121] M. Du, K. Wang, Y. Chen, X. Wang, and Y. Sun. 2018. Big data privacy preserving
    in multi-access edge computing

    for heterogeneous internet of things. IEEE Commun. Mag. 56, 8 (2018), 62–67.

    [122] X. He, R. Jin, and H. Dai. 2019. Deep PDS-learning for privacy-aware offloading
    in MEC-enabled IoT. IEEE Internet

    Things J. 6, 3 (2019), 4547–4555.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    184:34

    H. Hua et al.

    [123] T. Wang, H. Hua, Z. Wei, and J. Cao. 2022. Challenges of blockchain in new
    generation energy systems and future

    outlooks. Int. J. Elec. Power 135, 107499 (2022), 265–284.

    [124] M. Du, K. Wang, Z. Xia, and Y. Zhang. 2020. Differential privacy preserving
    of training model in wireless big data

    with edge computing. IEEE Trans. Big Data 6, 2 (2020), 283–295.

    [125] C. Xu, J. Ren, L. She, Y. Zhang, Z. Qin, and K. Ren. 2019. EdgeSanitizer:
    Locally differentially private deep inference

    at the edge for mobile data analytics. IEEE Internet Things J. 6 (2019), 5140–5151.

    [126] C. Dwork and A. Roth. 2014. The algorithmic foundations of differential
    privacy. Found. Trends. Theor. Comput. Sci.

    9, 3 (2014), 211–407.

    [127] J. Chen, S. Chen, Q. Wang, B. Cao, G. Feng, and J. Hu. 2019. iRAF: A deep
    reinforcement learning approach for

    collaborative mobile edge computing IoT networks. IEEE Internet Things J. 6, 4
    (2019), 7011–7024.

    [128] G. Chaslot, S. Bakkes, I. Szita, and P. Spronck. 2008. Monte-carlo tree
    search: A new framework for game AI. In

    Proceedings of the 4th AAAI Conference on Artificial Intelligence and Interactive
    Digital Entertainment. 216–217.

    [129] C. Chen, B. Liu, S. Wan, P. Qiao, and Q. Pei. 2021. An edge traffic flow
    detection scheme based on deep learning in

    an intelligent transportation system. IEEE Trans. Intell. Transp. 22, 3 (2021),
    1840–1852.

    [130] I. Hashem, V. Chang, et al. 2016. The role of big data in smart city. Int.
    J. Inform. Manage. 36, 5 (2016), 748–758.

    [131] S. Pang, S. Qiao, T. Song, J. Zhao, and P. Zheng. 2019. An improved convolutional
    network architecture based on

    residual modeling for person re-identification in edge computing. IEEE Access
    7 (2019), 106749–106760.

    [132] B. Tang, Z. Chen, G. Hefferman, S. Pei, W. Tao, H. He, and Q. Yang. 2017.
    Incorporating intelligence in fog computing

    for big data analysis in smart cities. IEEE Trans. Ind. Inform. 13, 5 (2017),
    2140–2150.

    [133] G. Muhammad, M. Alhamid, M. Alsulaiman, and B. Gupta. 2018. Edge computing
    with cloud for voice disorder

    assessment and treatment. IEEE Commun. Mag. 56, 4 (2018), 60–65.

    [134] G. Muhammad, M. Rahman, A. Alelaiwi, and A. Alamri. 2017. Smart health solution
    integrating IoT and cloud: A

    case study of voice pathology monitoring. IEEE Commun. Mag. 55, 1 (2017), 69–73.

    [135] M. Prabukumar, L. Agilandeeswari, and K. Ganesan. 2017. An intelligent lung
    cancer diagnosis system using cuckoo

    search optimization and support vector machine classifier. J. Amb. Intel. Hum.
    Comp. 3 (2017), 1–27.

    [136] V. Stantchev, A. Barnawi, S. Ghulam, and J. Schubert. 2015. Smart items,
    fog and cloud computing as enablers of

    servitization in healthcare. Sensors Transduc. 185 (2015), 121–128.

    [137] J. Zhang and D. Tao. 2020. Empowering things with intelligence: A survey
    of the progress, challenges, and opportu-

    nities in artificial intelligence of things. IEEE Internet Things J. 8, 10 (2020),
    7789–7817.

    [138] H. Luo, H. Cai, Y. Sun, and L. Jiang. 2019. A short-term energy prediction
    system based on edge computing for smart

    city. Future Gener. Comp. Syst. 101 (2019), 444–457.

    [139] H. Hua, Z. Wei, Y. Qin, T. Wang, and J. Cao. 2021. A review of distributed
    control and optimization in energy Internet:

    From traditional methods to artificial intelligence-based methods, IET Cy-Phys.
    Syst.: Theory Appl. 6, 2 (2021), 63–79.

    [140] Y. Liu, C. Yang, et al. 2019. Intelligent edge computing for IoT-based energy
    management in smart cities. IEEE Netw.

    33, 2 (2019), 111–117.

    [141] C. Hao, Y. Qin, and H. Hua. 2020. Energy “routers,” “computers,” and “protocols.”
    In Energy Internet: Systems and

    Applications. Springer Nature Switzerland AG, 193–208.

    [142] H. Liang, H. Hua, Y. Qin, M. Ye, S. Zhang, and J. Cao. 2022. Stochastic
    optimal energy storage management for energy

    routers via compressive sensing. IEEE Trans. Ind. Inform. 18, 4 (2022) 2192–2202.

    [143] L. Hu, Y. Miao, G. Wu, M. Hassan, and I. Humar. 2018. IRobot-factory: An
    intelligent robot factory based on cognitive

    manufacturing and edge computing, future gener. Comp. Syst. 90, 10 (2018), 1–13.

    [144] F. Liang, W. Yu, X. Liu, D. Griffith, and N. Golmie. 2020. Toward edge-based
    deep learning in industrial internet of

    things. IEEE Internet Things J. 7, 5 (2020), 4329–4341.

    [145] L. Li, K. Ota, and M. Dong. 2018. Deep learning for smart industry: Efficient
    manufacture inspection system with fog

    computing. IEEE Trans. Ind. Inform. 14 (2018), 4665–4673.

    [146] Z. Ning, P. Dong, X. Wang, L. Guo, and R. Kwok. 2019. Deep reinforcement
    learning for intelligent internet of vehicles:

    An energy-efficient computational offloading scheme. IEEE T. Cogn. Commun. Netw.
    5, 4 (2019), 1060–1072.

    [147] L. Guo, M. Dong, Z. Chen, S. Feng, and G. Fang. 2017. A secure mechanism
    for big data collection in large scale

    internet of vehicle. IEEE Internet Things J. 4, 2 (2017), 601–610.

    [148] J. Feng, Z. Liu, C. Wu, and Y. Ji. 2017. AVE: Autonomous vehicular edge
    computing framework with ACO-based

    scheduling. IEEE Trans. Veh. Technol. 66, 12 (2017), 10660–10675.

    [149] Q. Qi, J. Wang, Z. Ma, H. Sun, Y. Cao, L. Zhang, and J. Liao. 2019. Knowledge-driven
    service offloading decision for

    vehicular edge computing: A deep reinforcement learning approach. IEEE Trans.
    Veh. Technol. 68 (2019), 4192–4203.

    [150] Y. Sun, X. Guo, J. Song, S. Zhou, Z. Jiang, X. Liu, and Z. Niu. 2019. Adaptive
    learning-based task offloading for

    vehicular edge computing systems. IEEE Trans. Veh. Technol. 68 (2019), 3061–3074.

    [151] H. Hua, Y. Qin, C. Hao, and J. Cao. 2019. Optimal energy management strategies
    for energy internet via deep rein-

    forcement learning approach. Appl. Energ. 239 (2019), 598–609.

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    Edge Computing with Artificial Intelligence: A Machine Learning Perspective

    184:35

    [152] G. Liu, Y. Xu, Z. He, Y. Rao, J. Xia, and L. Fan. 2019. Deep learning-based
    channel prediction for edge computing

    networks toward intelligent connected vehicles. IEEE Access 7 (2019), 114487–114495.

    [153] L. Hou, L. Lei L, Z. Kan, and X. Wang. 2018. A Q-learning based proactive
    caching strategy for non-safety related

    services in vehicular networks. IEEE Internet Things J. 6 (2018), 4512–4520.

    [154] Z. Ning, P. Dong, J. Rodrigues, and Z. Ning. 2019. Deep reinforcement learning
    for vehicular edge computing: an

    intelligent offloading system. ACM Trans. Intel. Syst. Tec. 10, 6 (2019), 1–1.

    [155] T. Le and R. Hu. 2018. Mobility-aware edge caching and computing in vehicle
    networks: A deep reinforcement

    learning. IEEE Trans. Veh. Technol. 67 (2018), 10190–10203.

    [156] M. Khayyat, I. A. Elgendy, A. Muthanna, A. Alshahrani, S. Alharbi, and A.
    Koucheryavy. 2020. Advanced deep

    learning-based computational offloading for multilevel vehicular edge-cloud computing
    networks. IEEE Access

    8 (2020), 137052–137062.

    [157] A. Ferdowsi, U. Challita, and W. Saad. 2018. Deep learning for reliable
    mobile edge analytics in intelligent transporta-

    tion systems. IEEE Veh. Technol. Mag. 14, 1 (2018), 62–70.

    [158] J. Lu, J. Li, Yuan Q, and B. Chen. 2019. A multi-vehicle cooperative routing
    method based on evolutionary game theory.

    In Proceedings of the IEEE Intelligent Transportation Systems Conference (ITSC’19).
    IEEE. New Zealand. 987–994.

    [159] X. Hou, Z. Rem, J. Wang, W. Cheng, and H. Zhang. 2020. Reliable computation
    offloading for edge-computing-enabled

    software-defined IoV. IEEE Internet Things J. 7, 8 (2020), 7097–7111.

    [160] J. Zhang and K. B. Letaief. 2020. Mobile edge intelligence and computing
    for the internet of vehicles. Proc. IEEE 108,

    2 (2020), 246–261.

    [161] X. Wang, Y. Han, V. Leung, D. Niyato, X. Yan, and X. Chen. 2019. Convergence
    of edge computing and deep learning:

    A comprehensive survey. IEEE Commun. Surv. Tut. 22, 2 (2019), 869–904.

    [162] M. KKowalski, Z. Lee, and T. Chan. 2021. Blockchain technology and trust
    relationships in trade finance. Technol.

    Forecast. Soc. 166 (2020), 120641.

    [163] T. Wang, J. Guo, et al. 2021. RBT: A distributed reputation system for blockchain-based
    peer-to-peer energy trading

    with fairness consideration. Appl. Energ. 295, 1 (2021), 117056.

    [164] S. Pang, S. Qiao, T. Song, J. Zhao, and P. Zheng. 2019. An improved convolutional
    network architecture based on

    residual modeling for person re-identification in edge computing. IEEE Access
    7 (2019), 106748–106759.

    [165] J. Li, J. Wu, J. Li, A. K. Bashir, M. J. Piran, and A. Anjum. 2021. Blockchain-based
    trust edge knowledge inference of

    multi-robot systems for collaborative tasks. IEEE Commun. Mag. 59, 7 (2021), 94–100.

    [166] Y. Wei, F. Yu, M. Song, and Z. Han. 2019. Joint optimization of caching,
    computing, and radio resources for fog-enabled

    IoT using natural actor-critic deep reinforcement learning. IEEE Internet Things
    J. 6, 2 (2019), 2061–2073.

    Received 17 September 2021; revised 18 June 2022; accepted 8 August 2022

    ACM Computing Surveys, Vol. 55, No. 9, Article 184. Publication date: January
    2023.

    '
  inline_citation: '>'
  journal: ACM computing surveys
  limitations: '>'
  pdf_link: https://dl.acm.org/doi/pdf/10.1145/3555802
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Edge Computing with Artificial Intelligence: A Machine Learning Perspective'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1186/s13677-022-00371-w
  analysis: '>'
  authors:
  - Abeera Ilyas
  - Mohammed Naif Alatawi
  - Yasir Hamid
  - Saeed Mahfooz
  - Islam Zada
  - Neelam Gohar
  - Mohd Asif Shah
  citation_count: 4
  full_citation: '>'
  full_text: ">\nIlyas et al. Journal of Cloud Computing           (2022) 11:84  \n\
    https://doi.org/10.1186/s13677-022-00371-w\nRESEARCH\nSoftware architecture for pervasive\
    \ critical \nhealth monitoring system using fog computing\nAbeera Ilyas1, Mohammed\
    \ Naif Alatawi2, Yasir Hamid3, Saeed Mahfooz1, Islam Zada4, Neelam Gohar5 and\
    \ \nMohd Asif Shah6* \nAbstract \nBecause of the existence of Covid-19 and its\
    \ variants, health monitoring systems have become mandatory, particu-\nlarly for\
    \ critical patients such as neonates. However, the massive volume of real-time\
    \ data generated by monitoring \ndevices necessitates the use of efficient methods\
    \ and approaches to respond promptly. A fog-based architecture for \nIoT healthcare\
    \ systems tends to provide better services, but it also produces some issues that\
    \ must be addressed. We \npresent a bidirectional approach to improving real-time\
    \ data transmission for health monitors by minimizing network \nlatency and usage\
    \ in this paper. To that end, a simplified approach for large-scale IoT health\
    \ monitoring systems is \ndevised, which provides a solution for IoT device selection\
    \ of optimal fog nodes to reduce both communication and \nprocessing delays. Additionally,\
    \ an improved dynamic approach for load balancing and task assignment is also\
    \ sug-\ngested. Embedding the best practices from the IoT, Fog, and Cloud planes,\
    \ our aim in this work is to offer software \narchitecture for IoT-based healthcare\
    \ systems to fulfill non-functional needs. 4 + 1 views are used to illustrate\
    \ the \nproposed architecture.\n© The Author(s) 2022. Open Access This article\
    \ is licensed under a Creative Commons Attribution 4.0 International License,\
    \ which \npermits use, sharing, adaptation, distribution and reproduction in any\
    \ medium or format, as long as you give appropriate credit to the \noriginal author(s)\
    \ and the source, provide a link to the Creative Commons licence, and indicate\
    \ if changes were made. The images or \nother third party material in this article\
    \ are included in the article’s Creative Commons licence, unless indicated otherwise\
    \ in a credit line \nto the material. If material is not included in the article’s\
    \ Creative Commons licence and your intended use is not permitted by statutory\
    \ \nregulation or exceeds the permitted use, you will need to obtain permission\
    \ directly from the copyright holder. To view a copy of this \nlicence, visit\
    \ http:// creat iveco mmons. org/ licen ses/ by/4. 0/.\nIntroduction\nMedical\
    \ informatics, healthcare, and Internet health \ntechnologies are all combined\
    \ in the cutting-edge system \nknown as e-health. This combination encourages\
    \ tech-\nnological advancements to address persistent issues like \nlower costs\
    \ and higher-quality healthcare. Likewise, the \nInternet of Things (IoT) enables\
    \ a wide range of innova-\ntive initiatives to be implemented with shared and\
    \ pro-\ngrammable technologies such as the Internet, cloud \ncomputing, storage,\
    \ network-connected gear, software, \nand databases. When combined with adaptable,\
    \ eas-\nily accessible, and enhanced patient health services, IoT \nand cloud\
    \ computing has developed into revolutionary \ninventions that strengthen one\
    \ another’s capabilities. \nThis connection is easier to adopt in comparison to\
    \ tra-\nditional networks, makes information more secure dur-\ning engagements,\
    \ increases data access, and increases \nproductivity. Healthcare services can\
    \ be considerably \nimproved by IoT and cloud-based e-Health systems, \nwhich\
    \ also encourage continuous, methodical develop-\nment. IoT and cloud-based e-Health\
    \ platforms allow \nusers, providers, and servers to interact with each other\
    \ \nwhile maintaining medical data in the cloud [1].\nOn the other side, there\
    \ are numerous important \nproblems with cloud computing, including traffic over-\n\
    load, huge data processing volumes, and data transmis-\nsion delays. The main\
    \ cause of these difficulties is that \ncloud servers are physically far away\
    \ from IoT devices \n[2]. Healthcare apps cannot tolerate delays due to the \n\
    critical nature of the industry. Employing specific cloud \ncomputing services\
    \ to collect and analyze medical data \nfrom patients dispersed across a large\
    \ geographic area \nis not practicable due to the significant transmission \n\
    latency and high network utilization [3]. Fog comput-\ning has become a paradigm\
    \ change to address the fun-\ndamental issues with conventional cloud computing\
    \ as \nmentioned above [4]. As a component of the fog com-\nputing architecture,\
    \ a wide variety of devices are linked \nOpen Access\nJournal of Cloud Computing:\n\
    Advances, Systems and Applications\n*Correspondence:  ohaasif@kdu.edu.et\n6 Kebri\
    \ Dehar University, Kebri Dehar, Ethiopia\nFull list of author information is\
    \ available at the end of the article\nPage 2 of 14\nIlyas et al. Journal of Cloud\
    \ Computing           (2022) 11:84 \nto the network to supply computational and\
    \ storage \nresources. Fog computing provides an infrastructure \nthat is more\
    \ flexible, and secure, and requires lesser \nbandwidth. The idea of healthcare\
    \ systems reinforces \nthat, in most countries, healthcare has challenges that\
    \ \nonly worsen with the aging population [5].\nHealth monitoring systems and\
    \ Internet of Things \nadvancements in wireless and cellular networks greatly\
    \ \nenhance performance and save medical costs. Provid-\ning inexpensive home\
    \ monitoring equipment which can \nspot early signs of deterioration, prompt service\
    \ and \ntreatment can be provided. IoT encourages observation \nof critically\
    \ ill patients. Moreover, in developing coun-\ntries, the population is mostly\
    \ residing in rural areas \nwhere medical assistance is not easily available.\
    \ Also in \ndisaster-stricken areas, a framework is needed which \ncan assist\
    \ critical patients remotely using existing infra-\nstructure. As a result, a\
    \ framework for IoT-assisted \nhealth monitoring based on fog computing is sug-\n\
    gested. The design of the suggested health monitoring \nsystem provides patients\
    \ with ongoing real-time medi-\ncal response, and fog computing has demonstrated\
    \ its \neffectiveness in time-sensitive applications. Fog com-\nputing provides\
    \ a way to handle the massive amounts \nof data created by end-user devices by\
    \ deploying \nresources close to ending users. Due to the requirement \nfor quick\
    \ and effective data processing, fog computing \nshould thus be employed in the\
    \ scenario that has been \npresented.\nThe presented research is a bidirectional\
    \ approach to \nimprove real-time data transmission for health moni-\ntors by\
    \ reducing network latency and usage. To that end, \na simplified approach for\
    \ large-scale IoT health moni-\ntoring systems is devised, which provides a solution\
    \ for \nIoT device selection of optimal fog nodes to reduce both \ncommunication\
    \ and processing delays. Additionally, an \nimproved dynamic approach for load\
    \ balancing and task \nscheduling is also suggested. Embedding the best prac-\n\
    tices from the IoT, Fog, and Cloud planes, our aim in \nthis work is to offer\
    \ software architecture for IoT-based \nhealthcare systems to fulfill the aforementioned\
    \ non-\nfunctional needs.\nHowever, the computing and storage capacities of \n\
    fog servers are constrained. The load on the fog server \nincreases as the number\
    \ of available queries rises in a vast \nsystem [6]. Patient requirements to install\
    \ the proposed \nfog-based health monitoring system globally will put \npressure\
    \ on a single fog node. The fog node in this case \ngets overloaded while the\
    \ other fog nodes are most likely \ndormant, increasing response time and causing\
    \ the delay. \nMoreover, the selection of an inappropriate fog node for \nthe\
    \ IoT device gateway to transmit data increases net-\nwork latency.\nThe three\
    \ architectural layers that are suggested include \nsensors that are attached\
    \ to the patients and can detect \nand transmit vital signs like body temperature,\
    \ heart rate, \nand pulse rate to the IoT device gateways in the first tier. \n\
    The fog servers, which are located within the same area \nas the base stations,\
    \ make up the intermediate fog layer \n(BS). The fog nodes receive the real-time\
    \ monitoring \ndata from the first tier’s IoT devices, process it to deter-\n\
    mine whether the patient is in a critical condition, and \nthen transmit their\
    \ findings to the cloud server through \na proxy server set up in the third layer.\
    \ The fog nodes also \nnotify the patient’s PDA devices of the results of their\
    \ \nhealth status monitoring. Fog computing provides a way \nto handle a sizable\
    \ volume of data produced by end-user \ndevices by bringing resources close to\
    \ end-users. Fog \ncomputing is therefore appropriate for the recommended \ntechnique\
    \ because real-time efficient data processing \nis required. However, due to the\
    \ pressure placed on fog \nnodes and the scanning of the IoT gateway for a suitable\
    \ \nfog node to relay monitoring data, transmission is prone \nto delays. The\
    \ IoT sensor gateway experiences a com-\nmunication delay  (Dc) as a result of\
    \ the time needed to \nconnect with an appropriate fog node, which renders it\
    \ \ninappropriate for real-time monitoring. Additionally, the \nburden on the\
    \ fog nodes increases the processing time \n (Dp), slowing transmission. To increase\
    \ the quality of ser-\nvice (QoS), both network delays should be addressed. The\
    \ \noverall delay can be written as,\nTo manage the total network delay, this\
    \ research sug-\ngests an innovative two-way method in the suggested \narchitecture,\
    \ which manages the incoming monitoring \ntraffic at fog nodes. Firstly, by connecting\
    \ to the optimum \nfog node, an efficient scanning mechanism (ESM) for the \n\
    IoT gateway suggests a method to minimize communica-\ntion lag. Secondly, we present\
    \ a network-assisted Load \nBalancing scheme for real-time monitoring data (LBRT).\
    \ \nThe strategy effectively distributes the load to nearby fog \nnodes to reduce\
    \ latency and network utilization because \nthe health monitoring system’s time-sensitive\
    \ nature \nmakes it necessary. As we know, IoT data flows experi-\nence traffic\
    \ and processing latency, as described in [7]. \nThe frequent data transmission\
    \ to the cloud server is \nreduced by using fog-based computing in the system\
    \ \ndesign, thus lowering the system’s latency. The following \nare the contributions\
    \ of this paper:\n1. A three-tier architecture is proposed for the fog-IoT \n\
    health monitoring system, with fog nodes located in \nthe middle layer. Smartphones\
    \ connected to body \nsensors relay the patient’s physiological data streams \n\
    to the fog node. To determine whether a patient’s \nTotal delay, Dt = Dc + Dp\n\
    Page 3 of 14\nIlyas et al. Journal of Cloud Computing           (2022) 11:84 \n\
    \ \nhealth status is critical or not, fog nodes process the \nincoming data streams.\
    \ The patient’s health informa-\ntion is thereafter sent to their smartphone and\
    \ sent to \nthe cloud for storage.\n2. In widely deployed health monitoring systems,\
    \ the \nload-balancing of the real-time data scheme (LBRT) \nbalances the load\
    \ among fog nodes.\n3. The IoT gateway is suggested to use the efficient \nscanning\
    \ mechanism (ESM) to rapidly and effectively \nchoose a suitable fog node for\
    \ transmission.\n4. Two criteria, namely latency and network utiliza-\ntion, are\
    \ used to assess the performance of LBRT for \nhealth monitoring.\n5. Using the\
    \ iFogSim toolkit, extensive simulations are \nperformed to compare the performance\
    \ of the LBRT \nto the conventional fog node placement method \n(FNPA) [8], and\
    \ the load balancing scheme (LBS) [9].\nThe following is how the paper is set\
    \ up: The context \nand inspiration of this work are presented in Section II.\
    \ \nThe most recent research on load balancing in fog-based \nsystems and the\
    \ design of health monitoring systems is \npresented in Section III. The proposed\
    \ architecture for \nhealth monitoring systems is detailed in Section IV, and\
    \ \nthe real-time (LBRT) load balancing algorithm is covered \nin Section V. The\
    \ discussions in Section VI and Section \nVII provide the conclusion and suggestions\
    \ for future \ndevelopment.\nRelated work\nThere are various architectures presented\
    \ by scholars \ndepending on the scenario. Healthcare organizations \nusing IoT\
    \ have been encouraged to mobilize using a \nsustained security plan (SSP), according\
    \ to [5]. The sug-\ngested strategy calls for developing a reliable and effec-\n\
    tive architecture for DTLS certificate-based end-user \nlicense authentication\
    \ and smart gateway-based mobil-\nity support. The study [10] presents a detailed\
    \ architec-\nture of the IoT-based healthcare ecosystem and examines \nthe application\
    \ of IoT in healthcare (CAHE). According \nto Article [11], medical devices are\
    \ linked to an intel-\nligent one-to-one oneM2M system. In their proposed \nsystem,\
    \ the protocol between ISO/IEEE 11073 protocols \nand oneM2M protocol messages\
    \ is transformed at the \ngateways between medical equipment and the Personal\
    \ \nHealthcare Device (Ph.D.) management server. Resulting \nof the tests, it\
    \ can be concluded that protocol conversion \nwas successful. According to [12],\
    \ a cloud-based health-\ncare diagnostic framework (CHDF) and an Internet of \n\
    Things-based system can predict potential fatal illnesses \nbased on diseases.\
    \ Measurement, accuracy, sensitivity, \nand specificity were used to calculate\
    \ the results. Devel-\noping an Intelligent Health Monitoring Architecture \n\
    (IHMA) with this research was the goal of [13]. To \ndemonstrate the use of massive\
    \ data in healthcare, the \nauthors examined, evaluated, analyzed, and tested\
    \ several \ntypes of data.\nUsing drones in healthcare and connecting them to\
    \ \ncloud-based infrastructure, remote servers, or body area \nnetworks (BANs)\
    \ is part of medical IoT, according to \n[14]. For the collection, processing,\
    \ and sharing of patient \ndata in real-time, [15] proposes a Patient-based Architec-\n\
    ture (PA). Information about patients can be transmitted \nusing this architecture\
    \ under time constraints. Two case \nstudies were discussed to evaluate the performance\
    \ of \nthis architecture.\nDoctors would be under additional pressure as the \n\
    amount of data gathered through patient monitoring \ndevices and the number of\
    \ analytical choices made to \nacquire various data kinds for each patient increased.\
    \ In \n[16], a suggested WBAN-based IoT healthcare system is \nexamined together\
    \ with IoT-based healthcare applica-\ntions. It also does a real-time analysis\
    \ of authentication, \nenergy, power, resource management, quality of ser-\nvice,\
    \ and wireless health monitoring—features that are \nextremely troublesome in\
    \ terms of security and privacy. \nThe authors of [17] presented an architectural\
    \ design for \nall-encompassing healthcare systems. They formalized \ntheir modeling\
    \ process and used model-checking tools to \nvalidate attributes like dependability\
    \ and availability. As \npart of their review of the health monitoring system\
    \ in a \nsmart environment from the viewpoint of the public, the \nauthors of\
    \ [18] described the current state of intelligent \nhealth monitoring systems.\
    \ Based on the authors’ analy-\nsis of technology development, requirements, design,\
    \ \nand modeling, these systems face challenges. A 6G-aware \nfog federation architecture\
    \ is developed in [19] to utilize \nfog resources, meet the need for specialized\
    \ services, \nand ensure the shortest possible service delay and cost. \nA hierarchical\
    \ fog network is used in [20] to manage \nthe energy performance tradeoff while\
    \ scheduling and \noffloading real-time IoT applications using the Energy-\nEfficient\
    \ Task Offloading (EETO) policy. Additionally, \nwe developed a stochastic conscious\
    \ data offloading \nproblem with a successful virtual queue stability strat-\n\
    egy based on a heuristic method for allocating priority \nto each incoming job.\
    \ Using current status data, the pro-\nposed method reduces queue waiting times\
    \ and energy \nconsumption. Based on simulations with various QoS \nparameters,\
    \ it appears that the proposed EETO mecha-\nnism is more energy-efficient and\
    \ works better. Based on \nthe gateway’s advantageous position at the edge of\
    \ the \nnetwork, a variety of services were delivered, including \nlocal storage,\
    \ local data processing, and embedded data \nextraction. An intelligent smart\
    \ gateway prototype, UT \nGATE, was presented by the authors in [21]. IoT-based\
    \ \nPage 4 of 14\nIlyas et al. Journal of Cloud Computing           (2022) 11:84\
    \ \nhealth monitoring systems are expected to increase \nenergy economy, mobility,\
    \ performance, interoperability, \nsecurity, and dependability, based on proof-of-concept\
    \ \ndesigns. As described in the publication [22], deep learn-\ning is integrated\
    \ into Fog to be used as a useful technique \nfor investigating heart disease.\
    \ The framework is called \nHealth Fog. This framework provides health services,\
    \ \nsuch as Fog services, with an emphasis on heart-related \nillnesses. The effectiveness\
    \ of this approach is assessed \nusing attributes like power usage, network bandwidth,\
    \ \ndelay, and response time are used to gauge this frame-\nwork’s performance.\
    \ To facilitate the process of data \nconditioning, intelligent filtering, smart\
    \ analytics, and \nselective transmission to the Cloud for long-term storage \n\
    and temporal variability monitoring, a Smart Fog Gate-\nway (SFG) model for end-to-end\
    \ analytics in wearable \nIoT devices are provided in [23]. The execution time\
    \ and \nenergy consumption of this model are both optimized for \nperformance.\
    \ The work in [24] proposes an innovative \nHealthcare Monitoring Framework (HMF)\
    \ based on a big \ndata analytics engine and a cloud environment to accu-\nrately\
    \ store and assess healthcare data and to increase \ncategorization accuracy.\
    \ The findings demonstrated that \nthe suggested model accurately manages heterogeneous\
    \ \ndata, enhances the classification of health conditions, and \nimproves drug\
    \ side effect predictions. In [25], an evacua-\ntion system (CFaES) based on the\
    \ Internet of Things and \ncloud-fog technology is suggested. The Fuzzy K-Nearest\
    \ \nNeighbor (FK-NN) approach is used by the system to \nanalyze the panic health\
    \ state in real-time using the Fog \ncomputing paradigm. Experimentation demonstrates\
    \ the \nsuggested system’s effectiveness at various levels.\nFor healthcare services,\
    \ a general Edge-of-Things Com-\nputation (EoTC) paradigm is put out [26] to reduce\
    \ costs \nassociated with resource supply and data processing. Per-\nformance\
    \ evaluation using QoS parameters is missing \nfrom this framework [27]. presents\
    \ an event-driven IoT \narchitecture with context, event, and service layers for\
    \ \ndata analysis of dependable healthcare applications. Sev-\neral layers take\
    \ into consideration dependability factors, \nand the Complex Event Processing\
    \ method incorporates \nautomated intelligence and a revolutionary approach. \n\
    As part of the Healthcare Big Data Analytic architec-\nture (SLA-HBDA), Service\
    \ Level Agreements (SLAs) are \nemployed to rank patient data [28].\nAn efficient\
    \ data distribution strategy is developed \nusing the Spark platform to disseminate\
    \ batch and \nstreaming data to predict the patient’s health state. When \ncompared\
    \ to the Naive-Bayes (NB) algorithm, the SLA-\nHBDA architecture performs better\
    \ in terms of accuracy, \nbut it ignores latency and other crucial QoS factors\
    \ [29]. \nproposes an IoT-based system for classifying streaming \ndata according\
    \ to the level of criticality. This framework \ncomputes the critical data in\
    \ the fog to quickly and accu-\nrately detect anomalies. The model presented by\
    \ [17] \nutilizes green energy and reduces latency and power con-\nsumption in\
    \ secure IoT systems by using multisensory \nframeworks. To handle large numbers\
    \ of requests and \ntheir quality and security limitations, a Genetic Algo-\n\
    rithm is proposed. Compared to a baseline approach, the \nproposed strategy reduces\
    \ edge device delay and power \nconsumption simultaneously. According to the type\
    \ of \ntraffic, a suggested architecture in [30] will forward data \nto the cloud\
    \ or fog layer. To effectively tackle this prob-\nlem, load balancing is used\
    \ to choose the best fog or \ncloud to convey the data from the device. The suggested\
    \ \neffort focuses on decreasing packet and delay. A four-\ntier design was suggested\
    \ in [31] to identify the specific \ndecision-maker for job offloading. The authors\
    \ abstracted \nthis issue as a population game that Maynard replicator \ndynamics\
    \ can resolve. An overview and recent develop-\nments of digital twins for healthcare\
    \ 4.0 were described \nin [32]. Also suggested is a digital twin architecture\
    \ for \nthe healthcare industry. They also provided several digital \ntwin use\
    \ cases and open research problems with poten-\ntial solutions [33]. focused on\
    \ the state of the art, the \nenabling technologies for implementing the Metaverse\
    \ \nfor healthcare, the prospective applications, and the con-\nnected initiatives\
    \ while providing a thorough assessment \nof the subject. As part of future research\
    \ paths, the prob-\nlems with the Metaverse’s adaption for healthcare appli-\n\
    cations are also emphasized, along with some likely fixes. \nTable 1 shows the\
    \ literature review of the related work.\nProposed architecture\nThis section\
    \ illustrates the three-tier architecture of a \nfog-based health monitoring system,\
    \ which is like the \napproach described in [9]. In the first tier of the sug-\n\
    gested architecture, the critical patient wears sensors to \nmonitor vital signs\
    \ including body temperature, heart \nrate, pulse rate, and other vitals, which\
    \ are then transmit-\nted to the fog nodes via telephones. Fog nodes make up \n\
    the second stratum of the design. The fog nodes, which \nare placed next to the\
    \ BSs, analyze the data collected \nfrom IoT devices. The patient’s smartphone\
    \ then receives \nthe results of their health state. The fog nodes are posi-\n\
    tioned closer to the IoT devices at the network’s edge to \nguarantee a quick\
    \ reaction in a real-time setting. Detailed \nlayers are discussed below.\nAs\
    \ seen in Fig. 1, the proposed schema comprises three \ntiers.\nTier 1 (device\
    \ layer)\nSmart medical devices based on IoT are included in this \nlayer, allowing\
    \ users to check their health anywhere, \nanytime. Medical technologies such as\
    \ blood pressure, \nPage 5 of 14\nIlyas et al. Journal of Cloud Computing    \
    \       (2022) 11:84 \n \nECG, and sleep monitoring can be used in this set-\n\
    ting to monitor the health of elderly patients 24 hours \na day. Another important\
    \ module component in this \nlayer is the IoT device gateway (IoTDW). It is a\
    \ PDA \ndevice that connects the body sensors with the BS. The \nIoTDW receives\
    \ the real-time monitoring data from \nthe body sensors and interprets them accordingly\
    \ to \nbe delivered to the fog nodes that are co-located at the \nBS. As the data\
    \ deals with real-time data with the same \npriority, an efficient scanning mechanism\
    \ is deployed in \nthe scanning module component of the IoTDW.\n• Data transfer\
    \ (Connectivity): The ability to periodi-\ncally transmit medical data gathered\
    \ from sensors \nto the lower layers while also receiving messages \nand data\
    \ from the cloud and fog layer.\nTable 1 A literature review of related work\n\
    S. No\nThem of the paper\nObservations\n[5]\nDTLS certificate-based end-user license\
    \ authentication and smart \ngateway for mobility\nThe suggested strategy calls\
    \ for developing a reliable and effective \narchitecture for DTLS certificate-based\
    \ end-user license authentication \nand smart gateway-based mobility support but\
    \ has latency and power \nconsumption problems.\n[10]\nIoT-based healthcare architecture\
    \ (CAHE)\nHaving bandwidth problem.\n[11]\nmessage-based one-to-one intelligent\
    \ M2M system for medical and \nPHD devices\nDevice-to-device messaging techniques\
    \ have delay problems.\n[12]\ncloud-based diagnostic framework (CHDF) assisted\
    \ by IoT\nProvides limited resources to the end users.\n[13]\nan intelligent health\
    \ monitoring architecture (IHMA\nDelay and latency problems\n[14]\nusing drones\
    \ in cloud-based health infrastructure along with remote \nservers and BANs for\
    \ medical IoT\nSecurity and sensitivity issues.\n[15]\nPatient-based architecture\
    \ for real-time medical data handling\nBased on only two case studies.\n[16]\n\
    WBAN-based IoT healthcare system architecture for real-time analysis \nin terms\
    \ of authentication, energy, and QoS\nDelay, latency, and power consumption problems\n\
    [17]\nan all-encompassing architectural design for healthcare systems\nFormalized\
    \ their modeling process and used model-checking tools to \nvalidate attributes\
    \ like dependability and availability\n[18]\nthe current state of the intelligent\
    \ healthcare system in a smart envi-\nronment -a public view\nBased on the authors’\
    \ analysis of technology development, require-\nments, design, and modeling, these\
    \ systems face challenges\n[19]\n6G aware fog federation architecture measuring\
    \ cost and delay\nNo security mechanism is included\n[20]\nEnergy-efficient task\
    \ offloading (EETO) based on hierarchical fog \narchitecture to manage energy\
    \ by a tradeoff\nResources allocation and time scheduling problems.\n[21]\nan\
    \ intelligent smart gateway (UTGATE) for IoT-based health monitor-\ning systems\
    \ using proof of concept\nDelay and latency problems\n[22]\ndeep learning supported\
    \ the analysis of heart disease using Health \nFog\nEnergy consumption is ignored.\n\
    [23]\nSmart Fog Gateway (SFG) model for end-to-end wearable IoT devices\nAuthentication\
    \ problems may occur.\n[24]\nHealthcare monitoring framework (HMF) based on big\
    \ data analytics \nin a cloud environment\nBandwidth and delay problems may occur.\n\
    [25]\nan evacuation system (CFaES) based on IoT and cloud-fog using Fuzzy \nKNN\n\
    Cost and time delay problems may occur.\n[26]\nEdge of things computation (EoTC)\
    \ model is used to minimize \nresource supply and data processing\nPerformance\
    \ evaluation using QoS parameters is missing from this \nframework\n[27]\nevent-driven\
    \ IoT architecture for dependable healthcare applications\nProblems may occur\
    \ in the real-time data processing\n[28]\nSLA-HBDA model is developed to rank\
    \ patient data for analysis\nIt is based on only one parameter and it ignores\
    \ latency and other \ncrucial QoS factors\n[29]\nThe IoT-based system is used\
    \ for classifying streaming depending on \nthe criticality\nFactors like Time\
    \ delay and latency are ignored.\n[17]\na generic algorithm-based energy-efficient\
    \ model for a multisensory \nsecure IoT system\nA Delay problem may occur.\n[30]\n\
    traffic type-based architecture for a decision on data handling by fog \nor cloud\n\
    Ignore crucial factors like security and bandwidth.\n[31]\nbased on a 4-tier design\
    \ to identify job offloading factors.\nSecurity and delay problems may occur.\n\
    Page 6 of 14\nIlyas et al. Journal of Cloud Computing           (2022) 11:84 \n\
    • Device management: The sensors must frequently \nsend the monitoring data to\
    \ the IoT device gateways \nfor real-time processing.\n• Notification (Alert notification\
    \ event): The PDA is \ncapable of receiving any notification from the fog \nnodes\
    \ in case of emergency to alert about the emer-\ngency.\n• Connection Establishment:\
    \ The scanning module \nutilizes the  BSSL list generated by BS. It allows the\
    \ \nIoTDW to take an informed connection establish-\nment decision.\nTier 2 (fog\
    \ layer)\nFor extremely important instances, the Fog Layer of the \nproposed healthcare\
    \ platform reviews time-sensitive \ndata and takes a real-time decision. The fog\
    \ layer lies \ncomprises BS and the co-located fog nodes. As previ-\nously said,\
    \ the purpose of the fog layer is to reduce the \namount of time spent calculating,\
    \ storing, and process-\ning data while maximizing mobility and availability while\
    \ \nachieving high reliability and efficiency. Nodes of this \nlayer were regarded\
    \ in all earlier studies as smart gates \nthat carried out different functions.\
    \ However, consider-\ning the importance of these systems, it may be difficult\
    \ to \nemploy mandatory and insufficient demands at this level \ndue to costs.\
    \ Some advantages of using the proposed \nframework of the device and fog layer\
    \ include:\n• BS involvement to reduce the burden on Fog nodes \nfor task management\n\
    • Reducing network traffic\n• Dynamic allocation of tasks to the fog nodes when\
    \ \nthe threshold reaches\n• BS stat list  (BSSL) makes the whole framework fault\
    \ \ntolerant.\nBelow is a discussion of some fog layer characteristics\n• Local\
    \ Storage: The fog layer consists of multiple fog \nnodes attached to a BS. Each\
    \ fog node holds its stor-\nage to maintain the input data temporarily.\nFig.\
    \ 1 General schema of the proposed model\nPage 7 of 14\nIlyas et al. Journal of\
    \ Cloud Computing           (2022) 11:84 \n \n• Consistency: The fog layer must\
    \ always be adapt-\nable and compatible, especially in the event of an \nemergency.\
    \ Dynamic reconfiguration of developed \nmachine learning algorithms can be employed\
    \ for \nvarious services [10, 13]. Consistent data transfer \nis required in the\
    \ fog layer. As part of this process, \nboth sensors request data and the fog\
    \ layer assesses \nthe data received from the cloud. The system must \nhave recognized\
    \ an increase in priority level when \nthe irregularity occurs in long-term cardiovascular\
    \ \npatient observation. Data transport to the Cloud is \nalso given priority\
    \ for many characteristics and ser-\nvices. Emergency patients must have a higher\
    \ prior-\nity for data transmission to the cloud than chronic \npatients with\
    \ slower transfer rates [34].\n• Local processing: Data analysis at the fog layer\
    \ \nincreases system sensitivity. By recognizing and \nanticipating emergencies,\
    \ the system can respond \nmore quickly. Rather than transmitting param-\neters\
    \ to the cloud and waiting for a response, the \nfog layer can detect strokes\
    \ locally if elders are at \nrisk for serious conditions (such as strokes). Con-\n\
    sequently, the system will be able to respond more \naccurately and handle problems\
    \ faster. By leverag-\ning data analysis at the fog layer, the system can \nalso\
    \ shorten processing times for critical metrics. \nThrough the analysis of local\
    \ data and feedback \nfrom local users, the system’s availability and reli-\n\
    ability can be increased even without access to \nglobal data.\n• Database: For\
    \ later retrieval and processing, the \ngateways store incoming data in the local\
    \ database \nof the Fog layer. The type and relevance of the data \nwill determine\
    \ whether it should be compressed or \nencoded. Data archiving at the fog layer\
    \ boosts effi-\nciency for ongoing data storage due to network con-\nstraints\
    \ while transferring data to the Cloud and pro-\ncessing by fog nodes.\n• Scheduling:\
    \ It is crucial to respond to these requests \nand allocate resources as efficiently\
    \ and quickly as \npossible. Several occurrences and requests are trans-\nferred\
    \ to electronic healthcare systems at once. The \ntask assignment module in fog\
    \ nodes provides a \nmechanism to evenly distribute the incoming tasks \namong\
    \ fog nodes. In this way, not only a specific fog \nnode will not be overburdened\
    \ but other fog node \nresources will also be utilized in a distributed man-\n\
    ner. The suggested approach for this is dynamic in \nway that it assigns tasks\
    \ considering the current \nload status of the fog node. In this way, by offering\
    \ \na top-notch workflow scheduler, numerous non-task \nrequirements, such as\
    \ availability, performance, and \nreliability, can be improved.\nThe tier 3 (cloud\
    \ layer)\nThis layer exchanges information with the Fog layer and \nalso receives\
    \ processes and stores data. Because these \nsystems (physicians, patients, etc.)\
    \ seamlessly integrate \nwith other resources such as electronic versions and\
    \ web \nresources, users (physicians, patients, etc.) can access the \ninformation\
    \ whenever and wherever they need it. The \nplatform’s device and cloud layers\
    \ are separated, which \nimproves application flexibility and, generally, makes\
    \ \nhealthcare apps more effective. It is possible to classify \npatient-related\
    \ health data as either public or private \nusing the public and private Clouds\
    \ in this layer [10]. \nProcessing the patient’s medical data in the cloud layer,\
    \ \ngives insights into the present health status, thus, provid-\ning support\
    \ to medical practitioners in taking a decision. \nThe cloud layer architecture\
    \ is depicted in Fig.  2. Each \ncluster in this system has a proxy server, which\
    \ interacts \nwith a controller over the network. To keep the delivery \nof clustered\
    \ jobs on schedule, the controller must create a \ncomponent in this regard.\n\
    Abstract models of the proposed architecture\nCrouch developed the 4 + 1 model\
    \ (Fig. 3) to explain the \narchitecture of software systems.\n• Logical View:\
    \ The system’s features are provided to \nusers as a part of the logical perspective.\
    \ Diagrams \nof classes and steps are used to illustrate the logical \nview. The\
    \ main sequence diagram for our system, \nshown in Fig. 4, shows how the parts\
    \ work together.\n• Development View: Components of the proposed \nmodel can be\
    \ identified using UML. The proposed \narchitecture’s component diagram is shown\
    \ in Fig. 5:\n• Component on the IoTDW:\n i. Receiving monitoring data from sensors.\n\
    \ ii. Connection with Fog layer\n iii. Receive alerts\n iv. Manage local data\n\
    \ v. Interface\n• Component of fog nodes:\n \ni. Receiving data from IoTDW.\n\
    \ \nii. Device manager\n \niii. Scheduling\n \niv. Task assignment\n \nv. Data\
    \ processing\nPage 8 of 14\nIlyas et al. Journal of Cloud Computing          \
    \ (2022) 11:84 \nFig. 2 Layered Architecture of proposed framework\nFig. 3 4 +\
    \ 1 model for software systems\nPage 9 of 14\nIlyas et al. Journal of Cloud Computing\
    \           (2022) 11:84 \n \n \nvi. Local data storage and retrieval\n• Component\
    \ on the cloud:\n i. Data storage\n ii. Data analysis\n iii. scheduling\nProcess\
    \ View: A process perspective talks about \nthe system’s dynamic elements and\
    \ explains its pro-\ncesses and how they interact. It also emphasizes how \nthe\
    \ system behaves while it is running. Concurrency, \ndistribution, performance,\
    \ and scalability are all cov-\nered by the process view. When the Fog node detects\
    \ \nan emergency and contacts the closest medical facility \nvia the gateway,\
    \ the data will be saved. If necessary, the \nFig. 4 Main sequence diagram\nPage\
    \ 10 of 14\nIlyas et al. Journal of Cloud Computing           (2022) 11:84 \n\
    patient’s doctor or family will also be contacted. Fig-\nure 6 depicts this scenario.\n\
    Physical View: The system is displayed in the physi-\ncal view as seen by a systems\
    \ engineer. This point of \nview focuses on the physical interactions and organi-\n\
    zational structure of the software elements in the \nphysical layer.\nUse Cases:\
    \ In this viewpoint, the architecture is \ndescribed using a variety of examples\
    \ or situations. \nThe links between the items and processes are out-\nlined in\
    \ these situations. Developers are in charge of \nidentifying certain requirements\
    \ and designing a sys-\ntem to satisfy them because various systems may have \n\
    distinct needs [35]. The two types of requirements are \noften distinguished as\
    \ functional requirements and \nnon-functional criteria that the system must satisfy.\n\
    Simulation of the proposed architecture \nfor verification\nIn this section, we\
    \ simulate the proposed architecture \nto validate its working. Based on the activity\
    \ flow and \ncomponent diagram, the suggested architecture was \nmodeled in Eclipse\
    \ IDE using iFogSim toolkit [36]. The \ntool supports and simulates fog-based\
    \ system architec-\nture for analysis.\nPerformance\nThis attribute refers to\
    \ the fact of how long it takes to \nrespond to an event. To this end, when using\
    \ the system \nat peak time, nodes in the Fog and Cloud layer should \nhandle\
    \ high-quality services and, in the event of an over-\nload of a node, requests\
    \ are sent to lower-loaded nodes \nand thus processed in real-time.\nReconfiguration\n\
    Fog-based IoT systems usually consist of dynamic config-\nuration. In our framework,\
    \ we describe systems that do \nnot only include static structures but can react\
    \ to events \nand specific requirements by the reconfiguration of the \nruntime\
    \ of components and connectors, especially while \nmanaging the task assignment\
    \ of incoming tasks at fog \nnodes.\nWe formulated two algorithms (i) efficient\
    \ scanning \nmechanism (ESM) and (ii) load balancing for real-time \n(LBRT) to\
    \ observe the performance through latency \nchanges in the environment. Network\
    \ usage was also \nanalyzed for the suggested architecture and techniques. \n\
    The results depicted a 20%–25% improvement using the \nproposed architecture and\
    \ algorithms. The outcomes for \nnetwork usage and latency ratio are displayed\
    \ in Figs. 7 \nand 8.\nFig.  5 Component diagram\nPage 11 of 14\nIlyas et al.\
    \ Journal of Cloud Computing           (2022) 11:84 \n \nIn Figs.  8 and 9, it\
    \ can be seen that network usage, \nwhich is an important parameter for health\
    \ moni-\ntoring systems, remains more or less measured and \nincreases with the\
    \ number of processing loads on the \nfog node. Similarly in the case of latency\
    \ ratio, with the \nincreasing number of threads, the latency increases in \n\
    a controlled manner. While comparing the results with \nFig. 6 Activity diagram\
    \ of the model\nFig.  7 Network usage for various configurations\nFig. 8 Latency\
    \ ratio of the proposed architecture for various \nconfigurations\nPage 12 of\
    \ 14\nIlyas et al. Journal of Cloud Computing           (2022) 11:84 \nthe schemes\
    \ FNPA [8] and LBS [9] and other recent \nresearch, the suggested architecture\
    \ and algorithms \nperform better as shown in Figs. 9 and 10 in terms of \ncommunication\
    \ and transmission delay, load balancing, \nand task scheduling.\nAs seen in Figs. \
    \ 9 and 10. The suggested software \narchitecture along with devised algorithms\
    \ ESM and \nLBRT, the results show notable improvement. The \nparameters used\
    \ for the topology of fog-based environ-\nment are shown in Table 2.\nConclusion\n\
    This article introduced hybrid architecture with built-in \nsupport for cloud\
    \ and fog for IoT-based healthcare. The \nthree layers of the proposed architecture\
    \ are as follows: \n(1) the device layer, which includes wearable IoT sen-\nsors,\
    \ and other end-user devices which connect to the \nIoTDW for sending data further;\
    \ (2) the fog layer, which \nhas a smart component for the dynamic decision to\
    \ for \nimproving fog efficiency; and (3) the cloud layer, which \nhas resources\
    \ for processing, storing, and retrieving \ndata to offer services to end users.\
    \ In addition, a novel \ntask management technique is presented in this study\
    \ \nthat takes advantage of the fog layer to ensure continu-\nous service delivery,\
    \ data consistency, and load balancing. \nModel 4 + 1 demonstrates the proposed\
    \ architecture’s \nlayout and goes into great depth on its essential compo-\n\
    nents. The suggested architecture was simulated using \ndevised algorithms ESM\
    \ and LBRT, which shows a nota-\nble improvement in comparison to the existing\
    \ schemes \nin terms of network usage and latency. Future work in a \nsimilar\
    \ domain may include novel security and privacy \napproaches such as blockchain\
    \ and machine learning for \nhandling health monitoring data. Moreover, patient\
    \ and \nmedical practitioner mobility aspects are also intended to \nbe investigated\
    \ in detail for future study.\nFig. 9 Comparison of network usage\nFig. 10 Comparison\
    \ of processing delay\nTable 2 Topology parameters\nPage 13 of 14\nIlyas et al.\
    \ Journal of Cloud Computing           (2022) 11:84 \n \nAcknowledgments\nThe\
    \ authors express their appreciation to all their friends and colleagues for \n\
    their leads and comments to improve the research work.\nAuthors’ contributions\n\
    Conceptualization by Abeera Ilyas and Mohammed Naif Alatawi; Methodology \nby\
    \ Mohammed Naif Alatawi, and Yasir Hamid; Software and formal analysis by \nAbeera\
    \ Ilyas and Saeed Mahfooz4; Investigation by Saeed Mahfooz, and Islam \nZada;\
    \ Resources and data collection by Writing by Islam Zada, and Neelam \nGohar;\
    \ Validation by: Mohd Asif Shah. The author(s) read and approved the \nfinal manuscript.\n\
    Funding\nThe project has not received any funding.\nAvailability of data and materials\n\
    The supporting data can be provided on request.\nDeclarations\nEthics approval\
    \ and consent to participate\nThe research has consent for Ethical Approval and\
    \ Consent to participate.\nConsent for publication\nThe research has research\
    \ consent from all authors and there is no conflict.\nCompeting interests\nThe\
    \ authors declare that they have no competing interests.\nAuthor details\n1 Department\
    \ of Computer Science, University of Peshawar, Peshawar, Pakistan. \n2 Information\
    \ Technology Department, Faculty of Computers and Information \nTechnology University\
    \ of Tabuk, Tabuk, Saudi Arabia. 3 Abu Dhabi Polytechnic, \nAbu Dhabi, United\
    \ Arab Emirates. 4 Faculty of computing, International Islamic \nUniversity Islamabad,\
    \ Islamabad, Pakistan. 5 Shaheed Benazir Bhutto Women \nUniversity, Peshawar,\
    \ Pakistan. 6 Kebri Dehar University, Kebri Dehar, Ethiopia. \nReceived: 15 September\
    \ 2022   Accepted: 12 November 2022\nReferences\n 1. \nButpheng C, Yeh KH, Xiong\
    \ H (2020) Security and privacy in IoT-cloud-\nbased e-health systems—a comprehensive\
    \ review. Symmetry 12(7):1191\n 2. \nFersi G (2021) Fog computing and internet\
    \ of things in one building \nblock: a survey and an overview of interacting technologies.\
    \ Cluster \nComput 24:2757–2787\n 3. \nSantos GL, Gomes D, Kelner J, Sadok D,\
    \ Silva FA, Endo PT, Lynn T (2020) \nThe internet of things for healthcare: optimising\
    \ e-health system avail-\nability in the fog and cloud. Int J Comput Sci Eng 21(4):615–628\n\
    \ 4. \nSafdar Z, Farid S, Qadir M, Asghar K, Iqbal J, Hamdani FK (2020) A novel\
    \ \narchitecture for the internet of things based E-health systems. J Med \nImaging\
    \ Health Inform 10(10):2378–2388\n 5. \nRahimiMoosavi S, NguyenGia T, Nigussie\
    \ E, Rahmani AM, Virtanen S, \nTenhunen H, Isoaho J (2016) End-to-end security\
    \ scheme for mobility \nenabled healthcare internet. Future Gener. Comput. Syst.\
    \ 64:108–124\n 6. \nAlli AA, Alam MM (2020) The fog cloud of things: a survey\
    \ on concepts, \narchitecture, standards, tools, and applications. Internet of\
    \ Things \n9:100177\n 7. \nFan Q, Ansari N (2018) Towards workload balancing in\
    \ fog computing \nempowered IoT. IEEE Transactions on Network Science and Engineering\
    \ \n7(1):253–262\n 8. \nTun KN, Paing AMM (2020) Resource aware placement of IoT\
    \ devices in \nfog computing. In: In 2020 international conference on advanced\
    \ infor-\nmation technologies (ICAIT). IEEE, pp 176–181\n 9. \nAsghar A, Abbas\
    \ A, Khattak HA, Khan SU (2021) Fog based architecture \nand load balancing methodology\
    \ for health monitoring systems. IEEE \nAccess 9:96189–96200\n 10. Farahani B,\
    \ Firouzi F, Chang V, Badaroglu M, Constant N, Mankodiya K \n(2018) Towards fog-driven\
    \ IoT eHealth: promises and challenges of IoT in \nmedicine and healthcare. Future\
    \ Gener. Comput. Syst. 78:659–676\n 11. Woo MW, Lee J-W, Park K-H (2018) A reliable\
    \ IoT system for personal \nhealthcare devices. Future Gener. Comput. Syst. 78(2):626–640\n\
    \ 12. Verma P, Sood S-K (2018) Cloud-centric IoT based disease diagnosis \nhealthcare\
    \ framework. J. Parallel Distrib. Comput. 116:27–38\n 13. Din S, Paul A (2019)\
    \ Smart health monitoring and management system: \ntoward autonomous wearable\
    \ sensing for internet of things using big \ndata analytics. Future Gener Comput\
    \ Syst 91:611–619\n 14. Ullah S, Kim K, Kim HK, Imran M, Khan P, Tovar E, Ali\
    \ F (2019) UAV-enabled \nhealthcare architecture: issues and challenges. Future\
    \ Gener. Comput. \nSyst. 97:425–432\n 15. Kumari A, Tanwar S, Tyagi S, Kumar N\
    \ (2018) Fog computing for health-\ncare 4.0 environment: opportunities and challenges.\
    \ Comput Electr Eng \n72:1–13\n 16. Dhanvijay MM, Patil CS (2019) Internet of\
    \ things: a survey of ena-\nbling technologies in healthcare and its applications.\
    \ Comput Netw \n153:113–131\n 17. Abbasi M, Mohammadi-Pasand E, Khosravi MR (2021)\
    \ Intelligent \nworkload allocation in IoT–fog–cloud architecture towards mobile\
    \ edge \ncomputing. Comput Commun 169:71–80\n 18. Mshali H, Lemlouma T, Moloney\
    \ M, Magoni D (2018) A survey on health \nmonitoring systems for health smart\
    \ homes. Int J Ind Ergon 66:26–56\n 19. Hazra A, Adhikari M, Amgoth T, Srirama\
    \ SN (2021) Stackelberg game for \nservice deployment of IoT-enabled applications\
    \ in 6Gaware fog networks. \nIEEE Internet Things J 8(7):5185–5193\n 20. Hazra\
    \ A, Adhikari M, Amgoth T, Srirama SN (2020) Joint computation off-\nloading and\
    \ scheduling optimization of IoT applications in fog networks. \nIEEE Trans Netw\
    \ Sci Eng 7(4):3266–3278. https:// doi. org/ 10. 1109/ TNSE. \n2020. 30217 92\n\
    \ 21. Rahmani A-M, Gia T-N, Negash B, Anzanpour A, Azimi I, Jiang M, Liljeberg\
    \ \nP (2018) Exploiting smart E-health gateways at the edge of healthcare \ninternet-of-things:\
    \ a fog computing approach. Future Gener. Comput. \nSyst. 78:641–658\n 22. Tuli\
    \ S, Basumatary N, Gill SS, Kahani M, Arya RC, Wander GS, Buyya R \n(2020) HealthFog:\
    \ “an ensemble deep learning based smart healthcare \nsystem for automatic diagnosis\
    \ of heart diseases in integrated IoT and \nfog computing environments.”. Future\
    \ Gener. Comput Syst 104:187–200\n 23. Constant N, Borthakur D, Abtahi M, Dubey\
    \ H, Mankodiya K (2017) Fog-\nassisted wiot: a smart fog gateway for end-to-end\
    \ analytics in wearable \ninternet of things. arXiv preprint arXiv:1701.08680.\
    \ https:// arxiv. org/ abs/ \n1701. 08680\n 24. Ali F, El-Sappagh SH, Riazul Islam\
    \ SM, Ali A, Attique M, Imran M, Kwak K-S \n(2021) An intelligent healthcare monitoring\
    \ framework using wear-\nable sensors and social networking data. Future Gener.\
    \ Comput. Syst. \n114:23–43\n 25. Kaur A, Sood S-K (2021) Cloud-fog assisted energy\
    \ efficient architectural \nparadigm for disaster evacuation. Inf Syst. https://\
    \ doi. org/ 10. 1016/j. is. \n2021. 101732\n 26. Alam MD, ShirajumMunir MD, Zia\
    \ Uddin MD, ShamsulAlam MD, Nguyen \nDang T, Hong CH (2019) Edge-of-things computing\
    \ framework for \ncost-effective provisioning of healthcare data. J. Parallel\
    \ Distrib. Comput. \n123:54–60\n 27. Rahmani AM, Babaei Z, Souri A (2020) Event-driven\
    \ IoT architecture for \ndata analysis of reliable healthcare application using\
    \ complex event \nprocessing. Clust Comput 24:1347\n 28. Sahoo PK, Mohapatra SK,\
    \ Wu SL (2018) SLA based healthcare big data \nanalysis and computing in cloud\
    \ network. J Parallel Distrib Comput \n119:121–135\n 29. Sarrab M (2021) Assisted-fog-based\
    \ framework for IoT-based healthcare \ndata preservation. Int J Cloud Appl Comput\
    \ (IJCAC) 11:1–16\n 30. Chudhary R, Sharma S (2021) Fog-cloud assisted framework\
    \ for heteroge-\nneous internet of healthcare things. Procedia Comput Sci 184:194–201\n\
    \ 31. Mahini H, Rahmani AM, Mousavirad SM (2021) An evolutionary game \napproach\
    \ to IoT task offloading in fog-cloud computing. J Supercomput \n77:5398–5425\n\
    \ 32. Alazab M, Khan LU, Koppu S, Ramu SP, Iyapparaja M, Boobalan P et al \n(2022)\
    \ Digital twins for healthcare 4.0-recent advances, architecture, and \nopen challenges.\
    \ IEEE Consumer Electronics Magazine\nPage 14 of 14\nIlyas et al. Journal of Cloud\
    \ Computing           (2022) 11:84 \n 33. Chengoden, R., Victor, N., Huynh-The,\
    \ T., Yenduri, G., Jhaveri, R. H., Alazab, \nM., ... & Gadekallu, T. R. (2022).\
    \ Metaverse for Healthcare: A Survey on \nPotential Applications, Challenges and\
    \ Future Directions. arXiv preprint \narXiv:2209.04160\n 34. Chihoub EH, Ibrahim\
    \ S, Antoniu G, Perez SM (2014) Consistency manage-\nment in cloud storage systems.\
    \ In: Sakr S, Gaber M (eds) Advances in data \nprocessing techniques in the era\
    \ of big data. CRC Press, Boca Raton\n 35. Andrade E, Nogueira B, Farias Júnior\
    \ ID, Araújo D (2021) Performance, and \nAvailability Trade-Offs in Fog–Cloud\
    \ IoT Environments. J Netw Syst Man-\nage 29:2\n 36. Gupta H, Vahid Dastjerdi\
    \ A, Ghosh SK, Buyya R (2017) iFogSim: a toolkit \nfor modeling and simulation\
    \ of resource management techniques in \nthe internet of things, edge and fog\
    \ computing environments. Software: \nPractice and Experience 47(9):1275–1296\n\
    Publisher’s Note\nSpringer Nature remains neutral with regard to jurisdictional\
    \ claims in pub-\nlished maps and institutional affiliations.\n"
  inline_citation: '>'
  journal: Journal of cloud computing (Heidelberg)
  limitations: '>'
  pdf_link: https://journalofcloudcomputing.springeropen.com/counter/pdf/10.1186/s13677-022-00371-w
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Software architecture for pervasive critical health monitoring system using
    fog computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2022.3177278
  analysis: '>'
  authors:
  - Ijaz Ahmad
  - Zeeshan Asghar
  - Tanesh Kumar
  - Gaolei Li
  - Ahsan Manzoor
  - Konstantin Mikhaylov
  - Syed Attique Shah
  - Marko Höyhtyä
  - Jarmo Reponen
  - Jyrki Huusko
  - Erkki Harjula
  citation_count: 17
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE-SA IEEE Spectrum More Sites 404: Page Not Found The
    page you were looking for could not be found. Browse or search IEEE Xplore to
    continue. Email us at onlinesupport@ieee.org for further assistance. © Copyright
    2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/6514899/09780134.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Emerging Technologies for Next Generation Remote Health Care and Assisted
    Living
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/su14073919
  analysis: '>'
  authors:
  - Muhammad Saad
  - Muhammad Khalid Khan
  - Maaz Bin Ahmad
  citation_count: 9
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Saad, M.; Khan, M.K.;\nAhmad, M.B. Blockchain-Enabled\nVehicular Ad\
    \ Hoc Networks: A\nSystematic Literature Review.\nSustainability 2022, 14, 3919.\
    \ https://\ndoi.org/10.3390/su14073919\nAcademic Editors: Efthimios Bothos,\n\
    Panagiotis Georgakis, Babis Magoutas\nand Michiel de Bok\nReceived: 16 January\
    \ 2022\nAccepted: 15 February 2022\nPublished: 25 March 2022\nPublisher’s Note:\
    \ MDPI stays neutral\nwith regard to jurisdictional claims in\npublished maps\
    \ and institutional afﬁl-\niations.\nCopyright:\n© 2022 by the authors.\nLicensee\
    \ MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nsustainability\n\
    Review\nBlockchain-Enabled Vehicular Ad Hoc Networks: A Systematic\nLiterature\
    \ Review\nMuhammad Saad, Muhammad Khalid Khan\nand Maaz Bin Ahmad *\nKarachi Institute\
    \ of Economics and Technology (KIET), College of Computing and Information Sciences\
    \ (CoCIS),\nKarachi 75190, Pakistan; muhammadsaad55@live.com (M.S.); khalid.khan@kiet.edu.pk\
    \ (M.K.K.)\n* Correspondence: maaz@kiet.edu.pk; Tel.: +92-33-3526-4960\nAbstract:\
    \ This systematic literature review provides an extensive categorization of the\
    \ blockchain-\nenabled applications across the domain of vehicular ad hoc networks\
    \ (VANETs). Within the paradigm\nof distributed ledger technology (DLT), the communication\
    \ models and practices for VANETs have\nbeen revolutionized. An analytical review\
    \ and a survey were conducted to explore the advancements\nof blockchain and VANETs.\
    \ The techniques, limitations, and advantages of blockchain deployment\nin VANETs\
    \ are discussed for the effective implementation of a decentralized network. To\
    \ this end,\n68 studies were selected on the basis of the procedural steps to\
    \ provide a comprehensive overview\nof blockchain and the smart contracts in VANETs.\
    \ In particular, a decentralized communication\nmodel is also proposed for the\
    \ advanced implementation of blockchain in VANETs. Researchers and\npractitioners\
    \ are being attracted to these technologies for applications for various industrial\
    \ sectors.\nTherefore, this study also emphasizes the identiﬁcation of any blockchain-related\
    \ open issues for\nfuture prospects. The comprehension of blockchain applications\
    \ for the Internet of Vehicles (IoV)\nis also explored in order to ﬁll the research\
    \ gap on advanced communication networks across the\nInternet of Things.\nKeywords:\
    \ blockchain; distributed ledger technology; Internet of Things; Internet of Vehicles;\n\
    machine-to-machine; mobile ad hoc networks; roadside unit; software-deﬁned network;\
    \ vehicular ad\nhoc networks\n1. Introduction\nA blockchain is the extended form\
    \ of a decentralized network that is responsible for\nrecording transactional\
    \ data or information in the form of blocks that are sequentially\nlinked to each\
    \ other. The architecture of blockchain makes it difﬁcult to tamper with\nand\
    \ difﬁcult to modify information without having a consensus mechanism. In 2008,\n\
    blockchain technology emerged with the revolution in digital currency known as\
    \ “bitcoin”.\nThe blockchain network provides immutability, security, transparency,\
    \ and reliability.\nTherefore, the inherent characteristics of blockchain technology\
    \ are being recognized by\npractitioners for their implementation in different\
    \ sectors. The integration of blockchain\ntechnology with other domains helps\
    \ to overcome the privacy and security limitations\nby providing a tamper-proof\
    \ network system. For example, an intelligent transportation\nsystem heavily relies\
    \ on information sharing across multiple entities. The open-channel\ninformation\
    \ sharing presents several security issues, such as denial-of-service attack (DDoS),\n\
    man-in-the-middle attacks, etc. The application of blockchain technology can make\
    \ this\ninformation tamper-proof, transparent, and reliable. Similarly, it can\
    \ be applied to the\nInternet of Things (IoT) and the Internet of Vehicles (IoV),\
    \ as well as to other domains\nwhere secure data transmission is required.\nIn\
    \ recent years, several studies, discussions, and projects regarding blockchain\
    \ have\nbeen recognized by researchers. The concept of blockchain is based on\
    \ distributed ledger\ntechnology (DLT), which delivers a radical change to the\
    \ existing trust model in order\nSustainability 2022, 14, 3919. https://doi.org/10.3390/su14073919\n\
    https://www.mdpi.com/journal/sustainability\nSustainability 2022, 14, 3919\n2\
    \ of 31\nto overcome the limitations of centralized systems, and which provides\
    \ an efﬁcient data-\ntrading mechanism. The conventional business processes are\
    \ highly dependent on cen-\ntralized systems (e.g., banks) to develop trust across\
    \ the participants [1,2]. However, the\ncentralized system always remains vulnerable\
    \ to multiple attacks. Researchers have pub-\nlished several studies with the\
    \ aim of mitigating the artiﬁcial alterations to the system using\nblockchain.\
    \ The blockchain architecture that is based on trust is proposed by researchers\
    \ to\nprevent security attacks, including Sybil, DDoS, and MAC layer attacks [3].\
    \ The challenge\nof security is one of the key areas of research in the realm\
    \ of blockchain and its applications.\nBusiness operations and activities can\
    \ be made secure, transparent, and immutable by\nusing the emerging blockchain\
    \ technology. The immutable, decentralized, and distributed\ncharacteristics of\
    \ blockchain also bring innovation to other technologies as composite uses\nof\
    \ DLT [4].\nBlockchain is considered to be a connected chain of sequential blocks.\
    \ Each individual\nblock represents the record of a digital transaction that is\
    \ secured using cryptographic\ntechniques. A peer-to-peer network (P2P) assists\
    \ in creating the blocks, along with their\nvalidation, and the consensus is achieved\
    \ by having majority votes in a blockchain network.\nThis method provides a transparent,\
    \ secure, and trustworthy model of blockchain where\nthe transactions between\
    \ the nodes are concerned. DLT has emerged to automate business\nprocesses and\
    \ operations without depending on a centralized third party [1,4]. The smart\n\
    implementation of blockchain in healthcare is also gaining attention for the achievement\
    \ of\na decentralized system for remote patient monitoring [5], tamper-proof patient-data-storage\n\
    management [6], and to preserve privacy in the healthcare sector [7]. Practitioners\
    \ have\nalso implemented the concepts of blockchain in various domains to omit\
    \ the centralized\nsystems by using distributed systems, such as in trade ﬁnance\
    \ [8], healthcare, electronic\nvoting [9], farming, and the insurance sector [10,11],\
    \ in order to depict the signiﬁcance\nof blockchain.\nThe vehicular ad hoc network\
    \ (VANET) is one of the major components of intelligent\ntransportation systems\
    \ (ITSs). Therefore, the current research always takes care of VANETs\nin realm\
    \ of intelligent transportation systems. The smart implementation of VANETs is\n\
    imperative, and it offers several advantages for different industries. For example,\
    \ oil\nmarketing companies (OMCs) are eager to have a digitalized system to keep\
    \ tabs on\ntheir ﬂeets and drivers, along with the product movement. Similarly,\
    \ logistics companies\nneed to have an intelligent transportation system to minimize\
    \ delays and maximize the\nperformance of deliveries. The smart implementation\
    \ of VANETs has the potential to take\ncare of the needs of today’s industries.\
    \ The further applications of VANETs, with respect\nto the current era, are supply\
    \ chain management, solid waste management, autonomous\ntransportation, etc. The\
    \ further detailed applications are discussed later in this review.\nVANETs have\
    \ gained signiﬁcant importance in research areas since the last decade\nbecause\
    \ of their distinctive characteristics, such as mobility, advance topology, and\
    \ wireless\nconnected vehicular technology. VANETs are being recognized by both\
    \ the industry and\nacademia for their implementation on larger scales [12]. In\
    \ the VANETs, the communication\nacross vehicles and the monitoring ofﬁce plays\
    \ a signiﬁcant role. The objective of the\ndynamic vehicular network is to precisely\
    \ circulate the notiﬁcation of events, such as\nweather alerts, road blockages,\
    \ and accidents, as well as emergencies such as roll overs, etc.\nHowever, there\
    \ are limitations of the vehicular network for passing critical messages in\n\
    the speciﬁed radius under a dynamic vehicular environment because of the presence\
    \ of\nsuspicious vehicles. The security issues of the traditional vehicular network\
    \ are ultimately\nexposed. The research related to intelligent transportation\
    \ systems determines and classiﬁes\nthe attacks and threats related to VANETs\
    \ by period [13]. The malevolent node can transmit\nfalse information by disseminating\
    \ other important real-time messages. This malicious\nbehavior of nodes can result\
    \ in the loss of lives and assets. Thus, this is identiﬁed as the\ngreatest challenge\
    \ for the VANET. The decentralized architecture of VANETs is proposed in\nthis\
    \ review to preserve security and privacy.\nSustainability 2022, 14, 3919\n3 of\
    \ 31\nExtensive efforts have been applied to determine blockchain and their applications\n\
    across various domains. This study proceeds from technical discussions on the\
    \ feasibility of\nDLT-enabled IoT [14,15] applications [16], business processes,\
    \ and even security issues [17],\nas well as other domains [18]. The information\
    \ was gathered from 68 articles, including the\nimpact factor publishers, IEEE,\
    \ Springer, Elsevier, MDPI, and ACM, from 2016 to early 2022.\nThis study classiﬁes\
    \ articles on the basis of the evolution of blockchain from the early stages\n\
    until the present date. This study adopted methods to precisely outline the relationships\n\
    between the challenges and the applied techniques.\nThe contemporary literature\
    \ on blockchain applications in VANETs is diversiﬁed with\nrespect to particular\
    \ areas [19,20]. This study further highlights the signiﬁcant research areas\n\
    for practitioners with unorganized comprehensions of the article distribution.\
    \ The research\ngap is identiﬁed across earlier studies on blockchain in the realm\
    \ of VANETs because of the\nlack of peer-reviewed articles that could play signiﬁcant\
    \ roles in the extensive research. The\nﬁrst blockchain-enabled IoT literature\
    \ survey was performed in [20], which covered up to\n2016, with a peer-reviewed\
    \ process in which 18 use cases and 35 examples were found and\ndiscussed in detail\
    \ with regard to the blockchain-enabled IoT. The researchers contributed\nextensively\
    \ to the integration of the IoT with blockchain and suggest subsequent research\n\
    for the advancement of blockchain-enabled IoT applications.\nThis review culminates\
    \ in the integration of blockchain and the IoT for a particular\ndomain of VANETs,\
    \ with its practical implementation unlike those in the existing general\nreviews.\
    \ The articles on blockchain with other domains are rare, and there are hardly\
    \ any\navailable before 2019. Therefore, the earlier research studies are not\
    \ sufﬁcient to provide a\nprecise overview of the integration. Therefore, an extensive\
    \ literature review is targeted\nin this study because of the agile evolution\
    \ of the IoT and the related domains, such as\nblockchain for the IoV and VANETs.\n\
    The existing literature on blockchain-enabled VANETs mainly focuses on the iden-\n\
    tiﬁcation of the use cases, methods, and the safety and security aspects of intelligent\n\
    transportation systems. However, this study is not only limited to the classiﬁcation\
    \ of\nstudies with respect to use cases, privacy, and security, but it also provides\
    \ a collaborative\ndecentralized architecture for VANETs. The proposed blockchain-enabled\
    \ architecture\nhelps to achieve the efﬁcient collaboration of entities, such\
    \ as vehicles, RSUs, and cloud-\nbased infrastructure, which is extended to the\
    \ composite use of the techniques, in contrast\nto the existing studies. This\
    \ study also places an emphasis on the identiﬁcation of the\nresearch domains\
    \ and methods for transportation industry and ﬂeet owners to maximize\ntheir throughputs\
    \ and improve their performances. For example, timely deliveries are\ncritical\
    \ for logistics, supply chain management, and oil marketing companies. Similarly,\n\
    in the healthcare sector, the timely arrival of ambulances and the movement of\
    \ medical\nequipment in pandemic-like situations is imperative. The major contributions\
    \ of this study\nare the classiﬁcations and compositions of the techniques, the\
    \ identiﬁcation of the research\nareas, and the provision of a blockchain-enabled\
    \ framework for a secure, transparent, and\ndecentralized network using the collaborative\
    \ efforts of the entities. The following table\n(Table 1) is used to provide a\
    \ comparison of this study with the existing literature reviews\nin the realm\
    \ of blockchain-enabled IoT technologies.\nSustainability 2022, 14, 3919\n4 of\
    \ 31\nTable 1. Comparison of blockchain-enabled VANETs with the existing literature.\n\
    Studies\nComposite Use\nof Methods to\nImprove\nVehicular\nNetwork by\nEmploying\n\
    Blockchain\nProvision of\nBlockchain-\nEnabled\nDecentral-\nized\nFramework\n\
    Provision of\nSafety and\nSecurity for\nIntelligent\nTransportation\nSystem\n\
    Identiﬁcation\nof Research\nDomains\nWhen\nBlockchain\nMeets\nIoT/VANETs\nIdentiﬁcation\n\
    of Use Cases\nfor the Imple-\nmentation of\nBlockchain-\nEnabled\nIoT/VANETs\n\
    [3]\n(Álvares et al.,\n2021)\n\x14\n×\n\x14\n\x14\n×\n[13]\n(Wan et al.,\n2020)\n\
    ×\n×\n×\n×\n\x14\n[20]\n(Lo et al., 2019)\n\x14\n×\n×\n\x14\n\x14\n[21]\n(Conoscenti\
    \ et al.,\n2016)\n×\n×\n×\n\x14\n\x14\n[22]\n(Iqbal et al.,\n2021)\n\x14\n×\n\x14\
    \n×\n×\n[23]\n(Casino et al.,\n2019)\n×\n×\n\x14\n\x14\n\x14\n[24]\n(Shen &\n\
    Pena-Mora,\n2018)\n\x14\n\x14\n×\n×\n\x14\nBlockchain\nEnabled\nVANETs\n\x14\n\
    \x14\n\x14\n\x14\n\x14\nThis study provides a more comprehensive classiﬁcation\
    \ of the blockchain-related\ndomains and challenges. The advancement of blockchain,\
    \ with its unique characteristics,\nhas improved business operations [25,26],\
    \ immutability, and trust across the participating\nnodes. The integration of\
    \ the IoT and the IoV with blockchain is targeted to provide a\ndecentralized\
    \ architecture for VANETs. The comprehension of blockchain applications for\n\
    the IoV is also explored in order to ﬁll the research gap on the advance communication\n\
    networks across the Internet of Things.\nThe explicit questions proposed in this\
    \ study are related to identifying the needs and\nconnections between the existing\
    \ studies and the possibilities for future research.\nThe targeted research questions\
    \ that are answered in this review are as follows:\nRQ1: What are major research\
    \ areas when blockchain meets VANETs?\nRQ2: How is blockchain used to improve\
    \ VANETs through the employment of different re-\nsearch methodologies?\nRQ3:\
    \ What are the existing IoT and VANET challenges that can be addressed by employing\n\
    blockchain technology?\nRQ4: What are the limitations and challenges when blockchain\
    \ meets with multiple domains, and\nwhich techniques and models can be employed\
    \ to address these limitations?\nThe systematic literature review procedure was\
    \ adopted to classify the correlated\nissues that arise when blockchain meets\
    \ VANETs, and to answer the research questions\ncategorically. This study escalates\
    \ the categorization of blockchain-enabled applications\nby performing a systematic\
    \ review on modern studies. This study outlines the research\ngap between blockchain\
    \ and the IoT by employing a blockchain in VANETs. This paper\ncontributes towards\
    \ blockchain applications in the IoT, and especially in VANETs, through\nan extensive\
    \ analysis of the research articles. The several research areas and gaps are\n\
    Sustainability 2022, 14, 3919\n5 of 31\nhighlighted in the results of this literature\
    \ analysis for the prospective articles. The analysis\nof the literature review\
    \ is sorted as follows: Section 2 deﬁnes the backgrounds of the\ntechnologies,\
    \ such as DLT, blockchain, protocols/contracts, the IoT, the industrial IoT (IIoT),\n\
    machine-to-machine communication (M2M), and VANETs and their evolution towards\
    \ the\nIoV. Section 3 explains the procedure for conducting the review, the methodology,\
    \ and the\nprocedural steps. Sections 4–8 highlight the results, the descriptive\
    \ corpus, and the ﬁndings\nfrom the literature analysis. Section 9 presents a\
    \ discussion, and the review is concluded in\nSection 10.\n2. Background\n2.1.\
    \ Distributed Ledger Technology (DLT)\nDLT has gained in popularity among researchers\
    \ since 2008, and it is being deployed\nin various sectors, for example, in ﬁnancial\
    \ services, energy, the supply chain, the IoT,\nthe IIoT, and VANETs. Blockchain\
    \ technology is based on DLT, which helps it to become\ndecentralized, rather\
    \ than having a centralized dependency. Blockchain enables organiza-\ntions to\
    \ eliminate trust and privacy issues by emphasizing security and privacy-preserving\n\
    techniques. Blockchain can also be referred to as “distributed databases” that\
    \ are managed\nto use an immutable hash tree that cannot be altered or modiﬁed\
    \ in order to ensure security.\nIn particular, the blocks represent records or\
    \ data transactions in the blockchain. Every\nblock has its own hash value, which\
    \ creates the links between the different blocks.\nThe role of DLT in blockchain-enabled\
    \ VANETs is critical to the achievement of efﬁcient\ndata trading across entities\
    \ such as vehicles, RSUs, and infrastructure. It facilitates the\navoidance of\
    \ the dependency of entities on third parties by having a distributed shared\n\
    ledger that consists of information such as trafﬁc, incidents, collisions, weather,\
    \ etc. The\nDLT also provides a trusted handshaking mechanism across the entities.\
    \ This is an inherent\ncharacteristic of blockchain that is used to avoid malicious\
    \ intrusion and to share data\nacross trusted entities. The decentralized architecture\
    \ of VANETs is proposed later in this\nstudy which is based on DLT, where entities,\
    \ such as vehicles, RSUs, and clouds, store the\nperceived information in the\
    \ form of a shared ledger. Similarly, Section 2.7. supports the use\nof DLT in\
    \ blockchain-enabled VANETs by means of vehicle-to-everything communication.\n\
    The blockchain offers a variety of features for security and a distributed architecture\n\
    that can be used for contact tracing. A consensus mechanism is important to achieving\n\
    the integrity and consistency of the transactions within a chain. The common consensus\n\
    mechanisms are proof of work (POW), proof of stake, and the direct acyclic graph.\
    \ Bitcoin\nuses proof of work as the consensus mechanism in order to compete with\
    \ computing\nresources. On the other hand, proof of stake is used for the coin’s\
    \ age competition rather\nthan the computing power. The expansion of POW in the\
    \ realm of blockchain-enabled\nVANETs is discussed later in this literature.\n\
    2.2. Blockchain\nThe analogy of blockchain is self-explanatory as it refers to\
    \ a sequential chain of blocks.\nThe individual block is responsible for holding\
    \ the information on the transactions as\nrecords and as the address of the succeeding\
    \ block. The header and the data of each block\nare encoded using a hashing mechanism\
    \ to ensure the data integrity. Similarly, the blocks\ncreate a network that consists\
    \ of participating nodes that are responsible for the transactions.\nEach participating\
    \ node of the blockchain network copies the chain in its storage in order\nto\
    \ have a complete digital ledger. The concept of blockchain is similar to Google\
    \ spread\nsheets, where a document is distributed across multiple participants,\
    \ and a trail record is\nmaintained with respect to the changes.\nThere are three\
    \ major types of blockchain: public, private, and federated blockchain.\nThe public,\
    \ or the permission less, blockchain is used where the participants are free to\n\
    participate in the consensus mechanism and to avail the beneﬁts accordingly. On\
    \ the other\nhand, the private, or permissioned, blockchain is used for a small\
    \ number of participants,\nwhere only the veriﬁed participants can participate\
    \ in the consensus. The federated, or\nSustainability 2022, 14, 3919\n6 of 31\n\
    consortium, blockchain inherits the properties of both the public and private\
    \ blockchain,\nand it has therefore gained accordingly in popularity among researchers.\n\
    In ref. [27], Nakamoto proposes the decentralized system for digital currency\
    \ known as\n“bitcoin”. The idea of decentralization provides a mechanism for performing\
    \ transactions\nand exchanging messages without depending on third parties or\
    \ central authorities. The\nproposed architecture eliminates the single point\
    \ of the failure mechanism associated\nwith traditional centralized systems. Blockchain\
    \ is based on DLT and consists of growing\nsequential blocks. The individual block\
    \ not only holds the transactional information, but it\nalso stores the link of\
    \ the successive block [28]. The participating nodes also hold the copy\nof the\
    \ chain consisting of the transactional information, known as “the ledger”, with\
    \ mutual\ncoordination in a network. The DLT provides a trustless mechanism without\
    \ relying heavily\non traditional centralized systems. The P2P network builds\
    \ trust among the participating\nnodes in a network having a shared ledger.\n\
    In the IoT context, the decentralized system and schemes may provide a baseline\n\
    of trust without relying on centralized systems [29]. However, the blockchain\
    \ could\nfurther communicate between the IoT nodes in order to improve traceability\
    \ and message\npassing [30]. This further automates the operations and the communication\
    \ across the\nsensors, actuators, and devices in the realm of the IoT. There are\
    \ different variants of\nblockchain that can be applied in particular areas of\
    \ the IoT in order to achieve this\ndecentralized tendency.\n2.3. Smart Contracts\n\
    A “smart contract” is also referred to as “an agreement between the participating\
    \ nodes\nto complete the transactions” [31]. Sabzo proposed this concept in 1996,\
    \ which is deﬁned\nas the “computerized agreement between nodes to perform transactions”.\
    \ This mechanism\nbuilds trust among the nodes on the basis of certain conditions\
    \ outlined in the contract to\nact accordingly [32]. The immutability in the blockchain\
    \ and the smart contracts outperform\nthe traditional contracts between the participants.\
    \ This helps to execute transactions by\neliminating the intermediaries by using\
    \ the permissioned blockchain [33]. Smart contracts\nare also referred to as “programmable\
    \ scripts”, which can be deployed across the blockchain\nnetwork with addresses\
    \ to execute the functionalities [34]. Smart contracts are important\nfor the\
    \ data-centric executions in a network, especially when the blockchain meets the\
    \ IoT\nand other particular domains.\nBlockchain-enabled applications can reap\
    \ beneﬁts with the deployment of smart\ncontracts. The rules and regulations can\
    \ be deﬁned for communication across the IoT\nobjects. The blockchain network\
    \ helps to transfer the contract to each participating node.\nThe execution of\
    \ the contract is triggered when a certain condition in the network is met [35].\n\
    This mechanism also eliminates the interference of other entities [36].\nThe emerging\
    \ DLT is also being opted by well-known organizations, such as Maersk\nand IBM.\
    \ They recently announced the adoption of blockchain technology for commercial\n\
    pilot projects in order to achieve the smooth tracking of shipments, ﬁnance trading,\
    \ and\nthe automation of their other business operations. By using smart contracts,\
    \ the traditional\nmanual commercial processes can be eliminated [37]. Blockchain\
    \ that uses smart contracts\nreduce intermediaries and the costs incurred for\
    \ transactions, and they further improve\ntrading and the automation of business\
    \ operations.\nThe challenges of contracts, such as transaction ordering, contract\
    \ vulnerabilities, and\ncall stacks, are recognized by practitioners as open issues\
    \ for future research. The validation\nand veriﬁcation issues were also highlighted\
    \ by Vaidya in 2020. These issues need to be\naddressed when the integration of\
    \ blockchain with other domains is considered [38].\nHowever, this mechanism still\
    \ requires a systematic approach and mechanism in order to\naddress the challenges\
    \ and limitations.\nSustainability 2022, 14, 3919\n7 of 31\n2.4. Internet of Things\
    \ (IoT)\nThe blockchain and IoT technologies are being considered as the technologies\
    \ of the\nnext generation, or of the information era. The current research highlights\
    \ that 75 bil-\nlion objects, including industrial devices, will be connected\
    \ by 2026. On the other hand,\nthe limitations and challenges of IoT device handshaking,\
    \ connectivity, security, data\ntransmission, and storage are important and need\
    \ to be addressed; the IoT network will\ncollapse if is not able to obtain a stable\
    \ platform. However, blockchain technology is\ngaining major attention from researchers\
    \ for the achievement of state-of-the-art access\ncontrol schemes using blockchain,\
    \ such as the attribute-based access control scheme for\nsecurity, privacy, and\
    \ decentralization [39], and the data privacy and security mechanism\nfor IoT-enabled\
    \ devices [40].\nThe growing blockchain technology has a long way to go in terms\
    \ of other technologies,\nsuch as artiﬁcial intelligence, machine learning, the\
    \ IoT, and the data sciences. In the past\nfew years, an escalation in the research,\
    \ discussions, and projects with regard to the IoT\nhas gained the attention of\
    \ practitioners. The implementation of the IoT and the particular\nsubdomains\
    \ is being applied in the different industrial sectors mentioned in Figure 1.\n\
    The concept of the IoT is based on connecting things that deliver radical change\
    \ to the\nnetwork model of trust between the nodes or devices to solve the pain\
    \ points of the human–\nmachine or M2M interfaces. The traditional operations\
    \ rely heavily on the recording of\nmanual data to promote trust among the nodes.\
    \ However, the manual processes often\nlead to victimization in the forms of suspicious\
    \ attacks and intentional modiﬁcations.\nThe evolution of the IoT and its extensive\
    \ applications require a rethinking of the design\nand architecture.\nFigure 1.\
    \ An overview of the IoT.\nThe advanced implementation of the IoT in the industrial\
    \ sector is also referred to as\nthe industrial Internet of Things (IIoT), where\
    \ things are connected to wireless networks\nfor data gathering and sharing. The\
    \ IIoT has gained signiﬁcant importance in different\nsectors and industries.\
    \ The IIoT devices are also referred to as “actuators”, “sensors”, and\n“electronic\
    \ chips”. The IIoT works in a fashion in which things or sensors gather information\n\
    from their surroundings, communicate with each other, and transmit over the air\
    \ by using\nGSM/GPRS/LTE to drive meaningful information. There can be various\
    \ applications of the\nIoT, e.g., home automation, ﬂeet telematics, fuel chains,\
    \ weather broadcasting, agriculture,\ngeneral supply chains, etc. The industrial\
    \ implementation of IoT devices automates and\nreinforces manufacturing, production,\
    \ and industrial operations.\nSustainability 2022, 14, 3919\n8 of 31\nThere are\
    \ many applications of the IoT, or the IIoT, such as home automation, the\nInternet\
    \ of Vehicles, ﬂeet telematics, fuel telematics, digital card-based e-healthcare\
    \ sys-\ntems [41], smart car parking, etc. The IoT implementation in the industrial\
    \ sector has led\nto the automation of the business operations and activities\
    \ [21]. An overview of IIoT- and\nIndustry-4.0-based applications is illustrated\
    \ in Figure 2, which depicts the evolutions\nof the robotics, electronics, electricity,\
    \ and mass production industries by the advanced\nimplementation of the IoT.\n\
    Figure 2. An overview of Industry 4.0 (mechanization, electricity, electronics,\
    \ and the IoT).\nThe targets and estimates reveal that billions of devices will\
    \ be connected in the coming\nyears. The limitations and challenges of connectivity,\
    \ security, and the cost of things in\nthe IoT are the important factors for practitioners\
    \ to consider when deploying blockchain\ntechnology in the IoT. MachNation forecasts\
    \ that 75 billion devices will be connected by\n2026, and that this will be directly\
    \ proportional to the revenue, with an annual growth rate\nof 15%. The existing\
    \ IoT solutions rely heavily on centralized management systems, but\nthey will\
    \ collapse when there are 75,000 billion devices wired for simultaneous connectivity.\n\
    Therefore, decentralized architecture is required for the stability and scalability\
    \ of IoT\napplications.\nThe IIoT infrastructure is designed in such a way that\
    \ the actuators or sensors gather\ndata from the surroundings and transmit it\
    \ to the edge gateway in order to transit the raw\ndata to the cloud, which further\
    \ performs data-processing activities and derives meaningful\ninformation, as\
    \ is illustrated in Figure 3.\n2.5. Machine-to-Machine Communication (M2M)\nM2M\
    \ communication refers to technology that supports the data transmission and\n\
    interaction of devices. This communication eliminates the human intervention in\
    \ IIoT ap-\nplications. M2M communication connects things, such as sensors, actuators,\
    \ and objects, in\norder to gather information and transmit accordingly [42].\
    \ M2M communication provides\na dynamic resource-sharing mechanism that allows\
    \ IoT entities to share resources with\neach other by using artiﬁcial intelligence\
    \ (AI), deep learning (DL), etc. It also provides\nadvanced architecture for the\
    \ smart communication of IoT devices with each other [43].\nThe ultramodern architecture\
    \ is elaborated in Figure 4.\nSustainability 2022, 14, 3919\n9 of 31\nFigure 3.\
    \ IIoT infrastructure and process diagram.\nFigure 4. M2M communication and architecture.\n\
    2.6. Vehicular Ad Hoc Networks (VANETs)\nVANETs introduce the network of self-organizing\
    \ vehicles that act as mobile nodes.\nThey conﬁne the communication between vehicles\
    \ and roadside units as V2V and V2R.\nThey assists drivers in avoiding collisions,\
    \ in picking the shortest route on the basis of\ntrafﬁc optimization, in identifying\
    \ tolls and the nearest fuel stations, and in enhancing\nthe safety of assets\
    \ and lives [44]. They facilitate the communication of vehicles across\nthe network\
    \ for real-time data transmission. They improve the road safety mechanism\nand\
    \ provide instant alerts or information in order to concern the authorities in\
    \ cases of\nemergency situations, such as roll overs, accidents, etc. The existing\
    \ architecture of VANETs\nalso exposes vulnerabilities, such as data snifﬁng,\
    \ impersonation, and ransomware attacks.\nThe applications related to VANETs are\
    \ usually designed for the assistance of drivers\nand for the safety of assets.\
    \ The emergency response system is studied in this review\nin order to enhance\
    \ the safety and to assist drivers in cases of emergencies, for example,\naccidents,\
    \ roll overs, ﬁres, object collisions, and similar incidents. Real-time audio/video\n\
    streaming is considered to be a major feature of surveillance applications, and\
    \ it can be used\nto investigate and identify the real causes of incidents. VANET\
    \ applications are time-critical\napplications because of the real-time transmission\
    \ of messages across each vehicle or station\nfor decision making.\n2.7. Internet\
    \ of Vehicles (IoV)\nIn the nascent studies, the vehicle receives environmental\
    \ data and roadside informa-\ntion via a VANET [45]. The VANETs are deﬁned as\
    \ the subtypes of mobile ad hoc networks\n(MANETs). The vehicles act like nodes\
    \ in the network. In the advanced stage, the VANET\nSustainability 2022, 14, 3919\n\
    10 of 31\nevolves into the IoV, which promotes the interactions of vehicles with\
    \ each other, or with\nsurrounding units and humans. This phenomenon is similar\
    \ to the evolution of M2M\ncommunication to the IoT. VANETs provide communication\
    \ between vehicles, whereas the\nIoV connects the vehicles and humans within and\
    \ around the vehicles. The IoV aggregates\nthe actuators, vehicles, and other\
    \ IoT devices to create a network system [46]. Cellular\nnetworks have evolved\
    \ VANETs towards the IoV. Practitioners recognize the concept of\nthe Internet\
    \ of Vehicles because of its mobility through the use of GSM/LTE channels [47].\n\
    Figure 5 illustrates the communication architecture of VANETs in more detail.\n\
    Figure 5. VANET communication and architecture.\nIn recent years, practitioners\
    \ have been attracted to the growing technologies of the\nIoT. IoV, 5G, MQTT,\
    \ and M2M technologies are being considered for implementation in\ntime-critical\
    \ systems. Vehicular sensor networks (VSNs) are considered to be the future\n\
    of vehicular networks. VSNs not only ensure an unlimited power supply, but they\
    \ are\nalso endowed with low power consumption. Technological advancement has\
    \ made ﬂeet\nmanagement more efﬁcient. Still, there are a lot of issues for ﬂeet\
    \ managers to deal with\nwhen handling ﬂeet telematics. With the increases in\
    \ trafﬁc and air pollution, there is an\nimmense need for a secure and reliable\
    \ intelligent transportation system (ITS) in order to\nfacilitate ﬂeet managers\
    \ and drivers. The IoT sensors help by providing more awareness of\nthe surroundings\
    \ for the ITS. The vehicles are equipped with sensors for driver assistance,\n\
    and the trafﬁc lights and roadsides are mounted with cameras and sensors. Such\
    \ a complex\nsystem can be handled well by 5G technology [47,48].\nThe IoV further\
    \ facilitates the communication between human drivers and ﬂeet moni-\ntoring staff\
    \ for real-time decision making. The communication models in VANETs, such\nas\
    \ V2V, V2I, V2R, etc., demonstrate the blockchain-enabled authentication schemes\
    \ for\nVANETs [49]. The real-time communication of the Internet of Vehicles is\
    \ bifurcated into\nﬁve categories, which are presented in Figure 6.\nFigure 6.\
    \ An overview of vehicle-to-everything communication.\nSustainability 2022, 14,\
    \ 3919\n11 of 31\n2.7.1. Vehicle-to-Infrastructure (V2I) Communication\nThe V2I\
    \ model supports the wireless communication across the RSUs and the support-\n\
    ing infrastructure.\n2.7.2. Vehicle-to-Roadside Unit (V2R) Communication\nThe\
    \ V2R communication model supports the wireless communication between vehicle\n\
    and the RSUs to transmit information along the servers or the supporting infrastructure.\n\
    2.7.3. Vehicle-to-Sensor (V2S) Communication\nV2S systems support the bi-directional\
    \ communication between different kinds of\nsensors and onboard terminals for\
    \ real-time insights. For example, the object detection\nsensors, the fuel level\
    \ probes, and the load sensors can be connected to the terminal to\nprovide accurate\
    \ fuel level and distance information between the objects to avoid collision.\n\
    2.7.4. Vehicle-to-Vehicle (V2V) Communication\nThe V2V model supports the wireless\
    \ communication across vehicles for sharing\nlocation data, and it consists of\
    \ the speeds and coordinates. For example, V2V commu-\nnication can be helpful\
    \ in providing prior road blockage information to the respective\non-route vehicles.\n\
    2.7.5. Vehicle-to-Human (V2H) Communication\nThe V2H model supports mobility and\
    \ awareness for the nearest users, such as\npedestrians, cyclists, and drivers.\
    \ It further facilitates communication between the driver\nand the vehicle.\n\
    Cellular, or GSM/LTE/5G, technologies will make the above types of communication\n\
    more reliable in the context of future research with regard to intelligent transportation.\
    \ The\nblockchain-enabled reputation model is signiﬁcant among the communication\
    \ models. In\nreputation-enabled models, the provider reputation is validated\
    \ before the storing of its\ndata in the blockchain network [22]. The abovementioned\
    \ composite communication types\nare also called “vehicle-to-everything (V2X)”\
    \ communication.\n2.8. Event-Driven Service-Oriented Architecture (EDSOA) for\
    \ IoT\nService-oriented architecture (SOA) is used when there are heterogeneous\
    \ devices\nand systems. The IoT also deals with heterogeneous devices. These are\
    \ made by different\nmanufacturers and follow different communication protocols.\
    \ SOA provides technology\nand language independence. The further implementation\
    \ of SOA with respect to the\ndistributed systems has been evaluated by practitioners\
    \ for the proposal of event-driven\narchitecture. The EDSOA is being practiced\
    \ in the ﬁeld of the IoT to deal with real-time\ninformation. The request and\
    \ response modes are processed by the service in the event-\ndriven architecture\
    \ [50], as is mentioned in Figure 7.\nFigure 7. EDSOA service communication. Reprinted\
    \ with permission from ref. [50]. Copyright\nLan et al., 2015.\nIn traditional\
    \ systems, the client/server approach is used for data communication.\nThis process\
    \ is time-consuming since the client must wait for the server to respond. The\n\
    Sustainability 2022, 14, 3919\n12 of 31\ntraditional client/server approach has\
    \ limitations for IoT-based real-time applications, such\nas vehicle tracking,\
    \ router and journey management, and emergency response systems.\nThe EDSOA has\
    \ been analyzed by practitioners for VANETs for faster and more reliable\ncommunication\
    \ across things.\n3. Materials and Methods\nThe SLR was conducted according to\
    \ the proposed guidelines of Kitchenham in [51].\nThe following steps were performed\
    \ to answer the research questions: (1) Planning and\nconducting the review; (2)\
    \ Inclusion/exclusion criteria; (3) Abstract and article examination;\nand (4)\
    \ Results and descriptive analysis of the corpus.\n3.1. Planning and Conducting\
    \ the Review\nThis SLR was established to identify the relationship between the\
    \ blockchain and\nthe IoT towards the particular domain of VANETs. Since the emergence\
    \ of blockchain\ntechnology, research studies, and the related works, practices,\
    \ and standards related to\nblockchain, smart contracts, the IoT, and DLT are\
    \ unfolding. We selected a period of\nsix years (2016–2021 (extended to early\
    \ 2022)) from which to adopt the most recent research\nwork on blockchain-enabled\
    \ VANETs. This study followed the research guidelines provided\nby Kitchenham\
    \ in 2009 in [51] to develop the state-of-the-art replicable study. The articles\n\
    from impact factor journals were targeted to maintain the quality of this study.\
    \ We analyzed\nand explored the extant literatures on blockchain and VANETs. The\
    \ search was applied\non IEEE Xplore, Springer, Elsevier, MDPI, ACM, and Google\
    \ Scholar, using the following\nsearch strings:\n1.\n“Blockchain” <AND> “VANETS”;\n\
    2.\n“Blockchain” <AND> “VANETS” <OR> “IoV” <OR> “Internet of Vehicles”.\nThe step-by-step\
    \ procedure for the literature searching and screening is demonstrated\nin Figure\
    \ 8.\nFigure 8. Procedural steps for article assessment.\nSustainability 2022,\
    \ 14, 3919\n13 of 31\n3.2. Inclusion/Exclusion Criteria\nThe inclusion and exclusion\
    \ criteria were established for the article assessment in\norder to extract highly\
    \ authentic and relevant literature. The foci of the research were\nbased on the\
    \ key words related to blockchain and the particular domain of VANETs. The\nkeywords,\
    \ “blockchain”, “VANETs”, “IoV”, and “Internet of Vehicles”, were included on\n\
    the basis of the research interests. A total of 146 articles were shortlisted\
    \ in the ﬁrst step of\nthe searching among the impact factor journals and Google\
    \ Scholar. A total of 18 articles\nwere eliminated because of duplication, and\
    \ the remaining 128 articles were selected for\nfurther analysis and examination.\n\
    3.3. Abstract and Article Assessment\nIn the screening step, a total 68 studies\
    \ were selected out of the 128 studies on the\nbasis of the abstract and literature\
    \ assessment. The articles that were less focused on the\ntargeted topics were\
    \ removed from the study. The selection of 68 studies was based purely\non the\
    \ relevant and concrete ﬁndings and contributions. We further veriﬁed our process\
    \ in\norder to maintain cohesion in the selection of articles. The quality was\
    \ considered at each\nstage, and, during the screening, a further 29 articles\
    \ were eliminated because they were\nnon-impactor publications. The databases\
    \ and research were further extended to early\n2022, and 29 more studies were\
    \ included after the assessment, as is presented in Figure 8.\nA total of 68 studies\
    \ were included in this literature after all of the steps: identiﬁcation,\nscreening,\
    \ eligibility, and extension.\n4. Results\nDescriptive Analysis of the Corpus\n\
    The 68 shortlisted studies are distributed in the form of graph with respect to\
    \ the\nperiod of six years. This distribution demonstrates the escalation of blockchain\
    \ technology\nover the years. The proliferation of blockchain technology also\
    \ enables other domains to\nintegrate and evolve. The evolution of blockchain\
    \ was started in 2008 and, at that time, the\nresearch was mainly focused on digital\
    \ currencies and the associated issues. Since 2016, it\nhas attracted practitioners\
    \ for the evolution of other domains. In particular, the evolution\nof blockchain\
    \ in VANETs is demonstrated by the spread graph of the articles in Figure 9.\n\
    Figure 9. Spread of articles by period.\nFigure 9 demonstrates the spread of the\
    \ articles by period, and it can be observed that\nthe graph of the studies increases\
    \ for blockchain-enabled VANETs over the period of time.\nA further count of the\
    \ studies, the publication years, and the references are presented in\nTable 2.\n\
    Sustainability 2022, 14, 3919\n14 of 31\nTable 2. Numbers of articles by year.\n\
    Year\nNo. of Studies\nArticles\n2018\n3\n[52] (Bao-Kun et al., 2018), [53] (Busygin\
    \ et al., 2018), [54] (Lu et al., 2018)\n2019\n13\n[15] (Li et al., 2019), [55]\
    \ (Ali et al., 2019), [56] (Shrestha & Nam, 2019), [57] (Xie et al.,\n2019), [58]\
    \ (Kim, 2019), [59] (Yang et al., 2019), [60] (Zhang & Wang, 2019), [61]\n(Butt\
    \ et al., 2019), [62] (Lu et al., 2019), [63] (Feng et al., 2019), [64] (De Maio\
    \ et al., 2019),\n[65] (Zhang et al., 2019), [66] (Zheng et al., 2019)\n2020\n\
    26\n[14] (Matheu et al., 2020), [19] (Bagga et al., 2020), [67] (Bonadio et al.,\
    \ 2020), [68]\n(Lei et al., 2020), [69] (Shrestha et al., 2020), [70] (Sutrala\
    \ et al., 2020), [71] (Ahmad et al.,\n2020), [72] (Shala et al., 2020), [73] (Zhuo\
    \ Ma et al., 2020), [74] (Ryu et al., 2020), [75]\n(Zhao et al., 2020)s, [76]\
    \ (Li et al., 2020), [77] (Wang & Zhang, 2020), [78] (Malik et al.,\n2020), [79]\
    \ (Shi et al., 2020), [80] (Yang et al., 2020), [81] (Cho & Perera, 2020), [82]\n\
    (Jiang et al., 2020), [83] (Zhaowei Ma et al., 2020), [84] (Tomar, 2020), [85]\
    \ (Ayaz et al.,\n2020), [86] (Hussain et al., 2020), [87] (Lin et al., 2020),\
    \ [88] (Mershad, 2020), [89]\n(Zheng et al., 2020), [90] (Wang et al., 2020)\n\
    2021\n26\n[3] (Álvares et al., 2021), [40] (Singh et al., 2021), [45] (Peng et\
    \ al., 2021), [49] (Abbas et al.,\n2021), [22] (Iqbal et al., 2021), [91] (Kudva\
    \ et al., 2021), [92] (Shammar et al., 2021), [93]\n(Alharthi et al., 2021), [94]\
    \ (Hei et al., 2021), [95] (Akhter et al., 2021), [96] (Azam et al.,\n2021), [97]\
    \ (Chulerttiyawong & Jamalipour, 2021), [98] (Dwivedi et al., 2021), [99]\n(Firdaus\
    \ et al., 2021), [100] (Ghovanlooy Ghajar et al., 2021), [101] (Jabbar et al.,\
    \ 2021),\n[102] (Kaltakis et al., 2021), [103] (Kapassa et al., 2021), [104] (Kebande\
    \ et al., 2021), [105]\n(Kim, 2021), [106] (Li et al., 2021), [107] (Li et al.,\
    \ 2021), [108] (Liang & Ma, 2021)s, [109]\n(Ma et al., 2021), [110] (Maarouﬁ &\
    \ Pierre, 2021), [111] (Sharma et al., 2021)\nThe emergency surrounding blockchain\
    \ technology led to the ﬁrst ever international\nconference, which was held in\
    \ 2018 and entitled: “the 2018 international conference on\nblockchain”. The focus\
    \ of the conference was exclusively based on the applications of\nblockchain using\
    \ smart contracts. Since then, the studies on blockchain and the related\ndomains\
    \ have been increasing in the major databases and currently still are. The sources\n\
    and the year-wise classiﬁcations of the articles are further presented in Table\
    \ 3 in order to\nhighlight the research horizon across the databases.\nTable 3.\
    \ Sources and year-wise classiﬁcation of articles.\nArticle\nYear\nSource\n[3]\
    \ (Álvares et al., 2021)\n2021\nIEEE\n[40] (Singh et al., 2021)\n2021\nIEEE\n\
    [45] (Peng et al., 2021)\n2021\nElsevier\n[49] (Abbas et al., 2021)\n2021\nMDPI\n\
    [22] (Iqbal et al., 2021)\n2021\nIEEE\n[91] (Kudva et al., 2021)\n2021\nElsevier\n\
    [92] (Shammar et al., 2021)\n2021\nIEEE\n[93] (Alharthi et al., 2021)\n2021\n\
    IEEE\n[94] (Hei et al., 2021)\n2021\nSpringer\n[95] (Akhter et al., 2021)\n2021\n\
    MDPI\n[96] (Azam et al., 2021)\n2021\nIEEE\n[97] (Chulerttiyawong &\nJamalipour,\
    \ 2021)\n2021\nIEEE\n[98] (Dwivedi et al., 2021)\n2021\nIEEE\n[99] (Firdaus et\
    \ al., 2021)\n2021\nMDPI\nSustainability 2022, 14, 3919\n15 of 31\nTable 3. Cont.\n\
    Article\nYear\nSource\n[100] (Ghovanlooy\nGhajar et al., 2021)\n2021\nMDPI\n[101]\
    \ (Jabbar et al., 2021)\n2021\nIEEE\n[102] (Kaltakis et al., 2021)\n2021\nMDPI\n\
    [103] (Kapassa et al., 2021)\n2021\nMDPI\n[104] (Kebande et al., 2021)\n2021\n\
    MDPI\n[105] (Kim, 2021)\n2021\nMDPI\n[106] (Li et al., 2021)\n2021\nIEEE\n[107]\
    \ (Li et al., 2021)\n2021\nIEEE\n[108] (Liang & Ma, 2021)\n2021\nIEEE\n[109] (Ma\
    \ et al., 2021)\n2021\nIEEE\n[110] (Maarouﬁ & Pierre, 2021)\n2021\nIEEE\n[111]\
    \ (Sharma et al., 2021)\n2021\nIEEE\n[14] (Matheu et al., 2020)\n2020\nMDPI\n\
    [19] (Bagga et al., 2020)\n2020\nIEEE\n[67] (Bonadio et al., 2020)\n2020\nSpringer\n\
    [68] (Lei et al., 2020)\n2020\nSpringer\n[69] (Shrestha et al., 2020)\n2020\n\
    Elsevier\n[70] (Sutrala et al., 2020)\n2020\nIEEE\n[71] (Ahmad et al., 2020)\n\
    2020\nIEEE\n[72] (Shala et al., 2020)\n2020\nIEEE\n[73] (Zhuo Ma et al., 2020)\n\
    2020\nIEEE\n[74] (Ryu et al., 2020)\n2020\nIEEE\n[75] (Zhao et al., 2020)s\n2020\n\
    Springer\n[76] (Li et al., 2020)\n2020\nIEEE\n[77] (Wang & Zhang, 2020)\n2020\n\
    IEEE\n[78] (Malik et al., 2020)\n2020\nSpringer\n[79] (Shi et al., 2020)\n2020\n\
    Springer\n[80] (Yang et al., 2020)\n2020\nIEEE\n[81] (Cho & Perera, 2020)\n2020\n\
    ACM\n[82] (Jiang et al., 2020)\n2020\nACM\n[83] (Zhaowei Ma et al., 2020)\n2020\n\
    ACM\n[84] (Tomar, 2020)\n2020\nACM\n[85] (Ayaz et al., 2020)\n2020\nIEEE\n[86]\
    \ (Hussain et al., 2020)\n2020\nIEEE\n[87] (Lin et al., 2020)\n2020\nIEEE\n[88]\
    \ (Mershad, 2020)\n2020\nIEEE\n[89] (Zheng et al., 2020)\n2020\nIEEE\n[90] (Wang\
    \ et al., 2020)\n2020\nIEEE\n[15] (Li et al., 2019)\n2019\nSpringer\n[55] (Ali\
    \ et al., 2019)\n2019\nElsevier\n[56] (Shrestha & Nam, 2019)\n2019\nIEEE\nSustainability\
    \ 2022, 14, 3919\n16 of 31\nTable 3. Cont.\nArticle\nYear\nSource\n[57] (Xie et\
    \ al., 2019)\n2019\nIEEE\n[58] (Kim, 2019)\n2019\nIEEE\n[59] (Yang et al., 2019)\n\
    2019\nIEEE\n[60] (Zhang & Wang, 2019)\n2019\nIEEE\n[61] (Butt et al., 2019)\n\
    2019\nIEEE\n[62] (Lu et al., 2019)\n2019\nIEEE\n[63] (Feng et al., 2019)\n2019\n\
    IEEE\n[64] (De Maio et al., 2019)\n2019\nACM\n[65] (Zhang et al., 2019)\n2019\n\
    IEEE\n[66] (Zheng et al., 2019)\n2019\nIEEE\n[52] (Bao-Kun et al., 2018)\n2018\n\
    Springer\n[53] (Busygin et al., 2018)\n2018\nSpringer\n[54] (Lu et al., 2018)\n\
    2018\nIEEE\n5. RQ1: Blockchain Domains and Research Areas\nThe selected articles\
    \ were classiﬁed with respect to the research domains in order to\nanswer RQ1.\
    \ The classiﬁcation of the domains was achieved by giving consideration to the\n\
    implementation of blockchain technology in VANETs. The research focus was to determine\n\
    the corresponding ﬁelds when the blockchain meets VANETs, including the individual\n\
    entities. The classiﬁcation is demonstrated with the help of the pie chart presented\
    \ in\nFigure 10.\nFigure 10. Classiﬁcation of studies for blockchain-enabled VANETs.\n\
    Figure 10 highlights that 51% of the selected studies are related to blockchain\
    \ and\nVANETs. The graph of the results emphasizes the advancement of blockchain\
    \ technology\nin the realm of VANETs. The literature analysis conﬁrms that researchers\
    \ and practitioners\nare focusing on these technologies. In particular, the studies\
    \ indicate the resolutions\nfor the vehicle ad hoc network issues and challenges\
    \ through the employment of DLT.\nFigure 10 also represents the general and particular\
    \ areas when blockchain is integrated\nwith VANETs. The areas of blockchain, the\
    \ Internet of Vehicles, VANETs, named data\nSustainability 2022, 14, 3919\n17\
    \ of 31\nnetworking (NDN), video stream networks (VSNs), the IoT, V2I, and Fog\
    \ Computing\nare the signiﬁcant literature ﬁndings. The NDN is considered to be\
    \ a future Internet\narchitecture, similar to an IP address, in which the data\
    \ names are used for the packet\nforwarding. NDN is in its earlier stages, and\
    \ it can therefore be considered for future\nresearch in blockchain-enabled VANETs.\
    \ Similarly, VSNs are used for multimedia sharing\nacross entities, and blockchain\
    \ can be applied to VSNs for data integrity and security over\nthe air. Later\
    \ in this section, the implementations of the other areas are discussed in detail.\n\
    6. RQ2: Blockchain Framework for VANETs\nThe blockchain-based research methodologies\
    \ and techniques were determined from\nthe selected articles to answer RQ2. The\
    \ highlighted blockchain techniques can be employed\nto improve VANETs. There\
    \ are 10 techniques that are examined in detail and illustrated in\nFigure 11,\
    \ and the rest of the techniques are mentioned as “other”. Figure 12 segregates\
    \ the\nnumbers of studies with regard to the techniques in order to demonstrate\
    \ the signiﬁcance\nof the studies against the techniques.\nIn Figure 11, the blockchain-based\
    \ techniques are illustrated, and these can be em-\nployed to obtain blockchain-enabled\
    \ VANETs. Blockchain-enabled frameworks [67], decen-\ntralized architectures,\
    \ and techniques based on cryptography are discussed in the majority\nof the selected\
    \ studies in relation to overcoming the integration of the blockchain and\nVANETs.\n\
    Figure 12 emphasizes the techniques of blockchain and their signiﬁcance can be\n\
    analyzed on the basis of the numbers of studies on them. Blockchain frameworks\
    \ and\ndecentralized authentication schemes are discussed in 24 aggregated studies\
    \ out of 68,\nwhich shows that blockchain frameworks are being employed in different\
    \ IoT sectors.\nConnected vehicles (CVs) are one of the most promising areas of\
    \ research in the realm\nof blockchain. Therefore, the framework for blockchain\
    \ and CVs is also studied in the\nmost recent research in order to understand\
    \ the dynamics [112]. Similarly, in this research\non VANETs, eight studies presented\
    \ innovative frameworks for integrating blockchain\nand VANETs.\nFigure 11. An\
    \ overview and classiﬁcation of blockchain techniques.\nSustainability 2022, 14,\
    \ 3919\n18 of 31\nFigure 12. Blockchain techniques and publications.\n6.1. Decentralized\
    \ Architecture for VANETs\nAs can be seen in Figure 12, the blockchain framework\
    \ and the decentralized au-\nthentication mechanism are discussed in a total of\
    \ 24 studies out of 68 shortlisted articles.\nFurthermore, the practically possible\
    \ decentralized architecture is discussed in only 3 stud-\nies out of 68. Therefore,\
    \ an advanced decentralized architecture is one of the most prominent\nneeds of\
    \ our time. The state of the architecture is determined thoroughly in this study\
    \ and\nis demonstrated in Figure 13.\nFigure 13. Decentralized architecture for\
    \ VANETs.\nThe identity and privacy of vehicles and their locations were analyzed\
    \ using the\nconstruction approach of the IoT chain architecture and private blockchain\
    \ [5,38] to obtain\na blockchain-based architecture for VANETs, as is shown in\
    \ Figure 13. The rectiﬁed and\nanalyzed architecture is based on eight different\
    \ components: vehicles, the roadside unit\n(RSU), the onboard unit (OBU), the\
    \ infrastructure, the blockchain network, the smart\ncontract, the miner, and\
    \ the agent node.\nSustainability 2022, 14, 3919\n19 of 31\n6.1.1. Vehicles\n\
    Vehicles are considered to be one of the essential moving components of blockchain-\n\
    enabled VANETs. The onboard units installed in vehicles help facilitate communication\n\
    with the core network.\n6.1.2. On-Board Unit\nThe OBU is also known as a tracking\
    \ device, or a data terminal, which is mounted on\nthe vehicle. This component\
    \ is responsible for the vehicle communication with servers or\nadjacent nodes.\n\
    6.1.3. Roadside Unit\nThe RSU is considered to be an access point in the network.\
    \ This unit is responsible\nfor collecting data from the OBUs and transmitting\
    \ it to the core network in real time. The\nRSU also transmits trafﬁc, emergency,\
    \ and weather-related information for the assistance\nof drivers and ﬂeet staff.\n\
    6.1.4. Core Network\nThe core network consists of several servers and ensures\
    \ connectivity with vehicles\nfor the data transmission through the RSU. The CA,\
    \ database, application, and web servers\nlie in the core network. All the data\
    \ stored on these servers is encrypted in order to conﬁrm\nthe data integrity\
    \ and security. The core network is responsible for maintaining all the\ncommunication\
    \ messages in real time for further decision making.\n6.1.5. Blockchain Network\n\
    This literature review analyzes the blockchain network with the aim of ensuring\n\
    privacy protection in the blockchain-based architecture for VANETs. The private\
    \ chain\narchitecture was examined, in which all the hash values are stored in\
    \ the network to avoid\nmalicious attacks. However, the data cannot be tampered\
    \ with or changed because the\nblockchain is immutable.\n6.1.6. Smart Contracts\n\
    The protocols (referred to as “contracts”) are clearly deﬁned for the authentication,\n\
    anonymity, data encoding and decoding, etc. The use of contracts also helps to\
    \ save\ntransaction costs.\n6.1.7. Agent Node\nThe participant is considered to\
    \ be an agent node in a decentralized network. The\nparticipants participate in\
    \ a consensus mechanism and ensure the backup of the network.\nThe agent node\
    \ also provides correctness across transactions.\n6.1.8. Miner\nThe special agent\
    \ node is considered to be a miner node when it tries to solve the\nmathematical\
    \ problem and solves it successfully. The miner node solves the puzzle and\nobtains\
    \ the legal right to keep the block. The miner node is also responsible for the\
    \ mining\nand validating of new blocks. The updated data is saved in a newly established\
    \ block, and\nall of the other participants update the respective storage accordingly\
    \ in the blockchain.\nThe components of the blockchain-based framework for VANETs\
    \ are discussed above,\nand their interactions are demonstrated in Figure 14.\n\
    Sustainability 2022, 14, 3919\n20 of 31\nFigure 14. Blockchain-enabled VANET communication\
    \ architecture.\n7. RQ3: Blockchain and the IoT/VANET Challenges, Limitations,\
    \ and Techniques\nTo answer RQ3, Table 4 explains the methods, challenges and\
    \ limitations when\nblockchain integration takes place with VANETs. The advantages\
    \ and challenges of the tra-\nditional models are described as follows: The Bayesian\
    \ inference model [113] provides the\nmechanism for decentralized trust management\
    \ and ensures the consistency and reliability\nof the storage or database. The\
    \ composition of the trust management and privacy preserva-\ntion is one of the\
    \ major drawbacks of this methodology. The proof of work (POW) is used\nas a consensus\
    \ mechanism to validate the authentic and deserving nodes that have good\nreputations\
    \ and computing power. In our proposed architecture, the message exchange\nand\
    \ identiﬁcation of malicious nodes can be managed by using POW. The provision\
    \ of\ninformation sharing will only be available across vehicles or entities having\
    \ the capability\nto prove their worth by solving a puzzle. The POW [91] needs\
    \ further enhancement to\ndeal with the crucial event message dissemination in\
    \ dynamic topology in order to achieve\nlow computation and maximum throughput.\
    \ The proof of driving mechanism is also\nhighlighted by practitioners to mitigate\
    \ the issues of the POW and proof of stake. The\nconditional anonymity and improved\
    \ transparency are observed in the blockchain-based\nanonymous reputation system\
    \ (BARS) [114], but it is also vulnerable to various attacks. The\ncertiﬁcate\
    \ less public key signature (CL-PKS) [55] is recognized as one of the efﬁcient\
    \ meth-\nods for vehicle-to-infrastructure communication with lower computation\
    \ costs. However,\nit needs to be enhanced more for vehicle-to-vehicle communication.\
    \ The hierarchical tem-\nporal memory (HTM) method [115] was found to be effective\
    \ and efﬁcient for identifying\nmalicious users, but the challenge of battling\
    \ frequent attacks persists for this methodology.\nSimilarly, the implementation\
    \ of an improved growing hierarchical self-organizing map\n(I-GHSOM) is critically\
    \ important to achieving intrusion detection functionality. It can\nbe used in\
    \ the proposed decentralized architecture as a composite mechanism to handle\n\
    the large number of vehicles in dynamic topology, and to intercept intrusions\
    \ accordingly\nfor faster and more secure message transmission. The I-GHSOM [116]\
    \ is quick compared\nto other methods for detecting multiple types of attacks.\
    \ The message-by-vehicle can be\nmined quickly by using this method. However,\
    \ it needs to be improved in terms of the\nmanagement of the overheads. The better\
    \ effectiveness and enhanced data transmission\nwere analyzed under the methodology\
    \ of uniﬁed trust management, but this lacks security\nbecause of virtualization\
    \ and software-deﬁned networks [117] Lastly, the methodology of\nblockchain-based\
    \ VANETs [9] was analyzed and was recognized as having one of the most\neffective\
    \ data processing times, as well as privacy protection. Earlier, this methodology\n\
    depended on trusted centralized entities, but the advancement of blockchain has\
    \ made it\ndecentralized and distributed. However, this methodology is regarded\
    \ as the most useful\nfor when blockchain meets VANETs.\nSustainability 2022,\
    \ 14, 3919\n21 of 31\nTable 4. Methods/techniques lead to blockchain-enabled VANETs.\n\
    Article\nYear\nMethod\nAdvantages\nDrawbacks\n[15]\n(Li et al., 2019)\n2019\n\
    Blockchain Based\nVANETs\nThis is the most\nadvanced methodology\nused for state\
    \ of the art\nprivacy protection and\nreal time data\ntransmission across\nvehicle\
    \ to everything\nIn nascent stages, this methodology relied\non trusted centralized\
    \ entities with a\ndrawback of center point failure, but the\nadvancement of blockchain\
    \ has made it\ndecentralized and distributed in all as\naspects. However, this\
    \ methodology is\nregarded as the most useful when\nblockchain meets VANETs.\n\
    [113]\n(Xia et al., 2020)\n2020\nBayesian Model\nThis method provides\nmechanism\
    \ for\ndecentralize trust\nmanagement and\nensures consistency\nand reliability\
    \ of the\nstorage or database\nThe composition of trust management\nand privacy\
    \ preservation is one of the\nmajor drawbacks of this methodology.\n[91]\n(Kudva\
    \ et al., 2021)\n2020\nProof of Work\nThis method provides\ntrustworthiness\n\
    without storage\noverheads\nIt needs enhancement to deal with crucial\nevent message\
    \ dissemination for better\nperformance.\n[114]\n(She et al., 2019)\n2019\nBARS\n\
    This method provides\ntransparency and\nanonymity and also\nensure effective and\n\
    robust mechanism\nThis methodology is more vulnerable to\nvarious attacks.\n[55]\n\
    (Ali et al., 2019)\n2019\nCL-PKS\nThis method provides\nreliable communication\n\
    between vehicles to\ninfrastructure with less\ncomputational cost.\nThis method\
    \ lacks in vehicle-to-vehicle\ncommunication.\n[115]\n(Hasrouny et al., 2019)\n\
    2019\nHTM\nThis method provides\ntrustworthiness with\nquick and effective\nidentiﬁcation\
    \ of\nmalicious users\nThis method cannot handle frequent\nattacks which makes\
    \ it more vulnerable\nagainst the frequent attacks.\n[116]\n(Liang et al., 2019)\n\
    2019\nI-GHSOM\nThis method has the\nability to detect the\nattacks rapidly. It\
    \ also\nensure quick encoding\nof real time messages\ntransmitted by vehicles.\n\
    This method needs to improve in terms of\nmanagement of overheads.\n[117]\n(He\
    \ et al., 2019)\n2019\nUniﬁed Trust\nManagement\nThis method provides\neffective\
    \ data\ntransmission and trust\nmanagement\nmechanism\nThis method lacks in security\
    \ due to\nvirtualization and security of\nsoftware-deﬁned networks.\nTable 4 deﬁnes\
    \ the methodologies and highlights the challenges for VANETs, which\nare addressed\
    \ by employing the inherent characteristics of blockchain technology. The\ndetailed\
    \ list of the blockchain issues is presented in Figure 14, and these are addressed\n\
    by integrating the blockchain with IoT technologies. Figure 15 highlights that\
    \ 14 out of\n68 studies discuss the issues of trust management and its resolutions.\
    \ Privacy management\nis discussed in 13 out of 68 studies, with general security\
    \ issues discussed in 16 selected\nstudies, which makes it still one of the most\
    \ prominent issues in blockchain-based VANETs.\nSustainability 2022, 14, 3919\n\
    22 of 31\nIssues regarding the proposed frameworks of blockchain are discussed\
    \ in three of the\nselected studies and were validated accordingly.\nFigure 15.\
    \ General blockchain issues and numbers of studies.\nLastly, distributed and fog\
    \ computing are also hot areas for practitioners since the\nblockchain conference\
    \ took place in 2018 for future research and directions.\n8. RQ4: General Blockchain\
    \ Limitations and Techniques\nTo answer RQ4, and to determine the corresponding\
    \ limitations and challenges faced\nby blockchain, we classiﬁed the studies with\
    \ respect to the challenges and the applied\ntechniques and models to overcome\
    \ the limitations. The challenges of security, privacy,\nand key and trust management\
    \ affect every domain when they meet with blockchain.\nTherefore, we not only\
    \ identify the major issues, but we also highlight the techniques and\nmodels\
    \ to overcome the challenges. The research focus is to ﬁll the research gap in\
    \ terms of\nthe challenges that arise when blockchain meets with any of the other\
    \ domains. Table 5\npresents the classiﬁcation of the studies with respect to\
    \ the major issues, and the techniques\nfor overcoming the limitations. Table\
    \ 5 presents the limitations and the corresponding\ntechniques and models along\
    \ with the source, which can be adopted to solve the problems\nof blockchain-enabled\
    \ VANETs.\nTable 5. Techniques and limitations of blockchain when met with multiple\
    \ domains.\nArticle\nLimitations\nTechniques/Models\n[9] (Poniszewska-Mara´nda\
    \ & Kryvinska,\n2018)\nTransparency and auditability\nIntelligent agents and multi-agent\n\
    architecture for auditable blockchain\n[15] (Li et al., 2019)\nIdentity and privacy\
    \ protection\nBlockchain based VANET & UGG, IPP\nand LPP algorithm for identity\
    \ protection\n[19] (Bagga et al., 2020)\nData Integrity, open channel Security\
    \ and\nsecure data transmission\nPay-go protocol\n[118] (Buterin, 2014)\nConsensus\
    \ issues\nproof of work based blockchain\n[114] (She et al., 2019)\nMalicious\
    \ attacks and suspicious node\ndetection\nBlockchain trust model (BTM) and smart\n\
    contracts\n[55] (Ali et al., 2019)\nMessage exchange authentication\nCertiﬁcate\
    \ less public key signature\n(CL-PKS) scheme using bilinear pairing\nSustainability\
    \ 2022, 14, 3919\n23 of 31\nTable 5. Cont.\nArticle\nLimitations\nTechniques/Models\n\
    [119] (Kheliﬁ et al., 2020)\nSecurity for content delivery and caching\nNDN based\
    \ security architecture\nReputation-based blockchain mechanism\n[68] (Lei et al.,\
    \ 2020)\nCache poisoning, key management and\naccess control\nBlockchain-based\
    \ security architecture\n[120] (Minoli & Occhiogrosso, 2018)\nSecurity (End-End)\
    \ Mitigation\nPermission less blockchain using\ncryptographic schemes\n[69] (Shrestha\
    \ et al., 2020)\nTime critical message dissemination\nPublic blockchain mechanism\
    \ for\nmessage cohesion\n[56] (Shrestha & Nam, 2019)\nMobility, latency, trust\
    \ management,\nsecurity and 51% attack\nRegional blockchain model\n[93] (Alharthi\
    \ et al., 2021)\nsecurity vulnerabilities such as\ndenial-of-service (DoS), replay\
    \ attacks\nand Sybil attacks\nBiometrics blockchain framework\n[121] (Luo et al.,\
    \ 2019)\nMalicious attacks and data spooﬁng\nblockchain enabled trust based location\n\
    privacy protection scheme\n[52] (Bao-Kun et al., 2018)\nPrivacy management\nBlockchain\
    \ based data sharing scheme\nusing Paillier cryptosystem\n[70] (Sutrala et al.,\
    \ 2020)\nSecurity attacks: replay, traceability,\nman-in-the-middle and impersonation\n\
    Privacy preserving batch\nveriﬁcation-based authentication\nmechanism using elliptic\
    \ curve\ncryptography\n[71] (Ahmad et al., 2020)\nMan-in-the-middle (MiTM) attack\
    \ and\nTrust Management\nMiTM attack resistance trust model\n[122] (Abou-Nassar\
    \ et al., 2020)\nVehicular data conﬁdentiality,\naccessibility and information\
    \ reliability\nBlockchain decentralized interoperable\ntrust framework (DIT) and\
    \ indirect trust\ninference system (ITIS)\n[72] (Shala et al., 2020)\nTrust and\
    \ security of vehicular\ninformation\nmulti-layer adaptive and trust-based\nweighting\
    \ model using control loops and\nsmart contracts\n[57] (Xie et al., 2019)\nMalicious\
    \ node identiﬁcation in VANETs\nSoftware-deﬁned network (SDN)\narchitecture\n\
    [123] (Tan & Chung, 2019)\nResource management and key\ndistribution\nSecure authentication\
    \ and key\nmanagement scheme using consortium\nblockchain\n[124] (Hu et al., 2019)\n\
    Security, authentication and consensus\nissues\nByzantine fault tolerance algorithm\n\
    [73] (Ma et al., 2020)\nAttacks: DoS, public key tampering and\ncollusion and\
    \ key management\nBlockchain enabled decentralized key\nmanagement mechanism (DB-KMM),\
    \ key\nagreement protocol based on the\nbivariate polynomial\n[59] (Yang et al.,\
    \ 2019)\nData correctness, reliability and tamper\nprooﬁng\nProof of event consensus\n\
    [60] (Zhang & Wang, 2019)\nData conﬁdentiality, privacy and\ninformation repudiation\n\
    ElGamal encryption and group signature\nalgorithm\n[75] (Zhao et al., 2020)\n\
    Resource allocation, malicious attacks,\ntrust value management\nDecentralized\
    \ trust management\narchitecture, joint proof-of-stake and\nmodiﬁed PoS-mPBFT\
    \ algorithm\n[76] (Li et al., 2020)\nPrivacy management and security of\nvehicular\
    \ data\nﬁne-grained access control scheme based\non cipher text-based attribute\
    \ encryption\n(CPABE)\nSustainability 2022, 14, 3919\n24 of 31\nTable 5. Cont.\n\
    Article\nLimitations\nTechniques/Models\n[77] (Wang & Zhang, 2020)\nSecure information\
    \ exchange, forwarding\nand limitations of proxy re-encryption\nalgorithm\nData\
    \ sharing and customized services\nbased on the consortium blockchain\nusing cipher\
    \ text-policy attribute-based\nproxy re-encryption algorithm\n[94] (Hei et al.,\
    \ 2021)\nStorage, data integrity and\nnon-accountability of denial of service\n\
    attack\nP2P cloud storage scheme with smart\ncontracts on ethereum\n[62] (Lu et\
    \ al., 2019)\nDistributed authentication, identity\nprivacy and security attacks\n\
    privacy preserving authentication (BPPA)\nscheme and Merkle Patricia tree (MPT)\n\
    [63] (Feng et al., 2019)\nAuthentication and privacy management\nBlockchain assisted\
    \ privacy preserving\nauthentication system (BPAS)\n[54] (Lu et al., 2018)\nPrivacy\
    \ management\nBlockchain-based anonymous reputation\nsystem (BARS) and reputation\
    \ evaluation\nalgorithm\n[78] (Malik et al., 2020)\nNode trust ability prediction,\
    \ privacy\npreservation and data sanitization\nSea lion explored-whale optimization\n\
    algorithm\n9. Discussions\nThe inherent characteristics of blockchain have received\
    \ an immense amount of atten-\ntion from researchers and practitioners in the\
    \ last decade. The escalation and implementa-\ntions of blockchain with IoT are\
    \ being experimented on as pilot projects in various sectors.\nThe DLT has achieved\
    \ both theoretical and practical endorsements from the academic and\nindustrial\
    \ perspectives. The classiﬁcations of the studies with respect to the theoretical,\n\
    simulation, and experiment-based results are presented in Figure 16. There are\
    \ 32 studies\nout of 68 that are based on theoretical analyses, 23 studies that\
    \ are based on simulation\nresults, and only 13 studies that are based on experimental\
    \ results. Figure 16 highlights the\nsigniﬁcance of the practical implementation\
    \ as future research for the practitioners.\nFigure 16. Result-wise classiﬁcation\
    \ of studies.\nThe research questions are answered in this review to determine\
    \ the future directions\nof blockchain technology in the particular domain of\
    \ VANETs. There is a research gap\nbetween blockchain and its applications, and\
    \ particularly for vehicular networks. The\nmajor research issues for integrating\
    \ blockchain and VANETs are security, traceability,\nand transparency. The major\
    \ implementation of VANETs is in the digitalization of ﬂeet\ntelematics. Further\
    \ details with regard to the issues and implementations are presented in\nthe\
    \ following sections.\n9.1. Security, Traceability, and Transparency\nThe traceability,\
    \ security, and transparency are always challenges for VANETs and\nother related\
    \ technologies. These challenges arise when handshaking protocols are required\n\
    Sustainability 2022, 14, 3919\n25 of 31\nfor better hand-offs in centralized architecture.\
    \ The DLT can be applied in VANETs because\nof the immense number of characteristics\
    \ for overcoming such challenges of security. It also\nprovides trust and consensus\
    \ mechanisms to increase the reliability and traceability. The\nledger is shared\
    \ among the nodes to prevent the loss of data integrity. The major players\nat\
    \ the sensory layer, including the actuators, gateways, routers, and things, have\
    \ shared\nledgers to permit access on a per need basis for the process ﬂows. The\
    \ blockchain, with\nan immense number of features and advantages, eliminates the\
    \ centralized systems and\npromotes immutable, transparent, and efﬁcient architecture\
    \ for other domains.\n9.2. IoV and Fleet Management Digitalization\nThe VANETs\
    \ and the corresponding technologies are critical for ITS. This is a network\n\
    of connected vehicles. The connection modes are facilitated through satellite\
    \ (GPS) or\ncellular networks (3G, 4G, 5G), and this depends on the onboard unit\
    \ (OBU) embedded\ninside the vehicle. Some OBUs provide multiple modes of connection\
    \ in order to provide\nreliability and coverage. RFID technology can provide each\
    \ driver with a unique digital\nidentity. Remote ﬂeet managers can track the driver’s\
    \ performance, and provide warnings\nfor bad performances and rewards for good\
    \ performances, which can boost the driver’s\nmotivation to perform well on the\
    \ road. Fleet management systems, such as food delivery\nﬂeet management, taxi\
    \ ﬂeet management, oil distribution ﬂeet management, etc., can beneﬁt\nsigniﬁcantly\
    \ from the implementation of blockchain-enabled VANETs. The surveillance\ncameras\
    \ can also be attached to the OBU for vehicle surveillance for the ﬂeet managers.\n\
    Parameters, such as the engine speed, the tank temperature, the tire pressure,\
    \ and the fuel\nconsumption can be monitored through sensors and can be controlled\
    \ remotely for vehicle\nsafety control. Figure 17 illustrates VANETs and their\
    \ applications in ﬂeet management.\nFigure 17. An overview of ﬂeet management\
    \ system and its components.\n9.3. Blockchain-Enabled VANET Applications\nThe\
    \ research implication of blockchain-enabled IoT was found suitable for the areas\n\
    described in the following sections, where its immediate implementation can completely\n\
    change the perspective.\n9.3.1. Fleet and Journey Management for ITS\nThe efﬁcient\
    \ movement of vehicles with containers is always challenging for ﬂeet\nowners.\
    \ Blockchain-enabled VANETs can help ﬂeet owners track their ﬂeets in real time\n\
    by preserving the coordinates, speeds, altitudes, angles, temperatures, and fuel\
    \ levels\nusing a real-time messaging system. In general supply chains and fuel\
    \ supply chains,\nSustainability 2022, 14, 3919\n26 of 31\nblockchain promote\
    \ trust among all the authorities, and it also enables the quick and\nefﬁcient\
    \ movement of products with greater consensus.\n9.3.2. Asset Tracking\nThe compliance\
    \ with safety and security is always a challenge for authorities when\nthey are\
    \ attempting to ensure efﬁcient asset movement. The blockchain-enabled VANETs\n\
    can help to store data in shared ledgers throughout the product’s lifecycle. The\
    \ ledger\ninformation can be shared with the concerned authorities, consignees,\
    \ manufacturers, and\nshippers. The blockchain technology in asset management\
    \ is easy to implement, secure,\nand transparent, with the cutting-edge feature\
    \ of cost-effectiveness.\n9.3.3. Data Science and Management\nData science and\
    \ management applications can be developed on blockchain technology\nto ensure\
    \ tamper-free maintenance and operational data. This helps to maintain the data\n\
    integrity in data sciences to prevent prediction anomalies. The trusted ledger\
    \ of the\ndata changes can also be shared with the appropriate authorities for\
    \ further compliance\nand management.\n9.3.4. Solid Waste Management\nResearchers\
    \ have surveyed blockchain-and-VANET-based waste management models\nfor the advancement\
    \ of waste collection procedures in developing cities. The key compo-\nnents of\
    \ waste management models are waste collection, truck routing, transportation,\
    \ and\nthe monitoring of the recycling of certain types of garbage. Researchers\
    \ propose intelligent\nalgorithms for the collection, disposal, and recycling\
    \ of trash.\n9.3.5. Contact Tracing and Social Distancing\nThe only way to prevent\
    \ pandemics is to maintain social distancing. The decentral-\nized model of contact\
    \ tracing is endorsed by an international consortium, which consists\nof Google\
    \ and Apple, in order to ensure transparency and privacy. Researchers have\nsurveyed\
    \ blockchain- and IoT-enabled techniques for contact tracing to preserve privacy,\n\
    transparency, and security. The analyzed composition of blockchain and IoV can\
    \ provide\ndigital contact tracing mechanisms for the prevention of pandemics\
    \ such as COVID-19.\n10. Conclusions\nThis study encapsulates a systematic review\
    \ and analysis that is based on multidis-\nciplinary research studies, and that\
    \ addresses the issues that can occur when blockchain\nmeets the IoT, and especially\
    \ VANETs. It further provides a comprehensive classiﬁcation of\nthe articles on\
    \ the basis of the methods and techniques used to overcome the challenges of\n\
    VANETs. The complete decentralized architecture of VANETs is derived from the\
    \ extensive\nliterature review and is referred to as “blockchain-enabled VANET\
    \ architecture”.\nThe substantial contribution of this review is that it highlights\
    \ the signiﬁcance of\nblockchain in other domains with the inherent characteristics.\
    \ The particular area of\nVANETs was selected in this review in order to validate\
    \ the potentials of blockchain\ntechnology. The decentralized architecture was\
    \ also derived for vehicular networks on the\nbasis of DLT. The speciﬁc mechanisms\
    \ of VANETs, as well as the IoT, such as handshaking,\nhand-offs, and data communication,\
    \ are also discussed in the light of blockchain technology.\nThe challenges, limitations,\
    \ and open issues of blockchain-enabled applications are\nalso classiﬁed for future\
    \ prospects. This study is not only limited to the integration of\nblockchain\
    \ and VANETs, but it also discusses the potential blockchain issues that may be\n\
    addressed in future research. The interoperability, scalability, and storage-related\
    \ technical\nissues still need to be addressed by practitioners. Lastly, this\
    \ study also provides a classiﬁca-\ntion of the articles that is based on the\
    \ result types, such as the theoretical, simulation, and\nexperimental results.\
    \ This classiﬁcation highlights that blockchain-enabled pilot projects\nare rare.\
    \ Therefore, practical implementation should be considered by practitioners for\
    \ a\nSustainability 2022, 14, 3919\n27 of 31\nmore concrete implementation of\
    \ blockchain in different domains. This study also sheds\nlight on an overview\
    \ of the extant blockchain-enabled IoT chain research as future works.\nAs part\
    \ of the future work, research can commence on 5G-enabled blockchain-based\nVANETs\
    \ using narrowband-IoT (NB-IoT) technologies for high mobility and latency, and\n\
    low power consumption. This study could also lead to the implementation of blockchain\n\
    in different sectors, such as blockchain-enabled healthcare transportation for\
    \ door-to-door\nvaccination, which can be targeted to handle pandemic-like situations.\
    \ The future implica-\ntions of this study could also be helpful for contact tracing\
    \ and isolation management in the\nrealm of the IoT. The proposed decentralized\
    \ architecture can also be extended to the design\nof state-of-the-art journey\
    \ management systems for autonomous vehicles and drones.\nAuthor Contributions:\
    \ Conceptualization, M.S. and M.K.K.; methodology, M.B.A.; software, M.S.;\nvalidation,\
    \ M.B.A., M.K.K. and M.S.; formal analysis, M.B.A.; investigation, M.K.K.; resources,\n\
    M.S.; data curation, M.K.K.; writing—original draft preparation, M.S.; writing—review\
    \ and editing,\nM.B.A.; visualization, M.B.A.; supervision, M.K.K. and M.B.A.;\
    \ project administration, M.S.; funding\nacquisition, M.K.K. All authors have\
    \ read and agreed to the published version of the manuscript.\nFunding: This research\
    \ received no external funding.\nInstitutional Review Board Statement: Not applicable.\n\
    Informed Consent Statement: Not applicable.\nConﬂicts of Interest: The authors\
    \ declare no conﬂict of interest.\nReferences\n1.\nCole, R.; Stevenson, M.; Aitken,\
    \ J. Blockchain technology: Implications for operations and supply chain management.\
    \ Supply\nChain. Manag. Int. J. 2019, 24, 469–483. [CrossRef]\n2.\nTönnissen,\
    \ S.; Teuteberg, F. Analysing the impact of blockchain-technology for operations\
    \ and supply chain management: An\nexplanatory model drawn from multiple case\
    \ studies. Int. J. Inf. Manag. 2020, 52, 101953. [CrossRef]\n3.\nÁlvares, P.;\
    \ Silva, L.; Magaia, N. Blockchain-Based Solutions for UAV-Assisted Connected\
    \ Vehicle Networks in Smart Cities: A\nReview, Open Issues, and Future Perspectives.\
    \ Telecom 2021, 2, 108–140. [CrossRef]\n4.\nAlladi, T.; Chamola, V.; Parizi, R.M.;\
    \ Choo, K.-K.R. Blockchain Applications for Industry 4.0 and Industrial IoT: A\
    \ Review. IEEE\nAccess 2019, 7, 176935–176951. [CrossRef]\n5.\nDwivedi, A.D.;\
    \ Srivastava, G.; Dhar, S.; Singh, R. A Decentralized Privacy-Preserving Healthcare\
    \ Blockchain for IoT. Sensors 2019,\n19, 326. [CrossRef]\n6.\nMani, V.; Manickam,\
    \ P.; Alotaibi, Y.; Alghamdi, S.; Khalaf, O.I. Hyperledger Healthchain: Patient-Centric\
    \ IPFS-Based Storage of\nHealth Records. Electronics 2021, 10, 3003. [CrossRef]\n\
    7.\nAzaria, A.; Ekblaw, A.; Vieira, T.; Lippman, A. MedRec: Using Blockchain for\
    \ Medical Data Access and Permission Management.\nIn Proceedings of the 2016 2nd\
    \ International Conference on Open and Big Data (OBD), Vienna, Austria, 22–24\
    \ August 2016;\npp. 25–30.\n8.\nTreleaven, P.; Brown, R.G.; Yang, D. Blockchain\
    \ Technology in Finance. Computer 2017, 50, 14–17. [CrossRef]\n9.\nPawlak, M.;\
    \ Poniszewska-Mara´nda, A.; Kryvinska, N. Towards the intelligent agents for blockchain\
    \ e-voting system. Procedia\nComput. Sci. 2018, 141, 239–246. [CrossRef]\n10.\n\
    Sheth, A.; Subramanian, H. Blockchain and contract theory: Modeling smart contracts\
    \ using insurance markets. Manag. Financ.\n2019, 46, 803–814. [CrossRef]\n11.\n\
    Jha, N.; Prashar, D.; Khalaf, O.I.; Alotaibi, Y.; Alsufyani, A.; Alghamdi, S.\
    \ Blockchain Based Crop Insurance: A Decentralized\nInsurance System for Modernization\
    \ of Indian Farmers. Sustainability 2021, 13, 8921. [CrossRef]\n12.\nSyed, T.A.;\
    \ Alzahrani, A.; Jan, S.; Siddiqui, M.S.; Nadeem, A.; Alghamdi, T. A Comparative\
    \ Analysis of Blockchain Architecture\nand its Applications: Problems and Recommendations.\
    \ IEEE Access 2019, 7, 176838–176869. [CrossRef]\n13.\nWan, P.K.; Huang, L.; Holtskog,\
    \ H. Blockchain-Enabled Information Sharing within a Supply Chain: A Systematic\
    \ Literature\nReview. IEEE Access 2020, 8, 49645–49656. [CrossRef]\n14.\nMatheu,\
    \ S.N.; Robles Enciso, A.; Molina Zarca, A.; Garcia-Carrillo, D.; Hernández-Ramos,\
    \ J.L.; Bernal Bernabe, J.; Skarmeta, A.F.\nSecurity Architecture for Deﬁning\
    \ and Enforcing Security Proﬁles in DLT/SDN-Based IoT Systems. Sensors 2020, 20,\
    \ 1882.\n[CrossRef] [PubMed]\n15.\nLi, H.; Pei, L.; Liao, D.; Sun, G.; Xu, D.\
    \ Blockchain Meets VANET: An Architecture for Identity and Location Privacy Protection\
    \ in\nVANET. Peer-to-Peer Netw. Appl. 2019, 12, 1178–1193. [CrossRef]\n16.\nKošt’ál,\
    \ K.; Helebrandt, P.; Belluš, M.; Ries, M.; Kotuliak, I. Management and Monitoring\
    \ of IoT Devices Using Blockchain. Sensors\n2019, 19, 856. [CrossRef] [PubMed]\n\
    Sustainability 2022, 14, 3919\n28 of 31\n17.\nMorse, E.A. From Rai stones to Blockchains:\
    \ The transformation of payments. Comput. Law Secur. Rev. 2018, 34, 946–953.\n\
    [CrossRef]\n18.\nSander, F.; Semeijn, J.; Mahr, D. The acceptance of blockchain\
    \ technology in meat traceability and transparency. Br. Food J. 2018,\n120, 2066–2079.\
    \ [CrossRef]\n19.\nBagga, P.; Das, A.K.; Wazid, M.; Rodrigues, J.J.P.C.; Park,\
    \ Y. Authentication Protocols in Internet of Vehicles: Taxonomy, Analysis,\nand\
    \ Challenges. IEEE Access 2020, 8, 54314–54344. [CrossRef]\n20.\nLo, S.K.; Liu,\
    \ Y.; Chia, S.Y.; Xu, X.; Lu, Q.; Zhu, L.; Ning, H. Analysis of Blockchain Solutions\
    \ for IoT: A Systematic Literature\nReview. IEEE Access 2019, 7, 58822–58835.\
    \ [CrossRef]\n21.\nConoscenti, M.; Vetrò, A.; De Martin, J.C. Blockchain for the\
    \ Internet of Things: A systematic literature review. In Proceedings of\nthe IEEE/ACS\
    \ 13th International Conference of Computer Systems and Applications (AICCSA),\
    \ Agadir, Morocco, 29 November–2\nDecember 2016; pp. 1–6. [CrossRef]\n22.\nIqbal,\
    \ S.; Noor, R.M.; Malik, A.W. A review of blockchain empowered vehicular network:\
    \ Performance evaluation of trusted\ntask ofﬂoading scheme. In Proceedings of\
    \ the IEEE 11th IEEE Symposium on Computer Applications & Industrial Electronics\n\
    (ISCAIE), Shah Alam, Malaysia, 3–4 April 2021; pp. 367–371.\n23.\nCasino, F.;\
    \ Dasaklis, T.K.; Patsakis, C. A systematic literature review of blockchain-based\
    \ applications: Current status, classiﬁcation\nand open issues. Telemat. Inform.\
    \ 2019, 36, 55–81. [CrossRef]\n24.\nShen, C.; Pena-Mora, F. Blockchain for Cities—A\
    \ Systematic Literature Review. IEEE Access 2018, 6, 76787–76819. [CrossRef]\n\
    25.\nDutta, P.; Choi, T.-M.; Somani, S.; Butala, R. Blockchain technology in supply\
    \ chain operations: Applications, challenges and\nresearch opportunities. Transp.\
    \ Res. Part E Logist. Transp. Rev. 2020, 142, 102067. [CrossRef] [PubMed]\n26.\n\
    Weber, I.; Xu, X.; Riveret, R.; Governatori, G.; Ponomarev, A.; Mendling, J. Untrusted\
    \ business process monitoring and execution\nusing blockchain. In Proceedings\
    \ of the International conference on business process management, Rio de Janeiro,\
    \ Brazil, 18–22\nSeptember 2016; pp. 329–347.\n27.\nNakamoto, S. Bitcoin: A peer-to-peer\
    \ electronic cash system. Decentralized Bus. Rev. 2008, 4, 21260. [CrossRef]\n\
    28.\nCrosby, M.; Pattanayak, P.; Verma, S.; Kalyanaraman, V. Blockchain technology:\
    \ Beyond bitcoin. Appl. Innov. 2016, 2, 71.\n29.\nCasey, M.J.; Wong, P. Global\
    \ supply chains are about to get better, thanks to blockchain. Harv. Bus. Rev.\
    \ 2017, 13, 1–6.\n30.\nToyoda, K.; Mathiopoulos, P.T.; Sasase, I.; Ohtsuki, T.\
    \ A Novel Blockchain-Based Product Ownership Management System\n(POMS) for Anti-Counterfeits\
    \ in the Post Supply Chain. IEEE Access 2017, 5, 17465–17477. [CrossRef]\n31.\n\
    Szabo, N. Smart contracts: Building blocks for digital markets. EXTROPY J. Transhumanist\
    \ Thought 2016, 18, 28.\n32.\nMagazzeni, D.; McBurney, P.; Nash, W. Validation\
    \ and Veriﬁcation of Smart Contracts: A Research Agenda. Computer 2017, 50,\n\
    50–57. [CrossRef]\n33.\nSato, T.; Himura, Y. Smart-contract based system operations\
    \ for permissioned blockchain. In Proceedings of the 29th IFIP\nInternational\
    \ Conference on New Technologies, Mobility and Security (NTMS), Paris, France,\
    \ 26–28 February 2018; pp. 1–6.\n34.\nWatanabe, H.; Fujimura, S.; Nakadaira, A.;\
    \ Miyazaki, Y.; Akutsu, A.; Kishigami, J.J. Blockchain contract: A complete consensus\n\
    using blockchain. In Proceedings of the IEEE 4th Global Conference on Consumer\
    \ Electronics (GCCE), Osaka, Japan, 27–30\nOctober 2015; pp. 577–578.\n35.\nJavaid,\
    \ U.; Aman, M.N.; Sikdar, B. DrivMan: Driving trust management and data sharing\
    \ in VANETS with blockchain and smart\ncontracts. 2019 IEEE 89th Vehicular Technology\
    \ Conference (VTC2019-Spring), Kuala Lumpur, Malaysia, 28 April–1 May 2019;\n\
    pp. 1–5.\n36.\nWang, Y.; Kogan, A. Designing conﬁdentiality-preserving Blockchain-based\
    \ transaction processing systems. Int. J. Account. Inf.\nSyst. 2018, 30, 1–18.\
    \ [CrossRef]\n37.\nChang, S.E.; Chen, Y.-C.; Wu, T.-C. Exploring blockchain technology\
    \ in international trade: Business process re-engineering for\nletter of credit.\
    \ Ind. Manag. Data Syst. 2019, 119, 1712–1733. [CrossRef]\n38.\nVaidya, B.; Mouftah,\
    \ H.T. IoT Applications and Services for Connected and Autonomous Electric Vehicles.\
    \ Arab. J. Sci. Eng. 2020,\n45, 2559–2569. [CrossRef]\n39.\nDing, S.; Cao, J.;\
    \ Li, C.; Fan, K.; Li, H. A Novel Attribute-Based Access Control Scheme Using\
    \ Blockchain for IoT. IEEE Access\n2019, 7, 38431–38441. [CrossRef]\n40.\nSingh,\
    \ S.; Hosen, A.S.M.S.; Yoon, B. Blockchain Security Attacks, Challenges, and Solutions\
    \ for the Future Distributed IoT\nNetwork. IEEE Access 2021, 9, 13938–13959. [CrossRef]\n\
    41.\nRay, P.P.; Dash, D.; Salah, K.; Kumar, N. Blockchain for IoT-based healthcare:\
    \ Background, consensus, platforms, and use cases.\nIEEE Syst. J. 2020, 15, 85–94.\
    \ [CrossRef]\n42.\nSaad, M.; Bin, M.; Ahmad, A.; Muhammad, M.; Khalid, A.G.; Mohammad,\
    \ A. Social Distancing and Isolation Management Using\nMachine-to-Machine Technologies\
    \ to Prevent Pandemics. Comput. Mater. Contin. 2021, 67, 3545–3562. [CrossRef]\n\
    43.\nMehmood, Y.; Marwat, S.N.K.; Kuladinithi, K.; Förster, A.; Zaki, Y.; Görg,\
    \ C.; Timm-Giel, A. M2M Potentials in logistics and\ntransportation industry.\
    \ Logist. Res. 2016, 9, 15. [CrossRef]\n44.\nSun, G.; Song, L.; Yu, H.; Chang,\
    \ V.; Du, X.; Guizani, M. V2V Routing in a VANET Based on the Autoregressive Integrated\
    \ Moving\nAverage Model. IEEE Trans. Veh. Technol. 2018, 68, 908–922. [CrossRef]\n\
    45.\nPeng, L.; Feng, W.; Yan, Z.; Li, Y.; Zhou, X.; Shimizu, S. Privacy preservation\
    \ in permissionless blockchain: A survey. Digit.\nCommun. Netw. 2021, 7, 295–307.\
    \ [CrossRef]\nSustainability 2022, 14, 3919\n29 of 31\n46.\nMoloisane, N.R.; Malekian,\
    \ R.; Bogatinoska, D.C. Wireless machine-to-machine communication for intelligent\
    \ transportation\nsystems: Internet of Vehicles and vehicle to grid. In Proceedings\
    \ of the 40th International Convention on Information and\nCommunication Technology,\
    \ Electronics and Microelectronics (MIPRO), Opatija, Croatia, 22–26 May 2017;\
    \ pp. 411–415.\n47.\nHussain, R.; Hussain, F.; Zeadally, S. Integration of VANET\
    \ and 5G Security: A review of design and implementation issues.\nFutur. Gener.\
    \ Comput. Syst. 2019, 101, 843–864. [CrossRef]\n48.\nKurugollu, F.; Ahmed, S.H.;\
    \ Hussain, R.; Ahmad, F.; Kerrache, C.A. Vehicular Sensor Networks: Applications,\
    \ Advances and\nChallenges. Sensors 2020, 20, 3686. [CrossRef] [PubMed]\n49.\n\
    Abbas, S.; Abu Talib, M.; Ahmed, A.; Khan, F.; Ahmad, S.; Kim, D.-H. Blockchain-Based\
    \ Authentication in Internet of Vehicles: A\nSurvey. Sensors 2021, 21, 7927. [CrossRef]\
    \ [PubMed]\n50.\nLan, L.; Wang, B.; Zhang, L.; Shi, R.; Li, F. An Event-driven\
    \ Service-oriented Architecture for Internet of Things Service Execution.\nInt.\
    \ J. Online Biomed. Eng. 2015, 11, 4–8. [CrossRef]\n51.\nKitchenham, B.; Brereton,\
    \ O.P.; Budgen, D.; Turner, M.; Bailey, J.; Linkman, S. Systematic literature\
    \ reviews in software\nengineering—A systematic literature review. Inf. Softw.\
    \ Technol. 2009, 51, 7–15. [CrossRef]\n52.\nBao-Kun, Z.; Lie-Huang, Z.; Shen,\
    \ M.; Gao, F.; Zhang, C.; Yan-Dong, L.; Yang, J. Scalable and privacy-preserving\
    \ data sharing\nbased on blockchain. J. Comput. Sci. Technol. 2018, 33, 557–567.\n\
    53.\nBusygin, A.G.; Konoplev, A.S.; Zegzhda, D.P. Providing Stable Operation of\
    \ Self-Organizing Cyber-Physical System via Adaptive\nTopology Management Methods\
    \ Using Blockchain-Like Directed Acyclic Graph. Autom. Control Comput. Sci. 2018,\
    \ 52, 1080–1083.\n[CrossRef]\n54.\nLu, Z.; Liu, W.; Wang, Q.; Qu, G.; Liu, Z.\
    \ A Privacy-Preserving Trust Model Based on Blockchain for VANETs. IEEE Access\
    \ 2018, 6,\n45655–45664. [CrossRef]\n55.\nAli, I.; Gervais, M.; Ahene, E.; Li,\
    \ F. A blockchain-based certiﬁcateless public key signature scheme for vehicle-to-infrastructure\n\
    communication in VANETs. J. Syst. Archit. 2019, 99, 101636. [CrossRef]\n56.\n\
    Shrestha, R.; Nam, S.Y. Regional Blockchain for Vehicular Networks to Prevent\
    \ 51% Attacks. IEEE Access 2019, 7, 95033–95045.\n[CrossRef]\n57.\nXie, L.; Ding,\
    \ Y.; Yang, H.; Wang, X. Blockchain-Based Secure and Trustworthy Internet of Things\
    \ in SDN-Enabled 5G-VANETs.\nIEEE Access 2019, 7, 56656–56666. [CrossRef]\n58.\n\
    Kim, S. Impacts of Mobility on Performance of Blockchain in VANET. IEEE Access\
    \ 2019, 7, 68646–68655. [CrossRef]\n59.\nYang, Y.-T.; Chou, L.-D.; Tseng, C.-W.;\
    \ Tseng, F.-H.; Liu, C.-C. Blockchain-Based Trafﬁc Event Validation and Trust\
    \ Veriﬁcation for\nVANETs. IEEE Access 2019, 7, 30868–30877. [CrossRef]\n60.\n\
    Zhang, X.; Wang, D. Adaptive Trafﬁc Signal Control Mechanism for Intelligent Transportation\
    \ Based on a Consortium Blockchain.\nIEEE Access 2019, 7, 97281–97295. [CrossRef]\n\
    61.\nButt, T.A.; Iqbal, R.; Salah, K.; Aloqaily, M.; Jararweh, Y. Privacy Management\
    \ in Social Internet of Vehicles: Review, Challenges\nand Blockchain Based Solutions.\
    \ IEEE Access 2019, 7, 79694–79713. [CrossRef]\n62.\nLu, Z.; Wang, Q.; Qu, G.;\
    \ Zhang, H.; Liu, Z. A Blockchain-Based Privacy-Preserving Authentication Scheme\
    \ for VANETs. IEEE\nTrans. Very Large Scale Integr. (VLSI) Syst. 2019, 27, 2792–2801.\
    \ [CrossRef]\n63.\nFeng, Q.; He, D.; Zeadally, S.; Liang, K. BPAS: Blockchain-Assisted\
    \ Privacy-Preserving Authentication System for Vehicular Ad\nHoc Networks. IEEE\
    \ Trans. Ind. Inform. 2020, 16, 4146–4155. [CrossRef]\n64.\nDe Maio, V.; Brundo\
    \ Uriarte, R.; Brandic, I. Energy and proﬁt-aware proof-of-stake ofﬂoading in\
    \ blockchain-based VANETs. In\nProceedings of the 12th IEEE/ACM International\
    \ Conference on Utility and Cloud Computing, Auckland, New Zealand, 2–5\nDecember\
    \ 2019; pp. 177–186.\n65.\nZhang, D.; Yu, F.R.; Yang, R. Blockchain-Based Distributed\
    \ Software-Deﬁned Vehicular Networks: A Dueling Deep Q—Learning\nApproach. IEEE\
    \ Trans. Cogn. Commun. Netw. 2019, 5, 1086–1100. [CrossRef]\n66.\nZheng, D.; Jing,\
    \ C.; Guo, R.; Gao, S.; Wang, L. A Traceable Blockchain-Based Access Authentication\
    \ System with Privacy\nPreservation in VANETs. IEEE Access 2019, 7, 117716–117726.\
    \ [CrossRef]\n67.\nBonadio, A.; Chiti, F.; Fantacci, R.; Vespri, V. An integrated\
    \ framework for blockchain inspired fog communications and computing\nin Internet\
    \ of Vehicles. J. Ambient Intell. Humaniz. Comput. 2019, 11, 755–762. [CrossRef]\n\
    68.\nLei, K.; Fang, J.; Zhang, Q.; Lou, J.; Du, M.; Huang, J.; Wang, J.; Xu, K.\
    \ Blockchain-Based Cache Poisoning Security Protection and\nPrivacy-Aware Access\
    \ Control in NDN Vehicular Edge Computing Networks. J. Grid Comput. 2020, 18,\
    \ 593–613. [CrossRef]\n69.\nShrestha, R.; Bajracharya, R.; Shrestha, A.P.; Nam,\
    \ S.Y. A new type of blockchain for secure message exchange in VANET. Digit.\n\
    Commun. Netw. 2020, 6, 177–186. [CrossRef]\n70.\nSutrala, A.K.; Bagga, P.; Das,\
    \ A.K.; Kumar, N.; Rodrigues, J.J.P.C.; Lorenz, P. On the Design of Conditional\
    \ Privacy Preserving\nBatch Veriﬁcation-Based Authentication Scheme for Internet\
    \ of Vehicles Deployment. IEEE Trans. Veh. Technol. 2020, 69, 5535–5548.\n[CrossRef]\n\
    71.\nAhmad, F.; Kurugollu, F.; Adnane, A.; Hussain, R.; Hussain, F. MARINE: Man-in-the-Middle\
    \ Attack Resistant Trust Model in\nConnected Vehicles. IEEE Internet Things J.\
    \ 2020, 7, 3310–3322. [CrossRef]\n72.\nShala, B.; Trick, U.; Lehmann, A.; Ghita,\
    \ B.; Shiaeles, S. Blockchain and trust for secure, end-user-based and decentralized\
    \ iot\nservice provision. IEEE Access 2020, 8, 119961–119979. [CrossRef]\n73.\n\
    Ma, Z.; Zhang, J.; Guo, Y.; Liu, Y.; Liu, X.; He, W. An Efﬁcient Decentralized\
    \ Key Management Mechanism for VANET With\nBlockchain. IEEE Trans. Veh. Technol.\
    \ 2020, 69, 5836–5849. [CrossRef]\nSustainability 2022, 14, 3919\n30 of 31\n74.\n\
    Ryu, K.; Kim, W.; Lee, E.-K. payGo: Incentive-Comparable Payment Routing Based\
    \ on Contract Theory. IEEE Access 2020, 8,\n70095–70110. [CrossRef]\n75.\nZhao,\
    \ N.; Wu, H.; Zhao, X. Consortium Blockchain-Based Secure Software Deﬁned Vehicular\
    \ Network. Mob. Netw. Appl. 2020, 25,\n314–327. [CrossRef]\n76.\nLi, H.; Pei,\
    \ L.; Liao, D.; Chen, S.; Zhang, M.; Xu, D. FADB: A Fine-Grained Access Control\
    \ Scheme for VANET Data Based on\nBlockchain. IEEE Access 2020, 8, 85190–85203.\
    \ [CrossRef]\n77.\nWang, D.; Zhang, X. Secure Data Sharing and Customized Services\
    \ for Intelligent Transportation Based on a Consortium\nBlockchain. IEEE Access\
    \ 2020, 8, 56045–56059. [CrossRef]\n78.\nMalik, N.; Nanda, P.; He, X.; Liu, R.P.\
    \ Vehicular networks with security and trust management solutions: Proposed secured\n\
    message exchange via blockchain technology. Wirel. Netw. 2020, 26, 4207–4226.\
    \ [CrossRef]\n79.\nShi, K.; Zhu, L.; Zhang, C.; Xu, L.; Gao, F. Blockchain-based\
    \ multimedia sharing in vehicular social networks with privacy\nprotection. Multimed.\
    \ Tools Appl. 2020, 79, 8085–8105. [CrossRef]\n80.\nYang, W.; Dai, X.; Xiao, J.;\
    \ Jin, H. LDV: A Lightweight DAG-Based Blockchain for Vehicular Social Networks.\
    \ IEEE Trans. Veh.\nTechnol. 2020, 69, 5749–5759. [CrossRef]\n81.\nCho, E.M.;\
    \ Perera, M.N.S. Efﬁcient certiﬁcate management in blockchain based Internet of\
    \ Vehicles. In Proceedings of the 20th\nIEEE/ACM International Symposium on Cluster,\
    \ Cloud and Internet Computing (CCGRID), Melbourne, Australia, 11–14 May\n2020;\
    \ pp. 794–797.\n82.\nJiang, X.; Ma, Z.; Yu, F.R.; Song, T.; Boukerche, A. Edge\
    \ computing for video analytics in the Internet of Vehicles with blockchain.\n\
    In Proceedings of the 10th ACM Symposium on Design and Analysis of Intelligent\
    \ Vehicular Networks and Applications, Alicante,\nSpain, 16–20 November 2020;\
    \ pp. 1–7.\n83.\nMa, Z.; Yu, F.R.; Jiang, X.; Boukerche, A. Trustworthy Trafﬁc\
    \ Information Sharing Secured via Blockchain in VANETs. In\nProceedings of the\
    \ 10th ACM Symposium on Design and Analysis of Intelligent Vehicular Networks\
    \ and Applications, Alicante,\nSpain, 16–20 November 2020; pp. 33–40.\n84.\nTomar,\
    \ R. Maintaining Trust in VANETs using Blockchain. ACM SIGAda Ada Lett. 2020,\
    \ 40, 91–96. [CrossRef]\n85.\nAyaz, F.; Sheng, Z.; Tian, D.; Guan, Y.L. A Proof-of-Quality-Factor\
    \ (PoQF)-Based Blockchain and Edge Computing for Vehicular\nMessage Dissemination.\
    \ IEEE Internet Things J. 2020, 8, 2468–2482. [CrossRef]\n86.\nHussain, R.; Lee,\
    \ J.; Zeadally, S. Trust in VANET: A Survey of Current Solutions and Future Research\
    \ Opportunities. IEEE Trans.\nIntell. Transp. Syst. 2021, 22, 2553–2571. [CrossRef]\n\
    87.\nLin, C.; He, D.; Huang, X.; Kumar, N.; Choo, K.-K.R. BCPPA: A Blockchain-Based\
    \ Conditional Privacy-Preserving Authentication\nProtocol for Vehicular Ad Hoc\
    \ Networks. IEEE Trans. Intell. Transp. Syst. 2020, 22, 7408–7420. [CrossRef]\n\
    88.\nMershad, K. SURFER: A Secure SDN-Based Routing Protocol for Internet of Vehicles.\
    \ IEEE Internet Things J. 2021, 8, 7407–7422.\n[CrossRef]\n89.\nZheng, X.; Li,\
    \ M.; Chen, Y.; Guo, J.; Alam, M.; Hu, W. Blockchain-Based Secure Computation\
    \ Ofﬂoading in Vehicular Networks.\nIEEE Trans. Intell. Transp. Syst. 2020, 22,\
    \ 4073–4087. [CrossRef]\n90.\nWang, C.; Shen, J.; Lai, J.-F.; Liu, J. B-TSCA:\
    \ Blockchain assisted trustworthiness scalable computation for V2I authentication\
    \ in\nVANETs. IEEE Trans. Emerg. Top. Comput. 2020, 9, 1386–1396. [CrossRef]\n\
    91.\nKudva, S.; Badsha, S.; Sengupta, S.; Khalil, I.; Zomaya, A. Towards secure\
    \ and practical consensus for blockchain based VANET.\nInf. Sci. 2021, 545, 170–187.\
    \ [CrossRef]\n92.\nShammar, E.A.; Zahary, A.T.; Al-Shargabi, A.A. A Survey of\
    \ IoT and Blockchain Integration: Security Perspective. IEEE Access\n2021, 9,\
    \ 156114–156150. [CrossRef]\n93.\nAlharthi, A.; Ni, Q.; Jiang, R. A Privacy-Preservation\
    \ Framework Based on Biometrics Blockchain (BBC) to Prevent Attacks in\nVANET.\
    \ IEEE Access 2021, 9, 87299–87309. [CrossRef]\n94.\nHei, Y.; Liu, Y.; Li, D.;\
    \ Liu, J.; Wu, Q. Themis: An accountable blockchain-based P2P cloud storage scheme.\
    \ Peer-to-Peer Netw. Appl.\n2021, 14, 225–239. [CrossRef]\n95.\nAkhter, A.; Ahmed,\
    \ M.; Shah, A.; Anwar, A.; Zengin, A. A Secured Privacy-Preserving Multi-Level\
    \ Blockchain Framework for\nCluster Based VANET. Sustainability 2021, 13, 400.\
    \ [CrossRef]\n96.\nAzam, F.; Yadav, S.K.; Priyadarshi, N.; Padmanaban, S.; Bansal,\
    \ R.C. A Comprehensive Review of Authentication Schemes in\nVehicular Ad-Hoc Network.\
    \ IEEE Access 2021, 9, 31309–31321. [CrossRef]\n97.\nChulerttiyawong, D.; Jamalipour,\
    \ A. A Blockchain Assisted Vehicular Pseudonym Issuance and Management System\
    \ for\nConditional Privacy Enhancement. IEEE Access 2021, 9, 127305–127319. [CrossRef]\n\
    98.\nDwivedi, S.K.; Amin, R.; Vollala, S. Blockchain-based secured IPFS-enable\
    \ event storage technique with authentication protocol\nin VANET. IEEE/CAA J.\
    \ Autom. Sin. 2021, 8, 1913–1922. [CrossRef]\n99.\nFirdaus, M.; Rahmadika, S.;\
    \ Rhee, K.-H. Decentralized Trusted Data Sharing Management on Internet of Vehicle\
    \ Edge Computing\n(IoVEC) Networks Using Consortium Blockchain. Sensors 2021,\
    \ 21, 2410. [CrossRef]\n100. Ghajar, F.G.; Sratakhti, J.S.; Sikora, A. SBTMS:\
    \ Scalable Blockchain Trust Management System for VANET. Appl. Sci. 2021,\n11,\
    \ 11947. [CrossRef]\n101. Jabbar, R.; Fetais, N.; Kharbeche, M.; Krichen, M.;\
    \ Barkaoui, K.; Shinoy, M. Blockchain for the Internet of Vehicles: How to Use\n\
    Blockchain to Secure Vehicle-to-Everything (V2X) Communication and Payment? IEEE\
    \ Sens. J. 2021, 21, 15807–15823. [CrossRef]\nSustainability 2022, 14, 3919\n\
    31 of 31\n102. Kaltakis, K.; Polyzi, P.; Drosatos, G.; Rantos, K. Privacy-Preserving\
    \ Solutions in Blockchain-Enabled Internet of Vehicles. Appl. Sci.\n2021, 11,\
    \ 9792. [CrossRef]\n103. Kapassa, E.; Themistocleous, M.; Christodoulou, K.; Iosif,\
    \ E. Blockchain Application in Internet of Vehicles: Challenges,\nContributions\
    \ and Current Limitations. Future Internet 2021, 13, 313. [CrossRef]\n104. Kebande,\
    \ V.R.; Awaysheh, F.M.; Ikuesan, R.A.; Alawadi, S.A.; Alshehri, M.D. A Blockchain-Based\
    \ Multi-Factor Authentication\nModel for a Cloud-Enabled Internet of Vehicles.\
    \ Sensors 2021, 21, 6018. [CrossRef] [PubMed]\n105. Kim, S.-K. Enhanced IoV Security\
    \ Network by Using Blockchain Governance Game. Mathematics 2021, 9, 109. [CrossRef]\n\
    106. Li, F.; Guo, Z.; Zhang, C.; Li, W.; Wang, Y. ATM: An Active-Detection Trust\
    \ Mechanism for VANETs Based on Blockchain. IEEE\nTrans. Veh. Technol. 2021, 70,\
    \ 4011–4021. [CrossRef]\n107. Li, X.; Liu, J.; Obaidat, M.S.; Vijayakumar, P.;\
    \ Jiang, Q.; Amin, R. An Unlinkable Authenticated Key Agreement With Collusion\n\
    Resistant for VANETs. IEEE Trans. Veh. Technol. 2021, 70, 7992–8006. [CrossRef]\n\
    108. Liang, J.; Ma, M. Co-Maintained Database Based on Blockchain for IDSs: A\
    \ Lifetime Learning Framework. IEEE Trans. Netw. Serv.\nManag. 2021, 18, 1629–1645.\
    \ [CrossRef]\n109. Ma, J.; Li, T.; Cui, J.; Ying, Z.; Cheng, J. Attribute-based\
    \ secure announcement sharing among vehicles using blockchain. IEEE\nInternet\
    \ Things J. 2021, 8, 10873–10883. [CrossRef]\n110. Maarouﬁ, S.; Pierre, S. BCOOL:\
    \ A Novel Blockchain Congestion Control Architecture Using Dynamic Service Function\
    \ Chaining\nand Machine Learning for Next Generation Vehicular Networks. IEEE\
    \ Access 2021, 9, 53096–53122. [CrossRef]\n111. Sharma, S.; Kaushik, B.; Rahmani,\
    \ M.K.I.; Ahmed, E. Cryptographic Solution-Based Secure Elliptic Curve Cryptography\
    \ Enabled\nRadio Frequency Identiﬁcation Mutual Authentication Protocol for Internet\
    \ of Vehicles. IEEE Access 2021, 9, 147114–147128.\n[CrossRef]\n112. Xu, X.; Zeng,\
    \ Z.; Yang, S.; Shao, H. A Novel Blockchain Framework for Industrial IoT Edge\
    \ Computing. Sensors 2020, 20, 2061.\n[CrossRef]\n113. Xia, S.; Lin, F.; Chen,\
    \ Z.; Tang, C.; Ma, Y.; Yu, X. A Bayesian Game Based Vehicle-to-Vehicle Electricity\
    \ Trading Scheme for\nBlockchain-Enabled Internet of Vehicles. IEEE Trans. Veh.\
    \ Technol. 2020, 69, 6856–6868. [CrossRef]\n114. She, W.; Liu, Q.; Tian, Z.; Chen,\
    \ J.-S.; Wang, B.; Liu, W. Blockchain Trust Model for Malicious Node Detection\
    \ in Wireless Sensor\nNetworks. IEEE Access 2019, 7, 38947–38956. [CrossRef]\n\
    115. Hasrouny, H.; Samhat, A.E.; Bassil, C.; Laouiti, A. Trust model for secure\
    \ group leader-based communications in VANET. Wirel.\nNetw. 2019, 25, 4639–4661.\
    \ [CrossRef]\n116. Liang, J.; Chen, J.; Zhu, Y.; Yu, R. A novel Intrusion Detection\
    \ System for Vehicular Ad Hoc Networks (VANETs) based on\ndifferences of trafﬁc\
    \ ﬂow and position. Appl. Soft Comput. 2019, 75, 712–727. [CrossRef]\n117. He,\
    \ Y.; Yu, F.R.; Wei, Z.; Leung, V. Trust management for secure cognitive radio\
    \ vehicular ad hoc networks. Ad Hoc Netw. 2019, 86,\n154–165. [CrossRef]\n118.\
    \ Buterin, V. A next-generation smart contract and decentralized application platform.\
    \ White Pap. 2014, 3, 13.\n119. Kheliﬁ, H.; Luo, S.; Nour, B.; Moungla, H.; Ahmed,\
    \ S.H.; Guizani, M. A blockchain-based architecture for secure vehicular Named\n\
    Data Networks. Comput. Electr. Eng. 2020, 86, 106715. [CrossRef]\n120. Minoli,\
    \ D.; Occhiogrosso, B. Blockchain mechanisms for IoT security. IOT 2018, 1–2,\
    \ 1–13. [CrossRef]\n121. Luo, B.; Li, X.; Weng, J.; Guo, J.; Ma, J. Blockchain\
    \ Enabled Trust-Based Location Privacy Protection Scheme in VANET. IEEE Trans.\n\
    Veh. Technol. 2019, 69, 2034–2048. [CrossRef]\n122. Abou-Nassar, E.M.; Iliyasu,\
    \ A.M.; El-Kafrawy, P.M.; Song, O.-Y.; Bashir, A.K.; El-Latif, A.A.A. DITrust\
    \ Chain: Towards Blockchain-\nBased Trust Models for Sustainable Healthcare IoT\
    \ Systems. IEEE Access 2020, 8, 111223–111238. [CrossRef]\n123. Tan, H.; Chung,\
    \ I. Secure Authentication and Key Management with Blockchain in VANETs. IEEE\
    \ Access 2019, 8, 2482–2498.\n[CrossRef]\n124. Hu, W.; Hu, Y.; Yao, W.; Li, H.\
    \ A Blockchain-Based Byzantine Consensus Algorithm for Information Authentication\
    \ of the Internet\nof Vehicles. IEEE Access 2019, 7, 139703–139711. [CrossRef]\n"
  inline_citation: '>'
  journal: Sustainability
  limitations: '>'
  pdf_link: https://www.mdpi.com/2071-1050/14/7/3919/pdf?version=1648226258
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Blockchain-Enabled Vehicular Ad Hoc Networks: A Systematic Literature Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22166257
  analysis: '>'
  authors:
  - Geraldo P. Rocha Filho
  - Artur H. Brandão
  - Renato Avellar Nobre
  - Rodolfo I. Meneguette
  - Heitor Freitas
  - Vinícius P. Gonçalves
  citation_count: 3
  full_citation: '>'
  full_text: '>

    Citation: Rocha Filho, G.P.; Brandão,

    A.H.; Nobre, R.A.; Meneguette, R.I.;

    Freitas, H.; Gonçalves, V.P. HOsT:

    Towards a Low-Cost Fog Solution via

    Smart Objects to Deal with the

    Heterogeneity of Data in a

    Residential Environment. Sensors

    2022, 22, 6257. https://doi.org/

    10.3390/s22166257

    Received: 28 May 2022

    Accepted: 20 July 2022

    Published: 20 August 2022

    Publisher’s Note: MDPI stays neutral

    with regard to jurisdictional claims in

    published maps and institutional afﬁl-

    iations.

    Copyright:

    © 2022 by the authors.

    Licensee MDPI, Basel, Switzerland.

    This article is an open access article

    distributed

    under

    the

    terms

    and

    conditions of the Creative Commons

    Attribution (CC BY) license (https://

    creativecommons.org/licenses/by/

    4.0/).

    sensors

    Article

    HOsT: Towards a Low-Cost Fog Solution via Smart

    Objects to Deal with the Heterogeneity of Data in a

    Residential Environment

    Geraldo P. Rocha Filho 1,*

    , Artur H. Brandão 1

    , Renato A. Nobre 1,2

    , Rodolfo I. Meneguette 3

    ,

    Heitor Freitas 4

    and Vinícius P. Gonçalves 5

    1

    Department of Computer Science, University of Brasília, Brasília 70910-900, Brazil

    2

    Computer Science Department, Università degli Studi di Milano, 20122 Milano, Italy

    3

    Institute of Mathematical and Computer Sciences, University of São Paulo, São
    Carlos 13560-970, Brazil

    4

    Sidia R&D Institute, Manaus 69055-035, Brazil

    5

    Electrical Engineering Department, University of Brasília, Brasília 70910-900,
    Brazil

    *

    Correspondence: geraldof@unb.br

    Abstract: With the fast and unstoppable development of technology, the amount
    of available techno-

    logical devices and the data they produce is overwhelming. In analyzing the context
    of a smart home,

    a diverse group of intelligent devices generating constant reports of its environment
    information

    is needed for the proper control of the house. Due to this demand, many possible
    solutions have

    been developed in the literature to assess the need for processing power and storage
    capacity. This

    work proposes HOsT (home-context-aware fog-computing solution)—a solution that
    addresses the

    problems of data heterogeneity and the interoperability of smart objects in the
    context of a smart home.

    HOsT was modeled to compose a set of intelligent objects to form a computational
    infrastructure in

    fog. A publish/subscribe communication module was implemented to abstract the
    details of com-

    munication between objects to disseminate heterogeneous information. A performance
    evaluation

    was carried out to validate HOsT. The results show evidence of efﬁciency in the
    communication

    infrastructure; and in the impact of HOsT compared with a cloud infrastructure.
    Furthermore, HOsT

    provides scalability about the number of devices acting simultaneously and demonstrates
    its ability

    to work with different devices.

    Keywords: fog computing; IoT; MQTT; smart objects; computational resources; data
    heterogeneity;

    interoperability

    1. Introduction

    In recent years, information has become one of the most valuable assets globally
    [1].

    Such information is obtained from raw data, documented observations, or measurement

    results [2]. There are various ways of obtaining data, one of them is through
    smart objects.

    Those objects can: (i) determine the value of a local event; (ii) identify events
    of interest; (iii)

    process such events on and off the network; (iv) detect objects of interest; and
    (v) establish

    data communication and scalability.

    With advancing technology in the ﬁeld of microelectromechanical systems, there
    has

    been signiﬁcant growth in the use of smart objects within the residential context
    [3–6], such

    as smart TVs, smartwatches, and smart refrigerators.

    Furthermore, with these objects

    connecting all the physical assets and communication itself through the internet,
    it is a

    revolutionary concept from IoT (Internet of Things) [7]. In this regard, smart
    homes are

    emerging as promising sources of information and arouse interest among researchers
    for

    proposing models and applications to perform smart decision making [8,9]. A smart
    home

    can be deﬁned as a set of smart objects contained in a household to automate daily
    tasks

    and keep track of data provided by the environment to the user, to manage the
    user’s

    residential resources [10].

    Sensors 2022, 22, 6257. https://doi.org/10.3390/s22166257

    https://www.mdpi.com/journal/sensors

    Sensors 2022, 22, 6257

    2 of 12

    It is noteworthy that due to a shortage of computational resources contained in
    the

    smart objects, developing—in the residential setting—services that use intercommunication

    between objects is not a trivial task. Solving this limitation becomes even more
    challenging

    due to data heterogeneity and interoperability among the objects present in the
    home. As

    an example of this challenge, all the data collected by the temperature and the
    humidity

    sensors of Alexa devices are received by the Alexa application and the AR conditional.

    Later, both applications obtain the requested data and perform some pre-established
    actions.

    For example, the AR conditional temperature lowers as the environmental temperature

    increases. Additionally, Alexa will provide an alert if the humidity reaches below
    twenty

    percent. To deal with such challenges, a promising path is the use of fog computing
    [11]

    along with the communication paradigm publish/subscribe (Pub/Sub) [12]. Fog comput-

    ing is a highly virtualized platform that provides processing, storage, and networking

    services between end devices and traditional cloud servers—that is, tasks are
    performed

    cooperatively among the smart objects contained within an environment through
    commu-

    nication [11]. The Pub/Sub paradigm allows reliable asynchronous communication
    among

    objects, from multiple event sources to their respective groups of interests [13].

    In this context, fog computing is characterized as an environment with many decentral-

    ized and heterogeneous objects that can cooperate with each other. This cooperation
    takes

    place through the use of the local internet, which improves storage performance
    and task

    processes without the interference of third parties, such as the use of the cloud
    [14]. Thus,

    all objects that are contained in this fog environment are called fog nodes—that
    is, they

    are devices that bring processing, storage, and internet services to the edge
    of the internet.

    They are also characterized as purpose devices [15]. To have a communication between

    these objects belonging to the same fog environment, the Pub/Sub paradigm is used
    that is

    composed of objects that contain characteristics of publishers or subscribers
    that send and

    receive messages, respectively, in an uncoupled and asynchronous manner [13].

    Different approaches have been proposed to deal with the issue of data hetero-

    geneity and interoperability among devices in the same environment [16–20]. Some

    approaches [16,18] use MQTT (message queue telemetry transport) to create clusters
    for

    scalability in IoT devices, and others to provide services in IoT applications.
    However,

    such approaches use MQTT only to provide speciﬁc services. Other approaches [19,20]
    use

    the fog computing paradigm to take advantage of residential devices’ local processing
    to

    reduce the processing time in the decision-making process. However, the approaches
    focus

    only on applications, not worrying about the increase in smart objects.

    Despite signiﬁcant efforts in this area, investigating the interoperability of
    communica-

    tion between devices, taking advantage of contents implicitly disseminated in
    a residential

    context based on fog computing is an open ﬁeld of research that this work investigates.

    Because of this, the following research question was formulated to guide this
    work: Is the

    use of fog computing, as an infrastructure, combined with Pub/Sub, as a communication

    module, capable of improving the computational costs of a residential environment?
    Thus,

    this work is based on the hypothesis that fog computing combined with Pub/Sub
    can pro-

    vide scalability to deal with data heterogeneity within the residential context
    and optimize

    its services.

    Therefore, this paper presents HOsT (home-context-aware fog-computing solution),

    a solution to the problems of data heterogeneity and interoperability of smart
    objects in

    the context of the smart home. For this purpose, a fog-computing environment was
    set

    up through household smart objects to build the HOsT infrastructure. To disseminate

    information, a Pub/Sub communication module was implemented in the infrastructure

    with the aim of improving the computational and operational costs originating
    from the

    variation of the quantity of fog nodes and the amount of data exchanged among
    the objects.

    The results show that HOsT performs satisfactorily in relation to the devices
    computational

    resources and the proposed solution infrastructure.

    The remainder of this paper is organized as follows. Section 2 presents some limitations

    related to other works that, in their majority, worked with the MQTT communication

    Sensors 2022, 22, 6257

    3 of 12

    mechanism. Section 3 describes, in detail, how HOsT works and how its components
    act

    during the execution process. Its validation is presented in Section 4; meanwhile,
    Section 5

    presents our conclusions and plans for future work.

    2. Related Works

    This section will address smart-environment-related works that contain a similar

    concept to an MQTT connection for communication among devices. As described in
    [18],

    the authors show how efﬁcient it is to use an MQTT broker alongside AWS (Amazon

    Web Services) to manage a small IoT (Internet of Things) application in a smart
    home

    environment. This methodology was proposed through the end-to-end implementation
    of

    the suggested scenario. Thus, the authors developed hardware that captures temperature

    and smoke detection data. This hardware connects to the MQTT created on AWS, and
    it

    was developed an application for capturing events transmitted by the MQTT. Therefore,

    this study demonstrated great ease in developing an MQTT application on AWS for
    small

    IoT applications. However, there is a performance limitation regarding the application

    usage since a likely increase in the number of devices could cause a performance
    problem

    on the broker.

    In another study [19], a method of handling a large amount of heterogeneous data

    captured by IoT devices using a cloud storage feature called Apache Kafka is presented.
    For

    this purpose, they developed a REST web service interface enabling easy use of
    the utilized

    platform and Google Cloud as storage. As a result, the calculated metrics for
    measuring

    the performance of the whole message transmission to the cloud were considered
    efﬁcient,

    with the possibility, therefore, of using this architecture for real-time data
    transmission.

    Finally, the routes for sending data directly to the cloud were analyzed, which
    may have

    expanded the study to fog communication among local devices.

    Based on [17], the creation of MQTT broker clustering was proposed, which aimed
    to

    achieve scalability and low cost through a large number of connected IoT devices
    in the

    same environment. For this purpose, a visualization system was created to analyze
    the

    cluster data regarding CPU usage, memory, and network trafﬁc. As a way of simulating

    the proposal, Raspberry Pi devices were employed as nodes, and, through the Mosquitto,

    the MQTT broker was used for message communication among them, in addition to

    using docker and NGINX. Furthermore, scalability was acquired through the use
    of docker

    containers and, with NGINX implemented at the backend of MQTT brokers, the researchers

    achieved a positive outcome regarding the assessed metrics found in the visualization

    analyses. A way of improving the assessment would be to cover the amount of MQTT

    protocols, such as message exchange, to more fully compare metrics.

    With the proposition of managing the applications of a residence through fog comput-

    ing, [21] suggest a neuro-fog-control system via smart objects. Thus, this solution’s
    goal

    is to ensure fast decision making when executing the system locally in the infrastructure

    designed by the authors. The internal data dissemination was performed through
    Pub/Sub

    methods, which made the scale of devices viable without causing communication
    problems

    among new devices. Furthermore, on fog computing, [20] propose a low-cost residential

    automation system to improve the resident decision-making process. To this end,
    the

    proposed system aims to learn the applications through a classiﬁer ensemble. Considering

    the internal settings of the communication protocols employed in the study, there
    would

    be a possibility increasing the message size and then analyzing for interference
    in the

    evaluated metrics. Therefore, the solution presented in this research differs
    from others

    in the communication interface used to address data heterogeneity and interoperability

    among the devices in a smart home.

    In the search for a smart home system at a low and ﬂexible cost, [16] demonstrates

    the use of an Android application that communicates through a micro-web server
    to

    provide numerous interactive features among devices. To this end, Arduino Ethernet

    was used to connect sensors to capture temperature, humidity, and gas sensitivity
    from

    the environment. Thus, such devices communicate with the developed application,
    and

    Sensors 2022, 22, 6257

    4 of 12

    this application’s purpose is to control the sensors and capture the entered data.
    The

    application managed to attain the expected result through the tests, demonstrating
    viability

    and effectiveness in communication between smart home devices and Android applications.

    However, since there was only veriﬁcation of the application connectivity success,
    other

    means of communication among the devices could be veriﬁed, such as MQTT. With
    this

    communication, there could be a higher speed of data transfer and easy maintenance
    of the

    proposed system due to the great scalability and operability capacity of its usage
    compared

    with other means of communication, as shown in surveys [22].

    In [23], a comparison is made between fog and cloud computing usage regarding
    the

    data trafﬁc metrics in both environments. Thus, this paper provides data on latency
    and

    delays caused by data transfer, which may interfere with the communication performance

    depending on the environment. Therefore, a signiﬁcant increase in the fog environment

    performance is clear through the collected data of both environments, considering
    the

    desire for latency and avoiding congestion due to internet trafﬁc. Thus, there
    is still a need

    to evaluate communication methods within the fog setup to compare the same metrics.

    Table 1 shows the above-mentioned limitations, comparing them with this research.

    We can observe that the works do not make an aggregation of different technologies,

    i.e., the work that uses the Pub/Sub paradigm does not use fog computing, and
    vice

    versa. Furthermore, studies offer a greater focus on the developed application
    without

    considering a possible increase in objects in their projects and how this could
    affect the

    proposed approaches. Thus, HOsT uses fog computing and Pub/Sub to provide more

    efﬁcient intercommunication between heterogeneous devices to meet the needs of
    the

    services used.

    Table 1. Comparison of this work with the related works.

    Related Work

    Pub/Sub

    Fog Computing

    Scalability

    Kang et al. [18]

    ✓

    de Sousa et al. [19]

    ✓

    ✓

    Jutadhamakorn et al. [17]

    ✓

    ✓

    Rocha Filho et al. [21]

    ✓

    ✓

    ✓

    Kumar [16]

    ✓

    Dastjerdi et al. [23]

    ✓

    ✓

    HOsT

    ✓

    ✓

    ✓

    3. HOsT: Home-Context-Aware Fog-Computing Solution

    This section presents HOsT, a fog-computing solution to address the problem of

    data heterogeneity and the interoperability of smart objects within the residential
    context.

    HOsT was designed to have a set of smart objects provided in a smart house itself;
    these

    objects would be connected to the internet, forming a fog-computing environment.
    Such

    an environment, also called edge computing, creates cooperation between the use
    of

    the internet and the use of the heterogeneous devices that work together to improve

    storage performance and task processing for being on the network edge layer [11].
    Once

    the cloud computing conﬁrms its limits [24], fog computing becomes a viable option

    by delivering low latency and an improvement in response rate among the objects
    that

    constitute the environment.

    A module that abstracts the details of smart objects communication based on the

    Pub/Sub communication module was implemented on HOsT. Due to the decoupling

    offered by the ﬁnal parts through Pub/Sub, it is possible to create interest groups
    for the

    collected data. In this regard, it is feasible to ensure that the environment
    modules, objects,

    and applications can communicate among themselves, assisting in the data dissemination

    process as shown in Figure 1.

    Sensors 2022, 22, 6257

    5 of 12

    Figure 1. HOsT operating scenario.

    HOsT contains smart objects that produce data and send them to the environment

    module through the MQTT–Pub/Sub connection, as shown in Figure 1. Furthermore,
    the

    applications work upon the data collected in the environment. To do so, the environment’s

    operational infrastructure of HOsT was divided into (i) fog and (ii) cloud. In
    the fog

    environment, the storage and task processing are performed locally through the
    fog nodes.

    On the other hand, the cloud environment is a remote server with more considerable

    computing resources, which store historical data and processes high-technological-cost

    tasks. In short, the main goal of HOsT is to ensure efﬁciency in communication
    for data

    transfer among devices in the same environment while providing efﬁciency in the
    restricted

    computing resources of the objects without any processing or scalability problems.
    To

    enable a better understanding of HOsT, Section 3.1 presents the chosen fog environment.

    Then, Section 3.2 presents the employed communication mechanism. Lastly, practical

    applications of HOsT are presented in Section 3.3.

    3.1. Fog-Computing Environment

    On HOsT, smart objects are called fog nodes and are responsible for collecting,
    pro-

    cessing, and disseminating data in the residential environment, as shown in Figure
    2. In the

    fog-computing environment, it is assumed that each smart object is equipped with
    storage

    capacity, processing power, and a wireless communication interface. Moreover,
    these

    objects are on the network edge and are responsible for promoting communication
    between

    the users and the cloud server. The fog nodes aim to create a computing environment

    capable of making decisions in an area that needs to send data with better performance

    than that of data in a cloud environment. It should be noted that the scope of
    this study

    is not to propose models and applications for decision making, but rather to propose
    a

    solution to them.

    The fog nodes are distributed in the environment and operate both as information

    producers and consumers. Each smart device possesses local and global knowledge
    of

    the environment. To this purpose, HOsT adopts a virtual fog map based on the work

    of [25]. To generate the map, the fog node shares the information through the
    request–reply

    model of Pub/Sub. Sharing is performed via a communication mechanism implemented

    on HOsT—presented below.

    Sensors 2022, 22, 6257

    6 of 12

    Figure 2. Overview of the fog environment and its respective nodes.

    3.2. Communication Mechanism

    The proposed solution was designed based on MQTT (message queue telemetry trans-

    port) [13] in the fog environment. This protocol contains basic concepts that
    are composed

    of: (i) publisher/subscriber—devices that send and receive messages, respectively,
    in an un-

    coupled and asynchronous way between devices [13]; (ii) topics and subscriptions—topics

    can be listed as the subject of the message sent by the publisher, while subscribers
    subscribe

    to topics so that they receive messages only referring to those topics; (iii)
    quality of service

    (QoS)—consists of guaranteeing message delivery and is divided into QoS0 (once
    at most),

    QoS1 (at least once), and QoS2 (exactly once); (iv) message retention—messages
    remain in

    the broker so that future subscribers of the topic in question will receive the
    messages [26].

    It should be noted that, for the operation of this protocol, two components are
    required

    in its architecture: (i) clients, which function like any object that acts as
    a publisher or

    subscriber; and (ii) a broker, which acts as a distribution control mechanism
    of messages

    sent by clients, because it collects messages sent by the publisher and redirects
    them to

    subscribers interested in the message topics [26].

    The choice for selecting MQTT was a result of its minimal usage of bandwidth,
    low

    imposition of resources upon the equipment (which can still reliably transmit),
    guaranteed

    delivery of messages sent through it, and decoupling among the components that
    constitute

    the environment. These are the characteristics featured in this research. Meanwhile,
    the

    publisher and subscriber are devices that send and receive messages, respectively,
    in a

    decoupled and asynchronous manner among the devices [13]. Therefore, HOsT has
    three

    components working on the MQTT process, Figure 3: (i) the publisher—the component
    that

    sends data through an event; (ii) the event—the component that generates a notiﬁcation;

    and (iii) the subscriber—the component that receives data of interest about an
    event [22].

    Figure 3. Pub/Sub communication protocol.

    On HOsT, the decoupling among the objects is a dissociation of space, time, and

    synchronization. As for space, there is no need for the nodes to know about the
    number of

    publishers and subscribers contained in the fog, since the activity of each equipment
    that

    uses MQTT is independent. Moreover, there is no need for the publishers and subscribers

    to be active at the same time for a a message exchange to occur between them.
    In this

    Sensors 2022, 22, 6257

    7 of 12

    context, by publishing an event, even if the subscriber is inactive at the moment
    the

    notiﬁcation is generated, it can be triggered, and there is no need for the publisher
    to be

    active for the event to be directed to its subscriber once this task falls on
    the MQTT broker

    on HOsT. In addition, HOsT offers the publishers—through the MQTT—the possibility

    of generating events without the need for some of them to be blocked or prevented
    from

    sending messages. The subscribers work similarly in the receipt of these events
    when the

    broker is in charge of ensuring the sending of the messages to the respective
    subscribers.

    Consequently, the described solution is simpliﬁed through the asynchronous execution
    of

    its activities, enabling concurrent tasks to be performed among all the fog nodes
    contained

    in the environment to address the problem of data heterogeneity and interoperability

    among the nodes.

    For the management of the events, HOsT uses the broker of Eclipse Paho, in the
    MQTT

    library (https://www.eclipse.org/paho/, accessed on 27 May 2022) broker, which
    consti-

    tutes a component of the MQTT protocol, Figure 3. The library captures the data
    sent by

    the publishers, and it generates a notiﬁcation and directs it to its respective
    subscribers. For

    this to happen, both publishers and subscribers use the commands publish and subscribe,

    respectively, when importing the library to communicate with the broker. Additionally,
    the

    communication provided by each smart object refers to network transport occurring
    over a

    WebSocket connection, while the protocol runs over TCP/IP.

    3.3. Applicability

    From the development of HOsT, it is possible to create various applications and
    models

    for decision making that can be employed in smart environments. This solution
    can be

    used for environmental control and monitoring applications to perform decision-making

    processes for elderly care in a health-smart home. The aforementioned scenario
    employs

    HOsT to collect heterogeneous data such as voice, temperature, humidity, video,
    and body

    thermometer data. From this gathered data, each Pub device would send the subject
    to

    which the data and the registered message refer to the Sub of interest. Thus,
    real-time

    evaluations would be conducted, keeping track, for example, of the user’s wellbeing.

    Another application that HOsT can provide is the constant veriﬁcation of shopping

    malls’ cooling systems. This is due to the data transmission optimization on account
    of the

    fog environment among the area temperature sensors, as shown on HOsT. To maintain

    a pleasant temperature for all clients, it would be possible to track in the areas
    of a mall

    where there are crowds through increased room temperature caused by people’s body

    temperature in these areas. In addition to that, the cooling power could be increased
    in

    such places. On the other hand, from the collected data, it is possible to save
    energy in the

    mall itself. This energy-saving process would be possible through the reduction
    of cooling

    power in places with no detection of large crowds, maintaining the local temperature.

    Furthermore, considering the current sociopolitical context and the crisis caused
    by the

    novel coronavirus (COVID-19), there is a possibility to identify crowds through
    presence

    sensors or even temperature sensors. As soon as a group of people is identiﬁed,
    those in

    charge could be notiﬁed and, thereby, take the necessary precautions.

    4. Performance Evaluation

    This section presents the modeled scenario along with the generated results from
    the

    performance review of HOsT. HOsT was validated in two steps, as follows: (i) evaluation
    of

    the data dissemination in the network; and (ii) evaluation of a fog-computing
    environment,

    comparing it with a baseline that sends the information directly to the cloud.
    Through

    these evaluations, it was possible to determine the functioning of HOsT and its
    advantages

    in a fog environment. Next, the modeled scenario will be presented, along with
    the selected

    parameters and the measures used to generate the results.

    Sensors 2022, 22, 6257

    8 of 12

    4.1. Scenario

    To assess the proposal, the docker container was employed to simulate Pub/Sub

    devices, where such devices would represent the fog nodes on HOsT. The programming

    language used was Python 3.6 with the paho-mqtt (https://pypi.org/project/paho-mqtt/,

    accessed on 27 May 2022) library operating as a broker. The following metrics
    were used

    to assess infrastructure computing resources: (i) response time for sending a
    subject; (ii)

    data rate between device and infrastructure; and (iii) delivery rate, which represents
    the

    rate per second of topics in the infrastructure. To obtain the measures, the psutils
    (https:

    //pypi.org/project/psutil/, accessed on 27 May 2022) library on Python was employed,

    which collects information from the processes and the operating system. In addition,
    to

    assess HOsT with a baseline that sends the information directly to the cloud,
    the following

    measures were used: (i) energy consumption, that represents the total energy consumed
    by

    the system; (ii) response time, that represents the time to complete the execution
    of a given

    task; and (iii) MIPS, that represents the number of instruction executions completed
    by the

    system per second.

    For the generated results, a variation in the number of fog nodes (5, 10, 20,
    and 30)

    and in the number of subjects (8, 13, 21, and 34) was employed to investigate
    the impact

    on HOsT, as presented in Table 2. In this case, the publisher fog nodes simultaneously

    produced their data while subscribers received them through the broker. In addition,

    the payload of the subjects (100 kB, 200 kB, 400 kB, 800 kB, and 1600 kB) was
    varied by

    instantiating a broker, and the data were normalized for the response time (ms)
    and the

    data trafﬁc (kB/s). Each experiment was performed 32 times with a trust gap of
    95% using

    the t-Student distribution, as presented in the following subsections.

    Table 2. Set of parameters employed to generate the results.

    Parameters

    Standard Value

    Number of Topics

    8, 13, 21 and 34

    Number of fog nodes

    5, 10, 20 and 30

    Payload

    100 kB, 200 kB, 400 kB, 800 kB and 1600 kB

    Broker

    1

    Protocol

    Eclipse Paho MQTT

    Number of replications

    32

    Conﬁdence interval

    95%

    4.2. The Impact of HOsT Infrastructure Computing Resources

    HOsT performance was evaluated according to the increase in the number of fog

    nodes as a function of the payload sent by them. As the amount of payloads increases,

    growth is observed in message sending and response time, as shown in Figure 4a.
    This is

    related to the broker, which requires a longer return time due to the capture
    and sending

    of messages.

    With regard to the data rate, as analyzed in Figure 4b, the stability in growth
    after

    the 400 kB payload is noted. This fact ratiﬁes the possibility of increasing the
    number

    of devices without overloading HOsT’s infrastructure, thus avoiding the generation
    of

    an obstacle to data trafﬁc that occurs during the process. It is noteworthy that,
    with the

    increase in the number of devices depending on the payload, the message delivery
    rate

    decreases, as observed in Figure 4c. This result comes from the speed and amount
    of data

    that the broker can receive and pass on to the remaining subscribers on the subjects
    in

    question. However, even if the delivery rate decreases as the payload increases,
    it is clear

    that the quantity of nodes does not signiﬁcantly impact the result, thus achieving
    a stable

    delivery rate. Therefore, in addition to being efﬁcient regarding the data rate,
    HOsT also

    provides good results for the message response and delivery time with payload
    increases.

    Consequently, across the impact of all metrics analyzed, it will not be challenging
    to predict

    the cost of the metrics, and it will become easier to create a fog environment
    with a view to

    Sensors 2022, 22, 6257

    9 of 12

    the engagement analysis of the resources which will be needed for the operation
    to occur

    without problems.

    (a)

    (b)

    (c)

    Figure 4. The impact of response time, data rate and message delivery. (a) Response
    Time; (b) Data

    trafﬁc; (c) Message delivery rate.

    4.3. The Impact of HOsT When Compared with a Baseline

    Figure 5a shows the result of the energy consumption by the fogs nodes as a function

    of the data sent by them. Note that, with 1600 kB of payload, the energy consumption
    spent

    by HOsT was signiﬁcantly lower when compared with the baseline. The same behavior

    happens when processing 400 kB and 800 kB of data. When processed at 100 kB, HOsT
    is

    still better than the traditional approach. This is because there was no need
    to transmit data

    to process 100 kB of data. In other words, the processing might have been performed
    locally.

    Therefore, regardless of the amount of data processed, the proposed solution has
    a superior

    performance in energy efﬁciency when compared with the traditional approach. This

    approach is related to cloud systems, which have a high instance of data and,
    consequently,

    a higher delay.

    After analyzing the energy consumption of the fog-computing environment, the

    response time taken to complete the data execution was investigated, as shown
    in Figure 5b.

    It is observed that, regardless of the scenario, as the amount of processed data
    increases,

    HOsT has faster responses than the traditional approach. On average, the processing
    of

    the proposed solution was 20% faster when compared with the traditional approach.
    A

    worst-case scenario occurs when processing 1600 kB of data and the best-case scenario

    occurs when processing 100 kB of data. This gain in response time makes sense
    since a

    large part of the data was processed locally.

    Figure 5c shows the number of instructions executed in the fog-computing environ-

    ment and the cloud environment as a function of the processed data. Except for
    100 kB

    of processed data, it is essential to note that HOsT has a constant number of
    instructions

    executed as the amount of processed data increases. The most accentuated growth
    in the

    baseline is related to the direct transfer of information to the remote server.
    That is, it does

    not use the fog-computing environment to process data locally.

    Sensors 2022, 22, 6257

    10 of 12

    Evidently, after analyzing Figure 5, it is possible to infer from the analyzed
    metrics

    that resource consumption will not only be better than the attractive approach
    but also

    related to the easy prediction of resource consumption given by HOsT.

    (a)

    (b)

    (c)

    Figure 5. The impact of energy consumption, response time, and the number of instructions.
    (a) En-

    ergy; (b) Response time; (c) MIPS.

    5. Conclusions

    This research addresses the problem of data heterogeneity and interoperability
    of

    smart objects in the residential context. As a result of this work, we proposed
    HOsT,

    an infrastructure that abstracts the communication details of smart objects based
    on the

    Pub/Sub module. The performance evaluation presents evidence of the efﬁciency
    in the

    devices’ computing resources and the communication infrastructure of HOsT. The
    results

    have shown that HOsT accommodates scalability—changes the number of devices acting

    simultaneously—and has been demonstrated to be able to operate with different
    types of

    devices and data.

    The main ﬁndings are related to easy operating and computing the cost forecasting
    of

    the fog environment. This is due to the result projection stability and patterns
    regarding

    response time performance, data rate, and message delivery.

    In future works, the research of this paper will be expanded to implement HOsT
    in

    different contexts, focusing on smart environments. In addition, in the context
    of data

    security, the expansion of this work is of the utmost importance since the data
    captured by

    the residential fog environment has a private nature and should only be shared
    with the

    user’s authorization.

    Author Contributions: Conceptualization, G.P.R.F. and A.H.B.; methodology, G.P.R.F.,
    A.H.B. and

    V.P.G.; validation A.H.B., V.P.G., R.A.N., R.I.M. and H.F.; investigation, A.H.B.
    and H.F.; resources,

    A.H.B.; writing—original draft preparation, G.P.R.F., A.H.B. and R.I.M.; writing—review
    and edit-

    ing, G.P.R.F., A.H.B. and R.I.M. All authors have read and agreed to the published
    version of

    the manuscript.

    Funding: This work was partially supported by Samsung Eletrônica da Amazônia Ltda.,
    under the

    stimulus of the Brazilian Informatics Law No. 8.387/91. Geraldo P. Rocha Filho
    would like to thank

    the FAPESP (São Paulo Research Foundation) under grant #2021/06210-3.

    Sensors 2022, 22, 6257

    11 of 12

    Institutional Review Board Statement: Not applicable.

    Informed Consent Statement: Not applicable.

    Data Availability Statement: Not applicable.

    Conﬂicts of Interest: The authors declare no conﬂict of interest.

    References

    1.

    Vitorino, M.S.A.; Moura, L.C.B.; Cosenza, H.J.S.R. Sociedade da Informação, Quando
    os Dados Pessoais Viram Moeda de Troca:

    A PolêMica da Nova Moeda. 2018. Available online: http://singep.submissao.com.br/7singep/resultado/an_resumo.asp?

    pagina=11 (accessed on 27 May 2022).

    2.

    Becker, J.L. Estatística Básica: Transformando Dados em Informação; Bookman: Quezon
    City, Philippines, 2015.

    3.

    Geraldo Filho, P.; Villas, L.A.; Gonçalves, V.P.; Pessin, G.; Loureiro, A.A.;
    Ueyama, J. Energy-efﬁcient smart home systems:

    Infrastructure and decision-making process. Internet Things 2019, 5, 153–167.
    [CrossRef]

    4.

    Gonçalves, V.P.; Geraldo Filho, P.; Mano, L.Y.; Bonacin, R. FlexPersonas: Flexible
    design of IoT-based home healthcare systems

    targeted at the older adults. AI Soc. 2021, 36, 955–973. [CrossRef]

    5.

    Xu, C.; Liu, Z.; Liao, M.; Yao, L. Theoretical analysis and computer simulations
    of a fractional order bank data model incorporating

    two unequal time delays. Expert Syst. Appl. 2022, 199, 116859. [CrossRef]

    6.

    Xu, C.; Zhang, W.; Aouiti, C.; Liu, Z.; Liao, M.; Li, P. Further investigation
    on bifurcation and their control of fractional-order

    bidirectional associative memory neural networks involving four neurons and multiple
    delays. In Mathematical Methods in the

    Applied Sciences; Wiley: Hoboken, NJ, USA, 2021.

    7.

    Zeb, S.; Mahmood, A.; Hassan, S.A.; Piran, M.J.; Gidlund, M.; Guizani, M. Industrial
    digital twins at the nexus of NextG wireless

    networks and computational intelligence: A survey. J. Netw. Comput. Appl. 2022,
    200, 103309. [CrossRef]

    8.

    Geraldo Filho, P.; Villas, L.A.; Freitas, H.; Valejo, A.; Guidoni, D.L.; Ueyama,
    J. ResiDI: Towards a smarter smart home system for

    decision-making using wireless sensors and actuators. Comput. Netw. 2018, 135,
    54–69. [CrossRef]

    9.

    Luria, M.; Hoffman, G.; Zuckerman, O. Comparing Social Robot, Screen and Voice
    Interfaces for Smart-Home Control. In

    Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems,
    CHI’17, Denver, CO, USA, 6–11 May 2017;

    pp. 580–628. [CrossRef]

    10.

    Jiang, H.; Cai, C.; Ma, X.; Yang, Y.; Liu, J. Smart home based on WiFi sensing:
    A survey. IEEE Access 2018, 6, 13317–13325.

    [CrossRef]

    11.

    Yi, S.; Li, C.; Li, Q. A Survey of Fog Computing: Concepts, Applications and Issues.
    In Proceedings of the 2015 Workshop on

    Mobile Big Data, Mobidata’15, Hangzhou, China, 21 June 2015; pp. 37–42. [CrossRef]

    12.

    Eugster, P.T.; Felber, P.A.; Guerraoui, R.; Kermarrec, A.M. The many faces of
    publish/subscribe. ACM Comput. Surv. 2003, 35,

    114–131. [CrossRef]

    13.

    Liu, Y.; Plale, B. Survey of Publish Subscribe Event Systems; Computer Science
    Department, Indian University: Bloomington, IN,

    USA, 2003; Volume 16.

    14.

    Vaquero, L.M.; Rodero-Merino, L. Finding Your Way in the Fog: Towards a Comprehensive
    Deﬁnition of Fog Computing.

    SIGCOMM Comput. Commun. Rev. 2014, 44, 27–32. [CrossRef]

    15.

    Atlam, H.F.; Walters, R.J.; Wills, G.B. Fog Computing and the Internet of Things:
    A Review. Big Data Cogn. Comput. 2018, 2, 10.

    [CrossRef]

    16.

    Kumar, S. Ubiquitous smart home system using android application. arXiv 2014,
    arXiv:1402.2114.

    17.

    Jutadhamakorn, P.; Pillavas, T.; Visoottiviseth, V.; Takano, R.; Haga, J.; Kobayashi,
    D. A scalable and low-cost MQTT broker

    clustering system. In Proceedings of the 2017 2nd International Conference on
    Information Technology (INCIT), Nakhonpathom,

    Thailand, 2–3 November 2017; pp. 1–5.

    18.

    Kang, D.H.; Park, M.S.; Kim, H.S.; Kim, D.y.; Kim, S.H.; Son, H.J.; Lee, S.G.
    Room temperature control and ﬁre alarm/suppression

    IoT service using MQTT on AWS. In Proceedings of the 2017 International Conference
    on Platform Technology and Service,

    Busan, Korea, 13–15 February 2017.

    19.

    de Sousa, A.B.; Neto, J.R.T.; Filho, G.P.R.; Ueyama, J. Uma plataforma de IoT
    para integração de dispositivos baseada em nuvem

    com Apache Kafka. In Anais Estendidos do XXXVI SBRC; SBC: Porto Alegre, Brasil,
    2018.

    20.

    Rocha Filho, G.; Yukio Mano, L.; Demetrius Baria Valejo, A.; Aparecido Villas,
    L.; Ueyama, J. A Low-Cost Smart Home Automation

    to Enhance Decision-Making based on Fog Computing and Computational Intelligence.
    IEEE Lat. Am. Trans. 2018, 16, 186–191.

    [CrossRef]

    21.

    Rocha Filho, G.P.; Meneguette, R.I.; Maia, G.; Pessin, G.; Gonçalves, V.P.; Weigang,
    L.; Ueyama, J.; Villas, L.A. A fog-enabled

    smart home solution for decision-making using smart objects. Future Gener. Comput.
    Syst. 2020, 103, 18–27. [CrossRef]

    22.

    Mishra, B.; Kertesz, A. The Use of MQTT in M2M and IoT Systems: A Survey. IEEE
    Access 2020, 8, 201071–201086. [CrossRef]

    23.

    Dastjerdi, A.V.; Gupta, H.; Calheiros, R.N.; Ghosh, S.K.; Buyya, R. Fog computing:
    Principles, architectures, and applications. In

    Internet of Things; Elsevier: Amsterdam, The Netherlands, 2016; pp. 61–75.

    24.

    Fernando, N.; Loke, S.W.; Rahayu, W. Mobile cloud computing: A survey. Future
    Gener. Comput. Syst. 2013, 29, 84–106. [CrossRef]

    Sensors 2022, 22, 6257

    12 of 12

    25.

    Rocha Filho, G.; Neto, J.R.T.; Valejo, A.; Meneguette, R.I.; Villas, L.A.; Ueyama,
    J. Um sistema de controle neuro-fog para

    infraestruturas residenciais via objetos inteligentes. In Anais do XXXVI SBRC;
    SBC: Porto Alegre, Brasil, 2018.

    26.

    Soni, D.; Makwana, A. A survey on mqtt: A protocol of internet of things (iot).
    In Proceedings of the International Conference On

    Telecommunication, Power Analysis Furthermore, Computing Techniques (ICTPACT-2017),
    Busan, Korea, 13–15 February 2017;

    Volume 20.

    '
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/16/6257/pdf?version=1660980402
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'HOsT: Towards a Low-Cost Fog Solution via Smart Objects to Deal with the
    Heterogeneity of Data in a Residential Environment'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/rs15071873
  analysis: '>'
  authors:
  - Anis Koubâa
  - Adel Ammar
  - Mohamed Abdelkader
  - Yasser Alhabashi
  - Lahouari Ghouti
  citation_count: 14
  full_citation: '>'
  full_text: ">\nCitation: Koubaa, A.; Ammar, A.;\nAbdelkader, M.; Alhabashi, Y.;\n\
    Ghouti, L. AERO: AI-Enabled\nRemote Sensing Observation with\nOnboard Edge Computing\
    \ in UAVs.\nRemote Sens. 2023, 15, 1873. https://\ndoi.org/10.3390/rs15071873\n\
    Academic Editors: Wenjiang Huang,\nGiovanni Laneve, Yingying Dong\nand Chenghai\
    \ Yang\nReceived: 3 March 2023\nRevised: 27 March 2023\nAccepted: 29 March 2023\n\
    Published: 31 March 2023\nCopyright:\n© 2023 by the authors.\nLicensee MDPI, Basel,\
    \ Switzerland.\nThis article is an open access article\ndistributed\nunder\nthe\n\
    terms\nand\nconditions of the Creative Commons\nAttribution (CC BY) license (https://\n\
    creativecommons.org/licenses/by/\n4.0/).\nremote sensing  \nArticle\nAERO: AI-Enabled\
    \ Remote Sensing Observation with Onboard\nEdge Computing in UAVs\nAnis Koubaa\
    \ *,†\n, Adel Ammar †\n, Mohamed Abdelkader\n, Yasser Alhabashi and Lahouari Ghouti\n\
    College of Computer & Information Sciences, Prince Sultan University, Riyadh 11586,\
    \ Saudi Arabia;\naammar@psu.edu.sa (A.A.)\n* Correspondence: akoubaa@psu.edu.sa\n\
    † These authors contributed equally to this work.\nAbstract: Unmanned aerial vehicles\
    \ (UAVs) equipped with computer vision capabilities have been\nwidely utilized\
    \ in several remote sensing applications, such as precision agriculture, environmental\n\
    monitoring, and surveillance. However, the commercial usage of these UAVs in such\
    \ applications is\nmostly performed manually, with humans being responsible for\
    \ data observation or ofﬂine processing\nafter data collection due to the lack\
    \ of on board AI on edge. Other technical methods rely on the\ncloud computation\
    \ ofﬂoading of AI applications, where inference is conducted on video streams,\n\
    which can be unscalable and infeasible due to remote cloud servers’ limited connectivity\
    \ and high\nlatency. To overcome these issues, this paper presents a new approach\
    \ to using edge computing\nin drones to enable the processing of extensive AI\
    \ tasks onboard UAVs for remote sensing. We\npropose a cloud–edge hybrid system\
    \ architecture where the edge is responsible for processing AI\ntasks and the\
    \ cloud is responsible for data storage, manipulation, and visualization. We designed\n\
    AERO, a UAV brain system with onboard AI capability using GPU-enabled edge devices.\
    \ AERO is a\nnovel multi-stage deep learning module that combines object detection\
    \ (YOLOv4 and YOLOv7) and\ntracking (DeepSort) with TensorRT accelerators to capture\
    \ objects of interest with high accuracy and\ntransmit data to the cloud in real\
    \ time without redundancy. AERO processes the detected objects over\nmultiple\
    \ consecutive frames to maximize detection accuracy. The experiments show a reduced\
    \ false\npositive rate (0.7%), a low percentage of tracking identity switches\
    \ (1.6%), and an average inference\nspeed of 15.5 FPS on a Jetson Xavier AGX edge\
    \ device.\nKeywords: unmanned aerial vehicles; object detection; object tracking;\
    \ remote sensing; object\nlocalization; edge computing; inspection; YOLOv4; YOLOv7;\
    \ DeepSORT\n1. Introduction\nThe use of unmanned aerial vehicles (UAVs), also\
    \ known as drones, in remote sensing\nhas been increasingly beneﬁcial as they\
    \ help to speed up the data collection of assets of\ninterest using aerial images.\
    \ Drones make the data collection process cost-effective and\nﬂexible as drones\
    \ can ﬂy at low or high altitudes. It also helps missions to be more efﬁcient\n\
    as large regions can be precisely covered in short times thanks to the use of\
    \ high-resolution\ncameras. Data collection also becomes safe as drones replace\
    \ humans entering dangerous\nor difﬁcult-to-access environments. These beneﬁts\
    \ are driving the remote sensing business\nto increasingly rely on drones. As\
    \ a matter of fact, the market of commercial use of UAVs,\nincluding remote sensing\
    \ applications, was valued at USD 5.85 billion in 2020 and is\nexpected to have\
    \ a compound annual growth rate of 14.2% [1].\n1.1. Motivating Scenarios\nAI-powered\
    \ drones with onboard intelligence are becoming a game changer for many\napplications,\
    \ including search and rescue, rapid infrastructure inspection, and remote\nsensing,\
    \ to name a few. Integrating AI solutions directly on the drone’s edge (compute)\n\
    Remote Sens. 2023, 15, 1873. https://doi.org/10.3390/rs15071873\nhttps://www.mdpi.com/journal/remotesensing\n\
    Remote Sens. 2023, 15, 1873\n2 of 26\ndevices can dramatically reduce the decision-making\
    \ time and operational costs. In this\npaper, we will discuss several scenarios\
    \ in different use cases’ contexts, showing the\nlimitation of existing solutions\
    \ of UAVs for vision-based applications and discussing the\nadvantages of real-time\
    \ onboard AI.\n1.1.1. Remote Sensing\nTree counting is one of the applications\
    \ in remote sensing, where a drone surveys\nfarm regions to count the number of\
    \ trees. In [2], the authors proposed an ofﬂine counting\nand geo-localization\
    \ of palm trees based on aerial images using deep learning. However,\nthe processing\
    \ was performed ofﬂine after collecting palm tree images from a UAV. The\nprocess\
    \ of data collection and its ofﬂine processing takes a long time and needs to\
    \ be\nperformed in real time. Leveraging GPU-based edge devices on board the UAV\
    \ enables\nthe full automation of palm tree counting in real time. Furthermore,\
    \ it helps to send each\npalm tree information (e.g., image and coordinates) to\
    \ the cloud and store it in databases in\nreal time. Naturally, the same concept\
    \ can be applied to other remote sensing applications,\nsuch as gas leakage localization\
    \ and mapping [3], ﬂash ﬂood real-time monitoring [4,5],\nand urban environment\
    \ segmentation [6,7].\n1.1.2. Search and Rescue\nConsider a search-and-rescue\
    \ mission where a drone is required to explore an extended\nregion to search for\
    \ a missing person in the desert or a forest, for example. It has been\nreported\
    \ that more than 100 people get lost and die in the desert annually in Saudi Arabia\n\
    alone [8]. The current practice for search-and-rescue using UAVs is to manually\
    \ explore\na region with human observers to ﬁnd the target missing people. Using\
    \ AI on board will\nhelp to automate the process as the UAV can execute specialized\
    \ person detection models\non board and automatically report their location in\
    \ real time. It is also possible to use a\nswarm of drones to perform search-and-rescue\
    \ missions in parallel, speeding up the search\nprocess and increasing the probability\
    \ of ﬁnding and saving people [9].\n1.1.3. Inspection and Surveillance\nSurveillance\
    \ and inspection using UAVs is one of the fastest businesses in the drone\nindustry\
    \ [10]. Drones are typically used to detect objects of interest in surveillance\
    \ missions,\nsuch as vehicles [11], pedestrians [12], and buildings [13]. Traditional\
    \ approaches either\ninspect real-time video streams by human observers or record\
    \ scenes’ videos and process\nthem ofﬂine either manually or using AI techniques\
    \ to extract target objects. The use\nof onboard AI processing in the UAVs will\
    \ help to automate the inspection process and\nidentify target objects in real\
    \ time with a high accuracy, as will be demonstrated in this\npaper.\nThe automation\
    \ of these applications on board UAVs is possible thanks to the evolution\nof\
    \ edge devices and their support of advanced graphics processing units (GPUs),\
    \ making it\npossible to process complex deep learning models in real time.\n\
    Before the evolution of edge computing, computation ofﬂoading has evolved as the\n\
    prominent approach to processing heavy computation in the cloud instead of processing\n\
    them on robots or drones. This concept has been known as cloud robotics. While\
    \ com-\nputation ofﬂoading offers several advantages by leveraging the capabilities\
    \ of the cloud\nresources to speed up the processing of deep learning models and\
    \ computation-intensive\napplications, it suffers from high communication overhead.\
    \ It also needs a large bandwidth\nand high-quality communication, which cannot\
    \ always be afforded. In [14], the authors\nproposed a system architecture for\
    \ computation ofﬂoading in Internet-connected drones\nand compared the performance\
    \ of cloud computation ofﬂoading versus edge computing\nfor deep learning applications.\
    \ The study investigated the tradeoff between the commu-\nnication cost and computation\
    \ and found that computation ofﬂoading provides higher\nthroughput despite larger\
    \ communication delays.\nRemote Sens. 2023, 15, 1873\n3 of 26\n1.2. Main Contributions\n\
    In this paper, we aimed to tackle the persisting challenge of deploying onboard\n\
    artiﬁcial intelligence on the edge in commercial unmanned aerial vehicles (UAVs)\
    \ that are\nprimarily utilized for remote sensing applications. This predicament\
    \ often necessitates\nlaborious manual data observation or time-consuming ofﬂine\
    \ processing, as cloud-based\napproaches are often impractical. There are a few\
    \ recent works that tested onboard AI\non edge in UAVs for detection and tracking,\
    \ such as [15–17]. Nevertheless, they did not\ninvestigate the hybrid system architecture\
    \ that we implemented in this work, and did not\ndiscuss the role of the cloud\
    \ in their solution. To bridge this gap, we propose using edge\ncomputation on\
    \ board drones to enable advanced observation and surveillance applications,\n\
    involving object detection, multi-object-tracking, and real-time reporting of\
    \ detected target\nobjects to the cloud. In brief, the contributions of the paper\
    \ can be summarized as follows:\n•\nWe propose a new approach to using edge computing\
    \ in drones to enable the process-\ning of extensive AI tasks on board UAVs for\
    \ remote sensing. To overcome the limited\nconnectivity and high latency of remote\
    \ cloud servers, we propose a cloud–edge\nhybrid system architecture. In this\
    \ architecture, the edge is responsible for processing\nAI tasks, and the cloud\
    \ is responsible for data storage, manipulation, and visualiza-\ntion. Our proposed\
    \ architecture can provide a more scalable and efﬁcient solution for\nremote sensing\
    \ applications.\n•\nTo implement our proposed architecture, we designed and developed\
    \ AERO, a UAV\nbrain system with onboard AI capability using GPU-enabled edge\
    \ devices. AERO\nallows us to capture objects of interest with high accuracy and\
    \ transmit data to the\ncloud in real time without redundancy. AERO processes\
    \ the detected objects over\nmultiple consecutive frames to maximize detection\
    \ accuracy. AERO can be a signiﬁcant\nadvancement in the ﬁeld of remote sensing\
    \ as it enables UAVs to perform onboard AI\ntasks with high accuracy and real-time\
    \ data transmission, providing a more efﬁcient\nand cost-effective solution for\
    \ remote sensing applications.\nThe remaining sections of the paper are organized\
    \ as follows. Section 1.3 provides\na review of the relevant literature and situates\
    \ the contribution of the paper in compar-\nison to previous work. Section 2 presents\
    \ the architecture of the AERO system and de-\nscribes the AERO AI Module. In\
    \ Section 3, we detail the experimental study conducted\nto evaluate the AERO\
    \ system’s performance, and we discuss their results in Section 4.\nFinally, Section\
    \ 5 concludes the paper and suggests potential future research directions for\n\
    further improvements.\n1.3. Related Works\nThe introduction of UAVs in remote\
    \ sensing has paved the way for several promising\napplications that span a wide\
    \ range of domains [18]. Impressive progress has been achieved\nin academic and\
    \ industrial arenas. Diversity in available solutions is mainly attributed to\
    \ the\nunderlying technologies and modalities used in the data sense/acquisition\
    \ processes [19].\nThe latter processes are domain-speciﬁc in nature [20,21].\
    \ Other techniques, including\ndata preprocessing, feature extraction, and classiﬁcation,\
    \ are speciﬁcally designed for the\napplication, whether civilian or military.\
    \ UAV applications in remote sensing have been\nreviewed in [21,22].\n1.3.1. Edge\
    \ Computing and UAVs\nSeveral recent works addressed the edge computing paradigm,\
    \ which involves moving\ncomputational processing and storage closer to the end-users,\
    \ devices, or sensors rather\nthan relying solely on cloud-based solutions. Speciﬁcally,\
    \ these works focused on leveraging\nUAVs to ofﬂoad computation tasks to edge\
    \ computing servers, which enables low-latency\ncomputations of speciﬁc tasks\
    \ without noticeable delay.\nIn [23], Messous et al. proposed an evaluation mechanism\
    \ of the integration of the\ncomputation ofﬂoading to edge computing servers for\
    \ the efﬁcient deployment of UAVs.\nRemote Sens. 2023, 15, 1873\n4 of 26\nBased\
    \ on the proposed evaluation, UAV-based models are able to decide whether to\n\
    perform local processing, ofﬂoad to an edge server, or delegate the computational\
    \ tasks to\nthe ground station. Informed decisions are based on low-latency computations\
    \ of speciﬁc\ntasks without noticeable delay. Qian et al. [24] investigated the\
    \ performance of a UAV-\nmounted mobile edge computing network where the UAV unit\
    \ ofﬂoads and executes\nspeciﬁc tasks that originate from some mobile terminal\
    \ users. The trajectory planning\nproblem was formulated as a Markov decision\
    \ process (MDP) where optimal trajectories\nwere obtained using a policy based\
    \ on the double deep Q-network (DDQN) algorithm [25].\nThanks to the DDQN efﬁciency,\
    \ higher throughput scores were attained.\nA machine-learning-based solution for\
    \ the planning of UAV trajectories is attributed\nto Aﬁﬁ, and Gadallah [26]. Unlike\
    \ many existing solutions, Aﬁﬁ and Gadallah targeted\nmissions with real-time\
    \ navigation requirements in dense urban environments, where\nexisting 5G infrastructures\
    \ are astutely employed to ensure UAV navigation in complex\nenvironments through\
    \ continuous interactions between the UAV units and the selected 5G\nnetwork.\
    \ Like [24], the proposed trajectory planning solution relies on deep reinforcement\n\
    learning strategies, where the planning accuracy attains 99%.\nIn [27], Xia et\
    \ al. proposed a ﬂexible design of a wireless edge network using two UAV\nunits.\
    \ In this design, both units are restricted to operate at ﬁxed altitudes with\
    \ accelerated\nmotions. Over a deﬁned area, while the ﬁrst UAV unit is in charge\
    \ of forwarding downlink\nsignals to the user terminals (UTs), the second unit\
    \ is assigned to the collection of the uplink\ndata. Using statistical information\
    \ collected from the UT elements and UAVs, lower bounds\non conditional average\
    \ achievable rates are derived. The proposed scheme is demonstrated\nto attain\
    \ an energy efﬁciency higher than existing ones.\nBin et al. [28] tackled the\
    \ problem of the variability of user mobility and MEC environ-\nments, where they\
    \ suggested a novel scheme for intelligent task ofﬂoading in UAV-enabled\nMEC\
    \ systems using a digital twin (DT). At the core of the proposed scheme lies the\
    \ DDQN\nmodel, which is speciﬁcally designed to effectively constrain multi-objective\
    \ problems. The\nmodel was jointly optimized using closed-form and iterative procedures.\
    \ The simulation\nresults clearly indicate the convergence of the DDQN-based model\
    \ while drastically mini-\nmizing the total energy consumption of the MEC system\
    \ compared to existing optimization\ntechniques.\nA new aerial edge Internet of\
    \ Things (EdgeIoT) system was contributed by Li et\nal. [29]. In this new EdgeIoT\
    \ system, a UAV unit is operated as a mobile edge server\nfor processing computational\
    \ processes related to mission-critical tasks emanating from\nground IoT devices.\
    \ To capture the underlying feature correlations, a graph-based neural\nnetwork\
    \ architecture (GNN) was used for the supervised training of the A2C structure.\n\
    The reported performance analysis highlights the superiority of the mixed GNN-A2C\n\
    framework in terms of the convergence speed and missing task rates.\nIn [30],\
    \ Qian et al. proposed a Monte Carlo tree search (MCTS)-based path planning\n\
    technique assuming that a single UAV is deployed as a mobile service to provide\
    \ computa-\ntion tasks ofﬂoading services for a set of mobile users on the ground.\
    \ The reported results\nshow that the MCTS-based scheme outperforms state-of-the-art\
    \ DQN-based planning\nalgorithms in terms of the average throughput and convergence\
    \ speed. In some instances,\nUAVs assist edge clouds (ECs) for the large-scale\
    \ sparely distributed user equipment,\nwhich allows for wide coverage and reliable\
    \ wireless communication. However, UAVs\nhave limited computation and energy resources,\
    \ which opens the ﬂoor for potential optimal\nresource allocation.\nIn [31], Wang\
    \ et al. introduced a vehicular fog computing (VFC) system where\nunmanned ground\
    \ vehicles (UGVs) perform the computation tasks ofﬂoaded from UAVs\nthat are deployed\
    \ in natural disaster areas. In these areas, UAVs are effectively used to\nsurvey\
    \ disaster areas and even perform emergency missions, given their swift deployment\n\
    and ﬂexibility. However, this efﬁciency is hindered by the limited energy and\
    \ computational\ncapabilities of UAVs. These limitations are properly addressed\
    \ by the VFC-based UAV\nsystem proposed by Wang et al., where UGVs may be assigned\
    \ to perform the computation\nRemote Sens. 2023, 15, 1873\n5 of 26\ntasks ofﬂoaded\
    \ from UAVs to save energy and computational power. To ensure a smooth\nand steady\
    \ UAV–UGV collaboration and interaction, the computation task ofﬂoading\nproblem\
    \ was cast into a two-sided matching problem, where an iterative stable matching\n\
    algorithm was used. This matching algorithm aims at assigning to each UAV the\
    \ most\nsuitable UGV among the available ones for ofﬂoading while maximizing the\
    \ usage of both\nUAVs and UGVs and reducing the average delay.\nYang et al. [32]\
    \ considered a UAV-enabled MEC platform where multiple mobile\nground users move\
    \ randomly and tasks arrive in a random fashion. To minimize the\naverage weighted\
    \ energy consumption of all users under constraints expressed in terms\nof data\
    \ queue stability and average UAV energy consumption, Yang et al. suggested a\n\
    multi-stage stochastic optimization scheme where Lyapunov optimization is converted\
    \ into\nsimpler per-slot deterministic problems vis-a-vis the number of optimizing\
    \ variables. Based\non their formulation, Yang et al. solved the resource allocation\
    \ and the UAV movement\nproblems using two reduced-complexity methods, either\
    \ jointly or separately. The two\nmethods not only satisfy the average UAV energy\
    \ and queue stability constraints, but they\nalso reconcile the length of the\
    \ queue backlog and the user energy consumption bounds.\nThe reported results\
    \ show that the proposed joint and two-stage stochastic optimization\nschemes\
    \ outperform existing learning-based solutions. Finally, it should be noted that\
    \ the\njoint optimization scheme attains a better performance than its two-stage\
    \ counterpart at the\nexpense of an increased computational complexity. Most of\
    \ the solutions discussed so far\nattempt to optimize the UAVs’ total (or average)\
    \ energy consumption and computational\npower allocation among mobile users using\
    \ some type of learning-based strategy.\nIn their proposal, Lyi et al. [33] adopted\
    \ a different approach to maximize the com-\nputation bits of the whole MEC system:\
    \ the joint optimization of task ofﬂoading time\nallocation, bandwidth allocation,\
    \ and the UAV trajectory under speciﬁc energy constraints\nof ground devices and\
    \ maximal UAV battery energy. The proposed solution splits the\noverall optimization\
    \ procedure into three stages, where successive convex optimization\nschemes are\
    \ used. Once individual solutions are identiﬁed, a block coordinate descent\n\
    (BCD) algorithm integrates the solution of the initial optimization problem. Such\
    \ a for-\nmulation aims at obtaining alternating optimal solutions for the optimization\
    \ variables\nconsidered (bandwidth allocation of ground devices, task ofﬂoading\
    \ time, local computing\ntime allocation, and UAV trajectory) at each time slot.\
    \ Extensive simulation experiments\nwere conducted to demonstrate the performance\
    \ improvement attained by the proposed\nBCD-based solution.\nOverall, the proposed\
    \ solutions discussed in this section suggest that UAV-based\nedge computing systems\
    \ have certain advantages over cloud-based techniques in terms\nof optimization,\
    \ convergence speed, throughput, and energy efﬁciency. These advantages\nmake\
    \ UAV-based edge computing systems a promising solution for various applications,\n\
    including precision agriculture, smart cities, and disaster management, where\
    \ real-time\ndata processing and optimization are critical.\n1.3.2. Summary of\
    \ Related Works\nA summary of the current literature is provided in Table 1. Onboard\
    \ AI edge com-\nputing is becoming increasingly important for UAV systems, especially\
    \ those utilizing\nEMC-based solutions. While EMC-based UAV systems offer beneﬁts\
    \ such as ﬂexibility, re-\nsilience, and swift deployment, they also present new\
    \ challenges that can only be addressed\nby advanced AI-based solutions, such\
    \ as reinforcement and deep learning frameworks.\nOne reason for why onboard AI\
    \ edge computing is necessary for EMC-based UAV sys-\ntems is the need for real-time\
    \ decision making. In certain applications, such as emergency\nresponse, decisions\
    \ need to be made quickly and accurately. Onboard AI edge computing\ncan process\
    \ data in real time, allowing the UAV to make decisions based on the information\n\
    that it collects, without the need for remote servers. This reduces latency and\
    \ ensures that\ndecisions are made in a timely manner.\nRemote Sens. 2023, 15,\
    \ 1873\n6 of 26\nAnother reason is the need for autonomy. UAVs equipped with onboard\
    \ AI edge com-\nputing can perform tasks autonomously, without human intervention.\
    \ This is important\nin applications where it may be dangerous or impractical\
    \ for humans to be present, such\nas in disaster response or surveillance missions.\
    \ The AI algorithms on board the UAV can\nanalyze the data collected and make\
    \ decisions based on pre-deﬁned rules, allowing the\nUAV to carry out its tasks\
    \ independently.\nTable 1. Comparative analysis of related work.\nReference\n\
    Scope\nAdvantages\nLimitations\n[18]\nOverview of current applications of\nUAVs\
    \ in remote sensing (up to 2015)\nComprehensive review\nLimited to remote sensing\
    \ domain\n[19]\nDiscussion of UAV usage in 3D\nmapping (up to 2014)\nIn-depth\
    \ coverage of\nUAV applications\nLimited to 3D mapping applications\n[20]\nCovers\
    \ UAV-based platforms for\nglaciology investigations (up to 2016)\nDetailed discussion\
    \ of UAV systems\nin glaciology\nCovers only one domain\napplication (glaciology)\n\
    [21]\nReview of UAV deployments in\nforestry (up to 2017)\nIn-depth analysis of\
    \ UAV systems\nin forestry\nRestricted to European systems\n[22]\nReview of UAV\
    \ applications in\nremote sensing (up to 2019)\nDiscusses multi-sensor fusion\n\
    Imbalanced coverage of UAV\nsub-systems\n[23]\nEdge computing usage in UAV\nvisual\
    \ communication\nExtensive simulation of\nproposed framework\nLack of detailed\
    \ comparison with\nexisting frameworks\n[24]\nPath planning algorithm using\n\
    RL paradigms\nOptimal planning and\nrouting decisions\nDoes not analyze the stability\
    \ of the\nRL-based policies\n[26]\nAutonomous trajectory planning for\nUAV missions\n\
    Use of 5G wireless infrastructure\nLack of comparison with existing\nSOTA solutions\n\
    [27]\nMulti-agent Q-learning algorithm for\nenergy optimization\nHigher energy\
    \ consumption\nefﬁciency in UAV systems\nDoes not discuss the tradeoffs\nrequired\
    \ to achieve energy efﬁciency\n[28]\nA new solution for MTU association\nand UAV\
    \ trajectory.\nEfﬁcient RL-based solution using\nDDQN algorithm\nMissing analysis\
    \ of the\nDDQN limitations\n[29]\nJoint optimization of UAV cruise\ncontrol and\
    \ task ofﬂoading allocation\nEfﬁcient advantage actor–critic\n(A2C) solution\n\
    No comparison with SOTA policy\ngradient algorithms\n[30]\nPath planning using\
    \ Monte Carlo\ntree search (MCTS) algorithm\nConstraint-based maximization of\n\
    average throughput\nBenchmarking with relatively basic\nRL-based solutions\n[31]\n\
    Battery and computation resource\noptimization using fog\ncomputing solutions\n\
    Improved UAV usage and reduced\naverage delay\nMissing comparison with\nSOTA solutions\n\
    [32]\nUAV energy efﬁciency using\nmulti-stage stochastic optimization\nOptimal\
    \ resource allocation during\nUAV movement\nHigher computational complexity\n\
    [33]\nConstraint-based joint optimization\nof bandwidth allocation, task\nofﬂoading\
    \ time allocation, and\nUAV trajectory\nJoint optimization using block\ncoordinate\
    \ descent (BCD) algorithm\nLack of in-depth comparison with\nSOTA solutions\n\
    Furthermore, onboard AI edge computing allows for a more efﬁcient use of resources.\n\
    With the computing power on board, data can be processed locally without the need\
    \ for\nconstant data transmission to remote servers. This saves time and energy,\
    \ and allows for a\nmore efﬁcient use of the UAV’s limited resources, such as\
    \ its battery life.\nBased on the previous review of the existing literature,\
    \ there is a growing trend in\nadopting EMC-based UAV systems, given their ﬂexibility,\
    \ resilience, and swift deploy-\nment. However, new challenges emerge with the\
    \ deployment of such systems that can be\nhandled only by advanced AI-based solutions,\
    \ including reinforcement and deep learn-\nRemote Sens. 2023, 15, 1873\n7 of 26\n\
    ing frameworks. In fact, the solutions reviewed in the previous section are founded\
    \ on\nwell-established algorithms that have shown promising results in other engineering\
    \ and\nscience ﬁelds, including the optimal policy for emergency situations, data\
    \ fusion, and\ninformation retrieval [34–36].\nUAVs are becoming increasingly\
    \ prevalent across multiple industries due to their\nﬂexibility and resilience.\
    \ MEC-enabled UAVs are capable of providing computing and\ncommunication services\
    \ at the network edges, even for ground-based units in areas with\nlimited network\
    \ coverage. This is particularly important in the ﬁeld of remote sensing,\nwhere\
    \ data collected from sensors on board the UAV need to be processed and analyzed\n\
    in real time to support timely decision making. The ability of MEC-equipped UAVs\
    \ to\nhandle computing tasks and communication services at the network edges can\
    \ signiﬁcantly\nimprove the speed and accuracy of remote sensing data collection\
    \ processes.\nAdopting edge computing for the onboard processing on UAVs is a\
    \ challenging\nproblem, yet beneﬁcial from several perspectives. Embedding computation-intensive\n\
    applications on the UAV edge device requires sufﬁcient energy, storage, and computation\n\
    resources to manage the demanding requirements of AI tasks. However, with the\
    \ evolution\nof edge devices’ capabilities, most of these challenges are overcome\
    \ to a large extent, which\nmakes edge computing in UAVs possible.\n2. Materials\
    \ and Methods\n2.1. The AERO System\n2.1.1. Why AI-Enabled Edge Computing for\
    \ UAVs?\nAI-enabled edge computing for UAVs can provide several beneﬁts, including\
    \ a low\nlatency, increased efﬁciency, improved reliability, and enhanced privacy,\
    \ as described below.\n1.\nLow Latency: with advances in graphics processing units\
    \ (GPUs) for edge devices\n(e.g., NVIDIA’s Jetson boards), edge computing enabled\
    \ the real-time processing of\nAI tasks, such as object detection, recognition,\
    \ and tracking. This was not possible a\ncouple of years ago. Consequently, edge\
    \ computing promotes the real-time processing\nof data on board by allowing the\
    \ drone to make quick local decisions about detected\nobjects (e.g., the detection\
    \ of a person to rescue) before sending the information to the\ncloud, thus saving\
    \ useless communication with the server.\n2.\nIncreased efﬁciency: this approach\
    \ also improves efﬁciency by decreasing commu-\nnication overhead, saving bandwidth\
    \ usage, and reducing the latency and load of\nthe cloud servers. In fact, in\
    \ the case of the cloud computing approach, the drone\nhas to stream images at\
    \ a high frequency and ofﬂoad AI computation to the cloud.\nThis is greedy in\
    \ terms of the bandwidth and communication overhead, induces more\ncommunication\
    \ latencies, and lacks scalability and computation cost, as the cloud\ncannot\
    \ tolerate massive video trafﬁc with real-time data processing. Edge computing\n\
    helps to reduce the amount of data to be transmitted over a network and sent to\n\
    the server.\n3.\nImproved Reliability: computation on edge also improves the reliability\
    \ of AI-based\nUAV applications. First, the drone data collection process will\
    \ be less affected by the\npossible loss of communication due to the increased\
    \ autonomy of the drone by locally\nprocessing collected data. In case of total\
    \ communication loss, the data of detected\nobjects are still saved locally and\
    \ transferred to the cloud when the communication\nis back or ofﬂine in the worst\
    \ scenario. In addition, edge computing makes the\nprocessing of AI tasks distributed\
    \ among the UAVs and not centralized in the cloud,\nwhich can be vulnerable to\
    \ outages or other disruptions. There are two resulting\nbeneﬁts: (1) it avoids\
    \ the single point of failure, and (2) it increases the system’s\nscalability\
    \ as computing is fully distributed.\n4.\nBetter privacy: the local processing\
    \ of collected images and detected objects helps\nto enhance privacy preserving\
    \ by reducing the amount of data that are transmitted\nand stored in centralized\
    \ remote servers. Adopting strong encryption on individual\ndetected object frames\
    \ is more efﬁcient than encrypting the whole video stream. In\nRemote Sens. 2023,\
    \ 15, 1873\n8 of 26\naddition, collected object images transmitted to the cloud\
    \ will remain private and\nsecure against unauthorized access, as they no longer\
    \ require being processed as plain\ndata.\n2.1.2. AERO System Architecture\nIn\
    \ this section, we present the system architecture of AERO, shown in Figure 1.\n\
    The objective of the AERO system is to provide an ecosystem for using an edge-device\n\
    on UAVs to execute complex deep learning algorithms to help automate computer\
    \ vision\napplications, including object detection and tracking, on board the\
    \ UAVs.\nUSER LAYER\nCLOUD LAYER\nDRONE LAYER\nREQUESTED OBJECT\L\nDETECTED\n\
    2: {REQUEST: FIND CARS}\n4:{RESPONSE:{ \n           Latitude: 25.4214 \nLongitude:\
    \ 38.1424 \nImage:          \n}\n1: {REQUEST: FIND CARS}\n5:{RESPONSE:{ \n   \
    \    Latitude: 25.42 \n       Longitude: 38.1424  \n       Image:          \n\
    }\n3: {CAPTURE + PROCESSING}\nIMAGE CAPTURE\nOBJECT \nDETECTION+ \nTRACKING\n\
    {OBJECT: CAR, LOCATION: }\nDATA STORAGE, MANIPULATION\nVISUALIZATION  \n+ \nMONITORING\n\
    {OBJECT: CAR, LOCATION: }\nCamera\nEdge Device\nNetwork\nCloud\nNetwork\nUser\n\
    UAV SWARM LAYER\nFigure 1. AERO system architecture.\nThe AERO system is composed\
    \ of four layers:\n•\nThe Drone Layer: this represents the one UAV subsystem that\
    \ is equipped with\nonboard processing and storage capabilities to perform AI\
    \ tasks such as image and\nvideo analysis in real time. Edge computing is used\
    \ to locally process collected raw\ndata rather than sending them to a remote\
    \ server as a video stream. In the UAV AERO,\nthe edge device is a GPU-based embedded\
    \ system (e.g., NVIDIA Jetson Xavier board)\ndirectly attached to the drone’s\
    \ camera through a proper channel (USB port, Ethernet\n(RTSP), or serial). The\
    \ drone uses its network interfaces (e.g., 4G/5G cellular networks\nor WiFi) to\
    \ communicate with and transmit detected objects’ images to the cloud.\n•\nThe\
    \ Swarm Layer: this layer consists of a cluster of UAVs equipped with camera\n\
    sensors and AI-edge devices that coordinate together to perform a cooperative\
    \ mission;\nfor instance, distribute a search for lost people in a large area.\
    \ In Figure 1, the UAVs\nswarm communicates with the cloud, which orchestrates\
    \ their mission, rather than\nadopting ad hoc communication among the drones.\
    \ The reasons are as follows:\n–\nIncreased Reliability: the communication of\
    \ UAVs with the cloud through cellular\nnetworks provides a more robust and stable\
    \ connectivity compared to ad hoc\nswarms, which may be subject to interference\
    \ and non-guaranteed message\nexchange, particularly in large-scale deployment.\
    \ In critical applications such as\nsearch and rescue, it is essential to maintain\
    \ reliable communication to ensure\nbetter coordination between drones through\
    \ the cloud server.\nRemote Sens. 2023, 15, 1873\n9 of 26\n–\nInterference: in\
    \ ad hoc swarm communication, the drones have to contend for\nchannel access (e.g.,\
    \ CSMA/CA). This will lead to interference and collision,\nwhich requires message\
    \ retransmissions. This results in poor communication\nefﬁciency and increased\
    \ delays. Other approaches involve the use of time syn-\nchronization (e.g., time\
    \ division multiple access (TDMA))), but these techniques\nare challenging as\
    \ they need to maintain synchronization among the UAVs. Clock\ndrift, latency,\
    \ interference, and the dynamic nature of the UAVs can all impact\nthe accuracy\
    \ of the transmissions, leading to disruptions in the synchrony of the\nTDMA system.\n\
    –\nGlobal Knowledge: with all swarm UAVs communicating with the cloud, the\nlatter\
    \ maintains up-to-date information about all UAVs, including their positions,\n\
    their states, and the list of detected objects. The cloud can make informed deci-\n\
    sions in real time and an adjustment of the mission plan or resource allocations.\n\
    For example, if a UAV experiences low battery levels, the cloud will be better\n\
    positioned to reassign its tasks to other drones based on optimized criteria.\
    \ The\ncloud can also optimize the task allocation among all drones and give its\
    \ global\nknowledge to ensure that mission execution is completed effectively.\n\
    Overall, these planes work together to support the operation and management of\
    \ a\nﬂeet of drones. The data plane handles the collection and processing of data,\
    \ the user\nplane enables human users to interact with the system, and the drone\
    \ plane manages\nthe operation of the drones themselves.\n•\nThe Cloud Layer:\
    \ as the UAV edge device performs AI computation-intensive tasks,\nthe cloud system\
    \ does not require having sextensive/advanced computing resources\n(GPU-based\
    \ cloud systems are not required), which reduces the deployment cost\nconsiderably,\
    \ as GPU-based cloud systems tend to be more expensive than CPU-\nbased cloud\
    \ systems. The cloud is responsible for data storage, manipulation, and\nvisualization.\
    \ The cloud is organized into three planes.\n–\nUAV Plane: the UAV plane is primarily\
    \ responsible for managing the operation\nof a ﬂeet of drones, including overseeing\
    \ and coordinating the drones’ activities,\nmanaging the data collected by the\
    \ drones, and performing mission planning to\nensure compliance and safety. The\
    \ ﬂeet management system (FMS) plays a critical\nrole in controlling and monitoring\
    \ drones, scheduling their tasks and missions,\nand ensuring their compliance\
    \ with airspace regulations. These beneﬁts include\nimproved efﬁciency, data management,\
    \ and safety.\n–\nData Plane: the data plane is responsible for handling the large\
    \ amounts of data\ngenerated by the drones’ sensors and onboard equipment. During\
    \ operation, the\ndrones collect a large amount of data and send them to the cloud\
    \ for storage and\nprocessing using advanced data analytics frameworks, and visualize\
    \ dashboards\nto end-users for quick analysis and decision making based on the\
    \ data collected by\nthe drones. The data plane also ensures the persistence and\
    \ availability of the data\nwhen needed by the end users through replication,\
    \ caching, and load balancing.\n–\nUser Plane: the user plane in the AERO system\
    \ is responsible for interacting with\nusers, including mission planning, monitoring,\
    \ and control. It allows users to ac-\ncess the system through various interfaces\
    \ and applications, such as a web-based\ndashboard, mobile app, or API. Through\
    \ the user plane, users can create and\nmanage drone missions, view real-time\
    \ drone data, and receive alerts and notiﬁ-\ncations. Users can monitor the status\
    \ and performance of the operating drones in\nreal time, providing important information\
    \ such as ﬂight paths, battery levels,\nand sensor data. This feature is essential\
    \ in situations such as emergency response\nscenarios and surveillance operations.\
    \ The user plane is a critical component of\nthe AERO system, enabling efﬁcient\
    \ and effective drone operations by providing\na user-friendly interface for mission\
    \ management and real-time monitoring.\n•\nThe End-User Layer: the end-user layer\
    \ in the AERO system enables end-users to\naccess the system through the Internet\
    \ using web service APIs. The end-users use\nRemote Sens. 2023, 15, 1873\n10 of\
    \ 26\ninteractive dashboards to monitor the status of their drones in real time,\
    \ send com-\nmands, and receive real-time video streams that have been processed\
    \ by deep learning\napplications located either at the edge or on the cloud. The\
    \ end-user layer interacts\nwith the cloud layer through its user plane, which\
    \ provides access to authorized cloud\nresources and allows them to interact,\
    \ monitor, and control drones for operation. The\nend-users can be of different\
    \ types depending on their role.\n–\nAuthority: responsible for authorizing drone\
    \ operations, managing the drone\nﬂeet, and ensuring compliance with regulations.\n\
    –\nOperator: responsible for managing and operating drone ﬂeets, executing drone\n\
    missions, and ensuring safety.\n–\nUser: requests drone operations for various\
    \ purposes, such as aerial photography,\nsurveying, or inspection.\n2.1.3. AI-Enabled\
    \ UAV\nThis section describes the UAV platform that we used to test the AERO system\
    \ in\npractice. Figure 2 depicts our custom-built battery-powered hexacopter platform\
    \ and\nhighlights its main components. The hexacopter speciﬁcations are detailed\
    \ in Table 2.\nFigure 2. Top view of the custom hexacopter.\nTable 2. Hexacopter\
    \ speciﬁcations.\nNumber of motors\n6\nMotor type\nT-Motor MN3508 KV380\nPropeller\
    \ size\n15′′\nWheelbase\n850 mm\nBattery\n6200 mAh\nMaximum takeoff weight\n7\
    \ kg\nMaximum ﬂight time\n15 min\nCamera\nZR10 (30× zoom, 2K resolution)\nEdge\
    \ device\nNVIDIA Xavier NX\nLimited communication range\n15 Km (2.4 Ghz)\nExtended\
    \ communication range\nusing 4/5G networks\nThe selected hexacopter platform was\
    \ equipped with custom onboard electronics to\nenable edge computing as well as\
    \ continuous cloud connectivity. The hardware architecture\nof the custom onboard\
    \ electronics and communication systems are shown in Figure 3, and\nare described\
    \ as follows.\n•\nGimbal–camera System: this is a camera–gimbal system which consists\
    \ of the main\nvision sensor that is stabilized by a 3-axis gimbal. This system\
    \ is called a SIYI ZR10\nRemote Sens. 2023, 15, 1873\n11 of 26\ngimbal–camera\
    \ system and has a 30× hybrid zoom (10× optical and 3× digital) and\na 2K camera.\
    \ The gimbal–camera system has its own microprocessor, which has\nan RTSP (real\
    \ time streaming protocol) server that sends real-time image streams to\nclients\
    \ (edge and communication devices) using Ethernet connections. In addition,\n\
    the camera orientation is stabilized and controlled by a 3-axis gimbal to control\
    \ the\nvisual region of interest during ﬂight.\n•\nNVIDIA Jetson Xavier NX: this\
    \ is the main computation board (edge device) and has\nadequate GPU power to perform\
    \ real-time object detection and advanced autonomous\nsurveillance mission planning.\
    \ It is connected to the camera–gimbal system, via\nan Ethernet switch, to receive\
    \ the real-time image stream and send camera–gimbal\ncommands to control the camera\
    \ orientation and zoom level. The Xavier NX runs our\ncustom software, which performs\
    \ real-time object detection and localization, which\nis described in Section\
    \ 2.2. It also has a connected 4G module to enable extended\ncommunication with\
    \ the cloud server to send information about the detected objects\nand receive\
    \ surveillance mission requests.\n•\n4/5G communication: a 4/5G communication\
    \ module is connected to the Xavier NX\nmodule to enable communication with the\
    \ cloud server for an extended range. The\ncommunicated information includes the\
    \ image frames with metadata (e.g., detected\nobjects and their coordinates) sent\
    \ from the edge device to the cloud server, and\nmission requests from the cloud\
    \ server to the edge device.\n•\nEthernet switch: this hardware module is used\
    \ to allowfor transmitting the camera\nimage stream to the onboard computer (Jetson\
    \ Xavier NX) for image processing, as\nwell as the air unit transceiver, which\
    \ communicates with a ground remote controller\nfor visualization.\n•\nPixhawk\
    \ Orange Cube ﬂight controller: this is the autopilot hardware, which runs\nthe\
    \ well-known open-source PX4 autopilot ﬁrmware [37]. The autopilot stabilizes\
    \ the\ndrone’s position and executes planned missions that are sent by the onboard\
    \ computer.\n•\nAir unit transceiver: this module exchanges image streams and\
    \ UAV telemetry with a\nground remote controller using a 2.4 GHz link.\n•\nRemote\
    \ controller: the ground remote controller is used by the UAV backup pilot to\n\
    control the drone maneuvers, if needed, and have real-time visual feedback of\
    \ the\nonboard camera stream.\nFigure 3. UAV onboard electronics.\nRemote Sens.\
    \ 2023, 15, 1873\n12 of 26\n2.2. The AERO AI Module\nIn this section, we present\
    \ the AERO brain system that leverages YOLOv7 [38] for\nobject detection, DeepSort\
    \ [39] for object tracking, and TensorRT (TRT) [40] acceleration to\nensure the\
    \ real-time execution of the model on edge devices. The novelty of our approach\n\
    is the design of a multi-stage deep learning model that allows for making object\
    \ inferences\nover several consecutive frames to optimize the detection performance\
    \ in two main aspects:\n•\nAccuracy: typical object detection and tracking models\
    \ perform inference on one static\nimage from the video frame, which usually leads\
    \ to high misclassiﬁcation ratios. We\ndramatically improved the accuracy by considering\
    \ several consecutive frames and\nusing a voting approach to maximize the object\
    \ recognition accuracy.\n•\nReal Time: a multi-stage model uses several deep learning\
    \ models in sequence. The\ndeployment of a multi-stage model makes real-time inference\
    \ more challenging, partic-\nularly on embedded edge devices, considering their\
    \ lower capabilities. We overcame\nthis issue by using TensorRT acceleration on\
    \ NVIDIA’s Jetson AXG to maintain a high\nframe rate for the AERO multi-stage\
    \ inference model.\n2.2.1. AERO Model Architecture\nFigure 4 shows the main steps\
    \ of the processing performed by the AERO AI module\non edge. The AERO model is\
    \ composed of three modules, namely the Detection Module,\nthe Model Acceleration\
    \ Module, and the Tracking Module, described as follows.\nDetection Module\nThe\
    \ detection module is based on YOLOv7, which is the latest version of the widely\n\
    used YOLO family of single-stage object detectors. It established the state of\
    \ the art both\nin terms of accuracy and speed, outperforming competitor models\
    \ by a large margin. For\ncomparison, we also tested YOLOv4 [41], which is still\
    \ one of the most popular object\ndetection models.\nThe DeepSORT tracker is an\
    \ extension of the simple online and real-time tracking\n(SORT) algorithm [42],\
    \ which is an efﬁcient algorithm used for real-time object tracking.\nThe key\
    \ innovation of DeepSORT is the incorporation of a pre-trained deep association\n\
    metric that utilizes object appearance information to improve the tracking performance.\n\
    The deep association metric in DeepSORT uses a pre-trained deep neural network\
    \ to\nencode the appearance information of objects. By comparing the features\
    \ extracted from\nthe neural network, DeepSORT is able to estimate the likelihood\
    \ of two objects being the\nsame. This allows DeepSORT to handle challenging scenarios\
    \ such as occlusion, appearance\nchanges, and the temporary disappearance of objects.\
    \ Overall, DeepSORT provides a robust\nand accurate solution for tracking multiple\
    \ objects in real time. Its ability to incorporate\nappearance information allows\
    \ it to handle various challenging scenarios, making it an\nideal solution for\
    \ applications such as surveillance, robotics, and autonomous vehicles.\nFor these\
    \ reasons, and for its popularity in the literature, we opted for this particular\n\
    tracker, although any other multi-object tracker could be used in our system.\
    \ To integrate\nDeepSORT with the YOLO object detector and the other components\
    \ of our system, we\nmodiﬁed the implementation of the track class in a similar\
    \ way to the one described in [43].\nThe object detection and tracking system\
    \ processes each new frame by ﬁrst applying\nYOLOv7 on the entire frame to obtain\
    \ bounding boxes and conﬁdence scores for all detected\nobjects. These bounding\
    \ boxes are then input to DeepSort, the multi-object tracker, which\nproduces\
    \ pairs of matched tracks and detections as well as lists of unmatched tracks\
    \ and\ndetections. For each track, the system checks whether it should be discarded,\
    \ further\nprocessed, or sent to the server.\nRemote Sens. 2023, 15, 1873\n13\
    \ of 26\nYOLOv7\nObject\nDeepSORT\nTime since\n update\nTrack age\nTrack\nconfirmed?\n\
    Already\nsent to\nserver?\nSend data to\nserver\nTime since\n update\nTrack age\n\
    Already\nsent to\nserver?\nSend data to\nserver\nVisualization\nNew Frame\nNext\
    \ \ntrack\nstep 0\nstep 1\nstep 6.1\n- Boxes\n- Confidence scores\nstep 2\nstep\
    \ 3\nstep 4\nstep 5\nstep 6\nstep 6.2\nstep 7.1\nstep 7.2\nstep 8.2\nstep 9.2\n\
    step 10.2\nstep 11.2\nFigure 4. The AERO model architecture of the AI module.\n\
    First, the system checks if the track has not been matched with a detected bounding\n\
    box for more than a predeﬁned number of consecutive frames (default value of 10).\
    \ If\nso, the system assumes that the object is no longer in the camera’s ﬁeld\
    \ of view. Next,\nthe system checks if the track’s age (number of frames in which\
    \ the same object has been\ndetected) is within a predeﬁned interval (default\
    \ value of [2, 40]). A low value indicates\nthat the track is unreliable, whereas\
    \ a high value means that the object information has\nalready been sent to the\
    \ server. The default values of the minimum number of consecutive\nframes and\
    \ the track’s age interval were ﬁxed empirically after a series of preliminary\
    \ tests.\nIn all cases, the system checks if the current track has been conﬁrmed\
    \ by being observed\nin the required minimum number of consecutive frames (default\
    \ value of 3) and has not\nbeen deleted due to missed detections. If the track\
    \ is conﬁrmed or has been matched with\ndetected bounding boxes in the current\
    \ or previous frames, the system checks its tracking\nage. If the age is equal\
    \ to or greater than the maximum allowed age, the system sends\nits information\
    \ to the server if it has not yet been sent. Finally, the system can optionally\n\
    visualize the object’s bounding box and information using the current attributes\
    \ of the\ntrack instance.\nRemote Sens. 2023, 15, 1873\n14 of 26\nIf the track\
    \ is not conﬁrmed or has not been matched with bounding boxes for at least\ntwo\
    \ consecutive frames, the system skips it and moves on to the next track. By following\n\
    this process, the object detection and tracking system can accurately detect and\
    \ track objects\nin real time while minimizing false detections and conserving\
    \ computational resources.\nModel Acceleration Module\nWhile deep learning models\
    \ can provide highly accurate results, they require signiﬁ-\ncant computational\
    \ and storage resources to train and run, even for YOLOv7, which is the\nfastest\
    \ object detector to date. This makes deploying deep learning models on edge devices\n\
    such as Jetson boards a challenging task as these devices often have limited resources\
    \ in\nterms of memory and processing power.\nTo address this challenge, we leveraged\
    \ the use of the TensorRT acceleration frame-\nwork. TensorRT is a high-performance\
    \ inference engine developed by NVIDIA that allows\ndevelopers to optimize deep\
    \ learning models for deployment on a range of NVIDIA plat-\nforms, including\
    \ Jetson edge devices. It can optimize models by reducing the precision of\nmodel\
    \ parameters and minimizing the memory required to store them, allowing the model\n\
    to run more efﬁciently on edge devices with limited resources. TensorRT can also\
    \ optimize\nmodels by using dynamic tensor memory allocation, which allocates\
    \ memory dynamically\nduring inference, reducing the overall memory usage.\nThe\
    \ TensorRT optimization framework also optimizes models by fusing layers, which\n\
    combines multiple layers in a neural network into a single layer to speed up model\
    \ inference.\nThis is particularly important for applications that require real-time\
    \ processing on edge\ndevices, where latency is critical, such as real-time surveillance\
    \ applications. In a previous\nstudy [44], we have shown that TensorRT optimization\
    \ provides the fastest execution on a\nwide variety of cloud and edge devices.\
    \ This demonstrates the effectiveness of TensorRT in\noptimizing deep learning\
    \ models for edge devices, achieving faster inference times and a\nlower latency.\n\
    Target Localization Module\nIn [2], we proposed a methodology for object detection\
    \ and location estimation based\non established photogrammetry concepts and metadata\
    \ extracted from drone images,\nincluding EXIF and XMP data. This approach allows\
    \ for accurately estimating the GPS\nlocation of detected objects within each\
    \ frame. The use of metadata, such as the drone’s\naltitude and GPS location,\
    \ image size, and calibrated focal length, provides a demonstrably\nsound basis\
    \ for determining the location of objects in the images.\nTo account for potential\
    \ errors or uncertainty in the distance estimation, the algorithm\nalso incorporates\
    \ a correction factor based on the ratio between the drone’s altitude and\nthe\
    \ estimated average height of the objects using the formula:\n\n\n\nDc\nx =\n\
    \x10\n1 − h\nH\n\x11\nDx\nDc\ny =\n\x10\n1 − h\nH\n\x11\nDy\n(1)\nwhere:\n•\n\
    Dx and Dy are the coordinates of the object’s bounding box center before correction.\n\
    •\nDc\nx and Dc\ny are the object’s coordinates after correction.\n•\nh is the\
    \ estimated average object height.\n•\nH is the drone altitude.\nAdditionally,\
    \ the algorithm considers the yaw degree of the image to reﬁne the location\n\
    estimation of each object further. This approach allows for an accurate counting\
    \ of objects\neven when there are overlaps between images, further demonstrating\
    \ the scientiﬁc rigor\nof the methodology. This same methodology can be applied\
    \ to the detected objects in\nthe AERO system, although we did not include this\
    \ target localization module in the\nexperimental part of the current study.\n\
    Remote Sens. 2023, 15, 1873\n15 of 26\n3. Results\n3.1. Experimental Setup\nFor\
    \ the experimental evaluation, we tested two different object detection models\n\
    (YOLOv4 and YOLOv7), two different implementations (PyTorch and TensorRT), three\n\
    different video resolutions (1920 × 1080 for 2 videos, 2688 × 1512, and 3840 ×\
    \ 2160, see\nFigures 5 and 6), and three different devices (RTX8000, Jetson Xavier\
    \ AGX, and Jetson\nXavier NX). The videos’ length ranges from 0.5 mn to 5.9 mn.\
    \ Videos 1 and 3 were used\nfor the detection of six classes of objects (car,\
    \ person, bicycle, bus, monocycle, and truck),\nwhereas videos 2 and 4 were used\
    \ for the detection of a single class (car). On top of each\nbounding box, information\
    \ is displayed about the detection class, the tracking ID, the\nnumber of frames\
    \ in which the same object has been observed, and the object color. For\nvideos\
    \ 1 and 3, the number of objects of each class is also displayed on the top left\
    \ corner.\nThe outputs of videos 2 and 4 are available on this link: shorturl.at/nrzOY\
    \ (accessed on 30\nMarch 2023). As for videos 1 and 3, the original footage was\
    \ provided by a third party that\ndid not agree to disclose them.\nTable 3 presents\
    \ the conducted experiments that are analyzed below. Due to software\nenvironment\
    \ limitations and compatibility issues, some frameworks did not work on\nsome\
    \ devices. We were able to run all conﬁgurations on Jetson Xavier NX (Jetson pack\n\
    5, TensortRT 8), whereas YOLOv7 did not work on Jetson Xavier AGX (Jetson pack\
    \ 4.5,\nTensorRT 7) and the TRT versions of YOLOv4 and YOLOv7 did not work on\
    \ the RTX8000\nGPU (CUDA version 10.0).\nFigure 5. Sample frames from the output\
    \ of the four videos used for the evaluation of the AI-enabled\nsystem, with different\
    \ resolutions.\nWe chose the YOLOv7 object detector because it was the state-of-the-art\
    \ object detector\nin terms of accuracy and speed at the time of this study. As\
    \ for YOLOv4, we tested it\nfor comparison, seeing that it is still one of the\
    \ most popular object detectors (YOLOv5\nand YOLOv6 are not as popular in the\
    \ literature). For our case study, we could not use\nRemote Sens. 2023, 15, 1873\n\
    16 of 26\nthe pre-trained models of YOLOv4 and YOLOv7 because they were mainly\
    \ trained on\nground-level images (COCO dataset or OpenImages dataset), and we\
    \ are dealing with\naerial images. Consequently, for training YOLOv7, we used\
    \ the VisDrone dataset [45],\nwhich we ﬁltered to keep only one class of vehicles\
    \ (cars), and, for YOLOv4, we trained a\nmodel on a private dataset containing\
    \ 940 UAV images showing six classes (car, person,\nbicycle, bus, monocycle, and\
    \ truck) with a total of 33,088 instances. These images were\ncaptured in the\
    \ Jeddah region in Saudi Arabia, in daylight and sunny conditions, and\nwere manually\
    \ labeled. Table 4 summarizes the main hyperparameters and results of the\ntraining\
    \ of the YOLOv4 and YOLOv7 object detectors. Since we built our custom dataset\n\
    gradually, we show the results of the training for several sizes of the dataset.\
    \ We observe\nthat there is a stagnation in terms of the mAP (mean average precision)\
    \ when moving from\n545 to 821 training images. YOLOv7 shows notably better results\
    \ in terms of mAP but they\nare not directly comparable to YOLOv4’s results since\
    \ the number of classes is different.\nFigure 6. Close view of a sample of the\
    \ output videos showing various classes, and some false\nnegative and false positive\
    \ detections.\nRemote Sens. 2023, 15, 1873\n17 of 26\nTable 3. Conducted experiments\
    \ on different devices, object detection models, frameworks, and\ninput video\
    \ resolutions.\nDevice\nModel\nImplementation\nResolution\nRTX8000\nJetson\nXavier\
    \ AGX\nJetson\nXavier NX\nYOLOv4\nTRT\n2688 × 1512\n!\n!\n3840 × 2160\n!\n!\n\
    YOLOv7\nTRT\n1920 × 1080\n!\nPyTorch\n1920 × 1080\n!\n!\nTable 4.\nHyperparameters\
    \ and results of the training of the YOLOv4 object detector for\nseveral conﬁgurations.\n\
    YOLO\nVersion\nDataset\nNb Classes\nTraining Images\nValidation Images\nInput\
    \ Size\nBest mAP\nv4\nCustom\n6\n311\n35\n608 × 608\n41.9%\nv4\nCustom\n6\n545\n\
    60\n768 × 768\n57.0%\nv4\nCustom\n6\n821\n91\n768 × 768\n57.0%\nv7\nVisDrone\n\
    1\n4935\n617\n640 × 640\n91.3%\n3.2. Performance Evaluation\nWe ﬁrst analyzed\
    \ the inference speed for each device and detection model using a\nseries of box\
    \ plots (Figures 7–9). Box plots are a useful way to visualize the distribution\
    \ of\ndata and compare data across multiple variables, and can provide insights\
    \ into the central\ntendency, variability, and skewness of the data. The grey\
    \ line inside each box represents\nthe median value of the data. Half of the data\
    \ points fall above this line and half fall below.\nThe box itself represents\
    \ the interquartile range (IQR), which contains the middle 50% of\nthe data. The\
    \ bottom of the box represents the ﬁrst quartile (Q1), or the value at which 25%\n\
    of the data fall below. The top of the box represents the third quartile (Q3),\
    \ or the value at\nwhich 75% of the data fall below. The whiskers extend from\
    \ the box to show the range of\nthe data, excluding any outliers, while the individual\
    \ blue points represent a 1D scatter\nplot of the data.\nFigure 7 depicts the\
    \ box plot of the inference speed in frames per second (FPS) for\neach device,\
    \ detection model, and input video resolution. We observe that the TensorRT\n\
    optimization of the YOLOv4 model provides the fastest inference speed, even on\
    \ higher-\nresolution input videos, whereas, for YOLOv7, the TRT optimization\
    \ provides no gain in\nspeed. In contrast, the average inference speed deteriorates\
    \ from 7.2 FPS (for the PyTorch\nimplementation) to 2.8 FPS (for TRT). This is\
    \ likely due to the fact that the new features\nintroduced in YOLOv7 are not yet\
    \ adequately optimized in the latest versions of TensorRT.\nFigure 8 shows the\
    \ box plot of the inference speed for each device and detection model\nin the\
    \ case where the detected objects are sent to the cloud and in the case where\
    \ the\nconnection to the cloud is disabled. In all cases, the connection to the\
    \ cloud signiﬁcantly\nslows down the inference speed of the whole system. The\
    \ average speeds drops from\n12.3 FPS when no data are sent to the cloud to 5.0\
    \ FPS when sending data to the cloud.\nThis highlights the importance of choosing\
    \ a high-quality network and optimizing the\nedge–cloud communication.\nRemote\
    \ Sens. 2023, 15, 1873\n18 of 26\nFigure 7. Inference speed per device, detection\
    \ model, and video resolution.\nFigure 8. Inference speed per device, detection\
    \ model, and connection to the cloud.\nFigure 9 shows the box plot of the inference\
    \ speed for each device and detection model\nin the case where the DeepSORT tracker\
    \ is included or excluded. On all devices, and for\nall object detection models,\
    \ the use of the tracker markedly decelerates the system. The\naverage inference\
    \ speed declines from 19.6 FPS (without tracker) to 5.0 FPS (with tracker).\n\
    Nevertheless, the use of the tracker is necessary to correctly count the number\
    \ of objects\nand send each object’s information to the server only once. We should,\
    \ however, investigate\nfaster multi-object trackers to enhance the overall system\
    \ speed.\nRemote Sens. 2023, 15, 1873\n19 of 26\nFigure 9. Inference speed per\
    \ device, detection model, and use of tracker.\nTo analyze the inﬂuence of each\
    \ component of the AI system and control for variability\ndue to different devices\
    \ and video resolutions, we generated a set of scatter plots to\nmeasure the inference\
    \ speed on the Jetson Xavier NX device with an input video resolution\nof 1920\
    \ × 1080. Figure 10 illustrates the scatter plot of the inference speed per number\n\
    of detected objects in each frame using both PyTorch and TRT versions of the YOLOv7\n\
    object detection model. As previously noted (about Figure 7), the PyTorch implementation\n\
    achieved higher inference speeds compared to the TRT implementation. Figure 10\
    \ appears\nas a superimposition of three plots, which we will distinguish in subsequent\
    \ ﬁgures.\nFigure 10. Inference speed (in FPS) per number of detected objects,\
    \ on Jetson Xavier NX, with an\ninput video resolution of 1920 × 1080, using the\
    \ PyTorch and TRT version of the YOLOv7 object\ndetection model.\nRemote Sens.\
    \ 2023, 15, 1873\n20 of 26\nFigure 11 presents the scatter plot of the inference\
    \ speed per number of detected\nobjects, on Jetson Xavier NX, with an input video\
    \ resolution of 1920 × 1080, using the TRT\nversion of the YOLOv7 object detection\
    \ model, when including or excluding the tracker.\nAs already noted in Figure\
    \ 9, the use of the tracker signiﬁcantly slows down the system\nperformance. The\
    \ blue dots in Figure 11 represent the measures that included the tracker,\nand\
    \ correspond to the lower part of the plot in Figure 10. The magenta dots, corresponding\n\
    to the inclusion of the tracker in the AI system, still appear as the superimposition\
    \ of two\nplots. They will be distinguished in the next ﬁgure.\nFigure 12 shows\
    \ a similar scatter plot but with no tracker when including or excluding\nthe\
    \ local saving of the output video. It demonstrates that storing the resulting\
    \ output video\non the edge’s disk consumes a signiﬁcant amount of time and markedly\
    \ slows down the\noverall inference speed. The system speed decreases from 12.9\
    \ FPS to 6.8 FPS on average\nover all devices and conﬁgurations. For the conﬁguration\
    \ shown in Figure 12 (Jetson Xavier\nNX, YOLOv7 TRT, no tracker, 1920 × 1080 video\
    \ resolution), the average inference speed\ndrops from 5.8 FPS to 2.7 FPS when\
    \ saving the output video. Consequently, this local\nstorage should not be used\
    \ unless it is absolutely required for the application.\nFigure 11. Inference\
    \ speed (in FPS) per number of detected objects, on Jetson Xavier NX, with an\n\
    input video resolution of 1920 × 1080, using the TRT version of the YOLOv7 object\
    \ detection model,\nwhen including or excluding the tracker.\nRemote Sens. 2023,\
    \ 15, 1873\n21 of 26\nFigure 12. Inference speed (in FPS) per number of detected\
    \ objects, on Jetson Xavier NX, with an\ninput video resolution of 1920 × 1080,\
    \ using the TRT version of the YOLOv7 object detection model,\nwith no tracker,\
    \ when including or excluding the saving of the video output.\n4. Discussion\n\
    From Figures 7–12, we conclude that the inference speed of an AI system for object\n\
    detection can be affected by various factors, including the device used, the detection\
    \ model,\nthe input video resolution, the use of cloud connectivity, and the inclusion\
    \ of a tracker or\nlocal saving of output videos. The TensorRT optimization of\
    \ the YOLOv4 model provides\nthe fastest inference speed even on higher-resolution\
    \ input videos. However, for YOLOv7,\nthe TRT optimization did not provide any\
    \ gain in speed due to an inadequate optimization\nof new features in the TensorRT\
    \ version used. Sending data to the cloud signiﬁcantly slows\ndown the inference\
    \ speed, highlighting the importance of choosing a high-quality network\nand optimizing\
    \ edge–cloud communication. The use of a multi-object tracker is necessary\nto\
    \ correctly count the number of objects and send each object’s information to\
    \ the server\nonly once, but it markedly decelerates the system. Finally, avoiding\
    \ the local saving of\nthe output video can also help to improve the system’s\
    \ inference speed. Therefore, the\nbest conﬁguration for an AI system for object\
    \ detection depends on the speciﬁc application\nrequirements and hardware constraints.\n\
    To assess the accuracy of the object detector, the inﬂuence of the TRT optimization,\n\
    and the multi-object tracker, we selected two test videos (see Figure 5):\n•\n\
    video 1: showing six classes (car, person, bicycle, bus, monocycle, and truck),\
    \ with an\naverage of six objects per frame, an input resolution of 3840 × 2160,\
    \ a length of 50 s,\nand an FPS of 30.\n•\nvideo 4: showing a single class of\
    \ cars (with an average of six cars per frame), with an\ninput resolution of 1920\
    \ × 1080, a length of 4 mn and 25 s, and an FPS of 24.\nWe manually counted the\
    \ following metrics on still images extracted from the video\nevery 20 frames\
    \ (75 frames for video 1 and 319 frames for video 4):\n•\nFP: number of false\
    \ positives (objects incorrectly detected) generated by the object\ndetection\
    \ model.\n•\nFN: number of false negatives (non-detected objects) generated by\
    \ the object detection\nmodel.\nRemote Sens. 2023, 15, 1873\n22 of 26\n•\nPrecision:\
    \ Precision =\nTP\nTP+FP, where TP is the number of true positives (correctly\n\
    detected objects).\n•\nRecall: Recall =\nTP\nTP+FN\n•\nF1 score: F1score = 2×Precision×Recall\n\
    Precision+Recall\n•\nIdentity switches: number of switches between the IDs assigned\
    \ by the tracker. This\nhappens when the tracker conﬂates two objects that are\
    \ too close.\n•\nIdentity changes: number of changes in the IDs assigned by the\
    \ tracker to the same\nobject. This happens when the tracker misinterprets a single\
    \ moving object for\ntwo objects.\nTable 5 summarizes the obtained results for\
    \ these metrics when using the TRT imple-\nmentations of the YOLOv4 object detector\
    \ on video 1. The number of FNs is relatively\nlow compared to the number of FPs\
    \ due to the fact that most vehicles have a relatively\nlarge size (compared to\
    \ video 4). The number of identity switches and changes is also\nreduced compared\
    \ to video 4 because the distance between objects is markedly larger,\nwhich makes\
    \ the tracker’s task easier. Figure 13 shows two close frames from the output\
    \ of\nvideo 1 where several detection and tracking errors appear. We notice one\
    \ false positive\nin frame 240 (‘person’), and two other false positives in frame\
    \ 260 (‘person’ and ‘truck’),\nas well as a misclassiﬁcation (truck classiﬁed\
    \ as ‘person’). Between the two frames, there\nare three identity changes (4→34,\
    \ 5→4, and 30→19). Identity switches often happen when\ntwo objects move close\
    \ to each other, while identity changes may happen when the object’s\nspeed is\
    \ relatively high.\nFigure 13. Sample frames from the output of video 1, showing\
    \ frames number 240 and 260.\nRemote Sens. 2023, 15, 1873\n23 of 26\nOn the other\
    \ hand, Table 6 summarizes the obtained results when using the PyTorch or\nthe\
    \ TRT implementations of the YOLOv7 object detector on video 4. The difference\
    \ between\nthe two implementations is relatively minor, except for identity switches,\
    \ which double\nfrom 5 to 10 when converting the PyTorch model to TRT. This indicates\
    \ a loss in precision in\nthe converted detection model that impacts the tracker\
    \ accuracy. Nevertheless, this ﬁgure\nremains relatively low (1.6% to 3.1% relative\
    \ to the number of frames) considering the\nnumber of cars and the duration of\
    \ the video. By contrast, the number of identity changes is\nmuch higher, both\
    \ for the PyTorch and the TRT implementations. The tradeoff between the\nnumber\
    \ of identity switches and identity changes can be modiﬁed by changing the tracker\n\
    hyperparameters, but we consider the identity switches to be more critical because\
    \ they\nentail the conﬂation of the information of different objects, whereas\
    \ the identity changes\nonly result in duplicate information sent to the server.\
    \ On the other hand, we observe that\nthe number of false negatives is much higher\
    \ than the number of false positives. In fact,\nsmall or occluded objects are\
    \ often missed by the object detector, as can be seen in Figure 5.\nConsequently,\
    \ the precision is high (99.3% for both PyTorch and TRT implementations),\nwhereas\
    \ the recall is much lower (72.5% and 73.1% for PyTorch and TRT, respectively).\
    \ This\ntradeoff can also be modiﬁed by changing the score threshold for the object\
    \ detector.\nTable 5. Number of false positive detections (FPs), false negative\
    \ detections (FNs), precision, recall,\nF1 score, identity switches, and identity\
    \ changes for the TRT implementation of the YOLOv4 object\ndetection model on\
    \ test video 1 (resolution of 3840 × 2160, length of 50 s, FPS of 30) captured\
    \ by a\ndrone, showing 6 classes (car, person, bicycle, bus, monocycle, and truck).\n\
    FP\nFN\nPrecision\nRecall\nF1 Score\nIdentity\nSwitches\nIdentity\nChanges\nYOLOv4\
    \ TRT\n80\n33\n82.7%\n92.1%\n87.1%\n16\n26\nTable 6. Number of false positive\
    \ detections (FPs), false negative detections (FNs), precision, recall,\nF1 score,\
    \ identity switches, and identity changes for the PyTorch and TRT implementation\
    \ of the\nYOLOv7 object detection model on test video 4 (resolution of 1920 ×\
    \ 1080, length of 4 mn and 25 s,\nFPS of 24) captured by a drone, showing a single\
    \ class of ’cars’.\nFP\nFN\nPrecision\nRecall\nF1 Score\nIdentity\nSwitches\n\
    Identity\nChanges\nYOLOv7 PyTorch\n20\n1136\n99.3%\n72.5%\n83.8%\n5\n184\nYOLOv7\
    \ TRT\n22\n1099\n99.3%\n73.1%\n84.2%\n10\n176\n5. Conclusions\nThe commercial\
    \ usage of UAVs is still largely limited by the lack of onboard AI on\nthe edge,\
    \ leading to manual data observation and ofﬂine processing after data collection.\n\
    Alternatively, some approaches rely on the cloud computation ofﬂoading of AI applications,\n\
    which can be unscalable and infeasible due to a limited connectivity and high\
    \ latency of\nremote cloud servers. To address these issues, in this paper, we\
    \ proposed a new approach\nthat uses edge computing in drones to enable extensive\
    \ AI task processing on board UAVs\nfor remote sensing applications. The proposed\
    \ system architecture involves a cloud–edge\nhybrid approach where the edge is\
    \ responsible for processing AI tasks and the cloud is\nresponsible for data storage,\
    \ manipulation, and visualization.\nTo implement this architecture, coined AERO,\
    \ we designed a UAV brain system with\nonboard AI capabilities that uses GPU-enabled\
    \ edge devices. AERO is a novel multi-stage\ndeep learning module that combines\
    \ object detection (YOLOv4 and YOLOv7) and tracking\n(DeepSort) with TensorRT\
    \ accelerators to capture objects of interest with a high accuracy\nand transmit\
    \ data to the cloud in real time without redundancy. AERO processes the\ndetected\
    \ objects over multiple consecutive frames to maximize detection accuracy. The\n\
    Remote Sens. 2023, 15, 1873\n24 of 26\nexperiments show that the proposed approach\
    \ is effective for utilizing UAVs equipped\nwith onboard AI capabilities for remote\
    \ sensing applications.\nWhile the proposed system architecture and AERO module\
    \ were designed to process\nvisual data from UAVs, future work could explore the\
    \ integration of other sensors, such\nas LiDAR or thermal cameras, to enhance\
    \ the accuracy and efﬁciency of remote sensing\napplications. In addition, we\
    \ plan to explore the integration of autonomous navigation\ncapabilities to enable\
    \ UAVs to navigate and collect data independently, without the need\nfor manual\
    \ control or intervention.\nAnother crucial aspect that needs to be considered\
    \ in future works when designing\ndrone systems with onboard AI capabilities is\
    \ security, as highlighted in [46–48] . Drone\ncommunications are susceptible\
    \ to cyber-attacks, making it crucial to protect the data being\ntransmitted between\
    \ the UAV and the cloud. Implementing security measures such as\nencryption and\
    \ authentication protocols can protect the system from unauthorized access\nand\
    \ data breaches. Additionally, implementing physical security measures such as\
    \ tamper-\nprooﬁng the onboard AI hardware can prevent malicious actors from tampering\
    \ with\nthe system. These security measures must be implemented at every stage\
    \ of the system\ndevelopment and deployment to ensure the safety and privacy of\
    \ data collected by UAVs.\nNevertheless, these measures can affect the system’s\
    \ inference speed in a way that still has\nto be investigated.\nAuthor Contributions:\
    \ Conceptualization, A.K. and A.A.; methodology, A.K., A.A. and M.A.; soft-\n\
    ware, Y.A. and A.A.; validation, A.K., A.A. and M.A.; formal analysis, A.K., A.A.\
    \ and M.A.; investi-\ngation, A.K., A.A. and M.A.; resources, A.K.; data curation,\
    \ A.A. and Y.A.; writing—original draft\npreparation, A.K., A.A., M.A. and L.G.;\
    \ writing—review and editing, A.K., A.A., M.A. and L.G.;\nvisualization, A.A.\
    \ and M.A.; supervision, A.K., A.A. and M.A.; project administration, A.K.; funding\n\
    acquisition, A.K. All authors have read and agreed to the published version of\
    \ the manuscript.\nFunding: The APC for this article was funded by Prince Sultan\
    \ University.\nAcknowledgments: We thank Prince Sultan University for facilitating\
    \ the experiments on the univer-\nsity campus and ﬁnancially supporting publication\
    \ expenses.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\
    \ The funders had no role in the design\nof the study; in the collection, analyses,\
    \ or interpretation of data; in the writing of the manuscript, or\nin the decision\
    \ to publish the results\nReferences\n1.\nZanelli, E.; Bödecke, H.\nGlobal Drone\
    \ Market Report 2022–2030;\nTechnical report; Drone Industry Insights: Hamburg,\n\
    Germany, 2022.\n2.\nAmmar, A.; Koubaa, A.; Benjdira, B. Deep-Learning-Based Automated\
    \ Palm Tree Counting and Geolocation in Large Farms from\nAerial Geotagged Images.\
    \ Agronomy 2021, 11, 1458. [CrossRef]\n3.\nGallego, V.; Rossi, M.; Brunelli, D.\
    \ Unmanned aerial gas leakage localization and mapping using microdrones. In Proceedings\
    \ of\nthe 2015 IEEE Sensors Applications Symposium (SAS), Zadar, Croatia, 13–15\
    \ April 2015 ; pp. 1–6. [CrossRef]\n4.\nAbdelkader, M.; Shaqura, M.; Claudel,\
    \ C.G.; Gueaieb, W. A UAV based system for real time ﬂash ﬂood monitoring in desert\n\
    environments using Lagrangian microsensors. In Proceedings of the 2013 International\
    \ Conference on Unmanned Aircraft\nSystems (ICUAS), Atlanta, GA, USA, 28–31 May\
    \ 2013; pp. 25–34. [CrossRef]\n5.\nAbdelkader, M.; Shaqura, M.; Ghommem, M.; Collier,\
    \ N.; Calo, V.; Claudel, C. Optimal multi-agent path planning for fast inverse\n\
    modeling in UAV-based ﬂood sensing applications. In Proceedings of the 2014 International\
    \ Conference on Unmanned Aircraft\nSystems (ICUAS), Orlando, FL, USA, 27–30 May\
    \ 2014; pp. 64–71. [CrossRef]\n6.\nBenjdira, B.; Bazi, Y.; Koubaa, A.; Ouni, K.\
    \ Unsupervised Domain Adaptation Using Generative Adversarial Networks for\nSemantic\
    \ Segmentation of Aerial Images. Remote Sens. 2019, 11, 1369. [CrossRef]\n7.\n\
    Benjdira, B.; Ammar, A.; Koubaa, A.; Ouni, K. Data-Efﬁcient Domain Adaptation\
    \ for Semantic Segmentation of Aerial Imagery\nUsing Generative Adversarial Networks.\
    \ Appl. Sci. 2020, 10, 1092. [CrossRef]\n8.\nGulf News, Saudi Arabia: 131 People\
    \ Went Missing in Desert Last Year. 2021. Available online: https://gulfnews.com/world/\n\
    gulf/saudi/saudi-arabia-131-people-went-missing-in-desert-last-year-1.78403752\
    \ (accessed on 1 March 2023).\n9.\nKobaa, A. System and Method for Service Oriented\
    \ Cloud Based Management of Internet-of-Drones. U.S. Patent US11473913B2,\n15\
    \ October 2022.\n10.\nFortune Buisness Insights, Drone Surveillance Market. 2022.\
    \ Available online: https://www.fortunebusinessinsights.com/\nindustry-reports/drone-surveillance-market-100511\
    \ (accessed on 1 March 2023).\nRemote Sens. 2023, 15, 1873\n25 of 26\n11.\nAmmar,\
    \ A.; Koubaa, A.; Ahmed, M.; Saad, A.; Benjdira, B. Vehicle detection from aerial\
    \ images using deep learning: A\ncomparative study. Electronics 2021, 10, 820.\
    \ [CrossRef]\n12.\nYeom, S.; Cho, I.J. Detection and tracking of moving pedestrians\
    \ with a small unmanned aerial vehicle. Appl. Sci. 2019, 9, 3359.\n[CrossRef]\n\
    13.\nDing, J.; Zhang, J.; Zhan, Z.; Tang, X.; Wang, X. A Precision Efﬁcient Method\
    \ for Collapsed Building Detection in Post-Earthquake\nUAV Images Based on the\
    \ Improved NMS Algorithm and Faster R-CNN. Remote Sens. 2022, 14, 663. [CrossRef]\n\
    14.\nKoubaa, A.; Ammar, A.; Alahdab, M.; Kanhouch, A.; Azar, A.T. DeepBrain: Experimental\
    \ Evaluation of Cloud-Based Computation\nOfﬂoading and Edge Computing in the Internet-of-Drones\
    \ for Deep Learning Applications. Sensors 2020, 20, 5240. [CrossRef]\n[PubMed]\n\
    15.\nHossain, S.; Lee, D.j. Deep learning-based real-time multiple-object detection\
    \ and tracking from aerial imagery via a ﬂying robot\nwith GPU-based embedded\
    \ devices. Sensors 2019, 19, 3371. [CrossRef]\n16.\nQueralta, J.P.; Raitoharju,\
    \ J.; Gia, T.N.; Passalis, N.; Westerlund, T. Autosos: Towards multi-uav systems\
    \ supporting maritime\nsearch and rescue with lightweight ai and edge computing.\
    \ arXiv 2020, arXiv:2005.03409.\n17.\nVasilopoulos, E.; Vosinakis, G.; Krommyda,\
    \ M.; Karagiannidis, L.; Ouzounoglou, E.; Amditis, A. A Comparative Study of\n\
    Autonomous Object Detection Algorithms in the Maritime Environment Using a UAV\
    \ Platform.\nComputation 2022, 10, 42.\n[CrossRef]\n18.\nPajares, G. Overview\
    \ and Current Status of Remote Sensing Applications Based on Unmanned Aerial Vehicles\
    \ (UAVs). Pho-\ntogramm. Eng. Remote Sens. 2015, 81, 281–330. [CrossRef]\n19.\n\
    Nex, F.; Remondino, F. UAV for 3D mapping applications: A review. Appl. Geomat.\
    \ 2014, 6, 1–15. [CrossRef]\n20.\nBhardwaj, A.; Sam, L.; Martín-Torres, F.J.;\
    \ Kumar, R. UAVs as remote sensing platform in glaciology: Present applications\
    \ and\nfuture prospects. Remote Sens. Environ. 2016, 175, 196–204. [CrossRef]\n\
    21.\nTorresan, C.; Berton, A.; Carotenuto, F.; Di Gennaro, S.F.; Gioli, B.; Matese,\
    \ A.; Miglietta, F.; Vagnoli, C.; Zaldei, A.; Wallace, L.\nForestry applications\
    \ of UAVs in Europe: A review. Int. J. Remote Sens. 2017, 38, 2427–2447. [CrossRef]\n\
    22.\nYao, H.; Qin, R.; Chen, X. Unmanned Aerial Vehicle for Remote Sensing Applications—A\
    \ Review. Remote Sens. 2019, 11, 1443–1464.\n[CrossRef]\n23.\nMessous, M.A.; Hellwagner,\
    \ H.; Senouci, S.M.; Emini, D.; Schnieders, D. Edge computing for visual navigation\
    \ and mapping in a\nUAV network. In Proceedings of the ICC 2020–2020 IEEE International\
    \ Conference on Communications (ICC), Dublin, Ireland,\n7–11 June 2020; pp. 1–6.\n\
    24.\nLiu, Q.; Shi, L.; Sun, L.; Li, J.; Ding, M.; Shu, F. Path Planning for UAV-Mounted\
    \ Mobile Edge Computing with Deep Reinforcement\nLearning. IEEE Trans. Veh. Technol.\
    \ 2020, 69, 5723–5728. [CrossRef]\n25.\nMnih, V.; Kavukcuoglu, K.; Silver, D.;\
    \ Graves, A.; Antonoglou, I.; Wierstra, D.; Riedmiller, M. Playing Atari with\
    \ Deep\nReinforcement Learning. arXiv 2013, arXiv:1312.5602.\n26.\nAﬁﬁ, G.; Gadallah,\
    \ Y. Cellular Network-Supported Machine Learning Techniques for Autonomous UAV\
    \ Trajectory Planning.\nIEEE Access 2022, 10, 131996–132011. [CrossRef]\n27.\n\
    Xia, W.; Zhu, Y.; De Simone, L.; Dagiuklas, T.; Wong, K.K.; Zheng, G. Multiagent\
    \ Collaborative Learning for UAV Enabled\nWireless Networks. IEEE J. Sel. Areas\
    \ Commun. 2022, 40, 2630–2642. [CrossRef]\n28.\nLi, B.; Liu, Y.; Tan, L.; Pan,\
    \ H.; Zhang, Y. Digital twin assisted task ofﬂoading for aerial edge computing\
    \ and networks. IEEE\nTrans. Veh. Technol. 2022, 71, 10863–10877. [CrossRef]\n\
    29.\nLi, K.; Ni, W.; Yuan, X.; Noor, A.; Jamalipour, A. Deep Graph-based Reinforcement\
    \ Learning for Joint Cruise Control and Task\nOfﬂoading for Aerial Edge Internet-of-Things\
    \ (EdgeIoT). IEEE Internet Things J. 2022, 9, 21676–21686. [CrossRef]\n30.\nQian,\
    \ Y.; Sheng, K.; Ma, C.; Li, J.; Ding, M.; Hassan, M. Path Planning for the Dynamic\
    \ UAV-Aided Wireless Systems Using Monte\nCarlo Tree Search. IEEE Trans. Veh.\
    \ Technol. 2022, 71, 6716–6721. [CrossRef]\n31.\nWang, Y.; Chen, W.; Luan, T.H.;\
    \ Su, Z.; Xu, Q.; Li, R.; Chen, N. Task Ofﬂoading for Post-Disaster Rescue in\
    \ Unmanned Aerial\nVehicles Networks. IEEE/ACM Trans. Netw. 2022, 30, 1525–1539.\
    \ [CrossRef]\n32.\nYang, Z.; Bi, S.; Zhang, Y.J.A. Online Trajectory and Resource\
    \ Optimization for Stochastic UAV-Enabled MEC Systems. IEEE\nTrans. Wirel. Commun.\
    \ 2022, 21, 5629–5643. [CrossRef]\n33.\nLyu, L.; Zeng, F.; Xiao, Z.; Zhang, C.;\
    \ Jiang, H.; Havyarimana, V. Computation Bits Maximization in UAV-Enabled Mobile-Edge\n\
    Computing System. IEEE Internet Things J. 2022, 9, 10640–10651. [CrossRef]\n34.\n\
    Hamasha, M.; Rumbe, G. Determining optimal policy for emergency department using\
    \ Markov decision process. World J. Eng.\n2017, 14, 467–472. [CrossRef]\n35.\n\
    El-Shafai, W.; El-Hag, N.A.; Sedik, A.; Elbanby, G.; Abd El-Samie, F.E.; Soliman,\
    \ N.F.; AlEisa, H.N.; Abdel Samea, M.E. An Efﬁcient\nMedical Image Deep Fusion\
    \ Model Based on Convolutional Neural Networks. Comput. Mater. Contin. 2023, 74,\
    \ 2905–2925.\n[CrossRef]\n36.\nSabry, E.S.; Elagooz, S.; El-Samie, F.E.A.; El-Shafai,\
    \ W.; El-Bahnasawy, N.A.; El-Banby, G.; Soliman, N.F.; Sengan, S.; Ramadan,\n\
    R.A. Sketch-Based Retrieval Approach Using Artiﬁcial Intelligence Algorithms for\
    \ Deep Vision Feature Extraction. Axioms 2022,\n11, 663–698. [CrossRef]\n37.\n\
    Meier, L.; Honegger, D.; Pollefeys, M. PX4: A node-based multithreaded open source\
    \ robotics framework for deeply embedded\nplatforms. In Proceedings of the 2015\
    \ IEEE International Conference on Robotics and Automation (ICRA), Seattle, WA,\
    \ USA,\n26–30 May 2015; pp. 6235–6240. [CrossRef]\nRemote Sens. 2023, 15, 1873\n\
    26 of 26\n38.\nWang, C.Y.; Bochkovskiy, A.; Liao, H.Y.M. YOLOv7: Trainable bag-of-freebies\
    \ sets new state-of-the-art for real-time object\ndetectors. arXiv 2022, arXiv:2207.02696.\
    \ https://doi.org/10.48550/ARXIV.2207.02696.\n39.\nWojke, N.; Bewley, A.; Paulus,\
    \ D. Simple online and realtime tracking with a deep association metric. In Proceedings\
    \ of the 2017\nIEEE International Conference on Image Processing (ICIP), Beijing,\
    \ China, 17–20 September 2017; pp. 3645–3649.\n40.\nShaﬁ, O.; Rai, C.; Sen, R.;\
    \ Ananthanarayanan, G. Demystifying TensorRT: Characterizing Neural Network Inference\
    \ Engine on\nNvidia Edge Devices. In Proceedings of the 2021 IEEE International\
    \ Symposium on Workload Characterization (IISWC), Storrs,\nCT, USA, 7–9 November\
    \ 2021; pp. 226–237. [CrossRef]\n41.\nBochkovskiy, A.; Wang, C.Y.; Liao, H.Y.M.\
    \ Yolov4: Optimal speed and accuracy of object detection. arXiv 2020, arXiv:2004.10934.\n\
    42.\nBewley, A.; Ge, Z.; Ott, L.; Ramos, F.; Upcroft, B. Simple online and realtime\
    \ tracking.\nIn Proceedings of the 2016 IEEE\nInternational Conference on Image\
    \ Processing (ICIP), Phoenix, AN, USA, 25–28 September 2016; pp. 3464–3468.\n\
    43.\nAmmar, A.; Koubaa, A.; Boulila, W.; Benjdira, B.; Alhabashi, Y. A Multi-Stage\
    \ Deep-Learning-Based Vehicle and License Plate\nRecognition System with Real-Time\
    \ Edge Inference. Sensors 2023, 23, 2120. [CrossRef]\n44.\nKoubaa, A.; Ammar,\
    \ A.; Kanhouch, A.; AlHabashi, Y. Cloud Versus Edge Deployment Strategies of Real-Time\
    \ Face Recognition\nInference. IEEE Trans. Netw. Sci. Eng. 2022, 9, 143–160. [CrossRef]\n\
    45.\nZhu, P.; Wen, L.; Du, D.; Bian, X.; Fan, H.; Hu, Q.; Ling, H. Detection and\
    \ Tracking Meet Drones Challenge. IEEE Trans. Pattern\nAnal. Mach. Intell. 2021,\
    \ 44, 7380–7399. [CrossRef]\n46.\nKrichen, M.; Adoni, W.Y.H.; Mihoub, A.; Alzahrani,\
    \ M.Y.; Nahhal, T. Security Challenges for Drone Communications: Possible\nThreats,\
    \ Attacks and Countermeasures. In Proceedings of the 2022 2nd International Conference\
    \ of Smart Systems and Emerging\nTechnologies (SMARTTECH), Riyadh, Saudi Arabia,\
    \ 22–24 May 2022; pp. 184–189.\n47.\nKo, Y.; Kim, J.; Duguma, D.G.; Astillo, P.V.;\
    \ You, I.; Pau, G. Drone secure communication protocol for future sensitive applications\n\
    in military zone. Sensors 2021, 21, 2057. [CrossRef]\n48.\nKhan, N.A.; Jhanjhi,\
    \ N.Z.; Brohi, S.N.; Nayyar, A. Emerging use of UAV’s: Secure communication protocol\
    \ issues and challenges.\nIn Drones in Smart-Cities; Elsevier: Amsterdam, The\
    \ Netherlands, 2020; pp. 37–55.\nDisclaimer/Publisher’s Note: The statements,\
    \ opinions and data contained in all publications are solely those of the individual\n\
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or\
    \ the editor(s) disclaim responsibility for any injury to\npeople or property\
    \ resulting from any ideas, methods, instructions or products referred to in the\
    \ content.\n"
  inline_citation: '>'
  journal: Remote sensing (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2072-4292/15/7/1873/pdf?version=1680363388
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'AERO: AI-Enabled Remote Sensing Observation with Onboard Edge Computing
    in UAVs'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/med54222.2022.9837289
  analysis: '>'
  authors:
  - Achilleas Santi Seisa
  - Gerasimos Damigos
  - Sumeet Gajanan Satpute
  - Anton Koval
  - George Nikolakopoulos
  citation_count: 5
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2022 30th Mediterranean Confe... Edge Computing
    Architectures for Enabling the Realisation of the Next Generation Robotic Systems
    Publisher: IEEE Cite This PDF Achilleas Santi Seisa; Gerasimos Damigos; Sumeet
    Gajanan Satpute; Anton Koval; George Nikolakopoulos All Authors 4 Cites in Papers
    221 Full Text Views Abstract Document Sections I. Introduction II. Cloud - Fog
    - Edge III. Virtual Machines - Containers - Kubernetes IV. Edge Providers V. Edge
    Robotics Applications Show Full Outline Authors Figures References Citations Keywords
    Metrics Footnotes Abstract: Edge Computing is a promising technology to provide
    new capabilities in technological fields that require instantaneous data processing.
    Researchers in areas such as machine and deep learning use extensively edge and
    cloud computing for their applications, mainly due to the significant computational
    and storage resources that they provide. Currently, Robotics is seeking to take
    advantage of these capabilities as well, and with the development of 5G networks,
    some existing limitations in the field can be overcome. In this context, it is
    important to know how to utilize the emerging edge architectures, what types of
    edge architectures and platforms exist today and which of them can and should
    be used based on each robotic application. In general, Edge platforms can be implemented
    and used differently, especially since there are several providers offering more
    or less the same set of services with some essential differences. Thus, this study
    addresses these discussions for those who work in the development of the next
    generation robotic systems and will help to understand the advantages and disadvantages
    of each edge computing architecture in order to choose wisely the right one for
    each application. Published in: 2022 30th Mediterranean Conference on Control
    and Automation (MED) Date of Conference: 28 June 2022 - 01 July 2022 Date Added
    to IEEE Xplore: 01 August 2022 ISBN Information: ISSN Information: DOI: 10.1109/MED54222.2022.9837289
    Publisher: IEEE Conference Location: Vouliagmeni, Greece SECTION I. Introduction
    Currently, the robotics community is pushing the autonomy levels for the next
    generation of applications with autonomous robots [1]. Among the typical examples,
    one can highlight the multi-session simultaneous localization and mapping (SLAM),
    with multiple robots in exploration or map-based navigation missions that include
    collaborative online point cloud map merging and at the same time provide estimation
    of robots’ localization [2]. These tasks are computationally expensive and are
    demanding an extensive amount of memory and computational resources. As a response
    to these demands, the edge computing has a high potential to solve these tasks
    by offloading them from the on-board computers and support faster executions by
    providing capacity for real-time processing. Additionally, the integration of
    the edge architectures with the also emerging 5G communication technologies with
    gigabit speeds and low latencies will allow to establish a ubiquitous communication
    between robots [3], [4]. A typical example of such a demanding application is
    when solving the multi-robot SLAM problem that is also critical for the robots’
    risk-aware navigation [5], [6] in dynamically changing environments that demands
    low latencies, as well as a minimal lag in the response to high-level control
    commands, efficient visual representation, security and privacy of data [7]. Towards
    these challenges, it is expected that the development and utilization of edge
    computing and 5G technologies can drastically boost the levels of robotic autonomy
    and result in overcoming existing on-board hardware limitations, which will foster
    answering these challenges. Alike on-board computers, edge platforms can handle
    huge amount of data at a very high processing speed, provide strong computation
    capacity and real-time data transmission. In comparison to cloud computing, edge
    computing has the capacity to enable local computing, thus dealing more efficiently
    with big volumes and velocities of generated local data [8]. Moreover, it will
    provide lower latencies due to the significantly smaller distance between the
    edge connected robots and the edge datacenters. Thus, in this article, we analyze
    different types of cloud architectures with the focus on edge-based architectures,
    especially for robotic systems. Edge computing is a promising technology that
    may foster solving some of the existing fundamental challenges in the field of
    robotics that will allow to push the realisation of the next generation of robotic
    systems with higher levels of autonomy and longer operational times. In order
    for the robotic platforms to operate for a longer period of time, they need to
    be lighter and have a lower computational load locally, while being equipped with
    sensors that are capable to generate the necessary data required for low-level
    autonomy and mission execution. Additionally, in the collaborative missions with
    the multi-agent systems it is crucial that in some tasks all the robots are able
    to communicate with each other and exchange data in real-time. At the same time,
    some processes will require information that was collaboratively generated by
    all robots [2]. With the utilization of edge computing technologies, data that
    are generated from on-board robotic sensors can be sent to the edge allowing to
    offload demanding computational processes. After processing these data, control
    commands can be generated, that shall be sent from the edge back to the robots.
    Moreover, there is a need for a suitable communication technology as 5G network,
    to close the entire control loop using an edge architecture. Thus, edge computing
    will provide high computation power, storage resources and minimal time delays,
    since edge servers are close to the source of data, while 5G network solutions
    will reliably provide high data bandwidth with consistent low latencies [9]. Fig.
    1. Data processing and storage layers Show All Even with the development of edge
    computing, some data might need to be sent to the cloud [10] for further processing
    and storage purposes. Moreover, the fog computing [10] paradigm gained high interest,
    so that the final edge ecosystem for robotic applications could be a hybrid edge-(fog)-cloud
    robotic system for distributed data and computational processes. A detailed review
    on edge computing is presented in [11], where researchers focus on edge computing
    general concepts, while the current work addresses the utilization of edge computing
    exclusively for robotic applications. Thus, the main contributions of this article
    is to present, compare and analyze different edge/cloud-based architectures for
    robotic applications, while analyzing the technologies behind these architectures.
    Prior to the presentation and analysis of each of the architectures, we will dive
    into the four layers of computing (CLOUD, FOG, EDGE, ROBOTS) architectures, from
    a robotic systems perspective and with a focus on what each of these layers offers
    or enables to the field. Moreover, we will present a brief review of related computational
    technologies, such as Virtual Machines (VMs), Containers and Kubernetes, why and
    how each one can be used for deploying applications to the edge. Additionally,
    simulation and development tools will be presented and compared for a first time
    ever from a robotics perspective. A comparison of the edge and cloud providers
    and the types of services they offered, regarding the computational resources
    for the robotic applications are also examined. To elucidate these terms, in Section
    V we present several edge-based robotic applications and we state the importance
    of the mentioned approaches. The rest of the article is structured as it follows.
    In Section II edge/cloud-based architectures for computing robotic systems will
    be discussed. In Section III we present the main solutions and software that exist
    today for edge-based applications, while in Section IV we set forth a review about
    available edge and cloud providers. In these Sections, it is essential to investigate
    the advantages and disadvantages of these solutions for each application. In Section
    V, we are presenting various robotic applications running mainly on the edge.
    Finally, we conclude this article in Section VI by summarizing all the parameters
    we have to consider when deciding for a cloud-based solution for robotic applications.
    SECTION II. Cloud - Fog - Edge The constantly increasing need for computational
    power and storage resources has led into the development of various computing
    architectures [12]. Researchers from several fields of technology like deep learning
    [13], video analytics [14], industry 4.0 [15] are constantly trying to utilize
    the available architectures or propose new ones, in order to solve existing challenges
    and to provide new opportunities [16]. All these architectures are based on four
    different computing and storage layers, as depicted in Fig. 1, where the bottom
    layer is formed from the connected devices. Generally, these layers can be considered
    as it follows: DEVICES LAYER - multiple robotic systems Data generation Light
    data processing Low level control Other processes needed locally EDGE LAYER -
    offloads computational load from robotic systems to remote entities Large volume
    real-time data processing On premises data visualization High level control Micro
    data storage FOG LAYER - extended EDGE LAYER with multiple heterogeneous interconnected
    nodes Local networking Control response CLOUD LAYER - provides ample storage and
    computation capabilities, however, alike EDGE and FOG layers, this has long response
    latency Big data processing Data storage Giving a closer look at each architectural
    layer, from the robotics perspective, it will allow us to provide better understanding
    of the opportunities and challenges that can be addressed using one or another
    architecture. At its base, the DEVICES LAYER is represented by individual robots
    that are equipped with application driven sensors like cameras and lidars for
    perception, navigation and inspection tasks. These sensors can produce gigabytes
    of data, which has to be processed on-board in order to enable the autonomous
    capabilities of the robotic platform. However, due to the limited computational
    power, only light data processing, which is required, for example, for a single
    robot SLAM and low level control, can be performed on-board. While in more demanding
    applications, which involve multiple robots, there is a need to extend this layer
    with EDGE or FOG layers. These layers allow for real-time data processing of large
    data batches that are streamed from the network connected robots to the edge server,
    where heavy computations that require low latencies are carried out. One of such
    examples is the multi-session SLAM in which multiple SLAM missions are performed
    collaboratively by multiple robots that explore the same environment. Besides
    that, the FOG LAYER allows to extend the exploration mission to multiple environments,
    thus creating a network of heterogeneous interconnected nodes. The CLOUD LAYER
    excels over the EDGE and FOG layer in terms of storage and computational capabilities,
    but in comparison to EDGE layer that is located close to the DEVICES layer, CLOUD
    layer is located much further away from the DEVICE layer. Additionally to that,
    CLOUD layer is commonly characterized by long response latencies, which can be
    explained to the long distance between the DEVICE and the CLOUD layer, and thus
    the robotic challenges for the next generation robotic systems cannot be fully
    addressed by solely this layer. Thus, one can observe various architectures that
    are based on the collection of these multiple layers. SECTION III. Virtual Machines
    - Containers - Kubernetes With the advent of cloud computing and virtualization,
    many applications apart from robotics are exploring the optimal possible utilization
    of such technologies. Though virtualization options are a known discussion in
    the academia and industry, here we make an effort and touch on the three most
    popular virtualization technologies as well as discuss their characteristics and
    compare them in terms of benefits and drawbacks for cloud robotics applications.
    A. Virtual Machines A virtual machine (VM) is a computer resource that utilizes
    software instead of a physical computer to deploy applications and run programs
    and processes [17]. VMs also provide a complete emulation of low-level hardware
    devices like CPU, Disk, RAM, networking devices, and others. VMs can be configured
    accordingly, to support any application topology and provide a stable platform
    regarding dependency issues (operating system compatibility, specific software
    packages, etc.). Specifying computational resources (in Fig 2, e,g. time deviation
    of a procedure in the edge with different rates) and resource scaling, redeploying
    VM applications on different host computers, isolating sensitive applications,
    as well as running VMs in the Edge cloud are some of the benefits that VMs offer
    in cloud robotics-related applications. Furthermore, VMs provide a more dynamic
    and interactive development experience when compared with other virtualization
    technologies. The latter derives from the fact that VM encompass a full-stack
    system, as well as utilizing an entire operating system and what one may provide,
    e.g. a Graphical User Interface. Fig. 2. A procedure was offloaded to the edge
    as a VM application (also reproduced with containers and k8s). Five different
    rates where selected for that procedure and the time deviation was measured for
    each one of them. The mean time of that process coincides with time corresponding
    rate. Show All B. Containers Containers are software packages that include all
    the software dependencies required to execute the contained software application.
    The main difference between container and VM is that VM emulates an entire machine
    down to the hardware layers, while containers only emulate the software components.
    Such software components might be system libraries, external software packages,
    and other operating system level applications [18]. Because containers are only
    emulating software components, they are more lightweight and easy to iterate.
    Additionally, most container runtime systems provide robust pre-made container
    (image) repositories. A popular example in robotic applications could be the Robot
    Operating System (ROS) image. Another key benefit of container technologies is
    that software packages, contained in the constructed images, can be stacked in
    levels and produce a novel and more complete application. These flexible characteristics
    of containers, i.e., lightweight and easy to iterate, are responsible for the
    birth of another technology, container orchestration. The generic topology architecture
    of containerized applications for robotic systems is shown in Fig 3. As it is
    indicated, Data are sent from the robots to the edge and then commands generated
    from the containers are sent back to robots. Data processing, high level controllers
    and advanced algorithms can be deployed to the application containers for various
    robotic missions. Fig. 3. Architecture of containerized applications for robotic
    platforms Show All C. Kubernetes Kubernetes (k8s) is an open-source platform that
    orchestrates container runtime platforms systems across network-connected hardware
    infrastructure [19]. K8s was initially developed by Google that needed an efficient
    way of managing billions of container applications weekly. In such systems, the
    surface of additional needs became present. Reliability, scalability, robustness,
    security, and others are essential requirements in real-world applications. k8s
    bundles a set of containers into a group (called a pod) and manages their life
    cycle. An example of such a set could be an application server, an SQL database,
    a Model Predictive Control (MPC) running apart from the robot, a set processing
    SLAM, and others. K8s will manage these pods performing multiple essential tasks,
    such as reducing network overhead, increasing resource usage efficiency (load
    balancing between copies of the same application, either to the same machine or
    across the cloud cluster), hardware resources designated for your specific configuration
    (Fig 2), monitoring and much more since k8s is a rapidly progressing state of-the-art
    technology. To conclude this section we want to present a small topology architecture
    example illustrated in Fig 4. Here you can see how multiple agents are all connected
    to the Edge cloud where different applications are orchestrated by K8s. In this
    example, K8s is responsible for scheduling resource-demanding computational jobs
    (on different worker nodes), managing network traffic and can also be utilized
    for redundancy requirements. SECTION IV. Edge Providers Before we start designing
    a cloud-based architecture, we have to be aware of the available providers in
    the related region and the services they provide. In Table I we go through some
    of the main cloud and edge providers and cloud solutions that are provided. When
    we are using the term edge, we are thinking in terms of minimal latency, network
    hops and distance from the source of data. Thus, it is more likely that local
    edge providers, that are not mentioned in the Table below, will be better options.
    Table I can be utilized as a common ground for acknowledging the available providers
    and services they offer, while the cloud computing solutions are available in
    various locations around Europe. Since we are interested in low latency we did
    not take under consideration solutions that might be available only outside Europe.
    The sources for Table I were extracted from [20], [21] and [22]. Fig. 4. Kubernetes
    architecture for robotic platforms Show All These cloud solutions, can work as
    an ecosystem. For example, Amazon Web Services (AWS) [23] can be combined so Amazon
    Elastic Kubernetes Service (EKS) can be integrated to Amazon Elastic Compute Cloud
    (EC2), to deploy and manage containerized applications at scale. The same idea
    applies with Google Cloud [24], where Kubernetes Engine (GKE) monitoring tools
    can be integrated to Google Cloud Compute Engine (GCE). A. Amazon AWS Amazon’s
    AWS provide several options in terms of cloud computing and is the leader of cloud
    computing. Each option has some advantages and disadvantages. We will go through
    the Table’s I data and analyze the options for deploying a robotic application.
    Amazon AWS Robomaker is a good cloud-based option for developing, testing, deploying
    intelligent robotics applications and running simulations. The downside is that
    there are not many servers across the world so in most cases Robomaker can not
    be used as Edge. An additional drawback and reason that Robomaker can not be used
    as Edge is that although the development happens on cloud, the deployed application
    runs locally on the robot. Amazon Lightsail is an affordable and good option for
    deploying applications with low demands. It is easy to deploy instances of several
    OS and has the option to be upgraded to EC2 for higher demands. EC2 is the main
    cloud compute option of AWS. It offers plenty OS options and there are available
    servers all across the world, and provides the choice for Kubernetes orchestration
    for the containerized applications [23], [25]. B. Microsoft Azure Microsoft Azure
    has less compute services compared to AWS and less location servers and is the
    second largest platform for cloud/edge computing solutions. Azure offers smooth
    hybrid-cloud environment which is of great importance as mentioned in Section
    II. AVMs provide security and scalability but few options for low size VMs. In
    contrast, Azure ACI and AKS provide a wide range of solutions, such as GPU, CPU
    options, fast and easy environment and are available in many locations [26], [25].
    TABLE I Comparison overview of the existing cloud solutions for robotic applications
    C. Google Cloud Google Cloud offer less location and service options compared
    to AWS, but has a handful of options for cloud solutions. GCE provide many CPU
    and CPU option, high performance VMs and container support. The GKE offers prebuild
    kubernetes applications and templates and it is quite easy to migrate traditional
    workloads. Additionally provides outstanding open-source options [24], [25]. Latency,
    safety concerns are some of the issues that should be addressed. The continuous
    development and the combination of edge computing and 5G networks can be the answer
    to these challenges. When thinking of edge computing solutions, since time delays
    is one of the most important parameters, local edge providers should be considered.
    Local providers, in most cases, will have their servers closer to the client’s
    source of generated data, thus they will be able to provide lower latency. Additionally,
    requests can be more flexible regarding provided services. Most of the times,
    local providers offer VMs, docker hub and Kubernetes solutions as well as several
    storage and security options. SECTION V. Edge Robotics Applications In this Section,
    we present some edge-based robotic applications, selected from research articles
    and the state-of-art. The following applications, use some of the technologies,
    architectures and services mentioned above. Computational offloading to the edge
    and or the cloud for robotic platforms is a topic that nowadays has become more
    and more relevant. The generated amount of data that robots produce and has to
    be analyzed at each moment in almost real-time, must be respected. Offloading
    this computational effort will bring great advantages in terms of latency and
    computational capacity, which is a very important factor to keep in mind. Researchers
    and engineers have been trying, in the last couple of years, to offload some computational
    demanding procedures to the edge and the results in some cases are notable. In
    [27], a platform is presented for a heterogeneous robotic system focused on search
    missions. A lightweight traversal algorithm deployed in the edge is proposed for
    high available search. A group of robots will perform a cooperative mission to
    search and find artifacts in a predefined area, quickly and intelligently, while
    edge computing is used for offloading the task partitioning algorithm, considering
    real data processing and low latency. Thus, the UAV sends data to the edge when
    performing traversal tasks. In [28], social fog robotics systems are introduced
    for responsive human-robot interaction and several architectures are presented.
    The response rate of robots is validated and the whole system is examined in terms
    of latency. SLAM tasks are offloaded to the edge and the system’s architecture
    is presented in [29], where edge is used for real-time decisions. The architecture
    of this system has the following four layers, each one for a different cause.
    The robot and edge layer is used for data processing and analysis, while the fog
    layer is used for distributed storage and the cloud layer is used for monitoring
    and for general mission control. In [30] the edge is used to reduce the delay
    and energy consumption of deep learning models by analyze the performance of edge
    servers and estimate time delays, to establish a mechanism on intelligent data
    envelopment for intelligent social robots. In [31], deep robot learning distributes
    compute, storage and networking resources between the cloud and the edge for the
    task of object recognition and grasp planning by a mobile robot. In [32], the
    edge is used for offloading a dynamic self-balancing navigation controller, while
    cloud is used for assisted teleoperation and visual recognition of dynamic self-balancing
    robots that can detect and pick up objects, while being teleoperated. Some articles
    are focused on offloading controllers on the edge. In [33], [34] and [35] the
    MPC is proposed to be offloaded to the edge. These articles are focused mainly
    on evaluating latency, long time delays and uncertainty. The control in [34] is
    composed with the combination of a LQR (locally) and MPC (Edge) control, while
    in [33] two MPC are implemented, one on a local Edge and one on a Cloud. The computationally
    heavy MPC is offloaded to the Edge. In [35] a variable horizon strategy for a
    cloud-based MPC is presented and a remote MPC is used to control a ball and bean
    system. In [36] applications, containing remote controller, run in a Mobile Edge
    server in a form of Docker Containers. These application are controlling two robotic
    arms for cooperation tasks in an industrial environment, while in [37] and in
    [38] the utilization of fog layer to enhance the capabilities of industrial robotics
    has been proposed. In [39] a switching multi-tier control is presented. The switcher
    is choosing between a local controller which operates as a safety controller and
    an Edge controller which runs more sophisticated algorithms with optimal performance.
    As mentioned in Section III, in many cases edge computing is based on kubernetes
    components. An edge architecture and an open-source network is presented in [40],
    where the kubernetes container orchestration middleware is highlighted for the
    deployment of virtual networks spanning distributed edge and cloud resources.
    The goal of [41] is to automate the process of making decision in terms of placement
    of the expected workload. In this article, generated data from various sensors
    from smart home, cities, construction and robots are distributed to edge, fog
    and cloud. This process is achieved by using kubernetes orchestration. In [42],
    studied plugins based on Container Network Interface (CNI) to provide low-latency
    edge services, that can be used in robotic applications [43]. Finally, in [44],
    a methodology based on docker and kubernetes for ROS-based robotic application
    is presented. In that case, the architecture was evaluated by experimental results
    obtained by a mobile robot interacting with an industrial agile production chain.
    Mobile edge computing (MEC) has been recognized as a promising technique. Thank
    to the advantages of saving energy for users, providing low latency and achieving
    security, MEC has received increasing attention in both academia and industry.
    In that context, a different but interesting approach is presented in [45]. In
    this article, researcher suggested a MEC system, where aerial robots are equipped
    with servers to provide MEC services to ground users. SECTION VI. Conclusions
    Edge-based robots set the state-of-art in the field of robotics. The significant
    possibilities have attracted the attention of researchers and engineers. Despite
    the attention, there is great room for improvement and future directions. Even
    though edge can play a remarkable role in multi-agent systems, in terms of robot
    communication and collaboration, there are not so many articles towards this direction.
    Furthermore, edge capabilities regarding computational power can be be exploited
    even more in the future, so more heavy and demanding tasks can be offloaded there.
    The rapid development of communication (5G networks) and computing technologies
    (cloud, fog, edge computing) will provide more possibilities and solve current
    challenges, hence will help the robotics field to move towards fully autonomous
    systems. In that concept, we investigated, presented, analyzed and compared the
    different architectures, typologies and their components. Most of these technologies
    and methods are recently developed thus, we wanted to display a general idea of
    all these terms and spread awareness of various solutions. Additionally, we would
    like to inspire researchers to engage with this area and contribute in their own
    way. Authors Figures References Citations Keywords Metrics Footnotes More Like
    This An application for a distributed computer architecture-realtime data processing
    in an autonomous mobile robot [1988] Proceedings. The 8th International Conference
    on Distributed Published: 1988 Human Rescue Based on Autonomous Robot KUKA YouBot
    with Deep Learning Approach 2019 Sixth International Conference on eDemocracy
    & eGovernment (ICEDEG) Published: 2019 Show More IEEE Personal Account CHANGE
    USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile
    Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS
    Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT
    Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use |
    Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy
    A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: 2022 30th Mediterranean Conference on Control and Automation (MED)
  limitations: '>'
  pdf_link: null
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Edge Computing Architectures for Enabling the Realisation of the Next Generation
    Robotic Systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1186/s13677-022-00353-y
  analysis: '>'
  authors:
  - Yehia Ibrahim Alzoubi
  - Asif Qumer Gill
  - Avnish Kumar Mishra
  citation_count: 6
  full_citation: '>'
  full_text: ">\nAlzoubi et al. Journal of Cloud Computing           (2022) 11:80\
    \  \nhttps://doi.org/10.1186/s13677-022-00353-y\nREVIEW\nA systematic review of the purposes\
    \ \nof Blockchain and fog computing integration: \nclassification and open issues\n\
    Yehia Ibrahim Alzoubi1, Asif Gill2 and Alok Mishra3* \nAbstract \nThe fog computing\
    \ concept was proposed to help cloud computing for the data processing of Internet\
    \ of Things \n(IoT) applications. However, fog computing faces several challenges\
    \ such as security, privacy, and storage. One way to \naddress these challenges\
    \ is to integrate blockchain with fog computing. There are several applications\
    \ of blockchain-\nfog computing integration that have been proposed, recently,\
    \ due to their lucrative benefits such as enhancing secu-\nrity and privacy. There\
    \ is a need to systematically review and synthesize the literature on this topic\
    \ of blockchain-fog \ncomputing integration. The purposes of integrating blockchain\
    \ and fog computing were determined using a system-\natic literature review approach\
    \ and tailored search criteria established from the research questions. In this\
    \ research, \n181 relevant papers were found and reviewed. The results showed\
    \ that the authors proposed the combination of \nblockchain and fog computing\
    \ for several purposes such as security, privacy, access control, and trust management.\
    \ \nA lack of standards and laws may make it difficult for blockchain and fog\
    \ computing to be integrated in the future, \nparticularly in light of newly developed\
    \ technologies like quantum computing and artificial intelligence. The findings\
    \ \nof this paper serve as a resource for researchers and practitioners of blockchain-fog\
    \ computing integration for future \nresearch and designs.\nKeywords: Blockchain,\
    \ Cloud computing, Fog computing, Integration, Internet of things (IoT), Security\n\
    © The Author(s) 2022. Open Access This article is licensed under a Creative Commons\
    \ Attribution 4.0 International License, which \npermits use, sharing, adaptation,\
    \ distribution and reproduction in any medium or format, as long as you give appropriate\
    \ credit to the \noriginal author(s) and the source, provide a link to the Creative\
    \ Commons licence, and indicate if changes were made. The images or \nother third\
    \ party material in this article are included in the article’s Creative Commons\
    \ licence, unless indicated otherwise in a credit line \nto the material. If material\
    \ is not included in the article’s Creative Commons licence and your intended\
    \ use is not permitted by statutory \nregulation or exceeds the permitted use,\
    \ you will need to obtain permission directly from the copyright holder. To view\
    \ a copy of this \nlicence, visit http:// creat iveco mmons. org/ licen ses/ by/4.\
    \ 0/.\nIntroduction\nIn 2012, Cisco introduced the concept of Fog Comput-\ning\
    \ (FC) to improve network infrastructure to match the \ndemands of the large amounts\
    \ of data being transmitted \nto the cloud for processing [1]. That is, FC was\
    \ intro-\nduced to help and overcome the problems faced by cloud \ncomputing (the\
    \ use of the Internet to supply on-demand \ncomputer services such as storage,\
    \ apps, and processing \ncapabilities) such as the connectivity between the cloud\
    \ \nand the Internet of Things (IoT) devices, the latency-sen-\nsitive applications,\
    \ location awareness of the IoT appli-\ncations, and complexity of the distribution\
    \ environment \n[2–4]. FC is a cloud that is close to ground infrastructure, \n\
    which is located near IoT devices to provide storage, con-\nnection, and control\
    \ of IoT devices [5]. Therefore, the \nrole of FC is to intermediate communication\
    \ between the \nIoT devices and the cloud; however, it does not replace \nthe\
    \ cloud [6]. Moreover, FC enables and links IoT devices \nwith services and on-demand\
    \ apps [7, 8]. In addition, FC \nnodes assist IoT devices in carrying out computational\
    \ \noperations that require higher power, which shortens the \nresponse time and\
    \ fits the criteria of some applications \nthat are time-sensitive on the IoT\
    \ devices [9].\nBecause the FC is a cloud computing extension, it \ninherits several\
    \ of the cloud’s issues [10]. The most noti-\nfiable issues are security and privacy\
    \ [11], due to the \nresource-constrained capabilities of FC [12, 13]. Hence,\
    \ \nto protect IoT devices, FC should provide effective solu-\ntions and techniques\
    \ [14]. Although cloud computing \nOpen Access\nJournal of Cloud Computing:\n\
    Advances, Systems and Applications\n*Correspondence:  alok.mishra@himolde.no\n\
    3 Informatics and Digitalization Group, Molde University College-Specialized \n\
    University in Logistics, Molde, Norway\nFull list of author information is available\
    \ at the end of the article\nPage 2 of 36\nAlzoubi et al. Journal of Cloud Computing\
    \           (2022) 11:80 \nhas many techniques to mitigate the impact of security\
    \ \nand privacy issues, these solutions may not be applied \neffectively for FC\
    \ due to limited resources and unique \ncharacteristics such as decentralized\
    \ structure, mobility \n(changing the users and the location of the fog node),\
    \ and \nthe different providers of the fog devices [14–16]. There-\nfore, FC requires\
    \ new and innovative solutions to over-\ncome security and privacy issues [11].\
    \ Moreover, FC is \na resource-constrained system, which is reflected in the \n\
    computation storage capabilities. This limitation has cre-\nated another set of\
    \ challenges related to the scalability of \nFC due to the ever-increased number\
    \ of connected IoT \ndevices. A BC’s capacity for processing transactions in \n\
    mass quantity is referred to as scalability [17].\nBlockchain (BC) technology\
    \ has been dedicated to \naddressing the security and privacy of many applica-\n\
    tions [18]. It is also recommended to increase the storage \ncapacity since it\
    \ represents a distributed ledger [19]. BC \nis a decentralized technology architecture\
    \ that originated \nfrom the use of digital encrypted currency (e.g., Bitcoin)\
    \ \n[20]. Bitcoin is a well-known BC platform that contains \nan active cryptocurrency\
    \ that enables distributed net-\nworks to conduct transactions without the use\
    \ of middle-\nmen or third parties [21]. BC technology is characterized \nby the\
    \ capabilities of building reliable networks with no \ndowntime as well as a high\
    \ level of security and privacy \n[22]. BC has gained widespread attention from\
    \ indus-\ntries, governments, and financial institutions [23]. Several \ngovernments\
    \ have included BC in their future informati-\nzation (e.g., China), called for\
    \ the development of BC in \ntheir public sectors (i.e., USA), and started building\
    \ BC \npilot projects in core industries (e.g., South Korea) [24]. \nRecently,\
    \ BC has started evolving as a significant struc-\nture for COVID-19 management\
    \ in China. Chinese \nhospitals use BC technologies in several fields such as\
    \ \nelectronic health records, insurance claims, tracking of \nthe supply chain,\
    \ and identification of forged drugs [24].\nAs a result of this revolution of\
    \ adopting BC, many \npapers have been, recently, published that devote BC as\
    \ \na potentially effective solution to address the issues of \nFC [19]. However,\
    \ the literature in this domain is very \ndiverse [25]. Although some papers have\
    \ surveyed the \nprevious literature; they lack critical evaluation criteria \n\
    and methods for systematically reporting the results (e.g., \n[26]. Moreover,\
    \ the majority of survey papers discussed \none application (e.g., eHealth, IoT,\
    \ vehicles, and so on) \n(e.g., [27–29]). To the best of the authors’ knowledge,\
    \ the \nrecent studies published in the public domain (at least, \nat the time\
    \ that this study was initiated), lack a system-\natic review of the available\
    \ literature about the purposes \nof integrating BC technology and FC. Additionally,\
    \ this \nstudy addresses the purposes cited in all accessible litera-\nture from\
    \ various applications, representing a thorough \ninvestigation. Hence, the main\
    \ aim of this paper is to fill \nthis literature gap and systematically investigate\
    \ these \npurposes. Consequently, this paper focuses on the fol-\nlowing research\
    \ questions:\nRQ1: How blockchain-fog computing integration pur-\nposes develop\
    \ over time?\nRQ2: What are the future challenges of blockchain-fog \ncomputing\
    \ integration?\nThe main contributions of the paper are as follows. This \npaper\
    \ provides the state-of-the-art purposes of BC-FC \nintegration. This paper follows\
    \ a critical evaluation of \neach reviewed paper by following well-defined and\
    \ moti-\nvated criteria. This paper comprehensively reviews the \nwork done so\
    \ far in the field from different perspectives \n(e.g., algorithms, schemes, architecture,\
    \ and so on). The \nliterature on BC with FC integration is very miscellane-\n\
    ous; systematically organizing the relevant literature is a \nsignificant task\
    \ [30]. Seven categories of the BC with FC \nintegration purposes were identified;\
    \ security, privacy, \naccess control, trust management, data management, \nscalability,\
    \ and performance. The paper also presents a \nroadmap of prospective research\
    \ areas, problems, and \npossibilities for which more studies are required to\
    \ guide \nthe researchers. This was done by addressing the limi-\ntations of reviewed\
    \ papers and identifying some open \nissues in infrastructure, platform, and technical\
    \ limita-\ntions of BC architecture that distress processes in specific \nrealms.\
    \ It’s important to note that this analysis is by no \nmeans comprehensive since\
    \ BC technology continues \nto advance at a breakneck speed. The rest of this\
    \ paper \nis organized as follows. Research bacground  presents \nan overview\
    \ of BC. Blockchain overview  discusses the \nresearch methodology. Blockchain\
    \ with fog computing \nintegration overview  discusses the descriptive findings.\
    \ \nResearch methodology  discusses BC with FC integra-\ntion purposes. Locating\
    \ studies discusses the future chal-\nlenges and open questions about BC with\
    \ FC integration. \nStudy selection and evaluation  concludes with options \n\
    for further research.\nResearch background\nBlockchain overview\nBC can be defined\
    \ as a distributed append-only pub-\nlic ledger technology that was originally\
    \ proposed for \ncryptocurrencies (e.g., Bitcoin) [24]. In 2008, the con-\ncept\
    \ of BC was proposed by [31]. Transactions occur \namong different parties without\
    \ the supervision of \na central authority. The valid transactions, using the\
    \ \nconsensus mechanism, are then recorded in the ledger \n(chronologically blocks\
    \ that form a BC) and copied to \nall parties. A consensus algorithm is used to\
    \ construct \nblocks and add them to the ledger which sometimes \nrepresents a\
    \ computational issue. Three considerations \nPage 3 of 36\nAlzoubi et al. Journal\
    \ of Cloud Computing           (2022) 11:80 \n \nare required for BC construction;\
    \ immutable ledger, \ntransparent and public ledger, and anonymity of the BC \n\
    users [18].\nThe majority of the background body was built using \nbitcoin BC,\
    \ which is the first and most widely used BC \nplatform among a wide range of\
    \ applications. Another \nreason for discussing Bitcoin BC in greater depth rather\
    \ \nthan other platforms such as Ethereum (a decentral-\nized open-source BC with\
    \ smart contract capability that \nis most recognized for its native cryptocurrency,\
    \ ETH, \nether, or just Ethereum) is the extensive literature acces-\nsible on\
    \ the platform [32]. Bitcoin BC, for example, uses \nSHA-256 hashing and elliptic\
    \ curve cryptography to pro-\nvide robust cryptographic evidence for data integrity\
    \ and \nauthentication [20]. The elliptic curve cryptography is a \nkey-based\
    \ encryption system that employs pairs of pri-\nvate and public keys to encrypt\
    \ and decrypt data [14]. \nThe BC, usually, includes a list of all transactions\
    \ and a \nhash to the prior block, which enables a cross-border \ndistributed\
    \ trust environment. While trusted parties or \ncentralized authorities may misbehave\
    \ and can be com-\npromised, disrupted, or hacked, transactions in the pub-\n\
    lic ledger of BC are validated by a majority consensus \nof miner nodes involved\
    \ in the validation process [33]. \nIn PoW-based BCs, for example, the validation\
    \ occurs \nby calculating a hash with leading zeros to meet the dif-\nficulty\
    \ target [20]. After validating by a consensus, the \ntransaction data are saved\
    \ in a ledger that not be erased \nor changed (data are immutable) [34].\nFigure \
    \ 1 describes a typical structure of the Bitcoin \nBC which consists of a sequence\
    \ of blocks connected \nthrough the hash value. The BC includes the block header\
    \ \nand the block body includes the transactions list. Various \nfields are included\
    \ in the block header such as the block \nsize, a timestamp, the number of transactions,\
    \ and the \nversion number. The hash value of the current block is \nrepresented\
    \ by the Merkle root field. Hashing using the \nMerkle tree is often used in Peer-to-Peer\
    \ (P2P) and dis-\ntributed arrangements as it provides effective data proof. \n\
    The nonce field is included as a Proof-of-Work (PoW) \nalgorithm (the original\
    \ consensus algorithm in BC (e.g., \nBitcoin and Ethereum), which is used to confirm\
    \ trans-\nactions and produce new blocks in the chain), and it is \nused to generate\
    \ the trial counter value that generates the \nhash with leading zeros [32]. The\
    \ number of leading zeros \nis specified by the difficulty target (i.e., used\
    \ to preserve \nthe block time of nearly 17.5 s for Ethereum and 10 min \nfor\
    \ Bitcoin [20]). The difficulty target can be modified to \nincrease the number\
    \ of zeros if the computation power \nof the hardware increased. The timestamp\
    \ is used for \ntracking the modification on the BC. Different mecha-\nnisms are\
    \ used for timestamping such as signing using \nthe private key of a trustworthy\
    \ server used in the tradi-\ntional schemes [35]. Another technique can be used\
    \ by \nFig. 1 Bitcoin BC structure\nPage 4 of 36\nAlzoubi et al. Journal of Cloud\
    \ Computing           (2022) 11:80 \ndeploying distributed timestamping which\
    \ helps to avoid \na single point of failure [35].\nThe method by which a BC network\
    \ achieves consen-\nsus is referred to as a consensus mechanism or algorithm.\
    \ \nSince there is no central authority, the public BC (i.e., \ndecentralized)\
    \ is constructed as a distributed mecha-\nnism, with distributed nodes agreeing\
    \ on the validity of \ntransactions using a consensus algorithm [34]. In other\
    \ \nwords, BC depends on distributed consensus to validate \nthe transactions\
    \ which guarantee the consistency and \nintegrity of the transactions [36]. The\
    \ different consensus \nmechanisms impact the BC system differently [37]. The\
    \ \nbest (idealistic) consensus mechanism promotes giving \nthe same weight to\
    \ all miners for the validation process \nand then deciding based on the majority.\
    \ This ideal sce-\nnario may be applicable in a controlled (private) environ-\n\
    ment; however, in public contexts, this may increase the \nchance of Sybil attacks\
    \ as users can share multiple identi-\nties [35]. In distributed architecture\
    \ such as FC, only one \nrandom user will add every block which may lead to sev-\n\
    eral attacks [38].\nBitcoin is the most well-known cryptocurrency. Later, \nin\
    \ 2015, Ethereum BC was launched, which can execute \nsmart contracts and store\
    \ data [38]. The smart contracts \nare programs written and uploaded by parties\
    \ to be exe-\ncuted in the BC which includes the terms of the contract. \nSoon\
    \ later, other BC platforms were launched such as \nStellar (a digital money protocol\
    \ that’s distributed and \nopen-source), Hyperledger (a worldwide business BC\
    \ \ninitiative that provides the structure, tools, and rules for \ncreating open-source\
    \ BCs and apps), Ripple (a BC-based \ndigital payment system and mechanism with\
    \ its cryp-\ntocurrency, XRP), Eris (an open-source software that \nenables anybody\
    \ to create low-cost, safe, and portable \napps utilizing smart contract and BC\
    \ technology), and \nTendermint (an algorithm for securely and consistently \n\
    replicating applications over many devices) [20, 21, 32]. \nDepending on the data\
    \ managed, the availability of that \ndata, and the actions taken, different types\
    \ of BC can be \nidentified. It is worth mentioning here that some authors \n\
    refer to public/permissionless and private/permissioned, \ninterchangeably. This\
    \ can be applicable in cryptocurren-\ncies; however, in other applications that\
    \ need to distin-\nguish between authentication and authorization, it’s not \n\
    applicable. Though, the naming is still in debate among \nauthors. Note that Bitcoin,\
    \ for instance, is used to track \ndigital assets, while smart contracts used\
    \ in Ethereum \nenable certain logic. Moreover, while some system like \nRipple\
    \ makes use of tokens, others like Hyperledger do \nnot.\nIn general, BC can be\
    \ categorized into three major \ntypes; public (e.g., Bitcoin, NXT, CounterParty,\
    \ Root-\nStock, and Zcash platforms), private (e.g., Monax, \nHyperledger Fabric,\
    \ Ripple, Multichain, and Corda plat-\nforms), and consortium (e.g., Ethereum,\
    \ Monax, and \nMultichain platforms) [23, 24, 39]. 1) On the Internet, \neveryone\
    \ can see the public BC ledgers, and anybody may \nvalidate and contribute a transaction\
    \ to the BC. 2) Only \nselected people inside the company may add and vali-\n\
    date transactions in Private BC, but anybody with access \nto the Internet can\
    \ normally read them. 3) Consortium \nBC allows only a group of organizations\
    \ (e.g., financial \ninstitutes) to add and validate a transaction, however, the\
    \ \nledger might be available or limited to certain parties. \nApplications such\
    \ as auditing within an organization and \ndata management require consortium\
    \ BC, in general, as \npublic BC is not suitable for user privacy and commercial\
    \ \nbenefit protection [23].\nAccordingly, BC offers the following benefits over\
    \ other \ntechnologies [34, 36]. 1) Resilient - no single point of fail-\nure\
    \ and using smart contracts, which means BC helps in \ntransferring, securely.\
    \ It is a network of nodes, all nodes \nwork collaboratively to maintain the transaction,\
    \ records \nare augmented to a ledger of a previous transaction, and \nPoW should\
    \ be validated by other nodes included in the \nchain. 2) Decentralized and trustless-P2P\
    \ system, which \ncuts the need for any kind of agent for security by cryp-\n\
    tography. The distributed database is duplicated into \nevery node, which includes\
    \ timestamps, transaction \nlists, and information with links to the previous\
    \ blocks \nin the chain. The distributed ledger should be transpar-\nent, immutable,\
    \ publicly accessible, and updated after \neach transaction. 3) Scalable and high\
    \ speed and capac-\nity technology. The computing capacities of the network \n\
    scale up when a new peer joins the chain. 4) Secure and \ntransparent because\
    \ every transaction is visible to every \nminer on the chain.\nWhile a lot of\
    \ research has been conducted on BC \ntechnology, the state-of-the-art of BC with\
    \ FC integra-\ntion purposes has received insufficient attention [40]. \nThe main\
    \ impetus for this work was the lack of a clear \nand complete analysis of existing\
    \ BC with FC integra-\ntion purposes state-of-the-art in the literature. BC can\
    \ \navoid many attacks even without centralized control or \ndata storage [23].\
    \ The Ethereum-transaction-based state-\nmachine provides special features like\
    \ security, transac-\ntional privacy, integrity, authorization, auditability,\
    \ data \nimmutability, fault tolerance, and transparency [24]. \nAccordingly,\
    \ many applications use this technology now-\nadays rather than cryptocurrencies\
    \ such as smart trans-\nportation, identity management, industry, agriculture,\
    \ \nenergy grids, supply chain management, and FC [22].\nBlockchain with fog computing\
    \ integration overview\nFC is a highly dispersed computing structure with a set\
    \ \nof assets made up of one or more pervasively linked \nPage 5 of 36\nAlzoubi et al.\
    \ Journal of Cloud Computing           (2022) 11:80 \n \nembedded systems (which\
    \ include IoT devices) sup-\nported by cloud computing, to cooperatively offer\
    \ stor-\nage, computation, storage, connectivity, and other \nservices to a sizable\
    \ number of IoT devices nearby [3]. FC \nis a cloud expansion that is more closely\
    \ connected to IoT \ndevices. FC serves as a bridge between edge devices (e.g.,\
    \ \nsensors, and actuators) and the cloud [14]. A fog node \ncould be any device\
    \ having processing power, storage \ncapabilities, and network connection, including\
    \ routers, \nsecurity cameras, switches, and control devices. Distri-\nbution,\
    \ flexibility, proximity to IoT devices, low latency, \nreal-time transactions\
    \ and analysis, and heterogeneity \nare typical characteristics of FC [41]. All\
    \ of these quali-\nties made FC a very alluring remedy for cloud computing \n\
    problems, particularly excessive latency and centralized \nauthority [42].\nMany\
    \ studies have been conducted recently that dis-\ncussed the value of BC in an\
    \ FC environment such that \ndevices like personal computers, mobile units, and\
    \ Vehic-\nular Ad-hoc Network (VANET) can be equipped with \nBC. The role of BC\
    \ in FC can be broadly seen from two \nangles; data processing and communication\
    \ [43]. That \nis, the role of BC will be very important in maintaining \nsecurity\
    \ and privacy on the fog nodes when data is stored \nor processes in the fog node\
    \ and when data is transferred \nbetween fog nodes, between fog nodes and the\
    \ cloud, and \nbetween fog nodes and the IoT devices. The fog node will \nplay\
    \ the operator role (i.e., manage) for IoT devices [14]. \nThe decentralized and\
    \ dispersed fog nodes, associated \nwith the network, handle the communications\
    \ included \nin BC. Each block in the BC is attached to the chain \nsequentially\
    \ [34]. All nodes included in the BC environ-\nment are parts of the network which\
    \ store a local copy of \nthe transaction data permanently. All the parties involved\
    \ \njointly authenticate the transaction to meet a consensus \ndecision, before\
    \ a miner node (e.g., Ethereum Virtual \nMachines - nodes that can provide trustworthy\
    \ execution \ncryptographically tamper-proof and administration to \nthese contracts\
    \ or programs) add the validated transac-\ntion into a timestamped block [20].\
    \ And then broadcasts \nit into the network. This data is periodically updated\
    \ \namong all nodes for consistency purposes. This enables \nmany nodes, that\
    \ do not trust each other, to achieve \nauthentication decisions based on the\
    \ old transactions. \nIn the BC environment, a public ledger preserves the \n\
    validated transactions in a P2P network. In general, two \nkeys are used: 1) a\
    \ private key which is used to sign the \nBC transaction before broadcasting to\
    \ other peers and 2) \na public key that represents the unique address [18].\n\
    In order to obtain BC incentives, nodes compete in \nPoW to perform cryptographic\
    \ formulas and verify \ntransactions. On the other hand, Proof-of-Stake (PoS)\
    \ \nemploys random selection validators to guarantee the \ntransaction’s dependability\
    \ and pays them with crypto-\ncurrency [44]. The most popular cryptocurrency,\
    \ Bit-\ncoin, employs PoW. The second-largest cryptocurrency, \nEthereum, began\
    \ off with PoW but is now switching to \nPoS. High levels of reliability and security\
    \ are stated for \nPoW [45]. The intricacy of the mathematical calcula-\ntions\
    \ required to attain verification makes manipulating \nthe system all but useless.\
    \ But it’s slow and expensive to \nrun, and it consumes a lot of energy. PoS eliminates\
    \ the \nneed for difficult calculations. Instead of figuring out a \nnumerical\
    \ riddle, the miner in PoS-based BC employs \na digital signature as evidence.\
    \ Instead of receiving a \nnewly formed asset, the miner who verifies the block\
    \ is \ncompensated with a transaction fee [46]. PoS consen-\nsus maintains the\
    \ incentive mechanism and effectively \nassures node equity since it has a low\
    \ relative burden \non computational resources and high throughput. By \nexamining\
    \ the quantity and duration of tokens it has, \nPoS calculates the likelihood\
    \ of acquiring accounting \nprivileges [47]. Similar to the stock dividend system,\
    \ \npeople who possess comparatively greater shares might \nget higher dividends.\
    \ Therefore, it is more energy-\nefficient than PoW and provides higher sustainability\
    \ \n[48]. The nodes with stakes are meant to be trustwor-\nthy and refrain from\
    \ manipulating transactions, but if \nthey do, their stake might be taken away.\
    \ Participating \nin the PoS is simpler for investors than the PoW since it \n\
    doesn’t need technical skills or computer-aided design. \nPoS outperforms PoW\
    \ in terms of speed as well. For \ninstance, Ethereum can handle up to 100,000\
    \ transac-\ntions per second using PoS, but it can only handle 30 \ntransactions\
    \ per second with PoW [48]. In the case of \nPoS, however, there is a possibility\
    \ that a node will not \nhave enough assets, in which case, if it were to be cho-\n\
    sen as a miner, it would be viewed as malicious since it \nwould have no assets\
    \ to be debited [47].\nResearch methodology\nTo identify and synthesize the purposes\
    \ of integrating \nBC in FC, we adopted a Systematic Literature Review \n(SLR)\
    \ approach based on the guidelines provided by \n[49, 50]. SLR aims to identify,\
    \ select, and synthesize \nthe available literature to answer the research question\
    \ \n[30]. A systematic literature review protocol is essential \nto guide the\
    \ review process [30] that provides a frame-\nwork to understand the impact of\
    \ BC on FC security \nand privacy challenges. We have developed a review \nprotocol\
    \ to validate the classification process of this \npaper. Distinct stages have\
    \ been applied: (1) locating \nstudies, (2) screening studies, (3) study selection\
    \ and \nevaluation, and (4) study inclusion.\nPage 6 of 36\nAlzoubi et al. Journal\
    \ of Cloud Computing           (2022) 11:80 \nLocating studies\nThe following\
    \ seven well-known electronic databases \nwere used in this review. These databases\
    \ are expected to \nprovide enough literature coverage for this paper.\n• IEEE\
    \ Xplore (www. ieeex plore. ieee. org/ Xplore/).\n• ACM Digital Library (www.\
    \ portal. acm. org/ dl. cfm).\n• Elsevier ScienceDirect (www. scein cedir ect.\
    \ com/).\n• SpringerLink (www. sprin gerli nk. com/).\n• Google Scholar (http://\
    \ schol ar. google. com. au/).\n• Emerald Insight (https:// www. emera ld. com/\
    \ insig ht/).\n• Wiley Online Library (https:// onlin elibr ary. wiley. \ncom/).\n\
    • SAGE Publication (https:// us. sagep ub. com/ en- us/ \nnam/ home).\n• MDPI\
    \ Online (https:// www. mdpi. com/ journ al).\nIn the first stage, all possible\
    \ combinations of BC, FC, \nand edge computing were searched using the Boolean\
    \ \n“AND” and “OR” operators. The edge computing term \nwas included in the search\
    \ terms because many authors \nrefer to FC as edge computing. The selected studies\
    \ come \nfrom different IoT applications of FC such as vehicular, \nsmart cities,\
    \ and health applications. The selected papers \ninclude peer-reviewed articles\
    \ published in journals, \nbook sections, or conference proceedings. Figure 2\
    \ shows \nthe stages of the review process and the number of papers \nidentified\
    \ at each stage. In this review, we included any \nstudy that discussed BC as\
    \ a technique used in fog or \nedge computing. Therefore, studies were excluded\
    \ if their \nfocus was not on fog or edge computing or if they did \nnot discuss\
    \ using BC. This review included studies up to \nApril 2022; qualitative, quantitative,\
    \ mixed measurement \nstudies, overview studies, and review studies. The search\
    \ \nexcluded studies that discuss prefaces, poster sessions, \neditorial discussion,\
    \ news, article summaries, or reader’s \nletters. Only papers written in English\
    \ were included.\nStudy selection and evaluation\nThe authors individually evaluated\
    \ all of the literature \nusing the established criteria, as discussed in Section 3.1.\
    \ \nAll authors sat together, at the end of each stage, and dis-\ncussed the included\
    \ and excluded studies. In this review, \nwe followed the citation procedure discussed\
    \ in Alzoubi \net al. [50]. We used EndNote as a citation manager tool \nto store\
    \ the selected studies. Moreover, we used the back-\nward snowball sampling technique\
    \ and searched the ref-\nerence lists of the selected studies, in the first stage,\
    \ to get \nnew studies. The number of hits resulting from the first \nstage was\
    \ 517. After excluding the non-English written \nFig. 2 Study selection process\n\
    Page 7 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022) 11:80\
    \ \n \nstudies, the number dropped to 508. Moreover, the num-\nber dropped to\
    \ 501 after excluding the duplicated papers.\nThe 501 papers were imported to\
    \ EndNote (to keep \ntrack of the references) and Excel sheet (to maintain the\
    \ \nabstracts and titles). In this stage, the titles of the selected \nstudies\
    \ were reviewed. The papers that were not about \nBC with FC integration were\
    \ excluded. However, some \ntitles failed to be identified, and thus included\
    \ in the \nnext review stage. In this stage, 374 studies were identi-\nfied as\
    \ relevant to the scope of this study. Moreover, after \nreviewing the abstracts\
    \ of the selected papers, the num-\nber dropped down to 187 papers. The abstracts\
    \ that were \nnot considering any application of BC with FC integra-\ntion were\
    \ excluded (e.g., architectural and/or technologi-\ncal features of BC). Some\
    \ abstracts were misleading so \nthe papers, in this case, were included in the\
    \ next stage. If \nthe abstract was not available, the study was left for stage\
    \ \n4. At stage 4, all potential studies were gone under the \nfull-text review.\
    \ In this stage, 6 papers were excluded as \nthey did not report the BC with FC\
    \ integration, leaving \n181 papers for the final inclusion stage.\nData extraction\
    \ and synthesis\nAll articles that matched the requirements for inclu-\nsion were\
    \ entered into MAXQDA11, a qualitative analy-\nsis program, and the data was evaluated\
    \ for emergent \nthemes. The thematic analysis for selected papers was \nconducted\
    \ independently by the authors. In the end, the \nseven categories were compared\
    \ among all authors. The \nconsensus rate was around 78%. All authors agreed on\
    \ \nall articles included for thematic analysis (N = 181), one \nset of categories,\
    \ and sub-categories. The selected studies \n[38–218] are discussed in the following\
    \ Sections. First, \na descriptive analysis is provided for the selected stud-\n\
    ies. Next, the taxonomy of the BC with FC integration’s \npositive impact on security\
    \ and privacy issues of FC is \npresented. Finally, the future directions of this\
    \ SLR are \ndiscussed.\nDescriptive analysis\nThe study looks at 181 academic\
    \ articles that were pub-\nlished between 2016 and April-2022. The descriptive\
    \ \nanalysis serves several aims including fascinating insights \ninto current\
    \ research patterns in BC technology. It also \nserves as a guide for future studies.\
    \ Moreover, it aids in \nvisualizing the interdisciplinary research techniques\
    \ that \nhave been established in the scientific literature thus far. \nTable 1\
    \ summarizes the studies that were chosen based \non the published database. IEEE\
    \ was the single largest \npublication outlet, with 104 studies out of 181 (74\
    \ jour-\nnal articles and 30 conference proceedings), followed by \nElsevier Science\
    \ Direct with 21 research. As the small-\nest number of studies, just two were\
    \ retrieved from \nSAGE. The “IEEE Access” journal, which published 19 \npapers,\
    \ was found to be the single most popular publica-\ntion channel. Table 1 further\
    \ reveals that the bulk of the \npapers chosen (132 out of 181) were peer-reviewed\
    \ jour-\nnal articles, followed by 43 conference proceedings, and \nonly six-book\
    \ sections.\nFigure  3 shows a year-by-year examination of the \nselected publications.\
    \ It’s worth mentioning that the \nnumber of publications was low in 2016 (1 study)\
    \ and \n2017 (7 studies), but increased in 2018 to 26 studies. \nHowever, in 2019,\
    \ the total number of studies hit a high \nof 49. The number drops to 44 studies\
    \ in 2020, 43 studies \nin 2021, and 11 studies by April 2022. This trend reflects\
    \ \nthe fact that BC technology is new and developing, as \nwell as the increasing\
    \ scholarly interest in it. Even though \nBC technology was initially established\
    \ using Bitcoin as \na basic underlying innovation and Bitcoin has accounted \n\
    for the majority of investigated platforms over the last \nseven years, many of\
    \ the papers published in 2020, 2021, \nand 2022 focused on the latest or modern\
    \ BC platforms, \nsuch as Etherium, with a particular focus on smart con-\ntracts.\
    \ Figure 3 also shows that the vast bulk of the litera-\nture was published in\
    \ peer-reviewed journals, with only a \nfew book sections.\nBC originally started\
    \ with Bitcoin (BC 1.0), then BC \n2.0 which was built on smart contracts, and\
    \ later evolved \ninto coordinative applications (BC 3.0) [35]. The majority \n\
    Table 1 Publication channel\nDatabase\nPublication type\nStudy\nNumber\nIEEE Xplore\n\
    Total = 104 (57.4%)\nJournal\n[27, 48, 51–122]\n74\nConference Proceed-\nings\n\
    [43, 123–151]\n30\nElsevier Science \nDirect\nTotal = 21 (11.6%)\nJournal\n[152–172]\n\
    21\nGoogle Scholar\nTotal = 15 (8.3%)\nJournal\n[173–180]\n8\nConference Proceed-\n\
    ings\n[181–186]\n6\nBook Section\n[187]\n1\nSpringerLink\nTotal = 13 (7.2%)\n\
    Journal\n[188–192]\n5\nConference Proceed-\nings\n[193–195]\n3\nBook Section\n\
    [196–200]\n5\nMDPI\nTotal = 12 (6.6%)\nJournal\n[201–212]\n12\nWiley Online Library\n\
    Total = 9 (5%)\nJournal\n[213–221]\n9\nACM Digital Library\nTotal = 5 (2.8%)\n\
    Journal\n[222]\n1\nConference Proceed-\nings\n[223–226]\n4\nSAGE Publication\n\
    Total = 2 (1.1%)\nJournal\n[227, 228]\n2\nPage 8 of 36\nAlzoubi et al. Journal\
    \ of Cloud Computing           (2022) 11:80 \nof BC with FC integration applications\
    \ discussed in \nselected studies were IoT applications (83 studies), trans-\n\
    portation (31 studies), eHealth (16 studies), industrial IoT \n(9 studies), monitoring\
    \ applications (6 studies), energy (8 \nstudies), mobile devices (4 studies),\
    \ supply chain man-\nagement (4 studies), drones’ network (3 studies), video \n\
    streaming (2 studies), financial (2 studies), global collabo-\nration (2 studies).\
    \ Other applications were also revealed \nincluding FC-PoW approach [45], higher\
    \ education appli-\ncations [207], FC-resource brokerage platform [134], FC-\n\
    authentication scheme [218], agricultural supply chain \n[156], multi-party contract\
    \ signing [217], video streaming \n[99], consensus for edge-centric IoT [57],\
    \ intelligent and \nsafe task offloading in vehicles [89], and FC-rogue nodes\
    \ \napproach [135]. Other review papers focused on BC with \nFC integration in\
    \ general ([63, 85, 109]) and FC security \n([45, 200]). The other studies which\
    \ included literature \nreview are not counted in these applications.\nFigure \
    \ 4 shows the domain-purpose distribution \nof the 181 research across time. BC\
    \ with FC integra-\ntion has been divided into seven domains based on \nthe results\
    \ of the research. Security takes up the most \nresearch items (38 out of 181),\
    \ followed by performance \n(34 studies), trust management (31 studies), privacy\
    \ (25 \nstudies), access control (21 studies), data management \n(16 studies),\
    \ and lastly scalability (11 studies). Figure 4 \ndemonstrates that, even though\
    \ BC with FC integra-\ntion is still in the early phases, its goals have expanded\
    \ \nbeyond security and privacy to include trust manage-\nment, data management,\
    \ performance, and scalability \nconcerns. Furthermore, a significant number of\
    \ pub-\nlications addressing the subject of trust management \nwere published\
    \ in 2019 (12 studies). Moreover, the \nfocus among the selected studies has been\
    \ more on \nenhancing FC-IoT-cloud architecture using BC tech-\nnology. It’s worth\
    \ noting that several authors high-\nlighted the role of BC in FC as a supplement\
    \ to security \nand privacy concerns. In other words, they assumed \nthat, by\
    \ default, BC enhances the security and privacy \nof FC, then can achieve other\
    \ purposes such as trust \nmanagement, performance, or scalability. As a result,\
    \ \nwhen classifying the results in this paper, we focused \non the primary goal\
    \ of each study.\nTwenty two papers were literature review includes one \npaper\
    \ published in 2016 ([125]), one paper in 2017 ([57]), \ntwo papers in 2018 ([63,\
    \ 185]), seven papers in 2019 ([27, \n109, 164, 194, 207, 210, 228]), three papers\
    \ in 2020 ([85, \n86, 195]), five papers in 2021 ([60, 191, 192, 200, 211]), \n\
    and three papers up to April 2022 [153, 154, 214]. Some \nof these papers focused\
    \ on certain purposes such as \nresource management [154], while others were general\
    \ \nliterature reviews without focusing on certain purposes \nFig. 3 Publication\
    \ year-distribution\nPage 9 of 36\nAlzoubi et al. Journal of Cloud Computing \
    \          (2022) 11:80 \n \nsuch as [214]. The latter, though, were not included\
    \ in the \nclassification of Fig. 4.\nMore information about the survey studies\
    \ found in \nour systematic evaluation is provided in Table 2. While \nthe bulk\
    \ of these surveys concentrated solely on a single \narea of BC with FC integration,\
    \ such as health or trans-\nportation, or a single purpose, such as security and\
    \ \nprivacy, this article offered a thorough analysis of all pur-\nposes and from\
    \ all areas of literature that were accessible. \nFurthermore, unlike this article,\
    \ none of the identified \nFig. 4 Domain year-distribution\nTable 2 Survey studies\
    \ focus\nStudy\nYear\nFocus\nSamaniego et al. [125]\n2016\nSurvey on integrating\
    \ BC and IoT networks\nYeow et al. [57]\n2017\nReview of the decentralized consensus\
    \ systems for edge-centric IoT\nUriarte & DeNicola [63]\n2018\nSurvey on integrating\
    \ BC and cloud/FC solutions\nPahl et al. [185]\nSurvey on BC platforms for IoT-edge\
    \ computing\nAbdulkareem et al. [27]\n2019\nSurvey on FC and machine learning\n\
    Fernández-Caramés & Fraga-Lamas \n[207]\nSurvey on BC, IoT, FC and edge computing\
    \ in universities campuses\nIqbal et al. [228]\nSurvey on BC, FC, and trust management\
    \ in social Internet of vehicles\nMcGhin et al. [164]\nSurvey on BC in healthcare\
    \ applications\nPodsevalov et al. [194]\nSurvey on integrating BC and FC platform\n\
    Tariq et al. [210]\nSurvey on security of big data in FC-IoT applications and\
    \ BC\nYang et al. [109]\nSurvey on integrating BC and edge computing\nBaniata\
    \ & Kertesz [85]\n2020\nSurvey on integrating BC and FC\nBhattacharya et al. [195]\n\
    Survey on BC and edge computing\nFerrag et al. [86]\nSurvey on integrating BC\
    \ protocols for the IoT networks\nAloqaily et al. [60]\n2021\nSurvey on BC for\
    \ 5G-UAV networks\nDu et al. [211]\nSurvey on integrating BC-edge for IoT networks\n\
    Kiwelekar et al. [200]\nSurvey on integrating BC and FC for security\nLiu et al.\
    \ [191]\nSurvey on integrating BC-based resource allocation for edge computing\
    \ in IoT applications\nMikavica et al. [192]\nSurvey on BC security, privacy,\
    \ and trust management in vehicular networks\nDeepa et al. [153]\n2022\nSurvey\
    \ on using BC for big data analysis\nKamruzzaman et al. [214]\nSurvey on integrating\
    \ BC and FC for IoT healthcare services in smart cities\nHamdi et al. [154]\n\
    Survey on using BC for task offloading in vehicular FC\nThis survey\nSystematic\
    \ review of all potential integration purposes for FC and BC till April 2022\n\
    Page 10 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022) 11:80\
    \ \nsurvey studies have systematically investigated BC with \nFC integration.\n\
    Blockchain‑fog computing purposes\nThis paper focuses on BC with FC integration\
    \ purposes. \nWe suggest a purpose-oriented categorization in this \npaper. Our\
    \ approach, on the other hand, varies from \ncomparable studies (E.g., [154, 192,\
    \ 211, 214]) as it does \nso by utilizing a rigorous statistical methodology based\
    \ \non the literature, making it more relevant to present BC \nadvances and illustrating\
    \ future BC trends with high \nfidelity. As a result, we present a thorough and\
    \ compre-\nhensive classification of BC-based goals, which is visually \ndepicted\
    \ in Fig. 5, taking into consideration the current \nand future variety of BC\
    \ solutions. Based on an exami-\nnation of the existing literature, we provide\
    \ a thorough \ntaxonomy of the BC-enabled purposes that are currently \naccessible\
    \ in the following subsections. The purpose cat-\negories identified in this paper\
    \ were, however, classified \n(coded) using the prior literature review publications\
    \ \nas a starting point. Most research reviews, for example, \nidentified security\
    \ and privacy as the major purposes of \nBC with FC integration. We begin classifying\
    \ with these \npurposes and then add the evolved categories like trust, \nperformance,\
    \ access control, and scalability. The coding \nwas done according to the definitions\
    \ given to describe \neach purpose category and its subcategories.\nSecurity\n\
    Data can be harmed by a variety of security risks. BC \nmay be able to shield\
    \ you against these dangers to a large \nextent. Availability, confidentiality,\
    \ and integrity are the \nmost important security purposes [192]. We found sev-\n\
    eral studies that indicated security support and fraud \ndetection in addition\
    \ to these three purposes. These pur-\nposes are discussed in the following sub-sections.\n\
    Security support\nMany studies have reported that BC can enhance and \nsupport\
    \ the security of FC, in general without focusing \nFig. 5 BC with FC integration\
    \ purposes\nPage 11 of 36\nAlzoubi et al. Journal of Cloud Computing         \
    \  (2022) 11:80 \n \non a specific particular of security. Several new solu-\n\
    tions were proposed to enhance security in the BC with \nFC integration environment.\
    \ To provide an efficient and \nsecure communication framework, Alam [176] empha-\n\
    sized the confluence of BC, FC, and IoT technology \nadvancements. Similarly,\
    \ Alam [177] presented a frame-\nwork for delivering middleware on the Internet\
    \ of smart \ndevices network. The suggested framework is particularly \nwell suited\
    \ to applications in which data is sent regularly \non the Internet of smart devices\
    \ environment. Ashik et al. \n[139] created a FC-cloud architecture based on BC\
    \ that \nmay be utilized in smart homes. By leveraging the BC \nnetwork, this\
    \ design gives rise to a distinct fog architec-\nture that provides greater security\
    \ against known threats \nto safeguard our sensitive data. Dorri et al. [82] suggested\
    \ \na BC-based architecture to safeguard users’ privacy and \nstrengthen the vehicular\
    \ ecosystem’s security.\nHuang et  al. [81] proposed a distributed security \n\
    approach using smart contracts and the lightning net-\nwork; this suggested model\
    \ is known as the lightning \nnetwork and smart contracts. To improve the security\
    \ of \ntrade between charging piles and electric cars, the new \nsuggested security\
    \ model can be combined with existing \nscheduling software. Huang et al. [84]\
    \ proposed a BC sys-\ntem to address the IIoT security problems. The authors \n\
    also created a data authority management technique to \ncontrol access to sensor\
    \ data to safeguard sensitive data \nconfidentially. Huang et  al. [94] used BC\
    \ technology to \ncreate a decentralized parked vehicle aided FC. Smart \ncontract\
    \ executions arrange and validate request posting, \nworkload completion, task\
    \ appraisal, and reward assign-\nment automatically. This method provides strong\
    \ security \nand efficiency guarantees, as demonstrated by a security \nstudy\
    \ and comprehensive numerical findings [94].\nRahman et  al. [104] demonstrated\
    \ a safe therapeutic \nframework that allows patients to own and control their\
    \ \npersonal data without the assistance of a trustworthy \nthird party, such\
    \ as a therapy facility. With BC’s support, \nthe framework can withstand unwanted\
    \ access or a sin-\ngle point of failure. Although the BC only maintains the \n\
    treatment metadata’s immutable hashes, the actual multi-\nmedia data, depending\
    \ on the application’s needs, audios, \nvideos, photographs, or other augmented\
    \ reality thera-\npeutic data is saved off-chain in a decentralized database.\
    \ \nThis functionality allows you to make use of metadata’s \nimmutability while\
    \ annotating or upgrading multimedia \nbig data [104]. Shynu et al. [120] proposed\
    \ a secure BC \nwith FC integration healthcare service for illness forecast. \n\
    When developing projections, cardiovascular disorders \nare considered. The patient’s\
    \ health data is initially gath-\nered from fog Nodes and stored on a BC. When\
    \ com-\npared to existing neural network methods, the suggested \napproach achieved\
    \ a prediction accuracy of over 81%.\nFraud detection\nFraud detection is the\
    \ process of checking a document or \nother data system to see whether there has\
    \ been any tam-\npering with the data or other harmful activity [164]. The \n\
    focus here is on how BC can protect FC from attacks. \nJeong et al. [223] proposed\
    \ creating a secure FC system \nusing a reliable distributed BC. IP spoofing,\
    \ Sybil attacks, \nand single point of failure may all be prevented with our \n\
    suggestion. The digital signature utilized in the trans-\naction creation process\
    \ ensures authenticity and non-\nrepudiation in this proposal. Because it is based\
    \ on a BC, \nwhich is a distributed ledger, it can effectively restore or \nalternate\
    \ a downed FC even when it is offline. Stanciu \n[149] presented a study based\
    \ on the IEC 61499 standard \nthat uses BC technology as a foundation for hierarchical\
    \ \nand distributed control systems. Hyperledger Fabric was \nchosen as the BC\
    \ solution, with function blocks being \nimplemented on a supervisor level as\
    \ smart contracts \n[149]. Liang et  al. [222] suggest utilizing cross-BC-ena-\n\
    bled FC to provide safe service detection for the Internet \nof Multimedia Things\
    \ (IoMT). An extensible cross-BC \ndesign based on FC is provided initially to\
    \ avoid tamper-\ning and espionage during the trust evolution process, in \nwhich\
    \ separate parallel BCs may be coordinated to com-\nmunicate hidden geographic\
    \ data and app trusted proof. \nThe smart contract in the BC-based Ethereum is\
    \ meant \nto allow Turing complete computing [222].\nMisra et  al. [147] recommended\
    \ using a private BC \nnetwork to implement a Software Defined Networking \n(SDN)\
    \ architecture in a fog-enabled IoT ecosystem to \nprevent such hostile attacks\
    \ against controllers in real-\ntime. If the miners discover incorrect flow rules,\
    \ BC \npermits the SDN devices/fog nodes to revert to a previ-\nous flow rule\
    \ while flagging the accused controller. The \nauthors also recommended encrypting\
    \ the data before \nplacing it into the blocks, which would help protect the \n\
    data from unauthorized users [147]. Moreover, Rathore \net al. [161] BC technology\
    \ was offered as part of an SDN-\nbased decentralized security architecture. SDN\
    \ is in \ncharge of providing an optimal attack detection model by \ncontinuously\
    \ monitoring and analyzing data. The single \npoint of failure concern in the\
    \ present design is mitigated \nby BC’s decentralized threat detection [161].\n\
    Gul et  al. [168] proposed a business model for the \nhealthcare industry that\
    \ uses BC to link the FC and the \ncloud. Certain data in the healthcare industry\
    \ can be \nanalyzed for prediction, and companies can plan before \ndisaster strikes.\
    \ Many attacks are thwarted since there is \nno direct contact between the BC\
    \ layer and the IoT layer. \nBecause the company can predict the course of business\
    \ \nand make decisions appropriately, this fusion makes busi-\nness more productive.\
    \ Kumar et al. [221] employed two \nArtificial Intelligence (AI) approaches, random\
    \ forest and \nPage 12 of 36\nAlzoubi et al. Journal of Cloud Computing      \
    \     (2022) 11:80 \nXGBoost, to offer the proposed security framework full \n\
    autonomy in decision-making skills. An interplanetary \nfile system is recommended\
    \ for distributed storage and \ndata load balancing. To identify DDoS assaults\
    \ in smart \ncontracts, the authors presented a distributed system \nbased on\
    \ FC. The suggested distributed framework’s find-\nings demonstrate that it is\
    \ extremely successful at iden-\ntifying numerous assaults in the BIoT network,\
    \ such as \nDDoS and other current attacks [221]. Kumar et al. [45] \ndemonstrated\
    \ how the integration of BC using the PoW \nconsensus mechanism can enhance FC\
    \ security.\nSharma et al. [73] presented a novel Distributed Mobil-\nity Management\
    \ (DMM) solution based on BC technol-\nogy for flattened FC. The suggested solution\
    \ can deal \nwith hierarchical security concerns while maintaining \nnetwork layout.\
    \ It uses three BCs to meet the needs of \ncompletely distributed security while\
    \ also resolving the \nde-registration difficulties that plague previous DMM \n\
    systems. Furthermore, the distributed BC approach \naids in the prevention of\
    \ DDoS, backward broadcasting \nattacks, session hijacking, and impersonation\
    \ attacks. \nIt also encourages the use of de-registration rules. Siva-\nsangari\
    \ et al. [181] presented a BC with FC integration \ndesign to identify security\
    \ threats at the cloud layer, \nresulting in a reduction in IoT security attacks.\
    \ The ellip-\ntic curve cryptography-based proxy encryption is used in \nthe proposed\
    \ design.\nConfidentiality\nConfidentiality refers to the assurances that the\
    \ data may \nonly be accessed by authorized users or nodes. Other \nnodes are\
    \ unable to comprehend the private and secret \ninformation that each node possesses\
    \ [192]. Farhadi \net al. [224] explored how distributed BC ledger technol-\n\
    ogy may be utilized to address Confidentiality, integrity, \nauthenticity, non-repudiation,\
    \ and availability challenges \nin FC architecture as decentralized computing\
    \ support \n[224].\nGao et al. [48] provided a new framework called SGX \nin the\
    \ IoT-cloud medical health (IoMT) using BC with \nFC integration to maintain a\
    \ trusted environment and \ndata confidentiality. To maintain the highest level\
    \ of data \nprotection, only a portion of the relevant diagnostic data \ncan be\
    \ given to the medical facilities in need. Curious \ndata processing facilities,\
    \ on the other hand, will poten-\ntially contribute to data leakage. FC and BC\
    \ were com-\nbined to provide a new platform to address these issues. \nMohapatra\
    \ et al. [229] presented a secure data exchange \nsystem for IoT devices based\
    \ on BC with FC integration. \nThe authors proposed two software agents: a BC\
    \ crea-\ntion software agent deployed in FC, and a network of IoT \ndevice monitoring\
    \ software agents. Block addition by an \napproved IoT device is done with an\
    \ AES 128-based PoW \nwhile hashing in BC was done with SHA 256. To improve \n\
    FC privacy, Wu et al. [123] integrated BC with FC and \nleveraged multi-party\
    \ secure computing technique in \nsmart contracts. Participants can only access\
    \ the out-\nput value of their functions using this technique, which \nencrypts\
    \ output and input. Simultaneously, the BC may \nverify and agree on the findings\
    \ calculated by this tech-\nnique across the whole network.\nIntegrity\nData integrity\
    \ guarantees that the message’s content \nis not tampered with during transmission\
    \ [211]. As a \nresult, unlawful data production, deletion, or alteration \nis\
    \ prohibited [192]. By allowing all network members \nto collectively own and\
    \ validate data, which was pre-\nviously handled by a centralized server, BC enhances\
    \ \ntransaction record integrity and dependability. The tech-\nnology may minimize\
    \ brokerage fees and construction \nexpenses thanks to distributed data management,\
    \ while \nalso ensuring high levels of data integrity and security \n[61]. Kumar\
    \ et al. [87] argue that the BC maintains data \nintegrity, security, and trust\
    \ in a decentralized manner. \nAccordingly, the authors have proposed the BlockEdge\
    \ \nframework, which brings these two enabling technolo-\ngies together to solve\
    \ some of the existing IIoT networks’ \nmost pressing challenges [87].\nA BC-based\
    \ crowdsensing framework was presented \nin Gu et al. [127] to deal with security\
    \ risks, which helps \nvalidate the authentication of supplied sensor data and\
    \ \nresists record tampering. Guo et al. [227] offered a light-\nweight encryption\
    \ system with outsourced decryption. \nEncryption is the process of converting\
    \ an original text \nor data into an alternate version known as ciphertext in\
    \ \norder to ensure data confidentiality [32]. Although out-\nsourced decryption\
    \ reduces the data user’s computing \noverhead in an attribute-based encryption\
    \ system, the \nciphertext is uncontrollable, and the data owner cannot \nensure\
    \ the data’s accuracy. The proposal guarantees that \nciphertext is verifiable,\
    \ allowing the user to quickly verify \nfor accuracy. Moreover, using BC, the\
    \ authors enclosed \nthe hash value of the public parameter, the original and\
    \ \nmodified ciphertext, as well as the transformed key into a \nblock, allowing\
    \ for tamper-resistance against both inter-\nnal and external attackers [227].\n\
    Jang et al. [193] presented a novel BC with FC integra-\ntion architecture for\
    \ IIoT that prevents data falsification \nby changing existing centralized database\
    \ methods to \ndistributed types based on BC. They presented a tech-\nnique to\
    \ organically manage the IIoT ecosystem by split-\nting the proposed system structure\
    \ into cloud, FC, and \nIoT devices. Users are transferred to the cloud to assure\
    \ \nintegrity, stability, and scalability. The authors recom-\nmended using a\
    \ fog node to handle smart contracts and \nPage 13 of 36\nAlzoubi et al. Journal\
    \ of Cloud Computing           (2022) 11:80 \n \ntransaction verification to improve\
    \ network latency (the \nrequired time for data to move from one location to \n\
    another) and throughput. For 5G-enabled drone identifi-\ncation and flying mode\
    \ detection, Gumaei et al. [58] pro-\nposed a system that integrates a Deep Recurrent\
    \ Neural \nNetwork (DRNN) with BC. Raw RF signals from various \ndrones in various\
    \ flight modes are remotely detected and \ngathered on a cloud server to train\
    \ a DRNN model, which \nis subsequently distributed to edge devices for identifying\
    \ \ndrones and their flight modes. The suggested framework \nuses BC to ensure\
    \ data integrity and security [58]. With-\nout a tamper-proof audit, centralized\
    \ compute offloading \nposes a security risk. It was unable to protect against\
    \ false \nreporting, free-riding, spoofing, and repudiation attacks. \nAs a result,\
    \ Huang et al. [94] used BC technology to cre-\nate a decentralized parked vehicle\
    \ aided FC. Smart con-\ntract executions arrange and validate request posting,\
    \ \nworkload completion, task appraisal, and reward assign-\nment automatically.\
    \ To reduce security threats, network \noperations in computation offloading become\
    \ transpar-\nent, verifiable, and traceable [94].\nAvailability\nAvailability\
    \ is a critical component of security services, \nassuring that the system and\
    \ other apps continue to func-\ntion in the event of a malfunction or hostile\
    \ attack [192]. \nMuthanna et al. [204] proposed an IoT framework that \nuses\
    \ a fog node layer managed by an SDN network to \ndeliver high availability and\
    \ reliability for delay suscep-\ntible applications. BC was used to guarantee\
    \ that decen-\ntralization is done safely [204].\nCurrent Agri-Food supply chain\
    \ provenance and trace-\nability applications are controlled by a centralized\
    \ tech-\nnology, which allows the opportunity for unresolved \nissues and key\
    \ concerns, such as data integrity, manipu-\nlation, and single points of failure\
    \ [137]. The transac-\ntion records are fault-tolerant, immutable, transparent,\
    \ \nand fully traceable thanks to BCs [137]. Caro et al. [137] \nproposed AgriBlockIoT,\
    \ a completely decentralized, BC-\nbased traceability system for the Agri-Food\
    \ supply chain \nthat can seamlessly connect IoT devices that produce and \nconsume\
    \ digital data throughout the chain. They created \nand deployed such a use-case,\
    \ establishing traceability \nusing Ethereum and Hyperledger Sawtooth, two distinct\
    \ \nBC implementations [137].\nInsights and discussion\nDue to the immutability\
    \ of the BC, tampering with the \ndata kept in the system is unlikely, and participants’\
    \ \nidentities and data integrity may be assured. The data \nin the BC contains\
    \ the whole transaction history, which \nis hashed to keep the ledger secure.\
    \ As a consequence, \nBC can ensure that devices are connected (e.g., through\
    \ \nsmart contract-verified transactions). Fabricating data is \nalmost impossible\
    \ in the BC system due to the joint mon-\nitoring of linked fog nodes (i.e., the\
    \ attacker will have to \nalter all of the data on the connected fog nodes, in\
    \ order \nto fabricate the data). As a result, BC is protected by dis-\ntributing\
    \ data over a large number of linked fog nodes. \nAuthors proposed several architectural\
    \ designs to sup-\nport security in FC environment ([81, 84, 104, 120, 139]):\
    \ \nto protect against frauds ([73, 147, 149, 164, 168, 181, \n221–223]), to enhance\
    \ and achieve data confidentiality \n([48, 123, 192, 229]), to enhance and achieve\
    \ data integ-\nrity ([32, 58, 61, 87, 94, 127, 193, 227]), and to achieve \ndata\
    \ availability ([137, 192, 204]). The majority of the \nselected studies under\
    \ this category reported that BC can \nhelp against fraud attacks in FC, followed\
    \ by data integ-\nrity purpose, and the least purpose mentioned was to \nachieve\
    \ data availability.\nPrivacy\nMessages including identity, location, and other\
    \ personal \ndata are used by many apps and services. As a result, \nmaintaining\
    \ one’s privacy is critical. The rising demand \nfor FC systems is creating a\
    \ huge amount of sensitive \ndata. This section discusses the privacy-related\
    \ purposes \nincluding privacy support, identification privacy, data \nprivacy,\
    \ and location privacy.\nPrivacy support\nSeveral studies have reported that BC\
    \ can enhance the \nprivacy of FC, in general, as follows. The use of Consor-\n\
    tium BC in conjunction with the Transport Layer Secu-\nrity Protocol (TLSP) maintains\
    \ security and privacy \nwhile reducing the requirement for a third party [143].\
    \ \nPavithran et al. [169] proposed a privacy-preserving BC \narchitecture for\
    \ IoT. The proposed architecture is well-\nsuited to event-driven IoT devices,\
    \ and it makes use of \nthe edge and cloudlet computing paradigms, as well as\
    \ \nHierarchical Identity Based Encryption (HIBE) for pri-\nvacy protection, in\
    \ which the ciphertext comprises only \nthree group components, and decryption\
    \ needs only two \nbilinear map calculations. Uddin et  al. [162] suggested \n\
    a decentralized eHealth architecture based on BC tech-\nnology. To guarantee patient\
    \ privacy while outsourcing \nduties, a patient agent program uses a lightweight\
    \ BC \nconsensus mechanism and a BC leveraged task-offload-\ning algorithm [162].\n\
    Huang et al. [217] developed a fair three-party contract \nsigning mechanism based\
    \ on BC. To achieve fair trade, \nthe suggested structure employs the verified\
    \ encrypted \nsignature and the BC. As a result, if a dishonest party \naborts\
    \ after obtaining the present product, it will be pun-\nished financially [217].\
    \ Gai et al. [93] developed a permis-\nsioned BC-edge architecture for smart grid\
    \ networks to \nPage 14 of 36\nAlzoubi et al. Journal of Cloud Computing     \
    \      (2022) 11:80 \nsolve two fundamental smart grid concerns: security and\
    \ \nprivacy. To ensure the legitimacy of users, the authors \nemployed covert\
    \ channel authorization mechanisms and \ngroup signatures [93]. Smart contracts\
    \ on the BC were \nused to create an ideal security-aware approach. The effi-\n\
    cacy of the proposed technique has been validated for \nthe proposed model [93].\
    \ Guan et  al. [115] proposed a \nsmart grid scheme for BC-based dual-side privacy-pre-\n\
    serving multi-party computing. To assure the security \nof multi-party computing\
    \ in edge nodes (e.g., summing), \nthe scheme uses the data segmentation technique.\
    \ To \nimprove system security and eliminate reliance on trust-\nworthy third\
    \ parties, the consortium BC and smart con-\ntract were used [115].\nA decentralized\
    \ and privacy-preserving charging \nmethod for electric cars has been suggested\
    \ by [88]. The \nBC system is installed on distributed FC nodes, allow-\ning for\
    \ a decentralized and secure storage environment. \nThe privacy in the charging\
    \ process may be maintained \nby integrating mutual authentication, smart contracts,\
    \ \nand BC-based storage [88]. Nadeem et  al. [175], in the \nCRVANETs ecosystem,\
    \ presented an effective and secure \nBC scheme-based distributed cloud architecture.\
    \ Instead \nof using traditional cloud architecture, on-demand sens-\ning and\
    \ minimal cost were used to protect the drivers’ \nprivacy. The proposed architecture\
    \ provides drivers with \nthe necessary security for future autonomous driving\
    \ \n[175].\nQu et  al. [70] presented the FL-Block system, which \nallows end\
    \ devices to communicate local learning \nupdates with a BC-based global learning\
    \ model that is \nvalidated by miners. The FL-Block, which is based on \nthis,\
    \ allows autonomous machine learning without the \nneed for a central system utilizing\
    \ a BC PoW consensus \ntechnique to manage global coordination [70]. Zhang \n\
    et  al. [116] presented BPAF, a BC-enabled, secure, and \nprivacy-preserving authentication\
    \ protocol for FC-based \nIoT devices, which achieves secure fog node authentica-\n\
    tion without infringing on the privacy of authenticated \nusers during the authentication\
    \ phase. Hyperlegder Fab-\nric was chosen because it is more scalable and efficient\
    \ \nthan Bitcoin and Ethereum [116].\nIdentification\nIdentity privacy guarantees\
    \ that the identity of a peer or \nnode is hidden from the rest of the network.\
    \ BC-based \nidentity management integrating access control method \nwas developed\
    \ by [209]. Self-certified cryptography is \nused to perform network entity authentication\
    \ and reg-\nistration. A Bloom filter-based access control system \nwas also created\
    \ and linked with identity management. \nFor secure transmission, a lightweight\
    \ secret key agree-\nment protocol based on a self-authenticated public key \n\
    was also created. These techniques operate together to \noffer authentication,\
    \ auditability, and secrecy for IIoT \ndata [209]. To improve the performance\
    \ and practical-\nity of FC, Jung et al. [174] suggested a user-friendly FC \n\
    architecture. According to the recommended design, cli-\nents enroll their devices\
    \ in the fog portal which acts as \nan intermediary between the resources of each\
    \ local net-\nwork and the IoT service [174].\nBC with FC integration can solve\
    \ the problem of iden-\ntifying, authenticating, and verifying healthcare IoT\
    \ \ndevices in a decentralized context [172]. Accordingly, \nShukla et al. [172]\
    \ proposed a new solution to the afore-\nmentioned dilemma, integrating FC and\
    \ BC. This solu-\ntion used the Advanced Signature-based Encryption \n(ASE) method\
    \ (a type of digital signature that uses an \nenhanced certificate to verify the\
    \ signer) for healthcare \nIoT device authentication [172]. Tang et  al. [136]\
    \ used \na combination of BC and FC to verify each fog server’s \nidentity and\
    \ create a secure offloading system. A BC-\nbased offloading mechanism was provided\
    \ to reduce \nquery time and offload security for potential fog servers. \nA BC-based\
    \ technique, on the other hand, has inherent \nlimits. All transactions should\
    \ be recorded to a single \ncopy BC database on each server. If a fog server can\
    \ han-\ndle various queries at once, there will be a large amount \nof synchronization\
    \ overhead as a result of this [136].\nWang and Jiang [218] proposed a 2-adic\
    \ ring iden-\ntity authentication system that inherits the 2-adic ring’s \nstrong\
    \ key distribution and great validation efficiency, \nand this algorithm includes\
    \ trading node supervision and \nidentity hiding functions by design. The consortium\
    \ BC \nwas used for this system [218]. Yang et al. [61] looked at \nhow to manage\
    \ identifiers effectively with BC technol-\nogy in a named data networking context.\
    \ By establishing \na transaction using the identification’s content name, the\
    \ \nsuggested system does not reveal a specific user’s identi-\nfier. Using an\
    \ identifier split management approach, the \nidentifier may be safely kept and\
    \ controlled [61]. Zhu \nand Badr [129] proposed a hybrid IoT architecture that\
    \ \ncombines FC with a trustless IoT environment to assure \nsecurity. Users may\
    \ easily manage smart devices by \nestablishing tamper-proof digital identities\
    \ and building \na new class of authentication and authorization methods \nfor\
    \ the IoT by enabling this architecture with BC-based \nsocial networks. Fog nodes\
    \ may also manage all IoT enti-\nties’ identities and relationships, as well as\
    \ implement IoT \nsecurity measures [129].\nData\nTo protect data privacy, we\
    \ must ensure that only author-\nized nodes have access to the data. Data privacy\
    \ is \nanother important issue for FC [60]. Lautert et al. [146] \nproposed architecture\
    \ for tracking data provenance in a \nPage 15 of 36\nAlzoubi et al. Journal of\
    \ Cloud Computing           (2022) 11:80 \n \ndistributed FC over a large region.\
    \ Using software ser-\nvices that maintain the information consistent across all\
    \ \ninterested parties in the cloud, the architecture presented \nin this article\
    \ allows quick and accurate data provenance \nfor clients operating in the FC.\
    \ The suggested architec-\nture is based on the well-known W3C Prov provenance\
    \ \nconcept, which makes the framework easier to use. The \nauthors created a\
    \ client and web services application that \nallows users to store and exchange\
    \ provenance informa-\ntion in a BC using open standards [146]. To protect IoT\
    \ \ndata, Liu et  al. [188] presented a decentralized access \ncontrol mechanism\
    \ based on BC with FC integration. To \nencrypt IoT data before uploading to the\
    \ cloud, this tech-\nnique employs mixed linear and nonlinear spatiotempo-\nral\
    \ chaotic models, as well as the least significant bit. The \nevaluation showed\
    \ that this mechanism can alleviate the \nproblem of a single point of failure\
    \ and ensures the pri-\nvacy of IoT data.\nIn vehicular fog, there are still several\
    \ issues with the \nsecure and reliable transmission of sensory data. To \naddress\
    \ these concerns, Kong et  al. [97] proposed a \nverifiable sensory data collecting\
    \ and sharing method \nin vehicular FC using a permissioned BC. By integrat-\n\
    ing the homomorphic 2-disjunctive normal form cryp-\ntosystem with an identity-based\
    \ signcryption method, \nthe proposed technique achieves the safe and verifiable\
    \ \ncomputation of the average and variance of the collected \nvehicular sensory\
    \ data during the data collecting phase. \nConcurrently, the author used a permissioned\
    \ BC to \nmaintain a tamper-proof record of the sensory data col-\nlected, ensuring\
    \ reliable and efficient data sharing [97].\nLocation\nThe third component of\
    \ FC privacy that should be \nconsidered is location privacy. The location of\
    \ nodes \ntransmitting or receiving data must be known only by \nauthorized nodes\
    \ [192]. Li et  al. [198] suggested a col-\nlaborative-ride hailing service that\
    \ preserves privacy \nusing BC-assisted vehicular FC. It anonymously veri-\nfies\
    \ users and only reveals a targeted user if all collabo-\nrating service providers\
    \ are present, with no need for a \ntrusted authority. The authors used a consortium\
    \ BC to \ntrack c-ride data and build smart contracts to connect \npassengers\
    \ and drivers. Location authentication, driver \nscreening, and destination matching\
    \ are all supported via \nprivate proximity tests and query processing. They also\
    \ \ntweaked Zerocash to enable anonymous payments and \nfight against double-spending\
    \ assaults [198].\nKang et al. [83] developed a privacy-preserving pseu-\ndonym\
    \ system with hierarchical architecture. Pseu-\ndonyms are created in real-time\
    \ and supplied to cars. \nSafe communication methods for privacy preserva-\ntion\
    \ are intended for secure and effective pseudonym \nmanagement. The authors also\
    \ demonstrated a situa-\ntion-aware pseudonym shifting game for automobiles \n\
    that uses context awareness to alter pseudonyms. The \nsuggested architecture\
    \ enables safe communication and \nprivacy preservation for cars, according to\
    \ the security \nanalysis [83].\nPatwary et  al. [165] suggested a distributed\
    \ location-\nbased device-to-device mutual authentication system \nfor fog devices\
    \ at the FC layer, without relying on an \nintermediate third-party system. Using\
    \ Ethereum smart \ncontracts, they evaluated BC technology to execute \nthe mutual\
    \ authentication process. Only a few keys \nare required by the fog devices for\
    \ authentication. As a \nresult, the suggested approach satisfied security criteria\
    \ \nsuch as data integrity, confidentiality, mutual authentica-\ntion, and device\
    \ anonymity. The suggested technique is \ncomputationally efficient, according\
    \ to the performance \nevaluation. However, due to the location validation pro-\n\
    cedures conducted, the suggested system needs greater \ncomputing overhead in\
    \ some situations than previous \napproaches [165].\nInsights and discussion\n\
    For BC, privacy-preserving strategies based on encryp-\ntion approaches are evolving,\
    \ allowing users to become \nanonymous and have the ability to manage their personal\
    \ \ndata (e.g., what, whom, and when personal data can be \nshared in each transaction).\
    \ Authors proposed several \nmechanisms to enhance privacy ([70, 88, 115, 116,\
    \ 162, \n169, 217]); to enable and enhance identification ([61, 129, \n136, 172,\
    \ 174, 209, 218]), to ensure data privacy ([97, 146, \n188]), and to enhance location\
    \ privacy ([83, 165, 192, \n198]). The majority of the selected studies under\
    \ this cat-\negory reported that BC can enhance the level of privacy, \nin general,\
    \ followed by identification, and the least pur-\npose mentioned was to achieve\
    \ data privacy.\nAccess control\nThe tactics or strategies (countermeasures) employed\
    \ \nto ensure security goals are referred to as access control \n[12]. Secure\
    \ access to data can be ensured using BC in \ncloud-FC-IoT architecture [186].\
    \ This section discusses \naccess control-related purposes including authentication,\
    \ \nauthorization, and key management.\nAuthentication\nAuthentication makes sure\
    \ users are who they say they \nare. Malicious nodes, fraudulent communications,\
    \ and \nunregistered entities are all targets for authentication \ntechniques\
    \ [211]. Authentication has been identified as a \nsignificant problem in FC [14].\
    \ Hewa et al. [52] offer a BC \nwith FC integration security service model that\
    \ runs on \nFC. Due to the use of BC, the proposed model ensures \nPage 16 of\
    \ 36\nAlzoubi et al. Journal of Cloud Computing           (2022) 11:80 \nprivacy\
    \ and authentication. In comparison to current sys-\ntems, the suggested model\
    \ demonstrated a higher degree \nof security and performance. Secure real-time\
    \ data on \nitems in transit and supply chains necessitates bandwidth \nwith capacity\
    \ that the present infrastructure cannot pro-\nvide. To address this challenge\
    \ Jangirala et al. [121] pro-\nposed LBRAPS which is a new lightweight BC-enabled\
    \ \nRFID-based authentication mechanism. Only one-way \ncryptographic hash, bitwise\
    \ exclusive-or, and bitwise \nrotation operations are used in LBRAPS [121]. When\
    \ a \nregional fog/cloud demands a lot of verification, it causes \ntraffic problems\
    \ and delays in the master fog/cloud. Kwon \net  al. [199] proposed a multi-fog/cloud\
    \ authentication \nmethod based on BC to tackle the problem. To overcome \nthis\
    \ issue, this system distributes an excessive amount of \nauthentication requests\
    \ around the fog/cloud region. By \nunifying dispersed multi-fog/cloud throughout\
    \ the BC \nnetwork, it increases authentication times [199].\nYao et  al. [75],\
    \ for distributed vehicular fog services, \ndeveloped a BC-assisted Lightweight\
    \ Anonymous \nAuthentication (BLA) approach. BLA can benefit from \nthe following:\
    \ 1) Implementing a flexible cross-data \ncenter authentication system in which\
    \ a vehicle can \nchoose whether or not to be authenticated while entering \n\
    a new vehicular fog data center. 2) Establishing anonym-\nity and entrusting vehicle\
    \ users with the task of main-\ntaining their privacy. 3) It is lightweight due\
    \ to the lack \nof interaction between cars and service managers, as well \nas\
    \ the elimination of communication between SMs dur-\ning the authentication process,\
    \ resulting in a considerable \nreduction in communication delay. BLA provides\
    \ these \nbenefits by integrating contemporary cryptography and \nBC technology\
    \ uniquely [75]. To establish a secure smart \nvehicle system, Baker et al. [152]\
    \ presented a lightweight \nsystem that uses BC for authentication. To develop\
    \ the \nsystem, the authors used 5G and federated learning in \nFC. When compared\
    \ to the present cloud-based frame-\nwork, the proposed system showed a high enhancement\
    \ \nin security level.\nAuthorization\nThe authorization ensures access to a resource\
    \ only for \nauthenticated users. Authorization is another important \naspect\
    \ of FC security [2]. The use of the BC idea and the \nCiphertext Policy Attribute-Based\
    \ Encryption (CP-ABE) \nmethod, as well as their integration, allows fog nodes\
    \ \nin the same fog federation to conduct the authorization \nprocess in a distributed\
    \ way [135]. A user can have sev-\neral features under the CP-ABE method, and\
    \ each feature \ncan be shared by several users at the same time [32]. Silva \n\
    et  al. [216] presented a software architecture based on \nFC to make medical\
    \ record management simpler. In this \ndesign, BC is utilized to allow fog nodes\
    \ to conduct the \nauthorization procedure in a distributed way. As a result,\
    \ \nthe traditional authentication architecture’s single point \nof failure is\
    \ eliminated, allowing each fog node to func-\ntion independently and autonomously\
    \ [216].\nTo protect data and networks in vehicle FC, Kang et al. \n[96] incorporated\
    \ BC into the authorization procedure. \nThis integration improves data sharing\
    \ and integrity by \nensuring data traceability, protecting data security shar-\n\
    ing, and mitigating data security concerns associated \nwith centralized data\
    \ storage through the automated exe-\ncution of smart contracts [96]. Gai et al.\
    \ [93] suggested \na paradigm that combines BC with edge computing in \nsmart\
    \ grid networks. Using the BC, this model adds \nanother authorization level.\
    \ Furthermore, it improves \nsecurity by utilizing secure communication methods.\
    \ \nAlso, because the model uses group signatures and the \ngroup members don’t\
    \ know each other, the level of pri-\nvacy is increased [93]. Khaydaraliev et al.\
    \ [182] presented \na decentralized IoT access control solution. To safeguard\
    \ \ndevice access, the system uses Ethereum Smart Con-\ntracts. The evaluation\
    \ assumes an increase in IoT device \naccess control levels.\nKey management\n\
    Data on the FC must be protected using a variety of \ncryptographic procedures,\
    \ which necessitates the use \nof keys to allow those cryptographic operations;\
    \ hence, \nsome form of encryption/access control is required [164]. \nChen et al.\
    \ [112] proposed a BC-based key management \nscheme in FC-based IoT systems to\
    \ manage secure keys \nand develop secure group channels. The designated \nprover\
    \ PoW (DPPoW), the enhanced PoW mechanism, is \nused in the proposed main control\
    \ scheme. This scheme \nachieves data recovery, conditional anonymity, non-repu-\n\
    diation, conditional anonymity, and resource authentica-\ntion [112]. Lei et al.\
    \ [56] presented a system for securely \nmanaging keys in a heterogeneous vehicle\
    \ network. Secu-\nrity managers play a significant role in the system by col-\n\
    lecting vehicle departing information, enclosing blocks \nto transport keys, and\
    \ then performing rekeying to cars \nwithin the same security domain. The framework’s\
    \ first \ncomponent is a new network architecture based on a \ndecentralized BC\
    \ structure. The BC was presented to \nmake distributed key management in diverse\
    \ vehicle \ndomains more straightforward. In the second section of \nthe framework,\
    \ the dynamic transactions receivable is \nemployed to reduce key transmission\
    \ delay during vehi-\ncle handover [56].\nWang et  al. [122] proposed a BC-based\
    \ mutual \nauthentication and key agreement protocol for smart \ngrid systems.\
    \ The protocol may provide efficient key \nmanagement and conditional anonymity\
    \ without the \nuse of other complicated cryptographic primitives by \nPage 17\
    \ of 36\nAlzoubi et al. Journal of Cloud Computing           (2022) 11:80 \n \n\
    utilizing BC [122]. Arun et al. [144] created a method \nthat permits authentication\
    \ between edge users and \nfreshly added fog servers. The technique instructs\
    \ the \nfog servers to keep one secret key per user, with the \nuser performing\
    \ hash-based encryptions and decryp-\ntions. When sensitive data is transmitted\
    \ between users \nand nodes, the proposed system uses the BC method to \nensure\
    \ data integrity. All edge and fog nodes are sur-\nrounded by a secure system,\
    \ which records transactions \nbetween nodes in blocks that are hashed. Any malicious\
    \ \nedge server that enters the network is detected using \nthe ledger kept at\
    \ the nodes [144]. Tomar and Tripathi \n[189] suggested a key exchange protocol\
    \ and mutual \nauthentication mechanism based on BC with FC inte-\ngration architecture.\
    \ To ensure message security, the \nshared key is created between the FC, smart\
    \ meter, and \ncloud server. This mechanism’s examination reveals an \nincrease\
    \ in the amount of access control.\nInsights and discussion\nMalicious activities\
    \ are detected using BC-based ser-\nvices. When a hostile attacker changes the\
    \ data in a \nblock, the block’s hash value changes and the block turn \nto be\
    \ invalid. By facilitating data access online, the usage \nof BC, on the other\
    \ hand, may ease the data analytics \nlifetime. Certified users can have access\
    \ to data without \nhaving to go through additional checks if various units \n\
    in a company are involved in a shared BC, for example. \nAuthors provides several\
    \ mechanisms to ensures and \nenhance authentication ([52, 75, 121, 130, 171,\
    \ 183, 199]), \nto enable and enhance authorization ([93, 96, 135, 182, \n216]),\
    \ and provide key management ([56, 112, 122, 144, \n164, 189]). The majority of\
    \ the selected studies under this \ncategory reported that BC can enhance authentication\
    \ in \nFC, followed by data key management, and the least pur-\npose mentioned\
    \ was to enhance authorization.\nTrust management\nTrust is defined as the degree\
    \ to which two nodes accept \neach other for a certain activity [228]. A technique\
    \ for \nbuilding a trust connection between entities is trust man-\nagement. Trust\
    \ management is critical, but it is also very \nenergy-intensive, making it unsuitable\
    \ for resource-con-\nstrained devices like those that make up the IoT’s sensing\
    \ \nlayer [151]. It may be thought of in two ways: as a process \nof making an\
    \ entity trustworthy for other entities, and \nas a process of evaluating other\
    \ entities’ trustworthiness \nfrom the perspective of a given entity [230]. This\
    \ section \ndiscusses the trust management-related purposes includ-\ning trust\
    \ support, reliability, transparency, reputation, \nQoS, and payment management.\n\
    Trust support\nUsing BC technology might give several advantages, \nincluding\
    \ a trustworthy workplace [57, 109]. The capacity \nof the BC system to work successfully\
    \ in a P2P environ-\nment without the involvement of a trusted third party is\
    \ \nreferred to as trustworthiness or trust-free. It is becom-\ning more possible\
    \ to transcend the constraints of tradi-\ntional trust management techniques,\
    \ thanks to the rise of \nBC as an immutable ledger technology and the promise\
    \ \nof trustless smart Oracles and smart contracts [160].\nCinque et al. [151]\
    \ demonstrated how to use BC tech-\nnology to create a federated trust management\
    \ archi-\ntecture in which fog/edge nodes help with trust value \nprovisioning\
    \ and calculation for sensor nodes. Their \ndesign has been subjected to a qualitative\
    \ assessment of \nthe degree of protection it provides. They built a proof-\n\
    of-concept on top of the Hyperledger3 platform, which \nis an umbrella project\
    \ for open-source BCs and related \ntools [151]. In their work, Kochovski et al.\
    \ [160] deployed \na new trust management technique to handle extremely \ndynamic\
    \ and complicated distributed smart applica-\ntion scenarios. This technique counts\
    \ on the traceability, \ntransparency, and autonomy aspects of BC-based ser-\n\
    vices. By opportunistically combining BC with SDN and \ncontainer orchestration\
    \ technologies, Ceccarelli et  al. \n[103] studied how to handle dispersed trust\
    \ information \nand allow trusted configuration operations in the IIoT. \nThey\
    \ concentrated on how the widespread deployment of \nsuch technologies may make\
    \ specialists’ interventions on \nindustrial equipment both easier and more reliable.\
    \ They \nproposed the creation of a software architecture to ease \nthe management,\
    \ setup, and evaluation of IIoT systems \nfor this purpose [103].\nDewanta and\
    \ Mambo [113] developed a bidding-price-\nbased transaction for vehicular FC service\
    \ in rural areas \nto establish mutual trust among vehicles. It is impossi-\n\
    ble to provide a reliable vehicular FC operation without \nconfidence between\
    \ vehicles. Therefore, the proposed \napproach facilitates mutual trust between\
    \ the client and \nserver vehicles, as well as payout assignment depending \n\
    on transaction appraisal, without the use of a trustworthy \nthird party to function\
    \ as a validating agent [113]. Gao \net al. [74] looked at how to use a mix of\
    \ BC and SDN to \nrun Internet of vehicles systems under 5G and FC para-\ndigms.\
    \ Due to the ubiquitous processing that happens, \nthis proposal helps to ease\
    \ the burden on the controller \nby sharing management duties between the BC and\
    \ the \nSDN [74].\nJayasinghe et  al. [219] proposed TrustChain, a new \nprivacy-preserving\
    \ BC that combines the capabilities of \nBCs with trust principles to solve problems\
    \ with exist-\ning BC designs. TrustChain is built in such a way that it \nonly\
    \ saves information that the users have permitted to \nPage 18 of 36\nAlzoubi et al.\
    \ Journal of Cloud Computing           (2022) 11:80 \nstore. Techniques such as\
    \ Zero-Knowledge Proof (ZKP), \nencryption, and anonymization were used to keep\
    \ sen-\nsitive information hidden while interacting with key \nstakeholders and\
    \ assessing trust without compromising \nprivacy [219]. Wu et  al. [107] presented\
    \ the BlockEdge \nframework, a BC-based framework that allows edge-cen-\ntric\
    \ networks to trust collaborative services. BlockEdge \nuses decentralized accountability\
    \ and automated incen-\ntives to encourage additional distributed edge nodes to\
    \ \nfunction as detectors in verifications. Detectors can earn \nincentives if\
    \ they find an untrustworthy outcome, and \nmisbehaving stakeholders can be held\
    \ liable for damage \nor accuracy. Furthermore, all stakeholders may benefit \n\
    from the creation of a trust reputation system, which can \nserve as an authoritative\
    \ reference for the selection nodes \nwithout relying on a centralized authority\
    \ [107].\nReliability\nTo ensure the reliability and credibility of source data\
    \ in \nFC, Fan et al. [114] suggested a BC-based scheme. This \nscheme, in particular,\
    \ assists in ensuring that data is \nimmutable during handling and transmissions,\
    \ as well as \nidentifying malicious nodes. An attribute-based signature \nwas\
    \ used to ensure lightweight in this method. This sig-\nnature makes authentication\
    \ easier, and BC enables the \ncreation of a secure communication channel that\
    \ reduces \nthe possibility of data tampering and allows for real-time \nsynchronization\
    \ [114].\nBonadio et  al. [190] proposed an integrated system \narchitecture based\
    \ on the FC, which was used to estab-\nlish complete context awareness for the\
    \ vehicular ad hoc \nnetworks and, as a result, to react to traffic anomalies.\
    \ Hu \net al. [156] proposed an organic agriculture supply chain-\nstyle trust\
    \ architecture that has a significantly superior \ncost-to-efficiency ratio. Furthermore,\
    \ they split all stake-\nholders into four roles based on this style scenarios,\
    \ \nproviding a unique consensus technique to control infor-\nmation flow [156].\
    \ Xu et al. [220], in-network computing \nsituations, proposed a unique BC-based\
    \ technique for \nshielding clients from doubtful services. The BC was cre-\n\
    ated to keep track of all the legitimate states of edge ser-\nvice providers and\
    \ off-chain IoT services, allowing them \nto eliminate untrustworthy or rejected\
    \ services Via sup-\nplier authentication and service validation [220].\nThe digital\
    \ cryptocurrency GlucoCoin was used to \nbuild an incentive scheme to encourage\
    \ patients to con-\ntribute fresh data [206]. A BC is used in such a system to\
    \ \nperform smart contracts, such as automating sensor pur-\nchases or rewarding\
    \ users who contribute to the system \nby contributing their data. The suggested\
    \ system enables \nthe crowdsourcing of patient data as well as the creation \n\
    of unique mobile health (mHealth) apps for monitoring, \ndiagnosing, analyzing,\
    \ and implementing public health \nactivities that can help in disease management\
    \ [206].\nTransparency\nLautert et  al. [146] proposed architecture for tracking\
    \ \ndata provenance in a distributed FC over a large region. \nLocalized fog nodes\
    \ have control over what is made pub-\nlic on the cloud, whereas BCs give transparency.\
    \ Mondal \net al. [80] suggested an IoT architecture inspired by BC \nfor establishing\
    \ a food supply chain that is transparent. \nThe design employs a proof-of-object-based\
    \ authentica-\ntion system, similar to the PoW technique. At the physi-\ncal layer,\
    \ a Radio Frequency Identification (RFID)-based \nsensor was integrated, and at\
    \ the cyber layer, BC was \nused to complete the architecture. The RFID gives\
    \ the \nproduct a unique identification as well as sensor data, \nwhich helps\
    \ with real-time quality control. At each loca-\ntion, the BC architecture assists\
    \ in the creation of a tam-\nper-proof digital database of food products [80].\
    \ The use \nof BC technology may improve transparency, informa-\ntion flow, and\
    \ managerial capacity, allowing farmers to \nconnect more effectively with other\
    \ parts of the supply \nchain, particularly consumers [184].\nUtility providers’\
    \ interactions with their consum-\ners over power usage have improved since the\
    \ advent \nof smart grid technologies. However, because the read-\nings are done\
    \ through the Internet, there is a risk that \nthe data will be compromised if\
    \ it falls into the wrong \nhands. Furthermore, because they are not privy to\
    \ the \ndata, most consumers have no idea why they are paying \nsuch high prices\
    \ or which gadgets use the most power. \nAccordingly, Gao et al. [62] developed\
    \ the sovereign BC \ntechnology, which offers transparency and provenance to \n\
    address the issues described above. A smart contract was \nalso created, which\
    \ executes pre-defined operations to \nestablish a trust-based platform between\
    \ network mem-\nbers. This platform allows the user to monitor how the \npower\
    \ is utilized and it also gives a platform where nei-\nther side can manipulate\
    \ the situation [62]. Ngabo et al. \n[202] suggested a BC-based security system\
    \ that uses an \nelliptic curve cryptography digital signature to enable a \n\
    decentralized ledger database, providing transactional \ntransparency, immutable\
    \ safety, and preventing tamper-\ning with health records at the FC layer.\nReputation\n\
    A reputation is an opinion about another thing held by \nan object (human or machine)\
    \ [228]. Almost all techni-\ncal and non-technical systems rely heavily on the\
    \ reputa-\ntion of trust management [63]. Debe et al. [72] proposed \na decentralized\
    \ trust model to preserve the reputation \nof publicly available fog nodes. Users’\
    \ views regarding \ntheir previous encounters with public fog nodes are taken\
    \ \nPage 19 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022)\
    \ 11:80 \n \ninto account while maintaining the reputation. The sug-\ngested model\
    \ is constructed using public Ethereum BC \nand smart contracts technologies to\
    \ allow distributed \ntrustworthy service provisioning between public fog \nnodes\
    \ and IoT devices [72]. Iqbal et al. [95] proposed a \nsafe FC paradigm in which\
    \ roadside units transfer duties \nto adjacent fog vehicles based on reputation\
    \ scores kept \non a distributed BC ledger. Accordingly, the decision \nmodel\
    \ can choose from a pool of trustworthy cars for any \nincoming jobs [95].\nSun\
    \ et  al. [170] proposed a reputation-based crowd-\nsourcing BC framework. A user,\
    \ FC, and cloud make \nup the three-layer chain architecture. This architecture\
    \ \npaired with the Hyperledger Fabric consortium BC net-\nwork can provide privacy\
    \ protection (i.e., the channel \nmechanism ensures transaction anonymity - members\
    \ \noutside the system cannot see all details on the channel, \nincluding purchases,\
    \ members, and channel content). \nThis architecture can also provide reputation\
    \ manage-\nment. The legal identity is a representation of the entity’s \npast\
    \ conduct. Its reputation status is revised regularly \nbased on recent activity.\
    \ Adversarial can be avoided by \nlowering the trust status of all service members\
    \ who \nengage in untruthful behavior [170].\nQuality of service\nUnderstanding\
    \ BC with FC integration is essential for \nenhancing cyber-physical systems in\
    \ terms of Quality of \nService (QoS) (a definition or estimation of a service’s\
    \ \noverall performance [64, 153]. Because of the IoT’s rapid \ngrowth, ensuring\
    \ QoS over FC networks may be difficult. \nQoS measurement approaches have traditionally\
    \ relied \non a centralized organization that gathers data and ana-\nlyzes service\
    \ performance with the help of specialized \nagents [63]. Traditional approaches,\
    \ on the other hand, \nare incapable of coping with a diverse and distributed\
    \ \nset of services like the IoT. We must be able to gather, \nretrieve, and update\
    \ proper quality data regularly to \nmanage QoS in distributed services [156].\
    \ The BC par-\nticipant approach guarantees the data necessary to assess \nthe\
    \ quality of IoT services is reliable. To offer great QoS \nin highly mobile networks,\
    \ secure and trustworthy trans-\nmission is essential [156].\nTo solve difficulties\
    \ related to QoS and data storage, \nBouachir et  al. [64] suggested industrial\
    \ cyber-physical \nsystems based on BC with FC integration. Distributed \ndata\
    \ storage and management over the FC, according \nto the author, are potential\
    \ answers to data storage and \nQoS issues [64]. As an approach to eHealth services,\
    \ \nIslam et al. [159] suggested a novel BC with FC integra-\ntion management\
    \ system focused on the creation of \nclustered-based extracted features for the\
    \ detection of \nhuman activities. Bag-of-features, based on Speed-Up \nRobust\
    \ Features (SURF), were utilized in the proposed \nsystem to pick interest spots\
    \ for human actions in films. \nThe suggested system’s efficiency and accuracy\
    \ are \nimproved by using the Error-Correction-Output-Codes \n(ECOC) method, which\
    \ allows for classifying multi-class \nactions [159].\nTo build confidence in\
    \ smart apps and the underly-\ning decentralized system, Kochovski et  al. [160]\
    \ looked \nat several factors that must be evaluated and applied. \nWhile certain\
    \ trust characteristics can be gained through \nexpensive on-BC activities, others\
    \ can be achieved using \nless expensive off-BC techniques, such as the usage\
    \ of \ndata QoS monitoring. To attain good QoS of smart apps, \nthe authors use\
    \ off-BC QoS monitoring data acquired via \na trustless Smart Oracle, as well\
    \ as a Markov decision-\nmaking mechanism that rates the various FC/cloud node\
    \ \nproviders to pick the best fog node for the AI component \nof the application’s\
    \ deployment [160]. Debe et  al. [76] \nproposed a new system for monetizing BC-based\
    \ ser-\nvices and automating bitcoin payment for services deliv-\nered by fog\
    \ nodes. The suggested method is trustworthy, \ndecentralized, and automated,\
    \ which enhances QoS and \ncustomer satisfaction. The suggested approach governs\
    \ \ninteractions between FC and devices using the Ethereum \nBC and its inherent\
    \ smart contract capabilities [76].\nPayment\nThe incentive and penalty systems\
    \ utilized by the fog \nnode for BC’s participants are referred to as payment,\
    \ \nin this context. Debe et al. [91] proposed a decentralized \nreverse-bidding\
    \ method based on BC and smart con-\ntracts’ main characteristics. They created\
    \ a system that \nallows devices to start the bidding process by request-\ning\
    \ services from nearby fog nodes that respond with \nbid proposals. The suggested\
    \ method guarantees that all \nfog nodes on the network compete for the bid fairly\
    \ and \nequitably. The automatic payments after the service are \nincluded in\
    \ the bidding procedure. Ethereum smart con-\ntracts were used to implement this\
    \ solution. This method \nalso included a fog node’s reputation system, as well\
    \ as \na penalty for nodes that misbehave [91]. Moreover, Liu \net  al. [100]\
    \ proposed distributed BC-inspired energy \ncoins and data coins.\nBy utilizing\
    \ the advantages of smart contracts of BC, \nJain and Kumar [213] created a fair\
    \ and trustworthy \nincentive mechanism that promotes sellers and buyers \nto\
    \ transact. Various economic attributes, such as budget \nbalance, personal reasoning,\
    \ and honesty, are satisfied by \nthis mechanism. The incorporation of the BC\
    \ and FC pre-\ncludes the manipulation of trade-related data. The sug-\ngested\
    \ technique was shown to be effective in identifying \nthe winner and pricing\
    \ model. Shukla et al. [196] demon-\nstrated a BC-based smart energy trading algorithm\
    \ and \nPage 20 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022)\
    \ 11:80 \na BC with FC integration-based system for P2P energy \ntrading. The\
    \ proposed algorithm creates a completely \ntrustworthy, low-latency communication\
    \ network that \nallows prosumers to trade energy inside their neighbor-\nhood,\
    \ based on the evaluation results. Boualouache et al. \n[51] developed a monetary\
    \ reward strategy for 5G-ena-\nbled FC-based vehicle location privacy preservation.\
    \ This \nsolution makes use of a consortium BC in the FC layer \nas well as smart\
    \ contracts to assure pseudonym changing \nprocedures and lower vehicle monetary\
    \ expenses. This \nscheme provides appropriate monetary cost manage-\nment and\
    \ private verification of blocks, according to the \nevaluations.\nInsights and discussion\n\
    Because each node in the consortium BC, for example, \nhas access to the data\
    \ and business norms, the BC’s trans-\naction may be trusted. The BC ledger can\
    \ now be used to \nregister and exchange nearly anything without the need \nfor\
    \ a single authority. As a result, a trustworthy and suc-\ncessful network can\
    \ be initiated. Moreover, by assuring \nthat a fog node is in command of its identification,\
    \ the \nimmutability of BC gives the necessary reliability and \nconfidence for\
    \ corporations among nodes. The basic idea \nis to provide fog nodes identifications\
    \ that can be verified \nwith BC throughout their entire cycle. A record or time-\n\
    line is created by a system with an identification, which is \nmanaged by a BC.\
    \ The vast bulk of BCs is open-source, \nmeaning that nodes can see and use their\
    \ transactions. \nUsers may look up the record of all transactions in the \ncase\
    \ of Bitcoin thanks to BC transparency. As a result, \nthere will be more openness,\
    \ which will improve pro-\nductivity. Bitcoin, for example, is changed when a\
    \ large \nmajority of network users agree that there is a need for \nupdated code\
    \ that sounds beneficial. Authors proposed \nseveral strategies to ensure trust\
    \ support ([57, 74, 103, \n107, 109, 113, 151, 160, 219]), to enable reliability\
    \ ([114, \n156, 190, 206, 220]), to enable transparency ([62, 80, \n146, 184,\
    \ 202]), to increase reputation ([63, 72, 95, 170]), \nenhance QoS ([63, 64, 76,\
    \ 153, 156, 159, 160]), and secure \npayment ([51, 91, 100, 196, 213]). The majority\
    \ of the \nselected studies under this category reported that BC can \nenhance\
    \ trust level, in general, in FC, followed by QoS \npurpose, and the least purpose\
    \ mentioned was to achieve \na high reputation.\nData management\nAnother issue\
    \ of FC is the data management due to the \nheterogeneity and distributed nature\
    \ of IoT devices in \nthe FC environment [14]. This section explains how BC \n\
    with FC integration may help to solve several data man-\nagement problems, focusing\
    \ on data management-related \npurposes including storage, sharing, and validation.\n\
    Storage\nThe transitory fog storage is capable of briefly storing \ndata acquired\
    \ from IoT devices, allowing IoT devices to \nsave frequently requested data and\
    \ accomplish fast data \nupdates [19]. Data identification, aggregation, and integ-\n\
    rity should be used to meet privacy and security needs \nfor data storage [41].\
    \ Cech et  al. [43] deployed an FC \nnode with BC capability to solve the challenge\
    \ of stor-\ning and securely exchanging sensor data. The authors \nused the MultiChain\
    \ BC framework to connect it to the \nvirtualized modular FC gateway. Two new\
    \ protocols for \ndata storage and access control were built and thoroughly \n\
    explored in a fog node. The first allows data to be shared \nwith chosen organizations\
    \ over a public BC channel. The \nsecond allows the BC to store streaming real-time\
    \ sensor \ndata. So, this system enables making non-sensitive mate-\nrial freely\
    \ available while restricting access to the sensi-\ntive sections [43]. Ren et al.\
    \ [178] developed a technique \ncombining BC and regeneration coding to increase\
    \ the \nsecurity and dependability of stored data. Hybrid stor-\nage architecture\
    \ and model were developed. A global \nBC in the cloud service layer was then\
    \ created, taking \nfull advantage of the benefits of edge network devices \n\
    and cloud storage servers. The regeneration coding was \nused to increase the\
    \ data storage reliability even further. \nFurthermore, the local BC was created\
    \ on IoT termi-\nnals, allowing for the second verification. After the data \n\
    is saved in the cloud, it can be compared and validated \nagainst the data in\
    \ the local BC, enhancing data security \neven further [178].\nBy combining FC\
    \ and the BC, Chen et al. [163] created \na three-tier architecture-based data\
    \ aggregation system \nthat provides significant support for accomplishing effi-\n\
    cient and safe data gathering in smart grids. They used \nPaillier encryption,\
    \ batch aggregation signatures, and \nanonymous authentication to create a safe\
    \ and anony-\nmous data aggregation technique with little computing \noverhead\
    \ [163]. El Kafhali et  al. [225] presented a dis-\ntributed BC cloud architecture\
    \ to efficiently manage the \nraw data streams generated by the massive number\
    \ of IoT \ndevices. The suggested design takes advantage of BC, FC, \nSDN, and\
    \ Network Functions Virtualization (NFV) tech-\nniques. The suggested architecture\
    \ may greatly minimize \nthe communication time between IoT devices, resource\
    \ \ndistribution, and traffic loading in the network, making \nit easier to deploy\
    \ IoT services [225]. Nkenyereye et al. \n[208], for 5G enabled vehicle edge computing,\
    \ suggested \na safe and BC-based Event-Driven Message (EDM) pro-\ntocol. They\
    \ utilized a lightweight multi-receiver signcryp-\ntion system that does not need\
    \ pairing and provides high \nprivacy and security levels, and low-latency operations.\
    \ \nEDM records must be stored in a distributed system \nthat ensures EDM’s dependability\
    \ and auditability. To do \nPage 21 of 36\nAlzoubi et al. Journal of Cloud Computing\
    \           (2022) 11:80 \n \nthis, they deployed a private BC to store EDM records\
    \ \ndepending on the edge nodes [208].\nSharing\nData sharing has to do with determining\
    \ who should \nreceive and what sort of broadcasting content should \nbe disseminated\
    \ to protect data [96]. In heterogene-\nous systems, data sharing is an inherent\
    \ problem. BCs, \nas a strong tool for addressing security concerns, may \nuse\
    \ consensus methods to assure the trustworthiness \nand irreversibility of computational\
    \ data [96]. Abdellatif \net al. [110] proposed a Medical-Edge-BC (MEdge-Chain)\
    \ \nframework for dealing with vast volumes of medical \nrecords. The proposed\
    \ framework, in particular, outlines \na healthcare infrastructure that seeks\
    \ to bring together \ndisparate government institutions into a single national\
    \ \nhealthcare system by allowing for the rapid and secure \nsharing and storing\
    \ of medical data [110].\nStoring data directly on the BC results in a huge \n\
    increase in size. Because previous transactions can-\nnot easily be removed from\
    \ a BC’s history, rising stor-\nage needs would soon transform a fog node acting\
    \ as a \npeer of the BC into a substantial cost issue, preventing \nnodes with\
    \ low resources from participating [43]. As a \nresult, keeping simply the hash\
    \ value of the data in the \nBC can give the same assurances while using far less\
    \ stor-\nage. A calculated hash value has a fixed length regardless \nof the amount\
    \ of data. The real data can then be saved \ndifferently [43]. On retrieval, the\
    \ data’s integrity may be \nchecked by recalculating its hash value and comparing\
    \ it \nto the one that is stored immutably on the BC [43]. Bai \net  al. [111]\
    \ proposed a Multiedgechain structure, from \nthe aspect of real-time operation\
    \ and stability, that sup-\nports a big amount of data and improves on-chain data\
    \ \nefficiency to provide cross-chain data sharing for diverse \nBC platforms.\
    \ Furthermore, a two-stage Stackelberg \ngame tactic was presented, taking into\
    \ account the risk \nconsiderations and user preferences, to maximize the \nprofitability\
    \ of computing resource scheduling on the \nInternet of energy [111]. Ismail et \
    \ al. [145] proposed a \nframework to enhance data sharing by employing BC \n\
    methods and data operations to prevent data from alter-\ning. IoT may be used\
    \ to remotely monitor a patient’s \nstatus, as well as follow up and provide information\
    \ to \nthe appropriate authorities, alerting them to potentially \nharmful circumstances.\
    \ The data is obtained from the \npatient, processed in operations, and then saved\
    \ to com-\nmunicate trustworthy and reliable information between \nthe caregivers\
    \ and the patient [145].\nSeveral research initiatives have recently been com-\n\
    pleted to allow the collaborative platform to create suc-\ncessful collaboration\
    \ with the manufacturing, design, \nand consumer perspectives. However, establishing\
    \ trust \nand effectively utilizing consumer perspectives remains \na difficulty.\
    \ As a result, Barenji et  al. [167] suggested a \nBC-enabled FC-based collaborative\
    \ platform to foster \ntriple communication and collaboration in a secure envi-\n\
    ronment across the manufacturing, design, and client \nsections. Machine learning\
    \ was utilized to cluster and \ncategorize customer views in the proposed platform,\
    \ and \nFC-based integration across subsystems using BC tech-\nnology is proposed\
    \ to increase data integrity and security \n[167]. According to Shahbazi and Byun\
    \ [212], BC can \nshift the smart manufacturing on edge computing servers \nfrom\
    \ a cloud-centric to a distributed system FC architec-\nture. In their proposal,\
    \ the BC technology makes use of \ndata transfer and production system transactions,\
    \ while \nthe machine learning method allows for enhanced data \nanalysis of a\
    \ large manufacturing dataset [212]. Rivera \net  al. [90] proposed a BC framework\
    \ to offer a trusted \ncooperation mechanism between edge servers. A per-\nmissioned\
    \ BC approach is being studied in particular to \nsupport a trusted design that\
    \ also offers incentives for \ncollaboration [90].\nTo accomplish safe data storage\
    \ and sharing in vehi-\ncle edge networks, Kong et al. [96] developed a reputa-\n\
    tion mechanism to ensure that cars provide high-quality \ndata. For accurately\
    \ managing vehicle reputation, a three-\nweight subjective logic model was used\
    \ [96]. Yang et al. \n[157] proposed a smart-toy-edge-computing-oriented \ndata\
    \ sharing model utilizing HLF v1.0. They set out \nto address the problem of automatically\
    \ preserving a \ntrustworthy, tamper-resistant, and distributed ledger by \ndeveloping\
    \ smart contracts in a world where people dis-\ntrust each other. This prototype\
    \ can streamline the pro-\ncess, save time and money, and ensure that disputes\
    \ are \nresolved fairly. This technique also makes P2P data shar-\ning between\
    \ distant smart toys and other IoT devices eas-\nier to install [157].\nValidation\n\
    The data transferred from the fog to the cloud will be \naltered. As a result,\
    \ the user of an IoT device will never \nbe able to check the accuracy or integrity\
    \ of data saved \nin the cloud [14]. When BC is used in conjunction with \nFC,\
    \ data validation guarantees that the access token and \ndigital signature (for\
    \ example, in the smart contract) \nare valid before the review is stored [138].\
    \ Simpson and \nQuist-Aphetsi [142] suggested a framework that makes \nit simple\
    \ to ensure that a patient’s medical information \nis accessible across multiple\
    \ healthcare institutions. The \nusage of a BC ledger allows databases to utilize\
    \ times-\ntamps to validate and maintain current patient health \ninformation\
    \ in a centralized data cloud [142].\nTian et al. [138] presented a custom-built\
    \ public audit-\ning technique for data storage that fulfills security and \n\
    Page 22 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022) 11:80\
    \ \nperformance requirements. During the proof genera-\ntion stage, they designed\
    \ a tag-transforming mechanism \nbased on the bilinear mapping technique to translate\
    \ tags \ngenerated by mobile sinks to tags created by fog nodes. \nThis technology\
    \ not only efficiently preserves identity \nanonymity but also saves time and\
    \ money throughout the \nvalidation step [138]. Li et al. [65] suggested a carpooling\
    \ \nmethod that supports conditional privacy, destination \nmatching, one-to-many\
    \ matching, and data auditability \nutilizing BC with FC integration-based vehicular\
    \ net-\nworks. This method verifies users in a conditionally anon-\nymous manner.\
    \ Also, it uses one-to-many proximity \npairing using a private proximity test\
    \ and extends it to \nprovide a secret communication key between a client and\
    \ \na driver. A private BC was created to keep track of car-\npooling records\
    \ [65].\nInsights and discussion\nBC can guarantee safe data sharing because due\
    \ to its \ndistributed and immutable capabilities. Financial firms \ncan watch\
    \ each transaction in live time thanks to the \ndata stored in BC, enabling them\
    \ to examine possibly \nfraud cases. Hence, the BC with FC integration can assist\
    \ \nfinancial firms in preventing fraud and safeguarding their \nconsumers. Additionally,\
    \ this integration enables service \nproviders to exchange data with other stakeholders\
    \ while \nminimizing the risk of data loss. Furthermore, if the data \ncomes from\
    \ a variety of sources, the need for repeated \ndata analysis may be avoided because\
    \ each transaction \nis recorded in the BC. Smart Contracts can be used to \n\
    govern the data sharing and storage process in BC. On \nthe other hand, to enable\
    \ large data communications, \nBC can assure big data training and avoid data\
    \ breaches. \nAuthors have introduced several strategies to support \ndata management:\
    \ to secure data storage ([43, 163, 178, \n208, 225]), ensure data sharing ([43,\
    \ 96, 110, 111, 145, \n157, 167, 212]), and to ensure data validity ([65, 138,\
    \ \n142]). The majority of the selected studies under this cat-\negory reported\
    \ that BC can enhance data sharing in FC, \nfollowed by data storage purpose,\
    \ and the least purpose \nmentioned was to achieve data validity.\nScalability\
    \ management\nIf FC is used in conjunction with BC, it poses scalabil-\nity issues.\
    \ The transaction efficiency in the BC, which \nincludes throughput and confirmation\
    \ delay as impor-\ntant parameters, is far too low for FC [98]. This section \n\
    explores the solutions that have been provided to over-\ncome this issue. In particular,\
    \ it discusses several BC-\nbased solutions to reduce the scalability issues linked\
    \ \nwith implementing PoW-based BC in FC. As a result, \nthe suggested solutions\
    \ rely on PoW with scalability aug-\nmentation techniques, as plasma and SDN approaches.\
    \ \nHowever, these are limited in terms of scalability and \nhave significant\
    \ power requirements. Other solutions \nused different consensus mechanisms while\
    \ sacrificing \nsecurity, privacy, or decentralization. This section, spe-\ncifically,\
    \ discusses the scalability management-related \npurposes including scalability\
    \ support, regulations, and \nmobility.\nScalability support\nBaouya et  al. [140]\
    \ proposed a BC-based architecture \nfor IoT device control that is scalable.\
    \ Smart contracts \nwere created to make the ledger updating process easier. \n\
    The suggested architecture is capable of delivering trust \non-demand modifications\
    \ with minimal impact on IoT \nresources, according to experimental results [140].\
    \ Chen \net  al. [106] designed a secure distributed data manage-\nment platform\
    \ for FC in large-scale IoT applications. This \naddresses one of the key issues:\
    \ how to integrate data \nsecurity and storage management for FC in large-scale\
    \ \nIoT applications while also enhancing rational interop-\nerability for networked\
    \ objects [106]. Ziegler et al. [126] \nproposed a novel system architecture that\
    \ integrates \nBC technology with FC using the Plasma framework to \naddress the\
    \ performance drawbacks. The Plasma frame-\nwork has the benefit of allowing for\
    \ a scalable hierarchi-\ncal design based on sidechains as well as an off-chain\
    \ \nscaling method that is independent of the root chain \narchitecture. Plasma\
    \ has already demonstrated its great \npotential and distinguishes itself from\
    \ other off-chaining \nsolutions, owing to its low requirements for the parent\
    \ \nBC and ease of implementation. It allows for increased \nefficiency, which\
    \ is required for real-world operations \n[126].\nSharma et al. [77] proposed\
    \ a model that integrates FC, \nBC, and SDN. The fog node uses the BC technique\
    \ to \nbind all of the SDN controllers in a distributed manner. \nThe performance\
    \ assessment revealed that, as opposed \nto conventional core-based cloud computing\
    \ technology, \nthis model is a more effective approach for offloading \ndata\
    \ to the cloud and adheres to the necessary archi-\ntecture principles with reduced\
    \ overhead. This would \nprovide IoT network participants with low-cost, stable,\
    \ \nscalable, and access to the most competitive computer \nresources on demand\
    \ [77]. Lei et al. [98] introduced the \nGroupchain (PoW and PBFT), a scalable\
    \ public BC with \na two-chain structure that is appropriate for IoT services\
    \ \ncomputing FC. The leader group is used by the Group-\nchain to commit blocks\
    \ collectively for greater transac-\ntion efficiency, and bonuses and deposits\
    \ are included in \nthe incentive mechanism to oversee the actions of mem-\nbers\
    \ in the leader group [98]. Lakhan et al. [53] created \nthe BC enables task scheduling\
    \ algorithm framework to \ndecrease the cost of application’s security and processing.\
    \ \nPage 23 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022)\
    \ 11:80 \n \nIn comparison to current methods, the processing cost \nwas reduced\
    \ and the security level was enhanced, accord-\ning to the evaluation.\nRegulations\n\
    The ability to offer a high degree of information security \nvia BC (e.g., smart\
    \ contracts and Etherium) allows for the \ncreation of a dependable and transparent\
    \ system of regu-\nlation for all transactions [141]. Pan et al. [102] proposed\
    \ \nan EdgeChain framework, a new edge-IoT architecture \nbased on BC and smart\
    \ contracts. EdgeChain includes a \npermissioned BC that connects edge cloud resources\
    \ to \neach IoT device’s account, resource use, and, as a result, \nbehavior.\
    \ To regulate the IoT devices’ resources that may \nbe received from the edge\
    \ server, EdgeChain employs a \ncredit-based resource management mechanism. Smart\
    \ \ncontracts are used to control the behavior of IoT devices \nand enforce regulations\
    \ [102]. Stanciu [149] presented \na study based on the IEC 61499 standard that\
    \ uses BC \ntechnology as a foundation for hierarchical and distrib-\nuted control\
    \ systems. Hyperledger Fabric was chosen, \nwith function blocks being implemented\
    \ on a supervisor \nlevel as smart contracts. The integration with the execu-\n\
    tive nodes, which are responsible for real process man-\nagement and based on\
    \ a micro-services design in which \nthe Kubernetes platform was used to organize\
    \ container \nexecution across edge resources utilizing Docker con-\ntainers and\
    \ the Kubernetes platform [149].\nMobility\nIn many businesses, mobility is becoming\
    \ increasingly \nimportant. The capacity to transfer data is becoming \nincreasingly\
    \ crucial as smart gadgets, sensors, and other \ninternet-connected devices grow\
    \ more common [164]. \nSome solutions, such as a pervasive social network sys-\n\
    tem and a BC-based healthcare data gateway, have been \nsuggested in healthcare\
    \ to address the issue of mobility \nand wireless sensing. Lakhan et al. [117]\
    \ deployed BC for \nscheduling and offloading of mobility-aware vehicular \nFC-cloud\
    \ architecture. The study aims to reduce appli-\ncation connectivity and computing\
    \ costs while keeping \nmobility, security, deadlines, and resource constraints\
    \ in \nmind. The study proposed a Mobility Aware BC-Enabled \noffloading scheme\
    \ (MABOS) to ensure mobility protec-\ntion. It uses proof of creditability (PoC),\
    \ PoW, and fault-\ntolerant techniques to allow multi-side offloading (e.g., \n\
    offline and online offloading) on the BC [117]. Moreover, \nmultiple access mobile\
    \ edge computing looks to be an \nadvantageous approach to solve the PoW problems\
    \ for \nmobile users in future mobile IoT systems, facilitating \nBC applications\
    \ in future mobile IoT systems. Accord-\ningly, Xiong et al. [108] introduced\
    \ the idea of edge com-\nputing for mobile BC. They proposed a cost-effective\
    \ \nway to manage edge computing resources [108]. Alotaibi \net  al. [124] presented\
    \ fog-based internet-of-smart vehi-\ncles combining BC and SDN (SaFIoV) to handle\
    \ secure \ncommunication and load-balancing issues. Utilizing rein-\nforcement\
    \ learning approaches, SaFIoV properly allo-\ncates tasks in the vehicles-to-fog\
    \ and fog-to-fog layers. \nThe use of BC ensures the security of communication.\n\
    Insights and discussion\nDespite the scalability issue of FC, several authors\
    \ sug-\ngest using BC can decrease the impact of this issue. \nSeveral designs\
    \ proposed for this reason ([106, 140]), \nusing the Plasma framework [126], using\
    \ SDN capabili-\nties [77], deploying the Groupchain [98], and deploying \na scheduling\
    \ algorithm [53]. Moreover, regulations rep-\nresent another scalability issue,\
    \ and hence, the authors \nsuggested using Smart contracts [141], a credit-based\
    \ \nresource management mechanism [102], and hierarchi-\ncal distributed control\
    \ systems [149] to govern BC with \nFC integration. On the other hand, mobility\
    \ in several \napplications represents another scalability issue for FC. \nAuthors\
    \ suggest mobility-aware offloading and schedul-\ning systems [117], the idea\
    \ of edge computing for mobile \nBC [108], and SaFIoV [124], to manage the mobility\
    \ of \nBC with FC integration-based applications.\nPerformance\nAnother issue\
    \ of FC is the low performance [4]. This sec-\ntion explores the solutions that\
    \ have been provided to \novercome this issue. This section, specifically, discusses\
    \ \nthe performance-related purposes including resources, \nlatency, energy consumption,\
    \ and fault tolerance.\nResources\nBecause of the variability of resources required\
    \ to sup-\nport a variety of IoT applications, resource manage-\nment is critical\
    \ to improving the performance of FC [41]. \nHamdi et al. [154] argue that the\
    \ procedure of selecting \nan acceptable target fog node for available resources\
    \ of \nparked and moving cars should be similar to that of form-\ning a service\
    \ level agreement in order to ensure that the \nsuitable target fog node is chosen.\
    \ The various require-\nments that must be addressed in order to build such an\
    \ \nSLA were discussed. Gao et al. [118] proposed BC-Ena-\nbled Resource Sharing\
    \ and Transactions (B-ReST), a \nnovel architecture for resource sharing and transactions\
    \ \nin FC networks. Baniata et al. [166] used the ACO algo-\nrithm in the FC-BC\
    \ called Privacy-aware fog-enhanced \nBC-assisted Task (PF-BTS) model. ACO assists\
    \ miners in \ngenerating solutions through a series of iterations in this \nmodel.\
    \ This guarantees high task assignment security and \nperformance, resulting in\
    \ reduced computing power and \ntime [166]. He et al. [66] designed a smart contract\
    \ inside \nPage 24 of 36\nAlzoubi et al. Journal of Cloud Computing          \
    \ (2022) 11:80 \na private BC network that uses Asynchronous Advantage \nActor-Critic\
    \ (A3C), a state-of-the-art machine learn-\ning algorithm developed by GoogleMind,\
    \ to distribute \nedge computing capabilities, demonstrating how AI can \nbe coupled\
    \ with BCs [66]. Yang et  al. [67] developed a \ndistributed matching mechanism\
    \ within the context of \nmatching theory to optimize the social wellbeing of\
    \ fog \nnodes while assuring that certain fog node mining crite-\nria are met.\n\
    Liao et al. [89] proposed a new task offloading mech-\nanism to fix issues such\
    \ as reducing queuing delay, task \noffloading delay, and handover expense of\
    \ missing data \nwhile maintaining privacy, fairness, and protection. The \nauthors\
    \ suggested a QUeuing-delay aware, handOver-\ncost aware, and Trustfulness Aware\
    \ UCB (QUOTA-UCB) \nalgorithm based on a subjective logic-driven trustful-\nness\
    \ evaluation process. The Merkle hash tree and smart \ncontract were used to achieve\
    \ “proof-of-computing” and \nto protect against “double-claim” attacks, “free-ride”\
    \ \nattacks, and repudiation attacks [89]. Rahman et al. [92] \nsuggested a BC-based\
    \ infrastructure to provide secure \nand private Spatio-temporal smart contracts\
    \ services for \nmega smart cities long-term with IoT-enabled economy \nsharing.\
    \ Cognitive fog nodes are used to analyze and \nstore geo-tagged multimedia transactions\
    \ that have been \noffloaded. It uses AI to gather and analyze important \nevent\
    \ data, give semantic digital analytics, and preserve \nresults in BC and distributed\
    \ cloud storage to enable \nsharing economy apps. The model outlines a long-term\
    \ \nreward system that might aid in the security of smart city \nservices such\
    \ as sharing economies and cyber-physical \ninteractions with IoT and BC [92].\n\
    The size of BC data is always growing. To miti-\ngate this issue, Wang [69] proposed\
    \ the Dewblock, a \nnew type of BC system. A BC client does not need to \nmaintain\
    \ BC data on this system, yet it also has all of \nthe characteristics of a BC\
    \ complete node. Dewblock \nintroduces a novel technique in which a client’s data\
    \ \nsize is decreased but the properties of a complete node \nare preserved. The\
    \ essential point is that with Dew-\nblock, the two concepts of BC client and\
    \ BC node are \nno longer interchangeable. While a client is lightweight \nand\
    \ may be run on a home computer or a mobile \ndevice, it collaborates with a distant\
    \ cloud server to \nperform the functions of a complete node [69]. Hol-\nste et \
    \ al. [131] demonstrated VarOps, a framework \nthat allows application developers\
    \ to focus on features \nthat can be reused across various frameworks, result-\n\
    ing in significant productivity improvements while \nalso decreasing administration\
    \ and maintenance com-\nplexity. This was accomplished through the use of \nautomated\
    \ multi-party smart contracts that could be \nused for several business models.\
    \ This increases the \npossibility of delivering a secure ecosystem of computa-\n\
    tional resources including data, software components, \ncomponent repositories,\
    \ IoT devices, computational \ninfrastructures, and networks [131].\nKong et al.\
    \ [180] proposed a BC-based resource man-\nagement system for vehicular FC to\
    \ increase the security \nand fairness of resource transactions. They originally\
    \ \nintroduced the Resource Coin (RC) idea and developed \na BC-based secure computing\
    \ resource trade mechanism \nbased on RC. The roadside unit participates in the\
    \ BC \nnetwork as a node, confirming the authenticity of trans-\nactions and creating\
    \ new blocks. Then, using contract \ntheory, they suggested a resource management\
    \ strategy \nthat would encourage parked cars to donate comput-\ning resources\
    \ so that could perform PoW faster, increase \nblock creation success rates, and\
    \ earn RC rewards. \nBy providing computational resources, vehicles may \nget\
    \ comparable RC prizes. This compensation can be \nexchanged for car networking\
    \ resources (communication \nbandwidth, storage space, and so on) to improve the\
    \ QoS \nof the company’s vehicle services [180].\nLiu et al. [99] presented a\
    \ unique BC-based architec-\nture for mobile edge computing video streaming with\
    \ \nadjustable block size. The authors devised an incentive \nsystem to encourage\
    \ content providers, video transcod-\ners, and consumers to collaborate. Then,\
    \ for BC-based \nvideo streaming, they introduced a block size adaption \ntechnique.\
    \ To tackle the problem in a distributed man-\nner, they used a low-complexity\
    \ Alternating Direction \nMethod of Multipliers (ADMM)-based algorithm. The \n\
    entire problem may be split down into local optimization \nchallenges at each\
    \ SBS using the ADMM algorithm. The \ncomputing complexity can be considerably\
    \ decreased in \nthis manner [99]. Chang et al. [59] recommended that the \nBC\
    \ can be of high help in drone networks. Drones that \nare used to provide services\
    \ can act as BC miners, obtain-\ning computational resources as required from\
    \ each other \nor an edge computing node, according to the proposed \nBC-empowered\
    \ drone networks (BeDrone) [59].\nSamaniego et al. [125] developed a solution\
    \ to the chal-\nlenge of hosting a BC on standard IoT hardware. The \nauthors\
    \ looked at how fog and cloud computing architec-\ntures may be used in BC-IoT\
    \ applications. The fog system \nbeats cloud-based systems in terms of latency\
    \ reaction \ntime under heavy transmission loads, according to the \nsystem’s\
    \ empirical performance evaluation [125]. Savi \net al. [134] proposed an architecture\
    \ in which several FC \nplatforms, each of which manages a dispersed structure\
    \ \nif resources from a different administrative domain are \nneeded, can effortlessly\
    \ merge their capabilities through \na BC-based brokerage platform. Tuli et al.\
    \ [158] proposed \nthe FogBus framework, which can connect various IoT-\nenabled\
    \ equipment to FC and cloud infrastructures. The \nPage 25 of 36\nAlzoubi et al.\
    \ Journal of Cloud Computing           (2022) 11:80 \n \nframework makes it easier\
    \ to deploy IoT applications, \nmonitor resources, and manage them.\nWang et \
    \ al. [205] looked at the resource contribu-\ntion mechanism between the fog node\
    \ and the cloud or \nusers. The authors suggested an approach that uses the \n\
    BC’s incentive and punishment system to encourage fog \nnodes to actively contribute\
    \ resources. The behavior of \nthe fog node in terms of contributing resources,\
    \ as well \nas the task completion degree for contributing resources, \nare packed\
    \ into blocks and kept in the BC system to cre-\nate a transparent, open, and\
    \ tamper-proof service assess-\nment index. The differential game technique was\
    \ used \nto describe and solve the aforementioned process, as \nwell as to handle\
    \ the relationship between the fog node’s \noptimal resource contribution strategy\
    \ and the optimal \nbenefit under that strategy [205]. Using a game-theoretic\
    \ \napproach, Xiong et  al. [78] investigated the interaction \nbetween cloud/FC\
    \ providers and miners in a BC network. \nThey suggested a lightweight PoW-based\
    \ BC architecture \nin which the consensus process’s computation-intensive \n\
    portion is delegated to the cloud or FC. They deployed \na two-stage Stackelberg\
    \ game, in which the profit of the \ncloud/FC provider and the individual miners’\
    \ utilities are \njointly maximized. The cloud/FC provider determines \nthe price\
    \ of the supplied computing resource in the first \nlevel of the game. The miners\
    \ decide on the quantity of \nservice to acquire in the second step [78]. Jiao\
    \ et al. [79] \nfocused on cloud/FC service provider-miner trade and \noffer an\
    \ auction-based market model for optimal com-\nputing resource allocation. They\
    \ developed an approxi-\nmation method that ensures the accuracy, individual \n\
    rationality, and computational efficiency of the data [79]. \nLuong et al. [101]\
    \ presented the construction of an opti-\nmum auction for resource distribution\
    \ in FC using deep \nlearning. The suggested optimum auction was created \nwith\
    \ BC applications in mind. The authors demonstrated \nhow to use deep learning\
    \ to build the optimum auction \nfor the fog resource allocation in the BC network\
    \ [101]. A \nBC with FC integration resource allocation and task off-\nloading\
    \ algorithm was presented in [215] to improve FC \nperformance by concurrently\
    \ optimizing task resource \nallocation and offloading decisions.\nLatency\nCloud\
    \ computing lowers the cost and resource con-\nsumption of smart surveillance\
    \ systems but at the risk of \nadding extra delay through centralized systems\
    \ located \nfar away. It’s a challenge to keep data secure in the het-\nerogeneous\
    \ cloud-FC-IoT network environment. Mayer \net  al. [54] introduced the FogChain\
    \ architectural con-\ncept, which includes FC, BC, and IoT. When compared \nto\
    \ cloud-like BC architecture, FogChain could achieve a \n62.6% quicker response\
    \ time. Whaiduzzaman et al. [55] \ncreated a safe BC method for a FC-IoT architecture.\
    \ They \nimplemented a BC to address the network performance \nissues [55]. Gharbi\
    \ et  al. [186] presented a new cloud-\nIoT distributed infrastructure that supports\
    \ real-time \ndata transmission, stability, and low latency. It was built \non\
    \ the foundations of three new technologies: FC, multi-\nagent systems, and BC.\
    \ Since it is close to IoT computers, \nFC will significantly minimize the latency.\
    \ The Multi-\nAgents System allows for distributed execution and has \nvery effective\
    \ proactive and reactive capabilities that are \nvery useful in IoT applications.\
    \ BC technology ensures \ndata confidentiality and allows secure low-latency access\
    \ \nto massive volumes of data [186]. To solve the real-time \ndata processing\
    \ problems of IoT, a SoftEdgeNet model \nwas developed by Sharma et al. [105].\
    \ For a sustainable \nFf network, the SoftEdgeNet model deploys a novel SDN-\n\
    based dispersed layered architecture with a BC technique \nat the fog layer. This\
    \ model can offer real-time analytics \nand prevent security attacks. The SoftEdgeNet\
    \ model not \nonly filters unreliable, fake data early and mitigates exter-\n\
    nal attacker attacks, but it also provides fault tolerance \ncapabilities [105].\n\
    Saputro and Sari [150] proposed Lightweight Multi-Fog \n(LMF) BC, which incorporates\
    \ FogBus algorithms, and \nthe lightweight scalable BC which uses distributed\
    \ time-\nbased consensus algorithm. This model was suggested to \nminimize FogBus\
    \ latency and enhance availability and \nintegrity. The broadcast domain separation\
    \ model was \nused by LMF to enhance integrity. Broadcast domains \nseparate transactions\
    \ and procedures on a per-broad-\ncast-domain basis. LMF additionally features\
    \ a location \nverification system to ensure that requestor transac-\ntions are\
    \ performed in the nearest broadcast domain, \nas well as to protect brokers from\
    \ illegal transactions. \nLMF can improve availability by processing transac-\n\
    tions on the closest broadcast domain, reducing latency, \nand providing a fault-tolerance\
    \ system that combines \nlightweight scalable BC and FogBus, as well as a cloud\
    \ \nbackup method. As a result, when a broadcast domain is \nattacked, it does\
    \ not affect transactions and processes in \nother broadcast domains [150].\n\
    Energy consumption\nBC creation consumes a lot of processing power, which \ncan\
    \ quickly deplete the computing capacity of fog nodes. \nAccordingly, Wu and Ansari\
    \ [68] recommended that the \nfog ecosystem be divided into fog node clusters,\
    \ with \neach cluster’s fog nodes maintaining the same access con-\ntrol list,\
    \ which is protected by a BC. They modified the \nBC for the fog node cluster\
    \ to decrease the amount of \ncomputational power and storage space necessary.\
    \ They \nalso proposed a heuristic approach, referred to as Time \naWare computing\
    \ sEt Allocation algoRithm (WEAR), \nPage 26 of 36\nAlzoubi et al. Journal of\
    \ Cloud Computing           (2022) 11:80 \nthat uses all available devices to\
    \ minimize the time it \ntakes to collect block hash values [68]. Singh et al.\
    \ [203] \ndemonstrated a safe BC architecture and a fog-based \narchitecture network\
    \ for IoT applications in smart cit-\nies. Encryption, authentication, and BC\
    \ are all used in \nthe proposed architecture to protect sensitive data. The \n\
    suggested architecture’s objective is to use BC technology \nto minimize latency\
    \ and energy consumption while also \nimproving security [203].\nIn response to\
    \ commercial data and analytics, real-\ntime apps, and worries about energy saving,\
    \ Memon et al. \n[71] proposed a DualFog-IoT architecture that divides \nthe computational\
    \ resources of the fog layer into two \nparts: FC/cloud cluster and fog mining\
    \ cluster. The pro-\nposed architecture supports three application request \n\
    types: delay tolerant, non-real-time, and real-time. For \nthese arrangements,\
    \ the access point between the device \nlayer and the DualFog layer acts as a\
    \ filter; real-real-time \nrequests are passed to the FC/cloud cluster, while\
    \ non-\nreal-time requests are forwarded to the cloud datacenter. \nIncoming delay\
    \ tolerant, on the other hand, are held on \nhold over AP until they reach the\
    \ size of a block. Once \nthe block has been created, it is sent to the fog mining\
    \ \ncluster to be mined [71].\nFault tolerance\nFog, like any other paradigm,\
    \ may not be built in such \na way that it is safe and immune to all attacks.\
    \ Due to \nobsolete software, vulnerabilities, misconfigurations, \nand other\
    \ flaws, malicious adversaries may be able to \ndeactivate or seize control of\
    \ some of the fog nodes, if \nnot the entire infrastructure [41]. Using game theory,\
    \ \nCasado-Vara et al. [226] presented a distributed and self-\norganized cooperative\
    \ algorithm. The program was used \nto analyze data collected by IoT devices.\
    \ In addition, \nto increase data security, a BC-based architecture was \nproposed.\
    \ This algorithm is performed to enhance data \nquality and false data detection\
    \ is a unique feature [226]. \nBased on an Ethereum BC implementation, a novel\
    \ archi-\ntecture dubbed Heterogeneous, Interoperable, and Dis-\ntRibuted Architecture\
    \ (HIDRA) was proposed, aiming \nat resource orchestration in FC-IoT applications\
    \ [119]. \nHIDRA is a fault-tolerant, secure, and auditable distrib-\nuted architecture.\n\
    Lallas et  al. [132] developed a decentralized IoT-FC-\ncloud architecture for\
    \ real-time failure prediction and \nmachine monitoring, in which computationally\
    \ inten-\nsive activities are spread among fog nodes and decision \nfusion rules\
    \ are established and managed by the cloud. \nWhereas, a P2P BC ledger is projected\
    \ to integrate this \narchitecture and other entities of the physical world, \n\
    resulting in a more efficient and intelligent supply chain \nnetwork [132]. Mounnan\
    \ et  al. [148] suggested a new \narchitectural model that uses BC technology\
    \ to provide \naccess control in the IoT using FC. The proposed solu-\ntion takes\
    \ a fresh perspective on a variety of problems. By \nimplementing the policy through\
    \ smart contracts on the \nBC network, this solution assures the performance of\
    \ the \nidentity and authentication procedure. As a result, if the \nuser’s qualities\
    \ match the policy, access is allowed. Fur-\nthermore, because load balancing\
    \ is implemented using \nthe Min-Min algorithm, this proposal provides greater\
    \ \navailability and fault tolerance in fog nodes [148].\nInsights and discussion\n\
    Financial firms may settle cross-border transactions, \nespecially those involving\
    \ huge sums, in near real-\ntime thanks to BC’s integrated data analytics. They\
    \ can \nalso observe the change in the data in real-time, allow-\ning them to\
    \ make real-time choices such as transaction \nblocking. The authors focused on\
    \ reducing the comput-\ning process at the fog nodes by employing a variety of\
    \ \nmethods. Smart contracts were established to facilitate \nthe validation of\
    \ transactions that did not occur at the \nsame time. Authors have paid high attention\
    \ to perfor-\nmance issue and have come with several designs and \nstrategies\
    \ to enhance FC performance by managing FC \nresources ([59, 66, 67, 69, 78, 89,\
    \ 92, 99, 118, 131, 134, \n154, 158, 166, 180, 215]), to decrease latency ([54,\
    \ 55, 105, \n150, 186]), decrease energy consumption ([68, 71, 203]), \nand decrease\
    \ the fault tolerance level ([119, 132, 148, \n226]). The majority of the selected\
    \ studies under this cat-\negory reported that BC can enhance resources’ managing\
    \ \nin FC, followed by latency purpose, and the least purpose \nmentioned was\
    \ to decrease data consumption.\nOpen issues and future trends\nSeveral insights\
    \ into the limitations of the BC with FC \nintegration and the usefulness of BC\
    \ across a wide range \nof purposes may be gained from this SLR. As mentioned\
    \ \nin Section 5, BC with FC integration is presently used in a \nwide range of\
    \ disciplines and businesses, giving unlimited \nexploration potential. However,\
    \ difficulties and obstacles \noccur, just as they do with any other new technology.\
    \ We \nhighlight some of the limitations of the BC with FC inte-\ngration in this\
    \ part, as well as various options for future \nresearch initiatives (Table 3).\
    \ Because of the FC and BC \nfeatures, the stated challenges of BC with FC integra-\n\
    tion have risen. The following challenges of BC with FC \nintegration, as mentioned\
    \ in Section 2, are mainly based \non the Bitcoin BC drawbacks, according to the\
    \ available \nliterature. While scalability challenge is mainly caused by \na\
    \ lack of FC resources, security, privacy, and standards \nissues are primarily\
    \ caused by a lack of BC capabilities \nand rules. On the other hand, quantum,\
    \ AI, and big data \nare affected both BC and FC capabilities. In any of these\
    \ \nPage 27 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022)\
    \ 11:80 \n \nscenarios, these challenges will have an impact on FC’s \nperformance.\
    \ As a result, it’s essential to investigate the \nBC-based challenges that impact\
    \ FC performance.\nScalability issues\nBecause IoT devices may create massive\
    \ amounts of data \nin real-time, storage capacity and scalability are major \n\
    concerns with BC with FC integration. Since the underly-\ning BC is ever-expanding,\
    \ all nodes must keep the whole \nchain to completely validate any new blocks\
    \ [210]. Most \nexisting BCs, on the other hand, can only handle a lim-\nited\
    \ number of transactions at once and are not meant to \nstore huge amounts of\
    \ data; attempting to do so results \nin significant latency. This, in turn, has\
    \ an impact on the \nperformance of FC’s limited resources, since it is unable\
    \ \nto cope with the massive volume of data generated. To \ncreate innovative\
    \ approaches for simplifying real-time \nprocessing and storage, such as data\
    \ compression and \ndata lightning, a comprehensive description of pro-\njected\
    \ network performance and network scalability is \nnecessary.\nThe new techniques\
    \ that tend to decrease latency and \noptimize BC with FC integration storage,\
    \ such as off-\nchain transactions and Sharding, imply some further \nmodifications\
    \ in the default balance of scalability, secu-\nrity, and decentralization that\
    \ BCs offer. Therefore, a \nsignificant amount of research must be done to find\
    \ the \nright balance [98]. Moreover, the use of BC is a crucial \nelement in\
    \ determining how much energy is consumed \nin a system. Because the majority\
    \ of the suggested appli-\ncations employ a PoW-based BC, despite many attempts\
    \ \nto use other algorithms, energy consumption remains an \nissue. Other algorithms\
    \ have limitations that some appli-\ncations cannot tolerate; this may motivate\
    \ the research \ncommunity to seek out other substitutions to the PoW \nalgorithms\
    \ while maintaining the excellent security and \ndependability that PoW provides\
    \ [85].\nTypically, QoS metrics like latency, energy use, and \noperating costs\
    \ are high. The current consensus models \nare not scalable and frequently fail\
    \ to deliver satisfactory \nQoS about throughput and latency, for real-world appli-\n\
    cations. These two criteria have not been attained at a \nsufficient QoS level\
    \ in several current and well-liked pub-\nlic BC systems [237]. For example, while\
    \ Bitcoin can pro-\ncess 7 transactions per second (TPS), it also experiences\
    \ \na large consensus execution delay time, which can last \nup to 10 minutes\
    \ on average [44]. New resource schedul-\ning strategies are required to decrease\
    \ energy consump-\ntion without compromising the quality of service (QoS), \n\
    including timeliness, dependability, availability, afford-\nability, security,\
    \ and privacy.\nSecurity and privacy issues\nDespite its many advantages in terms\
    \ of data security \nand privacy, BC has several limits and flaws. Because \n\
    information is kept on a public ledger, privacy and con-\nfidentiality remain\
    \ a challenge for BCs [86]. To safeguard \nthe confidentiality of the data, several\
    \ anonymization or \nencryption-based techniques might be used. These meth-\n\
    ods, however, are not a panacea and are dependent on \nthe system’s implementation\
    \ and environment. While BC \nimproves FC data flexibility and security, it may\
    \ have an \nimpact on functions like reliability and data integrity in \nFC [90].\
    \ BC verifies the identity of the data creator and \nguarantees that the data\
    \ is immutable and capable of \ndetecting any changes. When data that has already\
    \ been \ncompromised comes to the BC, however, the system is \nrestricted; it\
    \ is conceivable that the corruption will not be \nrecognized and the data will\
    \ stay damaged. Furthermore, \ndata corruption occurs not just as a result of\
    \ hostile \nTable 3 BC with FC integration limitations and future directions\n\
    Challenge\nResearch directions\nScalability [85, 98]\n• As a result of the storing\
    \ of network-wide transactions, the storage needs must be raised\n• Latency remains\
    \ an issue due to the huge amount of data processed\n• Various consensus algorithms\
    \ consume a lot of energy\n• Block creation confirmation times are long\nSecurity\
    \ & Privacy [64, 90, 192, 200, 231]\n• In most cases, user data in public BC is\
    \ available to anybody\n• Off-chain alternatives are still a source of contention\n\
    • Privacy problems arise as a result of pseudonymous techniques\nStandards and\
    \ regulations [85, 164, 232]\n• It is necessary to create standards for building\
    \ safe smart contracts that cannot be exploited for harmful \nreasons\n• On a\
    \ worldwide scale, competent and uniform rules and regulations are necessary\n\
    • Interoperability issue due to different consensus models, transaction methods,\
    \ and smart contract func-\ntionality\nQuantum, AI & Big Data [109, 233–236]\n\
    • Complex big data analytics techniques on limited resources are a significant\
    \ problem for FC and BC\n• Authenticating the training data sets might be a significant\
    \ challenge\n• Evaluation and standardization of post-quantum cryptography primitives\
    \ are required\nPage 28 of 36\nAlzoubi et al. Journal of Cloud Computing     \
    \      (2022) 11:80 \nattacks, but also as a result of other factors such as the\
    \ \nsurrounding environment and device failure [90].\nAlthough all BC systems\
    \ utilize cryptographic meth-\nods to safeguard their data and processes, this\
    \ does not \nrule out the possibility of security flaws. Wallet apps are \none\
    \ source of vulnerabilities in Bitcoin that might expose \ntransaction data [200].\
    \ Ethereum’s data and contracts are \nencoded but not encrypted. Ethereum shares\
    \ many of \nthe same flaws as Bitcoin classic (e.g., weak against 51% \nattacks).\
    \ Hyperledger Fabric devotes a significant amount \nof its protocol to addressing\
    \ security concerns such as \npreventing transactions from being connected to\
    \ users, \ndigital signatures, and access control methods. However, \nnot all\
    \ of these functions have yet been implemented. \nTo guarantee that communication\
    \ between all nodes is \nsafe, the Ripple network uses transport layer security.\
    \ \nThe actual transaction data is encrypted and only the two \npeople involved\
    \ have access to it. Multichain has an inte-\ngrated user permissions management\
    \ system that ensures \nthat only the participants who have been chosen may see\
    \ \nthe transactions. In the case of a fork, the accountable \nparty may be determined\
    \ in Eris [185].\nThere is a trade-off between availability and consist-\nency\
    \ in BC with FC integration as a distributed archi-\ntecture of data systems.\
    \ At the expense of consistency, \nBC remains accessible and partition tolerant.\
    \ The BC in \nEthereum was found to be much quicker than Bitcoin \n[231]. Many\
    \ BC applications require numerous confirma-\ntions for newly mined blocks to\
    \ avoid transactions from \ndouble-spending, which is one of the primary conse-\n\
    quences of a faster block time. Smart contracts are policy \nagreements between\
    \ transactional parties that are not \nlegally enforced by the outside network.\
    \ Any attacks on \nsmart contracts can put organizations, block miners, and \n\
    the entire BC network in danger. Based on the foregoing, \nextensive study is\
    \ required to secure BC with FC integra-\ntion [192].\nLocation and use privacy\
    \ are two well-known issues in \nBC data privacy [64]. The traceability of transactions\
    \ that \nare propagated through the network is a major concern \nfor most organizations\
    \ and people [86]. Furthermore, \nthe usage of pseudonyms, for example, is insufficient\
    \ to \nmaintain transactional privacy. Moreover, Bitcoin trans-\nactions have\
    \ been shown to provide a considerable num-\nber of sensitive information. Despite\
    \ several attempts to \nremedy the issue, the BC with FC integration location\
    \ \nand use privacy issues remain unresolved. More study is \nneeded to develop\
    \ more privacy methods and techniques \n[64].\nRegulations and standards\nBecause\
    \ BC is such a young and immature technology, \nthere is a lack of standards,\
    \ which stymies its widespread \nadoption and delays progress. As described in\
    \ Section 4, \nBC has been proposed for usage in a variety of applica-\ntions.\
    \ Many nations are also contemplating using BC \ntechnology in government contexts\
    \ including voting, \nbanking, and eHealth [24]. Therefore, there has to be a\
    \ \nhigh level of uniformity across the many parties involved \nto enable all\
    \ of these different infrastructures and appli-\ncations. As more nations choose\
    \ BC as a solution, the \nproblem of standards and regulations will become even\
    \ \nmore critical [164]. On the other hand, the Bitcoin BC \nplatform, for example,\
    \ saves data that can be connected \nto persons and shared across numerous businesses.\
    \ As \na result, regulations, standards, and social norms must \nbe established\
    \ to specify how the platform can be used \nlegally and fairly. Moreover, proper\
    \ enforcement of smart \ncontracts is required to avoid any disputes between trans-\n\
    acting organizations. Furthermore, the material saved on \nBC may include unlawful\
    \ information, putting the BC in \nlegal jeopardy [185]. Shortage in the regulations\
    \ will have \na direct impact on FC norms like consumer trust and the \nsmoothness\
    \ of data transmission between IoT devices \nand FC or between fog nodes.\nCryptocurrencies\
    \ and the digital economy are built \non BC technology. Because bitcoin principles\
    \ are still \nnot widely understood or legalized in many places, BC \ntechnology\
    \ is unwittingly unlawful. We have shown \nin this survey how BC can be used for\
    \ a variety of pur-\nposes other than digital money; this information must be\
    \ \nshared internationally since BC is different from digital \nmoney, but it\
    \ is the backbone of it. Since such technology \nis prohibited, it falls behind\
    \ worldwide technical trends, \nmaking it difficult for any BC-based solution\
    \ to succeed \n[85]. Although the absence of standards in BC benefits \ndevelopers,\
    \ it creates severe communication problems \nowing to a lack of interoperability.\
    \ The availability of \nseveral BC networks with distinct consensus models, \n\
    transaction methods, and smart contract features is a big \nbarrier to interoperability.\
    \ Using existing standards in \nBC networks is one option for dealing with this\
    \ problem. \nAnother option is to create new standards. The Enter-\nprise Ethereum\
    \ Alliance (EEA), for example, has released \na standard version of the Ethereum\
    \ BC [232].\nQuantum resilience, artificial intelligence, and big data \nanalysis\n\
    When BC was first conceived, quantum computing did \nnot appear to be particularly\
    \ close. Recent advances, on \nthe other hand, have caused us to rethink the issue\
    \ com-\npletely. Most BCs, like Bitcoin, employ the SHA-256 hash \nalgorithm which\
    \ would take a quantum computer  2128 \noperations to crack using Grover’s technique\
    \ [22]. While \nSHA-256 is immune to quantum attacks as a result of \nthis, the\
    \ public key encryption algorithms that most of \nPage 29 of 36\nAlzoubi et al.\
    \ Journal of Cloud Computing           (2022) 11:80 \n \nthem utilize are not.\
    \ After developing a quantum com-\nputer and individuals and businesses started\
    \ using it, the \nalgorithm will be broken, rendering nearly all BCs unsafe. \n\
    There is now a large effort underway to evaluate and \nstandardize post-quantum\
    \ cryptography primitives [22]. \nDespite the efforts made to solve the quantum\
    \ issue (e.g., \n[233–236], quantum resilience becomes a serious con-\ncern when\
    \ we construct systems based on BCs that we \nhope to maintain for many years\
    \ [238, 239].\nDeep learning, along with quicker processors and big-\nger storage\
    \ capacities, has cleared the path for modern \nauditing. Machine learning algorithms,\
    \ on the other \nhand, are at the heart of AI and are characterized by \ntheir\
    \ opacity. In this sense, BCs can give auditable trails \nto show why an AI system\
    \ made a specific choice and \nreconcile inconsistencies caused by non-linear\
    \ usage \nof many variables and randomization. AI enables a slew \nof fascinating\
    \ and creative BC-based applications that \nmight improve the technology’s transparency\
    \ [22]. The \nlearning process requires a good data sample to create \nacceptable\
    \ training data sets. If the adversary is aware \nof the attack type and has access\
    \ to the training data-\nset, the attack type may be readily changed. As a result,\
    \ \nunderstanding the exact nature of an attack to distinguish \nbetween desirable\
    \ and undesired network states is a chal-\nlenging topic that requires further\
    \ investigation [109].\nThe BC structure, which is claimed to be safe and veri-\n\
    fiable, may be utilized to make massive data administra-\ntion easier. Data analyses\
    \ utilizing the BC structure, on \nthe other hand, entail far very high overhead.\
    \ Notwith-\nstanding, most cases do not necessitate evaluating all \ntransactions,\
    \ therefore intermediary or economical \nsupplementary constructs can be developed,\
    \ increas-\ning overall performance. Despite efforts to introduce \nbig data analysis,\
    \ traditional big data analysis remains a \nsignificant barrier to BC with FC\
    \ integration [109]. The \nresources for fog nodes and BC are still limited. Upload-\n\
    ing the data to clouds for processing and big data anal-\nysis can be a solution,\
    \ however, this might cause severe \nlatency and privacy issues. Furthermore,\
    \ anonymized \ndata might make big data analysis difficult to implement, \nand\
    \ decrypting data a time-consuming process, resulting \nin inefficient data analytics.\
    \ In a nutshell, these new tech-\nnological developments will have a significant\
    \ influence \non FC performance, making the total integration of BC \nwith FC\
    \ integration problematic.\nDiscussion\nThe body of knowledge on BC with FC integration\
    \ is \nrelatively scattered. As a result, this research conducted \nan SLR and\
    \ presented a holistic explanation of the pur-\nposes of this integration. The\
    \ purpose of the paper was to \naddress two research questions: How do the purposes\
    \ of \nblockchain-fog computing integration develop over time? \nWhat are the\
    \ future challenges in integrating blockchain \nwith fog computing? (RQ2). We\
    \ evaluated all relevant lit-\nerature in all reputable databases, including IEEE,\
    \ Else-\nvier, Springer, MDPI, Google Scholar, Taylor, Sage, ACM, \nand Emerald,\
    \ in order to address the research questions. \nThis section offers an overall\
    \ evaluation, implications for \nthe findings, and limitations of this study.\n\
    Security, privacy, access control, trust management, \ndata management, scalability\
    \ management, and perfor-\nmance were the seven purpose categories that this study\
    \ \nidentified and discussed. The whole transaction his-\ntory is contained in\
    \ the data in the BC, which is hashed \nto protect the ledger. As a result, BC\
    \ can make sure that \nthe devices are connected. The combined monitoring of \n\
    linked fog nodes in the BC system makes data fabrica-\ntion nearly impossible.\
    \ Data is therefore dispersed among \na large number of connected fog nodes to\
    \ safeguard BC. \nThis improves the transaction’s security, integrity, and \n\
    confidentiality.\nAdditionally, employing BFC-based apps will make it \nsimpler\
    \ to spot fraudulent activity because if an attacker \nmodifies the data in a\
    \ block, the block’s hash value will \nchange and the block will become invalid.\
    \ Therefore, only \nauthorized users may access data without going through \n\
    extra checks if, for instance, many business units within \na firm may participate\
    \ in a shared BC that offers a degree \nof access control. Moreover, the immutability\
    \ of BC pro-\nvides the required dependability and confidence for com-\npanies\
    \ among nodes by guaranteeing that a fog node is \nin control of its identity.\
    \ As a result, there will be more \ntransparency, which will boost productivity\
    \ and trust. \nThe integrated data analytics capabilities of BC also ena-\nble\
    \ financial institutions to settle cross-border transac-\ntions, particularly\
    \ those involving significant quantities \nof money, in almost real-time. They\
    \ can also see how \nthe data is changing in real-time, which enables them to\
    \ \nmake decisions like transaction banning in real-time.\nWhile a lack of FC\
    \ resources mostly contributes to the \nscaling difficulty, BC design and a lack\
    \ of regulations may \nlead to security, privacy, and standards difficulties.\
    \ On \nthe other hand, both BC and FC capacities are impacted \nby quantum, AI,\
    \ and big data. These difficulties will affect \nFC’s performance in each of these\
    \ cases. Additionally, the \nlack of standards provides a challenge to the effective-\n\
    ness of BC with FC integration; hence, future research \nand industry efforts\
    \ must concentrate on developing \nnovel methods and efficient distributed control\
    \ systems \nto regulate BC with FC integration. The findings of this \nstudy are\
    \ established in the publicly available literature. \nAlthough the use of the\
    \ Bitcoin platform may have con-\ntributed to many challenges and future developments,\
    \ \nalternative platforms, such as Ethereum, multichain, and \nPage 30 of 36\n\
    Alzoubi et al. Journal of Cloud Computing           (2022) 11:80 \nothers, should\
    \ also be looked into. Additionally, since \nboth FC and BC technologies are relatively\
    \ young, future \nresearch and industrial efforts are evolving daily, which \n\
    makes it challenging to review all data in real-time. The \nresults of this study\
    \ therefore only applied to the first \nquarter of 2022. Therefore, future research\
    \ may use these \nfindings as a foundation and move on from there.\nConclusions\n\
    While FC has gained widespread acceptance as a solu-\ntion to various cloud computing\
    \ shortages, many con-\ncerns remain unresolved. Many of these difficulties \n\
    can be addressed by combining FC with BC. BC with \nFC integration seems to provide\
    \ more secure, scalable, \nand efficient applications through the combination\
    \ of \nBC and FC capabilities. While BC with FC integration \nseems reasonable,\
    \ however, there is a need to provide a \nsynthesized knowledge base of their\
    \ purposes including \nchallenges for future research directions. We addressed\
    \ \nthis significant requirements and provided a systematic \nreview and synthesis\
    \ of recent studies, published in the \npublic domain, with a special emphasis\
    \ on BC with FC \nintegration purposes. We identified seven major themes \nof\
    \ BC with FC integration purposes including security, \nprivacy, access control,\
    \ trust management, data manage-\nment, scalability, and performance. Within each\
    \ of these \nthemes, several purposes were also identified and dis-\ncussed. These\
    \ themes and underpinning purposes intend \nto help academics and practitioners\
    \ to formulate BC with \nFC integration strategies for their effective adoption\
    \ of \nIoT data handling. Moreover, the critical open research \nproblems, impeding\
    \ the broad use of BC with FC integra-\ntion, were also identified and reported\
    \ in this paper. By \noffering major advances in terms of security, privacy, data\
    \ \nmanagement, and trust management, it is anticipated \nthat BC can restructure\
    \ and revolutionize the future of \nFC technology. However, BC with FC integration\
    \ raises \nseveral technological issues, including scalability, a lack \nof standards\
    \ and regulations, quantum resilience, and AI \nadvancement, which could be further\
    \ explored in future \nresearch studies.\nAuthors’ contributions\nYehia Ibrahim\
    \ Alzoubi: Conceptualization, Methodology, Analysis, Writing - \nreview & editing.\
    \ Asif Qumer Gill: Methodology, Analysis, Validation, Writing \n- review & editing.\
    \ Alok Mishra: Methodology, Analysis, Validation, Writing \n- review & editing.\
    \ All authors read and approved the final manuscript. All \nauthors approve to\
    \ be submitted in “Journal of Cloud Computing”.\nFunding\nNot applicable.\nAvailability\
    \ of data and materials\nNot applicable.\nDeclarations\nEthics approval and consent\
    \ to participate\nNot applicable.\nCompeting interests\nNot applicable.\nAuthor\
    \ details\n1 American University of the Middle East, Al-Eqaila, Kuwait. 2 School\
    \ of Software, \nUniversity of Technology Sydney, Sydney, Australia. 3 Informatics\
    \ and Digitali-\nzation Group, Molde University College-Specialized University\
    \ in Logistics, \nMolde, Norway. \nReceived: 27 May 2022   Accepted: 16 October\
    \ 2022\nReferences\n \n1. Mouradian C, Naboulsi D, Yangui S, Glitho RH, Morrow\
    \ MJ, Polakos PA \n(2017) A comprehensive survey on fog computing: state-of-the-art\
    \ and \nresearch challenges. IEEE Commun Surv Tutor 20:416–464\n \n2. Xiao M,\
    \ Zhou J, Liu X, Jiang M (2017) A hybrid scheme for fine-grained \nsearch and\
    \ access authorization in fog computing environment. Sen-\nsors 17:1423\n \n3.\
    \ Atlam HF, Walters RJ, Wills GB (2018) Fog computing and the internet of \nthings:\
    \ a review. Big Data Cogn Comput 2:10\n \n4. Bellavista P, Berrocal J, Corradi\
    \ A, Das SK, Foschini L, Zanni A (2019) A \nsurvey on fog computing for the internet\
    \ of things. Pervasive Mob \nComput 52:71–99\n \n5. Dastjerdi AV, Gupta H, Calheiros\
    \ RN, Ghosh SK, Buyya R (2016) Fog com-\nputing: Principles, architectures, and\
    \ applications. In: Buyya R, Dastjerdi \nAV (eds) Internet of things: Principles\
    \ and Paradigms. Elsevier, Morgan \nKaufmann, Burlington, Massachusetts, ed, pp\
    \ 61–75\n \n6. Francis T, Madhiajagan M (2017) A comparison of cloud execution\
    \ \nmechanisms: fog, edge and clone cloud computing. Electr Eng Comput \nSci and\
    \ Infor 4:446–450\n \n7. Yousefpour A, Fung C, Nguyen T, Kadiyala K, Jalali F,\
    \ Niakanlahiji A et al \n(2019) All one needs to know about fog computing and\
    \ related edge \ncomputing paradigms: a complete survey. J Syst Archit 98:289–330\n\
    \ \n8. Naha RK, Garg S, Georgakopoulos D, Jayaraman PP, Gao L, Xiang Y et al \n\
    (2018) Fog computing: survey of trends, architectures, requirements, \nand research\
    \ directions. IEEE access 6:47980–48009\n \n9. Elazhary H (2019) Internet of things\
    \ (IoT), mobile cloud, cloudlet, \nmobile IoT, IoT cloud, fog, mobile edge, and\
    \ edge emerging computing \nparadigms: disambiguation and research directions.\
    \ J Netw Comput \nAppl 128:105–140\n 10. Pereira J, Ricardo L, Luís M, Senna C,\
    \ Sargento S (2019) Assessing the \nreliability of fog computing for smart mobility\
    \ applications in VANETs. \nFutur Gener Comput Syst 94:317–332\n 11. Roman R,\
    \ Lopez J, Mambo M (2018) Mobile edge computing, fog et al.: \na survey and analysis\
    \ of security threats and challenges. Futur Gener \nComput Syst 78:680–698\n 12.\
    \ Khalid T, Abbasi MAK, Zuraiz M, Khan AN, Ali M, Ahmad RW et al (2021) \nA survey\
    \ on privacy and access control schemes in fog computing. Int J \nCommun Syst\
    \ 34:e4181\n 13. Zhang P, Zhou M, Fortino G (2018) Security and trust issues in\
    \ fog \ncomputing: a survey. Futur Gener Comput Syst 88:16–27\n 14. Alzoubi YI,\
    \ Osmanaj VH, Jaradat A, Al-Ahmad A (2021) Fog computing \nsecurity and privacy\
    \ for the internet of thing applications: state-of-the-\nart. Security and Privacy\
    \ 4:e145\n 15. Chiang M, Zhang T (2016) Fog and IoT: an overview of research oppor-\n\
    tunities. IEEE Internet Things J 3:854–864\n 16. Puthal D, Mohanty SP, Bhavake\
    \ SA, Morgan G, Ranjan R (2019) Fog com-\nputing security challenges and future\
    \ directions [energy and security]. \nIEEE Consum. Electron. Mag. 8:92–96\n 17.\
    \ Singh A, Parizi RM, Han M, Dehghantanha A, Karimipour H, Choo K-KR \n(2020)\
    \ Public blockchains scalability: An examination of sharding \nand segregated\
    \ witness. In: Choo K, Dehghantanha A, Parizi R (eds) \nPage 31 of 36\nAlzoubi et al.\
    \ Journal of Cloud Computing           (2022) 11:80 \n \nBlockchain Cybersecurity,\
    \ Trust and Privacy, vol 79. Springer, ed Cham, \npp 203–232\n 18. Sengupta J,\
    \ Ruj S, Bit SD (2020) A comprehensive survey on attacks, \nsecurity issues and\
    \ blockchain solutions for IoT and IIoT. J Netw Comput \nAppl 149:102481\n 19.\
    \ Alzoubi YI, Al-Ahmad A, Jaradat A (2021) Fog computing security and \nprivacy\
    \ issues, open challenges, and blockchain solution: an overview. \nInt. J. Electr.\
    \ Comput. Eng. 11:5081–5088\n 20. Khan MA, Salah K (2018) IoT security: review,\
    \ blockchain solutions, and \nopen challenges. Futur Gener Comput Syst 82:395–411\n\
    \ 21. Krishnaraj N, Bellam K, Sivakumar B, Daniel A (2022) The future of cloud\
    \ \ncomputing: Blockchain-based decentralized cloud/fog solutions–chal-\nlenges,\
    \ opportunities, and standards. In: Baalamurugan K, Kumar SR, \nKumar A, Kumar\
    \ V, Padmanaban S (eds) Blockchain Security in Cloud \nComputing. Springer, ed\
    \ Cham, pp 207–226\n 22. Casino F, Dasaklis TK, Patsakis C (2019) A systematic\
    \ literature review of \nblockchain-based applications: current status, classification\
    \ and open \nissues. Telematics Inform 36:55–81\n 23. Mohanta BK, Jena D, Panda\
    \ SS, Sobhanayak S (2019) Blockchain \ntechnology: a survey on applications and\
    \ security privacy challenges. \nInternet of Things 8:100107\n 24. Ma Y, Sun Y,\
    \ Lei Y, Qin N, Lu J (2020) A survey of blockchain technol-\nogy on security,\
    \ privacy, and trust in crowdsourcing services. WWW \n23:393–419\n 25. Ashi Z,\
    \ Al-Fawa’reh M, Al-Fayoumi M (2020) Fog computing: security \nchallenges and\
    \ countermeasures. Int. J. Comput. Appl 175:30–36\n 26. Khan NS, Chishti MA (2020)\
    \ Security challenges in fog and IoT, block-\nchain technology and cell tree solutions:\
    \ a review. SCPE 21:515–542\n 27. Abdulkareem KH, Mohammed MA, Gunasekaran SS,\
    \ Al-Mhiqani MN, \nMutlag AA, Mostafa SA et al (2019) A review of fog computing\
    \ and \nmachine learning: concepts, applications, challenges, and open issues.\
    \ \nIEEE Access 7:153123–153140\n 28. Salah K, Rehman MHU, Nizamuddin N, Al-Fuqaha\
    \ A (2019) Blockchain \nfor AI: review and open research challenges. IEEE Access\
    \ 7:10127–10149\n 29. Butt TA, Iqbal R, Salah K, Aloqaily M, Jararweh Y (2019)\
    \ Privacy manage-\nment in social internet of vehicles: review, challenges and\
    \ blockchain \nbased solutions. IEEE Access 7:79694–79713\n 30. Petersen K, Vakkalanka\
    \ S, Kuzniarz L (2015) Guidelines for conducting \nsystematic mapping studies\
    \ in software engineering: an update. Inf \nSoftw Technol 64:1–18\n 31. Nakamoto\
    \ S (2008) Bitcoin: A peer-to-peer electronic cash system. \nIn Decentralized\
    \ Business Review. https:// bitco in. org/ bitco in. pdf. \nAccessed 20 Mar 2021\n\
    \ 32. Alzoubi YI, Alahmad A, Kahtan H (2022) Blockchain technology as a fog \n\
    computing security and privacy solution: an overview. Comput Com-\nmun 182:129–152\n\
    \ 33. M. Samaniego and R. Deters, \"Pushing software-defined blockchain \ncomponents\
    \ onto edge hosts,\" in Proceedings of the 52nd Hawaii \ninternational conference\
    \ on system sciences. IEEE, Honolulu, 2019, pp. \n7079–7086\n 34. Lu Y (2018)\
    \ Blockchain and the related issues: a review of current \nresearch topics. J.\
    \ Manag. Anal. 5:231–255\n 35. Fernández-Caramés TM, Fraga-Lamas P (2018) A review\
    \ on the use of \nblockchain for the internet of things. IEEE Access 6:32979–33001\n\
    \ 36. Nikouei SY, Xu R, Nagothu D, Chen Y, Aved A, Blasch E (2018) Real-time \n\
    index authentication for event-oriented surveillance video query using \nblockchain.\
    \ In: Proceedings of the 2018 IEEE international smart cities \nconference (ISC2).\
    \ IEEE, Kansas City, pp 1–8\n 37. Tan L, Shi N, Yang C, Yu K (2020) A blockchain-based\
    \ access control \nframework for cyber-physical-social system big data. IEEE Access\
    \ \n8:77215–77226\n 38. Reyna A, Martín C, Chen J, Soler E, Díaz M (2018) On blockchain\
    \ and \nits integration with IoT. Challenges and opportunities. Futur Gener \n\
    Comput Syst 88:173–190\n 39. de Leon DC, Stalick AQ, Jillepalli AA, Haney MA,\
    \ Sheldon FT (2017) \nBlockchain: properties and misconceptions. Asian J. Innov.\
    \ Entrep \n11:286–300\n 40. Gao W, Hatcher WG, Yu W (2018) A survey of blockchain:\
    \ techniques, \napplications, and challenges. In: Proceedings of the 27th international\
    \ \nconference on computer communication and networks (ICCCN). IEEE, \nHangzhou,\
    \ pp 1–11\n 41. Alzoubi YI, Al-Ahmad A, Jaradat A, Osmanaj V (2021) Fog computing\
    \ \narchitecture, benefits, security, and privacy, for the internet of thing \n\
    applications: an overview. J Theor Appl Inf Technol 99:436–451\n 42. Alrawais\
    \ A, Alhothaily A, Hu C, Cheng X (2017) Fog computing for the \ninternet of things:\
    \ security and privacy issues. IEEE Internet Comput \n21:34–42\n 43. Cech HL,\
    \ Großmann M, Krieger UR (2019) A fog computing architecture \nto share sensor\
    \ data by means of blockchain functionality. In: Proceed-\nings of the 2019 IEEE\
    \ international conference on fog computing \n(ICFC). IEEE, Prague, pp 31–40\n\
    \ 44. Khan D, Jung LT, Hashmani MA (2021) Systematic literature review of \nchallenges\
    \ in blockchain scalability. Appl Sci 11:9372\n 45. Kumar G, Saha R, Rai MK, Thomas\
    \ R, Kim T-H (2019) Proof-of-work \nconsensus approach in blockchain technology\
    \ for cloud and fog com-\nputing using maximization-factorization statistics.\
    \ IEEE Internet Things J \n6:6835–6842\n 46. Du Y, Wang Z, Li J, Shi L, Jayakody\
    \ DNK, Chen Q et al (2022) Blockchain-\naided edge computing market: smart contract\
    \ and consensus mecha-\nnisms. IEEE Trans Mob Comput. https:// doi. org/ 10. 1109/\
    \ TMC. 2021. \n31400 80\n 47. Pelekoudas-Oikonomou F, Zachos G, Papaioannou M,\
    \ de Ree M, Ribeiro \nJC, Mantas G et al (2022) Blockchain-based security mechanisms\
    \ for \nIoMT edge networks in IoMT-based healthcare monitoring systems. \nSensors\
    \ 22:2449\n 48. Gao Y, Lin H, Chen Y, Liu Y (2021) Blockchain and SGX-enabled\
    \ edge \ncomputing empowered secure IoMT data analysis. IEEE Internet Things \n\
    J 8:15785–15795\n 49. Kitchenham B, Charters S (2007) Guidelines for performing\
    \ systematic \nliterature reviews in software engineering. EBSE Technical Report,\
    \ ed\n 50. Alzoubi YI, Gill AQ, Al-Ani A (2016) Empirical studies of geographically\
    \ \ndistributed agile development communication challenges: a system-\natic review.\
    \ Inf Manage 53:22–37\n 51. Boualouache A, Sedjelmaci H, Engel T (2021) Consortium\
    \ blockchain for \ncooperative location privacy preservation in 5G-enabled vehicular\
    \ fog \ncomputing. IEEE Trans Veh Technol 70:7087–7102\n 52. Hewa TM, Braeken\
    \ A, Liyanage M, Ylianttila M (2022) Fog computing \nand blockchain based security\
    \ service architecture for 5G industrial IoT \nenabled cloud manufacturing. IEEE\
    \ Trans Industr Inform 18:7174-7185\n 53. Lakhan A, Mohammed MA, Ibrahim DA, Kadry\
    \ S, Abdulkareem KH \n(2022) ITS based on deep graph convolutional fraud detection\
    \ network \nblockchain-enabled fog-cloud. IEEE Trans Intell Transp Syst. https://\
    \ doi. \norg/ 10. 1109/ TITS. 2022. 31478 52\n 54. Mayer AH, Rodrigues VF, da\
    \ Costa CA, da Rosa Righi R, Roehrs A, \nAntunes RS (2021) Fogchain: a fog computing\
    \ architecture integrat-\ning blockchain and internet of things for personal health\
    \ records. IEEE \nAccess 9:122723–122737\n 55. Whaiduzzaman M, Mahi MJN, Barros\
    \ A, Khalil MI, Fidge C, Buyya \nR (2021) BFIM: performance measurement of a blockchain\
    \ based \nhierarchical tree layered fog-IoT microservice architecture. IEEE Access\
    \ \n9:106655–106674\n 56. Lei A, Cruickshank H, Cao Y, Asuquo P, Ogah CPA, Sun\
    \ Z (2017) Block-\nchain-based dynamic key management for heterogeneous intelligent\
    \ \ntransportation systems. IEEE Internet Things J 4:1832–1843\n 57. Yeow K, Gani\
    \ A, Ahmad RW, Rodrigues JJ, Ko K (2017) Decentralized \nconsensus for edge-centric\
    \ internet of things: a review, taxonomy, and \nresearch issues. IEEE Access 6:1513–1524\n\
    \ 58. Gumaei A, Al-Rakhami M, Hassan MM, Pace P, Alai G, Lin K et al (2021) \n\
    Deep learning and blockchain with edge computing for 5G-enabled \ndrone identification\
    \ and flight mode detection. IEEE Netw 35:94–100\n 59. Chang Z, Guo W, Guo X,\
    \ Chen T, Min G, Abualnaja KM et al (2021) \nBlockchain-empowered drone networks:\
    \ architecture, features, and \nfuture. IEEE Netw 35:86–93\n 60. Aloqaily M, Bouachir\
    \ O, Boukerche A, Al Ridhawi I (2021) Design guide-\nlines for blockchain-assisted\
    \ 5G-UAV networks. IEEE Netw 35:64–71\n 61. Yang H-K, Cha H-J, Song Y-J (2018)\
    \ Secure identifier management \nbased on blockchain technology in NDN environment.\
    \ IEEE Access \n7:6262–6268\n 62. Gao J, Asamoah KO, Sifah EB, Smahi A, Xia Q,\
    \ Xia H et al (2018) Grid-\nMonitoring: secured sovereign blockchain based monitoring\
    \ on smart \ngrid. IEEE Access 6:9917–9925\nPage 32 of 36\nAlzoubi et al. Journal\
    \ of Cloud Computing           (2022) 11:80 \n 63. Uriarte RB, DeNicola R (2018)\
    \ Blockchain-based decentralized cloud/\nfog solutions: challenges, opportunities,\
    \ and standards. IEEE Commun. \nStand. Mag. 2:22–28\n 64. Bouachir O, Aloqaily\
    \ M, Tseng L, Boukerche A (2020) Blockchain and \nfog computing for cyberphysical\
    \ systems: the case of smart industry. \nComputer 53:36–45\n 65. Li M, Zhu L,\
    \ Lin X (2019) Efficient and privacy-preserving carpooling \nusing blockchain-assisted\
    \ vehicular fog computing. IEEE Internet \nThings J 6:4573–4584\n 66. He Y, Wang\
    \ Y, Qiu C, Lin Q, Li J, Ming Z (2020) Blockchain-based edge \ncomputing resource\
    \ allocation in IoT: a deep reinforcement learning \napproach. IEEE Internet Things\
    \ J 8:2226–2237\n 67. Yang L, Li M, Zhang H, Ji H, Xiao M, Li X (2020) Distributed\
    \ resource \nmanagement for blockchain in fog-enabled IoT networks. IEEE Inter-\n\
    net Things J 8:2330–2341\n 68. Wu D, Ansari N (2020) A cooperative computing strategy\
    \ for block-\nchain-secured fog computing. IEEE Internet Things J 7:6603–6609\n\
    \ 69. Wang Y (2020) A blockchain system with lightweight full node based \non\
    \ dew computing. IoT 11:100184\n 70. Qu Y, Gao L, Luan TH, Xiang Y, Yu S, Li B\
    \ et al (2020) Decentralized pri-\nvacy using blockchain-enabled federated learning\
    \ in fog computing. \nIEEE Internet Things J 7:5171–5183\n 71. Memon RA, Li JP,\
    \ Nazeer MI, Khan AN, Ahmed J (2019) DualFog-IoT: \nadditional fog layer for solving\
    \ blockchain integration problem in \ninternet of things. IEEE Access 7:169073–169093\n\
    \ 72. Debe M, Salah K, Rehman MHU, Svetinovic D (2019) IoT public fog \nnodes\
    \ reputation system: a decentralized solution using ethereum \nblockchain. IEEE\
    \ Access 7:178082–178093\n 73. Sharma V, You I, Palmieri F, Jayakody DNK, Li J\
    \ (2018) Secure and \nenergy-efficient handover in fog networks using blockchain-based\
    \ \nDMM. IEEE Commun Mag 56:22–31\n 74. Gao J, Agyekum KO-BO, Sifah EB, Acheampong\
    \ KN, Xia Q, Du X et al \n(2019) A blockchain-SDN-enabled internet of vehicles\
    \ environ-\nment for fog computing and 5G networks. IEEE Internet Things J \n\
    7:4278–4291\n 75. Yao Y, Chang X, Mišić J, Mišić VB, Li L (2019) BLA: Blockchain-assisted\
    \ \nlightweight anonymous authentication for distributed vehicular fog \nservices.\
    \ IEEE Internet Things J 6:3775–3784\n 76. Debe M, Salah K, Rehman MHU, Svetinovic\
    \ D (2020) Monetization of \nservices provided by public fog nodes using blockchain\
    \ and smart \ncontracts. IEEE Access 8:20118–20128\n 77. Sharma PK, Chen M-Y,\
    \ Park JH (2017) A software defined fog node \nbased distributed blockchain cloud\
    \ architecture for IoT. IEEE Access \n6:115–124\n 78. Xiong Z, Feng S, Wang W,\
    \ Niyato D, Wang P, Han Z (2018) Cloud/\nfog computing resource management and\
    \ pricing for blockchain \nnetworks. IEEE Internet Things J 6:4585–4600\n 79.\
    \ Jiao Y, Wang P, Niyato D, Suankaewmanee K (2019) Auction mecha-\nnisms in cloud/fog\
    \ computing resource allocation for public block-\nchain networks. IEEE Trans\
    \ Parallel Distrib Syst 30:1975–1989\n 80. Mondal S, Wijewardena KP, Karuppuswami\
    \ S, Kriti N, Kumar D, Chahal \nP (2019) Blockchain inspired RFID-based information\
    \ architecture for \nfood supply chain. IEEE Internet Things J 6:5803–5813\n 81.\
    \ Huang X, Xu C, Wang P, Liu H (2018) LNSC: a security model for \nelectric vehicle\
    \ and charging pile management based on blockchain \necosystem. IEEE Access 6:13565–13574\n\
    \ 82. Dorri A, Steger M, Kanhere SS, Jurdak R (2017) Blockchain: a distrib-\n\
    uted solution to automotive security and privacy. IEEE Commun Mag \n55:119–125\n\
    \ 83. Kang J, Yu R, Huang X, Zhang Y (2017) Privacy-preserved pseudonym \nscheme\
    \ for fog computing supported internet of vehicles. IEEE Trans \nIntell Transp\
    \ Syst 19:2627–2637\n 84. Huang J, Kong L, Chen G, Wu M-Y, Liu X, Zeng P (2019)\
    \ Towards \nsecure industrial IoT: Blockchain system with credit-based consensus\
    \ \nmechanism. IEEE Trans. Industr. Inform 15:3680–3689\n 85. Baniata H, Kertesz\
    \ A (2020) A survey on blockchain-fog integration \napproaches. IEEE Access 8:102657–102668\n\
    \ 86. Ferrag MA, Shu L, Yang X, Derhab A, Maglaras L (2020) Security and \nprivacy\
    \ for green IoT-based agriculture: review, blockchain solutions, \nand challenges.\
    \ IEEE Access 8:32031–32053\n 87. Kumar T, Harjula E, Ejaz M, Manzoor A, Porambage\
    \ P, Ahmad I et al \n(2020) BlockEdge: blockchain-edge framework for industrial\
    \ IoT \nnetworks. IEEE Access 8:154166–154185\n 88. Li H, Han D, Tang M (2020)\
    \ A privacy-preserving charging scheme \nfor electric vehicles using blockchain\
    \ and fog computing. IEEE Syst J \n15:3189–3200\n 89. Liao H, Mu Y, Zhou Z, Sun\
    \ M, Wang Z, Pan C (2020) Blockchain and \nlearning-based secure and intelligent\
    \ task offloading for vehicular fog \ncomputing. IEEE Trans Intell Transp Syst\
    \ 22:4051–4063\n 90. Rivera AV, Refaey A, Hossain E (2020) A blockchain framework\
    \ for secure \ntask sharing in multi-access edge computing. IEEE Netw 35:176–183\n\
    \ 91. Debe M, Salah K, Rehman MHU, Svetinovic D (2020) Blockchain-\nbased decentralized\
    \ reverse bidding in fog computing. IEEE Access \n8:81686–81697\n 92. Rahman MA,\
    \ Rashid MM, Hossain MS, Hassanain E, Alhamid MF, Guizani \nM (2019) Blockchain\
    \ and IoT-based cognitive edge framework for shar-\ning economy services in a\
    \ smart city. IEEE Access 7:18611–18621\n 93. Gai K, Wu Y, Zhu L, Xu L, Zhang\
    \ Y (2019) Permissioned blockchain and \nedge computing empowered privacy-preserving\
    \ smart grid networks. \nIEEE Internet Things J 6:7992–8004\n 94. Huang X, Ye\
    \ D, Yu R, Shu L (2020) Securing parked vehicle assisted fog \ncomputing with\
    \ blockchain and optimal smart contract design. IEEE/\nCAA J. Autom. Sin 7:426–441\n\
    \ 95. Iqbal S, Malik AW, Rahman AU, Noor RM (2020) Blockchain-based \nreputation\
    \ management for task offloading in micro-level vehicular fog \nnetwork. IEEE\
    \ Access 8:52968–52980\n 96. Kang J, Yu R, Huang X, Wu M, Maharjan S, Xie S et\
    \ al (2018) Blockchain \nfor secure and efficient data sharing in vehicular edge\
    \ computing and \nnetworks. IEEE Internet Things J 6:4660–4670\n 97. Kong Q, Su\
    \ L, Ma M (2020) Achieving privacy-preserving and verifiable \ndata sharing in\
    \ vehicular fog with blockchain. IEEE Trans Intell Transp \nSyst 22:4889–4898\n\
    \ 98. Lei K, Du M, Huang J, Jin T (2020) Groupchain: towards a scalable public\
    \ \nblockchain in fog computing of IoT services computing. IEEE Trans Serv \n\
    Comput 13:252–262\n 99. Liu M, Yu FR, Teng Y, Leung VC, Song M (2018) Distributed\
    \ resource \nallocation in blockchain-based video streaming systems with mobile\
    \ \nedge computing. IEEE Trans Wirel Commun 18:695–708\n 100. Liu H, Zhang Y,\
    \ Yang T (2018) Blockchain-enabled security in electric \nvehicles cloud and edge\
    \ computing. IEEE Netw 32:78–83\n 101. Luong NC, Jiao Y, Wang P, Niyato D, Kim\
    \ DI, Han Z (2020) A machine-\nlearning-based auction for resource trading in\
    \ fog computing. IEEE \nCommun Mag 58:82–88\n 102. Pan J, Wang J, Hester A, Alqerm\
    \ I, Liu Y, Zhao Y (2018) EdgeChain: an \nedge-IoT framework and prototype based\
    \ on blockchain and smart \ncontracts. IEEE Internet Things J 6:4719–4732\n 103.\
    \ Ceccarelli A, Cinque M, Esposito C, Foschini L, Giannelli C, Lollini P \n(2020)\
    \ FUSION—fog computing and blockchain for trusted industrial \ninternet of things.\
    \ IEEE Trans Eng Manag\n 104. Rahman MA, Hossain MS, Loukas G, Hassanain E, Rahman\
    \ SS, Alhamid \nMF et al (2018) Blockchain-based mobile edge computing framework\
    \ \nfor secure therapy applications. IEEE Access 6:72469–72478\n 105. Sharma PK,\
    \ Rathore S, Jeong Y-S, Park JH (2018) SoftEdgeNet: SDN \nbased energy-efficient\
    \ distributed network architecture for edge com-\nputing. IEEE Commun Mag 56:104–111\n\
    \ 106. Chen Z, Cui H, Wu E, Li Y, Xi Y (2020) Secure distributed data manage-\n\
    ment for fog computing in large-scale IoT application: a blockchain-\nbased solution.\
    \ In: Proceedings of the 2020 IEEE international confer-\nence on communications\
    \ workshops (ICC workshops). IEEE, Dublin, pp \n1–6\n 107. Wu B, Xu K, Li Q, Ren\
    \ S, Liu Z, Zhang Z (2020) Toward blockchain-\npowered trusted collaborative services\
    \ for edge-centric networks. IEEE \nNetw 34:30–36\n 108. Xiong Z, Zhang Y, Niyato\
    \ D, Wang P, Han Z (2018) When mobile block-\nchain meets edge computing. IEEE\
    \ Commun. Mag. 56:33–39\n 109. Yang R, Yu FR, Si P, Yang Z, Zhang Y (2019) Integrated\
    \ blockchain and \nedge computing systems: A survey, some research issues and\
    \ chal-\nlenges. IEEE Commun. Surv. Tutor. 21:1508–1532\n 110. Abdellatif AA,\
    \ Samara L, Mohamed A, Erbad A, Chiasserini CF, Guizani \nM et al (2021) MEdge-chain:\
    \ leveraging edge computing and \nPage 33 of 36\nAlzoubi et al. Journal of Cloud\
    \ Computing           (2022) 11:80 \n \nblockchain for efficient medical data\
    \ exchange. IEEE Internet Things J \n8:15762–15775\n 111. Bai F, Shen T, Yu Z,\
    \ Zeng K, Gong B (2021) Trustworthy blockchain-\nempowered collaborative edge\
    \ computing-as-a-service scheduling \nand data sharing in the IIoE. IEEE Internet\
    \ Things J 9:14752-14766\n 112. Chen T, Zhang L, Choo K-KR, Zhang R, Meng X (2021)\
    \ Blockchain based \nkey management scheme in fog-enabled IoT systems. IEEE Internet\
    \ \nThings J 8:10766–10778\n 113. Dewanta F, Mambo M (2021) BPT scheme: establishing\
    \ trusted vehicu-\nlar fog computing service for rural area based on blockchain\
    \ approach. \nIEEE Trans Veh Technol 70:1752–1769\n 114. Fan Y, Zhao G, Lei X,\
    \ Liang W, Li K-C, Choo K-KR et al (2021) SBBS: A \nsecure blockchain-based scheme\
    \ for IoT data credibility in fog environ-\nment. IEEE Internet Things J 8:9268–9277\n\
    \ 115. Guan Z, Zhou X, Liu P, Wu L, Yang W (2021) A Blockchain based dual \nside\
    \ privacy preserving multi party computation scheme for edge \nenabled smart grid.\
    \ IEEE Internet Things J 9:14287-14299\n 116. Zhang C, Zhu L, Xu C (2021) BPAF:\
    \ Blockchain-enabled reliable and \nprivacy-preserving authentication for fog-based\
    \ IoT devices. IEEE Con-\nsum. Electron. Mag. 11:88-96\n 117. Lakhan A, Ahmad\
    \ M, Bilal M, Jolfaei A, Mehmood RM (2021) Mobility \naware blockchain enabled\
    \ offloading and scheduling in vehicular fog \ncloud computing. IEEE Trans Intell\
    \ Transp Syst 22:4212–4223\n 118. Gao Y, Wu W, Si P, Yang Z, Yu FR (2021) B-ReST:\
    \ Blockchain-enabled \nresource sharing and transactions in fog computing. IEEE\
    \ Wirel Com-\nmun 28:172–180\n 119. Núñez-Gómez C, Caminero B, Carrión C (2021)\
    \ HIDRA: A distributed \nblockchain-based architecture for fog/edge computing\
    \ environments. \nIEEE Access 9:75231–75251\n 120. Shynu P, Menon VG, Kumar RL,\
    \ Kadry S, Nam Y (2021) Blockchain-based \nsecure healthcare application for diabetic-cardio\
    \ disease prediction in \nfog computing. IEEE Access 9:45706–45720\n 121. Jangirala\
    \ S, Das AK, Vasilakos AV (2019) Designing secure lightweight \nblockchain-enabled\
    \ RFID-based authentication protocol for supply \nchains in 5G mobile edge computing\
    \ environment. IEEE Trans. Industr. \nInform 16:7081–7093\n 122. Wang J, Wu L,\
    \ Choo K-KR, He D (2020) Blockchain-based anonymous \nauthentication with key\
    \ management for smart grid edge computing \ninfrastructure. IEEE Trans. Industr.\
    \ Inform 16:1984–1992\n 123. Wu Y, Lu G, Jin N, Fu L, Zhao JZ (2021) Trusted fog\
    \ computing for \nprivacy smart contract blockchain. In: 6th international conference\
    \ on \nsignal and image processing (ICSIP). IEEE, Nanjing, pp 1042–1047\n 124.\
    \ Alotaibi J, Alazzawi L (2021) Safiov: a secure and fast communication in \n\
    fog-based internet-of-vehicles using sdn and blockchain. In: 2021 IEEE \ninternational\
    \ Midwest symposium on circuits and systems (MWSCAS). \nIEEE, Lansing, pp 334–339\n\
    \ 125. Samaniego M, Jamsrandorj U, Deters R (2016) Blockchain as a service \n\
    for IoT. In: proceedings of the 2016 IEEE international conference on \ninternet\
    \ of things (iThings) and IEEE green computing and commu-\nnications (GreenCom)\
    \ and IEEE cyber, physical and social computing \n(CPSCom) and IEEE smart data\
    \ (SmartData). IEEE, Chengdu, pp 433–436\n 126. Ziegler MH, Groβmann M, Krieger\
    \ UR (2019) Integration of fog com-\nputing and blockchain technology using the\
    \ plasma framework. In: \nProceedings of the 2019 IEEE international conference\
    \ on Blockchain \nand cryptocurrency (ICBC). IEEE, Seoul, pp 120–123\n 127. Gu\
    \ X, Peng J, Yu W, Cheng Y, Jiang F, Zhang X et al (2019) Using block-\nchain\
    \ to enhance the security of fog-assisted crowdsensing systems. \nIn: Proceedings\
    \ of the 28th International Symposium on Industrial \nElectronics (ISIE). IEEE,\
    \ Vancouver, pp 1859–1864\n 128. Kaur K, Garg S, Kaddoum G, Gagnon F, Ahmed SH\
    \ (2019) Blockchain-\nbased lightweight authentication mechanism for vehicular\
    \ fog infra-\nstructure. In: Proceedings of the 2019 IEEE International conference\
    \ on \ncommunications workshops (ICC workshops). IEEE, Shanghai, pp 1–6\n 129.\
    \ Zhu X, Badr Y (2018) Fog computing security architecture for the inter-\nnet\
    \ of things using blockchain-based social networks. In: Proceedings \nof the 2018\
    \ IEEE international conference on internet of things (iThings) \nand IEEE green\
    \ computing and communications (GreenCom) and IEEE \ncyber, physical and social\
    \ computing (CPSCom) and IEEE smart data \n(SmartData). IEEE, Halifax, pp 1361–1366\n\
    \ 130. Almadhoun R, Kadadha M, Alhemeiri M, Alshehhi M, Salah K (2018) A \nuser\
    \ authentication scheme of IoT devices using blockchain-enabled \nfog nodes. In:\
    \ Proceedings of the 15th international conference on \ncomputer systems and applications\
    \ (AICCSA). IEEE, Aqaba, pp 1–8\n 131. Holste B, Stankovski V, Kochovski P, Puliafito\
    \ A, Massonet P (2019) \nBlockchain based variability management solutions for\
    \ fog native open \nsource software. In: Proceedings of the 2019 XXVII International\
    \ Confer-\nence on Information, Communication and Automation Technologies \n(ICAT),\
    \ pp 1–6\n 132. Lallas EN, Xenakis A, Stamoulis G (2019) A generic framework for\
    \ a peer \nto peer blockchain based fog architecture in industrial automation.\
    \ In: \nProceedings of the 4th south-East Europe design automation Com-\nputer\
    \ Engineering, Computer Networks and Social Media Conference \n(SEEDA-CECNSM).\
    \ IEEE, Piraeus, pp 1–5\n 133. Seitz A, Henze D, Miehle D, Bruegge B, Nickles\
    \ J, Sauer M (2018) Fog \ncomputing as enabler for blockchain-based IIoT app marketplaces-a\
    \ \ncase study. In: Proceedings of the fifth international conference on \ninternet\
    \ of things: systems, management and security. IEEE, Valencia, \npp 182–188\n\
    \ 134. Savi M, Santoro D, Di Meo K, Pizzolli D, Pincheira M, Giaffreda R et al\
    \ \n(2020) A blockchain-based brokerage platform for fog computing \nresource\
    \ federation. In: Proceedings of the 23rd conference on innova-\ntion in clouds,\
    \ internet and networks and workshops (ICIN). IEEE, Paris, \npp 147–149\n 135.\
    \ Alshehri M, Panda B (2019) A blockchain-encryption-based approach \nto protect\
    \ fog federations from rogue nodes. In: Proceedings of the 3rd \nCyber Security\
    \ in Networking Conference (CSNet). IEEE, Quito, pp 6–13\n 136. Tang W, Zhao X,\
    \ Rafique W, Dou W (2018) A blockchain-based offload-\ning approach in fog computing\
    \ environment. In: Proceedings of the \n2018 IEEE Intl Conf on parallel & distributed\
    \ processing with applica-\ntions, Ubiquitous Computing & Communications, Big\
    \ Data & Cloud \nComputing, Social Computing & Networking, Sustainable Computing\
    \ \n& Communications (ISPA/IUCC/BDCloud/SocialCom/SustainCom). IEEE, \nMelbourne,\
    \ pp 308–315\n 137. Caro MP, Ali MS, Vecchio M, Giaffreda R (2018) Blockchain-based\
    \ trace-\nability in Agri-food supply chain management: a practical implementa-\n\
    tion. In: Proceedings of the 2018 IoT vertical and topical summit on \nagriculture-Tuscany\
    \ (IOT Tuscany). IEEE, Tuscany, pp 1–4\n 138. Tian H, Nan F, Chang C-C, Huang\
    \ Y, Lu J, Du Y (2019) Privacy-preserving \npublic auditing for secure data storage\
    \ in fog-to-cloud computing. J \nNetw Comput Appl 127:59–69\n 139. Ashik MH, Maswood\
    \ MMS, Alharbi AG (2020) Designing a fog-cloud \narchitecture using blockchain\
    \ and analyzing security improvements. In: \nProceedings of the 2020 international\
    \ conference on electrical, com-\nmunication, and computer engineering (ICECCE).\
    \ IEEE, Istanbul, pp 1–6\n 140. Baouya A, Chehida S, Bensalem S, Bozga M (2020)\
    \ Fog computing and \nblockchain for massive IoT deployment. In: Proceedings of\
    \ the 9th \nMediterranean Conference on Embedded Computing (MECO). IEEE, \nBudva,\
    \ pp 1–4\n 141. Pokrovskaia NN (2017) Tax, financial and social regulatory mechanisms\
    \ \nwithin the knowledge-driven economy. Blockchain algorithms and fog \ncomputing\
    \ for the efficient regulation. In: Proceedings of the 2017 XX \nIEEE International\
    \ Conference on Soft Computing and Measurements \n(SCM). IEEE, St. Petersburg,\
    \ pp 709–712\n 142. Simpson G, Quist-Aphetsi K (2019) A centralized data validation\
    \ \napproach for distributed healthcare systems in dew-fog computing \nenvironment\
    \ using blockchain. In: Proceedings of the 2019 interna-\ntional conference on\
    \ cyber security and internet of things (ICSIoT). IEEE, \nAccra, pp 1–4\n 143.\
    \ Alkhazaali AH, Oğuz A (2020) Lightweight fog based solution for \nprivacy-preserving\
    \ in IoT using blockchain. In: Proceedings of the 2020 \ninternational congress\
    \ on human-computer interaction, optimization \nand robotic applications (HORA).\
    \ IEEE, Ankara, pp 1–10\n 144. Arun M, Balamurali S, Rawal BS, Duan Q, Kumar RL,\
    \ Balamurugan B \n(2020) Mutual authentication and authorized data access between\
    \ fog \nand user based on blockchain technology. In: Proceedings of the 2020 \n\
    IEEE conference on computer communications workshops (INFOCOM \nWKSHPS). IEEE,\
    \ Toronto, pp 37–42\n 145. Ismail S, Almayouf R, Chehab S, Alghamdi S, Almutairi\
    \ A, Alasmari B et al \n(2020) Edge IoT-cloud framework based on blockchain. In:\
    \ Proceedings \nof the 2nd international conference on computer and information\
    \ sci-\nences (ICCIS). IEEE, Sakaka, pp 1–7\nPage 34 of 36\nAlzoubi et al. Journal\
    \ of Cloud Computing           (2022) 11:80 \n 146. Lautert F, Pigatto DF, Gomes\
    \ L (2020) A fog architecture for privacy-\npreserving data provenance using blockchains.\
    \ In: Proceedings of the \n2020 IEEE symposium on computers and communications\
    \ (ISCC). IEEE, \nRennes, pp 1–6\n 147. Misra S, Deb PK, Pathak N, Mukherjee A\
    \ (2020) Blockchain-enabled sdn \nfor securing fog-based resource-constrained\
    \ iot. In: Proceedings of the \nIEEE conference on computer communications workshops\
    \ (INFOCOM \nWKSHPS). IEEE, Toronto, pp 490–495\n 148. Mounnan O, El Mouatasim\
    \ A, Manad O, Hidar T, Abou El Kalam A, \nIdboufker N (2020) Privacy-aware and\
    \ authentication based on \nblockchain with fault tolerance for IoT enabled fog\
    \ computing. In: Pro-\nceedings of the fifth international conference on fog and\
    \ Mobile edge \ncomputing (FMEC). IEEE, Paris, pp 347–352\n 149. Stanciu A (2017)\
    \ Blockchain based distributed control system for edge \ncomputing. In: Proceedings\
    \ of the 21st international conference on \ncontrol systems and computer science\
    \ (CSCS). IEEE, Bucharest, pp \n667–671\n 150. Saputro MYA, Sari RF (2019) Securing\
    \ IoT network using lightweight \nmulti-fog (LMF) blockchain model. In: Proceedings\
    \ of the 6th inter-\nnational conference on electrical engineering, computer science\
    \ and \ninformatics (EECSI). IEEE, Bandung, pp 183–188\n 151. Cinque M, Esposito\
    \ C, Russo S (2018) Trust management in fog/edge \ncomputing by means of blockchain\
    \ technologies. In: Proceedings of \nthe 2018 IEEE international conference on\
    \ internet of things (iThings) \nand IEEE green computing and communications (GreenCom)\
    \ and IEEE \ncyber, physical and social computing (CPSCom) and IEEE smart data\
    \ \n(SmartData). IEEE, Halifax, pp 1433–1439\n 152. Baker T, Asim M, Samwini H,\
    \ Shamim N, Alani MM, Buyya R (2022) A \nblockchain-based Fog-oriented lightweight\
    \ framework for smart public \nvehicular transportation systems. Com Net 203:108676\n\
    \ 153. Deepa N, Pham Q-V, Nguyen DC, Bhattacharya S, Prabadevi B, \nGadekallu\
    \ TR et al (2022) A survey on blockchain for big data: \nApproaches, opportunities,\
    \ and future directions. Future Gener. Com-\nput. Syst. 131:209–226\n 154. Hamdi\
    \ AMA, Hussain FK, Hussain OK (2022) Task offloading in vehicular \nfog computing:\
    \ state-of-the-art and open issues. Futur Gener Comput \nSyst 133:201–212\n 155.\
    \ Lakhan A, Mohammed MA, Kadry S, AlQahtani SA, Maashi MS, Abdulka-\nreem KH (2022)\
    \ Federated learning-aware multi-objective modeling \nand blockchain-enable system\
    \ for IIoT applications. Comput Electr Eng \n100:107839\n 156. Hu S, Huang S,\
    \ Huang J, Su J (2021) Blockchain and edge computing \ntechnology enabling organic\
    \ agricultural supply chain: a framework \nsolution to trust crisis. Comput Ind\
    \ Eng 153:107079\n 157. Yang J, Lu Z, Wu J (2018) Smart-toy-edge-computing-oriented\
    \ data \nexchange based on blockchain. J Syst Archit 87:36–48\n 158. Tuli S, Mahmud\
    \ R, Tuli S, Buyya R (2019) Fogbus: a blockchain-based \nlightweight framework\
    \ for edge and fog computing. J Syst Softw \n154:22–36\n 159. Islam N, Faheem\
    \ Y, Din IU, Talha M, Guizani M, Khalil M (2019) A \nblockchain-based fog computing\
    \ framework for activity recognition \nas an application to e-healthcare services.\
    \ Futur Gener Comput Syst \n100:569–578\n 160. Kochovski P, Gec S, Stankovski\
    \ V, Bajec M, Drobintsev PD (2019) Trust \nmanagement in a blockchain based fog\
    \ computing platform with \ntrustless smart oracles. Futur Gener Comput Syst 101:747–759\n\
    \ 161. Rathore S, Kwon BW, Park JH (2019) BlockSecIoTNet: Blockchain-based \n\
    decentralized security architecture for IoT network. J Netw Comput \nAppl 143:167–177\n\
    \ 162. Uddin MA, Stranieri A, Gondal I, Balasubramanian V (2020) Blockchain \n\
    leveraged decentralized IoT eHealth framework. Internet of Things \n9:100159\n\
    \ 163. Chen S, Yang L, Zhao C, Varadarajan V, Wang K (2020) Double-block-\nchain\
    \ assisted secure and anonymous data aggregation for fog-ena-\nbled smart grid.\
    \ Engineering 8:159-169\n 164. McGhin T, Choo K-KR, Liu CZ, He D (2019) Blockchain\
    \ in healthcare \napplications: Research challenges and opportunities. J. Netw.\
    \ Comput. \nAppl. 135:62–75\n 165. Patwary AA-N, Fu A, Battula SK, Naha RK, Garg\
    \ S, Mahanti A (2020) \nFogAuthChain: a secure location-based authentication scheme\
    \ in \nfog computing environments using Blockchain. Comput Commun \n162:212–224\n\
    \ 166. Baniata H, Anaqreh A, Kertesz A (2021) PF-BTS: a privacy-aware fog-\nenhanced\
    \ blockchain-assisted task scheduling. Inf Process Manag \n58:102393\n 167. Barenji\
    \ AV, Guo H, Wang Y, Li Z, Rong Y (2021) Toward blockchain and \nfog computing\
    \ collaborative design and manufacturing platform: sup-\nport customer view. Robot\
    \ Comput Integr Manuf 67:102043\n 168. Gul MJ, Subramanian B, Paul A, Kim J (2021)\
    \ Blockchain for public health \ncare in smart society. Microprocess Microsyst\
    \ 80:103524\n 169. Pavithran D, Al-Karaki JN, Shaalan K (2021) Edge-based blockchain\
    \ \narchitecture for event-driven IoT using hierarchical identity based \nencryption.\
    \ Inf Process Manag 58:102528\n 170. Sun L, Yang Q, Chen X, Chen Z (2021) RC-chain:\
    \ reputation-based \ncrowdsourcing blockchain for vehicular networks. J Netw Comput\
    \ Appl \n176:102956\n 171. Eddine MS, Ferrag MA, Friha O, Maglaras L (2021) EASBF:\
    \ an efficient \nauthentication scheme over blockchain for fog computing-enabled\
    \ \ninternet of vehicles. J. Inf. Secur. Appl. 59:102802\n 172. Shukla S, Thakur\
    \ S, Hussain S, Breslin JG, Jameel SM (2021) Identification \nand authentication\
    \ in healthcare internet-of-things using integrated \nfog computing based blockchain\
    \ model. Internet of Things 15:100422\n 173. Liu G, Wu J, Wang T (2021) Blockchain-enabled\
    \ fog resource access and \ngranting. Intelligent and Converged Networks 2:108–114\n\
    \ 174. Jung MY, Kim W-S, Chung S-H, Jang JW (2017) A blockchain-based ID/\nIP\
    \ mapping and user-friendly fog computing for hyper-connected IoT \narchitecture.\
    \ Int. j. inf. commun. technol. digit. 2:12–19\n 175. Nadeem S, Rizwan M, Ahmad\
    \ F, Manzoor J (2019) Securing cognitive \nradio vehicular ad hoc network with\
    \ fog node based distributed block-\nchain cloud architecture. Int J Adv Comput\
    \ Sci Appl. 10:288–295\n 176. Alam T (2019) IoT-fog: a communication framework\
    \ using blockchain in \nthe internet of things. Int J Recent Technol Eng. 7:1–5\n\
    \ 177. Alam T (2020) Design a blockchain-based middleware layer in the \ninternet\
    \ of things architecture. Int. J. Inform. Visualization 4:28–31\n 178. Ren Y,\
    \ Leng Y, Cheng Y, Wang J (2019) Secure data storage based \non blockchain and\
    \ coding in edge computing. Math Biosci Eng \n16:1874–1892\n 179. Baniata H, Kertesz\
    \ A (2021) FoBSim: an extensible open-source simula-\ntion tool for integrated\
    \ fog-blockchain systems. PeerJ Computer \nScience 7:e431\n 180. Kong M, Zhao\
    \ J, Sun X, Nie Y (2021) Secure and efficient computing \nresource management\
    \ in blockchain-based vehicular fog computing. \nChina Com 18:115–125\n 181. Sivasangari\
    \ A, Sonti VK, Ajitha P, Deepa D, Vignesh R (2022) Integrated \nsecurity framework\
    \ for healthcare using blockchain and fog computing. \nIn: 2nd international conference\
    \ on power electronics & IoT applica-\ntions in renewable energy and its control\
    \ (PARC). IEEE, Mathura, pp 1–5\n 182. Khaydaraliev M, Rhie M-H, Kim K-H (2022)\
    \ Blockchain-enabled access \ncontrol with fog nodes for independent IoTs. In:\
    \ Proceedings of the \n2022 international conference on information networking\
    \ (ICOIN). IEEE, \nJeju-si, pp 78–83\n 183. Baniata H, Kertész A (2020) PF-BVM:\
    \ A privacy-aware fog-enhanced \nblockchain validation mechanism. In: Proceedings\
    \ of the 10th Interna-\ntional Conference on Cloud Computing and Services Science\
    \ (CLOSER \n2020), pp 430–439\n 184. Davcev D, Kocarev L, Carbone A, Stankovski\
    \ V, Mitresk K (2018) \nBlockchain-based distributed cloud/fog platform for IoT\
    \ supply chain \nmanagement. In: Proceedings of the 8th International Conference\
    \ on \nAdvances in Computing, Electronics and Electrical Technology (CEET), \n\
    pp 51–58\n 185. Pahl C, El Ioini N, Helmer S (2018) A decision framework for blockchain\
    \ \nplatforms for IoT and edge computing. In: Proceedings of the 3rd \nInternational\
    \ Conference on Internet of Things, Big Data and Security \n(IoTBDS), pp 105–113\n\
    \ 186. Gharbi C, Hsairi L, Zagrouba E (2021) A secure integrated fog cloud-IoT\
    \ \narchitecture based on multi-agents system and blockchain. In: Proceed-\nings\
    \ of the 13th International Conference on Agents and Artificial \nIntelligence\
    \ (ICAART 2021), pp 1184–1191\n 187. Ou W, Deng M, Luo E (2019) A decentralized\
    \ and anonymous data \ntransaction scheme based on blockchain and zero-knowledge\
    \ proof \nin vehicle networking (workshop paper). In: Wang X, Gao H, Iqbal M,\
    \ \nPage 35 of 36\nAlzoubi et al. Journal of Cloud Computing           (2022)\
    \ 11:80 \n \nMin G (eds) Collaborative Computing: Networking, Applications and\
    \ \nWorksharing. CollaborateCom 2019 Lecture Notes of the Institute for \nComputer\
    \ Sciences, Social Informatics and Telecommunications Engi-\nneering. Springer,\
    \ ed Cham, pp 712–726\n 188. Liu Y, Zhang J, Zhan J (2021) Privacy protection\
    \ for fog computing \nand the internet of things data based on blockchain. Clust\
    \ Comput \n24:1331–1345\n 189. Tomar A, Tripathi S (2022) Blockchain-assisted\
    \ authentication and key \nagreement scheme for fog-based smart grid. Clust Comput\
    \ 25:451–468\n 190. Bonadio A, Chiti F, Fantacci R, Vespri V (2020) An integrated\
    \ framework \nfor blockchain inspired fog communications and computing in internet\
    \ \nof vehicles. J Ambient Intell Humaniz Comput 11:755–762\n 191. Liu X (2021)\
    \ Towards blockchain-based resource allocation models for \ncloud-edge computing\
    \ in IoT applications. Wirel Pers Commun 1–19. \nhttps:// doi. org/ 10. 1007/\
    \ s11277- 021- 08213-9\n 192. Mikavica B, Kostić-Ljubisavljević A (2021) Blockchain-based\
    \ solutions for \nsecurity, privacy, and trust management in vehicular networks:\
    \ a survey. \nJ Supercomput 77:1–56\n 193. Jang S-H, Guejong J, Jeong J, Sangmin\
    \ B (2019) Fog computing archi-\ntecture based blockchain for industrial IoT.\
    \ In: International Conference \non Computational Science. Springer, Cham, pp\
    \ 593–606\n 194. I. Podsevalov, O. Iakushkin, R. Kurbangaliev, and V. Korkhov,\
    \ \"Blockchain \nas a platform for fog computing,\" in Proceedings of the International\
    \ \nConference on Computational Science and Its Applications. Springer, \nCham,\
    \ 2019, pp. 596–605\n 195. Bhattacharya P, Tanwar S, Shah R, Ladha A (2020) Mobile\
    \ edge \ncomputing-enabled blockchain framework—a survey. In: Singh P, Kar \n\
    A, Singh Y, Kolekar M, Tanwar S (eds) Proceedings of ICRIC 2019, vol 597. \nSpringer,\
    \ ed Cham, pp 797–809\n 196. Shukla S, Thakur S, Hussain S, Breslin JG (2021)\
    \ A blockchain-enabled \nfog computing model for peer-to-peer energy trading in\
    \ smart grid. In: \nPrieto J, Partida A, Leitão P, Pinto A (eds) Blockchain and\
    \ Applications \nBLOCKCHAIN 2021 Lecture Notes in Networks and Systems, vol 320.\
    \ \nSpringer, ed Cham, pp 14–23\n 197. Venkadeshan R, Jegatha M (2022) Blockchain-based\
    \ fog computing \nmodel (BFCM) for IoT smart cities. In: Gururaj HL, Kumar VR,\
    \ Goundar \nS, Elngar AA, Swathi BH (eds) Convergence of Internet of Things and\
    \ \nBlockchain Technologies EAI/Springer Innovations in Communication \nand Computing.\
    \ Springer, ed Cham, pp 77–92\n 198. Li M, Zhu L, Lin X (2019) CoRide: A privacy-preserving\
    \ collaborative-ride \nhailing service using blockchain-assisted vehicular fog\
    \ computing. In: \nChen S, Choo K, Fu X, Lou W, Mohaisen A (eds) Security and\
    \ Privacy in \nCommunication Networks SecureComm 2019 Lecture Notes of the \n\
    Institute for Computer Sciences, Social Informatics and Telecommuni-\ncations\
    \ Engineering, vol 305. Springer, ed Cham, pp 408–422\n 199. Kwon JH, Kim YK,\
    \ Temir A, Artykbayev K, Demirci MF, Kim MH (2021) \nBlockchain-based multi-fogcloud\
    \ authentication system. In: Park JJ, \nFong SJ, Pan Y, Sung Y (eds) Advances\
    \ in Computer Science and Ubiqui-\ntous Computing. Springer, ed Cham, pp 521–528\n\
    \ 200. Kiwelekar AW, Patil P, Netak LD, Waikar SU (2021) Blockchain-based \nsecurity\
    \ services for fog computing. In: Chang W, Wu J (eds) Fog/Edge \nComputing For\
    \ Security, Privacy, and Applications, vol 83. Springer, ed \nCham, pp 271–290\n\
    \ 201. Abdelmaboud A, Ahmed AIA, Abaker M, Eisa TAE, Albasheer H, Ghorashi \n\
    SA et al (2022) Blockchain for IoT applications: taxonomy, platforms, \nrecent\
    \ advances, challenges and future research directions. Electronics \n11:630\n\
    \ 202. Ngabo D, Wang D, Iwendi C, Anajemba JH, Ajao LA, Biamba C (2021) \nBlockchain-based\
    \ security mechanism for the medical data at fog \ncomputing architecture of internet\
    \ of things. Electronics 10:2110\n 203. Singh P, Nayyar A, Kaur A, Ghosh U (2020)\
    \ Blockchain and fog based \narchitecture for internet of everything in smart\
    \ cities. Future Internet \n12:61\n 204. Muthanna A, Ateya AA, Khakimov A, Gudkova\
    \ I, Abuarqoub A, Samouy-\nlov K et al (2019) Secure and reliable IoT networks\
    \ using fog computing \nwith software-defined networking and blockchain. J. Sens.\
    \ Actuator \nNetw 8:15\n 205. Wang H, Wang L, Zhou Z, Tao X, Pau G, Arena F (2019)\
    \ Blockchain-based \nresource allocation model in fog computing. Appl Sci 9:5538\n\
    \ 206. Fernández-Caramés TM, Fraga-Lamas P (2019) Design of a fog comput-\ning,\
    \ blockchain and IoT-based continuous glucose monitoring system \nfor crowdsourcing\
    \ mHealth. Proceedings 4:37\n 207. Fernández-Caramés TM, Fraga-Lamas P (2019)\
    \ Towards next generation \nteaching, learning, and context-aware applications\
    \ for higher educa-\ntion: a review on blockchain, IoT, fog and edge computing\
    \ enabled \nsmart campuses and universities. Appl Sci 9:4479\n 208. Nkenyereye\
    \ L, Adhi Tama B, Shahzad MK, Choi Y-H (2020) Secure and \nblockchain-based emergency\
    \ driven message protocol for 5G enabled \nvehicular edge computing. Sensors 20:154\n\
    \ 209. Ren Y, Zhu F, Qi J, Wang J, Sangaiah AK (2019) Identity management \nand\
    \ access control based on blockchain under edge computing for the \nindustrial\
    \ internet of things. Appl Sci 9:2058\n 210. Tariq N, Asim M, Al-Obeidat F, Zubair\
    \ Farooqi M, Baker T, Hammoudeh \nM et al (2019) The security of big data in fog-enabled\
    \ IoT applications \nincluding blockchain: a survey. Sensors 19:1788\n 211. Du\
    \ Y, Wang Z, Leung V (2021) Blockchain-enabled edge intelligence \nfor IoT: background,\
    \ emerging trends and open issues. Future Internet \n13:48\n 212. Shahbazi Z,\
    \ Byun Y-C (2021) Improving transactional data system based \non an edge computing–blockchain–machine\
    \ learning integrated \nframework. Processes 9:92\n 213. Jain V, Kumar B (2022)\
    \ Auction based cost-efficient resource allocation \nby utilizing blockchain in\
    \ fog computing. Trans. Emerg. Telecommun. \nTechnol 33:e4469\n 214. Kamruzzaman\
    \ M, Yan B, Sarker MNI, Alruwaili O, Wu M, Alrashdi I (2022) \nBlockchain and\
    \ fog computing in IoT-driven healthcare services for \nsmart cities. J. Healthc.\
    \ Eng. 2022. https:// doi. org/ 10. 1155/ 2022/ 99578 \n88\n 215. Huang X, Deng\
    \ X, Liang C, Fan W (2021) Blockchain-enabled task \noffloading and resource allocation\
    \ in fog computing networks. Wirel \nCommun Mob Comput 2021. https:// doi. org/\
    \ 10. 1155/ 2021/ 75185 34\n 216. Silva CA, Aquino GS, Melo SR, Egídio DJ (2019)\
    \ A fog computing-based \narchitecture for medical records management. Wirel Commun\
    \ Mob \nComput 2019:1–16\n 217. Huang H, Li KC, Chen X (2019) Blockchain-based\
    \ fair three-party con-\ntract signing protocol for fog computing. Concurrency\
    \ and Computa-\ntion: Practice and Experience 31:e4469\n 218. Wang H, Jiang Y\
    \ (2020) A novel blockchain identity authentication \nscheme implemented in fog\
    \ computing. Wirel Commun Mob Comput \n2020. https:// doi. org/ 10. 1155/ 2020/\
    \ 88493 63\n 219. Jayasinghe U, Lee GM, MacDermott Á, Rhee WS (2019) Trustchain:\
    \ a \nprivacy preserving blockchain with edge computing. Wirel Commun \nMob Comput\
    \ 2019. https:// doi. org/ 10. 1155/ 2019/ 20146 97\n 220. Xu Y, Wang G, Yang\
    \ J, Ren J, Zhang Y, Zhang C (2018) Towards secure \nnetwork computing services\
    \ for lightweight clients using blockchain. \nWirel Commun Mob Comput 2018. https://\
    \ doi. org/ 10. 1155/ 2018/ \n20516 93\n 221. Kumar P, Kumar R, Gupta GP, Tripathi\
    \ R (2021) A distributed framework \nfor detecting DDoS attacks in smart contract-based\
    \ Blockchain-IoT sys-\ntems by leveraging fog computing. Trans Emerg Telecommun\
    \ Technol \n32:e4112\n 222. Liang H, Wu J, Zheng X, Zhang M, Li J, Jolfaei A (2020)\
    \ Fog-based secure \nservice discovery for internet of multimedia things: a cross-blockchain\
    \ \napproach. In: ACM Transactions on Multimedia Computing, Communi-\ncations,\
    \ and Applications (TOMM), vol 16, pp 1–23\n 223. Jeong JW, Kim BY, Jang JW (2018)\
    \ Security and device control method \nfor fog computer using blockchain. In:\
    \ Proceedings of the 2018 inter-\nnational conference on information science and\
    \ system. ACM, Jeju, pp \n234–238\n 224. Farhadi M, Miorandi D, Pierre G (2019)\
    \ Blockchain enabled fog structure \nto provide data security in IoT applications.\
    \ In: Proceedings of the Mid-\ndleware’18. ACM, Rennes, pp 1–2\n 225. El Kafhali\
    \ S, Chahir C, Hanini M, Salah K (2019) Architecture to manage \ninternet of things\
    \ data using blockchain and fog computing. In: Pro-\nceedings of the 4th International\
    \ Conference on Big Data and Internet \nof Things, pp 1–8\n 226. Casado-Vara R,\
    \ de la Prieta F, Prieto J, Corchado JM (2018) Blockchain \nframework for IoT\
    \ data quality via edge computing. In: Proceedings of \nthe 1st Workshop on Blockchain-enabled\
    \ Networked Sensor Systems, \npp 19–24\nPage 36 of 36\nAlzoubi et al. Journal\
    \ of Cloud Computing           (2022) 11:80 \n 227. Guo R, Zhuang C, Shi H, Zhang\
    \ Y, Zheng D (2020) A lightweight verifi-\nable outsourced decryption of attribute-based\
    \ encryption scheme for \nblockchain-enabled wireless body area network in fog\
    \ computing. Int J \nDistrib Sens Netw 16:1550147720906796\n 228. Iqbal R, Butt\
    \ TA, Afzaal M, Salah K (2019) Trust management in social \ninternet of vehicles:\
    \ factors, challenges, blockchain, and fog solutions. \nInt J Distrib Sens Netw\
    \ 15:1550147719825820\n 229. Mohapatra D, Bhoi SK, Jena KK, Nayak SR, Singh A\
    \ (2022) A blockchain \nsecurity scheme to support fog-based internet of things.\
    \ Microprocess \nMicrosyst 89:104455\n 230. Li W, Wu J, Cao J, Chen N, Zhang Q,\
    \ Buyya R (2021) Blockchain-based \ntrust management in cloud computing systems:\
    \ a taxonomy, review \nand future directions. J. Cloud Comput. 10:1–34\n 231.\
    \ Berdik D, Otoum S, Schmidt N, Porter D, Jararweh Y (2021) A survey \non blockchain\
    \ for information systems management and security. Inf \nProcess Manag 58:102397\n\
    \ 232. Yaqoob I, Salah K, Jayaraman R, Al-Hammadi Y (2021) Blockchain for \nhealthcare\
    \ data management: opportunities, challenges, and future \nrecommendations. Neural\
    \ Comput Applic 34:1–16\n 233. Gao Y-L, Chen X-B, Chen Y-L, Sun Y, Niu X-X, Yang\
    \ Y-X (2018) A secure \ncryptocurrency scheme based on post-quantum blockchain.\
    \ IEEE \nAccess 6:27205–27213\n 234. Rajan D, Visser M (2019) Quantum blockchain\
    \ using entanglement in \ntime. Quantum Reports 1:3–11\n 235. Khalid ZM, Askar\
    \ S (2021) Resistant Blockchain cryptography to quan-\ntum computing attacks.\
    \ Int J of Science and Business 5:116–125\n 236. Bhavin M, Tanwar S, Sharma N,\
    \ Tyagi S, Kumar N (2021) Blockchain \nand quantum blind signature-based hybrid\
    \ scheme for healthcare 5.0 \napplications. J. Inf. Secur. Appl. 56:102673\n 237.\
    \ Vairagade RS, Brahmananda SH (2022) Enabling machine learning-\nbased side-chaining\
    \ for improving QoS in blockchain-powered IoT \nnetworks. Trans Emerg Telecommun\
    \ Technol 33:e4433\n 238. Gill SS (2021) Quantum and blockchain based Serverless\
    \ edge comput-\ning: A vision, model, new trends and future directions. Internet\
    \ Technol \nLetters 275:1–6\n 239. Fernández-Carames TM, Fraga-Lamas P (2020)\
    \ Towards post-quantum \nblockchain: a review on blockchain cryptography resistant\
    \ to quantum \ncomputing attacks. IEEE access 8:21091–21116\nPublisher’s Note\n\
    Springer Nature remains neutral with regard to jurisdictional claims in pub-\n\
    lished maps and institutional affiliations.\n"
  inline_citation: '>'
  journal: Journal of cloud computing (Heidelberg)
  limitations: '>'
  pdf_link: https://journalofcloudcomputing.springeropen.com/counter/pdf/10.1186/s13677-022-00353-y
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'A systematic review of the purposes of Blockchain and fog computing integration:
    classification and open issues'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2021/2609700
  analysis: '>'
  authors:
  - Hualei Ju
  - Lihua Liu
  citation_count: 3
  full_citation: '>'
  full_text: ">\nResearch Article\nInnovation Trend of Edge Computing Technology Based\
    \ on\nPatent Perspective\nHualei Ju1 and Lihua Liu\n2\n1School of Economics, Northwest\
    \ University of Political Science and Law, Xi’an, 710122 Shaanxi, China\n2College\
    \ of Innovation & Entrepreneurship, Shanghai Jianqiao University, Shanghai 201306,\
    \ China\nCorrespondence should be addressed to Lihua Liu; 13075@gench.edu.cn\n\
    Received 10 April 2021; Revised 5 May 2021; Accepted 17 May 2021; Published 4\
    \ June 2021\nAcademic Editor: Wenqing Wu\nCopyright © 2021 Hualei Ju and Lihua\
    \ Liu. This is an open access article distributed under the Creative Commons Attribution\n\
    License, which permits unrestricted use, distribution, and reproduction in any\
    \ medium, provided the original work is\nproperly cited.\nEdge computing is an\
    \ important foundation for building 5G networks, but in my country, there are\
    \ few applications or inventions\nbased on edge computing. In order to improve\
    \ the application of edge computing, this article innovatively designs a human\n\
    behavior recognition system based on a patent perspective, which provides a reference\
    \ for other researchers. This paper\ndiscusses and designs the software and hardware\
    \ schemes and related communication methods of a new edge computing\nframework\
    \ that combines edge devices and cloud computing centers. After processing the\
    \ collected human behavior data, the\nbehaviors of the corresponding monitoring\
    \ objects are classiﬁed and modeled, and then the distributed computing of edge\n\
    devices is used to modify these models. These systems are characterized by low\
    \ energy consumption and fast response. The\nexperimental results prove. The recognition\
    \ eﬃciency of edge computing technology from the patent perspective has been\n\
    greatly improved. Its recognition speed is more than 30% faster than other algorithm\
    \ calculations, and the accuracy of\nrecognition reaches 0.852, which is about\
    \ 20% higher than traditional recognition. The authors show that edge computing\n\
    technology based on a patent perspective can play an important role in our lives.\n\
    1. Introduction\nWith the rapid development of electronic, information, and\n\
    communication technologies such as the Internet of Things,\n5G, blockchain, and\
    \ sensors, the growth of various types of\ndata has shown an exponential trend,\
    \ and the requirements\nof massive data on computing power and speed are also\n\
    increasing [1, 2]. Cloud computing technology provides\nusers with almost unlimited\
    \ computing power through a\nlarge number of high-performance servers in the data\
    \ cen-\nter. It is one of the important solutions for big data analysis\nand processing.\
    \ However, cloud computing also has a set of\nissues such as high network latency,\
    \ high cost, security and\nprivacy, and cannot adapt to all big data analytics\
    \ and pro-\ncessing requirements. For example, in industrial produc-\ntion, operation,\
    \ and other scenarios, real-time response to\naccidents, failures, and emergencies\
    \ is very important; in\nnetwork data capture scenarios, data transmission costs\n\
    are more sensitive [3].\nFor this reason, edge data processing technology with\n\
    edge computing as the core has been produced and widely\npromoted [4]. Edge computing\
    \ is deﬁned as a distributed\nopen platform that integrates core capabilities\
    \ of network,\ncomputing, storage, and application on the edge of the net-\nwork\
    \ close to the source of things or data [5, 6]. In fact, edge\ncomputing is a\
    \ new ecological model. By converging ﬁve\ntypes of resources, including network,\
    \ computing, storage,\napplication, and intelligence, at the edge of the network,\
    \ it\ncan improve network service performance and open network\ncontrol capabilities,\
    \ thereby inspiring something similar to\nthe mobile Internet [5].\nFor machine\
    \ learning edge computing clone node recog-\nnition, experts at home and abroad\
    \ also have many studies\n[7]. In foreign countries, TangX and ChansonST proposed\n\
    an optimal task download allocation strategy based on the\nstudy of cloud and\
    \ fog combination. Through experimental\nsimulation, under the condition of service\
    \ delay constraint,\nby sacriﬁcing a small amount of computing resources, it is\n\
    Hindawi\nWireless Communications and Mobile Computing\nVolume 2021, Article ID\
    \ 2609700, 10 pages\nhttps://doi.org/10.1155/2021/2609700\npossible to save communication\
    \ bandwidth and reduce net-\nwork delay, so that the energy consumption of the\
    \ cloud\ncan be reduced to a minimum [8]. DimokasN proposes a\nPCICC cache strategy\
    \ according to the characteristics of\ncache nodes [9]. RabinovichM has studied\
    \ the diﬃculties\nand challenges facing cloud and fog fusion services, sensor\n\
    network technology, and network virtualization technology\nof cloud computing\
    \ and fog computing [10]. Due to the late\nstart of computers in China, there\
    \ is little research on edge\ncomputing. Xue Heyu believes that with the popularization\n\
    of artiﬁcial intelligence applications, traditional identiﬁcation\nsystems are\
    \ vulnerable to unique infringements [11]. He\nbelieves that edge computing can\
    \ be used in traditional cloud\nserver systems. Introducing edge computing in\
    \ this paper\nreduces the number of communications between the server\nand the\
    \ user and improves the security performance of the\nsystem [12]. Jie believes\
    \ that edge computing is close to com-\nputing nodes, which makes it face great\
    \ challenges. In partic-\nular, cloned nodes are diﬃcult to identify because other\n\
    legitimate nodes have the same information. Therefore, they\nbelieve that they\
    \ must be judged by cloning nodes based on\nchannel information. The edge computing\
    \ of the network\nimproves the recognition accuracy [13]. These studies have\n\
    a certain reference value for this article, but due to the narrow\ndata cited\
    \ in the research, the data industry is basically\nlimited to individual industries,\
    \ and it is diﬃcult to play a\nuniversal role.\nBased on edge computing innovation\
    \ from the perspec-\ntive of patents, this paper conducts research and analysis\
    \ on\ncloud computing and big data and proposes a data acquisi-\ntion and processing\
    \ system architecture based on edge com-\nputing, which uses edge computing close\
    \ to users to provide\nlow latency and high processing capabilities. Data acquisi-\n\
    tion, processing, and analysis plan. The distributed comput-\ning of edge devices\
    \ is used to modify these models, thereby\nrealizing a human behavior recognition\
    \ system with high eﬃ-\nciency, low energy consumption, and fast response, which\n\
    veriﬁes the applicability of the current computing framework\nto physical data\
    \ processing.\n2. Innovative Methods of Edge\nComputing Technology\n2.1. Patent.\
    \ The new century is the era of the knowledge\neconomy. Whether an enterprise\
    \ can survive and stand out\nin the ﬁerce market competition depends more on its\
    \ scien-\ntiﬁc and technological innovation capabilities and eﬀective\nmanagement\
    \ and application of independent intellectual\nproperty rights [14]. Innovation\
    \ is the driving force for the\ndevelopment of an enterprise, and only an enterprise\
    \ that\ncontinues to innovate can remain invincible in the competi-\ntion. With\
    \ the increase of the complexity of innovation and\nthe limitation of resources\
    \ and corporate capabilities, corpo-\nrate innovation has become more demanding\
    \ for capital\ninvestment and accumulation [15]. How to consolidate and\nleverage\
    \ existing resources, transform them into innovation\nresults and corporate economic\
    \ beneﬁts, and form a com-\npany’s competitive advantage to adapt to an era of\
    \ accelerat-\ning product upgrades are especially important [16].\nThe ability\
    \ of an enterprise to create and apply intellectual\nproperty rights is the key\
    \ to enhancing the core competitiveness\nof an enterprise, and it is also an inevitable\
    \ choice for an enter-\nprise to adapt to the ever-changing market environment.\
    \ Enter-\nprises, especially high-tech enterprises, are the main force in the\n\
    creation of intellectual property rights. Enterprises have pro-\nduced a large\
    \ number of patent achievements in the process\nof actively participating in scientiﬁc\
    \ research and market activ-\nities. Only by combining patents and the market\
    \ environment\nand maximizing the results of these patents will we continu-\n\
    ously stimulate the creative enthusiasm of stakeholders and\ncontinuously improve\
    \ the technical level and market competi-\ntiveness of the company [17].\nPatent\
    \ represents intellectual property and is the main\nsource of technical information,\
    \ containing 90%-95% of the\nworld’s scientiﬁc and technological information.\
    \ Patent is a\ncommon indicator to measure the output of enterprise inno-\nvation\
    \ activities. The patent data of various enterprises is\nrelatively easy to obtain,\
    \ which can more objectively reﬂect\nthe innovation activities of enterprises\
    \ [18].\nPatent portfolio theory uses patent activity and patent\nquality as an\
    \ evaluation index for corporate patents. Taking\nthe number of patent applications\
    \ as an indicator of patent\nactivity in a company’s patent portfolio, it is believed\
    \ that\ncompanies with a large number of patent applications are\nmore innovative\
    \ and pioneering, and their corporate value\nis also higher. The number of patent\
    \ applications not only\nreﬂects the number of patents of a company but also reﬂects\n\
    the degree of activity of the company’s innovation. The more\nthe company’s annual\
    \ patent applications, the stronger the\ninnovation activities of the company\
    \ [19]. There is a certain\ndegree of diﬀerence between patent quality and patent\n\
    value, and the two cannot be equated. The diﬀerence is\nmainly reﬂected in the\
    \ following two aspects: (1) The\ndiﬀerence in subjectivity and objectivity: the\
    \ quality of pat-\nents depends on the advancement and importance of pat-\nents\
    \ in the same ﬁeld, which mainly reﬂects the creativity\nand novelty of patents,\
    \ and the judgment results are more\nobjective. (2) Value manifestation process:\
    \ the quality of\npatents reﬂects the practical problems solved by patents,\n\
    and whether they are implemented or not does not aﬀect\nthe objective facts of\
    \ whether they can solve practical\nproblems, while the value of patents is the\
    \ economics\nembodied after implementation. Beneﬁt [20].\nGenerally, we can use\
    \ the interactive items of innovation\nability and patent quantity and patent\
    \ quality to examine the\nrole of patent quantity and patent quality in the process\
    \ of\naﬀecting enterprise performance. Construct the following\nmeasurement model:\n\
    L = C + a1L + a2L + a3L + a4L + ε1:\nð1Þ\nAmong them, C is a constant term; a\
    \ represents the\nregression coeﬃcient of the respective variable and the con-\n\
    trol variable, which is used to express the inﬂuence of the\nindependent variable\
    \ and the control variable on the com-\npany’s performance. The industry selection\
    \ function can be\nused to calculate the value corresponding to each observation\n\
    value, which is used λ to represent:\n2\nWireless Communications and Mobile Computing\n\
    λ = ϕ γ\nð Þ\nψ γ\nð Þ ,\nð2Þ\nwhere ϕðγÞ and ψðγÞ are, respectively, the probability\
    \ density\nfunction and probability cumulative distribution function\ncorresponding\
    \ to the model. The following model is used to\nestimate the factors aﬀecting\
    \ corporate performance, namely,\nL = c0 + c1x1 + c2x2+⋯ ⋯ +cixi + δλ + γ:\nð3Þ\n\
    Among them, xi represents a series of explanatory vari-\nables and control variables\
    \ that aﬀect corporate performance;\nδ is the estimated value of the coeﬃcient\
    \ of variable xi; λ is\nthe value obtained in the ﬁrst stage. Explore the role\
    \ of patent\nquantity and patent quality in the process of impacting a\ncompany’s\
    \ performance using interactive items of innova-\ntion capacity, patent quantity,\
    \ and patent quality. Construct\nthe following measurement model:\nL = C + 〠\n\
    4\n1\najL + d2RDCSit + 〠\n9\n5\nakC + δi:\nð4Þ\nAmong them, d is the coeﬃcient\
    \ of the adjustment vari-\nable. In order to avoid the inﬂuence of inconsistent\
    \ dimen-\nsions on the statistical results, the data was standardized in\nthe\
    \ preresearch:\nYi = xi − xi\nð\nÞ\nSi\n:\nð5Þ\nAmong them, Yi represents the\
    \ normalized observation\nvalue; Xi represents the original data observation value;\
    \ xi is\nthe average value of the original data Xi; Si represents the\nsample\
    \ standard deviation.\n2.2. Edge Computing. Edge computing may have the richer\n\
    and more complex characteristics of other systems. Its theo-\nretical research\
    \ models and methods have their own applica-\nble scopes. The part and the whole\
    \ are no longer uniﬁed, and\nthey do not satisfy the superposition principle of\
    \ linear sys-\ntems. Even for other known systems, it is quite diﬃcult to\nmodel\
    \ and control them. When the structure of the con-\ntrolled object is completely\
    \ unknown, system research will\nbecome more complicated. This also makes edge\
    \ computing\nsystem model identiﬁcation and control become a hot topic\nin the\
    \ current control ﬁeld [21, 22]. In recent years, artiﬁcial\nintelligence has\
    \ been widely used in the identiﬁcation of\nblack-box systems. Among them, the\
    \ regional economy has\nattracted much attention. Its unique edge computing capabil-\n\
    ities have brought vitality to the modeling of nonlinear\nsystems.\nIn the process\
    \ of researching real-time data services, it is\nnot diﬃcult to ﬁnd that data\
    \ communication is inseparable\nfrom real-time data collection, real-time data\
    \ control, or\nreal-time data transmission. Improper selection of commu-\nnication\
    \ methods can cause data delay or loss. Therefore,\nthe choice of communication\
    \ mode and communication pro-\ntocol is particularly important. For network data,\
    \ the edge\ndevice itself needs to access the target webpage through the\nnetwork\
    \ module, download the required data, and complete\nthe data collection task [23].\
    \ The edge devices connected to\nthe Internet and the cloud computing center complete\
    \ data\nexchange through wireless transmission, so other devices\nare not needed\
    \ for data collection [24]. The frame diagram\nof the system is shown in Figure\
    \ 1.\nEdge computing provides services to users locally. On the\none hand, it\
    \ can reduce service processing delays and\nimprove work eﬃciency. On the other\
    \ hand, it can reduce\nnetwork and bandwidth requirements and save system over-\n\
    head. Compared with other computing, edge computing has\ngreat advantages in response\
    \ time and service quality, and it\nmeets the requirements of low latency, high\
    \ reliability, and\nsecurity [25]. In addition, as a complement to other calcula-\n\
    tions, edge computing reduces pressure on the data center,\nreduces bandwidth\
    \ requirements, balances data processing,\nand improves overall system eﬃciency.\
    \ In recent years, with\nthe rapid development of the Internet of Things, edge\
    \ com-\nputing has been widely used in various ﬁelds, such as the\nInternet of\
    \ Vehicles, wireless sensors and actuators, smart\nhomes, and software-deﬁned\
    \ networks [26]. In the future\ndevelopment, edge computing will complement and\
    \ inte-\ngrate with other computing and be widely used in more\nindustries and\
    \ ﬁelds, providing an ideal software and\nhardware support platform for information\
    \ processing in\nthe Internet of Things era [27].\nThe real-time data service\
    \ architecture of edge comput-\ning divides real-time data services into edge\
    \ computing ser-\nvices and cloud application services. Edge computing\nservices\
    \ undertake the main work of real-time data services.\nCloud application services,\
    \ as the data receiver of edge com-\nputing services, mainly provide web services.\
    \ There are two\nservices with database services. The development of edge\ncomputing\
    \ has promoted the development of big data, cloud\ncomputing, and informatization.\
    \ Now, it has involved many\nﬁelds such as medical care, agriculture, geological\
    \ survey,\nastronomy, and the Internet of Things. It has even developed\ninto\
    \ the ﬁelds of news and e-government. The huge value\ncontained in massive data\
    \ brings new development opportu-\nnities for each ﬁeld [28]. However, the generation\
    \ of massive\ndata also brings huge challenges to data processing. It not\nonly\
    \ requires strong computing and analysis capabilities\nbut also requires a large\
    \ storage space to store the data. This\nwill undoubtedly cause excessive pressure\
    \ on the computing\ncenter. Edge computing solves this problem well. Generally\n\
    speaking, the algorithm of edge computing is as follows:\nG x, y\nð\nÞ = exp\n\
    − x2 + y2\n2σ2\n\x01\n\x03\n,\nð6Þ\nwhere σ is the mean square error. It is achieved\
    \ by convolu-\ntion of smoothing kernels with diﬀerent σ values with the\nimage.\
    \ The resulting expression formula is as follows:\nL x, y\nð\nÞ = − 1\nπσ4\n1\
    \ − x2 + y2\n2σ2\n\x01\n\x03\nexp\n− x2 + y2\n2σ2\n\x01\n\x03\n:\nð7Þ\n3\nWireless\
    \ Communications and Mobile Computing\nThe eﬀect of edge detection is related\
    \ to the value of σ; the\nsmaller the σ, the smaller the smoothing eﬀect, and\
    \ the more\nnoise.\nQ =\n1\n2a2r−1\n2b2\na2r−1 p − t\n \n!−1\na2r−1t2 + 2 1 −\
    \ b2\n\x04\n\x05t\n\x06\n\a,\nð8Þ\na ∈ ½−1, 0\x02 ∪ ½0, 1\x02:\nK =\na\n2br t,\n\
    λx ctn − t\nð\nÞ > 0:\nð9Þ\nSo\nQ =\n1\n2a2r−1\n2b2\na2r−1 t − L\n \n!−1\na2r−1L2\
    \ + 2 1 − a2\n\x04\n\x05L\n\x06\n\a:\nð10Þ\nThe mathematical morphology method\
    \ uses set algebra\ntheory to analyze and process based on geometric character-\n\
    istics. Mathematical morphology methods mainly use corro-\nsion and expansion\
    \ operations to extract morphological\nboundaries. Through the contraction eﬀect\
    \ of calculation\nand the expansion eﬀect of expansion calculation, combined\n\
    with certain logical calculations, a more precise boundary can\nbe obtained. In\
    \ order to obtain better edge computing nodes,\nthe ﬁtness function is determined\
    \ according to the idea of the\nData analysis module\ndata storage module\nExternal\
    \ device\nExternal device\nExternal device\nUser\nEdgedata\nprocessing\nmodule\n\
    Edge\nacquisition\nmodule\nEdge device\nCloud computing\ncenter\nFigure 1: System\
    \ framework diagram.\nData acquisition module\nSend collection\ninstructions\n\
    Receive collection\ninstructions\nMonitor collection\nprogress\nData preprocessing\
    \ module\nFormatting\nMissing\nvalue fill\nOutlier\nidentification\nFeature\n\
    extraction\nRead data\nModel training\nResult test\nData analysis module\nFigure\
    \ 2: Workﬂow of data acquisition and processing based on edge computing.\n4\n\
    Wireless Communications and Mobile Computing\nmaximum between-class variance method,\
    \ and the formula\nis as follows:\nf tð Þ = σ tð Þ2 = w1 tð Þ ∗ w2 tð Þ ∗ u1 tð\
    \ Þ\nð\nÞ − u1 tð Þ2:\nð11Þ\nAmong them, t is the threshold, f ðxÞ is the ﬁtness\
    \ func-\ntion, w1ðtÞ is the number of nodes less than the threshold,\nand w2ðtÞ\
    \ is the number of nodes greater than the threshold.\nGenerate a random number\
    \ in the interval, and select the\nindividual corresponding to the area where\
    \ the random\nnumber belongs.\n2.3. Data Collection. Complete data analysis and\
    \ collect data\nthrough algorithms such as machine learning and artiﬁcial\nintelligence;\
    \ minimize the deviation of the original data; cor-\nrect the data to obtain more\
    \ accurate data; establish a distrib-\nuted edge computing and cloud computing\
    \ collaborative big\ndata analysis and mining platform to achieve data construc-\n\
    tion, the ability of the module [29]; the interaction between\nthe functional\
    \ modules is relatively simple, usually a uniﬁed\nsoftware system completes the\
    \ commands and scheduling,\nestablishes long-term stable communication, and ensures\n\
    the reasonable operation of the entire system [30, 31].\nAiming at the scene of\
    \ human behavior recognition, a\nhuman behavior data collection, processing, and\
    \ analysis sys-\ntem based on edge computing is designed and implemented.\nUsing\
    \ the distributed computing of edge devices to modify\nthese models, a human behavior\
    \ recognition system with\nhigh eﬃciency, low energy consumption, and fast response\n\
    is realized. After data collection and data preprocessing, a\nmodel that can be\
    \ directly modeled is obtained. According\nto the mining target and data form,\
    \ models such as classiﬁca-\ntion and prediction, cluster analysis, and association\
    \ rules\ncan be established to help system users extract the value con-\ntained\
    \ in the data. In order to be able to complete the support\nof the above-mentioned\
    \ hardware overall design and achieve\nthe corresponding computing capabilities,\
    \ it is necessary to\nselect a suitable microprocessor as the core part of the\
    \ overall\nsystem-edge computing equipment [4].\nThe model is sent to the edge\
    \ device, and the edge device\ncombines the data received in real time to verify\
    \ the basic\nmodel. When the user or the edge device itself determines\nthat the\
    \ results produced during the use of the model do\nnot conform to the actual situation,\
    \ the model will be\nreturned to the cloud computing center. The cloud comput-\n\
    ing center uses the newly received data and feedback results\nto modify the model,\
    \ then sends the retrained model to the\nedge device for another test, and loops\
    \ until the test result\nof the model meets the requirements of the edge device,\n\
    and the ﬁnal generated. The model will be used normally\non edge devices [32].\n\
    Finally, the overall functional architecture of the system\ncan be obtained, which\
    \ consists of three parts: data acquisi-\ntion module, data preprocessing module,\
    \ and data analysis\nmodule. The overall operation process is shown in Figure\
    \ 2.\nThis approach of putting the analysis model on the edge\ndevice can reduce\
    \ the computing pressure on the cloud on\nthe one hand, and on the other hand,\
    \ for the delay-sensitive\nscenarios, the edge device to complete the data analysis\
    \ work\ncan eﬀectively reduce the time for result generation. The real-\ntime\
    \ analysis results are presented to the system users in\ntime.\nThe relevant sensors\
    \ connected to the edge device are\nused to complete the real-time collection\
    \ of data required\nfor human body recognition, and then, the data is corre-\n\
    spondingly preprocessed and sent to the cloud. The cloud\ncomputing center uses\
    \ related machine learning algorithms\nto complete the modeling work and send\
    \ the model back to\nthe edge device. The edge device uses the trained model to\n\
    predict the posture behavior of the currently monitored\nobject [33]. When the\
    \ predicted result of the model does\nFigure 3: The data collector collects human\
    \ body data.\nTable 2: Computing patents.\n2016\n2017\n2018\n2019\n2020\nCloud\
    \ computing\n18\n15\n25\n33\n28\nFog computing\n11\n8\n14\n18\n15\nBig data\n\
    12\n7\n13\n9\n10\nEdge computing\n9\n5\n12\n17\n21\nTable 1: Equipment parameters.\n\
    Model\nRPi B+\nRPi2\nArduino UNO\nCPU\nARM11 CPU\nARM Cortex-47 900 MHz\nATmega328\
    \ 20 MHz\nOperating system\nRaspbian\nRaspbian\nSingle Chip Microcomputer System\n\
    Interface\nUSB-host, RJ45\nUSB-host, RJ45\nExternal interface board\nRAM\n512\
    \ MB\n1 GB\n32 KB\n5\nWireless Communications and Mobile Computing\nnot match\
    \ the current status quo, it can also inform the cloud\ncomputing center of the\
    \ data and the correct result to correct\nthe relevant model.\n3. Innovation Experiment\
    \ of Edge\nComputing Technology\n3.1. Data Sources. The collection of physical\
    \ data in this sys-\ntem will be completed by edge devices controlling several\n\
    sensors. In the scene of human behavior recognition, the sen-\nsors that can be\
    \ used as data sources for model training\ninclude numerical data collection sensors\
    \ such as gyroscopes,\nIMUs, and heart rate measuring machines, and image data\n\
    collectors including infrared and thermal image data collec-\ntors. In this scenario,\
    \ IMU equipment is used to collect\nhuman behavior data, depending on system requirements\n\
    1and model characteristics.\n3.2. Edge Computing Equipment. The receiving and\
    \ sending\nof the collected data are the current data processing module\nand the\
    \ human behavior recognition module that will be\ndesigned later, and an edge\
    \ device that meets the system\nrequirements is required to support the realization\
    \ of the\nabove functions. The most popular and developed device is\nthe most\
    \ mature. There are mainly series of products under\nplatforms such as RaspbeerPi\
    \ and Arduino. Commonly used\ndevices are RPi B+, RPi2, and Arduino UNO. The device\n\
    parameters are shown in Table 1.\n3.3. Human Behavior Data Collection. In order\
    \ to ensure that\nthe collected data is more suitable for model testing, this\n\
    experiment requires the monitored object to complete corre-\nsponding actions\
    \ in accordance with predetermined instruc-\ntions for the behavior tags required\
    \ by the experiment,\nincluding a series of daily behavior actions and some behaviors\n\
    under special circumstances, such as Falling, by providing\ndevices including\
    \ built-in mobile power, serial port, and Blue-\ntooth interface. When the sensor\
    \ is turned on, the data collec-\ntor will automatically start working and will\
    \ continuously\ntransmit the collected physical data to the serial port at the\n\
    set frequency. The collection equipment is shown in Figure 3.\n3.4. Statistics.\
    \ All data analysis in this article uses SPSS19.0,\nthe statistical test uses\
    \ a two-sided test, signiﬁcance is deﬁned\n0\n40\n50\n60\n70\n80\n90\n100\n110\n\
    5\n10\n15\n20\n25\n30\n35\n40\nTimes\nParameter changes\nRPi B+\nRPi2\nArduion\
    \ UNO\nFigure 4: The ﬂuctuation range of diﬀerent devices.\nTable 3: Data variable\
    \ names and types.\nSerial number\nName\nTypes\n1\nAcquisition time\nNumerical\n\
    2\nBehavior type\nCategorical\n3\nHand three-dimensional\naccelerometer\nNumerical\n\
    4\nHand three-dimensional gyroscope\nNumerical\n5\nThree-dimensional accelerometer\n\
    of chest\nNumerical\n6\nThree-dimensional gyroscope\non chest\nNumerical\n7\n\
    Foot 3D accelerometer\nNumerical\n8\nFoot 3D gyroscope\nNumerical\n9\nAcquisition\
    \ time\nNumerical\nTable 4: Data diﬀerences in operation.\nF-measure\nAccuracy\n\
    Operation hours\nDecision tree\n0.933\n0.932\n28.73\nNaive Bayes\n0.944\n0.946\n\
    35.21\nMDD\n0.923\n0.936\n43.51\nRandom forest\n0.932\n0.948\n36.25\nEdge computing\n\
    0.964\n0.984\n18.62\n6\nWireless Communications and Mobile Computing\nas 0.05,\
    \ and p < 0:05 is considered signiﬁcant. The statistical\nresults are displayed\
    \ as mean ± standard deviation (x ± SD).\nWhen the test data obeys the normal\
    \ distribution, the double\nT test is used for comparison within the group, and\
    \ the\nindependent sample T test is used for comparison between\nthe groups.\n\
    4. Experimental Analysis of Edge Computing\nTechnology Innovation\n4.1. Edge Computing\
    \ Patent Changes. Through literature sur-\nveys and data from the patent oﬃce,\
    \ we have made statistics\non the changes in edge computing patents in recent\
    \ years, as\nshown in Table 2.\nFrom the table, we can see that with the development\
    \ of\ntime, the technology is constantly improving, and the patents\nof edge computing\
    \ are increasing. In 2016, the patents of edge\ncomputing were only about half\
    \ of that of cloud computing,\nbut after 5 years with the development of edge\
    \ computing,\nthe patent of edge computing has approached cloud comput-\ning and\
    \ has shown a trend beyond cloud computing, which\nshows that edge computing has\
    \ great potential for develop-\nment. In the experiment in this article, we need\
    \ to collect\nhuman motion data through equipment. In order to ensure\nthe eﬀective\
    \ stability of the data, we ﬁrst test the collection\ncapabilities of diﬀerent\
    \ equipment, as shown in Figure 4.\nAs shown in Figure 4, the three devices have\
    \ diﬀerent\nperformances in data collection. RPi B+ has the largest\n1.92\n1.31\n\
    0.85\n0.87\n0.82\n1.68\n1.14\n0.94\n1.72\n2.17\n2.1\n0.86\n1.83\n1.99\n1.68\n\
    2.11\n0.82\n2.1\n1.06\n2.05\n1.65\n2.4\n1.22\n1.3\n2.07\n1.99\n1.9\n2.5\n2.48\n\
    1.28\n0.88\n1.13\n2.14\n1.73\n1.46\n1.48\n1.65\n1.02\n1.35\n1.28\n0\n0.5\n1\n\
    1.5\n2\n2.5\n3\nDecision tree\nNaive Bayes\nMDD\nRandom forest Edge computing\n\
    Value\nAlgorithm\nBlogs\nNetsic\nPower\nPGP\nEmail\nRouter\nAstro\nEmailcontat\n\
    Hamster\nFigure 5: Calculation time of an algorithm.\n0.412\n0.438\n0.432\n0.436\n\
    0.452\n0.482\n0.478\n0.458\n0.419\n0.655\n0.669\n0.665\n0.653\n0.647\n0.652\n\
    0.658\n0.663\n0.652\n0.774\n0.766\n0.783\n0.791\n0.753\n0.783\n0.794\n0.776\n\
    0.763\n0.912\n0.951\n0.942\n0.919\n0.998\n0.954\n0.974\n0.953\n0.941\n0.35\n0.45\n\
    0.55\n0.65\n0.75\n0.85\n0.95\n1.05\nBlogs\nNetsic\nRouter\nPower\nPGP\nEmail\n\
    Emailcontat\nHamster\nAstro\nParameter value\nCategory\nEdge computing\nRandom\
    \ forest\nMDD\nNaive Bayes\nDecision tree\nFigure 6: Ranking monotonicity of diﬀerent\
    \ algorithms.\n7\nWireless Communications and Mobile Computing\nacquisition range,\
    \ and its optimal value is also the largest; the\ndata collected by RPi2 is the\
    \ most stable among the three\ndevices, with the smallest ﬂuctuations, large memory,\
    \ and a\nlarge amount of data collection; the data collected by Ardu-\nino UNO\
    \ is the best, and the ﬂuctuations are also only\nslightly larger than RPi2, but\
    \ its memory is minimal and\nthe amount of data collected is minimal. Under comprehen-\n\
    sive consideration, we decided to use RPi2 equipment for\ncollection.\nAs shown\
    \ in Table 3, we interpret the names and types of\nvariables, and after sorting\
    \ out the collected data, we obtain\nexperimental data, which, respectively, contain\
    \ the relevant\ndata of a total of 8 men and women monitoring subjects.\n4.2.\
    \ Eﬀects of Diﬀerent Algorithms. We collected the data\nunder diﬀerent algorithms\
    \ and compared the diﬀerences in\nthe values during their operation, as shown\
    \ in Table 4.\nThrough analysis, it can be seen that compared with\nother basic\
    \ algorithms, edge computing runs faster and has\ngreater advantages in precision\
    \ and recall. Compared with\nweak classiﬁers such as decision tree, it integrates\
    \ learning.\nThe advantages of the algorithm are more obvious. Because\nedge computing\
    \ has more regularization of the self-model\nthan other models, making this type\
    \ of model has a stronger\ngeneralization ability. In actual work, as the amount\
    \ of data\ncontinues to increase, the accuracy of edge computing will\nbe more\
    \ obvious.\nIn order to illustrate the cost of running diﬀerent algo-\nrithms,\
    \ we let diﬀerent algorithms run separately and count\nthe consumption. Due to\
    \ diﬀerences in hardware conﬁgura-\ntion, diﬀerent computer execution results\
    \ may have devia-\ntions, but the relative diﬀerences between the running times\n\
    of diﬀerent algorithms should be comparable. The speciﬁc\ndata is shown in Figure\
    \ 5.\nFrom Figure 5, we can see that in terms of computational\ncost, the advantages\
    \ of edge-based computing are not very\nobvious. Two indicators are higher than\
    \ other calculation\nmethods, but the cost in other indicators is much lower than\n\
    other algorithms. Particularly in terms of Blogs and Astro, it\nis about 40% lower\
    \ than other algorithms.\nFrom Figure 6, we can see the monotonicity of the rank-\n\
    ing of diﬀerent algorithms in the real network. It can be seen\nthat the edge-based\
    \ algorithm has obvious advantages in this\nregard. Its ranking monotonicity is\
    \ higher than Naive Bayes,\nMDD, etc., and its algorithm ranking monotonicity\
    \ is more\nthan 30% higher than other algorithms. We calculate the\ncalculation\
    \ period of diﬀerent algorithms per unit time and\nget Figure 7.\nFrom Figure\
    \ 7, we can see that at the beginning of diﬀer-\nent algorithms, there is little\
    \ diﬀerence in operating eﬃciency\nbetween them, but after running more than 600\
    \ times, the\neﬃciency between the algorithms begins to increase, and\nthe speed\
    \ of edge computing is compared with other\nalgorithms. The speed is getting bigger\
    \ and bigger, and the\ntime after 1000 transportation is more than 20% less than\n\
    other algorithms.\n5. Conclusion\nIn recent years, society has gradually entered\
    \ the era of “big\ndata,” and with the advent of cloud computing, the demand\n\
    for big data processing and application functions is\n90\n80\n70\n60\n50\n40\n\
    30\n20\n10\n00\n100\n200\n300\n400\n500\n600\n700\n800\n900\n1000\nTime\nCalculation\
    \ amount\nEdge computing\nNaive Bayes\nRandom forest\nDecision free\nFigure 7:\
    \ Running time under diﬀerent algorithm unit tasks.\n8\nWireless Communications\
    \ and Mobile Computing\nincreasing. Cloud computing has been vigorously promoted\n\
    due to its advantages such as low operating costs, dynamic\nscalability, and simpliﬁed\
    \ operation and maintenance. Cloud\ncomputing-related industries have also developed\
    \ rapidly in\nmy country. From the perspective of patents, this paper\nimplements\
    \ a data collection and processing system based\non edge computing. Through the\
    \ coordination and interac-\ntion of edge devices and cloud computing centers,\
    \ it solves\nthe problems of the original system such as slow computing\nspeed\
    \ and high energy consumption. Corresponding designs\nand implementations are\
    \ made for the speciﬁc applications\nof the system in diﬀerent scenarios. Due\
    \ to time and technical\nreasons, this article also has some shortcomings. When\n\
    designing the transmission of human behavior data, the fre-\nquency of data transmission\
    \ can be improved according to\nthe on-site situation. For example, when the edge\
    \ device\ndetects that the human behavior has not changed for a long\ntime, the\
    \ transmission frequency can be slowed down. In\norder to better reduce the energy\
    \ consumption of the equip-\nment, when storing document data, because the collected\n\
    data is in the form of key-value pairs, the more popular\ndatabases in recent\
    \ years can be used, which can improve\nthe eﬃciency of transmission and storage.\
    \ These tasks need\nto be improved in future research.\nData Availability\nNo\
    \ data were used to support this study.\nConflicts of Interest\nThe authors declare\
    \ that they have no conﬂicts of interest.\nAcknowledgments\nThis work was supported\
    \ by the scientiﬁc research project of\nschool of economics, Northwest University\
    \ of political sci-\nence and law in 2019 “Research on the eﬀect of government\n\
    subsidies on promoting independent innovation activities\nof science and technology\
    \ enterprises” (19xyky19).\nReferences\n[1] W. Shi, J. Cao, Q. Zhang, Y. Li, and\
    \ L. Xu, “Edge computing:\nvision and challenges,” Internet of Things Journal,\
    \ IEEE,\nvol. 3, no. 5, pp. 637–646, 2016.\n[2] M. Zhou, Y. Wang, Z. Tian, Y.\
    \ Lian, Y. Wang, and B. Wang,\n“Calibrated data simpliﬁcation for energy-eﬃcient\
    \ location\nsensing in internet of things,” IEEE Internet of Things Journal,\n\
    vol. 6, no. 4, pp. 6125–6133, 2019.\n[3] Y. Liu, C. Xu, Y. Zhan, Z. Liu, J. Guan,\
    \ and H. Zhang, “Incen-\ntive mechanism for computation oﬄoading using edge com-\n\
    puting: a Stackelberg game approach,” Computer Networks,\nvol. 129, no. DEC.24,\
    \ pp. 399–409, 2017.\n[4] Z. Lv, D. Chen, R. Lou, and Q. Wang, “Intelligent edge\n\
    computing based on machine learning for smart city,” Future\nGeneration Computer\
    \ Systems, vol. 115, pp. 90–99, 2021.\n[5] A. Gumaei, M. al-Rakhami, M. M. Hassan\
    \ et al., “Deep learn-\ning and blockchain with edge computing for 5G-enabled\n\
    drone identiﬁcation and ﬂight mode detection,” IEEE Net-\nwork, vol. 35, no. 1,\
    \ pp. 94–100, 2021.\n[6] R. Olaniyan, O. Fadahunsi, M. Maheswaran, and M. F. Zhani,\n\
    “Opportunistic edge computing: concepts, opportunities and\nresearch challenges,”\
    \ Future Generation Computer Systems,\nvol. 89, no. DEC, pp. 633–645, 2018.\n\
    [7] Z. Lv, L. Qiao, D. Chen, R. Lou, J. Li, and Y. Li, “Machine\nlearning for\
    \ proactive defense for critical infrastructure sys-\ntems,” IEEE Communications\
    \ Magazine, 2020.\n[8] W. J. Chang, L. B. Chen, C. Y. Sie, and C. H. Yang, “An\
    \ artiﬁ-\ncial intelligence edge computing-based assistive system for\nvisually\
    \ impaired pedestrian safety at zebra crossings,” IEEE\nTransactions on Consumer\
    \ Electronics, vol. 67, no. 1, pp. 3–\n11, 2021.\n[9] R. Li, Q. Ma, J. Gong, Z.\
    \ Zhou, and X. Chen, “Age of process-\ning: age-driven status sampling and processing\
    \ oﬄoading for\nedge computing-enabled real-time IoT applications,” IEEE\nInternet\
    \ of Things Journal, no. 99, pp. 1–7, 2021.\n[10] Z. Lv, Y. Han, A. K. Singh,\
    \ G. Manogaran, and H. Lv, “Trust-\nworthiness in industrial IoT systems based\
    \ on artiﬁcial intelli-\ngence,” IEEE Transactions on Industrial Informatics,\
    \ vol. 17,\nno. 2, pp. 1496–1504, 2021.\n[11] G. Liu, X. Chen, R. Zhou, S. Xu,\
    \ Y. C. Chen, and G. Chen,\n“Social learning discrete particle swarm optimization\
    \ based\ntwo-stage X-routing for IC design under intelligent edge com-\nputing\
    \ architecture,” Applied Soft Computing, vol. 104, no. 6,\np. 107215, 2021.\n\
    [12] S. Moon and Y. Lim, “Service migration based on reinforce-\nment learning\
    \ in vehicular edge computing,” Journal of KIISE,\nvol. 48, no. 2, pp. 243–248,\
    \ 2021.\n[13] S. M. Kumar and D. Majumder, “Healthcare solution based on\nmachine\
    \ learning applications in IOT and edge computing,”\nInternational Journal of\
    \ Pure and Applied Mathematics,\nvol. 119, no. 16, pp. 1473–1784, 2020.\n[14]\
    \ Y. Lu, S. Cuiying, C. Hongwei, and Y. Hongwei, “Foreign body\ndetection method\
    \ for power transmission equipment based on\nedge computing and deep learning,”\
    \ China Electric Power,\nvol. 53, no. 6, pp. 27–33, 2020.\n[15] W. Wu, S. An,\
    \ C. H. Wu, S. B. Tsai, and K. Yang, “An empir-\nical study on green environmental\
    \ system certiﬁcation aﬀects\nﬁnancing cost of high energy consumption enterprises-taking\n\
    metallurgical enterprises as an example,” Journal of Cleaner\nProduction, vol.\
    \ 244, p. 118848, 2020.\n[16] L. Zheng, “Application of smart new energy——solar\
    \ electric\nbicycle power pile system based on edge computing,” Informa-\ntion\
    \ Construction, vol. 263, no. 8, pp. 58–61, 2020.\n[17] S. Yueru and L. Jun, “Mobile\
    \ edge computing oﬄoad strategy for\nmulti-base station and multi-user scenarios,”\
    \ Frontiers of Data\nand Computing Development, vol. 5, no. 3, pp. 130–140, 2020.\n\
    [18] Y. Shen and L. Chang, “Visual analysis of enterprise electricity\nconsumption\
    \ behavior based on edge computing gateway,”\nElectrical Appliances and Energy\
    \ Eﬃciency Management Tech-\nnology, vol. 592, no. 7, pp. 89–94, 2020.\n[19] H.\
    \ Haochen, L. Yutong, T. Wang, Q. Zhaoming, and\nC. Junwei, “A control strategy\
    \ for energy Internet edge com-\nputing system based on mixed stochastic H_2/H_∞\
    \ method,”\nProceedings of the Chinese Society of Electrical Engineering,\nvol.\
    \ 656, no. 21, pp. 115–125, 2020.\n[20] Z. Jianmin, F. Yang, Z. Wu, Z. Zhengkun,\
    \ and W. Yuwei,\n“Multi-access edge computing (MEC) and key technologies,”\nTelecommunications\
    \ Science, vol. 35, no. 3, pp. 160–160, 2019.\n9\nWireless Communications and\
    \ Mobile Computing\n[21] J. Ma, X. Jia, Y. Shou, and C. Yang, “Industrial data\
    \ collection\nbased on edge computing,” Microcomputer Applications,\nvol. 37,\
    \ no. 4, pp. 91–93, 2018.\n[22] F. Zhu, P. Lu, L. Jilong, L. Ke, and H. Bingtao,\
    \ “The surreal\nexperience of home intelligence——distributed real-time ren-\n\
    dering at the edge,” Artiﬁcial Intelligence, vol. 18, no. 5,\npp. 41–48, 2020.\n\
    [23] I. Fajjari and F. Tobagi, “Cloud edge computing in the IoT,”\nAnnals of Telecommunications,\
    \ vol. 73, no. 7-8, pp. 413-414,\n2018.\n[24] S. Namasudra and P. Roy, “PpBAC,”\
    \ Journal of Organizational\nand End User Computing, vol. 30, no. 4, pp. 14–31,\
    \ 2018.\n[25] X. Li and J. Wan, “Proactive caching for edge computing-\nenabled\
    \ industrial mobile wireless networks,” Future Genera-\ntion Computer Systems,\
    \ vol. 89, pp. 89–97, 2018.\n[26] Z. Lv and L. Qiao, “Optimization of collaborative\
    \ resource\nallocation for mobile edge computing,” Computer Communi-\ncations,\
    \ vol. 161, pp. 19–27, 2020.\n[27] B. Gu, Y. Chen, H. Liao, Z. Zhou, and D. Zhang,\
    \ “A distributed\nand context-aware task assignment mechanism for collabora-\n\
    tive mobile edge computing,” Sensors, vol. 18, no. 8,\npp. 2423–2427, 2018.\n\
    [28] H. Sun, F. Zhou, and R. Q. Hu, “Joint oﬄoading and computa-\ntion energy\
    \ eﬃciency maximization in a mobile edge comput-\ning system,” IEEE Transactions\
    \ on Vehicular Technology,\nvol. 68, no. 3, pp. 3052–3056, 2019.\n[29] Z. Lv and\
    \ W. Xiu, “Interaction of edge-cloud computing based\non SDN and NFV for next\
    \ generation IoT,” IEEE Internet of\nThings Journal, vol. 7, no. 7, pp. 5706–5712,\
    \ 2020.\n[30] X. Ma, J. Liang, R. Liu et al., “A survey on data storage and\n\
    information discovery in the WSANs-based edge computing\nsystems,” Sensors, vol.\
    \ 18, no. 2, pp. 546–548, 2018.\n[31] B. Shrestha and H. Lin, “Data-centric edge\
    \ computing to\ndefend power grids against IoT-based attacks,” Computer,\nvol.\
    \ 53, no. 5, pp. 35–43, 2020.\n[32] H. Wang, M. Zeng, Z. Xiong, and F. Yang, “Finding\
    \ main\ncauses of elevator accidents via multi-dimensional association\nrule in\
    \ edge computing environment,” China Communications\n(English Edition), vol. 14,\
    \ no. 11, pp. 39–47, 2017.\n[33] M. Elhoseny, “Multi-object detection and tracking\
    \ (MODT)\nmachine learning model for real-time video surveillance sys-\ntems,”\
    \ Circuits, Systems, and Signal Processing, First Online,\nvol. 39, pp. 611–630,\
    \ 2019.\n10\nWireless Communications and Mobile Computing\n"
  inline_citation: '>'
  journal: Wireless Communications and Mobile Computing
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/wcmc/2021/2609700.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: Innovation Trend of Edge Computing Technology Based on Patent Perspective
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/ojcs.2021.3095341
  analysis: '>'
  authors:
  - Placide Shabisha
  - Chamara Sandeepa
  - Charuka Moremada
  - Nadeeka Dissanayaka
  - Tharindu D. Gamage
  - An Braeken
  - Kris Steenhaut
  - Madhusanka Liyanage
  citation_count: 8
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Open Journal of the Comp...
    >Volume: 2 Security Enhanced Emergency Situation Detection System for Ambient
    Assisted Living Publisher: IEEE Cite This PDF Placide Shabisha; Chamara Sandeepa;
    Charuka Moremada; Nadeeka Dissanayaka; Tharindu Gamage; An Braeken; Kris Steenhaut
    All Authors 8 Cites in Papers 715 Full Text Views Open Access Under a Creative
    Commons License Abstract Document Sections I. Introduction II. Related Work III.
    Proposed Architecture IV. Communication Protocol V. Security Protocol Show Full
    Outline Authors Figures References Citations Keywords Metrics Abstract: Typical
    wearable devices use a dedicated mobile phone as relay node to transfer the collected
    sensor data to a server. However, such relay nodes can be faulty or inactive due
    to various reasons, leading to interruptions of the communication link. To mitigate
    this challenge, we propose a novel security-enhanced emergency situation detection
    system, where 3 rd party unknown mobile relays are used instead of dedicated gateways
    as opposed to many existing solutions for IoT healthcare applications. The proposed
    underlying key agreement and authentication scheme ensures anonymity and untraceability
    for both sensors (wearable devices) and relay nodes, and relies on symmetric key-based
    operations to function under resource-constrained environments. We have also developed
    a prototype of the system using commercial off-the-shelf devices to verify the
    proposed method''s validity and evaluate the performance advantage over existing
    approaches. Bluetooth Low Energy (BLE) communication technology is used to connect
    sensor nodes (wearable devices) and mobile relays. After sending medical data
    to the cloud server, the relay node is responsible for emergency detection and
    alert generation. Published in: IEEE Open Journal of the Computer Society ( Volume:
    2) Page(s): 241 - 259 Date of Publication: 07 July 2021 Electronic ISSN: 2644-1268
    DOI: 10.1109/OJCS.2021.3095341 Publisher: IEEE Funding Agency: CCBY - IEEE is
    not the copyright holder of this material. Please follow the instructions via
    https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles and
    stipulations in the API documentation. SECTION I. Introduction Ambient Assisted
    Living (AAL) is a novel concept in which Information and Communication Technology
    (ICT) is used to ensure the safety and comfort of elderly people to enable them
    to make their lives self-dependent to some extent [1]. AAL systems usually consist
    of IoT-based wearable devices, medical sensors, intelligent communication devices,
    wireless network technologies, and other supporting software and mobile applications.
    These technologies make aging in place possible. IoT-based wearable devices are
    also becoming very popular among the young and middle-aged population. These devices
    and body sensors are typically used to monitor fitness levels, track physical
    exercises (i.e., step count, travel distance), track location with GPS and navigate.
    Furthermore, advanced wearable devices can play video and music, view text messages
    and emails, which allow users to be active without the need to take their devices
    out of their pockets. These IoT-based wearable devices play a vital role in realizing
    AAL systems. For instance, patients with chronic disease conditions and older
    adults can get support from Bluetooth Low Energy (BLE) wearable sensors to keep
    track of their health [2]. Usually, these IoT devices, including wearable devices,
    use a relay-based communication model. Due to the limited resources, IoT devices
    use energy-efficient short-range communication technology such as Zigbee, Near
    Field Communication (NFC), or Advanced and Adaptive Network Technology (ANT) to
    communicate with a relay or gateway node. This relay/gateway node supports long-range
    communication technologies such as 4 G, 5 G, Wi-Fi and Wi-Max. Generally, IoT-based
    wearable devices use a dedicated mobile phone as relay node. BLE, also named Bluetooth
    Smart, is a superior option to be used over alternative technologies such as Zigbee,
    ANT, or NFC for mobile phones [3]. Since it is available as short-range communication
    means on the vast majority of mobile phones. The work in [3] shows that BLE provides
    many features that get wide adoption by the mobile manufacturers to include in
    the daily life of mobile devices. BLE is a low energy version of Bluetooth specified
    in version 4.0, [4]. It is a modern Bluetooth technology developed by Bluetooth
    Special Interest Group (SIG), intended to support short-range communications [5].
    Nowadays, BLE is a widely used technology, applicable in a variety of use cases
    such as healthcare, consumer electronics, and smart energy, and is expected to
    be used in billions of devices in the near future [6]. At present, these BLE sensors
    facilitate relay-based communication with the user''s mobile phones. It is vital
    to continuously transmit the data from the sensor to the mobile, to keep track
    of their health conditions. However, elderly people may often forget to keep their
    mobile phones always charged or even carry their mobile phone when they move around.
    Also, during an emergency situation (e.g., a car accident, falling while walking/running),
    the user''s dedicated mobile phone might get turned off or damaged. When this
    happens, the IoT devices which only use dedicated gateways cannot transmit the
    data. In these needful situations, those wearable devices fail to alert the caretaker.
    The elderly person might even lose his/her life in this kind of helpless situation.
    The continuous monitoring can also get interrupted due to connection loss when
    the wearable devices get out of the gateway''s or dedicated device''s range. Moreover,
    a dedicated mobile might not have an active Internet connection due to suspension
    of Internet services caused by issues such as late payments. To resolve this issue,
    3rd party mobile relays can be used in addition to the dedicated devices to provide
    the required long-range communication link for the IoT-based wearable devices.
    Such 3rd party mobile relays can provide connectivity when the primary dedicated
    device is not available. In this method, the patient monitoring device can establish
    a connection to a 3rd party mobile device through BLE to eliminate the issues
    associated with having only one dedicated mobile relay. However, there is a risk
    of sending medical records through a 3rd party mobile device since those records
    are confidential. Some attacks like theft of data, bluebugging, bluesnarfing,
    phone hijacking, protocol-based denial-of-service attacks, and battery draining
    can cause adverse effects for confidentiality, integrity, and availability as
    well [7]. With the above facts, it is evident that there is a requirement for
    a secure relay-based communication method for transferring health device data
    through BLE technology. Therefore, a specific security scheme has also been proposed
    and implemented along with an emergency situation detection system. The security
    integration has mainly addressed four features being confidentiality, mutual authentication,
    anonymity, and unlinkability. For limiting the 3rd party mobile relays’ computation
    and communication costs, we have designed a symmetric key-based security scheme
    restricted to use XOR and one-way cryptographic hash functions as described in
    the upcoming sections. A. Our Contribution To mitigate the above mentioned connectivity
    and security challenges, we propose a novel security-enhanced emergency situation
    detection system. The proposed approach utilizes 3rd party unknown mobile relays
    instead of dedicated gateways as opposed to many existing solutions for IoT wearable
    devices. Furthermore, the proposed system uses BLE communication technology to
    connect sensor nodes (wearable devices) and mobile relays. In addition, we offer
    a highly efficient security scheme and implement it along with an emergency situation
    detection system to enable mainly four security features, being confidentiality,
    mutual authentication, anonymity, and unlinkability. Therefore, the main contributions
    of the paper are the following: Addresses issues associated with real-time and
    stored data transmission from IoT devices to the cloud server by establishing
    secure communication via third-party mobile relays. Proposes a novel secure symmetric
    key agreement that can establish a shared common key between end devices to protect
    against security threats and to ensure confidentiality, mutual authentication,
    anonymity, and unlinkability. Implements a prototype of the proposed solution
    with off-the-shelf devices to analyze the performance and illustrate the viability
    of proposed features. Provides formal verification of the security strengths of
    the proposed scheme using Rubin logic and informally analyses protection against
    security threats, i.e., node capturing attack, impersonation attack, man-in-the-middle
    attack, replay attack, online/offline dictionary attack. The remainder of this
    paper is organized as follows: Section II provides the related work. Section III
    provides a detailed description of the proposed architecture, whereas information
    on the proposed communication protocol are provided in Section IV. It acts as
    a core development within the overall project. Moreover, Section V presents details
    on the developed security protocol and includes several subsections for the clarity
    of the content. Section VI shows the overall system implementation details, and
    Section VII discusses performed experiments and their associated details. Informal
    and formal security evaluations under Section VIII provide a detailed security
    verification. The paper is finalized with a discussion in Section IX and a conclusion
    in Section X. SECTION II. Related Work Many associated works based on IoT systems
    for healthcare are already available, and some use mobile phones for connection
    establishment. One such piece of work is in [8], [9], which introduces a mobile-based
    relay assistance system for establishing a secure end-to-end (E2E) connection
    between low-power IoT sensors and cloud servers without using any specific and
    dedicated gateway. It proposes a basic prototype to accomplish communication tasks
    and E2E connection establishment through a secure AES-CCM encryption technique.
    Another work that utilizes BLE is available in [10], where authors introduce an
    open BLE platform (custom-designed beacon platform nRF24Cheep) and open source
    development of a BLE physical and Medium Access Control (MAC) layer. This development
    provides capabilities to adapt the communication stack. Their work is in very
    abstract form, which includes guidance on establishing a BLE connection for prototyping.
    In [11], a model named iConfig presents an approach for managing IoT devices in
    smart cities via BLE. The system has an edge-driven platform that has addressed
    the three major issues in current IoT management: registration, configuration,
    and maintenance. But their work does not establish an E2E connection of IoT sensors
    with a backend. When considering technologies other than BLE, the solution in
    [12] contains the central server and several other servers which are acting as
    gateways. It describes the IoT sensor network''s middle-ware to perform sensor
    data translations. However, as the system is not a cost-effective solution and
    is poorly scalable, it is not a feasible solution for IoT applications. In [13],
    a scheme named Collaborative on Demand Wi-Fi Sharing (COWS) is introduced with
    the purpose of enabling Wi-Fi roaming facilities for users. But this system is
    not fully compatible with resource-constrained devices such as those that have
    power limitations. Besides, [8], all the other related works are using a dedicated
    gateway for data transmission. Moreover, the proposed solution in [8] supports
    a single relay for real-time data transmission only. This approach implies that
    it can fail when there is no relay nearby during an incident since critical data
    is dropped or is not available on time. The work related to dedicated gateways
    presented in [14] describes the implementation of a smart e-health gateway (named
    UT-GATE) at the edge of healthcare IoT in clinical environments. In addition to
    cloud processing, they suggest local data processing through smart gateways. This
    step helps to decrease latency, but it may be vulnerable to security problems
    such as the possibility of implementing malicious gateways that could eavesdrop
    on patient''s data. Moreover, this system may not support mobility-related aspects
    due to cost and difficulty to provide universal connectivity (due to interoperability
    issues) in external environments with the proposed method. By giving more attention
    to mobility and security, in [15], the authors propose an end-to-end security
    scheme for mobility enabled healthcare IoT. Their strategy has three main characteristics,
    (i) Secure and efficient end-user authentication and authorization architecture
    based on certificate-based Datagram Transport Layer Security (DTLS) handshake,
    (ii) Secure end-to-end communication developed on session resumption, and (iii)
    Robust mobility implemented through interconnected smart gateways. But, instead
    of specific smart gateways, we use third-party mobile devices, which increase
    mobility further. Thus a more trustworthy system is mandatory in such a situation,
    considering the security aspect. As a consequence, a dedicated security protocol
    is required. In literature, this refers to so-called tripartite schemes, where
    three entities need to agree on a common key. We can distinguish several mutual
    authentication and key agreement schemes. Some of the techniques developed are
    based on symmetric key mechanisms, using a pre-shared common key [16]–[19]. In
    particular, Gong et al. [16], [19] study the minimum number of communication rounds
    and messages needed to establish mutual authentication among three different parties,
    taking into account various assumptions. The disadvantage in these schemes is
    that the session key is only constructed by the authentication server and the
    other two entities do not participate in the construction of it, making these
    schemes vulnerable for key control resilience attacks [20]. Moreover, none of
    the schemes provide anonymity, which was even considered impossible [21] to be
    reached by symmetric key-based schemes. Instead, we will provide in this paper
    a counterexample, showing that this statement is not correct. Our system relies
    on the basic structure of [22], but is extended to a tripartite architecture and
    corrects the weakness of the occurrence of an offline dictionary attack. To further
    complete the state of the art concerning authentication schemes for tripartite
    architecture, we also mention several public key-based mechanisms for relay-based
    architectures. In [23], the authors propose an example of a key agreement scheme
    for a healthcare application, in which anonymity of the end device towards the
    mobile relay is obtained. The system is an improvement of [24] in which the derived
    key was static and thus not able to establish perfect forward secrecy. However,
    it is limited to devices possessing a smart card-based entry and it uses compute-intensive
    pairing operations. Another secure identity-based tripartite scheme is presented
    in [25], which is in particular designed for mobile distributed computing environments.
    However, this scheme does not provide anonymity to participants and consists of
    a pairing operation at the device''s side. In addition, it is also not able to
    compute pairwise keys using the available key material at the end of the protocol.
    Finally, there is the scheme of [26], representing an identity-based, mutual authenticated
    key agreement protocol, in which the sensor device and the relay node can establish
    a secure communication without leakage of their identities. Only the cloud server
    can control the identities of the sensor device and relay node. It has been formally
    proven that the session keys are also protected in the Canetti-Krawczyk security
    model. In which adversaries have access to session state-specific information,
    previous session keys, or long-term private keys. The scheme is efficient compared
    to [23], [25] as it only utilizes elliptic curve operations and basic symmetric
    key operations. SECTION III. Proposed Architecture We design and implement an
    IoT-based remote patient monitoring and caring system which offers maximum mobility
    and flexibility to its users. The proposed method is similar to a fog computing
    approach [27], with third-party mobile relays. Fig. 1 shows an overview of the
    system architecture. Figure 1. Proposed system architecture. Show All As indicated
    in Fig. 1, the whole architecture consists of four main components. At one end
    of this architecture, the network consists of BLE-based sensor nodes with low
    power consumption. This part of the system is responsible for gathering the required
    patient data. For use case scenarios, we select heart rate and fall detection.
    Data generated from sensors get forwarded into a 3rd party unknown mobile relay.
    In this case, the BLE sensor node selects a specific mobile relay that is in range
    and available before sending information. The communication protocol in Section
    III describes the selection procedure in detail. Furthermore, each 3rd party mobile
    relay has a mobile application that enables and controls its connectivity with
    the network. There is no data processing or storing at mobile stations, but the
    mobile can attach its location information with the data that it transmits to
    approximate patient location. In the next step, the mobile relay sends data to
    a cloud server via its internet connection. Secure socket communication can be
    established between mobile relay and cloud server. The server performs data processing,
    data storing, and emergency situation detection. After detecting any emergency,
    the server sends notifications to registered carers of the patients through Short
    Message Service (SMS) and emails. Other than alerting functionality, the system
    also supports real-time data monitoring and location tracking services for patient''s
    carers. Patient data is available for carers via a web application. Our proposed
    architecture contains two key protocols, i.e. communication protocol and security
    protocol. The communication protocol allows to establish communication between
    the different entities of the proposed system. It extends the existing solution
    with new capabilities such as multi-connect, automatic handover, storage, forwarding
    of data, and load balancing. Further details are discussed in Section IV. The
    proposed security protocol provides essential security features such as confidentiality,
    mutual authentication, unlinkability, and anonymity. It also offers protection
    against several types of security threats, i.e., node capturing attack, impersonation
    attack, man-in-the-middle attack, replay attack, and online/offline dictionary
    attack. Further details can be found in Section V. SECTION IV. Communication Protocol
    A. Single Mobile Relay Node BLE Connection The Fig. 2 depicts message flow of
    protocol for a single mobile in the relay. Figure 2. Message flow of the proposed
    protocol. Show All Phase 1: The donor mobile relay node connects with the Cloud
    Server (CS) via an HTTPS connection request sent by the mobile app. In this case,
    the registration phase initiates, and both BLE sensor node and mobile relay have
    to be registered with the cloud server as described in Section V-D. A trusted
    mobile relay, like a person''s own smartphone needs to be utilized to perform
    this initial registration. This registration consists of the establishment of
    the security key material. After successful registration with the CS, the IoT
    device can function with any other preregistered mobile relay as indicated in
    Fig. 2. On the other hand, a mobile can register itself as a donor with the CS
    through an inbuilt process. Upon successful authentication, the CS issues a dynamic
    value a f for the donor mobile, as discussed in Section V-D. This value is considered
    the advertisement ID, and mobile phone uses it for advertising its presence via
    BLE. Phase 2: The mobile relay node starts advertising with the received advertisement
    ID. Meanwhile, this mobile also scans for an advertisement from a wearable device
    that is advertising with the same ID. A wearable device that scans for mobile
    relays can get an advertisement ID from the mobile relay node and start advertising
    itself with that same ID. The correctness and authenticity of these data is evaluated
    after a successful run of the key agreement protocol. Therefore, a key agreement
    phase needs to be performed as described in Section V-E. In the case of multiple
    mobile relays in proximity, the wearable device can select the one with the best
    Received Signal Strength Indicator (RSSI) value. Then, the mobile app can establish
    a connection with a wearable device after finding a match with its ID. Phase 3:
    After connection establishment with the mobile relay node, the wearable device
    can initiate a connection request with the CS. The mobile relay would forward
    this request to the CS. The server can then validate this request and approve
    the connection. Phase 4: After connection approval, the wearable device initiates
    the transmission of data to the mobile relay. These data packets may contain a
    timestamp, and data is encrypted so that mobile relays cannot eavesdrop on user''s
    data. After sending a fixed amount of information, the wearable device expects
    an encrypted acknowledgment from the CS. If an acknowledgment is received, data
    transmission is resumed. Otherwise, the wearable device terminates the connection
    with the relay and reports this session to the CS in subsequent successful data
    transmission. Phase 5: The donor mobile can set a maximum threshold for the number
    of data packets that a wearable device can send. Once the threshold is reached,
    it can request to cease the connection from the CS. The CS then sends the last
    acknowledgment message to the wearable device and terminates the connection with
    the mobile relay. In this case, the wearable device discards the session information
    as this is a legitimate session termination. Then, the wearable device can restart
    from “Phase 2” and start scanning for other nearby mobile relays for sending more
    data. B. Wearable Device Multi Connect The transmission of both real-time and
    previously stored data via a single mobile relay node may cause problems such
    as latency when sharing the same connection. Here, stored data is the data that
    is generated by a wearable device when it is not connected to a nearby mobile
    relay. Therefore, the paper proposes expanding the same protocol to transmit real-time
    and stored data separately, using two mobile relays. Note that the current prototype
    implementation is not yet included this concept. It will be considered in future
    work. Here, the wearable device follows a procedure such that one mobile relay
    allocates for transmitting real-time data and another one for transmitting stored
    data. There should be at least two donor mobile devices for achieving this. Real-time
    data has a higher priority, and hence the selection of mobile relay devices for
    real-time data transmission is based on the best RSSI value. The wearable device
    selects the second-best mobile to send the stored data. C. BLE Handover To improve
    connectivity duration and QoS of the 3rd party relay-based communication channel,
    we propose a handover mechanism. It helps maintaining channel conditions at an
    acceptable level for a longer duration than a system without handover. Handover
    can also avoid unnecessary data losses or delays within a dynamic environment.
    This extra feature will be an added benefit of the proposed system. However, handover
    can only be performed in dense environments where multiple mobile relays are available.
    In our system, handover can be triggered mainly under two situations. When the
    currently connected relay decides to terminate the connection with the connected
    mobile relay. When the patient is traveling away from the connected mobile relay
    (i.e., if RSSI of the patient''s device reaches a predefined threshold, handover
    can be performed). Therefore, handover can help to keep a continuous data flow
    between IoT devices and the cloud server. It can also help to support real-time
    data monitoring and emergency alert generation processes online. With the currently
    developed handover mechanism, if a handovering instance triggers, the IoT device
    scans for another mobile relay to connect. After detecting possible mobile relays,
    the IoT device selects the mobile relay device that provides the best RSSI value.
    Then, it establishes a new connection by following steps we describe in Sections
    IV and V. Besides the scenarios mentioned earlier, several other ways, like environmental
    interference, hardware failures in mobile and BLE devices, and malfunctioning
    BLE radios, can lead to connection termination. In the absence of a mobile relay
    to transmit the data or to perform handover, the BLE device stores the generated
    data in the integrated micro SD card, in order to minimize the impact of data
    loss. SECTION V. Security Protocol The proposed security scheme consists of three
    main entities: BLE sensor nodes N, relay nodes F and the cloud server CS as illustrated
    in Fig. 1. Both sensor nodes and relay nodes need to register with the CS and
    receive key material, which should be securely stored on the device. We assume
    that storage is tamper-proof, which is common on state of the art devices. Also,
    the server needs to store its master secret key in tamper-resistant hardware.
    If the sensor wants to communicate with the CS, it sends a request to the nearby
    relay, which forwards the message to the CS after adding additional information.
    Based on the received data, the CS verifıes the authenticity of the request, and
    if it is validated, it generates the necessary key material, allowing relay and
    sensor node to forge a common shared key with the server; hence all three can
    derive a common shared key. The relay node should not be able to derive the sensor''s
    identity throughout the process and vice versa. A. Required Security Features
    To summarize, the following security features should be established. Confıdentiality:
    Only the involved entities should be able to derive the key material. Mutual authentication:
    The common shared key should involve key material coming from all entities able
    to derive the corresponding key. Anonymity: No outsider, not even the relay node
    or other sensor nodes can derive the identity of the sensor node. Also, the sensor
    node is not able to derive the identity of the relay node. Unlinkability: No outsider,
    not even the relay node or other sensor nodes can link messages coming from the
    same device. Also, the sensor node is not able to deduce a relation between messages
    coming from the same relay node. B. Attack Model In the attack model, we assume
    that the adversary can eavesdrop on the channel or actively manipulate the transmitted
    messages, i.e., insert, change, reply messages. These activities are typically
    applied when trying impersonation, man-in-the-middle (MITM) attacks, replay attacks,
    and online/offline dictionary attacks. An attacker can also capture a node or
    relay node and derive the key material stored in the tamper-proof part of the
    memory. In this case, it is essential to keep the impact of the attack local to
    the tampered device. C. Proposed Scheme To establish the above security features,
    we design the security scheme for the proposed architecture. The scheme consists
    of two phases: registration phase and key agreement phase. The operations in the
    scheme are limited to XOR ⊕ and a one-way cryptographic hash function H (e.g.,
    SHA2 or SHA3). Since the proposed scheme uses very low-cost cryptographic operations,
    it is efficient in terms of computation. Furthermore, the concatenation of two
    messages is denoted by m 1 ∥ m 2 . D. Registration Phase In the registration phase,
    both wearable devices and mobile relay need to register with the CS. During this
    operation, the the CS makes use of its master key k m . The process for both is
    indicated in Fig. 3. Figure 3. The registration phase where the CS shares the
    temporary identity with the mobile relay and the wearable device. Show All The
    CS chooses a temporary key k i and derives the following parameters for the entity
    with identity i d i . Here i=n in case of the wearable device N and i=f in case
    of the Relay F . a i b i c i = = = i d i ⊕H( k m ∥ k i ) a i ⊕ k m ⊕ k i H(i d
    i ∥ k m ) View Source The parameters (i d n , a n , b n , c n ) and (i d f , a
    f , b f , c f ) are sent over a secure channel to the wearable device and mobile
    relay respectively. Note that the temporary keys k n and k f , are not stored,
    neither by the wearable devices, nor by the mobile relay, nor by the CS. The parameters
    i d i , c i , corresponding with the static identity, require secure storage in
    tamper-resistant hardware at the wearable device and the mobile relay. These are
    fixed parameters and do not vary over time. The parameters { a i , b i } represent
    the dynamic identity, are publicly available as they appear in the message sent
    by the device, and are updated in each communication phase. Note that no specific
    storage is required for each entity on the CS side, except the master key k m
    . If the CS still wants to keep track of which devices are registered, it should
    not store the identities but the hashed values of the identities. The identities
    must be under no circumstances leaked. Otherwise, the security of the corresponding
    device is not guaranteed anymore, as the device is sufficiently weakened but not
    broken. The temporary keys k n , k f should not be stored and must be deleted
    by the CS. E. Key Agreement Phase In this phase, we distinguish five different
    steps, where the first four steps correspond with a message sent over the channel.
    Fig. 4 shows the key agreement phase in detail. Figure 4. Key agreement phase.
    Show All 1) Wearable Device Request In this step, the wearable device broadcasts
    a key agreement request. Therefore, it needs to choose a random value r n and
    computes, using its stored parameters (i d n , a n , b n , c n ) and the current
    timestamp t n , the following values: x n y n ti d n = = = a n ⊕i d n x n ⊕ r
    n H(i d n ∥ t n ∥ c n ∥ r n ) View Source The message m 1 ={ti d n , y n , a n
    , b n , t n } is sent by the wearable device. 2) Mobile Relay Request The mobile
    relay, which picks up this message, also derives in the same way the following
    values using its stored parameters (i d f , a f , b f , c f ) , the received timestamp
    t n and a randomly chosen parameter r f : x f y f ti d f = = = a f ⊕i d f x f
    ⊕ r f H(i d f ∥ti d n ∥ t n ∥ c f ∥ r f ) View Source Next, the message m 2 ={ti
    d n , y n , a n , b n , t n ,ti d f , y f , a f , b f } is sent to CS. 3) Cloud
    Server Check and Key Establishment Upon the arrival of this message, CS verifies
    the correctness of the message by first deriving the identities of the wearable
    device and the relay and then checking if the message is well-formed. This results
    in the following operations: k ∗ f x ∗ f i d ∗ f r ∗ f c ∗ f Verify:  k ∗ n x
    ∗ n i d ∗ n r ∗ n c ∗ n Verify:  = = = = = = = = = = k m ⊕ a f ⊕ b f H( k m ∥
    k ∗ f ) x ∗ f ⊕ a f x ∗ f ⊕ y f H(i d ∗ f ∥ k m ) H(i d ∗ f ∥ti d n ∥ t n ∥ c
    ∗ f ∥ r ∗ f )==ti d f k m ⊕ a n ⊕ b n H( k m ∥ k ∗ n ) x ∗ n ⊕ a n x ∗ n ⊕ y n
    H(i d ∗ n ∥ k m ) H(i d ∗ n ∥ t n ∥ c ∗ n ∥ r ∗ n )==ti d n View Source At this
    stage, the correctness of the identities of the mobile relay and the wearable
    device is verified. CS now creates new dynamic identities for the mobile relay
    and the wearable device and then derives a session key, using the random values
    chosen by the mobile relay and the wearable device. Therefore, it chooses two
    random values r s n , k + n related to the wearable device and two random values
    r s f , k + f related to the mobile relay. Next, it computes the new identity
    related material a + i , b + i and session key K i with i={n,f} . a + i b + i
    η i μ i α i K i = = = = = = i d ∗ i ⊕H( k m ∥ k + i ) a + i ⊕ k m ⊕ k + i H( r
    s i ∥i d ∗ i ) ⊕ a + i H(i d ∗ i ∥ r s i ) ⊕ b + i c ∗ i ⊕ r s i H( c ∗ i ∥ r
    ∗ i ∥ r s i ∥ x ∗ i ∥ t n ∥ti d i ) View Source CS determines the line containing
    the points (1, K n ),(2, K f ) to derive a common shared key between the three
    entities. The intersection with the Y-axis, i.e., x=0 , results in the secret
    key SK . The Cloud server also derives the point on the line for x=3 , resulting
    in y= y p . Then, to allow the mobile relay and the wearable device to derive
    the correctness of the message, the following parameter is also computed: β nf
    = H(SK∥ t n ∥ti d n ∥ti d f ) View Source The message m 3 ={ α n , η n , μ n ,
    α f , η f , μ f , y p , β nf } is sent to the mobile relay. 4) Mobile Relay Key
    Derivation The mobile relay considers the last five parts of the received message.
    Using α f , it can find r s f . As a consequence, the new dynamic identity ( a
    + f , b + f ) is derived using this value r s f and the received parameters η
    f , μ f . Next, the common shared key K f with CS can be computed. To compute
    the common shared key between all three entities, it derives the line through
    the points (3, y p ),(2, K f ) and computes the intersection with the Y-axis to
    find SK . Finally, the correctness is verified by checking the hash value to derive
    β nf . If this last check is successful, the mobile relay forwards the message
    to the wearable device. m 4 ={ α n , η n , μ n ,ti d f , y p , β nf } 5) Wearable
    Device Key Derivation The wearable device can perform similar steps as the mobile
    relay to derive r s n , its new dynamic identity ( a + n , b + n ) and its common
    shared key K n with CS. In the same way, the common shared key SK is determined,
    and its validity is checked through β nf . SECTION VI. Implementation To implement
    this protocol, we consider emergency situation detection of patients who suffer
    from heart issues as the basic use-case scenario. This scenario involves sensors
    that can detect heart problems, a BLE device that can transmit the data, a relay
    mobile that supports BLE, and a cloud server that performs operations such as
    user registration, authentication, storage, detection of emergencies, and generation
    of alerts. The overall system is named “The Healer”. In order to perform some
    of the experiments mentioned in Section VII, we prepare a specific setup as shown
    on Fig. 5. Figure 5. Experimental setup. Show All We use a micro-controller unit
    named ESP32 (with BLE 4.2 capabilities) to establish the communication pathway.
    Table 1 provides details on the ESP32 unit. The mobile phones utilize for the
    implementation are Samsung Galaxy M20 and Samsung Galaxy A20 with Android 9 Pie
    system, and OPPO A37 running Android 5.1 Lollipop. We use Android Studio 3 libraries
    to develop the mobile application and the Java Spring Boot framework for server-side
    implementations. PostgreSQL acts as database management system of our development
    with its TimescaleDB extension to handle time-series data storage. A sensor model
    named MAX30100 records the heart rate of a patient. TABLE I Configuration Settings
    for ESP32 During a communication failure or while waiting for the BLE sensor to
    connect with the mobile relay, sensors capture the data and store them in an external
    flash memory connected to the ESP32. This flash memory device stores the data
    during the handover process (time interval between the current connection termination
    and new connection establishment). Moreover, we need an external flash for the
    ESP32 since ESP32 overall flash memory is 4 MB, and a considerable amount of this
    space (3.5 MB) is for the storage of the running application. The remaining amount
    of space may not be sufficient to store information generated over a long period.
    The ESP32 supports FreeRTOS. Parallel operation of multiple threads is possible
    from its dual-core CPU having an Xtensa LX6 microprocessor. We use this to establish
    the parallel operation of transferring real-time data from one thread and transferring
    stored data from another thread. It is more feasible than using a single thread
    as the real-time data should prioritize old stored data. Before starting data
    transmission, the device needs registration by the user. For that, the registration
    phase described in Section V-D should be executed. It is best to utilize a trusted
    mobile relay (E.g., personal mobile) for IoT device registration. In this case,
    the remote server issues an IoT device ID to the patient that the BLE device stores
    in its memory. The server can distinguish each device and associate the patient
    with it for all data when attached with this saved device ID. After that, ESP32
    continuously scans for mobile relays within proximity of the sensor. Meanwhile,
    it saves the data generated by the heart rate sensors in flash memory. It connects
    with the mobile relay after discovering a single mobile relay device by following
    the key agreement phase of the security protocol as indicated in Section V-E and
    starts transferring data. In the presence of multiple mobile relay nodes, it selects
    the best mobile relay node based on the RSSI value. Before connecting, it repeats
    scanning numerous times to verify the availability of the best relay node. The
    components mentioned above and techniques are put together into a single prototype
    device indicates in Fig. 6. Besides these sensors and micro-controllers, we integrate
    a body temperature sensor (MAX30205) with the prototype device for two purposes.
    We use human body temperature as an additional bio-medical measurement to detect
    abnormalities of the patient. If the body temperature becomes lower than usual
    for a certain period and no heart rate data is generating, carers of the patient
    can identify that the patient is not wearing the device at the moment. Figure
    6. Prototype IoT device. Show All The device should be placed near the patient''s
    wrist, and therefore, they can wear the device all the time during their daily
    activities. Registration of this handheld device with the server requires a specific
    methodology. This device comes with two buttons built into it. The user is asked
    to keep pressing both of these buttons for 3 to 5 seconds to enter the device''s
    menu window. In this window, the user has to select the ‘register’ option to enable
    the registration mode. This registration process can process via any trusted mobile
    relay by following the security protocol mentioned earlier. During the registration
    process, the server automatically grants a device ID for a specific device after
    receiving a request from it (when registration mode is on and the trusted mobile
    is nearby, the IoT device automatically sends the request). After the registration
    process, the IoT device can make a connection with any other 3rd party mobile
    relay which is running the “The Healer” mobile application. After the Key Exchange
    phase, the data transmission phase initiates as the next step of the communication
    protocol. During this phase, the relay directs these data into the server via
    a mobile application. Moreover, Fig. 7 indicates the essential functionalities
    associated with the mobile application. The mobile relay device also appends location
    details to the transmitting data stream (as an anonymous data field) to detect
    the approximate location of the patient instead of implementing the location tracing
    service within the IoT device itself. This approach is a kind of energy-saving
    strategy as more energy will drain to operate a dedicated GPS sensor along with
    the BLE device. Figure 7. Interfaces and functionalities of mobile application.
    Show All A specific web application satisfies the data visualization and user
    registration requirements of the system (Fig. 8). The front-end web user interface
    utilizes the Angular Framework for more sophisticated front-end development and
    efficient request handling with the backend. A primary requirement for the web
    application is to perform user registration before data transmission. We implement
    it as follows. A person should first undergo initial registration as a general
    user, and they can select their role as a patient, donor, or carer according to
    the requirements. The donors are the third-party mobile users who contribute as
    mobile relay. The carer is someone who has the privilege to receive notifications
    about the patient''s health status. Carers can receive these notifications and
    view real-time health information about their patient after the patient has permitted
    to do so. A user can perform any of these roles, including all three. The platform
    can render real-time data from the patient in a graph format visible for both
    patient and carer. Figure 8. Interfaces and functionalities of Web application.
    Show All We use Java Spring Boot as the technology for remote server backend as
    a Representational State Transfer (REST) Application Program Interfaces (APIs).
    We make use of web sockets to transmit data from mobile app to servers. This data
    continuously gets stored in the database. For each user session, the system constantly
    monitors patient status based on various criteria. The monitoring criterion can
    vary according to the patient''s healthcare device sensors. First, we select heart
    rate detection as the use-case for the implementation and introduce a specific
    criterion based on upper and lower threshold heart Beats Per Minute (BPM). The
    lower threshold for a non-athlete individual is 60 BPM, and the upper is 100 BPM
    [28]. To test another use case, we utilize a device with an accelerometer sensor
    ADXL345 to detect falls. New devices can integrate different sensors that need
    any other criteria, according to the requirements of the patients or carers. If
    the emergency situation detection module detects an emergency, it sends a request
    to the notification API to forward email and SMS notifications to patients and
    pre-registered carers. The CS and some other online services are responsible for
    controlling and triggering the system notifications according to the requirements.
    To send SMS notifications, we use a cloud communication platform named ‘Twilio’
    and the notification API within the CS. SECTION VII. Experiments and Results To
    address several issues associate with the IoT device and BLE while designing the
    system, we conduct two experiments and adapt the system according to the results.
    A. Data Processing Time Under Single Core and Dual Core Processing In this experiment,
    we observe data processing times under single and dual-core conditions of the
    ESP32 module. Under the single-core mode, both the stored data and real-time data
    process through a single-core and transmits. In contrast, two cores split the
    real-time data processing and stored data processing under the dual-core model.
    For the experiment, we select 10 data samples with sizes of 5 kB, 10 kB, 20 kB,
    30 kB, 50 kB, 75 kB, 100 kB, 150 kB, 300 kB and 500 kB. Then each data sample
    processes 30 times in the ESP32 module and calculates the average processing times
    accordingly. We observe a significant improvement in processing time with the
    utilization of two cores for the data processing function in ESP32, as indicates
    in the following Fig. 9. Figure 9. Stored data size vs processing time of data
    in a single core and dual cores. Show All Moreover, the Table 2 presents summary
    of the improvement. As observable in the Table 2, we can achieve a decrease of
    more than 50% of processing time delay in each case through the utilization of
    two cores for the data processing ESP32. TABLE II Processing Time Improvement
    Under Multi-Connect B. Data Transmission Losses With Distance This experiment
    intends to detect transmission losses related to transmission distance. In this
    case, ESP32 sends data to the mobile phone continuously, and for every 1000 points
    of data, ESP32 sends an acknowledgment to the mobile. Meanwhile, the mobile also
    keeps track of the number of packets received. Due to higher inter-frame delays,
    the mobile phone can synchronize this acknowledgment with its count exactly. But
    when the delay is lower, we observe that counts do not match all time. This observation
    shows in Fig. 10, and it is clear that the transmission disparity increases with
    increasing transmission distance. It shows a drop in transmission success rate
    when the mobile moves away from BLE sensor node ESP32. We also observe that more
    dissimilarities occur when the inter-frame delay is decreased. Therefore, we can
    expect more reliable data transmission under sufficiently large inter-frame delays.
    Figure 10. Distance vs successful data transmission count. Show All Thus, under
    our setup, with multiple relays nearby, the best mobile donor should be selected
    (the one having the best RSSI). It shows the importance of implementing a handover
    mechanism to mitigate data transmission loss when the previously selected mobile
    moves away from the BLE sensor. Multipath fading can also cause data transmission
    loss. In such a situation, the IoT sensor scans and connects to the preferred
    mobile as indicated under the protocol description. The handover mechanism is
    illustrated in Fig. 11. The BLE sensor can perform handover from one mobile to
    another if the current host donor mobile moves further away from the sensor than
    a threshold distance. According to our experiments, it is halfway to 15 m distance
    under this scenario. From Fig. 12, it can be observed that data transmission success
    increases significantly with mobile handover because it limits the distance between
    the BLE sensor and the mobile. Figure 11. Handover of mobile relays at a threshold
    distance. Show All Figure 12. Distance vs successful data transmission count when
    handovering under 3 ms and 5 ms inter frame gaps. Show All 1) Impact of Security
    We measure the impact of the proposed security schemes on the system performance
    via several experiments as follows. These security features integrate with three
    main entities: the cloud server, the BLE sensor device, and the mobile relay device.
    We perform each experiment 30 times and obtain the average values. C. Connection
    Establishment Delay We measure the E2E connection establishment delay between
    the IoT node and the Cloud Server and show the results in the following Table
    3. TABLE III Time Taken for the Security Protocol Establishment From Table 3,
    it can be seen that the implementation of the proposing security protocol does
    not consume much processing time, compared with the total time it takes to establish
    the communication without the security. 1) Impact on E2E Latency In the next experiment,
    we measure the impact of security on E2E latency. We evaluate the time taken for
    AES (Advanced Encryption Standard) encryption by the IoT device for the same file
    sizes we used in Table 2, ranging from 5 kB to 500 kB. The Table 4 presents the
    results of the experiments with a confidence interval of 95%. TABLE IV AES 128
    Bits Encryption Time Taken for Multiple File Sizes From Table 4, we can observe
    that the encryption only takes a small fraction of time when comparing it with
    the time taking for sending data without encryption. The delay percentage is almost
    the same for all file sizes (around 5%) but the actual time takes for encryption
    is low for small files (i.e., 84 ms for 5 kB) and high for bigger files (i.e.,
    5947 ms for 500 kB). Therefore, the impact of encryption on delay is lower for
    small amounts of data transmitting by the IoT device. 2) Scalability (Server-Side)
    In the next experiment, we measure the scalability of the proposing system by
    increasing the number of concurrent requests. The change of processing times with
    the number of server-side operations in security protocol shows in Fig. 13. This
    experiment utilizes a Linux computer with 4 GB RAM, Intel Core i5-4200 U CPU.
    Figure 13. Server Side data processing time with number of iterations for 128
    and 256 bits master key length. Show All We measure the E2E connection establishment
    delay between the IoT node and Cloud. The results are displayed in Table 3. For
    the CS, processing time increases linearly with the number of operations it handles.
    Therefore, the server can scale up to be ready for the increasing demand from
    the users of the system. SECTION VIII. Analysis of Security Protocol This section
    contains the security analysis of the proposed scheme. We use existing methods
    and tools to verify the security properties of our protocol. We will provide both
    a formal security analysis as well as an informal security analysis. A. Security
    Analysis 1) Formal Security Analysis We choose to use Rubin-logic [29] to perform
    the verification of the protocol. Rubin-logic is a method used to do security
    protocols analysis by several authentications and key agreement protocols [30]–[33].
    This method is based on well-defined specifications and uses Global sets, local
    sets, secret sets and actions. The protocol specifications are detailed below.
    The proposed scheme is executed by a group comprised of wearable devices (N) controlled
    by a mobile relay (F) connected to a CS. Global Set: Principal Set: N,F,S. N is
    the initiator of the protocol. Rule Set: The inference rve new statements from
    existing assertions. Secret Set: { k m ,i d n , c n ,i d f , c f } Observer Set:
    Observer( k m ): {S} Observer( i d f , c f ): {F} Observer( i d n , c n ): {N}
    Local Set: This set is defined for each principal, i.e., N, F, and S, respectively.
    As the key agreement process is being initiated by N, we start as follows: Principal
    N POSS(N): { i d n , a n , b n , c n } BEL(N): { i d n , a n , b n , c n } BL(N)
    = N1:    Generate random value r n N2: x n ← a n ⊕i d n N3: y n ← x n ⊕ r n N4:
    ti d n ←H(i d n ∥ t n ∥ c n ∥ r n ) N5:    Send(F, ti d n , y n , a n , b n ,
    t n ) N6:    Receive(F, α n , η n , μ n ,ti d f , y p , β nf ) N7: r s n ← α n
    ⊕ c n N8: a + n ←H( r s n ∥i d n )⊕ η n N9: b + n ←H(i d n ∥ r s n )⊕ μ n N10:
    K n ←H( c n ∥ r n ∥ r s n ∥ x n ∥ t n ∥ti d n ) N11:    Derive through interpolation
    the shared key SK N12:    Verify ( H(SK∥ t n ∥ti d n ∥ti d f ), β nf ) Principal
    S POSS(S): { k m , k f , k n ,i d n ,i d f } BEL(S): { k f , k n } BL(S) = S1:
    k ∗ f ← k m ⊕ a f ⊕ b f S2: x ∗ f ←H( k m ∥ k ∗ f ) S3: i d ∗ f ← x ∗ f ⊕ a f
    S4: r ∗ f ← x ∗ f ⊕ y f S5: c ∗ f ←H(i d ∗ f ∥ k m ) S6:    Verify( H(i d ∗ f
    ∥ti d n ∥ t n ∥ c ∗ f ∥ r ∗ f ) , ti d f ) S7: k ∗ n ← k m ⊕ a n ⊕ b n S8: x ∗
    n ←H( k m ∥ k ∗ n ) S9: i d ∗ n ← x ∗ n ⊕ a n S10: r ∗ n ← x ∗ n ⊕ y n S11: c
    ∗ n ←H(i d ∗ n ∥ k m ) S12:    Verify( H(i d ∗ n ∥ t n ∥ c ∗ n ∥ r ∗ n ) , ti
    d n ) S13:    Generate random values r s n , k + n for N S14:    Generate random
    values r s f , k + f for F For i=f and i=n do the following S15: a + i ←i d ∗
    i ⊕H( k m ∥ k + i ) S16: b + i ← a + i ⊕ k m ⊕ k + i S17: η i ←H( r s i ∥i d ∗
    i )⊕ a + i S18: μ i ←H(i d ∗ i ∥ r s i )⊕ b + i S19: α i ← c ∗ i ⊕ r s i S20:
    c ∗ n ←H(i d ∗ n ∥ k m ) S21: K i ←H( c ∗ i ∥ r ∗ i ∥ r s i ∥ x ∗ i ∥ t n ∥ti
    d i ) S22:    Derive through interpolation the shared key SK S23: β nf ←H(SK∥
    t n ∥ti d n ∥ti d f ) S24:    Send(F, α n , η n , μ n , α f , η f , μ f , y p
    , β nf ) Principal F POSS(F): { i d f , a f , b f , c f } BEL(F): { i d f , a
    f , b f , c f } BL(F) = F1:    Receive(N, ti d n , y n , a n , b n , t n ) F2:    Generate
    random value r f F3: x f ← a f ⊕i d f F4: y f ← x f ⊕ r f F5: ti d f ←H(i d f
    ∥ti d n ∥ t n ∥ c f ∥ r f ) F6:    Send(S, ti d n , y n , a n , b n , t n ,ti
    d f , y f , a f , b f ) F7:    Receive(S, α n , η n , μ n , α f , η f , μ f ,
    y p , β nf ) F8: r s f ← α f ⊕ c f F9: a + f ←H( r s f ∥i d f )⊕ η f F10: b +
    f ←H(i d f ∥ r s f )⊕ μ f F11: K f ←H( c f ∥ r f ∥ r s f ∥ x f ∥ t n ∥ti d f )
    F12:    Derive through interpolation the shared key SK F13:    Verify ( H(SK∥
    t n ∥ti d n ∥ti d f ), β nf ) F14:    Send(N, α n , η n , μ n ,ti d f , y p ,
    β nf ) Below we proceed with the protocol verification. The verification process
    starts with execution of the actions in BL(N). In actions from N1 – N5, N computes
    x n , y n ,ti d n and sends m 1 = ti d n , y n , a n , b n , t n to F. Hence,
    the local sets of N are changed as follows: POSS(N) = { i d n , a n , b n , c
    n ,ti d n , y n , t n , r n , x n } BEL(N) = { i d n , a n , b n , c n ,ti d n
    , y n , t n , r n , x n } The global sets are updated as follows: Secret set:
    { r n , x n } Observer sets: Observer( r n , x n ): {N} Upon receiving m 1 , F
    in actions (F2) – (F6), generates a random value r f , computes x f , y f ,ti
    d f a m 2 = { ti d n , y n , a n , b n , t n ,ti d f , y f , a f , b f } to S.
    Now, the local sets at F change as shown below POSS(F) = { i d n , a n , b n ,ti
    d n , y n , t n ,ti d f , y f , a f , b f , x f , r f } BEL(F) = { i d n , a n
    , b n ,ti d n , y n , t n ,ti d f , y f , a f , b f , x f , r f } The global sets
    at F change as follows: Secret set: { r f , x f } Observer sets: Observer( r f
    , x f ): {F} After completing the action in (F6), the actions (S1)–(S12) in BL(S)
    are performed where S checks the received values from F. At the end of these steps,
    S will have successfully verified ti d n and ti d f , the identities of N and
    F, respectively. In case the verification fails, the protocol execution should
    be aborted. The actions in (S13) – (S24) are performed after which the shared
    key SK is derived through interpolation. Then, the local sets of S are changed
    as follows. POSS(S) = { K f , K n ,SK } BEL(S) = { K f , K n ,SK } Now the global
    sets of S are updated as follows: Secret set: { K f , K n ,SK} Observer sets:
    Observer( K f ): {F,S} Observer( K n ): {N,S} Observer( SK ): {S} After receiving
    message m 3 in F7, F executes actions in (F8) – (F14) thus deriving the shared
    key SK and the session key K f . F then sends message m 4 = α n , η n , μ n ,ti
    d f , y p , β nf to N. The local sets of F are finally changed as follows. POSS(F)
    = { SK, K f } BEL(F) = { SK, K f } The global sets are updated as follows: Secret
    set: {SK, K f } Observer sets: Observer( SK, K f ): {F,S} Upon receiving the message
    m 4 in N6, N executes the actions in (N7) – (N12) and derives the shared key SK
    and the session key K n . The local sets of N are finally changed as follows.
    POSS(N) = { SK, K n } BEL(N) = { SK, K n } The global sets are updated as follows:
    Secret set: {SK, K n } Observer sets: Observer( SK, K n ): {N,S} This result implies
    that: r f , r n as well as k f , k n are fresh for each session, and are known
    by the legitimate F, N and S. Only the legitimate entities N, F, and S, are able
    to derive the common shared key SK . S can verify the identities of N and F. This
    result proves that our scheme resists against the attack model described in Section
    V-B. 2) Informal Security Analysis Let us now discuss the strength of the proposed
    protocol with respect to the obtained security features and the resistance against
    the attacks considered in the required security features in Section V-A. Confidentiality:
    The transmitted messages m 1 , m 2 , m 3 , m 4 have no meaning without knowledge
    of the secret key material. Mutual authentication: The common shared keys between
    CS and the mobile relay K f on the one hand and CS and the wearable device K n
    , on the other hand, contain a random variable derived by each of the involved
    entities. As the common key SK is based on these keys K f , K n , each entity
    has contributed to its construction. Anonymity: This feature is guaranteed by
    the fact that the dynamic identity of the wearable device ( a n , b n ) and the
    mobile relay ( a f , b f ) , sent in messages m 1 , m 2 is updated independently
    in each request. Without knowing the key material stored in the tamper-proof part
    of the memory, it is impossible to derive the relation with the real identity.
    Unlinkability: To derive the updated dynamic identity, knowledge of the parameters
    c i ,i d i is required; these parameters are securely stored by the wearable device
    i=n and mobile relay i=f . Node capture attack: Suppose the node is captured and
    even the key material stored in the tamper-resistant memory is leaked, the security
    for that node is completely broken. However, the attack remains local as it has
    no impact on other devices in the system since each device has its specific construction.
    The master key cannot be retrieved from the stored values without breaking the
    hash function. Impersonation and MITM attacks: These attacks are not possible
    due to the mutual authentication feature. However, special care should be given
    to a malicious mobile relay node willing to take over the request sent to another
    mobile relay. For the computation of K n , the server also includes the temporary
    identity of the mobile relay ti d f in the hash, which is also added in clear
    text by the mobile relay to the message m 4 . As a consequence, it is not possible
    for another mobile relay to change the identity of the mobile relay without CS
    being aware of it. The verification parameter β nf involves the temporary identities
    of the entities, both mobile relay and wearable device, and therefore, no impersonation
    attacks can be performed. In addition, mobile relay and the wearable device are
    ensured in this way that CS has legitimated them. Replay attacks: are avoided
    by using both timestamps and random values in the protocol. Online/offline dictionary
    attack: Guessing the master key is useless as another temporary key needs to be
    determined as well. This key changes in each communication request. Guessing the
    identity of the node results in deriving x n , r n , but will not lead to finding
    the random value r s n chosen by CS as that requires knowledge of c n . Both values
    need to be known to derive the key material with the wearable device. Moreover,
    to check the validity by using the hash value β nf , and the identity material
    of the relay i d f , c f should be guessed. Consequently, in order to make a successful
    dictionary attack, four different parameters i d f , c f ,i d n , c n should be
    guessed. B. Performance Analysis The proposed scheme is very efficient in terms
    of computation and communication. For the resource-constrained wearable devices,
    only 5 XOR and 5 hash operations are executed. Table 5 shows a comparison between
    our scheme and related works in the literature. By using hash functions and negligible
    XOR operations, we avoid compute-intensive pairing operations as observed in many
    cryptographic algorithms [23], [25], [26] thus offering a secure exchange of data
    at a very low cost. TABLE V The Cryptographic Operations That Device, Relay Node
    and CS Need to Perform for a Key Agreement Scheme. Note That T b = Time for Bilinear
    Pairing, T mp = Time for Point Multiplication, T ap = Time for Point Addition,
    T s = Time for Symmetric encryption/decryption, T H = Time for Map to Point, T
    h = Time for Hash Operation, T x = Time for XOR Operation SECTION IX. Discussion
    A. Comparison With Existing Work Table 6 shows the added features of our proposed
    architecture compared with existing solutions. From this table, it is clear that
    our proposed system is a unique solution and addresses many problems existing
    with similar proposals and implementations. TABLE VI Comparison of Proposed Solution
    With the Existing Pertinent Works Our system proposes and implements a mobile
    relay-based procedure, and it provides anonymity and unlinkability with our security
    protocol. It also ensures the confidentiality of all parties involved in establishing
    communication. Comparing with similar works, we can state that most of the solutions
    do not provide those features. In addition, our solution proposes multi-connect,
    load balancing features, and we implement the automatic relay handover, which
    is not available in many related works. B. Limitations 1) Limitations in Communication
    Protocol Though we have proposed and implemented a highly sophisticated communication
    protocol, there are a few limitations associated with this design. In this case,
    the protocol is limited to the usage of smartphones that support BLE. That means
    it supports Android versions from Android 4.3 (API Level 18) [34] and it does
    not work with legacy Bluetooth versions. In addition to that, the relay mobile
    should be powered with both BLE transmission and reception capabilities. Moreover,
    as indicated from Section VII-B, there can be issues associated with small inter-frame
    gaps when the distance between mobile relay and IoT device increases. Therefore,
    it is evident that we define somewhat higher inter-frame intervals such as 10
    ms. Furthermore, we limit the associated implementations of the proposed protocol
    for connection between an IoT handheld device to a single mobile; however, it
    can expand multiple connections as described in Section IV-B. 2) Limitations in
    Security The proposed protocol also has a few limitations related to security.
    First, secure key storage is required in wearable devices and mobile relay. Also,
    the centralized CS is a single point of attack since the whole system security
    relies on the master key { k m } . 3) Limitations in Mobile App In our proposed
    system, the relay user has to install the mobile app. He should also agree to
    share the location data for BLE discovery and Internet connection to upload the
    received IoT data. Since this is a burden for relay users, a subscription model
    must be developed to motivate relay users. For instance, the IoT device owners
    should pay an annual subscription for the services, and mobile relay owners receive
    a fee for their service. However, the development of such a business model is
    beyond the scope of this paper. The proposed system works for any smartphone which
    has BLE connectivity. In the current implementation, we have developed an Android
    app, but it can be implemented to other mobile OSs (Operating Systems) such as
    iOS and Windows. Since the underlying concept of the proposed system is independent
    of the mobile OS, it is technically feasible to implement the proposed system
    with any mobile OS. The relay service periodically scans nearby relay devices
    and establishes an automatic connection with them in the proposed system. Since
    mobile OSs do not provide such service by default, it is necessary to install
    a dedicated mobile app. Although BLE is available for many mobile phones, the
    proposed solutions can not be implemented with low-end mobile phones which do
    not support third-party application installation. C. Reliability of Third Party
    BLE Relay The proposed mobile relay solution works as a secondary option to establish
    the connection. The user owning the dedicated mobile phone acts as the primary
    relay device for any IoT device. The third-party mobile relays are used as an
    additional enhancement to maintain the availability of the connection when the
    owner''s mobile device (primary relay) goes offline or gets damaged. In such a
    case, if there is no mobile device available nearby, data will be saved locally
    in the sensor node, which can later be submitted to the server whenever a relay
    device is available. In addition, transmitted IoT data via third-party BLE relays
    remain in the local storage until the cloud responds with a positive acknowledgment.
    D. Usefulness of Extra Session Key The proposed key exchange mechanism is distributing
    different keys between the entities. In the current version of the proposed architecture,
    the mobile relay just acts as a relay and forwards the received data from sensor
    nodes. Thus, wearable devices currently only use the key K n for encryption since
    we support E2E encryption. However, our key agreement phase supports another session
    key (i.e., SK ) shared between all three entities. If the mobile relay can do
    some prepossessing for data at the relay itself, wearable devices can use the
    key SK for encryption. That way, the mobile relay can decrypt and process the
    data. The prepossessing of data at mobile relay will be carried out in future
    research. E. Choice of BLE for Communication Link Establishment We use BLE as
    the short-range communication establishment method as most mobile phones already
    support BLE. Furthermore, the work in [3] shows that BLE provides many features
    that get wide adoption by the mobile manufacturers to be added in the daily life
    of mobile devices. Therefore, compared with 6LoWPAN, we select BLE, as our use-case
    is based on mobile relay devices. The work in [3] also shows that BLE is a superior
    option to be used over many alternative technologies such as Zigbee, ANT, or NFC
    for u-Healthcare applications. SECTION X. Conclusion This paper proposed a secure
    BLE relay-based emergency detection system for AAL. The proposed solution extends
    the features of existing solutions by adding new capabilities such as multi-connect,
    automatic handover, storage, forwarding data, load balancing, security features
    like confidentiality, mutual authentication, unlinkability, and anonymity. We
    developed a prototype of the proposed solution and performed several experiments
    to get insights into the proposed system''s performance. It was observed that
    multi-core processing of real-time and stored data separately is a better solution
    than processing both together sequentially. Furthermore, the experiments revealed
    that limiting the distance of the mobile from the sensor is vital for data communication
    reliability. Therefore, the BLE sensor''s handover mechanism to change from a
    distant mobile relay to a closer one is an important asset. To enhance the security
    of the system, we also proposed a novel secure symmetric key agreement scheme.
    The proposed method is secure as building a shared common key is based on freshly
    generated parameters. Moreover, our scheme is efficient in terms of computation
    since it uses very low-cost cryptographic operations (i.e., concatenation, XOR,
    and hash functions). We have used Rubin logic to provide this scheme''s security
    strengths. We have also done an informal analysis of the scheme for several security
    threats i.e. node capturing attack, impersonation attack, man-in-the-middle attack,
    replay attack, online/offline dictionary attack. We intend to extend the work
    to machine learning algorithms to detect emergencies and anomalies in both health
    and security-related data in future work. Authors Figures References Citations
    Keywords Metrics More Like This A Novel Two-Server Password Authentication Scheme
    with Provable Security 2010 10th IEEE International Conference on Computer and
    Information Technology Published: 2010 SAS: Secured Authentication Scheme for
    Network Security in Multi-Server and Distributed Environment 2022 IEEE 2nd Mysore
    Sub Section International Conference (MysuruCon) Published: 2022 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE open journal of the Computer Society
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/8782664/9349230/09477028.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: Security Enhanced Emergency Situation Detection System for Ambient Assisted
    Living
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
