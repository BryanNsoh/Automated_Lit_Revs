- DOI: https://doi.org/10.1109/ukci.2014.6930183
  analysis: '>'
  authors:
  - Sunday Iliya
  - E. N. Goodyer
  - Mario GÃ³ngora
  - Jethro Shell
  - John Gow
  citation_count: 5
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2014
    14th UK Workshop on Comp... Optimized artificial neural network using differential
    evolution for prediction of RF power in VHF/UHF TV and GSM 900 bands for cognitive
    radio networks Publisher: IEEE Cite This PDF Sunday Iliya; Eric Goodyer; Mario
    Gongora; Jethro Shell; John Gow All Authors 3 Cites in Papers 243 Full Text Views
    Abstract Document Sections I. Introduction II. Related Work III. Methodology IV.
    Optimization V. Experiment and Simulation Data Show Full Outline Authors Figures
    References Citations Keywords Metrics Abstract: Cognitive radio (CR) technology
    has emerged as a promising solution to many wireless communication problems including
    spectrum scarcity and underutilization. The knowledge of Radio Frequency (RF)
    power (primary signals and/or interfering signals plus noise) in the channels
    to be exploited by CR is of paramount importance, not just the existence or absence
    of primary users. If a channel is known to be noisy, even in the absence of primary
    users, using such channels will demand large quantities of radio resources (transmission
    power, bandwidth, etc) in order to deliver an acceptable quality of service to
    users. Computational Intelligence (CI) techniques can be applied to these scenarios
    to predict the required RF power in the available channels to achieve optimum
    Quality of Service (QoS). While most of the prediction schemes are based on the
    determination of spectrum holes, those designed for power prediction use known
    radio parameters such as signal to noise ratio (SNR), bandwidth, and bit error
    rate. Some of these parameters may not be available or known to cognitive users.
    In this paper, we developed a time domain based optimized Artificial Neural Network
    (ANN) model for the prediction of real world RF power within the GSM 900, Very
    High Frequency (VHF) and Ultra High Frequency (UHF) TV bands. The application
    of the models produced was found to increase the robustness of CR applications,
    specifically where the CR had no prior knowledge of the RF power related parameters.
    The models used implemented a novel and innovative initial weight optimization
    of the ANN''s through the use of differential evolutionary algorithms. This was
    found to enhance the accuracy and generalization of the approach. Published in:
    2014 14th UK Workshop on Computational Intelligence (UKCI) Date of Conference:
    08-10 September 2014 Date Added to IEEE Xplore: 20 October 2014 Electronic ISBN:978-1-4799-5538-1
    Print ISSN: 2162-7657 DOI: 10.1109/UKCI.2014.6930183 Publisher: IEEE Conference
    Location: Bradford, UK SECTION I. Introduction Most of the licensed radio spectral
    are grossly underutilized while the unlicensed spectral are overcrowded. The present
    spectrum scarcity is the direct consequence of spectrum allocation policy and
    not the fundamental lack of spectrum. The first bands to be approved for CR communication
    by the US Federal Communication Commission (FCC) because of their gross underutilization
    in time, frequency and spatial domain are the very high frequency and ultra-high
    frequency (VHF/UHF) TV bands [1] [2]. This paper is focused on the study of real
    world RF power distribution in specific selected channels (54MHz to 110MHz, 470MHz
    to 670MHz, 890MHz to 908.3MHz GSM up-link, 935MHz to 953.3MHz GSM down-link) within
    the VHF/UHF bands and the GSM 900 band. In order to circumvent the problem of
    spectrum scarcity and underutilization, a new paradigm of wireless communication
    needs to be adopted. Advanced Cognitive Radio (CR) or Adaptive Spectrum Sharing
    (ASS) is one of the ways to optimize our wireless communications technologies
    for high data rates whilst maintaining user desired quality of service (QoS) requirements.
    CR is a radio equipped with the capability of awareness, perception, adaptation
    and learning of its radio frequency (RF) environment [3]; through which many of
    the digital signal processing that were traditionally done in hardware are implemented
    via software. Irrespective of the definition of CR, it has the followings basic
    characteristics: observation, adaptability and intelligence. CR is the key enabling
    technology for dynamic spectrum access and a promising solution for the present
    problem of spectrum scarcity and underutilization. Cognitive radio network consists
    of two users i.e. the primary users (PU) who are the incumbent licensed owners
    of the spectrum and the cognitive radio commonly called the secondary users (SU)
    who intelligently and opportunistically access the unused licensed spectrum on
    a no interference base i.e. when the licensed owners are not using the channel
    (the overlay) or SU can coexist with the PU as long as the interference to the
    PU is below a given threshold which will not be harmful to the PU nor degrade
    the QoS requirements of the PU (the underlay CR network scheme) [4] [1]. In this
    paper we combine the power of ANN and differential evolution (DE), and developed
    an optimized ANN model for the prediction of real world radio frequency (RF) power.
    The proposed algorithm used a priori data to enable the system to avoid noisy
    channels. The previous knowledge of the RF power allowed the cognitive radio to
    predictively select channels with the least noise among those that were unused
    or free. This would allow for a reduced utilization of radio resources including
    transmitted power and bandwidth, in turn maximizing the usage of the limited spectrum
    resources. The data used in this study was obtained by capturing real world RF
    data for two months using Universal Software Radio Peripheral 1 (USRP 1). The
    digital signal processing and capturing of the data were done using gnuradio which
    is a combination of Python and C++ while the ANN models and prediction were done
    in Matlab. The experiment was conducted at the Centre for Computational Intelligence,
    De Montfort University, UK, located very close to Leicester city centre. The rest
    of this paper is constructed of the following sections. Section II outlines previously
    presented research in this field focusing on the implementation of CI methods.
    This will be followed by Section III, section IV and V, that will present the
    methodology used within this research, the optimization algorithm and experiments
    carried out. The paper is concluded with Section VI, which discusses the results
    of the experiments, Section VII presents a summary of the work. SECTION II. Related
    Work There are different types of Computational Intelligence (CI) and machine
    learning that can be used in CR such as genetic algorithms, fuzzy logic system
    (FLS), neural network, hidden Markov model, game theory, linear regression and
    linear predictors, Bayesian inference based predictors, swamp intelligence, etc.
    Some for learning and prediction, some for optimization of certain transmission
    parameters while others for decision making [5] [6] [7]. Spectrum hole prediction
    using Elman recurrent artificial neural network (ERANN) was proposed in [8]. It
    uses the cyclostationary features of modulated signals to determine the presence
    or absence of primary signals while the input of the ERANN consists of time instances.
    The inputs and the target output used in the training of the ERANN and prediction
    were modeled using ideal multivariate time series equations and assumptions which
    are often different in real life where PU signals may be embedded in noise and/or
    interfering signals. The fact that spectrum holes were detected does not depict
    any information about the expected noise and/or level of interference based on
    the channels history which is vital in selecting the channels to be used among
    the unused channels. Traffic pattern prediction using seasonal autoregressive
    integrated moving-average (SARIMA) was proposed for reduction of SU hopping rate
    and interference effects on PU while maintaining a fare blocking rate [9]. The
    model (SARIMA) does not depict any information about the expected noise power.
    Transmission rate prediction using adaptive neural fuzzy inference system (ANFIS)
    was proposed in [10]. This model is used to predict the data rate (6, 12, 24,
    36, 48 and 54 Mbps) that can be achieved in WLAN using a 802.11a/g configuration
    as a function of time. The training data was obtained by generating a random data
    rate with an assigned probability of occurrence at a given time instance, thereby
    forming a time series. In this paper, no real world data was used. Additionally,
    the research did not take into account the noise or interference level which can
    affect the predicted rates. Semi Markov model (SMM) and continuous-time Markov
    chain (CTMC) models have also been used for the prediction of packet transmission
    rates [11]. This avoids packet collisions by periodic spectrum sensing and prediction
    of temporal wireless local area network (WLAN) activities combined with hoping
    to a temporary inactive channel. However, no reference is made to the expected
    noise level among the inactive channels that are selected. Fuzzy logic (FL) is
    a CI method that can capture and represent uncertainty. As a result in has been
    used in CR research for decision making processes. An FL based decision system
    was modeled for spectrum hand-off decision-making in a context characterized by
    uncertain and heterogeneous information [12] and fuzzy logic transmit power control
    for cognitive radio. The proposed system was used for the minimization of interference
    to PU''s while ensuring the transmission rate and quality of service requirements
    of secondary users [13]. The researcher did not, however, include any learning
    from past experience or historical data. An exponential moving average (EMA) spectrum
    sensing using energy prediction was implemented in [14]. The EMA achieved a prediction
    average error of 0.2436 with the assumption that the channel utilization follow
    exponential distribution with rate parameter=0.2 and signal to noise (SNR) of
    10dB; RF real world data was not used in their study. Within this paper we demonstrate
    the use of an ANN for prediction of real world RF power of selected channels within
    the GSM band, VHF and UHF bands. An optimized ANN model was produced by combining
    the global search ability of differential evolution (DE) algorithms and the local
    search advantages of back-propagation algorithms (BPA). The initial weights of
    the ANN were evolved using DE after which the ANN was trained more accurately
    using back-propagation algorithms. This methodology demonstrates the application
    of previously acquired real world data to enhance the prediction of RF power to
    assist the implementation of CR applications. SECTION III. Methodology Artificial
    Neural Networks (ANN) are composed of simple elements operating in parallel. These
    elements are inspired by biological nervous systems [15]. As a result of the nonlinearity
    often associated with RF traffic, coupled with erratic interfering signals or
    noise resulting from both natural and artificial sources, a fully connected multilayer
    perceptron (MLP) ANN with two hidden layers was used in this research. The input
    layer was cast into a high dimensional first hidden layer for effective features
    selection. A nonlinear hyperbolic tangent function was used for the activation
    functions of the two hidden layers while a linear symmetric straight line is used
    for the output activation function. Other activation functions were also used,
    but this combination gave the best results. These functions introduced a nonlinear
    transformation into the network. The hidden layers serve as a feature detector
    i.e. during the training they learn salient features that characterize the training
    samples. The ANN is trained using differential evolution (DE) and backpropagation
    algorithms (BPA). The synaptic weights and biases were updated every epoch to
    minimize the Mean Square Error (MSE). A supervised batch training method was adopted
    of which 60% of the data were used for training the ANN, 20% for validation and
    20% for testing the trained ANN. Since the back propagation algorithm is used
    as a local searcher, the learning rate was kept low at 0.01 for the model with
    constant learning rate while for the model with varying learning rate, the initial
    learning rate is 0.8 which changes with change in MSE. The inputs of the ANN consist
    of time domain data of varying rates of change i.e. second, minute, hour, week
    day (1 to 7), date day (1 to at most 31), week in a month (1 to 5), and month
    whilst the output gives the power in Decibels (dB). Each input enables the ANN
    to learn the trend of RF activities (RF power variation) as a function of that
    particular input. In this paper we designed three ANN models and evaluated their
    efficiency in terms of memory demand, training time, computational complexity
    and prediction accuracy/generalization. The first model is shown in Fig 1; it
    consists of only one output neuron and is dedicated for power prediction of only
    one channel which implies that each channel will have its own dedicated ANN. The
    second model is depicted in Fig 2, it has only one output neuron but with one
    additional input representing the channels. The third model has output neurons
    equal to the number of channels to be considered, this is shown in Fig 3. The
    data used in this paper were obtained by capturing real world RF signals in the
    GSM 900, VHF and UHV TV bands and FM bands for a period of two months. In all
    the models, no RF power related parameters such as signal to noise ratio (SNR),
    bandwidth, and modulation type, are used as the input of the ANN. This makes the
    models robust for cognitive radio application where the CR has no prior knowledge
    of these RF power related parameters. Four ANN topologies were used: feed forward
    (FF), feed forward with output feedback (FFB), cascaded feed forward (CFF) and
    layered recurrent (LC) ANN. The accuracy and level of generalization of ANN depend
    largely on the initial weights and biases, learning rate, momentum constant, network
    topology, and also the training data. In this paper, momentum was kept constant
    at 0.008 while the initial weights and biases were evolved using differential
    evolution variants i.e. DE/Rand/1/Exp and DE/Rand/1/bin. The initial weights and
    biases were randomly generated and constrained within the decision space of â2
    to 2 using a toroidal bound. A population of 30 was maintained over 1000 generations.
    30 parents and offspring were evolved every generation as described in the pseudocode,
    Section IV-B. The MSE obtained using the test data was used as our fitness function.
    The use of the test data (data not known by the ANN nor used to train it) for
    computation of the fitness function (MSE) does not only result in a more accurate
    network but also a more robust and generalized ANN model. The ANN weights and
    biases were initialized using each parent. The network is trained and the fitness
    of each parent is computed. This process is repeated using the offspring. If an
    offspring outperformed its parent, the particular parent is replaced by the offspring
    otherwise the parent will continue in the next generation. We use both binomial
    and exponential cross over for generating the offspring [16], with a cross over
    probability CR of 0.2. The mutation factor F was kept constant at 0.3. After 1000
    generations, the most fit candidate, the global best (this is defined as the candidate
    with the least MSE among the population) was selected. The weights and biases
    of the ANN was reinitialized with the global best and retrained (fine tune) using
    backpropagation algorithms to produce the final model. Fig. 1. Dedicated ANN model
    for one channel Show All Fig. 2. Multiple channels, single output ANN model Show
    All Fig. 3. Multiple channels, parallel outputs ANN model Show All SECTION IV.
    Optimization This section gives a brief description of the optimization algorithms
    implemented. We combine the global search capability of deferential evolutionary
    and algorithms with the local search advantages of BPA to evolve the weights and
    biases of the optimized ANN model as described in selection process, IV-B. A.
    Differential Evolution (DE) DE are population based direct search algorithms used
    to solve continuous optimization problems [17] [18]. DE aims at evolving NP population
    of D dimentional vectors which encodes the G generation candidate solutions X
    i,G ={ X iâG,â¯ X D iâG } towards the global optimum, where i=1,â¯,NP . The initial
    candidate solutions at G=0 are evolved in such a way as to cover the decision
    space as much as possible by uniformly randomizing the candidates within the search
    domain using (1). X i,G = X min +rand(1,0)â( X max â X min ) (1) View Source Where
    A=1,â¯,NP, X min ={ X 1 min â¯ X D min }, X max ={ X 1 max â¯ X D max } and rand(1,
    0) is a uniformly distributed random number between 0 and 1, X min and X max are
    the minimum and maximum of X respectively. 1) Mutation For every individuals (target
    vectors) X i,G at generation G 1 , a mutant vector V i,G called the provisional
    or trial offspring is generated via certain mutation schemes. The mutation strategy
    implemented in this study is DE/rand/1 (2) [18]. V i,G = X r 1 ,G +Fâ( X r 2 ,G
    â X r 3 ,G ) (2) View Source Where the indexes r 1 , r 2 , and r 3 are mutually
    exclusive positive integers and distinct from i while F is the mutation constant.
    B. Pseudocode Generate an initial population X G=0 of Np individuals. Initialize
    ANN weights and biases with each solution in the population Np and Evaluate fitness
    (MSE) of each using the test data. Select the global best X gb (i.e. individual
    with the best fitness at the end of the budget (generation)), initialize the ANN
    weights and biases with X qb and train it (fine tune the weights) using BPA constrain
    within a maximum of just 200 epoch and 6 validation fails. This yield the final
    optimized ANN model. SECTION V. Experiment and Simulation Data The datasets used
    in this study were obtained by capturing real world RF signals using universal
    software radio peripheral 1 (USRP 1) for a period of two months. The USRP are
    computer hosted software radios with one motherboard and interchangeable daughter
    board modules for various ranges of frequencies, these serve as the RF front end.
    Two daughter boards, SBX and Tuner 4937 DI5 3Ã7901, having a frequency ranges
    of 4MHz to 4.4GHz and 50 MHz to 860 MHz respectively, were used in this study.
    The daughterboard perform the function of down-conversion, filtering, analog to
    digital conversion (ADC) and other signal conditioning while the motherboard decimate
    the signal to a lower sampling rate that can easily be transmitted to the host
    computer through a high-speed USB cable where the signal is processed by software.
    For TV channels with channels bandwidth of 5MHz, we divided the channels into
    subchannels each consisting of 500 KHz bandwidth. To ensure that no spectral information
    was lost, we used a sample frequency of 1MHz and obtained 1024 samples for each
    sample time. For GSM 900 and FM band with a bandwidth of 200 KHz, we used 1MHz
    sample frequency and 512 samples for each sample time. The power was obtained
    using both the time and frequency domain data. For the frequency domain, after
    passing the signal through the channel filter, the signal was windowed using a
    hamming window in order to reduce spectral leakage. The stream of the data was
    converted to a vector and decimated. This is then converted to the frequency domain
    and the magnitudes of the bins were passed to a probe sink. The choice of probe
    sink is essential because it can only hold the current data and does not increase
    thereby preventing stack overflow or a segmentation fault. This allows Python
    to grab the data at run time for further analysis or to be saved. The power was
    not computed using gnuradio block rather the magnitude of the bins were saved
    so that it can be used for further analysis. The interval of time between consecutive
    sample data was selected at a random value between 5 seconds and 30 seconds. The
    choice of this range is based on the assumption that for any TV programme, FM
    broadcast or GSM call will last for between 5 to 30 seconds. In order to capture
    all possible trends, the time between consecutive sample data is selected at random
    within the given range instead of using regular intervals. For the VHF and FM
    band we captured RF signals from 54MHz to 110MHz and 470 to 670MHz for the VHF
    TV bands. For the GSM band, 62 down-link channels (935MHz to 953.3MHz) and 62
    uplink channels (890MHz to 908.3MHz) were captured. The real world RF data was
    divided into three subsets, randomly selected with 60% used for training the ANN,
    20% for validation and 20% for testing. The training or estimation data were the
    only known data sources used in training the ANN. The test data set was unknown
    to the network i.e. they are not used in training the network but are used in
    testing the trained ANN as a measure of the generalization performance of the
    ANN model. The ANN design and the simulation were carried out using Matlab while
    the capturing of the data and the signal processing were carried out using gnu-radio
    which is a combination of Python and C++. SECTION VI. Results From the results
    depicted, the three ANN models really adapt to the trends of variation of the
    RF power with good generalization. Table II shows the average results obtained
    by testing each ANN models on different channels selected at random within the
    studied bands, this demonstrates that the dedicated ANN model designed for the
    prediction of RF power in only one channel has the least MSE and is 82.55% more
    accurate than the EMA. The EMA was tested on data obtained from mathematical models
    which are often different from real world data. In this study, real world RF data
    was captured and used for the training and prediction yet it outperformed the
    EMA. The results depicted in Table II, Fig 4, Fig 5 and Fig 6 where obtained using
    the test data i.e. data that were not used in training the ANN nor known by the
    ANN, this implies that the models are well generalized. One of the drawbacks of
    the dedicated model is that each channel will have a separate ANN. To circumvent
    this problem, we developed two ANN models that can handle multiple channels, one
    with a single output while the other with parallel outputs. The single output
    gives the RF power of many channels but one at a time, it has an additional input
    for identification of the channels and only one output neuron. The one with parallel
    output gives the RF power of all the channels it has been trained to predict simultaneously,
    given a time domain input. The number of channels is equal to the number of output
    neurons. The multichannel models were trained to adapt to RF power of 20 channels
    and the results is as shown in Table II. In terms of accuracy, the parallel output
    is 19.69% more accurate than the single output but it demands more computer resources
    and computational complexity as it has many neurons than the single output model.
    The average MSE of the single output model is 0.0706 and that of the parallel
    model is 0.0567 for the 20 channels. The single output model and the parallel
    model are 71.01% and 76.72% more accurate than EMA respectively. The results discussed
    so far are based on the optimized ANN. Table II shows the improvement of the optimized
    ANN over the unoptimized model of the same topology. To validate the fact that
    the combination of these variants of DE optimization algorithms with the famous
    BPA to evolves the weights and biases of ANN will produce a more accurate, robust
    and generalized model than using only BPA; we use the same topology but train
    with only BPA at constant learning rate of 0.01 and another one with varying learning
    rate starting from 0.8 and keep on changing with change in MSE using inbuilt Matlab
    training function traingda. For both models trained with only BPA, each was run
    30 times, each run was constrained within a maximum of 1200 epoch and 6 validation
    fails, the average MSE (AMSE), standard deviation (STD) of the MSE, and the Wilcoxon
    test results are as shown in Table I. For the hybridized training i.e combining
    DE with BPA, the DE were run for 1000 generations and the final best solution
    was used to reinitialized the ANN weights and further train using BPA constrained
    within just 200 epoch and 6 validation fails. In all cases, the hybridize training
    outperform the training with only BPA. From the results, the combination DE/rand/1/bin
    and BPA yield a more promising results compare to DE/rand/1/exp for this problem,
    hence it is used as our reference for the Wilcoxon test [19], where + mean that
    the reference outperformed the other algorithm it is compared with as depicted
    in Table I. The Wilcoxon test shown in Table I was obtained using the ANN model
    depicted in Fig 1. When the ANN was trained with only DE/rand/l/bin, the AMSE
    is 0.2685, after it was fine tune with BPA, the AMSE reduces to 0.0338 which is
    better than 0.0441 obtained using only BPA. This improvement demonstrate that
    the prediction accuracy and generalization of ANNs largely depend on the initial
    weights and biases. This also implies that, the generalization and accuracy of
    ANN can be improved by combining the global search advantages of DE and the local
    search advantages of BPA. From our study, we discovered that the FM broadcast
    band is grossly underutilized. Only two channels of the entire band seem to be
    used in the geographic location of our study except for possible low power devices
    that may exist within the band. Drawing from our findings, we can conclude that
    the FM band is a potential candidate band for CR communication. The noise floor
    of the FM band seems to be high. Alternatively, the GSM band is heavily used.
    124 GSM channels were considered with 62 channels each for uplink and downlink.
    The improvement of the optimized ANN model over the unoptimize model is computed
    using (3). Improvement= AMS E U âAMS E O AMS E U .100 (3) View Source Where: AMS
    E U t is the average mean square error of the unoptimized ANN model and AMS E
    O is the average mean square error of the optimized ANN model Where IOUA is Improvement
    Over Unoptimized ANN and IOE is Improvement Over EMA Fig. 4. Feed forward dedicated
    model prediction Show All Table I. Wilcoxon test results with de/rand/1/bin as
    reference Table II. Performance of the ann models SECTION VII. Conclusion This
    paper demonstrate the application of an enhanced ANN through the use of DE and
    BPA in comparison to using only BPA, and EMA; for the prediction of real world
    RF power. The paper also authenticated the fact that the accuracy and generalization
    of ANNs largely depends on the initial weights and biases. The prior knowledge
    of the RF power can enhance the ability to avoid noisy channels. This can lead
    to an optimum satisfaction of users through higher QoS with less radio resources.
    Also, the prior knowledge of the aggregate RF power will lead to optimum and efficient
    spectrum sharing and spectrum mobility in both overlay and underlay CR schemes.
    Fig. 5. Cascaded feed forward, parallel output model prediction Show All Fig.
    6. Multiple channels, single output model prediction Show All ACKNOWLEDGMENT This
    work is partly supported by Petroleum Technology Development Fun (PTDF) Scholarship,
    Nigeria and De Montfort University, United Kingdom. Authors Figures References
    Citations Keywords Metrics More Like This Remote Robot Training of Its Artificial
    Neural Network through GSM Communication 2008 Third International Conference on
    Systems and Networks Communications Published: 2008 A Local Training Strategy-Based
    Artificial Neural Network for Predicting the Power Production of Solar Photovoltaic
    Systems IEEE Access Published: 2020 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. Â© Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2014
  relevance_score1: 0
  relevance_score2: 0
  title: Optimized artificial neural network using differential evolution for prediction
    of RF power in VHF/UHF TV and GSM 900 bands for cognitive radio networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icastech.2014.7068129
  analysis: '>'
  authors:
  - Sunday Iliya
  - E. N. Goodyer
  - Jethro Shell
  - Mario GÃ³ngora
  - John Gow
  citation_count: 3
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2014 IEEE 6th International C... Optimized
    Neural Network using differential evolutionary and swarm intelligence optimization
    algorithms for RF power prediction in cognitive radio network: A comparative study
    Publisher: IEEE Cite This PDF Sunday Iliya; Eric Goodyer; Jethro Shell; Mario
    Gongora; John Gow All Authors 2 Cites in Papers 225 Full Text Views Abstract Document
    Sections I. Introduction II. Related Work III. Artificial Neural Network IV. Optimization
    Algorithms V. Experiment and Simulation Data Show Full Outline Authors Figures
    References Citations Keywords Metrics Abstract: Cognitive radio (CR) technology
    has emerged as a promising solution to many wireless communication problems including
    spectrum scarcity and underutilization. The a priory knowledge of Radio Frequency
    (RF) power (primary signals and/ or interfering signals plus noise) in the channels
    to be exploited by CR is of paramount importance. This will enable the selection
    of channel with less noise among idle (free) channels. Computational Intelligence
    (CI) techniques can be applied to these scenarios to predict the required RF power
    in the available channels to achieve optimum Quality of Service (QoS). In this
    paper, we developed a time domain based optimized Artificial Neural Network (ANN)
    model for the prediction of real world RF power within the GSM 900, Very High
    Frequency (VHF) and Ultra High Frequency (UHF) TV bands. The application of the
    models produced was found to increase the robustness of CR applications, specifically
    where the CR had no prior knowledge of the RF power related parameters such as
    signal to noise ratio, bandwidth and bit error rate. The models used, implemented
    a novel and innovative initial weight optimization of the ANN''s through the use
    of differential evolutionary and swarm intelligence algorithms. This was found
    to enhance the accuracy and generalization of the ANN model. For this problem,
    DE/best/1/bin was found to yield a better performance as compared with the other
    algorithms implemented. Published in: 2014 IEEE 6th International Conference on
    Adaptive Science & Technology (ICAST) Date of Conference: 29-31 October 2014 Date
    Added to IEEE Xplore: 26 March 2015 ISBN Information: ISSN Information: DOI: 10.1109/ICASTECH.2014.7068129
    Publisher: IEEE Conference Location: Ota, Nigeria SECTION I. Introduction Most
    of the licensed radio spectrums are grossly underutilized while the unlicensed
    spectrums are overcrowded. The present spectrum scarcity is the direct consequence
    of spectrum allocation policy and not the fundamental lack of spectrum. The first
    bands to be approved for CR communication by the US Federal Communication Commission
    (FCC) because of their gross underutilization in time, frequency and spatial domain
    are the very high frequency and ultrahigh frequency (VHF/UHF) TV bands [1] [2].
    This paper is focused on the study of real world RF power distribution in specific
    selected channels (54MHz to 110MHz, 470MHz to 670MHz, 890MHz to 908.3MHz GSM up-link,
    935MHz to 953.3MHz GSM down-link) within the VHF/UHF bands and the GSM 900 band.
    In order to circumvent the problem of spectrum scarcity and underutilization,
    a new paradigm of wireless communication needs to be adopted. Advanced Cognitive
    Radio (CR) or Adaptive Spectrum Sharing (ASS) is one of the ways to optimize our
    wireless communications technologies for high data rates whilst maintaining user
    desired quality of service (QoS) requirements. CR is a radio equipped with the
    capability of awareness, perception, adaptation and learning of its radio frequency
    (RF) environment [3]; through which many of the digital signal processing that
    were traditionally done in hardware are implemented via software. Irrespective
    of the definition of CR, it has the followings basic characteristics: observation,
    adaptability and intelligence. CR is the key enabling technology for dynamic spectrum
    access and a promising solution for the present problem of spectrum scarcity and
    underutilization. Cognitive radio network consists of two users i.e. the primary
    users (PU) who are the incumbent licensed owners of the spectrum and the cognitive
    radio commonly called the secondary users (SU) who intelligently and opportunistically
    access the unused licensed spectrum on a no interference base i.e. when the licensed
    owners are not using the channel (the overlay) or SU can coexist with the PU as
    long as the interference to the PU is below a given threshold which will not be
    harmful to the PU nor degrade the QoS requirements of the PU (the underlay CR
    network scheme) [4] [1]. There are four things involved in cognitive radio network,
    these are: spectrum sensing, spectrum decision, spectrum sharing, and spectrum
    mobility [5] [6]. In spectrum sensing, the CR senses the PU spectrum using either
    energy detector, cyclostationary features detector, match filter detector, eigen
    values detector, etc to sense the occupancy status of the PU. Based on the sensing
    results, the SU (CR) will take a decision using a binary classifier to classify
    the PU channels (spectrums) as either busy or idle there by identifying the white
    spaces. Spectrum sharing deals with how to efficiently share the available white
    spaces (spectrum holes) among other CR (SU) within a given geographical location
    at a given period of time while spectrum mobility is the ability of the CR to
    vacate the channel when the PU reclaimed ownership of the channel and search for
    another spectrum hole to communicate. During the withdrawal period, the CR should
    maintain seamless communication. Many wireless broadband devices ranging from
    simple communication to complex systems automation, are deployed daily with increasing
    demand for more, this calls for optimum utilization of the limited spectrum resources
    via CR paradigm. Future wireless communication device should be equipped with
    cognitive capability for efficient spectrum utilization. In this paper, we combine
    the power of differential evolutionary (DE) and swarm intelligence algorithms,
    and ANN to develop an optimized ANN model for the prediction of real world radio
    frequency (RF) power. The proposed algorithm used a priori data to enable the
    system to avoid noisy channels. The previous knowledge of the RF power allowed
    the cognitive radio to predictively select channels with the least noise among
    those that were unused or free. This would allow for a reduced utilization of
    radio resources including transmitted power, bandwidth, in turn maximizing the
    usage of the limited spectrum resources. The data used in this study was obtained
    by capturing real world RF data for two months using Universal Software Radio
    Peripheral 1 (USRP 1). The digital signal processing and capturing of the data
    were done using gnuradio which is a combination of Python and C++ while the ANN
    models design and prediction were done in Matlab. The experiment was conducted
    at Centre for Computational Intelligence, De Montfort University, UK, located
    very close to Leicester city centre. The rest of this paper is consist of the
    following sections. Section II previously presented research in this field. This
    will be followed by Section III and section IV, that gives brief description of
    neural network and the optimization algorithms implemented. Experimental details
    are discussed in section V. The paper is concluded with Section VI, which discusses
    the results of the experiments, section VII gives the summary of the findings.
    SECTION II. Related Work There are different types of Computational Intelligence
    (CI) and machine learning that can be used in CR such as genetic algorithms, fuzzy
    logic system (FLS), neural network, hidden Markov model, game theory, linear regression
    and linear predictors, Bayesian inference based predictors, swarm intelligence,
    etc. Some for learning and prediction, some for optimization of certain transmission
    parameters while others for decision making [7] [8] [9]. Spectrum hole prediction
    using Elman recurrent artificial neural network (ERANN) was proposed in [10].
    It uses the cyclostationary features of modulated signals to determine the presence
    or absence of primary signals while the input of the ERANN consists of time instances.
    The inputs and the target output used in the training of the ERANN and prediction
    were modeled using ideal multivariate time series equations and assumptions which
    are often different in real life where PU signals may be embedded in noise and/or
    interfering signals. The fact that spectrum holes were detected does not depict
    any information about the expected noise and/ or level of interference based on
    the channels history which is vital in selecting the channels to be used among
    the unused channels. Traffic pattern prediction using seasonal autoregressive
    integrated moving-average (SARIMA) was proposed for reduction of SU hopping rate
    and interference effects on PU while maintaining a fare blocking rate [11]. The
    model (SARIMA) does not depict any information about the expected noise power.
    Transmission rate prediction using adaptive neural fuzzy inference system (ANFIS)
    was proposed in [12]. This model is used to predict the data rate (6, 12, 24,
    36, 48 and 54 Mbps) that can be achieved in WLAN using a 802.11a/g configuration
    as a function of time. The training data was obtained by generating a random data
    rate with an assigned probability of occurrence at a given time instance, thereby
    forming a time series. In this paper, no real world data was used. Additionally,
    the research did not take into account the noise or interference level which can
    affect the predicted rates. Semi Markov model (SMM) and continuous-time Markov
    chain (CTMC) models have also been used for the prediction of packet transmission
    rates [13]. This avoids packet collisions by periodic spectrum sensing and prediction
    of temporal wireless local area network (WLAN) activities combined with hoping
    to a temporary inactive channel. However, no reference is made to the expected
    noise level among the inactive channels that are selected. Fuzzy logic (FL) is
    a CI method that can capture and represent uncertainty. As a result it has been
    used in CR research for decision making processes. An FL based decision system
    was modeled for spectrum hand-off decision-making in a context characterized by
    uncertain and heterogeneous information [14] and fuzzy logic transmit power control
    for cognitive radio. The proposed system was used for the minimization of interference
    to PU''s while ensuring the transmission rate and quality of service requirements
    of secondary users [15]. The researcher did not, however, include any learning
    from past experience or historical data. An exponential moving average (EMA) spectrum
    sensing using energy prediction was implemented in [16]. The EMA achieved a prediction
    average error of 0.2436 with the assumption that the channel utilization follow
    exponential distribution with rate parameter A = 0.2 and signal to noise (SNR)
    of 10dB; RF real world data was not used in their study. Within this paper we
    demonstrate the use of an ANN for prediction of real world RF power of selected
    channels within the GSM band, VHF and UHF bands. An optimized ANN model was produced
    by combining the global search ability of deferential evolution (DE) algorithms
    and the local search advantages of back-propagation algorithms. The initial weights
    of the ANN were evolved using DE after which the ANN was trained (fine tune) more
    accurately using backpropagation algorithms. This methodology demonstrates the
    application of previously acquired real world data to enhance the prediction of
    RF power to assist the implementation of CR applications. SECTION III. Artificial
    Neural Network Artificial Neural Networks (ANN) are composed of simple elements
    operating in parallel. These elements are inspired by biological nervous systems
    [17]. Due to the nonlinearity often associated with RF traffic pattern, coupled
    with random interfering signals or noise resulting from both artificial and natural
    sources, a fully connected multilayer perceptron (MLP) ANN with two hidden layers
    was used in this study. The input layer was cast into a high dimensional first
    hidden layer for proper features selection. The activation functions used in the
    two hidden layers is nonlinear hyperbolic tangent function, and a linear symmetric
    straight line is used for the output activation function. Other activation functions
    were also used, but this selection gave a better promising results. These functions
    introduced a nonlinear transformation into the network. The hidden layers serve
    as a feature detector i.e. during the training; they learn the salient attributes
    (features) that characterizes the training data. The ANN is trained using differential
    evolutionary and swarm intelligence algorithms after which the weights are fine
    tuned using backpropagation algorithm. The synaptic weights and biases were updated
    every epoch to minimize the Mean Square Error (MSE). A supervised batch training
    method was used with 60% of the data used for training the ANN, 20% for validation
    and 20% for testing the trained ANN. Since the back propagation algorithm is used
    as a local searcher, the learning rate was kept low at 0.01. The inputs of the
    ANN consist of time domain data of varying rates of change i.e. second, minute,
    hour, week day (1 to 7), date day (1 to at most 31), week in a month (1 to 5),
    and month whilst the output gives the power in Decibels (dB). Each input enables
    the ANN to keep track with the trend of RF power variation as a function of that
    particular input. In this paper we designed three ANN models. The first model
    is shown in Fig 1; it consists of only one output neuron and is dedicated for
    power prediction of only one channel which implies that each channel will have
    its own dedicated ANN. The second model is depicted in Fig 2, it has only one
    output neuron but with additional inputs representing the channels. The output
    neurons of the third model is equal to the number of channels to be considered
    Fig 3. The data used in this study were obtained by capturing real world RF signals
    within the GSM 900, VHF and DHV TV bands and FM bands for a period of two months.
    In all the models, no RF power related parameters such as signal to noise ratio
    (SNR), bandwidth, and modulation type, are used as the input of the ANN. Thus
    making the models robust for cognitive radio application where the CR has no prior
    knowledge of these RF power related parameters. Four ANN topologies were considered:
    feed forward (FF), feed forward with output feedback (FFB), cascaded feed forward
    (CFF) and layered recurrent (LC) ANN. The accuracy and level of generalization
    of ANN depend largely on the initial weights and biases, learning rate, momentum
    constant, training data and also the network topology. In this paper, the learning
    rate and the momentum were kept constant at 0.01 and 0.008 respectively while
    the initial weights and biases were evolved using differential evolutionary and
    swarm intelligence algorithms. The initial weights and biases were randomly generated
    and constrained within the decision space of â2 to 2 using a toroidal bound. A
    population of 30 individuals or particles was maintained over 1000 generations.
    At the end of the generation, the ANN weights and biases were initialized using
    the candidate with the best fitness (candidate with the least MSE, obtain using
    test data) and then train further using backpropagation algorithm (BPA) to fine
    tune the weights as detailed in selection process IV-E. Thus producing the final
    optimized ANN model. Fig. 1. Dedicated ANN model for one channel Show All Fig.
    2. Multiple channels, single output ANN model Show All Fig. 3. Multiple channels,
    parallel outputs ANN model Show All SECTION IV. Optimization Algorithms A brief
    description of the optimization algorithms implemented are presented in this section.
    We combine the global search capability of population based differential evolutionary
    and swarm intelligence algorithms with the single solution local search advantages
    of BPA to evolve the weights and biases of the optimized ANN model as described
    in selection process, Section IV-E. A. Differential Evolution DE are population
    based direct search algorithms used to solve continuous optimization problems
    [18] [19]. DE aims at evolving NP population of D dimentional vectors which encodes
    the G generation candidate solutions X i,G ={ X 1 i,G ,â¯, X D i,G } towards the
    global optimum, where i=1,â¯,NP . The initial candidate solutions at G=0 are evolves
    in such a way as to cover the decision space as much as possible by uniformly
    randomizing the candidates within the search domain using (1). X i,G = X min +rand(1,0)â(
    X max â X min ) (1) View Source Where 1,â¦,NP.  X min ={ X 1 min â¯ X D min }, X
    max ={ X 1 max â¯ X D max } and rand(1, 0) is a uniformly distributed random number
    between 0 and 1. B. Mutation For every individuals (target vectors) X i,G at generation
    G , a mutant vector V i,G called the provisional or trial offspring is generated
    via certain mutation schemes. The mutation strategies implemented in this study
    are: DE/rand/1: V i,G = X r 1 ,G +Fâ( X r 2 ,G â X r 3 ,G ) (2) View Source DE/best/1:
    V i,G = X best,G +Fâ( X r 1 ,G â X r 2 ,G ) (3) View Source DE/rand-to-best/1:
    V i,G = X i,G +Fâ( X best,G â X i,G )+Fâ( X r 1 ,G â X r 2 ,G ) (4) View Source
    DE/best/2 V i,G = X best,G +Fâ( X r 1 ,G â X r 2 ,G )+Fâ( X r 3 ,G â X r 4 ,G
    ) (5) View Source Where the indexes r 1 , r 2 , r 3 and r 4 are mutually exclusive
    positive integers and distinct from i . These indexes are generated at random
    within the range [1 PN]. X best,G is the individual with the best fitness at generation
    G while F is the mutation constant. C. Cross over After the mutants are generated,
    the offspring U i,G are produced by performing a crossover operation between the
    target vector X i,G and its corresponding provisional offspring V i,G . The two
    crossover schemes i.e. exponential and binomial crossover are used in this study
    for all the DE algorithms implemented [20]. The binomial crossover copied the
    jth gene of the mutant vector V i,G to the corresponding gene (element) in the
    offspring U i,G if rand(0,1)â¤CR or j= j rand . Otherwise it is copied from the
    target vector X i,G (parent). The crossover rate CR is the probability of selecting
    the offspring genes from the mutant while j rand is a random number in the range
    [1 D ], this ensure that at least one of the offspring gene is copied from the
    mutant. The binomial crossover is represented as: U j i,G ={ V j i,G X j i,G if
    (rand (0, 1)â¤CR or j= j rand ) otherwise (6) View Source For exponential crossover,
    the genes of the offspring are inherited from the mutant vector V i,G starting
    from a randomly selected index j in the range [1 D ] until the first time rand(0,1)>CR
    after which all the other genes are inherited from the parent X i,G . The exponential
    crossover is as shown in section IV-D D. Exponential Crossover U i,G = X i,G  generate
    j=randi(1, D) U j i,G = V j i,G  k=1 View Source E. Selection Process The objective
    function in this study is the MSE of the optimized ANN computed using the test
    data. After every generation, each offspring U i,G and the corresponding parent
    X i,G are used to set the weights and biases of the ANN and the MSE of the ANN
    models are obtain using the test data. The use of the test data (data not known
    by the ANN nor used to train it) for computation of the fitness function (MSE)
    does not only result in a more accurate network but also a more robust and generalized
    ANN model. A greedy selection schemes is used in which if the MSE of the offspring
    is less than or equal to that of it parent, the offspring will replace the corresponding
    parent in the next generation otherwise the parent will be maintained among the
    next generation individuals. At the end of the generation, the most fittest individual
    (global best) i.e. the candidate with the least MSE among the final evolved solutions
    is used to initialize the weights and biases of the ANN which is further trained
    using back propagation algorithms (BPA) to fine tune the weights to produce the
    final optimized ANN model. The DE is run with 30 individuals for 1000 generations.
    The fine tuning of the ANN weights using BPA was constrained within a maximum
    of 200 epoch and 6 validation fails, i.e the training stop if any of these constrain
    thresholds is satisfy. The combination of the global search capabilities of DE
    and the local search advantages of BPA to evolve the weight and biases of ANN
    have proving to be superior to using only the famous BPA for this problem. The
    DE algorithm pseudocode is depicted in section IV-F F. Differential Evolution
    Pseudocode Generate an initial population X G=0 of Np individuals. Initialize
    ANN weights and biases with each solution in the population Np and Evaluate fitness
    (MSE) of each using the test data. Selection Process: Select the best between
    parent and offspring. Select the global best X gb (i.e. individual with the best
    fitness at the end of the budget (generation)), initialize the ANN weights and
    biases with X gb and train it (fine tune the weights) using BPA constrain within
    a maximum of just 200 epoch and 6 validation fails. This yield the final optimized
    ANN model. G. Comprehensive Learning Particle Swarm Optimization (clpso) Since
    this is a comparative study, we also consider two algorithms which are not based
    on DE schemes rather on swarm intelligence framework. These two particle swarm
    optimization (PSO) variants are: the standard PSO with inertia weight [21] and
    the CLPSO [22]. PSO emulates the swarm behavior of which each member of the swarm
    adapts it search path by learning from its own experience and other members''
    experiences. The velocity update of PSO and CLPSO are giving by (7) and (8) respectively.
    In the inertia weighted PSO, each of the particles learn from its local best pbest
    and the global best gbest. The parameters C 1 and C 2 are the acceleration constants
    that reflect the weighting of the stochastic acceleration term that pull each
    particle toward pbest and gbest respectively. The inertia weight w is used to
    facilitate both global and local search. Large w facilitate global search while
    smaller values favored local search. In this study w was made to decrease exponentially
    as the generation progresses. This approach facilitate global search within the
    early stage (generations) and then start to favor local search as the budget (generation)
    comes to an end. In standard PSO, all particles learn from it own pbest and gbest
    for all dimension. Constraining the social learning aspect to only the gbest lead
    to premature convergence of the original PSO. Since all particles in the swarm
    learn from the current gbest even if the gbest is very far from the global optimum,
    all the particles stand the risk of been attracted to gbest and get trapped in
    a local optimum especially when solving complex problems with numerous local optimums.
    To circumvent the problem of premature convergence associated with the standard
    PSO, a CLPSO was proposed [22]. In CLPSO, instead of particles learning from its
    pbest and gbest for all dimensions, and for all generations, each element (dimension)
    of a particle can learn from any other particle''s pbest including its own pbest.
    The decision on whether a particle''s dimension should learn from it own pbest
    or other particles'' pbest depends on probability P c called learning probability.
    Each particle has its own P c . For every dimension of particle i a random number
    in the range [0, 1] is generated, if this random number is greater than P ci ,
    the particular dimension will learn from its own pbest otherwise it will learn
    from another particle''s pbest. To ensure that at least one of the dimension of
    each particle learn from another particle''s pbest, if all dimensions happen to
    learn from it own pbest, one dimension is pick at random and two particles are
    pick at random from the population, the selected dimension will learn from the
    corresponding dimension of the particle with the best fitness (pbest). In this
    study, P ci is given by (9) base on an empirical rule stated in [22]. V d i+1
    = w i â V d i + C 1 ârand 1 d i â(pbes t d i â X d i ) + C 2 ârand 2 d i â(gbes
    t d i â X d i ) v d i+1 = Ï 1 v t k + Ï 2 U( x t lbâf â x t i ) P ci =0.05+0.45
    e 10(iâ1) SSâ1 â1 ( e 10 â1) (7) (8) (9) View Source where SS is the swarm size
    (number of particles). SECTION V. Experiment and Simulation Data The datasets
    used in this study were obtained by capturing real world RF signals using universal
    software radio peripheral 1 (USRP 1) for a period of two months. The USRP are
    computer hosted software radios with one motherboard and interchangeable daughter
    board modules for various ranges of frequencies, these serve as the RF front end.
    Two daughter boards, SBX and Tuner 4937 DI5 3Ã7901, having a frequency ranges
    of 4MHz to 4.4GHz and 50 MHz to 860 MHz respectively, were used in this research.
    The daughterboard perform the function of down-conversion, filtering, analog to
    digital conversion (ADC) and other signal conditioning while the motherboard decimate
    the signal to a lower sampling rate that can easily be transmitted to the host
    computer through a high-speed USB cable where the signal is processed by software.
    For TV channels with channels bandwidth of 5MHz, we divided the channels into
    subchannels each consisting of 500 KHz bandwidth. To ensure that no spectral information
    was lost, we used a sample frequency of 1MHz and obtained 1024 samples for each
    sample time. For GSM 900 and FM band with a bandwidth of 200 KHz, we used 1MHz
    sample frequency and 512 samples for each sample time. The power was obtained
    using both the time and frequency domain data. For the frequency domain, after
    passing the signal through the channel filter, the signal was windowed using a
    hamming window in order to reduce spectral leakage. The stream of the data was
    converted to a vector and decimated. This is then converted to the frequency domain
    and the magnitudes of the bins were passed to a probe sink. The choice of probe
    sink is essential because it can only hold the current data and does not increase
    thereby preventing stack overflow or a segmentation fault. This allows Python
    to grab the data at run time for further analysis. The interval of time between
    consecutive sample data was selected at a random value between 5 seconds and 30
    seconds. The choice of this range is based on the assumption that for any TV programme,
    FM broadcast or GSM call will last for not less than 5 to 30 seconds. In order
    to capture all possible trends, the time between consecutive sample data is selected
    at random within the given range instead of using regular intervals. For the VHF
    and FM band we captured RF signals from 54MHz to 110MHz and 470 to 670MHz for
    the VHF TV bands. For the GSM band, 62 down-link channels (935MHz to 953.3MHz)
    and 62 uplink channels (890MHz to 908.3MHz) were captured. The real world RF data
    was divided into three subsets, randomly selected with 60% used for training the
    ANN, 20% for validation and 20% for testing the trained ANN model. The training
    or estimation data were the only known data sources used in training the ANN.
    The test data set was unknown to the network i.e. they are not used in training
    the network but are used in testing the trained ANN as a measure of the generalization
    performance of the ANN model. The ANN design, optimization and the simulation
    were done in Matlab while the capturing of the data and the signal processing
    were implemented using gnu-radio which is a combination of Python and C++ . SECTION
    VI. Results To minimize the MSE of the ANN when tested with the test data, the
    above listed algorithms were run for 30 independent runs. each run has been continued
    with 30000 fitness evaluations. A population of 30 individuals was maintained
    for 1000 generations. After a manual tuning of the parameters, the following parameters
    are used in this study: DE/rand/1/bin, DE/rand/1/exp, DE/best/1/hin, DE/hest/1/exp,
    DE/hest/2/hin, DE/hest/2/exp, DE/rand-to-best l1/hin and DE/rand-to-best/1/exp
    has been run with F=0.1 and CR=0.2 CLPSO and PSO have been run with C 1  = 1 C
    2 =0.8,  V max =0.25â(MaxWâMinW) V min =â V max ,  W max =1, W min =1MaxW BPA
    has been run with Epoch = 1200learningrate=0.01 mumentum=0.008 the other specifications
    are shown in Table I. Table I. ANN models specification Table II shows the numerical
    results in terms of the MSE obtained using the test data (data not known by the
    ANN nor used in training the ANN). The final results of each algorithm was obtained
    by taken the average of the MSE (AMSE) for the 30 independent runs and their corresponding
    standard deviation (STD). From the results, DE/best/1/bin outperform all the other
    algorithms, hence it is used as the reference for the Wilcoxon test [23]. A â+â
    indicate that DE/best/1/bin outperform the other algorithm while â-â mean that
    the other algorithm outperform the reference. When the Wilcoxon test was perform
    by changing the reference algorithm, the second best algorithm for this problem
    is DE/RAND/1/bin follow by inertia PSO. Statistically inertia PSO is the third
    but the best model with the least MSE of 0.0272 was obtained from the combination
    of inertia PSO and BPA. To validate the fact that the combination of these population
    based variants of optimization algorithms with the famous BPA to evolves the weights
    and biases of ANN will produce a more accurate, robust and generalized model than
    using only BPA; we use the same topology but train with only BPA at constant learning
    rate of 0.01 and another one with varying learning rate starting from 0.8 and
    keep on changing with change in MSE using inbuilt Matlab training function traingda.
    For both models trained with only BPA, each was run 30 times, each run was constrain
    within a maximum of 1200 epoch and 6 validation fails, the average results is
    as shown in Table II. For the hybridized training i.e combining DE or PSO with
    BPA, the DE or PSO were run for 1000 generations and the final best solution was
    used to reinitialized the ANN weights and further train using BPA constrained
    within just 200 epoch and 6 validation fails. In all cases, the hybridize training
    outperform the training with only BPA. Fig 4, 5 and 6 shows the prediction graphs
    of some selected channels using test data. This results depict a good generalization
    of the three models. For this problem, the combination of global search capabilities
    of DE and swarm intelligence algorithms, and the local search advantages of BPA
    to evolve the weights of the ANN was found to yield an improved performance as
    compared to using only the famous BPA. Fig. 4. Feed forward dedicated model prediction
    Show All Table II. Test results with de/best/1/bin as reference SECTION VII. Conclusion
    This paper demonstrate that the accuracy and generalization of ANN can be improved
    by combining the global search advantages of population based optimization algorithms
    and the local search capability of single solution BPA. This study has unveiled
    the fact that we can combine population based solutions optimization algorithms
    with the famous single solution BPA to obtain a more robust ANN model than using
    only PBA. The prior knowledge of the RF power will enhance noisy channels avoidance
    not just in cognitive radio network but in any wireless communication thus delivering
    optimum QoS at less radio resources. Fig. 5. Cascaded feed forward, parallel output
    model prediction Show All Fig. 6. Multiple channels, single output model prediction
    Show All ACKNOWLEDGMENT This work is partly supported by Petroleum Technology
    Development Fun (PTDF) Scholarship, Nigeria and De Montfort University, United
    Kingdom. Authors Figures References Citations Keywords Metrics More Like This
    Predictive Maintenance of Air Booster Compressor (ABC) Motor Failure using Artificial
    Neural Network trained by Particle Swarm Optimization 2019 IEEE Student Conference
    on Research and Development (SCOReD) Published: 2019 Prediction and Visualization
    of Electricity Consumption in the Philippines Using Artificial Neural Networks,
    Particle Swarm Optimization, and Autoregressive Integrated Moving Avera... 2018
    3rd International Conference on Computer and Communication Systems (ICCCS) Published:
    2018 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. Â© Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2014
  relevance_score1: 0
  relevance_score2: 0
  title: 'Optimized Neural Network using differential evolutionary and swarm intelligence
    optimization algorithms for RF power prediction in cognitive radio network: A
    comparative study'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
