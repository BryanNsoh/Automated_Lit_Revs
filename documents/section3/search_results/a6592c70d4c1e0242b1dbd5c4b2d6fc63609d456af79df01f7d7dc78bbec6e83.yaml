- analysis: '>'
  authors:
  - Pereira R.H.
  citation_count: '0'
  description: The FIWARE and related projects aim to provide an open, sustainable
    ecosystem based on public standards and royalty-free that accelerates the development
    of Smart Solutions. The broker (Orion, Scorpio and Stellio) and additional components,
    named Generic Enablers (GE), provide means for collecting IoT data and feeding
    a data layer. The NGSI standard has a structural role in terms of interoperability,
    thus promoting the development of new GEs. However, this standard is not being
    adopted in analytic tools. In general, these tools connect to the IoT backend
    databases, which poses problems regarding data access control management and requires
    specialised IT support. Thus, it is not well suited for enterprise scenarios like,
    for instance, smart agriculture or smart industry, in which self-service tools,
    such as Power BI, Tableau and Qlik, are frequently used. We propose a lightweight
    connector for data analytic tools and IoT ecosystems based on NGSI-v2/NGSI-LD/NGSI-TSDB.
    The proposed system provides web services based on JSON and CSV formats that those
    tools use without applying complex transformations in the data. Thus, non-technical
    business users can consume IoT data on demand and use all the analytical capabilities
    of these tools. We tested the system in an educational scenario where dashboards
    and analytics processes were developed with minimal effort. The system has implemented
    a mechanism for access control management at the service/tenant level and several
    querying features. The system is now being implemented in a real public service
    scenario. In future versions, we intend to improve the system in terms of performance,
    security and add more query features.
  doi: 10.1016/j.iot.2024.101125
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. FIWARE ecosystem 3. Related work
    4. Methodology 5. Proposed system 6. Evaluation and results discussion 7. Conclusions
    CRediT authorship contribution statement Declaration of competing interest Acknowledgements
    Appendix A Data availability References Show full outline Figures (15) Show 9
    more figures Tables (3) Table 1 Table A.1 Table A.2 Internet of Things Volume
    25, April 2024, 101125 Lightweight data bridge for connecting self-service end-user
    analytic tools to NGSI-based IoT systems✰ Author links open overlay panel Rui
    Humberto Pereira Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.iot.2024.101125
    Get rights and content Under a Creative Commons license open access Abstract The
    FIWARE and related projects aim to provide an open, sustainable ecosystem based
    on public standards and royalty-free that accelerates the development of Smart
    Solutions. The broker (Orion, Scorpio and Stellio) and additional components,
    named Generic Enablers (GE), provide means for collecting IoT data and feeding
    a data layer. The NGSI standard has a structural role in terms of interoperability,
    thus promoting the development of new GEs. However, this standard is not being
    adopted in analytic tools. In general, these tools connect to the IoT backend
    databases, which poses problems regarding data access control management and requires
    specialised IT support. Thus, it is not well suited for enterprise scenarios like,
    for instance, smart agriculture or smart industry, in which self-service tools,
    such as Power BI, Tableau and Qlik, are frequently used. We propose a lightweight
    connector for data analytic tools and IoT ecosystems based on NGSI-v2/NGSI-LD/NGSI-TSDB.
    The proposed system provides web services based on JSON and CSV formats that those
    tools use without applying complex transformations in the data. Thus, non-technical
    business users can consume IoT data on demand and use all the analytical capabilities
    of these tools. We tested the system in an educational scenario where dashboards
    and analytics processes were developed with minimal effort. The system has implemented
    a mechanism for access control management at the service/tenant level and several
    querying features. The system is now being implemented in a real public service
    scenario. In future versions, we intend to improve the system in terms of performance,
    security and add more query features. Previous article in issue Next article in
    issue Keywords FIWAREInternet of ThingsNGSINGSI-LDSelf-Service Analytics Tools
    1. Introduction The things that we use are generating more data than ever before.
    However, this vast amount of data is noisy, inconsistent and has variable rate
    flows, as well as other characteristics commonly named 5Vs [1]. Thus, in an Internet-of-Things
    (IoT) ecosystem, first, the data is collected, and then it must be cleaned and
    organised before being used and integrated with other sources of data, enabling
    the so-called Smart Solutions. However, IoT device manufacturers tend to apply
    their proprietary data models, APIs and platforms in their portfolio of products
    and systems, as well as IoT data also tend to be organised in silos, making it
    difficult to reuse it in interoperable smart solutions. In many cases, their devices
    are dependent on solutions based on the software as a service (SaaS) model, thus
    causing some restrictions on the type of device due to hardware compatibilities,
    as well other limitations such as access control management, potential software
    and hardware vulnerabilities, periodic payment of licenses and limited access
    to sensor data for analysis [2]. To address these problems, the European Commission
    has funded several projects (e.g., FIWARE, FI-Core, FI-Next, SmartSDK) either
    for developing and enhancing the FIWARE,1 a Future Internet (FI) platform, as
    well as using it in pilots, such as City Platform as a Service - CPaaS.io2 [3].
    The goal of these initiatives is the creation of an open, sustainable ecosystem
    around public, royalty-free and implementation-driven software platform standards,
    easing the development of smart solutions and supporting organisations in their
    transition into smart organisations, thus enabling the development of solutions
    free of that lock-in vendor strategy and benefitting from data interoperability.
    One of the notable aspects of the FIWARE ecosystem is its API based on the Next
    Generation Service Interfaces (NGSI) standard, which evolved from a set of specifications
    [4] originally issued by the Open Mobile Alliance™ (http://www.openmobilealliance.org).
    Although those NGSI-based systems, and others, enable large volumes of IoT data
    to be generated and used in business processes in several use cases of data analytics,
    this is not always a simple task. According to Plazas et al. [5], traditional
    data-driven business intelligence might not be enough to compete in the context
    of Industry 4.0 since the collection and analysis of data from the IoT requires
    a more responsive approach. In [6], is presented an industrial case study in which
    are identified two limitations in the data analytic processes: (1) Automation
    - the processes are very dependent on the manual intervention based on MS Excel
    files; and (2) Scalability – due to lack of integration and support for large
    volumes of data when using MS Excel. Regarding the first limitation, the authors
    observed that the lack of automation leads to a considerable manual effort for
    end-users to build, adapt and apply analytic processes over IoT data, thus being
    very time-consuming for them. Self-service business intelligence and analytics
    tools, such as Power BI, Tableau and Qlik, empower non-technical users to create
    reports and analyses without depending on IT teams [7] and significant cost savings
    [8], thus addressing some of the mentioned problems of lack of automation and
    work productivity. We notice that, according to Gartner, some of those analytic
    tools (Power BI, Tableau and Qlik) are market leaders, providing collaborative,
    self-service and user-friendly visual analytic capabilities, enabling non-technical
    users to explore data and get insights by developing low-code or no-code, automation
    workflows and applications [9]. As found in the literature, the support for self-service
    data analytic tools is available through several FIWARE Generic Enablers. However,
    these solutions are designed for big data environments, are complex, and generally
    store context data in backend databases or include their own visual data analytic
    features. When using self-service visual analytic tools, final users must connect
    to these backend databases, which may pose problems of access control management
    and other security issues because, in general, due to security policies, the set
    of users/systems that can access backend database systems is very restricted.
    Furthermore, the specific data models of these FIWARE components may also be too
    complex to be used by non-expert users. Thus, with the use of this type of tool
    to explore IoT data, the aforementioned limitations (in terms of responsive approaches
    [5] and automation [6]) are just partially mitigated because despite how easy
    it is to use these visual analytic tools to build analytic dashboards, the access
    to IoT data could continue to be a major problem. The present research work began
    with the formulation of the following research question: RQ – Which is the best
    approach for enabling end-users who are not IT and IoT experts to develop data
    analytic processes in NGSI-based ecosystems using self-service visual data analytic
    tools? In this research work, a Design Science Research Methodology (DSRM) [10,11]
    was used. In order to address those issues and answer our research question RQ,
    we propose a middleware that provides a table-oriented structure view of IoT entities’
    data in the current state and their history over time. The proposed system operates
    in any IoT ecosystem using the dialects NGSI-V2 and NGSI-TSDB, or NGSI-LD. With
    the present work, we expect to contribute to demonstrating the need for such type
    of component in the FIWARE catalogue, as well as making it freely available to
    the community.3 In the following section, a short overview of the FIWARE ecosystem
    is presented. In Section 3, the existing solutions based on FIWARE components
    (Generic Enablers) that provide means for developing analytic processes are discussed.
    Section 4 presents the methodology used in the present work. In Section 5, the
    proposed system is presented in terms of architecture, features and interfacing.
    Next, in Section 6, the system is evaluated based on an educational use case,
    in which students develop Power BI dashboards, RapidMiner analytic processes and
    PySpark-based programmes directedly connected to the IoT ecosystem using the proposed
    prototype. The paper is finished with the presentation of conclusions and future
    work proposals. 2. FIWARE ecosystem 2.1. Context brokers In a FIWARE ecosystem,
    the context broker plays a major role in allowing the management of the entire
    lifecycle of context information, including updates, queries, registrations and
    subscriptions. It provides a REST API based on the Next Generation Service Interfaces
    (NGSI) standards [12,13], with two possible communication models: (1) Subscription/notification
    [14] and (2) Forwarding. Depending on the version of the NGSI supported by the
    broker API, some operations may not be available, as well as a broker may not
    implement the entire NGSI specification in the used version. A context broker
    should be designed to provide means to produce, gather, publish and consume context
    data at a large scale and exploit it, thus enabling the reuse of IoT data over
    applications and platforms, aiming to transform solutions into truly smart applications
    [15]. In the FIWARE catalogue [15], one can find the context brokers Orion [16,17],
    Scorpio [18] and Stellio [19]. Currently, the Orion has two implementations: (1)
    Orion [16], based on NGSI-V2 [13], and (2) Orion Context Broker with Linked Data
    Extensions – Orion LD [17], based on NGSI-LD [12,20]. Both Scorpio and Stellio
    context brokers are based on NGSI-LD. The NGSI-V2 is in maintenance mode, while
    the NGSI-LD specification is regularly updated and published by the European Telecommunications
    Standardization Institute (ETSI)4. At the present date, the latest specification
    is in version 1.7.1 [20], which was published in June 2023. Despite Orion LD,
    Scorpio and Stellio having distinct levels of implementation of the NGSI-LD specification,
    at the present date, they are aligned with version 1.6.1. However, it is important
    to note that Orion LD does not implement the NGSI-LD-based temporal API. As part
    of FIWARE, several components of a catalogue, also named Generic Enablers, are
    available for dealing with three main aspects: (1) interfacing with the IoT devices,
    robots and third-party systems; (2) context Data/API management, publication,
    and monetisation; and (3) processing, analysis and visualisation of context information
    [15]. Since the communication model is based on the NGSI standard, this approach
    enables and encourages the growth of the catalogue in terms of the number of Generic
    Enablers developed by a community of members and partners, as well as its evolution
    in terms of the development of portable and interoperable smart solutions in several
    Smart* domains, such as Smart Cities, Smart Industry, Smart Energy and Smart Water.
    Thus, the context broker and generic enablers can be assembled together and combined
    with other third-party platform components to build new applications, easing the
    development of those smart solutions. In Section 3, we will discuss some of these
    components that are related to our work. Context data is represented through values
    assigned to attributes that characterise the entities which are relevant to applications.
    An entity is a Digital Twin which digitally represents a real-world physical asset
    (e.g., a bus in a city, a milling machine in a factory) or a concept (e.g., a
    weather forecast, a product order). In FIWARE with linked data extensions, each
    Digital Twin: (1) is universally identified with a URI (Universal Resource Identifier);
    (2) belongs to a well-known type (e.g., the Bus type or the Room type) also universally
    identified by a URI and (3) is characterised by several attributes, which in turn
    are classified as Properties, holding data (e.g., the “current speed” of a Bus,
    or “max temperature” in a Room), and Relationships [21]. The data of these entities
    can be obtained from several types of sources, such as existing systems and users,
    through mobile apps or sensor networks. The context broker mediates the interactions
    applied to data entities in contexts, making them available through REST APIs.
    These interactions can be CRUD operations over context data, including geolocation
    queries, subscription of changes on data or performing the registration of external
    entities following an approach very similar to a proxy mechanism. To persist data
    about the entities and other functional aspects, the context broker uses a database
    such as MongoDB,5 PostgreSQL6 or TimescaleDB7 (in the case of Orion/Orion LD,
    Scorpio and Stellio). Additionally, both Scorpio and Stellio also use Kafka8 to
    decouple communication inside the broker. Fig. 6 presents a simplified overview
    of the architecture of these ecosystems. Regarding security, the Orion context
    broker does not provide native security and authentication mechanisms, requiring
    additional components. As far as we know, this is also the case with Scorpio,
    where these issues are still on the roadmap.9 In the case of Stellio, an API for
    authentication is available. 2.2. NGSI and context information management (CIM)
    In NGSI-V2, the entities are represented in JSON. On the other hand, the NGSI-LD
    standard is an extended subset of JSON-LD [22] to define entities and their relationships.
    Thus, in terms of data modelling, the NGSI-V2 is simpler than NGSI-LD because
    the latter follows the layered approach with three levels of data abstraction,
    following the Context Information Management (CIM) model [20]. The current information
    model of CIM is based on RDF [23] standards to capture high-level relations between
    entities and properties of entities. The model''s objects are RDF subclasses following
    the structure presented in Fig. 1 (e.g., NGSI-LD Entity, Relationship, and Property
    are subclasses of rdfs:Resource [24]). Download : Download high-res image (528KB)
    Download : Download full-size image Fig. 1. Cross-domain NGSI-LD Information Model
    (source: [12]). As mentioned, the CIM model defines three levels of data abstraction.
    At the first level, the NGSI-LD Core Meta Model represents the real world''s entities
    (things and concepts). The attributes can be of two types: Properties and Relationships
    (in NGSI-V2, the attributes have values and associated metadata). The entities
    are represented as objects using JSON-LD, thus contextualising data and respecting
    compliance with other linked data. Each entity should specify a @context statement
    for binding the data representation to a vocabulary supporting the upper abstraction
    data layers. These vocabularies linked to entity instances are published. Fig.
    2, on the right, presents an example of this bind. Download : Download high-res
    image (396KB) Download : Download full-size image Fig. 2. TemperatureSensor entity
    in NGSI-V2 and NGSI-LD. At the second level of data abstraction, cross-domain
    ontology provides commonly used constructs, such as time, geographical location
    and language, which generally apply to many domains. The top layer extends the
    previous one by defining domain-specific ontologies in any domain such as industry,
    building, cities or agriculture. In short, the cross-domain layer aims to describe
    common concepts, situations or constraints to avoid redefining them separately
    (and probably in a different way) in each domain-specific ontology. In Fig. 1,
    these common concepts in ontology are illustrated. For instance, in the case of
    geo localisation, the model aims to distinguish between (a) the location of the
    entity, (b) its observation space and (c) operation space. For example, a camera
    located in a geographical point can observe a certain space, distinct from its
    localisation. Another example is a crane that has a location but can operate in
    a certain operation space. We should notice that this layer can also be represented
    in NGSI-V2 by means of a metadata dictionary, but it does not ensure the interoperability
    of these metadata, as we will discuss next. Fig. 2 presents an example of an entity
    in both formats, NGSI-V2 and NGSI-LD, which helps to clarify these differences.
    Comparing the two data structures in the example, one can find three main differences
    between them: (1) In NGSI-LD, the identifier (id) of the entity contains the prefix
    “urn:ngsi-ld”; (2) in NGSI-V2, each attribute contains a dictionary of metadata
    properties, in case of “temperature” the property unitCode, while in NGSI-LD this
    metadata is standardised, in our example the unitCode for expressing units and
    observedAt for expressing timestamps; and (3) in NGSI-LD, there is an additional
    element @context. This element references the NGSI-LD Meta-Model, providing an
    unambiguous definition and allowing the systems to interpret the attributes with
    more clarity and depth, avoiding needing a metadata dictionary of properties,
    as in the case of NGSI-V2. For the given example, the domain-specific specification
    of the temperature attribute (available at https://smartdatamodels.org/dataModel.Environment/temperature)
    defines it as a property of type number. We should note that there are other differences
    between the standards, such as the NGSI-V2 geo:json type, which has been renamed
    to GeoProperty. In [25], one can find more information about this issue. It is
    desirable that these ontologies should be globally accepted in order to guarantee
    the interoperability of applications. The FIWARE Smart Data Models initiative,10
    launched by the FIWARE Foundation, provides a library of data models based on
    JSON/JSON-LD. Data models published under the initiative are compatible with schema.org
    and comply with other existing de-facto sectoral standards when they exist [21].
    The Smart Data Models initiative aims to define a harmonised representation of
    formats and semantics that will be used by applications both to consume and publish
    data. Such interoperable data structures enable Data Spaces in which data may
    be shared across applications as-is on those Smart* domains referred to above
    [21,26]. In NGSI-LD, a temporal API that enables the management of entities’ historical
    data was introduced. Using this API, users can apply several types of temporal
    criteria to obtain time series regarding the entities’ attributes in passed states.
    For the case of NGSI-V2-based brokers, such as Orion, and those that do not implement
    the NGSI-LD-based temporal API, such as Orion LD, additional mechanisms (based
    on NGSI-TSDB) are required to manage the entities’ historical data. The following
    section will discuss how this issue is handled in the FIWARE ecosystem. 3. Related
    work In order to find related literature that presents approaches for implementing
    data analytic processes in NGSI-based ecosystems, a systematic literature review
    (SLR) methodology was used. At the Identification step, the following search string
    was applied to electronic scientific databases suggested in [27] and others also
    available in the search engine (http://www.b-on.pt/) used by the author. The result
    of this search was updated on January 24, 2024. After removing all duplicates,
    twelve papers were selected. Due to the low number of papers, no additional inclusion
    and exclusion criteria were imposed. In the Screening step, all the papers’ abstracts
    were read and analysed by the author in order to verify their relevance to this
    study. All papers that propose an approach for supporting data analytics over
    IoT data were considered eligible. On the other hand, the papers that only discuss
    the capabilities of FIWARE components were not eligible. Thus, only eleven papers
    were selected for the present research work. The founded literature suggests that
    there are two main categories of approaches for implementing data analytic processes
    supported on NGSI-based ecosystems. The first category, [28], [29], [30], [31],
    [32] present systems that implement their own analytic modules, which interact
    directly with the context broker for obtaining data; in these cases, the Orion
    context broker and NGSI-LD-based context brokers in the latter case. These studies
    were not included in the present work because they address a distinct problem
    from the one stated in RQ. On the other hand, the proposals in the second category
    of papers use FIWARE components to implement data streams and data sinks, which
    feed backend databases or build static replicas of the IoT data. This data is
    then used by the analytic modules. These six papers, [33], [34], [35], [36], [37],
    [38], are discussed next. In [34], an IoT cloud-based solution for controlling
    power quality in energy management systems is presented. In the proposed system,
    IoT data is managed by the Orion context broker and Quantumleap [39] for historical
    data. At the data layer, the databases MongoDB and CreateDB handle the persistence
    of data. Also, in the energetic sector, Haghgoo et al. [37] present a cloud-based
    platform for analysing power distribution. This approach is similar to the previous
    one, using the same FIWARE components. In [38], a third use case in the energetic
    sector, the authors present a system based on Orion context broker and STH Comet
    [40], another FIWARE component for supporting data persistence. The collected
    data is then used by analytic modules. Munoz-Arcentales et al. [36] propose an
    open-source reference implementation for providing context-aware data analytics
    capabilities to IoT-based smart environments. The authors’ proposal is based on
    the Orion LD context broker, Draco [41], Cosmos [42] and other FIWARE components
    for data visualisation and applications to develop operational dashboards which
    are highly customisable by end-users. Frangella et al. [35] propose a FIWARE-based
    IoT architecture for supporting real-time data acquisition and enabling the creation
    of a digital twin. The proposed system is based on FIWARE Cygnus [43], a connector
    between Orion Context Broker and other external systems, such as databases. In
    the authors’ proposal, a MySQL database supports the data used in the analytic
    processes. In [33], the data analytics are supported by a distributed file system
    that saves information among several machines. The authors have employed the Hadoop
    Distributed File System (HDFS) for this purpose. Another FIWARE component, the
    Cygnus [43], is in charge of taking data records from the context broker and saving
    them in Hadoop. Then, a data analytics module uses the data stored in the Hadoop.
    We observed that in these related works, the analytic modules are based on FIWARE
    components to collect and store IoT data in backend databases or data repositories.
    This data is then used by analytic modules based on other components, such as
    Apache Spark, Grafana or Wirecloud. We claim that, in the same way, these databases
    can be consumed by end-users using self-service visual data analytic tools for
    implementing the data analytics processes as they require. Therefore, in order
    to systematise our discussion, we will continue to focus on these FIWARE components
    that provide means for supporting any type of analytic module. Depending on the
    NGSI version, the context broker manages the historical data on distinct approaches.
    Thus, we start the discussion from the perspective of the historical data entity
    management in order to store it in backend databases or export it as datasets.
    Next, the available means for end-users to extract IoT data are discussed. This
    section is finished by discussing the limitations found in these related works.
    3.1. Management of historical data of entities The NGSI-V2-based context brokers,
    such as Orion, provide means for managing data entities at the current state of
    their twins. In order to preserve and manage the history of the spatial-temporal
    context data, the FIWARE catalogue has available components that can be added
    to solutions, providing them with both views: the current state of context data
    and the historical state in the form of time series [15]. On the other hand, the
    NGSI-LD standard includes the specification of a temporal API, thus eliminating
    the need for additional components for managing historical data relating to the
    past states of entities. However, as mentioned above, the NGSI-LD-based context
    broker Orion LD does not implement this temporal API. The Cygnus Generic Enabler
    [43] provides the means for creating a historical view of the context by injecting
    streams of data into multiple data sinks, including some popular databases like
    PostgreSQL, MySQL, MongoDB or AWS DynamoDB, as well as big data platforms such
    as Hadoop, Storm, Spark or Flink [15]. Internally, Cygnus is based on Apache Flume11.
    This is a data flow system based on the concepts of flow-based programming that
    supports powerful and scalable directed graphs of data routing, transformation,
    and system mediation logic, enabling the automation of data flows between systems.
    Draco [41] provides the means for persisting historical context data for big data
    analysis. It is developed on top of Apache NiFi12, which supports powerful and
    scalable directed graphs of data routing, transformation, and system mediation
    logic. One of the several possible scenarios consists of using the NGSIToMySQL
    processor in order to persist data into a MySQL database. In short, Draco subscribes
    to NGSI events that are attended by a flow implemented using components of types
    connector, controller and processor, such as NGSIToMySQL, NGSIToPostgreSQL or
    NGSIToMongo. This tool also provides a GUI that helps users to build the flow
    processes. The Cosmos Generic Enabler is a set of tools that help achieve streaming
    and batch processing tasks over context data. At the moment, users can implement
    processes based on Spark and Flink. The data can be collected from the context
    broker by means of the subscription of changes, as NGSI events, and as a data
    source. This approach enables historical context data to be handled as needed
    in analytic tools. Additionally, it provides expert users with all the power of
    these platforms (Spark and Flink) in order to generate datasets that can be used
    by non-technical users. The FIWARE PySpark Connector proposes an approach for
    data bridging between the context broker and PySpark. This connector includes
    a parser function that enables the creation of NGSIv2 and NGSI-LD entities ready
    to use in a custom PySpark algorithm. However, the support for NGSI-LD temporal
    API is still in the long-term roadmap. Thus, the system must subscribe to changes
    in the context broker and store data in a repository or database to keep the several
    states of each entity. Like in the previous cases, datasets can be produced to
    be consumed by end-users. Orion-LD implements the Temporal Representation of Entities
    (TRoE) in an experimental state [17], taking care of populating the TRoE databases.
    Despite temporal operations being part of NGSI-LD API specification [44], when
    invoking a temporal query, one receives the message: “Not Implemented in Orion-LD,
    please use Mintaka for this operation”. The Mintaka13 component handles the temporal
    queries by implementing the NGSI-LD temporal retrieval API. It relies on the Orion-LD
    Context Broker and a TimescaleDB installation (including the Postgis extension)
    that Orion-LD populates. QuantumLeap [39] Generic Enabler is an alternative to
    STH Comet [40]. Both can store entity history as time series data. It allows the
    raw data to be queried and aggregates to be calculated. QuantumLeeap and STH Comet
    get the entity data via context broker subscription notifications. The QuantumLeap
    persist data into time-series databases, such as CrateDB and Timescale, but is
    prepared to support multiple types of backend. It provides a REST API service,
    named NGSI-TSDB [45], for storing, querying and retrieving NGSI-V2 and NGSI-LD
    (experimental support) spatial-temporal data. In contrast, STHComet does not support
    NGSI-V2/NGSI-LD, nor multiple database backends, being strongly tied to MongoDB.
    3.2. Data bridging As discussed in the previous section, both the current state
    and historical data of entities are stored in backend databases following a data
    model specific to the platform (e.g., QuantumLeap) or designed by an IoT expert.
    This data is then available to be used by self-service visual analytic tools.
    However, this approach may suffer from two limitations when end-users need to
    consume these data: (1) they become dependent on the data model, which may not
    include all entities and/or attributes, or it may be complex to this user profile;
    (2) another problem regards to security restrictions that may exist to connect
    to the backends databases. In general, these systems are not accessible to end-users,
    posing access control management problems. In the FIWARE catalogue, we find five
    combinations of components that allow the consumption of the current state and
    historical data of entities using NGSI-based interfaces to connect the analytic
    tools. Table 1 presents these combinations: Table 1. Combinations of generic enablers.
    Broker / NGSI version Historical data Comments Orion / NGSI-V2 QuantumLeap / NGSI-TSDB
    QuantumLeap has full support for Orion Orion LD / NGSI-LD QuantumLeap / NGSI-TSDB
    QuantumLeap is experimental in Orion LD Orion LD / NGSI-LD Mintaka / NGSI-LD Non-stable
    specifications and implementations Scorpio / NGSI-LD The broker supports temporal
    NGSI-LD API Stellio / NGSI-LD The broker supports temporal NGSI-LD API NGSI-LD
    specification version 1.7.1 was published in June 2023. Using one of these combinations
    of RESTful-based APIs, one can consume context data by connecting a self-service
    analytic tool capable of ingesting JSON, thus bypassing the security and data
    model issues referred to above. However, there is an object-relational impedance
    mismatch between the JSON structures provided by these APIs and the table-oriented
    structures in general required by analytics tools. Thus, the user must manually
    define an ETL process to transform complex JSON (NGSI) into one or more tables.
    This scenario is not feasible, even for experienced users. Next, this problem
    is discussed in detail. The NGSI V2/LD APIs provide an optional parameter for
    defining their output JSON format variant as normalised, key/value (simplified),
    or, in the case of NGSI-LD, as concise format [46,47]. In short, these format
    variations differ in terms of metadata details. In the simplified format, context
    data properties are provided in a plain and simple structure very similar to tabular,
    enabling a simple ETL process for data ingestion. Fig. 3 depicts an example of
    a Person entity composed of five properties and one relationship (spouse) to another
    Person. In this simple format, only the values of attributes (property or relationship)
    are presented, but the metadata is not available. Download : Download high-res
    image (148KB) Download : Download full-size image Fig. 3. Simplified format (source:
    [46]). On the other hand, the normalised format (presented in Fig. 4) provides
    additional metadata such as type, unitCode, observedAt, createdAt and others,
    which enrich the data to be consumed. However, in this case, the ETL design process
    is not trivial and is very time-consuming. Download : Download high-res image
    (227KB) Download : Download full-size image Fig. 4. Normalized format (source:
    [46]). This impedance problem is much more problematic in the case of NGSI-TSDB
    and temporal NGSI-LD. In these APIs, time series are represented in the scope
    of its context entity JSON object as arrays of timestamps and values for each
    attribute. Fig. 5 depicts a small part of NGSI-TSDB API specification, in which
    one can observe pairs of time stamps and values of an attribute following the
    same order in separate arrays. The temporal NGSI-LD API follows a similar approach
    using the EntityTemporalList and EntityTemporal data structures [20]. Thus, it
    is very complex, if not impossible, for final users to implement an analytic process
    supported by Power BI or similar tools. Indeed, it becomes particularly problematic
    in the case of different numbers of samples from one entity or attribute to another.
    Download : Download high-res image (189KB) Download : Download full-size image
    Fig. 5. Part of NGSI-TSDB API specification [45] that defines the IndexedValues
    object. 3.3. Current limitations in NGSI-based ecosystems for data analytics As
    far as we know, the main approaches for implementing data analytics in NGSI-based
    ecosystems are based on FIWARE components that persist data in backend databases
    or other types of storage, such as HDFS. This data is then used by the analytic
    modules to produce data visualisations and all types of analysis, as well as it
    can also be consumed by self-service visual data analytic tools to produce outputs
    according to the users’ needs. We consider that the use of these self-service
    visual tools presents a significative advantage over those related works that
    provide pre-defined or customisable dashboards. Using these tools, end-users have
    the ability to develop any type of dashboard as much as they need. Of course,
    nothing prevents the two approaches from coexisting and even complementing each
    other. However, despite all the advantages of those self-service visual tools,
    easy and flexible access to data could still be a major challenge in such environments.
    We present two drawbacks: (1) When using these tools, end-users must connect to
    those backend databases, which may pose problems with access control management
    and other security issues because, in general, due to security policies, the set
    of users/systems that can access backend database systems is very restricted;
    (2) Another problem, regards to the high complexity for end-users. The specific
    data models of the FIWARE components in some cases are complex (e.g., Stellio
    or Scorpio) or do not follow the relational model (e.g., MongoDB in the case of
    Orion/Orion LD), thus making end-users dependent on IT and IoT experts. Therefore,
    in scenarios of local enterprise IoT-based solutions (e.g., Industrial and Agricultural),
    these components may not be well-suitable for analytical processes based on those
    self-service tools. 4. Methodology Considering the nature of the addressed problem
    and the research question RQ, the used methodology applies the Design Science
    Research (DSR) method [10] following the Hevner et al. guidelines [11]. This methodology
    used to define, implement, and validate the proposed system comprises the following
    activities: 4.1. Activity 1: problem identification and motivation The author
    of the present work intends to solve a practical problem of end-users (who are
    not IT or IoT experts) when developing analytics processes, such as IoT data visualisations.
    The context of this work is the FIWARE-based ecosystems or any others that provide
    NGSI-based mechanisms for interoperability. Thus, the research question RQ was
    formulated: Which is the best approach for enabling end-users who are not IT and
    IoT experts to develop data analytic processes in NGSI-based ecosystems using
    self-service visual data analytic tools? Answering this question by proposing
    a new FIWARE component, the limitations found in the related works can be overcome
    because this new system can help end-users extract IoT data and develop analytics
    processes, autonomously without relying on IT or IoT experts. 4.2. Activity 2:
    define the objectives for a solution As previously mentioned, the developed artefact
    should enable end-users to obtain IoT data from NGSI-based ecosystems on-demand
    and develop analytics processes without the help of IT or IoT experts. This objective
    encompasses the following requirements for the artefact to be developed: (1) A
    fast learning curve for using the proposed system; (2) simple mapping between
    IoT entities and extracted data; (3) a standard interface enabling the support
    for self-service visual analytics tool and (4) overcome the control access limitations
    of backend systems usually imposed by security policies. The present objectives
    are qualitative. At this stage, quantitative objectives, such as system performance
    indicators, are not considered. 4.3. Activity 3: design and development In this
    activity, the artefact is created. Section 5 discusses the developed prototype
    of a data bridge for connecting self-service end-user analytic tools to NGSI-based
    IoT systems. 4.4. Activity 4: demonstration In Section 6.1, a set of experiments
    and results are presented. We argue that these presented results demonstrate that
    the developed artefact addresses the stated problem in RQ. 4.5. Activity 5: evaluation
    This activity complements the previous one, observing and measuring how well the
    artefact supports a solution to the problem. This activity involves comparing
    the objectives of a solution to actual observed results from the use of the artefact
    in the demonstration. Thus, in Section 6.2, the results of the experiments presented
    in Section 6.1 are compared with the objectives formulated in Section 4.2, as
    well as its limitations are discussed in Section 6.3. 4.6. Activity 6. communication
    In this last activity, the problem and its importance, the artefact, its utility
    and novelty, the rigour of its design, and its effectiveness are communicated
    to researchers and other relevant audiences, such as practising professionals.
    5. Proposed system In this section, is presented a lightweight data bridge that
    accelerates the ETL process creation in table-oriented self-service data analytic
    tools, providing a simple and uniform API that non-technical end-users can use
    to consume IoT data on-demand and build their analytic no-code processes in Power
    BI, Tableau, Qlik or any other analytic tool capable of ingest table-oriented
    data in JSON or CSV. Using the proposed prototype, end-users can select their
    own datasets according to their needs, applying temporal, geolocation and other
    selection criteria for filtering context data stored in NGSI-based platforms in
    the combinations presented in Table 1. They can optimise data loading and transformation
    processes by applying differential loading approaches in terms of temporal and
    geolocation. These filter capabilities are particularly important in big data
    use cases due to large volumes of context data and increments of data produced
    in real-time by IoT devices. The prototype supports JSON and CSV output formats
    in a way that does not require complex and time-consuming data transformations.
    Without coding, data is available for users as tables in a single step. Empowered
    by the self-service data analytic capabilities of visual tools, users can potentially
    perform as many kinds of analyses as they need. 5.1. System architecture The proposed
    prototype is implemented on NodeJS using several libraries, such as Express,14
    for implementing our REST API, a modified version of NGSI-JS15 for handling NGSI-based
    connection with context broker, Turf16 for geolocation and json2csv17 for converting
    JSON in CSV. As far as we know, there is no library for NGSI-TSDB support; thus,
    we developed all the necessary code from scratch. In Fig. 6, one can observe a
    global perspective of the entire system architecture, from data collection through
    sensors, which publish data in the MQTT broker [14], to the RESTful API endpoint
    used by the analytic tool (e.g., the Power BI). This figure does not include other
    applications that also consume the same context data through NGSI-based interoperability
    with context broker and QuantumLeap, as well as a Hadoop system used for storing
    static data (i.e., old data collected from sensors), because these additional
    systems are not relevant to the proposed approach. Download : Download high-res
    image (399KB) Download : Download full-size image Fig. 6. System architecture.
    This figure presents a generic scenario in which one or more brokers can be used.
    In our use case, we tested the prototype within an environment with four brokers,
    Orion, Orion LD, Scorpio and Stellio, each in a distinct tenant. In the case of
    Orion/Orion LD, a MongoDB database is used to store the entities that represent
    each Digital Twin in the real world in their last known state. The historical
    context data (collected by QuantumLeap by means of update subscriptions) is stored
    in the CrateDB database. On the other hand, the brokers that provide the temporal
    NGSI-LD API store both types of data, the current world state and historical data,
    in a single database: PostgreSQL and TimescaleDB, for Scorpio and Stellio, respectively.
    As one can observe in Fig. 6, the data bridge prototype mediates the interaction
    between the brokers and QuantumLeap on the left side and the analytic tool on
    the right. The context document (http://context/ngsi-context.jsonld), which contains
    the specification of the custom entities, is hosted in a web server depicted in
    Fig. 6. The required connection parameters, such as IP addresses, TCP ports, NGSI
    versions (of the brokers and QuantumLeap) and URLs of the context document, are
    defined in a configuration file presented in Fig. 11- System configuration file.
    In Section 5.4, we discuss these settings in some detail. 5.2. Interface for analytic
    tools The proposed system provides a uniform API for data bridging, enabling users
    to be unaware of the context broker they use. In Appendix A, the API and its parameters
    (Table A.1) for spatial-temporal querying and other options are presented. This
    API reuses and adapts parameters of NGSI-V2, NGSI-LD and NGSI-TSDB APIs in order
    to get a uniform interface and extends these with three additional parameters:
    format, extended and join. The format parameter allows the user to choose the
    output format as JSON or CSV. The extended parameter is Boolean; If set to true,
    additional columns containing the context broker''s metadata are added. By default,
    the objects are flattened as multiple columns, each per object''s attribute, to
    produce a table-oriented data structure. This data transformation is presented
    in the following example of a Building entity modelled according to the diagram
    in Fig. 7. The context broker provides the NGSI-LD structure presented in Fig.
    8 on the left side. Then, this data is consumed by the proposed system, which
    produces the entity''s columns at the output as the table-oriented data structure
    presented in Fig. 8 on the right for the possible data structures: normal and
    extended. Download : Download high-res image (205KB) Download : Download full-size
    image Fig. 7. Entities within the example Farm Management Information System (FMIS)
    (Extracted from [49]). Download : Download high-res image (444KB) Download : Download
    full-size image Fig. 8. Data transformations. In the extended format, new columns
    for @context, the address_verified flag, location latitude and longitude are added.
    In the case of entity TemperatureSensor, the temperature attribute may get new
    ones, such as temperature_unitCode filled with the value “Celsius”; temperature_type
    filled with “Float” and temperature_observedAt. Additionally, inspired in the
    QuantumLeap, for the location still, there is an additional column containing
    the geographic location centroid. Finally, this output can be represented as JSON
    or CSV structures according to the format parameter and then consumed by the analytic
    tool. Regarding error responses, the error message payload is a JSON object, including
    an error code and optional description. Appendix A - Table A.2 depicts the types
    of HTTP responses and payloads. The CRUD operations for context data modification,
    data aggregation per attributes (e.g., sum, average), or types of queries other
    than temporal and geolocation make no sense in our system. Notice that the proposed
    system is a data bridge to enable the connection of end-user self-service data
    analytic tools to the IoT ecosystem. Nevertheless, query operations have a major
    relevance. In the next section, the querying features are discussed. Download
    : Download high-res image (403KB) Download : Download full-size image Fig. 9.
    Join of two entities. Download : Download high-res image (210KB) Download : Download
    full-size image Fig. 10. Temporal query using a join of two entities. 5.3. Querying
    The self-service analytics tools provide visual, easy and powerful features of
    data filtering, aggregation and many other analytic operations available to users.
    The proposed system should provide a simple query syntax in order to be used by
    non-technical users. Thus, the proposed system is focused on providing four levels
    of data selection for extracting the datasets: (1) service/tenant, (2) entity
    level, (3) temporal and (4) geographic. Additionally, it enables join operations
    between two entities when a one-to-many relationship exists. In general, IoT data
    is produced in real-time and is handled by subscriptions of changes in data entities,
    as mentioned in Section 3.1. This requires that the analytic tool can handle these
    subscriptions, such as the case of the cloud-based version of Power BI integrated
    into Azure, which provides a REST endpoint for receiving data updates [48]. To
    address this limitation in the desktop analytic tools (that usually do not provide
    such API), users can use the proposed temporal and geographic filters to split
    the data into smaller chunks based on geographic areas and/or time intervals of
    old (static) and new data to optimise the ETL process execution in the desktop
    tool, thus, enabling dashboards to be updated on demand. Table inner joins are
    particularly useful in data models like the one in Fig. 7. The TemperatureSensor
    entity contains the temperature in a building but does not contain the location
    and other data about the building where the temperature was measured. In order
    to address this use case, the parameter join (see Table A.1) lets the user include
    the attributes of the related table, providing a view of the two tables, as in
    the example presented in Fig. 9. In this example, is presented a tuple with the
    current state of an instance of TemperatureSensor joined with the controlled asset
    (building). The query predicate selects all instances of the TemperatureSensor
    entity in the service/tenant “test_ld”. Because the extended parameter is set
    to true, all building attributes are also presented. Using the attrs parameter,
    users can select fewer columns to reduce the width of the dataset. Using the entityId
    path parameter or the idPattern parameter, users can reduce the height of the
    dataset to a smaller number of rows. Fig. 10 presents another example in which
    the parameter fromDate selects all temperature values of the entity urn:ngsi-ld:TemperatureSensor:001
    from May 18th to the present moment. Due to space limitations, a single instance
    (table row) is presented, as well as some columns are omitted. As we can observe,
    three new columns provide the data and time (in two formats, _timeIndex and _dateTime)
    and the temperature measure at that time. If extended and join options are disabled,
    then the dataset just contains the first four columns: _timeIndex, _dateTime,
    entityId and temperature. We should notice that in the extended version (this
    example), two values of the temperature are presented per row: one regarding the
    sample (May 18th) and another in the current state (May 26th). Additionally, in
    the case of a broker that supports NGSI-LD temporal API (e.g., Sttelio), the instanceId
    field provides a reference to the record that contains the temperature at the
    observed time. As previously mentioned, this query API was developed with simplicity
    as a design principle. It should enable users to select their datasets on-demand,
    only applying geographic and temporal criteria, as well as it should provide means
    for differential updates. All other complex analyses, such as filtering and data
    aggregation by attributes, should be addressed in the scope of the visual analytic
    tools. 5.4. System definitions In the current version of the prototype, the security
    can be enabled and handled in the scope of a FIWARE service/tenant, requiring
    an access key per user. These issues, and others, are defined in a configuration
    file with the structure presented in Fig. 11. For development and test purposes,
    the security can be turned off. If enabled, each user must use a key that grants
    him a daily limit of requests to one or more FIWARE services/tenants. Download
    : Download high-res image (511KB) Download : Download full-size image Fig. 11.
    System configuration file. Each FIWARE service/tenant requires connection parameters
    (e.g., IP and port) for a context broker (e.g., Orion LD or Scorpio) and optionally
    to QuantumLeap. In this example, four services/tenants are configured for each
    type of supported context broker. The first two context brokers share the same
    QuantumLeap in port 8668. Because Scorpio and Stellio support the temporal NGSI-LD
    API, the connection to QuantumLeap is unnecessary. All client accesses are logged
    into a log file according to the definition in these config settings. 5.5. Security
    – authentication and control access management Our approach, based on middleware,
    provides a uniform mechanism for authentication and control access management,
    enabling users to be unaware of each context broker they use. At present, these
    mechanisms are minimal to work as proof of concept. On the internal side, due
    to the distinct security mechanisms of each context broker, distinct approaches
    are required. In the current implementation, our prototype is based on a trust
    relationship with each context broker. 6. Evaluation and results discussion The
    proposed system aims to provide a simple interface for connecting data analytic
    tools to NGSI-based IoT ecosystems. We argue that enterprise solutions in smart
    domains, such as Smart Agriculture and Industry, could potentially benefit from
    the proposed system, enabling non-technical business users to consume on-demand
    IoT data and use it in their daily tasks. Thus, in order to evaluate the proposed
    system, we simulated these enterprise scenarios in an educational use case. Using
    the brokers Orion, Orion LD, Scorpio and Stellio, and QuantumLeap, we implemented
    a real FIWARE ecosystem depicted in Fig. 6. The air quality sensors collect data
    from the Open Weather Map18 public platform. The system has been working using
    the Orion LD and QuantumLeap since January of 2023, collecting data from 26 geographical
    points in the city of Maia in Portugal. The physical measurements collected were
    the temperature, humidity and wind speed. Regarding computational resources, the
    system was implemented using four docker-based network environments running on
    a shared Linux virtual server with four cores and 16GB of RAM. The first two groups
    of dockers support the Orion and Orion LD. Each has a QuantumLeap, a CrateDB,
    a MongoDB, an IoT Agent, a Mosquitto and a web server in the Orion LD''s docker;
    the third group of dockers for Scorpio, PostgreSQL and Apache Kafka and a web
    server and the last for Stellio, TimescaleDB and Apache Kafka and another web
    server. Outside the dockers, in the main host, our prototype and the context data
    providers (i.e., the sensors) were installed. This environment was used to test
    the prototype and conduct its evaluation. The experiment discussed next was conducted
    using the data collected from January of 2023 until now using the first docker-based
    network based on Orion LD and QuantumLeap. 6.1. Experiments and results Although
    this experiment is based on an educational use case involving a class of business
    sciences master''s students (with non-technical backgrounds), the goal was to
    simulate a real scenario involving users without non-technical skills who were
    asked to consume IoT data and implement analytical processes using it. The experiment
    started by presenting the prototype''s API and the available time series of temperature,
    humidity and wind speed in the geographic points to a group of 14 students. Each
    student was then asked to implement the following five Power BI dashboards applying
    temporal and geographic criteria over the data of those three physical measurements:
    (1) the number of daily collected samples; (2) the average temperature in several
    points of a map (depicted in Fig. 13); (3) the daily temperature variations (i.e.,
    the temperature variation from the previous day – depicted in Fig. 14); (4) line
    graphic visualisation of the three time-series, one per each physical measurement
    and (5) the average, maximum and minimum physical measurement per each hour of
    the day as a bar graph. At the end of the experiment, all students successfully
    imported the IoT data to the Power BI. Their difficulties only occurred during
    the design phase of the dashboards. We should note that all students already have
    basic knowledge of ETL processes involving MS Excel, CSV and (simple) JSON files.
    Thus, there was only a slight learning curve regarding the API and their parameters.
    As one can observe in Fig. 12, a few ETL steps were required in the case of Power
    Query Editor, even in the JSON format option. Indeed, most of them were generated
    automatically in a few seconds. As discussed in Section 3.2, this step would be
    much more complex or impossible to achieve without the proposed system. Alternatively,
    one may consider the hypothesis of connecting the analytical tool to the backend
    database (in this scenario: CrateDB, PostgreSQL or TimesaleDB). Although this
    is a simple step, there are two major problems: (1) In general, in real production
    scenarios, these backend databases have very restrictive security policies, posing
    problems in terms of control and access management for the IT support teams; (2)
    additionally, such an approach could be more time consuming for users, due to
    the specificities of the data model of the broker. For instance, the QuantumLeap
    stores data in the CrateDB as one table per entity. However, in the case of Scorpio
    and Stellio, the data model in the database is much more complex, in which an
    entity is supported on multiple tables containing its attributes as JSON-based
    columns. Thus, in order to explore this alternative approach, we asked the 14
    participants in the study to extract data directly from the backend systems CrateDB,
    used by Quantumleap and PostgreSQL, used by Stellio. All the participants required
    technical support to establish the connection to these tested databases, contrasting
    with instantaneous connection using the proposed system. Using the web interface
    provided by the CrateDB, all participants successfully manually imported data
    to Power BI. However, in the case of PostgreSQL, none of them was able to finish
    the task. They justified their difficulties with the complexity of the data structures
    based on several tables and columns in the JSON format. Download : Download high-res
    image (862KB) Download : Download full-size image Fig. 12. Power query editor.
    Download : Download high-res image (426KB) Download : Download full-size image
    Fig. 13. Average temperature in geographical points. Download : Download high-res
    image (197KB) Download : Download full-size image Fig. 14. Average temperature
    daily variations. These results allow us to claim that the proposed system can
    accelerate the implementation of ETL processes, which is particularly useful when
    using self-service visual analytical tools because end-users have a simple interface
    that maps an IoT entity in a single table; thus, all complexity regarding the
    data model is handled in the context of the visual analytic tool. Additionally,
    the proposed approach still helps end-users overcome the necessary access restrictions
    imposed by the security policies of the IoT ecosystem. As a result, end-users
    can do their tasks, minimising the technical support given by the IT teams. A
    second experiment involved the PySpark, a Python API for Apache Spark. This API
    enables users to perform real-time, large-scale data processing in a distributed
    environment using Python. It also provides a PySpark shell for interactive data
    analysis. Applying the CSV format prototype''s option, the few lines of code presented
    in Fig. 15 were enough to download the IoT data, load it into a DataFrame19 and
    then print the average temperature per geographic place to the screen. Download
    : Download high-res image (160KB) Download : Download full-size image Fig. 15.
    A PySpark-based example for obtaining the average of the temperature per the streetAddress
    field. In this second experience, we reached the same conclusions that we had
    obtained in the previous one using Power BI. The end-users can be more productive
    and agile, less dependent on the IT support teams, focusing their effort on the
    analytics process in the scope of a visual analytic tool or programming environment,
    such as Python. 6.2. Discussion of the results In the previous section, we demonstrated
    that the proposed system enables end-users to extract IoT data from NGSI-based
    ecosystems. Based on these experimental results, we now justify how the objectives
    defined in Section 4.2 were achieved. (1) A fast learning curve for using the
    proposed system – The population that participated in the experiment does not
    have technical skills in the areas of IT or IoT. Despite this, their knowledge
    of the tools used (Power BI and PySpark) was sufficient to be able to connect
    to the NGSI-based ecosystem and extract data. We should notice that this task
    just takes a few moments (see Fig. 12). This contrasts with related work, in which
    end users must use different technical methods for data extraction, depending
    on the FIWARE component; (2) Simple mapping between IoT entities and extracted
    data – The proposed system maps an IoT entity in a single table as in the relational
    model. Optionally, enables inner join operations on two related entities. Furthermore,
    the proposed approach allows users to be oblivious to the underlying FIWARE component
    and its NGSI dialect. Thus, end-users only manipulate data tables following the
    relational model. We consider this approach as simple as possible; (3) Standard
    interface enabling the support for self-service visual analytics tool - The system
    provides two possible output formats, JSON and CSV. These formats are well known
    and used in all leading tools, such as Power BI, Tableau and Qlik, as well as
    in Python-based environments; (4) Overcome the control access limitations of backend
    systems usually imposed by security policies – As discussed in Section 5.1, the
    proposed architecture mediates the interaction between the NGSI-based ecosystem
    and the tools used by end-users. This approach only exposes a REST API to the
    outside world, avoiding access to those backend systems, as well as the context
    brokers. The proposed system provides an authentication mechanism and access control
    per FIWARE tenant (see Section 5.5). We should highlight that there are also other
    benefits in terms of productivity. As discussed above, a simple task in a few
    seconds is required to extract data about an IoT entity. This is not the case
    with related works, in which end-users are dependent on IT and IoT experts, have
    to deal with complex database connection methods and have to apply data transformations
    on extracted data, thus compromising their work productivity. In the next section,
    the limitations of the proposed system and future work are discussed. 6.3. Limitations
    and future work The current version of the prototype does not implement any mechanism
    of caching, as well as little concern for code optimisation was taken into account.
    Thus, the real performance evaluation is out of the scope of the present work.
    Despite that, we performed some tests using datasets with 500.000 records (of
    those three physical measurements), which we consider a small volume of data compared
    with a real big data scenario. For this size of the dataset, in the presented
    docker-based environment, the execution average time of a query was 4.57 s. This
    is an average value that was calculated using the metrics provided by the system
    after ten consecutive queries. We consider this average time as satisfactory in
    terms of user experience during our system evaluation. However, using a larger
    number of records could be a significant performance issue. Regarding security
    and access control, the applied security model was shown to be effective. The
    proposed system enabled users to consume IoT data of four distinct tenants in
    four distinct systems and versions of NGSI: Orion/ QuantumLeap, Orion LD/QuantumLeap,
    Scorpio and Stellio. We should notice that by using our system, the IoT ecosystem
    can be locked from the outside world. Only the endpoint discussed in Section 5.2
    is available from the corporative network or the Internet. However, other scenarios
    involving public and corporate communities, as well as monetised approaches, will
    require more sophisticated security models. In the present security model, the
    data granularity access control is defined at the tenant level, thus granting
    access to all entities in a tenant. A more granular access control at the entity
    level is required. Each user should have access only to a set of entities of one
    or more tenants. Finally, regarding the querying features, the prototype enabled
    the implementation of ETL processes based on extracted data by imposed temporal
    and geolocation criteria. The proposed system also enables the join operation
    at the data extraction moment, enabling data of two entities to be ingested as
    a single table. These table join operations can be done in the scope of the self-service
    analytic tool using separated datasets (one per entity); nevertheless, this option
    can be particularly useful in the case of NGSI-LD data, in which entities may
    contain relationships with others. Despite these satisfactory results, additional
    criteria parameters could be needed in other complex use cases. Thus, in terms
    of limitations, three types of issues should be the subject of research and improvements
    in future versions of the prototype: (1) performance, (2) security and access
    control management, and (3) new querying options. 7. Conclusions In NGSI-based
    ecosystems, IoT data can be consumed by self-service visual analytic tools following
    two approaches. In the first, using FIWARE components (discussed in Section 3)
    to store data in backend databases. However, for the end-users, this approach
    poses problems of security and dependence on IT support. The second one is based
    on queries to the context brokers. These systems have available NGSI-based APIs,
    which provide means to query data according to spatial and temporal criteria,
    enabling the users to get the temperature, humidity or any other type of value
    measured by a sensor, serving their purposes when using analytic tools. However,
    these APIs have complex data structures that invalidate direct connection to those
    tools due to object-relational impedance mismatch between JSON structures provided
    by these APIs and the table-oriented structures, which, in general, are consumed
    by data analytics tools. We presented a prototype of a lightweight data bridge
    for self-service data analytic tools, such as Power BI, Tableau, Qlik and RapidMiner,
    programming environments, such as PySpark or any other type of tool that consumes
    table-oriented data in JSON or CSV formats, enabling them to connect directly
    to NGSI-V2/NGSI-LD/NGSI-TSDB based systems in order to consume real-time produced
    data, as well as historical data in form of time series. The proposed system addresses
    those problems by exposing a simple and uniform API for context brokers (based
    on NGSI-V2 and NGSI-LD) and QuantumLeap (based on NGSI-TSDB), supporting their
    spatial and temporal query capabilities. Additionally, transforms data to a table-oriented
    structure and adds new query options. Finally, provides authentication and access
    control mechanisms. In the current version of the prototype, a user authenticates
    using a unique key, which grants him access to all entities of a service/tenant;
    for future versions, the entity type granularity control access is planned. In
    order to evaluate our proposal, a FIWARE ecosystem was mounted and used in experiments
    conducted by a class of business sciences master''s students who implemented Power
    BI dashboards and programs in PySpark. This experiment demonstrated that end-users
    could easily consume data from an IoT ecosystem on-demand and autonomously without
    requiring the support of specialised IT teams, contrasting with related works
    in terms of work productivity and agility. This is an important feature in several
    use cases, such as smart industrial or agricultural. The proposed system is being
    implemented in a real use case of a public service organisation for managing air
    quality data. The presented system is still a prototype developed without major
    concerns about performance and security. Thus, in terms of limitations, three
    types of issues will be subject to improvements in future versions of the prototype:
    (1) performance, (2) security and access control, and (3) new querying options.
    This work presents a system that makes communication between humans and machines
    easy. CRediT authorship contribution statement Rui Humberto Pereira: Writing –
    review & editing, Writing – original draft, Validation, Supervision, Software,
    Methodology, Investigation, Conceptualization. Declaration of competing interest
    The authors declare the following financial interests/personal relationships which
    may be considered as potential competing interests: Rui Humberto Pereira reports
    financial support, administrative support, and article publishing charges were
    provided by Polytechnic Institute of Porto Center for Organizational and Social
    Studies. Acknowledgements This work is financed by Portuguese national funds through
    FCT - Fundação para a Ciência e Tecnologia, under the project UIDB/05422/2020.
    Appendix A API Endpoint Table A.1. - API parameters. Parameter Type Mandatory
    Description appKey Q/H No The key used for access control fiwareService P Yes
    Selects the FIWARE tenant/service fiwareServicePath Q Yes Selects the Orion hierarchical
    scope of context data, e.g., a city or region entityType P Yes Selects the entity
    to be exported as a table entityId P No Optional parameter for filtering data
    from a single instance of an entity fromDate Q No Optional parameter for limiting
    data from a certain date toDate Q No Optional parameter for limiting data till
    a certain date join Q No Join operator similar to the one in the relational model.
    Applicable only for NGSI-LD when the selected entity has a one-to-many relationship
    with another entity. idPattern Q No Optional parameter for filtering the entity
    Id using regular expressions attrs Q No Optional parameter to restrict the displayed
    attributes passing a comma-separated list of attribute names georel Q No Geolocation
    filtering. The same parameters used in the NSGI-based APIs [44,45] coords Q No
    minDistance Q No maxDistance Q No limit Q/H No Limit the number of rows to be
    exported format Q/H No JSON | CSV (default JSON) extended Q/H No If “true”, additional
    columns containing metadata are added to the dataset In column type, Q means query
    string parameter, P for a path parameter and H for HTTP Header. Some of these
    parameters are mandatory. Table A.2. - Type of responses and errors. HTTP code
    Output Meaning 200 A dataset in JSON or CSV Success 400 JSON Object { error:””,
    description:”” } Invalid syntax or unknown parameter 403 Invalid appKey for the
    given FIWARE service/tenant or the daily limit was exceeded 404 Invalid FIWARE
    service/tenant 413 The dataset is too large. The user should try to increase the
    limit parameter. 500 Internal error, e.g., while connecting to the broker Data
    availability Data will be made available on request. References [1] Y. Demchenko,
    P. Grosso, C. de Laat, P. Membrey Addressing big data issues in scientific data
    infrastructure 2013 International Conference on Collaboration Technologies and
    Systems (CTS), IEEE (2013), pp. 48-55, 10.1109/CTS.2013.6567203 May View in ScopusGoogle
    Scholar [2] T. Domínguez-Bolaño, O. Campos, V. Barral, C.J. Escudero, J.A. García-Naya
    An overview of IoT architectures, technologies, and existing open-source projects
    Internet Things, 20 (2022), Article 100626, 10.1016/j.iot.2022.100626 Nov. View
    PDFView articleView in ScopusGoogle Scholar [3] F. Cirillo, G. Solmaz, E.L. Berz,
    M. Bauer, B. Cheng, E. Kovacs A standard-based open source IoT platform: FIWARE
    IEEE Internet Things Mag., 2 (3) (2019), pp. 12-18, 10.1109/IOTM.0001.1800022
    Sep. Google Scholar [4] M. Bauer, et al. The context API in the OMA next generation
    service interface 2010 14th International Conference on Intelligence in Next Generation
    Networks, IEEE (2010), pp. 1-5, 10.1109/ICIN.2010.5640931 Oct. Google Scholar
    [5] J.E. Plazas, S. Bimonte, M. Schneider, C. de Vaulx, and J.C. Corrales, “Self-service
    business intelligence over on-demand IoT data: a new design methodology based
    on rapid prototyping,” 2020, pp. 84–93. 10.1007/978-3-030-54623-6_8. Google Scholar
    [6] E. Lima, R. Bayot, P. Brito, N. Rodrigues, B. Ribeiro, N. Lopes Business analytical
    framework for the manufacturing industry 2021 IEEE 19th International Conference
    on Industrial Informatics (INDIN), IEEE (2021), pp. 1-8, 10.1109/INDIN45523.2021.9557370
    Jul. Google Scholar [7] J. Passlick, L. Grützner, M. Schulz, M.H. Breitner Self-service
    business intelligence and analytics application scenarios: a taxonomy for differentiation
    Inform. Syst. e-Bus. Manage., 21 (1) (2023), pp. 159-191, 10.1007/s10257-022-00574-3
    Mar. View in ScopusGoogle Scholar [8] P. a Schlesinger, N. Rahman Self-service
    business intelligence resulting in disruptive technology J. Comp. Inform. Syst.,
    56 (1) (2016), pp. 11-21, 10.1080/08874417.2015.11645796 Jan. Google Scholar [9]
    J.S.D.P.A.G.F.F.A.P.R.M.E.M.K.Q.C.L. Kurt Schlegel, “Magic quadrant for analytics
    and business intelligence platforms.” Accessed: May 02, 2023. [Online]. Available:
    https://www.gartner.com/doc/reprints?id=1-2D773G95&ct=230411&st=sb. Google Scholar
    [10] K. Peffers, T. Tuunanen, M.A. Rothenberger, S. Chatterjee A design science
    research methodology for information systems research J. Manage. Inform. Syst.,
    24 (3) (2007), pp. 45-77, 10.2753/MIS0742-1222240302 Dec. View in ScopusGoogle
    Scholar [11] March Hevner, Park, Ram Design science in information systems research
    MIS Q., 28 (1) (2004), p. 75, 10.2307/25148625 Google Scholar [12] Bees D., Frost
    L., Bauer M., Fisher M., and Li W., “ETSI White Paper No. 31 - NGSI-LD API: for
    context information management.” Accessed: Apr. 13, 2023. [Online]. Available:
    https://www.etsi.org/images/files/ETSIWhitePapers/etsi_wp31_NGSI_API.pdf. Google
    Scholar [13] J.M.C. Fonseca, M. Márquez, and T. Jacobs, “FIWARE-NGSI v2 Specification.”
    Accessed: Mar. 01, 2023. [Online]. Available: https://fiware.github.io/specifications/ngsiv2/stable/.
    Google Scholar [14] A. Lazidis, K. Tsakos, E.G.M. Petrakis Publish–Subscribe approaches
    for the IoT and the cloud: functional and performance evaluation of open-source
    systems Internet Things, 19 (2022), Article 100538, 10.1016/j.iot.2022.100538
    Aug. View PDFView articleView in ScopusGoogle Scholar [15] FIWARE, “FIWARE components.”
    Accessed: Mar. 01, 2023. [Online]. Available: https://www.fiware.org/catalogue/.
    Google Scholar [16] “FIWARE Orion context broker.” Accessed: Apr. 14, 2023. [Online].
    Available: https://fiware-orion.readthedocs.io/en/master. Google Scholar [17]
    “FIWARE Orion context broker (with Linked Data Extensions).” Accessed: Apr. 14,
    2023. [Online]. Available: https://github.com/FIWARE/context.Orion-LD. Google
    Scholar [18] NECTI J., “Scorpio NGSI-LD broker.” Accessed: Apr. 14, 2023. [Online].
    Available: https://github.com/ScorpioBroker/ScorpioBroker. Google Scholar [19]
    “Stellio context broker.” Accessed: Apr. 14, 2023. [Online]. Available: https://github.com/stellio-hub/stellio-context-broker.
    Google Scholar [20] ESTI, “ETSI GS CIM 009 V1.7.1 - context information management
    (CIM); NGSI-LD API.” Accessed: Aug. 08, 2023. [Online]. Available: https://www.etsi.org/deliver/etsi_gs/CIM/001_099/009/01.07.01_60/gs_cim009v010701p.pdf.
    Google Scholar [21] U. Ahle, J.J. Hierro FIWARE for data spaces Designing Data
    Spaces, Springer International Publishing, Cham (2022), pp. 395-417, 10.1007/978-3-030-93975-5_24
    Google Scholar [22] Manu Sporny, Dave Longley, Gregg Kellogg, Markus Lanthaler,
    Pierre-Antoine Champin, and Niklas Lindström, “JSON-LD 1.1: a JSON-based serialization
    for linked data.” Accessed: Apr. 19, 2023. [Online]. Available: https://w3c.github.io/json-ld-syntax.
    Google Scholar [23] RDF Working Group, “W3C - resource description framework (RDF).”
    Accessed: Apr. 17, 2023. [Online]. Available: https://www.w3.org/RDF/. Google
    Scholar [24] W3C, “RDF Schema 1.1 - W3C Recommendation 25 February 2014.” Accessed:
    Apr. 17, 2023. [Online]. Available: https://www.w3.org/TR/2014/REC-rdf-schema-20140225/.
    Google Scholar [25] FIWARE, “Steps to migrate to JSON-LD.” Accessed: May 09, 2023.
    [Online]. Available: https://fiware-datamodels.readthedocs.io/en/stable/ngsi-ld_howto/#steps-to-migrate-to-json-ld.
    Google Scholar [26] “Smart data models.” Accessed: Apr. 14, 2023. [Online]. Available:
    https://smart-data-models.github.io/data-models/. Google Scholar [27] A. Carrera-Rivera,
    W. Ochoa, F. Larrinaga, G. Lasa How-to conduct a systematic literature review:
    a quick guide for computer science research MethodsX, 9 (2022), Article 101895,
    10.1016/j.mex.2022.101895 View PDFView articleView in ScopusGoogle Scholar [28]
    C.I. Valero, E. Ivancos Pla, R. Vaño, E. Garro, F. Boronat, C.E. Palau Design
    and development of an AIoT architecture for introducing a vessel ETA cognitive
    service in a legacy port management solution Sensors, 21 (23) (2021), p. 8133,
    10.3390/s21238133 Dec. View in ScopusGoogle Scholar [29] A. Arman, P. Bellini,
    D. Bologna, P. Nesi, G. Pantaleo, M. Paolucci Automating IoT data ingestion enabling
    visual representation Sensors, 21 (24) (2021), p. 8429, 10.3390/s21248429 Dec.
    View in ScopusGoogle Scholar [30] K.M. Tsiouris, et al. Designing interoperable
    telehealth platforms: bridging IoT devices with cloud infrastructures Enterp.
    Inf. Syst., 14 (8) (2020), pp. 1194-1218, 10.1080/17517575.2020.1759146 Sep. View
    in ScopusGoogle Scholar [31] G. Mastandrea, D. Mattia, L. D''Oriano, G.R. Rana,
    F. Nocera, M. Mongiello IOT data-driven experimental process optimisation for
    kevlar fiberglass components for aeronautic 2021 IEEE International Workshop On
    Metrology for Industry 4.0 & IoT (MetroInd4.0&IoT), IEEE (2021), pp. 18-22, 10.1109/MetroInd4.0IoT51437.2021.9488447
    Jun. View in ScopusGoogle Scholar [32] L. Martín, L. Sánchez, J. Lanza, P. Sotres
    Development and evaluation of Artificial Intelligence techniques for IoT data
    quality assessment and curation Internet Things, 22 (2023), Article 100779, 10.1016/j.iot.2023.100779
    Jul. View PDFView articleView in ScopusGoogle Scholar [33] M.A. Zamora-Izquierdo,
    J. Santa, J.A. Martínez, V. Martínez, A.F. Skarmeta Smart farming IoT platform
    based on edge and cloud computing Biosyst. Eng., 177 (2019), pp. 4-17, 10.1016/j.biosystemseng.2018.10.014
    Jan. View PDFView articleView in ScopusGoogle Scholar [34] J. Garrido-Zafra, A.R.
    Gil-de-Castro, R. Savariego-Fernandez, M. Linan-Reyes, F. Garcia-Torres, A. Moreno-Munoz
    IoT cloud-based power quality extended functionality for grid-interactive appliance
    controllers IEEE Trans. Ind. Appl., 58 (3) (2022), pp. 3909-3921, 10.1109/TIA.2022.3160410
    May View in ScopusGoogle Scholar [35] J.L. Frangella, F. Longo, G. Mirabelli,
    A. Padovano, and V. Solina, “A FIWARE-based IoT platform for enabling digital
    twins in a greenfield smart factory: an application study on a repurposed manufacturing
    line,” in XXVI Summer School Francesco Turco - Industrial Systems Engineering,
    2021. Google Scholar [36] A. Munoz-Arcentales, S. López-Pernas, J. Conde, Á. Alonso,
    J. Salvachúa, J.J. Hierro Enabling context-aware data analytics in smart environments:
    an open source reference implementation Sensors, 21 (21) (2021), p. 7095, 10.3390/s21217095
    Oct. View in ScopusGoogle Scholar [37] M. Haghgoo, A. Dognini, A. Monti A cloud-based
    platform for service restoration in active distribution grids 2020 6th IEEE International
    Energy Conference (ENERGYCon), IEEE (2020), pp. 841-846, 10.1109/ENERGYCon48941.2020.9236560
    Sep. View in ScopusGoogle Scholar [38] F. Terroso-Saenz, A. González-Vidal, A.P.
    Ramallo-González, A.F. Skarmeta An open IoT platform for the management and analysis
    of energy data Fut. Gen. Comp. Syst., 92 (2019), pp. 1066-1079, 10.1016/j.future.2017.08.046
    Mar. View PDFView articleView in ScopusGoogle Scholar [39] “QuantumLeap.” Accessed:
    Nov. 24, 2023. [Online]. Available: https://quantumleap.readthedocs.io/en/latest/.
    Google Scholar [40] “Welcome to the FIWARE Short Time Historic (STH) - Comet documentation.”
    Accessed: Nov. 24, 2023. [Online]. Available: https://fiware-sth-comet.readthedocs.io/en/latest/.
    Google Scholar [41] “FIWARE Draco.” Accessed: Nov. 11, 2023. [Online]. Available:
    https://fiware-draco.readthedocs.io/en/latest/. Google Scholar [42] “Welcome to
    cosmos”, Accessed: Apr. 27, 2023. [Online]. Available: https://fiware-cosmos.readthedocs.io/en/latest/.
    Google Scholar [43] “Cygnus.” Accessed: Nov. 24, 2023. [Online]. Available: https://fiware-cygnus.readthedocs.io/en/latest/.
    Google Scholar [44] “ETSI ISG CIM /NGSI-LD API specification.” Accessed: May 22,
    2023. [Online]. Available: https://forge.etsi.org/swagger/ui/?url=https://forge.etsi.org/rep/NGSI-LD/NGSI-LD/-/raw/master/spec/updated/generated/full_api.json.
    Google Scholar [45] “QuantumLeap API - NGSI-TSDB.” Accessed: Apr. 13, 2023. [Online].
    Available: https://app.swaggerhub.com/apis/smartsdk/ngsi-tsdb. Google Scholar
    [46] “Concise NGSI-LD.” Accessed: Mar. 23, 2023. [Online]. Available: https://github.com/FIWARE/tutorials.Concise-Format.
    Google Scholar [47] ETSI, “ETSI GS CIM 009 V1.6.1 (2022-08) cross-cutting Context
    Information Management (CIM); NGSI-LD API.” Accessed: Mar. 01, 2023. [Online].
    Available: https://www.etsi.org/deliver/etsi_gs/CIM/001_099/009/01.06.01_60/gs_CIM009v010601p.pdf.
    Google Scholar [48] “Real-time streaming in Power BI.” Accessed: May 30, 2023.
    [Online]. Available: https://learn.microsoft.com/en-us/power-bi/connect-data/service-real-time-streaming.
    Google Scholar [49] “FIWARE - linked data entity relationships.” Accessed: May
    24, 2023. [Online]. Available: https://github.com/FIWARE/tutorials.Entity-Relationships/.
    Google Scholar Cited by (0) ✰ Please cite this article as: Pereira, Rui H., Lightweight
    data bridge for connecting self-service end-user analytic tools to NGSI-based
    IoT systems, Internet of Things; Engineering Cyber Physical Human Systems (2023),
    http://dx.doi.org/0000000 1 https://www.fiware.org 2 https://cpaas.bfh.ch 3 Source
    code available at https://github.com/rhrp/iotbi 4 https://www.etsi.org 5 https://www.mongodb.com
    6 https://www.postgresql.org/ 7 https://www.timescale.com 8 https://kafka.apache.org/
    9 https://github.com/ScorpioBroker/ScorpioBroker/blob/development-quarkus/docs/roadmap.md#scorpio-broker-roadmap
    (Accessed: Oct. 30, 2023) 10 https://smartdatamodels.org/ 11 https://flume.apache.org/
    12 https://nifi.apache.org 13 https://github.com/FIWARE/Mintaka 14 https://expressjs.com/
    15 https://github.com/ficodes/ngsijs / 16 https://turfjs.org/ 17 https://juanjodiaz.github.io/json2csv/
    18 https://openweathermap.org/ 19 https://spark.apache.org/docs/latest/sql-programming-guide.html
    © 2024 The Author. Published by Elsevier B.V. Recommended articles Are perfect
    transcripts necessary when we analyze classroom dialogue using AIoT? Internet
    of Things, Volume 25, 2024, Article 101105 Deliang Wang, Gaowei Chen View PDF
    Automated trusted collaborative processes through blockchain & IoT integration:
    The fraud detection case Internet of Things, Volume 25, 2024, Article 101106 Ángel
    Jesús Varela-Vaca, …, J.M. Gónzalez-Gutiérrez View PDF EDITORS: Energy-aware Dynamic
    Task Offloading using Deep Reinforcement Transfer Learning in SDN-enabled Edge
    Nodes Internet of Things, Volume 25, 2024, Article 101118 Thar Baker, …, Shini
    Girija View PDF Show 3 more articles Article Metrics Captures Readers: 5 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Lightweight data bridge for connecting self-service end-user analytic tools
    to NGSI-based IoT systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - San Emeterio de la Parte M.
  - Martínez-Ortega J.F.
  - Castillejo P.
  - Lucas-Martínez N.
  citation_count: '1'
  description: The Agri-Food sector is in a stressful situation due to the high demand
    for food from the growing population around the world. The agricultural sector
    is facing a challenging situation; it must increase production and reduce its
    impact on the environment by appropriately allocating resources, adapting to climate
    change, and avoiding food waste. Agriculture 5.0, as the fifth agricultural evolution,
    aims to offer a perfect symbiosis between agriculture, advanced technologies,
    and sustainability. The most advanced technologies in automation, monitoring,
    and decision support are driven by the collection and processing of large volumes
    of agricultural data, such as weather information, farm machinery, soil and crop
    conditions, and marketing demand for higher profits. Taking advantage of the technological
    paradigm of the Internet of Things, agricultural data provides information on
    spatial, temporal, and semantic dimensions. Spatio-temporal semantic data management
    systems have become the cornerstone for the achievement of Agriculture 5.0 through
    advanced Internet of Things technologies. This paper aims to review the current
    literature on spatio-temporal semantic data management systems for Agriculture
    5.0. This paper uses a systematic literature review technique to study eleven
    representative spatio-temporal semantic data management systems. A comprehensive
    evaluation of the aspects of interoperability, accessibility, scalability, real-time
    operation capability, etc. is carried out. Based on the evaluation results, future
    challenges are detected and development trends and possible improvements are proposed
    for future research. Finally, a distributed architecture capable of satisfying
    the above needs and challenges is proposed. The paper aims to inspire further
    research and development efforts to improve the efficiency, accessibility, and
    performance of spatio-temporal semantic data management systems.
  doi: 10.1016/j.iot.2023.101030
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Agriculture 5.0 and STSDMSs
    3. Literature review on selected spatio-temporal semantic data management systems
    4. Evaluation, upcoming challenges and future directions 5. Future directions
    6. Conclusions CRediT authorship contribution statement Declaration of competing
    interest Acknowledgments Data availability References Show full outline Cited
    by (1) Figures (8) Show 2 more figures Tables (3) Table 1 Table 2 Table 3 Internet
    of Things Volume 25, April 2024, 101030 Review article Spatio-temporal semantic
    data management systems for IoT in agriculture 5.0: Challenges and future directions
    Author links open overlay panel Mario San Emeterio de la Parte, José-Fernán Martínez-Ortega,
    Pedro Castillejo, Néstor Lucas-Martínez Show more Share Cite https://doi.org/10.1016/j.iot.2023.101030
    Get rights and content Under a Creative Commons license open access Highlights
    • Four requirements of Agriculture 5.0 in spatio-temporal semantic data management
    are concluded. • Eleven Spatio-Temporal Semantic Data Management Systems for agriculture
    are presented in a systemic view. • Selected systems are evaluated in eight aspects.
    • Seven challenges are detected for new Spatio-Temporal Semantic Data Management
    systems. • A distributed architecture is proposed that meets the needs of Spatio-Temporal
    Data Management Systems for agriculture. Abstract The Agri-Food sector is in a
    stressful situation due to the high demand for food from the growing population
    around the world. The agricultural sector is facing a challenging situation; it
    must increase production and reduce its impact on the environment by appropriately
    allocating resources, adapting to climate change, and avoiding food waste. Agriculture
    5.0, as the fifth agricultural evolution, aims to offer a perfect symbiosis between
    agriculture, advanced technologies, and sustainability. The most advanced technologies
    in automation, monitoring, and decision support are driven by the collection and
    processing of large volumes of agricultural data, such as weather information,
    farm machinery, soil and crop conditions, and marketing demand for higher profits.
    Taking advantage of the technological paradigm of the Internet of Things, agricultural
    data provides information on spatial, temporal, and semantic dimensions. Spatio-temporal
    semantic data management systems have become the cornerstone for the achievement
    of Agriculture 5.0 through advanced Internet of Things technologies. This paper
    aims to review the current literature on spatio-temporal semantic data management
    systems for Agriculture 5.0. This paper uses a systematic literature review technique
    to study eleven representative spatio-temporal semantic data management systems.
    A comprehensive evaluation of the aspects of interoperability, accessibility,
    scalability, real-time operation capability, etc. is carried out. Based on the
    evaluation results, future challenges are detected and development trends and
    possible improvements are proposed for future research. Finally, a distributed
    architecture capable of satisfying the above needs and challenges is proposed.
    The paper aims to inspire further research and development efforts to improve
    the efficiency, accessibility, and performance of spatio-temporal semantic data
    management systems. Previous article in issue Next article in issue Keywords Data
    scienceInternet of Things (IoT)Big dataAgricultureSpatio-temporal semantic data
    management system (STSDMS) 1. Introduction The integration of advanced technologies
    into agriculture is driven by the achievement of the Sustainable Development Goals
    (SDGs) [1] and the welfare of animals [2]. Since 2015, the global population suffering
    from hunger has increased dramatically, reaching a percentage of at least 9% of
    the population worldwide [3]. If the current trend continues, the Zero Hunger
    Goal [4] will not be achieved by 2030. Targets 2.3 and 2.a of the Zero Hunger
    goal seek to double agricultural productivity and increase research in the field
    of agriculture. The implementation of the Internet of Things (IoT) in agriculture
    offers solutions for task automation, crop and livestock monitoring, and decision
    support, among others. Thanks to the IoT, the achievement of Agriculture 5.0 or
    the digitization of agriculture offers the solution to the growing demand for
    food, reducing the environmental impact and increasing productivity, efficiency,
    and accuracy in the development of agricultural tasks. The Internet of Things
    paradigm is based on the extraction of knowledge through raw data generated by
    devices, sensors, and various agents deployed in the fields. The huge volumes
    of data provide semantic, geolocalized, and time-varying information. For this
    reason, specific data management systems are needed for Agriculture 5.0, capable
    of managing data of a spatio-temporal semantic nature. These systems are called
    Spatio-Temporal Semantic Data Management Systems (STSDMSs). However, the implementation
    of STSDMSs currently presents numerous challenges in modern agriculture: • Increase
    in the number of connected agricultural devices: According to Machina’s research
    report, the number of connected agricultural devices at the end of 2014 was 13
    million and is expected to reach 225 million by 2024 [5]. The growing number of
    connected devices translates into the generation of large volumes of data. To
    enable the growing demand, advanced data management systems must be more specialized,
    scalable, and capable of providing data injection and retribution functions, as
    well as processing capabilities for large volumes of data. • Connectivity challenges:
    Most agricultural scenarios are located in rural areas, with low connectivity
    capacities [6]. Therefore, it is increasingly important to bring computing capabilities
    closer to the edge, reducing bandwidth and delays introduced in communication
    with centralized data management systems in the cloud. • Diversity of agricultural
    data models: The huge amount of heterogeneous data generated by agricultural devices
    is one of the main challenges in data management today. Due to the absence of
    standards for agricultural data modeling, current devices, and solutions are developed
    based on native data models [7]. Furthermore, integration between data management
    systems and current solutions is limited by the lack of interoperability generated
    by the diversity of models. This translates into major efforts in the development
    of gateways or translator components. • Spatio-temporal semantic data: The latest
    solutions in modern agriculture integrate, among others, the monitoring and tracking
    of livestock with the use of collars [8] and automation of tasks with autonomous
    or semi-autonomous vehicles such as ISOBUS machines or tractors [9] or UAVs for
    pesticide spraying or crop monitoring. Definitely, the devices deployed in current
    agricultural scenarios offer information characterized in the spatial, temporal,
    and semantic dimensions. However, the development of data management systems capable
    of providing optimal performance in queries and operations based on the three
    dimensions remains a major challenge for current agricultural data management
    systems. • Accessibility for farmers: Sensing and subsequent management of agricultural
    data provides a valuable tool for the farmer to make more informed decisions and
    plan tasks. In addition, real-time data management enables anomaly detection capabilities
    as well as support for task re-planning and adaptation. However, the query interfaces
    of data management systems are mainly oriented towards technical staff or developers.
    Simplifying graphical user interfaces (GUIs) enables their use by the end user,
    the farmer, the livestock farmer, or the agricultural specialist [10]. In this
    context, the effective management of spatio-temporal data becomes essential. Spatio-temporal
    data refers to information that not only captures the spatial characteristics
    and geopositioning of agricultural IoT agents but also includes the temporal dimension,
    allowing for a comprehensive understanding of dynamic processes in the agricultural
    landscape. The management of such data involves the collection, storage, integration,
    analysis, and visualization of spatio-temporal information, facilitating informed
    decision-making and optimizing agricultural practices. After identifying the problems
    and limitations of modern agriculture in the implementation of data management
    systems, this paper provides a review of the current literature on STSDMSs for
    Agriculture 5.0. The central research question guiding this work is: “What is
    the current status of STSDMSs in Agriculture 5.0?”. To answer this question, a
    careful selection of the most relevant systems in the management of spatio-temporal
    semantic data for agriculture is made. Then, an exhaustive review and evaluation
    of the literature associated with these selected systems is carried out, identifying
    the current challenges derived from the limitations previously discussed. It is
    important to note that this study is based on a literature review and does not
    include performance tests of the selected STSDMSs. The final purpose of this paper
    is to provide a clear overview of the current state of the art in this field and,
    at the same time, to identify potential areas of research and development for
    future researchers and experts in the field. The current challenges and limitations
    of spatio-temporal semantic data management systems in Agriculture 5.0 are addressed.
    Issues such as data interoperability, scalability, accessibility, and real-time
    operation will be discussed, along with potential solutions and future directions
    for research and development. This paper aims to contribute to the understanding
    of STSDMSs for the achievement of Agriculture 5.0, highlighting its importance,
    current advances, and potential to drive innovation in the agricultural sector.
    Through a systematic review and evaluation of challenges in this field, this article
    aims to inspire new research and development efforts that improve the efficiency,
    sustainability, and productivity of modern agricultural systems. Section 2 describes
    the evolution of agriculture towards agricultural digitalization or Agriculture
    5.0, highlighting the advanced technologies used to achieve it, as well as the
    objective of this new paradigm. Based on the five challenges and limitations of
    data management in modern agriculture outlined in this introduction, Section 3
    selects and presents eleven STSDMSs from the current literature, developed in
    this context. Section 4 provides the literature evaluation of the eleven STSDMSs
    selected. After evaluation, current challenges are identified and future research
    lines are discussed to address them. Based on the challenges detected and after
    outlining the research lines that have resulted, Section 5 offers a proposal capable
    of solving them, describing the architecture and the most novel and attractive
    technologies for their implementation. Finally, Section 6 draws conclusions from
    the results of this study. 2. Agriculture 5.0 and STSDMSs Agriculture 5.0 represents
    a transformative approach to agriculture that integrates advanced technologies,
    data analytics, and automation to revolutionize the agricultural sector. It builds
    on the foundations of previous agricultural generations, such as subsistence agriculture
    (Agriculture 1.0), mechanization (Agriculture 2.0), industrialization (Agriculture
    3.0), and precision agriculture (Agriculture 4.0), but introduces novel concepts
    and techniques to address the challenges of modern food production. Fig. 1 shows
    the evolution of agriculture since its beginnings. Agriculture 1.0: This stage
    refers to traditional agriculture or subsistence agriculture, dating back to the
    origins of civilization. Agriculture 1.0 was characterized by the use of hand
    tools and the reliance on human and animal labor. It is generally considered to
    have spanned about 10,000 BC to the 18th century AD. Agriculture 2.0: This stage
    began with the Agricultural Revolution in the 18th century, which marked the beginning
    of agricultural mechanization. The introduction of machines, such as the animal-drawn
    plow and the first combine harvesters, increased productivity and made it possible
    to cultivate large areas of land. Agriculture 2.0 lasted from the 18th century
    to about the middle of the 20th century. Agriculture 3.0: Industrialized agriculture
    or Green Revolution, which developed from the mid-20th century onward. It was
    characterized by the massive application of technology, such as the use of synthetic
    fertilizers, pesticides, advanced agricultural machinery, and intensive farming
    techniques. Agriculture 3.0 spread from the mid-20th century to the end of the
    twentieth century, although some of its practices are still in use today. Agriculture
    4.0: Also known as precision agriculture, this stage refers to the application
    of information and communication technologies (ICT) in agriculture. It includes
    the use of sensors, drones, geographic information systems (GIS), the Internet
    of Things (IoT), and data analytics to optimize agricultural production and reduce
    environmental impact. Agriculture 4.0 began to gain momentum in the late twentieth
    century and continues to do so today. Agriculture 5.0: Termed Digital Agriculture
    [11], this stage is considered the agriculture of the future, driven by emerging
    technologies powered by the Internet of Things, such as artificial intelligence
    (AI), machine learning, robotics, and biotechnology. Agriculture 5.0 focuses on
    sustainability, efficiency, and integration of agricultural systems with the environment
    and society. Although there is no precise date for the start of Agriculture 5.0,
    its development is expected to extend over the next decades and beyond. At its
    core, Agriculture 5.0 leverages emerging technologies to optimize agricultural
    processes, increase productivity, enhance sustainability, and improve resource
    management. These technologies include: Download : Download high-res image (581KB)
    Download : Download full-size image Fig. 1. Evolution from agriculture 1.0 to
    agriculture 5.0. • Internet of Things (IoT): IoT devices, such as sensors and
    actuators, are deployed in agricultural systems to collect real-time data on various
    parameters, such as soil moisture, temperature, humidity, and crop growth. These
    devices enable continuous monitoring of farming conditions and provide valuable
    information for decision making. • Artificial Intelligence (AI) and Machine Learning
    (ML): AI and ML algorithms are used to analyze the vast amount of data generated
    by IoT devices. These algorithms can identify patterns, make predictions, and
    provide recommendations to optimize crop management, disease detection, pest control,
    and irrigation strategies. AI-powered systems can also automate tasks, such as
    harvesting, sorting, and packaging, leading to greater efficiency and reduced
    labor requirements. • Robotics and Automation: Agricultural robots are designed
    to perform specific tasks autonomously or with minimal human intervention. These
    robots can perform activities such as precision planting, weeding, spraying, and
    harvesting, thus improving accuracy, reducing the need for manual labor, and improving
    operational efficiency. • Big Data Analytics: Agriculture 5.0 utilizes big data
    analytics techniques to process and analyze large volumes of data collected from
    a variety of sources. By integrating data from sensors, satellite imagery, weather
    forecasts, and historical records, farmers and agronomists can gain valuable insights
    into crop growth, soil conditions, pest infestations, and other factors that influence
    agricultural productivity. • Cloud and Edge Computing: Cloud computing platforms
    provide the storage and computational power necessary to handle and process vast
    amounts of agricultural data. This technology allows farmers, researchers, and
    stakeholders to access and share information from anywhere, allowing collaborative
    decision-making and facilitating the adoption of precision agriculture practices.
    Due to connectivity limitations in agricultural scenarios, bringing computing
    capabilities closer to the edge is one of the current challenges. The key objective
    of Agriculture 5.0 is to transform traditional farming into a data-driven, knowledge-based
    system. By harnessing the power of advanced technologies and data analytics, it
    aims to optimize resource allocation, minimize environmental impacts, and improve
    the overall efficiency and sustainability of agricultural operations. Furthermore,
    Agriculture 5.0 promotes the concept of “farming-as-a-service”, where farmers
    can access agricultural expertise, data-driven insights, and customized solutions
    through platforms and service providers. This approach allows small-scale farmers
    to benefit from advanced technologies and expert knowledge, leveling the playing
    field, and fostering inclusivity in the agricultural sector. In summary, Agriculture
    5.0 represents a paradigm shift in agriculture, where data, technology, and automation
    converge to enable smarter, more efficient, and sustainable farming practices.
    By embracing these innovations, the industry can meet the challenges of food security,
    environmental stewardship, and economic viability in an increasingly complex and
    interconnected world. 2.1. Ethical, environmental, social, economic, and policy
    implications in agriculture 5.0 The adoption of Spatio-Temporal Semantic Data
    Management Systems in the context of Agriculture 5.0 entails important ethical,
    environmental, economic, policy, and social considerations. This subsection addresses
    these critical aspects, highlighting their relevance in the framework of the implementation
    of advanced IoT technologies in the agricultural domain. 2.1.1. Ethical implications
    Mass data collection in modern agriculture raises ethical questions about privacy
    and informed consent of farmers and other stakeholders. In addition, autonomous
    decision making of data-driven systems could generate ethical dilemmas, requiring
    careful reflection on responsibility and transparency in the automated decision
    chain. The book “Farm data management, sharing and services for agriculture development”
    [12] analyzes the ethical implications of data management in agriculture and highlights
    the fundamental principles that should guide ethical practices in this context.
    2.1.2. Environmental implications The extensive use of IoT technologies in agriculture
    can have a significant environmental impact, from energy resource consumption
    to e-waste generation. It is crucial to assess how the implementation of these
    technologies contributes to or counteracts the environmental sustainability goals
    in the agricultural sector. The European Commission’s report “A Sustainable Bioeconomy
    for Europe: Strengthening the Connection Between Economy, Society, and the Environment.”
    [13] provides a comprehensive overview of sustainability in the bioeconomy, offering
    relevant insights to understand the environmental impact of advanced agricultural
    technologies. 2.1.3. Social implications Automation and digitalization can have
    an impact on traditional agricultural employment, posing socio-economic challenges
    in rural communities. Social aspects must be carefully addressed to ensure a fair
    transition to Agriculture 5.0, considering the impact on employability and equity
    in access to these technologies. Sarah Rotz et al. examine the social implications
    of agricultural digitalization with a focus on the North American context [14].
    This paper highlights key tensions related to automation, duality in the labor
    market, and digital data control. As conclusions to the current paradigm, it argues
    for a social justice perspective, calling for a review of policies to mitigate
    exploitation and marginalization. 2.1.4. Economic and policy implications For
    the proper development of STSDMSs and their integration into modern agriculture,
    it is important to consider that the implementation of advanced technologies and
    the digitization of agriculture also have economic and political implications
    to be taken into account. In [15], the policy implications for the deepening of
    agricultural informatization and the accelerated construction of modern agricultural
    and rural areas are addressed. In addition, the authors systematically analyze
    the theory of regional rural economic growth under Big Data as a whole, and the
    theory of the relationship between agricultural and rural big data development
    and rural economic growth, which forms the theoretical basis of the study. Access,
    sharing, and use of agricultural data is a major concern for farmers in Agriculture
    5.0. To address this, it should be explored whether or how existing policy frameworks
    and other sectoral initiatives can help foster greater trust. In [16], concerns
    about regulatory differences in data policies between countries and limitations
    to cross-border data flows in agriculture are discussed. Integrating these ethical,
    environmental, economic, policy, and social considerations into the implementation
    of STSDMSs is essential to ensure a sustainable and ethical development of Agriculture
    5.0, aligned with the values and objectives of society and relevant European policies.
    2.2. Spatio-temporal data management in agriculture 5.0 From its origins, agricultural
    activity has been based on observation and annotation to correctly manage crops
    and livestock. Field conditions, climatic and environmental conditions, and even
    the specific needs of the different crops or livestock have been studied. Just
    as human decisions, actions, and learning are based on data collection through
    our different senses, the digitization of agriculture is based on the same principle.
    Through raw data and information, provided by a wide variety of devices and sources,
    the knowledge needed to perform a particular action or recommendation is extracted.
    In addition, the processing and analysis of historical data will ultimately provide
    the learning and wisdom needed to increase the performance and efficiency of agricultural
    activity. This principle is represented by the DIKW Pyramid (see Fig. 2). Agriculture
    5.0 or digital agriculture is based on the collection of data from various sources.
    These data can be characterized according to the nature of the sources that generate
    them: (i) Sensors and devices deployed in the field, (ii) weather stations, (iii)
    autonomous and semi-autonomous vehicles, and (iv) collars on cattle. Download
    : Download high-res image (142KB) Download : Download full-size image Fig. 2.
    Knowledge extraction process in agriculture. DIKW Pyramid (Data, Information,
    Knowledge, Wisdom Pyramid). Each of these sources generates raw data from which,
    after management and processing, the necessary knowledge is extracted to feed
    decision support solutions, task automation, and monitoring. According to this
    approach, it is clear that Agriculture 5.0 arises mainly from the implementation
    of well-known sensor networks and the Internet of Things. However, agricultural
    scenarios present very specific characteristics that are not found in other application
    domains, such as smart cities, smart homes, Industry 4.0, or the use of IoT in
    healthcare, such as the Internet of Medical Things (IoMT). The main challenges
    facing Agriculture 5.0 can be summarized in three main factors: • Connectivity
    problems and instability • Low-resource devices • Lack of semantic interoperability
    due to the absence of standards in agricultural data models Agricultural digitization
    is driven by the extraction of knowledge or wisdom from raw data sources (sensors
    and devices) deployed in the field. Appropriate data processing and management
    must be performed to extract knowledge from the raw data provided by the sensors
    [17]. The data captured by the different types of sensors and devices must provide
    answers to the following questions. Where were the data taken? When were the data
    taken? What is the meaning of the data? This is due to the spatio-temporal semantic
    nature of the data generated by the different sensors and devices in agriculture.
    Although STSDMSs are essential for the implementation of Agriculture 5.0 and the
    Internet of Things in general, their use and performance are limited by some critical
    problems (Fig. 3). Download : Download high-res image (177KB) Download : Download
    full-size image Fig. 3. Critical issues on STSDMSs. • Access to query or exploit
    data through STSDMSs is very limited for farmers. The graphical interfaces of
    the STSDMSs are oriented towards technical documentation and require specific
    knowledge of database management languages. • The developers of STSDMSs have focused
    on cloud-centric architectures. This provides the computational capabilities for
    managing a large volume of spatio-temporal data but does not solve the connectivity
    problems in agricultural scenarios. The absence of distributed architectures between
    the edge and the cloud makes real-time management impossible. • The lack of interoperability
    between agricultural data models and the absence of standards results in the development
    of native STSDMSs for each scenario. Integration with other solutions or implementation
    in existing platforms is impossible due to the lack of interoperability. • The
    functionalities of current STSDMSs are limited and focus on one of the spatial,
    temporal, or semantic dimensions depending on their design. STSDMSs prioritize
    data management in one of the three dimensions, reducing their performance in
    queries or operations that prioritize the other dimensions. Based on the requirements
    and nature of the data in Agriculture 5.0, eleven spatio-temporal semantic data
    management systems have been selected. This paper aims to review these Spatio-Temporal
    Semantic Data Management Systems (STSDMSs) for Agriculture 5.0 and to identify
    the future challenges using a systematic literature review technique [18] whose
    methodology consists of the following five steps. • Defining a question: What
    are the requirements of Agriculture 5.0 in terms of managing the spatio-temporal
    semantic data generated? (presented in Section 2) • Search for literature: Eleven
    STSDMSs have been selected from the literature and current projects according
    to the needs outlined in Agriculture 5.0. In addition, some approaches designed
    for other application domains with the potential to meet the needs and adapt to
    the Agriculture 5.0 domain have been selected. (presented in Section 3) • Extracting
    information from selected works: Each STSDMS is presented and analyzed, respectively,
    in a systematic format. (presented in Section 3) • Assessing the quality of selected
    works: An evaluation of the selected STSDMSs is carried out in terms of interoperability,
    scalability, accessibility, real-time performance, etc. (presented in Section
    4) • Conclusion statement: Current challenges are detected and future research
    directions to solve them are presented (Section 4.2). In addition, a proposal
    is presented to address the needs outlined in Agriculture 5.0. (presented in Section
    5) 3. Literature review on selected spatio-temporal semantic data management systems
    The first and most characteristic phase of the implementation of IoT in agriculture
    arises from the collection of data by the devices deployed in the action scenarios.
    For this reason, the correct characterization of the data and the subsequent development
    of systems capable of managing them are critical for the posterior processing
    and development of solutions. The data captured by agricultural devices provide
    information on three dimensions: (i) Spatial, (ii) Temporal, and (iii) Semantic
    [19]. This type of information description is provided by semantic models of linked
    data [20]. The current literature presents numerous surveys and reviews that analyze
    a variety of data management systems for agriculture. Notable among them are reviews
    on crop data management [21], reviews on agricultural information management systems
    [22], [23] or reviews on remote sensing [24] and IoT implementation in modern
    agriculture [25]. These studies provide a review of systems and technologies capable
    of managing agricultural source data, but do not focus on data management of a
    spatio-temporal semantic nature, which is necessary to enable Agriculture 5.0
    scenarios. STSDMSs are indispensable in the current agricultural paradigm, in
    which various static and moving devices share the sensing information of agricultural
    scenarios. For this reason, this article takes a novel and specific approach,
    offering a review of the literature on STSDMSs for Agriculture 5.0. The purpose
    of this article is to review the current literature on the STSDMSs required for
    the achievement of Agriculture 5.0. The implementation of STSDMSs in agriculture
    is a novel approach that reflects the needs exposed by the integration of advanced
    technologies and IoT in modern agriculture. For this reason, in the current literature,
    there are still few systems capable of providing data management focused on the
    spatio-temporal semantic nature of the data generated by devices and agents deployed
    in the field. To provide a representative assessment of the current literature
    on STSDMSs in Agriculture 5.0, systems that have not been developed for this purpose
    have been discarded. Examples of discarded systems include: (i) FarmLogic/FarmPAD
    [26] and Connected Farm Field [27] because of their limitations in handling data
    from agricultural devices and sensors; (ii) Farmbrite [28] and Farmplan (Gatekeeper)
    [29] as these systems have been developed for business management, planning and
    annotation of tasks, events or reminders, they do not support the management of
    data from IoT devices on the farm; (iii) FarmCommand [30] as these are closed
    solutions, offering data management only for company-specific hardware and sensors;
    and (iii) FarmLeap [31] as it is focused on technical analysis, economic simulation,
    and environmental diagnostics. This section presents the eleven Spatio-Temporal
    Semantic Data Management Systems selected from the current literature, as explained
    in Section 2.2. 3.1. FIS and FMIS Data generated by agricultural devices are linked
    to the use of geographic information systems (GIS). GIS platforms and systems
    include tools for the storage, analysis, manipulation, and mapping of any kind
    of georeferenced information. Due to the relevance of spatial information in precision
    agriculture, a specific GIS system was developed, named Field-Level Geographic
    Information System (FIS) [32]. However, this system was developed for older operating
    systems such as Windows 3.1x, 95, and 98. The updated version of FIS is named
    the Farm Management Information System (FMIS). According to Burlacu et al. [33]
    FMIS supports farmers in various areas or activities, from operational planning,
    implementation, and documentation to evaluation of the work done in the field
    during the exercise. However, despite its upgradability, FMIS does not consider
    the time dimension and its adaptation to scenarios requiring real-time action
    or response is very limited. 3.2. GeoFIS To facilitate the process of obtaining
    spatial information and making informed decisions for agricultural management,
    the open-source GeoFIS software was developed. In [34], Corentin Leroux et al.
    evaluate the capabilities of GeoFIS, together with its embedded algorithms, to
    address the needs expressed by farmers and their advisors or spatial analysts
    when dealing with agricultural data. Specifically, GeoFIS has been evaluated through
    three case studies, including different types of crops and the ability of the
    algorithms embedded in the software to meet the needs expressed by farmers. The
    main limitation exposed by GeoFIS arises from its own specialized implementation
    in the spatial dimension or georeference of the data. It offers a certain limitation
    in the management of temporal and semantic information provided by agricultural
    data in agricultural digitization scenarios. 3.3. JD Urban Spatio-Temporal data
    engine (JUST) Due to the increasing generation of geo-positioning tagged data,
    a large volume of spatio-temporal data is currently generated in the IoT application
    domains. Current solutions need to adapt to the new paradigm where diverse devices
    generate large amounts of spatio-temporal data, requiring an efficient, scalable,
    and adaptive spatio-temporal data management system. Some of the systems developed
    to date have been focused on different application domains, using Big Data techniques
    for the correct management of the growing volumes of data. However, due to the
    nature of the sensed data, their adaptability to new domains lies in the integration
    or upgrade to new data models. JD Urban Spatio-Temporal data engine (JUST), presented
    by Ruiyuan Li et al. [35] in its version 1.1.0, offers an urban spatio-temporal
    data engine. JUST has been designed for the management of large volumes of spatial
    and temporal data, incorporating a distributed NoSQL data warehouse as underlying
    storage and GeoMesa [36] as indexing tool, together with Apache Spark [37] as
    execution engine. The main contributions put forward by the JUST system include:
    • Design and implementation of JUST as a holistic distributed system for the efficient
    management of large volumes of spatio-temporal data. • Two new indexing techniques,
    Z2T and XZ2T, to speed up spatio-temporal data gathering or querying. In addition,
    a compression mechanism applied to fields with large bytes is introduced, using
    the gzip or zip compression method to reduce storage costs and improve query efficiency.
    • A complete SQL engine is implemented to provide an SQL-like query language,
    called JustQL, which simplifies data query operations. The implemented SQL engine
    includes predefined operations, among which three types of spatio-temporal query
    operations are highlighted: (i) spatial range queries, (ii) spatio-temporal range
    queries, and (iii) k-NN (Nearest Neighbor) queries for point-based records. •
    JUST is designed to be deployed as a Platform as a Service (PaaS). The paper presents
    the evaluation of the JUST system against two real datasets and one synthetic
    dataset. Datasets include: (i) Traj, which contains the trajectories of more than
    48,000 JD Logistics trucks. (ii) Order, which includes orders or purchases from
    JD Mall. This dataset contains the time stamp of the order and the delivery address
    or geoposition. (iii) Synthetic, generated from the Traj dataset, up to 1 TB of
    data, to evaluate the scalability of JUST. The main problem exposed by the JUST
    system to meet the needs of digital agriculture or agriculture 5.0 scenarios lies
    in its specific design for urban spatio-temporal data. For its adaptation to the
    Agriculture 5.0 domain, the system must be adapted to work with data models focused
    on sensor networks or specific to agriculture. Additionally, due to the inherent
    connectivity limitations of agricultural scenarios, computational capacity needs
    to be brought closer to the edge or the architecture needs to be redesigned to
    distribute it between the edge and the cloud. 3.4. SEMAP The development of spatio-temporal
    data management systems to enable agricultural digitization has a long way to
    go in terms of research and improvement. Due to the increasing integration of
    agricultural devices and machinery into sensor and data management systems for
    process automation and monitoring, there is a large research effort in the literature
    to develop new data management systems or to adapt existing systems from other
    application domains. Semantic Environment Mapping Framework (SEMAP), presented
    by Henning Deeken et al. [38], provides a framework for spatial data storage and
    analysis capable of performing spatial reasoning on a multimodal environment model.
    This system was designed for the spatio-semantic management of robotic planning.
    However, in 2018 [39] and 2019 [40], the SEMAP framework was successfully applied
    in the domain of digitization of agricultural processes. The application of the
    SEMAP framework in agriculture offers an innovative approach through the management
    of relationships between the agricultural machinery involved in a given scenario
    (M2M), as well as the communication and machine-environment relationships. SEMAP
    is agnostic in terms of robot control architectures; however, it implements a
    Robot Operating System (ROS) interface, which provides services for the insertion,
    modification, or deletion of the contents of the environment model. The objective
    of SEMAP is to provide information about objects, with their geometric representations,
    and the environment, allowing spatial analysis and semantic inference. The data
    management architecture presented by SEMAP arises from the clear differentiation
    between semantic and spatial information. To manage the structure of spatial and
    semantic information, SEMAP has two dedicated databases for each dimension (see
    Fig. 4). A knowledge base (KB), maintained with Apache JENA and whose data are
    represented in Web Ontology Language (OWL) [41] and a spatial database, implemented
    as an extension of PostGIS. To ensure performance optimization in terms of data
    storage and gathering, both query systems are combined to support queries that
    contain semantic and spatial aspects, such as “Are there any devices in this crop
    field?”. For the semantic representation of agricultural concepts, the SEMAP knowledge
    base has been adapted through the ontology called AgriCo. The AgriCo ontology
    enables the description of concepts such as crop fields, farms, and agricultural
    machinery itself. This ontology has been developed in-house, as part of the adaptation
    of SEMAP to the precision agriculture domain. AgriCo is based on the LogiCo logistic
    core ontology, exposed by Daniele et al. [42]. Download : Download high-res image
    (230KB) Download : Download full-size image Fig. 4. SEMAP: High-level architecture
    for the combination of semantic and spatial information. The main limitations
    exposed by SEMAP in agriculture consist of: (i) The absence of management of the
    temporal dimension provided by the data. (ii) Due to the complexity of the 2D
    and 3D description of the spatial dimension of the data, SEMAP requires high computational
    capabilities. (iii) Difficult adaptability to solutions requiring real-time response
    or deployment at the edge, due to the need for high computational capabilities.
    (iv) Due to its adaptability to the agricultural domain through the development
    of AgriCo as the native ontology of the system, it exposes a lack of semantic
    interoperability with other agricultural data models. 3.5. Open spatio-temporal
    data warehouse for agriculture In the last decade, advances in Web 2.0 technology
    have improved the accessibility of data through the cloud, experiencing an increase
    in Linked Open Data, Linked Open Statistical Data, and Open Government Data available
    for sharing. The next frontier, the Web 3.0 or Semantic Web, pursues the development
    of a smarter, more intuitive, and connected web experience through data access
    and information availability. However, the availability and accessibility of data
    for further production analysis in agriculture is currently very limited and rarely
    contains attributes for spatio-temporal analysis. In [43], Irya Wisnumbhadra et
    al. propose the development of a spatio-temporal data warehouse designed to analyze
    agricultural production through open data sources. The warehouse consists of several
    open data sources from the agricultural module of the Village and Rural Area Information
    System (SIDeKA). The objective of the data warehouse is to offer a service-oriented
    architecture through expressive performance that helps executives in making decisions
    on agricultural production analysis based on spatio-temporal data. The data warehouse
    has been developed using MobilityDB, an extension of PostGreSQL DBMS [44], and
    PostGIS. The system provides query operations for agricultural production analysis
    using a mobility query function to summarize, drill down, segment, split, and
    aggregate spatial and temporal data, with an average execution time of less than
    one second. The openness of the data source with the 5-star index provides the
    opportunity to link and extend the data source with the big data catalog of the
    Internet and the inference capability of the semantic web. 3.6. Integrated spatio-temporal
    system for agriculture Decision support in agriculture is limited by spatio-temporal
    data management systems and the spatio-temporal knowledge extracted from their
    processing. In [45], N.A. Lorentzos et al. propose an integrated spatio-temporal
    system for managing time-varying data and knowledge. The system integrates a time
    series oriented database (TSDB), a rule-based expert system (ES), and a geographic
    information system (GIS) to enable spatio-temporal data and knowledge management
    in agriculture. The architecture of the integrated spatio-temporal system presented
    by N.A. Lorentzos et al. is depicted in Fig. 5. It consists of two loosely coupled
    main components, DK (Data and Knowledge) and S (Spatial data). The DK component
    integrates two subcomponents, the ES shell and the TDBMS (Temporal DataBase Management
    System). The TDBMS is subordinate to the ES shell. Moreover, the S component is
    made up only of a GIS. This system has been applied and validated in agriculture
    and related areas. Some of the applications of the system include: Download :
    Download high-res image (180KB) Download : Download full-size image Fig. 5. Architecture
    of the integrated spatio-temporal system proposed by N.A. Lorentzos et al. • Soil
    sustainability and soil evaluation. • Time-varying land uses. • Beekeeping. •
    Redistribution of cultivated land. • Earthquake prediction. The Integrated spatio-temporal
    system provides one of the first integrations of temporal and spatial dimensions
    in data management systems for agriculture. 3.7. mySense data management architecture
    The mySense environment, proposed by Raul Morais et al. in [46], offers an open
    source solution for precision agriculture (PA) and precision viticulture (PV)
    monitoring applications. The data management architecture developed in the mySense
    environment offers a novel approach capable of optimizing the agricultural data
    management process, thanks to a distributed repository between relational and
    non-relational databases. This approach makes it possible to distribute the data
    injection and storage process according to the nature, volume, and dynamism of
    the data in one or the other database. The data management architecture exposed
    in the mySense environment consists of a distributed, multi-tier layered architecture.
    This architecture is composed of two databases (MySQL and MongoDB) wrapped by
    a software management layer capable of coordinating and processing the acquired
    data. The mySense data management architecture provides a RESTful API that interacts
    with the structured database (MySQL) to store high latency and low volume data,
    such as sensor and platform user information. The unstructured database (MongoDB)
    is used to handle the voluminous and dynamic nature of the heterogeneous data
    generated by sensors. In addition, time-based agents such as Data Slider, Objects
    Reporter, and Data Account Manager optimize data storage and accessibility. Data
    management functions are implemented in the Data Manipulation Manager (DMM) interface.
    The functions offered by the DMM interface include preliminary filtering of data
    sets by date range to improve efficiency across the time dimension. The mySense
    environment provides a data visualization interface geared towards a simple user
    experience, to visualize the data sent by each device or sensor deployed. 3.8.
    Agri-IoT Different application domains such as smart cities and healthcare have
    seen major advances in the research and development of frameworks and platforms
    to manage smart applications over sensor networks and IoT. The development of
    agricultural frameworks or platforms has benefited from previous research and
    advances in similar domains, with similar requirements, such as smart cities.
    Based on the different approaches presented in the literature, the Agri-IoT semantic
    framework [47] offers an application-oriented platform for smart farming applications,
    capable of managing and reasoning about heterogeneous data captured by agricultural
    devices. The Agri-IoT framework uses semantic annotation of data for sensor/data
    flow discovery and subsequent real-time adaptive reasoning. The semantic annotation
    of Agri-IoT is based on lightweight information models developed from ontologies
    designed for sensor networks such as SSN [48] and OWL-S [49] or agricultural models
    such as AGROVOC [50], AgOnt [51], and the Agricultural Ontology Service (AOS)
    [52]. The validation of the Agri-IoT framework shows how the triple-store or knowledge
    database oriented data management architecture offers very limited capabilities
    in data query or exploitation scenarios. Validation consists of the excitation
    of the system against continuous query execution with RDF stream processing techniques
    such as CSPARQL. [53] and CQELS [54] (queries with SPARQL syntax). However, the
    results show high latencies, memory and process consumption in scenarios with
    a limited number of sensors and a low complexity of queries executed. From 700
    sensors onward, queries are delayed by more than 10 s, even experiencing delays
    of up to minutes. 3.9. AFarCloud AFarCloud (Aggregate FARming in the CLOUD) is
    the result of an ECSEL JU project [55], [56] in which a distributed platform is
    developed that enables the integration and cooperation of cyber–physical systems
    in real time. The aim of the platform is to increase efficiency, productivity,
    animal health, feed quality, and reduce farm labor costs through monitoring, analysis,
    task automation, and decision support. To reduce processing times, enable agile
    repository management, and ensure real-time execution, the AFarCloud data model
    is based on a lightweight JSON syntax, with strong temporal and spatial characterization
    of the data. The data management architecture and repositories are distributed
    between time series-oriented databases (TSDBs) for historical observations, and
    relational databases for the registration and management of the latest measurements
    captured by each deployed agent. These types of architectures offer very short
    query and data injection times. The AFarCloud data model mainly comprises three
    distinct data sets: 1. Observations generated by devices (sensors and actuators)
    deployed in the field. 2. Measurements captured by sensors embedded in collars
    fitted to the cattle’s necks. 3. State Vectors (SVs) of autonomous or semi-autonomous
    vehicles and unmanned aerial vehicles (UAVs). The collection of schemas defining
    the semantic spatio-temporal data model developed in the AFarCloud platform is
    collected in [57]. The main shortcoming detected in the data management system
    implemented in the AFarCloud platform lies in the reasoning and processing of
    relationships and semantic information. The components in charge are decoupled
    from the repository itself. However, the agile data collection through the temporal
    and spatial dimension offered by the STSDMS, allows for a reduced response time
    in the processing and aggregation of semantic information through decoupled components.
    Table 1. Evaluation results of selected STSDMSs (I). STSDMS name Accessibility
    Scalability Interoperability Real-time operation FIS FMIS GeoFIS JUST SEMAP ST
    data Warehouse ST system for agriculture mySense Agri-IoT AFarCloud DEMETER Total
    stars of evaluation criteria 22/33 21/33 15/33 18/33 Table 2. Evaluation results
    of selected STSDMSs (II). STSDMS name Big ST data management Agricultural application
    Distributed cloud–edge Spatial, temporal and semantic dimensions FIS FMIS GeoFIS
    JUST SEMAP ST data Warehouse ST system for agriculture mySense Agri-IoT AFarCloud
    DEMETER Total stars of evaluation criteria 19/33 30/33 14/33 26/33 3.10. DEMETER
    Horizon 2020 DEMETER (Building an Interoperable, Data-Driven, Innovative, and
    Sustainable European Agri-Food Sector) [58], [59] aims to digitally transform
    the European agri-food sector by adopting IoT technologies, data science, and
    precision farming technologies to promote long-term sustainability. The aim of
    the project is to equip farmers and cooperatives with the ability to extract knowledge
    from their existing machinery and platforms, improving the decision-making process.
    The data management system implemented in the DEMETER architecture focuses on
    the management of the relationships and semantic descriptions captured by the
    devices and agents participating in the platform. To ensure a powerful semantic
    characterization of the data, DEMETER develops the Agricultural Information Model
    (AIM) [60]. To provide semantic interoperability with other agricultural data
    models, the platform includes enabling components capable of translating the data
    obtained by queries and injections into the repositories. The interest in the
    DEMETER smart platform is especially driven by the European data strategy [61],
    which aims to make Europe a leader in the data society. Due to the strong semantic
    characterization of the data modeled under AIM, applications requiring real-time
    or time-series oriented management or geopositioning tags offer high response
    times. However, through translation-enabling components, the repositories implemented
    in the AFarCloud platform 3.9 have been integrated into the DEMETER architecture.
    This provides an ideal symbiosis for the different needs of the applications and
    solutions developed in Agriculture 5.0. 4. Evaluation, upcoming challenges and
    future directions After presenting the selected spatio-temporal semantic data
    management systems for agriculture, we will evaluate each of them against eight
    aspects including accessibility, interoperability, real-time operation capability,
    etc. According to the results of the evaluation, Section 4.2 identifies future
    challenges and research lines in the development of STSDMSs for agriculture 5.0.
    Finally, a proposal capable of accommodating the needs and challenges detected
    after the evaluation of the selected STSDMS is presented, based on a horizontally
    and vertically distributed architecture (see Section 5). 4.1. Evaluation of selected
    STSDMSs Table 1, Table 2 show the evaluation results of the selected STSDMSs.
    For each of the aspects under evaluation: (i) If the aspect was fully considered
    and evaluated, with descriptions and technical details, it gets three stars (best);
    (ii) If the aspect is partially mentioned or no specific evaluation results are
    provided, it gets two stars (medium); (iii) If the aspect is not considered, it
    gets one star (worst). Regarding the aspect that evaluates whether the system
    operates on spatial, temporal, and/or semantic dimensions, a score of one, two,
    or three stars is attributed according to the number of dimensions considered.
    For example, the SEMAP system only considers the spatial and semantic dimensions
    of the data for its management, so it obtains two stars in this aspect. When an
    aspect obtains a higher total number of stars, it indicates that it has been thoroughly
    evaluated and considered in the implementation of the systems presented in the
    literature. The aspects that have obtained a lower score represent a potential
    future challenge in the design and implementation of STSDMSs in agriculture 5.0,
    and should therefore be considered with special attention in future research lines.
    The evaluation criteria have been selected from the Software Quality Requirements
    and Evaluation (SQuaRE) standard, including accessibility, interoperability, scalability,
    and functionality completeness (ISO/IEC 25010:2011, BSI Standards Publication,
    https://www.iso.org/standard/35733.html). Table 3 summarizes the results obtained
    for each of the evaluated systems. The resulting average evaluation of all selected
    STSDMSs archives 15.09 stars (62.88%). The results indicate that the development
    and research on spatio-temporal semantic data management systems still have a
    long way to go to meet the needs outlined in Agriculture 5.0. The best of the
    STSDMSs selected is the AFarCloud system, which addresses most of the evaluation
    aspects. In contrast, the FIS system is ranked last with a total of 11 stars out
    of 24, due to inadequate consideration of accessibility, interoperability, real-time
    operation capability, etc. Table 3. Overall remarks of selected STSDMSs. STSDMS
    name Overall remark STSDMS name Overall remark FIS 11/24 (45.83%) ST system for
    agriculture 13/24 (54.17%) FMIS 12/24 (50.00%) mySense 17/24 (70.83%) GeoFIS 12/24
    (50.00%) Agri-IoT 16/24 (66.67%) JUST 15/24 (62.50%) AFarCloud 20/24 (83.33%)
    SEMAP 14/24 (58.33%) DEMETER 19/24 (79.17%) ST data Warehouse 16/24 (66.67%) 4.1.1.
    Accessibility This aspect mainly refers to the Graphical User Interface (GUI)
    of an STSDMS [10], which facilitates the description and use of the query and
    data injection services in the system. The GUI is a necessary component for providers
    of devices, services, components, clients, and users who wish to consume or inject
    data into the system. Decision support systems, automation systems, vehicle or
    robot mission managers, and monitoring or tracking systems for livestock and deployed
    devices/agents can be integrated into the platform through the documentation and
    functions provided in the STSDMS GUI. The evaluation shows that the development
    of user interfaces is one of the components present in the literature on STSDMSs
    for agricultural digitization. The reason for this is that user interfaces provide
    a layer of abstraction over the internal complexity of data management systems.
    However, there is still a long way to go in this regard, as most of the GUIs presented
    in the systems are complex, oriented towards the technical integration of components,
    making it difficult for the farmer to query the data [62]. This results in the
    need to integrate monitoring or tracking systems for data consultation by the
    end user. As shown in Table 1, accessibility is one of the most considered aspects.
    GeoFIS, SEMAP, mySense, and the STSDMS of DEMETER offer good GUIs for operators,
    enabling their use by farmers and agricultural experts through user-friendly interfaces.
    Good examples of GUIs directly integrated into STSDMSs are presented in Fig. 6.
    Fig. 6(a) shows the user interface developed with Swagger [63] of the spatio-temporal
    data management system of the AFarCloud platform. This type of interface is oriented
    towards the documentation of the system’s query and injection service, enabling
    the integration of services that need to be fed with the data stored in the repositories.
    Fig. 6(b) describes the user interface of the mySense query and data management
    system. This interface enables end-user interaction, reducing the complexity of
    the raw query functions. Download : Download high-res image (739KB) Download :
    Download full-size image Fig. 6. Examples of selected GUIs. 4.1.2. Scalability
    Scalability represents the ability of an STSDMS to process, store, and manage
    increasing amounts of data, queries, and injection requests [64], [65]. The scalability
    of an STSDMS thus indicates the ability to integrate new devices and services
    into the platform, and even the ability to manage information from more scenarios,
    farms, or crops. The STSDMSs developed for the AFarCloud and DEMETER smart platforms
    stand out for their scalability through the management of the growing volume of
    data from various agricultural scenarios all over Europe, populated by a multitude
    of sensors and devices. As shown in Table 1, the scalability of STSDMSs still
    has a long way to go in terms of research and improvement. This is mainly due
    to systems whose repositories are purely knowledge base oriented or triple-store
    oriented. Due to the complexity and volume of semantic descriptions and relationships
    between agents and properties, the scalability of these systems is very limited.
    One of the main approaches to overcome this problem is the division between the
    semantic description of entities, stored in a dedicated knowledge base (triple-store)
    and the storage of time series or observations in a time series oriented database.
    4.1.3. Interoperability Interoperability focuses on the ability to integrate services
    and manage data from heterogeneous agents and components. Interoperability is
    one of the most important features in STSDMSs due to the need to capture and manage
    data generated by multiple sources and devices deployed in the scenarios of action;
    as well as the ability to interact with other components and solutions for visualization,
    analysis, decision support, etc. By definition, an STSDMS acts as middleware for
    the agricultural IoT platform for which it has been designed (see Fig. 7). The
    ISO/IEC 21823-1:2019 [66] standard defines five levels of interoperability for
    IoT systems: Download : Download high-res image (239KB) Download : Download full-size
    image Fig. 7. Spatio-Temporal Semantic Data Management System (STSDMS) as semantic
    middleware for agriculture 5.0. • Transport interoperability involves establishing
    a communication infrastructure to exchange data over different transport protocols
    or networks without loss or corruption of data. It also manages data quality of
    service (QoS) requirements, such as delivery, timeliness, ordering, durability,
    lifespan, and fault tolerance. • Syntactic Interoperability is the ability of
    different IoT systems to exchange data using a common data format or syntax. This
    ensures that the data are correctly interpreted and processed by the receiving
    system, without ensuring that the meaning of the information is correctly understood.
    • Semantic Interoperability aims to ensure that all entities attribute the same
    meaning to the information exchanged by using metadata and shared information
    models (ontologies). • Behavioral Interoperability aligns and integrates business
    processes to achieve the expected result of information exchange. • Legal or Policy
    Interoperability ensures that organizations operating under different legal frameworks,
    policies, and strategies can exchange information and collaborate effectively.
    This includes issues such as data privacy, security, and ownership, as well as
    compliance with industry standards and regulations. The Semantic Interoperability
    level is particularly important in the design and implementation of an STSDMS.
    The absence of standards in data models for agriculture and agricultural devices
    makes the acquisition of semantic and syntactic interoperability difficult. The
    absence of interoperability results in the generation of data silos and exposes
    the need to implement gateways or specific translator components to enable the
    integration of services. As shown in Table 1, interoperability is still one of
    the main challenges for the achievement of Agriculture 5.0. The DEMETER STSDMS
    is the only system for which interoperability capabilities have been included
    in its design. 4.1.4. Real-time operation The ability of an STSDMS to deliver
    real-time performance lies in the ability to deliver the information captured
    by the devices and agents deployed in the field without delays induced by batch
    storage or additional processing [67]. This aspect is related to the ability to
    scale the system and respond to query requests made by users or integrated components
    [68]. There are three main approaches to achieve real-time operation or to reduce
    the delay times between data injection and the system’s ability to deliver those
    data as a response in its query interface: • Edge processing: Distribute the STSDMS
    architecture between the cloud and the edge according to the processing capabilities
    required. The latest measurements or data captured by the deployed devices will
    also be stored at the edge, so that they can be automatically queried by actuators
    or services that require real-time action. • Dedicated database: By including
    a relational database solely dedicated to storing the latest time series generated
    by each device, sensor, or agent deployed, the rapid extraction of the latest
    measurements or current status is enabled. This database has to keep a very small
    size, eliminating semantic complexity and historical data storage. • Lightweight
    data model and ontology: By implementing an STSDMS based on a data model with
    lightweight syntax (such as JSON) and reduced semantic complexity, processing
    and repository management delays will be reduced. However, other factors, such
    as the heterogeneity of the data generated by different devices and the increasing
    volume of stored data, will affect the performance of the system, increasing query
    delays. Additionally, the complexity of query operations will affect response
    times, due to the delays introduced by the planning of the data distribution operation.
    Table 1 shows how the selected STSDMSs exhibit a lower real-time operation capacity
    as the semantic complexity of the data description increases. The AFarCloud STSDMS
    provides a good example of a design oriented to real-time operation capability.
    Current agricultural proposals still have a long way to go in terms of research
    to match the needs and capacity for real-time operation. 4.1.5. Big spatio-temporal
    data management This aspect describes the ability of the system to operate with
    a large number of injections and queries of spatio-temporal nature, in a repository
    with a large volume of spatio-temporal data [69]. As discussed in aspect Scalability,
    an STSDMS must cope with the increasing volume of requests and data stored by
    the system. However, this aspect evaluates whether the system has been validated
    or stressed by the high demand of requests against a repository with a high volume
    of spatio-temporal data. Due to the seasonality of the data captured by weather
    stations or sensors deployed in crops, Agriculture 5.0 offers an optimal scenario
    for the study of historical and seasonal data. The large number of devices and
    sensors deployed in agricultural scenarios results in a high volume of data that
    must be stored in repositories. Similarly, spatio-temporal queries that aim to
    extract or post-process historical data for knowledge extraction are subject to
    the exploitation of highly populated repositories. In this aspect, the response
    capacity of the selected STSDMSs to spatio-temporal historical queries without
    blocking the service has been reviewed. 4.1.6. Agricultural application (adaptability)
    Several STSDMSs designed for specific application domains other than agriculture
    5.0 are described in the current literature. Some domains such as smart cities
    or Industry 4.0 present scenarios with needs equivalent to those of agricultural
    scenarios. STSDMSs designed and implemented for a specific application domain
    often offer resistance in their adaptation to other domains, mainly due to the
    use of native data models and the implementation of rigid query interfaces. However,
    self-adaptive systems [70] or solutions developed in other domains with characteristics
    similar to agriculture can offer very interesting solutions with low adaptation
    effort. In this article, some systems designed for other application domains have
    been studied, with similar or equivalent characteristics and needs to those exposed
    in Agriculture 5.0. This aspect evaluates whether the system under study was directly
    designed and implemented for the agricultural domain (three stars), or whether
    it can be adapted (one star), due to a less rigid implementation. Finally, if
    the authors present an assessment of its adaptability to the agricultural domain,
    a score of two stars is obtained. The systems presented in this article are at
    least adaptable to the agricultural domain if they were not originally designed
    for this domain. Due to the large research effort in other application domains
    with characteristics similar to the agricultural domain, it is important to select
    some of the most relevant solutions from the literature, such as the JUST and
    SEMAP systems. 4.1.7. Distributed cloud–edge This aspect refers to the distribution
    of the data management architecture in layers, between the edge, the fog, and
    the cloud [71]. Due to the high power and computational resource requirements,
    most data management systems in agriculture offer a centralized architecture in
    the cloud [72]. However, agriculture as an application domain exposes certain
    limitations that cannot be accommodated in centralized systems, mainly due to
    the lack of connectivity in agricultural scenarios, the need for data anonymization,
    and the delays introduced in communications with the cloud. To enable task automation
    and adaptability to the aforementioned constraints, data management systems favor
    distributed architectures capable of hosting different functionalities and responsibilities
    in layers. As shown in Table 2, the distribution of agricultural data management
    systems still exposes a wide avenue for research and development. None of the
    selected systems has hosted such distributed architectures in their design. 4.1.8.
    Spatial, temporal and semantic dimensions This aspect describes the number of
    dimensions considered by the STSDMS for agriculture under analysis. The data generated
    by the devices and sensors deployed in agricultural scenarios provide information
    on all three dimensions, due to the spatio-temporal-semantic nature of the agricultural
    environment [73]: (i) Geopositioning, where the data were captured; (ii) Timestamp,
    when the data were generated; (iii) Semantic, meaning of the data or relationships
    with other actors and environment. A system capable of managing information about
    the three dimensions in which any heterogeneous data captured in an agricultural
    scenario are framed is able to provide complete information about the reality
    observed or sensed in the agricultural scenario. However, this information is
    a source of complexity for the management and storage of the data itself, which
    requires a greater optimization effort. A data management system has to be designed
    from a data model that considers the description of the three dimensions to become
    a complete STSDMS. However, the current literature presents systems that focus
    on one or two dimensions, with the aim of reducing the complexity and computational
    requirements for spatial, temporal, and semantic management. As shown in Table
    2, systems initially designed to handle all three dimensions perform better in
    all other aspects. The main challenges identified in the research on STSDMSs to
    accommodate the correct management of the three dimensions are grouped into: (i)
    the design of a data model capable of characterizing the sensed information in
    all three dimensions; (ii) the distribution and cooperation of specialized databases
    within a single repository (Knowledge DB, Time-series DB, SQL DB, etc.); and (iii)
    the optimization of query and injection functions. 4.2. Upcoming challenges Based
    on the summary of the eleven STSDMSs provided in Section 3 and the evaluation
    result in Tables 1, 2, and 3, a number of future challenges are identified. These
    challenges show the development trends and potential improvements of STSDMSs for
    researchers in the future. By overcoming the challenges identified, STSDMSs will
    be able to better serve the achievement of Agriculture 5.0. • Simplifying GUIs
    to improve accessibility to STSDMSs: Most of the selected STSDMSs provide graphical
    interfaces to query and inject data through the system. However, most of the interfaces
    presented are oriented towards the documentation of the operations and functions
    offered by the system, for their integration in agricultural platforms or the
    coupling of solutions. These interfaces are geared towards technical experts,
    making them difficult to use for farmers and professionals in the agricultural
    sector. Farmers are certainly not familiar with the IT skills and repository management
    languages required for the use of STSDMSs. It is suggested to design GUIs as simple
    as possible. Simple, user-friendly, and end-user oriented GUIs offer a very powerful
    tool for farmers. Data visualizations in the form of maps, tables, lists, and
    graphs integrated as GUIs of the STSDMS itself, allow the farmer to know the current
    status and historical evolution of the agricultural scenarios at a glance. Furthermore,
    these interfaces offer a powerful resource for the detection of anomalies and
    the prevention of risk situations, including the farmer or end-user in the loop.
    One of the most novel approaches is to enable the retribution of data through
    natural language queries [74]. After all, to provide an optimal solution for farmers,
    resistance to their integration into existing operations must be reduced or eliminated;
    providing the necessary information for observation and decision-making based
    on precision data captured by the agents deployed in the field. • Definition of
    a standard agriculture data model: Interoperability is one of the main challenges
    in the development of STSDMSs. This problem stems from the lack of semantic interoperability
    induced by the numerous number of native agricultural data models defined to date.
    The absence of standard data models for agriculture increases the heterogeneity
    of data generated by devices and sensors in the agricultural domain. Currently,
    integration of translation systems or gateways in STSDMSs is one of the most widely
    accepted solutions, but it requires a great deal of implementation effort. One
    of the most innovative proposals consists of automating the mapping or translation
    process between agricultural data models [75]. However, the definition of a standard
    data model would reduce the integration effort between solutions developed for
    agriculture. The interest to address the lack of interoperability in the agri-food
    sector is mainly driven by initiatives such as GAIA-X [76]. • Interoperability
    through machine translation: Current STSDMSs offer specific solutions for the
    platforms or projects for which they were designed. The heterogeneity of the data
    and the variety of agricultural data models generate resistance to their adaptability
    to other existing platforms or solutions. To address this problem, STSDMSs must
    integrate new techniques for the development of an interoperable system [77].
    The integration of machine translation components, based on Machine Learning (ML)
    or Neural Networks (NNs) models, can provide the necessary capabilities for automatic
    translation between the input and output data models to the STSDMS [78]. • Distribute
    the STSDMS architecture between the cloud and the edge: In agriculture, there
    are numerous solutions that require real-time action. Some examples include robotic
    livestock monitoring and herding [79], predator howling systems [80], or fire
    detection and mitigation systems [81]. Connectivity issues and delays introduced
    in communication with cloud-centric STSDMSs make it difficult to implement such
    solutions. One of the main concerns raised by farmers is the anonymization of
    the data captured on their farms. Anonymization must be done prior to injection
    into repositories or data centers accessible by potential competitors or cooperatives.
    To avoid these problems, computing, data management, and performance capabilities
    must be brought closer to the edge. To achieve this goal, distributed architectures
    must be defined between the edge, the fog, and the cloud. Delegating to each level
    of the STSDMS architecture the necessary capabilities for historical or current
    data management. • Distribution of repositories in DBs for historical and current
    data: The increasing volume of data stored in repositories managed by an STSDMS
    is directly related to system performance losses. Queries executed on repositories
    populated with a large volume of data require a high use of computational resources,
    slowing the system [82]. However, there is a clear differentiation between the
    use of historical and current data in the system. Historical data are targeted
    for further processing and analysis or even serve to train machine learning or
    AI models. However, current data serves as input for decision-making, monitoring
    of the current crop status, or detection of anomalies, and consequent action.
    For this reason, real-time data query needs are related to the latest data injected
    into the system. Given this clear differentiation, it is recommended to distribute
    the internal STSDMS repositories or databases, offering a database that only hosts
    the latest data captured by each deployed agent and overwrites them when receiving
    new injections. This database will retain a small footprint with the ability to
    provide real-time responses. Due to the lower resource usage, it can be deployed
    on the edge, enabling the system to respond quickly and eliminating communication
    delays. Similarly, databases in charge of historical data management will offer
    a longer response time but will be able to handle the analysis and processing
    of the data, extracting the necessary knowledge to support agricultural tasks.
    • Performing analysis on historical information: Implementing spatio-temporal
    continuous queries on historical data enables the analysis and discovery of knowledge.
    Continuous queries are a tool capable of defining database queries to be executed
    on a scheduled basis. Simple queries such as calculating minimum, maximum, and
    average values for environmental and crop condition parameters enable anomaly
    detection. Due to the seasonality of environmental data provided by weather stations,
    historical information analysis offers a powerful tool for forecasting and prediction
    [83]. Continuous queries provide a tool capable of processing, aggregating, and
    analyzing large amounts of data at runtime. This type of calculation eliminates
    the delays introduced in future STSDMS queries [84]. Furthermore, extraction of
    knowledge from the raw data stored in the repositories is enabled. For this reason,
    the correct planning and design of continuous queries offer a considerable improvement
    in the performance of STSDMSs in terms of historical data retrieval and analysis.
    • Adopting knowledge from agricultural experts: STSDMSs manage data and observations
    generated by sensors and devices deployed in the field. The diversity and complexity
    of agricultural environments make the input of farmers and experts essential to
    improve the information provided. It is suggested to involve farmers in the process,
    allowing them to add annotations and semantic data to correct and complement the
    information collected by field agents [85]. In STSDMSs, an interactive interface
    should be designed to include the knowledge and information provided by experts.
    In this way, when executing a query or monitoring the data of a given scenario,
    annotations or strategies can be reviewed to reduce the possibility of making
    mistakes in the performance of tasks. 5. Future directions To properly adapt to
    the needs and problems in the field of agriculture, distributed data management
    architectures have to be used. This type of architecture distributes data collection,
    analysis, and processing in different layers or tiers. To avoid connectivity problems
    and to enable solutions that require real-time performance, innovation in agricultural
    digitization is based on the distribution of STSDMS architectures in three levels:
    (I) Edge: Due to the limited computational capabilities of equipment and devices
    deployed at the edge, processing and actuation capabilities are traditionally
    derived from the cloud or fog. However, due to connectivity limitations and delays
    introduced in the exchange of information with the cloud in agriculture, it is
    increasingly necessary to bring processing and actuation capabilities closer to
    the edge. The distribution or layering of repositories for data storage, processing,
    and querying at different levels provides real-time performance capabilities.
    (II) Fog: This is the intermediate level between the edge and the cloud. Systems
    deployed in the fog have greater computational capabilities, making them ideal
    for preprocessing data, detecting anomalies, aggregating, or completing the information
    captured by devices, and reducing the number of requests and centralized processing
    in the cloud. One of its most prominent applications in agriculture is aggregating
    and preprocessing data from different crop fields or farms in the same scenario.
    In addition, they offer an ideal resource for data anonymization prior to injection
    into central repositories. (III) Cloud: The cloud is made up of the servers, components,
    services, and main resources of the architecture. Due to its high computational
    capabilities, it is capable of managing algorithms of artificial intelligence,
    machine learning, data processing, and analysis. However, as mentioned above,
    it introduces delays due to the network layer and the large volume of data and
    processes to be managed. An architecture distributed among the three levels provides
    real-time monitoring and action capabilities. It enables the distribution of tasks
    and processes according to their urgency or computational needs. Additionally,
    it reduces the bandwidth and delays introduced by the network to inject and query
    data from the repository of the platform deployed in the cloud. Finally, it allows
    to select or anonymize the data and information that have to be sent to the cloud,
    offering a powerful tool for the management of security solutions. Increasing
    the security, integrity, and ownership of data is a major concern for farmers
    and ranchers. The type and distribution of the architecture used for spatio-temporal
    semantic data management depends on the needs of the scenario. However, a data
    management architecture initially designed under the distributed architecture
    paradigm enables greater adaptability and scalability. Fig. 8 shows a high-level
    diagram of a proposed distributed data management architecture, based on the standards
    of ITU-T Y.3526 [86] and ITU-T Y.3508 [87]. Download : Download high-res image
    (190KB) Download : Download full-size image Fig. 8. Distributed cloud architecture
    for data management. 5.1. Device-to-STSDMS communication In the management of
    spatio-temporal semantic data for Agriculture 5.0, efficient communication between
    edge devices and the edge layer of the STSDMS is crucial to ensure timely data
    collection and transmission. The implementation of communication protocols based
    on the IEEE 802.15.4 standard [88], such as Zigbee and WirelessHART, or technologies
    such as LoRa (low range) and its specification LoRaWAN [89], for low-power wide-area
    networks, emerges as a key strategy. These protocols, known for their low energy
    consumption and ability to operate in bandwidth-constrained environments, are
    ideal solutions to overcome connectivity challenges inherent in distributed and
    heterogeneous agricultural environments. Their adoption facilitates effective
    data transmission, enabling seamless integration between peripheral devices and
    the central system. 5.2. Communication between STSDMS layers Seamless communication
    between the various levels of the system, namely, edge, fog, and cloud, is a critical
    component in optimizing spatio-temporal data management. In this context, the
    strategic implementation of technologies such as 5G becomes significantly relevant,
    especially in communications between the layers of the system. 5.2.1. Communication
    between edge and fog layers The use of 5G technology for communication between
    the edge and fog layers of the STSDMS is a wise choice, especially in scenarios
    where edge deployments may span rural areas characterized by limited connectivity.
    The adoption of 5G technology in this context is reinforced by its distinctive
    characteristics, which perfectly match the complex requirements of edge and fog
    communication in agriculture 5.0. High Bandwidth and Data Throughput: 5G offers
    a substantially higher data throughput compared to its predecessors, enabling
    the swift transmission of large volumes of spatio-temporal data from the edge
    layer to the fog layer. In agricultural settings, where data-rich applications
    such as precision agriculture and real-time monitoring are prevalent, the high
    bandwidth of 5G is instrumental in ensuring that critical information is transmitted
    without latency, enhancing the overall efficiency of the system. Low Latency Communication:
    5G introduces significantly lower latency, reducing the time it takes for data
    to travel between the edge and fog layers. For Agriculture 5.0, where timely decision-making
    is imperative, low-latency communication is paramount. The near real-time responsiveness
    of 5G facilitates the seamless exchange of spatiotemporal data, enhancing the
    system’s ability to react swiftly to dynamic agricultural conditions. Reliable
    Connectivity in Rural Areas: 5G is designed to provide robust connectivity even
    in challenging and remote environments, addressing the connectivity limitations
    often encountered in rural areas. The deployment of edge components in rural settings
    demands a resilient communication infrastructure. 5G’s ability to penetrate remote
    areas ensures that data from the edge layer can reliably reach the fog layer,
    fostering a consistent flow of information crucial for effective spatio-temporal
    data management. Flexibility and Network Slicing: 5G introduces network slicing,
    allowing the creation of customized, isolated segments tailored to specific requirements.
    This flexibility enables the optimization of communication parameters based on
    the unique needs of edge-to-fog data transmission. Slices can be configured to
    balance latency, bandwidth, and reliability, ensuring that the communication architecture
    aligns precisely with the demands of the STSDMS for Agriculture 5.0. 5.2.2. Communication
    between fog and cloud layers The communication link between the fog and cloud
    layers is further enhanced by the integration of 5G technology, leveraging its
    advanced feature known as network slicing. Network Slicing for Latency Optimization:
    Network slicing allows the allocation of dedicated slices with low latency characteristics,
    ensuring timely data exchange between the fog and cloud layers. This optimization
    is particularly crucial for applications that require real-time responsiveness
    in Agriculture 5.0 systems. Bandwidth Management with Network Slicing: Different
    slices within the 5G network can be configured with varying bandwidth capacities.
    This capability ensures that data-intensive tasks in the fog layer can seamlessly
    communicate with cloud resources without encountering bottlenecks. Bandwidth management
    becomes a key aspect in optimizing data flow across system layers. Reliability
    and Security through Network Slicing: By isolating slices, network slicing enhances
    security and reliability in the communication path between the fog and cloud layers.
    This isolation prevents interference between different services and applications,
    fostering a secure and resilient data exchange environment. In summary, the holistic
    communication strategy encompasses (i) the use of wireless sensor networks for
    communication between devices and the edge layer of the system; (ii) the strategic
    integration of the 5G network slicing to optimize communication between the edge,
    fog, and cloud layers of the proposed system. This approach ensures that each
    level of the system works cohesively, addressing the specific connectivity challenges
    and requirements in the dynamic landscape of Agriculture 5.0. 5.3. Privacy-preserving
    AI techniques The integration of Machine Learning (ML) and Artificial Intelligence
    (AI) techniques within the framework of spatio-temporal semantic data management
    for Agriculture 5.0 offers a promising perspective for addressing challenges related
    to data privacy. In particular, privacy-preserving methodologies, such as federated
    learning, emerge as robust solutions. By incorporating a distributed approach,
    federated learning enables the training of ML models on edge devices without compromising
    the confidentiality of the data. This decentralized architecture improves the
    security and privacy of sensitive agricultural information while empowering the
    predictive and analytical capabilities of the global system. The strategic application
    of these AI techniques within the proposed architecture ensures not only efficient
    data management but also the safeguarding of privacy in the context of Agriculture
    5.0. 5.4. Integration of large language models in GUIs The integration of Large
    Language Models (LLMs) within Graphical User Interfaces (GUIs) to facilitate natural
    language querying of data repositories represents an innovative solution to address
    the limited technical expertise of farmers and agricultural specialists in the
    context of Agriculture 5.0. This integration enables non-technical users to formulate
    queries using everyday language expressions, with LLMs subsequently translating
    these queries into technically comprehensible commands for STSDMSs. This strategy
    simplifies interaction, improving the accessibility and usability of the system,
    thus overcoming the barrier of technical complexity to promote a wider and more
    effective adoption of technology within the agricultural sector. 5.5. STSDMS to
    enable the use of machine learning and artificial intelligence Integration of
    Artificial Intelligence (AI) and Machine Learning (ML) models in the domain of
    Agriculture 5.0 represents one of the main research topics today. The development
    and implementation of decision support systems (DSS) and predictive models, as
    well as the use of neural networks to forecast, for instance, weather conditions,
    are currently highly relevant approaches. These approaches offer a number of key
    benefits, including resource optimization, improved energy efficiency, and the
    ability to adapt agricultural tasks based on accurate weather forecasts or changes
    in field and crop conditions. The development of solutions based on AI and ML
    models is divided into two main phases: training and model validation. In this
    respect, Spatial–Temporal Semantic Data Management Systems play a key role in
    the development of such solutions. These systems allow the management, storage,
    and processing of historical data, which in turn enables the generation of datasets
    for training AI and ML models. Furthermore, real-time management of current data
    collected by devices and agents deployed in the field provides the necessary input
    information to validate trained models and subsequently deploy them in the production
    environment. Therefore, the distributed architecture presented in this paper is
    revealed as an essential element to facilitate the integration and development
    of AI-based solutions. The cloud layer of the proposed system provides the computational
    capabilities and historical data storage needed to feed the AI and ML models in
    the training phase. Due to these capabilities, the training and subsequent validation
    of the models are performed in isolation from the rest of the system layers with
    lower computational capabilities. This enables the models to be trained through
    continuous spatio-temporal queries to the central repositories located in the
    cloud, without interfering with the correct operation of the system. Once the
    models have been trained and validated, the proposed distributed architecture
    allows the trained models to be deployed at the STSDMS edge layer. By deploying
    the AI or ML models at the edge, data reception is enabled at runtime, thus enabling
    models operation in near real-time. This gives the farmer or specialist the ability
    to make more informed decisions in an agile manner, based on the accurate predictions
    and recommendations provided by the AI or ML models, by integrating these processes
    into the edge layer of the system itself. 6. Conclusions The paper outlines the
    requirements and problems described by Agriculture 5.0 scenarios and solutions
    in the management of data of a spatio-temporal semantic nature. Through these
    needs, a selection of the eleven most prominent spatio-temporal semantic data
    management systems to date in the agricultural application domain is made. The
    selected STSDMSs have been studied through the current literature on their data
    sources, architectures, solved problems, and validation scenarios. Eight aspects
    (accessibility, scalability, interoperability, etc.) of the SQuaRE standard have
    been selected and treated as criteria for the evaluation of these STSDMSs and
    the detection of their deficiencies. As a result of the evaluation, it has been
    detected that the STSDMSs only comply with an average evaluation of 15.09 stars
    (out of a total of 24 stars). Following the evaluation of the literature, it is
    evident that the STSDMS developed on the intelligent AFarCloud platform exhibits
    the most advanced capabilities in the current paradigm to address identified challenges.
    With a total score of 20 stars out of 24 (83.33%), the AFarCloud STSDMS provides
    the most suitable approach. However, a significant limitation of this system lies
    in the utilization of a native data model, specifically developed for the project,
    thereby restricting the interoperability of the system with other models and ontologies.
    Based on the evaluation results, the following challenges have been described:
    (i) simplifying graphical user interfaces to improve accessibility; (ii) definition
    of a standard agricultural data model to achieve interoperability; (iii) using
    machine learning techniques for translation between existing data models; (iv)
    deployment of the STSDMS architecture between the edge and the cloud to overcome
    connectivity issues and enable real-time operation; (v) distribution of repositories
    in databases for historical data and latest measures to increase performance;
    (vi) implementing continuous queries and continuous processing for knowledge extraction;
    and (vii) adopt the knowledge of agricultural experts to enrich and correct the
    data semantically. To address the identified challenges and limitations, this
    paper presents a proposal designed to effectively overcome them. The proposal
    focuses on the implementation of Spatio-Temporal Semantic Data Management Systems
    (STSDMS) through a distributed architecture at the edge, fog, and cloud layers.
    This configuration allows achieving real-time operations, applying privacy-preserving
    techniques and anonymizing farm data, and enhancing the adaptability and scalability
    capabilities of STSDMSs. In detail, the proposal addresses the choice of optimal
    technologies for communication between devices and the edge layer and between
    the various layers of the architecture. The importance of overcoming the limitations
    of current Graphical User Interfaces (GUIs) by exploring the use of Large Language
    Models (LLMs) is particularly highlighted. LLMs are emerging as key tools to facilitate
    the interaction of nontechnical users with the STSDMS GUIs, thus improving the
    accessibility and usability of the system. Finally, the suitability of the proposal
    for the integration of Artificial Intelligence (AI) and Machine Learning (ML)
    models is explored. This integration is presented as an essential component to
    enhance the intelligence and predictive capacity of the system, contributing to
    a more efficient management of spatio-temporal data. In general, the proposal
    comprehensively addresses the identified challenges, offering a robust and advanced
    perspective for the development and application of STSDMSs in the context of Agriculture
    5.0. In conclusion, the detected challenges demonstrate future trends in the development
    of STSDMSs for the achievement of Agriculture 5.0 through advanced Internet of
    Things technologies. It is very promising to see how future research can improve
    the performance and development of STSDMSs through the achievement of the detected
    challenges. CRediT authorship contribution statement Mario San Emeterio de la
    Parte: Data curation, Formal analysis, Investigation, Methodology, Resources,
    Supervision, Validation, Visualization, Writing – original draft, Writing – review
    & editing, Conceptualization. José-Fernán Martínez-Ortega: Conceptualization,
    Funding acquisition, Project administration, Supervision, Validation, Writing
    – review & editing. Pedro Castillejo: Investigation, Supervision, Validation,
    Writing – original draft, Writing – review & editing. Néstor Lucas-Martínez: Conceptualization,
    Formal analysis, Investigation, Validation, Writing – original draft, Writing
    – review & editing. Declaration of competing interest The authors declare that
    they have no known competing financial interests or personal relationships that
    could have appeared to influence the work reported in this paper. Acknowledgments
    This work was supported by the DEMETER project, which has received funding from
    INDUSTRIAL LEADERSHIP - Leadership in enabling and industrial technologies - Information
    and Communication Technologies (ICT) under grant agreement No. 857202. ICT receives
    support from the European Union’s Horizon 2020 research and innovation program
    , and Italy, Luxembourg, Spain, Germany, Greece, United Kingdom, Norway, Czechia,
    Montenegro, Belgium, Romania, Ireland, Finland, Serbia, Portugal, Poland, Georgia,
    and Slovenia. Data availability No data was used for the research described in
    the article. References [1] . dpicampaigns, Take action for the sustainable development
    goals. [Online]. Available: https://www.un.org/sustainabledevelopment/sustainable-development-goals/.
    Google Scholar [2] Animal welfare. [Online]. Available: https://food.ec.europa.eu/animals/animal-welfare_en.
    Google Scholar [3] The state of food security and nutrition in the world 2020
    — FAO — food and agriculture organization of the United Nations. [Online]. Available:
    https://www.fao.org/publications/sofi/2020/en/. Google Scholar [4] . Martin, Goal
    2: Zero hunger. [Online]. Available: https://www.un.org/sustainabledevelopment/hunger/.
    Google Scholar [5] [Online]. Available: https://machinaresearch.com/news/agricultural-iot-will-see-a-very-rapid-growth-over-the-next-10-years/.
    Google Scholar [6] 5 challenges for precision agriculture to face — AgriTechTomorrow.
    [Online]. Available:. Google Scholar [7] Roussaki I., Doolin K., Skarmeta A.,
    Routis G., Lopez-Morales J.A., Claffey E., Mora M., Martinez J.A. Building an
    interoperable space for smart agriculture Digit. Commun. Netw., 9 (1) (2023),
    pp. 183-193 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S2352864822000165
    View PDFView articleView in ScopusGoogle Scholar [8] Werner J., Umstatter C.,
    Leso L., Kennedy E., Geoghegan A., Shalloo L., Schick M., O’Brien B. Evaluation
    and application potential of an accelerometer-based collar device for measuring
    grazing behavior of dairy cows Animal, 13 (9) (2019), pp. 2070-2079 [Online].
    Available: https://www.cambridge.org/core/journals/animal/article/evaluation-and-application-potential-of-an-accelerometerbased-collar-device-for-measuring-grazing-behavior-of-dairy-cows/A2CB3F5D11DCB2A4DCED8843F22AF88E.
    Publisher: Cambridge University Press View PDFView articleCrossRefView in ScopusGoogle
    Scholar [9] Integration of auxiliary sensor data to ISOBUS for agricultural machinery
    data collection. [Online]. Available: http://dx.doi.org/10.13031/aea.14152. Google
    Scholar [10] Shirogane: Accessibility evaluation for GUI software... - Google
    Académico. [Online]. Available: https://scholar.google.com/scholar_lookup?title=Accessibility%20evaluation%20for%20GUI%20software%20using%20source%20programs&publication_year=2008&author=J.%20Shirogane&author=T.%20Mori&author=H.%20Iwata&author=Y.%20Fukazawa.
    Google Scholar [11] Ahmad L., Nabi F. Agriculture 5.0: Artificial Intelligence,
    IoT and Machine Learning CRC Press (2021) Google Scholar [12] Farm data management,
    sharing and services for agriculture development — Knowledge for policy. [Online].
    Available: https://knowledge4policy.ec.europa.eu/publication/farm-data-management-sharing-services-agriculture-development_en.
    Google Scholar [13] A sustainable bioeconomy for Europe - strengthening the connection
    between economy, society and the environment : updated bioeconomy strategy — Knowledge
    for policy. Google Scholar [14] Rotz S., Gravely E., Mosby I., Duncan E., Finnis
    E., Horgan M., LeBlanc J., Martin R., Neufeld H.T., Nixon A., Pant L., Shalla
    V., Fraser E. Automated pastures and the digital divide: How agricultural technologies
    are shaping labour and rural communities J. Rural Stud., 68 (2019), pp. 112-122
    [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0743016718307769
    View PDFView articleView in ScopusGoogle Scholar [15] Zheng S. Influence of big
    data development on regional rural economic growth Xu Z., Parizi R.M., Loyola-González
    O., Zhang X. (Eds.), Cyber Security Intelligence and Analytics, Advances in Intelligent
    Systems and Computing, Springer International Publishing, Cham (2021), pp. 526-532
    CrossRefView in ScopusGoogle Scholar [16] Jouanjean M.-A., Casalini F., Wiseman
    L., Gray E. Issues Around Data Governance in the Digital Transformation of Agriculture:
    The Farmers’ Perspective: Tech. Rep. OECD, Paris (2020) [Online]. Available: https://www.oecd-ilibrary.org/agriculture-and-food/issues-around-data-governance-in-the-digital-transformation-of-agriculture_53ecf2ab-en
    Google Scholar [17] Hakimpour F., Aleman-Meza B., Perry M., Sheth A. Data Processing
    in Space, Time, and Semantics Dimensions Kno.e.sis Publications (2006) [Online].
    Available: https://corescholar.libraries.wright.edu/knoesis/16 Google Scholar
    [18] Systematic literature review or literature review — elsevier (2022) [Online].
    Available: http://https%253A%252F%252Fscientific-publishing.webshop.elsevier.com%252Fresearch-process%252Fsystematic-literature-review-or-literature-review%252F.
    Section: Research Process Google Scholar [19] Tiddi I., Lécué F., Hitzler P. (Eds.),
    Knowledge Graphs for Explainable Artificial Intelligence: Foundations, Applications
    and Challenges, Studies on the Semantic Web, Vol. 047, IOS Press, Amsterdam (2020)
    Google Scholar [20] C. Zinke, A.-C.N. Ngomo, Discovering and Linking Spatio-Temporal
    Big Linked Data, in: IGARSS 2018 - 2018 IEEE International Geoscience and Remote
    Sensing Symposium, 2018, pp. 411–414, ISSN: 2153-7003. Google Scholar [21] Saiz-Rubio
    V., Rovira-Más F. From smart farming towards agriculture 5.0: A review on crop
    data management Agronomy, 10 (2) (2020), p. 207 [Online]. Available: https://www.mdpi.com/2073-4395/10/2/207.
    Number: 2 Publisher: Multidisciplinary Digital Publishing Institute CrossRefView
    in ScopusGoogle Scholar [22] Tummers J., Kassahun A., Tekinerdogan B. Obstacles
    and features of farm management information systems: A systematic literature review
    Comput. Electron. Agric., 157 (2019), pp. 189-204 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0168169918307944
    View PDFView articleView in ScopusGoogle Scholar [23] Fountas S., Carli G., Sørensen
    C.G., Tsiropoulos Z., Cavalaris C., Vatsanidou A., Liakos B., Canavari M., Wiebensohn
    J., Tisserye B. Farm management information systems: Current situation and future
    perspectives Comput. Electron. Agric., 115 (2015), pp. 40-50 [Online]. Available:
    https://www.sciencedirect.com/science/article/pii/S0168169915001337 View PDFView
    articleView in ScopusGoogle Scholar [24] Khanal S., Kc K., Fulton J.P., Shearer
    S., Ozkan E. Remote sensing in agriculture—Accomplishments, limitations, and opportunities
    Remote Sens., 12 (22) (2020), p. 3783 [Online]. Available: https://www.mdpi.com/2072-4292/12/22/3783.
    Number: 22 Publisher: Multidisciplinary Digital Publishing Institute CrossRefGoogle
    Scholar [25] Sinha B.B., Dhanalakshmi R. Recent advancements and challenges of
    internet of things in smart agriculture: A survey Future Gener. Comput. Syst.,
    126 (2022), pp. 169-184 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0167739X21003113
    View PDFView articleView in ScopusGoogle Scholar [26] S.T. Joe, FarmLogic. [Online].
    Available: https://farmlogic.com/. Google Scholar [27] Connected farm field. [Online].
    Available: https://agdeveloper.trimble.com/project/connected-farm-field/. Google
    Scholar [28] Professional farm planning software. [Online]. Available: https://www.farmbrite.com/crop-management-software.
    Google Scholar [29] Gatekeeper. [Online]. Available: https://farmplan.co.uk/solutions-cropping/gatekeeper/.
    Google Scholar [30] FarmCommand: Manage data to boost returns across every acre.
    [Online]. Available: https://farmersedge.ca/farmcommand/. Google Scholar [31]
    farmleap: optimización del apoyo a los agricultores. [Online]. Available: https://www.farmleap.com/.
    Google Scholar [32] R.K.T. N. Zhang, Applications of a field–level geographic
    information system (FIS) in precision agriculture. [Online]. Available: http://dx.doi.org/10.13031/2013.6829.
    Google Scholar [33] Burlacu G., Costa R., Sarraipa J., Jardim-Golcalves R., Popescu
    D. A conceptual model of farm management information system for decision support
    Camarinha-Matos L.M., Barrento N.S., Mendon CÇca R. (Eds.), Technological Innovation
    for Collective Awareness Systems, IFIP Advances in Information and Communication
    Technology, Springer, Berlin, Heidelberg (2014), pp. 47-54 CrossRefView in ScopusGoogle
    Scholar [34] Leroux C., Jones H., Pichon L., Guillaume S., Lamour J., Taylor J.,
    Naud O., Crestey T., Lablee J.-L., Tisseyre B. Geofis: An open source, decision-support
    tool for precision agriculture data Agriculture, 8 (6) (2018), p. 73 [Online].
    Available: https://www.mdpi.com/2077-0472/8/6/73. Number: 6 Publisher: Multidisciplinary
    Digital Publishing Institute CrossRefView in ScopusGoogle Scholar [35] R. Li,
    H. He, R. Wang, Y. Huang, J. Liu, S. Ruan, T. He, J. Bao, Y. Zheng, JUST: JD Urban
    Spatio-Temporal Data Engine, in: 2020 IEEE 36th International Conference on Data
    Engineering (ICDE), 2020, pp. 1558–1569, ISSN: 2375-026X. Google Scholar [36]
    Home. GeoMesa. [Online]. Available: https://www.geomesa.org/. Google Scholar [37]
    Apache spark™ - unified engine for large-scale data analytics. [Online]. Available:
    https://spark.apache.org/. Google Scholar [38] H. Deeken, T. Wiemann, K. Lingemann,
    J. Hertzberg, SEMAP - a semantic environment mapping framework, in: 2015 European
    Conference on Mobile Robots (ECMR), 2015, pp. 1–6. Google Scholar [39] Deeken
    H., Wiemann T., Hertzberg J. A spatio-semantic model for agricultural environments
    and machines Mouhoub M., Sadaoui S., Ait Mohamed O., Ali M. (Eds.), Recent Trends
    and Future Technology in Applied Intelligence, Lecture Notes in Computer Science,
    Springer International Publishing, Cham (2018), pp. 589-600 CrossRefView in ScopusGoogle
    Scholar [40] Deeken H., Wiemann T., Hertzberg J. A spatio-semantic approach to
    reasoning about agricultural processes Appl. Intell., 49 (11) (2019), pp. 3821-3833
    [Online]. Available: http://dx.doi.org/10.1007/s10489-019-01451-2 CrossRefView
    in ScopusGoogle Scholar [41] Bechhofer S. OWL: Web ontology language Liu L., Özsu
    M.T. (Eds.), Encyclopedia of Database Systems, Springer US, Boston, MA (2009),
    pp. 2008-2009 [Online]. Available: http://dx.doi.org/10.1007/978-0-387-39940-9_1073
    CrossRefGoogle Scholar [42] Daniele L., Pires L.F. An ontological approach to
    logistics Enterprise Interoperability, John Wiley & Sons, Ltd (2013), pp. 199-213
    [Online]. Available: https://onlinelibrary.wiley.com/doi/abs/10.1002/9781118846995.ch21.
    _eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781118846995.ch21 CrossRefGoogle
    Scholar [43] Universitas Atma Jaya Yogyakarta L., Wisnubhadra I., Baharin S.,
    Universiti Teknikal Malaysia Melaka J., Herman N., Universiti Teknikal Malaysia
    Melaka S. Open spatiotemporal data warehouse for agriculture production analytics
    Int. J. Intell. Eng. Syst., 13 (6) (2020), pp. 419-431 [Online]. Available: http://www.inass.org/2020/2020123137.pdf
    Google Scholar [44] Vaisman A., Zimányi E. Mobility data warehouses ISPRS Int.
    J. Geo-Inf., 8 (4) (2019), p. 170 [Online]. Available: https://www.mdpi.com/2220-9964/8/4/170.
    Number: 4 Publisher: Multidisciplinary Digital Publishing Institute CrossRefView
    in ScopusGoogle Scholar [45] Lorentzos N.A., Sideridis A.B., Yialouris C.P., Kollias
    V. An integrated spatiotemporal system Comput. Electron. Agric., 22 (2) (1999),
    pp. 233-242 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0168169999000216
    View PDFView articleView in ScopusGoogle Scholar [46] Morais R., Silva N., Mendes
    J., Adão T., Pádua L., López-Riquelme J.A., Pavón-Pulido N., Sousa J.J., Peres
    E. Mysense: A comprehensive data management environment to improve precision agriculture
    practices Comput. Electron. Agric., 162 (2019), pp. 882-894 [Online]. Available:
    https://www.sciencedirect.com/science/article/pii/S016816991831648X View PDFView
    articleView in ScopusGoogle Scholar [47] Kamilaris A., Gao F., Prenafeta-Boldu
    F.X., Ali M.I. Agri-IoT: A semantic framework for internet of things-enabled smart
    farming applications 2016 IEEE 3rd World Forum on Internet of Things (WF-IoT)
    (2016), pp. 442-447 View in ScopusGoogle Scholar [48] Compton M., Barnaghi P.,
    Bermudez L., Garcí a Castro R., Corcho O., Cox S., Graybeal J., Hauswirth M.,
    Henson C., Herzog A., Huang V., Janowicz K., Kelsey W.D., Le Phuoc D., Lefort
    L., Leggieri M., Neuhaus H., Nikolov A., Page K., Passant A., Sheth A., Taylor
    K. The SSN ontology of the W3C semantic sensor network incubator group J. Web
    Semant., 17 (2012), pp. 25-32 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S1570826812000571
    View PDFView articleView in ScopusGoogle Scholar [49] OWL-S: Semantic markup for
    web services. [Online]. Available: https://www.w3.org/Submission/OWL-S/. Google
    Scholar [50] AGROVOC Thesaurus — TaxoBank. [Online]. Available: http://www.taxobank.org/content/agrovoc-thesaurus.
    Google Scholar [51] Hu S., Wang H., She C., Wang J. Agont: Ontology for agriculture
    internet of things Li D., Liu Y., Chen Y. (Eds.), Computer and Computing Technologies
    in Agriculture IV, IFIP Advances in Information and Communication Technology,
    Springer, Berlin, Heidelberg (2011), pp. 131-137 CrossRefView in ScopusGoogle
    Scholar [52] Liang A.C., Lauser B., Sini M., Keizer J., Katz S. From AGROVOC to
    the agricultural ontology service / concept server: An OWL model for creating
    ontologies in the agricultural domain Int. Conf. Dublin Core Metadata Appl. (2006)
    [Online]. Available: https://dcpapers.dublincore.org/pubs/article/view/841 Google
    Scholar [53] Barbieri D.F., Braga D., Ceri S., Della Valle E., Grossniklaus M.
    C-SPARQL: SPARQL for continuous querying Proceedings of the 18th International
    Conference on World Wide Web, WWW ’09, Association for Computing Machinery, New
    York, NY, USA (2009), pp. 1061-1062 [Online]. Available: https://dl.acm.org/doi/10.1145/1526709.1526856
    CrossRefView in ScopusGoogle Scholar [54] Le-Phuoc D., Dao-Tran M., Xavier Parreira
    J., Hauswirth M. A native and adaptive approach for unified processing of linked
    streams and linked data Aroyo L., Welty C., Alani H., Taylor J., Bernstein A.,
    Kagal L., Noy N., Blomqvist E. (Eds.), The Semantic Web – ISWC 2011, Lecture Notes
    in Computer Science, Springer, Berlin, Heidelberg (2011), pp. 370-388 CrossRefView
    in ScopusGoogle Scholar [55] Castillejo P., Johansen G., Cürüklü B., Bilbao-Arechabala
    S., Fresco R., Martínez-Rodríguez B., Pomante L., Rusu C., Martínez-Ortega J.-F.,
    Centofanti C., Hakojärvi M., Santic M., Häggman J. Aggregate farming in the cloud:
    The aFarCloud ECSEL project Microprocess. Microsyst., 78 (2020), Article 103218
    [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0141933120303793
    View PDFView articleView in ScopusGoogle Scholar [56] Aggregate farming in the
    cloud — afarcloud project — fact sheet — H2020. [Online]. Available: https://cordis.europa.eu/project/id/783221.
    Google Scholar [57] Parte M.S.E.d.l., Serrano S.L., Díaz V.H., Martínez-Ortega
    J.-F. grys-upm/spatio-temporal-semantic data model for precision agriculture (2022)
    [Online]. Available: https://zenodo.org/record/7263254 Google Scholar [58] Demeter
    - empowering farmers (2019) [Online]. Available: https://h2020-demeter.eu/ Google
    Scholar [59] Building an interoperable, data-driven, innovative and sustainable
    European agri-food sector — DEMETER project — fact sheet — H2020. [Online]. Available:
    https://cordis.europa.eu/project/id/857202. Google Scholar [60] Palma R., Roussaki
    I., Döhmen T., Atkinson R., Brahma S., Lange C., Routis G., Plociennik M., Mueller
    S. Agricultural information model Bochtis D.D., Sørensen C.G., Fountas S., Moysiadis
    V., Pardalos P.M. (Eds.), Information and Communication Technologies for Agriculture—Theme
    III: Decision, Springer Optimization and Its Applications, Springer International
    Publishing, Cham (2022), pp. 3-36 [Online]. Available: http://dx.doi.org/10.1007/978-3-030-84152-2_1
    CrossRefView in ScopusGoogle Scholar [61] Communication from the commission to
    the European parliament, the council, the European economic and social committee
    and the committee of the regions a European strategy for data (2020) [Online].
    Available: https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A52020DC0066
    Google Scholar [62] Patil M.E., Mulchandani R.N., Ahuja R.R. Design and implementation
    of graphical user interface for relational database management system J. Comput.
    Sci. Inf. Technol., 3 (2012) Google Scholar [63] API documentation & design tools
    for teams — swagger. [Online]. Available: https://swagger.io/. Google Scholar
    [64] Mokbel M.F., Xiong X., Aref W.G. SINA: scalable incremental processing of
    continuous queries in spatio-temporal databases Proceedings of the 2004 ACM SIGMOD
    International Conference on Management of Data, SIGMOD ’04, Association for Computing
    Machinery, New York, NY, USA (2004), pp. 623-634 [Online]. Available: https://dl.acm.org/doi/10.1145/1007568.1007638
    View in ScopusGoogle Scholar [65] Galić Z., Mešković E., Osmanović D. Distributed
    processing of big mobility data as spatio-temporal data streams GeoInformatica,
    21 (2) (2017), pp. 263-291 [Online]. Available: http://dx.doi.org/10.1007/s10707-016-0264-z
    CrossRefView in ScopusGoogle Scholar [66] 14:00-17:00. ISO/IEC 21823-1:2019. [Online].
    Available: https://www.iso.org/standard/71885.html. Google Scholar [67] Shin I.-S.,
    Kim J.-W., Kim J.-J., Han K.-J. Development of a spatio-temporal DSMS for the
    real-time management of moving objects data stream J. Korean Soc. Geospat. Inf.
    Sci., 20 (1) (2012), pp. 21-31 [Online]. Available: http://koreascience.or.kr/article/JAKO201212851253750.page.
    Publisher: Korea Spatial Information Society CrossRefGoogle Scholar [68] Liu C.,
    Wu C., Shao H., Yuan X. SmartCube: An adaptive data management architecture for
    the real-time visualization of spatiotemporal datasets IEEE Trans. Vis. Comput.
    Graphics, 26 (1) (2020), pp. 790-799 Conference Name: IEEE Transactions on Visualization
    and Computer Graphics View in ScopusGoogle Scholar [69] S. Ray, Towards High Performance
    Spatio-temporal Data Management Systems, in: 2014 IEEE 15th International Conference
    on Mobile Data Management, Vol. 2, 2014, pp. 19–22, ISSN: 2375-0324. Google Scholar
    [70] Macías-Escrivá F.D., Haber R., del Toro R., Hernandez V. Self-adaptive systems:
    A survey of current approaches, research challenges and applications Expert Syst.
    Appl., 40 (18) (2013), pp. 7267-7279 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0957417413005125
    View PDFView articleView in ScopusGoogle Scholar [71] Goleva R., Sokullu R., Kadrev
    V., Savov A., Mihaylov S., Garcia N. Real-time and near-real-time services in
    distributed environment for IoT – edge – cloud computing implementation in agriculture
    and well-being Zlateva T., Goleva R. (Eds.), Computer Science and Education in
    Computer Science, Lecture Notes of the Institute for Computer Sciences, Social
    Informatics and Telecommunications Engineering, Springer Nature Switzerland, Cham
    (2022), pp. 126-141 CrossRefView in ScopusGoogle Scholar [72] Debauche O., Mahmoudi
    S., Manneback P., Lebeau F. Cloud and distributed architectures for data management
    in agriculture 4.0 : Review and future trends J. King Saud Univ. Comput. Inf.
    Sci., 34 (9) (2022), pp. 7494-7514 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S1319157821002664
    View PDFView articleView in ScopusGoogle Scholar [73] M. Niemeyer, S. Pütz, J.
    Hertzberg, A Spatio-Temporal-Semantic Environment Representation for Autonomous
    Mobile Robots equipped with various Sensor Systems, in: 2022 IEEE International
    Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI),
    2022, pp. 1–6. Google Scholar [74] M. Dua, S. Kumar, Z.S. Virk, Hindi Language
    Graphical User Interface to Database Management System, in: 2013 12th International
    Conference on Machine Learning and Applications, Vol. 2, 2013, pp. 555–559. Google
    Scholar [75] San Emeterio de la Parte M., Martínez-Ortega J.-F., Hernández Díaz
    V., Martínez N.L. Big data and precision agriculture: a novel spatio-temporal
    semantic IoT data management framework for improved interoperability J. Big Data,
    10 (1) (2023), p. 52 [Online]. Available: http://dx.doi.org/10.1186/s40537-023-00729-0
    View in ScopusGoogle Scholar [76] Agriculture data space event - gaia-x: A federated
    secure data infrastructure (2023) [Online]. Available: https://gaia-x.eu/event/agriculture-data-space-event/
    Google Scholar [77] Roussaki I., Doolin K., Skarmeta A., Routis G., Lopez-Morales
    J.A., Claffey E., Mora M., Martinez J.A. Building an interoperable space for smart
    agriculture Digit. Commun. Netw., 9 (1) (2023), pp. 183-193 [Online]. Available:
    https://www.sciencedirect.com/science/article/pii/S2352864822000165 View PDFView
    articleView in ScopusGoogle Scholar [78] Wang H., Wu H., He Z., Huang L., Church
    K.W. Progress in machine translation Engineering, 18 (2022), pp. 143-153 [Online].
    Available: https://www.sciencedirect.com/science/article/pii/S2095809921002745
    View PDFView articleCrossRefGoogle Scholar [79] Li X., Huang H., Savkin A.V.,
    Zhang J. Robotic herding of farm animals using a network of barking aerial drones
    Drones, 6 (2) (2022), p. 29 [Online]. Available: https://www.mdpi.com/2504-446X/6/2/29.
    Number: 2 Publisher: Multidisciplinary Digital Publishing Institute View PDFView
    articleGoogle Scholar [80] Cooke R.F., Bohnert D.W., Reis M.M., Cappellozza B.I.
    Wolf presence in the ranch of origin: Impacts on temperament and physiological
    responses of beef cattle following a simulated wolf encounter1 J. Anim. Sci.,
    91 (12) (2013), pp. 5905-5911 [Online]. Available: http://dx.doi.org/10.2527/jas.2013-6777
    CrossRefView in ScopusGoogle Scholar [81] Sungheetha D.A. Real time monitoring
    and fire detection using internet of things and cloud based drones J. Soft Comput.
    Paradigm, 2 (3) (2020), pp. 168-174 CrossRefGoogle Scholar [82] Abu-Elkheir M.,
    Hayajneh M., Ali N.A. Data management for the internet of things: Design primitives
    and solution Sensors, 13 (11) (2013), pp. 15582-15612 [Online]. Available: https://www.mdpi.com/1424-8220/13/11/15582.
    Number: 11 Publisher: Multidisciplinary Digital Publishing Institute CrossRefView
    in ScopusGoogle Scholar [83] Ukhurebor K.E., Adetunji C.O., Olugbemi O.T., Nwankwo
    W., Olayinka A.S., Umezuruike C., Hefft D.I. Chapter 6 - precision agriculture:
    Weather forecasting for future farming Abraham A., Dash S., Rodrigues J.J.P.C.,
    Acharya B., Pani S.K. (Eds.), AI, Edge and IoT-Based Smart Agriculture, Intelligent
    Data-Centric Systems, Academic Press (2022), pp. 101-121 [Online]. Available:
    https://www.sciencedirect.com/science/article/pii/B9780128236949000086 View PDFView
    articleGoogle Scholar [84] Galić Z., Galić Z. Spatio-temporal continuous queries
    Spat. Temp. Data Streams (2016), pp. 17-45 Publisher: Springer CrossRefView in
    ScopusGoogle Scholar [85] Pashaei Kamali F., Borges J.A.R., Meuwissen M.P.M.,
    de Boer I.J.M., Oude Lansink A.G.J.M. Sustainability assessment of agricultural
    systems: The validity of expert opinion and robustness of a multi-criteria analysis
    Agric. Syst., 157 (2017), pp. 118-128 [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0308521X16303699
    View PDFView articleView in ScopusGoogle Scholar [86] ITU-T recommendation database.
    [Online]. Available: https://www.itu.int/ITU-T/recommendations/rec.aspx?id=14759.
    Google Scholar [87] Y.3508 : Cloud computing - Overview and high-level requirements
    of distributed cloud. [Online]. Available: https://www.itu.int/rec/T-REC-Y.3508/en.
    Google Scholar [88] IEEE, IEEE Standard for Low-Rate Wireless Networks, IEEE Std
    802.15.4-2020 (Revision of IEEE Std 802.15.4-2015), 2020, pp. 1–800, [Online].
    Available: . Conference Name: IEEE Std 802.15.4-2020 (Revision of IEEE Std 802.15.4-2015).
    Google Scholar [89] Haxhibeqiri J., De Poorter E., Moerman I., Hoebeke J. A survey
    of lorawan for IoT: From technology to application Sensors, 18 (11) (2018), p.
    3995 [Online]. Available: https://www.mdpi.com/1424-8220/18/11/3995. Number: 11
    Publisher: Multidisciplinary Digital Publishing Institute CrossRefView in ScopusGoogle
    Scholar Cited by (1) Remote Sensing for Agriculture in the Era of Industry 5.0-A
    Survey 2024, IEEE Journal of Selected Topics in Applied Earth Observations and
    Remote Sensing © 2023 The Author(s). Published by Elsevier B.V. Recommended articles
    LoRa-based outdoor localization and tracking using unsupervised symbolization
    Internet of Things, Volume 25, 2024, Article 101016 Khondoker Ziaul Islam, …,
    Ferdous Sohel View PDF In-cabin and outdoor environmental monitoring in vehicular
    scenarios with distributed computing Internet of Things, Volume 25, 2024, Article
    101009 Emilio Ramos-Sorroche, …, Esteban Egea-Lopez View PDF A survey on security
    and cryptographic perspective of Industrial-Internet-of-Things Internet of Things,
    Volume 25, 2024, Article 101037 Nimish Mishra, …, Sherali Zeadally View PDF Show
    3 more articles Article Metrics Citations Citation Indexes: 976500490 Captures
    Readers: 28 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Spatio-temporal semantic data management systems for IoT in agriculture
    5.0: Challenges and future directions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Obaid M.K.
  - Alazzai W.K.
  - Abood B.S.Z.
  - Al-Farouni M.
  citation_count: '0'
  description: The evolving landscape of agriculture has undergone a significant shift
    towards a technology-driven and data-centric approach, mainly propelled by the
    advent of Artificial Intelligence (AI) and the Internet of Things (IoT). This
    short review talks about numerous studies exploring the transformative impact
    of these cutting-edge technologies in sustainable agriculture practices. It outlines
    how the traditional statistical methods have given way to a more data-driven and
    quantitative approach, reshaping every facet of farming. The article emphasizes
    the immense potential of IoT in revolutionizing agriculture, shedding light on
    the challenges encountered when integrating these technologies into conventional
    farming systems. It explores the diverse applications of sensors and IoT devices
    across various agricultural stages, from land preparation and irrigation systems
    to pest control and harvesting techniques, while also highlighting the integration
    of advanced tools like unmanned aerial vehicles (UAVs) for crop monitoring and
    yield optimization. Overall, it emphasizes the urgency to embrace these innovative
    technologies, addressing key challenges for their seamless integration into traditional
    farming and aquaculture practices to ensure a sustainable and efficient future
    for agriculture.
  doi: 10.1051/e3sconf/202449101025
  full_citation: '>'
  full_text: '>

    "Journals Books Conferences EDPS Account All issuesSeriesForthcomingAbout Search
    Menu All issues Volume 491 (2024) E3S Web Conf., 491 (2024) 01025 Abstract Table
    of Contents Previous articleNext article Open Access E3S Web of Conferences 491,
    01025 (2024) Sustainable Agriculture Practices: AI and IoT''s Vital Contribution
    Mohammed Kadhim Obaid1*, Waleed K.Alazzai2†, Baydaa Sh.Z.Abood3‡ and Mohammed
    Al-Farouni4§ * Ahl Al Bayt University, Karbala, Iraq † Medical Technical College,
    Al-Farahidi University, Baghdad, Iraq ‡ National University Of Science And Technology,
    Dhi Qar, Iraq § College of technical engineering, The Islamic university, Najaf,
    Iraq * Corresponding author: Mohammed.obiad@ abu.edu.iq † Corresponding author:
    waleed.khalid@uoalfarahidi.edu.iq ‡ Corresponding author: baydaa.zghair@nust.edu.iq
    § Corresponding author: mhussien074@gmail.com Abstract The evolving landscape
    of agriculture has undergone a significant shift towards a technology-driven and
    data-centric approach, mainly propelled by the advent of Artificial Intelligence
    (AI) and the Internet of Things (IoT). This short review talks about numerous
    studies exploring the transformative impact of these cutting-edge technologies
    in sustainable agriculture practices. It outlines how the traditional statistical
    methods have given way to a more data-driven and quantitative approach, reshaping
    every facet of farming. The article emphasizes the immense potential of IoT in
    revolutionizing agriculture, shedding light on the challenges encountered when
    integrating these technologies into conventional farming systems. It explores
    the diverse applications of sensors and IoT devices across various agricultural
    stages, from land preparation and irrigation systems to pest control and harvesting
    techniques, while also highlighting the integration of advanced tools like unmanned
    aerial vehicles (UAVs) for crop monitoring and yield optimization. Overall, it
    emphasizes the urgency to embrace these innovative technologies, addressing key
    challenges for their seamless integration into traditional farming and aquaculture
    practices to ensure a sustainable and efficient future for agriculture. © The
    Authors, published by EDP Sciences, 2024 This is an Open Access article distributed
    under the terms of the Creative Commons Attribution License 4.0, which permits
    unrestricted use, distribution, and reproduction in any medium, provided the original
    work is properly cited. Download this article in PDF format Table of Contents
    Article contents AbstractPDF (1.773 MB)References Database links NASA ADS Abstract
    Service Metrics Show article metrics Services Same authors - Google Scholar -
    EDP Sciences database Recommend this article Download citation Alert me if this
    article is corrected Alert me if this article is cited Related Articles Smart
    Agriculture Solutions: Harnessing AI and IoT for Crop Management E3S Web of Conferences
    477, 00057 (2024) Design and Remote Monitoring of a wireless-Controlled Smart
    Agricultural Greenhouse E3S Web of Conferences 469, 00038 (2023) Internet of Things
    in Agriculture to Revolutionize Traditional Agricultural Industry ITM Web of Conferences
    37, 01018 (2021)     More Bookmarking Mendeley Reader''s services Email-alert
    E3S Web of Conferences eISSN: 2267-1242 All issues Volume 491 (2024) E3S Web Conf.,
    491 (2024) 01025 Abstract Back to top Mentions légales Contacts Privacy policy
    A Vision4Press website By using this website, you agree that EDP Sciences may
    store web audience measurement cookies and, on some pages, cookies from social
    networks. More information and setup OK"'
  inline_citation: '>'
  journal: E3S Web of Conferences
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Sustainable Agriculture Practices: AI and IoT''s Vital Contribution'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Wu Q.
  citation_count: '0'
  description: 'Background: LoRaWAN technology enables IoT devices with ubiquitous
    connectivity, which further empowers a broad spectrum of applications, including
    civil engineering, agriculture, and smart home. Although LoRaWAN has low-power
    energy consumption and long-range communication capability, it has many features
    that should be carefully managed to improve its performance. Objective: This paper
    aimed to review recent patents on improving the performance of LoRaWAN. Methods:
    The most related patents on improving the performance of LoRaWAN were discussed
    and analyzed. Results: A total of 71 patents were reviewed. This paper proposed
    a 2D taxonomy to categorize the existing patents. These patents aimed at focusing
    on the main components of LoRaWAN, i.e., end node, gateway, and server, and improving
    the performance of LoRaWAN from six aspects, i.e., energy efficiency, communication
    range, transmission efficiency, collision management, network security, and interoperability.
    The methodologies used in the current patent development were also discussed.
    Conclusion: Tremendous efforts have been devoted to improving the performance
    of LoRaWAN in recent years. To continue the growth of LoRaWAN technology, future
    patent development may focus on scalability, cost-effectiveness, and ease of implementation.'
  doi: 10.2174/1872212118666230509164929
  full_citation: '>'
  full_text: '>

    "My Subscriptions Welcome David Arredondo newsletter banner Mark List Cart 0 Home
    About Publications Publish with us Marketing Opportunities Articles by Disease
    For Librarians For Authors & Editors More Recent Patents on Engineering Editor-in-Chief
    ISSN (Print): 1872-2121 ISSN (Online): 2212-4047 Back Journal Subscribe Review
    Article A Review of Recent Patents on LoRaWAN Author(s): Qing Wu* Volume 18, Issue
    3, 2024 Published on: 26 May, 2023 Article ID: e090523216723 Pages: 13 DOI: 10.2174/1872212118666230509164929
    Price: $65 Purchase PDF Abstract Background: LoRaWAN technology enables IoT devices
    with ubiquitous connectivity, which further empowers a broad spectrum of applications,
    including civil engineering, agriculture, and smart home. Although LoRaWAN has
    low-power energy consumption and long-range communication capability, it has many
    features that should be carefully managed to improve its performance. Objective:
    This paper aimed to review recent patents on improving the performance of LoRaWAN.
    Methods: The most related patents on improving the performance of LoRaWAN were
    discussed and analyzed. Results: A total of 71 patents were reviewed. This paper
    proposed a 2D taxonomy to categorize the existing patents. These patents aimed
    at focusing on the main components of LoRaWAN, i.e., end node, gateway, and server,
    and improving the performance of LoRaWAN from six aspects, i.e., energy efficiency,
    communication range, transmission efficiency, collision management, network security,
    and interoperability. The methodologies used in the current patent development
    were also discussed. Conclusion: Tremendous efforts have been devoted to improving
    the performance of LoRaWAN in recent years. To continue the growth of LoRaWAN
    technology, future patent development may focus on scalability, cost-effectiveness,
    and ease of implementation. Keywords: LoRaWAN, patents, energy efficiency, communication
    range, transmission efficiency, collision management, network security, interoperability.
    Graphical Abstract References      Mark Item Purchase PDF Rights & Permissions
    Print Cite     We recommend Secrecy Performance Review for IoT-Based Cognitive
    Farming System Khyati Chopra et al., Recent Patents on Engineering, 2023 Challenges,
    Trends and Solutions for Communication Networks and Cyber-Security in Smart Grid
    Qutaiba I. Ali et al., Current Chinese Engineering Science, 2022 Comparative Study
    of Routing Protocols for IoT Networks Ankit Verma et al., Recent Patents on Engineering,
    2023 A New Approach to the Position of Acupoints on the Back of Humans Shenglong
    Xie et al., Recent Patents on Mechanical Engineering, 2023 Acknowledgements to
    Contributors (2019) Recent Patents on Mechanical Engineering, 2019 A methodology
    for reliability of WSN based on software defined network in adaptive industrial
    environment Ying Duan et al., IEEE/CAA Journal of Automatica Sinica, 2017 Printing
    of wirelessly rechargeable solid-state supercapacitors for soft, smart contact
    lenses with continuous operations Jihun Park et al., Sci Adv, 2019 Searching for
    a Better Thermal Battery Ilan Gur et al., Science, 2012 Toward a Green Internet
    Diego Reforgiato Recupero, Science, 2013 Towards Long Lifetime Battery: AI-Based
    Manufacturing and Management Kailong Liu et al., IEEE/CAA Journal of Automatica
    Sinica, 2022 Powered by Related Journals Recent Patents on Mechanical Engineering
    International Journal of Sensors, Wireless Communications and Control Recent Advances
    in Electrical & Electronic Engineering View More Related Books Multistage Interconnection
    Network Design for Engineers Mechanical Engineering Technologies and Applications
    Semi-rotary and Linear Actuators for Compressed Air Energy Storage and Energy
    Efficient Pneumatic Applications View More Article Metrics 8 1 Journal Information
    About Journal Editorial Board Current Issue Volumes /Issues For Authors For Editors
    For Reviewers Explore Articles Open Access For Visitors Counter logo © 2024 Bentham
    Science Publishers | Privacy Policy"'
  inline_citation: '>'
  journal: Recent Patents on Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A review of recent patents on lorawan
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Gasser L.
  - Le Gall F.
  - Abily M.
  citation_count: '0'
  description: Greening initiatives are urban planning strategies that rely on the
    development of public green spaces supporting multiple urban system functions.
    In a global water scarcity context, however, green space irrigation is a key aspect.
    Dynamic optimisation of irrigation plans is one viable answer for water consumption
    mitigation, which is not widely implemented at municipal levels in the EU. Yet,
    hydroinformatics-based mature and market-ready methods and technologies can support
    its implementation and should allow its embedment within the smart-city concept.
    Here, a simple interoperable approach for optimisation of dynamic irrigation planning
    has been implemented in public green space parcels of a French Mediterranean coastal
    city. The approach relies on smart sensors, a water balance model, an optimisation
    algorithm, and weather forecast data integration, all encapsulated in the standardised
    and open-source FIWARE ecosystem. The results of the dynamic irrigation plan led
    to a 35% water saving during the dry season and to more than 60% water saving
    during the dry–wet season transition period. The used standard technologies and
    approach could fit a broad range of smart-city digital platforms without any technical
    challenge.
  doi: 10.1080/27678490.2023.2294076
  full_citation: '>'
  full_text: '>

    "Access provided by University of Nebraska, Lincoln Log in  |  Register Cart Home
    All Journals LHB List of Issues Volume 110, Issue 1 Water efficiency in smart
    cities: optimi .... Search in:                                        This Journal                                                                                Anywhere                                                                  Advanced
    search LHB Hydroscience Journal Volume 110, 2024 - Issue 1 Submit an article Journal
    homepage Open access 600 Views 0 CrossRef citations to date 0 Altmetric Listen
    Research Article Water efficiency in smart cities: optimising irrigation for public
    green spaces Villes intelligentes et optimisation de l’irrigation pour les espaces-verts
    L. Gasser , F. Le Gall & M. Abily Article: 2294076 | Published online: 24 Jan
    2024 Cite this article https://doi.org/10.1080/27678490.2023.2294076 In this article
    ABSTRACT Graphical abstract 1. Introduction 2. Methodology 3. Results 4. Conclusion
    and perspectives 5. List of hardware and software Disclosure statement Additional
    information References Full Article Figures & data References Citations Metrics
    Licensing Reprints & Permissions View PDF Formulae display:? ABSTRACT Greening
    initiatives are urban planning strategies that rely on the development of public
    green spaces supporting multiple urban system functions. In a global water scarcity
    context, however, green space irrigation is a key aspect. Dynamic optimisation
    of irrigation plans is one viable answer for water consumption mitigation, which
    is not widely implemented at municipal levels in the EU. Yet, hydroinformatics-based
    mature and market-ready methods and technologies can support its implementation
    and should allow its embedment within the smart-city concept. Here, a simple interoperable
    approach for optimisation of dynamic irrigation planning has been implemented
    in public green space parcels of a French Mediterranean coastal city. The approach
    relies on smart sensors, a water balance model, an optimisation algorithm, and
    weather forecast data integration, all encapsulated in the standardised and open-source
    FIWARE ecosystem. The results of the dynamic irrigation plan led to a 35% water
    saving during the dry season and to more than 60% water saving during the dry–wet
    season transition period. The used standard technologies and approach could fit
    a broad range of smart-city digital platforms without any technical challenge.
    Graphical abstract Display full size RÉSUMÉ Les initiatives de verdissement sont
    des stratégies d’urbanisme reposant sur le développement d’espaces-verts publics.
    Elles soutiennent nombre de fonctions des systèmes urbains. L’irrigation des espaces
    verts reste un aspect clé de ces stratégies de verdissement. L’optimisation dynamique
    des plans d’irrigation de ces espaces-verts représente une réponse viable pour
    atténuer la consommation d’eau associée mais est peux implémentée à l’échelle
    municipal au sein de l’UE. Néanmoins, des méthodes et technologies matures, basées
    sur des outils d’hydroinformatique, permettent la mise en œuvre de systèmes d’optimisation
    dynamique, autorisant par ailleurs une intégration dans le concept de ville intelligente.
    Ici, une approche simple et interopérable pour l’optimisation de la planification
    dynamique de l’irrigation a été mise en œuvre dans des parcelles d’espaces verts
    publics d’une ville méditerranéenne française sur une période test. L’approche
    repose sur des capteurs intelligents, un modèle de bilan hydrique, un algorithme
    d’optimisation et l’intégration de données de prévisions météorologiques, le tout
    est encapsulé dans l’écosystème FIWARE, un standard pour plateformes IoT open-source.
    Les résultats montrent une économie d’eau de 35% pendant la saison sèche et de
    60% pendant la période de transition saison sèche-saison humide. Les technologies
    et l’approche open sources utilisées s’adapteraient ainsi à une large gamme de
    plateformes numériques de villes intelligentes sans aucun défi technique. KEYWORDS:
    IOTNBSurban planninginteroperabilityFIWARE framework MOTS-CLÉS: IOT solutions
    basées sur la nature urbanisme environnement FIWARE 1. Introduction In municipalities,
    public green spaces represent a key component of the urban system whose primary
    function is to offer embellishment, leisure, and well-being spaces to citizens.
    These urban green spaces also provide increased infiltration that reduces flood
    runoff (Benedict & McMahon, 2002; Qi et al., 2023) and reduced air temperature
    that increases comfort during heatwaves (Augusto et al., 2020; Rocha et al., 2022).
    The role of urban green spaces in reducing heat and enhancing infiltration becomes
    increasingly important (Oral et al., 2020; Probst et al., 2022) as climate change
    increases the frequency of occurrence of extreme heatwaves and rainfall events
    (IPCC, 2022a, 2022b). Therefore, public green spaces in cities, trendily referred
    to as parts of nature-based solutions (NBSs), are a constitutive part of greening
    initiatives in current and future EU cities’ urban planning (Castellar et al.,
    2022; Dicks, 2015; Dorst et al., 2019). Key aspects of managing these municipal
    green spaces are maintenance and water consumption (Nouri et al., 2019). For example,
    in EU Mediterranean cities, water consumption represents on average 1 m3/m2 per
    year for turf grass (±20%; Domene & Saurí, 2006; Morote-Seguido & Hernandez-Hernandez,
    2016). In a water scarcity-driven context, management towards efficient use of
    the water resource is stressed by the United Nations’ Sustainable Development
    Goals (SDG 6.4, SDG 6.B; UNDP, 2017), and the EU is pushing to make the water
    efficiency dimension a high priority for the member states (European Commission,
    2019). Therefore, strategies are being implemented to mitigate water consumption
    in public green spaces, such as the selection of species more resistant to water
    stress or the reuse of treated wastewater (Castellar et al., 2022; Qtaishat et
    al., 2022; Santana et al., 2019). Another obvious way to improve green spaces’
    water consumption efficiency is through irrigation optimisation. In the optimisation
    of the irrigation of these green spaces, hydroinformatics is a key supporting
    field, having a transversal role in integrating water sciences (i.e. hydrological,
    hydraulic and environmental), data sciences (statistics; stochastic, data-driven
    analytics), computer science and information and communication technologies (ICT),
    and society (Holz et al., 2014). In this regard, the implementation of the smart
    city and smart water concepts, supported by the hydroinformatics field, is growing
    in terms of numbers and types of applications in the water sector (Gourbesville,
    2016; Gourbesville & Ma, 2022: Monzon, 2015). However, practical applications
    in urban irrigation are not yet broadly implemented (Aldegheishem et al., 2022;
    Monteiro et al., 2021). Moreover, when implemented, no hydroinformatics-based
    urban irrigation optimisation solutions with a highly transversal data assimilation
    level were found [e.g. no applications have been found integrating weather forecast
    data assimilation outside of the agricultural irrigation sector (Alves et al.,
    2023)]. The aim of the present paper is to demonstrate the feasibility and efficiency
    of dynamic optimisation of irrigation plan implementation for urban public green
    spaces, based on an interoperable hydroinformatics approach. The goal is to illustrate
    the potential of this type of solution for efficient water resource use and the
    ease of implementation of this market-ready method and technology, to facilitate
    its implementation at municipal levels. Here, a simple but holistic irrigation
    optimisation strategy has been carried out at the level of parcels set in a French
    Mediterranean coastal city, relying on four key components: smart sensors, water
    balance model, optimisation algorithm, and weather forecast data integration.
    The novelty lies in the ease and readiness of implementation which should pave
    the way to further encompass these types of hydroinformatics-based solutions at
    the municipal level. Firstly, the overall concept is presented: the method, the
    test case characteristics in a semi-arid Mediterranean city, and the tested set-up.
    Secondly, we present the results at the parcel scale of the solution capabilities
    in terms of implementation, the outcomes in terms of water savings, and added
    value for irrigation optimisation strategies and planning. Lastly, added values
    and limits are discussed and put into perspective. 2. Methodology 2.1. Concept
    design The goal of the concept is to provide an optimal irrigation plan for the
    upcoming week. This plan is to be determined using the architecture and technology
    components illustrated in Figure 1. The concept relies on the standard and open-source
    technology framework FIWARE ( 2020). This allows not only the replicability of
    the solution but also, due to its structure based on standard generic enablers
    (Alves et al., 2023), the ease of its implementation in other platforms with broader
    purposes thanks to the interoperability properties of the FIWARE framework [e.g.
    smart water platform, municipality-scale hypervisor or extending a digital twin
    (Lewis et al., 2023)]. Figure 1. Key layers, components and protocols of the developed
    system. Display full size The system is composed of two main sources of data:
    (i) capacitance sensors, able to measure soil volumetric moisture; and (ii) an
    Application Programming Interface (API) service providing real-time precipitation
    and evapotranspiration estimates with forecasts of precipitation and evapotranspiration
    for the upcoming 14 days. Data are managed by the Stellio Context Information
    Broker, which is a platform that allows connection and information sharing between
    all types of use cases. The main asset of the Context Information Broker is the
    Next Generation Service Interfaces Linked Data (NGSI-LD) Context Information Management
    API, which allows easy retrieval of the data with powerful temporal or geospatial
    queries. It also includes a set of components that satisfy the NGSI-LD specification
    and are compatible with the FIWARE ecosystem to increase interoperability. FIWARE
    Draco, which is an open-source data flow manager based on Apache Nifi, is used
    to process incoming data and perform data validation. Two processes (described
    in section 2.3.3) then use those data: A soil water balance model that uses the
    last soil moisture measurement and the forecasted meteorological data for the
    next n days to provide a forecast of soil moisture for the next n days. An optimisation
    algorithm that uses those forecasted soil moisture values to provide an optimal
    irrigation plan for the next n days. 2.2. Study area The test case is a mid-sized
    French Mediterranean city (30,000 inhabitants) located on the French Riviera which
    sees its population triple during the summer season when both water resources
    and vegetation are under the peak stress. The method is tested on 24 parcels of
    public green spaces, ranging from 50 m2 to 300 m2 and representing a total area
    of about 3000 m2. Two different irrigation systems are in place: (i) drip irrigation
    (on six parcels), and (ii) sprinkler irrigation (on 18 parcels). Each parcel is
    controlled by an auto-valve, which allows the provisioning of different irrigation
    plans for each sector if needed. The original standard irrigation scheme implemented
    by the municipality is the following: for the drip irrigation sectors: 1 m3 distributed
    in 90 min, every Monday and Thursday (during the night); for the sprinkler irrigation
    sectors: 3 m3 distributed in four time slots of 5 min (spread over 3 h), every
    Monday, Wednesday, and Friday (during the night). Over these parcels, the yearly
    water consumption is approximately 7000 m3 with this original standard irrigation
    scheme. 2.3. Data sources 2.3.1. Smart sensors and measurement strategy Three
    parameters of interest are measured: (i) soil humidity, (ii) soil temperature,
    and (iii) quantity of water used for irrigation. The soil volumetric humidity
    (in m3/m3) and the soil temperature are measured at a depth of 0.15 m by an electrical
    capacitance sensor (Sensecap VWC sensor) known to be reliable for continuous measurements
    (Singh et al., 2018). Multiplying the soil volumetric humidity by the depth of
    the soil allows the estimation of the water content (in mm). To measure the quantity
    of water used for irrigation, a pulse counter device is used to measure the flow
    on the main valve (i.e. the flow for all sectors). Soil humidity and soil temperature
    are measured at three different locations chosen to be representative of the possible
    range of conditions of the green spaces in the study case: a full sun-exposed
    grass-covered parcel, a parcel with mixed shadow/sunny exposure covered by grass,
    and a bushy parcel (Figure 2). Each of the 24 parcels is linked to the soil moisture
    measurements of one of the three above-mentioned monitored zones depending on
    its sun exposure/vegetation cover type. Figure 2. Schematic overview of the instrumented
    public green space. Display full size Measurement data are sent hourly for the
    sensecap sensors, and each second for the flowmeter via a Long Range Wide Area
    Network (LoRaWAN) radio communication protocol which provides a low-power wide-area
    network (Aldegheishem et al., 2022). The data are available in hourly time steps,
    and the Stellio Context Broker API makes it very easy to obtain any type of temporal
    aggregation instantaneously to be used later. In this case, the irrigation optimisation
    algorithm presented below operates on a daily time step. Measurement campaigns
    were performed over the course of 7 months, divided into two periods: a 1 month
    (mid-May to mid-June) dry period; a 4 month (mid-September to mid-December) dry–wet
    transition period. The period between mid-June and mid-September is not used since
    the irrigation in the area was shut down at a regional scale due to a severe drought
    leading to governmental irrigation restrictions. 2.3.2. Weather forecast provider
    The reference evapotranspiration and rainfall intensity nowcast and the 7 day
    forecast datasets are provided by an external API service. The data are received
    and processed using FIWARE Draco. This weather forecast service provides real-time
    measurement and forecasted values for many different types of weather data (Zebiri,
    2020). A comparison between forecasted and observed values was performed (Figure
    3) to assess the quality of the provided forecast, and the root mean square error
    metric (RMSE) was calculated to quantify the accuracy. Forecasted values are available
    for 14 days with daily updates. Here, the next 7 days forecast window is used.
    For evapotranspiration, the forecasted estimated values 7 days in advance are
    very close to the observed ones; the RMSE is 0.6 mm, which translates correct
    accuracy. However, for precipitation, the occurrence of events higher than a 2
    mm.day−1 threshold is properly captured but the intensity of the precipitation
    is not reliable, as illustrated in Figure 3. The error on the high-intensity episode
    leads to a worse global accuracy and a higher RMSE of 4.1 mm. Figure 3. Difference
    between observed and forecasted daily values for precipitation and evapotranspiration
    data. Display full size 2.4. Mass balance and optimisation algorithms The two
    principal components of the irrigation planning computation method are: a mass
    balance model, which allows prediction of the soil humidity based on measurements
    and forecasts; an optimisation function that adjusts the irrigation quantity for
    a design period (here, 1 week) based on the mass balance model. The objective
    of the optimisation model is to determine the lowest water quantity that can be
    delivered, while still maintaining the soil moisture at a sufficient level (i.e.
    minimising the risk for the plant). The mass balance model is based on water input
    and output over a soil volume. It is a simple yet still widely used model in the
    irrigation area (Pereira et al., 2020; Sammis et al., 2012). The mass conservation
    equation can be written as follows: Δ SWC = P + I − ET − SR − DP + CR (1) where
    SWC is the soil water content, P is the rainfall precipitation, I is the applied
    irrigation, ET is the evapotranspiration, SR is the surface runoff, DP represents
    the deep percolation and CR is the capillary rise. The balance is estimated with
    a daily time step which yields: Δ SWC t = SWC t − SWC t − 1 (2) where t is equal
    to the current day. Equation (1) then becomes: SWC t = SWC t − 1 + P t + I t −
    ET t − SR t − DP t + CR t (3) where t + 1 corresponds to the following day and
    where – except for SWC(t), which is measured in real time – all the values are
    forecasted. Indeed, as a reminder, ET(t) and P(t) are provided for a sliding window
    of 1–2 weeks, whereas I(t) is the value to optimise and SWC(t) is the output of
    the model. Surface runoff, deep percolation and capillary rise were calculated
    from the other components using the methods given by Villalobos and Fereres (
    2016). Eventually, as all values are predicted for n days, replacing predicted
    SWC(t) with predicted SWC(t), irrigation planning can be foreseen up to t + n
    days. If one can predict the SWC with this model, one can establish a parsimonious
    irrigation optimisation strategy to balance the irrigation volume with the required
    SWC conditions. To do so, the developed algorithm is based on three SWC thresholds,
    as follows: Comfort threshold: Above this specified SWC value, the plants are
    in optimal irrigation condition. Saturated threshold: Above this specified SWC,
    the plant receives too much water, leading to water overconsumption and potentially
    improper phytosanitary conditions. Critical threshold: below this specified SWC
    value, the plant does not have access to sufficient water resources to secure
    proper maintenance and development. The threshold values are specified by the
    user depending on the specific plants’ requirements and on the user’s local experience
    with plants’ requirements for the specific parcels. The thresholds are defined
    as follows: θ PWP + 1 − AD θ FC − θ PWP (4) where θ PWP is the soil volumetric
    moisture at the permanent wilting point, θ FC is the soil volumetric moisture
    at field capacity, and AD is the allowable depletion. It allows the description
    of threshold values independent from the soil volumetric moisture limit values
    defined previously. For example, a value of AD of 0.2 means that the threshold
    is equal to 80% of the soil capacity. Here, the selected AD values were 0.2, 0
    and 0.4 for the comfort, saturated and critical thresholds, respectively, which
    are standard values for turf grass (Villalobos & Fereres, 2016). The optimisation
    algorithm functions as follows: depending on the authorised/scheduled period where
    irrigation is authorised (here, days), the algorithm cuts the planning into sub-periods,
    starting with an authorised irrigation day. Then, for each sub-period, the algorithm
    uses an initial prediction of the model and increments during the allowed period
    the release of a fully open 1 min irrigation discharge until the critical threshold
    is exceeded for all the days of the period. Then, it iteratively increases the
    irrigation discharge/period until the comfort threshold is exceeded, as long as
    the saturation threshold is not exceeded for any of the days of the given period.
    The considered hierarchy regarding the thresholds can thus be summarised as follows:
    The critical threshold is the one that must be reached absolutely every day. Next,
    the saturation threshold should not be exceeded unless it means being below the
    critical threshold on any day. Finally, the comfort threshold must be exceeded
    unless this would imply that certain days are above the saturation threshold.
    The optimisation algorithm also takes into consideration the existing irrigation
    schedule constraints which might depend on various external factors such as strategic
    choice by municipality operators to cope with water cost, water resource-specific
    availability (e.g. for water reuse during a certain specific time slot constraint,
    etc.), operators’ availability, conflict of usage of the public space, etc. 3.
    Results The outcome of the irrigation planning dynamic optimisation method on
    different inter-seasonal conditions is here assessed. The results are considered
    successful when: in implementing the irrigation plan, the predicted and measured
    soil moisture are in good adequation, as close as possible to the defined comfort
    zone; water saving is observed compared to the original irrigation plan; vegetation
    does not suffer any water-induced stress in the parcels. The results are presented
    in two parts: (i) during the 1 month dry period, used as a reference, for a sprinkler
    irrigation sector; then (ii) during the 4 month dry–wet transition period, for
    a drip irrigation sector. 3.1. Dry period, sprinkler irrigation sector The irrigation
    programme recommended by the algorithm and the resulting predicted soil volumetric
    moisture are presented in Figures 4 and 5. Figure 4. Recommended irrigation, measured
    irrigation and precipitation during the 1 month dry test period for a sprinkler
    irrigation sector. Display full size Figure 5. Resulting predictions of soil moisture
    compared to measurements from the sensor during the 1 month dry test period for
    a sprinkler irrigation sector. Display full size Figure 4 is representative of
    a 1 month dry period as precipitation was very scarce (15.7 mm cumulated over
    the month; no event exceeds 4 mm). In the absence of precipitation, using mostly
    the soil moisture targeted value, the algorithm still manages to significantly
    reduce the quantity of water used for irrigation, from 37.6 m3 to 24.1 m3 over
    that period. This represents a 35% saving on the water resource. Indeed, Figure
    5 shows that reducing the irrigation has a very limited impact on the predicted
    soil volumetric moisture, which stays very high during the entirety of the period
    (the permanent wilting point for this sector is 0.12 m3/m3). The RMSE between
    forecasted and measured soil moisture is 3.4%, indicating a satisfying reliability
    of the water balance model. Thus, using the algorithm in this test dry period
    allows the improvement of irrigation efficiency. It also led to figuring out that
    here, 35% of the volume of water was lost due to deep percolation and surface
    runoff (Figure 6). Figure 6. Water balance model components comparing measured
    (top) and recommended (bottom) irrigation during the 1 month dry period. Display
    full size 3.2. Wet period, drip irrigation sector For this period, the irrigation
    programme recommended by the algorithm and the resulting predicted soil volumetric
    moisture are presented in Figures 7 and 8, respectively. Over the 4 month period,
    the first 2 months (September–October) still had an elevated temperature and vegetation
    with high physiological activity, favouring evapotranspiration, and a few significant
    rainfall events: two events with more than 10 mm per 24 h each (Figure 7). Over
    that period, the recommended irrigation planning allowed water savings mostly
    in October. The algorithm used the forecasted rainfall events to reduce the irrigation
    volume 7 days in advance, while allowing the maintenance of soil moisture around
    the comfort zone (Figure 8). For this sector, RMSE between forecasted and measured
    soil moisture is 5.6%. It should be noted that for the month of September, which
    corresponds to the tail end of the dry season, the recommended irrigation did
    not differ from the standard irrigation scheme as the soil moisture was far below
    the critical threshold. Thus, even though a rainfall event was forecasted, no
    irrigation cut has been planned until the soil moisture critical threshold is
    surpassed. Figure 7. Recommended irrigation, measured irrigation and precipitation
    during the 4 month dry-to-wet period transition for the drip irrigation sector.
    Display full size Figure 8. Resulting prediction of soil moisture compared to
    measurements from the sensor during the 4 month dry-to-wet period transition for
    the drip irrigation sector. Display full size The second 2 month sub-period (November–December)
    had a relatively lower temperature, with declining vegetal physiological activity
    and with rainfall events becoming more regular (Figure 7). The irrigation was
    then cut in response to the predicted rainfall, while maintaining an optimal soil
    moisture level (comfort zone). Over the 4 month period, for these sectors, the
    recommended irrigation volume has been reduced from 19.95 m3 to 6.5 m3. This represents
    a 67% water saving for these two parcels. However, this important saving percentage
    will be moderated as the initial irrigation programme has not been modified, and
    it is likely that under normal operation procedure, the municipality would have
    reduced the irrigation frequency starting from November. 4. Conclusion and perspectives
    The benefits of technical implementation of public green space optimised irrigation
    planning relying on hydroinformatics components are here demonstrated. Smart sensors,
    water balance models, optimisation algorithms, and weather forecasts are combined,
    and the operational capability of the system is displayed. Irrigation plan optimisation
    led to a 35% water saving during the dry season and more than 60% water saving
    during the dry–wet season transition period. The open-source standard technology
    and approach used here can be included in the municipality hypervisor without
    any key technical challenge to fit with an orchestrated implementation of the
    smart city/smart water concept. Indeed, relying on the FIWARE framework, the developed
    hydroinformatics-based method uses common and popular smart-city/software conventions,
    rendering the proposed work maintainable and interoperable from the perspective
    of software engineering. Limitations are those depending on the quality of the
    entry data (measured and forecasted). Also using a small number of sensors with
    respect to the number of parcels means that the irrigation of non-instrumented
    parcels is driven by the soil moisture feedback of a different parcel. This can
    induce some undetected drift and requires particular on-field attention. The implications
    of scaling such an application to an entire city would therefore require particular
    attention, especially in the instrumentation and drift control strategies. Other
    types of sensors could be tested for this application, such as tensiometers, which
    are used for irrigation scheduling (Intrigliolo & Castel, 2004) but are less compatible
    with the presented water balance model. The optimisation can be further improved
    to upgrade to a multivariate problem such as crop growth status requirements,
    water restriction or water reuse programming constraints, etc., in the irrigation
    planning optimisation. 5. List of hardware and software Table Download CSVDisplay
    Table Disclosure statement The authors report there are no competing interests
    to declare. Data availability statement The data that support the findings of
    this study are available from the corresponding author, upon reasonable request.
    Additional information Funding M. Abily contribution was supported by the Spanish
    Ministry of Science and, Innovation and Universities (MCIU), the State Agency
    of Investigation (AEI) and the EU FEDER program (project INVEST: RTI2018-097471-B-C21),
    the Generalitat de Catalunya through the Consolidated Research Group grant 2021
    SGR 01282 ICRA-ENV and the funding from the CERCA programme of the Catalan government.
    References Aldegheishem, A., Alrajeh, N., García, L., & Lloret, J. (2022). SWAP:
    Smart Water Protocol for the irrigation of urban gardens in smart cities. IEEE
    Access, 10, 39239–10. https://doi.org/10.1109/ACCESS.2022.3165579  Web of Science
    ®Google Scholar Alves, R. G., Maia, R. F., & Lima, F. (2023). Development of a
    digital twin for smart farming: Irrigation management system for water saving.
    Journal of Cleaner Production, 388, 135920. https://doi.org/10.1016/j.jclepro.2023.135920  Web
    of Science ®Google Scholar Augusto, B., Roebeling, P., Rafael, S., Ferreira, J.,
    Ascenso, A., & Bodilis, C. (2020). Short and medium-to long-term impacts of nature-based
    solutions on urban heat. Sustainable Cities and Society, 57, 102122. https://doi.org/10.1016/j.scs.2020.102122  Web
    of Science ®Google Scholar Benedict, M. A., & McMahon, E. T. (2002). Green infrastructure:
    Smart conservation for the 21st century. Renewable Resources Journal, 20(3), 12–17.  Google
    Scholar Castellar, J. A., Torrens, A., Buttiglieri, G., Monclús, H., Arias, C.
    A., Carvalho, P. N., Galvao, A., & Comas, J. (2022). Nature-based solutions coupled
    with advanced technologies: An opportunity for decentralized water reuse in cities.
    Journal of Cleaner Production, 340, 130660. https://doi.org/10.1016/j.jclepro.2022.130660  Web
    of Science ®Google Scholar Dicks, H. (2015). Penser le nouveau paradigme de l’hydrologie
    urbaine: Biomimétisme, éco-phénoménologie, et gestion intégrée. La Houille Blanche,
    5(5), 92–98. https://doi.org/10.1051/lhb/20150060  Google Scholar Domene, E.,
    & Saurí, D. (2006). Urbanisation and water consumption: Influencing factors in
    the metropolitan region of Barcelona. Urban Studies, 43(9), 1605–1623. https://doi.org/10.1080/00420980600749969  Web
    of Science ®Google Scholar Dorst, H., Van der Jagt, A., Raven, R., & Runhaar,
    H. (2019). Urban greening through nature-based solutions–Key characteristics of
    an emerging concept. Sustainable Cities and Society, 49, 101620. https://doi.org/10.1016/j.scs.2019.101620  Web
    of Science ®Google Scholar European Commission. (2019). The European Green Deal.
    COM (2019) 640 final. 11 December 2019, Brussels. https://ec.europa.eu/info/sites/info/files/european-green-deal-communication_en.pdf  Google
    Scholar FIWARE. (2020). Fiware catalogue. Retrieved January 7, 2023, from https://bit.ly/3G0P1Sx  Google
    Scholar Gourbesville, P. (2016). Key challenges for smart water. Procedia Engineering,
    154, 11–18. https://doi.org/10.1016/j.proeng.2016.07.412  Google Scholar Gourbesville,
    P., & Ma, Q. (2022). Smart river management: What is next? River, 1(1), 37–46.
    https://doi.org/10.1002/rvr2.13  Google Scholar Holz, K. P., Cunge, J., Lehfeldt,
    R., & Savic, D. (2014). Hydroinformatics Vision 2011. In P. Gourbesville, J. Cunge,
    & G. Caignaert (Eds.), Advances in hydroinformatics (pp. 545–560). Springer Hydrogeology.
    https://doi.org/10.1007/978-981-4451-42-0_44  Google Scholar Intrigliolo, D. S.,
    & Castel, J. R. (2004). Continuous measurement of plant and soil water status
    for irrigation scheduling in plum. Irrigation Science, 23(2), 93–102. https://doi.org/10.1007/s00271-004-0097-7  Web
    of Science ®Google Scholar IPCC. (2022a). Summary for Policymakers. In P. R. Shukla,
    J. Skea, R. Slade, A. Al Khourdajie, R. van Diemen, D. McCollum, M. Pathak, S.
    Some, P. Vyas, R. Fradera, M. Belkacemi, A. Hasija, G. Lisboa, S. Luz, J. Malley
    (Eds.), ClimateChange 2022: Mitigation of Climate Change. Contribution of Working
    Group III to the Sixth Assessment Report of the Intergovernmental Panel on Climate
    Change (pp. 2029). Cambridge University Press.  Google Scholar IPCC. (2022b).
    Climate change 2022: Impacts, adaptation,and vulnerability. In H.-O. Pörtner,
    D. C. Roberts, M. Tignor, E. S. Poloczanska, K. Mintenbeck, A. Alegría, M. Craig,
    S. Langsdorf, S. Löschke, V. Möller, A. Okem, & B. Rama (Eds.), Contribution of
    Working Group II to the Sixth Assessment report of the intergovernmental panel
    on climate change (pp. 3056). Cambridge University Press. https://doi.org/10.1017/9781009325844  Google
    Scholar Lewis, G., Snider, B., Vamvakeridou-Lyroudia, L., Chen, A., Djordjević,
    S., & Savić, D. (2023). Developing water monitoring solutions with FIWARE defining,
    creating, populating, and extending digital twins. IOP Conference Series: Earth
    and Environmental Science, 1136, 012003. https://doi.org/10.1088/1755-1315/1136/1/012003  Google
    Scholar Monteiro, L., Cristina, R., & Covas, D. (2021). Water and energy efficiency
    assessment in urban green spaces. Energies, 14(17), 5490. https://doi.org/10.3390/en14175490  Web
    of Science ®Google Scholar Monzon, A. (2015).Smart cities concept and challenges:
    Bases for the assessment of smart city projects. In 2015 International Conference
    on Smart Cities and Green ICT Systems (SMARTGREENS) (pp. 1–11), IEEE.  Google
    Scholar Morote-Seguido, A. F., & Hernandez-Hernandez, M. (2016). Green areas and
    water management in residential developments in the European Western Mediterranean.
    A case study of Alicante, Spain. Geografisk Tidsskrift-Danish Journal of Geography,
    116(2), 190–201. https://doi.org/10.1080/00167223.2016.1211483  Web of Science
    ®Google Scholar Nouri, H., Borujeni, S. C., & Hoekstra, A. Y. (2019). The blue
    water footprint of urban green spaces: An example for Adelaide, Australia. Landscape
    and Urban Planning, 190, 103613. https://doi.org/10.1016/j.landurbplan.2019.103613  Web
    of Science ®Google Scholar Oral, H. V., Carvalho, P., Gajewska, M., Ursino, N.,
    Masi, F., Hullebusch, E. D. V., Kazak, J. K., Exposito, A., Cipolletta, G., Andersen,
    T. R., Finger, D. C., Simperler, L., Regelsberger, M., Rous, V., Radinja, M.,
    Buttiglieri, G., Krzeminski, P., Rizzo, A., Dehghanian, K., & Zimmermann, M. (2020).
    A review of nature-based solutions for urban water management in European circular
    cities: A critical assessment based on case studies and literature. Blue-Green
    Systems, 2(1), 112–136. https://doi.org/10.2166/bgs.2020.932  Google Scholar Pereira,
    L. S., Paredes, P., & Jovanovic, N. (2020). Soil water balance models for determining
    crop water and irrigation requirements and irrigation scheduling focusing on the
    FAO56 method and the dual Kc approach. Agricultural Water Management, 241, 106357.
    https://doi.org/10.1016/j.agwat.2020.106357  Web of Science ®Google Scholar Probst,
    N., Bach, P. M., Cook, L. M., Maurer, M., & Leitão, J. P. (2022). Blue Green Systems
    for urban heat mitigation: Mechanisms, effectiveness and research directions.
    Blue-Green Systems, 4(2), 348–376. https://doi.org/10.2166/bgs.2022.028  Google
    Scholar Qi, Y., Chan, F. K. S., Feng, M., Griffiths, J., Hutchins, M., O’Donnell,
    E., Thorne, C., Liu, L., Zhang, C., & Li, X. (2023). Developing a “Sponge Catchment
    Management Plan(SCMP)” framework at the catchment scale: The case of Guiyang,
    SW China. River, 2(1), 109–125. https://doi.org/10.1002/rvr2.33QIETAL.|125  Google
    Scholar Qtaishat, Y., Hofman, J., & Adeyeye, K. (2022). Circular water economy
    in the EU: Findings from demonstrator projects. Clean Technologies, 4(3), 865–892.
    https://doi.org/10.3390/cleantechnol4030054  Google Scholar Rocha, A. D., Vulova,
    S., Meier, F., Förster, M., & Kleinschmit, B. (2022). Mapping evapotranspirative
    and radiative cooling services in an urban environment. Sustainable Cities and
    Society, 85, 104051. https://doi.org/10.1016/j.scs.2022.104051  Web of Science
    ®Google Scholar Sammis, T., Sharma, P., Shukla, M. K., Wang, J., & Miller, D.
    (2012). A water-balance drip-irrigation scheduling model. Agricultural Water Management,
    113, 30–37. https://doi.org/10.1016/j.agwat.2012.06.012  Web of Science ®Google
    Scholar Santana, M. V., Cornejo, P. K., Rodríguez-Roda, I., Buttiglieri, G., &
    Corominas, L. (2019). Holistic life cycle assessment of water reuse in a tourist-based
    community. Journal of Cleaner Production, 233, 743–752. https://doi.org/10.1016/j.jclepro.2019.05.290  Web
    of Science ®Google Scholar Singh, J., Lo, T., Rudnick, D. R., Dorr, T. J., Burr,
    C. A., Werle, R., Shaver, T. M., & Muñoz-Arriola, F. (2018). Performance assessment
    of factory and field calibrations for electromagnetic sensors in a loam soil.
    Agricultural Water Management, 196, 87–98. https://doi.org/10.1016/j.agwat.2017.10.020  Web
    of Science ®Google Scholar UNDP. (2017). Human development reports database.  Google
    Scholar Villalobos, F. J., & Fereres, E. (eds). (2016). Principles of agronomy
    for sustainable agriculture. Springer International Publishing. https://doi.org/10.1007/978-3-319-46116-8  Google
    Scholar Zebiri, A. (2020). Estimation de la dynamique à partir de l’assimilation
    d’images radars multi-échelles: application à la prévision des taux de précipitation
    à courte échéance, à partir des images radars [ Ph. D. thesis, Sorbonne université].
    https://doi.org/10.1017/9781009157926.001  Google Scholar Download PDF X Facebook
    LinkedIn Email Share Related research  People also read Recommended articles Cited
    by Réviser les courbes intensité-durée-fréquence dans un contexte de nouvelle
    donne hydro-climatique : de la détection de tendances à l’application opérationnelle
    Guillaume Chagnaud et al. LHB Published online: 2 Jan 2024 Utilisation du modèle
    hydrodynamique 1D Mascaret pour la prévision des crues Etienne Le Pape et al.
    LHB Published online: 12 Feb 2024 Évolution du manteau neigeux pendant la sécheresse
    de 2022 en France Simon Gascoin et al. LHB Published online: 1 Mar 2024 Information
    for Authors R&D professionals Editors Librarians Societies Open access Overview
    Open journals Open Select Dove Medical Press F1000Research Opportunities Reprints
    and e-prints Advertising solutions Accelerated publication Corporate access solutions
    Help and information Help and contact Newsroom All journals Books Keep up to date
    Register to receive personalised research and resources by email Sign me up Copyright
    © 2024 Informa UK Limited Privacy policy Cookies Terms & conditions Accessibility
    Registered in England & Wales No. 3099067 5 Howick Place | London | SW1P 1WG     Cookies
    Button About Cookies On This Site We and our partners use cookies to enhance your
    website experience, learn how our site is used, offer personalised features, measure
    the effectiveness of our services, and tailor content and ads to your interests
    while you navigate on the web or interact with us across devices. By clicking
    \"Continue\" or continuing to browse our site you are agreeing to our and our
    partners use of cookies. For more information seePrivacy Policy CONTINUE"'
  inline_citation: '>'
  journal: 'LHB: Hydroscience Journal'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Water efficiency in smart cities: optimising irrigation for public green
    spaces'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bhattacharjee S.B.
  - Gangwar S.
  - Kumar M.
  - Saini K.
  - Saini R.
  - Chauhan S.
  - Pandey K.
  - Essah R.
  - Goyal N.
  citation_count: '0'
  description: The secure and efficient sharing of data has been recognised as a significant
    concern in Internet of Things (IoT)-enabled smart systems, including smart cities,
    smart agriculture, and smart health applications. Smart systems utilise a substantial
    quantity of IoT devices, which in turn generate a significant volume of data.
    Internet of Things (IoT) devices typically possess constrained storage and processing
    capacities, making the implementation of security measures on such devices a difficult
    task. This paper presents a framework for secure data transmission using blockchain
    (SDTUB) for blockchain-based IoT systems, with a focus on enhancing data security.
    The use of clustered authorization aims to enhance the interoperability of IoT
    authorization. The central blockchain is employed for permission purposes concerning
    cluster management nodes, whereas the regional blockchain suffices for authorization
    of regular nodes. The proposed mechanism is implemented using MATLAB, and the
    performance is analysed using performance metrics such as energy consumption and
    objective value. In the proposed mechanism, the energy consumption is low compared
    to the AuBWSN technique.
  doi: 10.32629/jai.v7i2.1073
  full_citation: '>'
  full_text: '>

    "HOME ABOUT LOGIN ARCHIVES ANNOUNCEMENTS EDITORIAL BOARD SUBMISSIONS ABOUT PUBLISHER
    SPECIAL ISSUES Home > Open Journal Systems Editors-in-Chief  Prof. Michel Cotsaftis
    Director of Undergraduate Scientific Research Program/ECE Paris Graduate School
    of Engineering, Paris, France    Prof. Ali Kashif Bashir Department of Computing
    and Mathematics, Manchester Metropolitan University, United Kingdom Submission       ISSN   2630-5046(online)     Publishing
    Frequency   Bimonthly        Indexing & Archiving    Keywords   Artificial Intelligence;
    Deep Learning; Machine Learning; Modeling; Robot Control; Human-Computer Interaction;
    Intelligent System; Pattern Recognition Theory and Application; Biometric Identification
    User Username Password Remember me Article Tools How to cite item Review policy
    Journal Content Search Search Scope      All Authors Title Abstract Index terms
    Full Text      Browse By Issue By Author By Title Other Journals Information For
    Readers For Authors For Librarians An efficient framework for secure data transmission
    using blockchain in IoT environment Shyama Barna Bhattacharjee, Shivam Gangwar,
    Manish Kumar, Kirti Saini, Rashmi Saini, Shivani Chauhan, Krishna Pandey, Richard
    Essah, Nitin Goyal  Abstract  The secure and efficient sharing of data has been
    recognised as a significant concern in Internet of Things (IoT)-enabled smart
    systems, including smart cities, smart agriculture, and smart health applications.
    Smart systems utilise a substantial quantity of IoT devices, which in turn generate
    a significant volume of data. Internet of Things (IoT) devices typically possess
    constrained storage and processing capacities, making the implementation of security
    measures on such devices a difficult task. This paper presents a framework for
    secure data transmission using blockchain (SDTUB) for blockchain-based IoT systems,
    with a focus on enhancing data security. The use of clustered authorization aims
    to enhance the interoperability of IoT authorization. The central blockchain is
    employed for permission purposes concerning cluster management nodes, whereas
    the regional blockchain suffices for authorization of regular nodes. The proposed
    mechanism is implemented using MATLAB, and the performance is analysed using performance
    metrics such as energy consumption and objective value. In the proposed mechanism,
    the energy consumption is low compared to the AuBWSN technique.  Keywords  IoT;
    blockchain; security; attacks; authentication  Full Text: PDF References  1. Abosata
    N, Al-Rubaye S, Inalhan G, et al. Internet of Things for System Integrity: A Comprehensive
    Survey on Security, Attacks and Countermeasures for Industrial Applications. Sensors.
    2021, 21(11): 3654. doi: 10.3390/s21113654 2. Bezawada B, Bachani M, Peterson
    J, et al. Behavioral Fingerprinting of IoT Devices. Proceedings of the 2018 Workshop
    on Attacks and Solutions in Hardware Security. Published online January 15, 2018.
    doi: 10.1145/3266444.3266452 3. Bai L, Yao L, Kanhere SS, et al. Automatic Device
    Classification from Network Traffic Streams of IoT. In Proceedings of the 2018
    IEEE 43rd Conference on Local Computer Networks (LCN). IEEE. pp. 1-9. https://doi.org/10.1109/LCN.2018.8638098
    4. Kolcun R, Popescu DA, Safronov V, et al. Revisiting IoT Device Identification.
    arXiv, 2018, arXiv:2107.07818. 5. Yousefnezhad N, Malhi A, Främling K. Automated
    IoT Device Identification Based on Full Packet Information Using Real-Time Network
    Traffic. Sensors. 2021, 21(8): 2660. doi: 10.3390/s21082660 6. Sabir A, Sheeraz
    A, Fasee U, et al. IoT with BlockChain: A Futuristic Approach in Agriculture and
    Food Supply Chain. Wireless Communications and Mobile Computing, 2021, 5580179.
    doi: 10.1155/2021/5580179 7. Yongxin L, Wang J, Li J, et al. ML for the Detection
    and Identification of IoT Devices: A Survey. IEEE Internet of Things Journal,
    2020, 7, 298-320. doi: 10.1109/JIOT.2019.2922620 8. Azarmehr M, Mehta A, Rashidzadeh
    R. Wireless device identification using oscillator control voltage as RF fingerprint.
    In Proceedings of the 2017 IEEE 30th Canadian Conference on Electrical and Computer
    Engineering (CCECE). IEEE. pp. 1-4. doi: 10.1109/CCECE.2017.7946629 9. Bihl TJ,
    Bauer KW, Temple MA. Feature Selection for RF Fingerprinting with Multiple Discriminant
    Analysis and Using ZigBee Device Emissions. IEEE Transactions on Information Forensics
    and Security. 2016, 11(8): 1862-1874. doi: 10.1109/tifs.2016.2561902 10. Wang
    C, Lin Y, Zhang Z. Research on Physical Layer Security of Cognitive Radio Network
    Based on RF-DNA. In Proceedings of the 2017 IEEE International Conference on Software
    Quality, Reliability and Security Companion (QRS-C). IEEE. pp. 252-255. doi: 10.1109/QRS-C.2017.37
    11. Zhang A, Zhang P, Wang H, Lin X. Application-oriented block generation for
    consortium blockchain-based IoT systems with dynamic device management. IEEE Internet
    of Things Journal, 2020, 8(10), 7874-7888. doi: 10.1109/JIOT.2020.3015042 12.
    Gong S, Tcydenova E, Jo J, et al. Blockchain-Based Secure Device Management Framework
    for an Internet of Things Network in a Smart City. Sustainability. 2019, 11(14):
    3889. doi: 10.3390/su11143889 13. He Q, Xu Y, Liu Z, et al. A privacy-preserving
    Internet of Things device management scheme based on blockchain. International
    Journal of Distributed Sensor Networks. 2018, 14(11): 155014771880875. doi: 10.1177/1550147718808750
    14. Wickstrom J, Westerlund M, Pulkkis G. Smart Contract based Distributed IoT
    Security: A Protocol for Autonomous Device Management. 2021 IEEE/ACM 21st International
    Symposium on Cluster, Cloud and Internet Computing (CCGrid). Published online
    May 2021. doi: 10.1109/ccgrid51090.2021.00094 15. Loukil F, Ghedira-Guegan C,
    Boukadi K, et al. Data Privacy Based on IoT Device Behavior Control Using Blockchain.
    ACM Transactions on Internet Technology. 2021, 21(1): 1-20. doi: 10.1145/3434776
    16. Novo O. Scalable Access Management in IoT Using Blockchain: A Performance
    Evaluation. IEEE Internet of Things Journal. 2019, 6(3): 4694-4701. doi: 10.1109/jiot.2018.2879679
    17. Moon H se, Song J, Shin H, et al. home IoT device management blockchain platform
    using smart contracts and a countermeasure against 51% attacks. 2022 4th Asia
    Pacific Information Technology Conference. Published online January 14, 2022.
    doi: 10.1145/3512353.3512381 18. Qureshi JN, Farooq MS, Abid A, et al. Blockchain
    applications for the Internet of Things: Systematic review and challenges. Microprocessors
    and Microsystems. 2022, 94: 104632. doi: 10.1016/j.micpro.2022.104632 19. Zhang
    K, Yu J, Lin C, et al. Blockchain-based access control for dynamic device management
    in microgrid. Peer-to-Peer Networking and Applications. 2022, 15(3): 1653-1668.
    doi: 10.1007/s12083-022-01316-5 20. Rana A, Sharma S, Nisar K, et al. The Rise
    of Blockchain Internet of Things (BIoT): Secured, Device-to-Device Architecture
    and Simulation Scenarios. Applied Sciences. 2022, 12(15): 7694. doi: 10.3390/app12157694
    21. Li J, Herdem MS, Nathwani J, et al. Methods and applications for Artificial
    Intelligence, Big Data, Internet of Things, and Blockchain in smart energy management.
    Energy and AI. 2023, 11: 100208. doi: 10.1016/j.egyai.2022.100208 22. Rana SK,
    Rana SK, Nisar K, et al. Blockchain Technology and Artificial Intelligence Based
    Decentralized Access Control Model to Enable Secure Interoperability for Healthcare.
    Sustainability. 2022, 14(15): 9471. doi: 10.3390/su14159471 23. Deebak BD, Memon
    FH, Dev K, et al. TAB-SAPP: A Trust-Aware Blockchain-Based Seamless Authentication
    for Massive IoT-Enabled Industrial Applications. IEEE Transactions on Industrial
    Informatics. 2023, 19(1): 243-250. doi: 10.1109/tii.2022.3159164 24. Kairaldeen
    AR, Abdullah NF, Abu-Samah A, et al. Peer-to-Peer User Identity Verification Time
    Optimization in IoT Blockchain Network. Sensors. 2023, 23(4): 2106. doi: 10.3390/s23042106
    25. Mubarakali A. An Efficient Authentication Scheme Using Blockchain Technology
    for Wireless Sensor Networks. Wireless Personal Communications. 2021, 127(1):
    255-269. doi: 10.1007/s11277-021-08212-w    DOI: https://doi.org/10.32629/jai.v7i2.1073
    Refbacks There are currently no refbacks.   Copyright (c) 2023 Shyama Barna Bhattacharjee,
    Shivam Gangwar, Manish Kumar, Kirti Saini, Rashmi Saini, Shivani Chauhan, Krishna
    Pandey, Richard Essah, Nitin Goyal  License URL: https://creativecommons.org/licenses/by-nc/4.0/"'
  inline_citation: '>'
  journal: Journal of Autonomous Intelligence
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An efficient framework for secure data transmission using blockchain in IoT
    environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Cantini R.
  - Marozzo F.
  - Orsino A.
  citation_count: '0'
  description: In the era of the Internet of Things (IoT), conventional cloud-based
    solutions struggle to handle the huge amount, high velocity, and heterogeneity
    of data generated at the network edge. In this context, the edge-to-cloud compute
    continuum has emerged as an effective solution to reduce bandwidth consumption
    and latency in large-scale applications, through seamless integration of edge
    computing with cloud services and features. In this chapter, we show how the compute
    continuum can be effectively leveraged in the context of smart agriculture, with
    the aim of supporting greenhouse monitoring and management. We also analyze how
    long short-term memory (LSTM) neural networks can be integrated into the system
    to cope with the presence of missing and anomalous sensor data. A thorough experimental
    evaluation is performed to assess the LSTM performance, also showing how the application
    deployment at the compute continuum can ensure higher scalability in terms of
    bandwidth and latency, compared to a conventional cloud-based solution. Our findings
    show how the joint use of the compute continuum and deep learning can enable the
    development of a green-aware solution that fosters sustainable and efficient agricultural
    practices.
  doi: 10.1007/978-3-031-42194-5_8
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Device-Edge-Cloud Continuum pp
    141–153Cite as Home Device-Edge-Cloud Continuum Chapter Deep Learning Meets Smart
    Agriculture: Using LSTM Networks to Handle Anomalous and Missing Sensor Data in
    the Compute Continuum Riccardo Cantini, Fabrizio Marozzo & Alessio Orsino  Chapter
    First Online: 10 August 2023 111 Accesses Part of the book series: Internet of
    Things ((ITTCC)) Abstract In the era of the Internet of Things (IoT), conventional
    cloud-based solutions struggle to handle the huge amount, high velocity, and heterogeneity
    of data generated at the network edge. In this context, the edge-to-cloud compute
    continuum has emerged as an effective solution to reduce bandwidth consumption
    and latency in large-scale applications, through seamless integration of edge
    computing with cloud services and features. In this chapter, we show how the compute
    continuum can be effectively leveraged in the context of smart agriculture, with
    the aim of supporting greenhouse monitoring and management. We also analyze how
    long short-term memory (LSTM) neural networks can be integrated into the system
    to cope with the presence of missing and anomalous sensor data. A thorough experimental
    evaluation is performed to assess the LSTM performance, also showing how the application
    deployment at the compute continuum can ensure higher scalability in terms of
    bandwidth and latency, compared to a conventional cloud-based solution. Our findings
    show how the joint use of the compute continuum and deep learning can enable the
    development of a green-aware solution that fosters sustainable and efficient agricultural
    practices. Keywords Compute continuum Edge-to-cloud Smart agriculture Digital
    farming Green-awareness Deep learning LSTM networks Anomaly detection Sensor data
    prediction Simulation Access provided by University of Nebraska-Lincoln. Download
    chapter PDF 1 Introduction Smart agriculture, also known as precision agriculture
    or digital farming, is an innovative approach that utilizes advanced technologies
    and data-driven solutions to optimize agricultural processes, enhance crop yields,
    and mitigate environmental impacts [7]. With the rapid growth of the global population,
    the increasing challenges of climate change, resource scarcity, and changing consumer
    demands, there is a growing need to revolutionize traditional farming practices
    and adopt smarter and more sustainable methods of food production. Smart agriculture
    leverages cutting-edge technologies such as Internet of Things (IoT) devices,
    drones enhanced with swarm intelligence algorithms, artificial intelligence (AI),
    and big data analytics to monitor, analyze, and manage various aspects of farming
    operations, from soil and water management to crop monitoring and livestock health.
    By leveraging real-time data and advanced analytics, smart agriculture enables
    farmers to make informed decisions, optimize resource utilization, reduce costs,
    and improve overall farm productivity while also minimizing environmental impacts.
    Despite the great benefits that can be obtained from these systems, their development
    poses a series of technological challenges, due to the collection, integration,
    storage, and processing of the vast amount of high-velocity heterogeneous data
    produced by IoT devices [2, 17]. In this context, edge computing has emerged as
    an effective paradigm that provides a way to overcome these challenges, by pushing
    part of the computation, logic, and intelligence close to the data source, i.e.,
    the edge of the network [12]. In this way, solutions that only rely on the cloud
    can be improved in terms of bandwidth consumption, latency, and privacy preservation,
    which allows for meeting the quality of service requirements even in the case
    of large-scale applications [3]. However, resource constraints of edge devices
    lead to the need for integration with cloud computing to allow heavy long-term
    computation and persistent storage of vast amounts of data, from which the concept
    of the compute continuum arises. This results in the design of complex solutions
    that necessitate thorough testing prior to their implementation in real-world
    settings, with the aim of evaluating performance, functionality, safety, security,
    and scalability. Simulation provides a controlled and cost-effective environment
    for testing and experimentation, mitigating risks associated with real-life deployment.
    However, challenges such as accurate modeling, availability of realistic datasets,
    and interoperability issues need to be addressed to ensure the reliability and
    validity of simulation results. In this chapter, we demonstrate how the compute
    continuum can be effectively leveraged in the context of smart agriculture. The
    objective is to facilitate greenhouse monitoring and management while maintaining
    a high level of reliability and scalability. To achieve this, we incorporate a
    long short-term memory (LSTM)-based component into the IoT system, which effectively
    handles missing and anomalous sensor data. This integration enhances the productivity
    of the system and minimizes its environmental impact by reducing water waste and
    greenhouse gas emissions. A thorough experimental evaluation was performed to
    assess the effectiveness of the proposed solution from a twofold viewpoint. On
    the one hand, we evaluated the neural network accuracy in estimating the actual
    greenhouse state, used to replace missing values and correct anomalies. On the
    other hand, we leveraged the iFogSim simulation toolkit to show that deploying
    the proposed system at the edge-to-cloud continuum ensures higher scalability
    in terms of bandwidth and latency, compared to a conventional cloud-based solution.
    Our findings reveal the possibilities that arise from the joint utilization of
    the compute continuum and deep learning for sustainable and efficient agricultural
    practices. The structure of this chapter is as follows. Section 2 discusses related
    work, highlighting the main application of deep learning to smart agriculture.
    Section 3 describes the proposed system, discussing how the LSTM-based component
    can be integrated into the greenhouse management system and how the entire system
    can be deployed at the edge-to-cloud continuum. Section 4 describes the experimental
    evaluation and simulation results. Finally, Sect. 5 concludes the chapter. 2 Related
    Work This work sits at the intersection of deep learning and smart agriculture,
    investigating how a neural-based component, which relies on an LSTM network, can
    be effectively integrated into an IoT system devoted to controlling the life cycle
    of a smart greenhouse, supporting the decision-making process and enhancing robustness
    and reliability. There are many contributions in the literature that integrate
    deep learning architectures into IoT systems for smart agriculture, based on different
    neural architectures like convolutional neural networks (CNNs) and recurrent neural
    networks (RNNs). CNNs, inspired by the functioning of the visual cortex in the
    human brain, have a strong capability in image processing, which makes them widely
    used in agriculture research for tasks like plant or crop classification, pest
    detection, plant disease detection, and disaster monitoring, just to name a few
    [10, 16, 21]. Large pre-trained CNN architectures, such as AlexNet, are also leveraged
    in this context, as they can be effectively fine-tuned and applied to downstream
    classification tasks like disease detection and plant classification [20]. RNNs,
    on which this chapter is focused, are better suited to process time-series data.
    In the following, the main concepts behind these deep learning architectures are
    discussed, along with the main applications to smart agriculture. Long Short-Term
    Memory Networks Recurrent neural networks (RNNs) are a type of artificial neural
    network architecture that are designed to process sequential and time-series data,
    where the order of input elements matters. The main idea behind RNNs is to use
    memory to contextualize the current input based on past information. This kind
    of persistency, which is absent in traditional feed-forward neural networks, is
    achieved through recurrent connections that allow the network to store information
    from previous time steps. Specifically, the network maintains a hidden state that
    encodes information from what has been processed so far, thus capturing and modeling
    temporal dependencies in the data. Long short-term memory (LSTM) is a type of
    RNN architecture that was introduced to address the limitations of traditional
    RNNs, such as the vanishing gradient problem, which can hinder the network in
    learning long-term dependencies in the data. LSTMs leverage special memory cells
    and a gating mechanism that allow them to control the flow of information, addressing
    the vanishing gradient problem. This allows the network to capture and store important
    information over longer sequences, selectively forgetting irrelevant information.
    Let \\(W_{f,i,o}\\) and \\(b_{f,i,o}\\) be the set of weights and biases of the
    different gates, \\(h_t\\) the hidden state at time step t, \\(x_t\\) the input
    at time t, and \\(C_t\\) the current cell state. The LSTM includes three gates
    performing the following operations: Forget gate (\\(f_t\\)): it determines to
    what extent the components of the cell state must be maintained, by calculating
    a score using the sigmoid function: $$\\displaystyle \\begin{aligned} f_{t}= \\sigma
    (W_f \\cdot [h_{t-1}, x_t] + b_f) \\end{aligned}$$ Input gate (\\(i_t\\)): it
    determines what new information to store in the cell state. In particular, a sigmoid
    layer chooses which state values should be updated, while a tanh layer determines
    the new candidate values \\(\\tilde {C}_t\\): At this time, the cell state can
    be updated as \\(C_t =f_t\\times C_{t-1}+i_t \\times \\tilde {C}_t\\). Output
    gate (\\(o_t\\)): it determines the final output of the module as a filtered version
    of the updated cell state: Main Applications to Smart Agriculture Recurrent neural
    networks, along with more sophisticated variants of RNNs like long short-memory
    (LSTM) and gated recurrent unit (GRU) networks, have been widely used in smart
    agriculture. Among the main tasks, these networks were adopted for land cover
    classification, which involves the identification and categorization of different
    types of land cover classes, such as crops, vegetation, water bodies, built-up
    areas, and bare soil, within an agricultural field or a larger agricultural landscape
    using remote sensing techniques. For this kind of task, RNNs can be effectively
    exploited, as they can capture how land cover like the vegetation changes its
    spatial appearance periodically over time [6, 14]. Among the other task, RNNs
    were utilized for phenotype recognition, crop yield estimation, weather prediction,
    and soil moisture estimation [4, 11, 13, 19]. In this study, LSTM networks are
    leveraged for sensor data forecasting, with the aim of detecting and handling
    missing and anomalous sensor data. This neural component is integrated into a
    smart greenhouse management IoT system, allowing for the enhancement of the overall
    robustness and reliability, by effectively supporting decision-making and resource
    utilization. 3 Proposed System This section provides an in-depth description of
    the proposed system, which combines an IoT system for monitoring and managing
    a smart greenhouse with a deep learning component based on an LSTM neural network.
    The role of the neural component is to support decision-making, allowing the proposed
    system to cope with the presence of missing and anomalous sensor data, thus improving
    the overall robustness and reliability of the system. The proposed system, whose
    architecture is shown in Fig. 1, is composed of the following components: The
    smart greenhouse, which is equipped with a set of sensors and actuators. Sensors
    are used to measure different parameters such as temperature, humidity, light,
    and CO\\({ }_2\\), which make up the current state of the greenhouse at time t,
    i.e., \\(\\mathcal {S}^t\\). Actuators, like fans and irrigation systems, are
    used to perform actions in the greenhouse in an autonomous way, based on its current
    state. The LSTM-based component receives data gathered by sensors, representing
    the current state \\(\\mathcal {S}^t\\). It is made up of two sub-components:
    \\((i)\\) a state regressor which computes an estimate \\(\\mathcal {E}^t\\) of
    the current state, based on the previous k states, and \\((ii)\\) a state corrector
    that uses the predicted state \\(\\mathcal {E}^t\\) to replace missing values
    of \\(\\mathcal {S}^t\\) and correct anomalies, computing the corrected state
    \\(\\mathcal {C}^t\\). The decision-maker receives the corrected state \\(\\mathcal
    {C}\\) and determines whether an actuation is needed, sending a command to the
    actuators installed in the greenhouse. By using the values corrected by the neural
    component, the system avoids being affected by an incorrect representation of
    the current state of the greenhouse, caused by distorted measurements related
    to noise and malfunctions. The cloud-based web application provides an interface
    to the end user, in which the current state of the greenhouse is described, allowing
    also to manually trigger an actuation. Moreover, all the corrections performed
    by the state corrector are sent to the web application, as they may imply the
    need for physical intervention. In fact, besides the presence of noise in the
    measurement process, an anomalous/missing value could be caused by a not working
    sensor –that should be physically substituted– or by an unexpected situation currently
    taking place. Fig. 1 Architecture of the proposed system for smart greenhouse
    management Full size image In the following, we describe how the LSTM-based component
    is used for forecasting and correcting the greenhouse state measured by the IoT
    sensors. We also analyze how the proposed system can be deployed at the edge-to-cloud
    continuum to improve scalability and responsiveness, through the combined use
    of computing resources and capabilities at different levels of the IoT architecture.
    3.1 LSTM-Based State Forecasting and Correction IoT sensors installed in the greenhouse
    continuously monitor its current state, measuring different parameters including
    the actual temperature, humidity, light, and CO2 level. All these values are collected
    into a vector \\(\\mathcal {S}^t\\) that represents the current greenhouse state
    at time t. Given the k previous states \\(\\mathcal {S}^{t-k}, \\dots , \\mathcal
    {S}^{t-1}\\), the state regressor computes an estimate \\(\\mathcal {E}^t\\) of
    the current state \\(\\mathcal {S}^{t}\\) that is sent to the state corrector.
    This component then computes the correct state \\(\\mathcal {C}^t\\) starting
    from the actual greenhouse state at time t with the provided estimate, by correcting
    anomalies and replacing missing values. Specifically, let \\(\\mathcal {S}^t_i\\)
    be the i-th component of the greenhouse state, e.g., the measured temperature,
    and \\(\\mathcal {E}^t_i\\) the corresponding estimate. The corrected state \\(\\mathcal
    {C}^t\\) at time t is computed as follows: In other words, if a measurement \\(\\mathcal
    {S}^t_i\\) is absent or differs from the prediction more than a fixed threshold
    \\(\\tau _i\\), i.e., it is anomalous, it is replaced with the corresponding LSTM
    estimate \\(\\mathcal {E}^t_i\\). It is worth noting that a different threshold
    is used for the different parameters included in the greenhouse state. The main
    advantage of such an approach is the adoption of a very efficient and fast strategy
    for state correction, which is desired when running such a component close to
    the edge of the network, due to constrained storage and computation. 3.2 Deployment
    at the Edge-to-Cloud Continuum The edge-to-cloud compute continuum provides a
    seamless integration of computing resources and capabilities that span from the
    edge of the network (i.e., the IoT devices) to the cloud, enabling data processing
    and analysis at different levels of the IoT architecture. This continuum encompasses
    three main layers. The edge layer is the closest to the source of data generation,
    i.e., the edge of the network. Edge devices, like IoT sensors, gateways, and edge
    servers, are typically smaller in scale and have limited computing capabilities.
    Edge computing enables to process data locally, which can result in lower latency,
    improved response times, and reduced bandwidth usage. The fog layer is an intermediate
    layer between edge and cloud, which includes resources that are placed closer
    to the edge of the network but are more powerful and capable than edge devices.
    Fog nodes can offload some of the processing tasks from edge devices, providing
    more advanced computing and storage capabilities compared to pure edge computing
    while still maintaining lower latency with respect to the cloud. The cloud layer
    refers to remote data centers and centralized computing infrastructures. It provides
    high processing power, vast storage capacity, high scalability, elasticity, and
    cost efficiency. This makes cloud computing ideal for handling large-scale data
    processing and complex analytics and for use cases that require massive data storage,
    large-scale data processing, and global accessibility, such as big data analytics,
    artificial intelligence, and web applications. The proposed system can benefit
    from a deployment on a multitier architecture like the one described above, by
    effectively exploiting the resources and capabilities provided by the different
    levels of the edge-to-cloud continuum. In such a scenario, an IoT gateway should
    be placed at the edge level, to collect and aggregate the raw values coming from
    the different sensors installed in the greenhouse and send them to the LSTM-based
    component. To allow low latency and a fast actuation, the LSTM-based component
    and the decision-maker should be placed near the edge of the network, as they
    are necessary to determine the needed actuation based on the current state of
    the greenhouse. The neural component can be deployed on an edge server or at least
    at the fog level, depending on the actual edge capabilities and the needs in terms
    of computation, to run neural network inference and state correction, and storage,
    to cache the previous states. It is worth noting that the inference process is
    far more lightweight with respect to the LSTM training, which can be periodically
    performed in the cloud to update and realign the model. Moreover, the correction
    strategy performed by the neural component is very easy and efficient, requiring
    just a few computing resources, which enables the possible deployment on constrained
    edge devices. Similarly, the decision-maker can be deployed at the edge or at
    least at the fog level, depending on how resource-intensive is the decision-making
    strategy, implemented for determining the needed actuations. Finally, the cloud-based
    web application should be placed in the cloud, as it requires global accessibility
    and data analytics capabilities, without any strict constraint in terms of latency.
    4 Experimental Evaluation In this section, we evaluate the performance of the
    proposed system from a twofold viewpoint. On the one hand, we assess the neural
    network accuracy for both regression and anomaly detection tasks, demonstrating
    its ability to provide accurate estimates of the actual greenhouse state. These
    estimates are used to provide missing values while also identifying and correcting
    anomalous data, whose presence can be due to sensor failures or unexpected events.
    On the other hand, we show how deploying the proposed system at the edge-to-cloud
    continuum, as described in the previous section, can lead to higher scalability
    in terms of bandwidth consumption and latency, compared to a conventional cloud-based
    solution. 4.1 LSTM Network Evaluation To evaluate the effectiveness of the proposed
    system, we developed a proof of concept by training an LSTM network on a dataset
    containing 10 days of data coming from four types of sensors, measuring temperature,
    humidity, light, and CO\\({ }_2\\) level. The network was trained for 50 epochs
    with a batch size of 32, a mean absolute error (MAE) loss, and the Adam optimizer.
    In addition, to ensure a smoother convergence and improve performance, we scheduled
    the learning rate by progressively reducing its value on plateaux by a factor
    of 2, from an initial value of \\(10^{-3}\\) to a minimum value of \\(10^{-5}\\).
    Learning curves are reported in Fig. 2, showing the mean absolute error on the
    training set and on a validation set composed of two days of measurements. Fig.
    2 Mean absolute error on train and validation set during the LSTM training Full
    size image The trained regression model was also evaluated on a test set comprising
    four days of measurements. The results obtained show a marked ability of the model
    to provide very accurate estimates of the various parameters that globally constitute
    the state of the greenhouse, with an MAE and a coefficient of determination coefficient
    \\(R^2\\) approaching 0 and 1, respectively. We also evaluated how precisely the
    estimates of the LSTM neural network approximate the individual parameters that
    make up the greenhouse state measured through time. The high accuracy of the model
    can be clearly seen in Fig. 3, which shows a comparison between the estimates
    of the LSTM model and the actual values included in the test set. These results
    are crucial to ensure the correct functioning of the entire proposed system, which
    relies on an accurate estimate of the current state of the greenhouse. Indeed,
    these estimates can be effectively exploited to replace missing values and correct
    any anomalies, enhancing system productivity, improving resource utilization,
    and reducing waste. Fig. 3 Comparison between LSTM estimates and test values of
    each parameter included in the greenhouse state measured through time Full size
    image Once the performance of the model for the state forecasting task is assessed,
    we evaluated the ability of the system in identifying and correcting anomalies.
    For this purpose, we modified the test set by inserting random anomalies in the
    greenhouse state with probability p. Anomalies are added at time t to the test
    state \\(\\mathcal {S}^t\\) –to be predicted by the network– by multiplying it
    with a noise vector n sampled from a given distribution \\(\\mathcal {D}\\). Therefore,
    the anomalous state \\(\\tilde {\\mathcal {S}^t}\\) can be represented as: $$\\displaystyle
    \\begin{aligned} \\tilde{\\mathcal{S}^t} = \\mathcal{S}^t_i \\cdot n_i\\text{
    , } \\forall i\\in \\{1, \\dots, \\lvert\\mathcal{S}^t\\lvert\\}\\text{ , with
    } n \\sim \\mathcal{D}\\end{aligned}$$ In the performed experiments, we set \\(p
    = 0.2\\), which is the probability to introduce an anomaly in the test set. Moreover,
    the threshold \\(\\tau _i\\), used to detect an anomaly in the measurement of
    the i-th parameter of the greenhouse state (e.g., the temperature), was set equal
    to the 99-th percentile of the test MAE for that parameter. We tested the abilities
    of the system in the presence of different types of noise, using uniform (\\(n
    \\sim U(a,b)\\)) and Gaussian (\\(n \\sim \\mathcal {N}(\\mu ,\\sigma )\\)) distributions.
    Achieved results, reported in Table 1, show the great abilities of the system
    in identifying true anomalies (i.e., high recall) and avoiding false positives
    (i.e., high precision), which results in a quite good value of f-measure, up to
    \\(0.936\\), in all the tested configurations. Table 1 Anomaly detection performance
    for different types of anomalies, arising from uniformly and Gaussian distributed
    noise Full size table 4.2 Deployment Strategies’ Comparison In this section, we
    follow a simulation-based approach to investigate how the compute continuum can
    effectively support the proposed smart greenhouse management system, through the
    combined use of different resources that span from the edge of the network to
    the cloud. Several works in the literature have highlighted the benefits of simulating
    IoT applications [8, 9], also focusing on the use of open-source simulators, such
    as iFogSim [5], IoTSim [22], and EdgeCloudSim [18] to test specific IoT applications
    at the edge-to-cloud continuum [1, 15]. In our experimental evaluation, we used
    iFogSim, an open-source simulation toolkit that helps model, simulate, and evaluate
    fog computing environments. It offers a comprehensive framework for modeling various
    components of fog computing, such as fog devices, IoT devices, and cloud servers,
    and simulating their interactions and performance. It also provides a rich and
    extensible set of features, including fog service placement, dynamic migration
    of fog services, energy modeling, and resource management policies. We measured
    the performance and scalability achieved in terms of network usage and latency,
    by deploying the proposed application according to two different strategies: \\((i)\\)
    an edge-ward strategy, which realizes a deployment at the edge-to-cloud continuum,
    as described in Sect. 3.2, and \\((ii)\\) a cloud-only strategy, in which all
    the computation and storage occurs within the cloud, in a centralized manner.
    Table 2 describes the simulation parameters used to configure the physical topology
    on which the simulated application deployment is operated. Physical devices –ordered
    according to their location from the edge to the cloud– are the greenhouse IoT
    gateway, the edge server, the ISP gateway, and the cloud. Table 2 Physical devices’
    configuration in iFogSim Full size table The results achieved in terms of network
    usage and latency, by progressively increasing the number of handled greenhouses,
    are shown in Fig. 4. Fig. 4 Simulation results achieved by comparing the edge-ward
    and cloud-only deployment strategies, with an increasing number of handled greenhouses.
    (a) Network usage. (b) Latency Full size image The comparison clearly reveals
    the superior performance of the edge-ward strategy over the cloud-based approach,
    highlighting the evident advantages of utilizing the compute continuum instead
    of a cloud-based solution to effectively support the proposed system. Specifically,
    the deployment at the edge-to-cloud continuum results in significant reductions
    in both network usage and latency while ensuring robust scalability. In contrast,
    the cloud-based solution struggles to handle a growing number of greenhouses,
    making the edge-ward strategy even more advantageous as the number of greenhouses
    increases. This is attributed to the strategic utilization of the continuum of
    computing resources, over which application components are intelligently distributed
    by the deployment strategy based on their compute and storage requirements. 5
    Conclusions In recent years, the seamless integration of computing resources and
    capabilities along the edge-to-cloud compute continuum has emerged as a viable
    solution to enable data processing and analysis at various levels of the Internet
    of Things architecture. This chapter demonstrates how the compute continuum can
    be effectively leveraged in the context of smart agriculture for greenhouse monitoring
    and management, proposing the integration of LSTM neural networks as a means to
    handle missing and anomalous sensor data. The proposed solution was evaluated
    through extensive experiments, focusing on the accuracy of the neural model in
    forecasting sensor data and detecting anomalies, as well as the scalability advantages
    of deploying the application at the edge-to-cloud continuum compared to a conventional
    cloud-based approach. The achieved results show the high accuracy of the LSTM
    model in both the sensor data forecasting and anomaly detection tasks, also demonstrating
    how the deployment at the edge-to-cloud continuum can result in significant reductions
    in network usage and latency while ensuring robustness and scalability. Therefore,
    our findings overall highlight how the combined use of a deep learning architecture
    and the compute continuum can enhance system robustness and reliability, ensuring
    high efficiency and scalability. Such integration can bring huge benefits to smart
    agriculture applications, supporting decision-making, optimizing resource utilization,
    and improving overall productivity. It also offers the potential to minimize environmental
    impacts, such as reducing water waste and greenhouse gas emissions, representing
    a green-aware solution toward more sustainable and efficient agricultural practices.
    References A. Barbieri, F. Marozzo, C. Savaglio, IoT platforms and services configuration
    through parameter sweep: a simulation-based approach, in 2021 IEEE International
    Conference on Systems, Man, and Cybernetics (SMC) (2021), pp. 1803–1808 Google
    Scholar   L. Belcastro, R. Cantini, F. Marozzo, A. Orsino, D. Talia, P. Trunfio,
    Programming big data analysis: principles and solutions. J. Big Data 9(4), 1–50
    (2022) Google Scholar   L. Belcastro, F. Marozzo, A. Orsino, D. Talia, P. Trunfio,
    Edge-cloud continuum solutions for urban mobility prediction and planning. IEEE
    Access 11, 38864–38874 (2023) Article   Google Scholar   S.K. Biswas, N. Sinha,
    B. Purkayastha, L. Marbaniang, Weather prediction by recurrent neural network
    dynamics. Int. J. Intell. Eng. Inf. 2(2–3), 166–180 (2014) Google Scholar   H.
    Gupta, A. Vahid Dastjerdi, S.K. Ghosh, R. Buyya, iFogSim: a toolkit for modeling
    and simulation of resource management techniques in the internet of things, edge
    and fog computing environments. Softw. Pract. Exp. 47(9), 1275–1296 (2017) Article   Google
    Scholar   D. Ienco, R. Gaetano, C. Dupaquier, P. Maurel, Land cover classification
    via multitemporal spatial data by deep recurrent neural networks. IEEE Geosci.
    Remote Sens. Lett. 14(10), 1685–1689 (2017) Article   Google Scholar   M.R.M.
    Kassim, IoT applications in smart agriculture: issues and challenges, in 2020
    IEEE Conference on Open Systems (ICOS) (IEEE, Piscataway, 2020), pp. 19–24 Google
    Scholar   G. Kecskemeti, G. Casale, D.N. Jha, J. Lyon, R. Ranjan, Modelling and
    simulation challenges in internet of things. IEEE Cloud Comput. 4(1), 62–69 (2017)
    Article   Google Scholar   L.E. Lima, B.Y.L. Kimura, V. Rosset, Experimental environments
    for the internet of things: a review. IEEE Sens. J. 19(9), 3203–3211 (2019) Article   Google
    Scholar   H. Lu, X. Fu, C. Liu, L.g. Li, Y.x. He, N.w. Li, Cultivated land information
    extraction in uav imagery based on deep convolutional neural network and transfer
    learning. J. Mountain Sci. 14, 731–741 (2017) Google Scholar   Z. Lu, L. Chai,
    S. Liu, H. Cui, Y. Zhang, L. Jiang, R. Jin, Z. Xu, Estimating time series soil
    moisture by applying recurrent nonlinear autoregressive neural networks to passive
    microwave data over the Heihe River Basin, China. Remote Sens. 9(6), 574 (2017)
    Google Scholar   F. Marozzo, A. Orsino, D. Talia, P. Trunfio, Edge computing solutions
    for distributed machine learning, in 2022 IEEE International Conference on Dependable,
    Autonomic and Secure Computing, International Conference on Pervasive Intelligence
    and Computing, International Conference on Cloud and Big Data Computing, International
    Conference on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)
    (2022), pp. 1–8 Google Scholar   D.H.T. Minh, D. Ienco, R. Gaetano, N. Lalande,
    E. Ndikumana, F. Osman, P. Maurel, Deep recurrent neural networks for winter vegetation
    quality mapping via multitemporal sar sentinel-1. IEEE Geosci. Remote Sens. Lett.
    15(3), 464–468 (2018) Article   Google Scholar   M. Rußwurm, M. Körner, Multi-temporal
    land cover classification with long short-term memory neural networks. Int. Arch.
    Photogramm. Remote Sens. Spatial Inf. Sci. 42, 551–558 (2017) Article   Google
    Scholar   M. Sinqadu, Z.S. Shibeshi, Performance evaluation of a traffic surveillance
    application using iFogSim, in International Conference on Wireless Intelligent
    and Distributed Environment for Communication (Springer, Berlin, 2020), pp. 51–64
    Google Scholar   S. Sladojevic, M. Arsenovic, A. Anderla, D. Culibrk, D. Stefanovic,
    Deep neural networks based recognition of plant diseases by leaf image classification.
    Comput. Intell. Neurosci. 2016, 1–11 (2016) Article   Google Scholar   C. Sobin,
    A survey on architecture, protocols and challenges in IoT. Wireless Pers. Commun.
    112(3), 1383–1429 (2020) Article   Google Scholar   C. Sonmez, A. Ozgovde, C.
    Ersoy, EdgeCloudSim: an environment for performance evaluation of edge computing
    systems. Trans. Emerg. Telecommun. Technol. 29(11), e3493 (2018) Google Scholar   S.
    Taghavi Namin, M. Esmaeilzadeh, M. Najafi, T.B. Brown, J.O. Borevitz, Deep phenotyping:
    deep learning for temporal phenotype/genotype classification. Plant Methods 14(1),
    1–14 (2018) Article   Google Scholar   H. Yalcin, Plant phenology recognition
    using deep learning: deep-pheno, in 2017 6th International Conference on Agro-Geoinformatics
    (IEEE, Piscataway, 2017), pp. 1–5 Google Scholar   H. Yalcin, S. Razavi, Plant
    classification using convolutional neural networks, in 2016 Fifth International
    Conference on Agro-Geoinformatics (Agro-Geoinformatics) (IEEE, Piscataway, 2016),
    pp. 1–5 Google Scholar   X. Zeng, S.K. Garg, P. Strazdins, P.P. Jayaraman, D.
    Georgakopoulos, R. Ranjan, IOTSim: a simulator for analysing IoT applications.
    J. Syst. Archit. 72, 93–107 (2017) Article   Google Scholar   Download references
    Acknowledgements This work has been supported by the “FAIR – Future Artificial
    Intelligence Research” project – CUP H23C22000860006. Author information Authors
    and Affiliations Department of Informatics, Modeling, Electronics and Systems
    (DIMES), University of Calabria, Arcavacata, Italy Riccardo Cantini, Fabrizio
    Marozzo & Alessio Orsino Corresponding author Correspondence to Riccardo Cantini
    . Editor information Editors and Affiliations DIMES, Università della Calabria,
    Rende, Cosenza, Italy Claudio Savaglio DIMES, Universita della Calabria, Rende,
    Cosenza, Italy Giancarlo Fortino New Jersey Institute of Technology, Newark, NJ,
    USA MengChu Zhou Hosei University, Tokyo, Japan Jianhua Ma Rights and permissions
    Reprints and permissions Copyright information © 2024 The Author(s), under exclusive
    license to Springer Nature Switzerland AG About this chapter Cite this chapter
    Cantini, R., Marozzo, F., Orsino, A. (2024). Deep Learning Meets Smart Agriculture:
    Using LSTM Networks to Handle Anomalous and Missing Sensor Data in the Compute
    Continuum. In: Savaglio, C., Fortino, G., Zhou, M., Ma, J. (eds) Device-Edge-Cloud
    Continuum. Internet of Things. Springer, Cham. https://doi.org/10.1007/978-3-031-42194-5_8
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-42194-5_8
    Published 10 August 2023 Publisher Name Springer, Cham Print ISBN 978-3-031-42193-8
    Online ISBN 978-3-031-42194-5 eBook Packages Engineering Engineering (R0) Share
    this chapter Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Publish with us Policies and ethics Download book PDF Download book
    EPUB Sections Figures References Abstract Introduction Related Work Proposed System
    Experimental Evaluation Conclusions References Acknowledgements Author information
    Editor information Rights and permissions Copyright information About this chapter
    Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Internet of Things
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Deep Learning Meets Smart Agriculture: Using LSTM Networks to Handle Anomalous
    and Missing Sensor Data in the Compute Continuum'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - San Emeterio de la Parte M.
  - Martínez-Ortega J.F.
  - Hernández Díaz V.
  - Martínez N.L.
  citation_count: '4'
  description: 'Precision agriculture in the realm of the Internet of Things is characterized
    by the collection of data from multiple sensors deployed on the farm. These data
    present a spatial, temporal, and semantic characterization, which further complicates
    the performance in the management and implementation of models and repositories.
    In turn, the lack of standards is reflected in insufficient interoperability between
    management solutions and other non-native services in the framework. In this paper,
    an innovative system for spatio-temporal semantic data management is proposed.
    It includes a data query system that allows farmers and users to solve queries
    daily, as well as feed decision-making, monitoring, and task automation solutions.
    In the proposal, a solution is provided to ensure service interoperability and
    is validated against two European smart farming platforms, namely AFarCloud and
    DEMETER. For the evaluation and validation of the proposed framework, a neural
    network is implemented, fed through STSDaMaS for training and validation, to provide
    accurate forecasts for the harvest and baling of forage legume crops for livestock
    feeding. As a result of the evaluation for the training and execution of neural
    networks, high performance on complex spatio-temporal semantic queries is exposed.
    The paper concludes with a distributed framework for managing complex spatio-temporal
    semantic data by offering service interoperability through data integration to
    external agricultural data models. Graphical Abstract: [Figure not available:
    see fulltext.]'
  doi: 10.1186/s40537-023-00729-0
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Search Get published
    Explore Journals Books About Login Journal of Big Data About Articles Submission
    Guidelines Submit manuscript Research Open access Published: 28 April 2023 Big
    Data and precision agriculture: a novel spatio-temporal semantic IoT data management
    framework for improved interoperability Mario San Emeterio de la Parte, José-Fernán
    Martínez-Ortega, Vicente Hernández Díaz & Néstor Lucas Martínez  Journal of Big
    Data  10, Article number: 52 (2023) Cite this article 3755 Accesses 5 Citations
    3 Altmetric Metrics Abstract Precision agriculture in the realm of the Internet
    of Things is characterized by the collection of data from multiple sensors deployed
    on the farm. These data present a spatial, temporal, and semantic characterization,
    which further complicates the performance in the management and implementation
    of models and repositories. In turn, the lack of standards is reflected in insufficient
    interoperability between management solutions and other non-native services in
    the framework. In this paper, an innovative system for spatio-temporal semantic
    data management is proposed. It includes a data query system that allows farmers
    and users to solve queries daily, as well as feed decision-making, monitoring,
    and task automation solutions. In the proposal, a solution is provided to ensure
    service interoperability and is validated against two European smart farming platforms,
    namely AFarCloud and DEMETER. For the evaluation and validation of the proposed
    framework, a neural network is implemented, fed through STSDaMaS for training
    and validation, to provide accurate forecasts for the harvest and baling of forage
    legume crops for livestock feeding. As a result of the evaluation for the training
    and execution of neural networks, high performance on complex spatio-temporal
    semantic queries is exposed. The paper concludes with a distributed framework
    for managing complex spatio-temporal semantic data by offering service interoperability
    through data integration to external agricultural data models. Graphical Abstract
    Introduction The deployment of new technological solutions in the agricultural
    sector aims to achieve the Sustainable Development Goals (SDGs) [1] and the welfare
    of animals [2]. With this objective, the Food and Agricultural Organization [3]
    and the International Fund for Agricultural Development (IFAD) [4] arise to promote
    research [5], investment and sustainability in agriculture. Since 2015, the number
    of people suffering from hunger has increased, reaching a percentage of almost
    9% of the world’s population [6]. If the current trend continues, the Zero Hunger
    Goal [7] will not be achieved by 2030. Targets 2.3 and 2.a of the Zero Hunger
    goal aim to double agricultural productivity and increase agricultural research.
    To achieve this, precision agriculture solutions can offer increased productivity
    and sustainable food production. Precision agriculture provides a link between
    the farmer and technology. IoT systems are one of the main approaches to automate,
    monitor, and improve the performance of agricultural activities. However, despite
    the multitude of devices deployed in agricultural scenarios, bringing the understanding
    of technological solutions closer to farmers and agricultural specialists remains
    a challenge. Technological solutions in agriculture must focus on understandable
    communication with the user, in this case, the farmer or the specialist. To do
    this, it is necessary to understand the way the professional or farm manager usually
    works and acts, trying to respond to the questions and tasks performed in a scenario
    that does not have high-technology or IoT solutions. Knowing the usual way of
    working will make the inclusion of intelligent and precision solutions more harmonious.
    The aim is to facilitate and improve routine tasks with as little impact as possible
    and without the need for technical training on the part of the user. IoT solutions
    in agriculture are described by constant measurement of land, crop, or livestock
    characteristics depending on the use case. In turn, automation and monitoring
    solutions are fed by the data captured by the devices deployed in the field. Therefore,
    the representation or collection of data stored in repositories is one of the
    key elements in communication with the farmer. Data management systems must be
    able to answer the questions the farmer asks. For example, When should I harvest
    the fodder to feed the livestock? When should I bale the harvested crop? In essence,
    such questions can be disaggregated according to three main dimensions: (i) temporal,
    (ii) spatial, and (iii) semantic. In turn, the data extracted through the decomposition
    of the queries posed by the farmer serve as input for Machine Learning models
    or Decision Support Systems (DSS), offering a much more useful and interpretable
    answer for the farmer. In this article, an innovative spatio-temporal semantic
    data management framework is proposed for the resolution of the queries raised
    above. In addition, a solution for the preparation and transformation between
    agricultural data models is presented to ensure the interoperability of the system
    without dependence on the native data model. Finally, a use case is presented
    in which the system feeds a Machine Learning model to answer certain predictive
    questions in the field of harvesting or cultivation of fodder legumes for livestock
    feed. The proposal presented in this paper has been developed in the framework
    of a European precision agriculture research project. The data set exposed for
    the system validation is made up of real data generated by static and mobile sensors
    and devices in an agricultural scenario. The system is designed for the management
    of large semantic spatio-temporal datasets, generated by sensors and devices deployed
    in agricultural scenarios. However, the system is easily adaptable to other IoT
    domains, with easy adaptability due to the nature of the agents involved. Agricultural
    scenarios present certain limitations, such as low computational capabilities
    and limited resources of certain sensors or connectivity problems in some farms.
    Some services, solutions, or devices operate with native data models, which makes
    their incorporation into other architectures difficult. This article describes
    a proposal that solves these problems through a distributed architecture and a
    component that guarantees service interoperability. In Related work, some of the
    most innovative solutions in precision agriculture are presented, exposing the
    importance of sensor networks, the Internet of Things, and data science. In addition,
    data management solutions for precision agriculture exposed in the literature
    are presented, and how the proposal offers a substantial and innovative improvement
    of current solutions. Spatio-Temporal Semantic Data Management System (STSDaMaS)
    presents the STSDaMaS proposal, detailing the architecture and functionalities
    offered by the framework. Achieving interoperability, use case with the AFarCloud
    Data Model presents the solution adopted to ensure the interoperability of the
    STSDaMaS framework with data models from other platforms, projects, or solutions.
    For interoperability validation, the native data model of the AFarCloud smart
    agriculture platform is presented, and data preparation, adaptation, and transformation
    are exposed. System validation: Applying Neural Network for fodder legume harvesting
    and bailing prediction describes the validation of the proposed spatio-temporal
    semantic data management framework through a use case to feed a machine learning
    model. Conclusion presents the conclusions of the proposal. Finally, Future work
    evaluates the limitations of the study and summarizes ongoing research to address
    them. Related work Automation of tasks in the application domain of precision
    agriculture is closely linked to the constant monitoring of the condition of crops
    and livestock. As such, IoT solutions offer a perfect symbiosis with the application
    domain. In the literature, several reviews of IoT solutions for process automation
    in precision agriculture are found [8]. The first and most characteristic phase
    of IoT implementations is the collection of data by devices deployed in the field.
    Therefore, data characterization is a key element for subsequent processing and
    implementation of solutions. Data captured by precision agriculture devices offer
    information related to three main dimensions (i) semantics [9], (ii) spatial,
    and (iii) temporal. This type of data description is provided by semantic models
    of linked data [10]. Field data management in precision agriculture has been linked
    to the use of Geographic Information Systems (GIS). This set of tools allows for
    the storage, analysis, manipulation, and mapping of any type of georeferenced
    information. For Precision Agriculture applications, a specific GIS system called
    Field-Level Geographic Information System (FIS) [11] was developed. However, this
    system was developed for older operating systems, such as Windows 3.1 , 95, and
    98. The updated version is the Farm Management Information System (FMIS). According
    to Burlacu et al. [12] FMIS supports farmers in various areas, from operational
    planning, implementation, and documentation, to evaluation of the work done in
    the field. However, FMIS does not consider the temporal dimension and its application
    to scenarios that require real-time operation is limited. Precision agriculture
    presents an environment rich in spatio-temporal data. The open-source GeoFIS software,
    designed to cover the entire process, from spatial data to spatial information
    and decision-making, is presented in [13]. GeoFIS has been evaluated through three
    case studies involving different types of crops, and the ability of its embedded
    algorithms to address the needs of farmers, advisors, and spatial analysts in
    precision agriculture is examined. The main limitation of GeoFIS lies in the lack
    of characterization and management of the temporal and semantic information of
    the data. With the increasing deployment of sensors and static and mobile devices
    for monitoring and automating tasks in all sectors, the most current literature
    gathers a prodigious amount of research on the efficient management of large amounts
    of spatio-temporal data. Ruiyuan Li et al. present JUST[14], a data management
    system that can efficiently store and manage large amounts of spatio-temporal
    data. It uses a combination of Apache HBase, GeoMesa, and Apache Spark and includes
    two indexing techniques and a compression mechanism to improve query efficiency.
    It also supports easy-to-use SQL-like queries and allows for both new data insertions
    and updates to existing data without requiring index reconstruction. Experimental
    results show that JUST has strong query performance and scalability compared to
    other distributed spatio-temporal data management systems. However, JUST has certain
    limitations regarding the semantic characterization of the data and the inference
    or treatment of relationships between entities. In addition, interoperability
    with other data models is a pending work that limits its application to other
    domains. As the number of mobile devices and IoT terminals connected to the Internet
    increases, large amounts of spatio-temporal data are generated. To store and compute
    these data locally and share them effectively, data owners often store them on
    cloud servers. Yongjiun Ren et al. present BSMD [15], a blockchain-based secure
    storage mechanism that uses an on-chain and off-chain cooperative storage model
    to overcome the limited storage capacity of the blockchain. This novel mechanism
    is capable of storing large amounts of spatio-temporal data securely. However,
    the implementation of bloackchain-based mechanisms to guarantee data integrity
    and security requires high computational capabilities and makes real-time operations
    impossible. Real-time management of large data sets is becoming increasingly necessary
    in various sectors. In [16], Atsushi Isomura et al. present the Axispot technology,
    applied to obstacle detection and lane-specific congestion in the automotive domain.
    The article describes the need to store and query data captured by numerous moving
    objects. Axispot presents an improvement in the capability to search and aggregate
    spatial data by reducing the complexity of polygonal shape lines and the number
    of vertices to cope with the needs of a near real-time operating environment.
    However, the study does not consider the dimension of height or altitude, which
    is considered for future developments. The development of exposed technology is
    related to the automotive world and the high computational capabilities of the
    agents involved, so its adaptability to other sectors is reduced. The application
    of spatio-temporal semantic data management systems in precision agriculture still
    has a long way to go in terms of research and improvement. However, in the literature,
    there are already some systems, such as SEMAP, presented by Henning Deeken et
    al. [17], mainly developed for spatio-semantic management for robot planning,
    which later on [18, 19], was successfully applied to the precision farming domain.
    The SEMAP framework is characterized by a powerful spatial description of the
    agents and the environment; offering 2D and 3D representations. However, this
    complex characterization is not necessary for most use cases in agriculture. Moreover,
    as the authors argue in the article, the temporal dimension is a missing piece
    in the system. Thus, this article proposes a data management framework that prioritizes
    temporal-spatial and semantic characterization, decreasing the complexity of the
    spatial dimension; aiming to offer a novel and more complete solution. In the
    last decade, advances in Web 2.0 technology have improved the accessibility of
    data across the cloud, with increasing amounts of Linked Open Data, Linked Open
    Statistical Data, and Open Government Data available for sharing. However, the
    availability and accessibility of data for production analytics in agriculture
    are currently limited and rarely include attributes for spatio-temporal analytics.
    Irya Wisnubhadra et al. [20] propose the development of a spatio-temporal data
    warehouse with an integration process using a service-oriented architecture and
    open data sources to address this problem and improve decision-making in agricultural
    production analytics. The storage approach provided in this article is geared
    towards agricultural production analysis, presenting a low temporal precision
    (aggregations or daily results). The query response time (even longer than 12
    s) and the exposed data model complicate its adaptability for sensor networks
    and scenarios with real-time query requirements. Due to information management
    systems and their post-processing and querying capabilities, raw data captured
    by various devices are injected as input for Machine Learning (ML) models, Decision
    Support Systems (DSS), or monitoring, among others. Due to the utility and success
    of machine learning model application, this paper presents the implementation
    of a neural network in precision agriculture, for the validation of the proposed
    data management framework. Several studies on the application of ML in IoT for
    precision agriculture are found in the literature [21,22,23]. Due to the number
    of tasks in the agricultural sector, this article focuses mainly on crop management.
    Crop management tasks can be divided into three main groups (i) pre-harvest, (ii)
    harvest, and (iii) post-harvest (see Fig. 1). In [24] a review of ML applications
    is presented in each of the areas. Fig. 1 Stages in crop management Full size
    image One of the most interesting applications in crop management is the cultivation
    of fodder legumes for livestock feed. These crops form a link between two of the
    most important areas of the agricultural sector, crops, and livestock management.
    The literature exposes the interest in the area, with studies such as [25] providing
    a review of the welfare of dairy cows in pasture or confinement. The importance
    of diet and therefore the quality of forage offered as feed to cattle for its
    yield and meat quality is defined in [26]. The determination of the quality of
    fodder is not immediate and depends on many factors [27]. Some of the most important
    factors in crop yield can be predicted with ML models thanks to solutions such
    as the one presented by Johann et al. for soil moisture in [28] or soil temperature
    by Behnaz Nahvi et al. in [29]. There are more modern solutions, such as the one
    presented by Vamseekrishna et al. in [30]. Once the soil characteristics and main
    factors affecting the fodder crop have been studied, the farmer’s main concern
    will be to estimate the productivity or yield of the crop itself. Jeevan Nagendra
    Kumar et al. present a use of the ML application for the prediction of crop performance
    in [31]. This paper proposes a novel spatio-temporal semantic interoperable data
    management framework that allows the exploitation of big data, applied to an agricultural
    scenario. The system proposed in this paper allows the resolution of complex queries
    thanks to a distributed repository between time-series oriented databases and
    knowledge bases or triple stores. Due to a distributed architecture, the system
    offers real-time operation performance by deploying part of the architecture at
    the edge. Due to the proposed design, the system can adapt to environments with
    limited computational or network resources. Furthermore, the proposed framework
    includes a solution to ensure the interoperability of the service through integration
    with other data models available in the application domain. In Table 1, a comparison
    is presented between the most relevant proposals related to our work, based on
    the key features that our proposal presents: (i) Big spatiotemporal (ST) data
    management, (ii) architecture distributed between edge and cloud, (iii) service
    interoperability, (iv) scalability, (v) specific application and design for agriculture,
    and (vi) adaptable to other domains. Table 1 A comparative between the most relevant
    related proposals Full size table Spatio-temporal semantic data management system
    (STSDaMaS) Precision agriculture presents constantly evolving scenarios. Observations
    captured by devices deployed on the farm are characterized by three dimensions:
    (i) temporal evolution of conditions; observations are associated with a time
    stamp. (ii) Spatial geopositioning stamp; with static or dynamic nature, depending
    on the type of device that captures the measurement. (iii) Semantic characterization
    of the data and its relationships with other devices and the environment. Precision
    agriculture data can be characterized by their spatio-temporal semantic nature.
    In this way, it is possible to answer queries such as: What has been the evolution
    of soil temperature and moisture in a given plot over the last week? Usual queries
    have an equivalent characterization. The design of a system capable of managing
    spatio-temporal semantic data in precision agriculture faces several problems:
    1. Implement a repository capable of managing a large volume of historical data
    with high performance. 2. Design a query system that allows data retrieval under
    spatial, temporal, semantic constraints, or combinations thereof. 3. Offer interoperability
    with other services through the transformation of input and output data. This
    paper proposes a spatio-temporal semantic data management system that solves these
    problems, considering the importance of data retrieval for future monitoring,
    decision-making, and automation of agricultural processes. Data management architecture
    The STSDaMaS framework is designed for the collection and management of agricultural
    data from the spatio-temporal semantic environment. The agricultural domain model
    must be able to describe the temporal evolution of the observations captured by
    a device and provide its geopositioning and associated semantic information. For
    mobile devices, such as robots, unmanned aerial vehicles (UAVs), or autonomous
    or semi-autonomous vehicles, a spatial evolution linked to the temporal axis is
    presented. In addition, the semantic description presents a classification of
    devices, sensors, observations, and even the environment, as well as their relationships.
    According to the characterization of data in the agricultural domain, it is essential
    to differentiate between temporal and spatial information and semantic information.
    Regarding the type of database for the implementation of the repository, semantic
    databases or triple-stores (for RDF graphs) allow storing and managing individuals
    and their relationships, adding a powerful semantic description of data. However,
    their performance decreases with the management of a large-volume dataset. Non-relational
    databases allow the management of a large volume of heterogeneous data with higher
    performance. However, they do not support inference operations or more complex
    semantic descriptions and relationships between objects and the environment. It
    is proposed to distribute the repository internally between knowledge and non-relational
    databases. The different types of database engines prioritize the management of
    data characterized by a specific dimension (spatial, temporal, or semantic). In
    precision agriculture, the data have a strong characterization under the three
    defined dimensions, so it is reasonable to distribute the management framework
    to ensure maximum performance. The proposal consists of the use of a NoSQL Time-Series
    oriented Database (TSDB) to increase performance in the management of spatio-temporal
    data and the use of a Triple-Store to ensure the management of the semantic information.
    This distributed architecture allows increasing performance and speeding up queries
    in the Big Data environment, without losing the benefits of semantic description.
    To link the objects represented in both databases, unique element identifiers
    (UIDs) are used. Figure 2 shows the architecture of the proposed spatio-temporal
    semantic data management system (STSDaMaS). Fig. 2 Spatio-temporal semantic data
    management system (STSDaMaS) Full size image Semantic repository: triple store
    The semantic repository implemented in the STSDaMaS framework is responsible for
    the management of semantic information associated with observations, devices,
    and the environment or terrain in which agents are deployed. Relationships between
    agents provide powerful information for decision-support solutions and even for
    identifying relevant information in the detection of anomalies or specific situations
    on the farm. The semantic repository includes a rule engine, which enables the
    inference of new individuals and rule-based reasoning about the triples stored
    in the repository. An example of a use case favored by this type of implementation
    can be found in agricultural diversification. Thanks to information on the terrain
    and conditions of a given crop, specific reasoning can be performed to determine
    the viability and yield of a new crop. For the testing and evaluation of the system
    proposed in this article, the Jena Rules [32] engine is used. The rules are defined
    in a file with the specific syntax of Jena Rules. However, other rule-based languages
    such as SWRL (Semantic Web Rule Language) [33], RIF (Rule Interchange Format)
    [34], N3 (Notation 3) [35], or RuleML [36], among others, could be used for the
    definition of rules. To identify a given individual in the knowledge base, the
    property http://purl.org/ dc/terms/identifier is used, allowing the association
    with its spatio-temporal information. To link the semantic container with the
    spatio-temporal information associated with a given sensor or device, the sosa:madeBySensor
    property is used. The content associated with the property sosa:madeBySensor reveals
    information about the type of device, the service offered, the provider, the name
    of the device, and the identifier of the TSDB in which the associated spatio-temporal
    information is stored. STSDaMaS internally uses this type of property to make
    associations between semantic information and the spatio-temporal evolution described
    by the primitive. Space-time repository: time-series oriented database (TSDB)
    Spatio-temporal characterization of data provides powerful information to observe
    the evolution of conditions associated with a given crop or terrain. In applications
    such as livestock farming, it makes it possible to track livestock and study their
    behavior under certain climatic or environmental conditions on the farm. Therefore,
    spatio-temporal information of data is a key element to increase agricultural
    performance and implement solutions for decision-making or automation. As spatio-temporal
    data management is one of the main elements in the proposal and to ensure the
    most efficient performance, some of its weaknesses and strengths must be analyzed
    and understood. There is a multitude of time-series oriented databases. Modern
    TSDBs include Prometheus, InfluxDB, TimescaleDB, PostgreSQL, and Cassandra. To
    maximize the performance of TSDBs, special attention must be paid to (i) data
    modeling, (ii) data structuring in tables, and (iii) Write-ahead logging (WAL).
    In terms of data modeling. TSDBs use the timestamp of the data as an index for
    indexing, so there is high performance when planning and retrieving data through
    temporal queries. However, the addition of filters as clauses in queries can increase
    planning and execution delays. To maintain high performance, careful modeling
    of the data is required. First of all, the types of attribute described in the
    data can be defined as “Tags” or “Fields”. ’Tags’ will be stored in the server
    memory until they disappear from the current shard. Footnote 1 In contrast, the
    information of attributes defined as ’Fields’ will be stored directly on disk.
    Therefore, queries whose filters include attributes defined as tags will perform
    better than those oriented to the search of attributes stored on disk. Because
    STSDaMaS uses the TSDB engine for data gathering concerning their spatio-temporal
    characterization, it is understandable to think that spatial information attributes
    have to be defined as “Tags”. However, the spatial marking of a datum represents
    an attribute of large variability and, therefore, high cardinality. That is, it
    can present a multitude of values in the repository. This causes high usage of
    the host server’s RAM resources, even blocking the system. The definition of tags
    should be limited to attributes with low-variability information and high frequency
    of use in the query predicate. In the proposal, only attributes with information
    related to the following are defined as tags: device identifier, service, scenario,
    device type, and provider. Three main sources of delay can be identified in data
    collection: (1) the planning of data gathering; (2) the execution of the plan
    and concurrent attack of processing threads to the different tables in which data
    reside; (3) serialization of data for delivery as a response to the query. These
    three sources of delay can be reduced by correct structuring of tables for data
    storage according to the nature of the data. Table 2 proposes the high-level structure
    of the measurement tables for an agricultural scenario. Table 2 Repository structure
    in tables Full size table Write-Ahead Logging is an important element in a time-series
    oriented database architecture, but it can limit performance in a near real-time
    scenario for querying the latest data injected into the TSDB. The WAL is a temporary
    cache for recently injected points (writes). To reduce the frequency with which
    permanent disk storage files are accessed, the TSDBs engine stores new points
    in the WAL and groups them in batches until their total size or age triggers a
    flush into permanent storage. WAL is also used as protection against the loss
    of recently added data on power loss. However, the WAL storage format is not easily
    queryable. For this reason, the proposed system includes a small relational database
    (SQL), which allows to speed up the collection of the last injected measurements.
    The SQL database will only store the last measurement obtained by each sensor,
    and its use can be of great utility because it can be deployed directly on the
    edge to increase system performance in certain scenarios. Space-time repository:
    relational database (SQL) The implementation of a small relational database on
    top of the STSDaMaS repository reduces the delays introduced when querying the
    latest data injected into the system using the WAL, and querying repositories
    with large volumes of data. But its introduction is even more interesting because
    of the distribution capacity it gives to the architecture. Precision agriculture
    presents several scenarios in which data gathering with strong semantic characterization
    is not necessary but prioritizes the updating of values or measurements in real-time.
    Solutions, such as the inclusion of actuators in response to anomalous responses
    captured by sensors (such as in fire cases) or livestock grazing using drones,
    require real-time interaction. In other cases, the farm scenario has low networking
    capabilities or resources to deploy a system like STSDaMaS directly at the edge
    or in the fog. However, it can perform a data update on the system deployed in
    the cloud, still losing real-time operation. However, the introduction of a relational
    database in the STSDaMaS framework allows this part of the architecture to be
    deployed directly at the edge, enabling real-time response to queries of less
    semantic complexity, but requiring real-time performance. In this way, batching
    of measurements can be performed at the edge and automatically sent to the cloud
    where the rest of the system is located when connection and conditions permit.
    Equations 1, 2, and 3 describe the response times for a given query to the component
    deployed on the edge (Eq. 1) or in the cloud (Eq. 2). Note that the query processing
    times at the edge will be lower since the query target is a relational database
    with a low amount of data, achieving real-time performance. However, if the query
    is more complex or its predicate aims at extracting historical information, it
    will be necessary to redirect the query to the STSDaMaS query engine located in
    the cloud. (1) (2) (3) Due to this versatility, the proposed system can be adapted
    to numerous farming scenarios even with different requirements or needs. Query
    system and data retrieval STSDaMaS is designed for the resolution of semantic
    queries whose subject varies in temporal and spatial character. Due to the distribution
    of the query system in knowledge and oriented to time series repositories, it
    offers high-performance retribution, whose response provides a powerful description
    of the environment, devices, and evolution present in the indicated context. STSDaMaS
    processes the data query operation according to the following sequence of high-level
    actions: (1) Through a data query interface, the semantic predicate of the query
    is extracted from the request, attacking a triple-store knowledge database (see
    a simple example of an SPARQL query in Listing 1). (2) Through a unique identifier
    (UID) of the observations or devices involved, spatio-temporal information is
    extracted from the non-relational time-series-oriented database. This allows for
    a fast and lightweight collection of the desired historical or current data. (3)
    Finally, the data are aggregated for delivery as a response to the query. Listing
    1 SPARQL query Full size image To illustrate the high-level operation of querying
    data through the system, a practical example is presented. For the query “What
    are the soil conditions at the Ylivieska farm in the last hour?”: (i) The system
    extracts the semantic predicate, collecting from the knowledge database all those
    sensors that perform measurements on soil conditions and that are associated with
    the farm with the identifier “Ylivieska”. (ii) Through the UIDs of the sensors
    or observations associated with the farm and providing soil measurements, the
    NoSQL database is accessed. Filtering by UIDs, the observations captured in the
    established time window are extracted, together with the geopositioning in the
    case of static devices or the different spatial marks in the case of mobile devices.
    (iii) The system will carry out the data aggregation, offering, as a response
    to the request, the farm object with all the associated soil-type devices and
    the observations captured in the indicated time window, together with their spatial
    mark (latitude and longitude or geohash). The process is depicted in Fig. 3. Fig.
    3 High-level query processing by STSDaMaS Full size image STSDaMaS framework not
    only extracts a complete semantic description of the data and their relationships;
    it also avoids querying a time-series oriented repository with a large volume
    of data directly. Instead, it is pre-filtered by selecting the identifiers of
    those observations or devices to be queried. This approach helps to collect a
    complete, understandable, and semantically rich response, avoiding the long delays
    produced when querying directly on historical databases. The greater the volume
    of data to be extracted, the greater the efficiency shown by the framework with
    respect to conventional solutions consisting only of a homogeneous repository.
    The framework includes a system for managing continuous queries against the historical
    repository (scheduled queries). Such queries can be configured to perform operations
    such as the calculation of average values at set time intervals or the detection
    of anomalous observations (e.g. out-of-range measurements, or geopositioning modification
    of a static device). For monitoring, as input for training Machine Learning (ML)
    models, for statistical analysis, and other types of solution, it will be necessary
    to extract data over a multitude of time points. However, as input for graphical
    analysis applications or as feedback to the farmer, in most cases, it will be
    sufficient to obtain certain aggregations of the data. For example, average, minimum,
    and maximum values, or other simple aggregations, over the observations queried.
    The continuous query management system allows the establishment of rules or aggregation
    functions within the historical repository of the system. In this way, operations
    such as the calculation of average, maximum, or minimum values are carried out
    on a scheduled basis, reducing delays in data collection due to the steady availability
    of these values. STSDaMaS data model—Agricultural Information Model (AIM) The
    STSDaMaS framework is proposed in the context of the H2020-DEMETER project (Building
    an Interoperable, Data-Driven, Innovative, and Sustainable European Agri-Food
    Sector) [37]. The DEMETER goal is to lead the digital transformation of Europe’s
    agri-food sector through the rapid adoption of advanced IoT technologies, data
    science, and smart agriculture, contributing to long-term viability and sustainability.
    It aims to empower farmers and agricultural cooperatives to (i) use their existing
    machinery and platforms by enabling knowledge extraction for improved decision-making
    and (ii) facilitate the evolution of their devices and platforms, targeting their
    investments where needed. The STSDaMaS input and output data model is modeled
    according to the Agricultural Information Model (AIM) [38], developed in the DEMETER
    project. The AIM model is based on the SOSA (Sensor, Observation, Sample, and
    Actuator) and SSN (Semantic Sensor Network) ontologies, which aim to model sensors,
    actuators, devices, and observations (measurements captured by sensors). AIM focuses
    on the semantic characterization of the data, providing detailed information about
    the observations captured by the sensors and their relationships with other agents
    in the field. The input and output data of the platform are described by the AIM
    model using the JSON Linked Data (JSON-LD) syntax for the Resource Description
    Framework (RDF). An example of the modeling of observations captured by environmental
    sensors is presented in Listing 2. Listing 2 AIM JsonLD representation of an observation
    Full size image Achieving interoperability, use case with the AFarCloud Data Model
    An IoT scenario is characterized by the collection of information from devices
    deployed in the field. However, in most use cases, devices have low resource capabilities
    and low computational power, which limits the management and production of data
    under complex and extensive syntax. Therefore, the semantic characterization offered
    by a data model such as AIM can be a limitation for some of the devices or sensors.
    However, the STSDaMaS proposal includes a solution to ensure interoperability
    with services, thanks to a component called Interoperability through Data Integration
    (IDI). The ISO/IEC 21823-1:2019 standard [39] outlines five levels of interoperability:
    Transport interoperability involves establishing a communication infrastructure
    to exchange data over different transport protocols or networks without loss or
    corruption of data. It also manages data quality of service (QoS) requirements,
    such as delivery, timeliness, ordering, durability, lifespan, and fault tolerance.
    Syntactic Interoperability is the ability of different IoT systems to exchange
    data using a common data format or syntax. This ensures that the data are correctly
    interpreted and processed by the receiving system, without ensuring that the meaning
    of the information is correctly understood. Semantic Interoperability aims to
    ensure that all entities attribute the same meaning to the information exchanged
    by using metadata and shared information models (ontologies). Behavioral Interoperability
    aligns and integrates business processes to achieve the expected result of information
    exchange. Legal or Policy Interoperability ensures that organizations operating
    under different legal frameworks, policies, and strategies can exchange information
    and collaborate effectively. This includes issues such as data privacy, security,
    and ownership, as well as compliance with industry standards and regulations.
    Due to the lack of standards, one of the most common problems in data management
    systems for precision agriculture lies in the interoperability between models
    or semantic Interoperability. Agricultural data management systems, as presented
    in the literature, are designed to ingest and retrieve data against the native
    model of the system. Such proposals force changes to the core of the system to
    adapt it to work with other data models. Some proposals focus on acquiring interoperability
    between heterogeneous agents or devices [40] or even propose environments for
    semantic interoperability through specific trait ontologies [41]. The IDI component
    aims to facilitate access to the functionalities offered by STSDaMaS, ensuring
    interoperability with different services through its data models. Thanks to this
    approach, the system remains stable, without the need for core variations to ensure
    data management and spatio-temporal semantic query resolution. To illustrate the
    proposal, the native data model on the AFarCloud platform and how STSDaMaS can
    offer data query management for AFarCloud services through the IDI component are
    presented (Fig. 4). Fig. 4 Interoperability with different platform services through
    IDI Full size image The AFarCloud (Aggregate FARming in the CLOUD) ECSEL JU project
    [42] presents a distributed platform capable of offering the integration and cooperation
    of cyber-physical agriculture systems to increase efficiency, productivity, food
    quality, and animal welfare and reduce costs in agricultural labor. Focused on
    near real-time data exchange, it offers services for mission management, task
    automation, decision support, or even data processing and analysis, among others.
    Due to this approach, AFarCloud data offer strong temporal and spatial characterization,
    working with a JSON syntax for data exchange and communication between components.
    The AFarCloud repositories comprise three main data sets: 1. Description of observations
    captured by devices or sensors in the field. 2. Measurements collected by collars
    installed on the neck of livestock. 3. State vectors of UAVs, autonomous and semi-autonomous
    vehicles. Table 3 presents the information provided by the three data sets defined
    in the repositories of the AFarCloud platform. In addition, the structuring of
    attributes in the aforementioned Tags and Fields, for the storage of data in the
    TSDB is included. The set of JSON schemas that define the AFarCloud model is collected
    in [43]. Table 3 Data model for datasets 1, 2, and 3 Full size table Thanks to
    the IDI component, the query service of the proposed framework can be integrated
    to feed the services or algorithms of the AFarCloud platform. Figure 5 shows the
    diagram of the IDI component for data translation from an STSDaMaS query response
    to the AFarCloud data model. Fig. 5 Interoperability through Data Integration
    (IDI). AFarCloud Use Case Full size image To guarantee interoperability with the
    services offered by the AFarCloud platform, data preparation and transformation
    must be carried out from the output of the query interface of the STSDaMaS framework
    to the input of AFarCloud services. This process guarantees the interoperability
    of the STSDaMaS service for use in solutions offered by other frameworks. In IDI,
    the mapping between the equivalent classes of each ontology is established through
    an RDF graph. Table 4 shows the mapping between the properties of an observation
    captured by a sensor between both models. Certain additional rules are established
    through a properties file, such as the conversion between timestamps in date format
    to epoch format or the reformulation of certain fields according to certain patterns
    set by the target model for translation. Table 4 RDF mapping graph Full size table
    Once the mapping rules have been established, the response to the query delivered
    by the STSDaMas platform is connected to the IDI enabler for the preparation and
    translation of the data into JSON syntax of the AFarCloud model. In this way,
    the AIM output (Listing 3) is translated into the AFarCloud model (Listing 4)
    as input for the services offered by the AFarCloud platform. Listing 3 Interoperability
    through Data Integration (IDI). AFarCloud Use Case Full size image Listing 4 Interoperability
    through Data Integration (IDI). AFarCloud Use Case Full size image The IDI component
    operates as a wrapper for the STSDaMaS framework, allowing data input and output
    to be used for the understanding and coupling of other services. STSDaMaS Interoperability
    validation To validate the interoperability of the STSDaMaS service through the
    IDI component, an asset tracking and monitoring application has been developed.
    This application uses the queries offered by the STSDaMaS interface to represent
    the temporal evolution of observations associated with geolocated devices. However,
    it cannot understand and process the data modeled using AIM. The application will
    represent the data only when the query response message is valid against the JSON
    schemas defined in the AFarCloud model. To take advantage of the power of spatio-temporal
    semantic data management offered by the proposed system, the repositories should
    be nourished with data from observations, sensors, and devices, providing relevant
    information for each of the defined dimensions. For this experimental case, queries
    will be performed whose predicate describes the observations associated with environmental
    and soil measurements, such as temperature and humidity. For this purpose, it
    will be filtered by the type of service offered. Additionally, the search is limited
    to sensors installed on mobile devices, including information on batteries and
    other properties. Correct representation and monitoring of the temporal and geopositioning
    evolution of devices and associated measurements are offered through the exploitation
    of the time-series oriented repository. To build the scenario, real data were
    extracted from the AFarCloud project repositories and submitted to STSDaMaS via
    IDI for “translation” and subsequent injection into the repositories. To provide
    visualization of the evolution of the data in its temporal dimension, injection
    is performed continuously throughout the experimentation. The monitoring application
    is connected to the query interface offered by the STSDaMaS framework through
    the IDI component, which offers a response to queries according to the AFarCloud
    data model. The information provided by the monitoring application is represented
    in Fig. 6. Fig. 6 Monitoring application that displays updated data through STS-DaMaS
    Full size image Thanks to the query interface offered by STSDaMaS, the developed
    graphical application can represent historical and updated data in a near real-time
    environment. The application is especially useful for the representation of routes
    described by assets (see Fig. 7a) or even livestock (see Fig. 7a), through a purely
    user-oriented interface. Fig. 7 Representation of assets and cow tracking Full
    size image These asset monitoring applications provide added value to users, allowing
    them to check the current status or historical values captured by their devices
    in a simple and effective way. Even livestock behavior can be studied to improve
    animal welfare and optimize production. However, the potential of STSDaMaS lies
    in the possibility of performing more complex data management, providing answers
    to user-oriented queries, facilitating decision-making, or nurturing learning
    models. “System validation: applying neural network for fodder legume harvesting
    and bailing prediction” section presents the validation of the system against
    the need for more elaborate queries for a specific use case: increase in yield
    in forage crops. System validation: applying neural network for fodder legume
    harvesting and bailing prediction The main agricultural sectors include livestock
    farming and agriculture. However, in many scenarios, the dividing line between
    the two activities is practically non-existent. An example is the cultivation
    of crops for livestock feed. High crop quality and optimal harvesting and drying
    directly impact the quality of livestock, whether for meat or milk. There is an
    extensive list of supervised and unsupervised machine learning algorithms [44,45,46,47].
    Due to the temporal nature offered by the agricultural data and the data management
    offered by the proposed framework, the use of neural networks has been chosen
    for the evaluation and validation of the proposal as a “feeder” for training and
    prediction. In this chapter, the purpose of this article is to apply the data
    management framework proposed in the article to train and feed an MLP (Multi-Layer
    Perceptron) feedforward neural network to predict the optimal moment for harvesting,
    ensuring optimal drying of the forage legume crop for baling. An MLP neural network
    has been chosen based on its performance for prediction or forecasting solutions
    due to its multi-layer architecture. By ensuring optimal conditions for the harvest
    and drying of the forage, the quality of the product increases greatly, eliminating
    toxins and the loss of nutrients. The application of the system for feeding neural
    networks is proposed to predict the optimal mowing time for the fodder legume
    crop alfalfa. Alfalfa is a protein source and is characterized as one of the best
    forage crops for livestock feed. However, the optimal harvest time and the drying
    time to reduce moisture before packing are key factors in the quality of the harvested
    fodder and, therefore, in the development of livestock for meat or dairy. Thanks
    to the system proposed in this article, the extraction of historical information
    for neural network training is made possible, as well as a query system for the
    prediction of observations such as temperature and humidity, which are key for
    the determination of optimal times for mowing and drying of the fodder crop. To
    evaluate the STSDaMaS framework, the experiment focuses on forecasting the ideal
    harvest time of the fodder legume. After mowing, the desiccation stage begins.
    Natural desiccation of green forages occurs effectively at temperatures above
    15 °C, with relative humidity in the atmosphere below 70%. The most favorable
    conditions are offered with temperatures above 25 °C and relative humidity below
    60%. The objective of fodder drying is to reach a maximum moisture between 18
    and 20%, as once packed it is difficult to dry it later. A higher moisture level
    in the forage, between 20 and 35%, favors the microbial development of fungi,
    so that, among others, the loss of digestible nutrients, energy, and the possible
    production of harmful toxins to the animal will critically deteriorate the quality
    of the product. The drying process is a critical step to ensure maximum forage
    quality. However, the most common technique to determine the drying time by the
    farmer is to wait during a 24–48 h time window until harvest. This technique is
    not very precise. Other solutions include the use of sensors to constantly monitor
    product moisture. However, the moisture margin for optimal forage quality is very
    narrow, requiring constant monitoring costs and high availability for the farmer
    to carry out the baling at the right time. Mowing forage without adequate weather
    conditions will make the drying process impossible. Accurate forecasting of temperature
    and moisture conditions can ensure an effective forage drying process and provide
    the farmer with a valuable decision-support solution. To solve the forage mowing
    and drying process and to validate the STSDaMaS framework, a neural network is
    developed to predict the exact moment when the optimal conditions for mowing will
    occur. The neural network will be fed through the STSDaMaS query interface for
    training, validation, and production status. For the development of this experiment,
    the following tasks are performed: 1. Nourish STSDaMaS repositories with real
    data captured by moisture and temperature sensors in a forage crop. 2. Design
    and development of an MLP (Multi-Layer Perceptron) feedforward neural network.
    3. Neural network training through the STSDaMaS query interface. 4. Evaluation
    of the prediction provided by the neural network. The model presented for the
    validation of STSDaMaS offers the service of temperature and humidity prediction
    based on historical data. However, the development of an accurate weather prediction
    model is a complex task due to the variability and susceptibility to sudden changes
    in the weather. Therefore, as a test evaluation of the system proposed in the
    article, the model focuses on prediction based on historical data to provide decision
    support to the farmer or user. STSDaMaS repository nourishment Due to the large
    amount of data collected by hundreds of devices and sensors deployed in more than
    10 scenarios across Europe, the AFarCLoud repositories are used as a data source.
    As discussed in “Achieving interoperability, use case with the AFarCloud Data
    Model” section, the data from the AFarCloud repositories are structured and formatted
    according to their model, so their injection into the STSDaMaS repositories requires
    the IDI component, which is responsible for providing the interoperability of
    the service. Once the data are prepared and integrated with the AIM model used
    by STSDaMaS, they are written to the repositories through the injection interface.
    To ensure that the assessment scenario is as close as possible to a real environment,
    all data contained in one of the AFarCloud scenarios, located in the surroundings
    of Gamleby, Sweden, are uploaded. Comprising real observations captured by a multitude
    of sensors between 2020 and 2021. In turn, several active sensors provide service
    to STSDaMaS to keep humidity and temperature data in the crop up-to-date. In this
    way, the observations collected between 2020 and 2021 will be used to train the
    neural network and verify the forecast offered. The updated data will serve as
    input for the temperature and humidity forecast in the coming days. Neural network
    design and development STSDaMaS will provide the data set to train the neural
    network developed for the experiment through query interfaces. The first step
    in developing a suitable neural network for the prediction of humidity and temperature
    is the correct characterization of the data set. The prediction is oriented to
    time-series forecasting, so it must be taken into account that the data set is
    time-dependent (this breaks the requirement of linear regression that its observations
    be independent) and has some kind of stationarity (or tendency, for instance,
    according to the time of day, month, or time of year). For this environment, a
    simple FeedForward Footnote 2 neural network architecture is used, with 7 inputs,
    a hidden layer of 7 neurons, and an output of a single neuron. Based on the available
    data set, the frequency of measurement of agricultural devices and sensors, and
    the evolution trend throughout the day, the 7/7/1 architecture has been chosen
    due to the number of days of the week. It is intended to forecast humidity and
    temperature on the next consecutive day, displacing the input for the prediction
    of the following days. The hyperbolic tangent activation function is chosen since
    the values will be normalized between and 1. The Adam optimizer and the loss metric
    Mean Absolute Error are configured. To calculate the accuracy, the Mean Squared
    Error is used, since the prediction will be a continuous value and not a discrete
    one. Neural network training and validation A total of 8,430,118 observations
    captured by static and mobile devices are available in the repository, together
    with the semantic description of the devices and the farm or crop with which they
    are associated. This data set comprises observations from sensors, observations
    from sensors embedded in collars fitted to the neck of livestock, and state vectors
    from vehicles or UAVs. The values associated with temperature and atmospheric
    humidity for the forage crop comprise a total of 511,738 time points. For neural
    network training, consecutive queries are made to the STSDaMaS Data Query interface
    to extract the timestamps and values of humidity and temperature captured for
    the forage crop. For neural network training, it has been decided to collect the
    humidity observations in sets of 7 consecutive days and forecast the humidity
    values on the eighth day. Therefore, requests to the STSDaMaS query interface
    will extract the samples for 8 consecutive days, starting January 1, 2020, until
    September 1, 2022 (the rest of the data, until January 1, 2022, will be used for
    validation). To train the network with backpropagation [48], the time series provided
    by the output of the STSDaMaS query interface must be converted into a “supervised
    type problem”. In Fig. 8 the values obtained after 40 EPOCHS in model training,
    directly fed by the STSDaMaS query interface, are shown. Fig. 8 Training parameters
    Full size image Once the model has been trained, it is validated with the samples
    that have not been used in the training set. For the validation of the humidity
    prediction, the samples captured between 1 September 2021 and 1 January 2022 are
    available, obtaining the following graph as a result of the validation (see Fig.
    9). The measurements shown in green correspond to the actual value obtained from
    the sensors, and the measurements shown in red correspond to the values provided
    by the model. Fig. 9 Moisture prediction by the neural network fed from STSDaMaS
    Full size image The process is repeated for the temperature data, performing sequential
    queries through the STSDaMaS query interface, and training the model. Finally,
    the remaining set of temperature samples from the training set is used for model
    validation. Figure 10 shows the result of the validation of the temperature forecast
    between 1 September 2021 and 1 January 2022. The values represented in green correspond
    to the actual measurement, and the values represented in red correspond to the
    prediction provided by the model. Fig. 10 Temperature prediction using the neural
    network fed by STSDaMaS Full size image Humidity and temperature forecasting for
    predicting forage desiccation Once the neural network has been trained and validated,
    it is time to evaluate its response in the production environment. Given the following
    case: A certain crop has developed correctly and the user or farmer wants to know
    the optimal time for harvesting, ensuring that the atmospheric humidity and temperature
    conditions are correct for the drying of the fodder and its subsequent packaging.
    For this purpose, the neural network is fed through the STSDaMaS query interface
    to forecast the evolution of humidity and temperature in the following days. To
    provide a useful forecast for the farmer, historical data are queried for the
    previous 30 days and the evolution of humidity and temperature for the next 7
    days is predicted. If the average humidity and temperature values are in the right
    range for effective forage drying, harvesting will be recommended, and the ideal
    day and time to start will be indicated. Figure 11 shows the evolution of humidity
    Fig. (11a) and temperature Fig. (11b) for September. For the forecast offered
    by the neural network, the average humidity Fig. (11c) and temperature Fig. (11d)
    for the first week of October are shown. Fig. 11 Evolution of temperature and
    humidity provided by STSDaMaS and forecast provided by NN Full size image The
    forecast provided by the neural network determines that the first week of October
    presents optimal conditions for the forage drying stage. It is recommended that
    the mowing be performed from 11:00 A.M. on the first day of October to take advantage
    of the temporary window of optimal weather conditions. In turn, through the STSDaMaS
    query system, the current observations captured by the field devices will be represented
    in a near real-time environment, providing up-to-date information. Through the
    set of forage moisture observations, the neural network can be trained and validated
    to predict the exact moment for the baling of the forage, ensuring optimal forage
    quality conditions. However, the objective of this experiment is to validate the
    STSDaMaS framework, the data management offered, and the interoperability offered
    by its service; therefore, the implementation and improvement of decision support
    systems or monitoring or automation applications, among others, will be the target
    of future developments and research. The work carried out for the validation of
    the model aims to show the effectiveness and applicability of the proposal to
    feed prediction models that support decision-making. However, the accuracy obtained
    in the development of the neural network presented in this article could be optimized
    through some changes in its development: (i) Development of a new model taking
    the time stamp as a new input variable. (ii) Using the time stamp as an additional
    variable but using it with Embeddings. Temperature and humidity vary according
    to the year, month, and time of day at which the measurement is taken. Therefore,
    adding the time stamp as an input variable to the model can substantially improve
    the accuracy of the forecast, reducing the number of data needed for training.
    Through the STSDaMaS query interface, the evolution of atmospheric humidity presented
    for the first week of August 2020 and 2021 Fig. (12a) and the temperatures presented
    for the last week of July 2020 and 2021 Fig. (12b) are shown, demonstrating a
    clear similarity in their evolution. Fig. 12 Comparisons of humidity and temperature
    between 2020 and 2021 (output provided by the STSDaMaS query interface) Full size
    image Thanks to the neural network developed, the STSDaMaS framework has been
    validated as a spatio-temporal semantic data management system. The framework
    can provide service for machine learning models, decision-making algorithms, and
    monitoring agents and crop conditions. In turn, the development of the IDI component
    provides the service interoperability necessary for its inclusion in other precision
    agriculture solutions. The STSDaMaS framework could be of high utility in other
    application environments such as Industry 4.0, but for this, both its model, query
    functions, and repository structure must be adapted. Conclusion The authors of
    this article propose an innovative framework that, after describing the spatio-temporal
    semantic character of the data collected in the precision agriculture domain,
    offers the service of advanced data management and querying. The core of the STSDaMaS
    framework focuses on repository distribution in a knowledge base and time-series
    oriented database. Due to the repository distribution, STSDaMaS offers high performance
    in query resolution and complete data description. The distributed architecture
    of the repository offers: (A) Resolution of temporal and/or spatial queries through
    access to a historical database. (B) Resolution of semantic queries, through SPARQL
    on a triple-store, allowing the extraction of information and semantic description
    of data, as well as its relations with other individuals. (C) Resolution of complex
    queries through the relationships between the knowledge database and the historical
    database employing devices and their captured observation UIDs. STSDaMaS proposal
    constitutes a spatio-temporal semantic data management system that offers service
    interoperability through semantic interoperability. This innovative approach is
    particularly important in view of the European data strategy [49], which aims
    to make Europe a leader in the data-driven society. To guarantee the interoperability
    of the service offered by the proposed framework, the Interoperability through
    Data Integration component is described. The proposal has been validated by demonstrating
    the interoperability between the STSDaMaS framework, which works with DEMETER’s
    AIM data model, and the AFarCloud platform and its data model. In this way, projects
    such as DEMETER, which does not have a management system or native repositories,
    can include data ingestion and query services. In turn, it guarantees interoperability
    to increase the number of solutions available within the project framework, as
    shown by guaranteeing interoperability with the AFarCloud platform. The data preparation
    and transformation between the AIM and AFarCloud data model allow solutions such
    as decision-making or machine learning models fed by data in the AFarCloud framework,
    to be integrated with DEMETER through the STSDaMaS, increasing the number of available
    solutions. The article presents a specific use case for the validation of the
    proposal as input for machine learning models. It describes the complexity and
    importance of the task of mowing and desiccating legume fodder crops and the possibility
    of making a forecast for its correct development. A neural network is developed
    and fed through STSDaMaS for training and validation. An accurate weather forecast
    is provided for the recommendation of forage mowing, ensuring effective drying.
    The management of these crops is essential to ensure the quality of livestock
    feed, which includes a direct impact on animal welfare and the quality of beef
    or dairy products. The proposal presented in this article has been developed in
    the framework of the European DEMETER project, in collaboration with and expansion
    of the research and development carried out in the European AFarCloud project.
    This scenario allows for experimentation and validation of the proposal against
    a real scenario and data. The novel data management framework proposed in this
    article gathers the needs exposed in the precision agriculture framework, the
    literature, and the needs of specialists, engineers, farmers, or agricultural
    administrators themselves. The proposal has been applied as an spatio-temporal
    semantic data manager with service interoperability, enabling the annexation of
    AFarCloud project solutions in the DEMETER architecture. Future work The design
    and implementation of the STSDaMaS system focus on the application domain of precision
    agriculture. In this state, its adaptability to other application domains such
    as Smart Industry, Smart Cities, or Smart healthcare would imply modifications
    or extensions to the native data model of the system or the adaptability of some
    of its query or data injection functions. However, precision agriculture presents
    a scenario with common characteristics to those of other domains versed in sensor
    networks. Our current line of research focuses on extending the proposal to ensure
    its adaptability to other application domains of the Internet of Things framework.
    The temperature and humidity prediction model developed for the validation of
    the proposed system offers a valuable solution to the farmer or user. Once the
    proposal has been validated, the resilience of the model to abrupt changes in
    weather conditions could be improved. To increase prediction accuracy against
    sudden changes in climatic conditions, the inclusion of other data sources outside
    of the specific assessment scenario should be considered. Data provided by weather
    stations or data captured by devices deployed in neighboring scenarios offer the
    ability to anticipate abrupt changes in current conditions. The evaluation of
    observations such as precipitation amounts or wind speed and direction is currently
    under study. Notes A shard is a horizontal partition of data in a database or
    search engine. Each shard remains in a separate instance of the database server,
    to spread the load. Also denominated MLP for Multi-Layered Perceptron. References
    dpicampaigns: Take Action for the Sustainable Development Goals. https://www.un.org/sustainabledevelopment/sustainable-development-goals/.
    Accessed 11 Oct 2022. Animal welfare. https://food.ec.europa.eu/animals/animal-welfare_en.
    Accessed 11 Oct 2022. Home | Food and Agriculture Organization of the United Nations.
    https://www.fao.org/home/en. Accessed 11 Oct 2022. International Fund for Agricultural
    Development. https://www.ifad.org/en/. Accessed 11 Oct 2022. Agricultural research
    for development. https://www.ifad.org/en/agricultural-research-for-development.
    Accessed 11 Oct 2022. The State of Food Security and Nutrition in the World 2020
    | FAO | Food and Agriculture Organization of the United Nations. https://doi.org/10.4060/CA9692EN.https://www.fao.org/publications/sofi/2020/en/.
    Accessed 11 Oct 2022. Martin: Goal 2: Zero Hunger. https://www.un.org/sustainabledevelopment/hunger/.
    Accessed 11 Oct 2022. Kim W-S, Lee W-S, Kim Y-J. A Review of the Applications
    of the Internet of Things (IoT) for Agricultural Automation. J Biosyst Eng. 2020;45(4):385–400.
    https://doi.org/10.1007/s42853-020-00078-3. Article   Google Scholar   Tiddi,
    I., Lécué, F., Hitzler, P. (eds.): Knowledge Graphs for Explainable Artificial
    Intelligence: Foundations, Applications and Challenges. Studies on the semantic
    web, vol. volume 047. IOS Press, Amsterdam (2020) Zinke, C., Ngomo, A.-C.N.: Discovering
    and Linking Spatio-Temporal Big Linked Data. In: IGARSS 2018 - 2018 IEEE International
    Geoscience and Remote Sensing Symposium, pp. 411–414 (2018). https://doi.org/10.1109/IGARSS.2018.8519025
    ISSN: 2153-7003 N. Zhang, R.K.T.: APPLICATIONS OF A FIELD-LEVEL GEOGRAPHIC INFORMATION
    SYSTEM (FIS) IN PRECISION AGRICULTURE. https://doi.org/10.13031/2013.6829Accessed
    2023-01-04 Burlacu G, Costa R, Sarraipa J, Jardim-Golcalves R, Popescu D. A Conceptual
    Model of Farm Management Information System for Decision Support. In: Camarinha-Matos
    LM, Barrento NS, Mendonça R, editors. Technological Innovation for Collective
    Awareness Systems. IFIP Advances in Information and Communication Technology.
    Berlin: Springer; 2014. p. 47–54. https://doi.org/10.1007/978-3-642-54734-8_6.
    Chapter   Google Scholar   Leroux C, Jones H, Pichon L, Guillaume S, Lamour J,
    Taylor J, Naud O, Crestey T, Lablee J-L, Tisseyre B. GeoFIS: An Open Source, Decision-Support
    Tool for Precision Agriculture Data. Agriculture. 2018;8(6):73. https://doi.org/10.3390/agriculture8060073.
    Article   Google Scholar   Li R, He H, Wang R, Huang Y, Liu J, Ruan S, He T, Bao
    J, Zheng Y. JUST: JD Urban Spatio-Temporal Data Engine. In: 2020 IEEE 36th International
    Conference on Data Engineering (ICDE), pp. 1558–1569 (2020). https://doi.org/10.1109/ICDE48307.2020.00138.
    ISSN: 2375-026X. Ren Y, Huang D, Wang W, Yu X. BSMD: A blockchain-based secure
    storage mechanism for big spatio-temporal data. Fut Gen Computer Syst. 2023;138:328–38.
    https://doi.org/10.1016/j.future.2022.09.008. Article   Google Scholar   Isomura
    A, Shigematsu N, Ueno I, Oki N, Arakawa Y. Real-time Spatiotemporal Data-management
    Technology (Axispot ). NTT Techn Rev 20(7), 54–60 (2022). https://doi.org/10.53829/ntr202207fa8.
    Deeken H, Wiemann T, Lingemann K, Hertzberg J. SEMAP - a semantic environment
    mapping framework. In: 2015 European Conference on Mobile Robots (ECMR), pp. 1–6.
    https://doi.org/10.1109/ECMR.2015.7324176. 2015. Deeken H, Wiemann T, Hertzberg
    J. A Spatio-Semantic Model for Agricultural Environments and Machines. In: Mouhoub
    M, Sadaoui S, Ait Mohamed O, Ali M, editors. Recent Trends and Future Technology
    in Applied Intelligence. Lecture Notes in Computer Science. Cham: Springer; 2018.
    p. 589–600. https://doi.org/10.1007/978-3-319-92058-0_57. Chapter   Google Scholar   Deeken
    H, Wiemann T, Hertzberg J. A spatio-semantic approach to reasoning about agricultural
    processes. Appl Intell. 2019;49(11):3821–33. https://doi.org/10.1007/s10489-019-01451-2.
    Article   Google Scholar   Wisnubhadra, I., Baharin, S., Herman, N., Open Spatiotemporal
    Data Warehouse for Agriculture Production Analytics. Int J Intell Eng Syst 13(6),
    419–431 (2020). https://doi.org/10.22266/ijies2020.1231.37 Murlidharan S, Shukla
    VK, Chaubey A .Application of Machine Learning in Precision Agriculture using
    IoT. In: 2021 2nd International Conference on Intelligent Engineering and Management
    (ICIEM), pp. 34–39. 2021. https://doi.org/10.1109/ICIEM51511.2021.9445312. Sharma
    A, Jain A, Gupta P, Chowdary V. Machine Learning Applications for Precision Agriculture:
    A Comprehensive Review. IEEE Access. 2021;9:4843–73. https://doi.org/10.1109/ACCESS.2020.3048415.
    Article   Google Scholar   Liakos KG, Busato P, Moshou D, Pearson S, Bochtis D.
    Machine Learning in Agriculture: A Review. Sensors. 2018;18(8):2674. https://doi.org/10.3390/s18082674.
    Article   Google Scholar   Meshram V, Patil K, Meshram V, Hanchate D, Ramkteke
    SD. Machine learning in agriculture domain: A state-of-art survey. Artif Intell
    Life Sci. 2021;1: 100010. https://doi.org/10.1016/j.ailsci.2021.100010. Article   Google
    Scholar   Mee J, Boyle L. Assessing whether dairy cow welfare is “better” in pasture-based
    than in confinement-based management systems. New Zealand Veter J. 2020;68(3):168–77.
    https://doi.org/10.1080/00480169.2020.1721034. Article   Google Scholar   Mwangi
    FW, Charmley E, Gardiner CP, Malau-Aduli BS, Kinobe RT, Malau-Aduli AEO. Diet
    and genetics influence beef cattle performance and meat quality characteristics.
    Foods. 2019;8(12):648. https://doi.org/10.3390/foods8120648. Article   Google
    Scholar   Moore KJ, Lenssen AW, Fales SL. Factors Affecting Forage Quality. In:
    Forages, pp. 701–717. Wiley, New York. 2020. https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119436669.ch39
    Accessed 5 May 2022. Johann AL, de Araújo AG, Delalibera HC, Hirakawa AR. Soil
    moisture modeling based on stochastic behavior of forces on a no-till chisel opener.
    Computers Electr Agric. 2016;121:420–8. https://doi.org/10.1016/j.compag.2015.12.020.
    Article   Google Scholar   Nahvi B, Habibi J, Mohammadi K, Shamshirband S, Al
    Razgan OS. Using self-adaptive evolutionary algorithm to improve the performance
    of an extreme learning machine for estimating soil temperature. Computers Electr
    Agric. 2016;124:150–60. https://doi.org/10.1016/j.compag.2016.03.025. Article   Google
    Scholar   Vamseekrishna A, Nishitha R, Kumar TA, Hanuman K, Supriya CG. Prediction
    of Temperature and Humidity Using IoT and Machine Learning Algorithm. In: Bhattacharyya
    S, Nayak J, Prakash KB, Naik B, Abraham A, editors. International Conference on
    Intelligent and Smart Computing in Data Analytics Advances in Intelligent Systems
    and Computing. Singapore: Springer; 2021. p. 271–9. https://doi.org/10.1007/978-981-33-6176-8_30.
    Chapter   Google Scholar   Kumar YJN, Spandana V, Vaishnavi VS, Neha K, Devi VGRR.
    Supervised Machine learning Approach for Crop Yield Prediction in Agriculture
    Sector. In: 2020 5th International Conference on Communication and Electronics
    Systems (ICCES), pp. 736–741. 2020. https://doi.org/10.1109/ICCES48766.2020.9137868
    Jena A. Apache Jena - Reasoners and rule engines: Jena inference support. https://jena.apache.org/documentation/inference/#rules.
    Accessed 29 Mar 2023. W3C: SWRL: A Semantic Web Rule Language Combining OWL and
    RuleML. https://www.w3.org/Submission/SWRL/ Accessed 2023-03-29 W3C: RIF Overview
    (Second Edition). https://www.w3.org/TR/rif-overview/. Accessed 29 Mar 2023. W3C:
    Notation 3 Logic. https://www.w3.org/DesignIssues/Notation3.html. Accessed 29
    Mar 2023. W3C: RuleML - W3C RIF-WG Wiki. https://www.w3.org/2005/rules/wg/wiki/RuleML.
    Accessed 29 Mar 2023. Demeter - EMPOWERING FARMERS. 2019. https://h2020-demeter.eu/.
    Accessed 10 Nov 2023. Palma R, Roussaki I, Döhmen T, Atkinson R, Brahma S, Lange
    C, Routis G, Plociennik M, Mueller S. Agricultural Information Model. In: Bochtis
    DD, Sørensen CG, Fountas S, Moysiadis V, Pardalos PM, editors. Information and
    Communication Technologies for Agriculture-Theme III: Decision Springer Optimization
    and Its Applications. Cham: Springer; 2022. p. 3–36. https://doi.org/10.1007/978-3-030-84152-2_1.
    Chapter   Google Scholar   14:00-17:00: ISO/IEC 21823-1:2019. https://www.iso.org/standard/71885.html.
    Accessed 11 Mar 2022. Khatoon, P.S., Ahmed, M.: Semantic Interoperability for
    IoT Agriculture Framework with Heterogeneous Devices. In: Gunjan, V.K., Zurada,
    J.M. (eds.) Proceedings of International Conference on Recent Trends in Machine
    Learning, IoT, Smart Cities and Applications. Advances in Intelligent Systems
    and Computing, pp. 385–395. Springer, Singapore (2021). https://doi.org/10.1007/978-981-15-7234-0_34
    Aydin S, Aydin MN. Semantic and Syntactic Interoperability for Agricultural Open-Data
    Platforms in the Context of IoT Using Crop-Specific Trait Ontologies. Appl Sci.
    2020;10(13):4460. https://doi.org/10.3390/app10134460. Article   Google Scholar   Castillejo
    P, Johansen G, Cürüklü B, Bilbao-Arechabala S, Fresco R, Martínez-Rodríguez B,
    Pomante L, Rusu C, Martínez-Ortega J-F, Centofanti C, Hakojärvi M, Santic M, Häggman
    J. Aggregate Farming in the Cloud: The AFarCloud ECSEL project. Microprocess Microsyst.
    2020;78:10321103218. https://doi.org/10.1016/j.micpro.2020.103218. Article   Google
    Scholar   Parte MSE, Serrano SL, Díaz, VH, Martínez-Ortega J-F. grys-upm/Spatio-Temporal-Semantic
    Data Model for Precision Agriculture. Zenodo (2022). https://doi.org/10.5281/zenodo.7263254.
    https://zenodo.org/record/7263254 Accessed 29 Oct 2022. Ray S. A Quick Review
    of Machine Learning Algorithms. In: 2019 International Conference on Machine Learning,
    Big Data, Cloud and Parallel Computing (COMITCon), pp. 35–39. 2019. https://doi.org/10.1109/COMITCon.2019.8862451
    Mahesh B. Machine Learning Algorithms -A Review. International Journal of Science
    and Research (IJSR). 2019. https://doi.org/10.21275/ART20203995. Bonaccorso G.
    Machine Learning Algorithms. New York: Packt Publishing Ltd; 2017. Google Scholar   Singh
    A, Thakur N, Sharma A. A review of supervised machine learning algorithms. In:
    2016 3rd International Conference on Computing for Sustainable Global Development
    (INDIACom), pp. 1310–1315. 2016. Rumelhart DE, Hinton GE, Williams RJ. Learning
    representations by back-propagating errors. Nature. 1986;323(6088):533–6. https://doi.org/10.1038/323533a0.
    Article   MATH   Google Scholar   Communication from the commission to the European
    Parliament, the council, the European Economic and Social Committee and the committee
    of the regions. A European strategy for data. 2020). https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX.
    Accessed 17 Oct 2022. Download references Acknowledgements This publication is
    part of the Horizon 2020 DEMETER project (857202) supported by the European Union.
    Funding This work was supported by the DEMETER project, which has received funding
    from INDUSTRIAL LEADERSHIP—Leadership in enabling and industrial technologies—Information
    and Communication Technologies (ICT) under grant agreement No. 857202. ICT receives
    support from the European Union’s Horizon 2020 research and innovation program,
    and Italy, Luxembourg, Spain, Germany, Greece, United Kingdom, Norway, Czechia,
    Montenegro, Belgium, Romania, Ireland, Finland, Serbia, Portugal, Poland, Georgia,
    and Slovenia. Author information Authors and Affiliations Group of Next Generation
    Networks and Services (GRyS), Departamento de Ingeniería Telemática y Electrónica
    (DTE), Universidad Politécnica de Madrid (UPM), Madrid, Spain Mario San Emeterio
    de la Parte, José-Fernán Martínez-Ortega, Vicente Hernández Díaz & Néstor Lucas
    Martínez Contributions Conceptualization, MSEP and NLM; Data curation, MSEP and
    JFMO; Formal analysis, MSEP and VHD; Funding acquisition, JFMO; Investigation,
    MSEP, NLM and VHD; Methodology, MSEP, NLM and JFMO; Project administration, MSEP
    and JFMO; Software, MSEP, NLM and JFMO; Supervision, MSEP and JFMO; Validation,
    MSEP, NLM, VHD and JFMO; Visualization, VHD; Writing—original draft, MSEP; Writing—review
    and editing, MSEP, NLM, VHD and JFMO. All authors read and approved the final
    manuscript. Corresponding author Correspondence to Mario San Emeterio de la Parte.
    Ethics declarations Ethics approval and consent to participate Not applicable.
    Consent for publication Not applicable. Competing interests The authors declare
    that they have no competing interests. Additional information Publisher''s Note
    Springer Nature remains neutral with regard to jurisdictional claims in published
    maps and institutional affiliations. Rights and permissions Open Access This article
    is licensed under a Creative Commons Attribution 4.0 International License, which
    permits use, sharing, adaptation, distribution and reproduction in any medium
    or format, as long as you give appropriate credit to the original author(s) and
    the source, provide a link to the Creative Commons licence, and indicate if changes
    were made. The images or other third party material in this article are included
    in the article''s Creative Commons licence, unless indicated otherwise in a credit
    line to the material. If material is not included in the article''s Creative Commons
    licence and your intended use is not permitted by statutory regulation or exceeds
    the permitted use, you will need to obtain permission directly from the copyright
    holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.
    Reprints and permissions About this article Cite this article San Emeterio de
    la Parte, M., Martínez-Ortega, JF., Hernández Díaz, V. et al. Big Data and precision
    agriculture: a novel spatio-temporal semantic IoT data management framework for
    improved interoperability. J Big Data 10, 52 (2023). https://doi.org/10.1186/s40537-023-00729-0
    Download citation Received 10 January 2023 Accepted 11 April 2023 Published 28
    April 2023 DOI https://doi.org/10.1186/s40537-023-00729-0 Share this article Anyone
    you share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Keywords
    Spatiotemporal Data Bases (STDB) Internet of Things (IoT) Big Data Data auditing
    Service interoperability Precision agriculture Neural networks Machine Learning
    (ML) Decision Support Systems (DSS) Download PDF Download ePub Sections Figures
    References Abstract Introduction Related work Spatio-temporal semantic data management
    system (STSDaMaS) Achieving interoperability, use case with the AFarCloud Data
    Model System validation: applying neural network for fodder legume harvesting
    and bailing prediction Conclusion Future work Notes References Acknowledgements
    Funding Author information Ethics declarations Additional information Rights and
    permissions About this article Advertisement Support and Contact Jobs Language
    editing for authors Scientific editing for authors Leave feedback Terms and conditions
    Privacy statement Accessibility Cookies Follow SpringerOpen By using this website,
    you agree to our Terms and Conditions, Your US state privacy rights, Privacy statement
    and Cookies policy. Your privacy choices/Manage cookies we use in the preference
    centre. © 2024 BioMed Central Ltd unless otherwise stated. Part of Springer Nature."'
  inline_citation: '>'
  journal: Journal of Big Data
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Big Data and precision agriculture: a novel spatio-temporal semantic IoT
    data management framework for improved interoperability'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mohd Ali F.
  - Md Yunus N.A.
  - Mohamed N.N.
  - Mat Daud M.
  - A. Sundararajan E.
  citation_count: '1'
  description: The Internet of Everything (IoE) represents a paradigm shift in the
    world of connectivity. While the Internet of Things (IoT) initiated the era of
    interconnected devices, the IoE takes this concept to new heights by interlinking
    objects, individuals, data, and processes. Symmetry in IoE innovation and technology
    is essential for creating a harmonious and efficient ecosystem to ensure that
    the benefits are accessible to a broad spectrum of society while minimizing potential
    drawbacks. This comprehensive review paper explores the multifaceted landscape
    of the IoE, delving into its core concepts, enabling technologies, real-world
    applications, and the intricate web of challenges it presents. A focal point of
    this review is the diverse array of real-world applications spanning healthcare,
    smart cities, industry 4.0, agriculture, and sustainability. Previous works and
    examples illustrate how the IoE reshapes these domains, leading to greater efficiency,
    sustainability, and improved decision making. However, the transformative power
    of the IoE is accompanied by a host of challenges, including security and privacy
    concerns, interoperability issues, and the ethical implications of ubiquitous
    connectivity. These challenges are dissected in order to comprehensively understand
    the obstacles and potential solutions in the IoE landscape. As we stand on the
    cusp of an IoE-driven future, this review paper serves as a valuable resource
    for researchers, policy makers, and industry professionals seeking to navigate
    the complexities of this emerging paradigm. By illuminating the intricacies of
    the IoE, this review fosters a deeper appreciation for the transformative potential
    and the multifaceted challenges that lie ahead in the Internet of Everything era.
  doi: 10.3390/sym15111964
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Symmetry All Article Types Advanced   Journals
    Symmetry Volume 15 Issue 11 10.3390/sym15111964 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editors Teen-Hang
    Meen Chun-Yen Chang Charles Tijus Show more... Subscribe SciFeed Recommended Articles
    Related Info Link More by Authors Links Article Views 1355 Citations 1 Table of
    Contents Abstract Introduction Related Works Materials and Methods Results and
    Discussion Conclusions Author Contributions Funding Data Availability Statement
    Acknowledgments Conflicts of Interest Appendix A References share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessReview A
    Systematic Mapping: Exploring Internet of Everything Technologies and Innovations
    by Fazlina Mohd Ali 1, Nur Arzilawati Md Yunus 2,*, Nur Nabila Mohamed 3, Marizuana
    Mat Daud 4 and Elankovan A. Sundararajan 1 1 Research Center for Software Technology
    and Management (SOFTAM), Faculty of Information Science and Technology, University
    Kebangsaan Malaysia, Bangi 43600, Selangor, Malaysia 2 Department of Communication
    Technology and Network, Faculty of Computer Science and Information Technology,
    University Putra Malaysia, Serdang 43400, Selangor, Malaysia 3 School of Electrical
    Engineering, College of Engineering, Universiti Teknologi MARA, Shah Alam 40450,
    Selangor, Malaysia 4 Institute of Visual Informatics, Universiti Kebangsaan Malaysia,
    Bangi 43600, Selangor, Malaysia * Author to whom correspondence should be addressed.
    Symmetry 2023, 15(11), 1964; https://doi.org/10.3390/sym15111964 Submission received:
    26 September 2023 / Revised: 17 October 2023 / Accepted: 20 October 2023 / Published:
    24 October 2023 (This article belongs to the Topic Application of IoT on Manufacturing,
    Communication and Engineering) Download keyboard_arrow_down     Browse Figures
    Versions Notes Abstract The Internet of Everything (IoE) represents a paradigm
    shift in the world of connectivity. While the Internet of Things (IoT) initiated
    the era of interconnected devices, the IoE takes this concept to new heights by
    interlinking objects, individuals, data, and processes. Symmetry in IoE innovation
    and technology is essential for creating a harmonious and efficient ecosystem
    to ensure that the benefits are accessible to a broad spectrum of society while
    minimizing potential drawbacks. This comprehensive review paper explores the multifaceted
    landscape of the IoE, delving into its core concepts, enabling technologies, real-world
    applications, and the intricate web of challenges it presents. A focal point of
    this review is the diverse array of real-world applications spanning healthcare,
    smart cities, industry 4.0, agriculture, and sustainability. Previous works and
    examples illustrate how the IoE reshapes these domains, leading to greater efficiency,
    sustainability, and improved decision making. However, the transformative power
    of the IoE is accompanied by a host of challenges, including security and privacy
    concerns, interoperability issues, and the ethical implications of ubiquitous
    connectivity. These challenges are dissected in order to comprehensively understand
    the obstacles and potential solutions in the IoE landscape. As we stand on the
    cusp of an IoE-driven future, this review paper serves as a valuable resource
    for researchers, policy makers, and industry professionals seeking to navigate
    the complexities of this emerging paradigm. By illuminating the intricacies of
    the IoE, this review fosters a deeper appreciation for the transformative potential
    and the multifaceted challenges that lie ahead in the Internet of Everything era.
    Keywords: Internet of Everything; Internet of Things; cloud computing; security;
    privacy; smart systems 1. Introduction The digital transformation of the 21st
    century has ushered in a new era of connectivity, where everyday objects, devices,
    and systems are becoming increasingly interconnected, intelligent, and data-driven.
    As a result of the exponential emergence of the Internet in interconnected networks,
    most technology must adhere to more rigorous standards. This transformative phenomenon
    is commonly referred to as the Internet of Things (IoT) [1,2]. However, beyond
    the IoT lies a more comprehensive and expansive concept known as the Internet
    of Everything (IoE), which expands the boundaries of network connectivity with
    intelligent devices and is forecasted to see even more rapid advancement in the
    future [3]. The IoE is an ecosystem where devices and things are connected to
    the Internet, and where people, processes, and data are seamlessly integrated,
    creating a web of interconnectedness that transcends traditional boundaries [4].
    The Internet of Everything (IoE), as delineated by Cisco Systems Inc., encompasses
    an intricate network of interconnections involving individuals, processes, data,
    and IoT devices. According to Cisco’s estimations, the forthcoming 15 years are
    poised to yield substantial advantages from IoE implementation in the global public
    sector, amounting to an impressive USD 4.6 trillion. Simultaneously, the private
    sector is expected to generate a remarkable USD 14.4 trillion in economic value
    during this period [5]. In this digital realm, objects can communicate with each
    other, make autonomous decisions, and interact with humans in ways that were once
    the stuff of science fiction. The IoE concept not only encompasses smart devices
    and sensors but also leverages data analytics, artificial intelligence, cloud
    computing, and advanced networking technologies to create a symbiotic relationship
    between the digital and physical worlds. It promises to revolutionize industries,
    enhance the quality of life, and address some of the most pressing global challenges,
    from healthcare and transportation to energy efficiency and sustainability. This
    introduction sets the stage for a deeper exploration of the IoE ecosystem, its
    key components and challenges, and the transformative impact it is poised to have
    on various domains of human activity. In the following sections, we will delve
    into the fundamental concepts, technologies, applications, and emerging trends
    of the Internet of Everything. In this paper, we have divided the structure into
    sections and subsections. In the introduction part, we introduced the concept
    of the Internet of Everything (IoE) and its transformative potential, setting
    the stage for our journey. In the section on related works, we examine existing
    research and innovation efforts, highlighting the progress made thus far. The
    materials and methods section delves into the critical components of the IoE,
    emphasizing the convergence of the IoE that underpins this revolutionary concept.
    Our discussion of the results underscores the dynamic and multifaceted nature
    of IoE innovation. Ultima, the promise of IoE technologies and innovation is substantial,
    offering boundless opportunities for a brighter and more connected future. The
    motivation to explore IoE technologies is driven by its capacity to solve complex
    challenges. The IoE has the potential to address global issues such as the integration
    of physical and digital realms, creating a landscape where devices, systems, and
    individuals converge, interoperate, and share data in real time. In conclusion,
    this exploration of IoE technologies and innovation sets the stage for a compelling
    journey into the interconnected world of the future. By understanding and leveraging
    IoE, we can pave the way for a more efficient, sustainable, and connected society
    that unlocks opportunities for growth and transformation across all sectors. 2.
    Related Works The evolution of the Internet of Everything (IoE) has been a subject
    of profound interest and investigation in recent years. Researchers and scholars
    alike have delved into various facets of the IoE, seeking to unravel its intricate
    web of connections between people, processes, data, and objects. A significant
    body of related works has emerged, shedding light on the transformative potential
    of the IoE in diverse domains, including industry IoT (IIoT) and cognitive IoT
    (CIoT), as shown in Figure 1. These studies have elucidated the critical role
    of the IoE in enhancing efficiency, enabling data-driven decision making, and
    ushering in the new era of connectivity. Figure 1. The Internet of Everything
    (IoE). The IoE plays a pivotal role in enabling the creation of innovative services,
    based on the Internet of Things (IoT), fog, and cloud computing paradigms. IoT-based
    sensors are poised to enhance data transmission for analysis, thus contributing
    to improved decision making and an overall increase in the quality of citizens’
    lives [6]. The IoE is anticipated to receive significant amounts of attention
    in the coming years, especially with the emergence of new, exciting technologies
    in the sectors of networking, software, hardware, and luxury-oriented services
    for humans [5]. Several researchers have made significant contributions, with
    diverse objectives that collectively enhance the capabilities of the IoE. Antonios
    et al. conducted a systematic literature review on semantic technologies in smart
    cities, with objectives centered on identifying trends and challenges in adopting
    semantic interoperability solutions for sustainable, green, and resilient urban
    environments [7]. In the context of the Internet of Everything (IoE) environment,
    the incorporation of infrared communication into the smart home system emerges
    as a noteworthy development. Researchers [8] have effectively addressed the longstanding
    challenge wherein a significant portion of infrared-communication-based household
    appliances faced limitations in their integration into the smart home network.
    This innovative effort not only resolves this problem but also helps to lower
    the implementation costs of such a smart home system, making it more affordable
    and useful in the everyday lives of the general population. Another study attempted
    to replicate a multitude of pragmatic Internet of Everything (IoE) scenarios,
    mirroring real-world applications. In this pursuit, this paper adeptly harnesses
    the capabilities of the Cisco Packet Tracer, an instrumental tool employed in
    the experimental setup [9]. This comprehensive exploration necessitates the interconnection
    of a substantial array of sensors and devices, effectively emulating the complexities
    that are inherent to IoE ecosystems. Moreover, this investigative work encompasses
    the deployment of a diverse range of network components, including routers, switches,
    and servers, with IoT devices thus culminating in the establishment of a fully
    operational network infrastructure, like the contributions such as [10]. Numerous
    researchers are eagerly contributing to holistic performance enhancement by adopting
    heuristic and metaheuristic algorithms that are used extensively for time–cost
    optimization in cloud computing [11]. Equally, in [12], the study focuses on elevating
    various performance aspects of quality management (QM) and bolstering consumer
    confidence within the Internet of Everything (IoE) framework. The study introduces
    a QM platform designed to prioritize swift responses and minimize latency in acquiring
    sensor data, while also ensuring authentication, data consistency, and transparency
    in the context of cold supply chain logistics. Additionally, an innovative adaptive
    data smoothing and compression (ADSC) mechanism is proposed to efficiently reduce
    the size of IoE data. This facilitates storage within edge gateways, even when
    they have limited computational and storage capacities. This research contributes
    significantly to optimizing cold supply chain logistics by harnessing IoE and
    blockchain technologies to enhance quality management and transparency in supply
    chain operations. 3. Materials and Methods Systematic mapping or scoping studies
    aim to offer a comprehensive perspective on a specific research field by categorizing
    and organizing existing research. These studies primarily delve into the body
    of available research to assess the breadth of various subjects, publication frequency,
    emerging research patterns, and the sources where relevant studies have been disseminated.
    In this particular study, the systematic mapping process adheres to the recommendations
    outlined by Petersen et al. [13]. In accordance with the systematic mapping study
    guidelines, the key procedural stages encompass defining research inquiries, scouring
    for pertinent academic papers, screening these papers, annotating abstracts with
    relevant keywords, extracting data, and creating a visual representation, as illustrated
    in Figure 2. Each of these steps yields specific outcomes, and the ultimate product
    of this entire undertaking is a systematic map, which is further elucidated in
    [13,14]. Figure 2. Systematic mapping [13]. Definition of Research Questions (Research
    Scope)—The principal objective of a systematic mapping study is to establish a
    comprehensive view of a specific research domain, determining the extent and nature
    of the research and findings available in that domain. Conducting the Search for
    Primary Studies (All Papers)—The identification of primary studies was accomplished
    by employing search terms within scientific databases or by manually perusing
    relevant conference proceedings and journal publications. Screening of Papers
    for Inclusion and Exclusion (Relevant Papers)—Inclusion and exclusion criteria
    were applied to sift through studies that were pertinent to addressing the research
    inquiries, discarding those that did not meet the criteria. Keywording of Abstracts
    (Classification Scheme)—Keywording served as a method to expedite the development
    of the classification scheme and ensure that it took into account existing studies,
    thereby reducing the time required. Data Extraction and Mapping of Studies (Systematic
    Map)—Once the classification scheme had been established, the relevant articles
    were organized within it, signifying the practical phase of data extraction. 3.1.
    Research Questions The primary research question (RQ) of this systematic mapping
    study was: “What innovations are derived from IoE technology?” This primary question
    was divided into seven RQs. Table 1 lists the formulated RQs along with the rationale
    behind each RQ. Table 1. Research questions. 3.2. Data Sources We examined twelve
    electronic databases as our main sources for potentially relevant studies. Google
    Scholar was omitted from the selection due to its lower precision in delivering
    results and the significant overlap with results from other data sources. The
    electronic databases utilized during the search process are detailed in Table
    2. Table 2. Electronic databases. 3.3. Search Terms To ensure a thorough search
    of pertinent studies, it is crucial to identify the appropriate search terms.
    Kitchenham et al. [15] introduced the population, intervention, comparison, and
    outcome (PICO) perspective as a valuable framework for this purpose. This perspective
    has been widely adopted in numerous systematic literature reviews (SLRs). Below,
    the relevant PICO terms are listed: Population: primary studies on the Internet
    of Things; Intervention: IoE innovations; Comparison: problems, innovation, advantages,
    limitation performance metrics, and future directions; Outcome: innovation, advantages,
    and limitations of IoE technology. (‘‘Internet of Things” OR “Internet of Everything’’
    OR “Internet of Everything Technologies’’ OR “Internet of Everything Trends” OR
    “Internet of Everything Limitation” OR “Internet of Everything Innovations’’)
    AND (‘‘Artificial Intelligence’’ OR ‘‘Smart Environment’’ OR “Smart Systems’’
    OR ‘‘Cloud Computing” OR ‘‘Security Privacy’’ OR “Network Technologies”) 3.4.
    Inclusion and Exclusion Criteria In this systematic mapping study, inclusion and
    exclusion criteria were used to select and excludestudies from the data sources
    to answer the RQs. These criteria were applied to all studies retrieved during
    the different phases of the study selection procedure (see Table 3). Early cited
    articles were also included, provided the full text was available. Table 3. Inclusion
    and exclusion criteria. 4. Results and Discussion In this section, all the RQs
    are answered by analyzing the results extracted from the collection of primary
    studies. In the course of our discussions, each primary study is referenced using
    a unique Paper Identification (PID), and these PIDs correspond to the research
    works summarized in Appendix A. 4.1. RQ1: To Which Domains Has the IoE Been Heavily
    Applied? This research question aims to provide a comprehensive overview of the
    collective endeavors of researchers who have dedicated their studies to similar
    domains, thereby fostering a broader understanding and development of IoE applications.
    The following domains and their respective researchers have demonstrated shared
    objectives within their distinct domains. The Healthcare Domain: Researchers [16,17,18]
    have contributed 6% of the total noteworthy contributions to IoE-driven innovations,
    and their studies all fall within the healthcare domain compared with other domains.
    These shared objectives underscore the unwavering commitment of these researchers
    to enhancing healthcare services, promoting seamless information integration,
    and ultimately benefitting patients, healthcare providers, and various stakeholders.
    Smart Cities and Urban Environments: In the domain of smart cities and urban environments,
    complementary efforts from [7,19,20,21,22] have contributed 13% of IoE applications,
    with influential contributions to this domain. Their shared goals revolve around
    optimizing urban resource allocation, reducing latency, and nurturing sustainable,
    green, and resilient urban environments through the integration of IoE technologies.
    Researchers [8,23] have focused on advancing IoE applications within smart homes.
    Their research initiatives collectively contribute to the convenience and energy
    efficiency of smart home environments. Cloud Computing, Fog, and Edge Collaboration:
    Several researchers, including [20,24,25,26,27,28], have made significant contributions
    to advancing IoE integration in the field of cloud computing and collaboration.
    These initiatives collectively highlight the crucial role that cloud computing
    plays in the Internet of Everything (IoE) and its potential to offer useful services
    to end users. IoE skills in fog and cloud situations have been improved by researchers,
    including [19,29,30,31]. Researchers are working together to maximize the potential
    of cloud and fog technologies to enhance Internet of Everything (IoE) applications.
    In IoE research, refs. [31,32,33,34] have all advanced the field of edge computing.
    By emphasizing effective job scheduling and resource allocation, together, these
    research projects tap into the potential of edge computing in Internet of Everything
    applications. In the domain of cloud computing, fog, and edge collaboration, approximately
    25% of the researchers included in this study have dedicated their efforts, marking
    it as the most prominent domain for IoE application within existing research endeavors.
    The Security Domain: Researchers [35,36,37,38,39,40,41], have made significant
    contributions to the field of IoE security, with 13% of IoE research applied to
    this domain. Their joint research efforts address the most important issues around
    security and privacy in the IoE ecosystem. Distributed Systems: The domain of
    distributed systems within IoE research has been contributed to by 4% of the contributions
    of researchers [42,43]. Their shared objective revolves around various advancement
    schemes for trustworthy data collection in large-scale sensor-distributed systems.
    Advancements in AI and AI-Related Domains: Researchers [23,44] have made significant
    strides in leveraging artificial intelligence and related domains, contributing
    4% to the broader IoE research landscape. Their domain-specific focus involves
    enhancing industrial robotics and manufacturing through innovative sensor devices.
    Optimization of Network Technologies: Various researchers [3,24,45,46] have made
    8% contributions to IoE research in the domain of network technology optimization.
    Through the connection of terrestrial IoT networks and the resolution of associated
    problems, their research aims to improve networking performance. Business Strategies:
    Researchers [47,48,49,50,51] have extended IoE research into the realm of business
    strategies. Together these, research initiatives explore the transformative potential
    of the IoE in various business contexts. The business domain makes a substantial
    contribution, accounting for approximately 9% of the overall IoE applications
    compared with other domains. The Education Domain: In the field of education,
    6% of IoE research is applied to this domain. Researchers [52,53,54] are focused
    on unlocking the revolutionary possibilities offered by the Internet of Everything
    (IoE). These research initiatives, taken together, aim to improve educational
    experiences and reinforce security by incorporating IoE platforms. The Smart Systems
    Domain: Within the domain of smart systems, researchers [37,44,55,56] share common
    objectives in IoE research contributing significantly to the research landscape,
    with an 8% contribution among other domains. These researchers have successfully
    enhanced relevant strategies within the smart systems domain. The Agriculture
    Domain: In the domain of agriculture, researchers [27,57] have made significant
    contributions, with IoE technologies representing 8% of their collective efforts
    to enhance agricultural best practices. In summary, a total of 11 diverse domains
    within the Internet of Everything (IoE) landscape have benefited from the collaborative
    efforts of researchers who share common objectives, which are described in this
    study. As depicted in Figure 3, the cloud computing, fog, and edge collaboration
    domain represents 25%, signifying its substantial prevalence in the IoE landscape
    compared with other domains. This prominence can be attributed to its central
    role in enabling IoE services, minimizing latency, and streamlining data processing
    and analysis. This domain effectively caters to the fundamental infrastructure
    and connectivity demands of IoE, rendering it a primary focal point for researchers
    and practitioners in this field. Figure 3. IoE technology in various domains.
    Collectively, these researchers have contributed to the advancement of similar
    domains, addressing critical challenges and fostering innovation through their
    IoE expertise. Therefore, there are also interconnections between researchers’
    work in various domains. This interdisciplinary collaboration leads to innovations
    that leverage IoT technologies to address complex challenges across diverse domains.
    Table 4 offers a structured summary of the number of studies within the IoE field,
    illustrating the interconnections among studies in different domains and their
    contributions to diverse IoT applications. Furthermore, as addressed in RQ1 discussions,
    Figure 3 presents the percentages of research undertaken in various domains, enhancing
    the comprehensibility of the analysis. Table 4. Number of studies and interconnections
    in IoT applications. 4.2. RQ2: What Types of Problems Exist in IoE Innovations?
    The Internet of Everything (IoE) encompasses a wide range of innovations and technologies
    that aim to connect not onlydevices and people, but also data, processes, and
    things in a more comprehensive and integrated manner. As a result, IoE innovations
    can address a diverse set of problems and challenges across various domains. Based
    on the analysis of this study, we identify the current problems in IoE innovations.
    Below are some common types of problems in IoE innovation. 4.2.1. Healthcare As
    healthcare becomes more patient-centric, it needs a multilayer architecture to
    manage the enormous amount of data generated by the system, such as to control
    COVID epidemics/pandemics while maintaining privacy and addressing protection
    issues in healthcare [16,17]. The proliferation of the e-commerce market has posed
    challenges to staff safety, product quality, and operational efficiency, especially
    for cold-chain logistics (CCL). Recently, the logistics of vaccine supply under
    the worldwide COVID-19 pandemic has re-aroused public attention and led to calls
    for innovative solutions to tackle the challenges remaining in CCL [18]. 4.2.2.
    Smart Environments Due to the unprecedented increase in the use of IoE technology
    and the volume of data it generates, there is a need to develop a state-of-the-art
    architecture to support a wide range of applications to manage smart city resources
    efficiently and intelligently [19,47]. The main challenge in realizing the smart
    city vision is providing seamless interoperability between the IoE entities [7].
    This is due to most of the systems nowadays working in a silo-based manner and
    not being able to be connected or communicate with other systems [8,20,23]. Security
    has become a hot subject of particular concern, with issues of complicated technology
    and a massive volume of data [37]. The IoE also poses considerable challenges
    to firms, including the development of interoperability between systems, coping
    with entrenched industry partners that do not collaborate with the new developments,
    path-dependent legacy processes and transactions, contractual and liability issues,
    security challenges, loss of control, as well as privacy concerns related to the
    explosion of data collected and used by businesses and their smart things [41,44,48,58].
    4.2.3. Power Systems, Virtualization, Distributed Systems, and Automation The
    IoT evolves into the IoE by incorporating the concept of things. A further step
    towards a Tactile Internet requires significantly reduced latency [3]. The coordination
    and management of the IoE in different equipment is challenging, and the energy
    consumption efficiency could be much higher, which is the bottleneck of battery-operated
    IoT equipment [46]. To meet the growing demands for IoE devices, the current power
    supply system needs improvement in both system and unit-level energy storage and
    management [55]. Challenging environments include environments where the medium
    is inhomogeneous, or the signal propagation is subject to high scattering and
    multipath effects. In addition, peer-to-peer networking of small devices and smart
    sensors will attract even more attention, with increased integration of participator
    sensing within the Internet of Things [29]. The disaster area is a constantly
    changing environment, making it challenging to distribute supplies effectively.
    The lack of credibility of IoE devices’ data operations, trust evaluation, and
    accurate information about the required goods and potential bottlenecks in the
    distribution process can be detrimental [42,43]. The IoE is expected to reinvent
    the business and the automation wheel altogether. From operational models to business
    and manufacturing frameworks, everything is likely to change with the change in
    data available and the smart connectivity between people and machines for critical
    decision making [59]. For several IoT applications, a long range, low cost, and
    low power consumption are the main connectivity constraints to meet, making many
    network technologies impractical [60]. 4.2.4. Cloud, Fog, and Edge Sensory infrastructure
    deployment and sensing technique development across different domains may share
    common challenges and specificities, which should be considered when designing
    an architecture. That is, sensors or sensory infrastructures belonging to one
    domain should be transmitted to and used by another domain when needed [24,26].
    One main challenge is moving these data from the underlying IoT to the cloud;
    architecture must support resource sharing across other domains [26,28]. Malicious
    attack detection and mitigation are essential issues for the Internet of Everything
    (IoE) [29]. Massive devices will lead to explosive traffic growth, which in turn
    will cause a significant burden for data transmission and content delivery [25,33].
    The distributed environment used for the IoE’s generation of big data (BD) has
    the potential to lead to data storage and processing problems. Inherent problems
    are the reason for the inefficient working of the applications in the cloud environment
    [21,22,34]. Several challenges include the significant fluctuation of user devices’
    requests at the edge side, the lack of collaboration among edge nodes, service
    delays, resource exploitation in multidevice fog-cloud architecture, and problems
    associated with time-sensitive applications [19,30,31,32]. 4.2.5. Digital Marketing
    and Blockchain Ongoing challenges persist in maintaining security within this
    context, while also adapting to evolving legal privacy requirements, many of which
    demand further technical clarification [60]. In the age of the Internet of Everything
    (IoE), intricate patterns of connectivity emerge among individuals, processes,
    data, and devices. When evaluating the assessment of companies operating within
    the IoE industry, the predominant issue revolves around substantial uncertainty
    [51]. Critical concerns in the IoE domain include user consent and data security,
    encompassing mobile devices and diverse service providers [27,58]. In the IoE
    ecosystem, the majority of “things” consist of low-power, low-performance devices.
    Several device attributes, such as security, privacy, power consumption, and computational
    capabilities, pose challenges when integrating a blockchain environment into the
    IoE [35]. 4.2.6. Data Security and Deep Learning With the increasing ubiquity
    and sophistication of facial recognition technology, a potential security and
    privacy concern regarding the exposure of facial data linked to sensitive personal
    information within the expansive Internet of Everything application platform arises
    [40]. Across various domains, the Internet of Everything generates copious data,
    encompassing domains like healthcare systems, traffic management, smart city surveillance,
    educational platforms, social networks, and government entities, among others.
    Scouring through this extensive dataset and locating specific data or keys presents
    a formidable challenge [56]. To safeguard the integrity of data, multiple security
    protocols operate in tandem with confidential keys, aiming to furnish security
    services. The primary hurdle lies in securely exchanging or distributing keys
    between two parties operating over an inherently insecure network [39]. Most existing
    anomaly detection solutions within the Internet of Everything are characterized
    by time-consuming processes and exhibit suboptimal accuracy levels [61]. 4.2.7.
    Agriculture The combined forces of climate change and a swiftly growing global
    population have significantly burdened agriculture. This, in turn, has created
    a ripple effect on the Earth’s water resources, a critical component of sustainable
    development. The imperative to transition away from fossil fuels for powering
    irrigation systems, prompted by climate change, necessitates striking a delicate
    balance [57]. Addressing the challenges within this sector is pivotal in order
    to reinvigorate it and propel it towards enhanced progress [27]. 4.2.8. Education
    Teaching has evolved beyond the mere transmission of content knowledge; it now
    emphasizes the development of the practical “how, when, and why” aspects of applying
    this knowledge in real-world contexts [53]. The complexity in designing and implementing
    IoE-based educational systems arises from the need to create multiple intelligent
    agents that infuse intelligence into every facet of the teaching–learning experience.
    The absence of intelligence within IoE-related systems can impede the management
    of the vast volume of information generated by individuals and devices within
    these systems [52]. To establish a smart campus, a range of systems is essential,
    including those for detection, monitoring, and analysis [54]. Based on the discussion,
    Table 5 has outlined the common challenges encountered in IoE innovation across
    diverse domains. Meanwhile, Figure 4 showcases the specific number of problems
    that researchers have focused on within their respective domains in the IoE landscape.
    Figure 4. Number of IoE problems focused on. Table 5. Common problems in IoE innovation.
    4.3. RQ3: What Is the Contribution of the IoE to Each Innovation? Researchers
    from different fields have strived to harness the IoE’s potential for addressing
    domain-specific challenges. This subsection synthesizes their efforts, highlighting
    common themes in research contributions. 4.3.1. Healthcare An exceptionally spectacular
    usage of the IoE was while the whole world suffered with the COVID-19 pandemic.
    The healthcare domain has witnessed significant IoE-driven improvements, and one
    of them is aimed at tracking and containing pandemics such as COVID-19 [16]. Leveraging
    accurate tracking technologies, cloud computing, and interoperable devices, researchers
    have focused on screening and identifying infected individuals during their daily
    routines. Other research endeavors [17,18] have proposed a multilayer architecture
    and a cyber-physical platform framework that applied the Internet of Everything
    (IoE) and digital twin (DT) technologies, respectively, to promote information
    integration and provide smart services for different stakeholders in the healthcare
    area. 4.3.2. Smart Cities and Urban Environments Smart cities have been at the
    forefront of IoE research, with a focus on resource allocation and job offloading
    architectures using intelligence-enriched 6G architectures [19]. The concept of
    EdgeOSH [20] has been introduced, revolutionizing home automation through edge
    computing. Researchers [21,22] have adopted fog aims to enhance data processing
    through the blockchain–fog architecture network (BFAN) whereas others [22] have
    introduced fog nodes (FN) within fog computing (FC) to facilitate IoT applications
    in urban environments, satisfying mobility support, low latency, and geo-distribution
    requirements. As a part of smart cities, [8] specifically focused on smart homes
    through introducing convenience and energy efficiency to daily life within smart
    homes. 4.3.3. Cloud, Fog, and Edge Collaborations Mutual objectives shared by
    several researchers [24,25,26,27,28] were achieved through adopting cloud, fog,
    and edge environments in IoE. Researchers have proposed a cloud-based architecture
    for resource sharing (CARS) and the energy-efficient cloud-based Internet of Everything
    (EECloudIoE) [25]. These architectures introduce geographically distributed platforms
    connecting sensors and various IoE components, providing valuable services to
    end-users. Dhaya and Khantavel contribute to this landscape by focusing on algorithmic
    efficiency within multi-data-center environments, further optimizing resource
    management in cloud-based IoE platforms [28]. Moreover, the paper [26] underscores
    the importance of integration by outlining a research agenda for the integration
    of IoT and cloud computing across various application fields. The peer-to-peer
    central-registry-biased Internet of Everything protocol (P2PRioEP) [27] formalizes
    provisions for hybrid peer-to-peer IoT networks, promoting efficient collaboration
    and data exchange within IoE ecosystems. Xu et al. introduce adaptive mechanisms
    for dynamically collaborative computing power and task scheduling (ADCS) [32].
    This approach enhances the efficiency of edge computing by dynamically allocating
    resources and tasks, aligning to optimize edge computing in IoE scenarios. Yi
    et al. reimagine IoE as an end–edge–cloud collaborative system that promotes the
    development of digital twin-based methods within edge computing [33]. Jain et
    al. highlight the importance of cyber twins in network frameworks by introducing
    a metaheuristic with blockchain-based resource allocation techniques [34]. Sachdev
    navigates key security and privacy issues related to edge AI in IoT/IoE digital
    marketing environments [56]. Bera et al. focus on enhancing security by introducing
    an artificial-intelligence-based blockchain-envisioned access control framework.
    This framework addresses the critical need for robust security measures within
    fog and cloud environments [29]. Velasquez et al. identify key challenges in developing
    a fog orchestrator to support IoE, particularly its impact on fog service orchestration
    tasks [30]. This research objective aims to streamline the orchestration of services
    within fog environments, ensuring efficient and reliable IoE operations. The objective
    of [31] is to introduce a conceptual model for mixed reality (MR) applications
    within fog and cloud environments. By enhancing user experiences through IoT/IoE
    models, this research contributes to the evolving landscape of mixed reality applications,
    which is increasingly relevant in the context of IoE. 4.3.4. Advancements in AI
    The authors of [59,61] both leveraged artificial intelligence in the IoE to enhance
    anomaly detection. The authors of [61] propose a novel deep learning framework
    that combines decomposition methods, deep neural networks, and evolutionary computation.
    Furthermore, innovations in force and tactile sensors, along with AR sensors,
    drive advancements in industrial robotics and manufacturing [59]. 4.3.5. Security
    in the IoE Security remains a paramount concern in IoE research. Innovations include
    novel blockchains such as “PUFChain” [35], which is designed for resource-constrained
    IoT environments. Various authentication schemes have been proposed for 6G IoE-based
    vehicular communication environments [36], emphasizing privacy preservation and
    security. Security and privacy challenges posed by personal smart devices used
    within enterprise settings were explored by [41]. Zhan et al., in their study,
    introduced the Internet of Everything smart logistic network (IoE-SLN) to improve
    smart logistics [37]. Various transportation system applications were integrated
    to enhance logistics parameters, supported by mathematical analysis. IoE research
    on distributed systems focuses on disaster management [42]. Researchers propose
    the integration of blockchain, the IoT, and the IoE to streamline disaster responses,
    reduce response times, and ensure the secure distribution of goods. Furthermore,
    content-based intelligent trust evaluation (CITE) schemes have been introduced
    for collecting trustworthy data in large-scale sensor-cloud systems [43]. 4.3.6.
    Optimization of Network Technologies with IoE The virtualization of networking
    services is explored, with a focus on customized and on-the-fly interconnectivity
    [29]. Other research emphasizes connecting terrestrial IoT network segments to
    satellite backends via satellite broadband [62]. Further, Iannacci aims to build
    an inclusive vision of the IoT, IoE, Tactile Internet, and 5G by leveraging MEMS
    technology, with a focus on energy harvesters (EH-MEMS) and radio frequency passives
    (RF-MEMS) [3]. A data manipulation method proposed by [46] aims to reduce energy
    consumption and network traffic in IoT networks, with an enhancement from software-defined
    networking (SDN). 4.3.7. Enhancing Business Strategies via the IoE IoE research
    extends to the realm of business strategies. Researchers explore how the IoE impacts
    business models and value creation [48]. Additionally, studies evaluate the implications
    of the IoE on marketing analytics [49], new product development, and management
    [50]. Approaches for determining objective and subjective weights in decision
    making are also introduced [51]. Demirkan et al. explored the impact of emerging
    big data and smart analytics on transforming connected products into “smart service”
    businesses [47]. This described a paradigm shift in value chains towards continuous
    data flow through complex business systems. 4.3.8. The IoE in Education Looking
    at an education perspective, the IoE has a transformative potential in improvising
    the field of learning. Ref. [52] focuses on developing system of systems (SoS)
    architectures to support educational contexts, fostering novel educational applications
    and dynamic interactions. Secure and agile architectures for IoE-based educational
    models and learning analytics systems (LAS) are proposed [53]. Furthermore, campus
    security management and notification systems are designed to enhance security
    and monitoring [54]. Researchers have similar objectives in terms of providing
    advancement in education services in the IoE environment. 4.3.9. IoE Research
    for Smart Systems The authors of [44,55] are both engaged in the area of smart
    systems in IoE research. Specifically, their research underlines the significance
    of efficient power supply systems with a high-output performance and extended
    lifetime, placing a strong emphasis on self-power capability in order to guarantee
    the long-term viability and maintenance-free operation of IoE networks. Additionally,
    these researchers expand their focus to include the design of architectural models
    for managing tourism information effectively, introducing the concept of smart
    tourism [44]. Fan et al., in their paper, describe that their objectives revolve
    around enhancing power supply systems and architectural models for the IoE while
    incorporating tourism management strategies [55]. Next, in their research, Pedro
    et al. introduced a cognition module for gathering information from smart systems
    to create knowledge for intelligent services [58]. The goal was to develop a generic
    framework for various smart systems, enabling horizontal integration. Similarly,
    research by Vaya and Hadpawat aimed to provide efficient keys or data-searching
    mechanisms for clients to explore big data within a database [56]. The respective
    studies share common objectives in the realm of IoE in terms of contributing to
    various smart system enhancements. Adenugba et al. demonstrated how smart irrigation
    systems powered by renewable energy sources (RES) could substantially improve
    crop yield and agricultural profitability [57]. They emphasized control and monitoring
    using sensors and environmental data from the Internet of Everything (IoE). Kumar
    et al. aimed to attain a standard quality in crops, focusing on duration, measure,
    hygiene, and blooming stem. They proposed an advanced prototype to enable continuous
    tracking and informed decision making for farmers, using data mining principles
    [27]. Researchers have proposed smart operating systems to streamline IoE system
    management for practitioners [23]. Further, the emerging areas in Internet of
    Everything (IoE) research were examined, revealing several key domains where researchers
    have made notable contributions. Figure 5 illustrates this and includes smart
    cities (23.08%), marked by urban applications and resource allocation; smart systems
    (30.77%), focusing on efficient power supply and architectural models; cloud/fog/edge
    (15.38%), involving collaborations between the IoE and cloud technologies; disaster
    management (15.38%), integrating blockchain and the IoT for logistics and disaster
    response; network technologies (7.69%), emphasizing networking virtualization;
    and education (7.69%), aiming to enhance educational systems. Smart systems garnered
    the most attention from researchers, with smart cities being the second most explored
    domain. This analysis showcases the multifaceted nature of IoE research, spanning
    various domains and applications. Figure 5. Contributions in Emerging Areas. The
    research contributions summarized in this article emphasize the IoE’s versatility
    and transformative potential. They highlight the diverse ways in which IoE technologies
    can address domain-specific challenges and inspire interdisciplinary collaboration.
    As the IoE continues to evolve, researchers from various domains are poised to
    contribute to its growth and maturity [63]. 4.4. RQ4: What Are the Most Frequently
    Used Evaluation Metrics? Evaluation metrics play a vital role in gauging the quality
    of the IoE. Various evaluation metrics are at our disposal for assessing IoE innovation,
    as illustrated in Figure 6. The lines and circles in Figure 6. represent the evaluation
    metrics and the total number of primary studies associated with the enhancement
    of each specific performance metrics. The employment of multiple evaluation metrics
    is of paramount importance, since an innovation may excel under one metric but
    underperform when assessed with another [64]. Therefore, selecting the right evaluation
    metrics is crucial for ensuring the proper and optimal development of IoE innovation.
    Quantitative evaluation, a methodology that relies on numerical indices derived
    primarily from objective data collection methods, systematic and controlled observation,
    and a well-defined research design, comes into play. Specifically, it is imperative
    to specify the evaluation metric. Within the realm of IoE innovations, the researchers
    in this study primarily considered accuracy, energy consumption, power consumption,
    completion time, and cost as the most significant dimensions for evaluation, as
    illustrated in Table 6. Figure 6. Visualization of performance metrics used in
    IoE. Table 6. Performance metrics in primary studies. 4.5. RQ5: What Are the Limitations
    in Each IoE Innovation? In the realm of Internet of Everything (IoE) research,
    several research works across various domains have made significant contributions,
    but they are not without their limitations. These limitations, when analyzed collectively,
    provide valuable insights into the challenges faced by researchers in harnessing
    the potential of the IoE. The limitations identified in most of the research works
    are summarized below. 4.5.1. Storage Challenges Several research works, such as
    [16], highlight the challenge of high storage usage when collecting data in IoE
    applications. The sheer volume of data generated by IoE devices can lead to storage
    constraints, impacting the scalability and long-term feasibility of solutions.
    Limited storage capacity, as observed in [17], can result in extended data transfer
    times to the cloud. This limitation hampers the timely availability of critical
    information, potentially impacting decision making processes. 4.5.2. Computation
    Overhead Computation-intensive tasks, driven by multiple scheduling algorithms,
    as can be seen in [19,33], can lead to a high computational overhead. This limit
    affects the efficiency and real-time performance of IoE systems, especially in
    resource-constrained environments. In IoE systems, especially those involving
    financial transactions, drawbacks related to latency, as identified in [42], can
    impact the overall user experience. Transaction processing delays may deter users
    from adopting IoE solutions. 4.5.3. Power Supply Assessment The research work
    [55] emphasizes the need for a more comprehensive assessment of power supply systems
    in IoE. Neglecting to evaluate the continuity and quality of power supplies can
    lead to disruptions in IoE applications, particularly in scenarios where uninterrupted
    power is crucial. 4.5.4. Lack of Assessment Some research, including [20], has
    limitations in terms of assessment. Failure to evaluate factors such as user experience,
    cost, and delay can result in incomplete insights into the overall performance
    and feasibility of IoE solutions. 4.5.5. Data Size Effect The impact of the data
    size on performance [34], as mentioned in [37], can be a significant disadvantage.
    The researcher overlooked and underestimated the need for efficient data handling
    and processing techniques in IoE applications. 4.5.6. Cost-Intensive Technologies
    High costs associated with infrastructure, such as core cloud connectivity via
    high-speed optical links pose a limitation in terms of the scalability and affordability
    of IoE deployments, as in [34]. Nevertheless, Ref. [29] used blockchain technology,
    known for its cost-intensive nature. Hence, implementing such technologies, as
    [29,34] do, can lead to high expenses, making scalability and cost-effectiveness
    challenging. 4.5.7. Technical Feasibility The research work [48] focuses on business
    model management but may not be directly applicable at the technical infrastructure
    level. This constraint highlights the need for aligning business models with technical
    feasibility. 4.5.8. Response Time Oversights Response time oversights, as noted
    in [19], can be resulted from extensive routing packets in networks. Equally,
    Ref. [27] focused on passing messages safely; however, the response time was not
    measured as well as in [39]. Failure to consider response times can impact the
    usability and efficiency of IoE environments. 4.5.9. Data Privacy, Accuracy, and
    Integration Ensuring data accuracy and fostering inter-agency collaboration are
    essential for data-driven decision making in the IoE. Research works in [22] overlooked
    the limitations associated with data accuracy and integration between different
    government agencies. Elsewhere, accuracy discussions, as omitted in [53], are
    critical, especially in applications where precision is paramount. Data privacy
    in [31] needs to be addressed comprehensively to ensure the trustworthiness of
    IoE systems. This research is closely linked to security concerns, as discussed
    in [65], where data integrity emerges as a prominent issue in various cloud computing
    scenarios, necessitating the implementation of robust security strategies to tackle
    this challenge. 4.5.10. Extensive Network Network elements, such as the case discussed
    in [39], disregarded the heavy utilization of the network, while the research
    work in [46] describes the omission of the packet loss adversely affected the
    network’s heavy usage in their research contributions. 4.5.11. Adaptability Dhaya
    and Kanthavel focused on the requirement for adaptive adaptability to a variety
    of platforms and contexts, neglecting the limitations of pre-defined approaches
    in multi-data-center systems [28]. 4.5.12. Limited Data Ingestion Conversely,
    studies conducted by [27,43,57] exhibit limitations related to restricted data
    acquisition, primarily centered on indoor data obtained from sensing devices.
    Broadening the scope of data sources has the potential to enrich the range of
    applications within the Internet of Everything (IoE) [66]. Below is a summary
    in Table 7, and Figure 7 presents limitations of individual research works. The
    lines and circles in Figure 7 illustrate the limitations of the IoE, along with
    the total number of primary studies that have identified similar research gaps
    in this area. Figure 7. Limitation in IoE Innovations. Table 7. Limitation of
    IoE innovation based on the primary studies. 4.6. RQ6: What Are the Trends and
    Directions of the IoE in Each Innovation? In the dynamic domain of Internet of
    Everything (IoE) research, numerous researchers have made noteworthy contributions,
    each envisioning specific future avenues for advancing the field. These future
    research trends and directions, when clustered together based on common themes,
    provide a comprehensive roadmap for the IoE’s continued growth and evolution.
    Scalability and Adaptability: Researchers, such as [16], have laid the foundation
    for transformative IoE applications. Future endeavors involve exploring the scalability
    and adaptability of these applications to accommodate evolving digital landscapes
    and ensure their sustained impact. Component Performance: A common thread among
    papers is the focus on component-level performance [19]. Researchers plan to design,
    evaluate, and optimize individual components within IoE systems, ensuring a deeper
    understanding of their roles and contributions to system efficiency. Validation
    and Testing: The study described in [17] emphasizes the need for rigorous validation
    and testing. Researchers intend to evaluate IoE systems using practical toolkits
    and real cloud environments, providing empirical insights and validating the practical
    applicability of their findings. Integration and Efficiency: Several papers, including
    [55], emphasize the integration of various systems within IoE networks. Future
    research aims to enhance the efficiency, reliability, and sustainability of these
    integrated systems, potentially expanding their applications. Real-Time Data Analytics:
    The challenge of real-time data analysis, acknowledged by researchers in [21],
    remains a focal point for future work. Innovations in data processing and analytics
    are essential to keep pace with the ever-expanding data volumes. 5G and IoT Management:
    With the emergence of 5G, researchers, such as in [22], foresee extending their
    work to manage the influx of IoT devices and applications, including those requiring
    a low latency and high bandwidth. Governance and Legal Considerations: Studies
    such as [42] underscore the importance of governance and legal frameworks in the
    IoE, particularly in distributed ledger technology (DLT)-based systems. Future
    research aims include addressing governance aspects and ensuring robustness. Microservices
    and Resource Allocation: Xu et al. outline plans to introduce microservices and
    optimize computational power scheduling. This approach aligns with efforts to
    enhance resource allocation methods within the IoE [32]. Energy-Efficient Designs:
    Research into ultralow power designs, as suggested by [35], will continue, focusing
    on achieving energy-efficient IoE systems and exploring alternative consensus
    algorithms. Business Intelligence: Several papers, such as [47], highlight the
    significance of business intelligence applications. Future work may delve into
    more comprehensive analytics, harnessing data-driven insights for strategic decision
    making. Packet Routing: Future research, as mentioned in [25], seeks to design
    context-based packet routing architectures. These architectures aim to optimize
    throughput and response times, enhancing IoE communication efficiency. Renewable
    Energy Integration: Researchers, exemplified by [57], envision expanding IoE systems
    to incorporate diverse renewable energy sources and hybrid grids. These expansions
    can enhance sustainability and grid independence, especially in remote regions.
    Network Integration: Researchers, such as in [45], emphasize the seamless integration
    of multiple networks. Future work explores advanced methods and mechanisms to
    achieve contextual and geographical integration, enriching IoE services. Interdisciplinary
    Studies: Researchers in the study [48] call for interdisciplinary research involving
    economics, computer science, psychology, law, and ethics. Collaborative efforts
    will provide holistic insights into the IoE’s multifaceted aspects. Privacy Protection:
    Addressing privacy challenges in the IoE, as recognized by [40], remains crucial.
    Future research endeavors should focus on devising effective mechanisms and privacy
    management theories to safeguard user data. Diverse Applications: The versatility
    of IoE solutions, as seen in [53,54], prompts future work exploring applications
    across various domains, including healthcare and education. Gao et al. proposed
    a New Bee for mobile devices to find coordination from a Wi-Fi node to assist
    ZigBee nodes for neighbor discovery [67]. Semantic Interoperability: Researchers,
    exemplified by [7], anticipate harnessing advanced technologies like AI and machine
    learning to enhance semantic interoperability solutions. These technologies can
    improve data analysis and collection. Flexibility for Diverse Scenarios: Future
    research, as indicated by [33], aims to enhance the flexibility of proposed methods
    to adapt to different network scenarios, ensuring versatility in IoE deployments.
    Secure Communication: Ensuring secure communication in the IoE, as highlighted
    in [36], remains paramount. To improve IoE services, future studies will put a
    priority on creating strong security measures. Cost and Consumption Studies: The
    research conducted in [34] emphasizes the need for comprehensive studies on power
    consumption and costs. These studies will contribute valuable insights into the
    cost-effectiveness of IoE solutions. Common Challenges: Addressing common challenges
    in IoE services was identified as a priority for future enhancement in [38]. Strategies
    to overcome these challenges will maximize IoE productivity and utility. Edge
    AI Implementation: The implementation of edge AI, as discussed in [60], poses
    a promising direction for future research. Scaling up edge AI applications in
    digital marketing settings will be a focus. In the similar AI advancement Hameed
    et al. devised an Internet of Things Auto (IOTA)-based mobile crowd-sensing technology
    utilizing machine learning to identify and prevent mobile users from participating
    in deceptive sensing activities [68]. Data Security and Privacy: There should
    be more research on data security, information privacy, and personal information,
    according to a few papers, including [49]. The IoE’s dependability will be improved
    through thorough security measures in future studies. IoE Integration: Future
    research will explore IoE integration with edge and fog computing environments,
    as envisioned by [26]. This exploration seeks to optimize the synergy between
    these paradigms. Efficiency Enhancement: Researchers, exemplified by [28], aim
    to leverage AI techniques to reduce energy consumption in multi-data-center cloud
    environments, aligning with sustainability goals. Performance Metrics: Researchers,
    as indicated by [46], propose additional performance metric evaluations. These
    evaluations will offer a comprehensive understanding of IoE systems’ performance.
    Data Acquisition Strategies: Zheng et al. highlight the recruitment of a broader
    range of data collectors for enriched data acquisition strategies in future work.
    Expanding data sources can enhance the breadth and depth of IoE applications [43].
    The future directions for Internet of Everything (IoE) research encompass a broad
    range of domains and applications. Researchers are focusing on scalability, component
    performance, validation and testing, integration and efficiency, real-time data
    analytics, 5G and IoT management, governance and legal considerations, microservices
    and resource allocation, energy-efficient designs, business intelligence, packet
    routing, renewable energy integration, network integration, interdisciplinary
    studies, privacy protection, diverse applications, semantic interoperability,
    flexibility for diverse scenarios, secure communication, cost and consumption
    studies, addressing common challenges, edge AI implementation, data security,
    IoE integration, efficiency enhancement, performance metrics, and data acquisition
    strategies. These diverse avenues collectively contribute to the development of
    a more interconnected and intelligent future in the realm of the IoE, addressing
    challenges and enhancing system efficiency across various sectors and applications.
    Table 8 presents the consolidated primary studies with similar areas of future
    work in the context of Internet of Everything (IoE) research. Table 8. Future
    directions for IoE innovations. 4.7. RQ7: What Are the Demographics of the Primary
    Studies? To address this research question (RQ), an investigation into three key
    facets of the primary studies was conducted. These aspects encompassed the publication
    year, the type of publication, and the primary source that has disseminated the
    highest number of pertinent studies (including journals and conference proceedings).
    4.7.1. Publication Year Between the years 2014 and 2023, a total of 53 publications
    were culled from the literature, adhering to the methodology described in Section
    3 This progression is depicted in Figure 8, illustrating the evolution of the
    literature within the IoE domain. The research activity within this domain is
    notably dynamic and vigorous. Figure 8. Number of publications per year. During
    the period from 2014 to 2019, the research activity exhibited a relatively linear
    trend, with a limited number of publications. However, in 2023, there was a substantial
    upsurge in research activity centered on the IoE, resulting in 10 publications.
    This heightened interest can be attributed to the growing demand for the IoE.
    In 2022, a minor drop in publications was observable, totaling six papers. In
    general, despite the fluctuations in the annual number of publications concerning
    IoE research, the overall research activity exhibits a consistent upward trajectory,
    indicating sustained growth, especially over the past decade. 4.7.2. Publication
    Types In the scope of this mapping study, the authors included content from a
    wide spectrum of sources, which included 30 distinct journals, 14 conference proceedings,
    1 magazine, 1 symposium proceedings, and 1 book chapter. As illustrated in Figure
    9, the majority of primary studies were derived from journal articles, totaling
    35, followed by conference proceedings (14), magazines (2), symposium proceedings
    (1), and, finally, book chapters (1). Figure 9. Publication channel. 4.7.3. Publications
    with Relevant Studies Concerning the publication venues in which studies on the
    IoE were published, Table 9 depicts the ten most active journals. The IEEE Internet
    of Things Journal was the top contributor among all the journals, with three publications.
    Meanwhile, the Internet of Things, Journal of Ambient Intelligence and Humanized
    Computing, Journal of Parallel and Distributed Computing, and the IEEE Consumer
    Electronics Magazine each provided two articles. The other selected studies published
    one article in the following journals: Future Internet, Journal of Innovation
    & Knowledge, IEEE Sensors Journal, IEEE Transactions on Industrial Informatics,
    and Journal of Internet Services and Applications. Table 9. Top 10 represented
    publications. 5. Conclusions In conclusion, this study explores various facets
    of the Internet of Everything (IoE) technology and its innovations. The study
    began with a thorough review of related works in the IoE domain, highlighting
    key research areas and emerging trends. By defining clear research objectives,
    the study aimed to provide a comprehensive understanding of the IoE’s vast landscape,
    emphasizing similarities and commonalities across diverse applications and domains.
    The research has uncovered numerous advantages in harnessing IoE technology, particularly
    in healthcare, smart cities, cloud, fog, and edge collaborations, as well as advancements
    in AI-related domains, security, network technologies optimization, business strategies,
    education, and smart systems. These advantages emphasize IoE’s transformative
    potential in enhancing various aspects of our lives, from healthcare management
    to urban living and business strategies. However, it is essential to acknowledge
    the limitations and challenges associated with IoE technology, including data
    security and privacy concerns, resource optimization, and scalability issues.
    Future works in the IoE domain should address these challenges, focusing on mitigating
    limitations and fostering innovation to unlock the full potential of IoE applications
    across diverse domains. Author Contributions Introduction and Conclusion, N.N.M.;
    Methodology, N.A.M.Y., E.A.S. and F.M.A.; formal analysis, N.N.M.; Resources,
    N.A.M.Y. and F.M.A.; Writing—Original Draft Preparation, F.M.A. and N.A.M.Y.;
    Writing—Review and Editing, M.M.D., E.A.S. and N.N.M.; Results and Discussions,
    F.M.A. and N.A.M.Y.; supervision, N.N.M. and M.M.D. All authors have read and
    agreed to the published version of the manuscript. Funding This research was supported
    by the Ministry of Higher Education (MOHE) for funding under the Fundamental Research
    Grant Scheme (FRGS) research grant under FRGS grant FRGS/1/2022/ICT11/UKM/02/2.
    Data Availability Statement The data for this review paper was obtained from online
    libraries, in compliance with the data privacy and ethical considerations. Acknowledgments
    The Ministry of Higher Education (MOHE) and FTSM, University Kebangsaan Malaysia
    (UKM) supported this research work. The authors express their utmost appreciation
    and thanks for providing sufficient facilities throughout this research. Conflicts
    of Interest The authors declare no conflict of interest. Appendix A This section
    provides an overview of the research involving innovation in the IoE by briefly
    summarizing each study. PS1: Sharma and Sigh provided progressed fitness services
    and enabled advanced clinical selections from a few different angles during the
    pandemic [16]. PS2: Jamil et al. employed intelligent task-offloading techniques
    with dynamic resource allocation [19]. PS3: Sasikumar and Vijayakumar presented
    a concept known as the fog-cloud, which is a healthcare monitoring model that
    uses the framework of the IoT to focus on the various challenges of healthcare
    [17]. PS4: Fan et al. argued that the IoE will be critically dependent on progress
    in the development of efficient power supply systems [55]. PS5: Cao et al. proposed
    EdgeOSH, which can be used as a guide for prototype practices on smart home systems
    [20]. PS6: Sherif et al. presented a four-layer architecture for CARS by describing
    the functionalities, responsibilities, and interlayer interactions of each layer
    [24]. PS7: Bera et al. proposed a blockchain-based framework. As a result, the
    AI/ML algorithms can work as per their expectation to make correct predictions
    with the authentic datasets stored in the blockchain [29]. PS8: Singh et al. proposed
    a BFAN architecture that includes an energy-efficient platform for a thing-aware
    wired/wireless TCP/IP connection, intra-primary communication in fog computing,
    and security with blockchain [21]. PS9: Naranjo et al. described that FOCAN can
    be classified as a computation- and communication-efficient structure and scalable
    routing algorithm that minimizes the average power consumption of FNs [22]. PS10:
    Javadpour et al. showed a significant enhancement in the performance, monitoring,
    and complexity management of the disaster aid network [42]. PS11: Chen et al.
    proposed a framework that separates the cloud and edge sides, which makes it possible
    to apply our algorithm in open-source platforms [32]. PS12: Manogaran and Rawal.
    introduced a resource allocation method in the fog-cloud architecture to minimize
    service delays and resource exploitation [63]. PS13: Mohanty et al. presented
    a new consensus algorithm, PoP, and a novel blockchain architecture, PUFchain
    [35]. PS14: Demirkan et al. investigated how a customer can outsource the management
    of their devices/networks by taking advantage of cloud computing and virtualization
    and demanding a guaranteed level of service agreement that includes automatic
    diagnostics, optimal performance, and high availability [47]. PS15: Swarna et
    al. developed a methodology for integrating the Internet of Everything (IoE) with
    the cloud to create the efficiently named energy-efficient cloud-based Internet
    of Everything (EECloudIoE) using wind-driven optimization and Firefly bio-inspired
    algorithms [25]. PS16: Adenugba et al. developed a system that demonstrated the
    viability of the IoE-based approach for solar-powered smart irrigation systems
    with the use of artificial intelligence [57] PS17: Younis aimed to create a smart
    living environment where communication and services are seamlessly adapted to
    the context [45]. PS18: Djenouri et al. proposed a combination of decomposition,
    deep neural networks, and evolutionary computation to find anomalies in the dataset
    [61]. PS19: Jinan and Sabah proposed new forms of force and tactile sensors, along
    with AR sensors, that provide feedback based on the sense of sight as well as
    the latest innovations in industrial robotics and manufacturing [59]. PS20: Maria
    and Nicola describe how to enable the IoE with LPWAN (LoRaWAN in particular) and
    a GEO-based satellite segment [62]. PS21: Shen et al. introduced the real-time
    location and working status of humans, together with gateway layout and operating
    status, which are twined and visualized in a tracking map [18]. PS22: Antonios
    et al. provided research insights, including the introduction of a new evaluation
    framework that assesses semantic interoperability solutions at four maturity levels
    [7]. PS23: Yi et al. presented a method that shows stable and good performance
    and can adapt to large-scale networks easily [33]. PS24: Kohli et al. gave an
    overview of the advancement of 5G technology, which gave rise to numerous security
    and privacy threats; it is expected that all such security and privacy threats
    will be resolved with the introduction of 6G technology [36]. PS25: Dong and Hu
    argued that tracking and tracing will be significantly faster, and that stock-taking
    accuracy in warehouses with connected pallets will be much greater [37]. PS26:
    Jain et al. provided resource allocation techniques to monitor, manage, and share
    resources effectively [34]. PS27: Sajid et al. described the established security
    concerns around the IoE and provided a possible way out that can be utilized for
    advanced analysis/discussions by analysts and professionals [38]. PS28: Langley
    et al. suggested taxonomy and the theorizing of propositions to help researchers
    conduct case studies to more deeply examine the nature of smartness and validate
    its different levels, as exemplified in our taxonomy [48]. PS29: Narjes et al.
    proposed the novel nature-inspired SRS algorithm to evaluate its performance in
    solving a particular CCSC problem [11]. PS30: Sachdev discussed key security and
    privacy issues raised for edge AI in the IoT/IoE digital marketing context [60].
    PS31: Kumar et al. developed an IoE technology that accomplished and recognized
    agricultural habitat data gatherings like soil moisture, humidity, light, and
    temperature [27]. PS32: Petrescu et al. reported the challenges and benefits of
    using the IoE in marketing policies, practice, and research as well as the opportunities
    provided for targeted services [49]. PS33: Ashraf et al. proposed a key exchange
    lightweight algorithm to secure users from attacks in the IoE [39]. PS34: Silva
    and Braga developed the SoS, which can be useful to increase the efficiency of
    the teaching–learning process by automating in-classroom daily tasks [52]. PS35:
    Pedro et al. propose a framework that is generic enough for any smart system in
    the domain of IoEs [58]. PS36: Wang et al. propose a risk sources identification
    process that can effectively help identify various risks of physiological data
    breaches, providing some reference for relevant parties to conduct privacy and
    data protection [40]. PS37: Majeed et al. presented an analytical model which
    would help organizations recognize the threat at hand and begin to construct systems
    and networks capable of being resilient to future IoE environments, where any
    “thing” may be an insider [64]. PS38: Golovatchev et al. presented the first findings
    that guide practitioners through the implementation of the industrial IoE and
    its impact on new product development and management [50]. PS39: Roy and Chowdhury
    reported on the integration of the IoT, and the cloud is very essential for providing
    computational and storage infrastructure and supporting the development of services
    and applications beyond the limits of the conventional IoT [26]. PS40: Kumar et
    al. proposed a method for the agroecological variables of humidity, light, and
    temperature, which instantly determine the standard enhancement of crops [27].
    PS41: Velasquez et al. presented fog service orchestrator architectures and their
    relationships with the challenges of the fog. PS42: Peng et al. developed the
    HFS-CoCoSo approach for disposing of the problem of IoE companies’ evaluation
    [51]. PS43: Elawady et al. introduced a general domain model capable of dealing
    with the design of various applications based on the IoT, MR, and fog computing
    technologies and incorporating the benefits of each one [31]. PS44: Ahad et al.
    described that deep learning techniques are well suited for getting a student-centric
    learning ecosystem, wherein a student is given a customized learning strategy
    or approach as per their need and desire to achieve better understanding and longer
    retention [53]. PS45: Tsung and Wen recommend also paying more attention to anti-fraud
    operations involving human factors [54]. PS46: Ganesh and Verma proposed a system
    that can identify the best keys available in the entire body of data, which will
    act as connectivity points [56]. PS47: Heman and Kusum focused on the realization
    of connecting the various devices over the Internet in an intelligent way that
    envisions the IoE [41]. PS48: Cao et al. suggested that in general, whether it
    is in a smart home or a connected vehicle, the user experience is very critical
    to the success of IoE applications [23]. PS49: Bulti et al. enhance business-oriented
    intelligent digital marketing systems [44]. PS50: Ma proposed that by adding an
    intelligent gateway module into the smart home system, users can view the indoor
    environment information in real time through the Internet, and in case of an emergency,
    quickly receive alarm information to protect the safety of their property to the
    greatest extent [8]. PS51: Iannacci built the unique and crosslinked frame of
    reference around the IoT, IoE, and Tactile Internet, and correlated it with 5G
    [3]. PS52: Dhaya and Kanthavel showed that the algorithmic performance is improved
    as the number of variables increases [28]. PS53: Salehi et al. proposed the compression
    method in IoT networks to decrease the volume of data exchange across the network
    in order to reduce energy consumption in IoT devices [46]. PS54: Zheng et al.
    ensure the effectiveness of network data collection and the quality of applications
    constructed based on these data. This paper proposes an effective CITE security
    scheme for trust evaluation and MEVs’ path planning [43]. References Azamuddin,
    W.M.H.; Aman, A.H.M.; Sallehuddin, H.; Abualsaud, K.; Mansor, N. The Emerging
    of Named Data Networking: Architecture, Application, and Technology. IEEE Access
    2023, 11, 23620–23633. [Google Scholar] [CrossRef] Kazmi, S.H.A.; Qamar, F.; Hassan,
    R.; Nisar, K. Improved QoS in Internet of Things (IoTs) through Short Messages
    Encryption Scheme for Wireless Sensor Communication. In Proceedings of the 2022
    International Symposium on Intelligent Signal Processing and Communication Systems
    (ISPACS), Penang, Malaysia, 22–25 November; pp. 1–6. Iannacci, J. Internet of
    things (IoT); internet of everything (IoE); tactile internet; 5G—A (not so evanescent)
    unifying vision empowered by EH-MEMS (energy harvesting MEMS) and RF-MEMS (radio
    frequency MEMS). Sens. Actuators A Phys. 2018, 272, 187–198. [Google Scholar]
    [CrossRef] Vaya, D.; Hadpawat, T. Internet of Everything (IoE): A New Era of IoT.
    In Lecture Notes in Electrical Engineering; Springer: Berlin/Heidelberg, Germany,
    2020; pp. 1–6. [Google Scholar] Alqasemi, F.; Al-Hagree, S.; Shaddad, R.Q.; Zahary,
    A.T. An IEEE Xplore Database Literature Review Concerning Internet of Everything
    During 2020–2021. In Proceedings of the 2021 International Conference on Intelligent
    Technology, System and Service for Internet of Everything (ITSS-IoE), Sana’a,
    Yemen, 1–2 November 2021; pp. 1–8. [Google Scholar] Mullick, A.; Rahman, A.H.A.;
    Dahnil, D.P.; Noraini, N.M.R. Enhancing data transmission in duct air quality
    monitoring using mesh network strategy for LoRa. PeerJ Comput. Sci. 2022, 8, e939.
    [Google Scholar] [CrossRef] [PubMed] Pliatsios, A.; Kotis, K.; Goumopoulos, C.
    A systematic review on semantic interoperability in the IoE-enabled smart cities.
    Internet Things 2023, 22, 100754. [Google Scholar] [CrossRef] Ma, Z. Development
    Status of Smart Home System in the Era of Internet of Everything. J. Phys. Conf.
    Ser. 2021, 1881, 032079. [Google Scholar] [CrossRef] Cristian, S.; Georgian, A.F.;
    Gabriel, P.; Denisa, C.L.; Nicoleta, A.; Constantin, P.D. IoE simulation with
    Cisco Packet Tracer. In Proceedings of the 2023 15th International Conference
    on Electronics, Computers and Artificial Intelligence (ECAI), Iasi, Romania, 27–28
    June 2024; pp. 1–6. [Google Scholar] Malathy, S.; Porkodi, V.; Sampathkumar, A.;
    Hindia, M.H.D.N.; Dimyati, K.; Tilwari, V.; Qamar, F.; Amiri, I.S. An optimal
    network coding based backpressure routing approach for massive IoT network. Wirel.
    Netw. 2020, 26, 3657–3674. [Google Scholar] [CrossRef] Naseri, N.K.; Sundararajan,
    E.; Ayob, M. Smart Root Search (SRS) in Solving Service Time–Cost Optimization
    in Cloud Computing Service Composition (STCOCCSC) Problems. Symmetry 2023, 15,
    272. [Google Scholar] [CrossRef] Yang, C.; Lan, S.; Zhao, Z.; Zhang, M.; Wu, W.;
    Huang, G.Q. Edge-Cloud Blockchain and IoE-Enabled Quality Management Platform
    for Perishable Supply Chain Logistics. IEEE Internet Things J. 2022, 10, 3264–3275.
    [Google Scholar] [CrossRef] Petersen, K.; Feldt, R.; Mujtaba, S.; Mattsson, M.
    Systematic Mapping Studies in Software Engineering. In Proceedings of the International
    Conference on Evaluation and Assessment in Software Engineering (EASE), Bari,
    Italy, 26–27 June 2008; pp. 1–10. [Google Scholar] Sofian, H.; Yunus, N.A.M.;
    Ahmad, R. Systematic Mapping: Artificial Intelligence Techniques in Software Engineering.
    IEEE Access 2022, 10, 51021–51040. [Google Scholar] [CrossRef] Kitchenham, B.;
    Brereton, O.P.; Budgen, D.; Turner, M.; Bailey, J.; Linkman, S. Systematic literature
    reviews in software engineering—A systematic literature review. Inf. Softw. Technol.
    2009, 51, 7–15. [Google Scholar] [CrossRef] Sharma, S.; Singh, A.K. Current COVID-19
    Analysis and Future Pandemics Prediction using Internet of Everything (IoE). In
    Proceedings of the 2021 First International Conference on Advances in Computing
    and Future Communication Technologies (ICACFCT), Meerut, India, 16–17 December
    2021; pp. 231–236. [Google Scholar] Aiswarya, S.; Ramesh, K.; Prabha, B.; Sasikumar,
    S.; Vijayakumar, K. A time optimization model for the Internet of Things-based
    Healthcare system using Fog computing. In Proceedings of the 2021 International
    Conference on Innovative Computing, Intelligent Communication and Smart Electrical
    Systems (ICSES), Chennai, India, 24–25 September 2021; pp. 1–6. [Google Scholar]
    Wu, W.; Shen, L.; Zhao, Z.; Harish, A.R.; Zhong, R.Y.; Huang, G.Q. Internet of
    Everything and Digital Twin enabled Service Platform for Cold Chain Logistics.
    J. Ind. Inf. Integr. 2023, 33, 100443. [Google Scholar] [CrossRef] [PubMed] Jamil,
    S.U.; Khan, M.A.; Rehman, S.U. Intelligent Task Off-Loading and Resource Allocation
    for 6G Smart City Environment. In Proceedings of the 2020 IEEE 45th Conference
    on Local Computer Networks (LCN), Sydney, Australia, 16–19 November 2020; IEEE
    Computer Society: Washington, DC, USA, 2020; pp. 441–444. [Google Scholar] Cao,
    J.; Xu, L.; Abdallah, R.; Shi, W. EdgeOS_H: A Home Operating System for Internet
    of Everything. In Proceedings of the 2017 IEEE 37th International Conference on
    Distributed Computing Systems (ICDCS), Atlanta, GA, USA, 5–8 June 2017; Institute
    of Electrical and Electronics Engineers Inc.: Piscataway, NJ, USA, 2017; pp. 1756–1764.
    [Google Scholar] Singh, P.; Nayyar, A.; Kaur, A.; Ghosh, U. Blockchain and Fog
    Based Architecture for Internet of Everything in Smart Cities. Future Internet
    2020, 12, 61. [Google Scholar] [CrossRef] Naranjo, P.G.V.; Pooranian, Z.; Shojafar,
    M.; Conti, M.; Buyya, R. FOCAN: A Fog-supported smart city network architecture
    for management of applications in the Internet of Everything environments. J.
    Parallel Distrib. Comput. 2018, 132, 274–283. [Google Scholar] [CrossRef] Jie,
    C.; Lanyu, X.U.; Abdallah, R.; Weisong, S. An OS for Internet of Everything: Early
    Experience An OS for Internet of Everything: Early Experience from A Smart Home
    Prototype from A Smart Home Prototype Special Topic. Zte Commun. 2017, 15, 12–22.
    [Google Scholar] Abdelwahab, S.; Hamdaoui, B.; Guizani, M.; Rayes, A. Enabling
    Smart Cloud Services through Remote Sensing: An Internet of Everything Enabler.
    IEEE Internet Things J. 2014, 1, 276–288. [Google Scholar] [CrossRef] RM, S.P.;
    Bhattacharya, S.; Maddikunta, P.K.R.; Somayaji, S.R.K.; Lakshmanna, K.; Kaluri,
    R.; Hussien, A.; Gadekallu, T.R. Load balancing of energy cloud using wind driven
    and firefly algorithms in internet of everything. J. Parallel Distrib. Comput.
    2020, 142, 16–26. [Google Scholar] [CrossRef] Roy, S.; Chowdhury, C. Integration
    of Internet of Everything (IoE) with cloud. In Beyond the Internet of Things;
    Internet of Things Book Series; Springer International Publishing: Berlin/Heidelberg,
    Germany, 2017; pp. 199–222. [Google Scholar] [CrossRef] Kumar, K.S.; Balakrishnan,
    S.; Janet, J. A cloud-based prototype for the monitoring and predicting of data
    in precision agriculture based on internet of everything. J. Ambient. Intell.
    Humaniz. Comput. 2020, 12, 8719–8730. [Google Scholar] [CrossRef] Dhaya, R.; Kanthavel,
    R. IoE based private multi-data center cloud architecture framework. Comput. Electr.
    Eng. 2022, 100, 107933. [Google Scholar] [CrossRef] Bera, B.; Das, A.K.; Obaidat,
    M.S.; Vijayakumar, P.; Hsiao, K.-F.; Park, Y. AI-Enabled Blockchain-Based Access
    Control for Malicious Attacks Detection and Mitigation in IoE. IEEE Consum. Electron.
    Mag. 2020, 10, 82–92. [Google Scholar] [CrossRef] Velasquez, K.; Abreu, D.P.;
    Assis, M.R.M.; Senna, C.; Aranha, D.F.; Bittencourt, L.F.; Laranjeiro, N.; Curado,
    M.; Vieira, M.; Monteiro, E.; et al. Fog orchestration for the Internet of Everything:
    State-of-the-art and research challenges. J. Internet Serv. Appl. 2018, 9, 14.
    [Google Scholar] [CrossRef] Elawady, M.; Sarhan, A.; Alshewimy, M.A.M. Toward
    a mixed reality domain model for time-Sensitive applications using IoE infrastructure
    and edge computing (MRIoEF). J. Supercomput. 2022, 78, 10656–10689. [Google Scholar]
    [CrossRef] [PubMed] Xu, Y.; Chen, L.; Lu, Z.; Du, X.; Wu, J.; Hung, P.C.K. An
    Adaptive Mechanism for Dynamically Collaborative Computing Power and Task Scheduling
    in Edge Environment. IEEE Internet Things J. 2021, 10, 3118–3129. [Google Scholar]
    [CrossRef] Yi, B.; Lv, J.; Wang, X.; Ma, L.; Huang, M. Digital twin driven and
    intelligence enabled content delivery in end-edge-cloud collaborative 5G networks.
    Digit. Commun. Netw. 2022. [Google Scholar] [CrossRef] Jain, D.K.; Tyagi, S.K.S.;
    Neelakandan, S.; Prakash, M.; Natrayan, L. Metaheuristic Optimization-Based Resource
    Allocation Technique for Cybertwin-Driven 6G on IoE Environment. IEEE Trans. Ind.
    Inform. 2021, 18, 4884–4892. [Google Scholar] [CrossRef] Mohanty, S.P.; Yanambaka,
    V.P.; Kougianos, E.; Puthal, D. PUFchain: A Hardware-Assisted Blockchain for Sustainable
    Simultaneous Device and Data Security in the Internet of Everything (IoE). IEEE
    Consum. Electron. Mag. 2020, 9, 8–16. [Google Scholar] [CrossRef] Kohli, P.; Sharma,
    S.; Matta, P. Secured Authentication Schemes of 6G Driven Vehicular Communication
    Network in Industry 5.0 Internet-of-Everything (IoE) Applications: Challenges
    and Opportunities. In Proceedings of the 2022 IEEE 2nd International Conference
    on Mobile Networks and Wireless Communications (ICMNWC), Tumkur, India, 2–3 December
    2022; pp. 1–5. [Google Scholar] Zhan, J.; Dong, S.; Hu, W. IoE-supported smart
    logistics network communication with optimization and security. Sustain. Energy
    Technol. Assess. 2022, 52, 102052. [Google Scholar] [CrossRef] Sajid, M.; Harris,
    A.; Habib, S. Internet of Everything: Applications, and Security Challenges. In
    Proceedings of the 4th International Conference on Innovative Computing, ICIC
    2021, Lahore, Pakistan, 9–10 November 2021; Institute of Electrical and Electronics
    Engineers Inc.: Piscataway, NJ, USA, 2021. [Google Scholar] [CrossRef] Ashraf,
    Z.; Sohail, A.; Yousaf, M. Robust and lightweight symmetric key exchange algorithm
    for next-generation IoE. Internet Things 2023, 22, 100703. [Google Scholar] [CrossRef]
    Wang, M.; Qin, Y.; Liu, J.; Li, W. Identifying personal physiological data risks
    to the Internet of Everything: The case of facial data breach risks. Humanit.
    Soc. Sci. Commun. 2023, 10, 216. [Google Scholar] [CrossRef] Saini, H.K.; Jain,
    K.L. A New Way of Improving Network by Smart IoE with UAV. In Proceedings of the
    2023 International Conference on Computational Intelligence, Communication Technology
    and Networking (CICTN), Ghaziabad, India, 5–6 September 2023; pp. 485–489. [Google
    Scholar] [CrossRef] Javadpour, A.; AliPour, F.S.; Sangaiah, A.K.; Zhang, W.; Ja’far,
    F.; Singh, A. An IoE blockchain-based network knowledge management model for resilient
    disaster frameworks. J. Innov. Knowl. 2023, 8, 100400. [Google Scholar] [CrossRef]
    Zheng, Y.; Li, Z.; Zeng, Z.; Zhang, S.; Xiong, N.N.; Liu, A. CITE: A content-based
    trust evaluation scheme for data collection with Internet of Everything. Inf.
    Sci. 2023, 647, 119424. [Google Scholar] [CrossRef] Bulti, A.G.; Ray, A.; Bhuyan,
    P. Smart Tourism System Architecture Design using the Internet of Everything(IOE)
    over Cloud Platform. Int. J. Innov. Technol. Explor. Eng. 2019, 8, 421–426. Available
    online: https://www.researchgate.net/publication/333672862 (accessed on 15 September
    2023). Younis, M. Internet of everything and everybody: Architecture and service
    virtualization. Comput. Commun. 2018, 131, 66–72. [Google Scholar] [CrossRef]
    Salehi, S.; Farbeh, H.; Rokhsari, A. An adaptive data coding scheme for energy
    consumption reduction in SDN-based Internet of Things. Comput. Netw. 2023, 221,
    109528. [Google Scholar] [CrossRef] Demirkan, H.; Bess, C.; Spohrer, J.; Rayes,
    A.; Allen, D.; Moghaddam, Y. Innovations with smart service systems: Analytics,
    big data, cognitive assistance, and the internet of everything. Commun. Assoc.
    Inf. Syst. 2015, 27, 733–752. [Google Scholar] [CrossRef] Langley, D.J.; van Doorn,
    J.; Ng, I.C.L.; Stieglitz, S.; Lazovik, A.; Boonstra, A. The Internet of Everything:
    Smart things and their impact on business models. J. Bus. Res. 2021, 122, 853–863.
    [Google Scholar] [CrossRef] Petrescu, M.; Krishen, A.; Bui, M. The Internet of
    Everything: Implications of marketing analytics from a consumer policy perspective.
    J. Consum. Mark. 2020, 37, 675–686. [Google Scholar] [CrossRef] Golovatchev, J.;
    Chatterjee, P.; Kraus, F.; Schüssl, R. PLM 4.0—Recalibrating product development
    and management for the era of Internet of Everything (IoE). In IFIP Advances in
    Information and Communication Technology; Springer: New York, NY, USA, 2017; pp.
    81–91. [Google Scholar] [CrossRef] Peng, X.; Garg, H.; Luo, Z. Hesitant Fuzzy
    Soft Combined Compromise Solution Method for IoE Companies’ Evaluation. Int. J.
    Fuzzy Syst. 2022, 24, 457–473. [Google Scholar] [CrossRef] De Amorim Silva, R.;
    Braga, R.T.V. An acknowledged system of systems for educational internet of everything
    ecosystems. In Proceedings of the ACM International Conference Proceeding Series,
    Association for Computing Machinery, Madrid, Spain, 24–28 September 2018. [Google
    Scholar] [CrossRef] Ahad, M.A.; Tripathi, G.; Agarwal, P. Learning analytics for
    IoE based educational model using deep learning techniques: Architecture, challenges,
    and applications. Smart Learn. Environ. 2018, 5, 7. [Google Scholar] [CrossRef]
    Chou, T.Y.; Lai, W.H. Application of the Internet of Everything in Educational
    Institutions. In Proceedings of the ISPACS 2021—Symposium on Intelligent Signal
    Processing and Communication Systems: 5G Dream to Reality, Hualien, Taiwan, 16–19
    November 2021; Institute of Electrical and Electronics Engineers Inc.: Piscataway,
    NJ, USA, 2021. [Google Scholar] [CrossRef] Fan, X.; Liu, X.; Hu, W.; Zhong, C.;
    Lu, J. Advances in the development of power supplies for the Internet of Everything.
    InfoMat 2019, 1, 130–139. [Google Scholar] [CrossRef] Kundu, A. Institute of Electrical
    and Electronics Engineers, Institute of Electrical and Electronics Engineers.
    Kolkata Section. PES Chapter, and Institute of Electrical and Electronics Engineers.
    Kolkata Section. In Proceedings of the 2020 IEEE International Conference for
    Convergence in Engineering, Kolkata, India, 5–6 September 2020. [Google Scholar]
    Adenugba, F.; Misra, S.; Maskeliūnas, R.; Damaševičius, R.; Kazanavičius, E. Smart
    irrigation system for environmental sustainability in Africa: An Internet of Everything
    (IoE) approach. Math. Biosci. Eng. 2019, 16, 5490–5503. [Google Scholar] [CrossRef]
    Pena, P.A.; Sarkar, D.; Maheshwari, P. A big-data centric framework for smart
    systems in the world of internet of everything. In Proceedings of the 2015 International
    Conference on Computational Science and Computational Intelligence, CSCI 2015,
    Las Vegas, NV, USA, 7–9 December 2015; Institute of Electrical and Electronics
    Engineers Inc.: Piscataway, NJ, USA, 2016; pp. 306–311. [Google Scholar] [CrossRef]
    Fiaidhi, J.; Mohammed, S. Internet of Everything as a Platform for Extreme Automation.
    IT Prof. 2019, 21, 21–25. [Google Scholar] [CrossRef] Alsmirat, M. Institute of
    Electrical and Electronics Engineers. French Section, and Institute of Electrical
    and Electronics Engineers. In Proceedings of the 2020 Fifth International Conference
    on Fog and Mobile Edge Computing (FMEC), Paris, France, 20–23 April 2020. [Google
    Scholar] Djenouri, Y.; Djenouri, D.; Belhadi, A.; Srivastava, G.; Lin, J.C.W.
    Emergent Deep Learning for Anomaly Detection in Internet of Everything. IEEE Internet
    Things J. 2023, 10, 3206–3214. [Google Scholar] [CrossRef] Institute of Electrical
    and Electronics Engineers. Proceedings of the 2018 Global Information Infrastructure
    and Networking Symposium (GIIS), Thessaloniki, Greece, 23–25 October 2018; Available
    online: https://ieeexplore.ieee.org/xpl/conhome/8632667/proceeding (accessed on
    15 September 2023). Manogaran, G.; Rawal, B.S. An Efficient Resource Allocation
    Scheme with Optimal Node Placement in IoT-Fog-Cloud Architecture. IEEE Sens. J.
    2021, 21, 25106–25113. [Google Scholar] [CrossRef] IEEE Systems Council and Institute
    of Electrical and Electronics Engineers. Proceedings of the ISSE 2016: 2016 International
    Symposium on Systems Engineering, Edinburgh, UK, 3–5 October 2016. Alnuaimi, S.S.;
    Sundararajan, E.A.; Rahman, A.H.A. Data Distribution Optimization over Multi-Cloud
    Storage. J. Theor. Appl. Inf. Technol. 2022, 100, 1378–1389. [Google Scholar]
    Zhou, L.; Fan, X.; Tjahjadi, T.; Choudhury, S.D. Discriminative attention-augmented
    feature learning for facial expression recognition in the wild. Neural Comput.
    Appl. 2022, 32, 925–936. [Google Scholar] [CrossRef] Gao, D.; Li, Z.; Liu, Y.;
    He, T. Neighbor Discovery Based on Cross-Technology Communication for Mobile Applications.
    IEEE Trans. Veh. Technol. 2020, 69, 11179–11191. [Google Scholar] [CrossRef] Yang,
    F.; Ghafoor, M.I.; Jaskani, F.H.; Islam, U.; Fayaz, M.; Mehmood, G. IOTA-based
    Mobile crowd sensing: Detection of fake sensing using logit-boosted machine learning
    algorithms. Wirel. Commun. Mob. Comput. 2022, 2022, 6274114. [Google Scholar]  Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Mohd Ali, F.; Md Yunus, N.A.; Mohamed, N.N.;
    Mat Daud, M.; A. Sundararajan, E. A Systematic Mapping: Exploring Internet of
    Everything Technologies and Innovations. Symmetry 2023, 15, 1964. https://doi.org/10.3390/sym15111964
    AMA Style Mohd Ali F, Md Yunus NA, Mohamed NN, Mat Daud M, A. Sundararajan E.
    A Systematic Mapping: Exploring Internet of Everything Technologies and Innovations.
    Symmetry. 2023; 15(11):1964. https://doi.org/10.3390/sym15111964 Chicago/Turabian
    Style Mohd Ali, Fazlina, Nur Arzilawati Md Yunus, Nur Nabila Mohamed, Marizuana
    Mat Daud, and Elankovan A. Sundararajan. 2023. \"A Systematic Mapping: Exploring
    Internet of Everything Technologies and Innovations\" Symmetry 15, no. 11: 1964.
    https://doi.org/10.3390/sym15111964 Note that from the first issue of 2016, this
    journal uses article numbers instead of page numbers. See further details here.
    Article Metrics Citations Crossref   1 ads   1 Scopus   1 Google Scholar   [click
    to view] Article Access Statistics Article access statistics Article Views 6.
    Jan 16. Jan 26. Jan 5. Feb 15. Feb 25. Feb 6. Mar 16. Mar 26. Mar 0 500 1000 1500
    For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Symmetry, EISSN 2073-8994,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Symmetry
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Systematic Mapping: Exploring Internet of Everything Technologies and
    Innovations'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Banotra A.
  - Ghose S.
  - Mishra D.
  - Modem S.
  citation_count: '2'
  description: The Internet of Things (IoT) is envisioned to become a driving force
    in the evolution of fifth-generation (5G) mobile networks, autonomous continuous
    monitoring and control platforms, and low-power consumption devices. Conventionally,
    these devices are battery-operated. The battery lifespan degrades faster in the
    case of continuous monitoring devices. Limited battery lifetime motivates us to
    investigate an eco-friendly solution to solve the issue of limited battery life
    and frequent replacement. Energy harvesting (EH) is a key-enabling technique that
    provides a viable solution to the challenge at hand. EH minimizes battery dependence
    by collecting energy from ambient sources. Although several studies have been
    conducted on EH-IoT networks, a tutorial on a possible mapping between the use
    cases/application to the IoT devices and the IoT devices to EH power source still
    needs to be included. To address this gap, we classify IoT devices based on their
    applications. Based on the different interfacing sections of layer architecture
    design of IoT device, this paper tries to fill the gap between IoT applications
    and the self-sustainable IoT system design. Next, each interfacing section is
    categorized into layer architecture of IoT device to study layer-specific power
    requirements (or demand) versus EH sources (or supply). We have considered various
    applications like agriculture, healthcare, industry, city, security, transportation,
    and water management. Further, we discuss different energy sources to harness
    ambient energy and the method to store the harvested energy. Then, the widely
    used standards and the various steps taken for the interoperability and compatibility
    of EH-IoT are outlined to understand the elements of the EH interface. Finally,
    we point out future research issues requiring specific attention for deploying
    self-sustainable IoT-based delay-limited applications.
  doi: 10.1016/j.comnet.2023.110011
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Standard layered architecture for
    IoT-enabled applications 3. Power and cost required for self-sustainable IoT devices
    in the layer architecture design 4. EH techniques: Different components required
    for self-sustainable IoT devices 5. The energy saving and resource constrained
    optimizers for sustainable IoT operations 6. IoT application mapping for sustainable
    IoT devices 7. Future scope 8. Conclusion Declaration of competing interest Acknowledgments
    Data availability References Vitae Show full outline Cited by (2) Figures (6)
    Tables (11) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Computer
    Networks Volume 236, November 2023, 110011 Survey paper Energy harvesting in self-sustainable
    IoT devices and applications based on cross-layer architecture design: A survey
    Author links open overlay panel Atul Banotra a, Sarbani Ghose b, Deepak Mishra
    c, Sudhakar Modem a Show more Share Cite https://doi.org/10.1016/j.comnet.2023.110011
    Get rights and content Abstract The Internet of Things (IoT) is envisioned to
    become a driving force in the evolution of fifth-generation (5G) mobile networks,
    autonomous continuous monitoring and control platforms, and low-power consumption
    devices. Conventionally, these devices are battery-operated. The battery lifespan
    degrades faster in the case of continuous monitoring devices. Limited battery
    lifetime motivates us to investigate an eco-friendly solution to solve the issue
    of limited battery life and frequent replacement. Energy harvesting (EH) is a
    key-enabling technique that provides a viable solution to the challenge at hand.
    EH minimizes battery dependence by collecting energy from ambient sources. Although
    several studies have been conducted on EH-IoT networks, a tutorial on a possible
    mapping between the use cases/application to the IoT devices and the IoT devices
    to EH power source still needs to be included. To address this gap, we classify
    IoT devices based on their applications. Based on the different interfacing sections
    of layer architecture design of IoT device, this paper tries to fill the gap between
    IoT applications and the self-sustainable IoT system design. Next, each interfacing
    section is categorized into layer architecture of IoT device to study layer-specific
    power requirements (or demand) versus EH sources (or supply). We have considered
    various applications like agriculture, healthcare, industry, city, security, transportation,
    and water management. Further, we discuss different energy sources to harness
    ambient energy and the method to store the harvested energy. Then, the widely
    used standards and the various steps taken for the interoperability and compatibility
    of EH-IoT are outlined to understand the elements of the EH interface. Finally,
    we point out future research issues requiring specific attention for deploying
    self-sustainable IoT-based delay-limited applications. Previous article in issue
    Next article in issue Keywords Internet of Things networksIoT layer architectureEnergy
    consumptionEnergy harvestingIoT applicationsSelf-sustainabilitySensing & actuation
    interfaceWireless interfaceProcessing interface 1. Introduction The Internet of
    Things (IoT) is an emerging paradigm that provides ubiquitous and massive connectivity.
    It promises an unlimited possibility in improving the quality of life (e.g., smart
    homes, intelligent diagnostics systems, autonomous driving vehicles, smart irrigation,
    smart cities, and many more) of end-user [1]. The IoT device is vast and encompasses
    numerous features at different layers, which can be challenging to understand
    the significance of different devices from different layers based on the type
    of problem it addresses. These problems are broadly classified as social, environmental,
    and economic development to transform an existing physical infrastructure into
    cyber–physical infrastructure. IoT has much potential to gather resources and
    assist individuals by offering efficient services with smart cyber–physical solutions.
    Smart healthcare, smart grid, smart water supply management, and smart city are
    IoT-based solutions that influence social factors. In connection to healthcare,
    lately, the Internet of Medical Things has emerged as a pioneering platform. [2].
    The authors of [3], [4], [5], [6], [7], [8] investigated the smart healthcare
    framework to monitor the physical and mental health of the patients, and human
    activity recognition. This technology performs timely detection of an anomaly
    in an individual by collecting data using different types of sensors. To improve
    quality of life, we need to design an IoT network that facilitates access to essential
    services, transportation, and better environmental conditions. Thus a smart city
    application emerged by employing a network of smart devices. Examples of such
    applications include parking, waste management, sanitation, lighting, traffic,
    buildings, and the energy sector. Similarly, the smart energy industries solve
    the problem of generation, distribution, consumption, and demand analysis by integrating
    IoT devices. A few examples are smart wind turbines, smart hydro-power systems,
    smart grids, etc. In general, IoT also helps to enhance energy efficiency (EE)
    in electrical devices. Moreover, we use highways and roads to move consumable
    goods from one place to another. Therefore, the existing road infrastructure can
    be made smart by creating warning messages regarding weather conditions, road
    congestion, impending accidents, etc. Several emerging technologies empower smart
    applications like vehicle-to-vehicle communication (V2V), vehicle-to-everything
    (V2X) data exchange service, device-to-device (D2D) connectivity [9]. These applications
    can be leveraged to solve the problem of fast and hassle-free parking and efficient
    traffic management through optimal routing mechanisms using different IoT sensors.
    Such sensors include accelerometers, gyroscopes, magnetometers, and GPS sensors.
    The literature in [10], [11], [12], [13] enables smart transportation in future
    cities by ensuring the safety of the driver and reducing traffic congestion. It
    is achieved by using the Mood-Fatigue Analyzer (MFA) and camera-based eye detection
    method that uses the viola-jones algorithm to ensure the safety of the driver
    and traveler in the car. In today’s era, the business prerequisites of the industry
    are automation, interconnection, and real-time data collection. Industrial IoT
    (IIoT) [14], [15] is the driving force of Industry 4.0. The enormous data generated
    by smart tracking systems [16], smart factories [17], and smart asset management
    [18] are exploited to achieve an optimized performance of the supply chain. These
    networks include embedded systems, microcontrollers, sensors and actuator networks
    (SANET), communication modules, etc. In [19], the authors have reviewed the motivation
    to apply IoT for big data analysis and the technological and social challenges
    associated with it. This type of application requires a continuous flow of information.
    Hence, the devices require more power compared to other applications. IoT-based
    cellular, non-terrestrial, and wide-area network connections are predicted to
    approach 5.9 billion by 2026 [20]. These wide-area network connections include
    sensors, actuators, microcontrollers, and a communication interface that require
    batteries to run their sensing, processing, and transmission interfaces. These
    batteries have a finite capacity. Frequently recharging/changing these batteries
    results in change-over downtime and incurs huge operational costs. Moreover, at
    the current rate of carbon dioxide emissions, global temperatures have risen substantially
    from pre-industrial levels. Hence, there is a compelling need to plan future cities
    to be sustainable [21], [22]. Harvesting energy from natural sources is a promising
    self-sustainable solution that prolongs battery life, eliminates maintenance costs,
    and aids in long-term deployment. Particularly, photo-voltaic (PV) cells [23],
    [24] and radio frequency (RF) [25], [26] have been identified as cost-effective
    energy sources that enable on-site charging of rechargeable batteries for sustainable
    IoT applications. It is necessary to have a thorough understanding of IoT devices
    in terms of power, cost, and critical features (sensing interface, actuation interface,
    processing interface, data-storage interface, data-management interface, and communication
    interface) at different layers to assemble the self-sustainable IoT system design.
    However, no such architecture collaborates the function of three-layer, four-layer,
    five-layer, and seven-layer architecture design for sustainable IoT applications.
    So, there is a need to establish a clean and streamlined cross-layer architecture
    to bridge the gap between application requirements and IoT system design. The
    widely researched, self-sustainable IoT-enabled layered architecture design, compatible
    with various IoT applications, has been effectively illustrated in Fig. 1. In
    a self-sustainable layered architecture design, Fig. 1 represents every possible
    IoT service, device, and application congruously. The layered architectural design
    begins with the energy harvesting interface, which includes energy sources, transducers,
    trackers, and storage interface. Additionally, it demonstrates various optimization
    strategies to reap the maximum benefit of the harvested energy. Various IoT devices
    that require power to perform data sensing, transmission, processing, and accumulation
    at different layers, are presented. Next, the power consumption and cost of the
    device, associated with the functionality of a particular layer, are mentioned.
    Then, depending on the use of any device in the most suitable IoT application,
    the sensing, processing, transmission, and actuation interfaces of the layered
    architecture design are categorized in terms of power requirement, cost, and other
    critical factors. Finally, the business layer of the proposed framework is presented.
    Download : Download high-res image (1MB) Download : Download full-size image Fig.
    1. Overview of layer architecture design for self-sustainable IoT device. 1.1.
    Motivation and contribution Based on the state-of-art, we conclude that several
    studies have been conducted on EH-IoT networks (see Table 1), and a tutorial on
    EH-IoT networks based on the layered architecture design is missing. Moreover,
    no substantial survey has ever been performed to develop a self-sustainable IoT
    device based on application requirements by following a sequential set of IoT
    reference layer models as shown in Fig. 1. For energy harvesting, it is necessary
    to have a clear design framework to manage energy flow for self-sustainable IoT
    devices. The framework involves generation process, storage mechanism, tracking
    energy consumption, and managing the supply of harvested energy. We have designed
    a framework for EH-IoT by dividing it into energy sources, energy transducers,
    energy trackers, energy management, and energy consumption interfaces. The proposed
    mapping of EH-IoT, along with the design framework, will help researchers and
    practitioners of this domain to reduce the time to collate knowledge and create
    a road map for their specific needs. The contributions of this survey are summarized
    as follows: • We have classified IoT modules based on their applications. Next,
    each class has been divided into IoT device based layered architecture to study
    layer-specific power requirements (or demand) versus the sources (or supply).
    • This is followed by a discussion on energy harvesting from several sources,
    which will act as an enabler of power source for EH-IoT. Also, the method to harvest
    and store that harvested energy is outlined by highlighting the currently available
    and emerging energy storage interfaces. • We proposed a balanced and well-researched
    layers architecture design of self-sustainable IoT device for various IoT applications.
    We developed a single overview of all layers’ architecture and their relations
    with energy harvesting interfaces. • The energy-saving and resource-optimization
    method for self-sustainable IoT design is discussed in terms of power and data
    optimization. Moreover, various methods to maintain balance among bandwidth, range,
    power consumption, and time constraints of IoT sensing, processing, and transmission
    interfaces are discussed by following a common framework of the EH interface.
    • Insights on IoT-based energy harvesting interfaces that contribute to interoperability
    and the interfacing units such as sensing, processing, communication, and energy
    harvesting are discussed in IoT layered design. • Finally, based on state-of-art
    literature, we highlight several open research issues and future possibilities
    for self-sustainable IoT device based on the layered architecture design. Table
    1. Comparison of existing survey articles with this survey based on different
    functionalities. Reference Year Main topics Sensing & actuation interface Processing
    interface EH interface Energy storage interface Data management & storage interface
    Wireless interface [27] 2010 Middle-ware ✓ ✗ ✗ ✗ ✗ ✓ [28] 2013 Cloud-centric design.
    ✓ ✓ ✗ ✗ ✗ ✓ [29] 2014 Industrial IoT ✓ ✗ ✗ ✗ ✗ ✓ [30] 2015 Security, privacy ✓
    ✗ ✗ ✗ ✗ ✗ [31] 2017 Type of sensors, middleware, applications ✓ ✓ ✗ ✗ ✗ ✓ [32]
    2018 Type of sensors, middleware, applications ✓ ✓ ✗ ✗ ✗ ✓ [33] 2020 Batteryless
    IoT ✗ ✗ ✓ ✗ ✗ ✓ [1] 2020 Intermittent computing, sensing in EH-IoT ✓ ✗ ✓ ✗ ✓ ✓
    [34] 2021 5G green user through EH, NB-IoT ✓ ✓ ✓ ✗ ✗ ✓ [35] 2021 Analysis on EH
    techniques, design, testing on IoT device ✓ ✓ ✓ ✗ ✗ ✓ [36] 2022 Cellular, wide-area,
    3D IoT ✓ ✓ ✓ ✗ ✗ ✓ [37] 2022 Data storage, process, architecture for big data
    management ✓ ✓ ✗ ✗ ✓ ✓ [38] 2022 Context, energy-aware security in IoT ✓ ✗ ✓ ✗
    ✗ ✓ [39] 2022 Minimize energy wastage in IoT ✓ Sensors ✗ Actuators ✓ ✓ ✗ ✗ ✓ This
    survey – Self-sustainable IoT ✓ ✓ ✓ ✓ ✓ ✓ ‘✓’: corresponding issue was addressed
    in the work, ‘✗’: not addressed. 1.2. Comparative analysis with the existing surveys
    Table 1 indicates a complete summary of the existing survey papers based on different
    functionalities of devices. The functionalities of the device are shown based
    on different IoT interfaces from the cross-layer architecture design by considering
    their use in specific IoT applications. The different functionalities mainly incorporates
    the sensing & actuation, processing, EH, energy storage, data management and storage
    and wireless interfaces. 43% of the literature covers any four layers (mostly
    sensing and actuation, processing, EH, and wireless interface are covered under
    review). But most of the time these articles omit discussion on data management,
    and energy storage interfaces. We have covered all six interfaces. In contrast
    to the other surveys, our survey provides a comprehensive and thoroughly investigated
    overview of the proposed self-sustainable IoT device for diverse IoT applications.
    It is achieved by covering all the IoT interfaces from the cross-layer architecture
    design. Each interfacing region operates in the different layers of IoT device.
    The description of different interfaces is as follows: • The sensing and actuation
    interface is a part of the physical layer and deals with different sensing and
    actuating devices for IoT applications. Moreover, the processing interface is
    also a part of the physical layer, which focuses on the number of micro-controllers
    and microprocessors used in different IoT applications. • Once the data has been
    sensed and processed by sensing and processing interface of the physical layer
    architecture design, it needs to be sent among different devices for the exchange
    of information. This data transmission is carried out by a wireless interface
    unit which is a part of network layer in the IoT device based layer architecture
    design. • The data management and storage interface is part of the processing
    layer. It is responsible for handling and organizing large amounts of data. This
    interface also includes certain protocols used at the application layer, like
    MQTT, AMPQP, and XMPP, which are the methods used for managing the data at the
    remote server. • Finally, we need an energy-harvesting (EH) and energy storage
    interface to power the IoT devices. These interfacing units manage and store the
    power supply of IoT devices. For energy harvesting, it is necessary to have a
    clear design framework to manage energy flow for self-sustainable IoT devices.
    The framework involves the generation process, storage mechanism, tracking energy
    consumption, and managing the supply of harvested energy. We have designed a framework
    for self-sustainable IoT device by dividing it into energy source units, energy
    transducers, energy tracker units, energy management units, and energy consumption
    units. The proposed mapping of self-sustainable IoT device, along with the design
    framework, will help researchers and practitioners of this domain to reduce the
    time to collate knowledge and create a road map for their specific needs. Some
    of the available research papers based on the above interfacing layers are discussed
    below. In [27], the authors describe the overview of IoT in terms of wireless,
    sensing, and actuation interfaces by considering the middleware layer. This layer
    enables interoperability across various IoT devices, applications, and platforms.
    They define the suitability of the sensors, actuators, and different communication
    protocols such as Zigbee, Bluetooth, and WiFi for IoT applications in a variety
    of applications, including healthcare, transportation, and smart cities. The authors
    of [28] described the cloud-centric/Internet-centric architecture for the IoT
    networking, sensing, and processing interface. The intention is to offer an integrated
    platform for developing analytics tools, computer graphic designers, specialists
    in artificial intelligence, and sensing service units. Therefore, a single platform
    can combine storage, computation, and visualization paradigms to improve IoT performance
    for various applications. Apart from this, authors in [29] focused on providing
    a promising approach to build a smart industrial system by using the four-layered
    architecture design. Authors in [30] focused on handling the security and privacy
    issue of the IoT paradigm at the perception and processing layers. IoT sensors
    generate massive data to make it applicable at the application interface. But
    unauthorized users generate several attacks, such as brute force, phishing, man-in-the-middle
    attack, spoofing, and denial of service attacks in the lower layers of IoT system
    design to steal valuable data. To address this issue, authors paved forward various
    technologies such as blockchain and physical layer security to secure the data.
    Authors in [31] discussed the state-of-the-art protocols and applications in the
    emerging era of IoT networks. They consolidate most IoT applications, including
    smart wearables, brain-sensing headphones, and embedded skin patches, by concentrating
    on the taxonomy of three- and five-layered architectural designs. The architecture
    section of this paper also considers fog computing, which has never been considered
    earlier but lacks a discussion on data management and power interfaces. Despite
    the advancement in IoT technology, work on sensing, processing, and actuation
    interfaces are still underway in terms of power requirement. To overcome the power
    interface units, authors in [32], [33] covered a thorough review of energy harvesting
    sources, energy storage devices, and associated topologies of energy harvesting
    systems for energy-constrained IoT networks. It mainly focused on distribution
    approaches, conversion modules, storage devices, and control units to minimize
    circuit losses. Similarly, authors in [1] examine several strategies that facilitate
    the efficient use of energy harvesting as a proxy for different IoT devices in
    an efficient manner. It also investigates the effective checkpointing and timestamping
    methods to power IoT devices without depending on conventional power supplies.
    In addition to utilizing renewable energy sources to power IoT devices, new machine
    learning and wireless communication techniques for EH-IoTs are being researched.
    These include the backscatter communication technique, packet-less IoT communication,
    and reinforcement learning. The authors of [34] present energy harvesting solutions
    and energy efficient approaches for information and communication technology (ICT)
    by dividing the discussion of the paper into two parts: Green of ICT and Green
    by ICT. Green of ICTencompasses a wide range of topics, including green data center,
    network, and device approaches. Furthermore, Green by ICT provides energy harvesting
    strategies and resource-saving options for device-to-device communication. Further
    on, Narrow-Band IoT (NB-IoT) technology that increases battery life is also covered.
    A comprehensive analysis of the most recent energy harvesting technologies for
    IoT sensing devices is provided by the authors in [35], who also emphasize the
    IoT system’s potential for energy autonomy. In addition, the authors describe
    two case studies of IoT systems that utilize energy harvesting via solar and RF
    energy sources to provide energy autonomy for sensing devices. Both systems employ
    Bluetooth Low Energy (BLE) beacons as sensors, which broadcast the sensed parameters
    to BLE-capable terminals like mobile devices. The mobile devices then transmit
    this data to the cloud via internet services. The authors of [36] focus on the
    wireless interface of the current and future IoT applications, including 5G cellular
    networks, wide-area networks, and unlicensed band communication. It is accomplished
    by utilizing grant-free access, channel coding for short-packet communication,
    non-orthogonal multiple access, and on-device intelligence to make the wireless
    unit energy-efficient, highly reliable, low latency, and scalable. In [37], the
    authors emphasized the data management unit by proposing a proportional trade-off
    between high security and reduced energy usage of IoT devices. It employs a context-aware
    technique to safeguard IoT data while consuming minimal energy. The authors also
    considered the scope of artificial intelligence and Software-Defined Networking
    (SDN) to deploy a secure, energy-efficient IoT network. Similarly, in [38], [39],
    the authors presented different approaches to predictive analysis and classification
    methods to secure the data at minimal power consumption. It shows that during
    data transmission, most of the power is consumed when data packet collisions occur,
    packet overheads are unaddressed, redundant data is present, and a longer distance
    exists between the transmitter and receiver. Additionally, they highlight a number
    of efficient ways to lower energy consumption in both single-hop and multi-hop
    communication networks. The existing studies involves shallow discussion on the
    interfacing units within the IoT context. However, it fails to provide detailed
    information about the specific types of sensing, processing, and communication
    devices involved, as well as their corresponding power consumption in the layer
    architecture design. From the state-of-art, it has been seen that there is no
    substantial survey has ever been performed to develop a self-sustainable IoT device
    based on application requirements by following a sequential set of IoT reference
    layer models. As a result, our proposed framework filling the gap by mapping the
    IoT applications to the devices and, subsequently, the devices to the energy harvesting
    (EH) interface. The first step in this process involves identifying the layer
    architecture design for self-sustainable IoT device. Each layer accommodates different
    devices for different IoT applications. These IoT devices require a ubiquitous
    supply of power for their operations. To fulfill the power requirement of different
    devices that fall into different layers of IoT applications, there is a need for
    energy harvesting sources, transducers and storage interfaces. So, this necessitate
    the development of the self-sustainable IoT device that establish a connection
    among IoT application, devices and energy-harvesting interface. Download : Download
    high-res image (1MB) Download : Download full-size image Fig. 2. Structural organization
    of the paper. 1.3. Organization This survey is further structured as shown in
    Fig. 2. After a brief introduction, Section 2 presents survey on standard system
    architecture for IoT applications. Next in Section 3, the energy (power) requirement
    at different layers have been outlined. In Section 4, the different EH sources,
    transducers, trackers, and storage approaches that can be used in various IoT
    applications are discussed. Next, in Section 5, the various optimization techniques
    for effective utilizing the harvested energy are presented. Then, in Section 6,
    a comprehensive surveys is highlighted for various IoT applications based on the
    devices of different IoT layers and energy harvesting interfaces to establish
    the mapping between the IoT devices and the energy harvesting interfaces. Additionally,
    Section 7 discusses open issues and future trends. Finally, the paper is concluded
    in Section 8. 2. Standard layered architecture for IoT-enabled applications While
    designing an IoT system, it is essential to have an understanding of the devices
    and their organization. It is important to visualize the organization of different
    devices acting as a connected system. This Section describes the first step towards
    the strategic mapping between applications to layers and layers to devices. The
    designer has to take care of not only the functionality but also the coverage
    area, power requirements, architecture, and cost factors associated with the communication
    system. The standard functionalities are sensing, actuation, processing, data
    storage, and management. The cost factors include developmental, fabrication,
    and maintenance costs. This complex system model can be organized into a layered
    architecture. The design approach helps the system designer in two ways, namely,
    to create functional interactions and subsequently design communication strategies
    based on those interactions. In the first phase, the required functionalities
    are organized into different layers (e.g., starting from sensing any event to
    a final consumable product/application). The interfaces are laid down in the second
    phase to exchange information (intra and inter-layer communication). We have presented
    an example in Fig. 3. There are several position papers and surveys that deal
    with layer architecture design of IoT device [40], [41], [42]. Despite the refinement
    in IoT system design, the state-of-the-art has yet to have a single framework
    on layer architecture of IoT device that is widely accepted. While one group of
    researchers focused on the protocol, another group concentrated on the cloud-based
    architecture. In 2014, Rockwell Automation, Cisco, and IBM presented a seven-layer
    architectural model for IoT. However, the one proposed by the IoT world forum
    aimed to fulfill the space between application requirements and system design
    [43], [44]. The seven-layer architecture is an updated version of the five-layer
    architecture that introduced edge computing, fog computing, and big data processing.
    Fig. 3 depicts all the necessary functions and collaborative overview of several
    three-layer, four-layer, five-layer, and seven-layer architectural reference models.
    The role and requirements of each layer in the self-sustainable IoT devices, applications,
    and services is discussed in the following sections. In this work, the seven-layer
    interface has been consolidated into a five-layer architecture which is discussed
    below. A typical IoT application requirement can be connected to a self-sustainable
    system design by identifying the mapping between interfacing sub-layers [31].
    We shall use this layered architecture to review the power requirement of IoT
    devices. Next, we present a brief discussion on different layers covering the
    functionality, whereas an in-depth discussion on the IoT devices can be found
    in Section 3. Download : Download high-res image (753KB) Download : Download full-size
    image Fig. 3. Different layer architecture designs for IoT device. 2.1. Business
    layer The main aim of the business layer is to handle the entire IoT system. It
    communicates with the application layer and consumes the information available
    at that layer. It can alter business operations and benefit the overall operation
    of the IoT network. 2.2. Application layer The application layer provides application-oriented
    services to the end users. A huge number of IoT applications have been developed
    that cater to different services such as smart home, smart transportation, smart
    infrastructure management, and many more sustainable IoT applications have been
    broadly categorized into three classes, namely, social, business and environmental.
    2.3. Processing layer This layer is referred to as the middleware layer, and it
    is responsible for storing, processing, and analyzing a large amount of information
    from the connectivity layer. It incorporates database management, cloud computing,
    and analytics of big data-based technologies. The processing layer encompasses
    two most important sub-layer interfaces that recreate a crucial part of IoT system
    design, e.g., (a) data storage/accumulation interface (b) data management/abstraction
    interface. 2.4. Connectivity layer The connectivity layer mainly deals with the
    transmission of useful information in an efficient and timely manner. The layer
    includes all networking elements of IoT. This layer includes wireless communication
    protocols such as Z-Wave, LoRa, Zigbee, Thread, Wi-Fi, SigFox, Bluetooth, and
    cellular communication. 2.5. Physical layer (Perception layer) The physical layer
    is the initial layer of the IoT reference model that deals with the things/devices
    of IoT. The “things” in IoT refers to different end devices that transmit and
    receive data. The layer includes sensors, actuators, and controllers. The power
    supply is also managed through this layer. Multiple interfacing sub-layers exist
    between the physical and connection layer (as depicted in Fig. 3), namely, the
    sensing and actuation interface, power supply/monitoring interface, pre-processing
    interface, and temporary storage interface. Moreover, a detailed discussion on
    sensors and actuators, which are part of the layer, is discussed in Section 3.5.1
    The following Section goes through the power, cost, and critical features of IoT
    devices at different layers to assemble the self-sustainable IoT system design.
    3. Power and cost required for self-sustainable IoT devices in the layer architecture
    design This Section discusses the power or voltage and the associated cost of
    operating different IoT layers. IoT devices’ power consumption is crucial in identifying
    suitable energy harvesting interfaces to make them sustainable. Moreover, different
    IoT devices consume power at different layers based on their functioning. However,
    business layers need not be mentioned in this Section, as this layer do not involve
    physical IoT devices that consume power. So, this layer mainly do not contribute
    towards the sustainable IoT device. Moreover, this layers deal with application-oriented
    services involving different groups and business processes. Above this, we look
    at the cost requirement and critical features of different types of microcontrollers,
    sensors and actuators network (SANET), and communication modules to make the architecture
    of IoT device self-sustainable in different smart applications as discussed below:
    3.1. Application layer The application layer protocols play a significant role
    in sustaining the IoT devices for different applications as it establishes the
    communication among things, devices, or objects with different application interfaces.
    Cloud-based communication protocols often improve connectivity rates to ensure
    stability, durability, and productivity through better information access. The
    most commonly used application layer protocols are Websocket, Constrained Application
    Protocol (CoAP), Message Queue Telemetry Transport (MQTT), Extensible Messaging
    and Presence Protocol (XMPP), Advanced Message Queuing Protocol (AMQP), Representational
    State Transfer (RESTful Services) and Data Distribution Services (DDS). These
    protocols can be employed in different IoT applications for sustainable operations
    to provide a strategic mapping between the application layer with other layers.
    Below we mention different communication protocols to link a connection between
    IoT devices and the cloud. • Advanced message queuing protocol (AMQP): It is an
    application layer protocol that facilitates client–server communications between
    cloud and IoT nodes. This open-access based protocol contains more message overheads
    and is not accepted widely [45]. • Message queue telemetry transport (MQTT): MQTT
    is a lightweight communication protocol based on publish–subscribe-based architecture
    [46], which allows the client device to subscribe to the broker for receiving
    data from the server (publisher) through the topic. In the existing literature,
    MQTT ensured the reliable reception of messages offering different quality of
    services (QoS) [47], [48], [49]. • Constrained application protocol (CoAP): It
    is a web communication protocol with constrained nodes and a restricted network.
    It also facilitates a hypertext transfer protocol (HTTP) for smooth network integration.
    It mostly provides communication among machine-to-machine networks and uses the
    HTTP and publish–subscribe architecture with various commands. In comparison to
    the MQTT, the centralized device in CoAP uses a universal resource identifier
    (URI) [50]. In comparison to available protocols, MQTT offers better QoS, throughput,
    data protection, low latency [51], low packet loss [52], low power consumption
    and restricted bandwidth usage [53], [54]. The widely available cloud service
    providers are xively, grove stream, carriots, things worx, things speak, plotty,
    amazon web services (AWS), microsoft azure and many more. 3.2. Processing layer
    In this subsection, we discuss the different computing platforms that is responsible
    for making the decision based on the data sensed from the sensor and communicated
    to the central server for analysis, computation, and storage. The power consumption
    of the processing layer services is very high, and the cost requirement is moderate
    and varies from different service providers such as Xively, Grove Stream, Carriots,
    Plotty, Microsoft Azure, Amazon web services, and many more. Based on the intense
    survey, it is noticed that there is no criteria for selecting these data processing
    services for particular IoT applications based on the IoT device requirement.
    The processing layer mainly incorporated the hierarchical computing platforms
    for the data operation, as discussed below: • Cloud computing: In a wide variety
    of IoT applications, storing, processing, and analyzing unstructured data in a
    well-manageable form is a significant challenge. Cloud services are the most common
    platform for monitoring, analyzing, and storing huge IoT data. However, as the
    number of IoT devices increases, processing a huge amount of data on a single-layer
    platform leads to network congestion and an increase in the loss of data packets.
    So processing data on a single layer for a longer interval is not feasible due
    to the high latency and limited bandwidth per user. As a result, Cloud-computing
    is considered as a non-optimal approach for distributed processing of IoT data
    generated by different sensors and other devices at lower layers. So, fog and
    edge computing came into existence to address this challenge and maintain highly
    responsive IoT applications with low latency [55]. • Fog computing: To overcome
    the challenges in cloud computing, it is suggested to distribute data processing
    across the middle region of the processing layer rather than directly sending
    data to the cloud service (final region of processing layer). This process, known
    as Fog computing, involves handling data as close to the connectivity layer. It
    will reduce the latency and network congestion to a larger extent [56]. Fog computing
    is considered to be the best as it may link to the nearby edge device for analyzing
    and transformation that are later supported by the cloud services for storage
    and processing. • Edge computing: Although the concept of Fog computing solves
    all the limitations of Cloud computing, the concept of Edge computing came into
    origination to further minimize the latency. The main aim of Edge computing is
    to bring a IoT device closer to the data processing, computation and accumulation
    layer rather than relying on the cloud server. So that it can preprocess data
    and only forward the metadata by reducing the bandwidth requirement per device.
    Fog and edge computing can be employed in various IoT applications, such as smart
    traffic systems to enable the warning system by generating real-time warnings
    using the edge service [57]. The smart metering system also uses fog, edge, and
    cloud services to analyze the energy consumption of different households, industries,
    hospitals, schools and many more. Such analysis generates more data and uses a
    larger bandwidth. To address this, a hierarchical fog service is proposed [44],
    [58] as a solution by interconnecting them with a different edge service employed
    on each meter to reduce latency. On the other hand latency-tolerant data may be
    sent directly to the cloud services platforms for processing and storage. Apart
    from this, it is also used in various other IoT applications, such as smart hospitals,
    smart homes, smart industries, smart cities, and many more [59], [60], [61] to
    process data with low latency and high responsiveness. 3.3. Connectivity layer
    In this subsection, we discuss the various types of wireless communication protocols
    for enables communication from the device-to-device and the device-to-access point.
    Additionally, the characteristics of a protocol in terms of its bandwidth, data
    rate, lifespan, and cost are provided. 3.3.1. Device to device/device to access
    point wireless protocol Communication via IoT devices involves data transfer from
    D2D and the device to the access point gateway. The IoT ecosystem incorporates
    billions of smart devices, but they have significant limitations e.g. processing
    speed, power, lifetime, and range. Since IoT devices mainly operate at low power,
    commercially available communication devices for device-device communication are
    Wi-Fi (IEEE 802.11), WiMAX, cellular, Bluetooth (IEEE 802.15.1), Z-Wave, Zigbee,
    6LowPAN (IEEE 802.15.4), BLE 5.0 (IEEE 802.15.6), SigFox, LoRa, RFID, Near field
    communication (NFC), etc. Classification of these devices based on coverage area
    is shown in Fig. 4. A comparative study on the above-discussed communication protocols
    is presented in Table 2. In 2016, a new standard for energy harvesting was launched
    as ZigBee green power (GP) for wireless sensor networks [84]. The ZigBee GP specifications
    and the IEEE 802.15.4 networking protocol are used in energy-harvesting ZigBee-based
    communication protocol applications that operate on a low-power microcontroller
    framework [85]. IEEE 802.11ah is another framework that achieves a lower data
    rate but has a greater coverage area than traditional Wi-Fi operating above 1
    GHz. In this frequency range, absorption by buildings and other objects increases
    significantly. Hence, 802.11ah is an ideal candidate to be used for IoT networks.
    The analytical expression of throughput for IEEE 802.11ah has been obtained in
    [86]. Download : Download high-res image (180KB) Download : Download full-size
    image Fig. 4. IoT communication protocol for device to device communication. Table
    2. Comparison among different D2D communication standards. Communication standard
    Transmission range Data rate Power consumption Bandwidth Cost of module ($)/brand
    Wi-Fi (802.11b) [62], [63], [64], [65] 20–100 m 1 Mbps–6.75 Gbps 835 mW 22 MHz
    4.5 BLE [66] 30 m 1–24 Mbps 5–10 mW 1 MHz 4.75 LoRa [67], [68], [69] 30 km 0.3–50
    kbps 100 mW 125–500 KHz 5.19 Bluetooth [70], [71], [72] 15–100 m 1 Mbps 215 mW
    1 MHz 7.99 Cellular [73] Few kms NA 0.1–0.5 W 180 KHz–1.4 MHz 8.99 Sigfox [74],
    [75] 40 km 600 bps 10 nW–100 nW 100 KHz 18.80 Zigbee [76], [77] 10–100 m 40–250
    kbps 36.9 mW 5 MHZ 26.95 6LowPAN [78], [79] 20–100 m 250 kbps Low Used with IEEE
    802.15.4 in 2.4 GHz 35.07 Wi-Fi HaLow (802.11ah) [80], [81] 1000 m 150 kbps–78
    Mbps Less than traditional Wi-Fi 1–16 MHz 99 WiMAX [82], [83] 50 km 1 Mbps–1 Gbps
    36.78–36.94 W 1.25–20 MHz NA 3.4. Data management and storage interface This subsection
    deals with a temporary and permanent memory device to store data. It also involves
    the collection and processing of data on virtual storage systems, such as cloud,
    fog, and edge, and how the data can be structured. The microcontroller board (temporary
    storage interface) can have two types of memory, i.e., volatile (RAM) and non-volatile
    (e.g., flash, EEPROM) memories. Volatile memory requires continuous power, while
    non-volatile memory requires power on demand. 3.5. Physical layer In this subsection,
    we discuss several types of sensing and actuating devices that are utilized in
    various IoT-based smart applications. The power utilization and the associated
    cost to fabricate each sensor are described in Table 3. The cost of sensors has
    been taken from amazon.com. The search keyword was “IoT sensors” and visited on
    5th January, . Sensors with the capability of harvesting energy can be reused.
    Thus the overall power consumed by the sensing system reduces significantly and,
    in effect, extends the operation time of an IoT device as discussed in [15], [87],
    [88], [89], [90], [91], [92]. In this Section, we examine different types of sensors
    and actuators and list out possible areas of application in connection to IoT
    system design. Table 3. Comparison of sensors employed in sustainable IoT designs.
    Type of sensor Name of sensor Operating current/voltage Cost ($) Pressure sensors
    BMP180 A (AS), A (SS)/ V 1.5 Distance IR 20 mA (AS)/ V 3 Accelerometer ADXL345
    A (AS), A (SS)/ V 4 Magnetometer HMC5883L A (AS), A (SS)/ V 4 Temperature, humidity
    DHT11 0.3 mA (AS), A (SS)/ V 4 Ultrasonic HC-SR04 15 mA (AS), 2 mA (SS)/5 V 4
    Chemical sensor MQ2 160 mA (AS)/5 V 4 Accelerometer ADXL335 A/ V 5 Accelerometer,
    gyroscope MPU6050 3.7 mA (AS), A (SS)/ V 5 Accelerometer, gyroscope, magnetometer
    MPU9250 3.7 mA (AS), A (SS)/ V 7 Velocity sensor Doppler effect motion sensors
    60 mA (AS), 2 mA (SS)/ V 18.99 3.5.1. Sensing interface A sensor is typically
    a device that senses or measures physical changes in the surrounding environment,
    such as thermistors, light-dependent resistors, magnetic field-based sensors.
    A response is created whenever there is any change in the physical or chemical
    state of objects in the vicinity of the sensor. This response is measured and
    analyzed by the sensors [93]. We specifically discuss a few sensors used for a
    particular IoT application. We also list out the associated parameters required
    to achieve specific design objectives. Velocity This type of sensor measures consecutive
    positions at known intervals and computes the rate at which the movable object
    position varies at different times. Based on the working principle, velocity sensors
    can be of two types, e.g., linear and angular. A linear sensor measures the rectilinear
    motion, and an angular sensor measures the spin rate of an entity. Examples of
    velocity sensors include doppler-effect sensors, accelerometers [11], and gyroscopes.
    Such sensors mainly find applications in smart vehicles, traffic monitoring systems,
    smart cities [93]. Proximity The proximity sensor detects the location of a neighboring
    object without making any physical contact [94]. It emits infrared waves and senses
    the presence of any object by measuring the difference of signal indicating return
    status [95]. Its use can be inductive, capacitive, ultrasonic, photoelectric,
    and magnetic [96]. Moreover, it is employed in several places to count the number
    of cars and objects in applications like smart parking and smart homes. Position
    The position sensor uses a motion detection mechanism to determine whether humans
    or other objects are within a specific region. Examples of position sensors are
    rotary encoders and hall effect sensors. This type of sensor is used in typical
    hospital surveillance systems that track patients, nurses, and doctors [97]. In
    [98], Bluetooth low energy (BLE) is also utilized to monitor the real-time location
    of people working in an underground mine. Temperature Temperature sensor calculates
    the heat intensity of a person to assess ambient conditions using non-contact-based
    or contact-based mechanisms. The contact-based sensor works when it is in physical
    touch with the object. However, the non-contact-based sensor measures the temperature
    using the convection and radiation method [99]. Typical examples of temperature
    sensors include thermocouples and thermistors. Such sensors are used in smart
    irrigation, smart healthcare, and environment monitoring [100]. Chemical Chemical
    sensors measure the chemical composition of the overall environment. It operates
    by detecting chemical reactions or a set of chemicals. Some examples of chemical
    sensors are breath analyzers, olfactometers, and smoke detectors. These sensors
    are typically employed in different IoT applications like smart cities, smart
    buildings, smart irrigation, air quality monitoring [101], etc. Force The Force
    sensor detects the amount of stress and converts it into an output signal. Examples
    of such a sensor include the strain gauge and pressure switch. These sensors are
    applied to numerous IoT applications, e.g., smart buildings, intelligent construction,
    medical monitoring [102], etc. Light The light sensor is a passive device that
    receives energy from light and transforms this energy into an electrical signal
    [103]. Hence an external power source is not needed in this case. Infrared sensors,
    photodetectors, and flame detectors are some of their examples. Biomolecular Biomolecular
    sensor translates metabolic reactions into electrical signals. These sensors monitor
    several biological factors, e.g., tissue, antigen, antibodies, hemoglobin level,
    glucose, and nucleic acid. Examples of such sensors are pulse oximeters, electrocardiographs,
    and various others that measure the physical and chemical changes in the human
    body. Humidity The humidity sensor first picks up the amount of water vapor in
    the air and then converts it into an equivalent electrical signal. The humidity
    level can be calculated in different ways, e.g., absolute, relative, and mass
    ratio. Hygrometer, soil moisture indicator, temperature and humidity sensor (DHT11),
    and so on are some of its examples. 3.5.2. Actuation interface An actuator is
    an element of a device that drives the system by converting the available energy
    into physical movement. An actuator needs a control signal and an energy source
    to operate. For IoT applications, actuators are mainly two types, i.e., continuous
    and binary actuators. A relay is an example of a binary actuation interface with
    two stable states, either latched (ON) or unlatched (OFF). Binary actuators consume
    full power or no power in the ON and OFF state, respectively. A motor is an example
    of a continuous actuator, as it can rotate through an angle of 360°. The speed
    and direction of a motor are governed by a microcontroller with pulse width modulation
    (PWM) signal pins. Next, we discuss the operation of some commonly used actuators.
    Servo motor A servo motor includes a direct current (DC) motor with two wires,
    a gear line, a potentiometer, an integrated microcontroller IC and a shaft (output
    spine). The shaft is mounted at a particular angular position by sending a control
    signal to the servo via a microcontroller. However, it can rotate up to 180° only.
    The servo motor consumes power only in position control mode. Servo motor is used
    in different IoT devices such as dual-axis solar panels (self-sustainable IoT),
    smart positioning, e.g., in an elevator (smart infrastructure), movement of a
    smart robot, computer numerical control (CNC) machine, and automatic production
    in smart industries. Relay The relay is a programmable electrical switch to energize
    (ON) or de-energize (OFF) devices that consume high voltage, current, or both.
    Hence it is an intermediate device that connects high-voltage devices and microcontrollers.
    It comes with two sets of pins. One set is used for a microcontroller or low-voltage
    device, and the other is used for a high-voltage device. Relays are part of most
    IoT applications to control the devices based on the controlling signals from
    interfaced microcontrollers. One of the examples is smart irrigation to energize
    and de-energize the water pump based on the controlling signals. Stepper motor
    The DC voltage drives a stepper motor, and it rotates in discrete steps. Such
    a motor consists of several coils organized in a group known as ‘phase’. Only
    a single series phase is energized at a time, and the motor rotates one step.
    Its rotating position, speed, acceleration, and deceleration can be precisely
    controlled. Like the servo motor, the stepper motor is not limited in rotation.
    It requires additional hardware and power supply to complete a single rotation.
    A stepper motor consumes power to lock in and remain in position command. Its
    application domain is limited to automation, robotics, 3-D printer, and X-Y plotter.
    Hydraulic actuator A hydraulic actuator consists of a fluid engine that utilizes
    hydraulic power to enable mechanical operation. The mechanical movement is then
    transformed into linear, rotating, or oscillatory motion. Its application domain
    is restricted to single-axis movement of any heavy load, braking system, heavy
    load lifting/balancing system, and radial engines DC motor DC motor is the most
    commonly used actuator in electronics projects. It is available in different sizes
    to handle various activities. It consists of permanent magnets and loops of wire.
    When the device is switched ON, the loops induce a magnetic field, which interacts
    against the magnetic field of a permanent magnet. Pneumatic actuator The pneumatic
    actuator transforms the energy shaped by vacuum or compressed air in linear or
    rotational movement at high pressure. It converts pressure into force. Pneumatic
    actuators can generate a large amount of force from relatively minor variations
    in pressure. 3.5.3. Processing interface In processing and controlling interface,
    we list out different types of microcontrollers boards. The widely used microcontrollers
    in this layer are Arduino UNO [104], Raspberry Pi [105], and NodeMCU ESP8266 [106].
    The microcontrollers along with their processing speed, operating voltage, characteristics
    and the cost are tabulated in Table 4. Depending on the energy consumed by a sensor
    node, the following operational states have been defined, namely, active state
    (AS), sleep state (SS), ultra low power active state (ULPAS), low power active
    state (LPAS) and low power state (LPS). The most commonly used processor is MSP432.
    There are typically four low power modes (LPM) in MSP432 processor. LPM 3, LPM
    4 refer to deep sleep states, while LPM 3.5 and LPM 4.5 refer to stop or shut
    down state. The operational, ADC states of a MSP432 processor along with the current
    rating and cost are depicted in Table 5. Table 4. Comparison among different microcontroller
    boards in IoT. Device Processor Operating voltage/clock frequency/memory Key features
    Cost ($) Node-mcu ESP8266 Tensilica 32 3.3 V/80 MHz/SRAM 64 kB Inbuilt Wi-Fi module
    with PCB antenna. LoRa, GPS, GSM need external interface 7.88 nRF52840 12-bit
    ARM Cortex M4F processor 3.3 V/64 MHz/SRAM 256 kB Inbuilt bluetooth, BLE and Thread
    based communications protocols 24.95 Arduino Uno Atmega328P 5 V/16 MHz/flash:
    32 kB External interface 28.50 MSP432 32-bit ARM Cortex-M4F processor 3.3 V/120
    MHz/SRAM 256 kB Low power consumption and high-performance device with no inbuilt
    wireless protocols 45.99 Intel Galileo hardware board Single-Core 32-bit Intel
    Quark X1000 processor 3.3 V/400 MHz/SRAM 256 MB Good processor performance 70
    Raspberry Pi 3 B Quad-Core ARM cortex A53 5 V/1.2 GHz/system: 32 kB, Inbuilt bluetooth,
    Wi-Fi module 144.69 Table 5. Different sensing and ADC mode of MSP432 processor.
    Device mode Power mode Current consumption Operational state Sensor AM 80 A/MHz
    ULPAS Empty Cell LPAM 83 A @128 kHz AS Empty Cell LPM 3 600 nA SS Empty Cell LPM
    3.5 630 nA SS Empty Cell LPM 4 500 nA SS Empty Cell LPM 4.5 250 nA SS ADC ADC
    0 375 A @ 1 Mbps AS Empty Cell ADC 1 200 A @ 200 kbps AS AM: active mode, LPAM:
    low power active mode, LPM: low power mode, ADC: analog-to-digital converter.
    4. EH techniques: Different components required for self-sustainable IoT devices
    In this Section, commonly used sources of energy harvesting are discussed. Subsequently,
    EH transducers, standards and energy trackers are outlined. Next, we list the
    amount of power generated through harvesting, the cost of those harvesters, and
    the applications that utilize the effective harvested power. Frequent battery
    replacement in devices is a time-consuming and costly process, as it requires
    human intervention. Further, access to IoT devices is limited in remote locations.
    Additionally, many IoT devices are deployed in several IoT applications, making
    it difficult to run on battery throughout their life. To tackle these issues,
    harvesting energy is seen as a critical enabler technology that reduces dependence
    on batteries [35]. A battery life may be extended indefinitely subject to the
    fact that the converted electrical energy is more than the minimum energy requirement
    [107]. EH modules integrated with WSNs are referred to as energy-harvesting wireless
    sensor networks. These integrated modules collect energy by utilizing external
    sources, i.e., RF, solar, wind, vibration, and thermal. Since the harvested energy
    is stochastic and unstable, the transmission parameters of the WSN need dynamic
    adjustment to maintain a sustainable operation. The design methodology of energy-efficient
    IoT devices is explored in [108]. For energy harvesting, it is necessary to have
    a clear design framework to manage energy flow for self-sustainable IoT devices.
    The framework involves the generation process (source, transducer, and converter),
    storage mechanism, and managing the supply of harvested energy. The proposed mapping
    of EH-IoT and design framework are shown in Fig. 5. It will help the researchers
    and practitioners to build a system for a specific use case. Next, we discuss
    the different interfaces of Fig. 5 one by one. Download : Download high-res image
    (549KB) Download : Download full-size image Fig. 5. Block diagram of common EH
    interfaces, BW refers to bandwidth. 4.1. EH sources WSN is the fundamental building
    block of IoT. Moreover, considering the duty cycle, the battery life of WSN is
    lessened to just a few days as nodes remain active most of the time. Hence, battery
    life plays a significant role in overall energy consumption. Energy harvesting
    sources can be categorized into external and ambient. Further categorization and
    examples of these sources are shown in Fig. 6. The ambient sources are accessible
    within the surrounding region of energy harvesting objects. These sources can
    either be static or dynamic in nature [21]. A static source provides a predictable
    energy level, while a dynamic source generates energy randomly or periodically.
    The external sources emit energy to the nearby surroundings, such that the devices
    can harvest from this emission. Download : Download high-res image (206KB) Download
    : Download full-size image Fig. 6. Categories of common EH interfaces. 4.1.1.
    Light The photovoltaic (PV) effect is the standard method of extracting electrical
    energy from light sources. Based on the composition, PV cells are of the following
    type [91]: • Mono-crystalline: It offers 15%–24% efficiency, however, it is quite
    costly. • Poly-crystalline: This cell offers 14%–20.4% efficiency, and it is less
    costly as compared to the mono-crystalline one. • Thin-film: It is the cheapest
    cell and can absorb low-intensity light. However, it is less efficient 8%–13.2%.
    PV cells are commonly known as solar cells. Light energy can be harvested in the
    following IoT applications: environment monitoring, smart homes, and commercial
    buildings. There has been considerable research effort to power IoT networks using
    light energy in remote locations. The author in [109] employed an eco-sensing
    method that offers a wide range of light energy harvesting technology. It also
    shows that nodes in an IoT network react more to light energy than other sources,
    thus making the system highly efficient. To power a beacon node, the design methodology
    of a light-harvesting device is introduced in [110]. Similarly, in [111], a light-harvesting
    circuit has been proposed to provide sufficient power to the Bluetooth low-energy
    node. Although the aforementioned IoT network has good scope in terms of application,
    it cannot support an achievable information rate with high efficiency. In [112],
    a power controller is developed for a current-deprived voltage control oscillator
    (VCO). This controller generates a power of W, for a solar irradiance of lx. Light
    energy is stochastic and intermittent, which is very difficult to predict. So
    maintaining a continuous power flow using light energy requires adopting specific
    mechanisms or principles. The feedback principle is commonly employed in [112]
    to ensure a continuous power flow. For example, in [113], the authors achieved
    a continuous power flow with controlled voltage or current. An analytical connectivity
    model, a zero-energy IoT system, is proposed in [114], where the networking elements
    are solar-powered. Typically, at 25 °C ambient temperature, the solar panel can
    harvest about power. A solar panel has 15% conversion efficiency and converts
    the harvested power into 15 mW/cm2 power [115]. Only 70% of the harvested power
    is consumed at the PWM circuit’s output. The remaining harvested power leaks into
    the atmosphere. A cluster-based algorithm is proposed in [107], which enhances
    the utilization of harvested energy. Moreover, the different light intensity in
    indoor and outside environments results in different amount of harvested energy.
    The efficiency of harvested light in the indoor environment is of the one produced
    in the outdoor environment. Several authors have presented analytical and experimental
    models considering light harvesting for indoor and outdoor environments. A novel
    framework that generates power using PV cells is presented for the indoor environment
    in [116]. For indoor settings, [117] reported W power using an artificial source
    of light energy at different intensities. An EH framework for smart building using
    PV is developed in [24] that generates V output voltage with mA pulse current
    in an indoor environment. Apart from this, the authors in [118] proposed an energy
    estimation algorithm to analyze the random behavior of light intensity in the
    indoor environment. It generates a high-efficient end node harvesting device that
    produces 0.8% error while predicting energy availability in one day. Authors in
    [119] compared wireless power transfer (WPT) and solar energy sources. Interestingly,
    the authors proposed a hybrid source that combines the merits of the aforementioned
    sources. 4.1.2. Thermal Unlike solar energy, thermal energy is available indoors
    and outdoors. Thermal energy can be collected by an electrical and mechanical
    source and converted into consumable electrical energy. The heat from various
    sources, including sunlight, engine exhaustion, indoor temperature, temperature
    difference, and even body heat, can be counted as a source. The generation method
    is cost-effective and efficient as it generates electricity from the abovementioned
    sources. However, the energy produced using thermal sources needs better energy
    conversion efficiency [90]. It can be made possible using different harvesters,
    such as lead zirconate titanate (PZT), biochip, nanomaterial, and cloth-printed
    harvesters, which are commercially available. Thermoelectric (TE) and pyroelectric
    (PE) methods are the most widely used thermal harvesters. For a thermoelectric
    generator, an -type junction is used. This junction is connected to the heating
    material. Aluminum oxide and silicon wafers [120] are the most widely used heating
    materials because of their high conductivity and low coefficient of thermal expansion.
    The transmission of carriers across the junction produces the necessary potential
    difference and is sent to the voltage controller and converter. The voltage thus
    obtained can be increased using a large number of junctions between heating materials.
    Finally, the increased DC voltage can be transmitted wirelessly to one or more
    IoT sensors. On the other hand, the pyroelectric solution uses a special crystal
    material that generates considerable energy under temperature fluctuation in the
    environment. The design of the thermal transducer is not simply restricted to
    the approaches of TE and PE. However, as with many other thermal harvesters, other
    proposed transducers are described in Table 6. Table 6. Comparison of different
    thermal transducers. Harvesting technology Characteristics Average power/efficiency
    Application Cost ($) TE generator (single inductor) [121] Low thermal resistance,
    high efficiency 13 W/ Wearable IoT 1.35 mTE generator (coupled inductor) High
    thermal resistance, low efficiency 14 W/ Wearable IoT 3.02 Biochip [122] Light
    weight, high efficiency 80%. 42–183 W Real time monitoring 4.61 Wearable thermocoupler
    [123] Light weight, highly durable, flexible, easy to fabricate 10 mV/15 nW Environment
    monitoring 8.30 TE, PE based printed fabric [124] Flexible technology, durable
    21 nW–23.9 mW @ 22.5 °C. Wearable IoT 11.70 Mechanical thermal switch [125] Yields
    maximum efficiency Low power WSN, ISN 24.44 PE generator [126] Simple circuit,
    medium efficiency 0.8–2.4 mW for 5 and 20 area ISN using IR based detection NA
    WSN: Wireless sensing networks, ISN: IoT sensing networks. 4.1.3. RF To fulfill
    the increasing energy demand of IoT networks, energy harvesting through RF signals
    (RF-EH) evolved as an alternative technique that offers reduced operational cost
    and attains a sustainable framework. Instead of using conventional energy sources
    (power grid), RF signals are employed to recharge the batteries of IoT devices.
    Typically, ambient EM sources like cellular, microwave, and infrared (IR) radiation
    harvest the RF energy using high-gain antennas. The harvested energy is processed,
    rectified, and stored for future use. Rectenna, voltage multiplier, and storage-control
    interfaces are the building blocks of an RF-EH module. The rectenna block consists
    of a dipole or a patch antenna, along with a rectifier (Schottky diodes) that
    performs AC-DC conversion. A reconfigurable rectifier integrated with double-stage
    controlled maximum power point tracking (MPPT) is proposed in [127] to have a
    highly efficient energy harvesting node at dB. The peak power conversion efficiency
    can be written as (1) where is the DC power at output of rectifier and is the
    harvested rectifier’s power at the input. An optimal dual-stage RF-EH circuit
    is fabricated in [128]. The work in [129] discusses an ambient ultrahigh-frequency
    (UHF) enabled energy harvesting technique. The energy density of RF-EH is very
    low in comparison to other sources, as investigated in [128], [129]. Hence a voltage
    multiplier is utilized for further enhancing the voltage level [130]. The storage
    and control interface is responsible for the persistent power flow to the endpoint
    devices [131]. Several RF harvesters are classified according to their efficiencies
    and are studied in [132]. In [133], the authors reported energy harvesting strategies
    using single and multiple sources. There has been considerable research on low
    power transfer to IoT end users in the past few years, specifically where replenishment
    of batteries is difficult [134]. With a focus on WPT, some recent literature enhanced
    performance and optimized design parameters to increase the energy efficiency
    of the harvested node [135], [136]. However, the WPT mechanism requires a fixed
    charging point, and there is a limit on power density as well. Recently, the utilization
    of RF signals to deliver energy and convey information signals has received considerable
    research attention. This technique is referred to as simultaneous wireless power
    and information transfer (SWIPT). The authors in [137], [138], [139] discussed
    resource allocation and performance analysis of different SWIPT-aided systems.
    Moreover, the authors in [140] discussed the time division strategy for power
    and information transfer (see Table 7). Table 7. Comparison of different RF transducers.
    Harvesting technology Characteristics Average power/efficiency Application Cost
    ($) Dipole antenna-based UHF [141] Long distance communication, increased antenna
    gain and sensitivity High Large-scale IoT 33.85 Air gap-based power controlled
    RF [142] Small size, high gain ISM band antenna @ 5 GHz Low Cellular IoT 65 Cellular
    RF [140], [143] Low cost solution High Cellular IoT 65 Adaptive MAC based RF [144]
    High QoS, complicated circuit, highly responsive and reliable High Variable load
    IoT 360.02 Embedded RF [129] Light weight, high gain antenna, harvests power from
    UHF TV signal 1.8 W/low Smart-skin IoT NA Game theory and stochastic geometry
    based [134] High gain, early power prediction from stochastic sources High Next
    generation IoT NA 4.2. Energy tracker In the modern age of Intelligent internet
    networks, IoT has incorporated several sensors, actuators, microcontrollers, communication
    devices, and so on. These devices mostly remain operational, resulting in limited
    battery life for a few days. Therefore, batteries play a significant part in ensuring
    sustainability in smart applications. However, most of the harvested energy is
    wasted due to the losses in the circuits or not managing it properly. As a result,
    not all the harvested energy is stored in the batteries. It can be prevented by
    keeping track of the energy from the harvesting stage to the storage stage. In
    this context, authors in [145] employed various methods to disseminate the significance
    of energy trackers in energy harvesting systems. Some researchers focused on detecting
    the sun’s motion to improve the efficiency of harvested energy. In contrast, the
    authors of [146] presented an animal tracking-based thermal harvesting system
    based on the temperature differential between the animal’s body and the immediate
    surroundings. This survey paper focused on tracking the harvesting energy after
    the transducers stage so that the energy flow to the storage interface is efficiently
    managed. Some of the existing available energy trackers are depicted in Table
    8. 4.2.1. Solar charger controller The overall output voltage of the solar panel
    is typically quite low. As a result, researchers have proposed different charge
    control mechanisms to achieve an efficient harvesting framework, such as Pulse
    width modulation (PWM) and maximum power point tracking (MPPT) [152]. PWM controller
    can handle the flow of current from the solar panel with reduced efficiency due
    to the discontinuity in the harvested energy. It is frequently used for low-powered
    devices [153]. As a result, it can contribute to the sustainability of IoT devices
    with lower efficiency. On the other hand, MPPT has been identified as a charge
    controller circuit that optimally manages the harvested energy from solar panels
    to storage interfaces efficiently. It tracks voltage and maximum power using the
    most commonly used perturbation and observation (P&O) algorithm. In [154], the
    harvested energy is provided to a boost converter (DC-DC) using MPPT to improve
    the conversion efficiency. The authors obtained an analytical model for a harvester
    in [155] using MPPT and achieved 96% efficiency. A novel wearable fitness monitoring
    device powered by solar cells is developed in [156]. The harvesting efficiency
    of the system ( ) is computed as (2) where , are the efficiency of the conversion
    interface and MPPT respectively. Table 8. Comparison of different energy tracker
    circuits. Component Product/Type Power Operating voltage Cost ($) RF Tracker [147]
    Avagngo HSMS2862/Voltage doubler NA Threshold: V– V RF Tracker [148] Skyword SMS
    /Single series diode based voltage multuplier NA Threshold: V Solar tracker [149]
    Loom solar Fusion/PWM W V– V 6.15 Solar tracker [150] Amici smart/Buck-Boost NA
    Input: V – V Output: V– V Solar tracker [151] Sensata (PT-20-10)/MPPT W V – V
    4.2.2. Rectifier/voltage multiplier topology It has been noticed that RF energy
    received from ambient sources needs a better power density to make the IoT device
    sustainable. As a result, power converters or amplifier circuits are required
    to drive the low-powered DC load. It can be made feasible by incorporating the
    rectifiers with capacitors and diodes to form the multi-stage voltage multipliers
    circuits. So that voltage gain can be increased at the output of the RF energy
    harvester. In [157], authors designed multi-stage circuits such as Dickson and
    Cockcroft–Walton voltage multipliers to obtain high-voltage at the output. These
    circuits mainly act as energy trackers or DC-DC converters to enhance the harvested
    voltage at the output. In this way, RF energy is properly managed from the transmitter
    end to the storage interface. 4.3. Storage interface This is a part of the power
    management system. After energy is harvested, it needs to be utilized at the end
    node application with the help of storage interface device. A number of storage
    interfaces are available, however, we list out only the most commonly used ones
    as follows. 4.3.1. Rechargeable batteries This type of battery contains a large
    number of capacitors and has high energy density. However, it is hardly used for
    storage as it has a low depth-of-discharge (DoD) rating. Moreover, there are numerous
    ways to select a battery for a self-sustainable IoT network, such as battery life
    expectancy, the necessity for rapid charging cycles, size, and weight, which are
    the most crucial factors influencing the decision [158]. Although rechargeable
    batteries/secondary batteries have less capacity and temperature stability than
    primary batteries, they do not require periodic maintenance and replacement at
    complete discharge. The most popular battery for EH-IoT is lithium-ion. Depending
    on the operating cycle, the total efficiency of battery storage ranges from 60%
    to 80%. These batteries do not operate well in low temperatures due to increased
    internal resistance, resulting in a self-discharge [159]. However, there are Alkaline
    MnO batteries available with a low self-discharge rate [160]. These batteries
    are used in the IoT applications, such as IoT monitoring applications that require
    data monitoring even for smaller intervals of time with high precision (smart
    healthcare, smart home, and smart industries) at a higher cost. Apart from this,
    Lead-Acid batteries are used in IoT applications that require data monitoring
    with larger sampling intervals and are mainly used in environmental monitoring
    applications. These batteries are inexpensive, highly reliable, and efficient,
    with limited cycle capacity and poor performance under adverse circumstances [161].
    4.3.2. Super-capacitors These are high-energy-density batteries with high DoD
    ratings. Supercapacitor discharges on its own, hence it cannot store energy for
    a longer duration [162]. Several studies revealed that the self-discharging nature
    of the supercapacitors is due to leakage and fast charging and can be compensated
    by charging it over a longer period of time [163]. The severity of the self-discharging
    problem is not only determined by the device capacity but also differs among manufacturers
    and even among specific production batches. This results from variations in the
    materials used, the manufacturing process, and production irregularities. As a
    result, selecting a reliable supercapacitor for appropriate IoT applications is
    still a significant issue [164]. It is mostly employed in applications requiring
    a power source with a shorter charging time and a wider operational temperature
    range and lacks involvement of toxic heavy metals, such as smart healthcare, smart
    irrigation, and smart agriculture. 4.3.3. Recent advancement in energy storage
    batteries The development of hybrid storage devices and novel materials enables
    a breakthrough in advancing energy storage interfaces. In [165], a hybrid storage
    system that increases operational duration is developed by integrating rechargeable
    batteries with supercapacitors. A unique ionic liquid combination is employed
    as an electrolyte for supercapacitor applications to enable IoT applications that
    demand a large working temperature range (60 to 80 ) and a low charging/discharging
    rate [166]. In addition, several IoT applications (smart factories, smart automobiles,
    etc.) need a high voltage than a large working temperature and life span. So,
    asymmetric capacitors were developed by fusing several conducting polymers (ECPs),
    amorphous manganese dioxide (a-MnO ), and activated carbon. These capacitors offer
    two times the power of conventional supercapacitors [167]. Additionally, the storage
    capacity of supercapacitors and sodium-ion batteries is increased by using graphene-based
    materials [168]. Furthermore, the energy density and safety of rechargeable batteries
    are improved by using Lithium-ion batteries with solid-state electrolytes at a
    higher cost. However, some IoT applications require high capacity, high voltage,
    and low cost. To achieve this, authors in [169] develop carbon monoxide-free layered
    cathode material. Apart from this, different types of inorganic materials such
    as lithium-polymer [170], lithium nitride [171], perovskite [172], and sulfide
    [173] have used in solid-state batteries to extend the lifetime of the storage
    interface. 5. The energy saving and resource constrained optimizers for sustainable
    IoT operations Trillions of sensors, actuators, microcontrollers, and communication
    interfaces will be deployed in the atmosphere during the emerging IoT era. Such
    interfaces will be using power from energy harvesting sources via storage interfaces
    and energy trackers. So, once the energy is harvested and stored efficiently with
    the help of energy trackers, it needs to be used properly at IoT device to keep
    it sustainable for ubiquitous operations. The energy stored for sustainable IoT
    devices can be utilized effectively by energy-saving or resource-optimizer protocols.
    Energy saving and resource optimization in EH-IoT is a primary concern because
    it incorporates a large number of resource-constrained devices that come with
    diverse QoS requirements. Moreover, different researchers have designed different
    decision-making topologies, algorithms, standards, and conceptual designs for
    the optimal use of harvested and stored energy [174]. Here, we will discuss the
    current research trends and challenges associated with decision-making tasks in
    this process flow. 5.1. Optimizing device power Devices play a crucial role in
    managing the power of IoT networks. Depending on the flow of data, a typical node
    in an IoT network is of two types i.e., the source and the sink. IoT combines
    different sources and sinks that can communicate without human intervention [175].
    For example, when the source and sink devices are connected via an RF chain, the
    transmit power of the RF network should be minimized [176], [177], [178]. In addition,
    if the connectivity between the source and sink fails, the data packets are lost.
    Retransmission of the same packet consumes a considerable amount of power. Cognitive
    radio (CR) can overcome these challenges [113], [177]. This technology monitors
    the wireless spectrum and identifies the holes (unoccupied channels). Design and
    optimization of a CR-assisted framework that ensures spectrum efficiency can be
    found in [113], [178]. Joint optimization of computational tasks and the energy
    transfer parameters employed with the design objective of increasing the network
    lifetime is discussed in [179]. To adjust the device’s duty cycle and dynamic
    transmission power, an opportunistic routing policy is proposed in [180]. 5.2.
    Data optimization Research articles show that SANET, along with optimized data
    processors, would drive the next-generation technology in the renewable energy
    sector to make the existing technologies sustainable [181]. Data optimization
    is the most crucial aspect of the energy-saving process since the consolidated
    data requires a smaller setup for management. To optimize data rate and data collection
    in cognitive radio and D2D communication, different modulation and coding schemes
    are studied in [182], [183], [184]. This ensures energy-efficient communication
    from the data aggregator to other nodes. Instead of transmitting the original
    data, only the compressed data is communicated. Hadoop is another data-management
    framework that allows decentralized storage and processing of data at the bit
    level. This framework consists of clusters of systems utilizing simpler algorithms.
    Moreover, several authors have explored the compressive sensing method to analyze
    performance metrics, e.g., EE, security, reliability, etc. [185], [186]. These
    works explain how the data at the receiving end is extracted from the compressed
    data. Clustering is another method to efficiently transmit consolidated data to
    the central server [187]. There are many research studies where authors have discussed
    the clustering method for various sensors [188]. In [189], the authors have shown
    how to capture remote data using a battery-driven wireless IoT. IoT systems clock
    and log data are coordinated using network time protocol (NTP) and data logger,
    respectively. The authors in [189] has provided a statistical model to predict
    the battery’s charging and discharging rate and analyze energy consumption at
    IoT nodes. The average current is obtained as follows (3) where , denote the instantaneous
    current and the number of data samples received through the entire time slot.
    Battery life, , can be subsequently calculated as (4) where denotes the battery
    capacity. 5.3. Time constrained power optimization In order to optimize power,
    time constraints play a vital role in the synchronization process, sleep mode,
    standby, and idle state of the sensing node. While the sensor is not in use, turning
    it off is better to save power. To manage energy, different time limits are set
    for different methods, namely, sleep timing, traffic monitoring [190], and appropriate
    duty cycle. In [191], [192], devices are put in sleep mode after completing their
    tasks, as sleep mode consumes negligible power. MAC duty cycling is another strategy
    that puts the device into idle mode until the next process cycle begins. This
    method is also energy efficient [193], [194]. 5.4. Trade-off among bandwidth,
    range and power consumption A typical IoT network must consider trade-offs on
    energy usage, bandwidth, and coverage area. The design objectives are to maximize
    the coverage area, minimize transmit power and improve the bandwidth [195]. A
    long-range (1.8 km), multi-hop, and self-powered IoT framework is proposed in
    [196] to be applied in agriculture. The network delivers an average power consumption
    of W at a -min interval for a sensor node [197]. In another work, Bluetooth is
    used to achieve long-range support, and the framework is built on BQ25570 IC.
    It has the following applications, e.g. battery charging and voltage conditioning
    [198]. 5.5. Standardization for EH-IoT This standardization is crucial for achieving
    interoperability and compatibility among self-sustainable IoT devices. It will
    help in optimizing the IoT resources by ensuring that they all follow the same
    set of rules and protocols by eradicating external peripheral interfaces. So,
    to incorporate all the EH-IoT under one platform, the International electrotechnical
    commission (IEC) has laid out standards for testing and evaluating different types
    of transducer and wireless protocols for green energy solutions. Some are discussed
    below for energy harvesting transducers and self-sustainable IoT communication
    protocols. 5.5.1. EH transducer Leading standardization development organizations
    (SDOs) have made the efforts to standardize EH transducers [199]. These standards
    are discussed in Table 9. Table 9. EH-IoT transducers standardization. Transducer
    Energy source Standard Application Mechanical Triboelectric IEC , IEC Agriculture,
    infrastructure, home appliances Hybrid (mechanical, kinetic) Piezoelectric IEC
    , IEC , IEC Healthcare, automobile EM Electromagnetic IEC , IEC Smart grid, RFID,
    VANET Thermal Thermoelectric IEC , IEC Healthcare, industry, environment monitoring
    5.5.2. Wireless protocol The international organization for standardization (ISO)
    introduced standards for wireless networking protocols to improve interoperability.
    Interoperable wireless protocols for low-power devices are studied in [200], [201].
    Table 10 mentions some of the standards released by ISO and IEC. These EH-IoT
    devices conform to short-packet systems using amplitude modulation (AM) and frequency
    modulation (FM) for IoT operations as shown in Table 10. Table 10. Wireless EH-IoT
    Standardization based on modulation. Parameters Standardization Empty Cell ISO/IEC
    14543-3-10 ISO/IEC 14541-3-11 Modulation scheme AM FM Frequency MHz MHz Energy
    efficiency More Less Antenna dimension Large Smaller Coverage Long distance Short
    distance Table 11. Classification of IoT devices based to their application. Application
    Sensors Actuators Communication protocol EH source Smart agriculture [202], [203]
    Temperature, humidity, chemical, proximity, position DC pump, relay WiMAX, cellular,
    LoRa, SigFox Light Smart city [204], [205] Velocity, light, pressure, IR, accelerometer,
    position, temperature, proximity, humidity Relay, solenoid valve, DC motor WiMAX,
    cellular, LoRa, 6LowPAN Light, RF Smart environment [206], [207], [208] Light,
    temperature, humidity, chemical, gyroscope, biomolecular, accelerometer, rain
    Relay, DC motor WiMAX, Wi-Fi, cellular, LoRa Light, RF, thermal Smart healthcare
    [209], [210] Light, gyroscope, heartbeat monitor, biomolecular, chemical, accelerometer,
    pressure Pneumatic cylinder, buzzer Zigbee, Bluetooth, BLE, SigFox RF Smart industry
    [211], [212] Light, gyroscope, chemical, magneto, accelerometer, pressure, position
    DC motor, relay, pneumatic Bluetooth, BLE, LoRa, RFID, NFC EM, RF, light, thermal
    Smart security [213], [214] Light, gyroscope, magneto, accelerometer, temperature,
    IR Buzzer, pneumatic, relay Cellular, 6LowPAN, Z-wave, Zigbee, SigFox EM,RF, thermal
    Smart transport [215], [216], [217] Gyroscope, temperature, pressure, accelerometer,
    motion, IR, magneto Pneumatic, hydraulic Zigbee, cellular, BLE, LoRa Light, RF,
    EM Smart water management [218], [219], [220] Temperature, humidity, flow, hall
    magnetic, water quality DC pump, relay, hydraulic actuator, solenoid valves Wi-Fi,
    cellular, LoRa Light, RF DC: Direct Current, RFID: radio frequency identification,
    IR: infrared, RF: radio frequency, EM: electro-magnetic, NFC: near field communication,
    BLE: Bluetooth low energy. 6. IoT application mapping for sustainable IoT devices
    Upon identifying the various sections (Section 1 to Section 5), it becomes apparent
    that different energy harvesting sources can power the IoT devices for various
    IoT applications as shown in Table 11. The introduction section has offered a
    brief discussion on IoT applications for readers with the scope of establishing
    the relation among IoT applications, devices and energy harvesting interfaces.
    In this section, we investigate the comprehensive discussion of the IoT applications
    based on the devices of different IoT layers and energy harvesting interfaces
    that can be utilized. • Smart Agriculture: Smart agriculture plays a significant
    role in enhancing crop cultivation by incorporating different sensing and actuation
    interfaces, including temperature, humidity, chemicals, and many more. These sensors
    detect the physical changes in the surrounding environment of the crops, soils,
    flowers, and plants. Additionally, various chemical sensors are used to determine
    the potential of hydrogen (PH) level and nutrient properties of the soils to optimize
    agriculture practices. Some researchers also employed proximity and position sensors
    to detect the animals’ movement in the fields [203]. The sensing data also requires
    actuation actions, which are usually carried out by solenoid valves, DC pumps,
    AC pumps, and relays. These actuation actions can be taken remotely with the help
    of communications protocols that can be operated up to a longer distance, i.e.,
    LoRa, Cellular, and SigFox [221], [222]. All these devices require significant
    power for their operations to run smoothly. Among all the sources, various researchers
    identified light energy as the most viable source to generate a considerable amount
    of electricity to be used in smart agriculture practices [202]. • Smart city:
    The smart city is conceptualized as a network that incorporates many sensors,
    actuators, and communication devices. The utilization of the devices in smart
    city can vary significantly based on day-to-day requirements. In some scenarios,
    the focus of smartness may be ensuring safety during natural calamities and emergencies
    such as earthquakes, floods, or fires [223]. In other situations, proper management
    of parking, lighting, waste management, the smart grid, smart sanitation, and
    many more. So smart cities incorporate almost all ranges of sensors and actuators
    [202], [203], [224], as shown in Table 11. It also employs a wide range of communication
    protocols in most scenarios to exchange real-time data up to a distance of several
    kilometers (Kms). These communication modules and actuators require power. As
    a result, they are powered by solar energy by controlling the peak of electrical
    energy consumption in the hottest and coldest months [225]. On the other hand,
    sensors used in the indoor area of smart cities are powered by RF sources [226].
    • Smart environment: Weather conditions significantly influence numerous applications,
    including agriculture, irrigation, and traffic monitoring. These applications
    mainly incorporate sensors that can measure physical and chemical changes in the
    environment. The light, temperature, humidity, biomolecules, and rain sensors
    are utilized to detect physical changes in the surroundings, such as rainfall,
    forest fires, solar irradiance, and air pollution levels. Additionally, sensors
    such as motion, gyroscopes, and accelerometers are used in the early detection
    of catastrophes in smart environments [227], [228], [229]. These sensed values
    typically trigger relays to manage external actions and DC motors using PWM signals
    to control the speed of devices like fire-avoidance robots to avoid catastrophe.
    The smart environment mainly employs communication protocols such as Wi-Fi, WiMAX,
    Cellular, and LoRa to exchange information in metropolitan and wide-area networks.
    The energy from light and thermal sources provides adequate power to the sensors
    and communication devices employed in smart environments [206], [208]. Additionally,
    RF sources are usually used to power the sensors in highly populated locations
    using radio frequency generators for the device’s ubiquitous operations in a smart
    environment to prevent disaster [207]. • Smart heath care: Smart health care,
    or the Internet of medical things, is the systematic implementation mode that
    links healthcare services to the IoT via various sensors, actuators, and acceptable
    communication protocols. Smart health care predominantly requires sensors such
    as heartbeat, biomolecular, chemical, and gyroscopes to monitor the physical and
    chemical changes in the human body, like heartbeat, muscle movement, blood pressure,
    hemoglobin content, oxygen level, and many more. On the other hand, the wearable
    sensors may also be mounted to the human’s skin or tied to the clothes, which
    work by reading the values with RF signals. If sensor readings fall below safe
    limits or a person’s health enters a critical state, the nearby hospital authority
    is alerted using short-range communication protocols such as Bluetooth, BLE, and
    Zigbee [209], [210]. It is also notified at a longer distance using Cellular communication
    protocols [230]. Additional actuators, such as buzzers, also alert the individual
    to take precautions. This application mainly relies on short-range network communication
    protocols that operate by harvesting the energy from radio frequency [231], which
    usually has low bandwidth and does not harm the human body. • Smart Industry:
    The idea of IoT has rapidly developed in the industrial sector over recent years
    to revolutionize it with Industry 4.0. Its presence is in almost all business,
    private, and government sectors, like smart schools, hospitals, shopping complexes,
    grids, offices, and retail outlets [211]. Due to the vast amount of IoT applications
    in smart industries, there is no limit to incorporating the sensing, actuation,
    and communication modules as shown in Table 11. It involves various sensors and
    actuators that can help monitor and automate the decision-making process, leading
    to more efficient, faster, and cost-effective production. Moreover, it incorporates
    short-range (BLE 5.0, Zigbee, RFID, Z-wave WiFi, and Zigbee) and wide-range communication
    devices (LoRa, SigFox, and Cellular) to provide interoperability within and between
    the different sectors by enabling smooth operations [212]. In order to power this
    extensive set of devices, all feasible energy sources are utilized to provide
    uninterrupted power to various devices at different layers. Solar, thermal, and
    electromagnetic (EM) sources are the most commonly employed sources in the industry.
    Authors in [232], [233] designed self-powered sensors using a thermally conductive
    pyroelectric block for industrial applications. Additionally, authors in [234],
    [235] have employed EM and solar sources to power the IoT devices used in the
    industry. Finally, authors in [236] focused on providing low power to the IoT
    devices in various industrial sectors using a microstrip patch antenna to regulate
    the operations of different IoT devices using the energy emitted by the mobile
    base station and the WiFi transmitter. • Smart Security: In recent years, there
    has been a sudden exponential growth of security systems in our daily lives. These
    systems typically involve various sensors, such as an accelerometer, proximity,
    gyroscope, and infrared (IR) sensors, that can detect the presence of any unauthorized
    individual. It also employs other sensors that may detect chemical changes, such
    as harmful gas emissions, radiation levels increase, and leakages of deadly substances
    in the nearby region [237]. Based on these sensors, actuators such as a buzzer,
    pneumatic cylinders, and relays are most commonly employed to turn off the door
    and produce alarm sounds in case of a security breach. These applications necessitate
    using both short-range and long-range communications protocols for monitoring
    from remote locations and having connections among the devices with short-range
    communication devices. For seamless functionality in a smart security system,
    authors in [238] implemented a solar energy harvesting unit in a -storey building
    to detect the presence of any unauthorized individual. Apart from this, the authors
    in [239] implemented an RF energy harvesting source to establish the connection
    among the sensors using short-range communications protocols to detect the presence
    of any harmful gases in the surroundings. • Smart transport: In recent times,
    advancements in communication modules and several devices at different IoT layers
    have significantly enhanced transportation, which aims to improve driver safety,
    reduce traffic congestion, etc. These advancements incorporate motion sensors,
    gyroscopes, infrared sensors, GPS, and camera sensors to monitor the location
    and behaviors of drivers and passengers [215]. In addition, continuous monitoring
    is ensured through the use of temperature, pressure, and oxygen sensors within
    the vehicle to safeguard the driver. In order to enhance the comfortable experience
    of the driver, hydraulic actuators are utilized in various parts of the vehicles.
    Moreover, the pneumatic cylinder in vehicles using the devices may avoid injuries
    in accidents or mishaps. The increasing number of vehicles on the road poses a
    collision risk, which mandates the requirement of communication devices among
    vehicles. It incorporates all long-range communication protocols to identify the
    traffic pattern on the road within certain distances. Moreover, it also incorporates
    BLE, Bluetooth, and Zigbee to establish communication among the different devices
    inside the vehicle [216]. Power management in smart transportation is still a
    significant issue for many researchers due to continuous battery replacement and
    fuel consumption. To address this, authors in [217] integrate the piezoelectric
    device into the tires of the vehicles, through which driving-induced mechanical
    energy is converted to electric energy. Apart from this, several studies [240],
    [241], [242] also focused on incorporating power into smart vehicles using the
    highly efficient solar cell module to increase the power supply by up to 30%.
    7. Future scope Considering the self-sustainable IoT device based on the layers
    architecture design for smart applications, we have emphasized the layer-wise
    issues of implementing sustainability. It is employed in sensing, actuation, processing,
    and a transmission interface by utilizing energy sources, energy transducers,
    energy management, energy tracking, energy storage, and energy optimizers. Based
    on that, we have outlined the potential areas for further study in developing
    self-sustaining IoT systems. 7.1. Sustainable smart network With the rapid deployment
    of IoT nodes, the data generated by such nodes are also anticipated to grow manifold.
    These data operations necessitated external hardware assistance for storage, which
    will be an expense for power and outlay. This extraneous requirement will pose
    a threat to sustainable IoT operations due to the increase in power consumption.
    Moreover, traditional data collection and processing techniques might fail to
    handle, analyze and extract information at that scale for a long time with a fixed
    energy storage device. Additional energy harvesting devices and storage interfaces
    must be included in the existing EH-IoT system design to address this issue. Further,
    different IoT devices generate heterogeneous data, which is difficult to be processed
    using an existing processing interface. An intelligent IoT network works on the
    premise of learning from the pattern of past data and predicting data for future
    instances. Thus the system’s performance can be enhanced through better detection
    accuracy [243], [244]. Thus the cost of a storage interface and communication
    resources can be minimized by limiting the number of re-transmissions. However,
    machine algorithms to classify problems related to self-sustainable IoT devices
    are still in their infancy [245] to connect it to layered architecture design,
    and significant research scope exists in this area. In a large-scale self-sustainable
    IoT network, how to analyze collected data through deep learning techniques to
    obtain design insights is an emerging field. 7.2. Secure energy harvesting design
    A self-sustainable IoT device needs to collect energy from different available
    sources in close proximity for ubiquitous operations. However, this energy harvesting
    task can raise security concerns as attackers can produce unnecessary radiation
    as the malware energy in the processing system when extracting power from the
    RF source. So malware exposed to electricity generation data from unwanted radiation
    may cause significant privacy issues for users. It may sometimes damage the energy
    storage interface without proper protection. On the other hand, if an intruder
    knows the system’s harvesting pattern, it might launch different types of attacks
    at the user-end, namely, time synchronization, replay, dynamic data injections,
    brute force attack, man in middle attack or can generate unwanted signals. On
    the other hand, communication among IoT devices may also raise privacy concerns
    for users. Extensive sensitive data is stored, processed, and transmitted by sustainable
    IoT nodes powered by the energy storage interface. If this harvested energy is
    continuously used to transmit information vulnerable to replay and denial of service
    attacks, the stored energy will drain more quickly. Although technologies like
    Physical layer security (PLS) and Blockchain [246], [247] are integrated with
    SWIPT to form an IoT-based cooperative energy harvesting network, the issue of
    energy outages still needs to be addressed effectively. 7.3. Trade-off among energy
    consumption, bandwidth and coverage area Certain IoT communication modules like
    LoRa, WiFi, SigFox, and cellular devices can communicate with each other at a
    long distance. Managing power for such long-distance IoT communication devices
    is crucial in EH. However, the process of storing harvested energy for a longer
    time duration is a challenge in itself. Hence providing the required energy to
    the module to cover a wide area while maintaining low power consumption is difficult.
    A decrease in bandwidth leads to a decrease in the data rate. Efficient power
    management involving a the trade-off among energy consumption, bandwidth, and
    coverage area poses a design challenge. 7.4. Energy supply design for sporadic
    source and hazardous material During the daytime, the solar power supply works
    effectively. However, it is not the case at night. Solar supply uses PV cells
    to convert light into energy. Nonetheless, solar supply requires more space. Energy-intensive
    devices like laptops and smart electric cars consume more power to perform for
    a long duration. Nevertheless, small-scale PVs play a significant role in calculators,
    watches, and small devices. A typical example is the monitoring and identifying
    faults in the power distribution system using solar panels [248]. Furthermore,
    solar irradiance is stochastic in nature, with seasonal and temporal variations.
    As a result, depending only on solar energy harvesting for self-sustaining IoT
    system design may result in energy outages, where energy harvested by the solar
    panel will be less than the energy consumed by IoT devices. On the other hand,
    EH can be achieved using an RF field with a certain signal frequency. The potential
    safety threats must be considered in case more RF fields are used. So it is challenging
    to design efficient PV cells and maintain a safe level of exposure to RF intensities.
    7.5. Storage unit 7.5.1. Data storage While designing the system for a specific
    IoT application, the main challenge lies in cleaning, processing, and interpreting
    the massive data collected by the sensors. Storing bulky data is another challenge.
    Depending on the self-sustainable IoT application, an extensive data acquisition
    system might be needed, which calls for a storage unit with a large capacity.
    The storage data of the IoT sensor for smart weather monitoring, intelligent transportation
    system, and many other smart applications require data to be sensed at small sampling
    intervals. When data is sensed continuously for a longer period of time with smaller
    sample intervals, a more significant amount of energy and storage is required.
    Some researchers have used big data storage systems as an enabling architecture.
    However, the problem of storing and sensing data over a longer period of time
    with a small sampling interval still needs to be addressed. 7.5.2. Power storage
    Due to the rapid charge or discharge cycles, a rechargeable battery is insufficient
    for energy storage. Also, a rechargeable battery is made up of a large number
    of capacitors, which occupies space. For example, a nickel-cadmium (Ni-Cd) battery
    has got higher energy capacity but a fast discharge rate. On the other hand, lithium-ion
    and nickel metal hybrid batteries come with higher energy density and a lower
    discharge rate. However, due to their highly combustible nature, they do not provide
    a viable choice for IoT applications. Solid-state batteries come with a minimum
    rate of self-discharge and are eco-friendly. However, their use in IoT could be
    improved, as they come at a high price. Since super-capacitors have a large energy
    capacity, they may be considered as one of the alternative possibilities for EH-IoT.
    However, because of its auto-draining rate, it is not an ideal fit for EH-IoT
    applications. A low-cost battery with a high energy consumption volume and low
    discharge rate poses a design challenge. Different storage units are outlined
    in Section 4.3. 7.6. Hardware assistance Hardware design in self-sustainable IoT
    devices needs to cope with many issues. The power harvested from the surrounding
    is often intermittent. This leads to heavy fluctuation in current at IoT node.
    Hence, small-sized hardware that yields stable performance for a wide range of
    power is required at the energy harvesting stage. The harvesting stage includes
    transducers, MPPT, DC-DC converters, AC-DC converters, and supercapacitors. Arranging
    all such components with sensors, actuators, and communication devices will result
    in a highly dense circuit. How many bulky circuits can coexist with nanomaterials
    poses a relevant research question. 7.7. Network congestion in EH-IoT network
    Previously data sensed by IoT devices were used to store in the cloud. Several
    IoT devices or platforms use the same cloud platform for data storage. However,
    accessing the required data from vast aggregated data available on the cloud takes
    time and effort. In case different IoT devices wish to access data from the same
    cloud simultaneously, it will increase incoming traffic in the network. Recently
    in [249], edge computing is proposed to optimize energy efficiency for medical
    devices using their inactive mode. Edge computing networks are dense and highly
    congested. In this technique, firstly, data is transferred to a storage unit near
    IoT device. After sorting and analyzing data, the local storage unit transfers
    some of the data to the cloud. Thus reducing both latencies and network congestion
    in this process at the cost of increased power consumption due to the dense network.
    As a result, the tradeoff between dense storage network deployment and power consumption
    in a sustainable IoT system still needs to be addressed. 8. Conclusion IoT is
    an effective solution to our day-to-day problems that open up numerous new opportunities
    worldwide. This is an interesting phenomenon in networking devices, where the
    reach of device connectivity increases every year. IoT incorporates billions of
    sensors, actuators, and communication devices in various IoT applications. This
    paper addresses several IoT applications and clarifies the necessitates of IoT
    devices, in particular smart applications. It is accomplished by incorporating
    five different interfaces such as sensing interface, energy harvesting interface,
    storage interface, microcontroller interface, and wireless interface. It focuses
    on bridging the gap between IoT application and IoT system design centered on
    layered architecture design. Besides, the study of various types of sensors, actuators,
    and communication protocols, this paper also discusses the various types of energy
    harvesting techniques to make the self-sustainable IoT system design. The primary
    task of EH-IoT is to guarantee smooth functioning using an uncontrolled and unpredicted
    power supply. This paper also investigates the comparison among the different
    layers architecture design of self-sustainable IoT device. While reviewing the
    different research articles, we also examined the effect of the stochastic source
    on the memory interface. This work is concluded with the potential research problems
    that will enable researchers to build a new paradigm for self-sustainable IoT
    system design. Declaration of competing interest The authors declare that they
    have no known competing financial interests or personal relationships that could
    have appeared to influence the work reported in this paper. Acknowledgments This
    publication has emanated from research supported in part by Science and Engineering
    Research Board research, India grant ECR/2018/002795, and in part by the Indian
    Institute of Technology Jammu sponsored seed grant SGT-100038, and in part by
    the TIH foundation for IoT & IoE research grants CFP/2022/061 and CFP/2022/A/027.
    D. Mishra’s participation was supported in part by the Australian Research Council
    Discovery Early Career Researcher Award (DECRA) under Grant DE230101391. Data
    availability Data will be made available on request. References [1] Ma D., Lan
    G., Hassan M., Hu W., Das S.K. Sensing, computing and Communications for energy
    harvesting IoTs: A survey IEEE Commun. Surv. & Tutor., 22 (2) (2020), pp. 1222-1250,
    10.1109/COMST.2019.2962526 View in ScopusGoogle Scholar [2] Wang C., et al. Anomaly
    prediction of CT equipment based on IoMT data (2022) preprint on webpage at https://assets.researchsquare.com/files/rs-1548704/v1/21c9338f-5ed6-44ae-9681-13d6901aa44a.pdf?c=1656683981
    Google Scholar [3] N. Bui, M. Zorzi, Health care applications: A solution based
    on the Internet of Things, in: Proc. International Symposium on Applied Sciences
    in Biomedical and Communication Technologies, Barcelona, Spain, 2011, pp. 1–5.
    Google Scholar [4] Yang G., et al. A health-IoT platform based on the integration
    of intelligent packaging, unobtrusive bio-sensor, and intelligent medicine box
    IEEE Trans. Ind. Inform., 10 (4) (2014), pp. 2180-2191 View in ScopusGoogle Scholar
    [5] M. Hassanalieragh, et al., Health monitoring and management using Internet-of-Things
    (IoT) sensing with cloud-based processing: Opportunities and challenges, in: Proc.
    IEEE International Conference on Services Computing, New York, NY, USA, 2015,
    pp. 285–292. Google Scholar [6] Sehrawat D., Gill N.S. IoT based human activity
    recognition system using smart sensors Adv. Sci. Technol. Eng. Syst. J., 5 (4)
    (2020), pp. 516-522 CrossRefView in ScopusGoogle Scholar [7] Occhiuzzi C., Vallese
    C., Amendola S., Manzari S., Marrocco G. NIGHT-Care: A passive RFID system for
    remote monitoring and control of overnight living environment Procedia Comput.
    Sci., 32 (2014), pp. 190-197 View PDFView articleView in ScopusGoogle Scholar
    [8] Ghosh U., Chakraborty C., Garg L., Srivastava G. (Eds.), Intelligent Internet
    of Things for Healthcare and Industry, Springer (2022), 10.1007/978-3-030-81473-1
    Google Scholar [9] Mittal M., Tanwar S., Agarwal B., Goyal L.M. Energy conservation
    for IoT devices Concepts, Paradigms and Solutions, Studies in Systems, Decision
    and Control, Springer (2019), pp. 1-365 in proc. CrossRefGoogle Scholar [10] Hsieh
    J.-W., Yu S.-H., Chen Y.-S., Hu W.-F. Automatic traffic surveillance system for
    vehicle tracking and classification IEEE Trans. Intell. Transp. Syst., 7 (2) (2006),
    pp. 175-187 View in ScopusGoogle Scholar [11] M. Lv, L. Chen, G. Chen, D. Zhang,
    Detecting traffic congestions using cell phone accelerometers, in: Proc. ACM International
    Joint Conference on Pervasive and Ubiquitous Computing: Adjunct Publication, Washington,
    Seattle, 2014, pp. 107–110. Google Scholar [12] W. Hu, et al., Mood-fatigue analyzer:
    Towards context-aware mobile sensing applications for safe driving, in: Proc.
    1st ACM Workshop on Middleware for Context-Aware Applications in the IoT (M4IoT@Middleware),
    Bordeaux, France, 2014, pp. 19–24. Google Scholar [13] H. Singh, J.S. Bhatia,
    J. Kaur, Eye tracking based driver fatigue monitoring and warning system, in:
    Proc. India Int. Conf. Power Electron. (IICPE), New Delhi, India, 2011, pp. 1–6.
    Google Scholar [14] Younan M., Houssein E.H., Elhoseny M., Ali A.A. Challenges
    and recommended technologies for the industrial Internet of Things: A comprehensive
    review Measurement, 151 (2020), Article 107198 View PDFView articleView in ScopusGoogle
    Scholar [15] Sheng Z., Zhu C., Leung V.C.M. Surfing the Internet-of-Things: Lightweight
    access and control of wireless sensor networks using industrial low power protocols
    EAI Endorsed Trans. Ind. Netw. Intell. Syst., 1 (1) (2014) Google Scholar [16]
    B. Yan, G. Huang, Supply chain information transmission based on RFID and Internet
    of Things, in: Proc. IEEE ISECS Int. Colloquium Comput. Commun. Control Manag.,
    Vol. 4, Sanya, China, 2009, pp. 166–169. Google Scholar [17] F. Shrouf, J. Ordieres,
    G. Miragliotta, Smart factories in Industry 4.0: A review of the concept and of
    energy management approached in production based on the Internet of Things paradigm,
    in: Proc. IEEE International Conference on Industrial Engineering and Engineering
    Management, Selangor, Malaysia, 2014, pp. 697–701. Google Scholar [18] Banotra
    A., Gupta S., Gupta S.K., Rashid M. Asset security in data of Internet of Things
    using blockchain technology Multimedia Security, Springer (2021), pp. 269-281
    CrossRefGoogle Scholar [19] Kumar S., Tiwari P., Zymbler M. Internet of Things
    is a revolutionary approach for future technology enhancement: A review J. Big
    Data, 6 (2019), 10.1186/s40537-019-0268-2 Google Scholar [20] Ericsson mobility
    report, November 2020 (2020) https://www.ericsson.com/en/mobility-report/reports
    Google Scholar [21] Lu X., Wang P., Niyato D., Kim D.I., Han Z. Wireless networks
    with RF energy harvesting: A contemporary survey IEEE Commun. Surv. Tutor., 17
    (2) (2015), pp. 757-789, 10.1109/COMST.2014.2368999 View in ScopusGoogle Scholar
    [22] Piovesan N., Gambin A., Miozzo M., Rossi M., Dini P. Energy sustainable paradigms
    and methods for future mobile networks: A survey Comput. Commun., 119 (2018),
    pp. 101-117 View PDFView articleView in ScopusGoogle Scholar [23] J. John, A.M.
    George, C.P. Kurian, Indoor PV system for IoT applications with battery charge
    microcontroller, in: 2022 International Conference on Intelligent Controller and
    Computing for Smart Power (ICICCSP), Hyderabad, India, 2022, pp. 1–5, http://dx.doi.org/10.1109/ICICCSP53532.2022.9862394.
    Google Scholar [24] Yue X., et al. Development of an indoor photovoltaic energy
    harvesting module for autonomous sensors in building air quality applications
    IEEE Internet Things J., 4 (6) (2017), pp. 2092-2103, 10.1109/JIOT.2017.2754981
    View in ScopusGoogle Scholar [25] Benkhelifa F., ElSawy H., Mccann J.A., Alouini
    M.S. Recycling cellular energy for self-sustainable IoT networks: A spatiotemporal
    study IEEE Trans. Wirel. Commun., 19 (4) (2020), pp. 2699-2712, 10.1109/TWC.2020.2967697
    View in ScopusGoogle Scholar [26] Khan S., et al. An efficient medium access control
    protocol for RF energy harvesting based IoT devices Comput. Commun., 171 (2021),
    pp. 28-38, 10.1016/j.comcom.2021.02.011 View PDFView articleView in ScopusGoogle
    Scholar [27] Atzori L., Iera A., Morabito G. The Internet of Things: A survey
    Comput. Netw., 54 (15) (2010), pp. 2787-2805 View PDFView articleView in ScopusGoogle
    Scholar [28] Gubbi J., Buyya R., Marusic S., Palaniswami M. Internet of Things
    (IoT): A vision, architectural elements, and future directions Future Gener. Comput.
    Syst., 29 (7) (2013), pp. 1645-1660 View PDFView articleView in ScopusGoogle Scholar
    [29] Xu L.D., He W., Li S. Internet of Things in industries: A survey IEEE Trans.
    Ind. Inform., 10 (4) (2014), pp. 2233-2243, 10.1109/TII.2014.2300753 View in ScopusGoogle
    Scholar [30] Whitmore A., Agarwal A., Xu L.D. The Internet of Things-A survey
    of topics and trends Inf. Syst. Front., 17 (2) (2015), pp. 261-274 CrossRefView
    in ScopusGoogle Scholar [31] Sethi P., Sarangi S.R. Internet of Things: Architectures,
    protocols and applications J. Electr. Comput. Eng. (2017) Google Scholar [32]
    Prauzek M., Konecny J., Borova M., Janosova K., Hlavica J., Musilek P. Energy
    harvesting sources, storage devices and system topologies for environmental wireless
    sensor networks: A review Sensors, 18 (2446) (2018) Google Scholar [33] Zeadally
    S., Shaikh F.K., Talpur A., Sheng Q.Z. Design architectures for energy harvesting
    in the Internet of Things Renew. Sustain. Energy Rev., 128 (2020), Article 109901
    View PDFView articleView in ScopusGoogle Scholar [34] Popli S., Jha R.K., Jain
    S. A comprehensive survey on green ICT with 5G-NB-IoT: Towards sustainable planet
    Comput. Netw., 199 (2021), Article 108433, 10.1016/j.comnet.2021.108433 Google
    Scholar [35] Sanislav T., Mois G.D., Zeadally S., Folea S.C. Energy harvesting
    techniques for Internet of Things (IoT) IEEE Access, 9 (2021), pp. 39530-39549,
    10.1109/ACCESS.2021.3064066 View in ScopusGoogle Scholar [36] Vaezi M., et al.
    Cellular, wide-area, and non-terrestrial IoT: A survey on 5G advances and the
    road toward 6G IEEE Commun. Surv. Tutor., 24 (2) (2022), pp. 1117-1174, 10.1109/COMST.2022.3151028
    View in ScopusGoogle Scholar [37] Naghib A., et al. A comprehensive and systematic
    literature review on the big data management techniques in the Internet of Things
    Wirel. Netw., 29 (2023), pp. 1085-1144, 10.1007/s11276-022-03177-5 View in ScopusGoogle
    Scholar [38] Mahamat M., Jaber G., Bouabdallah A. Achieving efficient energy-aware
    security in IoT networks: A survey of recent solutions and research challenges
    Wirel. Netw., 29 (2023), pp. 787-808 CrossRefView in ScopusGoogle Scholar [39]
    Shah S., Jadeja A., Doshi N. An analytical survey of energy efficiency in IoT
    paradigm Procedia Comput. Sci., 210 (2022), pp. 283-288, 10.1016/j.procs.2022.10.151
    View PDFView articleView in ScopusGoogle Scholar [40] Mashal I., Alsaryrah O.,
    Chung T.-Y., Yang C.-Z., Kuo W.-H., Agrawal D.P. Choices for interaction with
    things on Internet and underlying issues Ad Hoc Netw., 28 (2015), pp. 68-90 View
    PDFView articleView in ScopusGoogle Scholar [41] M. Wu, T.-J. Lu, F.-Y. Ling,
    J. Sun, H.-Y. Du, Research on the architecture of Internet of Things, in: Proc.
    3rd International Conference on Advanced Computer Theory and Engineering(ICACTE),
    Chengdu, 2010, pp. V5–484–V5–487. Google Scholar [42] R. Khan, S.U. Khan, R. Zaheer,
    S. Khan, Future Internet: the Internet of Things architecture, possible applications
    and key challenges, in: Proc. 10th International Conference on Frontiers of Information
    Technology, Islamabad, Pakistan, 2012, pp. 257–260. Google Scholar [43] Gubbi
    J., Buyya R., Marusic S., Palaniswami M. Internet of Things (IoT): A vision, architectural
    elements, and future directions Future Gener. Comput. Syst., 29 (7) (2013), pp.
    1645-1660 View PDFView articleView in ScopusGoogle Scholar [44] Bonomi F., Milito
    R., Natarajan P., Zhu J. Fog computing: A platform for internet of things and
    analytics Big Data and Internet of Things: A Roadmap for Smart Environments, Springer
    (2014), pp. 169-186 CrossRefView in ScopusGoogle Scholar [45] Vinoski S. Advanced
    message queuing protocol IEEE Internet Comput., 10 (6) (2006), pp. 87-89, 10.1109/MIC.2006.116
    Google Scholar [46] OASIS Message Queuing Telemetry Transport (MQTT) TC (2020)
    https://www.oasisopen.org/committees/tc_home.php?wg_abbrev=mqtt Google Scholar
    [47] T.W. Ayele, R. Mehta, Air pollution monitoring and prediction using IoT,
    in: Proc. Int. Conf. Inventive Communication and Computational Technologies (ICICCT),
    Coimbatore, India, 2018, pp. 1741–1745, http://dx.doi.org/10.1109/ICICCT.2018.8473272.
    Google Scholar [48] Koshy R., Yaseen M.D., Fayis K., Shaji N., Harish N.J., Ajay
    M. Greenhouse monitoring and control based on IoT using WSN ITSI Trans. Electr.
    Electron. Eng. (ITSI-TEEE), 4 (3) (2016), pp. 59-64 Google Scholar [49] Shelvane
    S., Shedage M., Phadtare A. Greenhouse monitoring using Raspberry Pi Int. Res.
    J. Eng. Technol. (IRJET), 6 (4) (2019), pp. 5030-5035 Google Scholar [50] Z. Shelby,
    K. Hartke, C. Bormann, The Constrained Application Protocol (CoAP), RFC 7252,
    2014, http://dx.doi.org/10.17487/RFC7252. Google Scholar [51] S.S. Prayogo, Y.
    Mukhlis, B.K. Yakti, The use and performance of MQTT and CoAP as Internet of Things
    application protocol using NodeMCU ESP8266, in: Proc. International Conference
    on Informatics and Computing (ICIC), Semarang, Indonesia, 2019, pp. 1–5, http://dx.doi.org/10.1109/ICIC47613.2019.8985850.
    Google Scholar [52] Deschambault O., Gherbi A., Légaré C. Efficient implementation
    of the MQTT protocol for embedded systems J. Inf. Process. Syst., 13 (1) (2017),
    pp. 26-39, 10.3745/JIPS.04.0028 View in ScopusGoogle Scholar [53] Krishna P.G.,
    Ravi K.S., Kumar S.P. Implementation of MQTT protocol on low resourced embedded
    network Int. J. Pure Appl. Math., 116 (6) (2017), pp. 161-166 CrossRefView in
    ScopusGoogle Scholar [54] J. Maha Kavya Sri, V.G. Narendra, V. Pai, Implementing
    and testing of Internet of Things (IoT) technology in agriculture and compare
    the application layer protocols: Message queuing telemetry transport (MQTT) and
    hyper text transport protocol (HTTP), in: Proc. Advanced Informatics for Computing
    Research, Shimla, India, 2019, pp. 320–333. Google Scholar [55] M. Heck, J. Edinger,
    D. Schaefer, C. Becker, IoT Applications in Fog and Edge Computing: Where Are
    We and Where Are We Going ?, in: Proc. 27th International Conference on Computer
    Communication and Networks (ICCCN), Hangzhou, China, 2018, pp. 1–6, http://dx.doi.org/10.1109/ICCCN.2018.8487455.
    Google Scholar [56] Alwakeel A.M. An overview of fog computing and edge computing
    security and privacy issues Sensors, 21 (24) (2021), p. 8226 CrossRefView in ScopusGoogle
    Scholar [57] Yuan Q., Zhou H., Li J., Liu Z., Yang F., Shen X.S. Toward efficient
    content delivery for automated driving services: An edge computing solution IEEE
    Netw., 32 (1) (2018), pp. 80-86, 10.1109/MNET.2018.1700105 View in ScopusGoogle
    Scholar [58] M.S.H. Nazmudeen, A.T. Wan, S.M. Buhari, Improved throughput for
    Power Line Communication (PLC) for smart meters using fog computing based data
    aggregation approach, in: Proc. IEEE International Smart Cities Conference (ISC2),
    Trento, Italy, 2016, pp. 1–4, http://dx.doi.org/10.1109/ISC2.2016.7580841. Google
    Scholar [59] T.N. Gia, M. Jiang, A.-M. Rahmani, T. Westerlund, P. Liljeberg, H.
    Tenhunen, Fog Computing in Healthcare Internet of Things: A Case Study on ECG
    Feature Extraction, in: Proc. IEEE International Conference on Computer and Information
    Technology; Ubiquitous Computing and Communications; Dependable, Autonomic and
    Secure Computing; Pervasive Intelligence and Computing, Liverpool, UK, 2015, pp.
    356–363, http://dx.doi.org/10.1109/CIT/IUCC/DASC/PICOM.2015.51. Google Scholar
    [60] H. Chang, A. Hari, S. Mukherjee, T.V. Lakshman, Bringing the cloud to the
    edge, in: Proc. IEEE Conference on Computer Communications Workshops (INFOCOM
    WKSHPS), Toronto, ON, Canada, 2014, pp. 346–351, http://dx.doi.org/10.1109/INFCOMW.2014.6849256.
    Google Scholar [61] Taleb T., Dutta S., Ksentini A., Iqbal M., Flinck H. Mobile
    edge computing potential in making cities smarter IEEE Commun. Mag., 55 (3) (2017),
    pp. 38-43, 10.1109/MCOM.2017.1600249CM View in ScopusGoogle Scholar [62] Li Y.,
    Barthelemy J., Sun S., Perez P., Moran B. A case study of WiFi sniffing performance
    evaluation IEEE Access, 8 (2020), pp. 129224-129235, 10.1109/ACCESS.2020.3008533
    View in ScopusGoogle Scholar [63] Pokhrel S.R., Vu H.L., Cricenti A.L. Adaptive
    admission control for IoT applications in home WiFi networks IEEE Trans. Mob.
    Comput., 19 (12) (2020), pp. 2731-2742, 10.1109/TMC.2019.2935719 View in ScopusGoogle
    Scholar [64] Palattella M.R., et al. Internet of things in the 5G era: Enablers,
    architecture, and business models IEEE J. Sel. Areas Commun., 34 (3) (2016), pp.
    510-527, 10.1109/JSAC.2016.2525418 View in ScopusGoogle Scholar [65] Sharma S.,
    Shah R. Comparitive study of IEEE 802.11 a, b, g & n standards Int. J. Eng. Res.,
    3 (4) (2014) Google Scholar [66] Hughes J., Yan J., Soga K. Development of wireless
    sensor network using bluetooth low energy (BLE) for construction noise monitoring
    Int. J. Smart Sens. Intell. Syst., 8 (2) (2015), pp. 1379-1405 CrossRefView in
    ScopusGoogle Scholar [67] K. Mekki, E. Bajic, F. Chaxel, F. Meyer, Overview of
    Cellular LPWAN Technologies for IoT Deployment: Sigfox, LoRaWAN, and NB-IoT, in:
    Proc. IEEE International Conference on Pervasive Computing and Communications
    Workshops (PerCom Workshops), Athens, Greece, 2018, pp. 197–202, http://dx.doi.org/10.1109/PERCOMW.2018.8480255.
    Google Scholar [68] L. Alliance, A Technical Overview of LoRa and LoRaWAN, White
    Paper, 2015, November 20. Google Scholar [69] Ahmed N., De D., Barbhuiya F.A.,
    Hussain M.I. MAC protocols for IEEE 802.11ah-based internet of things: A survey
    IEEE Internet Things J., 9 (2) (2022), pp. 916-938, 10.1109/JIOT.2021.3104388
    View in ScopusGoogle Scholar [70] M. Kuzlu M.P. Review of communication technologies
    for smart homes/building applications Proc. IEEE Innovative Smart Grid Technologies-Asia
    (ISGT ASIA), IEEE, Bangkok, Thailand (2015), pp. 1-6 Google Scholar [71] Lopez
    P., Fernández D., Jara A. Survey of Internet of Things technologies for clinical
    environments Proc. 27th International Conference on Advanced Information Networking
    and Applications Workshops, IEEE, Barcelona, Spain (2013), pp. 1349-1354 CrossRefView
    in ScopusGoogle Scholar [72] Barua A., Alamin M.A.A., Hossain M.S., Hossain E.
    Security and privacy threats for bluetooth low energy in IoT and wearable devices:
    A comprehensive survey IEEE Open J. Commun. Soc., 3 (2022), pp. 251-281, 10.1109/OJCOMS.2022.3149732
    View in ScopusGoogle Scholar [73] Shah S.W.H., Mian A.N., Aijaz A., Qadir J.,
    Crowcroft J. Energy-efficient MAC for cellular IoT: State-of-the-art, challenges,
    and standardization IEEE Trans. Green Commun. Netw., 5 (2) (2021), pp. 587-599,
    10.1109/TGCN.2021.3062093 View in ScopusGoogle Scholar [74] Joris L., et al. An
    autonomous Sigfox wireless sensor node for environmental monitoring IEEE Sens.
    Lett., 3 (7) (2019), pp. 01-04, 10.1109/LSENS.2019.2924058 Google Scholar [75]
    A. Khalifeh, K.A. Aldahdouh, K.A. Darabkh, W. Al-Sit, A Survey of 5G Emerging
    Wireless Technologies Featuring LoRaWAN, Sigfox, NB-IoT and LTE-M, in: Proc. International
    Conference on Wireless Communications Signal Processing and Networking (WiSPNET),
    Chennai, India, 2019, pp. 561–566, http://dx.doi.org/10.1109/WiSPNET45539.2019.9032817.
    Google Scholar [76] Samie F., Bauer L., Henkel J. IoT technologies for embedded
    computing: A survey Proc. International Conference on Hardware/Software Codesign
    and System Synthesis (CODES+ ISSS), IEEE, Pittsburgh, PA, USA (2016), pp. 1-10
    Google Scholar [77] T. Rahman, S.K. Chakraborty, Provisioning Technical Interoperability
    within ZigBee and BLE in IoT Environment, in: Proc. International Conference on
    Electronics, Materials Engineering & Nano-Technology (IEMENTech), Kolkata, India,
    2018, pp. 1–4, http://dx.doi.org/10.1109/IEMENTECH.2018.8465272. Google Scholar
    [78] Tabish R., Mnaouer A., Touati F. A comparative analysis of BLE and 6LoWPAN
    for U-HealthCare applications 2013 7th IEEE GCC Conference and Exhibition (GCC),
    IEEE, Doha, Qatar (2013), pp. 286-291 CrossRefView in ScopusGoogle Scholar [79]
    Ee G.K., et al. A review of 6LoWPAN routing protocols Proc. Asia-Pac. Adv. Netw.,
    30 (10.7125) (2010) Google Scholar [80] Gonzalez B., et al. IEEE 802.11 ah: A
    technology to face the IoT challenge Sensors, 16 (11) (2016), p. 1960 Google Scholar
    [81] Tian L., et al. Wi-Fi HaLow for the Internet of Things: An up-to-date survey
    on IEEE 802.11 ah research J. Netw. Comput. Appl., 182 (2021), Article 103036
    View PDFView articleView in ScopusGoogle Scholar [82] Ahmadi S. An overview of
    next-generation mobile WiMAX technology IEEE Commun. Mag., 47 (6) (2009), pp.
    84-98, 10.1109/MCOM.2009.5116805 View in ScopusGoogle Scholar [83] Pareit D.,
    Lannoo B., Moerman I., Demeester P. The history of WiMAX: A complete survey of
    the evolution in certification and standardization for IEEE 802.16 and WiMAX IEEE
    Commun. Surv. Tutor., 14 (4) (2012), pp. 1183-1211, 10.1109/SURV.2011.091511.00129
    View in ScopusGoogle Scholar [84] IEEE Standard for Low-Rate Wireless Networks
    –Amendment 2: Ultra-Low Power Physical Layer, IEEE Std 802.15.4q-2016 (Amendment
    to IEEE Std 802.15.4-2015 as amended by IEEE Std 802.15.4n-2016), 2016, pp. 1–52,
    http://dx.doi.org/10.1109/IEEESTD.2016.7466448. Google Scholar [85] ZigBee green
    power user guide (2020) https://www.nxp.com/docs/en/user-guide/JN-UG-3095.pdf
    Google Scholar [86] Soares S.M., Stephanie M., Carvalho M.M. An analytical model
    for the aggregate throughput of IEEE 802.11ah networks under the restricted access
    window mechanism Sensors, 22 (15) (2022), pp. 55-61, 10.3390/s22155561 View in
    ScopusGoogle Scholar [87] Sheng Z., Yang S., Yu Y., Vasilakos A.V., Mccann J.A.,
    Leung K.K. A survey on the IETF protocol suite for the Internet of Things: Standards,
    challenges, and opportunities IEEE Trans. Wirel. Commun., 20 (6) (2013), pp. 91-98,
    10.1109/MWC.2013.6704479 View in ScopusGoogle Scholar [88] Sudevalayam S., Kulkarni
    P. Energy harvesting sensor nodes: Survey and implications IEEE Commun. Surv.
    Tutor., 13 (3) (2011), pp. 443-461, 10.1109/SURV.2011.060710.00094 View in ScopusGoogle
    Scholar [89] Lu X., Wang P., Niyato D., Kim D.I., Han Z. Wireless networks with
    RF energy harvesting: A contemporary survey IEEE Commun. Surv. Tutor., 17 (2)
    (2015), pp. 757-789, 10.1109/COMST.2014.2368999 View in ScopusGoogle Scholar [90]
    Ku M.-L., Li W., Chen Y., Ray Liu K.J. Advances in energy harvesting communications:
    Past, present, and future challenges IEEE Commun. Surv. Tutor., 18 (2) (2016),
    pp. 1384-1412, 10.1109/COMST.2015.2497324 View in ScopusGoogle Scholar [91] Akhtar
    F., Rehmani M.H. Energy replenishment using renewable and traditional energy resources
    for sustainable wireless sensor networks: A review Renew. Sustain. Energy Rev.,
    45 (2015), pp. 769-784 View PDFView articleView in ScopusGoogle Scholar [92] Mishra
    D., De S., Jana S., Basagni S., Chowdhury K., Heinzelman W. Smart RF energy harvesting
    communications: Challenges and opportunities IEEE Commun. Mag., 53 (4) (2015),
    pp. 70-78, 10.1109/MCOM.2015.7081078 View in ScopusGoogle Scholar [93] D. Sehrawat,
    N.S. Gill, Smart sensors: Analysis of different types of IoT sensors, in: Proc.
    Int. Conf. Trends Electron. Informat. (ICOEI), Tirunelveli, India, 2019, pp. 523–528,
    http://dx.doi.org/10.1109/ICOEI.2019.8862778. Google Scholar [94] Grattan K.T.V.,
    Sun T. Fiber optic sensor technology: An overview Sensors Actuators A, 82 (1)
    (2000), pp. 40-61, 10.1016/S0924-4247(99)00368-4 View PDFView articleView in ScopusGoogle
    Scholar [95] Kwaaitaal T. The fundamentals of sensors Sensors Actuators A, 39
    (2) (1993), pp. 103-110, 10.1016/0924-4247(93)80205-U View PDFView articleView
    in ScopusGoogle Scholar [96] B.-Pereira R., Ribeiro C., Pereira N., L.-Mendez
    S., Martins P. Printed multifunctional magnetically activated energy harvester
    with sensing capabilities Nano Energy, 94 (2022), Article 106885, 10.1016/j.nanoen.2021.106885
    Google Scholar [97] S.K. Dhar, S.S. Bhunia, N. Mukherjee, Interference aware scheduling
    of sensors in IoT enabled health-care monitoring system, in: Proc. Int. Conf.
    of Emerging Applications of Information Technology, Kolkata, India, 2014, pp.
    152–157, http://dx.doi.org/10.1109/EAIT.2014.50. Google Scholar [98] Pattnaik
    S.K., et al. Future wireless communication technology towards 6G IoT: An application-based
    analysis of IoT in real-time location monitoring of employees inside underground
    mines by using BLE Sensors, 22 (9) (2022), 10.3390/s22093438 Google Scholar [99]
    Sahay M.R., Sukumaran M.K., Amarnath S., Palani T.N.D. Environmental Monitoring
    System using IoT and Cloud Service at Real-Time: EasyChair Preprint no. 968 EasyChair
    (2019) Google Scholar [100] Dziadak B., Makowski L., Michalski A.A. Survey of
    energy harvesting systems for wireless sensor networks in environmental monitoring
    Metrol. Meas. Syst., 23 (4) (2016), pp. 495-512, 10.1515/mms-2016-0053 View in
    ScopusGoogle Scholar [101] A. Tapashetti, D. Vegiraju, T. Ogunfunmi, IoT-enabled
    air quality monitoring device: A low cost smart health solution, in: Proc. IEEE
    Global Humanitarian Technology Conference (GHTC), Seattle, WA, USA, 2016, pp.
    682–685, http://dx.doi.org/10.1109/GHTC.2016.7857352. Google Scholar [102] G.
    Zhang, C. Li, Y. Zhang, C. Xing, J. Yang, SemanMedical: A kind of semantic medical
    monitoring system model based on the IoT sensors, in: Proc. IEEE International
    Conference on e-Health Networking Applications and Services (Healthcom), Beijing,
    China, 2012, pp. 238–243, http://dx.doi.org/10.1109/HealthCom.2012.6379414. Google
    Scholar [103] Kozalakis K., et al. Wide-range light harvesting module for autonomous
    sensor nodes IEEE Access, 10 (2022), pp. 32180-32189, 10.1109/ACCESS.2022.3161486
    View in ScopusGoogle Scholar [104] Documentation on Arduino UNO R3 (2023) https://docs.arduino.cc/hardware/uno-rev3
    Google Scholar [105] Documentation on Raspberry Pi (2023) https://www.raspberrypi.com/documentation/microcontrollers/
    Google Scholar [106] ESP8266: A cost-effective and highly integrated Wi-Fi MCU
    for IoT applications (2023) https://www.espressif.com/en/products/socs/esp8266ex/resources
    Google Scholar [107] Ren Q., Yao G. Enhancing harvested energy utilization for
    energy harvesting wireless sensor networks by an improved uneven clustering protocol
    IEEE Access, 9 (2021), pp. 119279-119288, 10.1109/ACCESS.2021.3108469 View in
    ScopusGoogle Scholar [108] Sanislav T., Zeadally S., Mois G.D., Folea S.C. Wireless
    energy harvesting: Empirical results and practical considerations for Internet
    of Things J. Netw. Comput. Appl., 121 (2018), pp. 149-158, 10.1016/j.jnca.2018.08.002
    View PDFView articleView in ScopusGoogle Scholar [109] Liu Y., Chen Q., Liu G.,
    Liu H., Yang Q. EcoSense: A hardware approach to on-demand sensing in the internet
    of things IEEE Commun. Mag., 54 (12) (2016), pp. 37-43, 10.1109/MCOM.2016.1600621CM
    View PDFView articleGoogle Scholar [110] Spachos P., Mackey A. Energy efficiency
    and accuracy of solar powered BLE beacons Comput. Commun., 119 (2018), pp. 94-100,
    10.1016/j.comcom.2017.12.007 View PDFView articleView in ScopusGoogle Scholar
    [111] D. Balan, A. Chirap, Analysis of an eco-friendly sensor node powered by
    unconventional energy sources, in: Proc. RoEduNet Conference 13th Edition: Networking
    in Education and Research Joint Event RENAM 8th Conference, Chisinau, Moldova,
    2014, pp. 1–4, http://dx.doi.org/10.1109/RoEduNet-RENAM.2014.6955325. Google Scholar
    [112] Mondal S., Paily R. On-chip photovoltaic power harvesting system with low-overhead
    adaptive MPPT for IoT nodes IEEE Internet Things J., 4 (5) (2017), pp. 1624-1633,
    10.1109/JIOT.2017.2692383 View in ScopusGoogle Scholar [113] Nguyen V.T., Villain
    F., Guillou Y.L. Cognitive radio RF: Overview and challenges VLSI Des., 2012 (2012),
    10.1155/2012/716476 Google Scholar [114] Mekikis P.-V., Kartsakli E., Antonopoulos
    A., Alonso L., Verikoukis C. Connectivity analysis in clustered wireless sensor
    networks powered by solar energy IEEE Trans. Wirel. Commun., 17 (4) (2018), pp.
    2389-2401, 10.1109/TWC.2018.2794963 View in ScopusGoogle Scholar [115] Shin M.,
    Joe I. Energy management algorithm for solar-powered energy harvesting wireless
    sensor node for Internet of Things IET Commun., 10 (2016), pp. 1508-1521 CrossRefView
    in ScopusGoogle Scholar [116] Masoudinejad M., Emmerich J., Kossmann D., Riesner
    A., Roidl M., ten Hompel M. A measurement platform for photovoltaic performance
    analysis in environments with ultra-low energy harvesting potential Sustainable
    Cities Soc., 25 (2016), pp. 74-81, 10.1016/j.scs.2015.09.006 View PDFView articleView
    in ScopusGoogle Scholar [117] M. Masoudinejad, J. Emmerich, D. Kossmann, A. Riesner,
    M. Roidl, M. ten Hompel, Development of a measurement platform for indoor photovoltaic
    energy harvesting in materials handling applications, in: Proc. International
    Renewable Energy Congress (IREC), Sousse, Tunisia, 2015, pp. 1–6, http://dx.doi.org/10.1109/IREC.2015.7110938.
    Google Scholar [118] Joe I., Shin M. Energy management algorithm for solar-powered
    energy harvesting wireless sensor node for Internet of Things IET Commun., 10
    (12) (2016), pp. 1508-1521, 10.1049/iet-com.2015.0223 Google Scholar [119] Chinipardaz
    M., Amraee S. Study on IoT networks with the combined use of wireless power transmission
    and solar energy harvesting Sadhana, 47 (86) (2022), 10.1007/s12046-022-01829-y
    Google Scholar [120] Bhatti N.A., Alizai M.H., Syed A.A., Mottola L. Energy harvesting
    and wireless transfer in sensor network applications: Concepts and experiences
    ACM Trans. Sens. Netw., 12 (3) (2016), 10.1145/2915918 Google Scholar [121] Thielen
    M., Sigrist L., Magno M., Hierold C., Benini L. Human body heat for powering wearable
    devices: From thermal energy to application Energy Convers. Manage., 131 (2017),
    pp. 44-54, 10.1016/j.enconman.2016.11.005 View PDFView articleView in ScopusGoogle
    Scholar [122] M. Alhawari, D. Kilani, B. Mohammad, H. Saleh, M. Ismail, An efficient
    thermal energy harvesting and power management for Watt wearable BioChips, in:
    Proc. IEEE International Symposium on Circuits and Systems (ISCAS), Montreal,
    QC, Canada, 2016, pp. 2258–2261, http://dx.doi.org/10.1109/ISCAS.2016.7539033.
    Google Scholar [123] Lu Z., Zhang H., Mao C., Li C.M. Silk fabric-based wearable
    thermoelectric generator for energy harvesting from the human body Appl. Energy,
    164 (2016), pp. 57-63, 10.1016/j.apenergy.2015.11.038 View PDFView articleView
    in ScopusGoogle Scholar [124] Siddique A.R.M., Rabari R., Mahmud S., Heyst B.V.
    Thermal energy harvesting from the human body using flexible thermoelectric generator
    (FTEG) fabricated by a dispenser printing technique Energy, 115 (2016), pp. 1081-1091,
    10.1016/j.energy.2016.09.087 View PDFView articleView in ScopusGoogle Scholar
    [125] McKay I.S., Wang E.N. Thermal pulse energy harvesting Energy, 57 (2013),
    pp. 632-640, 10.1016/j.energy.2013.05.045 View PDFView articleView in ScopusGoogle
    Scholar [126] El Fatnani F.Z., Guyomar D., Mazroui M., Belhora F., Boughaleb Y.
    Optimization and improvement of thermal energy harvesting by using pyroelectric
    materials Opt. Mater., 56 (2016), pp. 22-26, 10.1016/j.optmat.2016.01.048 Advanced
    Materials for Optics, Photonics, Renewable Energies and Their Recent Advances
    View PDFView articleView in ScopusGoogle Scholar [127] Chen M.C., Sun T.-W., Tsai
    T.-H. Dual-domain maximum power tracking for multi-input RF energy harvesting
    with a reconfigurable rectifier array Energies, 15 (6) (2022), 10.3390/en15062068
    Google Scholar [128] Nintanavongsa P., Muncuk U., Lewis D.R., Chowdhury K.R. Design
    optimization and implementation for RF energy harvesting circuits IEEE J. Emerg.
    Sel. Top. Circuits Syst., 2 (1) (2012), pp. 24-33, 10.1109/JETCAS.2012.2187106
    View in ScopusGoogle Scholar [129] Kim S., et al. Ambient RF energy-harvesting
    technologies for self-sustainable standalone wireless sensor platforms Proc. IEEE,
    102 (11) (2014), pp. 1649-1666, 10.1109/JPROC.2014.2357031 View in ScopusGoogle
    Scholar [130] Jabbar H., Song Y.S., Jeong T.T. RF energy harvesting system and
    circuits for charging of mobile devices IEEE Trans. Consum. Electron., 56 (1)
    (2010), pp. 247-253, 10.1109/TCE.2010.5439152 View in ScopusGoogle Scholar [131]
    Honan G., Gekakis N., Hassanalieragh M., Nadeau A., Sharma G., Soyata T. Energy
    harvesting and buffering for cyber physical systems: A review Siddesh G.M., Deka
    G.C., Srinivasa K.G., Patnaik L.M. (Eds.), Cyber-Physical Systems, CRC Press,
    New York (2015), pp. 191-217, 10.1201/b19206-10 View in ScopusGoogle Scholar [132]
    Cansiz M., Altinel D., Kurt G.K. Efficiency in RF energy harvesting systems: A
    comprehensive review Energy, 174 (2019), pp. 292-309, 10.1016/j.energy.2019.02.100
    View PDFView articleView in ScopusGoogle Scholar [133] Y. Bai H.J., Juuti J. Energy
    harvesting research: The road from single source to multisource Adv. Mater., 30
    (34) (2018), Article 1707271, 10.1002/adma.201707271 Google Scholar [134] A. Takacs,
    A. Okba, H. Aubert, S. Charlot, P. Calmon, Recent advances in electromagnetic
    energy harvesting and wireless power transfer for IoT and SHM applications, in:
    Proc. IEEE International Workshop of Electronics, Control, Measurement, Signals
    and their Application to Mechatronics (ECMSM), Donostia, Spain, 2017, pp. 1–4,
    http://dx.doi.org/10.1109/ECMSM.2017.7945868. Google Scholar [135] Singh D., Ouamri
    M.A., Alzaidi M.S., Alharbi T.E., Ghoneim S.S. Performance analysis of wireless
    power transfer enabled dual hop relay system under generalised fading scenarios
    IEEE Access, 10 (2022), pp. 114364-114373, 10.1109/ACCESS.2022.3217906 View in
    ScopusGoogle Scholar [136] K. Chen, F. Benkhelifa, H. Gao, J.A. McCann, J. Li,
    Minimizing Age of Information in Multihop Energy-Harvesting Wireless Sensor Network,
    IEEE. Google Scholar [137] Ozyurt S., Coskun A.F., Buyukuorak S., Kurt G.K., Kucur
    O. A Survey on multiuser SWIPT communications for 5G+ IEEE Access, 10 (2022),
    pp. 109814-109849, 10.1109/ACCESS.2022.3212774 View in ScopusGoogle Scholar [138]
    Jin C., Hu F., Ling Z., Mao Z., Chang Z., Li C. Transmission optimization and
    resource allocation for wireless powered dense vehicle area network with energy
    recycling IEEE Trans. Veh. Technol., 71 (11) (2022), pp. 12291-12303, 10.1109/TVT.2022.3195216
    View in ScopusGoogle Scholar [139] Huang L., et al. Throughput guarantees for
    multi-cell wireless powered communication networks with non-orthogonal multiple
    cccess IEEE Trans. Veh. Technol., 71 (11) (2022), pp. 12104-12116, 10.1109/TVT.2022.3189699
    View in ScopusGoogle Scholar [140] M.A. Kishk, A. Mustafa, H.S. Dhillon, Downlink
    performance analysis of cellular-based IoT network with energy harvesting receivers,
    in: Proc. IEEE GLOBECOM, Washington, DC, USA, 2016, pp. 1–6, http://dx.doi.org/10.1109/GLOCOM.2016.7841754.
    Google Scholar [141] M. Fantuzzi, M.D. Prete, D. Masotti, A. Costanzo, Quasi-isotropic
    RF energy harvester for autonomous long distance IoT operations, in: Proc. IEEE
    MTT-S International Microwave Symposium (IMS), Honololu, HI, USA, 2017, pp. 1345–1348,
    http://dx.doi.org/10.1109/MWSYM.2017.8058861. Google Scholar [142] Masius A.A.,
    Wong Y.C., Lau K.T. Miniature high gain slot-fed rectangular dielectric resonator
    antenna for IoT RF energy harvesting AEU - Int. J. Electron. Commun., 85 (2018),
    pp. 39-46, 10.1016/j.aeue.2017.12.023 View PDFView articleView in ScopusGoogle
    Scholar [143] Ercan A.Ö., Sunay M.O., Akyildiz I.F. RF energy harvesting and transfer
    for spectrum sharing cellular IoT communications in 5G systems IEEE Trans. Mob.
    Comput., 17 (7) (2018), pp. 1680-1694, 10.1109/TMC.2017.2740378 View in ScopusGoogle
    Scholar [144] T.D. Nguyen, J.Y. Khan, D.T. Ngo, An adaptive MAC protocol for RF
    energy harvesting wireless sensor networks, in: Proc. IEEE GLOBECOM, Washington,
    DC, USA, 2016, pp. 1–6, http://dx.doi.org/10.1109/GLOCOM.2016.7841577. Google
    Scholar [145] AL-Rousan N., Mat I.N.A., Mat D.M.K. Advances in solar photovoltaic
    tracking systems: A review Renew. Sustain. Energy Rev., 82 (2018), pp. 2548-2569
    View PDFView articleView in ScopusGoogle Scholar [146] Eiko B., et al. A fully
    featured thermal energy harvesting tracker for wildlife Energies, 14 (19) (2021),
    p. 6363 Google Scholar [147] https://datasheet.octopart.com/HSMS-2862-TR1G-Avago-datasheet-62063134.pdf,
    2023. Google Scholar [148] https://www.skyworksinc.com/Products/Diodes/SMS7630-Series,
    2023. Google Scholar [149] https://www.loomsolar.com/collections/solar-chargers-controllers/products/pwm-solar-charge-controller-10-amp,
    2023. Google Scholar [150] https://www.amicikart.com/product/amicismart-buck-boost-converter-display,
    2023. Google Scholar [151] https://www.magnum-dimensions.com/pt-20-10-solar-charge-controllertext=The/20Magnum/20Energy/20PT/2D20,
    2023. Google Scholar [152] García E., Quiles E., Correcher A., Morant F. Predictive
    diagnosis based on predictor symptoms for isolated photovoltaic systems using
    MPPT charge regulators Sensors, 22 (20) (2022), p. 7819 CrossRefView in ScopusGoogle
    Scholar [153] Yılmaz A., Demirci A., Tercan S.M. Technical comparison of PWM and
    MPPT charge regulators Proc. International Conference on Electrical and Electronics
    Engineering (ELECO), IEEE, Bursa, Turkey (2021), pp. 78-83 CrossRefView in ScopusGoogle
    Scholar [154] Sharma H., Haque A., Jaffery Z.A. Solar energy harvesting wireless
    sensor network nodes: A survey J. Renew. Sustain. Energy, 10 (2) (2018), Article
    023704, 10.1063/1.5006619 View in ScopusGoogle Scholar [155] H. Sharma, A. Haque,
    Z.A. Jaffery, An efficient solar energy harvesting system for wireless sensor
    nodes, in: Proc. IEEE International Conference on Power Electronics, Intelligent
    Control and Energy Systems (ICPEICES), Delhi, India, 2018, pp. 461–464, http://dx.doi.org/10.1109/ICPEICES.2018.8897434.
    Google Scholar [156] Khan A.S., Khan F.U. A wearable solar energy harvesting based
    jacket with maximum power point tracking for vital health monitoring systems IEEE
    Access, 10 (2022), pp. 119475-119495, 10.1109/ACCESS.2022.3220900 View in ScopusGoogle
    Scholar [157] Ali E.M., et al. Power conversion using analytical model of Cockcroft–Walton
    voltage multiplier rectenna Electronics, 10 (8) (2021), p. 881 CrossRefView in
    ScopusGoogle Scholar [158] N. Ertugrul, Battery storage technologies, applications
    and trend in renewable energy, in: Proc. IEEE International Conference on Sustainable
    Energy Technologies (ICSET), Hanoi, Vietnam, 2016, pp. 420–425. Google Scholar
    [159] Aneke M., Wang M. Energy storage technologies and real life applications–A
    state of the art review Appl. Energy, 179 (2016), pp. 350-377 View PDFView articleView
    in ScopusGoogle Scholar [160] Yang Y., Bremner S., Menictas C., Kay M. Battery
    energy storage system size determination in renewable energy systems: A review
    Renew. Sustain. Energy Rev., 91 (2018), pp. 109-125 View PDFView articleGoogle
    Scholar [161] Zou C., Zhang L., Hu X., Wang Z., Wik T., Pecht M. A review of fractional-order
    techniques applied to lithium-ion batteries, lead-acid batteries, and supercapacitors
    J. Power Sources, 390 (2018), pp. 286-296 View PDFView articleView in ScopusGoogle
    Scholar [162] Gogolou V., Kozalakis K., Koutroulis E., Doumenis G., Siskos S.
    An ultra-low-power CMOS supercapacitor storage unit for energy harvesting applications
    Electronics, 10 (17) (2021), 10.3390/electronics10172097 Google Scholar [163]
    G.V. Merrett, A.S. Weddell, Supercapacitor leakage in energy-harvesting sensor
    nodes: Fact or fiction ?, in: 2012 Ninth International Conference on Networked
    Sensing (INSS), Antwerp, Belgium, 2012, pp. 1–5. Google Scholar [164] Simjee F.I.,
    Chou P.H. Efficient charging of supercapacitors for extended lifetime of wireless
    sensor nodes IEEE Trans. Power Electron., 23 (3) (2008), pp. 1526-1536, 10.1109/TPEL.2008.921078
    View in ScopusGoogle Scholar [165] Prauzek M., Konecny J., Borova M., Janosova
    K., Hlavica J., Musilek P. Energy harvesting sources, storage devices and system
    topologies for environmental wireless sensor networks: A review Sensors, 18 (8)
    (2018), p. 2446 CrossRefView in ScopusGoogle Scholar [166] Newell R., Faure-Vincent
    J., Iliev B., Schubert T., Aradilla D. A new high performance ionic liquid mixture
    electrolyte for large temperature range supercapacitor applications (- °C to °C)
    operating at V cell voltage Electrochim. Acta, 267 (2018), pp. 15-19 View PDFView
    articleView in ScopusGoogle Scholar [167] Khomenko V., Raymundo-Pinero E., Frackowiak
    E., Beguin F. High-voltage asymmetric supercapacitors operating in aqueous electrolyte
    Appl. Phys. A, 82 (2006), pp. 567-573 CrossRefView in ScopusGoogle Scholar [168]
    Lv W., Li Z., Deng Y., Yang Q.-H., Kang F. Graphene-based materials for electrochemical
    energy storage devices: opportunities and challenges Energy Storage Mater., 2
    (2016), pp. 107-138 View PDFView articleView in ScopusGoogle Scholar [169] Bao
    Y., Wang J., Qian Y., Deng Y., Yang X., Chen G. An appropriate amount of new spinel
    phase induced by control synthesis for the improvement of electrochemical performance
    of Li-rich layered oxide cathode material Electrochim. Acta, 330 (2020), Article
    135240 View PDFView articleView in ScopusGoogle Scholar [170] Suzuki N., Inaba
    T., Shiga T. Electrochemical properties of LiPON films made from a mixed powder
    target of Li PO and Li O Thin Solid Films, 520 (6) (2012), pp. 1821-1825 View
    PDFView articleView in ScopusGoogle Scholar [171] Rea J., Foster D., Mallory P.,
    Inc C. High ionic conductivity in densified polycrystalline lithium nitride Mater.
    Res. Bull., 14 (6) (1979), pp. 841-846 View PDFView articleView in ScopusGoogle
    Scholar [172] Adachi G.-y., Imanaka N., Tamura S. Ionic conducting lanthanide
    oxides Chem. Rev., 102 (6) (2002), pp. 2405-2430 Google Scholar [173] Ito Y.,
    Sakurai Y., Yubuchi S., Sakuda A., Hayashi A., Tatsumisago M. Application of LiCoO
    particles coated with lithium ortho-oxosalt thin films to sulfide-type all solid
    state lithium batteries J. Electrochem. Soc., 162 (8) (2015), p. A1610 CrossRefView
    in ScopusGoogle Scholar [174] Vo H. Implementing energy saving techniques for
    sensor nodes in IoT applications EAI Endorsed Trans. Ind. Netw. Intell. Syst.,
    5 (17) (2018), 10.4108/eai.19-12-2018.156076 Google Scholar [175] Ambrosin M.,
    et al. On the feasibility of attribute-based encryption on Internet of Things
    devices IEEE Micro, 36 (6) (2016), pp. 25-35, 10.1109/MM.2016.101 View in ScopusGoogle
    Scholar [176] E. Kranakis, D. Krizanc, E. Williams, Directional versus omnidirectional
    antennas for energy consumption and -connectivity of networks of sensors, in:
    Proc. Principles of Distributed Systems, Grenoble, France, 2005, pp. 357–368.
    Google Scholar [177] Qureshi F.F., Iqbal R., Asghar M.N. Energy efficient wireless
    communication technique based on cognitive radio for Internet of Things J. Netw.
    Comput. Appl., 89 (2017), pp. 14-25, 10.1016/j.jnca.2017.01.003 View PDFView articleView
    in ScopusGoogle Scholar [178] Amjad M., Akhtar F., Rehmani M.H., Reisslein M.,
    Umer T. Full-duplex communication in cognitive radio networks: A survey IEEE Commun.
    Surv. Tutor., 19 (4) (2017), pp. 2158-2191, 10.1109/COMST.2017.2718618 View in
    ScopusGoogle Scholar [179] Tarchi D., Bozorgchenani A., Gebremeskel M.D. Zero-energy
    computation offloading with simultaneous wireless information and power transfer
    for two-hop 6G fog networks Energies, 15 (5) (2022), 10.3390/en15051632 Google
    Scholar [180] Ren Q., Yao G. An opportunistic routing for energy-harvesting wireless
    sensor networks with dynamic transmission power and duty cycle IEEE Access, 10
    (2022), pp. 121109-121119, 10.1109/ACCESS.2022.3222843 View in ScopusGoogle Scholar
    [181] Hummel M. The future of the Internet of Things in renewable energy (2021)
    https://www.renewableenergyworld.com/storage/the-future-of-the-internet-of-things-in-renewable-energy0.html
    Google Scholar [182] Orsino A., Araniti G., Militano L., Alonso-Zarate J., Molinaro
    A., Iera A. Energy efficient IoT data collection in smart cities exploiting D2D
    communications Sensors, 16 (6) (2016), p. 836, 10.3390/s16060836 Google Scholar
    [183] León O., Hernández-Serrano J., Soriano M. Securing cognitive radio networks
    Int. J. Commun. Syst., 23 (5) (2010), pp. 633-652, 10.1002/dac.1102 View in ScopusGoogle
    Scholar [184] Shirvanimoghaddam M., Dohler M., Johnson S.J. Massive non-orthogonal
    multiple access for cellular IoT: Potentials and limitations IEEE Commun. Mag.,
    55 (9) (2017), pp. 55-61, 10.1109/MCOM.2017.1600618 View in ScopusGoogle Scholar
    [185] Fragkiadakis A., Tragos E., Makrogiannakis A., Papadakis S., Charalampidis
    P., Surligas M. Signal processing techniques for energy efficiency, security,
    and reliability in the IoT domain Mavromoustakis C.X., Mastorakis G., Batalla
    J.M. (Eds.), Internet of Things (IoT) in 5G Mobile Technologies (2016), pp. 419-447,
    10.1007/978-3-319-30913-2_18 View in ScopusGoogle Scholar [186] Mahmudimanesh
    M., Khelil A., Suri N. Compressive sensing for wireless sensor networks Hu F.,
    Hao Q. (Eds.), The Integration of Sensor Networks, Signal Processing and Machine
    Learning (2012), pp. 379-395, 10.1201/b14300 View in ScopusGoogle Scholar [187]
    Dehkordi S.A., Farajzadeh K., Rezazadeh J., Farahbakhsh R., Sandrasegaran K.,
    Dehkordi M.A. A survey on data aggregation techniques in IoT sensor networks Wirel.
    Netw., 26 (2) (2020), pp. 1243-1263, 10.1007/s11276-019-02142-z Google Scholar
    [188] M. Mathankumar, P. Thirumoorthi, T. Viswanathan, An improved clustering
    scheme for underwater sensor network using Bayesian linear regression, in: Proc.
    International Conference on Advancements in Electrical, Electronics, Communication,
    Computing and Automation (ICAECA), Coimbatore, India, 2021, pp. 1–4, http://dx.doi.org/10.1109/ICAECA52838.2021.9675767.
    Google Scholar [189] B. Srbinovski, G. Conte, A.P. Morrison, P. Leahy, E. Popovici,
    ECO: An IoT platform for wireless data collection, energy control and optimization
    of a miniaturized wind turbine cluster: Power analysis and battery life estimation
    of IoT platform, in: Proc. IEEE Int. Conf. on Industrial Technology (ICIT), Toronto,
    ON, Canada, 2017, pp. 412–417, http://dx.doi.org/10.1109/ICIT.2017.7913266. Google
    Scholar [190] Afzal B., Alvi S.A., Shah G.A., Mahmood W. Energy efficient context
    aware traffic scheduling for IoT applications Ad Hoc Netw., 62 (2017), pp. 101-115,
    10.1016/j.adhoc.2017.05.001 View PDFView articleView in ScopusGoogle Scholar [191]
    Kaur N., Sood S.K. An energy-efficient architecture for the Internet of Things
    (IoT) IEEE Syst. J., 11 (2) (2017), pp. 796-805, 10.1109/JSYST.2015.2469676 View
    in ScopusGoogle Scholar [192] Y. Zhao, G. Xu, Y. Zhang, Quality, reliability,
    security and robustness in heterogeneous systems, in: Proc. EAI International
    Conference (QShine), Shenzhen, China, 2018, pp. 412–417, http://dx.doi.org/10.1109/ICIT.2017.7913266.
    Google Scholar [193] Beaudaux J., Gallais A., Noël T. Heterogeneous MAC duty-cycling
    for energy-efficient Internet of Things deployments Netw. Sci., 3 (2013), pp.
    54-62, 10.1007/s13119-013-0016-4 Google Scholar [194] Zhang J., Zheng S., Zhang
    T., Wang M., Li Z. Charge-aware duty cycling methods for wireless systems under
    energy harvesting heterogeneity ACM Trans. Sens. Netw., 16 (2) (2020), 10.1145/3372800
    Google Scholar [195] R.A. Kjellby, et al., Design and prototype implementation
    of long-range self-powered wireless IoT devices, in: Proc. IEEE International
    Symposium on Smart Electronic Systems (iSES) (Formerly iNiS), Hyderabad, India,
    2018, pp. 215–218, http://dx.doi.org/10.1109/iSES.2018.00054. Google Scholar [196]
    R.A. Kjellby, L.R. Cenkeramaddi, A. Frøytlog, B.B. Lozano, S. Joshi, M. Bhange,
    Long-range & self-powered IoT devices for agriculture & aquaponics based on multi-hop
    topology, in: Proc. IEEE World Forum on Internet of Things (WF-IoT), Limerick,
    Ireland, 2019, pp. 545–549, http://dx.doi.org/10.1109/WF-IoT.2019.8767196. Google
    Scholar [197] Kjellby R.A., et al. Long-range & self-powered IoT devices for agriculture
    & aquaponics based on multi-hop topology Proc. IEEE 5th World Forum on Internet
    of Things (WF-IoT), IEEE, Limerick, Ireland (2019), pp. 545-549 CrossRefView in
    ScopusGoogle Scholar [198] Froytlog A., Foss T., Bakker O., Jevne G., Haglund
    M.A., Li F.Y., Oller J., Li G.Y. Ultra-low power wake-up radio for 5G IoT IEEE
    Commun. Mag., 57 (3) (2019), pp. 111-117, 10.1109/MCOM.2019.1701288 View in ScopusGoogle
    Scholar [199] Standard-IEC 62830-6 (2020) https://webstore.iec.ch/publication/60105
    Google Scholar [200] Standard-ISO/IEC 14543-3-10:2020(E) (2020) https://www.iso.org/standard/80934.html
    Google Scholar [201] Standard-ISO/IEC 14543-3-11 (2020) https://www.iso.org/standard/66628.html
    Google Scholar [202] R. Maheswari, H. Azath, P. Sharmila, S.S.R. Gnanamalar, Smart
    Village: Solar Based Smart Agriculture with IoT Enabled for Climatic Change and
    Fertilization of Soil, in: Proc. IEEE 5th International Conference on Mechatronics
    System and Robots (ICMSR), Singapore, 2019, pp. 102–105, http://dx.doi.org/10.1109/ICMSR.2019.8835454.
    Google Scholar [203] Shaikh F.K., Karim S., Zeadally S., Nebhen J. Recent trends
    in internet-of-things-enabled sensor technologies for smart agriculture IEEE Internet
    Things J., 9 (23) (2022), pp. 23583-23598, 10.1109/JIOT.2022.3210154 View in ScopusGoogle
    Scholar [204] M.P. Kantipudi, S. Rani, S. Kumar, IoT based solar monitoring system
    for smart city: an investigational study, in: Proc. 4th Smart Cities Symposium
    (SCS 2021), Bahrain, 2021, pp. 25–30, http://dx.doi.org/10.1049/icp.2022.0307.
    Google Scholar [205] Liu J., Xiong K., Fan P., Zhong Z. RF energy harvesting wireless
    powered sensor networks for smart cities IEEE Access, 5 (2017), pp. 9348-9358,
    10.1109/ACCESS.2017.2703847 View in ScopusGoogle Scholar [206] M.P. Kantipudi,
    S. Rani, S. Kumar, IoT Based Weather Monitoring System for Smart Cities: A Comprehensive
    Review, in: Proc. International Conference for Advancement in Technology (ICONAT),
    Goa, India, 2022, pp. 1–6, http://dx.doi.org/10.1109/ICONAT53423.2022.9726106.
    Google Scholar [207] Verma G., Sharma V. A novel RF energy harvester for event-based
    environmental monitoring in wireless sensor networks IEEE Internet Things J.,
    9 (5) (2022), pp. 3189-3203, 10.1109/JIOT.2021.3097629 View in ScopusGoogle Scholar
    [208] Sandhu M.M., Khalifa S., Jurdak R., Portmann M. Task scheduling for energy-harvesting-based
    IoT: A survey and critical analysis IEEE Internet Things J., 8 (18) (2021), pp.
    13825-13848, 10.1109/JIOT.2021.3086186 View in ScopusGoogle Scholar [209] L. Yuan,
    C. Xiong, S. Chen, W. Gong, Embracing Self-Powered Wireless Wearables for Smart
    Healthcare, in: Proc. IEEE International Conference on Pervasive Computing and
    Communications (PerCom), Kassel, Germany, 2021, pp. 1–7, http://dx.doi.org/10.1109/PERCOM50583.2021.9439117.
    Google Scholar [210] Harb H., et al. A sensor-based data analytics for patient
    monitoring in connected healthcare applications IEEE Sens. J., 21 (2) (2021),
    pp. 974-984, 10.1109/JSEN.2020.2977352 View in ScopusGoogle Scholar [211] M.M.A.
    Shah, M.S. Parvez, A. Ahmed, M.R. Hazari, IoT Based Power Monitoring of Solar
    Panel Incorporating Tracking System, in: Proc. International Conference on Automation,
    Control and Mechatronics for Industry 4.0 (ACMI), Rajshahi, Bangladesh, 2021,
    pp. 1–4, http://dx.doi.org/10.1109/ACMI53878.2021.9528207. Google Scholar [212]
    Saleem M.U., Usman M.R., Shakir M. Design, implementation, and deployment of an
    IoT based smart energy management system IEEE Access, 9 (2021), pp. 59649-59664,
    10.1109/ACCESS.2021.3070960 View in ScopusGoogle Scholar [213] J. Hathaliya, P.
    Sharma, S. Tanwar, R. Gupta, Blockchain-Based Remote Patient Monitoring in Healthcare
    4.0, in: Proc. International Conference on Advanced Computing (IACC), Tiruchirappalli,
    India, 2019, pp. 87–91, http://dx.doi.org/10.1109/IACC48062.2019.8971593. Google
    Scholar [214] Anand P., et al. IoT vulnerability assessment for sustainable computing:
    Threats, current solutions, and open challenges IEEE Access, 8 (2020), pp. 168825-168853,
    10.1109/ACCESS.2020.3022842 View in ScopusGoogle Scholar [215] Moazzami M., et
    al. Internet of things architecture for intelligent transportation systems in
    a smart city Proc. Global Power, Energy and Communication Conference (GPECOM),
    IEEE, Antalya, Turkey (2021), pp. 285-290 CrossRefView in ScopusGoogle Scholar
    [216] Xu W., Feng X., Wang J., Luo C., Li J., Ming Z. Energy harvesting-based
    smart transportation mode detection system via attention-based LSTM IEEE Access,
    7 (2019), pp. 66423-66434, 10.1109/ACCESS.2019.2918555 View in ScopusGoogle Scholar
    [217] Z. Sui, et al., Piezoelectric Based Smart Tire for Vehicle Speed and Load
    Detection and Energy Harvesting, in: Proc. IEEE International Conference on Flexible
    and Printable Sensors and Systems (FLEPS), Manchester, United Kingdom, 2021, pp.
    1–4, http://dx.doi.org/10.1109/FLEPS51544.2021.9469734. Google Scholar [218] Saad
    A., Benyamina A.E.H., Gamatié A. Water management in agriculture: A survey on
    current challenges and technological solutions IEEE Access, 8 (2020), pp. 38082-38097,
    10.1109/ACCESS.2020.2974977 View in ScopusGoogle Scholar [219] A.D. Boursianis,
    et al., Advancing Rational Exploitation of Water Irrigation Using 5G-IoT Capabilities:
    The AREThOU5A Project, in: Proc. 29th International Symposium on Power and Timing
    Modeling, Optimization and Simulation (PATMOS), Rhodes, Greece, 2019, pp. 127–132,
    http://dx.doi.org/10.1109/PATMOS.2019.8862146. Google Scholar [220] S.C. Mungale,
    et al., An Effiecient Smart Irrigation System for Solar System by using PIC and
    GSM, in: Proc. International Conference on Inventive Computation Technologies
    (ICICT), Coimbatore, India, 2020, pp. 973–976, http://dx.doi.org/10.1109/ICICT48043.2020.9112431.
    Google Scholar [221] S. Bhatia, Z.A. Jaffery, S. Mehfuz, A Comparative Study of
    Wireless Communication Protocols for use in Smart Farming Framework Development,
    in: Proc. International Conference on Intelligent Communication and Computational
    Techniques (ICCT), Jaipur, India, 2023, pp. 1–7. Google Scholar [222] R. Sokullu,
    LoRa Based Smart Agriculture Network, in: Proc. International Conference on Energy
    Efficiency and Agricultural Engineering (EE&AE), Ruse, Bulgaria, 2022, pp. 1–4.
    Google Scholar [223] Mohammad N., Muhammad S., Bashar A., Khan M.A. Formal analysis
    of human-assisted smart city emergency services IEEE Access, 7 (2019), pp. 60376-60388,
    10.1109/ACCESS.2019.2913784 View in ScopusGoogle Scholar [224] Angelidou M., Psaltoglou
    A., Komninos N., Kakderi C., Tsarchopoulos P., Panori A. Enhancing sustainable
    urban development through smart city applications J. Sci. Technol. Policy Manag.,
    9 (2) (2018), pp. 146-169 CrossRefView in ScopusGoogle Scholar [225] Ghadami N.,
    Gheibi M., Kian Z., Faramarz M.G., Naghedi R., Eftekhari M., Fathollahi-Fard A.M.,
    Dulebenets M.A., Tian G. Implementation of solar energy in smart cities using
    an integration of artificial neural network, photovoltaic system and classical
    Delphi methods Sustainable Cities Soc., 74 (2021), Article 103149 View PDFView
    articleView in ScopusGoogle Scholar [226] Zeb H., Gohar M., Ali M., Rahman A.U.,
    Ahmad W., Ghani A., Choi J.-G., Koh S.-J. Zero energy IoT devices in smart cities
    using RF energy harvesting Electronics, 12 (1) (2022), p. 148 CrossRefGoogle Scholar
    [227] Lazarescu M.T. Design of a WSN platform for long-term environmental monitoring
    for IoT applications IEEE J. Emerg. Sel. Top. Circuits Syst., 3 (1) (2013), pp.
    45-54, 10.1109/JETCAS.2013.2243032 View in ScopusGoogle Scholar [228] Zafar S.,
    Miraj G., Baloch R., Murtaza D., Arshad K. An IoT based real-time environmental
    monitoring system using Arduino and cloud service Eng. Technol. Appl. Sci. Res.,
    8 (4) (2018), pp. 3238-3242 CrossRefGoogle Scholar [229] A. Tapashetti, D. Vegiraju,
    T. Ogunfunmi, IoT-enabled air quality monitoring device: A low cost smart health
    solution, in: Proc. IEEE Global Humanitarian Technology Conference (GHTC), Seattle,
    WA, USA, 2016, pp. 682–685, http://dx.doi.org/10.1109/GHTC.2016.7857352. Google
    Scholar [230] Ahad A., Tahir M., Yau K.-L.A. 5G-based smart healthcare network:
    Architecture, taxonomy, challenges and future research directions IEEE Access,
    7 (2019), pp. 100747-100762, 10.1109/ACCESS.2019.2930628 View in ScopusGoogle
    Scholar [231] Tran L.-G., Cha H.-K., Park W.-T. RF power harvesting: a review
    on designing methodologies and applications Micro Nano Syst. Lett., 5 (2017),
    pp. 1-16 CrossRefGoogle Scholar [232] A.D.D. Santos, et al., Thermoelectric Energy
    Harvesting on Rotation Machines for Wireless Sensor Network in Industry 4.0, in:
    Proc. 14th IEEE International Conference on Industry Applications (INDUSCON),
    Sao Paulo, Brazil, 2021, pp. 694–697, http://dx.doi.org/10.1109/INDUSCON51756.2021.9529630.
    Google Scholar [233] N. Kumari, M. Rokotondrabe, Thermal network modelling of
    hybrid piezo-pyro transducer for application in energy harvesting, in: Proc. IEEE
    5th International Conference for Convergence in Technology (I2CT), Bombay, India,
    2019, pp. 1–4, http://dx.doi.org/10.1109/I2CT45611.2019.9033897. Google Scholar
    [234] Roy S., Kabir M.H., Salauddin M., Halim M.A. An electromagnetic wind energy
    harvester based on rotational magnet pole-pairs for autonomous IoT applications
    Energies, 15 (15) (2022), p. 5725 CrossRefView in ScopusGoogle Scholar [235] Ibrahim
    R., Chung T.D., Hassan S.M., Bingi K., binti Salahuddin S.K. Solar energy harvester
    for industrial wireless sensor nodes Procedia Comput. Sci., 105 (2017), pp. 111-118
    View PDFView articleGoogle Scholar [236] S.-Y. Lin, Y.H. Lin, Y.-C. Lin, C.-Y.
    Tsai, Y.-Y. Tuan, Microstrip Antenna for Ambient RF Energy Harvesting, in: Proc.
    International Symposium on Antennas and Propagation (ISAP), Busan, Korea (South),
    2018, pp. 1–2. Google Scholar [237] S. Mahendra, M. Sathiyanarayanan, R.B. Vasu,
    Smart Security System for Businesses using Internet of Things (IoT), in: Proc.
    Second International Conference on Green Computing and Internet of Things (ICGCIoT),
    Bangalore, India, 2018, pp. 424–429, http://dx.doi.org/10.1109/ICGCIoT.2018.8753101.
    Google Scholar [238] Ha Q., Phung M.D. IoT-enabled dependable control for solar
    energy harvesting in smart buildings IET Smart Cities, 1 (2) (2019), pp. 61-70
    CrossRefView in ScopusGoogle Scholar [239] Baranov A.M., Akbari S., Spirjakin
    D., Bragar A., Karelin A. Feasibility of RF energy harvesting for wireless gas
    sensor nodes Sensors Actuators A, 275 (2018), pp. 37-43 View PDFView articleView
    in ScopusGoogle Scholar [240] Yamaguchi M., Masuda T., Araki K., Sato D., Lee
    K.-H., Kojima N., Takamoto T., Okumura K., Satou A., Yamada K., et al. Development
    of high-efficiency and low-cost solar cells for PV-powered vehicles application
    Prog. Photovolt., Res. Appl., 29 (7) (2021), pp. 684-693 CrossRefView in ScopusGoogle
    Scholar [241] Hao D., Qi L., Tairab A.M., Ahmed A., Azam A., Luo D., Pan Y., Zhang
    Z., Yan J. Solar energy harvesting technologies for PV self-powered applications:
    A comprehensive review Renew. Energy, 188 (2022), pp. 678-697 View PDFView articleView
    in ScopusGoogle Scholar [242] Shekhar A., Kumaravel V.K., Klerks S., de Wit S.,
    Venugopal P., Narayan N., Bauer P., Isabella O., Zeman M. Harvesting roadway solar
    energy—Performance of the installed infrastructure integrated PV bike path IEEE
    J. Photovolt., 8 (4) (2018), pp. 1066-1073, 10.1109/JPHOTOV.2018.2820998 View
    in ScopusGoogle Scholar [243] Rashid L., et al. Analysis of dimensionality reduction
    techniques on Internet of Things data using machine learning Sustain. Energy Technol.
    Assess., 52 (2022), Article 102304, 10.1016/j.seta.2022.102304 View PDFView articleView
    in ScopusGoogle Scholar [244] Taha A., Alrabeiah M., Alkhateeb A. Enabling large
    intelligent surfaces with compressive sensing and deep learning IEEE Access, 9
    (2021), pp. 44304-44321, 10.1109/ACCESS.2021.3064073 View in ScopusGoogle Scholar
    [245] F.A. Aoudia, M. Gautier, O. Berder, Learning to survive: Achieving energy
    neutrality in wireless sensor networks using reinforcement learning, in: Proc.
    IEEE ICC, Paris, France, 2017, pp. 1–6, http://dx.doi.org/10.1109/ICC.2017.7996978.
    Google Scholar [246] Salem A., Hamdi K.A., Rabie K.M. Physical layer security
    with RF energy harvesting in AF multi-antenna relaying networks IEEE Trans. Commun.,
    64 (7) (2016), pp. 3025-3038, 10.1109/TCOMM.2016.2573829 View in ScopusGoogle
    Scholar [247] Seid A.M., Lu J., Abishu H.N., Ayall T.A. Blockchain-enabled task
    offloading with energy harvesting in multi-UAV-assisted IoT networks: A multi-agent
    DRL approach IEEE J. Sel. Areas Commun., 40 (12) (2022), pp. 3517-3532, 10.1109/JSAC.2022.3213352
    View in ScopusGoogle Scholar [248] Odongo G.Y., Musabe R., Hanyurwimfura D., Bakari
    A.D. An efficient LoRa-enabled smart fault detection and monitoring platform for
    the power distribution system using self-powered IoT devices IEEE Access, 10 (2022),
    pp. 73403-73420, 10.1109/ACCESS.2022.3189002 View in ScopusGoogle Scholar [249]
    Bhatia M. Energy efficient IoT-based informative analysis for edge computing environment
    Trans. Emerg. Telecommun. Technol. (2022), Article e4527 View in ScopusGoogle
    Scholar Cited by (2) Comparative Analysis of Big Data Computing in Industry 4.0
    and Industry 5.0: An Experimental Study 2024, BIO Web of Conferences Automatic
    Battery Swapping Model for Efficient Charging of Solar-based EV 2023, ITEC Asia-Pacific
    2023 - 2023 IEEE Transportation Electrification Conference and Expo, Asia-Pacific
    Atul Banotra received the B.Tech. degree in electronics and communication engineering
    from Maharishi Markandeshwar University, Mullana, Ambala, India, in 2016, the
    M.Tech. degree in communication and signal processing from Shri Mata Vaishno Devi
    University, Katra, India, in 2019, and currently, he is pursuing his Ph.D. in
    electrical engineering from the Indian Institute of Technology Jammu, Jammu and
    Kashmir, India, which began in 2021, respectively. In January 2022, he was awarded
    the Prime Minister Research Fellowship. His research interests are in Internet
    of Things networks, wireless communication, energy harvesting networks using solar
    and radio frequency sources, and reconfigurable intelligent surfaces. Sarbani
    Ghose received the B.Tech. degree in electronics and communication engineering
    from West Bengal University of Technology, Kolkata, India, in 2007, and the M.Tech.
    degree in communication engineering from the National Institute of Technology
    Kurukshetra, India, in 2010. She earned her Ph.D. degree in electrical engineering
    from the Indian Institute of Technology Delhi, in 2017. She was a National Post-Doctoral
    Fellow (SERB-NPDF) at the Indian Statistical Institute, Kolkata, from 2017 to
    2020. She is currently working with DSZ Innovation Laboratories Pvt. Ltd., Kolkata.
    Her research interests include physical layer security, cooperative communication
    networks, performance analysis, reconfigurable metasurfaces, cognitive radio networks,
    energy harvesting and optimization. Deepak Mishra received a Ph.D. degree in electrical
    engineering from the Indian Institute of Technology (IIT) Delhi in 2017. Currently,
    he is a Senior Lecturer at the School of Electrical Engineering and Telecommunications,
    University of New South Wales (UNSW) Sydney, Australia, where he joined as a Senior
    Research Associate in August 2019. Before that, he was a Post-Doctoral Researcher
    at Linköping University, Sweden, from August 2017 to July 2019. He has also been
    a Visiting Researcher at the Northeastern University (USA), University of Rochester
    (USA), Huawei Technologies (France), and Southwest Jiaotong University (China).
    He serves as an Associate Editor of IEEE Wireless Communications Letters, IEEE
    Access, and Communication Theory Track of Frontiers in Communications and Networks.
    His research interests include energy harvesting cooperative communication networks,
    MIMO, backscattering, physical layer security, as well as signal processing and
    energy optimization schemes for the uninterrupted operation of wireless networks.
    Sudhakar Modem received the B.Tech. degree in electronics and communication engineering
    from Sreenivasa Institute of Technology and Management Studies, JNTU, Anantapur,
    India, in 2009, the M.Tech. degree in communication and signal processing from
    Indian Institute of Technology Hyderabad, India, in 2012, and the Ph.D. degree
    in electrical engineering from Indian Institute of Technology Delhi, New Delhi,
    India, in 2018, respectively. From January 2018 to July 2018, he was a Faculty
    member with the Department of Electronics Engineering, MITS Gwalior, India, under
    TEQIP-III program of MHRD-world bank project. From August 2018 to May 2019, he
    was with the Faculty of Electronics and Communication Engineering, Indian Institute
    of Information Technology Dharwad, India. Since June 2019, he has been with the
    Faculty of the Department of Electrical Engineering, Indian Institute of Technology
    Jammu, and India, where he is currently an Assistant Professor. His research interests
    are in Internet of Things networks, electric vehicles, and radio frequency energy
    harvesting networks, cognitive radio networks and image processing. 1 Note: Preprocessing
    interfacing in the physical layer and business layer is not in the scope of this
    paper. Interested readers can refer to [31] and references therein. View Abstract
    © 2023 Elsevier B.V. All rights reserved. Recommended articles CRLM: A cooperative
    model based on reinforcement learning and metaheuristic algorithms of routing
    protocols in wireless sensor networks Computer Networks, Volume 236, 2023, Article
    110019 Zhendong Wang, …, Dahai Li View PDF Prompt-WNQA: A prompt-based complex
    question answering for wireless network over knowledge graph Computer Networks,
    Volume 236, 2023, Article 110014 Pei Liu, …, Longgang Zhao View PDF Decentralized
    piggybacking-based dissemination of Cooperative Awareness Messages in vehicular
    ad-hoc networks Computer Networks, Volume 236, 2023, Article 110032 Guangbing
    Xiao, …, Yawen Chen View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 2 Captures Readers: 22 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computer Networks
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Energy harvesting in self-sustainable IoT devices and applications based
    on cross-layer architecture design: A survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zhang C.
  - Di L.
  - Lin L.
  - Zhao H.
  - Li H.
  - Yang A.
  - Guo L.
  - Yang Z.
  citation_count: '2'
  description: Cyberinformatics tools have supported decision makings in agriculture
    through cutting-edge big data, artificial intelligence/machine learning (AI/ML),
    and high-performance computing technologies. An open and easy-to-use agricultural
    cyberinformatics tool based on the findable, accessible, interoperable, reusable
    (FAIR) data principle is essential for the efficient distribution of crop-specific
    land cover information. This paper introduces iCrop, a new cyberinformatics tool
    to enable in-season crop type monitoring for the Conterminous United States (CONUS).
    As a web-based geographic information system (GIS), iCrop not only delivers three
    sets of new ML-based field-level crop-specific land cover geospatial data, including
    pre-season crop cover maps, in-season crop cover maps, and Refined Cropland Data
    Layer (R-CDL), but also provides a suite of mapping and geoprocessing functionalities
    through the FAIR geospatial data standards, such as Web Map Service (WMS), Web
    Coverage Service (WCS), and Web Processing Service (WPS). Meanwhile, we outline
    several use cases to highlight iCrop's applications under various agricultural
    operation scenarios, its functionality for land use change analysis, and its interoperability
    with generic web-based and desktop GIS software (e.g., GeoPlatform and QGIS).
    Our experimental results show that the new cyberinformatics tool can provide timely
    and unique crop-specific land cover information through the geoprocessing functionalities
    to facilitate U.S. agricultural information management and decision support. Moreover,
    this paper can be used as a systematic guidance for the design and implementation
    of the cyberinformatics tool to disseminate agro-geoinformation based on the FAIR
    data principle.
  doi: 10.1016/j.compag.2023.108199
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Methods 3. Use cases and
    results 4. Discussion 5. Conclusion Software availability CRediT authorship contribution
    statement Declaration of Competing Interest Acknowledgment References Show full
    outline Cited by (2) Figures (8) Show 2 more figures Tables (3) Table 1 Table
    2 Table 3 Computers and Electronics in Agriculture Volume 213, October 2023, 108199
    Cyberinformatics tool for in-season crop-specific land cover monitoring: Design,
    implementation, and applications of iCrop Author links open overlay panel Chen
    Zhang a, Liping Di a, Li Lin a, Haoteng Zhao a, Hui Li a, Anna Yang a, Liying
    Guo a, Zhengwei Yang b Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2023.108199
    Get rights and content Highlights • A new cyberinformatics tool for in-season
    crop-specific land cover monitoring is developed. • Three types of ML-based crop-specific
    land cover data for the CONUS are released. • Field-level crop type maps are available
    and updated before and within the growing season. • All geoprocessing capabilities
    are implemented based on the FAIR data principle. Abstract Cyberinformatics tools
    have supported decision makings in agriculture through cutting-edge big data,
    artificial intelligence/machine learning (AI/ML), and high-performance computing
    technologies. An open and easy-to-use agricultural cyberinformatics tool based
    on the findable, accessible, interoperable, reusable (FAIR) data principle is
    essential for the efficient distribution of crop-specific land cover information.
    This paper introduces iCrop, a new cyberinformatics tool to enable in-season crop
    type monitoring for the Conterminous United States (CONUS). As a web-based geographic
    information system (GIS), iCrop not only delivers three sets of new ML-based field-level
    crop-specific land cover geospatial data, including pre-season crop cover maps,
    in-season crop cover maps, and Refined Cropland Data Layer (R-CDL), but also provides
    a suite of mapping and geoprocessing functionalities through the FAIR geospatial
    data standards, such as Web Map Service (WMS), Web Coverage Service (WCS), and
    Web Processing Service (WPS). Meanwhile, we outline several use cases to highlight
    iCrop''s applications under various agricultural operation scenarios, its functionality
    for land use change analysis, and its interoperability with generic web-based
    and desktop GIS software (e.g., GeoPlatform and QGIS). Our experimental results
    show that the new cyberinformatics tool can provide timely and unique crop-specific
    land cover information through the geoprocessing functionalities to facilitate
    U.S. agricultural information management and decision support. Moreover, this
    paper can be used as a systematic guidance for the design and implementation of
    the cyberinformatics tool to disseminate agro-geoinformation based on the FAIR
    data principle. Previous article in issue Next article in issue Keywords CyberinformaticsGISFAIR
    data principleAgro-geoinformationLand use land coverCrop monitoring 1. Introduction
    Cyberinformatics is a critical component in modern computer software and geographic
    information systems (GIS), which leverages the capabilities of cyberinfrastructure,
    big data analytics, artificial intelligence (AI), machine learning (ML), Internet
    of Things (IoT) to facilitate the collection, management, analysis, visualization,
    and dissemination of geoinformation data over the high-speed network. Within the
    agricultural sector, cyberinformatics tools have demonstrated great potential
    to facilitate the process and analysis of agro-geoinformation, thereby supporting
    the management of spatio-temporal variability in crop production (Di et al., 2021,
    White et al., 2021). In recent years, the U.S. Department of Agriculture (USDA)
    National Institute of Food and Agriculture (NIFA) has continuously invested in
    Agriculture and Food Research Initiative (AFRI) to investigate the food and agriculture
    cyberinformatics tools (Nifa, 2021, USDA NIFA, 2020). The results and findings
    from these research initiatives, spanning various agricultural applications like
    evapotranspiration estimation (Armstrong et al., 2022), droplet detection for
    agricultural spraying systems (Acharya et al., 2022), food environment assessment
    (Mulrooney et al., 2021), soil carbon management (Sanderman et al., 2021), real-time
    decision making in plant phenotyping (Singh et al., 2021), crop yield forecast
    (Medina et al., 2021), have indicated that cyberinformatics can efficiently aid
    agricultural information management and decision support. As the pioneer of applying
    cyberinformatics tools as the primary GIS software to serve agricultural research,
    USDA National Agricultural Statistics Service (NASS) has been at the forefront
    of this effort, consistently using web-based geospatial data service systems to
    access, manage, process, analyze, and disseminate agro-geoinformation based on
    the Findable, Accessible, Interoperable, and Reusable (FAIR) data principle (Wilkinson
    et al., 2016, Barton et al., 2022, Top et al., 2022, Hu et al., 2023, Wolfert
    et al., 2023). For example, CropScape is a well-known agricultural geospatial
    data service system to serve Cropland Land Data (CDL) data products through web
    geoprocessing services (Han et al., 2012). VegScape is a similar web-based data
    service system to disseminate a variety of near-real-time vegetation index (VI)
    data products derived from Moderate Resolution Imaging Spectroradiometer (MODIS)
    data (Zhang et al., 2022b). Crop Condition and Soil Moisture Analytics (Crop-CASMA)
    is a new tool to monitor and analyze U.S. soil moisture conditions using remotely
    sensed soil moisture data derived from NASA’s Soil Moisture Active Passive (SMAP)
    mission (Yang et al., 2021, Zhang et al., 2022c). In 2021, USDA NASS announced
    CroplandCROS as an alternative web application to host CDL data with a new user
    interface (USDA NASS, 2021). These cyberinformatics tools have helped users worldwide
    to better understand U.S. agriculture and significantly facilitated decision makings
    by providing diverse geoinformation through the easy-to-use web interface. Among
    the existing geospatial data in agro-geoinformation, USDA NASS''s CDL is by far
    the most downloaded crop-specific land cover data product. As of Dec 2022, the
    CDL and its derivative data products (e.g., crop frequency layers, crop mask layer)
    have been distributed to over 330,000 users worldwide through CropScape. However,
    the current-year CDL data is usually released to the public until early next year
    (e.g., the 2022 CDL was released in February 2023), which means CropScape cannot
    be applied to provide timely agricultural land cover information within the growing
    season. To tackle this issue and offset the lag of CDL, many AI/ML approaches
    and algorithms for early- and in-season crop type classification are implemented
    (Hao et al., 2015, Yaramasu et al., 2020, Johnson and Mueller, 2021, Zhang et
    al., 2021, Abernethy et al., 2023). Therefore, developing a CropScape-like cyberinformatics
    tool that provides user-experience-centric sharing and analysis of these in-season
    crop-specific land cover classification results based on the FAIR data principle
    is critical for the timely agricultural decision support and distribution of agro-geoinformation.
    In this paper, we introduce a new cyberinformatics tool, iCrop, for monitoring
    crop-specific land cover in support of the U.S agriculture. The main objective
    of the proposed software are: (1) being the first cyberinformatics tool to provide
    pre-, and in-season crop-specific land cover data for the Conterminous United
    States (CONUS); (2) offering a suite of easy-to-use functionalities, such as zonal
    statistics and land use land cover (LULC) change detection, to deliver timely
    and abundant field-level crop type information before and within the growing season;
    and (3) implementing the latest open geospatial standards and facilitating the
    agricultural decision making with the unique geoprocessing capabilities and national-scale
    field-level products based on the FAIR data principle. Furthermore, this paper
    serves not only as an introduction to the design and implementation of the new
    cyberinformatics tool, but also as a user guide for the iCrop application and
    its associated web services. In the rest of the paper, Section 2 presents the
    general context, system design, data production methods, and the implementation
    of map and geoprocessing services of the proposed tool. Section 3 gives a group
    of use cases to demonstrate iCrop’s geoprocessing capability, LULC analysis functionality,
    and interoperability with other generic GIS software. Section 4 discusses the
    contribution of this study, the advantages of the system architecture, the limitations
    of the current implementation, potential improvements, and future research recommendations.
    The conclusions are summarized in Section 5. 2. Methods 2.1. General context The
    cyberinformatics tool is a core component in an Earth observation system, which
    serves as a crucial link between the collection and analysis of geoinformation
    data and the users who need this information to make informed decisions (Lin et
    al., 2019, Bayat et al., 2021, Graf et al., 2022, Tan et al., 2022). In the context
    of crop monitoring system as illustrated in Fig. 1, it is essential for users
    to have the ability to process, manage, and deliver geospatial data in a timely
    manner to provide valuable agro-geoinformation. An efficient cyberinformatics
    tool is therefore critical to unlocking the full potential of agro-geoinformation
    data acquired by various sensors and enhancing decision-making processes in agriculture.
    To make the cycle more effective and enables timely access to early- and in-season
    crop-specific land cover information, the cyberinformatics tool must be capable
    of serving up-to-date geospatial data to users and providing geoprocessing functionalities
    using GIS over high-speed internet. Download : Download high-res image (454KB)
    Download : Download full-size image Fig. 1. The cycle of collection, processing,
    management, and dissemination of agro-geoinformation from Earth observation data
    in the crop monitoring system. The implementation of a cyberinformatics tool for
    pre- and in-season crop-specific land cover data sharing and analysis requires
    tackling three essential questions: (1) how to leverage AI/ML techniques to facilitate
    national-scale pre- and in-season crop mapping; (2) how to facilitate timely decision
    makings in agriculture through web geoprocessing; and (3) how to make the new
    geospatial data products FAIR? This study will investigate the above questions
    by demonstrating the system design (Section 2.2), data production (Section 2.3),
    and implementation (2.4 Implementation of geospatial web services, 2.5 Graphical
    user interface of web client) of the new cyberinformatics tool. 2.2. System design
    The new cyberinformatics tool introduced in this paper is called iCrop web-based
    data service system (hereafter called “iCrop” or “iCrop system” for simplicity).
    It inherits the service-oriented architecture of CropScape and comes with three
    significant improvements. First, we develop, validate, and mature the ML algorithms
    to derive a collection of new crop cover data products for the Conterminous United
    States (CONUS) automatically. Second, the new data products are implemented and
    distributed through standardized web-based geoprocessing and map services. Third,
    the entire system is migrated to a cloud environment to enhance user experience
    and support. As shown in Fig. 2, the iCrop system architecture comprises four
    main components: a data production module, a web service system module, front-end
    clients, and the cloud infrastructure. The data production module handles the
    generation of all ML-based crop-specific land cover geospatial data in the system.
    In this system, each data product is produced on the geospatial cloud computing
    platforms and GIS software, such as Google Earth Engine (GEE) and ArcGIS. The
    web service system module is the core of the iCrop system, where all geospatial
    data are processed into interoperable maps and disseminated through standardized
    OGC web geoprocessing and map service interfaces. These web services are fully
    interoperable with the iCrop web application as well as other OGC-compliant GIS
    software/libraries and third-party applications. Meanwhile, the entire iCrop system,
    including all data, web services, and the web client, is hosted as Platform-as-a-Service
    (PaaS) on the GeoBrain Cloud (https://cloud.csiss.gmu.edu/) to guarantee the scalability
    and timeliness of each geoprocessing request. The details of the implementation
    of the data production module, web service system, and the iCrop client will be
    described in the following sections. Download : Download high-res image (539KB)
    Download : Download full-size image Fig. 2. Design of the iCrop system architecture.
    2.3. Data production Table 1 summarizes the spatial and temporal information of
    the new crop-specific land cover data available on the iCrop system. Consistent
    with the official CDL, the three new geospatial data products, including pre-season
    crop cover, in-season crop cover, and Refined Cropland Data Layer (R-CDL), cover
    the entire CONUS at 30 m resolution. Each data product is produced using the specific
    ML model and released at the different crop growth stages. Table 1. Summary of
    land cover data available on the iCrop system. Data Temporal Coverage Spatial
    Coverage Spatial Resolution Release Date ML Model Pre-season crop cover 2022 –
    Current year (single annual map) CONUS 30 m Before growing season starts * Artificial
    neural network (Zhang et al., 2019) In-season crop cover 2022 – Current year (annual
    maps by May, June, and July) CONUS 30 m Within growing season (updated monthly
    between June and August) Random forest (Zhang et al., 2022a) R-CDL 2017 – Previous
    year (single annual map) CONUS 30 m After growing season ends * Decision tree
    (Lin et al., 2022) * Usually available in February after the new CDL data is released
    The pre-season crop cover map is the prediction of U.S. crop cover using an ML-based
    crop sequence prediction model proposed by Zhang et al. (2019). The model uses
    the artificial neural network to automatically learn crop rotation patterns from
    the 10-year CDL time series. Then the spatial distribution of pre-season crop
    cover will be predicted based on the historical crop sequence in CDL with the
    trained ML model. The pre-season data will be released before the growing season
    starts. For example, the production of the 2023 pre-season crop cover map is based
    on the 2013–2022 CDL, which began after the release of the 2022 CDL on February
    1st and finished in late February 2023. The in-season crop cover map is a remote-sensing-based
    crop-specific land cover data product derived from CDL and satellite images. The
    production of in-season crop mapping adopts a novel mapping-without-ground-truth
    workflow developed by Zhang et al. (2022a). The main advantage of this method
    is using the trusted pixels, the high-confidence pixels that are predicted from
    CDL time series using regular crop rotation patterns (e.g., monocropping, alternate
    cropping), to replace ground truth and label training samples in satellite images
    for crop type classification, which can significantly reduce the ground-truthing
    process and save substantial resource needs and labor costs. Implemented on the
    GEE platform, the mapping-without-ground-truth workflow employs the random forest
    classifier, which is widely used in remote-sensing-based crop mapping (Wang et
    al., 2019, Hao et al., 2020, Pierre Pott et al., 2022, Rufin et al., 2022, Soltanikazemi
    et al., 2022). As an in-season data product, the crop cover map by May/June/July
    will be updated monthly within the growing season. For example, the 2023 in-season
    crop cover map by May will be released in early June of 2023. With the progress
    of the growing season, the classification accuracy will be improved because of
    more abundant spectral features captured in the satellite images. The R-CDL, on
    the other hand, is the refinement data product of CDL. The official CDL contains
    a certain number of misclassified pixels, mixed pixels, and noisy pixels. These
    errors may lead to biased results in the following studies and analyses. To further
    refine the CDL data, Lin et al. (2022) proposed a decision tree method to find
    and validate anomalous pixels. This method first uses a decision tree to identify
    the potentially misclassified pixels in the single crop cover map, then adjust
    these pixels using spatial–temporal information from the long-term CDL time series.
    Same as the official CDL, the R-CDL is an annual data product. The R-CDL is produced
    using ArcGIS and currently available from 2017 to 2022. Once the new CDL is released,
    the corresponding R-CDL will be immediately generated. 2.4. Implementation of
    geospatial web services Similar to many cyberinformatics tools based on the FAIR
    data principle (Zhang et al., 2020, Wu et al., 2021, Erazo Ramirez et al., 2022,
    Redhead et al., 2022, Menegon et al., 2023), iCrop''s geospatial data is disseminated
    through OGC web service standard interfaces. When implementing the service layer
    of iCrop, we used MapServer (McKenna and MapServer PSC, 2021) as the back-end
    server to power the web mapping capabilities via standardized OGC specifications,
    such as WMS (OGC, 2006) and WCS (OGC, 2012). We also used ArcGIS as an alternative
    back-end WMS/WCS server to host the new geospatial data products described in
    this study through ArcGIS REST APIs. These standard interfaces facilitated interoperability
    with the front-end client as well as other WMS/WCS-compliant GIS software and
    applications. Specifically, WMS standardized the operations for requesting the
    dynamic map of a geospatial image via the HTTP protocol. Table 2 summarizes the
    operations and request examples of iCrop WMS. The GetCapabilities operation enables
    users to request the metadata of all crop cover map layers available on iCrop.
    The DescribeLayer operation allows users to request the description of a specific
    map layer. The GetMap operation request image of a specific map layer based on
    mapping parameters such as projection, bounding box, image format, and width/height
    of the map. In addition, the legend graphics of a specific map layer can be requested
    via the GetLegendGraphic operation. Table 2. WMS operations and request examples
    of the iCrop system. Operation Description Request Example GetCapabilities Get
    metadata of all available map layers Metadata of iCrop WMS: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
    DescribeLayer Describe information about the requested map layer Description of
    in-season crop cover map for July 2023: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=WMS&VERSION=1.1.1&REQUEST=DescribeLayer&LAYERS=cdl_2023_inseason_july
    GetMap Get image for a map layer of a geospatial data layer with specific parameters
    (e.g., layer name, projection, bounding box, and width/height of map) Image of
    in-season crop cover map for July 2023: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&LAYERS=cdl_2023_inseason_july&TRANSPARENT=true&SRS=EPSG:5070&BBOX=-2354935.721,311822.402,2256319.225,3165592.366&FORMAT=image/png&WIDTH=600&HEIGHT=400
    GetLegendGraphic Get legend graphics image of a specific map layer Legend image
    of in-season crop cover map: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?VERSION=1.1.1&SERVICE=WMS&REQUEST=getlegendgraphic&LAYER=cdl_2023_inseason_july&FORMAT=image/png
    Compared to the map image provided by WMS, WCS returns coverage data files with
    metadata and supports a wider range of formats that are typically required for
    further modeling and analysis. Table 3 summarizes the WCS operations and provides
    examples of requests used in iCrop. The functions and usage of WCS operations
    are similar to those of WMS. The GetCapabilities operation requests metadata for
    all available coverage layers on iCrop. The DescribeCoverage operation requests
    a description of a specific coverage layer. The GetCoverage operation requests
    the raster source of a specific crop cover layer based on coverage parameters,
    such as projection, bounding box, scale, and output data format. Table 3. WCS
    operations and request examples of the iCrop system. Operation Description Request
    Example GetCapabilities Get metadata about available coverage layers Metadata
    of iCrop WCS: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=wcs&VERSION=2.0.1&REQUEST=GetCapabilities
    DescribeCoverage Describe the information about the requested coverage Coverage
    description of in-season crop cover map for July 2023: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=wcs&VERSION=2.0.1&REQUEST=DescribeCoverage&COVERAGEID=cdl_2023_inseason_july
    GetCoverage Get raster source of a geospatial data layer with specific parameters
    (e.g., coverage layer name, projection, bounding box, scale, output data format)
    Raster data of in-season crop cover map for July 2023: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=wcs&VERSION=2.0.1&REQUEST=GetCoverage&COVERAGEID=cdl_2023_inseason_july&FORMAT=image/tiff&SUBSET=x(310785,330045)&SUBSET=y(2145855,2165115)&SUBSETTINGCRS=http://www.opengis.net/def/crs/EPSG/0/5070
    In order to cater to the users'' geospatial data analysis requirements, the iCrop
    system incorporates various widely used geoprocessing functionalities. Fig. 3
    shows the diagram of the geoprocessing workflow with the iCrop system. For instance,
    users can initiate an on-demand data download process by selecting the target
    data layer by year and the area of interest (AOI) by region, state, Agricultural
    Statistics Districts (ASD), county, or user-defined area. Besides, the iCrop system
    integrates a variety of common geoprocessing capabilities, such as zonal statistics,
    map generation, and change analysis. The zonal statistics function calculates
    the pixel value distribution over a specific region. The map production processes
    create the map of specific data products with legend and boundary information
    in PDF format. Download : Download high-res image (413KB) Download : Download
    full-size image Fig. 3. Diagram of geoprocessing workflow with the iCrop system.
    The “alt” fragments represent the alternative scenarios of the geoprocessing workflow.
    2.5. Graphical user interface of web client We implemented a web-based application,
    In-season Crop Mapping Explorer, as the front-end client for the iCrop system.
    Fig. 4 shows the graphical user interface (GUI) of the web client. The layout
    of this client inherits the well-known CropScape and VegScape application, which
    consists of a main interactive map explorer along with a menu bar and a sidebar.
    The main interactive map explorer displays geospatial data layers and provides
    basic map visualization functionalities. The main menu contains a toolbox bar
    with all available geoprocessing functions and links for user guides and documentation.
    The sidebar has a layers tab, a legend tab, and an overview mini-map. The layers
    tab lists all types of geospatial data, including all crop cover data products,
    background layer, crop mask layer, crop frequency layer, and auxiliary layers
    (i.e., boundaries, water, road). The legend tab shows the color table for crop
    type categories in the map. The overview mini-map displays the current extent
    of the explorer over the CONUS. Download : Download high-res image (844KB) Download
    : Download full-size image Fig. 4. GUI of the web-based client for iCrop (https://cloud.csiss.gmu.edu/icrop).
    3. Use cases and results 3.1. Geoprocessing capabilities The iCrop system presented
    in this study was initially developed to offer early-season decision support and
    applications through a suite of user-experience-centric geoprocessing functionalities.
    CropScape is being widely applied to produce maps and statistics data in white
    papers, business plans, technical reports, and other documents for multiple operational
    uses, which has successfully demonstrated the efficiency of cyberinformatics tools
    in agriculture. With the addition of three new field-level crop cover data products
    covering the CONUS, iCrop has extended the geoprocessing capabilities of CropScape,
    enabling more time-sensitive agricultural applications, and enhancing decision-making
    processes. Fig. 5 showcases a group of examples of how common iCrop geoprocessing
    capabilities can be applied for operational uses. As demonstrated in this example,
    an AOI needs to be defined by region, state, ASD, and county before any processes.
    This example illustrates the file download, zonal statistics, and PDF map generation
    capabilities based on the 2022 in-season crop cover data for Pemiscot County,
    Missouri, of which corn, cotton, rice, soybeans, and winter wheat are the dominant
    crop types. The file download function will create a direct download link for
    the data layer of the selected years in GeoTIFF or KML format. The zonal statistics
    function counts the pixel and calculates the acreage for each crop type or land
    cover category within the AOI. Then the statistics results can be displayed as
    pie/column charts in the web application, or downloaded the raw data in CSV format.
    The PDF map function generates a print-ready map in PDF format with customizable
    titles, paper sizes, boundary layers, and land cover categories. Download : Download
    high-res image (1MB) Download : Download full-size image Fig. 5. Examples of the
    iCrop geoprocessing capabilities. The statistics and mapping results are from
    the 2022 crop cover for Pemiscot, Missouri. 3.2. LULC change analysis This use
    case demonstrates the change analysis capability of iCrop for crop rotation detection.
    The change analysis function of iCrop compares the LULC change between two years
    and generates the map for the changing area of the specific crop rotation pattern.
    Fig. 6 shows an example of detecting corn-soybeans rotation for Kossuth County
    of Iowa between 2022 and 2021 using the change analysis function of iCrop. Download
    : Download high-res image (2MB) Download : Download full-size image Fig. 6. Example
    of corn-soybeans rotation for Kossuth County of Iowa in 2022 using the change
    analysis function of iCrop. The yellow and green pixels represent corn and soybeans.
    The red pixels in the crop rotation maps represent the changing area. Located
    in the central U.S. Corn Belt, corn and soybeans are two dominant crop types in
    Kossuth County as shown in Fig. 6 (a). In 2021, Kossuth County led all Iowa counties
    in total soybean production with 13.4 million bushels and corn for grain production
    with 57.7 million bushels produced (Nass, 2022a, USDA NASS, 2022b). It is well-known
    that crop rotation is a common practice in U.S. agriculture. The spatial distribution
    of corn-soybeans and soybeans-corn rotation over the study area is illustrated
    in Fig. 6 (b). From the change detection results between 2021 and 2022, we can
    observe that 195,396.6 of total 280,996.5 acres of corn cropland followed soybeans-corn
    rotation, as well as 197,184.7 of total 219,710.8 acres of soybeans cropland followed
    corn-soybeans rotation. 3.3. Interoperability with GIS software The map and coverage
    services of iCrop are fully interoperable with third-party WMS/WCS-compliant clients
    and applications. Thus, iCrop can be coupled to generic GIS software with OGC
    standards support, such as QGIS and ArcGIS. Fig. 7 demonstrates how a WMS layer
    of the 2023 in-season crop cover was stacked with the 2022 crop mask layer, county
    boundaries, and ASD boundaries in QGIS. In this example, the crop cover map is
    requested through the map layer “cdl_2023_inseason_july” of iCrop WMS. Download
    : Download high-res image (1MB) Download : Download full-size image Fig. 7. Exploring
    crop cover via the iCrop WMS using QGIS. This example shows the 2023 in-season
    crop cover map with the 2022 crop mask layer and county/ASD boundaries. We also
    tested the interoperability of iCrop on the GeoPlatform (https://www.geoplatform.gov/).
    Developed by Federal Geographic Data Committee (FGDC), the GeoPlatform program
    provides a portfolio of FAIR geospatial data, services, and applications under
    open licenses. It is mainly oriented to federal agencies, governments, private
    sectors, academia, and the general public. For example, the FAIR capabilities
    of the GeoPlatform have supported many application scenarios in the OGC Disaster
    Pilot programs, such as typhoon monitoring (Hu et al., 2022), flood detection
    (Lin et al., 2021), and climate services (Lieberman et al., 2022). Therefore,
    we choose GeoPlatform as another WMS/WCS-compliant platform to test the interoperability
    of the iCrop web services. Fig. 8 shows an example of integrating the iCrop WMS
    into GeoPlatform. The online prototype can be accessed via the GeoPlatform ArcGIS
    Online at https://geoplatform.maps.arcgis.com/apps/mapviewer/index.html?webmap=84a5aedb51e944ee924348f529a49cb5.
    Download : Download high-res image (920KB) Download : Download full-size image
    Fig. 8. Interoperability of the iCrop WMS with FGDC’s GeoPlatform based on ArcGIS
    Online. 4. Discussion 4.1. Cyberinformatics tool based on FAIR data principle
    The iCrop system significantly contributes to the advancement of cyberinformatics
    in U.S. agriculture through its provision of a specialized tool that combines
    FAIR data capabilities, flexible GIS interoperability, and user-friendly functionalities.
    As the first geospatial data service system offering pre- and in-season crop-specific
    land cover data for the CONUS, iCrop provides a comprehensive suite of easy-to-use
    functionalities, including zonal statistics and LULC change detection. These features
    enable the timely and abundant availability of field-level crop type information
    before and during the growing season. In the realm of geospatial analysis, the
    rapid development of geospatial cloud computing platforms like GEE and Microsoft''s
    Planetary Computer has substantially enhanced the capabilities and flexibility
    of geospatial analysis. However, the iCrop system distinguishes itself by emphasizing
    FAIR data principles. It focuses on the distribution of crop-specific land cover
    data through open geospatial data interfaces (e.g., WMS, WCS, WPS), which have
    been widely adopted by web-based GIS software and applications in agriculture
    (Nash et al., 2009). In contrast, commercial cloud platforms like GEE, while offering
    extensive functionalities and rich datasets, often lacks inherent adherence to
    FAIR data principles and restricts data usage to their own platform. By enabling
    easy interoperability with widely used GIS software like ArcGIS and QGIS, iCrop''s
    data and geoprocessing services offer a more inclusive approach. Our data and
    geoprocessing services, on the other hand, can be easily interoperable with common
    GIS software, such as ArcGIS and QGIS. It is important to note that the iCrop
    system is not designed to compete with geospatial cloud computing platforms. Instead,
    it serves as a complementing tool that addresses a distinct set of needs. While
    geospatial cloud computing platforms excel in their functionalities, iCrop focuses
    on providing specialized FAIR data capabilities and interoperability with common
    GIS software. This ensures that the iCrop system can be seamlessly integrated
    into existing geospatial workflows and extends its usability to a broader user
    base. Another pivotal advantage of iCrop lies in its user-friendliness. While
    geospatial cloud computing platforms such as GEE may require coding skills and
    entail a steep learning curve, iCrop strives to offer a comprehensive suite of
    on-demand geoprocessing functions, such as zonal statistics and LULC change analysis,
    through a user-friendly interface. This approach empowers not only software engineers
    but also end-users and stakeholders like farmers and government agencies, who
    may possess limited technical or programming skills, to derive maximum benefits
    from the system. With its ability to deliver timely crop-specific land cover data
    and functionalities to diverse user groups, iCrop demonstrates great potential
    to enhance U.S. agricultural information management and decision support. 4.2.
    Advantages of new crop-specific land cover data This study has demonstrated how
    ML-based crop cover data can be easily shared and analyzed through a cyberinformatics
    tool that adheres to the FAIR data principles. When compared to CDL data, the
    ML-based crop cover data products on iCrop offer several advantages. First, the
    artificial neural network can automatically and reliably recognize crop sequence
    patterns from the historical CDL time series. With the pre-season crop mapping,
    the field-level spatial distribution and acreage of crop cover can be estimated
    before the growing season. Second, the remote-sensing-based crop cover map for
    CONUS is significantly accelerated using the new mapping-without-ground-truth
    approach. By combining spectral information in satellite images with spatiotemporal
    information from historical CDL, the CDL-like in-season crop cover data for CONUS
    is available on iCrop as early as May. This is as much as eight months ahead of
    the official release of CDL data. In contrast, the R-CDL method utilizes a decision
    tree approach to refine CDL data using spatial and temporal crop information.
    Validation results reveal enhanced classification accuracy, and a strong correlation
    between R-CDL and NASS crop acreage estimations at both county and state levels.
    This indirect validation highlights the effectiveness and efficiency of AI/ML
    techniques in further improving the accuracy of CDL data. 4.3. Potential improvements
    on the current tool While the ML model effectively generates pre-season crop cover
    maps by learning crop sequence features in the historical CDL time series, predicting
    crop types for croplands that deviate from established patterns remains a challenge
    due to dynamic and uncertain factors. To address this, we plan to incorporate
    additional features, such as agricultural commodity prices and weather information,
    into the prediction model''s training. Recent studies have demonstrated the potential
    of combining multisource geoinformation data and model to enhance crop and LULC
    modeling (Abunnasr and Mhawej, 2022, Baum et al., 2023, Leo et al., 2023, Massigoge
    et al., 2023, Meki et al., 2023). To further enhance the accuracy of the current
    crop mapping results, the impact of other agro-geoinformation data and geospatial
    land cover data products, such as National Land Cover Database (NLCD) (Dewitz,
    2021) and Land Change Monitoring, Assessment, and Projection (LCMAP) (Pengra et
    al., 2021), will be investigated and integrated into the ML models of the data
    production module. Additionally, more geoprocessing services, such as advanced
    raster calculation, time series analysis, and confidence layer comparison, will
    be integrated with the iCrop system in the next phase of development. 4.4. Future
    research recommendation The subsequent developments could be conducted based on
    the new cyberinformatics tool proposed in this study. For example, Yue et al.
    (2022) recently proposed a FAIR training data model specifically serving Earth
    observation AI/ML tasks. It is a promising GIS application to incorporate the
    training data model into iCrop’s geoprocessing services via the FAIR interface,
    which can potentially automate the crop-specific training sample selection and
    labeling process for the follow-up AI/ML model development in Earth observation
    research. Tekinerdogan and Verdouw (2020) and Verdouw et al. (2021) depict the
    conceptual frameworks for designing and implementing digital twins in agriculture.
    The iCrop’s data and web services have great potential to be integrated into such
    digital twin frameworks to advance smart agriculture. The another potential future
    research recommendation is to explore the possibility of integrating the in-season
    land cover data of iCrop with the geoscience model workflow through OGC standard
    interfaces to enable the capabilities of crop damage assessment. Many research
    topics in geoinformation science can be significantly facilitated using the new
    geospatial data of iCrop. Due to the insufficiency of ground truth data during
    the early growing season, iCrop’s national-scale crop cover data products can
    be used as reference data sets in various agro-geoinformation studies. For example,
    the national-scale crop yield can be progressively estimated using the pre- and
    in-season data within the growing season. The detailed crop loss due to natural
    disasters, such as floods, drought, and hurricanes, can be dynamically assessed
    using the monthly in-season crop cover maps. Moreover, we will optimize the crop
    type classification algorithm and test more AI/ML strategies to improve the mapping
    results. The zonal statistics function estimates the crop acreage by counting
    pixels in crop cover maps. This result could be biased because of the known data
    issues discussed above. Therefore, we will explore the feasibility of integrating
    the advanced crop yield estimation models and frameworks (Jeffries et al., 2020,
    Lin et al., 2020, Li et al., 2021, Andrade et al., 2022, Eamen et al., 2022, Nóia
    Júnior, 2022) into the system to optimize the statistics results. 5. Conclusion
    This paper introduced the design, implementation, and application of iCrop for
    the exploration of crop-specific land cover data in support of U.S. agriculture.
    Three types of new ML-based crop cover data products, pre-season crop cover, in-season
    crop cover, and R-CDL, were disseminated through this new cyberinformatics tool
    based on FAIR data principles. Improved from the service-oriented architecture
    of well-known CropScape, iCrop enabled interoperable mapping and geoprocessing
    capability of timely observation of crop-specific land cover through the easy-to-use
    web application and OGC standards-compliant GIS software. We demonstrated several
    common geoprocessing functionalities, including on-demand file download, zonal
    statistics, and PDF map production, using the iCrop web client. Specifically,
    the change analysis function was applied to analyze the LULC change for the Kossuth
    County of Iowa between 2021 and 2022. Also, we tested the interoperability of
    the iCrop web service using generic GIS software, such as QGIS, and web-based
    GIS platforms, such as FGDC’s GeoPlatform based on ArcGIS Online. The result suggested
    that the proposed cyberinformatics tool can efficiently and effectively provide
    timely agricultural LULC information to facilitate U.S. agricultural information
    management and decision support. Software availability Software Name: iCrop Developer:
    Center for Spatial Information Science and Systems, George Mason University iCrop
    Web Client: https://cloud.csiss.gmu.edu/icrop/. iCrop WMS: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities.
    iCrop WCS: https://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE = wcs&VERSION
    = 2.0.1&REQUEST = GetCapabilitieshttps://cloud.csiss.gmu.edu/icrop-service/wms_icrop.cgi?SERVICE=wcs&VERSION=2.0.1&REQUEST=GetCapabilities.
    ArcGIS REST API: https://crop.csiss.gmu.edu/arcgis/rest/services/iCrop_Service/MapServer
    CRediT authorship contribution statement Chen Zhang: Conceptualization, Methodology,
    Formal analysis, Software, Writing - original draft. Liping Di: Conceptualization,
    Methodology, Supervision, Funding acquisition, Writing – review & editing. Li
    Lin: Software, Investigation, Writing – review & editing. Haoteng Zhao: Software.
    Hui Li: Validation. Anna Yang: Investigation. Liying Guo: Supervision, Writing
    - review & editing. Zhengwei Yang: Resources, Writing - review & editing. Declaration
    of Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgment This research is supported by a grant
    from USDA NIFA (Grant #2021-67021-34151, PI: Dr. Liping Di) and a grant from NSF
    (Grant #2236137, PI: Dr. Liping Di). The authors would like to thank two anonymous
    reviewers for their valuable comments and suggestions. References Abernethy et
    al., 2023 J. Abernethy, P. Beeson, C. Boryan, K. Hunt, L. Sartore Preseason crop
    type prediction using crop sequence boundaries Comput. Electron. Agric., 208 (2023),
    Article 107768, 10.1016/j.compag.2023.107768 View PDFView articleView in ScopusGoogle
    Scholar Abunnasr and Mhawej, 2022 Y. Abunnasr, M. Mhawej Towards a combined Landsat-8
    and Sentinel-2 for 10-m land surface temperature products: The Google Earth Engine
    monthly Ten-ST-GEE system Environmental Modelling & Software, 155 (2022), Article
    105456, 10.1016/j.envsoft.2022.105456 View PDFView articleView in ScopusGoogle
    Scholar Acharya et al., 2022 P. Acharya, T. Burgers, K.-D. Nguyen AI-enabled droplet
    detection and tracking for agricultural spraying systems Comput. Electron. Agric.,
    202 (2022), Article 107325, 10.1016/j.compag.2022.107325 View PDFView articleView
    in ScopusGoogle Scholar Andrade et al., 2022 J.F. Andrade, S. Mourtzinis, J.I.
    Rattalino Edreira, S.P. Conley, J. Gaska, H.J. Kandel, L.E. Lindsey, S. Naeve,
    S. Nelson, M.P. Singh, L. Thompson, J.E. Specht, P. Grassini Field validation
    of a farmer supplied data approach to close soybean yield gaps in the US North
    Central region Agr. Syst., 200 (2022), Article 103434, 10.1016/j.agsy.2022.103434
    View PDFView articleView in ScopusGoogle Scholar Armstrong et al., 2022 S. Armstrong,
    P. Khandelwal, D. Padalia, G. Senay, D. Schulte, A. Andales, F.J. Breidt, S. Pallickara,
    S.L. Pallickara Attention-based convolutional capsules for evapotranspiration
    estimation at scale Environ. Model. Softw., 152 (2022), Article 105366, 10.1016/j.envsoft.2022.105366
    View PDFView articleView in ScopusGoogle Scholar Barton et al., 2022 C.M. Barton,
    D. Ames, M. Chen, K. Frank, H.R.A. Jagers, A. Lee, S. Reis, L. Swantek Making
    modeling and software FAIR Environ. Model. Softw., 156 (2022), Article 105496,
    10.1016/j.envsoft.2022.105496 View PDFView articleView in ScopusGoogle Scholar
    Baum et al., 2023 M.E. Baum, J.E. Sawyer, E.D. Nafziger, I. Huber, P.J. Thorburn,
    M.J. Castellano, S.V. Archontoulis Evaluating and improving APSIM’s capacity in
    simulating long-term corn yield response to nitrogen in continuous- and rotated-corn
    systems Agr. Syst., 207 (2023), Article 103629, 10.1016/j.agsy.2023.103629 View
    PDFView articleView in ScopusGoogle Scholar Bayat et al., 2021 B. Bayat, F. Camacho,
    J. Nickeson, M. Cosh, J. Bolten, H. Vereecken, C. Montzka Toward operational validation
    systems for global satellite-based terrestrial essential climate variables Int.
    J. Appl. Earth Obs. Geoinf., 95 (2021), Article 102240, 10.1016/j.jag.2020.102240
    View PDFView articleView in ScopusGoogle Scholar Dewitz, 2021 Dewitz, J., 2021.
    National Land Cover Database (NLCD) 2019 Products. 10.5066/P9KZCM54. Google Scholar
    Di et al., 2021 Di, L., Üstündağ, B. (Eds.), 2021. Agro-geoinformatics: Theory
    and Practice, Springer Remote Sensing/Photogrammetry. Springer International Publishing,
    Cham. 10.1007/978-3-030-66387-2. Google Scholar Eamen et al., 2022 L. Eamen, R.
    Brouwer, S. Razavi Comparing the applicability of hydro-economic modelling approaches
    for large-scale decision-making in multi-sectoral and multi-regional river basins
    Environ. Model. Softw., 152 (2022), Article 105385, 10.1016/j.envsoft.2022.105385
    View PDFView articleView in ScopusGoogle Scholar Erazo Ramirez et al., 2022 C.
    Erazo Ramirez, Y. Sermet, F. Molkenthin, I. Demir HydroLang: An open-source web-based
    programming framework for hydrological sciences Environ. Model. Softw., 157 (2022),
    Article 105525, 10.1016/j.envsoft.2022.105525 View PDFView articleView in ScopusGoogle
    Scholar Graf et al., 2022 L.V. Graf, G. Perich, H. Aasen EOdal: An open-source
    Python package for large-scale agroecological research using Earth Observation
    and gridded environmental data Comput. Electron. Agric., 203 (2022), Article 107487,
    10.1016/j.compag.2022.107487 View PDFView articleView in ScopusGoogle Scholar
    Han et al., 2012 W. Han, Z. Yang, L. Di, R. Mueller CropScape: A Web service based
    application for exploring and disseminating US conterminous geospatial cropland
    data products for decision support Comput. Electron. Agric., 84 (2012), pp. 111-123,
    10.1016/j.compag.2012.03.005 View PDFView articleView in ScopusGoogle Scholar
    Hao et al., 2015 P. Hao, Y. Zhan, L. Wang, Z. Niu, M. Shakir Feature Selection
    of Time Series MODIS Data for Early Crop Classification Using Random Forest: A
    Case Study in Kansas, USA Remote Sens. (Basel), 7 (2015), pp. 5347-5369, 10.3390/rs70505347
    View in ScopusGoogle Scholar Hao et al., 2020 P. Hao, L. Di, C. Zhang, L. Guo
    Transfer Learning for Crop classification with Cropland Data Layer data (CDL)
    as training samples Science of The Total Environment, 733 (2020), Article 138869,
    10.1016/j.scitotenv.2020.138869 View PDFView articleView in ScopusGoogle Scholar
    Hu et al., 2022 L. Hu, Z. Fang, M. Zhang, L. Jiang, P. Yue Facilitating Typhoon-Triggered
    Flood Disaster-Ready Information Delivery Using SDI Services Approach—A Case Study
    in Hainan Remote Sens. (Basel), 14 (2022), p. 1832, 10.3390/rs14081832 View in
    ScopusGoogle Scholar Hu et al., 2023 L. Hu, C. Zhang, M. Zhang, Y. Shi, J. Lu,
    Z. Fang Enhancing FAIR Data Services in Agricultural Disaster: A Review Remote
    Sensing, 15 (2023), p. 2024, 10.3390/rs15082024 View in ScopusGoogle Scholar Jeffries
    et al., 2020 G.R. Jeffries, T.S. Griffin, D.H. Fleisher, E.N. Naumova, M. Koch,
    B.D. Wardlow Mapping sub-field maize yields in Nebraska, USA by combining remote
    sensing imagery, crop simulation models, and machine learning Precis. Agric.,
    21 (2020), pp. 678-694, 10.1007/s11119-019-09689-z View in ScopusGoogle Scholar
    Johnson and Mueller, 2021 D.M. Johnson, R. Mueller Pre- and within-season crop
    type classification trained with archival land cover information Remote Sens.
    Environ., 264 (2021), Article 112576, 10.1016/j.rse.2021.112576 View PDFView articleView
    in ScopusGoogle Scholar Leo et al., 2023 S. Leo, M. De Antoni Migliorati, T.H.
    Nguyen, P.R. Grace Combining remote sensing-derived management zones and an auto-calibrated
    crop simulation model to determine optimal nitrogen fertilizer rates Agr. Syst.,
    205 (2023), Article 103559, 10.1016/j.agsy.2022.103559 View PDFView articleView
    in ScopusGoogle Scholar Li et al., 2021 R. Li, C. Wei, M.D. Afroz, J. Lyu, G.
    Chen A GIS-based framework for local agricultural decision-making and regional
    crop yield simulation Agr. Syst., 193 (2021), Article 103213, 10.1016/j.agsy.2021.103213
    View PDFView articleView in ScopusGoogle Scholar Lieberman et al., 2022 Lieberman,
    J., Hempelmann, N., Stephens, A., Ehbrecht, C., Smith, T., Landry, T., Wilson,
    C., Pechorro, E., 2022. FAIR building blocks for climate resilience information
    systems (No. EGU22-6593). Presented at the EGU22, Copernicus Meetings. 10.5194/egusphere-egu22-6593.
    Google Scholar Lin et al., 2022 L. Lin, L. Di, C. Zhang, L. Guo, Y. Di, H. Li,
    A. Yang Validation and refinement of cropland data layer using a spatial-temporal
    decision tree algorithm Sci. Data, 9 (2022), p. 63, 10.1038/s41597-022-01169-w
    View in ScopusGoogle Scholar Lin et al., 2019 Lin, L., Di, L., Zhang, C., Guo,
    L., Tang, J., Yu, E.G., Rahman, Md.S., Zhao, H., Yu, Z., Sun, Z., Gaigalas, J.,
    2019. Building Near-Real-Time MODIS Data Fusion Workflow to Support Agricultural
    Decision-making Applications, in: 2019 8th International Conference on Agro-Geoinformatics
    (Agro-Geoinformatics). Presented at the 2019 8th International Conference on Agro-Geoinformatics
    (Agro-Geoinformatics), pp. 1–5. 10.1109/Agro-Geoinformatics.2019.8820229. Google
    Scholar Lin et al., 2021 Lin, L., Di, L., Yu, E., Zhang, C., Zhao, H., 2021. Disaster
    Information Dissemination During Emergency Event: An Experiment in OGC Disaster
    Resilience Pilot, in: 2021 9th International Conference on Agro-Geoinformatics
    (Agro-Geoinformatics). Presented at the 2021 9th International Conference on Agro-Geoinformatics
    (Agro-Geoinformatics), pp. 1–4. 10.1109/Agro-Geoinformatics50104.2021.9530289.
    Google Scholar Lin et al., 2020 T. Lin, R. Zhong, Y. Wang, J. Xu, H. Jiang, J.
    Xu, Y. Ying, L. Rodriguez, K.C. Ting, H. Li DeepCropNet: a deep spatial-temporal
    learning framework for county-level corn yield estimation Environ. Res. Lett.,
    15 (2020), Article 034016, 10.1088/1748-9326/ab66cb View in ScopusGoogle Scholar
    Massigoge et al., 2023 I. Massigoge, A. Carcedo, A.F. de Borja Reis, C. Mitchell,
    S. Day, J. Oliverio, S.H. Truong, R.F. McCormick, J. Rotundo, S. Lira, I. Ciampitti,
    C.D. Messina Exploring avenues for agricultural intensification: A case study
    for maize-soybean in the Southern US region Agr. Syst., 204 (2023), Article 103539,
    10.1016/j.agsy.2022.103539 View PDFView articleView in ScopusGoogle Scholar McKenna
    and MapServer, 2021 J. McKenna, P.S.C. MapServer MapServer. (2021), 10.5281/zenodo.5842013
    Google Scholar Medina et al., 2021 H. Medina, D. Tian, A. Abebe On optimizing
    a MODIS-based framework for in-season corn yield forecast Int. J. Appl. Earth
    Obs. Geoinf., 95 (2021), Article 102258, 10.1016/j.jag.2020.102258 View PDFView
    articleView in ScopusGoogle Scholar Meki et al., 2023 M.N. Meki, J. Osorio-Leyton,
    E.M. Steglich, J.R. Kiniry, M. Propato, M. Winchell, H. Rathjens, J.P. Angerer,
    L.M. Norfleet Plant parameterization and APEXgraze model calibration and validation
    for US land resource region H grazing lands Agr. Syst., 207 (2023), Article 103631,
    10.1016/j.agsy.2023.103631 View PDFView articleView in ScopusGoogle Scholar Menegon
    et al., 2023 S. Menegon, A. Fadini, L. Perini, A. Sarretta, D. Depellegrin, E.
    De Maio, G. Farella, M. Landini, C. Fava, C. Ferrarin, M. Ghezzo, E. Manea, E.M.D.
    Porporato, R. Pastres, O. Sedioli, D.V. Politikos, I. Maina, S. Kavadas, R. Matarrese,
    A. Barbanti A geoportal of data and tools for supporting Maritime Spatial Planning
    in the Adriatic-Ionian Region Environ. Model. Softw., 160 (2023), Article 105585,
    10.1016/j.envsoft.2022.105585 View PDFView articleView in ScopusGoogle Scholar
    Mulrooney et al., 2021 T. Mulrooney, R. Foster, M. Jha, L.H. Beni, L. Kurkalova,
    C.L. Liang, H. Miao, G. Monty Using geospatial networking tools to optimize source
    locations as applied to the study of food availability: A study in Guilford County
    North Carolina. Applied Geography, 128 (2021), Article 102415, 10.1016/j.apgeog.2021.102415
    View PDFView articleView in ScopusGoogle Scholar Nash et al., 2009 E. Nash, P.
    Korduan, R. Bill Applications of open geospatial web services in precision agriculture:
    a review Precis. Agric., 10 (2009), pp. 546-560, 10.1007/s11119-009-9134-0 View
    in ScopusGoogle Scholar Nass, 2021 USDA NASS, 2021. CroplandCROS web app updates
    existing geospatial data product for agricultural commodities in the United States
    [WWW Document]. URL https://www.nass.usda.gov/Newsroom/archive/2021/10-28-2021.php
    (accessed 11.6.22). Google Scholar Nass, 2022a USDA NASS, 2022a. Iowa Ag News
    - 2021 Corn County Estimates. Google Scholar Nifa, 2021 USDA NIFA, 2021. NIFA
    Invests $15.5M in Food and Agriculture Cyberinformatics Tools to Boost Agricultural
    Production [WWW Document]. National Institute of Food and Agriculture. URL http://www.nifa.usda.gov/about-nifa/press-releases/nifa-invests-155m-food-agriculture-cyberinformatics-tools-boost
    (accessed 10.11.22). Google Scholar Nóia Júnior, 2022 R. de S. Nóia Júnior, C.W.
    Fraisse, M. Bashyal, M.J. Mulvaney, R. Seepaul, M.A. Zientarski Karrei, J.E. Iboyi,
    D. Perondi, V.A. Cerbaro, K.J. Boote Brassica carinata as an off-season crop in
    the southeastern USA: Determining optimum sowing dates based on climate risks
    and potential effects on summer crop yield Agricultural Systems, 196 (2022), 10.1016/j.agsy.2021.103344
    Google Scholar OGC, 2006 OGC, 2006. OpenGIS® Web Map Server Implementation Specification
    [WWW Document]. URL https://portal.ogc.org/files/?artifact_id=14416. Google Scholar
    OGC, 2012 OGC, 2012. OGC® WCS 2.0 Interface Standard [WWW Document]. URL https://portal.ogc.org/files/09-110r4.
    Google Scholar Pengra et al., 2021 Pengra, B., Stehman, S.V., Horton, J.A., Wellington,
    D.F., 2021. Land Change Monitoring, Assessment, and Projection (LCMAP) Collection
    1.1 Annual Land Cover and Land Cover Change Validation Tables (1985-2018) for
    the Conterminous United States. 10.5066/P9MLPFOH. Google Scholar Pierre Pott et
    al., 2022 L. Pierre Pott, T. Jorge Carneiro Amado, R. Augusto Schwalbert, G. Mateus
    Corassa, I. Antonio Ciampitti Crop type classification in Southern Brazil: Integrating
    remote sensing, crop modeling and machine learning Computers and Electronics in
    Agriculture, 201 (2022), 10.1016/j.compag.2022.107320 Google Scholar Redhead et
    al., 2022 J.W. Redhead, R. Burkmar, M. Brown, R.F. Pywell E-Planner: A web-based
    tool for planning environmental enhancement on British agricultural land Environ.
    Model. Softw., 155 (2022), Article 105437, 10.1016/j.envsoft.2022.105437 View
    PDFView articleView in ScopusGoogle Scholar Rufin et al., 2022 P. Rufin, A. Bey,
    M. Picoli, P. Meyfroidt Large-area mapping of active cropland and short-term fallows
    in smallholder landscapes using PlanetScope data International Journal of Applied
    Earth Observation and Geoinformation, 112 (2022), Article 102937, 10.1016/j.jag.2022.102937
    View PDFView articleView in ScopusGoogle Scholar Sanderman et al., 2021 J. Sanderman,
    K. Savage, S.R.S. Dangal, G. Duran, C. Rivard, M.A. Cavigelli, H.T. Gollany, V.L.
    Jin, M.A. Liebig, E.C. Omondi, Y. Rui, C. Stewart Can Agricultural Management
    Induced Changes in Soil Organic Carbon Be Detected Using Mid-Infrared Spectroscopy?
    Remote Sens. (Basel), 13 (2021), p. 2265, 10.3390/rs13122265 View in ScopusGoogle
    Scholar Singh et al., 2021 A. Singh, S. Jones, B. Ganapathysubramanian, S. Sarkar,
    D. Mueller, K. Sandhu, K. Nagasubramanian Challenges and Opportunities in Machine-Augmented
    Plant Stress Phenotyping Trends in Plant Science, 26 (2021), pp. 53-69, 10.1016/j.tplants.2020.07.010
    View PDFView articleView in ScopusGoogle Scholar Soltanikazemi et al., 2022 M.
    Soltanikazemi, S. Minaei, H. Shafizadeh-Moghadam, A. Mahdavian Field-scale estimation
    of sugarcane leaf nitrogen content using vegetation indices and spectral bands
    of Sentinel-2: Application of random forest and support vector regression Comput.
    Electron. Agric., 200 (2022), Article 107130, 10.1016/j.compag.2022.107130 View
    PDFView articleGoogle Scholar Tan et al., 2022 X. Tan, J. Jiao, Y. Zhong, A. Ma,
    Y. Xu, Z. Sha, F. Huang, Y. Wan, W. Hu The CNRIEEEMC: A communication-navigation-remote
    sensing-integrated ecological environment emergency monitoring chain for tailings
    areas Int. J. Appl. Earth Obs. Geoinf., 108 (2022), Article 102710, 10.1016/j.jag.2022.102710
    View PDFView articleView in ScopusGoogle Scholar Tekinerdogan and Verdouw, 2020
    B. Tekinerdogan, C. Verdouw Systems Architecture Design Pattern Catalog for Developing
    Digital Twins Sensors, 20 (2020), p. 5103, 10.3390/s20185103 Google Scholar Top
    et al., 2022 J. Top, S. Janssen, H. Boogaard, R. Knapen, G. Şimşek-Şenel Cultivating
    FAIR principles for agri-food data Comput. Electron. Agric., 196 (2022), Article
    106909, 10.1016/j.compag.2022.106909 View PDFView articleView in ScopusGoogle
    Scholar USDA NASS, 2022b USDA NASS, 2022b. Iowa Ag News - 2021 Soybeans County
    Estimates. Google Scholar USDA NIFA, 2020 USDA NIFA, 2020. NIFA Invests Over $7
    Million in Big Data, Artificial Intelligence, and Other Cyberinformatics Research
    [WWW Document]. National Institute of Food and Agriculture. URL http://www.nifa.usda.gov/about-nifa/press-releases/nifa-invests-over-7-million-big-data-artificial-intelligence-other
    (accessed 10.11.22). Google Scholar Verdouw et al., 2021 C. Verdouw, B. Tekinerdogan,
    A. Beulens, S. Wolfert Digital twins in smart farming Agr. Syst., 189 (2021),
    Article 103046, 10.1016/j.agsy.2020.103046 View PDFView articleView in ScopusGoogle
    Scholar Wang et al., 2019 S. Wang, G. Azzari, D.B. Lobell Crop type mapping without
    field-level labels: Random forest transfer and unsupervised clustering techniques
    Remote Sens. Environ., 222 (2019), pp. 303-317, 10.1016/j.rse.2018.12.026 View
    PDFView articleView in ScopusGoogle Scholar White et al., 2021 E.L. White, J.A.
    Thomasson, B. Auvermann, N.R. Kitchen, L.S. Pierson, D. Porter, C. Baillie, H.
    Hamann, G. Hoogenboom, T. Janzen, R. Khosla, J. Lowenberg-DeBoer, M. McIntosh,
    S. Murray, D. Osborn, A. Shetty, C. Stevenson, J. Tevis, F. Werner Report from
    the conference, ‘identifying obstacles to applying big data in agriculture’ Precis.
    Agric., 22 (2021), pp. 306-315, 10.1007/s11119-020-09738-y View in ScopusGoogle
    Scholar Wilkinson et al., 2016 Wilkinson, M.D., Dumontier, M., Aalbersberg, Ij.J.,
    Appleton, G., Axton, M., Baak, A., Blomberg, N., Boiten, J.-W., da Silva Santos,
    L.B., Bourne, P.E., Bouwman, J., Brookes, A.J., Clark, T., Crosas, M., Dillo,
    I., Dumon, O., Edmunds, S., Evelo, C.T., Finkers, R., Gonzalez-Beltran, A., Gray,
    A.J.G., Groth, P., Goble, C., Grethe, J.S., Heringa, J., ’t Hoen, P.A.C., Hooft,
    R., Kuhn, T., Kok, R., Kok, J., Lusher, S.J., Martone, M.E., Mons, A., Packer,
    A.L., Persson, B., Rocca-Serra, P., Roos, M., van Schaik, R., Sansone, S.-A.,
    Schultes, E., Sengstag, T., Slater, T., Strawn, G., Swertz, M.A., Thompson, M.,
    van der Lei, J., van Mulligen, E., Velterop, J., Waagmeester, A., Wittenburg,
    P., Wolstencroft, K., Zhao, J., Mons, B., 2016. The FAIR Guiding Principles for
    scientific data management and stewardship. Sci Data 3, 160018. 10.1038/sdata.2016.18.
    Google Scholar Wolfert et al., 2023 S. Wolfert, C. Verdouw, L. van Wassenaer,
    W. Dolfsma, L. Klerkx Digital innovation ecosystems in agri-food: design principles
    and organizational framework Agr. Syst., 204 (2023), Article 103558, 10.1016/j.agsy.2022.103558
    View PDFView articleView in ScopusGoogle Scholar Wu et al., 2021 F. Wu, B. Wu,
    W. Zhu, N. Yan, Z. Ma, L. Wang, Y. Lu, J. Xu ETWatch cloud: APIs for regional
    actual evapotranspiration data generation Environ. Model. Softw., 145 (2021),
    Article 105174, 10.1016/j.envsoft.2021.105174 View PDFView articleView in ScopusGoogle
    Scholar Yang et al., 2021 Yang, Z., Zhang, C., Zhao, H., Sun, Z., Bindlish, R.,
    Liu, P.-W., Colliander, A., Mueller, R., Di, L., Crow, W., Reichle, R.H., 2021.
    Crop-CASMA - A Web GIS Tool for Cropland Soil Moisture Monitoring and Assessment
    Based on SMAP Data, in: 2021 IEEE International Geoscience and Remote Sensing
    Symposium IGARSS. Presented at the 2021 IEEE International Geoscience and Remote
    Sensing Symposium IGARSS, pp. 6315–6318. 10.1109/IGARSS47720.2021.9554526. Google
    Scholar Yaramasu et al., 2020 R. Yaramasu, V. Bandaru, K. Pnvr Pre-season crop
    type mapping using deep neural networks Comput. Electron. Agric., 176 (2020),
    Article 105664, 10.1016/j.compag.2020.105664 View PDFView articleView in ScopusGoogle
    Scholar Yue et al., 2022 P. Yue, B. Shangguan, L. Hu, L. Jiang, C. Zhang, Z. Cao,
    Y. Pan Towards a training data model for artificial intelligence in earth observation
    Int. J. Geogr. Inf. Sci., 36 (2022), pp. 2113-2137, 10.1080/13658816.2022.2087223
    View in ScopusGoogle Scholar Zhang et al., 2019 C. Zhang, L. Di, L. Lin, L. Guo
    Machine-learned prediction of annual crop planting in the U.S. Corn Belt based
    on historical crop planting maps Comput. Electron. Agric., 166 (2019), Article
    104989, 10.1016/j.compag.2019.104989 View PDFView articleView in ScopusGoogle
    Scholar Zhang et al., 2021 C. Zhang, L. Di, P. Hao, Z. Yang, L. Lin, H. Zhao,
    L. Guo Rapid in-season mapping of corn and soybeans using machine-learned trusted
    pixels from Cropland Data Layer Int. J. Appl. Earth Obs. Geoinf., 102 (2021),
    Article 102374, 10.1016/j.jag.2021.102374 View PDFView articleView in ScopusGoogle
    Scholar Zhang et al., 2022a C. Zhang, L. Di, L. Lin, H. Li, L. Guo, Z. Yang, E.G.
    Yu, Y. Di, A. Yang Towards automation of in-season crop type mapping using spatiotemporal
    crop information and remote sensing data Agr. Syst., 201 (2022), Article 103462,
    10.1016/j.agsy.2022.103462 View PDFView articleView in ScopusGoogle Scholar Zhang
    et al., 2020 M. Zhang, L. Jiang, P. Yue, J. Gong Interoperable web sharing of
    environmental models using OGC web processing service and Open Modeling Interface
    (OpenMI) Environ. Model. Softw., 133 (2020), Article 104838, 10.1016/j.envsoft.2020.104838
    View PDFView articleGoogle Scholar Zhang et al., 2022b C. Zhang, Z. Yang, L. Di,
    E.G. Yu, B. Zhang, W. Han, L. Lin, L. Guo Near-real-time MODIS-derived vegetation
    index data products and online services for CONUS based on NASA LANCE Sci. Data,
    9 (2022), p. 477, 10.1038/s41597-022-01565-2 Google Scholar Zhang et al., 2022c
    C. Zhang, Z. Yang, H. Zhao, Z. Sun, L. Di, R. Bindlish, P.-W. Liu, A. Colliander,
    R. Mueller, W. Crow, R.H. Reichle, J. Bolten, S.H. Yueh Crop-CASMA: A web geoprocessing
    and map service based architecture and implementation for serving soil moisture
    and crop vegetation condition data over U.S Cropland. International Journal of
    Applied Earth Observation and Geoinformation, 112 (2022), Article 102902, 10.1016/j.jag.2022.102902
    View PDFView articleView in ScopusGoogle Scholar Cited by (2) Automated In-Season
    Crop-Type Data Layer Mapping Without Ground Truth for the Conterminous United
    States Based on Multisource Satellite Imagery 2024, IEEE Transactions on Geoscience
    and Remote Sensing Early Identification of Corn and Soybean Using Crop Growth
    Curve Matching Method 2024, Agronomy View Abstract © 2023 Elsevier B.V. All rights
    reserved. Part of special issue Agricultural Cybernetics: A New Methodology of
    Analysis and Development for Modern Agricultural Production Systems Edited by
    Yanbo Huang, Manoj Karkee, Lie Tang, Dong Chen View special issue Recommended
    articles Gain self-adjusting single neuron PID control method and experiments
    for longitudinal relative position of harvester and transport vehicle Computers
    and Electronics in Agriculture, Volume 213, 2023, Article 108215 Fan Ding, …,
    Tian Zhang View PDF A distributed agroecosystem model (RegWHCNS) for water and
    N management at the regional scale: A case study in the North China Plain Computers
    and Electronics in Agriculture, Volume 213, 2023, Article 108216 Hao Liang, …,
    William D. Batchelor View PDF Numerical study on the performance of circular juvenile
    fish breeding ponds Computers and Electronics in Agriculture, Volume 213, 2023,
    Article 108206 Atefeh Moghbeli, …, Mohammad Zounemat-Kermani View PDF Show 3 more
    articles Article Metrics Citations Citation Indexes: 1 Captures Readers: 16 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Cyberinformatics tool for in-season crop-specific land cover monitoring:
    Design, implementation, and applications of iCrop'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Cota D.
  - Martins J.
  - Mamede H.
  - Branco F.
  citation_count: '3'
  description: 'Precision Beekeeping, a field of Precision Agriculture, is an apiary
    management strategy based on monitoring honeybee colonies to promote more sustainable
    resource usage and maximise productivity. The approach related to Precision Beekeeping
    is based on methodologies to mitigate the stress associated with human intervention
    in the colonies and the waste of resources. These goals are achieved by supporting
    the intervention and managing the beekeeper''s timely and appropriate action at
    the colony''s level. In recent years, the growth of IoT (Internet-of-Things) in
    Precision Agriculture has spurred several proposals to contribute to the paradigm
    of Precision Beekeeping, built on different technical concepts and with different
    production costs. This work proposes and describes an information systems architecture
    concept named BHiveSense, based on IoT and microservices, and different artefacts
    to demonstrate its concept: (1) a low-cost COTS (Commercial Off-The-Shelf) hive
    sensing prototype, (2) a REST backend API, (3) a Web application, and (4) a Mobile
    application. This project delivers a solution for a more integrated and sustainable
    beekeeping activity. Our approach stresses that by adopting microservices and
    a REST architecture, it is possible to deal with long-standing problems concerning
    interoperability, scalability, agility, and maintenance issues, delivering an
    efficient beehive monitoring system.'
  doi: 10.1016/j.joitmc.2023.100110
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. Methodology 4. Proposed
    architecture 5. Conclusions and future work Supplementary materials Informed consent
    statement Funding Ethical statement CRediT authorship contribution statement Declaration
    of Competing Interest Acknowledgements References Show full outline Cited by (4)
    Figures (12) Show 6 more figures Journal of Open Innovation: Technology, Market,
    and Complexity Volume 9, Issue 3, September 2023, 100110 BHiveSense: An integrated
    information system architecture for sustainable remote monitoring and management
    of apiaries based on IoT and microservices Author links open overlay panel Duarte
    Cota a b, José Martins c d e 1, Henrique Mamede a d, Frederico Branco b d Show
    more Add to Mendeley Share Cite https://doi.org/10.1016/j.joitmc.2023.100110 Get
    rights and content Under a Creative Commons license open access Abstract Precision
    Beekeeping, a field of Precision Agriculture, is an apiary management strategy
    based on monitoring honeybee colonies to promote more sustainable resource usage
    and maximise productivity. The approach related to Precision Beekeeping is based
    on methodologies to mitigate the stress associated with human intervention in
    the colonies and the waste of resources. These goals are achieved by supporting
    the intervention and managing the beekeeper''s timely and appropriate action at
    the colony''s level. In recent years, the growth of IoT (Internet-of-Things) in
    Precision Agriculture has spurred several proposals to contribute to the paradigm
    of Precision Beekeeping, built on different technical concepts and with different
    production costs. This work proposes and describes an information systems architecture
    concept named BHiveSense, based on IoT and microservices, and different artefacts
    to demonstrate its concept: (1) a low-cost COTS (Commercial Off-The-Shelf) hive
    sensing prototype, (2) a REST backend API, (3) a Web application, and (4) a Mobile
    application. This project delivers a solution for a more integrated and sustainable
    beekeeping activity. Our approach stresses that by adopting microservices and
    a REST architecture, it is possible to deal with long-standing problems concerning
    interoperability, scalability, agility, and maintenance issues, delivering an
    efficient beehive monitoring system. Previous article in issue Next article in
    issue Keywords Precision beekeepingSustainable remote monitoringLow-costInternet-of-ThingsInformation
    systems architectureDesign science research 1. Introduction The current digital
    transition is a remarkable and transformative phenomenon reshaping societies and
    revolutionising businesses worldwide. With rapid advancements in technology and
    connectivity, the world is witnessing a remarkable shift towards a digital-centric
    era. This transition is marked by the widespread adoption of digital technologies
    and the increasing reliance on digital platforms and services for various aspects
    of life (Guandalini, 2022). Agriculture, a vital economic activity for human survival
    as a species, has evolved throughout time, adapting - through the constant incorporation
    of innovation, to new challenges and realities where environmental balance and
    sustainability are keys (de Boon et al., 2022, Wu and Li, 2023). According to
    ISPA - International Society of Precision Agriculture, \"Precision Agriculture
    is a management strategy that gathers, processes and analyses temporal, spatial
    and individual data and combines it with other information to support management
    decisions according to estimated variability for improved resource use efficiency,
    productivity, quality, profitability and sustainability of agricultural production\"
    (ISPA, 2021). Precision Beekeeping is a branch of Precision Agriculture which
    extends these concepts to the specific area of apiculture in a systematic approach
    of beekeeping practices supported by the consistent integration of all the information
    necessary for beekeeper''s decision-making, efficient use of resources and sustainably
    maximising production (Hadjur et al., 2022). The world has been slowly but relentlessly
    witnessing the degradation of honeybee colonies. The role of these insects in
    the balance of ecosystems, environmental health and preservation of life is crucial.
    Further than the production of honey, beeswax, royal jelly and propolis, bees''
    pollination activity is essential to the proliferation of a wide variety of plant
    species (Kasiotis et al., 2021, Ullah et al., 2021). This phenomenon of decreased
    activity in apiaries, known as CCD (Colony Collapse Disorder), is characterised
    by a drastic and sudden reduction in the bee population. The causes of this problem
    are not yet fully identified, but scientists tend to converge towards multiple
    factors that can act alone or in combination, contributing to the decline of bee
    populations (e.g., mites and viruses, malnutrition, pesticides, beekeeping practices,
    genetically modified crops, etc.) (Cecchi et al., 2020, Hong et al., 2020). The
    introduction of systems that allow monitoring of apiary production and environmental
    conditions, inside and outside the hives, has been proposed through several solutions
    aiming to mitigate this phenomenon. These devices generate data to understand
    better which factors most affect productivity, honeybee activity, and hives''
    health. Besides data collecting and scientific analyses to better understand and
    mitigate CCD, these systems are also focused on directly supporting beekeepers
    in their activity by signalling situations that require human intervention in
    apiaries, either by triggering alarms and sending notifications or signalling
    events on monitoring panels. These features lead to fast and focused intervention
    while diminishing negative impacts in apiaries, fitting these systems within the
    paradigm of Precision Agriculture and Precision Beekeeping. The expansion of IoT
    systems in recent years has been paralleled by generalised access to low-cost
    COTS (Commercial Off-The-Shelf) components. Within these conditions, some remote
    monitoring systems have been proposed to reduce apiary maintenance costs and increase
    colony production and data collecting for scientific and investigation purposes.
    These contribute to CCD mitigation and a better understanding of the factors affecting
    beekeeping activity. Our proposed solution aligns to contribute to more sustainable
    apiary management, both in terms of productivity maximisation, colony health and
    well-being, by conceptualising an architecture for precision beekeeping based
    on microservices, focused on flexibility, modularity, scalability, replicability
    and adaptability, granting interoperability, a significant low-cost production,
    and low-complexity maintenance. To demonstrate and evaluate the adequacy of the
    proposed conceptual artefact, a remote sensing hardware prototype, a Web App,
    and a Mobile App, both served by a REST-based (Representational State Transfer)
    backend API were developed, and these will be described later in this article.
    Hence, in summary, our research highlights are as follows: • There is a clear
    need to establish innovative, scalable and agile beehive and apiary monitoring
    solutions based on IoT to not only provide beekeepers with an additional layer
    of support for his decision-making process but also to ensure he is alerted when
    the beehives need in-loco attention; • Monitoring solutions based on microservices
    architectures tend to be more agile, scalable, maintainable and performant when
    compared to solutions based on other types of architectures; • A novel IoT-based
    beehive monitoring solution supported by a microservices architecture that can
    easily encompass additional sensing nodes and functional modules is proposed;
    • The proposed monitoring solution has been tested using a controlled case study,
    and it was possible to establish that it not only delivered valid and accurate
    results, but also presented adequate performance and stability. This paper is
    organised as follows: in Section 2, we present the related work, while in Section
    3, the selected methodology and the process model approach are described in detail.
    Section 4 describes the conceptual architecture, and the validation artefacts
    are presented and evaluated. In Section 5 and 6, we offer the conclusions and
    suggest topics for future work. 2. Related work 2.1. Remote monitoring One of
    the main challenges associated with Agriculture 4.0 is the development of remote
    monitoring systems and solutions that can aid farmers in improving the control
    they have on their farms and continuously fostering production efficiency and
    sustainability (Dayioglu and Turker, 2021). As established by Abbasi et al. (2022),
    when applied to the agriculture sector, the remote sensing field of the study
    refers to the development and deployment of sensor networks – composed of multiparameter
    sensing nodes – that can ensure connectivity between all the elements of the network
    and a central connectivity node, system, service or API. Furthermore, drawing
    on Khujamatov and Toshtemirov (2020), despite the referred sensing network''s
    potential impact towards the development of the agri-food sector, they are somewhat
    dependent on the degree of complexity and ability to accurately monitor - and
    report the collected data - the set of predefined parameters of each of the sensing
    nodes. Remote monitoring systems for hives integrated into apiaries is an area
    of research where a relevant effort has been made and with a significant set of
    literature, mainly focused on hardware, its complexity, and how data generated
    by these devices contribute to Precision Beekeeping. This branch of Precision
    Agriculture is defined as a strategy for apiary management based on monitoring
    individual colonies (hives) with the goal of not only minimising resource consumption
    and maximising production sustainably but also optimising beekeeping activity
    and CCD mitigation (Zacepins et al., 2015). Precision beekeeping''s focus is to
    supply beekeepers with access to intelligent and automated tools that reduce their
    workload, maintain long colony life cycles, and increase productivity. Alongside
    this, it is also important to establish this technological scope and focus on
    protecting the colonies and their continuous sustainability (Uthoff et al., 2023).
    Also, the use of remote monitoring systems and solutions will aid beekeepers as
    – due to the wireless technologies inherent to the sensor networks and nodes,
    data on apiaries can be accessed at any moment, in near real-time, on any devices
    (e.g., mobile devices), thus avoiding unnecessary travel and expenses (Hong et
    al., 2020). In summary, remote sensing solutions are one of the most promising
    technological solutions for precision beekeeping (J. Navarro et al., 2022). 2.2.
    IoT-based remote monitoring Drawing on authors such as Symeonaki et al. (2022),
    IoT is increasingly assuming a central role as a trigger for the development of
    innovative and disruptive (remote) monitoring systems based on sensing nodes that
    are continuously interconnected, that are both scalable and agile in the incorporating
    of updates when facing new needs, and that are globally interoperable. Furthermore,
    existing literature also holds multiple examples of IoT-based applications, frameworks,
    ontologies and methodologies (Chukkapalli et al., 2020, Farooq et al., 2020, Symeonaki
    et al., 2022). IoT-based remote monitoring in Agriculture 4.0 refers to using
    Internet of Things (IoT) technology to monitor and manage agricultural operations
    remotely (Abbasi et al., 2022). It involves the integration of sensors, devices,
    and connectivity solutions to collect and transmit data from various agricultural
    assets, such as crops, livestock, soil, and equipment. From a more practical perspective,
    when applied to the Agriculture 4.0 paradigm, IoT-based remote monitoring is perceived
    as an enabler of real-time data acquisition and analysis, offering farmers, livestock
    breeders, poultry farmers, pig farmers, goat farmers, beekeepers, and many other
    industry players valuable insights for decision-making, optimising resource usage,
    and improving overall efficiency. The key components of this system include IoT
    sensors, network connectivity, data processing, and visualisation tools (Araújo
    et al., 2021, Maffezzoli et al., 2022). IoT sensors are deployed in agricultural
    environments to capture and collect data (Roy and De, 2022). These sensors can
    measure various parameters, including temperature, humidity, soil moisture, pH
    levels, nutrient content, rainfall, air quality, and livestock behaviour. They
    can be placed in fields, greenhouses, animal housing, and machinery to monitor
    critical factors affecting agricultural productivity continuously (Swain et al.,
    2021). The collected data from IoT sensors is transmitted via wireless networks,
    such as Wi-Fi, cellular networks, or Low-Power Wide-Area Networks (LPWAN), to
    a centralised platform or cloud infrastructure for storage and analysis (Miranda
    et al., 2019). The data obtained from IoT-based remote monitoring systems can
    be analysed using advanced analytics techniques and algorithms. Machine learning
    and data modelling approaches can be employed to detect patterns, identify anomalies,
    and derive actionable insights (Pyingkodi et al., 2022). For example, predictive
    analytics can help anticipate weather conditions, disease outbreaks, or crop growth
    stages, facilitating proactive interventions and resource planning (Xu et al.,
    2022). Visualisation tools, such as dashboards and data visualisations, enable
    users to understand the collected data intuitively. These tools can present real-time
    information, historical trends, and alerts in a user-friendly format, allowing
    farmers to monitor the status of their agricultural operations at a glance and
    respond promptly to emerging challenges or opportunities. Thus, IoT-based monitoring
    can trigger the arise of decision support systems that, drawing on real-time data
    collection, analysis, and visualisation, can aid farmers in their daily decision-making
    tasks and their strategic planning (Zhai et al., 2020). The benefits of IoT-based
    remote monitoring in Agriculture 4.0 include improved resource management, enhanced
    productivity, reduced costs, and increased sustainability. Farmers can optimise
    irrigation, fertilisation, and pest control practices by continuously monitoring
    key parameters, leading to better resource allocation and minimising environmental
    impact. Additionally, early detection of anomalies or deviations in crop health
    or livestock behaviour can help prevent losses and improve overall yield and animal
    welfare (Maffezzoli et al., 2022). Hence, drawing on the arguments above, IoT-based
    remote monitoring in Agriculture 4.0 leverages sensor technology, connectivity,
    data analysis, and visualisation to enable real-time monitoring and decision-making
    in agricultural operations. This approach empowers farmers to manage their assets
    more efficiently, respond to changing conditions promptly, and adopt precision
    agriculture practices for sustainable and productive farming. 2.3. Beehive monitoring
    using IoT-based solution Bees are vital in pollination, supporting global food
    production and maintaining ecosystem biodiversity. However, in recent years, bee
    populations have faced significant challenges due to climate change, habitat loss,
    and pests (Panziera et al., 2022, Patel et al., 2021). To address these concerns
    and ensure the well-being of bee colonies, beekeepers and researchers are turning
    to IoT-based solutions for beehive monitoring (Hong et al., 2020). To this point,
    multiple authors aimed to deliver IoT-based solutions to monitor beehives and,
    consequently, foster bee sustainability. As easily perceived by analysing existing
    literature, the majority of proposed solutions have a similar backbone structure
    that is composed of multiple sensors connected to a microcontroller and to a communication
    hub, all of these powered by a battery system that serves the purpose of relaying
    the collected data with the remote servers (Andrijević et al., 2022, Aydin and
    Nafiz Aydin, 2022, Cecchi et al., 2020, Hong et al., 2020, Imoize et al., 2020,
    Kontogiannis, 2019, Tashakkori et al., 2021, Zacepins et al., 2020). Hence, we
    can extrapolate that, from a conceptual perspective, the main modules of a beehive
    monitoring solution are as follows: • A MCU - Microcontroller Unit (also known
    as the brain of the entire solution) that collects data from the sensors and communicates
    these readings to a remote server at regular intervals; • A set of sensors physically
    connected to the microcontroller or communicating with it via wireless protocols;
    • A source of electrical energy consisting of a battery connected or not to a
    photovoltaic solar panel through a charge regulator (i.e., a solution mainly adopted
    for remote installations). The sensing module, i.e., the set of sensors used to
    collect data, is typically located inside the hive, although there are cases of
    sensors placed on the outside of that hive or in its proximity. Concerning the
    MCU, these are generally placed outside, on the roof of the beehive (Khairul Anuar
    et al., 2019), in COTS dedicated boxes or 3D printed solutions similar to the
    one proposed by Tashakkori et al. (2021). The isolation of the MCU allows protection
    against the defensive and natural behaviour of the honeybees. The design of a
    remotely monitored hive must also be carefully planned, trying to anticipate the
    obstacles that may arise in its development and assembly (Ntawuzumunsi et al.,
    2021). Based on Bellino et al. (2022) and Voudiotis et al. (2021) arguments, the
    main module of an apiary remote monitoring system is the microcontroller unit.
    This element is responsible for iteratively executing a firmware that updates
    all sensor readings, prepares the data in a specific data format, and sends it
    to a Web server. Several COTS microcontroller units have been tested and integrated
    into remote monitoring systems. Despite the relevant amount of cases using the
    \"NODE ESP32\" model as the MCU (Andrijević et al., 2022), \"NODE ESP8266\" model
    is more widely used (Imoize et al., 2020, Jegan et al., 2021, Zacepins et al.,
    2020) as the results of its higher performance, easier connections to external
    components and easier programming. This last MCU also has an onboard Wi-Fi module
    – an added value to those developing the monitoring solutions - and is considered
    low-cost. In some more recent research, \"Arduino\" family units are also used.
    Examples of this are both the Catania and Vallone (2020) and Ntawuzumunsi et al.
    (2021) works, where the authors used an \"Arduino ATmega2560\", and also Kontogiannis
    (2019) used an \"Arduino ATmega328\" as the MCU of the proposed monitoring solution.
    Other platforms, such as \"Raspberry Pi\", have also been used by researchers
    when offering their remote monitoring solutions (Cecchi et al., 2020, Tashakkori
    et al., 2021). 2.4. Beehive monitoring parameters In recent years, bee populations
    have faced significant declines due to various environmental factors and the threat
    of colony collapse disorder. To address this issue and support beekeepers in their
    efforts to protect these essential pollinators, beehive monitoring has emerged
    as a promising solution (Anwar et al., 2023). Beehive monitoring involves using
    advanced technology to gather real-time data and insights from beehives. By deploying
    various sensors within the hive, beekeepers can monitor critical parameters such
    as temperature, humidity, weight, and sound. These sensors provide valuable information
    on the overall health and well-being of the colony, allowing beekeepers to make
    informed decisions and intervene promptly if necessary (Abdollahi et al., 2022,
    Bellino et al., 2022). One of the primary benefits of beehive monitoring is the
    early detection of potential issues. For example, sudden changes in temperature
    or humidity levels may indicate that the hive is under stress, and swift action
    can be taken to identify and address the underlying problem, such as disease or
    pests (Zaman and Dorin, 2023). Tracking the hive''s weight can offer insights
    into honey production and help beekeepers determine the optimal time for honey
    harvesting, ensuring maximum yield while leaving enough honey for the bees'' sustenance
    (Robustillo et al., 2022). As established by authors such as Ntawuzumunsi et al.
    (2021) and Szczurek et al. (2023), ensuring efficient and effective multiparameter
    monitoring of a given beehive is essential to assess its overall health and production
    (perspectives). The related literature also unveils a set of indicators that are
    commonly used for both beehives and apiaries monitoring systems that serve the
    purpose of delivering insights on the occurrence of essential changes that can
    potentially indicate the need for human intervention to preserve the colony: •
    Weight: monitoring the weight allows beekeepers to have necessary inputs concerning
    the state of a hive (Meikle et al., 2016). Providing this data in almost real-time
    lets for the arise of valid perceptions of the state of the hive. The decrease
    in the hive''s weight tends to represent the occurrence of events for which it
    is critical to unravel the origin and totality of the impact generated. Examples
    of these events are the increase or decrease of the colony population size, the
    existence of adverse environmental conditions that might have triggered the need
    to supply food, the occurrence of swarming, or the honey harvesting itself (Cecchi
    et al., 2020, Fitzgerald et al., 2015, Hong et al., 2020). Thus, monitoring weight
    allows beekeepers to have precise data to analyse the condition of the hives and
    indicates the need for harvesting or human intervention, all without disturbing
    the colony. • Temperature: honeybee reproduction demands that the air temperature
    inside the hive remains stable and floats, at the very worst, between + 15 and
    + 35ºC. To ensure the referred temperature stability, bees generate metabolic
    heat by grouping themselves in a cluster in case of lower temperature values or
    taking water to the hive''s interior in case of higher temperature values, thus
    increasing humidity. Temperature stability is an important indicator of the colony''s
    health status (Edwards-Murphy et al., 2016). According to Zacepins et al. (2016),
    the increase in temperature is also an important indicator of swarming, a natural
    phenomenon which, if not controlled by beekeepers, can result in crucial negative
    profitability impacts. • Humidity: monitoring the relative humidity inside the
    hives is a relevant variable for determining the state of the colonies and has
    a direct impact on productivity (Mohamed and Mansor, 2023). As established by
    existing literature, temperature and humidity vary according to the bee''s subspecies
    (Gil-Lebrero et al., 2020). For instance, according to Hong et al. (2020), the
    relative humidity inside the hive must be between 90% and 95% to enhance the hatching
    of the eggs. On the other hand, authors such as Andrijević et al. (2022) pose
    that when maintaining a temperature of 35ºC and a humidity percentage of around
    75%, beehives have better chances to ensure sustainable growth throughout. Hence,
    drawing on the above, it is very relevant to provide long-term monitoring of relative
    humidity inside the hive as it also contributes, alongside temperature, to prompt
    the beekeeper for immediate intervention. • Sound: The sound produced by bees
    can indicate the hive''s overall health and vitality. A strong and healthy hive
    will produce distinctive sounds, typically associated with the worker bees'' labour.
    In contrast, weak or stressed colonies might exhibit different sound patterns,
    reflecting potential issues that require attention, such as diseases, foraging
    activities, swarming or other colony events (Abdollahi et al., 2022). Hence, monitoring
    the sound of a hive will thus allow the collection of data that the beekeeper
    can use to, in parallel with the definition of alarm mechanisms, be able to react
    in anticipation of the occurrence of events or situations that put the health
    and sustainability of the hive at risk (Kulyukin et al., 2018, Murphy et al.,
    2015). • Population Size: Several works also refer to the population size as an
    indicator of the hive health and production level. Honeybee colonies can be likened
    to intricate systems, where their survival hinges on individual bees'' quality,
    ability to adapt, and resilience to various pressures. Multiple stress factors
    interacting with one another are likely responsible for the mortality of colonies
    (Requier, 2019). Thus by ensuring efficient monitoring of the population size,
    beekeepers can actively anticipate serious issues that might endanger the beehive.
    The existing literature poses multiple proposals to count/estimate the number
    of bees that exist in a given beehive at a given time from an array of photoelectric
    or infrared sensors on both sides of the individual holes in the entrance of the
    hive that, by detect the sequence of the interruption of the radiation beams,
    can give information about the movement of the bees (i.e., leaving or entering
    the hive) that is finally used to estimate the population size (Struye et al.,
    1994), to systems that use RFID tags attached to the back of the bees to allow
    detection at the entrance of the hive (Schneider et al., 2012), and to real-time
    imaging systems that by a series of analysis to a set of collected images can
    detect each individual inside the hive (Ngo et al., 2019). 2.5. Power systems
    Despite representing a groundbreaking paradigm and playing a decisive role in
    remote monitoring and operational control for a multitude of contexts, as established
    by Ramson et al. (2020), one of its most critical aspects is the continuous assurance
    of power supply. If this is true for all situations where IoT-based remote monitoring
    is used, when focusing on this issue from the agriculture sector perspective this
    is even critical as the referred solutions must be deployed in remote areas where
    most of the times there isn''t a technical supply grid that supplies power, energy
    or both (Liu et al., 2022). According to Sari et al. (2020), the choice for the
    optimal location for deployment of an apiary is made be considering a set of parameters
    that are intrinsically related to the beehive sustainability and production maximisation
    and not on the availability of internet connection or even local energy supply.
    Hence, and drawing on authors such as Zaceptins et al. (2015), we can easily establish
    that these are not the ideal condition to implement a precision beekeeping approach
    or solution. Remote apiary monitoring systems demand the existence of a stable
    and permanent electric power source, allowing a long-term and low-maintenance
    system operation (Fitzgerald et al., 2015). The typical location of apiaries,
    away from public power grids, represents a contingency that can be overridden
    by using autonomous power systems (Gil-Lebrero et al., 2016). In order to address
    the abovementioned issues, authors such as Andrijević et al. (2022), Fitzgerald
    et al. (2015), He et al. (2020), Kontogiannis (2019), and Murphy et al. (2015),
    have proposed a self-sustained power system using solar photovoltaic cells and
    batteries to compensate the intermittency of the solar energy availability, associated
    with low-power components. 2.6. Proposed architectures Proposing architectures
    that support scalable Internet of Things (IoT) monitoring solutions is of paramount
    importance in today''s rapidly advancing technological landscape. As the number
    of connected devices and sensors continues to grow exponentially, scalable architectures
    are crucial for efficiently managing and processing the massive volume of data
    generated by these interconnected devices (Calvo et al., 2022). Scalability ensures
    that IoT monitoring systems can accommodate the increasing number of devices and
    users without compromising performance or reliability (Sharma et al., 2017). According
    to existing literature, using microservices is a key criterion for adopting a
    contemporary software architecture approach, where features such as scalability
    and flexibility, decentralised governance and data management and use, reusability,
    resiliency, technology stack, replaceability, and maintainability (Atitallah et
    al., 2022, Butzin et al., 2016, Cebeci̇ and Korçak, 2020, Lyu et al., 2020, Siddiqui
    et al., 2023). Several benefits are associated with the usage of microservices.
    Having a single responsibility, each microservice provides modularity for quick
    and easy deployment (Gan and Delimitrou, 2018) and enables agility and fast development
    (Marquez et al., 2021). A microservices architecture also delivers technology
    heterogeneity. Not only in software (coding language, frameworks, or database
    management systems) but also in hardware (Gan and Delimitrou, 2018). For communications
    between the sensing devices and the data and storage subsystems, the IoT-based
    remote sensing concept typically uses the Transmission Control Protocol/Internet
    Protocol (TCP/IP) technology. In these conditions, having an access point is necessary
    and depends on the availability of: (i) a local Wi-Fi network using cable connections
    (ethernet); (ii) a local Wi-Fi connection based on mobile data networks. In the
    related work applied to beehive monitoring systems, Wi-Fi modules are the most
    frequent devices for data transfer (Andrijević et al., 2022, Ntawuzumunsi et al.,
    2021, Tashakkori et al., 2021). In several studies, it is also possible to determine
    the options for data storage. Several authors use MySQL (Hong et al., 2020, Zabasta
    et al., 2019) while others use NoSQL databases – MongoDB – (Komasilovs et al.,
    2019). From the analysis of previous research it is possible to identify authors
    who proposed concepts of simple, yet disruptive, solutions for beehive monitoring
    that are based on the abovementioned microservices architecture (Alifieris et
    al., 2023). Despite this, and as stated by the referred authors, at this point
    in time there is still a gap in what refers to the practical development and deployment
    of those conceptual proposal. 3. Methodology 3.1. Design science research We follow
    a Design Science Research (DSR) approach in this project. DSR is a proven methodology
    oriented towards problem-solving. DSR aims to improve human knowledge by creating
    innovative artefacts through disruptive solutions for real-world problems (Hevner
    et al., 2004). According to these authors, it is possible to identify a set of
    principles to apply DSR in information systems design, to produce artefacts whose
    utility, quality and efficiency must be rigorously verified, and the solution
    efficiently disclosed to the relevant stakeholders. This project is based on the
    Design Science Research Model (DSRM) proposed by Peffers et al. (2007) for information
    systems research. This model encloses a set of six nominal sequential activities
    (Fig. 1). However, the authors say that not always researchers would proceed in
    this sequential order. In practice, it is possible to start at almost any point
    and move in both directions. Download : Download high-res image (249KB) Download
    : Download full-size image Fig. 1. DSRM process model adapted from Peffers et
    al. (2007). The six sequential activities proposed by Peffers et al. (2007) are
    the following: Activity 1: Identify problem and motivation – In this activity,
    the specific research problem should be defined to atomise the problem conceptually
    so that the solution can capture its complexity. By justifying the value of a
    solution, researchers and the general stakeholders will be motivated to research,
    find the solution and accept the results. It also helps to understand the rationale
    linked to the researcher''s understanding of the problem. For this activity, it
    is important to have knowledge of the state of the problem and the impacts of
    its solution. Activity 2: Deﬁne the objectives for a solution – conclude about
    the objectives of a solution starting from the problem definition and awareness
    of what is possible and practical. The objectives can be quantitative or qualitative
    and should be derived from rationality from the problem specifications. For this
    activity, knowledge about the state of problems and current solutions, if any,
    and their efficacy is required. Activity 3: Design and development – at this point,
    it is expected to create the artefact. Such prototypes are potential models, methods,
    or instantiations. Artefacts can also be new properties of technical, social,
    and/or informational resources. Conceptually, an artefact delivered in the context
    of a design research methodology can be any designed object in which a research
    contribution is embedded in the design. This activity includes also setting the
    artefact''s desired functionality, its architecture and then developing the actual
    artefact itself. Resources required for going from objectives to design and development
    include knowledge of theory that can be brought to deliver a solution. Activity
    4: Demonstration – this activity aims to demonstrate the use of the artefact to
    solve one or more instances of the identified problem. It can involve the use
    of the artefact in experimentation, simulation, case study, proof, or other activities.
    To demonstrate the artefact, an effective knowledge of how to use the artefact
    to solve the problem is needed. Activity 5: Evaluation – aims to observe and measure
    how the artefact supports the solution to the problem. The evaluation aims to
    compare the results from the demonstration of the artefact to those defined in
    the proposed solution. This activity demands mastery of metric and analytical
    tools and, depending on the nature of the artefact, can take many forms. Evaluation
    could include items such as a comparison of the artefact''s functionality with
    the solution goals from Activity 2, objective quantitative performance measures
    such as budgets or items produced, the results of satisfaction surveys, client
    feedback, or simulations. It could include quantiﬁable measures of system performance,
    such as response time or availability. Conceptually, could include any relevant
    empirical evidence or logical proof. At the end of this activity, the researchers
    can decide whether to iterate back to Activity 3 to try to improve the effectiveness
    of the artefact or to continue to communicate and leave future improvements to
    subsequent projects. Activity 6: Communication – in this activity the problem,
    its relevance, the artefact, the degree of innovation and functionality, the rigour
    of the design and its efficacy must be communicated to other researchers and other
    audiences. Researchers may use the process model to structure their papers. Considering
    the context of this project in the field of Precision Beekeeping, its goals and
    its focus on the process model proposed by Peffers et al. (2007), we have structured
    the work along a six-step iterative process detailed in Fig. 2. Each step is directly
    related to the project development. Download : Download high-res image (287KB)
    Download : Download full-size image Fig. 2. Schematic representation of the project
    process model. 4. Proposed architecture In this chapter, the proposed architecture
    is described in detail. First, we identified, contextualised, and defined the
    problem, based on our goals and the related work. Then, we propose a solution
    based on the previously identified problem and the goal of implementing the necessary
    features. After this step, we designed and developed the artefact corresponding
    to the proposed architecture, and created four pilot artefacts for demonstration
    proposes. In the evaluation step, several tests were performed using these pilot
    artefacts. Finally, in the communication step, we present the knowledge disclosure,
    results, and future strategies. 4.1. Problem identification and motivation The
    problem identification and motivation start by analysing the main research question:
    what are the functional, technological, and architectural visions necessary for
    the deployment of a low-cost, COTS-based monitoring system, for apiary remote
    monitoring based on IoT? The answer to this question can be divided into four
    sub-questions: (1) What is the technical and functional framework for an apiary
    monitoring system?; (2) Which low-cost components should be selected and applied
    to produce an artefact allowing remote self-sustained apiary monitoring?; (3)
    Which technological architecture will best support the execution of an IoT-based
    system to apiary remote monitoring?; and, (4) What contextual limitations will
    have a bigger impact in the success of an apiary remote monitoring system? Despite
    the significant amount of work already proposed in this area of Precision Beekeeping,
    the literature review helped to identify a lack of focus on the global information
    system architectural concept for the delivered systems. It is clear that previous
    studies are well-oriented to describe prototypes that supply huge amounts of data
    to validate hypotheses concerning, e.g., the identification of the environmental
    variables that can provide important information about the state of the honeybee''s
    colonies and their health, relating these variables with hive production and bee
    colony evolution. However, proposing a high-level conceptual architecture, and
    solid demonstration artefacts, based on more recent architectural and technological
    paradigms can contribute significantly to the field of Precision Beekeeping, also
    in the scope of the emerging paradigm of Artificial Intelligence, more specifically
    the subfields of Machine Learning and Deep Learning, well known to be intensively
    data dependent. The problem characterisation was an iterative process which considered
    the extant literature and the current state-of-the-art of remote monitoring systems
    for Precision Beekeeping. This characterisation identified the main problem that
    motivates this project: the lack of an integrated solution describing an information
    system architecture for remote apiary monitoring, in terms of hardware, communications,
    data processing and storage, end-user application features, and data specifications.
    4.2. Artefact features definition Considering the problem definition and the related
    context (Precision Beekeeping), the main artefact features were listed. As stated
    in the literature review, the main goal of Precision Beekeeping is to allow having
    almost real-time data collected from the bee colonies (hives). This data can provide
    the necessary information to assess the state of the colony in terms of health,
    the presence of predators or growing diseases, and natural events like swarming.
    For this project, to generate real and contextualised data, the choice was to
    monitor temperature, humidity (inside and outside the hive), the weight of the
    hive, and sound inside the hive, since these are the variables most mentioned
    as the most important to assess the state of the honeybee colonies. An additional
    mechanical sensor to detect if the hive lid is opened, by an animal attack, for
    example, was also included. By monitoring these variables, several important events
    can be detected generating alarms and notifications to the beekeeper. After being
    collected and processed by a physical device (sensing device), the data must be
    sent to a data processing unit (Web server) using a specific data format. The
    data is then processed before being stored for future analytics. During this process,
    several instant analyses can be performed to assess the actual state of the hive.
    This intermediate step will trigger and register events that will automatically
    generate notifications to the beekeeper using different approaches (e.g., push
    notifications, update monitoring dashboards, or sending e-mails). These notification
    events are triggered based on high levels of temperature or humidity inside the
    hive, swarming based on the sound level inside the hive and the evolution of the
    weight, and simple harvesting information by using a setpoint defined by the beekeeper.
    Also, in the scope of this work, management of the apiaries is an important feature.
    So, the system must also manage the scheduling of interventions (e.g., regular
    maintenance or cleaning), associated with apiaries, notifying the beekeeper when
    those calendar interventions are approaching, in a single and integrated interface.
    Several other features were also considered, like organisational aspects of the
    apiaries, registration of devices (hives), commissioning and decommissioning of
    devices in apiaries, analytical aspects like monitoring honey production (hive
    and apiary level), and event logs, among others. 4.3. Design and development of
    the architecture artefact The IoT can be defined as a worldwide network of unique
    interconnected devices, with sensing abilities, using communication protocols,
    leveraging computational capacities, and delivering services/capacity to provide
    data analytics (Gupta and Quamara, 2020). The most common architecture in IoT
    is the three-layer and four-layer (Ramachandran et al., 2022). The three-layer
    architecture, the most common, includes (i) a physical or perception layer, consisting
    of sensors and actuators that capture data or control acting devices, (ii) a network
    layer responsible for connecting the physical layer to, for example, servers,
    and (iii) an application layer that delivers applications to the users. The four-layer
    architecture is based on the three-layer approach, adding a new layer called the
    service layer. This layer acts as a middleware between the application layer and
    the network layer, managing access to different services and APIs. In this project,
    a proposal for a beehive remote monitoring system has been developed, based on
    a multilayer microservice-based architecture represented in Fig. 3. This architecture
    consists of six different layers: the physical layer, the user layer, the applications
    layer, the data layer, the microservices layer, and the data storage layer. Layers
    are interconnected with each other depending on the flow of data between them.
    Data flows from the physical layer to the microservices layer and then to the
    user layer thru the applications layer. Other services can be provided to the
    users (beekeepers) by several microservices. These services can or not depend
    on the data sent by the physical layer. Download : Download high-res image (543KB)
    Download : Download full-size image Fig. 3. BhiveSense high-level system architecture.
    Physical layer: the physical layer corresponds to the hive sensing nodes network
    (each node defined by a set of subsystems including sensors, communications, processing,
    and power) and an Internet gateway. Several different types of sensors can be
    placed inside and outside the hive, depending on the variables to monitor. As
    for the Internet gateway, a mobile data router is proposed for TCP/IP communications
    with the web server via HTTP requests (network layer). Yet, there is no dependency
    on the chosen technology since the same data specification format is used. User
    layer: the user layer is mainly composed by the beekeepers as the main stakeholders
    of the system. These stakeholders are the final users of the system in terms of
    the Precision Beekeeping context. In this work, and concerning the context of
    the proposal, the main stakeholders are the beekeepers. However, others could
    be identified, such as the system administrators or researchers in this field.
    Even though typical IoT architectures don''t include a user layer and given that
    this work proposes a solution squarely contextualised in the field of Precision
    Beekeeping, we believe that underlining the set of stakeholders for this context
    in a dedicated layer is relevant. Application layer: different categories of software
    applications can be developed to use the collected data in the scope of an apiary
    monitoring and management system. Typical desktop, Web and mobile applications
    are proposed as possible solutions to deliver the entire features of the system,
    in the application layer. Also, this layer represents the user interfaces (front
    end) with which the stakeholders interact with the system. Independently from
    the type of application (desktop, Web, mobile or hybrid), the proposed REST-based
    architecture allows the integration of monitoring, management, and events notification
    preconised in this approach. Data layer: the data layer represents the data format
    specification for the proposed architecture. Different data formats can be provided
    by the data layer (e.g., XML, CSV, JSON, etc.) since REST-based APIs can handle
    messages in practically all data formats. We propose JSON due to its popularity,
    smaller size, and being more easily readable by humans. All messages flowing thru
    the proposed architecture use the JSON data format. Microservices layer: the microservices
    layer consists of a set of microservices to manage every data transaction and
    can have independent databases and/or data models. However, the more important
    feature of a microservice approach is that each one should have a single responsibility.
    For example, in the proposed solution, the HIVE module is only responsible for:
    (1) handling data between the physical layer and the client applications (applications
    layer), in a context of interoperability between components; (2) providing analytics
    regarding hive data upon request from the users. This layer is identical to the
    service layer described in the four-layer architecture approach. Data storage
    layer: the data storage layer is the layer responsible for persistent data storage,
    not only to provide real-time data to the user layer but also to deliver long-term
    data for analytics and apiary management purposes requested by other microservices.
    As per the user layer, we propose this layer to better underline the importance
    of data storage in the overall solution. 4.4. Demonstration of the proposed architecture
    The main data source for the proposed apiary monitoring system architecture is
    a physical device installed in each apiary hive. This device can gather different
    types of data, as much as is needed, not having any impact on the system architecture,
    since the same data format is followed. According to the DSR methodology adopted
    for this work, the demonstration step is crucial to assess the validity of any
    proposed artefact, by creating a suitable context and developing test/pilot artefacts
    for evaluation purposes. To demonstrate the proposed architecture, three pilot
    instances were developed: a node hive device (physical layer), a RESTful microservices-based
    API (microservices layer), and a Web and a mobile application (applications layer).
    These pilot artefacts are described below. 4.4.1. Hive node sensing device: hardware
    and firmware In the context of providing a hive node prototype to demonstrate
    the proposed architecture, a popular NODE MCU ESP8266 low-cost microcontroller
    was used. This unit is an open-source software and hardware development environment
    built around an inexpensive System-on-a-Chip (SoC) named ESP8266. The ESP8266
    contains the crucial elements of a computer: CPU (32 bit-80Mhz), RAM (4MB), and
    networking (Wi-Fi). That makes it an excellent choice for IoT projects of all
    kinds. In terms of collected data, we selected temperature (inside and outside
    the hive), sound (inside the hive) and the weight of the hive. These variables
    are commonly referred to in related works as the most important for detecting
    the hive health, production levels and other dynamic honeybee behaviour like swarming.
    Isolated or combined, these variables provide crucial information for the context
    of this project. To monitor temperature and humidity inside and outside the hive,
    we used two low-cost and commonly used DHT22 temperature and humidity sensors.
    Concerning sound measurement, an Adafruit electret microphone (20–20KHz), with
    a MAX4466 amplifier and adjustable gain is used. As for weight, four strain gauges
    connected in a Wheatstone Bridge configuration were used with an HX711, a precision
    24-bit analogue-to-digital converter (ADC) designed for weigh scales and industrial
    control applications, to interface directly with the bridge sensor. An additional
    GNSS (Global Navigation Satellite System) module is included to provide the geolocation
    of the hive and spot its position in a digital map (e.g., Google Maps), thus allowing
    the beekeeper to best find the location of a hive for intervention. The addition
    of this element can also enable future integrations in other research projects,
    for example, studies requiring spatial data and cross-information between colony
    data and the geographic position of the hives. The artefact also includes several
    mechanical sensors: two press buttons, one for resetting the GNSS module to provide
    new geographical coordinates (in case the hive switches apiary), one to calibrate
    the weight sensor, and a microswitch to detect if the hive lid has been opened
    to trigger an event alarm to the beekeeper. The proposed demonstration prototype
    is powered by a 7 V photovoltaic cell with a 3.3 V-1500mAh lithium-polymer (Li-Po)
    battery, controlled by a solar power manager for energy autonomy. The overall
    system schematic is shown in Fig. 4. Fig. 5 shows the installation in situ of
    the BHiveSense node hive prototype. Download : Download high-res image (243KB)
    Download : Download full-size image Fig. 4. BhiveSense hive node prototype – schematic.
    Download : Download high-res image (223KB) Download : Download full-size image
    Fig. 5. BHiveSense hive node prototype – hardware. The hive node prototype firmware
    is coded in C/C+ +. However, any programming language could be used if another
    MCU or development board is used. The only important aspect is the data format
    in the scope of this solution. Before commissioning the hive node, the Internet
    gateway credentials (node ID, network SSID, and password) must be saved to the
    device while uploading the firmware. In the first iteration of the loop function,
    the system waits for GNSS fixing to get and save the latitude and longitude of
    the device in the Electrically Erasable Programmable Read-Only Memory (EEPROM).
    In case the beekeeper decides to install the same node in a different hive, located
    in a different apiary, the EEPROM address containing the coordinates is cleared
    and the procedure to get the new coordinates is repeated for the new location.
    After this, the process reiterates: get updated readings from the sensors, turn
    the Wi-Fi connection ON and connect to the gateway, send HTTP POST request with
    the updated JSON body containing the last sensor readings, plus the device credentials,
    until receiving an HTTP response status of 200. After a successful POST request,
    the system idles for 10 min until it wakes up and a new iteration of the process
    starts. Fig. 6 shows the flow diagram of the hive node firmware. Download : Download
    high-res image (264KB) Download : Download full-size image Fig. 6. BhiveSense
    hive node prototype firmware - flow diagram. 4.4.2. Data model In the proposed
    architecture the data storage layer stores persistent long-term data to support
    apiary monitoring and management features, compatible with the Precision Beekeeping
    paradigm. Despite the ability to have different databases for different microservices,
    in this solution, we use a single MongoDB NoSQL database with several JSON data
    collections, each one linked with a separate microservice. Fig. 7 shows the data
    model schema for this project. The connection between each entity and the corresponding
    microservice is obvious. Several collections are proposed for normalisation features.
    The attribute data in the HIVE entity is an array of JSON instances. One instance
    is automatically created for each day, and the dayData array saves each JSON instance
    sent from the hive node device. This approach makes the analytics process faster
    and more efficient, for example, getting weekly or monthly data for the hive.
    Download : Download high-res image (476KB) Download : Download full-size image
    Fig. 7. BhiveSense data model. 4.4.3. RESTful API The proposed backend architecture
    follows a modular, flexible, and robust architecture built under the HTTP protocol
    and REST, an architectural pattern known to ease Web service development (Cebeci̇̇̇
    and Korçak, 2020). Due to the nature of HTTP, request/response communication are
    carried on synchronously. HTTP delivers this type of communication through blocking
    and awake approach. The use of an API (Application Programming Interface) with
    the REST architecture provides efficiency, procedure automation, and interoperability
    as the main advantages. REST also allows independent implementations from the
    server and client sides. The client only needs to know the endpoints to reach
    the resources delivered by the API and a known message format. In this case, we
    use JSON. Implementing the API gateway in a RESTful Web approach eases the use
    of microservices methods providing an interface, keeping it as simple as possible
    in our solution. The demonstration backend is implemented in NodeJS following
    the MVC protocol and the CRUD paradigm (Create, Read, Update, Delete) which corresponds
    to the methods POST, GET, PUT and DELETE in an HTTP environment. Fig. 8 shows
    the component diagram for the API and backend. Download : Download high-res image
    (275KB) Download : Download full-size image Fig. 8. BhiveSense component diagram
    (API). 4.4.4. API gateway module the API gateway module is the entry point for
    the backend application. This module handles the HTTP requests from the clients
    and routes them to the relevant module. The routing feature is a fundamental technique
    in a REST API. This module also runs a daily routine (CRON JOB) to detect if there
    are any near interventions scheduled for the next days (0 ≥ numDays ≤ 5) to notify
    the beekeeper. 4.4.5. Auth module this module contains all the login and authentication
    methods to secure the application. All request handling is subject to authentication
    control (token) before routing to the queue correspondent microservice. 4.4.6.
    User module is responsible for managing the user login and authentication, providing
    the tokens that are delivered in the response header and the necessary user data
    to the client. It also provides methods for user registration and account management.
    Apiary module: the Apiary module manages requests to perform all the operations
    concerning apiaries (e.g., create an apiary, update apiary data, delete the apiary,
    get apiaries for a specific user, etc.). Hive module: this module delivers methods
    to assign/unassign hives (node devices) to a specific user, register the hives
    in an apiary, and return the hive data to the users. It also has a method to handle
    the requests sent from the node devices to register a new data package. Interventions
    module: the Interventions module can register scheduled interventions for an apiary
    and handle requests to update, delete, or change its state to conclude. These
    microservices are related to apiary management, one of this solution''s goals
    in the Precision Beekeeping paradigm. Harvest module: this module is responsible
    for registering harvest actions for each hive/apiary and delivers methods for
    production analytics by hive, apiary, or user. Message module: this is the module
    that groups methods to handle messages from the beekeepers (users) to the platform
    administration in case of the need to report any issue or problem with the system.
    Event module: this module handles requests related to events. It delivers the
    methods to create events and to change their status. This is the crucial microservice
    to trigger alarms to the beekeeper. An event is a particular situation that arises
    from hive data analysis in real-time. In this project, events are triggered in
    the following conditions: temperature or relative humidity inside the hive above
    the setpoint; the hive lid is open; the harvest setpoint has been reached; or
    a possible swarm situation has been detected. Notifications module: this module
    supplies the method and services to generate and send notifications to the users
    in case of new events or near future interventions scheduled. It delivers services
    to send e-mails or push notifications to the application layer instances. In this
    solution, we use an external microservice from OneSignal that eases sending a
    web and mobile push notifications. History module: in case the beekeeper decides
    to move a hive from one apiary to another, there are important procedures to carry
    out. First, the new location will be a different geographical point. Second, the
    beekeeper should have a way to decide about the accumulated data in the previous
    location. The history module provides the possibility to save the collected data
    when a hive is unassigned from an apiary, for future analytical proposes. 4.4.7.
    User applications 4.4.7.1. Web application To demonstrate the proposed system
    architecture, a web application was developed. This artefact was developed in
    a modern SPA (Single Page Application) approach, using the Vue.JS framework and
    several specific packages. The application offers distinct features to the beekeeper,
    according to project goals and identified problems in the scope of Precision Beekeeping.
    In the application, there are two main user levels: administrator and beekeeper.
    The first has access to different tools such as user administration, registering
    or managing devices in the system, or replying to beekeepers'' messages. The beekeepers
    have access to different options, for example, to visualise aggregated information
    in a simple dashboard (Fig. 9), perform CRUD operations over apiaries or devices
    (hives), monitor detailed hive data (Fig. 10), view and manage event logs (Fig.
    11), and several others feature like register harvest activities, monitor production
    by apiary or hive, and receive push notifications for events and alarms. Download
    : Download high-res image (256KB) Download : Download full-size image Fig. 9.
    BhiveSense Web app dashboard showing a notification (Web). Download : Download
    high-res image (193KB) Download : Download full-size image Fig. 10. BhiveSense
    detailed hive data example (Web). Download : Download high-res image (255KB) Download
    : Download full-size image Fig. 11. BhiveSense event log for user devices (Web).
    This platform also includes an intervention management service that allows the
    beekeeper to schedule interventions in each apiary, being notified in the dashboard
    and via e-mail when the intervention date is coming (less or equal to five days).
    The focus is on the information about important events that occurred in the hives
    such as abnormal values of temperature or humidity inside the hives, the hive
    lid opening, possible swarm events or near future interventions to come. The dashboard
    also shows the need for harvesting using the weight parameter and gives access
    to a complete log of events. The beekeeper also has the correct tools to register
    each harvest to control the production by apiary or hive. 4.4.7.2. Mobile application
    In addition to the web application, an extra demonstration artefact was developed,
    consisting of a mobile application (Android version). This tool was also implemented
    using a modern concept, with the framework Flutter, developed by Google. The application
    allows the beekeeper to monitor the state of the apiaries in a simple dashboard
    (Fig. 12a). The apiaries can be monitored individually (Fig. 12b), accessing their
    associated hives (Fig. 12c). Information about each hive parameter and the general
    hive state can be accessed on a dedicated screen (Fig. 12d). Both applications
    (web and mobile) also use the GNSS feature of the device prototype to give a geolocation
    dimension to the system (Fig. 12e). Like the web version, this application receives
    push notifications in case of the occurrence of important events that can indicate
    anomalies demanding the beekeeper intervention: hive inside temperature our air
    humidity higher than the setpoint, hive lid open, harvest setpoint reached or
    possible swarm situation (Fig. 12a), allowing a fast reaction from the beekeeper
    to prevent situations that could impact in the apiary production, or in the colony''s
    health and behaviour. Download : Download high-res image (452KB) Download : Download
    full-size image Fig. 12. (a) Mobile app dashboard showing notification; (b) List
    of apiaries; (c) List of hives in one apiary; (d) Hive detailed data example;
    (e) Location of the hive in Google Maps. 4.4.7.3. Evaluation Conducting practical
    tests on an IoT-based monitoring solution for beehives presents several notable
    challenges that require thoughtful consideration (Wrysinski et al., 2023). Firstly,
    the ever-changing and unpredictable natural environment of beehives, with its
    diverse weather conditions, temperature fluctuations, and varied bee behaviour
    patterns, poses uncontrollable factors that can impact data collection and overall
    system performance. Ensuring consistent and reliable results becomes a demanding
    task. Secondly, the introduction of new technology like IoT devices into beehives
    might disturb or alter the behaviour of bee colonies. As bees are highly sensitive
    creatures, any disruptions to their habitat could cause stress and affect their
    natural activities, potentially influencing the accuracy of the collected data
    and the effectiveness of the monitoring solution. Moreover, the dispersion of
    beehives across different geographical locations creates logistical challenges
    for deploying and maintaining the IoT devices. Overcoming obstacles such as accessing
    remote areas, ensuring stable network connectivity, and powering the devices in
    isolated locations demands careful planning and resource allocation. Another crucial
    concern is the durability and safety of the IoT devices used in beehives. They
    must withstand harsh environmental conditions, including extreme temperatures
    and moisture. Additionally, ensuring the quality, reliability, security and privacy
    of the collected data is of utmost importance. Any data bias or breaches could
    have serious implications for both the beekeepers and the bee colonies (Hadjur
    et al., 2022). Hence, real-life testing requires prolonged observation periods
    to understand the long-term performance and reliability of the IoT-based monitoring
    solutions. This extended testing demands significant time and resources, potentially
    delaying the evaluation of the system''s effectiveness and hindering the pace
    of improvements or modifications (Abdollahi et al., 2022). Therefore, considering
    the aforementioned factors and taking inspiration from similar research (Heaton
    and Parlikad, 2019, Paganelli et al., 2022, Tamburis et al., 2020) where conceptual
    proposals underwent only initial validation but emphasized the need for real-life
    testing to assess all contextual aspects and biases, a series of initial evaluation
    procedures were undertaken to validate the adequacy of the proposed components,
    their compatibility, and interoperability. This step was critical to assess the
    proposed architecture and we used demonstration artefacts for this validation.
    As established by existing literature (Jacob and Mani, 2018, Popereshnyak et al.,
    2018), in order to validate the proposed artefact, an initial set of different
    types of tests was performed: unit tests, integration tests, and acceptance tests.
    Unit tests were created and performed during the development of the demonstration
    artefacts to test each service provided by the REST API, individually, and ran
    often, as payloads and logic involved. These tests, performed using the Insomnia
    REST Client application (Insomnia, 2023), indicated that all the used sensors
    were able to individually perform according to the manufacturer specifications,
    thus allowing to collect data within expected sets of values. To test and evaluate
    the integration of the different services, several integration tests were performed
    in a top-down approach depending on the coverage of the components. These tests
    allowed us to evaluate if the several components and services work together in
    an orchestrated way. In order to perform the referred integration tests all sensing
    nodes were activated in parallel and were set in a \"data collection\" mode that
    enabled each one of them to effectively and simultaneously collect data and save
    it in the data storage module. After analysing the data collection and communication
    log it was possible to perceive that all activated sensing modules performed correctly
    and within the expected accuracy and performance levels. Finally, acceptance tests
    validate the user requirements (beekeepers), specifically if the several operations
    and monitoring features related to the Precision Beekeeping paradigm are implemented
    in the solution. These validations were based on a set of dynamic tests, using
    the entire system architecture. The REST API was deployed in a shared cloud server
    service, while the web and mobile applications were running in a local environment.
    The monitoring hardware was commissioned for five continuous months in a controlled
    environment composed of a beehive installed in similar conditions as it would
    be in a real apiary but without a bee colony installed inside. During this period,
    several events were induced to test the response of the system and validation
    of the architecture. For example, the hive lid was open, the temperature and humidity
    were intentionally raised, or sounds with frequencies compatible with swarming
    were simulated to test the response of the sensors and the action of the microservice
    responsible for triggering the events and notifying the beekeeper. 4.5. Communication
    The final step of DSR-based research is the communication of the entire project
    development and results, including the relevance of the research question, the
    proposed artefact, its design, innovation, and functionality must be delivered,
    disclosing the achievements to other researchers and related relevant stakeholders.
    This paper itself is integrated into this step. Considering the research and development
    stage of this work, future actions to communicate this work will be addressed,
    with planned dissemination sessions and workshops in the apiculture section of
    the Agricultural Development Services of the Azores (São Miguel Island), to engage
    beekeepers with the proposed solution. 5. Conclusions and future work Monitoring
    beehives and apiaries is critical to preserving both honeybee numbers and the
    delicate ecological balance that they support. Honeybees contribute greatly to
    agriculture as pollinators by supporting the reproduction of numerous fruit, vegetable,
    and nut crops. Beekeepers can monitor the health of colonies, detect and manage
    possible hazards such as diseases, pests, or environmental stressors, and implement
    appropriate remedies by frequently observing beehives. Timely monitoring also
    helps to reduce colony losses, which promotes food security and economic stability.
    Furthermore, knowing honeybee behaviour through monitoring allows researchers
    to acquire insights into their sophisticated social structure and communication
    patterns, allowing for the development of science-based conservation policies
    that are both sustainable and long-term. We can protect these important pollinators
    by investing in careful monitoring procedures. Using IoT-based monitoring systems
    and solutions provide vital aid in the abovementioned monitoring and administration
    of beehives and apiaries, thus offering an innovative approach to beekeeping.
    These smart systems collect real-time data on critical parameters such as temperature,
    humidity, hive weight, and even sound and movement patterns via a network of interconnected
    sensors, cameras, and gadgets installed within the beehives. This constant flow
    of data enables beekeepers to remotely monitor and assess hive conditions, allowing
    them to respond to any irregularities or signals of stress inside the colony as
    soon as possible. By configuring alerts and notifications, beekeepers can receive
    instant indications if conditions deviate from ideal, preventing potential problems.
    Furthermore, IoT monitoring solutions provide data insights and analytics that
    enable beekeepers to make more informed decisions. Microservices architectures
    have emerged as a powerful approach to building and managing complex systems,
    including IoT (Internet of Things) applications. In a microservices architecture,
    a large application is broken down into small, independent, and loosely coupled
    services, each responsible for specific functionalities. This modular design allows
    for greater flexibility and scalability, especially in IoT systems where the number
    of connected devices and data volume can vary significantly. By adopting microservices,
    IoT applications can easily scale up or down based on demand, as each service
    can be individually deployed, upgraded, or replicated as needed. This elasticity
    ensures that the system can efficiently handle varying workloads, making it well-suited
    to the dynamic and evolving nature of IoT environments. Additionally, microservices
    promote rapid development and deployment, allowing IoT applications to adapt quickly
    to changing requirements and technological advancements, while also enabling easier
    maintenance and fault isolation. With the above in mind the present research proposes
    a novel low-cost IoT-based monitoring solution supported by a microservices architecture
    and aimed at continuously monitor beehives and apiaries. From a formal perspective,
    the proposed solution well-framed and interoperable six-layer architecture ensures
    the needed agility and scalability that beekeepers require. In order to ensure
    the necessary validity to the proposed artifact, we have developed a prototype
    of the conceptual solution that has been tested using a controlled simulation
    environment. The achieved results allowed to attain that the proposed solution
    fulfils all the initially established functional and performance requirements,
    thus allowing us to consider it as a valuable contribute to both science and practice.
    5.1. Limitations and future work This work has some primary limitations. Firstly,
    only one prototype for the hive node device was developed and tested. Although
    the tests were conducted in a natural laboratory with varying weather conditions,
    there were no tests conducted with an actual bee colony installed inside the hive.
    In the future, to fully validate the node sensing prototype''s response in a broader
    and long-term context, it is essential to produce and install multiple identical
    hive nodes in different apiaries located in various places. This validation will
    also involve testing the hardware prototype with bee colonies installed in the
    hives. The plan is to collaborate with the local Agricultural Development Services
    of the Azores (São Miguel Island, Azores), who have agreed to deploy the proposed
    system in several of their apiaries for these tests. However, securing funds for
    replicating the devices is necessary for carrying out these tests. Despite these
    limitations, the tests conducted with the developed demonstration artifacts are
    considered sufficient to validate the functionality, scalability, and flexibility
    of the proposed architectural solution. Supplementary materials Not applicable.
    Informed consent statement Not applicable. Funding This work was supported by
    national funds through the Portuguese Funding Agency, the Fundação para a Ciência
    e a Tecnologia (FCT) within project LA/P/0063/2020. Ethical statement Not applicable
    as no human subjects were included as participants in the research activities
    that were conducted. CRediT authorship contribution statement Conceptualization,
    D.C., F.B, and J.M.; Methodology, J.M., D.C., and F.B.; Investigation: D.C., J.M.,
    F.B., and H.M.; Writing – original draft, D.C., J.M., F.B., and H.M.; Writing
    – review & editing, D.C., J.M., F.B., and H.M.; Supervision, F.B. and J.M.; Funding
    acquisition, H.M. and J.M. All authors have read and agreed to the published version
    of the manuscript. Declaration of Competing Interest none. Acknowledgements JM
    is grateful to the FCT for the projects titled \"AquaValor—Centro de Valorização
    e Transferência de Tecnologia da Água\" (NORTE-01–0246-FEDER-000053) and \"Emprego
    altamente qualificado nas empresas ou em COLABS—Contrataç ão de Recursos Humanos
    Altamente Qualificados (PME ou CoLAB)\" (NORTE-06–3559-FSE-000095), supported
    by the North Portugal Regional Operational Programme (NORTE 2020) under the PORTUGAL
    2020 Partnership Agreement through the European Regional Development Fund (ERDF).
    References Abbasi et al., 2022 R. Abbasi, P. Martinez, R. Ahmad The digitization
    of agricultural industry – a systematic literature review on agriculture 4.0 Smart
    Agric. Technol., 2 (2022), Article 100042, 10.1016/j.atech.2022.100042 View PDFView
    articleView in ScopusGoogle Scholar Abdollahi et al., 2022 M. Abdollahi, P. Giovenazzo,
    T.H. Falk Automated beehive acoustics monitoring: a comprehensive review of the
    literature and recommendations for future work Appl. Sci., 12 (8) (2022), p. 3920
    CrossRefView in ScopusGoogle Scholar Alifieris et al., 2023 Alifieris, C., Chamaidi,
    T., Malisova, K., Mamalis, D., Nomikos, E., Rigakis, C., Vlachogiannis, E., &
    Stavrakis, M. (2023). IOHIVE: Architecture and Infrastructure of an IOT System
    for Beehive Monitoring and an Interactive Journaling Wearable Device for Beekeepers.
    133–149. Google Scholar Andrijević et al., 2022 N. Andrijević, V. Urošević, B.
    Arsić, D. Herceg, B. Savić IoT monitoring and prediction modeling of honeybee
    activity with alarm Electronics, 11 (5) (2022), p. 783, 10.3390/electronics11050783
    View in ScopusGoogle Scholar Anwar et al., 2023 O. Anwar, A. Keating, R. Cardell-Oliver,
    A. Datta, G. Putrino Apis-Prime: a deep learning model to optimize beehive monitoring
    system for the task of daily weight estimation Appl. Soft Comput., 144 (2023),
    Article 110546, 10.1016/j.asoc.2023.110546 View PDFView articleView in ScopusGoogle
    Scholar Araújo et al., 2021 S.O. Araújo, R.S. Peres, J. Barata, F. Lidon, J.C.
    Ramalho Characterising the agriculture 4.0 landscape—Emerging trends, challenges
    and opportunities. Agronomy, 11 (4) (2021), p. 667 CrossRefView in ScopusGoogle
    Scholar Atitallah et al., 2022 S.B. Atitallah, M. Driss, H.B. Ghzela Microservices
    for data analytics in IoT applications: current solutions, open challenges, and
    future research directions Procedia Comput. Sci., 207 (2022), pp. 3938-3947 View
    PDFView articleView in ScopusGoogle Scholar Aydin and Nafiz Aydin, 2022 S. Aydin,
    M. Nafiz Aydin Design and implementation of a smart beehive and its monitoring
    system using microservices in the context of IoT and open data Comput. Electron.
    Agric., 196 (2022), Article 106897, 10.1016/j.compag.2022.106897 View PDFView
    articleView in ScopusGoogle Scholar Bellino et al., 2022 F. Bellino, G. Turvani,
    U. Garlando, F. Riente An integrated multi-sensor system for remote bee Health
    Monit. (2022), pp. 334-338 CrossRefView in ScopusGoogle Scholar de Boon et al.,
    2022 A. de Boon, C. Sandström, D.C. Rose Governing agricultural innovation: a
    comprehensive framework to underpin sustainable transitions J. Rural Stud., 89
    (2022), pp. 407-422 View PDFView articleView in ScopusGoogle Scholar Butzin et
    al., 2016 Butzin, B., Golatowski, F., & Timmermann, D. (2016). Microservices approach
    for the internet of things. 1–6. Google Scholar Calvo et al., 2022 I. Calvo, A.
    Espin, J.M. Gil-García, P. Fernández Bustamante, O. Barambones, E. Apiñaniz Scalable
    IoT architecture for monitoring IEQ conditions in public and private buildings
    Energies, 15 (6) (2022), p. 2270 CrossRefView in ScopusGoogle Scholar Catania
    and Vallone, 2020 P. Catania, M. Vallone Application of A precision apiculture
    system to monitor honey daily production Sensors, 20 (7) (2020), p. 2012, 10.3390/s20072012
    View in ScopusGoogle Scholar Cebeci̇ and Korçak, 2020 K. Cebeci̇, Ö. Korçak Design
    of an enterprise level architecture based on microservices Bilişim Teknol. Derg.,
    13 (4) (2020), pp. 357-371, 10.17671/gazibtd.558392 Google Scholar Cecchi et al.,
    2020 S. Cecchi, S. Spinsante, A. Terenzi, S. Orcioni A smart sensor-based measurement
    system for advanced bee hive monitoring Sensors, 20 (9) (2020), p. 2726, 10.3390/s20092726
    View in ScopusGoogle Scholar Chukkapalli et al., 2020 Chukkapalli, S., Piplai,
    A., Mittal, S., Gupta, M., & Joshi, A. (2020). A Smart-Farming Ontology for Attribute
    Based Access Control. 2020 IEEE 6th Intl Conference on Big Data Security on Cloud
    (BigDataSecurity), IEEE Intl Conference on High Performance and Smart Computing,
    (HPSC) and IEEE Intl Conference on Intelligent Data and Security (IDS), 29–34.
    https://doi.org/10.1109/BigDataSecurity-HPSC-IDS49724.2020.00017. Google Scholar
    Dayioglu and Turker, 2021 M.A. Dayioglu, U. Turker Digital transformation for
    sustainable future-agriculture 4.0: a review J. Agric. Sci., 27 (4) (2021), pp.
    373-399 View in ScopusGoogle Scholar Edwards-Murphy et al., 2016 F. Edwards-Murphy,
    M. Magno, P.M. Whelan, J. O’Halloran, E.M. Popovici B+ WSN: smart beehive with
    preliminary decision tree analysis for agriculture and honey bee health monitoring
    Comput. Electron. Agric., 124 (2016), pp. 211-219 View PDFView articleView in
    ScopusGoogle Scholar Farooq et al., 2020 M.S. Farooq, S. Riaz, A. Abid, T. Umer,
    Y.B. Zikria Role of IoT technology in agriculture: a systematic literature review
    Electronics, 9 (2) (2020), p. 319, 10.3390/electronics9020319 View in ScopusGoogle
    Scholar Fitzgerald et al., 2015 Fitzgerald, D.W., Murphy, F.E., Wright, W.M. D.,
    Whelan, P.M., & Popovici, E.M. (2015). Design and development of a smart weighing
    scale for beehive monitoring. 2015 26th Irish Signals and Systems Conference (ISSC),
    1–6. https://doi.org/10.1109/ISSC.2015.7163763. Google Scholar Gan and Delimitrou,
    2018 Y. Gan, C. Delimitrou The architectural implications of cloud microservices
    IEEE Comput. Archit. Lett., 17 (2) (2018), pp. 155-158, 10.1109/LCA.2018.2839189
    View in ScopusGoogle Scholar Gil-Lebrero et al., 2016 S. Gil-Lebrero, F.J. Quiles-Latorre,
    M. Ortiz-López, V. Sánchez-Ruiz, V. Gámiz-López, J.J. Luna-Rodríguez Honey bee
    colonies remote monitoring system Sensors, 17 (1) (2016), p. 55 CrossRefGoogle
    Scholar Gil-Lebrero et al., 2020 S. Gil-Lebrero, F.J. Navas González, V. Gámiz
    López, F.J. Quiles Latorre, J.M. Flores Serrano Regulation of microclimatic conditions
    inside native beehives and its relationship with climate in Southern Spain Sustainability,
    12 (16) (2020), 10.3390/su12166431 Google Scholar Guandalini, 2022 I. Guandalini
    Sustainability through digital transformation: a systematic literature review
    for research guidance J. Bus. Res., 148 (2022), pp. 456-471 View PDFView articleView
    in ScopusGoogle Scholar Gupta and Quamara, 2020 B.B. Gupta, M. Quamara An overview
    of internet of things (IoT): architectural aspects, challenges, and protocols
    Concurr. Comput.: Pract. Exp., 32 (21) (2020), 10.1002/cpe.4946 Google Scholar
    Hadjur et al., 2022 H. Hadjur, D. Ammar, L. Lefèvre Toward an intelligent and
    efficient beehive: a survey of precision beekeeping systems and services Comput.
    Electron. Agric., 192 (2022), Article 106604, 10.1016/j.compag.2021.106604 View
    PDFView articleView in ScopusGoogle Scholar He et al., 2020 W. He, S. Zhang, Z.
    Hu, J. Zhang, X. Liu, C. Yu, H. Yu Field experimental study on a novel beehive
    integrated with solar thermal/photovoltaic system Sol. Energy, 201 (2020), pp.
    682-692, 10.1016/j.solener.2020.03.054 View PDFView articleView in ScopusGoogle
    Scholar Heaton and Parlikad, 2019 J. Heaton, A.K. Parlikad A conceptual framework
    for the alignment of infrastructure assets to citizen requirements within a smart
    cities framework Cities, 90 (2019), pp. 32-41, 10.1016/j.cities.2019.01.041 View
    PDFView articleView in ScopusGoogle Scholar Hevner et al., 2004 Hevner, et al.
    Design science in information systems research Hevner, A., March, S., Park, J.,
    & Ram, S. (2004) MIS Q., 28 (1) (2004), pp. 75-105 CrossRefView in ScopusGoogle
    Scholar Hong et al., 2020 W. Hong, B. Xu, X. Chi, X. Cui, Y. Yan, T. Li Long-term
    and extensive monitoring for bee colonies based on internet of things IEEE Internet
    Things J., 7 (8) (2020), pp. 7148-7155, 10.1109/JIOT.2020.2981681 View in ScopusGoogle
    Scholar Imoize et al., 2020 A.L. Imoize, S.D. Odeyemi, J.A. Adebisi Development
    of a low-cost wireless bee-hive temperature and sound monitoring system IJEEI,
    8 (3) (2020), pp. 476-485, 10.11591/ijeei.v8i3.2268 View in ScopusGoogle Scholar
    Insomnia, 2023 Insomnia. (2023). Insomnia REST Client application (2023 v4.0)
    [Computer software]. 〈https://insomnia.rest/〉. Google Scholar ISPA, 2021 ISPA.
    (2021). Precision Ag Definition | International Society of Precision Agriculture.
    〈https://www.ispag.org/about/definition〉. Google Scholar Jacob and Mani, 2018
    P.M. Jacob, P. Mani A reference model for testing internet of things based applications
    J. Eng. Sci. Technol., 13 (8) (2018), pp. 2504-2519 View in ScopusGoogle Scholar
    Jegan et al., 2021 Jegan, S., Padmapriya, L., Manjari, P.V., & Shanmathi, R. (2021).
    Honey hive monitoring using IOT. 140023. https://doi.org/10.1063/5.0070127. Google
    Scholar Kasiotis et al., 2021 K.M. Kasiotis, E. Zafeiraki, E. Kapaxidi, E. Manea-Karga,
    S. Antonatos, P. Anastasiadou, P. Milonas, K. Machera Pesticides residues and
    metabolites in honeybees: a Greek overview exploring Varroa and Nosema potential
    synergies Sci. Total Environ., 769 (2021), Article 145213, 10.1016/j.scitotenv.2021.145213
    View PDFView articleView in ScopusGoogle Scholar Khairul Anuar et al., 2019 Khairul
    Anuar, N.H., Amri Md Yunus, M., Baharuddin, M.A., Sahlan, S., Abid, A., Ramli,
    M.M., Razzi Abu Amin, M., & Mohd Lotpi, Z.F. (2019). IoT Platform for Precision
    Stingless Bee Farming. 2019 IEEE International Conference on Automatic Control
    and Intelligent Systems (I2CACIS), 225–229. https://doi.org/10.1109/I2CACIS.2019.8825089.
    Google Scholar Khujamatov and Toshtemirov, 2020 Khujamatov, K., & Toshtemirov,
    T. (2020). Wireless sensor networks based Agriculture 4.0: Challenges and apportions.
    2020 International Conference on Information Science and Communications Technologies
    (ICISCT), 1–5. https://doi.org/10.1109/ICISCT50599.2020.9351411. Google Scholar
    Komasilovs et al., 2019 Komasilovs, V., Zacepins, A., Kviesis, A., Fiedler, S.,
    & Kirchner, S. (2019). Modular sensory hardware and data processing solution for
    implementation of the precision beekeeping [PDF]. 523.5Kb. https://doi.org/10.15159/AR.19.038.
    Google Scholar Kontogiannis, 2019 S. Kontogiannis An internet of things-based
    low-power integrated beekeeping safety and conditions monitoring system Inventions,
    4 (3) (2019), p. 52, 10.3390/inventions4030052 View in ScopusGoogle Scholar Kulyukin
    et al., 2018 V. Kulyukin, S. Mukherjee, P. Amlathe Toward audio beehive monitoring:
    deep learning vs. Standard machine learning in classifying beehive audio samples
    Appl. Sci., 8 (9) (2018), p. 1573 View in ScopusGoogle Scholar Liu et al., 2022
    Y. Liu, D. Li, B. Du, L. Shu, G. Han Rethinking sustainable sensing in agricultural
    internet of things: from power supply perspective IEEE Wirel. Commun., 29 (4)
    (2022), pp. 102-109, 10.1109/MWC.004.2100426 Google Scholar Lyu et al., 2020 Z.
    Lyu, H. Wei, X. Bai, C. Lian Microservice-based architecture for an energy management
    system IEEE Syst. J., 14 (4) (2020), pp. 5061-5072, 10.1109/JSYST.2020.2981095
    View in ScopusGoogle Scholar Maffezzoli et al., 2022 F. Maffezzoli, M. Ardolino,
    A. Bacchetti, M. Perona, F. Renga Agriculture 4.0: a systematic literature review
    on the paradigm, technologies and benefits Futures, 102998 (2022) Google Scholar
    Marquez et al., 2021 G. Marquez, C. Taramasco, H. Astudillo, V. Zalc, D. Istrate
    Involving stakeholders in the implementation of microservice-based systems: a
    case study in an ambient-assisted living system IEEE Access, 9 (2021), pp. 9411-9428,
    10.1109/ACCESS.2021.3049444 View in ScopusGoogle Scholar Meikle et al., 2016 W.
    Meikle, M. Weiss, A. Stilwell Monitoring colony phenology using within-day variability
    in continuous weight and temperature of honey bee hives Apidologie, 47 (2016),
    pp. 1-14 CrossRefView in ScopusGoogle Scholar Miranda et al., 2019 J. Miranda,
    P. Ponce, A. Molina, P. Wright Sensing, smart and sustainable technologies for
    Agri-Food 4.0 Comput. Ind., 108 (2019), pp. 21-36 View PDFView articleView in
    ScopusGoogle Scholar Mohamed and Mansor, 2023 Mohamed, M.Y., & Mansor, M.S. (2023).
    Measuring the Variability and Humidity of Apis mellifera Honeybee Hives by the
    Effect of some Ventilation and Indoor Fires During the Autumn Season Using a New
    System. 1158(3), 032015. Google Scholar Murphy et al., 2015 Murphy, F.E., Magno,
    M., O’Leary, L., Troy, K., Whelan, P., & Popovici, E.M. (2015). Big brother for
    bees (3B) — Energy neutral platform for remote monitoring of beehive imagery and
    sound. 2015 6th International Workshop on Advances in Sensors and Interfaces (IWASI),
    106–111. https://doi.org/10.1109/IWASI.2015.7184943. Google Scholar Navarro et
    al., 2022 Navarro, J., Lima, F., Porto, M., Steinfeld, L., 2022. BeeSmart: A real-time
    remote monitoring and control system for beekeeping Symp. . Internet Things (SIoT)
    2022 2022 1 4 doi: 10.1109/SIoT56383.2022.10070330. Google Scholar Ngo et al.,
    2019 T.N. Ngo, K.-C. Wu, E.-C. Yang, T.-T. Lin A real-time imaging system for
    multiple honey bee tracking and activity monitoring Comput. Electron. Agric.,
    163 (2019), Article 104841 View PDFView articleView in ScopusGoogle Scholar Ntawuzumunsi
    et al., 2021 E. Ntawuzumunsi, S. Kumaran, L. Sibomana Self-Powered Smart Beehive
    Monitoring and Control System (SBMaCS) Sensors, 21 (10) (2021), p. 3522, 10.3390/s21103522
    View in ScopusGoogle Scholar Paganelli et al., 2022 A.I. Paganelli, P.E. Velmovitsky,
    P. Miranda, A. Branco, P. Alencar, D. Cowan, M. Endler, P.P. Morita A conceptual
    IoT-based early-warning architecture for remote monitoring of COVID-19 patients
    in wards and at home Internet Things, 18 (2022), Article 100399, 10.1016/j.iot.2021.100399
    View PDFView articleView in ScopusGoogle Scholar Panziera et al., 2022 D. Panziera,
    F. Requier, P. Chantawannakul, C.W. Pirk, T. Blacquière The diversity decline
    in wild and managed honey bee populations urges for an integrated conservation
    approach Front. Ecol. Evol., 10 (2022), Article 767950 View in ScopusGoogle Scholar
    Patel et al., 2021 V. Patel, N. Pauli, E. Biggs, L. Barbour, B. Boruff Why bees
    are critical for achieving sustainable development Ambio, 50 (2021), pp. 49-59
    CrossRefView in ScopusGoogle Scholar Peffers et al., 2007 K. Peffers, T. Tuunanen,
    M.A. Rothenberger, S. Chatterjee A design science research methodology for information
    systems research J. Manag. Inf. Syst., 24 (3) (2007), pp. 45-77, 10.2753/MIS0742-1222240302
    View in ScopusGoogle Scholar Popereshnyak et al., 2018 Popereshnyak, S., Suprun,
    O., Suprun, O., & Wieckowski, T. (2018). IoT application testing features based
    on the modelling network. 127–131. Google Scholar Pyingkodi et al., 2022 Pyingkodi,
    M., Thenmozhi, K., Nanthini, K., Karthikeyan, M., Palarimath, S., Erajavignesh,
    V., & Kumar, G.B. A. (2022). Sensor based smart agriculture with IoT technologies:
    A review. 1–7. Google Scholar Ramachandran et al., 2022 V. Ramachandran, R. Ramalakshmi,
    B. Kavin, I. Hussain, A. Almaliki, A. Almaliki, A. Elnaggar, E. Hussein Exploiting
    IoT and Its enabled technologies for irrigation needs in agriculture Water, 14
    (5) (2022), p. 719, 10.3390/w14050719 View in ScopusGoogle Scholar Ramson et al.,
    2020 Ramson, S.R. J., Vishnu, S., & Shanmugam, M. (2020). Applications of Internet
    of Things (IoT) – An Overview. 2020 5th International Conference on Devices, Circuits
    and Systems (ICDCS), 92–95. https://doi.org/10.1109/ICDCS48716.2020.243556. Google
    Scholar Requier, 2019 F. Requier Bee colony health indicators: Synthesis and future
    directions CABI Rev., 2019 (2019), pp. 1-12 CrossRefGoogle Scholar Robustillo
    et al., 2022 M.C. Robustillo, C.J. Pérez, M.I. Parra Predicting internal conditions
    of beehives using precision beekeeping Biosyst. Eng., 221 (2022), pp. 19-29 View
    PDFView articleView in ScopusGoogle Scholar Roy and De, 2022 S.K. Roy, D. De Genetic
    algorithm based internet of precision agricultural things (IopaT) for agriculture
    4.0 Internet Things, 18 (2022), Article 100201 View PDFView articleView in ScopusGoogle
    Scholar Sari et al., 2020 F. Sari, İ. Kandemir, D.A. Ceylan, A. Gül Using AHP
    and PROMETHEE multi-criteria decision making methods to define suitable apiary
    locations J. Apic. Res., 59 (4) (2020), pp. 546-557 CrossRefView in ScopusGoogle
    Scholar Schneider et al., 2012 C.W. Schneider, J. Tautz, B. Grünewald, S. Fuchs
    RFID tracking of sublethal effects of two neonicotinoid insecticides on the foraging
    behavior of apis mellifera PLoS One, 7 (1) (2012), Article e30023, 10.1371/journal.pone.0030023
    View in ScopusGoogle Scholar Sharma et al., 2017 P.K. Sharma, M.-Y. Chen, J.H.
    Park A software defined fog node based distributed blockchain cloud architecture
    for IoT IEEE Access, 6 (2017), pp. 115-124 CrossRefGoogle Scholar Siddiqui et
    al., 2023 H. Siddiqui, F. Khendek, M. Toeroe Microservices based architectures
    for IoT systems-State-of-the-art review Internet Things (2023), Article 100854
    View PDFView articleView in ScopusGoogle Scholar Struye et al., 1994 M.H. Struye,
    H.J. Mortier, G. Arnold, C. Miniggio, R. Borneck Microprocessor-controlled monitoring
    of honeybee flight activity at the hive entrance Apidologie, 25 (4) (1994), pp.
    384-395, 10.1051/apido:19940405 View in ScopusGoogle Scholar Swain et al., 2021
    M. Swain, D. Zimon, R. Singh, M.F. Hashmi, M. Rashid, S. Hakak LoRa-LBO: an experimental
    analysis of LoRa link budget optimization in custom build IoT test bed for agriculture
    4.0 Agronomy, 11 (5) (2021), p. 820 CrossRefView in ScopusGoogle Scholar Symeonaki
    et al., 2022 E. Symeonaki, K.G. Arvanitis, D. Piromalis, D. Tseles, A.T. Balafoutis
    Ontology-based IoT middleware approach for smart livestock farming toward agriculture
    4.0: a case study for controlling thermal environment in a pig facility Agronomy,
    12 (3) (2022), 10.3390/agronomy12030750 Google Scholar Szczurek et al., 2023 A.
    Szczurek, M. Maciejewska, P. Batog Monitoring system enhancing the potential of
    urban beekeeping Appl. Sci., 13 (1) (2023), 10.3390/app13010597 Google Scholar
    Tamburis et al., 2020 O. Tamburis, F. Giannino, M. D’Arco, A. Tocchi, C. Esposito,
    G. Di Fiore, N. Piscopo, L. Esposito A night at the OPERA: a conceptual framework
    for an integrated distributed sensor network-based system to figure out safety
    protocols for animals under risk of fire Sensors, 20 (9) (2020), 10.3390/s20092538
    Google Scholar Tashakkori et al., 2021 R. Tashakkori, A.S. Hamza, M.B. Crawford
    Beemon: an IoT-based beehive monitoring system Comput. Electron. Agric., 190 (2021),
    Article 106427, 10.1016/j.compag.2021.106427 View PDFView articleView in ScopusGoogle
    Scholar Ullah et al., 2021 A. Ullah, I. Tlak Gajger, A. Majoros, S.A. Dar, S.
    Khan, Kalimullah, A. Haleem Shah, M. Nasir Khabir, R. Hussain, H.U. Khan, M. Hameed,
    S.I. Anjum Viral impacts on honey bee populations: a review Saudi J. Biol. Sci.,
    28 (1) (2021), pp. 523-530, 10.1016/j.sjbs.2020.10.037 View PDFView articleView
    in ScopusGoogle Scholar Uthoff et al., 2023 C. Uthoff, M.N. Homsi, M. von Bergen
    Acoustic and vibration monitoring of honeybee colonies for beekeeping-relevant
    aspects of presence of queen bee and swarming Comput. Electron. Agric., 205 (2023),
    Article 107589 View PDFView articleView in ScopusGoogle Scholar Voudiotis et al.,
    2021 G. Voudiotis, S. Kontogiannis, C. Pikridas Proposed smart monitoring system
    for the detection of bee swarming Inventions, 6 (4) (2021), p. 87 CrossRefView
    in ScopusGoogle Scholar Wrysinski et al., 2023 Wrysinski, E., Stock, J., Paiz,
    C., & Blanc, D. (2023). A Hardware Platform for Wireless Beehive Monitoring [Bachelor
    Of Science In Computer Science And Engineering, Santa Clara University]. https://scholarcommons.scu.edu/cseng_senior/245/.
    Google Scholar Wu and Li, 2023 H. Wu, J. Li Risk preference, interlinked credit
    and insurance contract and agricultural innovative technology adoption J. Innov.
    Knowl., 8 (1) (2023), Article 100282 View PDFView articleView in ScopusGoogle
    Scholar Xu et al., 2022 J. Xu, B. Gu, G. Tian Review of agricultural IoT technology
    Artif. Intell. Agric., 6 (2022), pp. 10-22 View PDFView articleView in ScopusGoogle
    Scholar Zabasta et al., 2019 Zabasta, A., Kunicina, N., Kondratjevs, K., & Ribickis,
    L. (2019). IoT Approach Application for Development of Autonomous Beekeeping System.
    2019 International Conference in Engineering Applications (ICEA), 1–6. https://doi.org/10.1109/CEAP.2019.8883460.
    Google Scholar Zacepins et al., 2015 A. Zacepins, V. Brusbardis, J. Meitalovs,
    E. Stalidzans Challenges in the development of precision beekeeping Biosyst. Eng.,
    130 (2015), pp. 60-71, 10.1016/j.biosystemseng.2014.12.001 View PDFView articleView
    in ScopusGoogle Scholar Zacepins et al., 2016 A. Zacepins, A. Kviesis, E. Stalidzans,
    M. Liepniece, J. Meitalovs Remote detection of the swarming of honey bee colonies
    by single-point temperature monitoring Biosyst. Eng., 148 (2016), pp. 76-80, 10.1016/j.biosystemseng.2016.05.012
    View PDFView articleView in ScopusGoogle Scholar Zacepins et al., 2020 A. Zacepins,
    A. Kviesis, V. Komasilovs, F. Rido Muhammad Monitoring system for remote bee colony
    state detection Balt. J. Mod. Comput., 8 (3) (2020), 10.22364/bjmc.2020.8.3.05
    Google Scholar Zaman and Dorin, 2023 A. Zaman, A. Dorin A framework for better
    sensor-based beehive health monitoring Comput. Electron. Agric., 210 (2023), Article
    107906 View PDFView articleView in ScopusGoogle Scholar Zhai et al., 2020 Z. Zhai,
    J.F. Martínez, V. Beltran, N.L. Martínez Decision support systems for agriculture
    4.0: survey and challenges Comput. Electron. Agric., 170 (2020), Article 105256
    View PDFView articleView in ScopusGoogle Scholar Cited by (4) BeeLive: The IoT
    platform of Beemon monitoring and alerting system for beehives 2023, Smart Agricultural
    Technology Show abstract ENABLING ROBUST SENSOR NETWORK DESIGN WITH DATA PROCESSING
    AND OPTIMIZATION MAKING USE OF LOCAL BEEHIVE IMAGE AND VIDEO FILES 2024, arXiv
    Precision Beekeeping Systems: State of the Art, Pros and Cons, and Their Application
    as Tools for Advancing the Beekeeping Sector 2024, Animals Investigating an Enhanced
    Approach for Greenhouse Climate Control: Optimising Cooling and Heating Systems
    2023, International Journal on Advanced Science, Engineering and Information Technology
    1 Present address: Rua Dr. Júlio Martins, Nº1, 5400–342 Chaves, Portugal © 2023
    The Authors. Published by Elsevier Ltd on behalf of Prof JinHyo Joseph Yun. Recommended
    articles b+WSN: Smart beehive with preliminary decision tree analysis for agriculture
    and honey bee health monitoring Computers and Electronics in Agriculture, Volume
    124, 2016, pp. 211-219 Fiona Edwards-Murphy, …, Emanuel M. Popovici View PDF Intelligent
    Approach for Heterogeneous Data Integration: Information Processes Analysis Engine
    in Clinical Remote Monitoring Systems Procedia Computer Science, Volume 156, 2019,
    pp. 134-141 Mikhail Khovrichev, …, Marina Balakhontceva View PDF A patent portfolio
    value analysis based on intuitionistic fuzzy sets: An empirical analysis of artificial
    intelligence for healthcare Journal of Open Innovation: Technology, Market, and
    Complexity, Volume 9, Issue 3, 2023, Article 100124 Ben Zhang, Chenxu Ming View
    PDF Show 3 more articles Article Metrics Citations Citation Indexes: 3 Captures
    Readers: 50 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: 'Journal of Open Innovation: Technology, Market, and Complexity'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'BHiveSense: An integrated information system architecture for sustainable
    remote monitoring and management of apiaries based on IoT and microservices'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dumit V.I.
  - Ammar A.
  - Bakker M.I.
  - Bañares M.A.
  - Bossa C.
  - Costa A.
  - Cowie H.
  - Drobne D.
  - Exner T.E.
  - Farcal L.
  - Friedrichs S.
  - Furxhi I.
  - Grafström R.
  - Haase A.
  - Himly M.
  - Jeliazkova N.
  - Lynch I.
  - Maier D.
  - Noorlander C.W.
  - Shin H.K.
  - Soler-Illia G.J.A.A.
  - Suarez-Merino B.
  - Willighagen E.
  - Nymark P.
  citation_count: '4'
  description: Developing safe and sustainable nanomaterials-based solutions to current
    global challenges including clean energy, sustainable food production and water
    security requires access to high quality data and appropriate analysis and modelling
    approaches. Achieving these challenges requires increased re-use of research data
    to accelerate progress and support development of new materials that are safe
    and sustainable for energy capture and storage, nano-agriculture and environmental
    remediation. The principles of Findability, Accessibility, Interoperability and
    Reusability (FAIR) provide a roadmap to enhanced data sharing and re-use, but
    require consensus within the nanosafety community on metadata, ontologies and
    persistent identifiers (among other things) and guidance to support implementation
    and achieve machine-readability. Here, we highlight the main focus of the AdvancedNano
    GO FAIR Implementation Network in supporting the nanosafety community with implementation
    of FAIR to maximize data-driven safe and sustainable application of nano- and
    advanced materials.
  doi: 10.1016/j.nantod.2023.101923
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical Abstract Keywords A FAIR implementation
    network for nanosafety data Challenges for FAIR implementation and the role of
    the AdvancedNano IN The AdvancedNano IN action plan Impact of the AdvancedNano
    IN CRediT authorship contribution statement Declaration of Competing Interest
    Acknowledgements References Show full outline Cited by (5) Figures (2) Tables
    (1) Table 1 Volume 51, August 2023, 101923 From principles to reality. FAIR implementation
    in the nanosafety community Author links open overlay panel Verónica I. Dumit
    a, Ammar Ammar b, Martine I. Bakker c, Miguel A. Bañares d, Cecilia Bossa e, Anna
    Costa f, Hilary Cowie g, Damjana Drobne h, Thomas E. Exner i, Lucian Farcal j,
    Steffi Friedrichs k, Irini Furxhi l m, Roland Grafström n v, Andrea Haase a, Martin
    Himly o, Nina Jeliazkova p, Iseult Lynch q, Dieter Maier r, Cornelle W. Noorlander
    c, Hyun Kil Shin s…Penny Nymark v Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.nantod.2023.101923
    Get rights and content Highlights • Environmental and human health safety assessment
    of nano- and advanced materials (NM and AdMa) is a necessity today to avoid devastating
    adverse effects from nanotechnology. • Safety assessment builds on data in findable,
    accessible, interoperable, and reusable (FAIR) formats. • The field of nanosafety
    has recently initiated implementation of the FAIR principles, however, clear rules
    for sustainable implementation and for active promotion of data reuse are still
    lacking. Ground-breaking steps need to be taken, especially in the areas of new
    approaches for hazard and risk assessment, including development and validation
    of machine-driven modelling approaches. • The AdvancedNano GO FAIR Implementation
    Network was launched to cover these needs, involving key players such as data
    generators, database developers, data(base) users and regulators/policy makers,
    to facilitate FAIRification of nanosafety data. • Overall, the network is a central
    component in the path towards a safe and sustainable future, built on transparent
    and effective data-driven risk assessment of NM and AdMa. Abstract Developing
    safe and sustainable nanomaterials-based solutions to current global challenges
    including clean energy, sustainable food production and water security requires
    access to high quality data and appropriate analysis and modelling approaches.
    Achieving these challenges requires increased re-use of research data to accelerate
    progress and support development of new materials that are safe and sustainable
    for energy capture and storage, nano-agriculture and environmental remediation.
    The principles of Findability, Accessibility, Interoperability and Reusability
    (FAIR) provide a roadmap to enhanced data sharing and re-use, but require consensus
    within the nanosafety community on metadata, ontologies and persistent identifiers
    (among other things) and guidance to support implementation and achieve machine-readability.
    Here, we highlight the main focus of the AdvancedNano GO FAIR Implementation Network
    in supporting the nanosafety community with implementation of FAIR to maximize
    data-driven safe and sustainable application of nano- and advanced materials.
    Graphical Abstract Download : Download high-res image (163KB) Download : Download
    full-size image Previous article in issue Next article in issue Keywords FAIR
    principlesData reuseNanosafetyNanomaterialsAdvanced materials A FAIR implementation
    network for nanosafety data Nanoscience has a key role in the achievement of green
    and sustainable policy goals, in the EU and globally [1], [2], [3]. The possibility
    of producing tailor-made nanomaterials (NMs) with exceptional characteristics
    promises significant contributions to societally relevant innovations. Today,
    NMs already have a broad range of applications in green technology, food safety,
    medicine, cosmetics, agriculture, etc. [1], [2], [3]. Progress in the field, towards
    increasingly advanced materials (AdMa, as described recently [3], [4], [5]), depends
    on the analysis and modelling of large experimental and/or computational (simulated)
    datasets which predict the NMs’ functionalities, behaviors and effects in complex
    environments [6]. Prediction of the potential release of NMs from products, their
    fate (in humans and the environment) and hazard will support innovation by facilitating
    safety and sustainability assessment, in line with the recently proposed Safe
    and Sustainable by Design (SSbD) framework [7], [8] (see also details in [9],
    [4]). In SSbD approaches, comprehensive evaluations of data originating from the
    wide-ranging field of nanosafety research is essential. The need for data sharing
    in a harmonized and quality-controlled way has been identified as a prerequisite
    to optimize the efficiency of the innovation process and is under continuous refinement
    [10], [11], [12], [13], [14]. While facilitating the gathering of nanosafety data,
    the data-sharing field remains far from perfected for efficient reuse of the massive
    amounts of data produced over the past decades [15], [16]. Available data is scattered
    over different databases/sources and structured using different standards (or
    without standards) hampering both its reuse and large-scale machine-driven analyses
    [14], [17]. Moreover, many data providers are not fully aware of the need and
    the possibilities to enable data for reuse. Data reuse is stimulated by application
    of the FAIR (Findable, Accessible, Interoperable and Reusable) principles [18].
    These principles are generic by character and aimed to be applicable to largely
    any type of data for the overarching purpose of enabling both humans and machines
    to reuse data in efficient manners. How to apply these broad principles to data
    generated within a specific scientific area (e.g., what metadata are relevant
    for nanosafety data?) is up to the respective scientific community and requires
    extensive communication and collaboration in order to effectively implement the
    principles. The GO FAIR initiative1 provides support to scientific communities
    and offers an open and inclusive FAIR data ecosystem for individuals, institutions
    and organizations to work together within implementation networks [19], [20].
    For this purpose, i.e. the management of nanosafety data, the AdvancedNano GO
    FAIR Implementation Network2 (IN) was created. The overarching aim of the AdvancedNano
    IN is to promote data-driven innovation in nanoscience. This aim should be coupled
    to ensuring protection of human health and the environment via machine-enabled
    reuse of existing safety data in support of overcoming the 21st century toxicology-derived
    challenge “too many chemicals [and materials], too little data” [21], [22]. Collaborative
    actions are needed for structuring nanosafety data in such a way that machines
    can work with them (i.e. machine-actionable) and, thus, the network aims to identify
    key partners for data governance, to engage relevant stakeholder groups, and to
    provide cross-domain solutions for implementing the FAIR principles among the
    diverse nanosafety research fields. In parallel with the establishment of the
    AdvancedNano IN, a manifesto was published to describe the concerted action needed
    to implement the above task [23]. Here we build further on the implementation
    principles and objectives presented in the AdvancedNano IN manifesto. While we
    acknowledge that the efforts towards FAIRification of data relate to a wide number
    of important aspects and challenges as described in the original paper and by
    others [10], [18], the focus in this Opinion lies in outlining the role and action
    plan of the network, as well as providing an overview of the impact expected from
    this initiative. Challenges for FAIR implementation and the role of the AdvancedNano
    IN Despite the advances made within nanosafety data management over the past years,
    several challenges for the implementation of the FAIR principles have recently
    been identified and described both within and beyond the nanoscience community
    [6], [14], [24]. They can be summarized as lack of (a) awareness, (b) harmonization,
    (c) tools for FAIRification, and (d) overarching infrastructures to support the
    addressing of these challenges adequately. Additionally, a lack of incentives
    and funding for data FAIRification is recurrently reported by data producers and
    has been identified as a further challenge. Thus, the role of the AdvancedNano
    IN is to provide support towards overcoming these challenges as follows: People
    The AdvancedNano IN aims to raise awareness, propose incentives, and support education
    of researchers, regulators and industry. In addition, it aims at providing guiding
    principles to bring about cultural change and allow for the development of data
    standards and governance strategies within nanoscience. The AdvancedNano IN manifesto
    [23] provides an overview of 10 initial implementation principles for creating
    a FAIR culture within the field. These principles, which cover aspects such as
    (i) data owners’ control over their data, (ii) reusability of both data and code
    (FAIR models/tools), (iii) machine-readability, (iv) data standards, (v) governance,
    and (vi) promotion of the developed solutions, align tightly with the guiding
    principles recently proposed by the European Commission in their data governance
    and data policies strategy [25]. Further aspects to be considered within the AdvancedNano
    IN include: (vii) sustainability of the solutions, (viii) measurability of the
    progress of FAIRification, (ix) embedded solutions supporting data governance
    that minimize additional administrative burden, and (x) a “comply-or-explain”
    principle entailing a recommendation that FAIR principles should be implemented
    as far (and as soon) as possible, or else provide a justification for why this
    had not been done. Thus, the role of the AdvancedNano IN is to offer FAIR guidance
    specific to the nanosafety domain, building on the solutions already in place
    or in development as outlined briefly below. The AdvancedNano IN will take an
    active role in establishing a set of domain-specific implementation principles
    and engage and collaborate with all stakeholders identified to date, including
    data generators, database developers, data(base) users in different environments,
    such as industry, academia, and regulatory bodies. The AdvancedNano IN is committed
    to engage publishers and journal editors, as well as funding and governance agencies
    to increase awareness of the advantages of the FAIRification process for data
    reuse. Harmonization In order to harmonize FAIRification endeavors and allow for
    interoperability, the use of standards is necessary throughout the lifecycle of
    data reuse. The role of the AdvancedNano IN is to facilitate international initiatives
    for metadata capture (e.g. reporting standards, so that data providers report
    the data in harmonized manners), terminology (e.g. ontology standards to make
    sure interpretation of (meta)data is unambiguous), representation (e.g. identifier
    standards to ensure unambiguous identification of materials), data retrieval (e.g.
    application programming interface (API) standards to allow for interoperability),
    format standards (e.g. file types and structure) and modelling (including software
    and model reporting standards). The AdvancedNano IN aims to engage with a wide
    range of key organizations and initiatives relating to nanoscience and beyond
    (see Table 1). Table 1. Key organizations and initiatives engaged by AdvancedNano
    IN and its outreach. Organization or Initiative Acronyms Extent of outreach Organization
    for Economic Cooperation and Development Working Party for Manufactured Nanomaterials
    OECD WPMNa OECD member statesb US-EU Communities of Research on NMs Environmental
    Health and Safety US-EU CoRs nanoEHSc Europe, US Partnership for the Assessment
    of Risks from Chemicals PARCd Europe (200 partners in 28 countries, national agencies
    and research organizations, ECHA, EFSA, EEA) International Network Initiative
    on Safe and Sustainable nanotechnology INISS-nanoe Europe, Asia The WorldFAIR
    Project WorldFAIRf Europe, Kenya, Australia, Latin America EU Nanosafety Cluster
    EU Nanosafety Clusterg Europe EU Observatory for Nanomaterials EUONh Europe European
    Life Science Infrastructure – Toxicology Community[22] ELIXIRi Europe International
    Hub for sustainable High-Tech Innovation NanoFabNet Hubj Europe, (i.e. EEA), UK,
    US, Japan European projects Horizon Europe frameworkk Europe (incl. Associated
    Countries, UK, EEA) and third countriesl International ecosystem for accelerating
    the transition to Safe-and-Sustainable-by-design materials, products and processes
    IRISSm Europe International Network For Researching, Advancing, and Assessing
    Materials for Environmental Sustainability INFRAMESn US, Europe, West Africa IUPAC
    Working group on Extension of InChI to Nanomaterials IUPAC° Europe, US (plus experts
    from Brazil, Mexico, Australia, China, Japan, South Korea, South Africa and more)
    European Materials Modelling Council and European Materials Characterization Council
    EMMCp and EMCCq Europe Advanced Materials 2030 Initiative AMI2030r Europe a www.oecd.org/chemicalsafety/nanosafety/testing-programme-manufactured-nanomaterials.htm
    b https://www.oecd.org/about/members-and-partners/ c www.niehs.nih.gov/research/supported/exposure/nanohealth/index.cfm
    d https://www.eu-parc.eu e zenodo.org/record/5004929 f worldfair-project.eu g
    www.nanosafetycluster.eu h euon.echa.europa.eu i https://elixir-europe.org/communities/toxicology
    j www.nanofabnet.net k research-and-innovation.ec.europa.eu l https://ec.europa.eu/info/funding-tenders/opportunities/docs/2021–2027/common/guidance/list-3rd-country-participation_horizon-euratom_en.pdf
    m www.ivl.se/english/ivl/press/press-releases/2022–06–28-major-eu-initiative-launched-to-accelerate-the-transition-to-safe-and-sustainable-materials-products-and-processes.html
    n https://inframes.pratt.duke.edu/ o https://iupac.org/project/2022–001–2–800/
    p https://emmc.eu/ q http://characterisation.eu/ r https://www.ami2030.eu/ Tools
    The AdvancedNano IN will support the development of tools for FAIRification of
    nanosafety data, including data handling strategies, approaches for implementation
    of training/education, FAIR assessment tools, data models and repositories, electronic
    laboratory notebooks, data reporting/capture templates, ontology/semantic mapping,
    generation of machine-ready datasets, metadata generators, and more. Examples
    of tools currently in development and supported by this action include databases
    providing searchable interfaces [14], [26], [27], systems and data access architectures
    to support optimal data management across multiple data sources and the entire
    life cycle of NMs, strategies for generating global unique identifiers and machine-readable
    structural representation approaches for NMs (e.g. the InChI for nano) [28], [29],
    [30], and data-driven approaches and methodologies for SSbD approaches [31], [32].
    Infrastructure The AdvancedNano IN provides a basis for the continued development
    of digital infrastructures for the implementation of the FAIR principles within
    the nanosafety field. This effort also includes engagement exercises with other
    GO FAIR Foundation initiatives to implement suitable standards and tools, including
    for example the GO FAIR Chemistry3 Implementation Network. The AdvancedNano IN
    will collect and adopt other project experiences and principles to continuously
    monitor, refine and improve the development of a FAIR data-driven nanosafety infrastructure.
    The AdvancedNano IN action plan The AdvancedNano IN action plan builds on the
    data governance and policy strategies outlined by the European Commission [25].
    The AdvancedNano IN will primarily support three main action categories as depicted
    in Fig. 1; 1) Definition and set-up, where domain-specific descriptions of FAIR
    implementation principles are developed under the aim of creating general and
    specific FAIR Implementation Profiles (FIPs), which specify data and software
    technically fit for the nanosafety community and its down-stream research and
    innovation fields. This first action category also covers endeavors to install
    monitoring strategies to measure the progress of FAIRification within the field
    and its continuous refinement; 2) Implementation, where new solutions, methods
    and tools are employed and endorsed as FAIR Enabling Resources (FERs) within and
    beyond the nanosafety community e.g., through the development of case studies
    for monitoring-, refinement- and improvement-solutions. This second action category
    also involves identification of gaps in category 1-related solutions; and finally,
    3) Roll-out and operation, where principles, solutions and tools are embedded
    in practice through several widespread communication, training and education initiatives.
    In parallel, the third action category includes iterative monitoring, refinement
    and improvement work for generating feedback to action categories 1 and 2. Download
    : Download high-res image (236KB) Download : Download full-size image Fig. 1.
    The AdvancedNano IN action plan foresees three main action categories at the center
    of the identified FAIRification challenges, i.e. people’s awareness, harmonization,
    tools, and infrastructure, and involves monitoring strategies enabling refinement
    and further improvement of the FAIRification process. All three categories of
    action relate to activities relating to the previously outlined support to people,
    harmonization, tools development and infrastructure establishment. An example
    is support for data providers, including the development and dissemination of
    tutorials with practical examples (e.g., data search and download; data upload
    via templates), and implementation of (meta)data standards at the stage of data
    production, which is crucial and couples to identifying obstacles to FAIRification
    solutions. In relation to these aspects, the education of individuals, such as
    data stewards who specialize in data management, is seen as a means to support
    the implementation of FAIR principles and the utilization of existing tools for
    making data FAIR [10], [25]. The AdvancedNano IN will support improved use of
    existing solutions for FAIR implementation within nanosafety research data workflows
    as a part of standard practice in the field. Another important activity in support
    of data producers includes reaching out to scientific journals to implement guiding
    principles and harmonize FAIRification requirements across the field beyond just
    indexing of publications. Such activities have proven central to other fields
    of data-rich research, such as omics and bioinformatics [33], [34], [35], [36].
    Other types of activities in support of data science/use, as well as other related
    INs, include dissemination activities, liaising with relevant projects and initiatives,
    and organizing webinars, workshops and training schools. For example, as part
    of its mission, the GO FAIR Initiative hosts collaborative workshops among stakeholders
    of INs. Furthermore, the AdvancedNano IN aims to organize or contribute to yearly
    events such as the NanoSafety Cluster’s activities,4 the Nanosafety Training School,5
    and other nano-events and –conferences. Moreover, educational resources focused
    on materials and toxicology can be made available for use in academic curricula.
    Examples include dissemination of “open educational resources” such as the ELIXIR
    FAIR Cookbook [37] and the NanoCommons User Guidance Handbook.6 Impact of the
    AdvancedNano IN The AdvancedNano IN will raise awareness of the value of reusable
    NMs (safety) data, highlighting the far-reaching impact within the nanosafety
    community and beyond, and advocating much-needed transparency of safety information.
    Overall, the AdvancedNano IN aims to drive the necessary cultural change and bridge
    the gap between available tools/infrastructures and stakeholders to embed FAIR
    workflows into everyday research practice in the nanosafety community. The network
    is expected to have a broad impact on the shift towards machine-driven reuse of
    nanosafety data in line with the recently coined complementary and forward-looking
    interpretation of the FAIR acronym; “Findable and AI-Ready” data [6], where AI
    refers to artificial intelligence. The advantages of data reuse will be demonstrated
    in the AdvancedNano IN through directed case studies to predict the potential
    hazards of NMs with specific characteristics in specific application areas. The
    activities of the AdvancedNano IN are expected to contribute to novel risk assessment
    approaches involving New Approach Methodologies (NAMs) [32] and Integrated Approaches
    for Testing and Assessment (IATAs) [38], while being better aligned with innovation
    processes such as SSbD [8]. Data reuse is essential for the identification of
    data gaps [18] and for the development and application of relevant NAMs and IATAs
    in order to minimize uncertainties [38]. In addition, SSbD strongly benefits from
    data reuse at early stages of innovation where costly toxicity testing is rarely
    possible and initial data-driven modelling and screening of hazard-alerts becomes
    crucial [32], [39]. Furthermore, SSbD aims for fully transparent processes throughout
    the whole life cycle of the assessed materials (NMs or AdMa) and thus requires
    implementation of FAIR criteria. While FAIR does not directly address data quality,
    rich metadata accompanying datasets can include detailed description of the quality
    assurance/quality control procedures. Through collaboration with other key initiatives,
    as outlined throughout the text, the AdvancedNano IN will aim to raise awareness
    of the need for funding to become self-sustained and support the action plan of
    the EU CSS [40] (e.g. the “One substance, one assessment” approach especially
    regarding the common open data platform that aims to facilitate access to, sharing,
    and re-use of information), paving the way for the \"zero pollution\" ambition
    announced in the European Green Deal [41]. Notably, interaction with the PARC
    initiative [42] is of particular relevance because its data libraries are built
    on the results of the review ‘Feasibility Study on a Common Open Platform on Chemical
    Safety Data’ [43]. Overall, the AdvancedNano IN aligns with the data governance
    policies outlined by the European Commission [25] and aims to boost the impact
    of the nanosafety community by clearly defining roles and responsibilities, and
    introducing FAIR implementation principles and practices. The network is committed
    to transforming nanosafety into a data-driven field of research enabled by an
    effective data ecosystem supporting improved transparency and efficiency in regulatory
    risk assessments of NMs, AdMa and their associated products. CRediT authorship
    contribution statement Verónica I. Dumit: Conceptualization, Investigation, Writing-
    Original draft preparation, Writing- Reviewing and Editing. Ammar Ammar: Writing-
    Reviewing and Editing. Martine I. Bakker: Resources, Supervision, Conceptualization,
    Writing- Reviewing and Editing. Miguel A. Bañares: Reviewing and Editing. Cecilia
    Bossa: Resources, Writing- Reviewing and Editing. Anna Costa: Writing- Reviewing
    and Editing. Hilary Cowie: Writing- Reviewing and Editing. Damjana Drobne: Resources,
    Conceptualization, Writing- Reviewing and Editing. Thomas E. Exner: Resources,
    Supervision, Conceptualization, Writing- Reviewing and Editing. Lucian Farcal:
    Resources, Writing- Reviewing and Editing. Steffi Friedrichs: Supervision, Writing-
    Reviewing and Editing.Irini Furxhi: Writing- Reviewing and Editing. Roland Grafström:
    Supervision, Writing- Reviewing and Editing. Andrea Haase: Supervision, Writing-
    Reviewing and Editing. Martin Himly: Visualization, Writing- Reviewing and Editing.
    Nina Jeliazkova: Investigation, Writing- Reviewing and Editing. Iseult Lynch:
    Resources, Supervision, Writing- Reviewing and Editing. Dieter Maier: Reviewing.
    Cornelle W. Noorlander: Resources, Writing- Reviewing and Editing. Hyun Kil Shin:
    Reviewing. Galo J. A. A. Soler-Illia: Reviewing. Blanca Suarez-Merino: Writing-
    Reviewing and Editing. Egon Willighagen: Resources, Conceptualization, Supervision,
    Writing- Reviewing and Editing. Penny Nymark: Investigation, Conceptualization,
    Writing- Original draft preparation, Writing- Reviewing and Editing. Declaration
    of Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgements Funding from the European Commission
    via the following projects is greatly appreciated: Gov4Nano (Grant agreement No.
    814401; Co-authors: VID, MB, CB, LF, SF, AH, NJ, BS-M, CWN, PN, RG), NanoCommons
    (Grant agreement No. 731032; Co-authors: VID, AA, TE, AH, MH, IL, DM, EW), RiskGONE
    (Grant agreement No. 814425; Co-authors: AA, NJ, IL, EW), ASINA (Grant agreement
    No. 862444; Co-authors: AC, IF), NanoFabNet (Grant agreement No. 886171; Co-author:
    SF), NANORIGO (Grant agreement No. 814530; Co-authors: MB, DD, MH), NanoSolveIT
    (Grant agreement No. 814572; Co-authors: AA, EW, RG), WorldFAIR (Grant agreement
    No. 101058393; Coauthors: TE, IL), PlasticFatE (Grant agreement No. 965367; Co-author
    DD), POLYRISK (Grant agreement No. 964766; Co-authors NJ, AH) NOVA (Grant agreement
    No. 101058554; Co-author DD), HARMLESS (Grant agreement No. 953183; Co-authors
    RG, PN, AH), and PARC (Grant Agreement No. 101057014), and co-funding for the
    UK contribution to PARC via Innovate UK project ID 1752317 as part of the Horizon
    Europe Guarantee fund. In addition, national funding is acknowledged, including
    from the Swedish Fund for Research without Animals (Grant No. F2021-0005; Co-author
    PN) and from the Austrian Research Promotion Agency’s Production for the Future
    program (SmartCERIALS, Grant No. 890610; Co-author MH). References [1] L. Farcal,
    A. Munoz Pineiro, J. Riego Sintes, H. Rauscher, K. Rasmussen Advanced materials
    foresight: research and innovation indicators related to advanced and smart nanomaterials
    F1000Research, 11 (2022), p. 1532, 10.12688/f1000research.127810.1 View in ScopusGoogle
    Scholar [2] I. Furxhi, et al. Status, implications and challenges of European
    safe and sustainable by design paradigms applicable to nanomaterials and advanced
    materials RSC Sustain., 1 (2023), pp. 234-250 View articleCrossRefView in ScopusGoogle
    Scholar [3] M. Li, et al. Nano-enabled strategies to enhance biological nitrogen
    fixation Nat. Nanotechnol. (2023), pp. 1-4 Google Scholar [4] OECD. OECD Environment,
    Health and Safety Publications Series on the Safety of Manufactured Nanomaterials
    No. 105. Available at: 〈https://www.oecd.org/env/ehs/nanosafety/publications-series-safety-manufactured-nanomaterials.htm〉
    (2022). Google Scholar [5] D. Drobne, et al. Knowledge, information, and data
    readiness levels (KaRLs) for risk assessment, communication, and governance of
    nano‐, new, and other advanced materials Glob. Chall. (2023), Article 2200211
    View in ScopusGoogle Scholar [6] M. Scheffler, et al. FAIR data enabling new horizons
    for materials research Nature, 604 (2022), pp. 635-642, 10.1038/s41586-022-04501-x
    View in ScopusGoogle Scholar [7] European Commission, et al. Safe and sustainable
    by design chemicals and materials - Framework for the definition of criteria and
    evaluation procedure for chemicals and materials. EUR 31100 EN (Available at)
    Publ. Off. Eur. Union (2022), 10.2760/404991 (Available at) 〈https://publications.jrc.ec.europa.eu/repository/handle/JRC128591〉
    Google Scholar [8] European Commission, et al. Safe and Sustainable by Design
    chemicals and materials Review of safety and sustainability dimensions, aspects,
    methods, indicators, and tools Publ. Off. Eur. Union, JRC127109 (2022) Google
    Scholar [9] OECD. OECD Environment, Health and Safety Publications Series on the
    Safety of Manufactured Nanomaterials No. 104. Available at: 〈https://www.oecd.org/env/ehs/nanosafety/publications-series-safety-manufactured-nanomaterials.htm〉
    (2022). Google Scholar [10] A.G. Papadiamantis, et al. Metadata stewardship in
    nanosafety research: community-driven organisation of metadata schemas to support
    FAIR nanoscience data Nanomaterials, 10 (2020), p. 2033 CrossRefGoogle Scholar
    [11] C.O. Hendren, C.M. Powers, M.D. Hoover, S.L. Harper The Nanomaterial Data
    Curation Initiative: A collaborative approach to assessing, evaluating, and advancing
    the state of the field Beilstein J. Nanotechnol., 6 (2015), pp. 1752-1762, 10.3762/bjnano.6.179
    View in ScopusGoogle Scholar [12] R.L. Marchese Robinson, et al. How should the
    completeness and quality of curated nanomaterial data be evaluated? Nanoscale,
    8 (2016), pp. 9919-9943, 10.1039/C5NR08944A View in ScopusGoogle Scholar [13]
    C.M. Powers, et al. Nanocuration workflows: Establishing best practices for identifying,
    inputting, and sharing data to inform decisions on nanomaterials Beilstein J.
    Nanotechnol., 6 (2015), pp. 1860-1871, 10.3762/bjnano.6.189 View in ScopusGoogle
    Scholar [14] N. Jeliazkova, et al. Towards FAIR nanosafety data Nat. Nanotechnol.,
    16 (2021), pp. 644-654, 10.1038/s41565-021-00911-6 View in ScopusGoogle Scholar
    [15] A. Ammar, et al. A Semi-Automated Workflow for FAIR Maturity Indicators in
    the Life Sciences Nanomaterials, 10 (2020), p. 2068, 10.3390/nano10102068 Google
    Scholar [16] N.A. Krans, et al. FAIR assessment tools: evaluating use and performance
    NanoImpact, 27 (2022), Article 100402, 10.1016/j.impact.2022.100402 View PDFView
    articleView in ScopusGoogle Scholar [17] S. Karcher, et al. Integration among
    databases and data sets to support productive nanotechnology: Challenges and recommendations
    NanoImpact, 9 (2018), pp. 85-101, 10.1016/j.impact.2017.11.002 View PDFView articleView
    in ScopusGoogle Scholar [18] M.D. Wilkinson, et al. The FAIR Guiding Principles
    for scientific data management and stewardship Sci. Data, 3 (2016), Article 160018,
    10.1038/sdata.2016.18 View in ScopusGoogle Scholar [19] Jacobsen, A. et al. FAIR
    principles: interpretations and implementation considerations. 2, 10–29 Available
    2020). Google Scholar [20] E. Schultes The FAIR hourglass: A framework for FAIR
    implementation Fair Connect, 1 (2023), pp. 13-17 CrossRefGoogle Scholar [21] R.S.
    Thomas, et al. The next generation blueprint of computational toxicology at the
    U.S. environmental protection agency Toxicol. Sci., 169 (2019), pp. 317-332, 10.1093/toxsci/kfz058
    View in ScopusGoogle Scholar [22] M. Martens, et al. ELIXIR and Toxicology: a
    community in development F1000Research, 10 (2021), p. 1129 CrossRefGoogle Scholar
    [23] GO FAIR. Manifesto of the AdvancedNano GO FAIR Implementation Network. (2020).
    Google Scholar [24] Khodiyar, V. et al. Research Data: The Future of FAIR White
    paper. doi:〈10.6084/m9.figshare.14393552.v1〉 (2021). Google Scholar [25] European
    Commission. Data governance and data policies. Available at: 〈https://commission.europa.eu/publications/data-governance-and-data-policies-european-commission_en〉
    (2020). Google Scholar [26] J. Hastings, et al. eNanoMapper: harnessing ontologies
    to enable data integration for nanomaterial risk assessment J. Biomed. Semant.,
    6 (2015), p. 10, 10.1186/s13326-015-0005-5 View in ScopusGoogle Scholar [27] N.
    Jeliazkova, et al. The eNanoMapper database for nanomaterial safety information
    Beilstein J. Nanotechnol., 6 (2015), pp. 1609-1634, 10.3762/bjnano.6.165 View
    in ScopusGoogle Scholar [28] I. Lynch, et al. Can an InChI for Nano Address the
    Need for a Simplified Representation of Complex Nanomaterials across Experimental
    and Nanoinformatics Studies Nanomaterials, 10 (2020), p. 2493, 10.3390/nano10122493
    Google Scholar [29] J. van Rijn, et al. European Registry of Materials: global,
    unique identifiers for (undisclosed) nanomaterials J. Chemin., 14 (2022), p. 57,
    10.1186/s13321-022-00614-7 View in ScopusGoogle Scholar [30] K. Blekos, K. Chairetakis,
    I. Lynch, E. Marcoulaki Principles and requirements for nanomaterial representations
    to facilitate machine processing and cooperation with nanoinformatics tools J.
    Chemin.-., 15 (2023), p. 44 View in ScopusGoogle Scholar [31] I. Furxhi, et al.
    ASINA project: towards a methodological data-driven sustainable and safe-by-design
    approach for the development of nanomaterials Front. Bioeng. Biotechnol., 9 (2022),
    10.3389/fbioe.2021.805096 Google Scholar [32] P. Nymark, et al. Toward rigorous
    materials production: new approach methodologies have extensive potential to improve
    current safety assessment practices Small, 16 (2020), Article 1904749, 10.1002/smll.201904749
    View in ScopusGoogle Scholar [33] Making nano data FAIR enough. Nature Nanotechnology
    16, 607–607, doi:10.1038/s41565–021-00935-y (2021). Google Scholar [34] A. Brazma,
    et al. Minimum information about a microarray experiment (MIAME)—toward standards
    for microarray data Nat. Genet., 29 (2001), pp. 365-371, 10.1038/ng1201-365 View
    in ScopusGoogle Scholar [35] J. Rung, A. Brazma Reuse of public genome-wide gene
    expression data Nat. Rev. Genet., 14 (2013), pp. 89-99, 10.1038/nrg3394 Google
    Scholar [36] R. Grafström, A. Haase, P. Kohonen, N. Jeliazkova, P. Nymark Reply
    to: Prospects and challenges for FAIR toxicogenomics data Nat. Nanotechnol., 17
    (2022), pp. 19-20, 10.1038/s41565-021-01050-8 View in ScopusGoogle Scholar [37]
    P. Rocca-Serra, et al. The FAIR Cookbook-the essential resource for and by FAIR
    doers Sci. Data, 10 (2023), p. 292 View in ScopusGoogle Scholar [38] L.G. Powell,
    et al. Developing Integrated Approaches for Testing and Assessment (IATAs) in
    order to support nanomaterial safety Nanotoxicology, 16 (2022), pp. 484-499, 10.1080/17435390.2022.2103470
    Google Scholar [39] L.G. Soeteman-Hernandez, et al. Safe innovation approach:
    Towards an agile system for dealing with innovations Mater. Today Commun., 20
    (2019), Article 100548, 10.1016/j.mtcomm.2019.100548 View PDFView articleView
    in ScopusGoogle Scholar [40] European Commission. Communication from the Commission
    to the European Parliament, the Council, the European Economic and Social Committee
    and The Committee of the Regions - Chemicals Strategy for Sustainability - Towards
    a Toxic-Free Environment COM(2020) 667 final. Available at: 〈https://ec.europa.eu/environment/pdf/chemicals/2020/10/Strategy.pdf〉
    (2020). Google Scholar [41] European Commission. Communication from the Commission
    to the European Parliament, the European Council, the Council, the European Economic
    and Social Committee and The Committee of the Regions - The European Green Deal
    COM/2019/640 final. Available at: 〈https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:52019DC0640〉
    (2019). Google Scholar [42] P. Marx-Stoelting, et al. A walk in the PARC: developing
    and implementing 21st century chemical risk assessment in Europe Arch. Toxicol.
    (2023), pp. 1-16 Google Scholar [43] European Commision. Feasibility study on
    a common open platform on chemical safety data. Available at: 〈https://op.europa.eu/de/publication-detail/-/publication/0af584f7–79a5–11ec-9136–01aa75ed71a1/language-en〉
    (2022). Google Scholar Cited by (5) Design rules applied to silver nanoparticles
    synthesis: A practical example of machine learning application. 2024, Computational
    and Structural Biotechnology Journal Show abstract Chemical Species Ontology for
    Data Integration and Knowledge Discovery 2023, Journal of Chemical Information
    and Modeling Catalytic Clues for Nanotoxicity: Grouping, Dose-Metrics and Hazard
    Assessment Based on Number, Nature and Reactivity of Nanomaterials’ Surface Sites
    2023, SSRN Harmonising knowledge for safer materials via the “NanoCommons” Knowledge
    Base 2023, Frontiers in Physics Metadata stewardship in nanosafety research: learning
    from the past, preparing for an “on-the-fly” FAIR future 2023, Frontiers in Physics
    1 www.go-fair.org 2 www.go-fair.org/implementation-networks/overview/advancednano/
    3 www.go-fair.org/implementation-networks/overview/implementation-networks-archive/chemistryin/
    4 www.nanocommons.eu/nano-week-and-nanocommons-final-conference/nanoweek-2022-cyprus/
    5 www.nanosafetycluster.eu/nanosafety-training-school-from-basic-science-to-risk-governance/
    6 nanocommons.github.io/user-handbook/ View Abstract © 2023 Elsevier Ltd. All
    rights reserved. Recommended articles A non-drug chemotherapy-like synergizes
    with gas-/immunotherapy based on cancer cell membrane camouflage-functionalized
    nanoplatform Nano Today, Volume 51, 2023, Article 101912 Zebin Yang, …, Hangrong
    Chen View PDF Gemini nanoparticles-based quadruple therapy (GNQT) achieved effective
    tumor immunotherapy by comprehensive regulation of tumor microenvironment Nano
    Today, Volume 51, 2023, Article 101915 Xiaoya Guo, …, Huayu Tian View PDF CO enhances
    agomir transfection under pathological conditions to inhibit MMP overexpression
    Nano Today, Volume 51, 2023, Article 101898 Xin Jin, …, Wei Wang View PDF Show
    3 more articles Article Metrics Citations Citation Indexes: 3 Captures Readers:
    12 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Nano Today
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: From principles to reality. FAIR implementation in the nanosafety community
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Khatoon P.S.
  - Ahmed M.
  citation_count: '0'
  description: In recent years, the usage and applications of Internet of Things (IoT)
    have increased exponentially. IoT connects multiple heterogeneous devices like
    sensors, micro controllers, actuators, smart devices like mobiles, watches, etc.
    IoT contributes the data produced in the context of data collection, including
    the domains like military, agriculture, healthcare, etc. The diversity of possible
    applications at the intersection of the IoT and the web semantics has prompted
    many research teams to work at the interface between these two disciplines. This
    makes it possible to collect data and control various objects in transparent way.
    The challenge lies in the use of this data. Ontologies address this challenge
    to meet specific data needs in the IoT field. This paper presents the implementation
    of a dynamic agriculture ontology-building tool that parses the ontology files
    to extract full data and update it based on the user needs. The technology is
    used to create the angular library for parsing the OWL files. The proposed ontology
    framework would accept user-defined ontologies and provide an interface for an
    online updating of the owl files to ensure the interoperability in the agriculture
    IoT.
  doi: 10.1002/dac.5516
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register International Journal of Communication Systems RESEARCH ARTICLE Full
    Access Design and development of dynamic Agri-ontology for IoT interoperability
    P Salma Khatoon,  Muqeem Ahmed First published: 12 May 2023 https://doi.org/10.1002/dac.5516
    SECTIONS PDF TOOLS SHARE Summary In recent years, the usage and applications of
    Internet of Things (IoT) have increased exponentially. IoT connects multiple heterogeneous
    devices like sensors, micro controllers, actuators, smart devices like mobiles,
    watches, etc. IoT contributes the data produced in the context of data collection,
    including the domains like military, agriculture, healthcare, etc. The diversity
    of possible applications at the intersection of the IoT and the web semantics
    has prompted many research teams to work at the interface between these two disciplines.
    This makes it possible to collect data and control various objects in transparent
    way. The challenge lies in the use of this data. Ontologies address this challenge
    to meet specific data needs in the IoT field. This paper presents the implementation
    of a dynamic agriculture ontology-building tool that parses the ontology files
    to extract full data and update it based on the user needs. The technology is
    used to create the angular library for parsing the OWL files. The proposed ontology
    framework would accept user-defined ontologies and provide an interface for an
    online updating of the owl files to ensure the interoperability in the agriculture
    IoT. 1 INTRODUCTION In recent years, the Internet of Things has grown at an exceptional
    speed, connecting many heterogeneous objects (sensors, actuators, smartphones,
    applications, etc.). IoT contributes significantly to data production in the context
    of Big Data. Some estimates project the existence of more than 30 billion connected
    IoT devices on the horizon 2022. One of the main concepts of the Internet of Things
    is Machine-to-Machine (M2M) [1]. M2M is an association of hardware and communication
    technologies among machines, to provide them with the means to interact without
    human intervention. Therefore, the fields of applications are very broad: energy
    management, agriculture, home automation, medical diagnostic aid, living comfort,
    etc. The demand for IoT-based smart applications is increasing drastically especially
    in the field of agriculture [2]. M2M communication has suffered from a vertical
    fragmentation of the approaches adopted to cover the needs of different fields
    of application. To resolve this problem, the European Telecommunications Standards
    Institute (ETSI) developed in 2012, set a standard specification for M2M service
    platform [3]. This makes it possible to collect data and transparently control
    various objects. The challenge now lies in the use of this data. The best approach
    seems to associate semantics with this data through ontologies to facilitate their
    reuse and allow the implementation of interoperability. 1.1 Application axes of
    the semantic web in IoT The first contribution of the semantic web to IoT is in
    the transformation of data collected by objects. Semantized, this data can take
    the status of useful information. Once put back in a global context and interpreted,
    this information can be transformed into knowledge. From data to information,
    the first transformation consists of annotations and linking with ontologies.
    This enrichment can be done at different stages of the data''s life cycle: at
    creation, before, or after storage. With this addition of metadata, the data is
    no longer specific to the application having them. Integrating this information
    into the web of linked data is an essential aspect of the place of the semantic
    web in the IoT [4]. The current scenario is a paradigm close to Big Data: data
    is certainly collected for the purpose of an application, but once enriched, they
    acquire an intrinsic value that makes them usable in contexts not considered a
    priori. Finally, once semantized, the information generated by the object network
    can be processed. 1.2 Service-oriented axis The description of objects as services
    supports interoperability [5]. If all manufacturers offered an API for their objects,
    it is obvious that APIs have disparities even for comparable objects. To counter
    this difficulty, one solution is to extract the service interface by semantizing
    it, which does not allow access to functions by the name but by the description
    carrying meaning. Therefore, the services could be interpreted automatically and
    could be considered as discovering them “on the spot” without having specified
    them a priori, without even having to take into account the model or the brand
    of the object implementing them. This approach makes it possible to consider the
    decorrelation between the applications. In addition, approaching a network of
    connected objects as a set of services allows the integrating physical objects
    (implementing services) and virtual entities, pure web services. The notion of
    virtual object can then make its appearance. In this case, the role of ontologies
    is to describe the network of sensors itself rather than the observed phenomenon.
    The description of the sensors can be associated with the description of the data,
    to address the issue of provenance by linking data to the sensor from which it
    comes, with its location, precision, etc. [6]. The changing nature of networks
    of connected objects also poses a problem: so that the System description remains
    correct over time, it must be dynamic. Indeed, objects are caused to be in motion,
    and the network as a whole is not static: adding or removing objects, moving within
    the network, etc. The question of dynamism goes hand in hand with automatic configuration.
    Indeed, it is often proved that adding or removing objects from an existing network
    requires little intervention on the part of a human operator, and above all that
    it does not require a reconfiguration manual of the entire network. The integration
    by the manufacturers of an electronic describing the object inside it may allow
    the discovery of the sensor by the network is automated. This particular area
    application is strongly linked to automatic alignment motors, as it is difficult
    to possible that all manufacturers agree on a representation model unique. However,
    fairly fine alignment tools could help bridge the gap between ontology embedded
    by the sensor and that used by the system to which it is connected, facilitating
    interoperability between heterogeneous objects. Conversely, objects consuming
    services defects can also benefit from the description of the system to discover
    the other objects and any providers of the services they are looking for: automatic
    configuration would have then two aspects, and would be done both on the system
    side and on the object side. 1.3 Fundamental uses of semantics in IoT Among the
    three axes previously described, we identify common elements, which are the fundamental
    contributions of semantics to IoT. Interoperability: The creation of information
    from data is intended to pre interoperability. The proposed knowledge representation
    formalisms by the W3C within the framework of the semantic web plays in the IoT
    a role of mask of the heterogeneity, by proposing an abstraction rich in the meaning
    of the specific implementation underlying [7]. The unambiguous representation
    of resources through different training systems also makes it possible to operate
    all the systems based on comparable but in different formats. The work on alignment
    is also intended to enable the understanding of mutual union between semantic
    systems based on different ontologies. Integration: Semantizing data makes it
    possible to consider the integration of data heterogenic within the same structure,
    the web of linked data, and allow transparent access. Each application can then
    rely on the data collected for its specific purpose, but also on data collected
    in other contexts [8]. This approach can lead, for example, to the creation of
    “mashups”, services whose purpose is specifically to integrate already existing
    data and services in order to synthesize them in one. This is not possible by
    leaving the closed model or only the manufacturers can integrate the data to the
    application without going through a state where the information is made available.
    Interpretation: The creation of knowledge can have two sources: either the delivery
    of information in a global context, i.e. the action of deduction rules on existing
    knowledge. The first approach requires the existence of ontologies making reference,
    which makes it possible to compare information from various sources to become
    acquainted with it. This is also where the on- high-level topologies, situate
    the concepts in relation to each other of a independent of the application [9].
    The second approach consists in deducing knowledge from rules as well as by reasoning
    on other knowledge. This approach makes it possible to generate knowledge that
    is difficult to obtain directly and automatically: an event is often the correlation
    of a set of elements, and these must therefore be considered in a global context
    in order to take on their meaning. The rule-based reasoning also makes it possible
    to consider the automatic composition of services, or fault diagnosis. This paper
    presents a research carried out on IoT interoperability in the file of agriculture.
    As currently, the standardization in IoT devices and services is limited, this
    research aims to shed light on the current state and suggest a model based on
    the concepts of interoperability. First, the existing ontologies in the field
    of Agriculture IoT are studied. As these ontologies lack the complete vocabulary
    needed for the Indian agriculture sector, a new ontology is created. A methodology
    to parse existing ontologies is first devised and implemented in JavaScript. The
    users can update their existing ontologies and create an OWL file containing the
    added new vocabulary. The generated file has been verified and tested in commercial
    software to prove its validity. Along with an OWL file, a JSON file has also been
    created to facilitate compatibility with other applications to access the data.
    The organization of the paper is as follows. Section 1 presented the introduction
    to the concept of semantic web and IoT interoperability in the field of agriculture.
    Section 5 presents the concepts of ontologies in IoT and how ontologies are an
    important component in the sematic web. Section 7 discusses the RDF framework
    which is crucial in forming the ontologies. Section 8 presents the proposed methodology
    that discusses the concepts of OWL parser, keyword search, and OWL, JSON file
    updating process. Section 10 shows the experimental results where the proposed
    model is evaluated and shows how important an ontology is to read the data correctly.
    2 ONTOLOGIES OF IOT The most obvious area is that of the IoT itself. Several ontologies,
    such as IoT- ontology proposed in the literature, aimed to describe the field
    of IoT [10] as a whole. It is interesting to set aside the field of connected
    sensors. These are the objects most “simple” connected, and allow fairly direct
    applications, through data collection and bulk data processing. These characteristics
    have made semantic sensor networks a privileged subject of study for the community
    of the semantic web [11], leading the W3C to create a working group that proposed
    an ontology of connected sensors. This one has now a value of standard, and it
    is integrated in many projects based on networks of sensors, but also in most
    ontologies of connected objects in general. 2.1 Ontologies on the web In the Semantic
    Web, one of the major applications would be the Semantic search, specifically
    for unknown or confusing knowledge. Here, the ontologies are useful in various
    places. If in case the data was based on the knowledge of ontological structure
    [12], the generalization or specialization of input is carried out and it is adjusted
    or corrected on the search side query. In the search, complex contents can be
    shown when documents enrich with meta-data. Ontologies formulate the rules of
    presentation and sorting to the search result. The data can be integrated and
    mapped optimally. The next field of these intelligent information integration
    and classification systems is resulted. Ontologies can demonstrate the content
    and the schemes as well. Ontologies [13] can also help to describe not only content
    but also schemes. For example, data with different sources or origins is integrated.
    Like translation and transformation rules, ontologies can be functioned. Quoc
    Hung Ngo et al [14] proposed a framework for smart agriculture systems using ontology.
    The ontology contained the concepts of the agriculture domain along with IoT,
    geographical information, business-related information, etc. Many datasets and
    data resources have been used to construct the dataset. P. Sanjeevi et al [15]
    proposed an IoT-based ontology model for post-harvest analysis of ekai-ichi apple
    crop. The authors used Boosted Continuous Non-spatial whole Attribute Extraction
    (BCNAE) procedure. The Hierarchy levels have dynamic functioning to maintain reliability.
    D Thenmozhi e al. [16] proposed an ontology model for Tamil-English languages
    known as Cross-lingual information retrieval (CLIR). The query given by the user
    in Tamil language is converted to English for processing and the required information
    is extracted from the dataset. S. Sagayaraj et al [17] presented a framework named
    Heterogeneous Ensemble Learning method for Semantic web service Personalization
    and recommendation (HEL- SWSR). In the two papers [18, 19], the authors used agriculture
    ontology named AGROVOC and Agriculture Ontology Service (AOS). These ontologies
    contain crop-related terms only. The latest sensors and equipment are not present.
    There are no updation facilities so the ontologies cannot be used for the latest
    applications. 3 RESOURCE DESCRIPTION FRAMEWORK (RDF) In an OWL-RDF, an XML/RDF
    file is considered a system that builds the ontology of OWL with the JSON format
    regarding the triples represented in the RDF. In this paper, a parsing strategy
    is used. To parse an OWL-RDF into the structure closer to the abstract syntax,
    reverse mapping is carried out. In those particular triples, determine the class
    definitions and properties. It''s essential that the reverse mapping is not unique.
    Class (a) Class (b) SubClassOf (b a) and Class (a) Class (b partial a) Under mapping,
    both results in the same collection of triples: ardf:typeowl: Class brdf:typeowl:
    Class brdfs:subClassOf a For different purposes, this is not a problem, like species
    validation. In other cases, the strategy includes a consistent parser. Here, the
    abstract syntax descriptions generate by using the editing tool. An arbitrary
    RDF graph may not related to the DL ontology or OWL Lite necessarily. For transforming
    or generating the given graph, it can demonstrate as DL ontology or OWL Lite via
    the mapping. Whether the existence of an ontology is tried to compute by a species
    validator. Such type of an ontology will establish by a parse. In two different
    ways, the correspondence of an OWL ontology towards the RDF graph may cause failure:
    The mapping of the triples'' superset is allowed by DL ontology or an OWL Lite
    in the abstract syntax. Some of these triples have forgotten or not available
    in the graph. The triples or superset of triples mapping is there in the format
    of abstract syntax in the ontologies. Some limitations are violated for membership
    of lite subspecies or the OWL DL. This is the case for non-availability of such
    kinds of ontologies. 4 PROPOSED METHODOLOGY This section presents the concepts
    of OWL file parser, keyword search, and fil exporting process. The proposed models
    are used to read a new OWL (ontology file), update it, and save it as a new file.
    4.1 Parser implementation During the parsing, file processing encountered incrementally
    that follows a streaming fashion by most of the XML parsers reporting the elements
    to the parser. From a RDF or an XML, it''s difficult to perform the process or
    a task like producing an OWL ontology while RDF models are parsed. If the triples
    processing the graph, the order is not ensured, which causes the problem and reports
    the streaming sparser. The syntax with a particular construct may categorize across
    different locations in the RDF file. For stream parsing, the earlier triples are
    encountered and processed further. In this strategy, the parser does not make
    processing till all triples available. Although the data is processed in a streaming
    manner, the conceptual complexity of a parser is reduced if the triples are collected
    and processed. While parsing, the resources are required in the ramifications.
    If parsing the large RDF graphs, large memory may require. The user provides the
    owl file to be modified. Using the procedure shown in Algorithm 1, the conversion
    from the Owl file to the Json file is performed. Algorithm 1 presented the procedure
    to convert an OWL file to JSON string. The data from the OWL file is read into
    an owl data string. The algorithm is designed based on the structure of the data
    present in the owl data string. The tags of <Declaration> and <SubClassOf>are
    extracted using the Tag search algorithm presented in algorithm 2. This helps
    in extracting the sensor keywords and their alternate names. Algorithm 2 presented
    the ontology tag search procedure. The algorithm is focused on finding the <SubClassOf>,
    </SubClassOf> tags form the input string. Based on the positions of the tags,
    the data present between the tags is extracted. For instance, from the tag shown
    below: <SubClassOf>. <Class IRI = “#T”/>. <Class IRI = “#Temperature”/>. </SubClassOf>.
    The <SubClassOf> tag has two fields, the first one for the sensor name and the
    second name for the alternative name. The algorithm thus searches for the double
    quotes in the text to identify these two fields and extracts them. The result
    of Algorithm 2 on the above data is. Sensor Name: Temperature. Alternate Name:
    T. Once all the tags are extracted, parsing of the OWL is complete. This information
    is saved in the form of a JSON string. The next step is to update the string to
    produce the updated OWL file and JSON file. This procedure is discussed in algorithm
    3. Algorithm 3 presents the procedure to add new alternative names to the sensors.
    This can be achieved by adding the <Declaration>and <SubClassOf>tags for the new
    alternatives. 5 EXPERIMENTAL RESULTS This section presents the experimental analysis
    carried out in order to evaluate the proposed framework. The development is performed
    in Node.js and angular. The user can upload the sensor data to the proposed framework.
    The data is extracted properly when the keywords are present in the ontology.
    If the sensor keywords are missing from the ontology, the framework prompts which
    of the keywords are missing and the user can add them to the OWL file. The updated
    OWL file and JSON file can be downloaded for further use. Table 1 shows the input
    sensor data collected by the user. The keyword used for temperature sensor is
    T. The keyword used for the humidity sensor is Humidity. The keyword used for
    light (intensity) sensor is L. The keyword used for the moisture sensor is M.
    The keyword used for pH sensor is pH. As these keywords are present in the OWL
    file, the framework interpreted the data correctly and displayed the sensor readings.
    TABLE 1. Input sensor data. T = 28 Humidity = 81 L = 454 M = 68 pH = 5 T = 28
    Humidity = 83 L = 453 M = 65 pH = 5 T = 28 Humidity = 82 L = 450 M = 65 pH = 5
    Table 2 shows the result of using an ontology for reading the sensor data. When
    the OWL file contains the keywords, the sensor data values are read accurately.
    TABLE 2. Sensor values with ontology file. S.no. Temperature Humidity Light Moisture
    pH 1 28 81 454 68 5 2 28 83 453 65 5 3 28 82 450 65 5 4 28 82 452 67 5 5 28 81
    451 67 5 6 28 83 454 68 5 7 28 82 450 69 5 8 28 82 450 69 5 9 28 82 453 66 5 10
    28 80 453 65 5 Table 3 shows the scenario where the sensor values are not read
    properly due to the lack of ontology. TABLE 3. Sensor values without ontology.
    S.no. Temperature Humidity Light Moisture pH 1 81 5 2 83 5 3 82 5 4 82 5 5 81
    5 6 83 5 7 82 5 8 82 5 9 82 5 10 80 5 For instance, the alternative sensor names
    for Temperature sensor in the exisitng ontology are: “Temp”, “T”, “TEMPERATURE”,
    “Temperature”, “TemperatureC”, “TemperatureF”, “TempCelsius”,”TempFahrenheit\",
    “TempF”, “TempC”, “Tempf”, “Tempc”, “TempF”. Figure 1 shows the output of angular
    script in a webpage. FIGURE 1 Open in figure viewer PowerPoint Angular output.
    The file containing the sensors has the following structure: The sensor labels
    TempCelsius, L, and MoistureValue are not read in the absence of the ontology
    file. When a new keyword is found the sensor data uploaded to the framework, the
    new keyword is identified and presented to the user. Table 4 shows the input sensor
    data where the keyword for temperature sensor, ‘Tc’, is a new keyword. When this
    data is uploaded, the proposed framework identifies that Tc is not present in
    the ontology. The result is that the temperature sensor values are not read as
    shown in Table 5. TABLE 4. Input sensor data 2. Tc = 28 H = 83 L = 452 M = 66
    pH = 5 Tc = 28 H = 82 L = 454 M = 69 pH = 5 Tc = 28 H = 84 L = 450 M = 65 pH = 5
    TABLE 5. Sensor data 2 with existing ontology file. S.no. Temperature Humidity
    Light Moisture pH 1 83 452 66 5 2 82 454 69 5 3 84 450 65 5 4 80 452 66 5 5 81
    451 69 5 6 82 454 66 5 7 82 452 69 5 8 82 452 69 5 9 83 452 69 5 10 82 451 65
    5 The user can then update the ontology by adding new keywords. Figure 2 shows
    the form provided to update the existing ontology. FIGURE 2 Open in figure viewer
    PowerPoint Ontology updating form. Once the new keywords are submitted, a new
    ontology and a supporting JSON file are created. The tags of <Declaration> and
    <SubClassOf> are added to the existing ontology. The resultant output is shown
    in Table 6 where all the sensor values are read. TABLE 6. Sensor data 2 with existing
    ontology file. S.no. Temperature Humidity Light Moisture p H 1 28 83 452 66 5
    2 28 82 454 69 5 3 28 84 450 65 5 4 28 80 452 66 5 5 28 81 451 69 5 6 28 82 454
    66 5 7 28 82 452 69 5 8 28 82 452 69 5 9 28 83 452 69 5 10 28 82 451 65 5 The
    proposed framework can read existing ontologies and modify them as per the user''s
    needs. This framework implemented in angular JS can be extended to various fields.
    6 CONCLUSION IoT interoperability is an essential concept in today''s smart agriculture.
    The data from different sources can be incorporated into the databases with ease.
    Ontologies play a major role in bridging the gap between the database and the
    sensor data. Ontological definitions and its deviation knowledge have been used
    to overcome the inconsistencies of available data and search formulation. Furthermore,
    a similarity-based search is also used to overcome this problem based on background
    data. In this paper, an ontology framework is presented for parsing an OWL file.
    The framework is also provided by means of updating the OWL file and the JSON
    file at the same time. A new OWL file and JSON file are generated at the output,
    which can be easily parsed by many platforms. The proposed framework would read
    the sensor data files accurately without any loss. Open Research REFERENCES Volume36,
    Issue11 25 July 2023 e5516 Figures References Related Information Recommended
    Interoperability for a Networked Enterprise based on a Cloud Computing Infrastructure
    Malik Khalfallah,  Nicolas Figay,  Mahmoud Barhamgi,  Parisa Ghodous Enterprise
    Interoperability: I-ESA''12 Proceedings, [1] Tools and Techniques for Dynamic
    Reconfiguration and Interoperability of Pervasive Systems Evens Jean,  Sahra Sedigh,  Ali
    R. Hurson,  Behrooz A. Shirazi Pervasive Computing and Networking, [1] Interoperability
    Internet of Things: Architectures, Protocols and Standards, [1] Importance of
    semantic interoperability in smart agriculture systems P Salma Khatoon,  Muqeem
    Ahmed Transactions on Emerging Telecommunications Technologies Internet of Things
    and UAV: An Interoperability Perspective Bharti Rana,  Yashwant Singh Unmanned
    Aerial Vehicles for Internet of Things (IoT): Concepts, Techniques, and Applications,
    [1] Download PDF Additional links ABOUT WILEY ONLINE LIBRARY Privacy Policy Terms
    of Use About Cookies Manage Cookies Accessibility Wiley Research DE&I Statement
    and Publishing Policies Developing World Access HELP & SUPPORT Contact Us Training
    and Support DMCA & Reporting Piracy OPPORTUNITIES Subscription Agents Advertisers
    & Corporate Partners CONNECT WITH WILEY The Wiley Network Wiley Press Room Copyright
    © 1999-2024 John Wiley & Sons, Inc or related companies. All rights reserved,
    including rights for text and data mining and training of artificial technologies
    or similar technologies."'
  inline_citation: '>'
  journal: International Journal of Communication Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design and development of dynamic Agri-ontology for IoT interoperability
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Fadli O.
  - Balboul Y.
  - Fattah M.
  - Mazer S.
  - Elbekkali M.
  citation_count: '1'
  description: 'In recent years, the Internet of Things (IoT) constituted one of the
    major research areas which can offer solutions economically interesting and easily
    deployed to the remote monitoring and the data processing in several application
    domains. It became pervasive in all areas of our lives, viz: agriculture, healthcare,
    transportation, automation industry, banking, military, security and many other
    fields of application. This requires a larger and more complex network than the
    current internet. Therefore, it is crucial to create a unified IoT architecture
    and standardize IoT protocols to solve the challenges of energy efficiency, interoperability,
    scalability, security, bandwidth management. The communication protocols constitute
    an important part of the data communication of IoT applications. However, due
    to the diverse nature of IoT systems and their different messaging challenges,
    the selection of the appropriate messaging protocol is very difficult. Therefore,
    this paper presents a study of communication protocols MQTT, SMQTT, AMQP, and
    CoAP for IoT applications, to determine the appropriate protocol for each domain
    based on the type of IoT applications. It presents an evaluation of the important
    needs of some IoT application domains. Subsequently, it performs a detailed analysis
    of established communication protocols MQTT, SMQTT, AMQP, and CoAP.'
  doi: 10.1063/5.0149284
  full_citation: '>'
  full_text: '>

    "All Content AIP Publishing Portfolio AIP Conference Proceedings                              Advanced
    Search | Citation Search Univ Nebraska Lincoln Lib Sign In HOME BROWSE FOR AUTHORS
    FOR ORGANIZERS ABOUT Volume 2814, Issue 1 11 July 2023 INTERNATIONAL CONFERENCE
    ON ADVANCES IN COMMUNICATION TECHNOLOGY AND COMPUTER ENGINEERING 24–25 June 2022
    Meknes, Morocco Previous Article Next Article REFERENCES RESEARCH ARTICLE| JULY
    11 2023 Detailed analysis and comparison of communication protocol-oriented IoT
    applications Ouijdane Fadli; Younes Balboul; Mohammed Fattah; Said Mazer; Moulhime
    Elbekkali Author & Article Information AIP Conf. Proc. 2814, 030011 (2023) https://doi.org/10.1063/5.0149284
    Split-Screen PDF Share Tools In recent years, the Internet of Things (IoT) constituted
    one of the major research areas which can offer solutions economically interesting
    and easily deployed to the remote monitoring and the data processing in several
    application domains. It became pervasive in all areas of our lives, viz: agriculture,
    healthcare, transportation, automation industry, banking, military, security and
    many other fields of application. This requires a larger and more complex network
    than the current internet. Therefore, it is crucial to create a unified IoT architecture
    and standardize IoT protocols to solve the challenges of energy efficiency, interoperability,
    scalability, security, bandwidth management. The communication protocols constitute
    an important part of the data communication of IoT applications. However, due
    to the diverse nature of IoT systems and their different messaging challenges,
    the selection of the appropriate messaging protocol is very difficult. Therefore,
    this paper presents a study of communication protocols MQTT, SMQTT, AMQP, and
    CoAP for IoT applications, to determine the appropriate protocol for each domain
    based on the type of IoT applications. It presents an evaluation of the important
    needs of some IoT application domains. Subsequently, it performs a detailed analysis
    of established communication protocols MQTT, SMQTT, AMQP, and CoAP. Topics Energy
    efficiency, Telecommunication networks, Theoretical computer science, Internet
    of things, Network theory, Health care, Industry, Treaties REFERENCES 1.Chafi,
    S. E., Balboul, Y., Mazer, S., Fattah, M., & El Bekkali, M. (2022). Resource placement
    strategy optimization for smart grid application using 5G wireless networks. International
    Journal of Electrical & Computer Engineering (2088–8708), 12(4). Google Scholar  2.Mishra,
    B., & Kertesz, A. (2020). The use of MQTT in M2M and IoT systems: A survey. IEEE
    Access, 8, 201071–201086. https://doi.org/10.1109/ACCESS.2020.3035849 Google Scholar  3.Moutaib,
    M., Fattah, M., & Farhaoui, Y. (2020). Internet of things: Energy Consumption
    and Data Storage. Procedia Computer Science, 175, 609–614. https://doi.org/10.1016/j.procs.2020.07.088
    Google Scholar  4.Mamane, A., Fattah, M., El Ghazi, M., Balboul, Y., El Bekkali,
    M., & Mazer, S. (2021). Proportional fair buffer scheduling algorithm for 5G enhanced
    mobile broadband. International Journal of Electrical & Computer Engineering (2088–8708),
    11(5). Google Scholar  5.Chafi, S. E., Balboul, Y., Mazer, S., Fattah, M., & El
    Bekkali, M. (2022). Resource placement strategy optimization for smart grid application
    using 5G wireless networks. International Journal of Electrical & Computer Engineering
    (2088–8708), 12(4). Google Scholar  6.Younes, B., Mohammed, F., Said, M., & Bekkali,
    M. E. (2021). 5G uplink interference simulations, analysis and solutions: The
    case of pico cells dense deployment. International Journal of Electrical & Computer
    Engineering (2088–8708), 11(3). Google Scholar  7.SIDNA, Jeddou, AMINE, Baina,
    ABDALLAH, Najid, et al Analysis and evaluation of communication Protocols for
    IoT Applications. In : Proceedings of the 13th International Conference on Intelligent
    Systems: Theories and Applications. 2020. p. 1–6. Google Scholar  8.Chafi, S.
    E., Balboul, Y., Mazer, S., Fattah, M., Bekkali, M. E., & Bernoussi, B. (2021).
    Cloud computing services, models and simulation tools. International Journal of
    Cloud Computing, 10(5-6), 533–547. https://doi.org/10.1504/IJCC.2021.120392 Google
    Scholar  9.Saad-Eddine, C., & Younes, B. (2019, October). Performance & Energy
    Consumption Metrics Of A Data Center According To The Energy Consumption Models
    Cubic, Linear, Square And Square Root. In 2019 7th Mediterranean Congress of Telecommunications
    (CMT) (pp. 1–5). IEEE. Google Scholar  10.Daghouj, D., Fattah, M., Mazer, S.,
    Balboul, Y., & El Bekkali, M. (2020). UWB waveform for Automotive Short Range
    Radar. International Journal on Engineering Applications (IREA), 8(4). https://doi.org/10.15866/irea.v8i4.18997
    Google Scholar  11.Pekar, Adrian, Mocnej, Jozef, Seah, Winston KG, et al Application
    domain-based overview of IoT network traffic characteristics. ACM Computing Surveys
    (CSUR), 2020, vol. 53, no 4, p. 1–33. https://doi.org/10.1145/3399669 Google Scholar  12.Almolhis,
    N., Alashjaee, A. M., Duraibi, S., Alqahtani, F., & Moussa, A. N. (2020, February).
    The security issues in IoT-cloud: a review. In 2020 16th IEEE International Colloquium
    on Signal Processing & Its Applications (CSPA) (pp. 191–196). IEEE. Google Scholar  13.Lohiya,
    Ritika et THAKKAR, Ankit. Application Domains, Evaluation Data Sets, and Research
    Challenges of IoT: A Systematic Review. IEEE Internet of Things Journal, 2020,
    vol. 8, no 11, p. 8774–8798. https://doi.org/10.1109/JIOT.2020.3048439 Google
    Scholar  14.RAJ, Aparna et SHETTY, Sujala D. IoT eco-system, layered architectures,
    security and advancing technologies: A comprehensive survey. Wireless Personal
    Communications, 2021, p. 1–37. Google Scholar  15.Lombardi, Marco, PASCALE, Francesco,
    et SANTANIELLO, Domenico. Internet of things: A general overview between architectures,
    protocols and applications. Information, 2021, vol. 12, no 2, p. 87. Google Scholar  16.da
    Silva, A. F., Ohta, R. L., dos Santos, M. N., & Binotto, A. P. (2016). A cloud-based
    architecture for the internet of things targeting industrial devices remote monitoring
    and control. IFAC-PapersOnLine, 49(30), 108–113. https://doi.org/10.1016/j.ifacol.2016.11.137
    Google Scholar  17.Hintaw, A. J., Manickam, S., Aboalmaaly, M. F., & Karuppayah,
    S. (2021). MQTT vulnerabilities, attack vectors and solutions in the internet
    of things (IoT). IETE Journal of Research, 1–30. Google Scholar  18.Mrabet, Hichem,
    BELGUITH, Sana, ALHOMOUD, Adeeb, et al A survey of IoT security based on a layered
    architecture of sensing and data analysis. Sensors, 2020, vol. 20, no 13, p. 3625.
    https://doi.org/10.3390/s20133625 Google Scholar  19.Hasan, M. K. (2020). CoAP
    and MQTT Measurements over LoRaWAN. Google Scholar  20.Raj, Aparna et SHETTY,
    Sujala D. IoT eco-system, layered architectures, security and advancing technologies:
    A comprehensive survey. Wireless Personal Communicati ons, 2021, p. 1–37. Google
    Scholar  21.Abdelouahid, Rachida Ait, OQAIDI, Mohammed, et MARZAK, Abdelaziz.
    Towards to a new iot interoperability architecture. In : 2018 IEEE International
    Conference on Technology Management, Operations and Decisions (ICTMOD). IEEE,
    2018. p. 148–154. Google Scholar  22.Sarhan, Q. I. (2018). Internet of things:
    a survey of challenges and issues. International Journal of Internet of Things
    and Cyber-Assurance, 1(1), 40–75. https://doi.org/10.1504/IJITCA.2018.090162 Google
    Scholar  23.KARPENKO, Anastasiia, et al Practical Use of O-MI/O-DF messaging standards
    in mobile application for IoT. Creating an open system for smart EV charging.
    2017. Google Scholar  24.Kannan, V. T., & Chakravarthi, R. (2022). Efficient addressing
    schemes for internet of things. International Journal of Electrical & Computer
    Engineering (2088–8708), 12(4). Google Scholar  This content is only available
    via PDF. PDF ©2023 Authors. Published by AIP Publishing. View Metrics Citing Articles
    Via Google Scholar CrossRef (1) Publish with us - Request a Quote! Sign up for
    alerts Most Read Most Cited Phytochemical analysis of bioactive compounds in ethanolic
    extract of Sterculia quadrifida R.Br. Siswadi Siswadi, Grace Serepina Saragih
    Impact of blockchain technology development on industries in the context of entrepreneurial,
    marketing and management perspectives worldwide Ivelina Kulova Design of a 100
    MW solar power plant on wetland in Bangladesh Apu Kowsar, Sumon Chandra Debnath,
    et al. Online ISSN 1551-7616 Print ISSN 0094-243X Resources For Researchers For
    Librarians For Advertisers Our Publishing Partners  Explore Journals Physics Today
    Conference Proceedings Books Special Topics Publishers pubs.aip.org About User
    Guide Contact Us Register Help Privacy Policy Terms of Use Connect with AIP Publishing
    Facebook LinkedIn Twitter YouTube © Copyright 2024 AIP Publishing LLC"'
  inline_citation: '>'
  journal: AIP Conference Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Detailed analysis and comparison of communication protocol-oriented IoT applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Hou K.M.
  - Diao X.
  - Shi H.
  - Ding H.
  - Zhou H.
  - de Vaulx C.
  citation_count: '6'
  description: 'For the next coming years, metaverse, digital twin and autonomous
    vehicle applications are the leading technologies for many complex applications
    hitherto inaccessible such as health and life sciences, smart home, smart agriculture,
    smart city, smart car and logistics, Industry 4.0, entertainment (video game)
    and social media applications, due to recent tremendous developments in process
    modeling, supercomputing, cloud data analytics (deep learning, etc.), communication
    network and AIoT/IIoT/IoT technologies. AIoT/IIoT/IoT is a crucial research field
    because it provides the essential data to fuel metaverse, digital twin, real-time
    Industry 4.0 and autonomous vehicle applications. However, the science of AIoT
    is inherently multidisciplinary, and therefore, it is difficult for readers to
    understand its evolution and impacts. Our main contribution in this article is
    to analyze and highlight the trends and challenges of the AIoT technology ecosystem
    including core hardware (MCU, MEMS/NEMS sensors and wireless access medium), core
    software (operating system and protocol communication stack) and middleware (deep
    learning on a microcontroller: TinyML). Two low-powered AI technologies emerge:
    TinyML and neuromorphic computing, but only one AIoT/IIoT/IoT device implementation
    using TinyML dedicated to strawberry disease detection as a case study. So far,
    despite the very rapid progress of AIoT/IIoT/IoT technologies, several challenges
    remain to be overcome such as safety, security, latency, interoperability and
    reliability of sensor data, which are essential characteristics to meet the requirements
    of metaverse, digital twin, autonomous vehicle and Industry 4.0. applications.'
  doi: 10.3390/s23115074
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 11 10.3390/s23115074 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Carles Gomez
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 3874 Citations 7 Table of Contents Abstract Introduction AIoT/IIoT/IoT
    Platform AIoT/IIoT/IoT Device: Hardware and Firmware AIoT/IIoT/IoT Device Use
    Case Conclusions and Perspectives Author Contributions Funding Institutional Review
    Board Statement Informed Consent Statement Data Availability Statement Conflicts
    of Interest References share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessArticle Trends and Challenges in AIoT/IIoT/IoT Implementation
    by Kun Mean Hou 1,*, Xunxing Diao 2, Hongling Shi 3, Hao Ding 3, Haiying Zhou
    4 and Christophe de Vaulx 1 1 Université Clermont-Auvergne, CNRS, Mines de Saint-Étienne,
    Clermont-Auvergne-INP, LIMOS, F-63000 Clermont-Ferrand, France 2 uSuTech Company,
    63173 Aubière, France 3 College of Electronics and Information Engineering, South
    Central Minzu University (SCMZU), Wuhan 430070, China 4 Dong Feng Company, Wuhan
    430050, China * Author to whom correspondence should be addressed. Sensors 2023,
    23(11), 5074; https://doi.org/10.3390/s23115074 Submission received: 20 February
    2023 / Revised: 16 May 2023 / Accepted: 18 May 2023 / Published: 25 May 2023 (This
    article belongs to the Special Issue Recent Trends and Advances in Wireless Sensor
    Networks) Download keyboard_arrow_down     Browse Figures Review Reports Versions
    Notes Abstract For the next coming years, metaverse, digital twin and autonomous
    vehicle applications are the leading technologies for many complex applications
    hitherto inaccessible such as health and life sciences, smart home, smart agriculture,
    smart city, smart car and logistics, Industry 4.0, entertainment (video game)
    and social media applications, due to recent tremendous developments in process
    modeling, supercomputing, cloud data analytics (deep learning, etc.), communication
    network and AIoT/IIoT/IoT technologies. AIoT/IIoT/IoT is a crucial research field
    because it provides the essential data to fuel metaverse, digital twin, real-time
    Industry 4.0 and autonomous vehicle applications. However, the science of AIoT
    is inherently multidisciplinary, and therefore, it is difficult for readers to
    understand its evolution and impacts. Our main contribution in this article is
    to analyze and highlight the trends and challenges of the AIoT technology ecosystem
    including core hardware (MCU, MEMS/NEMS sensors and wireless access medium), core
    software (operating system and protocol communication stack) and middleware (deep
    learning on a microcontroller: TinyML). Two low-powered AI technologies emerge:
    TinyML and neuromorphic computing, but only one AIoT/IIoT/IoT device implementation
    using TinyML dedicated to strawberry disease detection as a case study. So far,
    despite the very rapid progress of AIoT/IIoT/IoT technologies, several challenges
    remain to be overcome such as safety, security, latency, interoperability and
    reliability of sensor data, which are essential characteristics to meet the requirements
    of metaverse, digital twin, autonomous vehicle and Industry 4.0. applications.
    Keywords: metaverse; digital twin; AIoT platform; TinyML; Zephyr; OpenThread;
    TensorFlow; Keras; TensorFlow Lite; TensorFlow for microcontroller; neuromorphic
    computing; IMC; ANN; SNN 1. Introduction Metaverse and digital twin are the cutting-edge
    technologies for the coming year, for many complex applications hitherto inaccessible
    such as health and life sciences, smart home, smart agriculture, smart city, transport
    and logistics, Industry 4.0 and social entertainment (video game) applications
    [1,2,3,4]. Due to the recent tremendous development of process modeling, supercomputing,
    cloud data analytics (AI, deep learning and neuromorphic computing), communication
    networks (e.g., 5G/6G, Wi-Fi 6/7 and Bluetooth LE), artificial intelligence of
    things (AIoT) [5], industrial Internet of Things (IIoT) and the IoT. These disruptive
    technologies can suppress the barrier between virtual worlds and the real world,
    and can allow near real-time interaction and decision making. This new paradigm
    for unification of virtual worlds and real world will drive new applications and
    practices to optimize (reduce cost) and to improve industry processes and services,
    i.e., production, maintenance, augmented assistance and tutorial, product lifecycle
    management and quality. It is estimated that growth of the IoT (here, the IoT
    corresponds to the IoE ”Internet of Every Thing”, i.e., smartwatches, smart phones,
    IIoT/I, etc.) through connected devices across the globe will increase from 7.6
    billion to 24.1 billion, with the revenue increasing from USD 465 billion to over
    USD 1.5 trillion by the year 2030 (according to the IoT total addressable market
    (TAM) forecast published by Transforma Insights in 19 May 2020) [6]. In general,
    the IoT platform has three main layers: the IoT cloud server (back-end), edge
    router and IoT devices (front-end). Due to communication delay between front-end
    and back-end (upward and downward exchanges), distributed decision making is needed
    at each layer: IIoT/IoT devices, edge router and the IoT cloud to minimize bandwidth
    use, and to improve reliability, security and privacy. Moreover, metaverse, digital
    twin and, in particular, autonomous vehicle applications (dynamic distributed
    front-end devices) are time sensitive (real-time interaction). Therefore, time-sensitive
    dynamic IIoT/IoT devices must have the decision-making capability (AIoT device)
    to interact directly and locally with their environments (e.g., actuators), and
    to send some defined data to the IoT cloud through an edge router for global decision
    making. It is evident that AIoT/IIoT/IoT technology is a crucial research area,
    and is the cornerstone of metaverse and digital twin as it provides the essential
    data to power its applications. This work covers the ecosystem of core technologies
    to implement low-power and low-cost AIoT/IIoT/IoT devices. Here, we address the
    state-of-the-art hardware (MCU, sensors and wireless carrier), firmware (operating
    system and communication protocol stack) and embedded deep learning framework
    (TinyML) by highlighting their trends, challenges and opportunities. In addition
    to this introduction, this work is structured as follows: Section 2 describes
    the current hierarchical AIoT/IIoT/IoT platform and shows its drawbacks for handling
    time-sensitive applications. Next, in Section 3, we introduce the core technology
    ecosystem of AIoT/IIoT/IoT devices, and also discuss recent advancements in ANN
    and SNN that can be used to implement an AIoT device. Section 4 presents the TinyML
    framework used to implement an AIoT device dedicated to strawberry disease detection.
    The feasibility of such an AIoT device is validated and evaluated using ST’s B-L4S5I-IOT01A
    board. The lifetime of the AIoT device implemented using conventional and sub-threshold
    CMOS technologies is quantified and an evaluation of the TinyML framework is summarized.
    Finally, we conclude this work and highlight trends and challenges in AIoT/IIoT/IoT
    technology and the evolution of the embedded deep learning. 2. AIoT/IIoT/IoT Platform
    An AIoT device can directly interact with other AIoT/IIoT/IoT devices in two ways,
    i.e., machine-to-machine (M2M) communication, either direct or indirect. Direct
    M2M communication is performed when the AIoT/IIoT/IoT devices are located in the
    same wireless coverage area (wireless range). Indirect M2M is performed when the
    destinations of AIoT/IIoT/IoT devices are out of the wireless range of the source
    AIoT/IIoT/IoT devices. Therefore, at least one router is needed to forward messages
    to the destinations of AIoT/IIoT/IoT devices. For example, AIoT/IIoT/IoT devices
    send messages to the IoT cloud server and the IoT cloud server forwards the messages
    to the destinations of the AIoT/IIoT/IoT devices, connected to the same IoT platform.
    Thereby, due to resource constraints, AIoT/IIoT/IoT devices interact with other
    AIoT/IIoT/IoT devices (out of its wireless range) through at least three routers.
    First, AIoT/IIoT/IoT devices send messages to the edge router in their wireless
    range and the edge router forwards the messages to the IoT cloud server. The IoT
    cloud server forwards the messages to the edge router connected to the destinations
    of the AIoT/IIoT/IoT devices to deliver the message. This architecture enables
    use of an appropriate wireless access medium at the front-end layer according
    to the application requirements (e.g., Bluetooth, Wi-Fi, ZigBee or WMBUS) by considering
    resource constraints such as available energy, wireless bandwidth and computational
    resources. Typically, a multi-support edge router (e.g., BLE/ZigBee and 4G/5G
    or Wi-Fi) is used to link AIoT/IIoT/IoT devices to the IoT cloud server. Thus,
    the IoT platform has three layers of abstraction, as illustrated in Figure 1:
    AIoT/IIoT/IoT devices (front-end), edge router and cloud server (back-end). AIoT/IIoT/IoT
    devices collect real-world data from their environment, interact with their environment
    (local decision-making to control actuators) and communicate with an edge router
    or the cloud (e.g., sending environment status). Edge routers or gateways manage,
    collect and save AIoT/IIoT/IoT sensory data (temporary data), perform real-time
    data analytics, and communicate and interact with AIoT/IIoT/IoT local devices.
    Edge routers send defined sensory data and environment status to the IoT cloud
    server. The IoT cloud server (back-end) performs long-term data analytics (deep
    learning), long-term data storage, decision making, etc. Figure 1. IoT platform.
    The question is whether this IoT platform can cope with the increasing number
    of AIoT/IIoT/IoT devices and new emerging time-sensitive (real-time critical interaction)
    applications such as autonomous vehicle, metaverse, digital twin and Industry
    4.0 applications. P. Ferrari et al. focused on evaluating the communication delay
    due to data transfer from the source, i.e., from the production line to the IBM
    Bluemix IoT cloud and the way back. The round trip time (RTT) low average time
    was less than 300 ms with a standard deviation of about 70 ms and the maximum
    RTT time was less than 1 s [7]. This RTT was too long for an autonomous vehicle
    to interact with its environment. It is essential to minimize the RTT; therefore,
    a smart edge router is developed to offload the cloud server to face the increasing
    number of AIoT/IIoT/IoT devices and minimize latency. In fact, a smart edge router
    can drastically reduce the decision-making latency time for a specific application,
    avoids wasting bandwidth resources (preserves network bandwidth by processing
    selected data locally) and, to some extent, improves security and protects privacy
    [8]. However, to improve the IoT platform to meet the requirements of emerging
    time-sensitive (real-time interaction) security/safety applications such as autonomous
    vehicles, digital twins and metaverse (AR/VR), it is important to provide IoT
    devices with local decision-making capability. 3. AIoT/IIoT/IoT Device: Hardware
    and Firmware 3.1. State-of-the-Art of AIoT In fact, nowadays, not all IIoT/IoT
    devices have the capability to make decisions, low-end IIoT/IoT devices (due to
    resource constraints) only sample environmental data, send sensory data to the
    IoT cloud through the edge router and wait for the IoT cloud to decide to perform
    an action. A High-end IIoT/IoT devices can be integrated with a relatively complicated
    deep learning algorithm able to perform (intelligent) decision making by interacting
    directly and locally with defined actuators or neighboring devices. This capability
    is essential to enable large-scale deployment of IIoT/IoT devices (millions) by
    avoiding internet network congestion and improving security, safety and privacy.
    In general, the terms IIoT/IoT do not indicate whether or not the IIoT/IoT devices
    have cognitive capability. Hou et al. discussed and highlighted the concept and
    the difference between a simple/low-end IoT device and a smart object (high-end
    IoT or AIoT device) [9]. Figure 2 presents a deployment of a basic AIoT platform
    for a smart irrigation application including local or/and remote servers. Figure
    2. Basic AIoT platform. In fact, due to resource constraints, how smart can a
    smart object be? The use of artificial intelligence (AI) helps to understand,
    learn, reason, and interact, and thus, it increases efficiency. AI technology
    such as machine learning allows many types of correlations of large amounts of
    structured and unstructured data from multiple sources to extract knowledge and
    to take action. AI was born officially in 1956, but the first neuron model was
    defined in 1943 by McCulloch and Pitts [10]. Initially, AI investigated propositional
    logic and the representation of knowledge, i.e., an expert system [11]. The developed
    methods and tools were related to knowledge-based reasoning, represented by facts
    and rules. Over the decades, the field of AI was extended to become a multidisciplinary
    science such as machine learning, the adaptive control theory, the information
    theory, and the theory of computation and game theory [12,13]. Deep learning is
    a subset of machine learning and is a multilayer neural network. Today, deep learning
    outperforms other algorithms for gesture analysis, video image processing (object
    detection and recognition) and speech processing (speech recognition and translation).
    It should be noted that AlphaGo DeepMind of Google is running on a supercomputer
    built around 1202 CPUs and 176 GPUs [14]. Admittedly, the deep learning algorithms
    based on von Neumann’s CMOS architecture are efficient, but they consume a lot
    of energy. For example, the next-generation computer technology is expected to
    solve problems at the exascale with 1018 calculations each second and it will
    consume between 20 and 30 megawatts of power [15]. Thereby, about 5–15% of the
    world’s energy is spent in some form of data manipulation, transmission or processing
    [16]. It should be noted that the human brain only consumes about 20 W. The brain
    is based on large collections of neurons (approximately 86 billion neurons), each
    of which has a cell body (soma), an axon and dendrites. The information or action
    potential is transmitted from one neuron to another neuron through synapses, as
    illustrated in Figure 3. The neuronal signal action potential or spike consists
    of short electrical pulses with amplitudes of about 100 mV and typically a duration
    of 1–2 ms and is generated by the soma as soon as its membrane potential reaches
    a critical value ϑ [17]. In the 1990s, Carver Mead investigated an unconventional
    computer architecture for mimicking brain function called neuromorphic computing
    [18]. Due to the inherent asynchrony in memory computing (synapses) and the sparseness
    of spike trains, neuromorphic computing is energy efficient for performing cognitive
    tasks (deep learning algorithms). Note that deep learning is based on multi-layered
    neural networks and classified into two types: artificial neural networks (ANNs)
    and spiking neural networks (SNNs). SNNs are considered to be the third generation
    of neural networks. The neuron model of an ANN is based on McCulloch and Pitts
    model. An artificial neuron takes in some number of inputs (x1, x2, …, xn), each
    of which is multiplied by a specific weight (w1, w2, …, wn). The logit of the
    neuron is 𝑧=( ∑ 𝑛 𝑖=1 𝑋 𝑖 𝑊 𝑖 + b), where b is the bias of the neuron. The output
    of the neuron is expressed as: 𝑦=𝑓(𝑧)=𝑓 ⎛ ⎝ ⎜ ⎜ ⎜ ⎜ ∑ 𝑖=1 𝑛 𝑋 𝑖 𝑊 𝑖 + b ⎞ ⎠ ⎟
    ⎟ ⎟ ⎟   where f is the activation function. There are four major activation functions:
    sigmoid, tanh, softmax and restricted linear unit (ReLU). The ReLU activation
    function is defined as 𝑓(𝑧)=max(0,𝑧) . In general, to train an ANN, the ReLU activation
    function, the back propagation algorithm and the stochastic gradient descent (SGD)
    are used to minimize the ANN output error. The effectiveness of training ANNs
    with large databases in different applications has been proven; however, this
    is not the case with SNNs. Unlike ANNs, it is difficult to train SNNs with direct
    backpropagation due to the non-differentiable nature of their activation functions.
    One of the most popular ANN-SNN conversion models used is the linear leaky integrate-and-fire
    (LIF) model [19]. It is expressed as follows [20]: 𝑉(𝑡)= 𝑒 − 𝑡− 𝑡 0 𝜏 𝑚 ⎡ ⎣ ⎢
    ⎢ ∫ 𝑡 𝑡 0 𝐼 𝑖𝑛𝑗 ( 𝑡 ′ ) 𝐶 𝑚 𝑒 𝑡 ′ − 𝑡 0 𝜏 𝑚 𝑑 𝑡 ′ +𝑉( 𝑡 0 ) ⎤ ⎦ ⎥ ⎥ where 𝜏 𝑚
    = 𝐶 𝑚 · 𝑅 𝑚 is the membrane time constant, Iinj(t) is the input current, 𝐶 𝑚 is
    the membrane capacitor, Rm is the membrane resistor and V(t0) is the initial membrane
    potential [20]. 𝐼 𝑖𝑛𝑗 = 𝑤 𝑖 ∑ 𝑗=1 𝑁 𝛿(𝑡−𝑗 1 𝑥 𝑖 ) where 𝛿( ) is the delta function
    𝑁= 𝑥 𝑖  and  𝑇 𝑤 =∑ 𝐼 𝑖𝑛𝑗 is the number of spikes in time windows Tw. ∫ 𝑇 𝑤 0
    𝐼 𝑙 𝑑𝑡= ∑ 𝑖=1 𝑛 𝑙 𝑤 𝑖  . ∑ 𝑗=1 𝑛 ∫ 𝑇 𝑤 0 𝛿(𝑡−𝑗 1 𝑓 𝑖 )𝑑𝑡=𝑇. ∑ 𝑖=1 𝑛 𝑙 𝑤 𝑖 𝑓 𝑖
    In [20], the authors demonstrated the equivalence of a linear LIF/SNN and ReLU-ANN
    model. This proof allowed ANN-SNN conversion and BP with surrogate gradients and
    direct supervised learning. Moreover, the leaky integrate-and-fire (LIF) neuron
    has been implemented with a few arithmetic components, such as an adder and comparator
    [21]. Kashu Yamazaki et al. presented an overview of different SNN neuron models
    for different applications [22]. While a spike timing-dependent plasticity (STDP)
    model, which is biologically plausible allows unsupervised learning, the lack
    of global information hinders the convergence of large SNNs to be trained with
    large and complex datasets. The architecture of neuromorphic computing exploits
    the property of low-power new nonvolatile memory based on resistive switching
    materials, such as phase-change memory (PCM), ferroelectric device, valence change
    memory (VCM), electrochemical metallization cells and spintronics [15], to locally
    implement the integrate-and-fire function (neuron synapse) in the memory cell,
    i.e., in-memory computing (IMC). IMC avoids intensive backward and forward data
    transfers between memory and processing units (CPU, GPU, TPU, etc.) in conventional
    von Neumann architecture. Consequently, IMC reduces power consumption and throughput
    latency. The different technologies of new memory materials (memristor) are well
    described in [15]. Figure 3. A typical structure of a biological neuron and synapse
    [22]. Today, there are four categories of neuromorphic computing. The first category
    (DeepSouth, IBM TrueNorth and Intel Loihi) uses digital CMOS to emulate brain
    functions. The second category (SpiNNaker, Tianjic, etc.) is based on a software
    approach (neural network communication protocol and specific hardware architecture)
    to accelerate ANN and SNN execution. The third category (BrainScaleS, Neurogrid
    and MNIFAT) uses analogue and mixed-signal CMOS to reproduce a real neuron model
    [23]. The fourth category uses FPGA-based neuromorphic platforms which outperform
    previous platforms in terms of power consumption, response time and number of
    neurons implemented. Yang et al. proposed a CerebelluMorphic system using six
    Intel Stratix III EP3SL340 FPGAs to realize a large-scale neuromorphic cerebellar
    network with approximately 3.5 million neurons and 218.3 million synapses [24].
    While Wang et al. presented a new abstraction of a neuromorphic architecture into
    clusters represented by minicolumns and hypercolumns, analogous to the fundamental
    structural units observed in neurobiology. As a result, implementation on one
    Altera Stratix V FPGA was able to simulate from 20 million to 2.6 billion leaky-integrate-and-fire
    (LIF) neurons in real time [25]. The Intel Programmable Solutions Group (neuromorphic
    computing) and the International Center for Neuromorphic Systems at Western Sidney
    University (WSU) are building a neuromorphic platform using 168 Intel Stratix
    10 PGAs with high-bandwidth memory (HBM) and an accelerator configurable network
    protocol (COPA) to simulate the human cortex (LIF model). It is estimated that
    the human cerebral cortex has from 10 to 20 billion neurons and from 60 to 240
    trillion synapses [26]. Proof-of-concepts (PoCs) developed on FPGA-based neuromorphic
    and memristor IMC platforms will lead to the next significant advances in SoC
    design of low-cost, low-power AIoT devices. So far, although there has been significant
    progress in neuromorphic computing over the last decade, its market is insignificant
    (USD 200 million in 2025) compared to that of conventional computing [15]. Nowadays,
    there are two emerging trends in AI systems that aim at implementing low-power
    embedded AI devices: neuromorphic computing and TinyML. In this article, we only
    focus on the TinyML technology ecosystem for implementing low-cost and low-power
    AIoT/IIoT/IoT devices and establish its assessment. Henceforth, it is important
    to investigate the cognitive techniques that can be embedded to build an AIoT
    device by considering its resource constraints. The computing power required for
    an AIoT device is related to the size of the input sensory data, the sampling
    frequency, i.e., the duty cycle, and the application algorithm. In fact, we can
    define two categories of AIoT devices: scalar and multimedia. In general, a scalar
    AIoT device requires less computing power than a multimedia AIoT device and requires
    less than 0.5 TMAC to run a simple embedded deep learning algorithm (e.g., linear
    regression). In addition, a multimedia AIoT device requires more computation power
    to embed deep learning inference according to the applications such as face recognition
    (0.5–2 TMACs), AR/VR (1–4 TMACs), smart surveillance (2–10 TMACs) and autonomous
    vehicles (10S–100S TMACs) [27]. Deep learning has the ability to learn without
    being explicitly programmed, and it outperforms other algorithms for gesture analysis,
    video image processing (e.g., object detection and recognition) and speech processing
    (e.g., speech recognition and translation). These functions play key roles in
    time-sensitive human-machine interface (HMI) requirements for metaverse, digital
    twin, autonomous vehicle and Industry 4.0 applications. Here, we introduce the
    available frameworks for developing deep learning applications to be embedded
    on AIoT/IIoT/IoT devices in Section 4. 3.2. AIoT/IIoT/IoT Device Hardware In general,
    AIoT/IIoT/IoT devices have four main low-power components: - A processing unit
    and sensor interfaces based on a single-core or multicore MCU to implement AIoT/IIoT/IoT
    device safety and security; - Low-cost and low-power consumption sensors usually
    based on MEMS/NEMS sensors; - A power management unit which is essential to increase
    the lifetime of the AIoT device by minimizing its power consumption; - Wireless
    access medium based on single wireless access medium or multiple wireless access
    medium. Figure 4 illustrates the basic hardware architecture of AIoT/IIoT/IoT
    devices. Figure 4. Basic hardware architecture of AIoT/IIoT/IoT devices. Due to
    resource and cost constraints, the design of AIoT/IIoT/IoT devices is usually
    specific to meet application requirements such as safety, form factor, time sensitive
    (real-time constraint) and power consumption (lifetime). In fact, resource constraints
    condition the implementation decision to adopt a specific hardware (MCU and wireless
    access medium) and firmware architecture (e.g., smartwatch). Today, for the conventional
    von Neumann hardware implementation of AIoT/IIoT/IoT devices, two technologies
    are available: system-on-chip (SoC) and commercial-off-the-shelf (COTS). SoC is
    used to implement small form factor (e.g., smartwatch), low-power consumption
    and low-cost (mass production) AIoT/IIoT/IoT devices such as FitBit sense, Apple
    watch, Huawei watch and medical patches (e.g., Medtronic’s SEEQ cardiac monitoring
    system), whereas, COTS is applied for small series production, i.e., for testing
    and validation or more complex AIoT/IIoT/IoT devices. Note that the difference
    between the two approaches is mainly in the use of manufacturing technology because
    in terms of hardware and firmware architectures, the concepts applied are similar.
    3.2.1. Processing Unit of an AIoT/IIoT/IoT Device Over the past 5 years, IoT and
    AI technologies have made tremendous progress in the implementation of IoT devices
    driven by the requirements of the development of smartphones, autonomous vehicles
    (real-time object detection and recognition), smartwatches and metaverse (VR/AR).
    The current market trend focuses on implementing high-performance AIoT devices,
    which require symmetric/asymmetric multicore architecture for fault tolerance
    and computing power (deep learning). MCU manufactures such as ST and NXP provide
    MCU target portfolios based on ARM IP (e.g., ARM-M and ARM-A) for each application
    domain: smartwatch, smart care, smart home, smart car and factory automation.
    Note that, nowadays, ARM MCU IP dominates the embedded market, but this dominance
    will be reduced in the coming year due to the open-source RISC-V IP. By 2025,
    40% of application-specific integrated circuits (ASICs) will be designed by OEMs,
    up from around 30% today [28]. New emerging microcontroller manufacturers such
    as Espressif [29], STARFive Technology [30] and ANDES Technology [31] are offering
    new microcontroller portfolios dedicated to implementing low-cost AIoT devices
    based on open RISC-V (open source IP). Moreover, new MCUs based on subthreshold
    technology (e.g., Ambiq subthreshold power optimized technology (SPOT)) and MRAM
    significantly increase AIoT device resources (memory and computing power) while
    minimizing power consumption (e.g., Apollo4 from Ambiq) [32]. In addition, today,
    co-design SoC CAD tools (Figure 5) such as Cadence provide a wide choice of processing
    units from single core to symmetric, specific symmetric (DSP) and asymmetric multicore
    to ease the SoC implementation of AIoT/IIoT/IoT devices [33]. Figure 5. Cadence
    multi-IP co-design tools. 3.2.2. AIoT/IIoT/IoT Wireless Access Medium A wireless
    access medium is the critical component of AIoT/IIoT/IoT devices in terms of power
    consumption, data reliability and latency. Many advances in the field have been
    achieved but it is still not sufficient to meet their widespread use in terms
    of safety (reliability) and security, communication range and bandwidth, power
    consumption and interoperability, despite the many IEEE standards available. Therefore,
    new low-energy and high-bandwidth wireless access media, i.e., IEEE 802.11ah (Wi-Fi
    6 and Wi-Fi HaLow) and BLE 5.x. are being developed to meet different domain applications
    such as VR and AR. Wi-Fi and Bluetooth (classic and low energy) are set to dominate
    throughout the forecast period with almost three-quarters of connected devices
    using these technologies due to smart phones and smartwatches, and, as a result,
    local wireless communication represents 53% of the wireless access medium, according
    to the review in [34]. In Table 1, the Tx max current is indicated, knowing that
    wireless power consumption depends on the duty cycle and message size of the AIoT/IIoT/IoT
    application. Table 1. Different types of wireless access media. Note that Bluetooth
    and Wi-Fi are the most used wireless access media to implement smart object devices
    driven by smartphones and smartwatches. Hence, the IoT ecosystem, in particular,
    the wireless access medium continues to evolve quickly and is steadily driven
    by 5G/6G and Wi-Fi 6/7. 3.2.3. AIoT/IIoT/IoT Sensor As wireless access media,
    embedded sensors constitute the key components of AIoT/IIoT/IoT devices and significantly
    impact their form factor and power consumption (lifetime). According to a recent
    Allied Market Research report, the global smart sensor market will grow at a compound
    annual growth rate (CAGR) of 18.6 percent or USD 143.65 billion by 2027 (from
    2020). A sensor quantifies the measurand of the surrounding environment and provides
    an electrical output signal corresponding to the amount of measurands present.
    There are different classifications of sensor devices [45]. Table 2 presents a
    sensor classification by considering their signal stimulus type and the measurand
    (attribute). Table 2. Sensor classification based on sensor stimulus [45]. Nowadays,
    different technologies are used to implement different types of sensors, but from
    our point of view, MEMS/NEMS technologies are the most promising for implementing
    many types of sensors with low-cost, low-power consumption and small form factor
    for various applications from smart wearable sensors to Industry 4.0. In fact,
    MEMS/NEMS technologies can be used to implement low-cost sensors to measure stimulation
    signals, as shown in Table 2. These sensors can detect a wide spectrum of signals
    from the physical world. Due to economic and technological challenges, MEMS/NEMS
    technologies continue to make very rapid and significant progress [46]. CMOS and
    MEMS/NEMS technologies will be more and more tightly coupled, which will enable
    implemention of SoC smart, low-cost and low-power consumption smart object devices
    [47]. In the near future, CMOS VLSI circuit, MEMS/NEMS sensors (Figure 6a) [47]
    and CMOS-compatible MEMS/NEMS switch (Figure 6b) [48] may be implemented on the
    same substrate. These significant achievements will reduce the power consumption,
    cost and form factor of AIoT/IIoT/IoT devices. In fact, on the one hand, it will
    allow removal of the interface between the sensors and the MCU, and on the other
    hand, the MCU will only be activated (powered on or woken up) via a CMOS compatible
    MEMS/NEMS switch when a relevant sensory input has occurred. Figure 6. (a) MEMS
    and CMOS in the same substrate [47]; (b) MEMS/NEMS compatible CMOS switch [48].
    3.3. AIoT/IIoT/IoT Firmware 3.3.1. Operating System: Requirements, Trends and
    Challenges There are three classes of IIoT/IoT devices: high-end, middle-end and
    low-end. The high-end AIoT/IIoT/IoT devices such as smartphones have the necessary
    resources to run ANDROID, Linux or iOS (>32 GB of flash memory and >2 GB of DRAM).
    The middle-end AIoT/IIoT/IoT devices are based on multicore MCU (at least dual
    core) and have more than 1 MB of flash and RAM memory (e.g., ESP-EYE), while,
    in general, the low-end AIoT/IIoT/IoT devices have less than 1 MB of flash memory
    and 48 KB of RAM (e.g., smart lamp). Thereby, since the conception of the IoT
    concept in 1999 [49], many works have been conducted world-wide to develop new
    operating systems dedicated to resource constraint AIoT/IIoT/IoT devices: Contiki,
    TinyOS, LiveOS, Mantis, FreeRTOS [50,51] and Zephyr [52]. Native Contiki and TinyOS
    adopt the event-driven concept. An event is interruptible but not pre-emptible.
    As a result, a running event is continued to completion. Therefore, event-driven
    OS is not appropriate for real-time applications. Two concepts may be used to
    implement a real-time multitask operating system: monolithic and microkernel concepts.
    Mantis is a multithreaded and monolithic operating system, where FreeRTOS and
    Zephyr are based on the microkernel concept. In [53], the advantages and drawbacks
    of these two concepts are presented. Each task or thread has an assigned priority
    and, according to its priority level, an executing task may be pre-empted when
    a higher priority task is ready. Thus, a multitask operating system is appropriate
    for real-time applications to meet time-sensitive application requirements. TOSThread
    (modified versions of TinyOS) and Contiki multithread support the multitask operating
    system concept, developed complementarily on the basis of the event-driven kernels
    [50]. LiveOS is a native hybrid event-driven and multitask operating system. LiveOS
    has two schedulers: a multithreaded scheduler and an event-driven scheduler. Tasks
    can be classified into two types: RT tasks and non-RT tasks. RT tasks are pre-empted
    and are scheduled by the multithreaded scheduler. Non-RT tasks have less time
    constraints, and they can be scheduled by the event-driven scheduler. With the
    hybrid scheduling mechanism, preemption will no longer be performed among the
    non-RT tasks. Consequently, the thread switch frequency is decreased, and then
    the stack-shifting frequency can be reduced. By doing this, the LiveOS dynamic-stack
    scheduling performance can be improved [50]. FreeRTOS is based on a microkernel
    architecture and adopts a multithreading approach where each thread or process
    can be interrupted and be pre-empted to execute higher priority process. Zephyr
    is a multithreading operating system based on a microkernel and nanokernel architecture.
    Therefore, Zephyr is more flexible than FreeRTOS because it may be configured
    to run nanokernel to meet low-end IIoT/IoT devices (Figure 7). Figure 7. Zephyr
    firmware structure [52]. Today, FreeRTOS is the most used operating system for
    AIoT/IIoT/IoT devices and it is integrated into the middleware software package
    by most MCU manufacturers: ST, NXP, Silicon Labs, Renesas, Espressif, etc. The
    minimum memory resource requirements are 4 KB of RAM and 9 KB of ROM. More details
    of resource requirement are provided in [54]. Additionally, AWS facilitates IoT
    cloud integration for smart objects running FreeRTOS [55,56]. FreeRTOS and Zephyr
    operating systems support security and safety features. Furthermore, a microkernel
    architecture is more appropriate to manage processing units based on a multicore
    architecture, and it can be configured to adapt to the safety application requirements
    (fault tolerance). 3.3.2. Communication Protocol Stack Nowadays, the interoperability
    of AIoT/IIoT/IoT devices is always a challenge. Interoperability of AIoT/IIoT/IoT
    devices is essential for their development and widespread worldwide deployment.
    To make interoperability effective, three main components must be specified, standardized
    and adopted: wireless physical layer (e.g., BLE 5.x and IEEE802.15.4), communication
    protocol stack (e.g., OpenThread [57,58]) and application layer protocol (e.g.,
    Matter protocol [59]). It is a beginning, big IT players such as Google, Apple,
    Amazon and Huawei have adopted OpenThread and Matter protocol for smart home applications.
    OpenThread is an open-source, official/complete implementation of Thread. Kim
    et al. provided a good comparison between the IPv6 routing protocol for low-power
    and lossy networks (RPL) [57] and Thread. It is a complete network implementation
    including all network layers, and it is developed to meet the following requirements:
    security, scalability, resilience, energy efficiency and IP-based network [58].
    OpenThread adopts two-tiered mesh topology to comply with the no single point
    of failure principle (Figure 8a). A Thread network is composed of border routers
    (at least two) and Thread devices (up to 511). The relationship between Thread
    devices is based on the parent–child relationship. Figure 8. (a) Basic Thread
    network topology; (b) OpenThread devices; (c) matter application layer. There
    are two types of Thread devices (Figure 8b): full Thread devices (FTDs) and minimal
    Thread devices (MTDs). The radio of an FTD is always on (ready to act to minimize
    latency time). FTDs are classified into three categories: full end devices (FEDs),
    routers (up to 32) and router eligible end devices (REEDs). An MTD sends all the
    messages to the parent device and does not have the ability to multicast router
    address. MTDs are classified into two categories: minimal end devices (MEDs) and
    sleepy end devices (SEDs). A border router is the bridge between a Thread network
    and a non-Thread network and it configures external connectivity. A Thread leader
    is a dynamically self-elected router that manages routers, aggregates and distributes
    network configuration. It should be noted that the Thread router is elected as
    the leader without requiring user intervention. Matter is the successor of the
    connected home over IP (CHIP) project [59], and is an application layer that can
    unify devices that are operating under various IP protocols, allowing them to
    communicate across platforms (Amazon’s Alexa, Apple’s HomeKit, Google’s smart
    home ecosystems, etc.). Matter has been developed with the following goals and
    principles in mind [59]: Unifying: Matter will produce a new specification, built
    on existing market-tested technologies. Interoperable: The specification permits
    communication between any Matter-certified device, subject to user authorization.
    Secure: The specification takes advantage of modern security practices and protocols.
    User control: The end user controls permission to interact with devices. Federated:
    No single entity serves as a regulator or single point of failure for the root
    of trust. Robust: The set of protocols specify a complete lifecycle of a device—starting
    from the seamless out-of-box experience, through operational protocols, to device
    and system management specifications required for proper function in the presence
    of change. Low overhead: The protocols are practically implementable on low computing
    resource devices, such as MCUs. Low memory footprint IP protocol: The protocols
    are widely usable and deployable. Ecosystem-Flexible: The protocol must be flexible
    enough to accommodate deployment in ecosystems with different policies. Easy to
    use: The protocol should aim to provide smooth, cohesive, integrated provisioning
    and out-of-box experiences. Open: The Project’s design and technical processes
    should be open and transparent to the general public, including to non-members
    wherever it is possible. 4. AIoT/IIoT/IoT Device Use Case 4.1. TinyML Framework
    Today, many deep learning open source frameworks are available to ease the development
    of AI applications for server or cloud servers running on supercomputers (unlimited
    computational resources and memory) based on general purpose CPUs, tensor processing
    units (TPUs) and graphic processing units (GPUs): PyTorch (Meta), TensorFlow (Google),
    SageMaker (Amazon), Azure Machine Learning (Microsoft), Core ML (Apple), Caffe
    (BAIR UC Berkeley), etc. These frameworks are a valuable source of workloads for
    hardware researchers to explore hardware-software trade-offs. Since 2019, an emerging
    technology, named tiny machine learning (TinyML), has been addressing the challenges
    in designing power-efficient (mW range and below), deep learning models, to be
    integrated into embedded systems such as AIoT/IIoT/IoT devices [60]. Figure 9
    shows the deep learning algorithm development workflow: First, the dataset should
    be built according to the adopted neural network model (CNN, RNN, etc.). In some
    cases, to optimize the training step and improve performance, dataset preprocessing
    maybe needed. The training step is performed on a work station or supercomputer
    server by using TensorFlow or another framework (e.g., PyTorch). In general, the
    precision of the trained model is float32 and the required memory footprint for
    its parameters are important (greater than MCU available flash and SRAM). In the
    TensorFlow framework, TensorFlow Lite provides a converter to optimize the trained
    model in order to reduce the memory footprint and computation power (int8 instate
    of float32). Figure 9. TensorFlow framework for microcontrollers. From the obtained
    training model (the model saved in the xx.h5 file), the TensorFlow Lite framework
    converter generates three optimized models: int8 quantization, integer dynamic
    quantization and float16. One of the three files (e.g., int8 quantization tflite
    file) can be used in another tool such as the X-CUBE-AI [61] extension pack of
    STM32CubeMx [62] to generate C codes to be implemented on the ST MCU portfolio.
    Similar to the TensorFlow for the microcontroller framework, the Apache micro
    tensor virtual machine (µTVM) deep learning framework is based on two main components
    (Figure 10): µTVM runtime and AutoTVM. AutoTVM extracts operator requirements
    automatically from a neural network computation graph, and then leverages a machine
    learning guided optimizer to tune operator implementations for performance on
    real hardware. The µTVM runtime bloc is mainly a cross compiler to generate binary
    code to be executed by a target MCU [63]. The authors show that µTVM enables development
    of ML applications to be embedded on bare-metal devices such as STM Nucleo-F746ZG,
    STM STM32F746 Discovery and nRF 5340 Development Kit [63,64]. Figure 10. µTVM
    toolchain [63]. It should be noted that, in general, MCU manufacturers such as
    ST (X-CUBE-AI), DXP (eIQ ML) and ARM (ARM NN), provide TinyML tools that accept
    TensorFlow Lite converter file (tflite) to target their MCU portfolios. Figure
    11 presents the workflow using the TensorFlow framework to train and validate
    a deep learning model and to convert the validated model by using a TensorFlow
    Lite converter: Integer 8-bit Quantized TFLite Model. The generated tflite model
    is evaluated by using the X-CUBE-AI expansion pack of STM32CubeMX to target the
    ST MCU portfolio. Figure 11. Deep learning development workflow to target the
    ST MCU portfolio. 4.2. Feasibility of Implementing an AIoT Device for Plant Disease
    Detection Many works have been carried out worldwide by using deep learning algorithms
    in order to improve crop yield and to minimize fresh water use in different agriculture
    domains: disease detection, plant classification, land cover identification and
    precision livestock farming [65]. Li et al. reviewed the research progress over
    the past few years, focusing on deep learning models used to detect plant leaf
    disease identification [66]. Pandian et al. proposed a novel 14-layer deep convolutional
    neural network (14-DCNN) dedicated to plant disease detections (aloe vera, banana,
    apple, etc.). 14-DCNN was developed by using the TensorFlow framework and ran
    on an HP Z240 for prediction. On the 8850 test images, the proposed DCNN model
    achieved 99.9655% overall classification accuracy. 14-DCNN required 17,928,571
    parameters and 37 MB of memory [67]. The obtained results are promising but the
    necessary resources are too important to be embedded with the same algorithm on
    AIoT/IIoT/IoT devices. Therefore, how to implement an efficient DL algorithm to
    be embedded into an AIoT device for plant disease detection is a challenge. Nowadays,
    to the best of our knowledge, AIoT devices dedicated to the detection of plant
    diseases and pests are rare. In this paper, we show that a CNN deep learning algorithm
    dedicated to plant disease detection may be embedded into high-end low-cost and
    low-power IoT devices such as a STL32L4S5i discovery kit (B-L4S5I-IOT01A board)
    [68] and an ESP-EYE development board [69]. Since AIoT devices have limited computing
    power and memory resources, our approach is to implement a deep learning algorithm
    to detect diseases of one species of plant at a time, such as strawberry (healthy
    or scorch). When the strawberry leaf scorch is detected, its image is sent to
    the edge router or the IoT cloud server to diagnose the strawberry disease. The
    development, training and validation process is as follows: Anaconda navigator
    2.3.2, Spyder 5.2.2 and Python 3.9.12 are used to run TensorFlow Keras framework
    version 2.9.1. on a Lenovo ThinkPad X1 laptop. To train the CNN deep learning
    algorithm dedicated to strawberry disease detection (healthy or scorch), a strawberry
    Mendeley dataset containing 1000 images of healthy leaves and 1119 images of scorched
    leaves [70] is used. Figure 12a shows a sample of three healthy strawberry leaves
    and Figure 12b shows a sample of three scorched strawberry leaves. Hyper parameters
    such as batch, epoch and number of CNN units and layers are adjusted to obtain
    the best prediction results (Table 3). A TensorFlow Lite converter is used to
    convert the float32 model into float16 quantization, 8-bit integer quantization,
    and integer dynamic quantization. The converted models are validated, evaluated
    and embedded into the B-L4S5I-IOT01A board. An Int8 quantization tflite file is
    used to target a MCU. In this paper, we use the X-CUBE-AI expansion pack of STM32CubeMX
    and STM32CubeIDE [71] to evaluate and validate the trained model. It should be
    noted that most deep learning tools of MCU manufacturers such as ARM and DXP accept
    tflite model file to target their MCU portfolios. Moreover, Keras saved model
    file (xx.h5) may also be used. All the CNN network parameters generated from xx.h5
    use float32 precision, i.e., an FPU is needed to speed up real-time inference.
    Therefore, from the Keras xx.h5 model, the generated codes and data will consume
    at least four times more memory than the int8 quantization tflite file. It is
    important to note that our CNN model may be retrained to detect the diseases of
    other plants such as tomato and potato diseases. Figure 12. (a) Healthy leaves;
    (b) scorched leaves. Table 3. Accuracy results according to the CNN shape. The
    training parameters are initialized with the following values: seed = 256, epochs
    = 15 and batch size = 16. Table 3 shows the accuracy results of the four models:
    baseline Keras, float16 quantization, int8 quantization and dynamic quantization
    tflite, according to the shape of the CNN. 512 > 64 > 2 corresponds to the dense
    three-layer CNN, as illustrated by the following codes: x = Dense(512, activation
    = ‘relu’)(resnet.output) x = BatchNormalization()(x) x = Dense(64, activation
    = ‘relu’)(x) x = Dropout(0.2)(x) predictions = Dense(2, activation = ‘softmax’)(x).
    512 > 64 > 2 (578 neurons) provides the best prediction (99.2%) for float32 precision
    and the worst prediction for int8 quantization tflite model (85.7%). However,
    the dense four-layer CNN (128 > 64 > 32 > 2, 226 neurons) outperforms the dense
    three-layer CNN (578 neurons) for the int8 quantization tflite model with 96.4%
    prediction accuracy and for the number of neurons used (the loss of precision
    is 1.2% for the int8 quantization tflite model). Figure 13 and Figure 14 show
    that the memory resource requirements of this model are: Figure 13. MCU resource
    requirement validated using the X-CUBE-AI expansion pack of STM32CubeMX. Figure
    14. Application memory code sizes generated by STM32CubeIDE. Flash memory, 87.32
    KB; SRAM, 18.47 KB. Its complexity is 645,952 multiply accumulation complexity
    (MACC); therefore, an inference can be done every 8.07 ms (1 MACC per clock cycle,
    80 MHz MCU). Therefore, our model can perform real-time strawberry diseases detection
    with a 50-fps video color camera having 128 × 128 24-bit resolution. Due to its
    low resource requirement, our model can also be implemented on ESP-EYE and Sparkfun
    Edge Apollo3 Blue development boards [69,72]. According to the desktop and target
    validation results, the accuracy of the model does not change when the model is
    executed on the STM32B-L4S5i board, the difference between the desktop l2r and
    the target l2r is near zero (0.00000032). It should be noted that STM32CubeMx
    generates the model C code to be built and debugged on the STM32CubeIDE, as shown
    in Figure 15. The input image files of the inference program running on the STM32B-L4S5i
    board are manually downloaded one by one through the serial port using the Ymodem
    protocol. Figure 16 shows the results of the inference running on the STL32B-L4S5i
    discovery kit. The obtained results validate the feasibility of the AIoT device
    based on the STM32L4 microcontroller portfolio. However, the accuracy of strawberry
    diseases detection still needs to be validated in cultivated fields where the
    environment is continuously changing. Online training can continuously improve
    detection accuracy, but the lack of resources (computing power and memory) is
    the main obstacle. One of the solutions is that the CNN training model can be
    updated remotely, taking into account the evolution of the environment. Another
    solution is to implement an unsupervised learning CNN algorithm on the target
    MCU. Figure 15. C code model displayed on the STM32CubeIDE screen. Figure 16.
    Results of embedded inference running on the STL32L4S5i discovery kit (screen
    copy). Our CNN model requires only 18.47 KB of RAM and 87.32 KB of flash memory.
    Therefore, roughly, a low-cost and low-power AIoT device can be implemented using
    only four main COTS components, as shown in Figure 17. Figure 17. Bloc diagram
    of a low-power and low-cost BLE AIoT device dedicated to plant disease detection.
    The AIoT device dedicated to detect plant disease has: One low-cost and low-power
    (70 mW) CMOS USB camera (CMT-03MP-GC0308-H455) is used to sample strawberry leaves
    and send its images to the MCU through USB port [73]; One low-power MCU is used
    to run the deep learning algorithm; One BLE controller, which is connected to
    the MCU through the SPI interface and is used to send the detection result to
    the edge router; One TI TPS61030 (boost DC/DC converter), with 95% efficiency
    and adjustable voltage output (1.8–5.5 V) [74], is used to generate the power
    supply with two standard AA batteries (1.5 V), each having a capacity of 2500
    mAh. To evaluate the power consumption of the proposed AIoT device, two MCU portfolios,
    ST and Ambiq, are used. In continuous active mode, the maximum power consumption
    of each component is shown in Table 4. Table 4. Power consumption of the ST and
    Ambiq portfolios used to implement an AIoT device in continuous active mode. To
    calculate the power consumption of the AIoT device, Formula (1) is applied. 𝜑
    𝑡 = ∑ 𝑁 𝑖=1 𝜑 𝑖 (1) where N (N = 3) is the total number of components used. The
    power consumption of each component 𝜑 𝑖   is: 𝜑 𝑖 =𝑈×𝐼 𝑜𝑟  𝐼 1MHz ×𝑈×𝑀𝐶 𝑈 𝐹𝑟𝑒𝑞𝑢𝑒𝑛𝑐𝑦   (2)
    where U is the supply voltage (V), I is the current, and MCUfrequency is the operating
    frequency of the MCU. The power consumption of the AIoT device, based on the ST
    MCU portfolio 𝜑 𝑡 , is equal to (39.6 + 24.6 + 70) = 134.2 mW. The power consumption
    of the AIoT device, based on the Ambiq MCU portfolio, 𝜑 𝑡 , is equal to (1.32
    + 9 + 70) = 80.32 mW. In continuous active running mode, the lifetime of the AIoT
    device is calculated by applying Formula (3): 𝐿𝑖𝑓𝑒𝑇𝑖𝑚𝑒(h)= 𝐵𝑎𝑡𝑡𝑒𝑟𝑦 𝐶𝑎𝑝𝑎𝑐𝑖𝑡𝑦 (mAh)×𝑁×𝐵𝑎𝑡𝑡𝑒𝑟𝑦
    𝑜𝑢𝑡𝑝𝑢𝑡 𝑉𝑜𝑙𝑡𝑎𝑔𝑒 (V)×𝐷𝐶𝐷𝐶𝑐𝑜𝑛𝑣𝑒𝑟𝑡𝑒𝑟 𝑒𝑓𝑓𝑖𝑐𝑖𝑒𝑛𝑐𝑦 𝑃𝑜𝑤𝑒𝑟 𝑐𝑜𝑛𝑠𝑢𝑚𝑝𝑡𝑖𝑜𝑛 𝑜𝑓 𝐴𝐼𝑜𝑇 𝑑𝑒𝑣𝑖𝑐𝑒 (mW)   (3)
    where N is the battery numbers. The lifetimes of the two AIoT devices are calculated
    and their power consumption is compared with that of the HPZ240 tower PC (65 W),
    as illustrated in Table 5 [67]. Table 5. Lifetime and power consumption ratio
    compared with the HPZ240 tower PC. Note that the lifetime of AIoT device can be
    improved significantly by adopting sleep-wakeup technique as it consumes less
    power in sleep mode (Table 6). In fact, the evolution of plant diseases is slow;
    therefore, to monitor plant diseases, the sleep-wakeup technique can be adopted.
    In this case study, eight samples in daytime (from 9 h to 17 h, one sample every
    hour) are appropriate to detect plant disease. Table 6. Power consumption of the
    ST and Ambiq portfolios used to implement an AIoT device in sleep mode. The CMOS
    camera consumes 70 mW representing 52% of the total power consumption if the AIoT
    device is implemented using the ST MCU portfolio. Thus, to overcome this problem,
    an analog switch (LTC1470/LTC1471 of linear technology is used to switch-off the
    CMOS camera during the sleep period of the AIoT device (Figure 18). The plant
    disease detection application workflow during the active period is: Figure 18.
    AIoT device integrating analog switch. Sample an image (128 × 128 24-bit color
    image), it will take 20 ms (50 fps); Run inference to detect strawberry disease:
    scorch or healthy (5.38 ms); Send a short message or leaf scorch; Raw image (128
    × 128 × 24) to the edge router through the BLE controller (393.21 ms = 128 × 128
    × 24/1 MBPS). The total runtime required for the application is 418.6 ms. Notice
    that we place AIoT in the worst case by considering that during the active period
    all the 3 components are active during 1 s and the raw strawberry image is sent
    to the edge router. 𝜀 𝑎𝑐𝑡𝑖𝑣𝑒 𝑖 = 𝜑 𝑎𝑐𝑡𝑖𝑣𝑒 𝑖 × 𝑡 𝑖  𝑤ℎ𝑒𝑟𝑒  𝜑 𝑎𝑐𝑡𝑖𝑣𝑒 = ∑ 𝑖=1 𝑁 𝜑
    𝑎𝑐𝑡𝑖𝑣𝑒𝑟 𝑖  𝑎𝑛𝑑  𝑡 𝑖  𝑖𝑠 𝑡ℎ𝑒 𝑒𝑥𝑒𝑐𝑢𝑡𝑖𝑜𝑛 𝑡𝑖𝑚𝑒  𝜑 𝑠𝑙𝑒𝑒𝑝 𝑖 = 𝐼 𝑄 𝑖 × 𝑉 𝑖  𝑜𝑟  𝜑 𝑠𝑙𝑒𝑒𝑝
    𝑖 = 𝐼 𝑠𝑙𝑒𝑒𝑝 𝑖 × 𝑉 𝑖 where 𝜀 𝑠𝑙𝑒𝑒𝑝 𝑖 = ∑ 𝑁 𝑖=1 𝜑 𝑠𝑙𝑒𝑒𝑝 𝑖 × 𝑡 𝑖  𝑤ℎ𝑒𝑟𝑒  𝜑 𝑠𝑙𝑒𝑒𝑝
    𝑖 = 𝐼 𝑄 𝑖 × 𝑉 𝑖  𝑜𝑟  𝜑 𝑠𝑙𝑒𝑒𝑝 𝑖 = 𝐼 𝑠𝑙𝑒𝑒𝑝 𝑖 × 𝑉 𝑖  where and  𝑡 𝑖  is the sleep
    time  𝐼 𝑄 𝑖 is the quiescent current (e.g., quiescent current of the boost DC/DC
    converter) and 𝐼 𝑠𝑙𝑒𝑒𝑝 𝑖 is the sleep current of the component i (e.g., sleep
    current of the MCU). To give an idea of the lifetime of the AIoT device, each
    time it wakes up, the active time of the camera, MCU and BLE controller is 1 s.
    Therefore, per day, the total active time is 8 s and the rest of the time is sleep
    time. 𝐿𝑖𝑓𝑒𝑡𝑖𝑚𝑒(d)= (𝐵𝑎𝑡𝑡𝑒𝑟𝑦 𝑐𝑎𝑝𝑎𝑐𝑖𝑡𝑦 (mAh)×𝐵𝑎𝑡𝑡𝑒𝑟𝑦 𝑣𝑜𝑙𝑡𝑎𝑔𝑒(V)×𝐵𝑎𝑡𝑡𝑒𝑟𝑦 𝑛𝑢𝑚𝑏𝑒𝑟)×𝐷𝐶𝐷𝐶−𝑒𝑓𝑓𝑖𝑐𝑖𝑒𝑛𝑐𝑦
    ( 𝜀 𝑠𝑙𝑒𝑒𝑝 + 𝜀 𝑎𝑐𝑡𝑖𝑣𝑒 )×24 h (J) (4) By applying Formula (4), for the Ambiq MCU
    portfolio, the MCU is set to deep sleep 3 and the BLE, the lifetime of the AIoT
    device is 226 days (0.62 year). For the ST MCU portfolio, the MCU is set to RTC
    clocked by LES quartz in low drive mode and the BLE controller is set to deep
    sleep mode, its lifetime is 303 days (0.83 year). Note that the lifetime of the
    AIoT device can be further improved by activating each component just for the
    time needed, for example, the camera is switched on only 21 ms instead of 1 s.
    In this case study, we show that the lifetime of the AIoT device using the ST
    MCU portfolio based on classic CMOS technology, due to its very low deep sleep
    current, outperforms the Ambiq MCU portfolio based on subthreshold technology.
    Therefore, according to the AIoT device application running mode and the time
    constraints, its lifetime can be optimized by choosing appropriate MCU technology.
    4.3. Assessment of TinyML Framework TinyML and neuromorphic computing are both
    emerging technologies that aim at minimizing power consumption and improving neural
    network algorithms execution efficiency (ANN and SNN). However, their approaches
    are different: TinyML follows the ANN based on von Neumann architecture, whereas
    neuromorphic computing imitates the brain functioning by adopting nonconventional
    von Neumann architecture based on new material such as memristor. We showed in
    the previous section that the TinyML framework, with an appropriate hardware architecture,
    can be used to implement a low-cost and low-power AIoT device dedicated to strawberry
    disease detection with acceptable accuracy, a result that has not bene achieved
    before. Indeed, some ultra-low-power neuromorphic-embedded devices based on an
    analog VLSI circuit, such as silicon retina [18] and an implantable cardioverter
    defibrillator (ICD) system, have been implemented [19]. However, for their large-scale
    implementation, analog circuits’ variability and precision must be overcome [15].
    Moreover, due to the non-differentiable nature of SNN activation functions, it
    is difficult to train SNNs with direct backpropagation, and BP with surrogate
    gradient performance is behind conventional ANNs [79]. In addition, nowadays,
    there are few open SNN frameworks compared to those of the ANN. Furthermore, new
    skills are required to effectively exploit neuromorphic computing based on non-conventional
    von Neumann architecture in order to develop and train SNN models. For all these
    reasons, today, TinyML is more popular and easy to use because its development
    ecosystem is mature and available (open source). Furthermore, TinyML is the extension
    of well understood and mastered ANN frameworks. Nevertheless, work in neuromorphic
    computing will lead to the development of new materials such as low-power non-volatile
    memory and unsupervised learning algorithms. We believe that the next breakthrough
    technology, will result from cross-fertilization of ANN and SNN ecosystems. We
    plan to study a hybrid neural network (HNN) that combines input layers (SNN) based
    on MEMS/NEMS sensors and a new non-volatile memory to emulate neuronal synapses
    (IMC), and hidden and output layers based on ANN. Furthermore, advanced unsupervised
    ANN and SNN algorithms are an important lever for the development of distributed
    AIoT devices. Finally, due to the inherent multidisciplinarity of this disruptive
    new technology, teamwork is also a key element to drive the development and successfully
    implement of the next-generation AIoT devices. 5. Conclusions and Perspectives
    Smart everything is under way, driven by the development of digital twins, metaverse,
    Industry 4.0 and autonomous vehicles, and it has enjoyed an incredible synergy
    of advancements in its core hardware and software technologies such as firmware
    (Zephyr and OpenThread), deep learning for microcontroller tools (e.g., X-CUBE-AI),
    VLSI and MCU (ultra-low power subthreshold and new memory technologies and new
    asymmetric multicore RISC-V architecture), MEMS/NEMS (fusion of MEMS/NEMS and
    CMOS processes) and wireless technologies (e.g., low-energy high-bandwidth and
    medium-range Wi-Fi Halow). These advances enable the implementation of low-cost,
    low-power AIoT devices for Industry 4.0, smart homes, etc. Moreover, the interoperability
    of AIoT devices will soon be solved (e.g., Matter for smart home). These news
    trends will allow development of many applications hitherto inaccessible such
    as health and life sciences, smart home, smart agriculture, smart city, transport
    (autonomous vehicle) and logistics, Industry 4.0, entertainment (video game) and
    social media applications. Our future work will focus on an evaluation of the
    accuracy of field-embedded real-time plant disease detection according to the
    different tflite files (i.e., int8, integer dynamic quantization and float16)
    and color camera resolutions. In fact, the current plant disease detection application
    code is a bare-metal code, where, in general, an application runtime error occurrence
    is fatal (failure cannot be recovered). It should be noted that, nowadays, a TinyML
    framework to target specific asymmetric multicore microcontrollers is not yet
    available (lack of optimized libraries and converters). Consequently, it is not
    easy for a designer to implement high-performance AIoT devices. Moreover, we will
    investigate a hybrid neural network (HNN) to implement high-performance, low-power
    and low-cost AIoT devices. Author Contributions Conceptualization, K.M.H. and
    X.D.; writing—original draft preparation, K.M.H., H.S. and H.Z.; writing—review,
    designing, analysis and editing, K.M.H., H.S., H.D., H.Z., X.D. and C.d.V.; supervision,
    K.M.H. All the authors contributed in writing, reviewing, and structuring of the
    work. All authors have read and agreed to the published version of the manuscript.
    Funding This research received no external funding. Institutional Review Board
    Statement Not applicable. Informed Consent Statement Not applicable. Data Availability
    Statement Not applicable. Conflicts of Interest The authors declare no conflict
    of interest. References Mylonas, G.; Kalogeras, A.; Kalogeras, G.; Anagnostopoulos,
    C.; Alexakos, C.; Munoz, L. Digital Twins from Smart Manufacturing to Smart Cities:
    A Survey. IEEE Access 2021, 9, 143222–143249. [Google Scholar] [CrossRef] Fuller,
    A.; Fan, Z.; Day, C.; Barlow, C. Digital Twin: Enabling Technologies, Challenges
    and Open Research. IEEE Access 2020, 8, 108952–108971. [Google Scholar] [CrossRef]
    Padovano, A.; Longo, F.; Nicoletti, L.; Mirabelli, G. A Digital Twin Based Service
    Oriented Application for a 4.0 Knowledge Navigation in the Smart Factory, Elsevier.
    Available online: www.sciencedirect.com (accessed on 2 January 2021). Kaiblinger,
    A.; Woschank, M. State of the Art and Future Directions of Digital Twins for Production
    Logistics: A Systematic Literature Review. Appl. Sci. 2022, 12, 669. [Google Scholar]
    [CrossRef] Mukhopadhyay, S.C.; Tyagi, S.K.S.; Suryadevara, N.K.; Piuri, V.; Scotti,
    F.; Zeadally, S. Artificial Intelligence-based Sensors for Next Generation IoT
    Applications: A Review. IEEE Sensors J. 2021, 21, 24920–24932. [Google Scholar]
    [CrossRef] Transforma Insights. IoT Global Market. May 2019. Available online:
    https://transformainsights.com (accessed on 20 December 2021). Ferrari, P.; Flammini,
    A.; Rinaldi, S.; Sisinni, E.; Maffei, D.; Malara, M. Evaluation of communication
    delay in IoT applications based on OPC UA. In Proceedings of the 2018 Workshop
    on Metrology for Industry 4.0 and IoT, Brescia, Italy, 16–18 April 2018. [Google
    Scholar] [CrossRef] Yu, W.; Liang, F.; He, X.; Hatcher, W.G.; Lu, C.; Lin, J.;
    Yang, X. A Survey on the Edge Computing for the Internet of Things. IEEE Access
    2017, 6, 6900–6919. [Google Scholar] [CrossRef] Agricultural Internet of Things
    and Decision Support System for Precision Smart Farming; Castrignanò, A.; Buttafuoco,
    G.; Khosla, R.; Mouazen, A.; Moshou, D.; Naud, O. (Eds.) Elsevier: Amsterdam,
    The Netherlands, 2020. [Google Scholar] Pouyanfar, S.; Sadiq, S.; Yan, Y.; Tian,
    H.; Tao, Y.; Reyes, M.P.; Shyu, M.L.; Chen, S.C.; Iyengar, S.S. A Survey on Deep
    Learning: Algorithms, Techniques, and Applications. ACM Comput. Surv. 2018, 51,
    92. [Google Scholar] [CrossRef] Nilsson, N.J. The Quest for Artificial Intelligence
    A History of Ideas and Achievements; Cambridge University Press: Cambridge, UK,
    2009; Available online: http://www.cambridge.org/us/0521122937 (accessed on 19
    February 2023). Russell, S.; Norvig, P. Artificial Intelligence: A Modern Approach,
    3rd ed.; Prentice Hall: Hoboken, NJ, USA, 2010. [Google Scholar] Boedecker, J.;
    Burgard, W.; Nebel, B. Introduction Organizational Aspects, AI in Freiburg, Motivation,
    History, Approaches, and Examples, Albert-Ludwigs-Universität Freiburg, Foundations
    of Artificial Intelligence. 26 April 2017. Available online: http://ais.informatik.uni-freiburg.de/teaching/ss17/ki/slides/ai01_introduction_handout.pdf
    (accessed on 19 February 2023). Fabbri, A. De DeepBlue à AlphaGo Dernières Avancées
    en IA Appliquée Aux Jeux, CNRS. Available online: https://projet.liris.cnrs.fr/sycosma/wiki/lib/exe/fetch.php?media=media:presentations:deepblue-alphago-handout.pdf
    (accessed on 31 August 2018). Christensen, D.V.; Dittmann, R.; Linares-Barranco,
    B.; Sebastian, A.; Le Gallo, M.; Redaelli, A.; Slesazeck, S.; Mikolajick, T.;
    Spiga, S.; Menzel, S.; et al. 2022 Roadmap on Neuromorphic Computing and Engineering.
    Neuromorphic Comput. Eng. 2022, 2, 022501. [Google Scholar] [CrossRef] Schuller,
    I.K.; Stevens, R.; Pino, R.; Pechan, M. Neuromorphic Computing: From Materials
    to Systems Architecture. In Report of a Roundtable Convened to Consider Neuromorphic
    Computing Basic Research Needs; US Department of Energy: Washington, DC, USA,
    2015. [Google Scholar] Gerstner, W.; Kistler, W.M. Spiking Neuron Models—Single
    Neurons, Populations, Plasticity; Cambridge University Press: Cambridge, UK, 2002.
    [Google Scholar] Mead, C. Neuromorphic Electronic Systems. Proc. IEEE 1990, 78,
    1629–1636. [Google Scholar] [CrossRef] Schuman, C.D.; Potok, T.E.; Patton, R.M.;
    Birdwell, J.D.; Dean, M.E.; Rose, G.S.; Plank, J.S. A Survey of Neuromorphic Computing
    and Neural Networks in Hardware. arXiv 2017. [Google Scholar] [CrossRef] Lu, S.;
    Xu, F. Linear Leaky-Integrate-and-Fire Neuron Model Based Spiking Neural Networks
    and Its Mapping Relationship to Deep Neural Networks. Front. Neurosci. 2022, 16,
    857513. [Google Scholar] [CrossRef] Yang, Y.S.; Kim, Y. Approximate Digital Leaky
    Integrate-and-fire Neurons for Energy Efficient Spiking Neural Networks. IEIE
    Trans. Smart Process. Comput. 2020, 9, 252–259. [Google Scholar] [CrossRef] Yamazaki,
    K.; Vo-Ho, V.-K.; Bulsara, D.; Le, N. Spiking Neural Networks and Their Applications:
    A Review, Networks and Their Applications: A Review. Brain Sci. 2022, 12, 863.
    [Google Scholar] [CrossRef] [PubMed] CNR Italy. Neuromorphic Computing Technology
    (NCT) State of the Art Overview, Deliverable D1.3. 30 April 2020. Available online:
    https://neurotechai.eu/media/filer_public/da/6c/da6c4853-a574-4f55-8d88-e1d496bb0674/state_of_art_2020.pdf
    (accessed on 10 January 2022). Yang, S.; Wang, J.; Zhang, N.; Deng, B.; Pang,
    Y.; Azghadi, M.R. CerebelluMorphic: Large-scale Neuromorphic Model and Architecture
    for Supervised Motor Learning. IEEE Trans. Neural Netw. Learn. Syst. 2021, 33,
    4398–4412. [Google Scholar] [CrossRef] [PubMed] Wang, R.M.; Thakur, C.S.; van
    Schaik, A. An FPGA-Based Massively Parallel Neuromorphic Cortex Simulator. Front.
    Neurosci. 2018, 12, 213. [Google Scholar] [CrossRef] Intel. Neuromorphic Computing
    at Human Scale on Reconfigurable Hardware, Intel Programmable Solution Group,
    Intel Stratix 10 FPGA. Available online: https://www.intel.com/content/dam/www/central-libraries/us/en/documents/psg-wsu-neuromorphic-brief.pdf
    (accessed on 14 May 2023). Xu, J. Power Efficient Tensilica® Processor IP to Address
    New Trends in Consumer and Automotive Products; D&R IP-SOC Days; Cadence: Shanghai,
    China, 12 September 2019. [Google Scholar] Redmond, C. RISC-V: The Open Era of
    Computing; RISC-V International: Switzerland, 2021; Available online: https://events.linuxfoundation.org/wp-content/uploads/2021/03/RISC-V-New-Era-03-10-2021.pdf
    (accessed on 8 September 2022). Espressif. Available online: https://github.com/espressif/esp-azure#readme
    (accessed on 29 March 2022). VisionFive SBC. Quick Start Guide, Version: V1.1;
    StarFive Technology: Shanghai, China, 2022. [Google Scholar] ANDES Technology.
    AndesCore™ NX27V Processor 64-bit CPU with RISC-V Vector Extension, PB156-10;
    ANDES Technology: Hsinchu, Taiwan, August 2020. [Google Scholar] Ambiq Micro Inc.
    Apollo MCU Datasheet, Doc. ID: DS-A1-1p00, Revision 1.00; Ambiq Micro Inc.: Austin,
    TX, USA, March 2017; Available online: https://www.fujitsu.com/uk/Images/Apollo_MCU_Data_Sheet_DS-A1-1p00.pdf
    (accessed on 6 April 2023). Cadence. Cadence Tensilica Product Overview; Tensilica
    Days Hannover; Cadence: San Jose, CA, USA, September 2019; Available online: https://www.ims.uni-hannover.de/fileadmin/ims/aktivitaeten/Tensilica_Day/2019/1_td19_cadence.pdf
    (accessed on 30 March 2022). Aman, A.H.M.; Yadegaridehkordi, E.; Attarbashi, Z.S.;
    Hassan, R.; Park, Y.-J. A Survey on Trend and Classification of Internet of Things
    Reviews. IEEE Access 2020, 8, 111763–111782. [Google Scholar] [CrossRef] Infineon.
    WICED™ IEEE 802.11 a/b/g/n SoC with an Embedded Applications Processor; Document
    Number: 002-14829 Rev. Revised Tuesday; Cypress Semiconductor Corporation: San
    Jose, CA, USA, 23 March 2021. [Google Scholar] Infineon. CYW4356/CG8674, Document
    Number: 002-20538 Rev. Available online: www.infineon.com (accessed on 8 April
    2022). ZTE. Wi-Fi 6 Technology and Evolution White Paper; ZTE Corporation: Shenzhen,
    China, 2020. [Google Scholar] Texas Instruments. CC2520 Datasheet 2.4 GHz IEEE
    802.15.4/ZigBee® RF Transceiver Swrs068; Texas Instruments: Dallas, TX, USA, 2007.
    [Google Scholar] ST. STM32WB55xx STM32WB35xx Datasheet. January 2022 DS11929 Rev
    12. Available online: https://www.st.com/resource/en/datasheet/stm32wb55rc.pdf
    (accessed on 18 February 2023). Radiocrafts. RC1140/60/70-MBUS3. Available online:
    https://radiocrafts.com/uploads/RC1140_RC1160_RC1170-MBUS_Data_Sheet.pdf (accessed
    on 24 April 2020). IMEC. IEEE802.11ah Wi-Fi HaLoW RADIO IN TSMC 40 nm CMOS. Available
    online: https://www.imec-int.com/drupal/sites/default/files/201811/IEEE802.11AH%20WIFI%20HALOW%20RADIO%20IN%20TSMC%2040NM%20CMOS_digital.pdf
    (accessed on 4 April 2022). Radiocrafts. RC1701xx-MBUS. Available online: https://radiocrafts.com/uploads/rc1701xx-mbus_datasheet.pdf
    (accessed on 24 April 2020). Hoperf. Low Power Long Range Transceiver Module V1.0.
    Available online: https://www.hoperf.comRFM95/96/97/98(W) (accessed on 14 April
    2022). ST. Ultra-Low Power, High Performance, Sub-1 GHz Transceiver, DS11896—Rev
    9—September 2021. Available online: https://www.st.com/resource/en/datasheet/s2-lp.pdf
    (accessed on 18 February 2023). Yokogawa Electric Corporation. Types of Sensors;
    Yokogawa Electric Corporation: Musashino, Japan, 12 February 2022; Available online:
    https://www.yokogawa.com/special/sensing-technology/usage/types-of-sensors/ (accessed
    on 20 April 2022). Zhu, J.; Liu, X.; Shi, Q.; He, T.; Sun, Z.; Guo, X.; Liu, W.;
    Sulaiman, O.B.; Dong, B.; Lee, C. Development Trends and Perspectives of Future
    Sensors and MEMS/NEMS. Micromachines 2020, 11, 7. [Google Scholar] [CrossRef]
    Qu, H. Review CMOS MEMS Fabrication Technologies and Devices. Micromachines 2016,
    7, 14. [Google Scholar] [CrossRef] Sikder, U.; Usai, G.; Yen, T.T.; Horace-Herron,
    K.; Hutin, L.; Liu, T.J. Back-End-of-Line Nano-Electro-Mechanical Switches for
    Reconfigurable Interconnects. IEEE Electron Device Lett. 2020, 41, 625–628. [Google
    Scholar] [CrossRef] Ashton, K. That ‘Internet of Things’ Thing. RFID J. 2009,
    22, 97–114. [Google Scholar] Liu, X.; Hou, K.M.; De Vaulx, C.; Xu, J.; Yang, J.;
    Zhou, H.; Shi, H.; Zhou, P. Memory and Energy Optimization Strategies for Multithreaded
    Operating System on the Resource-Constrained Wireless Sensor Node. Sensors 2015,
    15, 22–48. [Google Scholar] [CrossRef] Musaddiq, A.; Zikria, Y.B.; Hahm, O.; Yu,
    H.; Bashir, A.K.; Kim, S.W. A Survey on Resource Management in IoT Operating Systems.
    IEEE Access 2018, 6, 8459–8482. [Google Scholar] [CrossRef] Nashif, A. Zephyr
    Project Overview. Available online: www.zephyrproject.org (accessed on 14 December
    2021). Raymundo Belleza, R.; de Freitas Pignaton, E. Performance study of real-time
    operating systems for internet of things devices. IET Softw. 2018, 12, 176–182.
    [Google Scholar] [CrossRef] Sabri, C.; Kriaa, L.; Azzouz, S.L. Comparison of IoT
    constrained devices operating systems: A Survey. In Proceedings of the 2017 IEEE/ACS
    14th International Conference on Computer Systems and Applications (AICCSA), Hammamet,
    Tunisia, 30 October–3 November 2017. [Google Scholar] [CrossRef] Microsoft. Azure
    IoT Samples Using Azure IoT Middleware for FreeRTOS. Available online: https://github.com/Azure-Samples/iot-middleware-freertos-samples
    (accessed on 14 December 2022). Amazon. Available online: https://aws.amazon.com/fr/iot-core/
    (accessed on 14 December 2022). Kim, H.S.; Kumar, S.; Culler, D.E. Thread/OpenThread:
    A Compromise in Low-Power Wireless Multihop Network Architecture for the Internet
    of Things. IEEE Commun. Mag. 2019, 57, 55–61. [Google Scholar] [CrossRef] OpenThread.
    Available online: https://openthread.Io (accessed on 14 April 2022). CSA. Build
    with Matter|Smart Home Device Solution–Connectivity. Available online: https://csa-iot.org/all-solutions/matter/
    (accessed on 18 February 2023). Warden, P.; Situnayake, D. TinyML Machine Learning
    with TensorFlow Lite on Arduino and Ultra-Low-Power Microcontrollers, 1st ed.;
    O’Reilly Media: Sebastopol, CA, USA, 2019; ISBN 13 978-1492052043. [Google Scholar]
    ST. X-CUBE-AI Artificial Intelligence (AI) Software Expansion for STM32Cube; STMicroelectronics:
    Geneva, Switzerland, 2021; Available online: https://www.st.com/resource/en/data_brief/x-cube-ai.pdf
    (accessed on 18 February 2023). ST. STM32CubeMX for STM32 Configuration and Initialization
    C Code Generation. June 2022 UM1718 Rev 38. Available online: https://www.st.com/resource/en/data_brief/stm32cubemx.pdf
    (accessed on 18 February 2023). Yan, E.; Chen, T.; Zheng, L.; Jiang, Z.; Moreau,
    T.; Guestrin, C.; Ceze, L.; Krishnamurthy, A. Using Autotvm to Automatically Generate
    Deep Learning Libraries for Mobile Devices. In Proceedings of the 2nd SysML Conference,
    Palo Alto, CA, USA, 31 March–1 April 2019. [Google Scholar] TVM. Available online:
    https://tvm.apache.org/docs/topic/microtvm/index.html (accessed on 14 April 2022).
    Ünal, Z. Smart Farming Becomes Even Smarter with Deep Learning-A Bibliographical
    Analysis. IEEE Access 2020, 8, 105587–105609. [Google Scholar] [CrossRef] Li,
    L.; Zhang, S.; Wang, B. Plant Disease Detection and Classification by Deep Learning-A
    Review. IEEE Access 2021, 9, 56683–56698. [Google Scholar] [CrossRef] Pandian,
    J.A.; Kumar, V.D.; Geman, O.; Hnatiuc, M.; Arif, M.; Kanchanadevi, K. Plant Disease
    Detection Using Deep Convolutional Neural Network. Appl. Sci. 2022, 12, 6982.
    [Google Scholar] [CrossRef] ST. B-L4S5I-IOT01A: Discovery Kit for IoT Node, Multi-Channel
    Communication with STM32L4+ Series. 14 April 2020. Available online: https://www.st.com/resource/en/data_brief/b-l4s5i-iot01a.pdf
    (accessed on 18 February 2023). Espressif. ESP-EYE Getting Started Guide. Available
    online: https://cdn-shop.adafruit.com/product-files/4095/4095_Getting_Started_Guide.md_at_master____espressif_esp-who____GitHub.pdf
    (accessed on 18 February 2023). Mendeley Data for: Identification of Plant Leaf
    Diseases Using a 9-Layer. Available online: https://data.mendeley.com/datasets/tywbtsjrjv/1
    (accessed on 18 February 2023). ST. STM32CubeIDE User Guide, UM2609-Rev 6. 2022.
    Available online: https://www.st.com/resource/en/data_brief/stm32cubeide.pdf (accessed
    on 18 February 2023). Sparkfun, SparkFun Edge Development Board-Apollo3 Blue.
    Available online: https://www.sparkfun.com/products/15170 (accessed on 18 February
    2023). Camera-Module, Low-Power CMOS Camera: CMT-03MP-GC0308-H455. Available online:
    http://www.camera-module.com/product/03mpcameramodule/low-power-low-cost-vga-camera-module-gc0308-sensor.html
    (accessed on 18 February 2023). TI. Low-Power DC/DC Converters, 95% Efficient,
    1-A Boost Converter with Low Battery Indicator. Available online: https://www.ti.com/lit/gpn/tps61030
    (accessed on 18 February 2023). ST. STM32L4S5xx STM32L4S7xx STM32L4S9xx, DS12024
    Rev 4; STMicroelectronics: Geneva, Switzerland, 2020; Available online: https://www.st.com/resource/en/datasheet/stm32l4s5vi.pdf
    (accessed on 18 February 2023). ST. BlueNRG-MS: Upgradable Bluetooth® Low Energy
    Network Processor. Available online: https://www.st.com/en/wireless-connectivity/bluenrg-ms.html
    (accessed on 18 February 2023). Ambiq. Apollo4 SoC Ultra-low Power Apollo SoC
    Family, Doc. ID: DS-A4-1p3p0, Doc. Revision: 1.3.0. February 2023. Available online:
    https://contentportal.ambiq.com/documents/20123/388400/Apollo4-SoC-Datasheet.pdf
    (accessed on 18 February 2023). Ambiq Micro Inc. Apollo 4 BLE Controller Datasheet;
    Ambiq Micro, Inc.: Austin, TX, USA, 2020; Available online: https://ambiq.com/wp-content/uploads/2020/09/Apollo4-BLE-Controller-DS-v0p2p0.pdf
    (accessed on 18 February 2023). Nunes, J.D.; Carvalho, M.; Carneiro, D.; Cardoso,
    J.S. Spiking Neural Networks: A Survey. IEEE Access 2022, 10, 60738–60764. [Google
    Scholar] [CrossRef] Disclaimer/Publisher’s Note: The statements, opinions and
    data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2023 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Hou, K.M.; Diao, X.; Shi, H.; Ding, H.; Zhou, H.; de Vaulx,
    C. Trends and Challenges in AIoT/IIoT/IoT Implementation. Sensors 2023, 23, 5074.
    https://doi.org/10.3390/s23115074 AMA Style Hou KM, Diao X, Shi H, Ding H, Zhou
    H, de Vaulx C. Trends and Challenges in AIoT/IIoT/IoT Implementation. Sensors.
    2023; 23(11):5074. https://doi.org/10.3390/s23115074 Chicago/Turabian Style Hou,
    Kun Mean, Xunxing Diao, Hongling Shi, Hao Ding, Haiying Zhou, and Christophe de
    Vaulx. 2023. \"Trends and Challenges in AIoT/IIoT/IoT Implementation\" Sensors
    23, no. 11: 5074. https://doi.org/10.3390/s23115074 Note that from the first issue
    of 2016, this journal uses article numbers instead of page numbers. See further
    details here. Article Metrics Citations Scopus   6 Crossref   7 ads   1 Web of
    Science   2 PubMed   1 PMC   1 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 6. Jan 16. Jan 26. Jan 5. Feb
    15. Feb 25. Feb 6. Mar 16. Mar 26. Mar 0k 1k 2k 3k 4k 5k For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Trends and Challenges in AIoT/IIoT/IoT Implementation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mathur S.
  - Kalla A.
  - Gür G.
  - Bohra M.K.
  - Liyanage M.
  citation_count: '18'
  description: In recent times, IoT has emerged as a new paradigm for the interconnection
    of heterogeneous, resource-constrained, and communication-capable smart devices.
    It has been anticipated as a key enabler for various domains of applications such
    as health care, automotive, agriculture, industrial operations, automation, energy,
    and the next generation of living. However, the current IoT applications face
    significant challenges in terms of the huge amount of collected data, intensive
    data exchange, security, privacy, centralized processing, and interoperability.
    To mitigate many of these issues, blockchain has been identified as a promising
    innovative technology. Blockchain, in conjunction with smart contracts, has received
    significant attention both from the industry and academia and offers features
    such as irreversibility, non-repudiation, proof of provenance, fault tolerance,
    pseudonymity, decentralized operations and decision-making, and distributed ledger.
    The integration of blockchain with IoT requires essential insights concerning
    the application areas, scalability, security, privacy, data college and storage,
    performance, and governance. Thus, this paper intends to expound on the opportunities
    and key aspects of using blockchain in the IoT landscape. Specifically, this paper
    surveys the utilization of blockchain for various IoT applications. Besides, the
    paper distinguishes different technical aspects and presents the associated research
    challenges. At last, future research directions are discussed depending on the
    lessons learned.
  doi: 10.1016/j.comnet.2023.109726
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Background 3. Blockchain-based IoT
    applications 4. Technical aspects and challenges 5. Lesson learned and future
    work 6. Conclusion CRediT authorship contribution statement Declaration of Competing
    Interest Data availability References Vitae Show full outline Cited by (23) Figures
    (10) Show 4 more figures Tables (19) Table 1 Table 2 Table 3 Table 4 Table 5 Table
    6 Show all tables Computer Networks Volume 227, May 2023, 109726 Survey paper
    A Survey on Role of Blockchain for IoT: Applications and Technical Aspects Author
    links open overlay panel Shikha Mathur a, Anshuman Kalla b, Gürkan Gür c, Manoj
    Kumar Bohra a, Madhusanka Liyanage d Show more Share Cite https://doi.org/10.1016/j.comnet.2023.109726
    Get rights and content Abstract In recent times, IoT has emerged as a new paradigm
    for the interconnection of heterogeneous, resource-constrained, and communication-capable
    smart devices. It has been anticipated as a key enabler for various domains of
    applications such as health care, automotive, agriculture, industrial operations,
    automation, energy, and the next generation of living. However, the current IoT
    applications face significant challenges in terms of the huge amount of collected
    data, intensive data exchange, security, privacy, centralized processing, and
    interoperability. To mitigate many of these issues, blockchain has been identified
    as a promising innovative technology. Blockchain, in conjunction with smart contracts,
    has received significant attention both from the industry and academia and offers
    features such as irreversibility, non-repudiation, proof of provenance, fault
    tolerance, pseudonymity, decentralized operations and decision-making, and distributed
    ledger. The integration of blockchain with IoT requires essential insights concerning
    the application areas, scalability, security, privacy, data college and storage,
    performance, and governance. Thus, this paper intends to expound on the opportunities
    and key aspects of using blockchain in the IoT landscape. Specifically, this paper
    surveys the utilization of blockchain for various IoT applications. Besides, the
    paper distinguishes different technical aspects and presents the associated research
    challenges. At last, future research directions are discussed depending on the
    lessons learned. Previous article in issue Next article in issue Keywords BlockchainSmart
    contractsDLTInternet of Things (IoT) 1. Introduction The Internet of Things (IoT)
    is a network of physical objects called “things”, such as home appliances, machines,
    and various digital objects. These things or devices are mostly resource-constrained
    and can perform operations such as sensing, monitoring, pre-processing (i.e.,
    lightweight computing), and exchanging of data [1]. Moreover, these devices are
    communication-capable and are connected over the Internet using different underlying
    technologies and protocols such as RFID, Bluetooth Low Energy (BLE), Wi-Fi, Zigbee,
    LoRa, and Sigfox [2]. According to [3], the number of such connected devices will
    reach 75 billion by the end of 2025. Further, it is expected that by 2030 the
    number of devices connected to the Internet will touch the mark of 500 billion
    [4]. In 1982 the first practical application of IoT was implemented when a Coca-Cola
    machine installed at Carnegie Melon University was connected with APRANET to find
    if the available drinks were cold or not [3]. Later, the term Internet of Things
    was given by Kevin Ashton in 1999, and in the 2000, LG launched the world’s first
    internet-enabled refrigerator [5]. Since then, the world has witnessed enormous
    growth in IoT-driven devices and applications. The evolution from the early days
    of the Internet to the present IoT comprises five phases [6]. Initially, it started
    with connecting computers, whereas in the second phase, the concept of the World
    Wide Web (WWW) came and led to connecting computers all around. The third phase
    started with the emergence of the mobile internet, which connected mobile devices
    to the Internet. In the next phase (i.e., the fourth phase), people started joining
    the Internet by using social networking platforms, and finally, the concept of
    IoT originated [1], [6]. Some of the promising applications of IoT are healthcare,
    smart home, smart city, smart grid, and Unmanned Aerial Vehicles (UAVs) [1]. Despite
    the hype, several issues revolve around IoT, like centralization, massive data
    gathering, scalability, security threats, privacy issues, resource limitation,
    mobility, and interoperability [3], [7]. Blockchain (BC) can play a cardinal role
    in mitigating these issues thereby paving the way for a blockchain-enabled IoT
    ecosystem. Table 1. Summary of the main acronyms used in this paper. Acronym Definition
    BC Blockchain BTC Bitcoin CTN Communicating Things Network CH Cluster Head CHC
    Centralized Healthcare Controller DLT Distributed Ledger Technology DAG Directed
    Acyclic Graph DPoS Delegated Proof of Stake DApps Decentralised Applications DCS
    Decentralised, Consistent & Scalable DoS Denial of Service EHR Electronic Health
    Record EV Electric Vehicle FSC Food Supply Chain HC Healthcare HIPAA Health Insurance
    Portability & Accountability Act IoT Internet of Things ICO Initial Coin Offering
    ITO Initial Token Offering IIoT Industrial Internet of Things IV Intelligent Vehicle
    ITS Intelligent Transportation System LMDS Lamport Merkle Digital Signature MAS
    Multi-Agent System MEC Mobile Edge Computing MT Mobile Terminals NONCE Number
    Used Only Once NT Network Theory PoW Proof of Work PoS Proof of Stake PBFT Practical
    Byzantine Fault Tolerance PoET Proof of Elapsed Time PoI Proof of Importance PoB
    Proof of Burn P2P Peer-to-Peer PAT Principal Agent Theory PK Public Key RBV Resource-Based
    View SC Smart Contracts SATS Satoshi SCM Supply Chain Management SHS Smart Home
    System Tx Transaction TxID Transaction Identification TCA Transaction Cost Analysis
    UAV Unmanned Aerial Vehicle UTC Coordinated Universal Time WBAN Wireless Body
    Area Network BC is one of the most prominent types of Distributed Ledger Technology
    (DLT) where the ledger (i.e., database of transactions) is distributed among all
    the nodes in a Peep-to-Peer (P2P) network [8]. The word blockchain implies the
    data structure used to build and manage the distributed ledger. Fundamentally,
    the data structure used for the ledger in BC is a growing sequence of logically
    linked (i.e., cryptographically chained) blocks to build a chain of blocks [9].
    A block is a unit that contains a set of verified transactions that occurs during
    a given time window and are cryptographically secured. Every block is connected
    with the previous block using a hash-based chain. This means the hash of the previous
    block is stored in the current block. The first block of a blockchain is called
    the genesis block [10], which does not have any transaction. Moreover, the value
    of the ‘previous block hash’ field is set to zero in the genesis block [11]. BC
    intensively uses cryptographic techniques such as hashing, public–private key
    pair, digital signature, Merkle tree, and time-stamping. Moreover, it employs
    a consensus mechanism to establish an agreement in a decentralized environment
    [12]. Some unique features of BC technology are tamper-persistent, transparency,
    non-repudiation, proof of provenance, fault tolerance, pseudonymity, decentralized
    decision-making, and distributed ledger. From the application point of view, Bitcoin
    is the most popular and the first use case of blockchain technology specially
    designed for monetary transactions. Nevertheless, with time, BC has been found
    beneficial for many other domains such as healthcare, supply chain, education,
    insurance, and logistics [13]. The meanings of the abbreviations used in this
    paper are introduced in Table 1. 1.1. Advantages of blockchain in IoT BC ends
    up being quite possibly the most promising advancement to unleash the maximum
    potential of IoT. The advantages of using BC for IoT are discussed as follows
    [14]: 1.1.1. Reduced cost For every emerging technology, the cost is an essential
    factor of consideration. IoT follows a centralized approach, and numerous intermediary
    (third-party) services are also used. Each of these services charges some fee
    which gets added to the overall cost [15]. As a result, the overall cost gets
    inflated. On integrating BC with IoT, the BC P2P decentralized network acts as
    backend; thus, the centralized server is no longer required. Furthermore, using
    smart contracts helps eliminate the need for third-party services. Therefore,
    BC for IoT reduces intermediate cost or brokerage fees [14], [16], [17]. 1.1.2.
    Trust among parties Trust is defined as when all the participating nodes in the
    network can communicate and share data without worrying about the integrity of
    the data [18]. For communication and data sharing in the network, maintaining
    trust is important [18]. It can be achieved by removing malevolent nodes from
    the network [18]. IoT involves a lot of interconnected devices and an overwhelming
    amount of data is shared and processed, which requires trust among the users to
    share data. But these IoT devices do not communicate with each other due to possibility
    of a loss of data [19]. But, by integrating BC with IoT brings trust among the
    participants. Because of its decentralized and distributed trust mechanism, all
    the participating nodes can view each transaction’s details and validation is
    done by establishing the consensus, which helps in maintaining the transparency
    and trust between the users [16]. 1.1.3. Privacy Privacy is defined as protection
    of information from exposure to unauthorized ones [20]. It can be either data
    privacy or user privacy or location privacy. The availability of private sensor
    data such as personal identifying information or indirect information like location
    [21], through which users identity can be revealed to malicious users is loss
    of privacy [20]. It is important to maintain privacy for successful implementation
    of IoT. In particular, involves several centrally connected devices, continuously
    transmitting data and numerous companies are monitoring this data, and sometimes
    they can misuse personal data or identity [22]. But by combining BC with IoT,
    a blockchain-generated address is provided to all the participants and interactions
    occur between these addresses. The physical world identity of these participants
    is not revealed. For IoT applications that involve sensitive information, this
    feature will be of great use to hide the real identity [23], [24]. 1.1.4. Security
    Security is defined as the protection against the cyberattacks and vulnerabilities.
    Authentication, authorization, integrity, interoperability, or adaptability are
    the key aspects for any system to maintain security [18]. Maintaining security
    means security of device, data transmission and data storage [25]. Security in
    terms of IoT is protecting devices present in the network, from intruders [25].
    In the large-scale deployment of IoT, handling security vulnerabilities is a major
    challenge due to heterogeneity of the network. BC intrinsically supports security
    by establishing trust through its immutable and decentralized nature [26]. Since
    it intensively uses cryptographic mechanisms like PKI, hashing, Merkle tree, and
    timestamp as well as uses distributed consensus algorithm for adding new content
    in the distributed ledger. Hashing makes it impossible to alter the data and a
    decentralized peer-to-peer approach makes the network resilient against failures
    [27]. Download : Download high-res image (129KB) Download : Download full-size
    image Fig. 1. Statistics of the surveyed research works. Download : Download high-res
    image (495KB) Download : Download full-size image Fig. 2. Countries participating
    in BC-IoT research. Table 2. Top 10 countries based on publication in the field
    of BC IoT. Rank Country Publications Citations 1 China 191 1802 2 India 158 889
    3 United States 116 1124 4 South Korea 55 976 5 United Kingdom 53 403 6 Australia
    44 1417 7 Canada 40 599 8 Saudi Arabia 38 225 9 France 37 399 10 United Arab Emirates
    34 824 1.2. Motivation The central aim of this survey is to focus on what BC can
    bring to the IoT landscape. To this aim, we carried out an in-depth study of various
    contributions made by academia and industry in the domain of BC-integrated IoT.
    Moving forward, we focused on different use cases emerging from BC-integrated
    IoT, such as healthcare, smart cities, smart grids, autonomous vehicle, and UAVs.
    Moreover, efforts have been made to explore numerous technical aspects when integrating
    BC with IoT and identify the challenges related to these technical aspects. Furthermore,
    the open issues and future research directions are also discussed in this survey
    paper. In view of the above discussion, although numerous survey papers exist,
    not many specifically address the integration of BC and IoT for a wide range of
    IoT applications, along with the technical aspects. A survey of existing BC protocols
    for the IoT was presented in [28]. Numerous surveys on BC technology based on
    different viewpoints, such as its architecture, types, consensus algorithm, and
    characteristics, were introduced in [29], [30], [31]. Various studies exploring
    the role of BC in IoT and the impacts of integrating BC with IoT were presented
    in [32], [33], [34], [35], [36], [37] and the challenges in coordinating BC and
    IoT were presented in [7], [14], [16], [23], [38]. Works [14], [39], [40] discussed
    the future directions in BC technology. Table 4 summarizes the recent survey papers
    on using BC for IoT. In particular, the table shows (in brief) the main contribution
    of the recent surveys, the IoT applications they study, and the BC technical aspects
    they emphasize. Although the existing survey papers cover different IoT applications
    and BC technical aspects, it is difficult to find one paper that studies the use
    of BC for a wide range of IoT applications in detail. Moreover, most existing
    surveys focus on the individual aspects, i.e., either application areas or the
    technical aspects with challenges. Thus, the motivation of this paper is four-fold:
    • To study and investigate the applications and technical aspects of integrating
    blockchain and IoT in-depth. • To cover as many as eight different BC-IoT applications,
    including healthcare, smart homes, smart cities, supply chain, autonomous vehicles,
    smart grid, IIoT, and UAVs. • To classify the existing research works into different
    categories for each of the eight applications considered. • To explore the challenges
    related to the technical aspects (such as scalability, security, privacy, data
    storage, and power consumption) and their possible solutions for the BC-integrated
    IoT ecosystem. • To conduct an exhaustive survey by including the most recent
    research in the space of BC-enabled IoTs. Fig. 1 depicts year-wise statistics
    of the research works surveyed in this paper. We started with a first-level bibliometric
    analysis to further strengthen our motivation behind conducting this survey. To
    do so, the Scopus database is used to extract the bibliometric data that covers
    the research work done in the blockchain and IoT landscape., The data exported
    from Scopus included details like the publication year, author, institution, and
    source journal. The search is done using the title. In total, 477 valid papers
    were exported using Scopus. Next, the VOSviewer tool is used to visualize the
    extracted data and plot the graphs [41]. Fig. 2 shows the geographic distribution,
    i.e., the countries participating in BC-IoT research. As shown in Table 2, China
    has the highest number of publications and citations on Blockchain-IoT, followed
    by India and the United States. Fig. 3 shows the BC-IoT co-citation journal network,
    which helps in analyzing the number of articles from different journals and the
    frequency of citations. The bigger the node size, implies more the number of articles
    published. Moreover, Table 3 depicts the top five productive journals in Blockchain
    for IoT research. IEEE Internet of Things Journal has the highest number of publications.
    Download : Download high-res image (366KB) Download : Download full-size image
    Fig. 3. BC-IoT Co-Citation journal network. Table 3. Top 5 productive journals
    in BC IoT research. Rank Sources Documents Citations 1 IEEE Internet of Things
    Journal 41 696 2 Lecture Notes in Computer Science 34 82 3 Advances in Intelligent
    Systems and Computing 30 176 4 ACM International Conference Proceeding Series
    30 165 5 IEEE Access 29 722 1.3. Our contribution One of the key contributions
    of this work is to explore the capabilities of BC technology and to study how
    BC can resolve the potential challenges of emerging IoT applications. In particular,
    the current survey covers the role of BC in numerous IoT application areas such
    as healthcare, smart homes, supply chain and logistics, smart city, smart grid,
    autonomous vehicles, UAVs, and Industrial IoT (IIoT). Moreover, the present survey
    puts the important technical aspects (that need to be considered for BC-enabled
    IoT applications) under a magnifying lens. In this direction, the challenges related
    to these technical aspects are explored, and several proposed solutions to overcome
    these challenges are discussed. Towards the end, the lesson learned from the literature
    survey is presented, which aims to consolidate answers to how the maximum benefits
    can be leveraged by integrating BC with emerging IoT applications. Table 4. Summary
    of recent surveys on blockchain for IoT. Ref. Main contribution Applications BC
    technical aspects Relevance to IoT Empty Cell Empty Cell HC SC SCL SG AV UAV SH
    IIoT Sca Sec DS CA PP Empty Cell [35] Discussed the issues in IoT systems and
    how BC can mitigate these issues. Also discussed why the BC platform is needed
    to implement IoT. – – – – – – – – ✓ – ✓ – – Presented how BC as a service can
    be implemented for IoT applications and discussed the future research directions
    in BC-IoT. [37] Discussed the use of BC in IoT considering four scenarios - access
    control, data provenance, integrity, trusted third party, and automatic payment
    platform. – ✓ – – – – – – – – – – – Discussed explicitly the research challenges
    for all the four different application scenarios considered. [42] Briefly introduces
    BC technology with its challenges and limitations with exploring its potential
    applications. ✓ ✓ ✓ ✓ – – ✓ – ✓ ✓ ✓ – – Provides a detailed discussion over the
    convergence of BC and IoT, Highlighted the challenges and opportunities in IoT
    and BC integration, IoT application areas using BC. [43] Compared several consensus
    algorithms for resource-constrained IoT systems using numerous parameters such
    as BC type, decentralization, scalability, latency, computation, storage, and
    network overheads. – – – – – – ✓ – ✓ ✓ – ✓ Discussed the limitations of current
    IoT system and how BC can overcome them while considering the use case of the
    smart home. [44] Presented a detailed survey on various attacks while mapping
    each attack to different layers of IoT/IIoT architecture, and discussed how BC
    can address these security challenges. – – ✓ ✓ – – – ✓ ✓ ✓ – – – Presented a taxonomy
    for IoT/IIoT security and focused on two specific use cases (smart factory and
    smart grid) for IIoT and (healthcare and VANET) for IoT. [45] Presented evolution
    and working principles of BC. Reviewed security solutions offered with the use
    of BC in IoT. – – – – – – – – ✓ ✓ ✓ ✓ ✓ Discussed the most relevant BC-IoT applications
    and highlighted the challenges in BC-IoT integration that need to be considered.
    [33] Outlined the architecture that implements BC in managing heterogeneous IoT
    systems. – – – – – – – – – – – – – Also discussed the limitations of the previous
    IoT system and the challenges in integrating BC and IoT. [46] Surveyed the recent
    works done in BC-IoT, BC-Cloud IoT, and BC-Fog IoT with a focus on smart cities,
    homes, and vehicular networks. – – – – – – – – – – – – – Briefly reviewed the
    role of BC in various application areas of IoT such as SDN-enabled IoT, mobile
    IoT, and IoT supply chain. [47] Provides a detailed survey covering the taxonomy
    of BC-based IoT security, various attacks on BC-IoT system, and framework for
    BC IoT security. – – – – – – – – – ✓ ✓ – ✓ Talked about core security issues in
    IoT, how BC can address them as well as presented new attack surfaces that arise
    with BC-enabled IoT system. [48] Presented a survey on using BC to address security
    and privacy challenges in IoT and proposed a BC-based IoT framework. – – – – –
    – – – - ✓ ✓ ✓ – ✓ Listed out various security issues and their adverse effects
    on different layers of IoT architecture. [49] Authors have discussed BC and fuzzy
    blockchain framework for threat detection in IoT network. – – – – – – – – – –
    – – – Authors have used an adaptive neuro-fuzzy inference system, fuzzy control
    system, and fuzzy matching modules. Also, they compared the results with fuzzy
    classifiers. Our Paper The paper presents an exhaustive survey on BC for IoT including
    BC (types, salient features, and smart contracts), BC-enabled IoT applications,
    important technical aspects along with the challenges in integrating BC and IoT.
    ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ Eight distinct IoT applications are studied in-depth
    which are envisioned to be immensely benefited with the integration of BC. Moreover,
    future directions for these IoT applications are discussed based on the lessons
    learned. HC — Healthcare; SC — Smart City, SCL — Supply Chain & Logistics, SG
    — Smart Grid, AV — Autonomous Vehicles, UAV — Unmanned Aerial Vehicles, SH — Smart
    Home, IIoT — Industrial Internet of Things, Sca — Scalability, Sec — Security,
    DS — Data Storage, CA — Consensus Algorithm, PP — Processing Power. The contributions
    of this survey are as follows: • To present blockchain technology and smart contracts
    in a nutshell: The paper presents a synopsis of blockchain technology and smart
    contracts keeping in mind the broader canvas of the IoT ecosystem. The aim here
    is to enable the readers to develop the essential foundation of blockchain technology,
    its salient features, relevant taxonomy, and typical process flow in the blockchain.
    • To assimilate and study various BC-enabled IoT applications: The paper outlines
    a handful of BC-enabled IoT key application areas such as healthcare, smart city,
    smart home, smart grid, autonomous vehicle, unmanned aerial vehicle, and Industrial
    IoT. In particular, the role of BC in these IoT application areas, and the classification
    of the research works under various categories have been discussed. • To investigate
    pertinent technical aspects and highlight the challenges related to the integration
    of BC for IoT: Identify and discuss the open challenges in integrating BC and
    IoT and their possible solutions. The effect of these challenges and the work
    done in these aspects are also discussed. • To discuss future research directions
    based on the lessons learned: Based on our findings, we have featured the possible
    and significant research challenges that have to be addressed. This will help
    researchers in related domains to find their future directions. 1.4. Organization
    The remainder of the paper is organized as follows: Section 2 provides an overview
    of DLT, BC technology (related terminologies, types, and transaction flow), smart
    contracts, and salient features of BC. Section 3 revolves around various BC-empowered
    IoT applications. This section includes an introduction to these applications,
    their importance, the challenges in implementing them, how BC can mitigate these
    challenges, and the related work done in these areas. Section 4 discusses the
    technical aspects such as scalability, security and privacy, IoT data storage,
    consensus algorithms, and processing power. This section outlines these technical
    aspects by first introducing them, their importance for BC, and their importance
    for IoT as well. Section 5 presents the lessons learned and future research directions.
    Finally, Section 6 concludes the paper. The outline of the paper is presented
    in Fig. 4. Download : Download high-res image (666KB) Download : Download full-size
    image Fig. 4. The outline of the paper. 2. Background This segment explains the
    fundamentals of DLT and BC, key attributes of BC, its terminologies and types,
    and smart contracts. 2.1. Distributed ledger technology (DLT) A conventional centralized
    network uses client–server architecture where one or more clients are directly
    connected to the central server. On the other hand, in a decentralized P2P network,
    multiple nodes are connected in a P2P fashion. Any node is equally capable of
    serving a client attached to this decentralized P2P network. DLT comprises a decentralized
    P2P network of nodes and distributed ledger. Moreover, DLT uses cryptographic
    techniques and a consensus mechanism to secure and synchronize the underlying
    system. A distributed ledger is a type of shared ledger where the ledger is replicated
    at all the nodes in the network [15]. DLT has the potential to address the many
    shortcomings of traditional centralized approaches. The key highlights of DLT
    are (i) decentralized governance, (ii) immutability, (iii) reliability, and (iv)
    authentication [50]. Creating immutable records helps in achieving transparency,
    immutability, and verifiability and also reduces costs associated with distributing
    and maintaining the ledger [51]. In general, DLT is a class, and BC is one of
    the most popular members of that class. In other words, BC is a type of DLT. 2.2.
    Blockchain technology BC, a type of DLT, consists of a distributed ledger and
    a P2P network of nodes and uses cryptographic techniques and consensus mechanisms.
    The distinguishing factor for BC is the data structure (i.e., the chain of blocks)
    used to build the distributed ledger. Any update in the ledger is achieved by
    using a consensus mechanism that establishes agreement among the nodes, which
    helps in achieving consistency. Any change in the ledger is synchronized and reflected
    at each participating node [52]. Before moving forward it is necessary to understand
    the basic block structure and the related terminologies used in BC [30], [53].
    Fig. 5 shows the detailed view of BC. Download : Download high-res image (264KB)
    Download : Download full-size image Fig. 5. Structure of the block. 2.2.1. Block
    As mentioned above, BC is a chain of blocks where each block contains a set of
    finite and valid transactions. The blocks are connected using a cryptographic
    hash-based chain. In general, a block is divided into two parts — block header
    and block body. The block header is used to hold various fields such as version,
    timestamp, previous block’s hash, the difficulty level in form of nbits, Merkle
    root hash, and nonce. The block body contains transactions and at times smart
    contracts as well [54], [55]. Usually, the number of transactions that can be
    accommodated in one block depends on the maximum allowable block size, which is
    platform-dependent. For instance, the maximum size of the BC block is 1 MB. 2.2.2.
    Merkle tree root hash It is one single hash value that uniquely and compactly
    represents all the transactions present in the block body. This hash digest is
    calculated using the Merkle tree technique. Moreover, it enables easy verification
    of the correctness of the transactions in a given block. 2.2.3. Timestamp It is
    the time of creation of a block, which is stored as one of the fields in the block’s
    header [56]. This field is useful in keeping a record of the time when the transactions
    were confirmed which later helps in knowing when and what has happened on the
    blockchain and makes it more difficult for an intruder to alter the blockchain.
    It is the current time in seconds in GMT since 1 January, 1970 [57], [58]. The
    value of timestamp ( ) is valid if is greater than the median timestamp of the
    previous eleven blocks and is smaller than the network time (median of the timestamps
    returned by all nodes connected to the node) (h is a cryptographic hash function)
    [59]. 2.2.4. Nonce is a number used once. It is a four bytes field used to compute
    the hash of a block’s header such that the hash value meets the difficulty level.
    More specifically, it is a random number that the miner keeps guessing to calculate
    the block header’s hash value. In a brute-force manner, a miner starts with zero
    as a value for the nonce field and keeps increasing it for every iteration of
    hash calculation [58]. A miner stops when the computed hash value meets the difficulty
    level, and a new block is said to be mined for the specific nonce value (used
    in that iteration). 2.2.5. Previous hash The previous block hash field of any
    given block stores the block hash of the immediate previous block. This leads
    to the formation of a chain of blocks and makes the blockchain an append-only
    data structure. Any change in a transaction of any block by an attacker will produce
    a different block hash, which should be reflected in all the subsequent blocks.
    Thus the ledger becomes inconsistent and the changes can be easily detected. The
    value of the previous hash field in the genesis block is set to zero. Another
    interesting concept in BC is forking [60]. At any given time, a large number of
    nodes (i.e., miners) can participate in BC network. Thus, there can be circumstances
    when different miners mine different (valid) blocks at the same time. In this
    situation, these valid but different blocks are being broadcasted in the BC network.
    Hence, different parts of the BC network will append different blocks resulting
    in inconsistency in the blockchain. In other words, different nodes will have
    different recent blocks in their local copy of the ledger, and this is known as
    the forking problem. BC resolves this issue by considering simply the longest
    chain while all the blocks in the other smaller chains will be discarded or considered
    orphaned, as shown in Fig. 5. 2.3. Types of blockchain There are numerous ways
    based on which BCs can be divided into different types. Fundamentally, BCs can
    be considered of three types — public, private, and consortium BC. Table 5. Comparison
    among public, private & consortium blockchains [29], [61]. Property Public Private
    Consortium Consensus Algorithm All nodes One organization Only selected nodes
    Immutability Extremely difficult to alter Modifications are possible Modifications
    are possible Efficiency Low High High Centralized No (fully decentralized) Yes
    Partially centralized Node’s Joining Process Permissionless Permissioned Permissioned
    Entities’ Identity Pseudonymous Known entities Known entities Confirmation of
    Transaction Order of minutes Order of milliseconds Order of milliseconds Write
    Permission Write for all Write for nodes from single organization Write for only
    selected nodes from group organizations Asset Local Asset Any Asset Any Asset
    2.3.1. Public blockchain It is open and accessible for all who want to participate
    in the network. Public BC is fully decentralized, where no entity controls the
    BC, and every participating node has equal rights [30]. Moreover, all the participating
    nodes can participate in the validation of transactions and block mining [62],
    [63]. Examples of public BC implementation are Bitcoin and Ethereum or Litecoin
    [64]. 2.3.2. Private blockchain It is specifically designed for a single organization,
    and participants need permission to join the network. After entering the network,
    participants can access the transactions in the ledger. Only a few selected nodes
    from the governing organization have exclusive rights to add new blocks and update
    the ledger. Participating nodes in the private BC do not need to solve the computationally
    intensive puzzle to reach a consensus. Moreover, usually, the nodes are not provided
    with any financial intensives. Hyperledger fabric is the most widely used private
    permissioned BC [30], [62]. 2.3.3. Consortium or federated blockchain Consortium
    or federated BC is designed for multiple companies or a group of companies participating
    in a single BC. It is partially centralized with known set of participating nodes
    from group organizations [61]. Table 5, shows the comparison among the three types
    of BCs. 2.4. Smart contracts Smart contracts were first proposed in 1994 by Nick
    Szabo [65]. Smart contracts are equivalent to contracts in the real world, the
    only difference is that they do not need any administering body for their execution
    and they are softwarized [66]. Smart contract is a set of logic and functions
    (with the relevant data) that get executed when the pre-defined conditions are
    satisfied by an external or internal trigger [46]. Usually, a smart contract is
    executed when it is invoked by a valid transaction containing the address of the
    smart contract that occurs in the system and has access rights. Smart contracts
    when running on top of a blockchain provide numerous advantages, automation is
    one of them. Moreover, as the need for intermediaries is removed, the contract
    also reduces the expenses required in paper-based traditional contracts [67].
    Ethereum was the first BC platform that supported smart contracts [68]. It runs
    on the Ethereum runtime engine and the byte code is generated since it runs faster
    on the Ethereum Virtual Machine (EVM) [46]. Since smart contracts are stored on
    the Ethereum (i.e., on-chain), their byte codes are assigned a unique address
    after deploying it on EVM [46], [69]. This unique address assigned to the smart
    contracts in Ethereum is 20 bytes [70]. The transaction associated with smart
    contracts results in a change in the state of the decentralized ledger [46]. As
    the smart contracts are stored inside the BC, they inherit some of the BC properties
    such as immutability, autonomous execution, transparency, accuracy, and elimination
    of trusted third parties [69]. By immutability, we mean once the smart contract
    is created, it must be verified before the deployment in the nodes as it cannot
    be changed. So no one can tamper with the contract [38]. Autonomous execution
    means the program written in smart contracts will run automatically once the BC
    system reaches the triggering state, which also eliminates any biased operations,
    not only builds trust but also gives accurate output, and also the need for a
    trusted third party is not required [69]. Transparency means that the smart contract
    logic is visible to all the nodes, which ensures trust between the parties [69]
    and distribution means that the output of the contract is validated by each node
    in the same way as any other transactions. Bitcoin was the first cryptocurrency
    to support smart contracts features but it has very limited features. Then world’s
    second-largest cryptocurrency Ethereum was designed specially to support smart
    contracts [71]. Ethereum platform specially designed for financial and asset trading,
    its native cryptocurrency is Ether, also supports smart contracts, written in
    LLL (Low-level lisp-like language), Serpent, Viper, and Solidity [66], [72]. Hyperledger
    fabric designed especially for enterprise users such as supply chain, trade finance,
    and stock trading, supports smart contracts written using Java, NodeJs, and GoLang
    programming language [69]. Corda designed another blockchain-based platform for
    applications like energy trading, insurance, and retail marketing. Its native
    cryptocurrency is Corda coin, which supports smart contracts written using languages
    like Cotlin/Java [69]. NEM is also a blockchain-based cryptocurrency platform
    specially designed for Banking, gaming, advertising, and marketing and its native
    cryptocurrency is XEM [69]. Some additional features of NEM such as time stamping
    documents, identity proof, creation of customized digital assets, and support
    of smart contracts. Stellar, a blockchain platform designed for financial transactions,
    and its native cryptocurrency is Lumen, supports smart contracts [69]. Blockchain-based
    platform Waves, designed for applications like ride-sharing and customized asset
    trading and its native cryptocurrency Waves uses Scala programming language, and
    language for smart contracts is non-Turing complete language [69]. Download :
    Download high-res image (711KB) Download : Download full-size image Fig. 6. Characteristics
    of blockchain. 2.5. Salient features of blockchain In this section, we discuss
    the unique features of BC technology as follows. Fig. 6, illustrates the basic
    attributes of BC. 2.5.1. Distributed Since BC is a type of DLT thus at the core
    of blockchain lies a ledger which is shared with all the participating nodes such
    that each node has an exact replica of the ledger [15]. Each node participating
    in the network can access and view the complete history of transactions without
    the need for any centralized authority [73]. 2.5.2. Decentralization In traditional
    centralized architecture each transaction is regulated and validated by a central
    party or an intermediary. In contrast, BC uses decentralized network of nodes
    for validating and confirming transactions. As soon as a transaction is initiated,
    it is broadcasted to every node in the network. Any node can mine a new block
    which contains this transaction and thus the transaction gets confirmed in decentralized
    manner (not by a central authority) [15]. Moreover, decentralization ensure no
    single point of failure and services are unaffected even if some of the nodes
    are unavailable. 2.5.3. Immutability All the data, i.e., blocks (and transactions
    within) are cryptographically sealed and chained together. Smallest change in
    any transaction (in a given block) will lead to drastic change in the value of
    the Merkle root hash and consequently that block header’s hash value will change.
    As a result, all the subsequent blocks will have to be changed which needs lot
    of re-computations and consensus among the participating nodes [74]. Thus, once
    a block is mined and added to blockchain it is said to be immutable (or temper-proof).
    2.5.4. Provenance Whenever a transaction is recorded in the BC, details of the
    transaction are recorded across all the nodes because of the decentralized nature
    of BC. Also, BC uses timestamps to record each transaction which allows each node
    to keep the order of the transactions [75]. Since each transaction is transparently
    and permanently recorded across all the nodes, the user can verify and trace transactions
    at any time [30]. It provides traceability and transparency of the data [76].
    2.5.5. Availability It is another important feature of BC. It means that the services
    are always available to the users because of the decentralized nature of the BC
    network and the system becomes immune to various intentional (e.g., denial of
    service attack) or accidental failures [77]. 2.5.6. Transparency Another important
    key attribute of BC is transparency. All the participating nodes present in the
    network can view all the transaction details and associated values. Each node
    present in the network has a copy of the ledger and is authorized to verify and
    trace the previous records in the distributed network which promotes trusted workflow,
    sharing of data, immutability, and verifiability [75], [78]. 2.5.7. Anonymity
    Anonymity is another key strength of BC technology. Each user in the BC network
    is assigned a unique BC generated alphanumeric address. Thus users are (pseudo)
    anonymous, and no central authority is monitoring users‘ private information.
    Transactions occur between these BC-generated addresses [73]. This feature provides
    a certain amount of privacy but at the same time, illegal activities could also
    happen [76]. 2.5.8. Non-repudiation Non-repudiation is again a very important
    feature of BC. Non-repudiation means users cannot deny the activities performed
    by them, thanks to cryptographic techniques such as digital signature [77], [79].
    3. Blockchain-based IoT applications This section includes the multiple areas
    in which blockchain-based IoT can be utilized, the pertinent challenges, and also
    provides measures to manage these challenges. 3.1. Healthcare Healthcare represents
    an entire ecosystem where health professionals (with the help of advanced medical
    technologies) diagnose, treat and cure illness or diseases of people. It is estimated
    that the healthcare market will touch US$ 372 billion by the year 2022 and the
    hospital industry will reach up to US$ 133.44 billion by 2023 [81]. Smart healthcare
    originated from smart earth proposed by IBM in 2009 [82]. With the increasing
    role of the healthcare ecosystem powered by advanced technologies, a tremendous
    amount of data is generated, which needs to be managed securely [83]. Some of
    the major issues being faced by the healthcare domain are user and location privacy
    leakage, counterfeit drugs and medical equipment, loss of ownership and fraudulent
    access to stored medical (personal) data, fraud in medical claims and bills, and
    secure platforms required for national and international collaboration of a team
    of healthcare professionals to deal with critical cases and pandemic situations
    like COVID-19. Download : Download high-res image (891KB) Download : Download
    full-size image Fig. 7. Application of blockchain in healthcare [80]. However,
    managing such a large massive amount of data is a challenging task but BC technology
    has the potential to mitigate these issues and provides a better solution than
    the traditional way of storing data. Blockchain because of its features such as
    distributed, decentralized, immutability, and availability, becomes the most suited
    solution to the problems being faced by the healthcare industry. For maintaining
    the privacy of patients’ medical records, BC empowers patients to have control
    over their medical data and can decide who can access their medical history [84].
    Another issue with medical data (or history) is scattered storage. Usually, part
    of patients’ medical data is stored with hospitals, some of other medical details
    are with the primary doctor, and some can be with the specialists. In this scenario,
    BC provides a solution to assemble all these data at one platform [85]. Counterfeit
    of medical drugs can also be resolved using BC technology, where the details of
    the drug supply chain from drug manufacturing to its supply to the patient can
    be updated on blockchain and the concerned authorities can keep an eye on every
    stage of the pharmaceutical supply chain [86]. Another challenge being faced by
    the healthcare sector is fraud in medical claims and billing. Sometimes healthcare
    providers claim charges for non-performed services, overcharging the actual services.
    Moreover, reimbursement of medical claims is usually a time-consuming process
    and is prone to fraudulent activities. BC can automate the medical claim’s workflow
    where each person involved in the process can be made accountable for his/her
    activities and everyone sees the same information stored on BC [86]. Some of the
    commercial implementations in healthcare are MedRec, used for storing EHR efficiently
    and Medicalchain is used in the UK to maintain patient data [87]. Fig. 7, shows
    the application areas of BC in the healthcare domain. 3.1.1. Applications of blockchain
    in healthcare • Electronic Health Records - Storing data (patient’s details, health
    information) digitally is called electronic health record. EHR are beneficial
    that they can be accessed from anywhere [88]. EHR contains sensitive information
    about patient’s and it is important to maintain the privacy and security [89].
    To maintain the medical records or history in unified manner, BC platforms can
    be instrumental. Along with maintaining the security and privacy of the data,
    EHRs can be stored and accessed easily [85]. Sharing of information is another
    important step and BC provides that sharing and trust mechanism [89]. • Medicine
    Supply Chain - Counterfeit of medicine is another major issue, that can adversely
    effect the lives of patients. BC can resolve this by storing all the details related
    to the drug supply chain, starting from manufacturing to the final supply of the
    medicine to the patient, on the BC network. The key steps involved in the supply
    chain of drugs are manufacturing, transportation, wholesaler, distributor, retailer,
    and patient [90]. All these entities can be registered on the BC platform and
    authorities can keep an eye to ensure the quality compliance [86]. • Medical Claim
    - Nowadays, we heard a lot about fraud by hospitals where they charge for non-performed
    services and overcharge the performed services [91]. As a chain of people involved
    in verifying the bills. A typical process of claim settlement involves a lot of
    communication between the concerned authorities which takes a lot of time and
    sometimes also includes fraud activities. BC can automate the workflow and each
    person involved in the process will share the same copy of the record, which ensures
    no changes in the copy of the bill [86]. Gem Health is one of the practical and
    real-time systems for health claims [92]. 3.1.2. Related work The works related
    to healthcare have been discussed under different categories which are discussed
    as follows: Authentication: Authors Saha et al. [93] and Alzubi et al. [94] have
    worked in the direction of proposing a BC-based approach for authentication and
    access control in healthcare. Saha et al. [93] highlighted the access control
    challenges in electronic health records and proposed a private BC technology-based
    access control approach that enhances features like security, and low computational
    and communication costs. Rather than using public or consortium BC, authors used
    private BC as all the data collected in hospitals using IoT-enabled devices is
    confidential and sensitive. Also authors showed that their proposed approach is
    resistant to various attacks like impersonation attacks, replay attacks, offline
    guessing attacks, man-in-the-middle attacks, ephemeral secret leakage attacks,
    and anonymity and untraceability attack. In their proposed access control scheme,
    the authors considered two tasks i.e. node authentication (all the newly enrolled
    users must authenticate themselves with hospital authority for authentic information)
    and key establishment (after authentication user can establish the shared key
    with hospital authority for future communications). Moving forward Alzubi et al.
    [94] proposed a BC-enabled secured authentication technique for medical IoT devices
    using Lamport Merkle Digital Signature (LMDS). Their proposed approach is designed
    for securing the data transmitted between the patient and the hospital. It includes
    mainly four entities. The first entity records the sensitive medical data of patients
    obtained from MHEALTH, Second and third entity performs signature generation and
    verification using LMDSG and LMDSV respectively. The fourth entity is the centralized
    healthcare controller. Lamport Merkle Digital Signature generation (LMDSG) is
    used for authenticating i.e., (signature generation and verification) IoT devices.
    Authentication is done by creating a tree in which leaves represent a hash function
    of a patient‘s sensitive and confidential medical data. The root of LMDSG is calculated
    using Lamport Merkle Digital Signature verification (LMDSV) by a centralized healthcare
    controller (CHC) to preserve patients’ confidential data from intruders. Verification
    is done when the hash of the public key is equal to the leaf then it becomes the
    root of the tree and the signature becomes valid. Authors analyzed the performance
    in terms of communication overhead (decreased by 20%), communication time (decreased
    by 17%), security (improved by 8%), authentication accuracy (increased by 8%),
    data confidentiality rate (improved by 9%), authentication time (improved by 11%)
    and privacy-preserving rate (increased by 7%). Security: Chen et al. [95], Tripathi
    et al. [81], Hemalatha et al. [96] and Zaabar et al. [97] have worked to improve
    security while storing medical data. Chen et al. [95] discussed the healthcare
    domain and the challenge it faces in storing health records such as no assurance
    of integrity and reliability of patient information, privacy leaks, centralized
    approach, and malicious tampering. Furthermore, the authors showcased the opportunities
    offered by BC technology in the healthcare domain like patient control over the
    data, storage security, privacy, tamper-proof, and interoperability. For this
    authors have presented a scheme to store medical data using BC and compared it
    with the traditional approach in terms of tamper-proof, privacy protection, and
    secure storage. In line with [95], Tripathi et al. [81] not only discussed the
    technical challenges such as data security, users’ privacy, and lack of skilled
    manpower, but also highlighted social barriers such as reluctance to adopt new
    technology, conventional and irrational mindset, and absence of core infrastructure,
    in the adoption of the smart healthcare system. To mitigate these issues authors
    proposed a BC-based framework for smart healthcare to attain the security and
    integrity of the data. BC allows privacy preserved and secure data exchange of
    patient data. Entities involved in Smart and secured healthcare system (S2HS)
    are mainly connected using a wireless sensor network (WSN). Entities involved
    are IoT-based wearable devices, EHR, encryption/decryption and standardization,
    BC mechanism, and end-users. Their proposed approach uses two-level of BC i.e.
    private and public BC to provide isolation among the entities involved and helps
    in achieving consistent and transparent workflow. Taking forward the same issue,
    in 2021, author Hemalatha et al. [96] highlighted the challenges in a traditional
    approach like a single point of failure, mistrust, data manipulation, and tampering,
    and how BC can resolve these issues. To resolve such issues, the authors proposed
    a BC-IoT-based approach to protect and save storage of the medical data. Their
    approach suggested using private BC as it is more stable and provides stronger
    authentication processing. BC with KSI (public key infrastructure strategies)
    is used to verify data integrity and Merkle root hash is used to validate the
    timestamp. To test the performance of the proposed framework, the authors used
    Apache JMeter and showed that the proposed approach takes less time than the current
    system. Along with that, in 2021, Zaabar et al. [97] proposed a Hyperledger fabric
    BC, based approach for the secured management of healthcare data and resolves
    the storage issues of a centralized system. For storage of data, the decentralized
    database OrbitDB with IPFS, as an off-chain database is used. For communication
    HTTP and CoAP (constrained application protocol) are used. In particular, six
    layers are there; IoT physical layer, connectivity layer, off-chain database layer,
    BC network layer, application layer, and users layer. Moreover, analysis was done
    in terms of data integrity, confidentiality, availability, traceability, and data
    privacy. Pandya et al. [98] discussed that federated learning is a cost-effective
    and promising solution to healthcare incorporating privacy, as it utilizes a distributed
    AI approach to receive local updates from various medical devices, such as the
    Internet of Medical Things (IoMT) devices so that local data does not have to
    be accessed directly, which helps in preserving privacy leaks. Ch, Rupa et al.
    [99] proposed a cyber–physical system and blockchain-based smart healthcare system.
    Bayesian grey filter-based convolution neural network (BGF-CNN), PSO, and GWO
    optimization techniques are used. Moreover, Blockchain with CPS is used to enhance
    security. In particular, accuracy and time complexity are improved. Real Time
    Monitoring: In 2018, Wang et al. [82] and Griggs et al. [101] both worked in the
    same direction and propose approach for real-time monitoring of the patient. Wang
    et al. [82] used an artificial system, computational experiments, and parallel
    execution in combination with BC technology to link patients, hospitals, and healthcare
    communities for sharing of health records. Further, the authors developed a blockchain-based
    system using consortium type BC to deal with the specific case of Gout disease.
    For data storage, the hash of the data is stored on the blockchain, and for generating
    the consensus among the nodes, used Delegated proof of stake (DPoS) consensus
    algorithm. DPoS allows nodes to elect some number of trustees called delegates,
    who can collect transactions turn by turn and bundle them in a block. The remaining
    nodes verify the block and add it to the BC. Data sharing and record review are
    performed using BC-enabled smart contracts. Here health bureaus serve as the audit
    nodes to ensure integrity. While Griggs et al. [101] proposed an approach for
    automated remote patient monitoring, by sending notifications to the patient and
    medical professionals along with a record of who has initiated the activity. All
    the sensitive medical information will not be stored on the BC but stored using
    an EHR storage database instead only the fact that the event occurred is stored
    on the BC. The logs about measurements and treatments are also stored on the blockchain
    along with smart contracts. Authors used a smart contract (written using solidity
    language) for automatic analysis of health data collected and trigger alerts for
    unusual activity. The authors proposed a DApp to manage the user interface. Furthermore,
    their work presented a comparison of the proposed approach with the traditional
    approach in numerous aspects like confidentiality, availability, immutability,
    traceability, speed, privacy, and transparency. In line with that in 2021, Chen
    et al. [103] presented an IPFS and BC-enabled framework for the detection of diabetes
    in a very secure way. In particular have three phases i.e., registration phase,
    user authentication phase, and IoT data upload with BC phase. It uses IPFS for
    storage and smart contract for the exchange of money in a transparent way. Moreover,
    the authors presented the performance evaluation of their proposed approach in
    terms of accountability, block capacity, and processing time of transaction. Table
    6. Summary of related work in BC-healthcare. Reference Main contribution Relevance
    to BC Targeted characteristics Empty Cell Empty Cell Empty Cell Authenticity Integrity
    Confidentiality Provenance Privacy Wang et al. [82] Proposed a blockchain-powered
    parallel healthcare framework based on an Artificial system, Computational experiments,
    and Parallel execution, i.e, the APC approach. The prototypical system is developed
    for Gout disease and deployed at the hospital of Qingdao University, China. Consortium
    blockchain is used to link patients, hospitals, and healthcare communities, a
    hash of the data is stored on-chain and the DPoS (Delegated Proof of Stake) consensus
    algorithm is used. Data sharing is done using BC-enabled smart contracts. ✓ ✓
    – ✓ – Cyran et al. [100] Proposed a blockchain-based approach to protecting sensitive
    health-related information and deploying BC across various hospitals. Ethereum
    is used to deploy smart contracts with Docker containers, and various cryptographic
    techniques like Elliptic Curve Integrated Encryption (ECIS) for enhancing security.
    Along with this, Inter-Planetary File System (IPFS) is used to store large files
    to ensure minimum redundancy. ✓ ✓ – – ✓ Griggs et al. [101] Proposed a BC-based
    smart contract for secure analysis and management of medical sensors. Their approach
    integrates WBAN and smart contracts over BC to create an immutable ledger of transactions.
    All the medical information is stored off the chain in the EHR database. Private
    and consortium type blockchain is used to permit the authorized users to read
    the content on the blockchain and only a few selected nodes can run the smart
    contract and mine new blocks. Private BC is created using the Ethereum protocols
    and the PBFT consensus algorithm is used. ✓ ✓ – ✓ ✓ Carter et al. [102] Proposed
    a framework by combining AWS with Ethereum BC for sharing information between
    the hospitals. BC helps in improving security and inter-operability between hospitals
    by allowing the complete sharing of data. Ethereum public BC is used as it supports
    smart contracts. To overcome the storage scalability issue, off-chain AWS cloud
    storage is used. Uses AES-GCM with HMAC-based key derivation function HKDF, and
    256-bit encryption key. ✓ – – – – Chen et al. [95] Proposed a framework for sharing
    medical records that involve entities like a patient, service provider, and medical
    institution. Furthermore, a structure for the medical block with the header and
    body is presented. Uses both BC and cloud storage. Information like store address,
    hash value, and permission of medical data are stored on the BC whereas data generated
    by medical institutions, and patient details are stored using the cloud under
    the chain. Suggested the use of the DPoS consensus algorithm. ✓ – – – ✓ Saha et
    al. [93] Proposed an approach for access control to provide better security and
    requires low computational and communication costs. Uses private BC and PBFT consensus
    algorithm for secure access control. Uses ECC for signature and SHA-256 algorithm
    for the secure collision-resistant hash function. – – ✓ – – Tripathi et al. [81]
    Proposed a BC-based secured and smart healthcare system (S2HS) to provide better
    security, privacy, and integrity. Data captured using different sensors is encrypted
    using BC, and stored in a distributed approach and all the entities involved are
    connected using WSN. Uses two-level of BC: Private BC is used to record internal
    entities like healthcare providers, clinicians, and inventory, whereas, public
    BC is used for external entities like patients, pharmacists, and insurance companies.
    Access to data is maintained using smart contracts. – ✓ ✓ ✓ ✓ Hemalatha et al.
    [96] Proposed an IoT-based BC e-healthcare framework for storing and managing
    medical data. Uses private BC with KSI to verify the data integrity. For comparison
    with the conventional system uses Apache JMeter and shows proposed approach takes
    less time. – ✓ ✓ – ✓ Alzubi et al. [94] Proposed a BC-enabled approach to preserve
    medical data transmitted between patient and hospital using Lamport Merkle Digital
    Signature (LMDS). The proposed architecture includes four entities for sensitive
    data, signature generation, signature verification, and a centralized health controller.
    Author evaluated the proposed approach using CloudSim 3.0. The proposed approach
    is analyzed in terms of computational overhead, computational time, authentication
    accuracy and time, data confidentiality rate, data integrity, and privacy-preserving
    rate. ✓ ✓ ✓ – ✓ Chen et al. [103] Proposed a BC-driven framework for the detection
    of diabetes and a privacy server. The proposed framework includes three phases
    i.e., the registration phase, user authentication phase, and IoT data upload with
    the BC phase. BC with IPFS for cloud storage is used for data storage. Uses smart
    contracts for the exchange of money and property. ✓ ✓ – – ✓ Zaabar et al. [97]
    Proposed a BC-driven solution for secure healthcare data management and resolving
    centralized storage issues. Uses Hyperledger fabric framework, access control
    list, and practical byzantine fault tolerance consensus algorithm. ✓ ✓ ✓ – ✓ Pandya
    et al. [98] Discussed the use of FL in various domains and compare it with the
    traditional ML approach. Author presented a detailed survey of FL in various domains
    along with related work done. – – ✓ – ✓ Belhadi et al. [104] Proposed an ensemble
    learning model for medical image segmentation by using a voting mechanism and
    blockchain technology and evaluated it in four different medical data sets. Genetic
    algorithm is used to optimize hyper parameters along with blockchain technology.
    ✓ – – – ✓ Ch et al. [99] Proposed a cyber–physical system and blockchain-based
    smart healthcare system. Bayesian grey filter-based convolution neural network
    (BGF-CNN), PSO, GWO optimization techniques, and blockchain are used. ✓ – – –
    ✓ Data Sharing: Cyran et al. [100] and Carter et al. [102] worked to improve the
    data sharing between hospitals and patients. Cyran et al. [100] highlighted the
    challenges in the current centralized system like meeting the scale, accessibility,
    and security requirements of healthcare organizations, and suggested BC as a promising
    solution for addressing these challenges. Authors proposed a BC-based solution
    for protecting sensitive health-related information and deployment of BC across
    various hospitals at large scale. For the deployment of BC across the hospital
    authors built a containerized solution. The proposed approach includes the owner
    for each piece of data and has the right to decide what amount of data can be
    accessed by whom at varying levels. Moreover, the proposed system enables the
    data owner to revoke access to the data and ensures that the receiver’s private
    key with data is not sufficient to access data. While in 2019, Carter et al. [102]
    discussed the interoperability challenge, in sharing data. To resolve this challenge,
    the authors have suggested an approach using the Amazon web service and Ethereum
    BC. The proposed approach uses AWS cloud service, information related to patient
    health identifiers such as Data of Birth (DoB), name, and address are not stored
    on public BC but stored using AWS cloud storage as AWS is highly customizable
    and provides security in sharing health data digitally. Belhadi et al. [104] proposed
    an ensemble learning model for medical image segmentation, for which a voting
    mechanism is used. To secure the learning process blockchain technology is used.
    The paper highlights the advantages of blockchain-enabled IoMT. Moreover, the
    author evaluated the framework IoMT in four different medical datasets. Table
    6, lists out the work done in integrating BC-Health care. 3.1.3. Summary Healthcare
    is a platform where concerned professionals take care of various diseases and
    cure patients. By introducing smart healthcare systems, society will be benefited
    in terms of public healthcare management, online access, medical data sharing,
    availability of data, no central node dependency, and a patient-centric system.
    Nonetheless, the existing system has a few lacking areas such as lack of trust,
    scattered data, centralized approach, security, and privacy. By the application
    of BC, these challenges can be resolved in terms of accuracy, global health data
    sharing, irreversible transactions, distributed and decentralized storage, transparency,
    no third-party involvement, and authorized access. All these features will help
    in improving the overall functioning of the healthcare ecosystem and enable various
    stakeholders to securely access complete medical history which is generally scattered
    among different hospitals and medical institutions. Numerous research works have
    been carried out to explore the applicability of BC in the healthcare domain.
    In particular, researchers have made efforts to enhance authentication and access
    control of medical data using digital signatures, node authenticity, and improved
    key establishment. To enhance security hierarchical BC, public key infrastructure
    strategies, and private type BC are used. Furthermore, off-chain (cloud) data
    storage, consortium type BC, and DPoS consensus algorithm have been suggested
    for real-time monitoring and data sharing with revocability. Few points that need
    attention for widespread adoption of BC in healthcare are better infrastructure
    and interconnection for easy adoption, secured data sharing among hospitals in
    a more cost controllable manner, and more implementation options can be explored
    with hyperledger, a medical BC network connecting as many health organizations,
    the privacy of patient‘s can be improvised by adding anonymous identity. Moreover,
    parallel healthcare systems can be improved and used for other diseases also other
    than Gout disease. Apart from these, a BC-based interoperable electronic health
    record-sharing framework can also be implemented using faster-distributed ledger
    technologies with identity management of patients. Although there are numerous
    benefits of using BC and smart contracts in the healthcare domain, there exist
    some challenges such as scalability, immense data management, Interoperability,
    and a large number of concurrent users. Moreover, some of the operational aspects
    that need attention for the widespread adoption of BC in healthcare are awareness
    among the users, standardization, lack of trust among hospitals and patients to
    share their medical details, and onboarding of various medical organizations over
    BC-based platforms. 3.2. Smart homes A smart home is an IoT-enabled home that
    improves the quality of life of the members of the home by providing them automation,
    security, comfort, and convenience and allowing them to control the gadgets installed
    in the house using a mobile application [105]. In simple words, smart home enables
    automation of daily routine tasks with the help of gadgets or devices installed
    in a house [42]. For a home to be a smart home, it must-have network connectivity,
    IoT devices, and a mobile application to access and control devices from anywhere
    [105]. Smart home adoption rate is continuously growing at a rate of 20.8% from
    the year 2018 to 2022 [106]. The global market for smart meters and home automation
    will grow to $44 billion by 2025 [107]. Some facets of a smart home are smart
    door locks, smart lighting, smart parking, and video surveillance [105]. The key
    challenges faced by smart home applications are security (such as authorization,
    authentication, access control), privacy (data and user), and system configuration
    security [106], [108]. Another challenge is IoT devices have limited memory and
    power. Moreover, conventional IoT systems are centralized and a single point of
    failure can occur. To resolve these challenges BC is the most suitable and promising
    solution [108]. A private blockchain can be used to manage the communication among
    devices and these communications can be recorded as transactions on the BC [84].
    Fig. 8, shows the application areas of BC in the smart home. Download : Download
    high-res image (665KB) Download : Download full-size image Fig. 8. Application
    of Blockchain in smart home [106], [109], [110]. 3.2.1. Applications of blockchain
    in smart homes A smart home consists of IoT-enabled devices (smart devices) and
    mobile applications for remote access. These IoT-enabled devices need to communicate
    with each other. For example, when someone enters the home, the light should automatically
    turn on; for this, the lamp needs to receive signals from the motion sensor [84].
    The BC technology enables secure communication among smart devices installed inside
    the smart home, and each device can request data from other devices instantly
    [111]. Communication between these devices are considered as transactions and
    private BC is used to keep the track of these transactions which are immutably
    stored in the BC ledger. Miners, installed in the smart home, are devices that
    process all incoming and outgoing transactions to and from the devices in smart
    home [112]. • Security and Privacy - IoT enabled smart homes generate and exchange
    lot of personal data between the installed devices [112]. Use of heterogeneous
    IoT devices used in smart home creates security, privacy and authentication challenges.
    Existing security frameworks to overcome these challenges are mostly centralized
    along with noisy and incomplete data and thus are not well suited for IoT enabled
    smart home [108], [113]. BC with its strong security, pseudonymity, distributed
    and decentralized nature has potential to resolve these challenges in unified
    manner. • Data Storage - Smart home is a collection of various physical devices,
    connected to internet, sharing data continuously [109]. Data being generated by
    IoT enabled smart home can be very large. The data storage by IoT devices does
    not meet users security requirements because of low capacity, multiple connectivity
    to the internet and heterogeneity [114]. BC can play a vital role in data storage
    along with maintaining privacy and security [115]. 3.2.2. Related work The research
    works related to smart homes have been discussed under different categories which
    are discussed as follows: Privacy & Security: Dorri et al. [116], Aung et al.
    [117], Dorri et al. [112], Dang et al. [113], Singh et al. [118] and Arif et al.
    [108] worked to improve privacy and security in IoT-enabled smart home. In 2016,
    Dorri et al. [116] proposed a lightweight architecture using BC technology by
    removing all the extra overheads of BC but at the same time, it maintains most
    of the security and privacy benefits of BC. The proposed architecture is hierarchical
    and includes three tiers; smart home, overlay network, and cloud storage. The
    first-tier smart home has local BC. Some key attributes of local BC are it is
    always mined by a device that is always online and high processing, managed by
    its owner (responsible for adding or removing devices), and the block is mined
    and added to the chain without solving PoW consensus algorithm which helps in
    reducing extra overheads of BC. Second-tier uses an overlay network which is the
    same as a peer-to-peer network that uses public BC. The nodes (home miner, devices,
    user’s smartphone) present in the network use Tor for connecting to the overlay
    network to add extra anonymity to the network. If the user has more than one smart
    home then they can use shared BC; this can lead to forking in shared BC as each
    device present in the network can decide whether to keep the block or not. To
    resolve this, devices maintain a table containing the block number and hash of
    the data for the last transaction. The proposed architecture is especially for
    storing and accessing data use cases. At last, the author has evaluated the overhead
    and performance of the proposed architecture and shown that it has constant performance.
    In 2017, Aung et al. [117] discussed about the security and privacy issue in IoT-enabled
    smart homes and suggested an approach of integrating BC with IoT to resolve these
    issues. The author suggested using the Ethereum BC platform and proposed and architecture
    that consists of a smart home miner (device to maintain private BC), private BC
    (to store the policies set up by the homeowner or for managing transactions),
    and local storage. Managing transactions means either storing, accessing, or monitoring
    transactions. But before managing these transactions private BC needs to check
    the policies set up by the homeowner means which sensors can store data, who can
    monitor the data and the only homeowner can change smart contract policies. For
    managing all these activities smart contracts are used and computationally intensive
    mining is not required, which means no need for modern hardware with high-processing
    CPUs. In 2017, Dorri et al. [112] proposed an architecture to extend its previous
    work [116]. The proposed architecture includes three tiers same as in [116]. Smart
    homes are connected using shared overlays and groups of these overlays are termed
    clusters, where each cluster chooses a Cluster Head (CH) which are connected using
    public BC with two key lists PK requester (list of overlay users‘ PK) and PK requestee
    (list of PKs of smart homes connected to the cluster). Authors considered four
    different components in their proposed BC and IoT enabled smart home: transaction
    (communication between local devices), local BC (private BC to keep a record of
    transactions), home miner (device that process incoming and outgoing transactions),
    and local storage (a backup device used by smart devices to store data locally
    in FIFO order). Finally, the author evaluated the performance by using the Cooja
    simulator in terms of packet overhead, time overhead, and energy consumption.
    The evaluation results show little increase but are manageable and security is
    analyzed in terms of confidentiality, integrity, and availability against DDOS
    attacks and linking attacks. In 2018, Dang et al. [113] proposed a BC-IoT-based
    architecture for smart homes (termed as SHIB — smart home IoT BC) to resolve the
    security and privacy issues. Authors designed three smart contracts: ACC (access
    control contract for registering, updating, or deleting access control method),
    JC (judge contract for updating the misbehavior judging method), and RC (register
    contract for updating or deleting policy of ACC). Also, it has the facility of
    adding or removing IoT devices just by adding or deleting respective smart contracts
    (only the owner can perform this activity). The proposed SHIB architecture mainly
    includes a service provider (a device that interacts between IoT devices and storage
    devices), a storage device (devices for storing the collected data), the user
    (owner of a smart home), and a smart home (home where IoT devices are installed).
    At last, the author presented the comparison between the proposed and existing
    architecture using terms of smart contract, the privacy of data, usage of tokens,
    updating policies, and judging the misbehavior. Moving ahead in 2019, Singh et
    al. [118] present a blockchain and cloud computing-based smart home architecture
    known as SH-BlockCC. For analyzing network traffic proposed architecture uses
    MCA (multivariate correlation analysis). Their proposed architecture includes
    a smart home layer, blockchain layer, cloud computing, and service layer. Authors
    also discussed the challenges being faced by the smart home such as security and
    privacy, scalability and access control, availability and reliability, and confidentiality
    and integrity. Furthermore, authors talked about numerous services provided by
    the smart home such as remote controlling lights, fuel/smoke leakage, trapped
    in a bathroom, smart refrigerators, security alarms, and measures of important
    health signs. Their approach uses ZigBee technology. Finally evaluated the performance
    across various parameters like confidentiality, integrity, availability, authentication,
    and privacy using Cooja and Netsim simulator and the result shows SH-BlockCC covers
    all these security aspects. Next in 2020, Arif et al. [108] described various
    security issues because of limited storage and processing power and suggested
    BC as the most promising solution. The authors proposed architecture using consortium
    BC. As public BC is an open network and scalability is an issue, the author prefers
    to use consortium BC with PoW consensus algorithm and SHA-256 algorithm for mining
    and transaction verification. Fundamental building blocks are sensor node (for
    communicating with supernodes; responsible for transaction verification), supernode
    (peer-to-peer server as well as storage for BC ledger; responsible for transaction
    management and blockchain storage), blockchain (uses PoW mechanism), and user
    (admin user and general user; users are authorized by RESTful API). In line with
    that, in 2021, Ammi et al. [119] and Qashlan et al. [120] worked to improve the
    privacy and security of smart homes. Ammi et al. [119] proposed an approach for
    a secure smart home by using BC and improved some of the features like privacy,
    integrity, availability, and confidentiality. The proposed approach has four layers;
    cloud storage, hyperledger fabric, hyperledger composer, and smart home layer.
    On the other side, Qashlan et al. [120] proposed an approach by combining attribute-based
    access control with smart contracts and edge computing to resolve the security
    and privacy-related challenges while data collection and sharing. In particular
    have four users; end-user, IoT devices, smart home multi-edge servers, and the
    cloud. Their proposed approach is shown to be resilient against DoS attacks, data
    mining, modification, and linkage attack. Moreover, authors performed the analysis
    in terms of block size, gas cost, and time cost to determine the feasibility and
    efficiency of the proposed approach. In 2022, Liao et al. [121] proposed an approach
    by combining numerous cloud services for secure access control and a hyperledger
    fabric alliance chain. In particular, uses an elliptic curve cryptography algorithm.
    Simulation results show that the proposed approach has a better access control
    scheme. Transactive Energy Management:Yang et al. [122] proposed a BC-based approach
    for transactive energy management in smart homes to resolve the challenges being
    faced by conventional methods such as low efficiency, lack of privacy, and single
    point of failure. It uses open access consortium BC with smart contracts for energy
    management and payment in a decentralized manner; an elliptic curve digital signature
    and distributed optimization algorithm for faster processing and small transactions.
    The authors discussed three reasons to use BC; no need for any central authority,
    secure data communication at low cost, and easy payment option. The proposed approach
    is presented in three steps; the first smart home model includes the load and
    generation, the second trans-active energy management system is introduced, and
    finally, the design of the BC used. The author modified the PBFT consensus algorithm
    and included a leader selection algorithm and message aggregation scheme which
    helps in saving the network bandwidth and increases the speed of the consensus
    process. For leader selection algorithm uses a round-robin leader selection algorithm
    and secondly, messages collected by the leader elected are aggregated in a single
    confirmation message to others in prepare and commit phase, which saves the network
    bandwidth and speeds up the consensus process. The authors also analyzed the performance
    using a systematic test on a realistic network of IoT devices and numerical simulation
    with data collected and the results show that overall cost reduces by 25%. For
    evaluating BC-IoT, uses Quorum as Quorum is a modified form of Ethereum and it
    modified the PoW algorithm of Ethereum into the PBFT algorithm. Storage & Computation:
    Zhou et al. [109] and Ren et al. [115] worked in the same direction to resolve
    the storage challenge in IoT-enabled smart homes. Zhou et al. [109] proposed a
    BC-IoT-based architecture with a smart contract. The architecture includes a smart
    contract (present in each smart home), private BC (local BC in each smart home),
    and public BC (peer-to-peer BC network to connect the houses). Core components
    included are: transactions, smart contract, local storage (data is uploaded to
    the local miner every 10 days due to storage limitations), security (CIA: confidentiality,
    integrity, and availability), and registration service (IoT devices need to be
    registered in a distributed ledger). Taking forward, in 2021, Ren et al. [115]
    discussed the challenges faced by the smart home such as unauthorized access and
    tampering with data. Security challenges other than these are information disclosure,
    illegal user invasion, and equipment failure. To mitigate these issues author
    proposed an identity-based proxy aggregate signature (IBPAS) for improving signature
    verification, compressing storage space, and reducing communication bandwidth.
    IBPAS consists of six elements: Setup, Key-Gen, Delegation, Proxy-Sign, Aggregate,
    and Verify. IBPAS is used to make sure data is viewed by only the home admin and
    BC storage space is compressed. Their proposed scheme uses an edge network center
    to manage smart devices. The administrator generates a proxy signature for each
    block and then aggregates all to obtain the final signature. Then cloud server
    sends the final signature to the BC. Finally, the author analyzed the IBPAS with
    existing aggregate signature schemes and shows that IBPAS has better in terms
    of communication energy consumption and reduces storage space as various signatures
    are aggregated into one. Device Monitoring: Baucas et al. [123] proposed an approach
    to monitor IoT-enabled devices in smart homes to reinforce security. In particular
    uses private BC, to find unrecognized devices and localization, to gain more information
    about the source of an attack, and the Kalman filter is used to increase the accuracy.
    Furthermore, analysis shows that private BC with WiFi is the most consistent choice.
    Table 7 summarizes the work done for BC and IoT-based smart homes. Table 7. Summary
    of related work in BC-smart home. Reference Main contribution Relevance to BC
    Targeted characteristics Empty Cell Empty Cell Empty Cell Authenticity Integrity
    Confidentiality Provenance Privacy Dorri et al. [116] Proposed a lightweight and
    hierarchical architecture by cost-effectively implementing BC. In particular,
    smart homes, overlay networks, and cloud storage form the three tiers of architecture.
    Smart home tier uses local BC and the overlay network tier uses public BC. The
    work has been analyzed against various attacks. Also, overhead analysis has been
    carried out. ✓ – – – ✓ Dorri et al. [112] This work is the extension of [116]
    and includes three tiers namely smart home, cloud storage, and overlay network.
    The smart home tier consists of smart devices (centrally managed by miners). To
    analyze the energy consumption, packet overhead, and time overhead author uses
    the Cooja simulator. The results show that these parameters witness an increase
    but are within manageable limits. – ✓ ✓ – ✓ Aung et al. [117] Proposed architecture
    for smart homes to resolve issues related to privacy and security and for handling
    access control policy, data storage, and data flow management. Uses Ethereum BC
    platform, with private BC, smart contract, and mining not required. For data storage,
    local storage is used. – – – – ✓ Zhou et al. [109] Presented an overview of IoT,
    BC, and smart contracts and proposes BC-IoT and smart contract-based architecture
    for smart homes. Uses public BC (for the peer-to-peer blockchain network to connect
    houses) and private BC (used in each smart home), smart contract. Also uses the
    Diffie Hellman algorithm for key sharing and the PoW consensus algorithm. – –
    – – ✓ Dang et al. [113] Proposed a BC-IoT-based approach known as SHIB for mitigating
    security, privacy, and authentication challenges in the smart home. Uses Ethereum
    blockchain, three types of smart contracts (ACC, JC, and RC) written in solidity
    language, Remix IDE software for writing and compiling smart contracts, and Ganache
    application. Also compared the proposed approach with existing other approaches.
    ✓ – – – ✓ Singh et al. [118] Discussed the various challenges in IoT-enabled smart
    homes and proposes an architecture for a smart home known as SH-BlockCC. Proposed
    algorithms help in achieving network attack detection and response system in smart
    homes. Uses cloud computing and blockchain technology, uses encryption and hashing
    algorithm for achieving confidentiality and integrity, availability is achieved
    by accepting transactions between devices and miners, authorization is done by
    policy header and shared key between devices and miner, and MCA detection algorithm
    is used for identifying the correlation between traffic. ✓ ✓ ✓ – – Arif et al.
    [108] Talked about the security challenges being faced by smart homes and proposes
    a secure smart home framework using BC, to achieve better security. Proposed framework
    uses consortium BC with PoW consensus algorithm and SHA-256 algorithm for mining
    and verifying transactions. Uses RESTfulAPI (Representational state transfer)
    for user authentication. ✓ ✓ ✓ – ✓ Ren et al. [115] Proposed an IBPAS scheme to
    improve signature verification along with compressing the storage space and reducing
    the communication bandwidth. The proposed IBPAS scheme aggregates the signatures
    into one signature. IBPAS scheme is evaluated using a simulated version of Bitcoin
    BC. The scheme is shown to perform efficiently in terms of storage space required,
    size of the blockchain, and energy consumption compared to other schemes. – ✓
    – – – Yang et al. [122] Proposed a BC-based approach for a trans-active energy
    management system in IoT-enabled smart homes to mitigate challenges like low efficiency
    and single point failure. Uses Elliptic curve digital signature and distributed
    optimization algorithm, open access consortium BC and smart contracts, and modified
    form of PBFT consensus algorithm which includes leader selection algorithm and
    message aggregation scheme. And finally analyzed the performance and the results
    show that overall cost reduces by 25%. For evaluating BC-IoT, the author uses
    Quorum. – – – – ✓ Ammi et al. [119] Proposed a BC-enabled approach to improve
    the security, integrity, confidentiality, and availability of the smart home.
    Uses permissioned and private BC, hyperledger fabric, and hyperledger composer
    with cloud storage. ✓ ✓ ✓ – ✓ Qashlan et al. [120] Proposed an authentication
    scheme for preserving the privacy of data collected and shared. Uses private Ethereum
    BC with two smart contracts i.e., register and access contract with PoW consensus
    algorithm. Along with these, uses attribute-based access control, differential
    privacy, and edge computing. ✓ ✓ ✓ – ✓ Baucas et al. [123] Proposed a low-end
    BC-enabled approach to enhance the security of smart homes. Uses private blockchain
    and localization to gain more information about the source of the attack. Also,
    the Kalman filter is used to increase the accuracy. – – – – – Liao et al. [121]
    Proposed a BC-driven approach with different cloud service combinations to achieve
    a secured and controlled smart home. Furthermore, simulation results show that
    the proposed approach has better access control. Uses Hyperledger fabric with
    Elliptic Curve Cryptography and attribute-based access control algorithm. ✓ –
    – – ✓ 3.2.3. Summary The smart home aims to provide its residents with convenience,
    comfort and reduces efforts, and helps in managing, monitoring, controlling, and
    scheduling tasks with just one click i.e., remote monitoring systems and automation.
    For home automation, devices must be connected to the internet which leads to
    IoT-enabled smart homes. The existing IoTized smart home approach faces challenges
    such as the risk of cyber-attacks, threats to personal data privacy and confidentiality,
    unauthorized access control, and centralized architecture. The application of
    BC for IoT-driven smart homes can help in mitigating these issues. BC offers distributed,
    decentralized, and irreversible transactions, which means as new data arrives,
    the consensus is established among the nodes to validate it and a copy of the
    ledger is updated at each node. Several research works have been carried out to
    explore the capability of BC in IoT-enabled smart homes. Authors worked in numerous
    directions like privacy and security, energy management, and storage and computation.
    For privacy and security, both public and private BC along with smart contracts,
    ZigBee technology, consensus algorithms (such as PoW and PBFT), and elliptic curve
    digital signature are used. For storage and computation, private BC with cloud
    storage is preferred and implemented using the Cooja simulator. Whereas, for energy
    management, consortium BC, smart contracts, elliptic curve digital signature,
    and PBFT consensus is used. Despite the benefits offered by BC-powered IoT-enabled
    smart homes, there exist many challenges. Some of them are large energy consumption
    due to inherent computation required in BC, scalability issues in terms of connected
    devices and a large amount of data generated, and interoperability issues. IoT-enabled
    smart home involves heterogeneous devices with different operating systems which
    makes communication and onboarding on the same platform difficult. Hence, there
    are some areas which need more focus from future prospectus are reduction in computational
    complexity of decentralized algorithms, increased throughput, and interoperability.
    3.3. Smart cities A smart city offers higher quality of life to residents, maximum
    utilization of resources, and brings transparency in governance. Smart cities
    are built by connecting and integrating their systems and infrastructures using
    communication technologies, which work collectively to generate intelligent information
    [124], [125]. According to a report, 86% of developed countries and 64% of the
    developing countries will be urbanized by 2050 [126]. According to the United
    Nations report, 55% of the global population lives in urban areas presently, which
    is 30% in 1950 and this will reach up to 68% by 2050 [125]. With the increasing
    number of people moving from villages to cities, city planners and municipal governments
    are facing difficulties. As a result, challenges such as traffic congestion, air
    pollution, greenhouse gas emission, and waste disposal are affecting the quality
    of life of citizens [84]. Thus, smart cities intends bring many advantages such
    as effective management of traffic, improved health, education, energy services,
    transparency in government sectors, and involvement of citizens [84]. Application
    areas of the smart city where BC can have an impact are education, identity management,
    land registration, energy and waste management, public utilities, and intelligent
    government services [124]. Challenges in implementing such systems also exist
    such as accuracy, uniformity, completeness, and timeliness. Many of the issues
    can be resolved by using BC technology and its features like immutability, provenance,
    and availability. Fig. 9, shows some of the application areas of BC in smart cities.
    Some of the global BC initiatives in the government and public sector as discussed
    in [124] and are summarized below: • Government of Estonia has its own BC solution
    known as KSI to integrate and maintain national e-health records. • Government
    of Dubai has partnered with IBM and Consensys, to enable all transactions on BC
    and termed Smart Dubai. 3.3.1. Applications of blockchain in smart cities • Smart
    Governance - Government spends some portion of its annual budget on social welfare
    schemes for poor, sick, elder, and underprivileged citizens. However, due to the
    lack of proper system such facilities can be misused. Individuals can create multiple
    copies of their identities and submit them before the authorities, which causes
    inefficiency and corruption in the system. To avoid such situations, BC can be
    used to make the system more transparent and traceable [124]. Also, BC can be
    used to implement voting system for citizens from the comfort of their homes,
    where citizens’ identity can be verified using BC [127]. Thus, BC-enabled smart
    digital governance approaches can pave the way for improved public administration,
    improved service deliveries, enhanced transparency and accountability [128]. •
    Agriculture - Price extortion, higher prices, the presence of a middleman, quality
    of food, and manipulations in expiry dates are some of the open challenges being
    faced by the agriculture domain. The agricultural food supply chain includes farmers,
    agents, transportation, wholesaler, shopkeepers, and consumers, all can be connected
    in a trustless manner using BC. Moreover, BC provides end-to-end visibility and
    allows tracing the origin of the product and gives a secure, transparent, and
    efficient supply chain [124]. Thus, for building resilient, secure, transparent,
    and trustworthy agricultural food supply chain BC has been considered as a vital
    technology [129]. • Smart Education - To implement BC in the education domain,
    BC can be used where multiple educational institutes, teaches and students can
    join to manage and access the records such as student details, migration from
    one institute to another, course or degree completed along with the transcripts
    [84], [130]. Moreover, BC can be used to store the learning activities of students
    across different organizations [131]. In future, with the increasing online mode
    of education, BC is expected to contribute towards decentralized and secure education
    ecosystem. • Digital Identity - Blockchain provides a platform where the identities
    of the citizens can be stored digitally and can be accessed by citizens from anywhere.
    One example of a practical application of digital identities is the Estonian e-Residency
    program which enables users to create a Digital Identity [132]. Download : Download
    high-res image (650KB) Download : Download full-size image Fig. 9. Application
    of blockchain in smart cities [84], [124]. 3.3.2. Related work The research works
    related to smart cities have been discussed under different categories which are
    discussed as follows: Security & Privacy: Biswas et al. [133], Sharma et al. [126],
    Rahman et al. [134], Zhang et al. [135] and Kumar et al. [136] all of them worked
    to achieve better security and privacy in a trustworthy manner in IoT enabled
    smart cities. Authors Biswas et al. [133] proposed a framework by integrating
    BC with smart devices installed in smart cities for secure communication. Also
    identified the major threats to smart cities such as threats to availability,
    integrity, confidentiality, authenticity, and accountability, and discussed various
    key attributes provided by BC such as improved reliability and better fault tolerance
    capability. For achieving security, the proposed framework includes mainly four
    layers; the physical layer (which includes sensors and actuators), the communication
    layer (which includes various communication mechanisms such as Bluetooth, WiFi,
    Ethernet, and 6LoWPAN), the database layer (which includes distributed ledgers
    and suggested to use private ledgers to ensure scalability, performance, and security)
    and interface layer (includes various smart applications). In 2018, Sharma et
    al. [126] proposed architecture for a smart city by integrating a software-defined
    network(SDN) with BC. The proposed architecture includes a core (miner nodes with
    high computation and storage resources) and edge network (limited storage and
    computation power), due to which it inherits properties of both centralized and
    distributed networks. Miner nodes are responsible for block creation and verifying
    PoW. For maintaining the integrity of the data, digital signatures and hashing
    (Argon2-based hashing) are used. Includes memory-hardened PoW scheme called “Itsuku
    PoW” and helps in resolving issues such as a raw re-computation attack, memory
    saving, pseudo-random array, parallel searches, and hash composability attack.
    To set up a private BC network it uses Go Ethereum. Finally, the performance is
    analyzed in terms of hash rate (continuously adjusted according to the difficulty)
    and block size (number of transactions for variable block size) which shows that
    the proposed system attains better performance. Also evaluated was the performance
    overhead of the proposed system in terms of latency and throughput. Authors Rahman
    et al. [134] proposed a BC-based infrastructure to provide security and privacy-oriented
    smart contract service for IoT-enabled economy in smart cities. Smart contracts
    offer Spatio-temporal service at a global level without a central authority. For
    system, implementation authors have taken the example of Hajj as a massive crowded
    area. In 2020, Zhang et al. [135] worked to achieve higher data accuracy and to
    reduce the possibility of data being stolen. For this reason, they have proposed
    an LDC (Lightweight data consensus) algorithm based on BC, to be used in smart
    cities and presented a comparison with the traditional approach. After that in
    2021, authors Kumar et al. [136] presented a framework for smart cities named
    trustworthy privacy-preserving secured framework (TP2SF). It includes three modules;
    trustworthiness, two-level privacy, and intrusion detection module. The trustworthiness
    module uses an address-based BC reputation system to ensure that recorded data
    is authentic. In the two-level privacy module, the first level is used for authenticating
    data processing by using the SHA-512 hashing algorithm and enhanced proof of work
    consensus algorithm, and the second level is used for data transformation and
    generation, and original data was transformed into another format by using PCA
    based privacy preservation (feature mapping, selection, normalization, and transformation).
    The proposed approach is deployed using IPFS-based off-chain CloudBlock and BC-enabled
    on-chain FogBlock. The authors analyzed the framework in terms of accuracy, detection
    rate, F1 score, and precision score using two IoT datasets called BoT-IoT and
    ToN-IoT. Experiments are performed using R, Python language, and the machine learning
    algorithm SciKit-learn. The framework is implemented using Ethereum, smart contracts
    written in solidity language, and IPFS. Trustworthiness: Khan et al. [137] highlighted
    the importance of video surveillance in cities to keep an eye on the activities
    happening in the city and presents a BC-based system to store the recordings of
    the video to ensure the trustworthiness of the recordings and will help in differentiating
    between the fake videos and the original video cost-effectively. In particular,
    it includes six participants; a control room manager (CRM): To ensure the operator
    operates all devices, control room supervisors (CRS): who manage all devices in
    line, operators: who perform proactive and reactive surveillance, police officers
    (POs): manages police radio, police control room operators (PCROs): communicates
    CCTV command room operatives and local authority staff (LAS): manages police radio
    to communicate CCTV command room. Data Sharing: Cha et al. [138] discussed the
    challenges being faced during public cloud storage and how BC and secret sharing
    can resolve the personal information sharing issue. The authors also highlighted
    the advantages provided by the proposed system such as a large amount of data
    can be stored on an external cloud service provider (CSP), resolving privacy issues
    that occur in CSP, and data can be restored and verified for integrity. The proposed
    architecture uses consortium BC and a secret sharing algorithm for managing user
    data from CSPs. The proposed approach includes mainly five steps; data gathering,
    processing, data transaction, secret sharing, and data reconstruction. Moreover,
    compared and analyzed the proposed system in terms of the AES-128 encryption algorithm
    and the execution speed. Along with this also discussed how it provides security
    in the smart city use case. Energy Management: Khattak et al. [139] proposed a
    BC-based application for the automatic exchange of electricity between residents.
    The price is calculated by the admin (legal centralized authority). The author
    has highlighted the application of BC in managing energy in smart cities. Discussed
    the automatic bidding of supply and demand for energy. In particular, uses a hyper-ledger
    fabric framework for maintaining privacy and confidentiality as participants are
    directly affiliated with an exchange of electricity and money, and the ledger
    is updated and notified. Authentication & Authorization: Esposito et al. [140]
    and Ferreira et al. [141] worked in the same direction to enhance the authentication
    and authorization in smart cities. Esposito et al. [140] highlighted that existing
    smart city applications are a combination of different existing applications where
    each application has its own set of privacy policies which leads to the challenges
    such as consistent and secure data replicas. To resolve this issue author proposes
    a BC-based approach-integrating it into the FIWARE platform for distributed management
    of identity and authorization policies with a global view of policies within the
    system. In the proposed work permissioned BC platform Hyperledger Fabric is used
    to maintain the consistency between the repositories holding security policies
    and the Kafka-based consensus algorithm. Smart contract chain code is used for
    registration, query, and modification of identity information. In addition to
    this, the proposed approach is evaluated in comparison to the existing approach.
    On the other side, Ferreira et al. [141] proposed an approach to improve the registration
    and authentication of IoT devices in smart city applications. In particular, the
    authors developed API gateways and network gateways to identify and authorize
    messages. Authors have proposed HTTP API gateways, edge computing, network gateways,
    and fog computing. Smart contracts are responsible for registering IoT devices
    and associating them with their respective owners. Table 8, summarizes the work
    done in the BC-smart city use case. Table 8. Summary of related work in BC-smart
    city. Reference Main contribution Relevance to BC Targeted characteristics Empty
    Cell Empty Cell Empty Cell Authenticity Integrity Confidentiality Provenance Privacy
    Biswas et al. [133] Proposed a security framework for a smart city by integrating
    BC with smart devices for secure communication. Uses the Ethereum platform which
    provides smart contract functionalities, suggested to use of private ledgers to
    ensure scalability, performance, and security for real-time applications. – –
    – ✓ ✓ Sharma et al. [126] Presented a new approach for smart city, integrating
    software-defined networking and BC technologies and offering low latency and real-time
    processing. Uses a private Ethereum BC network, memory-hardened PoW scheme called
    Itsuku PoW, and Argon2 hashing technique. Also, analyze the performance in terms
    of hash rate and block size. ✓ ✓ – – ✓ Rahman et al. [134] Put forward a BC-based
    infrastructure to provide security and privacy-protected smart contracts for IoT-enabled
    sharing services in smart cities. Uses permissioned private Ethereum and Hyperledger
    BC with IPFS as off-chain solutions, MEC, and AI. Along with this uses the Amazon
    AWS platform and SHA 256 hashing algorithm. ✓ ✓ – – ✓ Khan et al. [137] Proposed
    a BC-based approach to ensure that the stored recordings are genuine and help
    in differentiating between original and fake videos. Uses Hyperledger Fabric,
    private BC. No consensus algorithm is used, instead, validation peers are nominated
    by the admin for validation purposes. ✓ ✓ – – ✓ Khattak et al. [139] Suggested
    an intelligent BC-based application for energy management in smart cities. Uses
    open source BC i.e. hyperledger fabric framework, cloud for permanent data storage,
    and smart contract to make sure that transaction is valid. ✓ ✓ ✓ – ✓ Zhang et
    al. [135] Presented a lightweight data consensus algorithm based on BC technology
    for secure transmission in IoT for smart cities. Uses proposed lightweight data
    blocks consensus algorithm. – – – – ✓ Kumar et al. [136] Proposed a BC and machine
    learning-enabled framework for smart cities named as trustworthy privacy preserving
    secured framework (TP2SF). Uses Ethereum BC with SHA-512 hashing approach, enhanced
    proof of work consensus algorithm, solidity language, and IPFS version 0.4.19.
    ✓ ✓ ✓ – ✓ Cha et al. [138] Proposed an approach by integrating BC with the cloud
    for protecting personal information and secret sharing algorithm. Uses consortium
    BC with a secret sharing algorithm. Block data is stored using a chain to maintain
    data integrity. Finally, the performance is analyzed in terms of the AES-128 encryption
    algorithm and execution speed, privacy, integrity, efficiency, scalability, and
    decentralization. – ✓ ✓ – ✓ Esposito et al. [140] Proposed a BC-enabled approach
    for authentication and authorization policies in smart cities and integrated it
    with FIWARE. Used Hyperledger Fabric BC platform with Kafka-based consensus algorithm.
    Analyze the proposed approach in terms of latency and throughput. ✓ ✓ – – ✓ Ferreira
    et al. [141] Proposed an approach for registration and authentication for applications
    used for a smart city. Uses Ethereum BC, a smart contract written using solidity
    language (responsible for registering IoT devices and associating them). NodeJs
    is used for IoT device management ✓ – – – ✓ 3.3.3. Summary Smart city paves the
    foundation for global urbanization where emerging technologies are used to offer
    its citizens effortless services such as smart transportation, smart governance,
    smart healthcare, and smart education. To provide such services the role of IoT
    is considered to be significant. Despite the numerous advantages of IoT-based
    smart cities, it faces some challenges like privacy, security, centralization,
    and denial of service that are preventing faster adaptation of smart cities. These
    challenges can be resolved by combining BC with IoT-smart homes. BC offers irreversible
    transactions, distributed and decentralized architecture, and non-repudiation,
    to its users. Integrating BC with a smart city offers lower administrative costs,
    reduces corruption, and provides a platform for integrated documents. Authors
    have worked in numerous directions i.e., security and privacy, data sharing, trustworthiness,
    energy management, and authorization. For data sharing authors have used external
    cloud storage, consortium BC with a secret sharing algorithm. While for energy
    management and authentication & authorization, permissioned BC platform hyper
    ledger fabric was used. On the other side, authors preferred private BC with a
    PoW consensus algorithm, digital signatures, hashing, and smart contracts to attain
    better privacy and security. Still, there is some future direction that needs
    further attention. Some of them are electricity distribution among the residents
    can be improved, in real-time data sharing distributed sharing algorithm need
    to be more secure, load balancing is another important concern, various emerging
    technologies can be merged like edge and deep leaning with BC enabled smart city.
    BC-IoT-driven smart city offers innumerable opportunities. Yet some challenges
    are typically faced such as massive data storage, scalability, a large number
    of simultaneous users, and chances of centralization. 3.4. Supply chain and logistics
    A supply chain means it is a logical chain of all the different stakeholders involved
    in the different phases of the supply chain. Phases involved in the supply chain
    of any product are raw material, transportation, manufacturing, shipment, wholesalers,
    retailers, and consumers [142]. It is estimated that the worldwide supply chain
    market will expand at a rate of 87% and by the end of the year 2023, it will rise
    from $45 million to $3,314.6 million [143]. A product is a combination of different
    resources provided by possibly different manufacturers across different geographic
    locations. Because of the lack of transparency in the traditional supply chain
    many times low-quality products are counterfeited with the original product. Some
    other challenges faced by conventional supply chains are lack of end-to-end visibility,
    lack of complete trust, ineffective information flow, and lack of advance technologies
    [144]. According to the report of Microsoft out of 408 organizations in 64 countries,
    69% of them lack full visibility in their supply chain and 65% of them have experienced
    disruption in the supply chain [143]. According to a report by Scarano, 70,000
    consumers signed a petition that urged large companies to improvise their supply
    chain transparency [143]. Download : Download high-res image (408KB) Download
    : Download full-size image Fig. 10. Application of blockchain in supply chain
    & logistics (food supply chain) [124]. BC integrated IoT can transform the landscape
    of supply chain and logistics by instilling complete visibility, traceability,
    trust, dispute settlement, automation, and auditibility [145]. By using BC not
    only the transparency and the security but also the physical flow of the product
    also increases as decision-making becomes quick [142]. Traceability is very crucial
    in the food and agriculture sector because it helps in providing information about
    the entire food life cycle to ensure the quality of the food [146]. Through e-commerce
    websites, packed foods were delivered and consumers need to pay for food items
    without having any food quality information, and packed foods are more sensitive
    to environmental conditions, and sometimes deterioration of food occurs [146].
    The typical supply chain process focuses mainly on the origin of the raw material
    but today the scope has expanded from origin to end customer. In this context,
    BC-enabled framework can be build, which can potentially offer access to the required
    data at every touchpoint [67]. Furthermore, because of the distributed and decentralized
    nature of BC, all the stakeholders in a supply chain network can immutably view
    and access the data stored on the distributed ledger. Thus, BC allows users to
    securely, transparently, and trustlessly build a flexible and resilient supply
    chain [147]. Walmart and Kroger are the first companies who have implemented BC-based
    supply chains [148]. Some of the commercial implementations of BC in the supply
    chain are IBM Blockchain-TradeLens, which mainly focus on logistics, OriginTrail,
    to bring transparency to the international supply chain from 2013 to let its users
    know more about their food product and Blockverify, an anti-counterfeit which
    brings transparency in the supply chain (especially used in diamonds, pharmaceuticals,
    and electronic industries) [87]. TradeLens is a joint venture of IBM and Maersk
    (largest container shipping company) [149], where multiple parties can interact
    with each other and can access real-time shipping data [143]. Fig. 10, shows the
    application of BC in the supply chain of drugs. 3.4.1. Applications of blockchain
    in supply chain and logistics • Pharmaceutical supply chain - Drug counterfeiting
    is a most common problem that not only affects human lives but also economic loss
    to health sector. According to a report by WHO every year 30% of the drugs sold
    in the market are counterfeit [150]. Blockchain provides traceability capabilities
    to verify the drugs, so that the quality is not compromised [67]. By implementing
    a better system for drugs traceability, will help in protecting patients from
    using fake medicines [151]. • Food supply chain - Food supply chain is one of
    the biggest supply chains. It suffers with adulteration of food due to which health
    and societal issues are on rise. So it is critical to find a way to keep an eye
    on each phase from food cultivation to consumption. Conventional supply chains
    face difficulty in ensuring transparency and visibility, and suffers with single
    point of failure [152]. To maintain the integrity of the product and supply chain,
    records must be tamper-proof, so that the integrity of the food history is maintained
    [153]. Also, traceability brings assurance to food quality and safety. To achieve
    all these discussed features, BC is expected to play a cardinal role. 3.4.2. Related
    work The research works related to supply chain and logistics have been discussed
    under different categories which are discussed as follows: Credit Evaluation:
    Mao et al. [154] proposed a BC-based credit evaluation system for the food supply
    chain to improve supervision and management. By using BC, traders are accountable
    for all their actions, which is known as provenance in BC. The proposed approach
    is a combination of BC technology and a deep learning model to collect and analyze
    the credit evaluation of traders. The system gathers credit evaluation text from
    traders by smart contracts on the BC and is analyzed directly by a deep learning
    network named Long Short Term Memory (LSTM). Payment: Viriyasitavat et al. [155]
    put forward an approach for flexibility and smooth flow of cash and payments and
    improve the efficiency of financial transactions using BC technology and smart
    contracts. The proposed approach was explained using the proposed cryptocurrency
    Future Unspent Transactions Output (FUTXO). The proposed approach uses Blockchain
    technology, smart contracts, matching algorithms, and off-chain verification with
    the PBFT consensus algorithm. Monitoring: Weber et al. [156] presented the use
    of BC and its smart contracts in collaborative process execution and applies it
    in three different use cases i.e supply chain, incident management, and insurance
    claim handling. Moreover, authors highlighted the features of BC like decentralization
    since using BC so that no central authority is required but trust between the
    involved parties remains intact. For implementing proof of concept, authors used
    Ethereum BC platform, smart contracts, and off-chain storage. Double Chain: Leng
    et al. [157] proposed a public BC for an agriculture supply chain using double
    chain architecture. One is the user information chain and the second is the transaction
    chain. User information is recorded in the user information chain which ensures
    authenticity, integrity, and privacy, and all the transaction data is stored using
    the transaction chain which ensures authenticity, integrity, and openness. The
    key benefits of using a double chain are any node can view the resources without
    knowing the private information, reduces the redundant information, and business
    expansion can be easily implemented between platforms and financial institutions.
    Interestingly, authors proposed their own consensus algorithm which they claim
    to work efficiently for agriculture BC. Real time tracking: Helo et al. [158]
    proposed a project known as real-time supply chain architecture (RTSC) for real-time
    tracking and tracing of the supply chain using RFID, IoT, and BC. RFID and IoT
    are used for user interface and to provide real-time information and BC is used
    to verify the authenticity of transactions and provide a chain of immutable transactions.
    The proposed approach uses the Ethereum BC platform and PoW consensus algorithm.
    DApps are used to develop the front end using HTML and the back end using solidity
    smart contract and interaction between the front end and back end was done using
    web3.js. Stakeholders involved in the supply chain can track and trace data about
    the shipped items. The proposed system provides a connection between transport
    companies and tracking devices. Along with this, presented the benefits of the
    proposed system. Traceability: Tian et al. [159], Tian et al. [160], Caro et al.
    [153], Rovzman et al. [161], Tsang et al. [146], Humayun et al. [162], Agrawal
    et al. [163] and Lou et al. [164], worked in the same direction i.e., to track
    and trace the products in supply chain, which offers openness, transparency, reliability
    and trusted environment. Authors Tian et al. [159] proposed a food supply chain
    traceability system using RFID and BC technology to improve food safety and quality.
    RFID technology is used for data acquisition, circulation, and sharing, and BC
    technology is used to ensure that the information shared and published is reliable
    and authentic. The benefits of using BC technology are information is transparent
    and open, no requirement for centralized organization, and irreversible transactions.
    In 2017, Tian et al. [160] put forward a new decentralized traceability system
    which is an extension of [159], based on HACCP (Hazard analysis and critical control
    points), IoT, and BC technology. It includes mainly five links; production, processing,
    warehousing, distribution, and retail. It uses IoT (RFID, WSN, GPS) to collect
    and transfer, and BigchainDB for storing and managing data. Caro et al. [153]
    proposed a decentralized traceability approach for the agriculture food supply
    chain by integrating BC with IoT, known as AgriBlockIoT. As it directly provides
    critical information on production and consumption, it ensures transparency and
    auditable assets. The main modules included are API, controller, and Blockchain.
    Also deployed the proposed system for the use case ‘from farm to fork using two
    different BC platforms Ethereum and Hyperledger Sawtooth. Both of these provide
    a different level of customization as Ethereum works with a single transaction
    while Hyperledger allows custom transactions. A comparison of the performance
    of both the BC platforms is shown in terms of latency, CPU, and network usage
    and results show Hyperledger has better performance as compared to Ethereum. Table
    9. Summary of related work in BC-supply chain & logistics. Reference Main contribution
    Relevance to BC Targeted characteristics Empty Cell Empty Cell Empty Cell Authenticity
    Integrity Confidentiality Provenance Privacy Weber et al. [156] Proposed a BC-based
    technique to address the lack of trust challenge in the collaborative business
    process. Uses Ethereum blockchain, smart contracts written in solidity language,
    Proof of concept consensus, and off-chain data storage. – ✓ ✓ – – Tian et al.
    [159] Proposed a supply chain traceability system that covers the whole process
    of data gathering to information management of every link involved in the agricultural
    supply chain. Proposed system uses RFID and BC technology. Also analyzed were
    the advantages (like the benefit of tracking and traceability, enhanced creditability,
    and fight against fake products) and disadvantages (like high cost, and immaturity
    of BC), of using RFID and BC technology. ✓ ✓ – – – Tian et al. [160] Proposed
    a traceability system based on HACCP that uses BC and IoT to improve the efficiency,
    openness, neutrality, reliability, and transparency in the food supply chain.
    Uses RFID for labeling the products, digitally signed the smart contract for the
    exchange of information stored on BigchainDB. ✓ – – – – Caro et al. [153] Proposed
    an approach by integrating BC with IoT for traceability of the agriculture food
    supply chain known as AgriBlockIoT. Deployed the use case using two BC platforms
    i.e. Hyperledger sawtooth and Ethereum and evaluated the performance in terms
    of latency, CPU, and network usage. Concluded that Hyperledger sawtooth shows
    comparatively better performance. – – – ✓ – Leng et al. [157] Proposed an approach
    for an agriculture supply chain based on double chain architecture. Uses public
    BC double chain architecture i.e. user information chain and the transaction chain
    with its proposed consensus algorithm. ✓ ✓ – – ✓ Mao et al. [154] Proposed a credit
    evaluation system for different stakeholders in the food supply chain, to strengthen
    the effectiveness of supervision and management. Uses IoT and BC with smart contracts
    known as chain code. The system adopts Hyperledger fabric 1.0 consortium BC. ✓
    ✓ – ✓ ✓ Rovzman et al. [161] Presented an approach for integrating BC and IoT
    technologies that supports modularity which means any number of different types
    of nodes can join. Uses IoT as a communicating means for nodes and BC is used
    for listing the services and information and for validation uses the Rinkeby test
    network. ✓ – – – ✓ Tsang et al. [146] Presented an overview of the food supply
    chain, challenges in existing food traceability systems, and benefits of integrating
    BC and IoT. Proposes a BC-IoT-based food traceability system for managing perishable
    food. Uses IoT technology for environmental monitoring, collected data is stored
    using a cloud database and associated keys, and the life cycle is maintained using
    BC with hash algorithm SHA-256, to store the fingerprints of the block. POSCS
    (Proof of Supply Chain Share) consensus algorithm is used. ✓ ✓ – – ✓ Humayun et
    al. [162] Proposed a framework named BCTLF, for smart logistics and transportation.
    Uses BC and IoT for intelligent logistics and transportation systems. Data is
    collected using sensors and stored in the distributed blockchain ledger. – ✓ –
    – ✓ Helo et al. [158] Proposed an approach by integrating BC, IoT, and RFID for
    real-time tracking and tracing of the supply chain. Uses the Ethereum BC platform
    and PoW consensus algorithm. DApp is used to develop the front end using HTML
    and the back end using solidity smart contracts and interaction between the front
    end and back end was done using web3.js ✓ – – – – Agrawal et al. [163] Proposed
    a BC-driven supply chain traceability system that uses distributed ledger for
    storage and authentication, in the textile and clothing industry. Proposed approach
    uses private BC, proof of work consensus algorithm, public, and private key pair
    generated using RSA algorithm. ✓ – ✓ ✓ ✓ Viriyasitavat et al. [155] Proposed an
    architecture based on BC and smart contracts for a smooth flow of payments, to
    improve the efficiency of the financial transactions. Uses Blockchain technology,
    smart contracts, matching algorithm, and off-chain verification with PBFT consensus
    algorithm. ✓ – – – – Lou et al. [164] Proposed a BC-based framework named SESCF
    to resolve the challenges being faced by the supply chain. Proposed approach uses
    Ethereum consortium BC, solidity language for smart contracts, RFID, and payment
    channels. ✓ – – – – Song et al. [165] Proposed a framework to form a supply chain
    effectively using IoT and BC. Uses access control list, double chain structured
    consortium BC with two different BC techniques; hyperledger fabric and ethereum.
    ✓ – – – ✓ Bamakan et al. [166] Proposed a framework to evaluate the performance
    of the supply chain. Uses fuzzy logic, AI, IoT, BC, and big data. ✓ ✓ ✓ – ✓ Al
    et al. [167] Proposed a BC-driven trust model which simplifies data sharing and
    reduces computational, latency, and storage requirements. Uses IoT, BC, and compared
    it with the PoW consensus algorithm. ✓ – – – – In 2019, Rovzman et al. [161] proposed
    a concept to integrate BC and IoT and implemented it for supply chains. One of
    the crucial features provided by this approach is modularity which means any number
    of different types of nodes can be linked. Some of the core nodes are the genesis
    node, service node, user node, interface node, agreement node, and mapping node.
    For validation smart contracts are implemented using the Rinkeby test network.
    Tsang et al. [146] discussed the issues in the conventional supply chain like
    reliability, scalability, and information accuracy, and suggested how BC can mitigate
    these challenges. Proposes a BC -IoT-based food traceability system (BIFTS) for
    traceability in the supply chain. IoT is used for monitoring applications, collected
    data is stored using a cloud database and the food life cycle is managed by using
    BC. It is a lightweight and vaporized hybrid approach of BC and cloud. For consensus,
    it uses proof of supply chain share (PoSCS) to mint or forges the blocks and SHA-256
    for hashing. The benefits of using the proposed approach are secure and reliable
    food traceability, lightweight and vaporized design, and intelligent food quality
    evaluation. Authors also highlighted the challenges in implementing BIFTS in the
    supply chain like human errors, honesty, integrity, and open-mindedness for all
    stakeholders to adopt the system. In 2020, Humayun et al. [162] proposed a framework
    by integrating BC with IoT, named BCTLF for logistics and transportation systems
    to make the system more convenient and transparent. Authors highlighted the benefits
    of integrating BC-IoT such as freight tracking, temperature control, carrier authentication,
    and fast delivery through continuous monitoring. In particular, the authors discussed
    the two case studies to highlight the role of BC and IoT in the supply chain.
    Agrawal et al. [163] in 2021 proposed a BC-driven supply chain traceability system
    that uses distributed ledger for storage and authentication, in the textile and
    clothing industry, and explained the proposed approach at an organizational and
    operational level. In particular, the authors presented a use case of the organic
    cotton supply chain through a mass balancing validation mechanism. The proposed
    approach uses private BC, proof of work consensus algorithm, and public and private
    key pairs generated using the RSA algorithm. Lou et al. [164] proposed a BC-based
    framework named SESCF to resolve the challenges being faced by the supply chain
    such as information flow, logistics, and capital flow. The proposed approach uses
    BC, smart contracts, RFID, and payment channels. BC and smart contract ensures
    information symmetry, RFID ensures the unique identity of goods and the payment
    channel solves the issue of a payment default. The proposed approach helps in
    improving the efficiency of the supply chain by putting goods transactions on
    the chain and capital transactions off the chain. The proposed approach follows
    a layered architecture; user layer, transaction layer, and BC layer. Performance
    Evaluation: Bamakan et al. [166] proposed an approach to evaluate the performance
    of the supply chain, save computing time, and speed up information flow. The proposed
    framework includes six layers; data layer (system‘s data input sources), connection
    layer (necessary infrastructure to receive real-time information), blockchain
    layer (exploit data in conjunction with ANFIS model), smart layer (smart contracts),
    ANFIS (adaptive network-based fuzzy interface system) layer (evaluates SSC performance)
    and application layer (performance management). With the help of IoT, BC, and
    ANFIS, a performance management system is created. Security: Song et al. [165]
    proposed an approach using IoT and BC technology to form supply chains effectively.
    In particular, includes an access control framework, an access control policy
    determined by all members jointly, and BC technology to ensure all processing
    is trusted and valid. The access control list has two modules; the registration
    module (for information registration) and the inspection module (for judging misbehavior).
    Moreover, the authors have used a backup peer mechanism, internal data isolation,
    and transmission method to ensure availability. Trust Model: Al et al. [167] proposed
    a BC-driven trust model which simplifies data sharing and reduces computational,
    latency, and storage requirements. It resolves trust challenges between supply
    chain parties and maintains data integrity. In particular, it includes three modules;
    data (data produced by sensors within the supply chain and trade events in between
    its nodes), IoT network (authenticates and supervises the messages and node),
    and BC and supply chain (communicates with each other through series of queries).
    Table 9 summarizes the work done in the BC-supply chain use case. 3.4.3. Summary
    The supply chain is the chain of stakeholders involved from initial production
    stage to final consumption of any product. It aims to provide quality compliance,
    eliminate of communication gaps, optimize shipping, and customer satisfaction.
    However, there are some challenges with the existing system such as the availability
    of resources, limited transparency, traceability, trust issues, and stakeholder
    management. BC has been leveraged to overcome these challenges, such as decentralized
    collective maintenance, matching between supply and demand of resources, verifiability,
    and identifying counterfeit products. To explore the applicability of BC in supply
    chain and management various research has been done. In particular, researchers
    have made efforts to monitor, track and trace the supply chain and ensure smooth
    flow of payment. Especially for real-time tracking and monitoring, various researchers
    have used Ethereum BC platform with smart contracts, double chain, RFID, IoT,
    and Hyperledger BC. For hashing, SHA-256 and consensus PoW is preferred. Nonetheless
    there are many aspects which still need dedicated research efforts, for instance,
    analyzing scalability and interoperability for real-time use cases, speed, and
    efficiency of the consensus algorithm. Quality management, risk management, and
    e-commerce are other significant areas to be considered in the supply chain. Apart
    from information flow, BC and IoT enabled supply chain can be built that manages
    material flow, capital flow, value flow, and risk flow [146]. Lastly, interoperability,
    massive data handling, throughput enhancement are few more areas which need to
    be worked upon when considering BC and IoT enabled supply chain and logistics.
    3.5. Autonomous vehicle Vehicles are becoming smarter as they can not only gather
    information with the help of the sensors installed in them but can also communicate
    that information over the Internet and can act according to the received response
    [168]. An autonomous vehicle refers to a connected, smart, and driverless vehicle
    that can communicate or exchange data with other vehicles, city infrastructure,
    and online services or applications and is traveling without humans controlling
    the vehicle [169]. City infrastructure includes traffic lights, road work, route
    planning, etc. Autonomous vehicles are a network of a vehicle to vehicles (V2V),
    vehicles to infrastructure (V2I), vehicles to the roadside unit (v2R), and vehicles
    to pedestrians (v2P) [145]. The concept of driverless vehicles was first introduced
    in 1920 [170]. The level of automation varies from zero to full automation, according
    to NHTSA, which has classified automation into five levels, (i) no automation,
    (ii) function-specific automation, (iii) combined function automation, (iv) limited
    self-driving automation, and (v) fully autonomous vehicle [170]. According to
    a report, the smart vehicles market will be worth US$87 billion and by the end
    of the year 2040, every four out of ten vehicles could be autonomous [169]. Because
    of human errors, thousands of deaths happened each year which can be reduced to
    zero by using AVs [169]. smart insurance, and self-owning car, are the application
    of autonomous vehicles. Some practical implementations of self-driving vehicles
    are La‘Zooz, a ride-sharing application, a blockchain version of Uber [171], and
    also Uber has ordered 50,000 SUVs to deploy fully self-driving vehicles over the
    street. Implementing autonomous vehicles will help in reducing accidents, reducing
    traffic congestion, increasing lane capacity, and efficient parking. However,
    realizing these benefits from autonomous vehicles requires large exchange of small
    data and real-time processing. Moreover, the data exchanged by these smart vehicles
    leads to new privacy challenges [172]. BC and IoT enabled autonomous vehicles
    will be able to handle these challenges. 3.5.1. Applications of blockchain in
    autonomous vehicles • Electric Vehicle Charging - The increase in electric vehicles
    (EVs) has resulted in high demand for fast charging stations. In this context,
    smart vehicles connected to the owner’s smartphone can provide pro-active services.
    If the travel pattern is securely stored on BC then charging can be done automatically
    at regular intervals. Moreover, based on the secure data stored on BC, EVs can
    be provided with the most efficient charging cycle [172] and the unavailability
    of charging stations can be minimized. In addition to energy management, identity
    management of autonomous EVs is yet another area where BC can be leveraged [173].
    Share and charge are the BC-based platforms that allow P2P energy trading among
    EVs and private charging stations [56]. • Smart Insurance - Today insurance companies
    offer flexible insurance which is based on various data collected from the vehicles
    and evaluation of driving behavior like speed, and breaking pattern [172]. In
    this context, BC enabled vehicles can provide secure, distributed, privacy protected
    exchange of data. Moreover, data is shared on the basis of demand not continuously
    [172]. Since the data stored on BC is tamper-proof and distributed, users are
    not able to alter it, neither for insurance claim fraud nor for inflating insurance
    premium [174]. Smart contracts running on top of BC can enforce automatic claim
    settlement in transparent and trustless manner [175]. 3.5.2. Related work The
    research works related to autonomous vehicles have been discussed under different
    categories as follows: Payment: Jamil et al. [176] proposed a BC-based privacy-preserving
    approach for automatic payment for fueling of smart cars without human intervention,
    ensuring privacy, transparency, and trust. In particular, authors used Hyperledger
    fabric permissioned BC (to provide modular, scalable, and secure foundation),
    off-chain storage, a smart contracts written using solidity language, an elliptic
    curve to generate public and private keys, Diffie Hellman key exchange. Their
    proposed approach includes services like data sharing, smart pump management,
    secure payment transaction, smart car management, and user identity management.
    Finally, the authors analyzed the performance in terms of latency, resource consumption,
    and transactions per second using the Hyperledger caliper. Data Storage: Yin et
    al. [177] proposed a BC-based incremental update system for data storage, improving
    data records and update efficiency. Their proposed system includes only the data
    storage stage and update stage. Copies of the data are stored on different independent
    sources and their index is stored on-chain, which enhances data reliability. Along
    with that, a PoW algorithm is designed to improve transaction efficiency and reduces
    system security risk. For calculating the secret key authors used the elliptic
    curve digital signature algorithm (ECDSA) and SHA 256 for hashing. Communication:
    Singh et al. [178] highlighted the issues in intelligent vehicle communication
    using a traditional approach such as trust, data accuracy, and reliability. To
    overcome these challenges, the authors proposed a reward-based approach known
    as Intelligent Vehicle-Trust Point (IV-TP) for communication using BC technology.
    The proposed approach stores all IV-TP details of every vehicle and is accessed
    by IVs. IV-TP provides fast and secure communication between IVs. It includes
    three basic technologies; connected devices, vehicular cloud computing, and BC.
    Forensic Application: Oham et al. [179] and Cebe et al. [168], both worked towards
    forensic aspects of autonomous vehicles. Oham et al. [179] proposed a distributed
    forensic framework using permissioned BC for the auto insurance liability model
    for autonomous vehicles. Their framework provides untampered evidence for automatic
    processing of insurance claims and settling disputes. Thus, the framework puts
    an end to the chances of a single point of trust and allows multiple participants
    to simultaneously agree on the evidence needed to process claims. Authors also
    presented a security analysis of the proposed framework. While Cebe et al. [168]
    proposed a framework to manage the collected data, identify faulty parts, and
    solve the disputes in case of an accident with the help of integrating vehicular
    public key infrastructure (VPKI) with permissioned BC. Their work includes three
    types of data; event data, diagnosis data, and maintenance data which is stored
    using the cloud, and respective hashes are stored in BC. The proposed system connects
    all the stakeholders involved from vehicle manufacturers to customers and offers
    traceable, privacy-aware post-accident analysis with minimum processing overhead.
    Moreover, the proposed approach includes a fragmented ledger that stores data
    such as maintenance information, history, and car diagnosis report. Security &
    Privacy: Yuan et al. [171], Dorri et al. [172], Singh et al. [180], Rathee et
    al. [181], Oham et al. [182] and Tyagi et al. [183], worked towards improving
    security and privacy in Autonomous vehicle using BC. In 2016, Yuan et al. [171]
    provided an overview of BC technology and its potential in a transportation system.
    To resolve security and privacy-related challenges, the authors proposed a seven-layer
    BC-enabled intelligent transportation system (B2ITS) and explained it using a
    case study of a ride-sharing service. Seven layers are the physical layer (which
    includes physical entities such as devices, and vehicles), the data layer (which
    includes chained data blocks using techniques such as asymmetric encryption, time
    stamping, hashing, and Merkle tree), the network layer (includes distributed networking,
    data forwarding, and verification), consensus layer (includes all possible consensus
    algorithm), incentive layer (includes incentives and rewards), contract layer
    (includes scripts, algorithm, and smart contracts) and application layer (includes
    various application scenarios). In 2017, Dorri et al. [172] discussed the conventional
    methods used in smart vehicles and highlighted the challenges namely centralization,
    lack of privacy, and safety threats, and suggested BC as a potential solution
    to all these challenges. Authors proposed a solution based on BC for automotive
    security and privacy. Stakeholders involved in the chain such as smart vehicles,
    equipment manufacturers, and service providers form an overlay network to communicate
    with each other. Communications are encrypted using asymmetric encryption. Discussed
    some of the applications of the proposed architecture like remote software updates,
    insurance, electric vehicle, smart charging services, and car-sharing service.
    Furthermore, compared it with the conventional method in terms of security and
    privacy. In 2018, Singh et al. [180] provided a brief overview of BC technology,
    its advantages like security, transparency, reliability, and its application for
    an intelligent vehicle. Moreover, the authors proposed a BC-driven approach for
    Intelligent Vehicle communication, which ensures trustworthiness among vehicles
    and evaluated the performance using real-time traffic scenarios. Rathee et al.
    [181] in 2019 highlighted the security-related challenges in smart sensors of
    connected vehicles. They proposed a security mechanism for connected autonomous
    vehicles services framework using the BC technique to ensure transparency and
    security. Initially, data is stored using an ordinary database and then stored
    permanently on BC to track each activity. The authors analyzed the proposed approach
    using NS2 simulator against the existing approaches and the results showed a 79%
    success rate. In 2021, Oham et al. [182] proposed a framework for decentralized
    security known as B-FERL for securing smart vehicles using BC. Their framework
    is based on a double-tier architecture which includes initialization operation
    (for creating a record of vehicles for authentication) and challenge-response
    mechanism (to query the integrity of the vehicle’s network). The proposed framework
    includes entities like verifiers (legal authorities) and proposers (vehicle manufacturers,
    service technicians). Transactions are secured using SHA-256, off-chain storage,
    asymmetric encryption, and digital signatures. No consensus algorithm is used,
    instead an appendable block concept is used where transactions are added by the
    verified block owner. The authors analyzed the performance of their proposed framework
    in terms of overhead, the time required, and storage space required. The results
    showed that their proposed approach is resilient against various security attacks
    such as Sybil attacks, fake data, and masquerade attacks. Authors also discussed
    the applicability of the proposed approach in various use cases such as vehicular
    forensic, trust management, and secure vehicular communication. In 2022, Tyagi
    et al. [183] proposed an approach to secure users’ personal information in smart
    vehicles using BC and IPFS. Table 10, summarizes the work done in the BC-autonomous
    vehicle use case. Table 10. Summary of related work in BC-autonomous vehicle.
    Reference Main contribution Relevance to BC Targeted characteristics Empty Cell
    Empty Cell Empty Cell Authenticity Integrity Confidentiality Provenance Privacy
    Yuan et al. [171] Proposes a BC-based seven-layer ITS framework (B2ITS) for the
    establishment of a secured, trusted, and decentralized autonomous ecosystem. Uses
    BC technology, SHA-256 for hashing, Merkle tree, time stamping, and PoS consensus
    algorithm. – ✓ – – ✓ Dorri et al. [172] Proposes a BC-based architecture to enhance
    the privacy of users and security of the vehicular ecosystem. Uses public BC,
    each vehicle is equipped with WVI (wireless vehicle interface) and local storage
    to store sensitive data. ✓ ✓ ✓ – ✓ Singh et al. [178] Briefly introduces intelligent
    vehicles and propose a reward-based approach for communication between intelligent
    vehicles using blockchain. Uses three basic technologies i.e. communication network,
    vehicular cloud computing, and blockchain technology. Also uses the PoD (proof
    of driving) consensus algorithm. ✓ – – – ✓ Oham et al. [179] Brief overview of
    a liability attribution model and proposes a blockchain-based framework for providing
    untampered pieces of evidence for liability attribution and adjudication. Uses
    permissioned BC, public key infrastructure to issue digital identities for authenticated
    and authorized communication, digital signatures, and data stored in the blockchain.
    ✓ ✓ – – ✓ Cebe et al. [168] Proposed a blockchain-based framework for vehicular
    forensics which manages the collected vehicle-related data for trustless, and
    privacy-aware post-accident analysis with minimal storage and processing overhead.
    Uses permissioned blockchain, PBFT consensus algorithm, and cloud for data storage
    while their hash is stored on BC. ✓ ✓ – – ✓ Singh et al. [180] Proposed a BC-enabled
    intelligent vehicle communication approach for trusted and secured communication.
    Uses two blockchain mechanisms, one is LDB and the other is MB. When LDB is filled
    then it is overwritten in a FIFO manner and MB is implemented using Merkle Tree,
    PoW consensus algorithm. – – – – ✓ Rathee et al. [181] Proposed a BC-based framework
    to address security challenges in smart sensors of connected vehicles. Uses blockchain
    technology to record each activity, and analyzed the performance using an NS2
    simulator. ✓ – – – ✓ Yin et al. [177] Proposed a BC-based incremental update system
    for data storage. Uses BC, data and index storage, incremental data update adaptive
    PoW algorithm, elliptic curve digital signature algorithm (ECDSA), and SHA256
    for hashing. ✓ – ✓ – – Jamil et al. [176] Proposed a BC-based privacy-preserving
    approach for automatic payment of fueling of smart cars without human intervention.
    Uses Hyperledger fabric, Hyperledger composer, docker composer, docker engine,
    CLI tool, off-chain storage, smart contract, elliptic curve to generate public
    and private keys, and Diffie Hellman key exchange. ✓ ✓ ✓ ✓ ✓ Oham et al. [182]
    Proposed a BC-based security framework known as B-FERL for securing smart vehicles.
    Uses double-tier blockchain-based architecture, SHA-256 for hashing, asymmetric
    encryption and digital signatures, and appendable block concept. ✓ ✓ – – ✓ Tyagi
    et al. [183] Proposed an approach to secure smart vehicles (preserve user‘s personal
    information) using BC technology. Uses BC technology and Inter planetary file
    system (IPFS) for storage. ✓ – – – ✓ 3.5.3. Summary Autonomous vehicles are connected,
    smart, and driverless vehicles that can sense, communicate and exchange data with
    other vehicles or infrastructure. Autonomous vehicles are anticipated to enhance
    road safety, reduce the number of road accidents, minimize driving errors, reduce
    traffic congestion, and enable stress-free parking. For providing such services,
    IoT is an integral part of an autonomous vehicle. The existing approach faces
    some challenges such as centralization, trust issues, privacy and security and
    the user‘s control over exchanged data is less. Combining BC with IoT-enabled
    autonomous vehicles brings opportunities such as data integrity, data sharing,
    proof of delivery, unaltered records, transparency, and reliability. To explore
    the applications of BC in an autonomous vehicle, numerous research works have
    been done in different directions like payments, data storage, communication,
    forensic application, and security and privacy. To achieve security and privacy,
    BC, SHA-256, off-chain storage, asymmetric encryption, and digital signatures
    are used. Hyperledger Fabric, off-chain storage, smart contracts, elliptic curve,
    and Diffie Hellman key exchange are used for executing payments. Apart from the
    features offered by BC, there are some challenges in integrating BC with Autonomous
    Vehicles, such as high infrastructural cost, massive data storage, scalability,
    integration into the existing system, and avoiding chances of centralization.
    Some of the research directions for BC-IoT enabled autonomous vehicles are how
    to achieve high throughput without compromising security and privacy, how BC-IoT
    autonomous vehicles can used for accident reconstruction, multiple vehicle communication
    scenarios, and privacy of smart vehicle when moving from one roadside to another.
    System intelligence can be increased by adopting deep and reinforcement learning.
    3.6. Smart grid A smart grid is also known as a smart power grid, intelligent
    grid, or future grid. A conventional power grid has to simply carry power from
    central generators and supply it to users/consumers [184]. In contrast, a smart
    grid involves use of state of the art sensing methods, communication technologies,
    interconnected power systems, advanced control and optimization techniques, smart
    metering, and integration of microgrids and other decentralized sources of renewable
    energy [185], [186]. Nowadays, solar panel installation has seen significant growth
    which has resulted in individual homeowners installing solar panels and contributing
    excess energy generated from solar panels to the larger electric grids [187].
    Due to variable energy consumption pattern, some users’ energy generation can
    be more than required and at the same time other users may be facing insufficient
    energy supplies. Thus, the former can trade their excess energy to latter [188].
    Smart homes, smart buildings, and smart infrastructure, all of these collectively
    form a smart community [189]. All of these must be supported by a smart power
    supply. The challenges being faced by conventional power supply can be reduced
    by Smart grid [189]. Along with this, these smart sensor-based metering systems
    will require less manpower as compared to the conventional approach [56]. Some
    of the general challenges faced by the smart grid are the availability of trusted
    parties for data aggregation, hiding the link between the user’s real identity,
    and pseudonym and authentication speed [189]. Implementing BC-based smart contracts
    in smart grids is an opportunity to increase the speed and security of the smart
    grid [190]. BC makes the grid network decentralized which means the supply and
    distribution of energy need not be channeled through a centralized system [56].
    For instance, users who own some form of renewable energy generation faculty such
    as solar panels can become producers by selling their surplus energy to the grid
    [56]. However, the challenge is to ensure secure and trusted energy trading between
    two trading parties. BC has potential to build decentralized and secure P2P energy
    trading platform [145]. Some existing commercial implementations are PowerLedger,
    Bankymoon, and Brooklyn [56], [87]. PowerLedger is an Australia-based startup
    that enables owners of renewable energy sources to sell their surplus energy [191].
    Bankymoon is a South Africa-based startup, that provides smart prepaid energy
    meters and supplies energy to schools and communities who need affordable power
    supply [192] and Brooklyn, launched by US energy firm is the most significant
    implementation of BC in P2P decentralized energy trading [56]. WePower is another
    Lithuania based company for energy data accounting and storage using smart contracts
    [193]. 3.6.1. Applications of blockchain in smart grids • Decentralized P2P Energy
    Trading- In a traditional grid network, the major concern is lack of security
    in a transaction of energy and high operational costs. However, the BC-based grid
    trading infrastructure is a decentralized platform that enables peer-to-peer transactions
    of energy [56], [194], [195]. Power Ledger platform provides numerous energy trading
    applications [193]. • Power Distribution and Management- BC with its strong security
    features can prevent many attacks that have been made on the traditional power
    grids to manipulate the data and to have control of the system [56]. Moreover,
    BC and smart contracts can enable secure, efficient and reliable management of
    IoT-enabled distribution network in smart grids [195]. • Secure Metering - Meters
    are installed in every house to maintain the record of electricity consumed. Intruders
    can record and analyze the electricity consumption pattern and can reveal users’
    details. BC with advanced cryptography methods can be used to ensure the privacy
    of the information [196], [197]. 3.6.2. Related work The research works related
    to the smart grid have been discussed under different categories which are discussed
    as follows: Grid Monitoring: Mengelkamp et al. [198] discussed smart grids and
    local energy markets and propose an approach based on BC, which underlines the
    decentralized nature of local energy markets with an auction mechanism at a small
    level. The proposed approach consists of a closed double-sided auction market,
    implemented using a smart contract. It uses private permissioned Ethereum BC,
    smart contracts written using solidity language, and a PoW consensus algorithm.
    In 2018, Gao et al. [196] proposed a BC-based solution for creating a system to
    protect consumer data that is recorded and transferred through the smart grids
    in a tamper-proof manner. Cryptographic keys are used for specific tasks such
    as system and data security. The proposed approach includes various layers; user
    layer, data processing and monitoring layer, registration and authentication layer,
    smart contract layer, smart contract database layer, energy center layer, and
    data center layer. SHA-256 is used for hashing the blocks. Along with that, compared
    the proposed solution with the existing solution in terms of information sharing,
    efficient data manageability, data immutability, data confidentiality, and data
    provenance. In line with that, in 2021, Naseer et al. [199] proposed a BC-enabled
    lightweight scheme for access control to ensure temper proof, trusted communication
    between entities of the smart grid and provide a secure channel to submit transactions
    in the network. In particular, uses the Ethereum BC platform, SHA-256 for key
    generation, elliptic curve cryptography for secure communication, and BC. Furthermore,
    the authors analyzed the scheme in terms of security and performance and the results
    show it is effective in terms of computational and storage costs. Device Identification
    & Management: Wang et al. [200] put forward an approach for the connection of
    IoT devices by using BC and 5G MEC technologies. Their approach uses public and
    private BC deployed using MEC server. Authors also discussed numerous consensus
    algorithms and their usefulness in hybrid BC. The authors analyzed the performance
    of different consensus algorithms in terms of average computing time and average
    time to agreement. Privacy Preserving: Guan et al. [189] proposed a BC-based privacy-preserving
    and efficient data aggregation scheme, in which users are divided into different
    groups. Each group consists of a private BC to record its members’ data. The proposed
    approach is specially designed to tackle challenges like privacy, pseudonym, and
    speed. Their scheme allows a user to create multiple pseudonyms to hide user identity
    and bloom filter for fast authentication, to judge the validity of pseudonyms
    and check the existence of pseudonyms based on zero-knowledge proof. Authors showed
    that their proposed scheme outperforms and meets security requirements as compared
    to other popular methods. In 2019, Gai et al. [188] presented a BC-based approach
    to solve the problem of privacy leakage in trading functions and user privacy
    in a smart grid, known as the privacy-preserving blockchain-driven trading model
    (PBT). For preserving privacy it uses a noise-based approach to hide the trading
    distribution. Moreover, their approach use consortium BC to establish a secure
    energy trading system and smart contracts for preventing privacy leakage. It includes
    mainly three phases; energy seller initialization, B-Box operation, and buyer
    purchase. Evaluated the performance in terms of privacy-preserving. In line with
    that, in 2021, Guan et al. [194] proposed another approach named privacy-preserving
    blockchain energy trading scheme (PP-BCETS) based on ciphertext policy attribute,
    exponentially improving operation efficiency. It enables direct transactions between
    electricity users and producers and helps in improving the privacy, security,
    and reliability of the energy trading process by implementing smart contracts.
    Along with that, proposed a credibility-based equity proof consensus algorithm
    to resolve low efficiency and high delay in BC. The design goals of PP-BCET are
    privacy protection, efficiency, and anti-attack. It includes mainly five phases;
    system initialization, user registration, transaction process, building consensus,
    application for arbitration, and generating accounting node. In particular, uses
    an elliptic curve digital signature algorithm for generating public and private
    keys, SHA-256, and the Ethereum BC platform. Finally, security analysis and performance
    evaluation are presented. In 2022, Mazumdar et al. [201] proposed a BC-driven
    approach to detect energy theft in smart grid neighborhood area networks along
    with preserving the privacy of energy consumption data. In particular, authors
    have used consortium BC hyperledger best with Proof of Authority consensus, AES256,
    ZK-STARK, RS256 digital signature, and SHA256. Furthermore, results show that
    the proposed approach achieves more than 98% accuracy in energy theft detection.
    [202] proposed a solution along with dynamic billing and arbitration, named PPDB
    to reduce latency and bandwidth-related issues and to improve efficiency. In particular,
    the author has designed a four-layer data aggregation framework that uses fog
    nodes (FNs) to collect and aggregate electricity consumption data using the ElGamal
    cryptosystem and employ distributed decryption to achieve fine-grained access
    and bill generation based on real-time prices. Along with a trusted third party
    to arbitrate disputed bills. Further, the comparison shows that the communication
    overhead is reduced by 38 percent, and the computational efficiency is improved
    by 40 times. Control Access: Bera et al. [203] proposed a BC-based access control
    protocol named DBACP-IoTSG, for IoT-driven smart grids without the involvement
    of a trusted third party, while preserving the anonymity and untraceable properties.
    In particular, uses Dolev-Yao (DY) threat model, private BC, PBFT consensus algorithm,
    random numbers, and current timestamp is used to protect against the replay attack.
    Phases involved are system setup (either SHA-256/512), registration of smart meters
    and service providers, access control, key management among service providers,
    block formation and addition in the blockchain, and new smart meters addition
    after initial deployment in the smart grid. Furthermore, the analysis shows that
    the proposed approach provides better security and requires less communication
    and computation cost. Charging Coordination: Baza et al. [204] proposed a BC-based
    charging coordination mechanism for energy storage units (ESUs). For defining
    the rules for coordination between different ESUs, smart contracts written in
    solidity language are used, and the Ethereum BC platform. For scheduling the charging
    of ESUs, a greedy algorithm is used. The approach includes three phases; acquiring
    anonymous credentials, charging request submission, and charging schedule computation.
    Finally author evaluated the proposed approach for charging coordination using
    first come first serve (FCFS) and analyzed it in terms of security and privacy.
    Cost Analysis: Sestrem et al. [205] proposed an architecture using BC and side
    chains for smart grids to make them more scalable and adaptable. It includes three
    BCs named BlockPRI, BlockSEC, and BlockTST for user privacy, to store user data,
    and to manage and validate information regarding the energy trade between consumers
    and prosumers respectively. A Loom network, based on the side chain, is used to
    develop these BC. Loom network uses the DPOS consensus algorithm. The proposed
    architecture includes three layers namely the user layer (registers users in the
    blockchain), the protocol layer (uses OSGP protocol to model data package), and
    the blockchain layer (ensures privacy security, and trust). Moreover, evaluation
    was done in terms of several transactions per second, and smart contract cost
    and results show it is feasible for use. Authentication: In 2021, Wang et al.
    [206] proposed a secure, reliable, and efficient mutual authentication protocol
    for smart meters. The proposed approach resolves identity authentication issues
    by combining BC, elliptic curve cryptography, dynamic join and exit mechanism,
    and batch verification. Furthermore, the authors have analyzed the performance
    in terms of security and functionality, and computation overhead and the results
    show the proposed approach is more secure and efficient. Table 11, summarizes
    the work done in the BC-smart grid use case. Table 11. Summary of related work
    in BC-smart grid. Reference Main contribution Relevance to BC Targeted characteristics
    Empty Cell Empty Cell Empty Cell Authenticity Integrity Confidentiality Provenance
    Privacy Guan et al. [189] Proposed an approach to preserve user‘s identity and
    efficient data aggregation in a smart grid. Uses blockchain, bloom filter, RSA
    algorithm, and zero-knowledge proof. ✓ ✓ – – ✓ Mengelkamp et al. [198] Proposed
    an approach for trading local energy generation. Uses distributed information
    and communication technology i.e. private permissioned blockchain, Ethereum blockchain,
    PoW consensus algorithm, and on-chain simulation. ✓ – – – – Gao et al. [196] Proposed
    an approach to monitor electricity consumption, that allows no manipulation and
    protects consumer data recorded and transferred. Uses smart contracts, blockchain,
    and SHA-256 and analyzes the performance in terms of information sharing, efficient
    data manageability, and data immutability. ✓ ✓ ✓ ✓ – Gai et al. [188] Proposed
    a privacy-preserving blockchain-enabled trading model. Uses Hyperledger fabric
    consortium blockchain for secure energy trading system, smart contract for preventing
    privacy leakage. – – – – ✓ Baza et al. [204] Proposed a blockchain-based approach
    to enable a decentralized charging coordination mechanism. Uses Ethereum BC platform,
    smart contracts written in solidity language to implement charging coordination
    algorithm. – ✓ – ✓ ✓ Sestrem et al. [205] Proposed an approach for the implementation
    of blockchain in a smart grid. Uses three blockchains named BlockPRI, BlockSEC,
    and BlockTST, smart contracts, Loom network, side chains, and DPOS consensus algorithm.
    ✓ ✓ ✓ – ✓ Bera et al. [203] Proposed a BC-based access control protocol named
    DBACP-IoTSG, for IoT-enabled smart grids. Uses Dolev-Yao (DY) threat model, private
    BC, SHA-256/512, PBFT consensus algorithm, random numbers, and current timestamp
    and analyzed the approach in terms of computation and communication cost. ✓ ✓
    ✓ – ✓ Naseer et al. [199] Proposed a BC-enabled scheme for access control to ensure
    tamper-proof, trusted communication between entities of smart grid. Uses Ethereum
    BC platform, SHA-256, elliptic curve cryptography, and BC and analyzed the scheme
    in terms of security and performance. ✓ ✓ ✓ – – Wang et al. [200] Proposed a mechanism
    by integrating BC and 5G MEC technologies for the connection of massive power
    IoT devices. Uses public and private BC both and deployed on MEC server. Also
    analyzed was the performance of different consensus algorithms in terms of average
    computing time and average time to an agreement. ✓ ✓ – – ✓ Guan et al. [194] Proposed
    an approach named privacy-preserving blockchain energy trading scheme (PP-BCETS)
    based on ciphertext policy attribute, which exponentially improves operation efficiency.
    Uses credibility-based equity proof consensus algorithm, elliptic curve digital
    signature algorithm, SHA-256, and Ethereum BC platform. Finally, a security analysis
    and performance evaluation are presented. – ✓ – – ✓ Wang et al. [206] Proposed
    an approach for mutual authentication in smart grids. Uses Ethereum BC, smart
    contracts, elliptic curve cryptography, join and exit mechanism, and batch verification.
    ✓ – – – – Mazumdar et al. [201] Proposed an approach to detect energy theft with
    privacy preservation of energy consumption data for smart grid neighborhood area
    network. Uses consortium BC hyperledger best with Proof of Authority consensus,
    AES256 for encrypting private transactions. User and data authentication is achieved
    using ZK-STARK and RS256 digital signature. SHA256 is used to hash energy consumption
    data. – – – – ✓ Wang et al. [202] Proposed a solution to mitigate latency and
    bandwidth-related challenges Uses Fog Nodes with ElGamal cryptosystem, computational
    Diffie hellman algorithm. ✓ ✓ ✓ – – 3.6.3. Summary A smart grid is the transmission
    of power from producer to consumer without the involvement of any centralized
    system. It allows monitoring of power flow from power generation to power consumption,
    advanced metering infrastructure, better consumer services, fraud detection, technical
    losses, and reduces electricity theft. These services are provided as IoT is a
    significant part of the smart grid. The existing grid system faces challenges
    like data getting stolen and a centralized system which leads to a single point
    of failure and alterations. BC technology helps in mitigating these issues and
    provides transparency and provenance, ensuring the reliability and accuracy of
    smart grid IoT devices. Along with that, it offers decentralized, immutable, trusted
    access control and a highly reliable system. Implementing BC to the smart grid
    has attracted widespread attention. Researchers have worked in different directions
    to explore the applications of BC in smart grids and make it a more efficient
    solution. Several authors worked on grid monitoring, device identification, privacy
    preservation, control access, charging coordination, and cost analysis. In their
    particular work, authors have used private Ethereum BC, smart contracts, PoW consensus
    algorithm, and SHA-256 for hashing. For control access, private BC with PBFT consensus
    algorithm while for cost analysis DPOS consensus algorithm is preferred. Apart
    from the work done, there are some areas, to be considered in the future. Transaction
    processing time and data storage can be improved, while computational overheads
    caused by authentication, during system initialization, can be reduced. Yet some
    challenges are being faced by BC such as high infrastructural and development
    costs, scalability, chances of centralization, and an enormous amount of data
    generated. 3.7. Industrial IoT Industrial IoT or industry 4.0, is a revolution
    in industries. Industrial IoT is a switch from traditional industries to smart
    industries [87]. IIoT is a combination of a wireless sensor network, communication
    protocol, and internet infrastructure for monitoring, analysis, and management
    [87]. IIoT can also be defined as the automation of the conventional manufacturing
    industry. IIoT is an integration of many technologies like the Internet, IIoT,
    blockchain, big data, edge, and cloud computing, robotics, human–machine interaction,
    artificial intelligence, and open-source software [87], [207]. IIoT architecture
    involves three layers, the physical layer, the communication layer, and the application
    layer. The physical layer consists of physical devices like sensors, the communication
    layer uses network technologies like a wireless sensor network, and the application
    layer contains different applications using IIoT [87]. Industry 4.0 will bring
    the revolution by making machines smarter, factories more efficient, processes
    less wasteful, and higher productivity [208]. IIoT is facing several challenges
    which need to be addressed. Some of the general challenges being faced by IIoT
    are interoperability issues, security vulnerability, lack of data analysis, improved
    resilience, fast adaptability, improved trust, and lower maintenance costs [207],
    [209]. As the devices are interconnected, they share information directly and
    are subject to security threats [207]. Because of the tamper-proof and distributed
    nature of BC technology, it can be proved as a game-changer in the IIoT domain.
    Some of the practical implementations are, for example in the agriculture industry,
    iGrow, which associates landowners, farmers, investors, and harvest purchasers
    to make a supply chain for organic food, and Avenues-GT, which supports the commercial
    trade of agriculture products from farmers securely and transparently [87]. 3.7.1.
    Applications of blockchain in IIoT • MIoT - BC can be proved as a revolution in
    the healthcare industry, in particular for Medical IoT (MIoT). It can be used
    to manage security, privacy, trusted ownership, authenticity, interoperability,
    and autonomous cooperation between MIoT devices [74], [210]. • Automatic and Secure
    Micro Payment - As we are moving towards digitization and IoTized systems where
    automatic and micro payments are the need of time. BC provides a solution to secure,
    privacy protected, trustless, and automatic micro payments for IoT devices [210]
    such as smart meters [37]. • Supply Chain Logistics - BC can help in maintaining
    the authenticity and tracing the products to ensure quality of the products from
    raw material to final finished goods and efficient supply of the product [211].
    • Power Industry - Integrating BC and the power industry has many applications
    such as the trade of energy, power demand, and power generation schemes that can
    be stored on the BC network. BC reduces that extra transition cost and makes the
    transition of power in a more efficient way [87]. 3.7.2. Related work The research
    works related to IIoT have been discussed under different categories which are
    discussed as follows: Data Collection and Sharing: Manogaran et al. [212] introduce
    a BC-based secured data sharing model named BSDS for inbound and outbound security
    in data acquisition and dissemination, as BC controls data gathering and dissemination.
    Its design goal is to maximize the response rate of the industrial process by
    reducing false alarm progression (FAP) in IIoT. Analysis shows that the proposed
    model gains a 5.67% high response rate, and reduces the failure rate by 2.14%.
    Network Computing Service: Xu et al. [213] proposed a BC-based non-repudiation
    service provisioning scheme for IIoT applications where BC is used to record evidence
    and a service publication proxy and each service is delivered separately using
    on-chain and off-chain. Moreover, designed a service verification method based
    on homomorphic hash techniques to validate services based on lightweight on-chain
    evidence. Uses smart contracts to efficiently settle disputes between service
    providers and IIoT clients, homomorphic and homomorphism hash function, consortium
    BC with PoA consensus mechanism. The proposed architecture includes three entities;
    the service provider, the IIoT client, and the arbitration node. Also analyzed
    was the security and efficiency of the proposed scheme. Product Life cycle Management:
    Liu et al. [214] proposed a BC-enabled data collection and secure sharing scheme.
    Uses the private BC Ethereum platform to ensure the security and reliability of
    data shared and deep reinforcement learning (DRL) to achieve the maximum amount
    of collected data. The proposed scheme is simulated using the python language
    and Ethereum platform with the PBFT consensus algorithm. Authors have analyzed
    the proposed scheme and the results show that it provides better security against
    attacks such as eclipse attacks, majority attacks, and terminal device failure.
    In line with that, Liu et al. [215] proposed a BC-enabled framework for data exchange
    and service sharing among the products, factories, business networks, and customers
    in the product life cycle. First, it proposed the idea of integrating BC with
    IoT, M2M, and consensus algorithm, and secondly developed a BC information service
    to maintain the connection between a single node with the BC network. Smart contracts
    written using GO language are used to automate the alert service in the product
    life cycle and SHA-256 for encryption with Hyperledger fabric Java SDK with redundant
    Byzantine Fault Tolerance consensus algorithm. The proposed framework includes
    mainly five layers; the perception layer (used to collect data using IoT devices
    like QR codes, RFID tags, and GPS sensors), the off-chain layer (collected data
    will be processed in BC information service), the BC layer (which contains smart
    contracts, consensus protocol, DApps, and cryptography), application layer (includes
    services and software) and service layer (services like product creation, tracking
    and tracing, product maintenance, and recycling). Finally, the analysis was presented
    in terms of latency and throughput and the results show that the proposed framework
    is scalable, efficient, and feasible for industries. Secure and Trustworthy Operations:
    Huang et al. [216] presented a BC-based system with a credit-based consensus mechanism
    for IoT devices to decrease the power usage in the consensus mechanism, and to
    ensure system security and efficiency. A data authority management method was
    designed to protect sensitive data and regulate access to sensor data. In particular,
    uses directed acyclic graph (DAG) structured BC, implemented the system using
    Raspberry Pi, symmetric key encryption, SHA-256 to distribute secret keys, AES
    block cipher algorithm, and a case study of the smart factory was presented. The
    proposed system is resilient against various attacks such as DDoS, Sybil attacks,
    and double-spending attacks. In 2019, Rathee et al. [217] proposed a secure hybrid
    IIoT framework using BC technology for tracing workers’ location, product shipment,
    and product documentation and maintaining transparency among users located at
    different locations. Recording of information is done using BC technology. Finally,
    the performance is analyzed using the NS2 simulator and the results show the proposed
    approach offers 89% success over user request time, falsification attack, black
    hole attack, and probabilistic authentication scenario. In 2021, Rathee et al.
    [218] proposed a BC-enabled secured wireless mechanism to preserve transparency
    and secure each activity of smart sensors. The proposed approach uses distributed
    cloud framework using BC, and RFID. Mainly it includes registration of sensors
    on BC and consensus among users and industry providers for the product shipment.
    Finally, the approach is simulated using the NS2 simulator in terms of probability
    of attack success, ease of attack detection, falsification attack, and authentication
    delay. In the line above work, in 2021, Latif et al. [219] proposed a private
    and lightweight BC-based architecture for secured and trustworthy industrial operations
    and implemented it for a food processing plant use case. It uses a low-power ARM
    Cortex M4 processor, energy-efficient consensus mechanism proof of authority (PoAh).
    The proposed architecture is used to perform industrial operations such as user
    and device registration, sensor and actuator data storage, and client service
    task. It has three layers; the physical layer (sensors, actuators, and microcomputers),
    the BC service layer (ARM Cortex-based lightweight nodes, private BC), and the
    application layer (which provides services like administration, user management,
    and task management). It uses sensors, actuators, private BC, ARM Cortex lightweight
    nodes, elliptic curve digital signature algorithm to generate public and private
    keys, and proof of authentication consensus algorithm. Moreover, the performance
    analysis in terms of execution time, power consumption, and memory utilization
    has shown the effectiveness of the proposed architecture. Identity Management:
    Sarier et al. [220] proposed a BC-based identity management system. Combining
    it with off-chain storage ensures GDPR compliance, required to protect user data.
    Moreover, it includes a blinded DLRep scheme to provide multi-show unlinkability.
    For bigger organizations, it replaces the Merkle tree with an accumulator to improve
    scalability. Major participating entities are credential generators, credential
    issuers and verifiers, and service enablers. User privacy is achieved by implementing
    an efficient authentication scheme. BC-IIoT: Teslya et al. [221] presented the
    possible ways to integrate BC technology with IoT. The architecture was developed
    by combining the smart M3 platform and BC along with smart contracts to process
    and store information related to the interaction between smart components. A core
    component is a semantic information broker (SIB) to store information and service
    requests of participants. In particular, uses a tiger tree hashing algorithm to
    calculate transaction hashes. In 2020, Kumar et al. [209] proposed a framework
    named as BlockEdge by integrating edge computing and BC, to resolve the challenges
    such as data integrity, trust, and security. Edge computing helps in achieving
    low latency and lightweight private permissioned BC ensuring secure and trusted
    data sharing, accessing, tracking, tracing, and monitoring. The proposed framework
    includes mainly three parts; IoT-Edge networks, Fog networks, and cloud networks
    Along with this authors have analyzed the performance using the simulator iFogSim
    in terms of latency, power consumption, and network usage. Table 12 summarizes
    the work done in the BC-IIoT use case. Table 12. Summary of related work in BC-IIoT.
    Reference Main contribution Relevance to BC Targeted characteristics Empty Cell
    Empty Cell Empty Cell Authenticity Integrity Confidentiality Provenance Privacy
    Tesla et al. [221] An architecture was developed by combining the smart M3 platform
    and BC to process and store information related to the interaction between smart
    components. Uses tiger tree hashing algorithm to calculate transaction hashes.
    – – – – – Liu et al. [214] Proposed a BC-enabled data collection and secure sharing
    scheme by integrating BC with deep reinforcement learning (DRL) for IIoT. Uses
    Ethereum as private BC, DRL, and PBFT consensus algorithm. Analyzed the proposed
    scheme against attacks such as eclipse attacks, majority attacks, and terminal
    device failure. ✓ – – – – Huang et al. [216] Proposed a credit-based system that
    ensures system security and protects the confidentiality of data. Also, a data
    authority management method was designed to protect sensitive data. Uses public
    blockchain network, directed acyclic graph (DAG) structured BC, implemented the
    system using Raspberry Pi, symmetric key encryption, SHA-256, AES block cipher
    algorithm. – ✓ ✓ – ✓ Xu et al. [213] Proposed a BC-based fair non-repudiation
    service provisioning scheme for IIoT applications. Also designed a service verification
    method based on homomorphic hash techniques to validate services based on lightweight
    on-chain evidence. Uses smart contracts, homomorphic and homomorphism hash function,
    consortium BC with PoA consensus mechanism, and analysis of the security and efficiency
    of the proposed scheme. – – – – – Rathee et al. [217] Proposed a secure hybrid
    industrial IoT framework for tracing workers’ location, product shipment, and
    product documentation. Uses blockchain technology, with PoW consensus algorithm
    and performance is analyzed using NS2 simulator over request time, falsification
    attack, black hole attack, and probabilistic authentication scenario. ✓ – – –
    ✓ Kumar et al. [209] Proposed a framework named as BlockEdge, to address some
    of the issues faced by current IIoT like latency, power consumption, and network
    usage. Uses edge computing and lightweight private blockchain technology and analyzed
    the performance in terms of latency, power consumption, and network usage. ✓ ✓
    ✓ – ✓ Liu et al. [215] Proposed a BC-enabled PLM (product life cycle management)framework
    for data exchange and service sharing among the products, factories, business
    network, and customers. Uses smart contracts, SHA-256, Hyperledger fabric Java
    SDK with redundant Byzantine Fault Tolerance consensus algorithm. – – – – ✓ Rathee
    et al. [218] Proposed an approach using BC for secured wireless to maintain transparency
    and secure activities of smart sensors. Uses distributed cloud framework using
    BC, RFID. The analysis is performed in terms of the success rate of the attack,
    ease of attack detection, falsification attack, and authentication delay. ✓ –
    – – ✓ Manogaran et al. [212] Introduced a BC-based secured data sharing model
    named BSDS for inbound and outbound security in data acquisition and dissemination.
    Uses BC technology with IoT. Analysis performed in terms of response rate and
    failure rate. ✓ ✓ – – ✓ Sarier et al. [220] Proposed a BC-based identity management
    system. Combining it with off-chain storage ensures GDPR compliance, required
    to protect user data. Uses accumulators, BC with off-chain storage. ✓ – – – –
    Latif et al. [219] Proposed a private BC-enabled architecture for secured and
    trustworthy industrial operations. Uses sensors, actuators, private BC, ARM Cortex
    lightweight nodes, elliptic curve digital signature algorithm, proof of authentication
    consensus algorithm and analyzed the performance in terms of execution time, power
    consumption, and memory utilization. ✓ ✓ – – ✓ 3.7.3. Summary IIoT is an application
    of IoT in different industry domains which helps in achieving automation and an
    efficient industry approach. It offers the ability to interconnect numerous devices,
    process various data, and reduce human intervention, Still, IIoT is facing various
    issues, like privacy-related concerns while collecting and sharing data, high
    costs, high rate of failures, massive data management, and untrusted third parties.
    Here, BC can be used to mitigate these challenges because of the features offered
    by BC such as ease of record-keeping, avoiding fraudulent cases, improved transparency,
    and a decentralized approach. Researchers are exploring different areas for the
    adoption of BC-IIoT on a large scale. Numerous research works have been done in
    various application areas like data collection and sharing, product life cycle
    management, network computing services, secure and trustworthy operations, identity
    management, and BC-IIoT. For secure and trustworthy operations authors have used
    DAG, Raspberry Pi, SHA-256, RFID, PoAh consensus algorithm, and elliptic curve
    digital signature algorithm. Whereas for identity management off-chain storage
    is preferred to ensure GDPR compliance. Ethereum BC platform with PBFT consensus
    algorithm, smart contracts are written using GO language, SHA-256 with hyperledger
    with PBFT is used for product life cycle management. While the PoA consensus algorithm
    with smart contracts was preferred for network computing services. Still, some
    areas need to be focused on in the future such as the time required to validate
    a block can be improved, real network computing enabled IIoT platform to add more
    features, a non-repudiation dispute resolution mechanism for a massive amount
    of data generated, integration of various technologies such as edge computing,
    3D printing, SDN, NFV to address different requirements like adaptive security,
    privacy, and trust mechanism. Integrating BC-IIoT offers various opportunities
    but along with that, some challenges are being faced such as scalability, high
    infrastructural costs, throughput, and a large number of simultaneous users. 3.8.
    Unmanned aerial vehicles (UAVs) UAVs, also known as drones, are self-programmed
    devices that do not require any human pilot but are managed through mobile applications
    [222]. These are equipped with sensors and processors. It was first introduced
    in 1920 for military operations and later on also deployed for civil applications
    such as traffic management, photography, and shooting, product delivery [223]
    and it is simply an aerial device without pilot [224]. UAVs are designed in different
    sizes, large size UAVs are more suitable for defense applications while small-size
    UAVs are best for civilian applications [224]. Based on altitude, UAVs are categorized
    as high altitude (used in wide geographical areas with extended battery) and low
    altitude UAVs (used in normal day-to-day tasks with fast deployment, cost-effective
    and limited battery) [223]. According to the report of SIPRI (Stockholm International
    Peace Research Institute), India is one of the top countries for importing drones
    which is 22.5% of the world‘s UAVs [224]. According to the report by the Federation
    of Indian Chambers of Commerce and Industry (FICCI), the adoption rate of UAVs
    in India and globally is expected to be 885.7 million USD and 21.47 billion USD
    respectively [223]. Some of the applications of UAVs are product delivery, Military
    surveillance, aerial photography, traffic control, and management and cinematography
    [225]. Some of the general challenges faced by UAVs are security and privacy,
    and latency. Some of the application areas of UAVs are defense, agriculture, transportation,
    delivering goods, and surveying. Integrating BC with UAV has great potential.
    For example, military information is highly sensitive and confidential thus it
    must be safe and secured and BC can be a good choice for this [224]. Some of the
    practical implementations of UAVs are companies like Matternet and Flirtey, which
    uses UAVs for the delivery of medicines in rural areas [224]. 3.8.1. Applications
    of blockchain in UAV • Data Storage and Verification using UAV - The data collected
    with the help of UAVs can be directly transmitted to a cyber–physical system connected
    through BC. Each block will contain details that are scanned through the UAVs
    and the time of the creation of the block. With the integration of BC with UAV,
    information can be stored and monitored efficiently [226]. • BC-based UAV Surveillance
    - Video surveillance is very important whether it is at the border, at traffic
    lights, DAM‘s or in our homes. All these tasks can be performed by using UAVs.
    But because of the dynamic nature of the UAVs, they also face some challenges
    like trust and data authentication, finding the optimal path, security, reliability,
    unauthorized access to the UAVs ID, and DoS attack. BC can mitigate these challenges,
    BC ensures the security of information by sharing and verifying the data in a
    distributed manner. • Blockchain-based UAV system for automation of supply chain
    - Supply chain and logistics require manpower from the production of any product
    to its distribution and sales. Automating all of these tasks leads to reduced
    manpower, on-time deliveries, and increased profits. UAVs can help in surveying
    the stocks, collecting data, and dispatching products. But at the same time automating
    these tasks will also lead to security threats. BC technology can be used to maintain
    trust and security and store data. The supply chain requires the collection of
    data which is generally performed by humans and is prone to errors. This is where
    UAVs can be used to collect the data. 3.8.2. Related work The research works related
    to UAVs have been discussed under different categories which are discussed as
    follows: Communication: Kumari et al. [223] presented a survey on BC-based softwarization
    for UAV networks. It provides a brief introduction about BC and UAV and highlights
    the challenges faced by the conventional UAVs approach such as security is a major
    concern. To resolve the challenges, the authors have proposed a BC-based UAV softwarization
    architecture for secure UAV networks to provide dynamic, flexible, and on-the-fly
    decision capabilities. The proposed approach includes four layers; the infrastructure
    layer, the BC middleware layer, the control layer, and the application layer.
    It uses public BC Ethereum client to store UAV communications and SDN controller
    information as a transaction with IPFS to store data. Moreover, they discussed
    the challenges in integrating BC-UAV such as interoperability, data processing
    latency, data security, real-time deployment, and BC standardization. Privacy
    & Security: Rana et al. [227] and Abualsauod et al. [228] both worked to choose
    the same direction, i.e., security and privacy in UAV. In 2019, Rana et al. [227]
    proposed an approach to improve the security of UAVs using BC. Integrating BC
    with UAV helps in achieving additional security in transmitting signals as BC
    uses private key cryptography and peer-to-peer network. In particular, it uses
    BC, image gathering and sensing of UAV, SHA-256, timestamp (to keep a log of a
    transaction between the server and drone with its GPS location), and GPS location
    (will be added by UAV in the block). In line with that, in 2022, Abualsauod et
    al. [228] proposed a solution to resolve security and privacy-related issues in
    UAV-assisted IoT applications using BC. In particular, the authors choose to use
    Ethereum BC, SHA, and elliptic curve cryptography with numerous machine learning
    algorithms like K Nearest Neighbour and Naive Bayes. Furthermore, the authors
    analyzed the proposed solution in terms of system utility, latency, and processing
    time with overall attack detection accuracy. Results show that with the implementation
    of BC, latency and processing time are increased which increases the overall time
    consumption and reduction in attack rates. Data Collection: Islam et al. [229]
    and Xu et al. [230] worked in the same direction i.e., data collection using BC
    through UAVs. Islam et al. [229] proposed a BC-enabled secure scheme for data
    acquisition through UAVs and IoT devices. It includes two-way validation using
    the pie hash bloom filter and digital signature algorithm. Using the consortium
    BC Ethereum platform, Geth was used as an Ethereum client and proof of authority
    (PoA) consensus algorithm. Furthermore, it presented a performance analysis in
    terms of connectivity, energy consumption, and security analysis against various
    threats such as man in the middle, key spoof resistance, data tampering resistance,
    and resistance against intrusion and reply attacks. A simulation was performed
    using MATLAB and python. In 2020, Xu et al. [230] proposed a BC-based UAV-assisted
    IoT, a data collection secured and energy efficient scheme. An adaptive linear
    prediction algorithm was designed to reduce energy consumption and based on this
    algorithm, a data transmission scheme for BC-based UAV-assisted IoT is also proposed.
    BC-enabled UAVs consist of three main entities; IoT devices, the UAV swarm, and
    the charging station and management swarm. Uses BC in the UAV swarm (to record
    forwarding), private chain, edge computing, and asymmetric encryption for acquiring
    data security. The proposed approach has three special attributes which make it
    suitable for UAV-assisted IoT namely; every forwarding is defined as a transaction
    and each transaction is initiated by the management server, difficulty of mining,
    and charging strategy. Moreover, performance was evaluated using MATLAB in terms
    of security, accuracy, energy efficiency, training overhead, and training delay.
    Simulation results show proposed scheme offers better security and is energy-efficient.
    Health Monitoring: In 2019, Islam et al. [231] proposed a BC-based scheme for
    secure monitoring using UAVs outside the homes in smart cities. The main components
    involved are the user (citizens), UAV (provides extended connectivity and low
    power transmission), and MEC (works as a validator in BC). It accumulates health
    data using wearable sensors and transmits it to the nearest MEC server using UAV.
    It uses the private Ethereum BC platform. Furthermore, performance was evaluated
    in terms of processing time, expected transmission of data, validation time, and
    energy consumption using MATLAB and Python. In line with that, in 2020, Islam
    et al. [232] proposed a BC-based secure healthcare scheme called BHEALTH in which
    health data is collected using UAVs. It uses consortium BC Ethereum BC platform
    with proof of authority (PoA) consensus algorithm, and time division multiple
    access (TDMA) protocols for communication. Core entities involved in the proposed
    scheme are the body sensor hive (BSH) and server. BHEALTH does not have any reward
    for validators. Moreover, the author presented a security and performance analysis
    in terms of throughput, energy consumption, and processing time. BHEALTH is resilient
    against numerous threats such as man in the middle, unauthorized access, illegal
    data tampering, and reply attack. In 2021, Raj et al. [233] proposed an approach
    based on BC, for health monitoring using UAVs. In particular, healthcare data
    is collected using sensors and delivered using UAV to servers, and then saved
    using BC. The authors have highlighted the threats that are faced by UAVs during
    transmissions such as reply attacks, unauthorized access, and man-in-the-middle-attack.
    Furthermore, they have used the threat model to analyze security aspects, performance
    is analyzed in terms of energy consumption, individual processing time, and data
    transmission. Authors Aggarwal et al. [234] proposed an effective and efficient,
    three-layered architecture for the collection, processing, and transmission of
    medical data using UAVs, ensuring security and privacy during the transfer of
    medical data. Three layers are patient-generated data and clinical data, BC network
    of UAV, and data analytics and visualization. In particular, authors have used
    Ethereum BC with the PoW consensus algorithm. For analysis, they have focused
    on three major attacks; confidentiality attack, integrity attack, and availability
    attack. Spectrum Trading: Qiu et al. [235] proposed a BC-based privacy-preserving
    scheme for trading and sharing of the spectrum to resolve issues related to privacy
    and security. It uses consortium BC technology, edge computing, and a proof of
    work consensus algorithm. Major entities involved are trusted authorities, spectrum
    providers and requestors, edge computing nodes, and smart counters. Also for efficient
    pricing of spectrum, a non-uniform pricing algorithm and a distributed uniform
    pricing bargaining algorithm are designed. Analysis shows that the proposed scheme
    offers better security and privacy. UAV Visualization: Pathak et al. [236] proposed
    BC-enabled UAV virtualization for IIoT called AerialBlocks to provide secure and
    persistent UAV services to the end-users with the help of BC to ensure security,
    privacy, service quality, and transparency. It includes three actors; the UAV
    owner (takes care of the maintenance of the UAV), end-users (registers to the
    platform to access UAV service), and the virtual UAV service provider (the link
    between the UAV owner and end-users). The proposed architecture includes three
    layers; the application layer (web-based applications for end-users), the virtualization
    layer (the connecting layer between the physical and application layer), and the
    physical layer (Physical UAVs available on the ground for various UAV missions).
    It uses permissioned BC (to ensure that only registered end users and UAV owners
    can access), smart contracts (used to store transactions and business regulation),
    and a combination of proof of authentication and practical byzantine fault tolerance
    consensus algorithm to ensure lightweight validation for fault tolerance. Authentication:
    Tan et al. [237] proposed a BC-enabled authentication approach for industrial
    UAVs. In particular, they use hyperledger fabric and smart contracts with the
    Kafka consensus algorithm. During designing the particular approach, the authors
    considered some goals; confidentiality, mutual authentication, conditional anonymity,
    perfect forward secrecy, backward secrecy, resistance to cyber-attack, and lightweight.
    Moreover, a security analysis was performed based on two problems i.e., elliptic
    curve discrete logarithmic and computational Diffie Hellman problem, to ensure
    the security provided by the proposed approach. Table 13 summarizes the work done
    in a BC-UAV use case. 3.8.3. Summary UAVs are flying drones equipped with sensors,
    deployed for traffic applications, photography, and surveillance. To achieve such
    services IoT is an important requirement. Security and privacy issues because
    of an untrusted broadcast, and a single point of failure due to a centralized
    system are some of the challenges being faced by the existing approach. Combining
    BC with UAV brings numerous opportunities such as more secure, autonomous, flexible,
    improved service quality, and user experience. Various research works have been
    carried out to explore the applications of BC with UAVs. In particular, the authors
    explored the applications of BC using UAVs for communication, data collection,
    health monitoring, spectrum trading, UAV visualization, and improved privacy and
    security. Authors preferred consortium BC, Ethereum BC, IPFS, and SHA-256 with
    PoA consensus algorithm. For spectrum trading authors used BC with edge technology,
    PoW consensus algorithm, and smart contracts as authors preferred Proof of authentication
    with the PBFT consensus algorithm. Some of the future aspects that need to be
    considered for widespread adoption of BC-enabled UAVs are integrating AI and ML-based
    algorithms, and satellite-based networks for UAV visualization, implementing UAVs
    for different use cases like UAV-driven healthcare use cases, consumer-friendly
    drones where mobile phones can act as servers. Along with the benefits offered
    by integrating BC-UAV, there are some challenges such as interoperability, data
    processing latency, data security, real-time deployment, and BC standardization.
    Table 13. Summary of related work in BC-UAV. Reference Main contribution Relevance
    to BC Targeted characteristics Empty Cell Empty Cell Empty Cell Authenticity Integrity
    Confidentiality Provenance Privacy Islam et al. [231] Proposed a BC-based scheme
    for outdoor health monitoring called BHMUS using UAVs. Uses Ethereum BC, UAV,
    MEC, and python language. Also, evaluation of performance is done in terms of
    processing time, expected transmission of data, validation time, and energy consumption.
    – – – – – Qiu et al. [235] Proposed a scheme for preserving privacy, secure trading,
    and sharing of the spectrum along with a Stackelberg game to obtain maximum spectrum
    pricing. A non-uniform pricing algorithm with low complexity and a distributed
    uniform pricing bargaining algorithm is also designed. Uses consortium BC technology,
    edge computing as a network enabler to offload the computation-intensive proof
    of work puzzle. Also, an analysis of performance is done in terms of transaction
    security and privacy. – ✓ ✓ – ✓ Islam et al. [229] Proposed a BC-enabled secure
    scheme for data acquisition through UAVs and IoT devices. Uses consortium BC Ethereum
    platform, Geth was used as Ethereum client and proof of authority (PoA) consensus
    algorithm and performance is analyzed in terms of connectivity and energy consumption.
    ✓ ✓ – – ✓ Rana et al. [227] Proposed an approach for maintaining the privacy,
    and security of UAVs by using BC. Uses cloud for data storage with blockchain,
    SHA256, image gathering, and sensing of the UAV. time stamp and GPS location.
    ✓ – – – ✓ Kumari et al. [223] Proposed a BC-based UAV softwarization architecture
    for secure UAV networks. Uses public BC Ethereum client to store UAV communications
    and SDN controller information as a transaction with IPFS to store data. ✓ ✓ ✓
    – ✓ Islam et al. [232] Proposed a UAV-assisted healthcare scheme that collects
    health data from users through UAV. Uses consortium BC Ethereum BC platform with
    proof of authority (PoA) consensus algorithm, time division multiple access (TDMA)
    protocols for communication. Also analyzed were the security and performance.
    ✓ ✓ – – – Xu et al. [230] Proposed a BC-based data collection scheme. An adaptive
    linear prediction algorithm was also designed to reduce energy consumption. Uses
    BC private chain, edge computing, asymmetric encryption, and MATLAB to analyze
    the performance in terms of security, accuracy, energy efficiency, training overhead,
    and training delay. – – – – ✓ Pathak et al. [236] Proposed BC-driven UAV virtualization
    for IIoT called AerialBlocks to provide secure and persistent UAV services to
    the end-users with the help of BC to ensure security, privacy, service quality,
    and transparency. Uses permissioned BC, smart contracts, and a combination of
    proof of authentication and practical byzantine fault tolerance consensus algorithm.
    – – ✓ – ✓ Raj et al. [233] Proposed an approach for health monitoring using UAV.
    A threat model is used to analyze security aspects. Results are analyzed in terms
    of latency, block size, and throughput. Uses Ethereum BC, smart contracts, mobile
    edge computing, and smart sensor devices. – ✓ – – – Aggarwal et al. [234] Proposed
    a three-layered architecture for the collection, processing, and transmission
    of medical data using UAVs. Uses Ethereum BC with PoW consensus algorithm to verify
    medical data. ✓ ✓ ✓ – ✓ Abualsauod et al. [228] Proposed a solution to resolve
    security and privacy challenges in UAV-assisted IoT applications. Analyzed the
    proposed solution in terms of system utility, latency, and processing time with
    overall attack detection accuracy. Uses Ethereum BC, cloud platform, elliptic
    curve cryptography, SHA algorithm (to protect data privacy), multiple ML algorithms,
    K Nearest Neighbours, and Naive Bayes. ✓ ✓ – – ✓ Tan et al. [237] Proposed a BC-enabled
    authentication approach for industrial UAVs. Uses hyperledger fabric and smart
    contracts with the Kafka consensus algorithm. ✓ ✓ ✓ – ✓ Table 14. Role of blockchain
    in IoT applications for various use cases. 4. Technical aspects and challenges
    The integration of BC-IoT has been broadly used in different fields because of
    its key attributes like decentralization, data immutability, and trustworthiness.
    This segment presents the most difficult issues identified with the execution
    of BC for IoT, specifically, Security, Privacy, Scalability, Access Control, Processing
    Power, Data Storage (On Chain versus Off-Chain), and Consensus algorithms. Besides,
    the effect of these issues and the work done on these aspects are talked about
    in this part. Table 14 summarizes the blockchain related challenges for different
    applications and use cases. Table 15. Summary of technical aspect — scalability.
    Reference Technical aspect Proposed solution Atlam et al. [3] All the transactions
    are stored in a ledger that is shared among all the nodes and the size of the
    blockchain increases continuously, which has a direct effect on the speed. No
    solution is proposed. Gao et al. [238] & Zheng et al. [29] Discussed the continuous
    increase in the size of the BC which results in increased cost of storage, BC
    becomes bulky and also leads to a reduction in distribution speed in the network.
    Both have discussed two solutions to resolve this issue: storage optimization
    of data and redesigning blockchain. Reyna et al. [24] Talked about the size of
    the BC, as the size grows nodes required more resources, which also has an effect
    on performance, synchronization time increases. Suggested off-chain storage and
    inter-planetary file system. Mahmoud et al. [40] & Xie et al. [84] Discussed the
    ever-growing and continuously increasing size of the BC. Highlighted the solutions
    like BC pruning and Lightning network and storing data off-chain using DHT (Distributed
    Hash Table) respectively. Monrat et al. [63] As BC is distributed in nature, copies
    of the ledger are stored at each node which has a direct effect on throughput
    and latency. In the PoW algorithm resources are wasted in solving the puzzle which
    also results in low throughput and high latency. Also, the PoW algorithm is CPU
    intensive leading to high electricity consumption. Suggested using DCS (Decentralized,
    Consistent, and Scalable) theorem. Rupasena et al. [152] Discussed FSC, transaction
    data generated is extremely large, leading to the blockchain ledger growing continuously.
    Also discussed that data about the product in FSC is not required after a certain
    period but as BC is an immutable ledger. In contrast to this fact, suggested an
    off-chain storage scheme and a technique to reduce the growth of off-chain storage.
    4.1. Scalability Scalability is defined as the ability of a system to handle the
    increase or decrease in terms of size, volume, performance, and cost [239]. When
    the number of active users increases in blockchain, a scalability issue arises
    that affects blockchain performance [240]. For instance, in the bitcoin blockchain,
    the number of transactions that arrives can vary, maybe 10 or maybe 100 but irrespective
    of the number of arriving transactions, the blockchain process only some fixed
    number of transactions relying upon the size of the block (such as the size of
    bitcoin block is 1 MB and can process only seven transactions per seconds) [29].
    The number of transactions processed per second in blockchain relies upon a wide
    range of factors like network latency, consensus protocol, and CPU processing
    power. This restricted block size cannot process a large number of transactions
    at once which causes delays in transactions [63]. The system must be scalable
    so that it must be able to handle the sudden increase and decrease in the transaction
    load. Because of the decentralized structure of blockchain, each node must process
    each transaction which leads to low capacity and low speed of transaction processing
    [241]. The Sharding process partition the network into numerous small subsets
    known as shards to avoid the duplication of resources such as communication, data
    storage, and computation overhead and improves the blockchain‘s performance [242].
    Each shard includes a different set of transactions instead of the whole network
    processing the same transaction. This helps in improving the throughput of the
    network [243]. As IoT is a collection of connected devices and IoT is becoming
    the Internet of Everything (IoE), that means a lot of connected devices are involved
    or each and everything is connected, which means a lot of transactions occur and
    enormous data will be generated [3], [24]. Therefore, it is important to maintain
    the scalability in BC-IoT. Table 15 encapsulates the technical aspect of the scalability
    of BC. 4.1.1. Challenges related to the scalability: In this segment, we are reviewing
    and discussing the scalability challenges faced by blockchain for IoT. • Throughput:
    In general, throughput is defined as the rate at which something is processed.
    In the context of blockchain for IoT, throughput implies the number of transactions
    processed per second. If we take bitcoin as an example then in bitcoin only seven
    transactions per second can be processed while existing payment systems like VISA
    can process 4000 transactions per second [29], [240]. Here, processing seven transactions
    per second means, irrespective of the input transactions coming at any rate, that
    the system is not scaling up with the inputs and giving a flat response, which
    naturally relies upon the underlying available hardware, the number of peers connected,
    and its available computational power [63]. • Storage: Whenever a new transaction
    comes, all the new transactions get accumulated in the pool of unconfirmed transactions,
    and miners pick a transaction to validate and verify the transaction. As the size
    of the block is limited, so the number of transactions that can be stored in the
    block is also restricted. Miners pick the transactions with a higher processing
    rate and transactions with less processing rate get delayed [29]. For example,
    in the food supply chain, a large number of IoT-enabled devices are used which
    leads to a huge amount of transaction data (may be audio, video, images) to be
    stored on the blockchain which leads to large storage and higher costs and directly
    affects the scalability [152]. 4.2. Security and privacy In general, Security
    is defined as the protection of the system against malicious attacks, unauthorized
    access, modifications, and deletion. In the context of the blockchain, security
    means the protection of transaction information and data in a block, detection
    of threat, and prevention of threat [244]. As blockchain is distributed and decentralized
    in nature it allows nodes to join the network and can view all the details of
    the transactions occurring in the network. It is crucial to maintain the integrity
    of the transactions, and availability of data, and to prevent double-spending,
    the system must be secured [245]. According to a report titled “State of IoT security”,
    cyber-attacks on IoT have increased by 22% [246]. As BC-IoT implies a huge number
    of connected devices in a distributed and decentralized manner, without security,
    these connected devices can be hacked, and once the hacker gains control, they
    can tamper with the data. So all the connected devices must be secured [24]. Privacy
    means protecting stored, transmitted, and processed private information such as
    data, identity, and location [247]. Especially in permissionless blockchain anyone
    can join the network and sometimes the nodes present in the network are the malicious
    ones whose aim is to collect the information from the network [247]. In the context
    of the blockchain, maintaining privacy means performing a transaction without
    leaking the user’s identification information [244]. The privacy and security
    of data can essentially be achieved by fulfilling five basic criteria such as
    confidentiality, availability, integrity, authentication, access control, and
    privacy requirements [247]. As blockchain is distributed and decentralized in
    nature, transaction privacy is not guaranteed. The issue with blockchain is that
    users cannot stay anonymous [84]. Especially, this is a challenge in public blockchain
    as anyone can join the network and all the previous and current transactions are
    visible [29]. If somehow all these transactions can be linked then the identity
    of the person who is behind the transactions gets revealed. So it is important
    to achieve privacy in blockchain [245]. IoT-driven devices collect a lot of data
    and personal information from the surrounding environment and they communicate
    with each other. When such data is managed by some central authority then the
    user’s privacy is at risk. Here blockchain technology can help maintain IoT privacy
    [248]. As BC supports distributed and decentralized features but with this also
    some challenges arise. Table 16 encapsulates the technical aspects of the security
    of BC. 4.2.1. Challenges related to the security & privacy: This section highlights
    the challenges related to the privacy and security of the BC for IoT. • Transaction
    Privacy Leakage: Blockchain uses asymmetric key cryptography as it uses public
    key and private key pairs for transactions. The real identity of the user does
    not get revealed as a blockchain-generated address was provided to the user and
    all the transactions occur between these addresses to hide the original identity
    of the user. But still, the privacy of the transactions is not guaranteed since
    all the transactions that occur in the network are visible to all the nodes present
    in the network and still, some detectable hints can divulge the identity of the
    users. These transactions can be linked or the transaction history can be linked
    to disclose the user’s identity [29], [249]. Various researchers propose methods
    against privacy to link pseudonyms with IP addresses [63]. • Security of Private
    Key: BC uses asymmetric key cryptography, which means it uses public and private
    key pairs. If the private key of the user is compromised then all the transactions
    will be leaked. Maintaining the security of the private key is of utmost importance
    [40], [249]. • Non-Compliance to Privacy Laws: As blockchain is a distributed
    ledger, participating nodes are from across the world, which raises privacy issues.
    A key point is that the miners are spread across different countries and thus
    it is not clear which privacy law(s) will be applied [250]. For instance, this
    may be decided based on the location of the miner who mined the new block or the
    location where the transaction occurs [250]. • Selfish Mining: Selfish mining
    was first reported by Eyal and Sirer [251]. When any malicious node mines the
    block but does not reveal that block and starts maintaining his/her private blockchain
    and still the other blocks are busy mining that block and the malicious node starts
    mining the next block without any competition and when this malicious node’s chain
    becomes longer than the original chain then he reveals that chain. At this point,
    honest miners think that as the selfish miner’s chain is longer, has a large number
    of blocks mined, done more proof of work, this is the original chain and starts
    mining and adding the block to the selfish miners’ chain. Before the private branch
    is revealed the honest miners are wasting their resources [252] on a useless branch
    [29], [238]. • 51% Attack: It is one of the most well-known security attacks and
    is also known as a majority attack. In this attack, if the hashing power of an
    individual miner or a pool of miners becomes more than 50% of the complete blockchain
    then the attacker or the malicious node can roll back the transaction, cause a
    double-spending problem, and modify the order of transaction [63], [238], [249].
    Table 16. Summary of technical aspect — security and privacy. Reference Technical
    aspect Proposed solution Islam et al. [253] Highlighted the security, trust, and
    privacy concerns in IoT-enabled smart homes. Proposed a blockchain-based smart
    contract approach to resolve security and privacy issues in IoT devices. Zhao
    et al. [254] Highlighted the remote data integrity checking and involvement of
    third parties. Proposed a blockchain-driven privacy-preserving scheme for IoT
    using EC-ElGamal cryptosystem, bilinear pairing, and aggregated signature. Rahman
    et al. [255] Discussed the security and privacy issues with IoT devices and how
    distributed ledger and blockchain technology had resolved these issues. Proposed
    architecture for smart buildings called DistBlockBuilding (disseminated block
    building) for safe and secure data transfer. Agrawal et al. [26] Discussed the
    open issues in IoT, i.e., lack of trust and single point of failure. To resolve
    this issue, the author proposed a blockchain-based IoT security solution. Al et
    al. [256] Highlighted the smart healthcare system and the issues such as security
    and privacy of data. Proposed a blockchain-based privacy-preserving architecture
    for healthcare data to attain accountability, integrity, and security. Azbeg et
    al. [257] Highlighted the IoT-enabled devices such as wearables and medical sensors
    for diabetes self-management. Proposed a blockchain-based architecture for self-managed
    follow-ups. The proposed architecture includes connected devices, blockchain networks,
    smart contracts, and medical teams. Dorri et al. [172] Highlighted the core components
    and functions of IoT-enabled smart home. Also proposed a blockchain-based architecture
    to improve security in terms of confidentiality, integrity, availability, and
    performance evaluation in terms of packet overhead, time overhead, and energy
    consumption. Dwivedi et al. [258] Talked about IoT and remote patient monitoring
    and also the concerns related to privacy and security such as the transfer of
    medical data. Highlighted the security concerns and proposed a blockchain-based
    architecture for IoT devices. Mohanty et al. [259] Highlighted the concerns related
    to the IoT such as resource constraints, centralization, and lack of privacy,
    and the advantages provided by blockchain technology. Proposed an efficient lightweight
    integrated blockchain architecture and deployed is in the smart home environment.
    Ouaddah et al. [260] Highlighted the access control challenges in IoT and how
    blockchain can be useful to resolve this challenge. Proposed a decentralized,
    pseudonymous, and privacy-preserving framework based on blockchain to manage access
    control. Qian et al. [261] Presented the opportunities IoT provides and also the
    challenges it carries like privacy and security issues. Highlighted the three
    layers of IoT and the security issues at each layer. Proposed a decentralized
    scheme for enhancing security based on blockchain for different IoT devices. Si
    et al. [262] Highlighted the issues related to conventional IoT information-sharing
    approaches such as positioning security problems. Proposed blockchain-enabled
    information sharing IoT security framework by using a double chain model and improved
    practical byzantine fault-tolerant consensus algorithm. 4.3. IoT data storage
    Data storage refers to storing or recording data or information using some storage
    medium so that when required it allows easy retrieval of stored data. In IoT,
    the collection of devices leads to the generation of a huge amount of data that
    needs to be efficiently stored for easy access and fast processing. Since IoT
    devices are characterized by less computational and storage resources thus the
    generated data is to be stored at some other location. In conventional methods,
    data is stored in a centralized infrastructure that suffers from security, privacy,
    and single-point-of-failure. Using blockchain, IoT data can be stored in a distributed
    manner (i.e, replicated at all the nodes in the blockchain network). However,
    it is a major concern how blockchains can cater to such data storage demands from
    IoT systems. On the one hand, the distributed ledger helps in improving the security
    and availability of the stored data and makes a blockchain-based IoT system decentralized.
    On the other hand, the distributed nature of the database results in a storage
    challenge because with time IoT devices will exponentially increase in number
    and blockchain does not allow delete operations since is designed to be an append-only
    database. Table 17 encapsulates the data storage aspect of BC. 4.3.1. Challenges
    related to the IoT data storage This section aims to bring the focus of the readers
    towards the challenges related to data storage. The continuous increase in the
    size of the blockchain will increase the difficulty for the full nodes to continue
    their participation in blockchain-based IoT systems. As a result, there will be
    less number of full nodes driving the blockchain at a given point in time making
    the system less decentralized. Variable block sizes are not the optimum solution
    to solve this issue. If we try to store a large number of transactions in a single
    block this will put an additional strain on full nodes. The speed to process a
    transaction depends on block size and block interval. Increasing the block size
    will improve the throughput but take more time to propagate the block to other
    nodes and reducing the block interval reduces latency but leads to instability
    [263]. Table 17. Summary of technical aspect — data storage. Reference Technical
    aspect Proposed solution Wang et al. [34] Discussed the potential blockchain design
    in IoT applications and also discussed possible solutions to reduce storage costs.
    Discussed the off-chain storage in which data can be stored separately at another
    place and for indexing using a pointer. Hepp et al. [264] Discussed the storing
    data in the chain itself, i.e., on-chain, which leads to the question of how much
    data we can store in the main chain, Also discussed off-chain storage and the
    challenges in maintaining the link between the hash stored in the main chain and
    the physical storage location. For on-chain storage, the size of the block can
    be variable to store data while for off-chain storage, suggested solutions like
    smart contracts and Distributed hash tables to maintain the link between hash
    in the chain and physical storage. Eyal et al. [263] Discussed the alternatives
    to improve the latency and bandwidth of the blockchain. To improve the performance
    of the blockchain, the author talked about federated chains, also known as side
    chains. Back et al. [265] Discussed the performance issues of blockchain and their
    solutions. Discussed the Pegged chain and its features. Lu et al. [266] Present
    the comparison between on-chain and off-chain regarding what data should be stored
    on-chain and off-chain. Suggested not to store private data on-chain and raw data
    can be stored off-chain while its hash is stored on-chain. 4.4. Consensus algorithm
    Blockchain is distributed and decentralized in nature, which means the nodes are
    geographically spread. Whenever a new transaction arrives it must be validated
    by every node present in the network and only after validation, each node updates
    its copy of the ledger. This validation is performed by creating a general agreement
    between the nodes by using some algorithms known as consensus algorithms. As Blockchain
    is a distributed and decentralized approach, there is no centralized authority
    to validate and verify the transaction but with the help of the consensus algorithm,
    they ensure that each block added to the network is valid and verified, and agreed
    upon by all the nodes otherwise the challenges like double-spending attack can
    occur. Consensus algorithms help in maintaining the integrity of the system and
    work against double-spending attacks [24]. Consensus Algorithms help in maintaining
    the sanctity of the data recorded on the blockchain [244]. As IoT involves a lot
    of connected devices, a large number of transactions occur. To involve each node
    and each node having equal rights, consensus algorithms are useful. Consensus
    algorithms help in creating consensus among the un-trusted parties involved in
    the public blockchain. Table 18 encapsulates the technical aspect consensus algorithm
    of BC. 4.4.1. Challenges related to the consensus algorithm Some of the challenges
    related to the consensus algorithm are presented in this section. The most commonly
    used consensus algorithm is PoW but it also has some limitations such as waste
    of resources meaning the nodes with high hashing power get more chance to mine
    the block and for this purpose, nodes spend a lot of money on upgrading hardware.
    These machines consume a lot of energy in solving puzzles [267]. But if the hashing
    power of the mining pool is more than 50% then it will be a concern for the network
    as they have control of the network and they can reverse the transactions [267].
    Other than this, PoW is also not suitable for real-time payments because of the
    creation speed of a block [60]. Also, pool mining is possible in PoS (proof-of-stake)
    and difficult to prevent [60]. Table 18. Summary of technical aspect — consensus
    algorithm. Reference Technical aspect Proposed solution Fernandez et al. [64]
    Discussed the power consumed by the PoW consensus algorithm. PoW has a certain
    level of difficulty but at the same time also consumes a lot of energy. Highlighted
    the solutions like PoS (Proof of Space) also known as Proof of Capacity (PoC).
    Some other consensus mechanisms which consumes less energy are PoS. Reyna et al.
    [24] Highlighted the disadvantages of the PoW consensus algorithm like high latency,
    low transaction rate, and high energy consumption. Suggested using another alternative
    algorithm like PoS, DPoS, LPoS, PoB, Also suggested using private BC where the
    number of participants is limited. Mahmoud et al. [40] Discussed the PoW algorithm
    in which miners solve difficult puzzles which consume a lot of electricity. Suggested
    using the Proof of Stake (PoS) algorithm, one who has more stake value will get
    the chance to append the block. Alsunaidi et al. [268] Discussed the technical
    aspects such as node identity management, power consumption, throughput, and block
    creation speed. No solution is proposed. Mingxiao et al. [267] Discussed that
    the nodes that have high hashing power (computation power) will get the right
    to mine the block and get the reward for mining the block, which forces people
    to upgrade their hardware and these systems consume a lot of energy. No solution
    is proposed. 4.5. Processing power Whenever a new technology comes into the market,
    one of the things that need to be considered before its adoption is that it must
    be energy efficient. In the case of BC technology, the mining process requires
    very high computational power and modern hardware resources. BC is a distributed
    and decentralized approach, whenever a new transaction occurs it is validated
    by generating the consensus between the participating nodes [3]. Every time a
    new transaction occurs it is broadcast to all the other users in the network and
    miners start mining the block for this, they are using a considerable amount of
    computer power. It is also a waste of resources when each node repeats the same
    process [84]. Table 19. Summary of technical aspect — processing power. Reference
    Technical aspect Proposed solution Atlam et al. [3] The mining process requires
    very high computation power. Discussed an approach to speed up the mining process
    by simultaneously using CPU & GPU in single machines (originally proposed by [269]).
    Xie et al. [84] PoW algorithm requires high computational power to mine the block.
    Suggested using another consensus algorithm like PoS, DPoS. Monrat et al. [63]
    In the PoW consensus algorithm, the miner needs to solve a difficult puzzle to
    compute the hash, which requires high computational power and modern hardware
    resources, Energy consumption in comparison to other payment systems is too high.
    Suggested solution either to redesign the BC infrastructure or use another consensus
    algorithm like PoS, which consumes less energy. Golosova et al. [270] Discussed
    the high energy consumption. To validate a transaction each node starts computing
    solutions for which they are using an enormous amount of computer power. Each
    node is repeating the same process which is a waste of resources. No solution
    is proposed. Let us take bitcoin as an example, for validating the transactions
    PoW consensus algorithms are used which requires a high amount of energy with
    modern hardware [63]. Depending upon the resources available the transaction processing
    speed in bitcoin is very less compared to other existing systems such as VISA
    payment systems. So it is very important to increase the processing speed in the
    blockchain. IoT includes several divergent types of devices with various computing
    capabilities and all of them will not be able to run the same encryption algorithm
    at the required speed [14]. Table 19 encapsulates the processing power aspect
    of BC. 4.5.1. Challenges related to the processing power Each miner present in
    the network starts mining the block and the one who mines the block first will
    get the chance to append the block to the blockchain with some corresponding reward.
    To receive the reward for mining the block, each participating node starts mining
    the block which requires a huge amount of energy. As each node is repeating the
    same process, this leads to a waste of resources. The energy consumption rate
    of the Bitcoin network has set a new benchmark. According to a report by the bitcoin
    energy consumption index, VISA has consumed a total of 740,000 Gigajoules of energy
    for all its operations which is less than the energy consumed in the bitcoin mining
    process [271]. Also according to the same report carbon footprint of a single
    mined bitcoin is equal to the worth of mining gold [271]. 5. Lesson learned and
    future work BC for IoT is a profoundly dynamic research topic. There are many
    research areas with significant degrees of challenges that should be handled in
    a modern way. Furnishing new arrangements should be limited to specific prerequisites
    and limitations like low complexity and reliability. This segment momentarily
    talks about lessons learned from related works and conceivable future directions
    in incorporating BC and IoT. 5.1. Healthcare 5.1.1. Lessons learned Despite the
    hype around smart healthcare system, it faces many challenges, such as data sharing,
    data integrity, privacy, and access control. Here BC technology has proved the
    potential to resolve these challenges such as patient details, doctor’s records,
    patient’s medical history, and pharmaceutical supply chain can be stored on BC.
    Moreover, integrating BC with healthcare will reduce the counterfeit medicines
    and instruments supplied to hospitals and can inform the authorities about discrepancies
    because of the transparency in the network. But at the same storing a large amount
    of data directly on the main chain is a challenge. To resolve this, researchers
    suggested use of either side chains and cloud storage as off-chain solution. BC
    also helps in maintaining privacy among the users and provides a single platform
    where all previous and present data can be accessed. Some of the authors suggested
    using private BC to exercise tight control access and maintain features like privacy
    and security and confidentiality of the information. Use of both private and public
    BCs have been suggested by various researchers. Many works suggest use of cloud
    storage or IPFS to store a large amount of data since the storage capacity is
    limited and BC adds data in append-mode only. For storing data on the cloud or
    other chain, a hash of the data is stored on the main chain. 5.1.2. Future work
    A lot of data is generated on daily basis in healthcare systems like patients’
    personal records, medical history, and medical reports like MRI, CT Scan, Ultrasounds,
    and many more. As BC supports immutability but according to EU regulations, patients
    will have the right to get their data erased whenever they want. • Data storage:
    In the healthcare system lots of data are generated like medical scanning/imaging,
    reports, and other such large-size data. Storing such a big amount of data is
    a challenge as BC supports only a limited amount of data to be stored on-chain
    as bigger data leads to latency and less throughput [87]. • Security and privacy:
    Healthcare data contain sensitive and personal information about the patient which
    must remain secure. The intruder can attack and can steal a patient‘s details
    or else can make it difficult to share details between hospitals which can lead
    to the wrong diagnosis and come to know everything about your medical history.
    Achieving privacy and the ability to access sensitive information are the major
    challenges. • Interoperability: In the healthcare domain there is a huge number
    of interconnected devices and all these devices must communicate with each other.
    All the users (different stakeholders such as patients and health personnel) have
    multiple types of devices communicating with each other, which requires coordination
    between multiple users. • Standardization: BC technology is in its beginning stage
    and whenever a new technology emerges, it requires some widely-applicable standards
    from Standard Development Organizations (SDOs) such as ISO [272]. [273] lists
    out the basic standardization organizations and their efforts to standardize blockchain.
    [274] calls attention to various standardization organizations and their publications
    about blockchain. But still, there are no globally accepted standards and protocols
    for the applicability of blockchain. 5.2. Smart homes 5.2.1. Lessons learned A
    smart home is defined as a home where all the appliances installed in the house
    are connected through the Internet and can communicate and share data. This process
    involves significant amount of data generation. BC technology enables IoT devices
    to communicate and share data. The primary focus is to maintain security and privacy
    in IoT-enabled homes. Moreover, use of access control list and Lamport Merkle
    Digital Signature algorithm has been suggested by researcher for authorization.
    The most preferred consensus algorithm is PoW by researchers. But PoW adds an
    extra cost which can be removed and can be mined by the homeowner. The secondary
    focus while leveraging BC for smart homes is energy management. For this consortium
    BC with PBFT consensus algorithm has been suggested. Some researchers have suggested
    tiered architecture for efficient integration of BC and IoT-enabled smart homes.
    Use of smart contracts running on top of BC have been also found efficient for
    ensuring tight access control and authentication in smart homes. Moreover, proxy
    signature, Kalman filters, and private BCs have also been used by researchers
    for achieving authentication and monitoring of IoT devices in smart homes. 5.2.2.
    Future work • Access control attack: If the intruder gets access to the device
    controlling the activities in a smart home then the intruder can do malicious
    activities [106]. It is important to design an access control system to permit
    the third person or guests in the house. This permission will be given based on
    access records generated by IoT devices and stored permanently using blockchain
    [106]. • Inter-operability: A smart home consists of different appliances and
    it is difficult to communicate with each other. It is important to work in the
    direction to achieve interoperability among the devices. • Privacy and security:
    Although blockchain provides robust security and privacy, many other malicious
    attacks are possible. So, it is important to research more to improve privacy
    of user data. 5.3. Smart city 5.3.1. Lessons learned Smart cities can be defined
    as cities equipped with modern, smart, and connected amenities that make the lives
    of citizens easier. Due to rapid urbanization and the increase in population,
    cities are facing many challenges. Here BC can serve as a possible solution because
    of the features it offers like improved reliability, better fault tolerance capability,
    and faster and more efficient operations. The idea of combining BC with a smart
    city provides a platform for communication, supports data integrity, motivates
    organizations like schools, hospitals, and government entities to share data transparently,
    and saves individuals’ time. For maintaining privacy and security, SDN with BC
    is used with PoW consensus algorithms with private BC. Different frameworks include
    mainly four layers physical, database, communication, and interface layer. Numerous
    researchers suggested off-chain storage like IPFS, cloud storage, and private
    BC along with BC-enabled on-chain for data storage. This will help in the personal
    data sharing challenge. While some of the authors suggested using Hyperledger
    fabric to maintain authentication and authorization. For data integrity, digital
    signatures and hashing are preferred. For energy management in smart cities, hyperledger
    fabric is used to maintain confidentiality and Kafka algorithm for authentication.
    5.3.2. Future work • Security and privacy: As blockchain is a distributed ledger
    it does not guarantee the privacy of the user’s data, as all the data is shared
    among all the nodes present in the network. Another issue in BC is that each node
    has blockchain generated address and its real identity is not revealed. • Throughput:
    Throughput of the blockchain depends upon the number of transactions inside a
    block which is restricted by block size. The number of transaction rates must
    be improved for faster services. • Storage: Applying blockchain technology in
    smart cities will generate a huge amount of data which leads to data storage issues.
    To manage such large amount of data is another primary focus. • Energy efficiency:
    For any transaction to occur, nodes present in the network need to create consensus
    among themselves for which they need to solve hard computations which consume
    a large amount of electricity. So, the proposed system must be energy efficient.
    5.4. Supply chain management 5.4.1. Lessons learned The major application of BC
    in supply chain management is to trace and keep the track of the products. Also,
    BC helps in secure sharing information among all the entities involved in the
    supply chain. Tracing and sharing information about the product not only prevents
    counterfeiting of products but also provides transparent information about the
    product. Ethereum BC with PoC, BigChainDB, off-chain storage, and double chains
    are some of the solutions proposed by researchers. For monitoring or real-time
    tracking Ethereum and Hyperledger sawtooth with IoT and RFID have been used to
    ensure unique identification of items. While some other researchers discussed
    hyperledger fabric BC as it has better performance. For credit evaluation, BC
    with deep learning has been used. Smart contracts are also used for payments and
    smooth transactions. 5.4.2. Future work Here are some challenges that need to
    be resolved while integrating BC with supply chain management. • Adoption of technology:
    The major hurdle in adopting Blockchain technology is making people aware of the
    adaptability of blockchain technology due to lack of knowledge and lack of skills
    to use the technology [67]. • Throughput performance: As blockchain is decentralized
    in nature, each transaction needs approval from all the other nodes present in
    the network, which brings consensus among the nodes. This validation process and
    size of the block limits the throughput of the blockchain [147]. • Security: In
    the supply chain the privacy of the manufacturer and supplier is the most important
    issue. Any one of the participating entities in the blockchain network can be
    a competitor and can misuse the information flowing in the supply chain [67].
    • Inter-operability: A supply chain consists of different nodes, all of which
    need to communicate and share information between different nodes [67]. 5.5. Autonomous
    vehicle 5.5.1. Lessons learned Autonomous vehicles connected, smart, and driverless
    vehicle that can communicate or exchange data with other vehicles or infrastructure.
    Use of autonomous vehicles help in reducing accidents, reducing traffic congestion,
    increasing lane capacity, and efficient parking. However, security, privacy, trustless
    sharing, provenance are some of the required features which can be achieved with
    the use of BC in IoT-enabled autonomous vehicles. Some of the important use of
    BC for autonomous vehicles are energy trading between electric vehicles and charging
    stations, information sharing, vehicle-to-vehicle communication, and road-related
    messages such as road conditions and traffic congestion [84]. Use of Hyperledger
    Fabric, off-chain storage, and the Diffie hellman key exchange algorithm have
    been proposed for payments in AV. To ensure scalability, off-chain storage and
    separate chains have been proposed. Data is stored on independent sources and
    their indexes are stored on the main chain. 5.5.2. Future work Integrating BC
    with autonomous vehicles brings many challenges along with it like motivating
    vehicles to share road-related messages also it is important to design a trust
    management system. • Scalability: In autonomous vehicles, lots of data are generated
    in the case of connecting vehicles to be shared as road information, traffic jam,
    traffic lights, etc. All this requires memory to store. Data growing rate is 40%
    as compared to IT which is 5% [275]. 5.6. Smart grid 5.6.1. Lessons learned Smart
    grid are build to offer optimized and uninterrupted power supplies to user, however,
    it faces issues like non-trusted data collection, privacy leakage, centralized
    generation and distribution, insecure power system, and energy thefts. BC supports
    features like immutability, non-repudiation, and decentralization, which makes
    it the intriguing solution for achieving security, privacy, and trust in smart
    grid systems. For storing meter readings and electricity consumption, BC can be
    used. Also in the future, IoT-enabled device-to-device electricity trading and
    payments can be done through BC [84]. BC-enabled P2P energy trading platform allows
    decentralized selling of excess energy by one consumer to other consumer who are
    in need. While SHA-256/512 are the most preferred hashing algorithms, researcher
    have used RSA with zero knowledge proof and an elliptic curve algorithm to enhance
    access control and authorization. Another important focus is charging coordination
    among the users for which BC and smart contract enabled smart grid have been advocated.
    5.6.2. Future work According to a bitcoin energy consumption report, for carrying
    out thirty million transactions thirty billion kWh of electricity was consumed
    [87]. If we integrate BC with a smart grid, it will require a lot of energy as
    the number of transactions is a direct multiple of 1000. • Scalability: In the
    energy sector, the number of transactions is very high and energy consumption
    for such BC-based transactions will be very high. Thus, scalability is a challenge.
    • Centralization: The chances of centralization are because all the miners form
    a mining pool to solve the PoW consensus algorithm and which can further lead
    to a 51% attack. • Implementation Cost: Integrating blockchain with smart grids
    requires high infrastructure cost because of restructuring the current grid network.
    So, implementing BC in existing smart grid is a challenge. 5.7. Unmanned aerial
    vehicle 5.7.1. Lessons learned Unmanned Aerial Vehicles (UAVs), also known as
    drones or Flying Robots [224], are self-regulating devices accessed through remotes
    or sometimes self-controlled and do not require a human pilot. BC has huge potential
    for encouraging the benefits of UAV-based applications. By implementing BC technology,
    governments across different geographical locations can keep an eye on the UAVs
    flying in their domains. With the expanding prominence of UAVs, their utilization
    in metropolitan territories has additionally expanded. BC enables UAVs to be outfitted
    with features like immutability, distribution, and decentralization which makes
    UAVs a prominent approach for applications that carry critical information such
    as defense, healthcare, surveillance, and financial applications. For communication
    among the UAV’s, Ethereum BC with IPFS storage is mostly used by different researchers.
    Although the use of BC for UAVs results in increase in overall processing time
    but it results in reduction in attack rates. For data collection, PoA consensus
    is used with Geth Ethereum BC. A few of the researchers, for health monitoring
    using UAV, also used the PoA consensus algorithm in data collection. Whereas few
    other researchers have also preferred the Kafka consensus algorithm with hyperledger
    fabric and smart contracts. 5.7.2. Future work Integrating BC with UAV is a complex
    task as it requires thorough testing before it is launched in the market. Also,
    UAVs have limited battery capacity with fly-time concerns whereas BC consumes
    more power. Thus, if we integrate BC with UAVs then power consumption is one of
    the major concerns to be resolved [226]. • Privacy: UAVs have cameras, temperature
    sensors, and GPS to collect data which can cause unintentional invasion of privacy
    [224]. • Scalability: In small groups of UAVs, communication is easily possible
    but in large groups, communication is not efficient. The number of transactions
    in Bitcoin and Ethereum is 12 transactions per second [224] which are quite less
    as compared to traditional approaches. • Lack of Standards and Regulations: Many
    organizations are currently working to release the BC standards so that the integration
    of BC with existing technologies will be possible. But the proper guidelines,
    rules, and regulations are yet to be released [224]. • Resource limitations: UAVs
    are lightweight flying machines but BC requires high computational power to run
    consensus algorithm [224]. 6. Conclusion BC is represented as a highly scalable
    technology that can be applied in many areas. Also, the IoT network is growing
    tremendously which leads to many challenges that need to be resolved soon. Here
    blockchain comes as a very promising solution because of its key attributes such
    as decentralization, immutability, distribution, transparency, non-repudiation,
    and pseudonymity. The future of integrating BC and IoT is apparently bright. In
    this paper, we briefly introduce blockchain, related terminology, its types, and
    the technology behind blockchain, i.e., DLT along with a quick overview of IoT.
    Further, this paper has surveyed the available literature on BC for IoT to provide
    an in-depth understanding of the integration of BC and IoT, related technical
    aspects, and their challenges. In particular, we focus attention on the opportunities
    and challenges that exist with the use of blockchain for IoT use cases. The key
    attributes of BC can support the implementation of various use cases such as healthcare,
    supply chain, and logistic management, smart city, smart grid, and autonomous
    vehicles. Our survey covered an aggregate treatment of challenges in integrating
    BC for IoT including scalability, security, and power consumption. We also discussed
    the lessons we learned from our literature survey. Finally, a broad list of future
    directions and open challenges were presented to motivate future research on BC
    for IoT. CRediT authorship contribution statement Shikha Mathur: Investigation,
    Visualization, Methodology, Writing – original draft, Writing – review & editing.
    Anshuman Kalla: Conceptualization, Writing – original draft, Visualization, Methodology,
    Writing – review & editing, Supervision. Gürkan Gür: Methodology, Writing – review
    & editing. Manoj Kumar Bohra: Methodology, Writing – review & editing, Supervision.
    Madhusanka Liyanage: Conceptualization, Methodology, Writing – review & editing.
    Declaration of Competing Interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. Data availability No data was used
    for the research described in the article References [1] Kalla A., Prombage P.,
    Liyanage M. Introduction to IoT IoT Security: Adv. Authenticat (2020), pp. 1-25
    CrossRefGoogle Scholar [2] Kotha H.D., Gupta V.M. IoT application: a survey Int.
    J. Eng Technol, 7 (2.7) (2018), pp. 891-896 View in ScopusGoogle Scholar [3] Atlam
    H.F., Wills G.B. Technical aspects of blockchain and IoT Advances in Computers,
    vol. 115, Elsevier (2019), pp. 1-39 View PDFView articleView in ScopusGoogle Scholar
    [4] Cisco H.F. Powering an Inclusive, Digital Future for All (2023) Accessed on
    23.03.2023 https://newsroom.cisco.com/c/r/newsroom/en/us/a/y2023/m01/powering-an-inclusive-digital-future-for-all.html
    Google Scholar [5] Suresh P., Daniel J.V., Parthasarathy V., Aswathy R. A state
    of the art review on the internet of things (IoT) history, technology and fields
    of deployment 2014 International Conference on Science Engineering and Management
    Research, ICSEMR, IEEE (2014), pp. 1-8 Google Scholar [6] Perera C., Zaslavsky
    A., Christen P., Georgakopoulos D. Context aware computing for the internet of
    things: A survey IEEE Commun. Surv. Tutor., 16 (1) (2013), pp. 414-454 Google
    Scholar [7] Kumar N.M., Mallick P.K. Blockchain technology for security issues
    and challenges in IoT Procedia Comput. Sci., 132 (2018), pp. 1815-1823 View PDFView
    articleView in ScopusGoogle Scholar [8] Li J., Kassem M. Applications of distributed
    ledger technology (DLT) and blockchain-enabled smart contracts in construction
    Autom. Constr., 132 (2021), Article 103955 View PDFView articleView in ScopusGoogle
    Scholar [9] Zaman U., Mehmood F., Iqbal N., Kim J., Ibrahim M. Towards secure
    and intelligent internet of health things: A survey of enabling technologies and
    applications Electronics, 11 (12) (2022), p. 1893 CrossRefView in ScopusGoogle
    Scholar [10] Bhadoria R.S., Arora Y., Gautam K. Blockchain hands on for developing
    genesis block Adv. Appl. Blockchain Technol (2020), pp. 269-278 CrossRefView in
    ScopusGoogle Scholar [11] Hewa T.M., Kalla A., Nag A., Ylianttila M.E., Liyanage
    M. Blockchain for 5G and IoT: Opportunities and challenges 2020 IEEE Eighth International
    Conference on Communications and Networking (ComNet), IEEE (2020), pp. 1-8 CrossRefGoogle
    Scholar [12] Al-Breiki H., Rehman M.H.U., Salah K., Svetinovic D. Trustworthy
    blockchain oracles: review, comparison, and open research challenges IEEE Access,
    8 (2020), pp. 85675-85685 CrossRefView in ScopusGoogle Scholar [13] Crosby M.,
    Pattanayak P., Verma S., Kalyanaraman V., et al. Blockchain technology: Beyond
    bitcoin Applied Innovation, 2 (6–10) (2016), p. 71 View in ScopusGoogle Scholar
    [14] Atlam H.F., Alenezi A., Alassafi M.O., Wills G. Blockchain with internet
    of things: Benefits, challenges, and future directions Int. J. Intell. Syst Appl,
    10 (6) (2018), pp. 40-48 View in ScopusGoogle Scholar [15] Singh A., Smirti A.,
    Gupta R., de Alwis C., Kalla A. Introduction to blockchain and smart contract–principles,
    applications, and security Blockchain Technology in Healthcare Applications, CRC
    Press (2022), pp. 175-197 CrossRefGoogle Scholar [16] Alam T. Blockchain and its
    role in the internet of things (IoT) (2019) arXiv preprint arXiv:1902.09779 Google
    Scholar [17] Rathee G., Sharma A., Saini H., Kumar R., Iqbal R. A hybrid framework
    for multimedia data processing in IoT-healthcare using blockchain technology Multimedia
    Tools Appl., 79 (15–16) (2020), pp. 9711-9733 CrossRefView in ScopusGoogle Scholar
    [18] Kumar R., Sharma R. Leveraging blockchain for ensuring trust in IoT: A survey
    J. King Saud Univ-Comput Inform Sci, 34 (10) (2022), pp. 8599-8622 View PDFView
    articleView in ScopusGoogle Scholar [19] R. Di Pietro, X. Salleras, M. Signorini,
    E. Waisbard, A blockchain-based trust system for the internet of things, in: Proceedings
    of the 23nd ACM on Symposium on Access Control Models and Technologies, 2018,
    pp. 77–83. Google Scholar [20] Medaglia C.M., Serbanati A. An overview of privacy
    and security issues in the internet of things The Internet of Things: 20 Th Tyrrhenian
    Workshop on Digital Communications, Springer (2010), pp. 389-395 CrossRefGoogle
    Scholar [21] Wang H., Wang Y., Taleb T., Jiang X. Special issue on security and
    privacy in network computing World Wide Web, 23 (2020), pp. 951-957 CrossRefView
    in ScopusGoogle Scholar [22] S.G.H. Soumyalatha, Study of IoT: understanding IoT
    architecture, applications, issues and challenges, in: 1st International Conference
    on Innovations in Computing & Net-Working (ICICN16), CSE, RRCE. International
    Journal of Advanced Networking & Applications, (478) 2016. Google Scholar [23]
    Ramachandran G.S., Krishnamachari B. Blockchain for the iot: Opportunities and
    challenges (2018) arXiv preprint arXiv:1805.02818 Google Scholar [24] Reyna A.,
    Martín C., Chen J., Soler E., Díaz M. On blockchain and its integration with IoT
    challenges and opportunities Future Gener. Comput. Syst., 88 (2018), pp. 173-190
    View PDFView articleView in ScopusGoogle Scholar [25] Rizvi S., Kurtz A., Pfeffer
    J., Rizvi M. Securing the internet of things (IoT): A security taxonomy for IoT
    2018 17th IEEE International Conference on Trust, Security and Privacy in Computing
    and Communications/12th IEEE International Conference on Big Data Science and
    Engineering (TrustCom/BigDataSE), IEEE (2018), pp. 163-168 CrossRefView in ScopusGoogle
    Scholar [26] Agrawal R., Verma P., Sonanis R., Goel U., De A., Kondaveeti S.A.,
    Shekhar S. Continuous security in IoT using blockchain 2018 IEEE International
    Conference on Acoustics, Speech and Signal Processing, ICASSP, IEEE (2018), pp.
    6423-6427 CrossRefView in ScopusGoogle Scholar [27] Choudhary T., Virmani C.,
    Juneja D. Convergence of blockchain and IoT: An edge over technologies Toward
    Social Internet of Things (SIoT): Enabling Technologies, Architectures and Applications,
    Springer (2020), pp. 299-316 CrossRefView in ScopusGoogle Scholar [28] Ferrag
    M.A., Derdour M., Mukherjee M., Derhab A., Maglaras L., Janicke H. Blockchain
    technologies for the internet of things: Research issues and challenges IEEE Internet
    Things J., 6 (2) (2018), pp. 2188-2204 Google Scholar [29] Zheng Z., Xie S., Dai
    H., Chen X., Wang H. An overview of blockchain technology: Architecture, consensus,
    and future trends 2017 IEEE International Congress on Big Data (BigData Congress),
    IEEE (2017), pp. 557-564 CrossRefView in ScopusGoogle Scholar [30] Priyanka A.,
    Nagaratnam A. Blockchain evolution-a survey paper Int. J. Scientif Res Sci., Eng.
    Technol, 4 (8) (2018) Google Scholar [31] Yaga D., Mell P., Roby N., Scarfone
    K. Blockchain technology overview (2019) arXiv preprint arXiv:1906.11078 Google
    Scholar [32] Dorri A., Kanhere S.S., Jurdak R. Blockchain in internet of things:
    challenges and solutions (2016) arXiv preprint arXiv:1608.05187 Google Scholar
    [33] Tseng L., Wong L., Otoum S., Aloqaily M., Othman J.B. Blockchain for managing
    heterogeneous internet of things: A perspective architecture IEEE Network, 34
    (1) (2020), pp. 16-23 CrossRefView in ScopusGoogle Scholar [34] Wang X., Zha X.,
    Ni W., Liu R.P., Guo Y.J., Niu X., Zheng K. Survey on blockchain for internet
    of things Comput. Commun., 136 (2019), pp. 10-29 View PDFView articleCrossRefGoogle
    Scholar [35] Atlam H.F., Azad M.A., Alzahrani A.G., Wills G. A review of blockchain
    in internet of things and AI Big Data and Cognitive Comput, 4 (4) (2020), p. 28
    CrossRefGoogle Scholar [36] Huh S., Cho S., Kim S. Managing IoT devices using
    blockchain platform 2017 19th International Conference on Advanced Communication
    Technology, ICACT, IEEE (2017), pp. 464-467 CrossRefView in ScopusGoogle Scholar
    [37] Chen F., Xiao Z., Cui L., Lin Q., Li J., Yu S. Blockchain for internet of
    things applications: A review and open issues J. Netw. Comput. Appl., 172 (2020),
    Article 102839 View PDFView articleView in ScopusGoogle Scholar [38] Restuccia
    F., Kanhere S.D., Melodia T., Das S.K. Blockchain for the internet of things:
    Present and future (2019) arXiv preprint arXiv:1903.07448 Google Scholar [39]
    Tasatanattakool P., Techapanupreeda C. Blockchain: Challenges and applications
    2018 International Conference on Information Networking, ICOIN, IEEE (2018), pp.
    473-475 CrossRefView in ScopusGoogle Scholar [40] Mahmoud Q.H., Lescisin M., AlTaei
    M. Research challenges and opportunities in blockchain and cryptocurrencies Int.
    Technol Lett, 2 (2) (2019), Article e93 View in ScopusGoogle Scholar [41] N.J.
    Van Eck, L. Waltman, VOSviewer manual, 1, 2011, Manual for VOSviewer Version.
    Google Scholar [42] Choudhary T., Virmani C., Juneja D. Convergence of blockchain
    and IoT: An edge over technologies Toward Social Internet of Things (SIoT): Enabling
    Technologies, Architectures and Applications, Springer (2020), pp. 299-316 CrossRefView
    in ScopusGoogle Scholar [43] Salimitari M., Chatterjee M., Fallah Y.P. A survey
    on consensus methods in blockchain for resource-constrained IoT networks Internet
    of Things, 11 (2020), Article 100212 View PDFView articleView in ScopusGoogle
    Scholar [44] Sengupta J., Ruj S., Bit S.D. A comprehensive survey on attacks,
    security issues and blockchain solutions for IoT and IIoT J. Netw. Comput. Appl.,
    149 (2020), Article 102481 View PDFView articleView in ScopusGoogle Scholar [45]
    Bhushan B., Sahoo C., Sinha P., Khamparia A. Unification of blockchain and internet
    of things (BIoT): requirements, working model, challenges and future directions
    Wirel. Netw. (2020), pp. 1-36 View in ScopusGoogle Scholar [46] Uddin M.A., Stranieri
    A., Gondal I., Balasubramanian V. A survey on the adoption of blockchain in IoT:
    Challenges and solutions Blockchain: Res. Appl (2021), Article 100006 View PDFView
    articleGoogle Scholar [47] Da Xu L., Lu Y., Li L. Embedding blockchain technology
    into IoT for security: a survey IEEE Internet Things J. (2021) Google Scholar
    [48] Alfandi O., Khanji S., Ahmad L., Khattak A. A survey on boosting IoT security
    and privacy through blockchain Cluster Comput., 24 (1) (2021), pp. 37-55 CrossRefView
    in ScopusGoogle Scholar [49] Yazdinejad A., Dehghantanha A., Parizi R.M., Srivastava
    G., Karimipour H. Secure intelligent fuzzy blockchain framework: Effective threat
    detection in iot networks Comput. Ind., 144 (2023), Article 103801 View PDFView
    articleView in ScopusGoogle Scholar [50] Li J., Greenwood D., Kassem M. Blockchain
    in the built environment and construction industry: A systematic review, conceptual
    models and practical use cases Autom. Constr., 102 (2019), pp. 288-307 View PDFView
    articleView in ScopusGoogle Scholar [51] Atlam H.F., Wills G.B. Intersections
    between IoT and distributed ledger Advances in Computers, vol. 115, Elsevier (2019),
    pp. 73-113 View PDFView articleView in ScopusGoogle Scholar [52] Aditya U.S.,
    Singh R., Singh P.K., Kalla A. A survey on blockchain in robotics: Issues, opportunities,
    challenges and future directions J. Netw. Comput. Appl., 196 (2021), Article 103245
    Google Scholar [53] Sultan A., Malik M.S.A., Mushtaq A. Internet of things security
    issues and their solutions with blockchain technology characteristics: A systematic
    literature review Am J Compt Sci Inform Technol, 6 (3) (2018), p. 27 Google Scholar
    [54] Rawat D.B., Chaudhary V., Doku R. Blockchain: Emerging applications and use
    cases (2019) arXiv preprint arXiv:1904.12247 Google Scholar [55] Bhushan B., Khamparia
    A., Sagayam K.M., Sharma S.K., Ahad M.A., Debnath N.C. Blockchain for smart cities:
    A review of architectures, integration trends and future research directions Sustainable
    Cities Soc., 61 (2020), Article 102360 View PDFView articleView in ScopusGoogle
    Scholar [56] Alladi T., Chamola V., Rodrigues J.J., Kozlov S.A. Blockchain in
    smart grids: A review on different use cases Sensors, 19 (22) (2019), p. 4862
    CrossRefView in ScopusGoogle Scholar [57] Ahmed I., Shilpi M.A. Blockchain technology
    a literature survey Int. Res J. Eng. Technol (IRJET), 5 (10) (2018) 2395–0056
    Google Scholar [58] Niranjanamurthy M., Nithya B., Jagannatha S. Analysis of blockchain
    technology: pros, cons and SWOT Cluster Comput., 22 (6) (2019), pp. 14743-14757
    CrossRefView in ScopusGoogle Scholar [59] Szalachowski P. (Short paper) towards
    more reliable bitcoin timestamps 2018 Crypto Valley Conference on Blockchain Technology,
    CVCBT, IEEE (2018), pp. 101-104 CrossRefView in ScopusGoogle Scholar [60] Nguyen
    G.-T., Kim K. A survey about consensus algorithms used in blockchain J. Inform.
    Proc Syst, 14 (1) (2018) Google Scholar [61] Casino F., Dasaklis T.K., Patsakis
    C. A systematic literature review of blockchain-based applications: current status,
    classification and open issues Telemat. Inform., 36 (2019), pp. 55-81 View PDFView
    articleView in ScopusGoogle Scholar [62] Aras S.T., Kulkarni V. Blockchain and
    its applications–a detailed survey Int. J. Comput. Appl., 180 (3) (2017), pp.
    29-35 CrossRefGoogle Scholar [63] Monrat A.A., Schelén O., Andersson K. A survey
    of blockchain from the perspectives of applications, challenges, and opportunities
    IEEE Access, 7 (2019), pp. 117134-117151 CrossRefView in ScopusGoogle Scholar
    [64] Fernández-Caramés T.M., Fraga-Lamas P. A review on the use of blockchain
    for the internet of things IEEE Access, 6 (2018), pp. 32979-33001 CrossRefView
    in ScopusGoogle Scholar [65] Christidis K., Devetsikiotis M. Blockchains and smart
    contracts for the internet of things Ieee Access, 4 (2016), pp. 2292-2303 View
    in ScopusGoogle Scholar [66] Alharby M., Van Moorsel A. Blockchain-based smart
    contracts: A systematic mapping study (2017) arXiv preprint arXiv:1710.06372 Google
    Scholar [67] Chang Y., Iakovou E., Shi W. Blockchain in global supply chains and
    cross border trade: a critical synthesis of the state-of-the-art, challenges and
    opportunities Int. J. Prod. Res., 58 (7) (2020), pp. 2082-2099 CrossRefView in
    ScopusGoogle Scholar [68] Hu T., Liu X., Chen T., Zhang X., Huang X., Niu W.,
    Lu J., Zhou K., Liu Y. Transaction-based classification and detection approach
    for Ethereum smart contract Inf. Process. Manage., 58 (2) (2021), Article 102462
    View PDFView articleView in ScopusGoogle Scholar [69] Hewa T., Ylianttila M.,
    Liyanage M. Survey on blockchain based smart contracts: applications, opportunities
    and challenges J. Netw. Comput. Appl. (2020), Article 102857 Google Scholar [70]
    Di Angelo M., Salzer G. Characterizing types of smart contracts in the ethereum
    landscape International Conference on Financial Cryptography and Data Security,
    Springer (2020), pp. 389-404 CrossRefView in ScopusGoogle Scholar [71] Alyssa
    Hertig, Ethereum 101, 2021, URL , Accessed on 10.01.2021. Google Scholar [72]
    Wohrer M., Zdun U. Smart contracts: security patterns in the ethereum ecosystem
    and solidity 2018 International Workshop on Blockchain Oriented Software Engineering,
    IWBOSE, IEEE (2018), pp. 2-8 View in ScopusGoogle Scholar [73] Marco I., Lakhani
    K.R. The truth about blockchain Harv. Bus. Rev., 95 (1) (2017), pp. 118-127 Google
    Scholar [74] Kalla A., De Alwis C., Porambage P., Gür G., Liyanage M. A survey
    on the use of blockchain for future 6G: Technical aspects, use cases, challenges
    and research directions J. Industr. Inform Integr (2022), Article 100404 View
    PDFView articleView in ScopusGoogle Scholar [75] Lu Y. The blockchain: State-of-the-art
    and research challenges J. Industr. Inform. Integr, 15 (2019), pp. 80-90 View
    PDFView articleView in ScopusGoogle Scholar [76] Zheng Z., Xie S., Dai H.-N.,
    Chen X., Wang H. Blockchain challenges and opportunities: A survey Int. J. Web
    Grid Services, 14 (4) (2018), pp. 352-375 CrossRefView in ScopusGoogle Scholar
    [77] Hammi M.T., Hammi B., Bellot P., Serhrouchni A. Bubbles of trust: A decentralized
    blockchain-based authentication system for IoT Comput. Secur., 78 (2018), pp.
    126-142 View PDFView articleView in ScopusGoogle Scholar [78] Peng L., Feng W.,
    Yan Z., Li Y., Zhou X., Shimizu S. Privacy preservation in permissionless blockchain:
    A survey Digit. Commun. Netw. (2020) Google Scholar [79] Fang W., Chen W., Zhang
    W., Pei J., Gao W., Wang G. Digital signature scheme for information non-repudiation
    in blockchain: a state of the art review EURASIP J. Wireless Commun. Networking,
    2020 (1) (2020), pp. 1-15 Google Scholar [80] Siyal A., Junejo A., Zawish M.,
    Ahmed K., Khalil A., Soursou G. Applications of blockchain technology in medicine
    and healthcare: Challenges and future perspectives Cryptography, 3 (1) (2019),
    p. 3 CrossRefView in ScopusGoogle Scholar [81] Tripathi G., Ahad M.A., Paiva S.
    S2HS-a blockchain based approach for smart healthcare system Healthcare, 8, Elsevier
    (2020), Article 100391 View PDFView articleView in ScopusGoogle Scholar [82] Wang
    S., Wang J., Wang X., Qiu T., Yuan Y., Ouyang L., Guo Y., Wang F.-Y. Blockchain-powered
    parallel healthcare systems based on the ACP approach IEEE Trans. Comput. Soc.
    Syst., 5 (4) (2018), pp. 942-950 View in ScopusGoogle Scholar [83] De Aguiar E.J.,
    Faiçal B.S., Krishnamachari B., Ueyama J. A survey of blockchain-based strategies
    for healthcare ACM Comput. Surv., 53 (2) (2020), pp. 1-27 Google Scholar [84]
    Xie J., Tang H., Huang T., Yu F.R., Xie R., Liu J., Liu Y. A survey of blockchain
    technology applied to smart cities: Research issues and challenges IEEE Commun.
    Surv. Tutor. (2019) Google Scholar [85] Sadiku M.N., Eze K.G., Musa S.M. Block
    chain technology in healthcare International Journal of Advances in Scientific
    Research and Engineering, 4 (2018) Google Scholar [86] Ray P.P., Dash D., Salah
    K., Kumar N. Blockchain for IoT-based healthcare: Background, consensus, platforms,
    and use cases IEEE Syst. J. (2020) Google Scholar [87] Alladi T., Chamola V.,
    Parizi R.M., Choo K.-K.R. Blockchain applications for industry 4.0 and industrial
    IoT: A review IEEE Access, 7 (2019), pp. 176935-176951 CrossRefView in ScopusGoogle
    Scholar [88] Sharma Y., Balamurugan B. Preserving the privacy of electronic health
    records using blockchain Procedia Comput. Sci., 173 (2020), pp. 171-180 View PDFView
    articleView in ScopusGoogle Scholar [89] Mayer A.H., da Costa C.A., Righi R.d.R.
    Electronic health records in a blockchain: A systematic review Health Inform.
    J., 26 (2) (2020), pp. 1273-1288 CrossRefView in ScopusGoogle Scholar [90] Sahoo
    M., Singhar S.S., Sahoo S.S. A blockchain based model to eliminate drug counterfeiting
    Machine Learning and Information Processing: Proceedings of ICMLIP 2019, Springer
    (2020), pp. 213-222 CrossRefView in ScopusGoogle Scholar [91] Sharma A., Kaur
    S., Singh M. A comprehensive review on blockchain and internet of things in healthcare
    Trans. Emerg. Telecommun. Technol., 32 (10) (2021), Article e4333 View in ScopusGoogle
    Scholar [92] Onik M.M.H., Aich S., Yang J., Kim C.-S., Kim H.-C. Blockchain in
    healthcare: challenges and solutions Big Data Analytics for Intelligent Healthcare
    Management, Elsevier (2019), pp. 197-226 View PDFView articleView in ScopusGoogle
    Scholar [93] Saha S., Sutrala A.K., Das A.K., Kumar N., Rodrigues J.J. On the
    design of blockchain-based access control protocol for IoT-enabled healthcare
    applications ICC 2020-2020 IEEE International Conference on Communications, ICC,
    IEEE (2020), pp. 1-6 View PDFView articleGoogle Scholar [94] Alzubi J.A. Blockchain-based
    Lamport Merkle digital signature: Authentication tool in IoT healthcare Comput.
    Commun., 170 (2021), pp. 200-208 View PDFView articleView in ScopusGoogle Scholar
    [95] Chen Y., Ding S., Xu Z., Zheng H., Yang S. Blockchain-based medical records
    secure storage and medical service framework J. Medical Syst, 43 (1) (2019), p.
    5 Google Scholar [96] Hemalatha P., et al. Monitoring and securing the healthcare
    data harnessing IOT and blockchain technology Turkish J. Comput. Math. Educat
    (TURCOMAT), 12 (2) (2021), pp. 2554-2561 Google Scholar [97] Zaabar B., Cheikhrouhou
    O., Jamil F., Ammi M., Abid M. HealthBlock: A secure blockchain-based healthcare
    data management system Comput. Netw., 200 (2021), Article 108500 View PDFView
    articleView in ScopusGoogle Scholar [98] Pandya S., Srivastava G., Jhaveri R.,
    Babu M.R., Bhattacharya S., Maddikunta P.K.R., Mastorakis S., Piran M.J., Gadekallu
    T.R. Federated learning for smart cities: A comprehensive survey Sustain. Energy
    Technol. Assess., 55 (2023), Article 102987 View PDFView articleView in ScopusGoogle
    Scholar [99] Ch R., Srivastava G., Nagasree Y.L.V., Ponugumati A., Ramachandran
    S. Robust cyber-physical system enabled smart healthcare unit using blockchain
    technology Electronics, 11 (19) (2022), p. 3070 CrossRefView in ScopusGoogle Scholar
    [100] Cyran M.A. Blockchain as a foundation for sharing healthcare data Blockchain
    in Healthcare Today (2018) Google Scholar [101] Griggs K.N., Ossipova O., Kohlios
    C.P., Baccarini A.N., Howson E.A., Hayajneh T. Healthcare blockchain system using
    smart contracts for secure automated remote patient monitoring J. Medical Syst,
    42 (7) (2018), p. 130 View in ScopusGoogle Scholar [102] Carter G., Shahriar H.,
    Sneha S. Blockchain-based interoperable electronic health record sharing framework
    2019 IEEE 43rd Annual Computer Software and Applications Conference, 2, COMPSAC,
    IEEE (2019), pp. 452-457 CrossRefView in ScopusGoogle Scholar [103] Chen M., Malook
    T., Rehman A.U., Muhammad Y., Alshehri M.D., Akbar A., Bilal M., Khan M.A. Blockchain-enabled
    healthcare system for detection of diabetes J. Inform. Security Appl, 58 (2021),
    Article 102771 View PDFView articleView in ScopusGoogle Scholar [104] Belhadi
    A., Holland J.-O., Yazidi A., Srivastava G., Lin J.C.-W., Djenouri Y. BIoMT-ISeg:
    Blockchain internet of medical things for intelligent segmentation Front. Physiol,
    13 (2023), p. 2744 Google Scholar [105] Mistry I., Tanwar S., Tyagi S., Kumar
    N. Blockchain for 5G-enabled IoT for industrial automation: A systematic review,
    solutions, and challenges Mech. Syst. Signal Process., 135 (2020), Article 106382
    View PDFView articleView in ScopusGoogle Scholar [106] Moniruzzaman M., Khezr
    S., Yassine A., Benlamri R. Blockchain for smart homes: Review of current trends
    and research challenges Comput. Electr. Eng., 83 (2020), Article 106585 View PDFView
    articleView in ScopusGoogle Scholar [107] Lazaroiu C., Roscia M. Smart district
    through iot and blockchain 2017 IEEE 6th International Conference on Renewable
    Energy Research and Applications, ICRERA, IEEE (2017), pp. 454-461 CrossRefView
    in ScopusGoogle Scholar [108] Arif S., Khan M.A., Rehman S.U., Kabir M.A., Imran
    M. Investigating smart home security: Is blockchain the answer? IEEE Access, 8
    (2020), pp. 117802-117816 CrossRefView in ScopusGoogle Scholar [109] Zhou Y.,
    Han M., Liu L., Wang Y., Liang Y., Tian L. Improving iot services in smart-home
    using blockchain smart contract 2018 IEEE International Conference on Internet
    of Things (IThings) and IEEE Green Computing and Communications (GreenCom) and
    IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData),
    IEEE (2018), pp. 81-87 CrossRefView in ScopusGoogle Scholar [110] AbuNaser M.,
    Alkhatib A.A. Advanced survey of blockchain for the internet of things smart home
    2019 IEEE Jordan International Joint Conference on Electrical Engineering and
    Information Technology, JEEIT, IEEE (2019), pp. 58-62 CrossRefView in ScopusGoogle
    Scholar [111] Xie J., Tang H., Huang T., Yu F.R., Xie R., Liu J., Liu Y. A survey
    of blockchain technology applied to smart cities: Research issues and challenges
    IEEE Commun. Surv. Tutor., 21 (3) (2019), pp. 2794-2830 Google Scholar [112] Dorri
    A., Kanhere S.S., Jurdak R., Gauravaram P. Blockchain for IoT security and privacy:
    The case study of a smart home 2017 IEEE International Conference on Pervasive
    Computing and Communications Workshops (PerCom Workshops), IEEE (2017), pp. 618-623
    View in ScopusGoogle Scholar [113] Dang T.L.N., Nguyen M.S. An approach to data
    privacy in smart home using blockchain technology 2018 International Conference
    on Advanced Computing and Applications, ACOMP, IEEE (2018), pp. 58-64 CrossRefView
    in ScopusGoogle Scholar [114] Batalla J.M., Vasilakos A., Gajewski M. Secure smart
    homes: Opportunities and challenges ACM Comput. Surv., 50 (5) (2017), pp. 1-32
    Google Scholar [115] Ren Y., Leng Y., Qi J., Sharma P.K., Wang J., Almakhadmeh
    Z., Tolba A. Multiple cloud storage mechanism based on blockchain in smart homes
    Future Gener. Comput. Syst., 115 (2021), pp. 304-313 View PDFView articleView
    in ScopusGoogle Scholar [116] Dorri A., Kanhere S.S., Jurdak R. Blockchain in
    internet of things: challenges and solutions (2016) arXiv preprint arXiv:1608.05187
    Google Scholar [117] Aung Y.N., Tantidham T. Review of ethereum: Smart home case
    study 2017 2nd International Conference on Information Technology, INCIT, IEEE
    (2017), pp. 1-4 CrossRefView in ScopusGoogle Scholar [118] Singh S., Ra I.-H.,
    Meng W., Kaur M., Cho G.H. SH-BlockCC: A secure and efficient internet of things
    smart home architecture based on cloud computing and blockchain technology Int.
    J. Distrib. Sens. Netw., 15 (4) (2019), Article 1550147719844159 Google Scholar
    [119] Ammi M., Alarabi S., Benkhelifa E. Customized blockchain-based architecture
    for secure smart home for lightweight IoT Inf. Process. Manage., 58 (3) (2021),
    Article 102482 View PDFView articleView in ScopusGoogle Scholar [120] Qashlan
    A., Nanda P., He X., Mohanty M. Privacy-preserving mechanism in smart home using
    blockchain IEEE Access, 9 (2021), pp. 103651-103669 CrossRefView in ScopusGoogle
    Scholar [121] Liao K. Design of the secure smart home system based on the blockchain
    and cloud service Wirel. Commun. Mob. Comput., 2022 (2022) Google Scholar [122]
    Yang Q., Wang H. Privacy-preserving transactive energy management for IoT-aided
    smart homes via blockchain (2021) arXiv preprint arXiv:2101.03840 Google Scholar
    [123] Baucas M.J., Gadsden S.A., Spachos P. IoT-based smart home device monitor
    using private blockchain technology and localization IEEE Netw. Lett, 3 (2) (2021),
    pp. 52-55 CrossRefGoogle Scholar [124] Baru S. Blockchain: The next innovation
    to make our cities smarter En. in:(Jan. 2018) (2018), p. 48 Google Scholar [125]
    Treiblmaier H., Rejeb A., Strebinger A. Blockchain as a driver for smart city
    development: Application fields and a comprehensive research agenda Smart Cities,
    3 (3) (2020), pp. 853-872 CrossRefView in ScopusGoogle Scholar [126] Sharma P.K.,
    Park J.H. Blockchain based hybrid network architecture for the smart city Future
    Gener. Comput. Syst., 86 (2018), pp. 650-655 View PDFView articleView in ScopusGoogle
    Scholar [127] Nãsulea C., Mic S.-M. Using blockchain as a platform for smart cities
    J. E-Technology, 9 (2) (2018), p. 37 Google Scholar [128] Theodorou S., Sklavos
    N. Blockchain-based security and privacy in smart cities Smart Cities Cybersecurity
    and Privacy, Elsevier (2019), pp. 21-37 View PDFView articleGoogle Scholar [129]
    Zhao G., Liu S., Lopez C., Lu H., Elgueta S., Chen H., Boshkoska B.M. Blockchain
    technology in agri-food value chain management: A synthesis of applications, challenges
    and future research directions Comput. Ind., 109 (2019), pp. 83-99 View PDFView
    articleView in ScopusGoogle Scholar [130] Mishra R.A., Kalla A., Braeken A., Liyanage
    M. Privacy protected blockchain based architecture and implementation for sharing
    of students’ credentials Inf. Process. Manage., 58 (3) (2021), Article 102512
    View PDFView articleView in ScopusGoogle Scholar [131] Shen C., Pena-Mora F. Blockchain
    for cities: a systematic literature review Ieee Access, 6 (2018), pp. 76787-76819
    CrossRefView in ScopusGoogle Scholar [132] Nãsulea C., Mic S.-M. Using blockchain
    as a platform for smart cities J. E-Technology Volume, 9 (2) (2018), p. 37 Google
    Scholar [133] Biswas K., Muthukkumarasamy V. Securing smart cities using blockchain
    technology 2016 IEEE 18th International Conference on High Performance Computing
    and Communications; IEEE 14th International Conference on Smart City; IEEE 2nd
    International Conference on Data Science and Systems (HPCC/SmartCity/DSS), IEEE
    (2016), pp. 1392-1393 CrossRefGoogle Scholar [134] Rahman M.A., Rashid M.M., Hossain
    M.S., Hassanain E., Alhamid M.F., Guizani M. Blockchain and IoT-based cognitive
    edge framework for sharing economy services in a smart city IEEE Access, 7 (2019),
    pp. 18611-18621 CrossRefView in ScopusGoogle Scholar [135] Zhang W., Wu Z., Han
    G., Feng Y., Shu L. Ldc: A lightweight dada consensus algorithm based on the blockchain
    for the industrial internet of things for smart city applications Future Gener.
    Comput. Syst., 108 (2020), pp. 574-582 View PDFView articleGoogle Scholar [136]
    Kumar P., Gupta G.P., Tripathi R. TP2SF: A trustworthy privacy-preserving secured
    framework for sustainable smart cities by leveraging blockchain and machine learning
    J. Syst. Archit., 115 (2021), Article 101954 View PDFView articleView in ScopusGoogle
    Scholar [137] Khan P.W., Byun Y.-C., Park N. A data verification system for CCTV
    surveillance cameras using blockchain technology in smart cities Electronics,
    9 (3) (2020), p. 484 CrossRefView in ScopusGoogle Scholar [138] Cha J., Singh
    S.K., Kim T.W., Park J.H. Blockchain-empowered cloud architecture based on secret
    sharing for smart city J. Inform. Security Appl, 57 (2021), Article 102686 View
    PDFView articleView in ScopusGoogle Scholar [139] Khattak H.A., Tehreem K., Almogren
    A., Ameer Z., Din I.U., Adnan M. Dynamic pricing in industrial internet of things:
    Blockchain application for energy management in smart cities J. Inform. Security
    Appl, 55 (2020), Article 102615 View PDFView articleView in ScopusGoogle Scholar
    [140] Esposito C., Ficco M., Gupta B.B. Blockchain-based authentication and authorization
    for smart city applications Inf. Process. Manage., 58 (2) (2021), Article 102468
    View PDFView articleView in ScopusGoogle Scholar [141] Ferreira C.M.S., Garrocho
    C.T.B., Oliveira R.A.R., Silva J.S., Cavalcanti C.F.M.d.C. IoT registration and
    authentication in smart city applications with blockchain Sensors, 21 (4) (2021),
    p. 1323 CrossRefGoogle Scholar [142] Tijan E., Aksentijević S., Ivanić K., Jardas
    M. Blockchain technology implementation in logistics Sustainability, 11 (4) (2019),
    p. 1185 CrossRefView in ScopusGoogle Scholar [143] Chang Y., Iakovou E., Shi W.
    Blockchain in global supply chains and cross border trade: a critical synthesis
    of the state-of-the-art, challenges and opportunities Int. J. Prod. Res. (2019),
    pp. 1-18 View in ScopusGoogle Scholar [144] Aich S., Chakraborty S., Sain M.,
    Lee H.-i., Kim H.-C. A review on benefits of IoT integrated blockchain based supply
    chain management implementations across different sectors with case study 2019
    21st International Conference on Advanced Communication Technology, ICACT, IEEE
    (2019), pp. 138-141 CrossRefView in ScopusGoogle Scholar [145] Dai H.-N., Zheng
    Z., Zhang Y. Blockchain for internet of things: A survey IEEE Internet Things
    J., 6 (5) (2019), pp. 8076-8094 CrossRefView in ScopusGoogle Scholar [146] Tsang
    Y.P., Choy K.L., Wu C.H., Ho G.T.S., Lam H.Y. Blockchain-driven IoT for food traceability
    with an integrated consensus mechanism IEEE Access, 7 (2019), pp. 129000-129017
    CrossRefView in ScopusGoogle Scholar [147] Zhang J. Deploying blockchain technology
    in the supply chain Blockchain and Distributed Ledger Technology, DLT, IntechOpen
    (2019) Google Scholar [148] Kamilaris A., Fonts A., Prenafeta-Boldı F.X. The rise
    of blockchain technology in agriculture and food supply chains Trends Food Sci
    Technol, 91 (2019), pp. 640-652 View PDFView articleView in ScopusGoogle Scholar
    [149] Dutta P., Choi T.-M., Somani S., Butala R. Blockchain technology in supply
    chain operations: Applications, challenges and research opportunities Transportation
    Research Part E: Logistics and Transportation Review, 142 (2020), Article 102067
    View PDFView articleView in ScopusGoogle Scholar [150] Musamih A., Salah K., Jayaraman
    R., Arshad J., Debe M., Al-Hammadi Y., Ellahham S. A blockchain-based approach
    for drug traceability in healthcare supply chain IEEE Access, 9 (2021), pp. 9728-9743
    CrossRefView in ScopusGoogle Scholar [151] Liu X., Barenji A.V., Li Z., Montreuil
    B., Huang G.Q. Blockchain-based smart tracking and tracing platform for drug supply
    chain Comput. Ind. Eng., 161 (2021), Article 107669 View PDFView articleView in
    ScopusGoogle Scholar [152] J. Rupasena, T. Hewa, K.T. Hemachandra, M. Liyanage,
    Scalable storage scheme for blockchain-enabled IoT equipped food supply chains.
    Google Scholar [153] Caro M.P., Ali M.S., Vecchio M., Giaffreda R. Blockchain-based
    traceability in agri-food supply chain management: A practical implementation
    2018 IoT Vertical and Topical Summit on Agriculture-Tuscany (IOT Tuscany), IEEE
    (2018), pp. 1-4 View in ScopusGoogle Scholar [154] Mao D., Wang F., Hao Z., Li
    H. Credit evaluation system based on blockchain for multiple stakeholders in the
    food supply chain Int. J. Environ. Res. Public Health, 15 (8) (2018), p. 1627
    View in ScopusGoogle Scholar [155] Viriyasitavat W., Hoonsopon D., Bi Z. Augmenting
    cryptocurrency in smart supply chain J. Industr. Inform. Integr, 21 (2021), Article
    100188 View PDFView articleView in ScopusGoogle Scholar [156] Weber I., Xu X.,
    Riveret R., Governatori G., Ponomarev A., Mendling J. Untrusted business process
    monitoring and execution using blockchain International Conference on Business
    Process Management, Springer (2016), pp. 329-347 CrossRefView in ScopusGoogle
    Scholar [157] Leng K., Bi Y., Jing L., Fu H.-C., Van Nieuwenhuyse I. Research
    on agricultural supply chain system with double chain architecture based on blockchain
    technology Future Gener. Comput. Syst., 86 (2018), pp. 641-649 View PDFView articleView
    in ScopusGoogle Scholar [158] Helo P., Shamsuzzoha A. Real-time supply chain—A
    blockchain architecture for project deliveries Robot. Comput.-Integr. Manuf.,
    63 (2020), Article 101909 View PDFView articleView in ScopusGoogle Scholar [159]
    Tian F. An agri-food supply chain traceability system for China based on RFID
    & blockchain technology 2016 13th International Conference on Service Systems
    and Service Management, ICSSSM, IEEE (2016), pp. 1-6 Google Scholar [160] Tian
    F. A supply chain traceability system for food safety based on HACCP, blockchain
    & internet of things 2017 International Conference on Service Systems and Service
    Management, IEEE (2017), pp. 1-6 Google Scholar [161] Rožman N., Corn M., Požrl
    T., Diaci J., et al. Distributed logistics platform based on blockchain and IoT
    Proc. CIRP, 81 (2019), pp. 826-831 View PDFView articleView in ScopusGoogle Scholar
    [162] Humayun M., Jhanjhi N., Hamid B., Ahmed G. Emerging smart logistics and
    transportation using IoT and blockchain IEEE Int. Things Mag, 3 (2) (2020), pp.
    58-62 CrossRefGoogle Scholar [163] Agrawal T.K., Kumar V., Pal R., Wang L., Chen
    Y. Blockchain-based framework for supply chain traceability: A case example of
    textile and clothing industry Comput. Ind. Eng., 154 (2021), Article 107130 View
    PDFView articleView in ScopusGoogle Scholar [164] Lou M., Dong X., Cao Z., Shen
    J. SESCF: A secure and efficient supply chain framework via blockchain-based smart
    contracts Secur. Commun. Netw., 2021 (2021) Google Scholar [165] Song Q., Chen
    Y., Zhong Y., Lan K., Fong S., Tang R. A supply-chain system framework based on
    internet of things using blockchain technology ACM Trans. Internet Technol (TOIT),
    21 (1) (2021), pp. 1-24 CrossRefGoogle Scholar [166] Bamakan S.M.H., Faregh N.,
    ZareRavasan A. Di-ANFIS: an integrated blockchain–IoT–big data-enabled framework
    for evaluating service supply chain performance J. Comput. Design Eng, 8 (2) (2021),
    pp. 676-690 CrossRefView in ScopusGoogle Scholar [167] Al-Rakhami M.S., Al-Mashari
    M. A blockchain-based trust model for the internet of things supply chain management
    Sensors, 21 (5) (2021), p. 1759 CrossRefGoogle Scholar [168] Cebe M., Erdin E.,
    Akkaya K., Aksu H., Uluagac S. Block4forensic: An integrated lightweight blockchain
    framework for forensics applications of connected vehicles IEEE Commun. Mag.,
    56 (10) (2018), pp. 50-57 CrossRefView in ScopusGoogle Scholar [169] Dave Maunsell
    M., Praveen Tanguturi E., James Hogarth K. Realising the benefits of autonomous
    vehicles in Australia (2021) URL https://www.accenture.com/_acnmedia/Accenture/Conversion-Assets/DotCom/Documents/Local/en-gb/PDF_3/Accenture-Realising-Benefits-Autonomous-Vehicles-Australia.pdf
    Google Scholar [170] Saranti P.G., Chondrogianni D., Karatzas S. Autonomous vehicles
    and blockchain technology are shaping the future of transportation The 4th Conference
    on Sustainable Urban Mobility, Springer (2018), pp. 797-803 Google Scholar [171]
    Yuan Y., Wang F.-Y. Towards blockchain-based intelligent transportation systems
    2016 IEEE 19th International Conference on Intelligent Transportation Systems,
    ITSC, IEEE (2016), pp. 2663-2668 CrossRefView in ScopusGoogle Scholar [172] Dorri
    A., Steger M., Kanhere S.S., Jurdak R. Blockchain: A distributed solution to automotive
    security and privacy IEEE Commun. Mag., 55 (12) (2017), pp. 119-125 View in ScopusGoogle
    Scholar [173] Ferreira J.C., Ferreira da Silva C., Martins J.P. Roaming service
    for electric vehicle charging using blockchain-based digital identity Energies,
    14 (6) (2021), p. 1686 CrossRefView in ScopusGoogle Scholar [174] Roriz R., Pereira
    J.L. Avoiding insurance fraud: a blockchain-based solution for the vehicle sector
    Procedia Comput. Sci., 164 (2019), pp. 211-218 View PDFView articleView in ScopusGoogle
    Scholar [175] Kumar A., Prasad A., Murthy R. Application of blockchain in usage
    based insurance Int. J. Adv. Res, Ideas Innovations Technol, IJARIIT, 5 (2) (2019),
    pp. 1574-1577 CrossRefGoogle Scholar [176] Jamil F., Cheikhrouhou O., Jamil H.,
    Koubaa A., Derhab A., Ferrag M.A. Petroblock: A blockchain-based payment mechanism
    for fueling smart vehicles Appl. Sci., 11 (7) (2021), p. 3055 CrossRefView in
    ScopusGoogle Scholar [177] Yin Y., Li Y., Ye B., Liang T., Li Y. A blockchain-based
    incremental update supported data storage system for intelligent vehicles IEEE
    Trans. Veh. Technol., 70 (5) (2021), pp. 4880-4893 CrossRefView in ScopusGoogle
    Scholar [178] Singh M., Kim S. Intelligent vehicle-trust point: Reward based intelligent
    vehicle communication using blockchain (2017) arXiv preprint arXiv:1707.07442
    Google Scholar [179] Oham C., Kanhere S.S., Jurdak R., Jha S. A blockchain based
    liability attribution framework for autonomous vehicles (2018) arXiv preprint
    arXiv:1802.05050 Google Scholar [180] Singh M., Kim S. Branch based blockchain
    technology in intelligent vehicle Comput. Netw., 145 (2018), pp. 219-231 View
    PDFView articleView in ScopusGoogle Scholar [181] Rathee G., Sharma A., Iqbal
    R., Aloqaily M., Jaglan N., Kumar R. A blockchain framework for securing connected
    and autonomous vehicles Sensors, 19 (14) (2019), p. 3165 CrossRefView in ScopusGoogle
    Scholar [182] Oham C., Michelin R.A., Jurdak R., Kanhere S.S., Jha S. B-FERL:
    Blockchain based framework for securing smart vehicles Inf. Process. Manage.,
    58 (1) (2021), Article 102426 View PDFView articleView in ScopusGoogle Scholar
    [183] Tyagi A.K., Agarwal D., Sreenath N. SecVT: Securing the vehicles of tomorrow
    using blockchain technology 2022 International Conference on Computer Communication
    and Informatics, ICCCI, IEEE (2022), pp. 1-6 Google Scholar [184] Fang X., Misra
    S., Xue G., Yang D. Smart grid—The new and improved power grid: A survey IEEE
    Commun. Surv. Tutor., 14 (4) (2011), pp. 944-980 View in ScopusGoogle Scholar
    [185] Mollah M.B., Zhao J., Niyato D., Lam K.-Y., Zhang X., Ghias A.M., Koh L.H.,
    Yang L. Blockchain for future smart grid: A comprehensive survey IEEE Internet
    Things J., 8 (1) (2020), pp. 18-43 Google Scholar [186] Dinesha D.L., Balachandra
    P. Conceptualization of blockchain enabled interconnected smart microgrids Renew.
    Sustain. Energy Rev., 168 (2022), Article 112848 View PDFView articleView in ScopusGoogle
    Scholar [187] Rao A.R., Clarke D. Perspectives on emerging directions in using
    IoT devices in blockchain applications Internet of Things, 10 (2020), Article
    100079 View PDFView articleView in ScopusGoogle Scholar [188] Gai K., Wu Y., Zhu
    L., Qiu M., Shen M. Privacy-preserving energy trading using consortium blockchain
    in smart grid IEEE Trans. Ind. Inform., 15 (6) (2019), pp. 3548-3558 CrossRefView
    in ScopusGoogle Scholar [189] Guan Z., Si G., Zhang X., Wu L., Guizani N., Du
    X., Ma Y. Privacy-preserving and efficient aggregation based on blockchain for
    power grid communications in smart communities IEEE Commun. Mag., 56 (7) (2018),
    pp. 82-88 CrossRefView in ScopusGoogle Scholar [190] Mylrea M., Gourisetti S.N.G.
    Blockchain for smart grid resilience: Exchanging distributed energy at speed,
    scale and security 2017 Resilience Week, RWS, IEEE (2017), pp. 18-23 CrossRefView
    in ScopusGoogle Scholar [191] Powerledger (2023) URL https://www.powerledger.io/
    Google Scholar [192] Bankymooon (2023) URL http://bankymoon.co.za/ Google Scholar
    [193] Kuzlu M., Sarp S., Pipattanasomporn M., Cali U. Realizing the potential
    of blockchain technology in smart grid applications 2020 IEEE Power & Energy Society
    Innovative Smart Grid Technologies Conference, ISGT, IEEE (2020), pp. 1-5 CrossRefGoogle
    Scholar [194] Guan Z., Lu X., Yang W., Wu L., Wang N., Zhang Z. Achieving efficient
    and privacy-preserving energy trading based on blockchain and ABE in smart grid
    J. Parallel Distrib. Comput., 147 (2021), pp. 34-45 View PDFView articleView in
    ScopusGoogle Scholar [195] Yapa C., de Alwis C., Liyanage M., Ekanayake J. Survey
    on blockchain for future smart grids: Technical aspects, applications, integration
    challenges and future research Energy Rep., 7 (2021), pp. 6530-6564 View PDFView
    articleView in ScopusGoogle Scholar [196] Gao J., Asamoah K.O., Sifah E.B., Smahi
    A., Xia Q., Xia H., Zhang X., Dong G. Gridmonitoring: Secured sovereign blockchain
    based monitoring on smart grid IEEE Access, 6 (2018), pp. 9917-9925 CrossRefView
    in ScopusGoogle Scholar [197] Aklilu Y.T., Ding J. Survey on blockchain for smart
    grid management, control, and operation Energies, 15 (1) (2022), p. 193 View in
    ScopusGoogle Scholar [198] Mengelkamp E., Notheisen B., Beer C., Dauer D., Weinhardt
    C. A blockchain-based smart grid: towards sustainable local energy markets Comput.
    Sci. Res. Dev., 33 (1–2) (2018), pp. 207-214 CrossRefView in ScopusGoogle Scholar
    [199] Naseer O., Ullah S., Anjum L. Blockchain-based decentralized lightweight
    control access scheme for smart grids Arab. J. Sci. Eng. (2021), pp. 1-11 CrossRefGoogle
    Scholar [200] Wang D., Wang H., Fu Y. Blockchain-based IoT device identification
    and management in 5G smart grid EURASIP J. Wireless Commun. Networking, 2021 (1)
    (2021), pp. 1-19 Google Scholar [201] Muzumdar A., Modi C., Vyjayanthi C. Designing
    a blockchain-enabled privacy-preserving energy theft detection system for smart
    grid neighborhood area network Electr. Power Syst. Res., 207 (2022), Article 107884
    View PDFView articleView in ScopusGoogle Scholar [202] Wang H., Gong Y., Ding
    Y., Tang S., Wang Y. Privacy-preserving data aggregation with dynamic billing
    in fog-based smart grid Appl. Sci., 13 (2) (2023), p. 748 Google Scholar [203]
    Bera B., Saha S., Das A.K., Vasilakos A.V. Designing blockchain-based access control
    protocol in IoT-enabled smart-grid system IEEE Internet Things J., 8 (7) (2021),
    pp. 5744-5761 CrossRefView in ScopusGoogle Scholar [204] Baza M., Nabil M., Lasla
    N., Fidan K., Mahmoud M., Abdallah M. Blockchain-based firmware update scheme
    tailored for autonomous vehicles 2019 IEEE Wireless Communications and Networking
    Conference, WCNC, IEEE (2019), pp. 1-7 CrossRefGoogle Scholar [205] Sestrem Ochôa
    I., Augusto Silva L., de Mello G., Garcia N.M., de Paz Santana J.F., Quietinho
    Leithardt V.R. A cost analysis of implementing a blockchain architecture in a
    smart grid scenario using sidechains Sensors, 20 (3) (2020), p. 843 CrossRefGoogle
    Scholar [206] Wang W., Huang H., Zhang L., Su C. Secure and efficient mutual authentication
    protocol for smart grid under blockchain Peer-To-Peer Netw. Appl., 14 (5) (2021),
    pp. 2681-2693 CrossRefView in ScopusGoogle Scholar [207] Wang Q., Zhu X., Ni Y.,
    Gu L., Zhu H. Blockchain for the IoT and industrial IoT: A review Internet of
    Things (2019), Article 100081 Google Scholar [208] Ericsson Q. Unlock the value
    of industry 4.0 (2021) URL https://www.ericsson.com/en/industry4-0?gclid=CjwKCAiAgc-ABhA7EiwAjev-j08E-tWodAFplQ1Kb44_jyNBqfYgsnaIbGX-2jDJhzxXhxYp0SfoHhoCI28QAvD_BwE&gclsrc=aw.ds
    Google Scholar [209] Kumar T., Harjula E., Ejaz M., Manzoor A., Porambage P.,
    Ahmad I., Liyanage M., Braeken A., Ylianttila M. BlockEdge: blockchain-edge framework
    for industrial IoT networks IEEE Access, 8 (2020), pp. 154166-154185 CrossRefView
    in ScopusGoogle Scholar [210] Robert J., Kubler S., Ghatpande S. Enhanced lightning
    network (off-chain)-based micropayment in IoT ecosystems Future Gener. Comput.
    Syst., 112 (2020), pp. 283-296 View PDFView articleView in ScopusGoogle Scholar
    [211] Agarwal U., Rishiwal V., Tanwar S., Chaudhary R., Sharma G., Bokoro P.N.,
    Sharma R. Blockchain technology for secure supply chain management: A comprehensive
    review IEEE Access (2022) Google Scholar [212] Manogaran G., Alazab M., Shakeel
    P.M., Hsu C.-H. Blockchain assisted secure data sharing model for internet of
    things based smart industries IEEE Trans. Reliab. (2021) Google Scholar [213]
    Xu Y., Ren J., Wang G., Zhang C., Yang J., Zhang Y. A blockchain-based nonrepudiation
    network computing service scheme for industrial IoT IEEE Trans. Ind. Inform.,
    15 (6) (2019), pp. 3632-3641 CrossRefView in ScopusGoogle Scholar [214] Liu C.H.,
    Lin Q., Wen S. Blockchain-enabled data collection and sharing for industrial IoT
    with deep reinforcement learning IEEE Trans. Ind. Inform., 15 (6) (2018), pp.
    3516-3526 CrossRefView in ScopusGoogle Scholar [215] Liu X., Wang W., Guo H.,
    Barenji A.V., Li Z., Huang G.Q. Industrial blockchain based framework for product
    lifecycle management in industry 4.0 Robot. Comput.-Integr. Manuf., 63 (2020),
    Article 101897 View PDFView articleView in ScopusGoogle Scholar [216] Huang J.,
    Kong L., Chen G., Wu M.-Y., Liu X., Zeng P. Towards secure industrial IoT: Blockchain
    system with credit-based consensus mechanism IEEE Trans. Ind. Inform., 15 (6)
    (2019), pp. 3680-3689 CrossRefView in ScopusGoogle Scholar [217] Rathee G., Sharma
    A., Kumar R., Iqbal R. A secure communicating things network framework for industrial
    IoT using blockchain technology Ad Hoc Netw., 94 (2019), Article 101933 View PDFView
    articleView in ScopusGoogle Scholar [218] Rathee G., Balasaraswathi M., Chandran
    K.P., Gupta S.D., Boopathi C. A secure IoT sensors communication in industry 4.0
    using blockchain technology J. Ambient Intell. Humaniz. Comput., 12 (1) (2021),
    pp. 533-545 CrossRefView in ScopusGoogle Scholar [219] Latif S., Idrees Z., Ahmad
    J., Zheng L., Zou Z. A blockchain-based architecture for secure and trustworthy
    operations in the industrial Internet of Things J. Ind. Inform Integr, 21 (2021),
    Article 100190 View PDFView articleView in ScopusGoogle Scholar [220] Sarier N.D.
    Efficient biometric-based identity management on the Blockchain for smart industrial
    applications Pervasive Mob. Comput., 71 (2021), Article 101322 View PDFView articleView
    in ScopusGoogle Scholar [221] Teslya N., Ryabchikov I. Blockchain-based platform
    architecture for industrial IoT 2017 21st Conference of Open Innovations Association,
    FRUCT, IEEE (2017), pp. 321-329 View in ScopusGoogle Scholar [222] Aggarwal S.,
    Chaudhary R., Aujla G.S., Kumar N., Choo K.-K.R., Zomaya A.Y. Blockchain for smart
    communities: Applications, challenges and opportunities J. Netw. Comput. Appl.,
    144 (2019), pp. 13-48 View PDFView articleView in ScopusGoogle Scholar [223] Kumari
    A., Gupta R., Tanwar S., Kumar N. A taxonomy of blockchain-enabled softwarization
    for secure UAV network Comput. Commun., 161 (2020), pp. 304-323 View PDFView articleView
    in ScopusGoogle Scholar [224] Mehta P., Gupta R., Tanwar S. Blockchain envisioned
    UAV networks: Challenges, solutions, and comparisons Comput. Commun. (2020) Google
    Scholar [225] Bera B., Chattaraj D., Das A.K. Designing secure blockchain-based
    access control scheme in IoT-enabled internet of drones deployment Comput. Commun.,
    153 (2020), pp. 229-249 View PDFView articleView in ScopusGoogle Scholar [226]
    Alladi T., Chamola V., Sahu N., Guizani M. Applications of blockchain in unmanned
    aerial vehicles: A review Veh. Commun. (2020), Article 100249 View PDFView articleView
    in ScopusGoogle Scholar [227] Rana T., Shankar A., Sultan M.K., Patan R., Balusamy
    B. An intelligent approach for UAV and drone privacy security using blockchain
    methodology 2019 9th International Conference on Cloud Computing, Data Science
    & Engineering (Confluence), IEEE (2019), pp. 162-167 CrossRefView in ScopusGoogle
    Scholar [228] Abualsauod E.H. A hybrid blockchain method in internet of things
    for privacy and security in unmanned aerial vehicles network Comput. Electr. Eng.,
    99 (2022), Article 107847 View PDFView articleView in ScopusGoogle Scholar [229]
    Islam A., Shin S.Y. Bus: A blockchain-enabled data acquisition scheme with the
    assistance of uav swarm in internet of things IEEE Access, 7 (2019), pp. 103231-103249
    CrossRefView in ScopusGoogle Scholar [230] Xu X., Zhao H., Yao H., Wang S. A blockchain-enabled
    energy efficient data collection system for UAV-assisted IoT IEEE Internet Things
    J. (2020) Google Scholar [231] Islam A., Shin S.Y. BHMUS: Blockchain based secure
    outdoor health monitoring scheme using UAV in smart city 2019 7th International
    Conference on Information and Communication Technology (ICoICT), IEEE (2019),
    pp. 1-6 View in ScopusGoogle Scholar [232] Islam A., Shin S.Y. A blockchain-based
    secure healthcare scheme with the assistance of unmanned aerial vehicle in internet
    of things Comput. Electr. Eng., 84 (2020), Article 106627 View PDFView articleView
    in ScopusGoogle Scholar [233] Raj J.S. Security enhanced blockchain based unmanned
    aerial vehicle health monitoring system J. ISMAC, 3 (02) (2021), pp. 121-131 CrossRefGoogle
    Scholar [234] Aggarwal S., Kumar N., Alhussein M., Muhammad G. Blockchain-based
    UAV path planning for healthcare 4.0: Current challenges and the way ahead IEEE
    Network, 35 (1) (2021), pp. 20-29 CrossRefView in ScopusGoogle Scholar [235] Qiu
    J., Grace D., Ding G., Yao J., Wu Q. Blockchain-based secure spectrum trading
    for unmanned-aerial-vehicle-assisted cellular networks: An operator’s perspective
    IEEE Internet Things J., 7 (1) (2019), pp. 451-466 Google Scholar [236] Pathak
    N., Mukherjee A., Misra S. AerialBlocks: Blockchain-enabled UAV virtualization
    for industrial IoT IEEE Int. Things Magaz, 4 (1) (2021), pp. 72-77 CrossRefGoogle
    Scholar [237] Tan Y., Wang J., Liu J., Kato N. Blockchain-assisted distributed
    and lightweight authentication service for industrial unmanned aerial vehicles
    IEEE Internet Things J. (2022) Google Scholar [238] Gao W., Hatcher W.G., Yu W.
    A survey of blockchain: techniques, applications, and challenges 2018 27th International
    Conference on Computer Communication and Networks, ICCCN, IEEE (2018), pp. 1-11
    Google Scholar [239] Zou Y., Meng T., Zhang P., Zhang W., Li H. Focus on blockchain:
    A comprehensive survey on academic and application IEEE Access, 8 (2020), pp.
    187182-187201 CrossRefView in ScopusGoogle Scholar [240] Zhou Q., Huang H., Zheng
    Z., Bian J. Solutions to scalability of blockchain: A survey IEEE Access, 8 (2020),
    pp. 16440-16455 CrossRefView in ScopusGoogle Scholar [241] Kotilevets I., Ivanova
    I., Romanov I., Magomedov S., Nikonov V., Pavelev S. Implementation of directed
    acyclic graph in blockchain network to improve security and speed of transactions
    IFAC-PapersOnLine, 51 (30) (2018), pp. 693-696 View PDFView articleView in ScopusGoogle
    Scholar [242] Yu G., Wang X., Yu K., Ni W., Zhang J.A., Liu R.P. Survey: Sharding
    in blockchains IEEE Access, 8 (2020), pp. 14155-14181 CrossRefView in ScopusGoogle
    Scholar [243] Hafid A., Hafid A.S., Samih M. Scaling blockchains: A comprehensive
    survey IEEE Access, 8 (2020), pp. 125244-125262 CrossRefView in ScopusGoogle Scholar
    [244] Joshi A.P., Han M., Wang Y. A survey on security and privacy issues of blockchain
    technology Math. Found Comput, 1 (2) (2018), p. 121 CrossRefGoogle Scholar [245]
    Zhang R., Xue R., Liu L. Security and privacy on blockchain ACM Comput. Surv.,
    52 (3) (2019), pp. 1-34 Google Scholar [246] Mohanta B.K., Jena D., Ramasubbareddy
    S., Daneshmand M., Gandomi A.H. Addressing security and privacy issues of IoT
    using blockchain technology IEEE Internet Things J., 8 (2) (2020), pp. 881-888
    Google Scholar [247] Zhang J., Chen B., Zhao Y., Cheng X., Hu F. Data security
    and privacy-preserving in edge computing paradigm: Survey and open issues IEEE
    Access, 6 (2018), pp. 18209-18237 CrossRefView in ScopusGoogle Scholar [248] Erdem
    A., Yildirim S.Ö., Angin P. Blockchain for ensuring security, privacy, and trust
    in IoT environments: the state of the art Secur, Privacy Trust IoT Environ (2019),
    pp. 97-122 CrossRefGoogle Scholar [249] Li X., Jiang P., Chen T., Luo X., Wen
    Q. A survey on the security of blockchain systems Future Gener. Comput. Syst.,
    107 (2020), pp. 841-853 View PDFView articleView in ScopusGoogle Scholar [250]
    Kalla A., Hewa T., Mishra R.A., Ylianttila M., Liyanage M. The role of blockchain
    to fight against COVID-19 IEEE Eng. Manag Rev, 48 (3) (2020), pp. 85-96 CrossRefView
    in ScopusGoogle Scholar [251] Sapirshtein A., Sompolinsky Y., Zohar A. Optimal
    selfish mining strategies in bitcoin International Conference on Financial Cryptography
    and Data Security, Springer (2016), pp. 515-532 Google Scholar [252] Kim S., Deka
    G.C. Advanced Applications of Blockchain Technology Springer (2020) Google Scholar
    [253] Islam M.N., Kundu S. IoT security, privacy and trust in home-sharing economy
    via blockchain Blockchain Cybersecurity, Trust and Privacy, Springer (2020), pp.
    33-50 View in ScopusGoogle Scholar [254] Zhao Q., Chen S., Liu Z., Baker T., Zhang
    Y. Blockchain-based privacy-preserving remote data integrity checking scheme for
    IoT information systems Inf. Process. Manage., 57 (6) (2020), Article 102355 View
    PDFView articleView in ScopusGoogle Scholar [255] Rahman A., Nasir M.K., Rahman
    Z., Mosavi A., Shahab S., Minaei-Bidgoli B. Distblockbuilding: A distributed blockchain-based
    sdn-iot network for smart building management IEEE Access, 8 (2020), pp. 140008-140018
    CrossRefView in ScopusGoogle Scholar [256] Al Omar A., Rahman M.S., Basu A., Kiyomoto
    S. Medibchain: A blockchain based privacy preserving platform for healthcare data
    International Conference on Security, Privacy and Anonymity in Computation, Communication
    and Storage, Springer (2017), pp. 534-543 CrossRefView in ScopusGoogle Scholar
    [257] Azbeg K., Ouchetto O., Andaloussi S.J., Fetjah L., Sekkaki A. Blockchain
    and IoT for security and privacy: A platform for diabetes self-management 2018
    4th International Conference on Cloud Computing Technologies and Applications
    (Cloudtech), IEEE (2018), pp. 1-5 CrossRefGoogle Scholar [258] Dwivedi A.D., Srivastava
    G., Dhar S., Singh R. A decentralized privacy-preserving healthcare blockchain
    for IoT Sensors, 19 (2) (2019), p. 326 CrossRefView in ScopusGoogle Scholar [259]
    Mohanty S.N., Ramya K., Rani S.S., Gupta D., Shankar K., Lakshmanaprabu S., Khanna
    A. An efficient lightweight integrated blockchain (ELIB) model for IoT security
    and privacy Future Gener. Comput. Syst., 102 (2020), pp. 1027-1037 View PDFView
    articleView in ScopusGoogle Scholar [260] Ouaddah A., Abou Elkalam A., Ouahman
    A.A. Towards a novel privacy-preserving access control model based on blockchain
    technology in IoT Europe and MENA Cooperation Advances in Information and Communication
    Technologies, Springer (2017), pp. 523-533 CrossRefView in ScopusGoogle Scholar
    [261] Qian Y., Jiang Y., Chen J., Zhang Y., Song J., Zhou M., Pustišek M. Towards
    decentralized IoT security enhancement: A blockchain approach Comput. Electr.
    Eng., 72 (2018), pp. 266-273 View PDFView articleView in ScopusGoogle Scholar
    [262] Si H., Sun C., Li Y., Qiao H., Shi L. IoT information sharing security mechanism
    based on blockchain technology Future Gener. Comput. Syst., 101 (2019), pp. 1028-1040
    View PDFView articleView in ScopusGoogle Scholar [263] I. Eyal, A.E. Gencer, E.G.
    Sirer, R. Van Renesse, Bitcoin-ng: A scalable blockchain protocol, in: 13th {
    } Symposium on Networked Systems Design and Implementation ({ } 16), 2016, pp.
    45–59. Google Scholar [264] Hepp T., Sharinghousen M., Ehret P., Schoenhals A.,
    Gipp B. On-chain vs. off-chain storage for supply-and blockchain integration It-Inform.
    Technol, 60 (5–6) (2018), pp. 283-291 CrossRefGoogle Scholar [265] Back A., Corallo
    M., Dashjr L., Friedenbach M., Maxwell G., Miller A., Poelstra A., Timón J., Wuille
    P. Enabling blockchain innovations with pegged sidechains (2014) URL: http://www.opensciencereview.com/papers/123/enablingblockchain-innovations-with-pegged-sidechains
    Google Scholar [266] Lu Q., Xu X. Adaptable blockchain-based systems: A case study
    for product traceability IEEE Software, 34 (6) (2017), pp. 21-27 View in ScopusGoogle
    Scholar [267] Mingxiao D., Xiaofeng M., Zhe Z., Xiangwei W., Qijun C. A review
    on consensus algorithm of blockchain 2017 IEEE International Conference on Systems,
    Man, and Cybernetics, SMC, IEEE (2017), pp. 2567-2572 Google Scholar [268] Alsunaidi
    S.J., Alhaidari F.A. A survey of consensus algorithms for blockchain technology
    2019 International Conference on Computer and Information Sciences, ICCIS, IEEE
    (2019), pp. 1-6 Google Scholar [269] Dev J.A. Bitcoin mining acceleration and
    performance quantification 2014 IEEE 27th Canadian Conference on Electrical and
    Computer Engineering, CCECE, IEEE (2014), pp. 1-6 CrossRefGoogle Scholar [270]
    Golosova J., Romanovs A. The advantages and disadvantages of the blockchain technology
    2018 IEEE 6th Workshop on Advances in Information, Electronic and Electrical Engineering,
    AIEEE, IEEE (2018), pp. 1-6 Google Scholar [271] Digiconomist J. Bitcoin energy
    consumption index (2021) URL https://digiconomist.net/bitcoin-energy-consumption,
    Accessed on 24.05.2021 Google Scholar [272] El Bakoury H., Chaudhry M.A.R., Cerroni
    W., He H., Barbir A. Standards for major internet disruptors: Blockchain, intents,
    and related paradigms IEEE Commun. Stand. Mag., 2 (3) (2018), pp. 14-15 View in
    ScopusGoogle Scholar [273] Gramoli V., Staples M. Blockchain standard: Can we
    reach consensus? IEEE Commun. Stand. Mag., 2 (3) (2018), pp. 16-21 CrossRefView
    in ScopusGoogle Scholar [274] König L., Korobeinikova Y., Tjoa S., Kieseberg P.
    Comparing blockchain standards and recommendations Future Internet, 12 (12) (2020),
    p. 222 CrossRefGoogle Scholar [275] Al Nuaimi E., Al Neyadi H., Mohamed N., Al-Jaroodi
    J. Applications of big data to smart cities J. Internet Services and Appl, 6 (1)
    (2015), pp. 1-15 View in ScopusGoogle Scholar Cited by (23) TBDD: A new trust-based,
    DRL-driven framework for blockchain sharding in IoT 2024, Computer Networks Show
    abstract Machine learning techniques for IoT security: Current research and future
    vision with generative AI and large language models 2024, Internet of Things and
    Cyber-Physical Systems Show abstract Unlocking QoS Potential: Integrating IoT
    services and Monte Carlo Control for heterogeneous IoT device management in gateways
    2024, Computer Networks Show abstract An Optimized Intelligent Computational Security
    Model for Interconnected Blockchain-IoT System &amp; Cities 2023, Ad Hoc Networks
    Show abstract A low-cost blockchain node deployment algorithm for the internet
    of things 2024, Peer-to-Peer Networking and Applications Enhancing Industrial
    IoT Network Security through Blockchain Integration 2024, Electronics (Switzerland)
    View all citing articles on Scopus Shikha Mathur received her B.Tech. degree in
    2013 and M.Tech. degree in 2016 in computer science and engineering (First class
    honors) from the Rajasthan Technical University, Kota. She is currently pursuing
    a Ph.D. degree from Manipal University Jaipur, Jaipur, India. She has authored
    over 10 publications. Shikha has over three years of experience with esteemed
    organizations of Rajasthan, in academics, project progress documentation, and
    graduate student co-supervision/mentoring, skills. Shikha’s research interests
    are cryptography and blockchain/DLT. Anshuman Kalla (Senior Member IEEE) is working
    as Professor at the Department of Computer Engineering, CGPIT, Uka Tarsadia University
    (UTU), India. Dr. Kalla has more than twelve years of teaching and research experience.
    He has worked as a Postdoctoral Visiting Researcher at Center for Wireless Communications
    (CWC), University of Oulu, Finland. He graduated as an Engineer from Govt. Engineering
    College Bikaner in 2004. He did Master of Science in Telecommunications and Wireless
    Networking from ISEP, Paris, France in 2008 and another Master from University
    of Nice Sophia Antipolis, France in 2011. He obtained a Ph.D. degree in 2017.
    Dr. Kalla was recipient of Master’s scholarships for pursuing both the Master
    programs. He has published papers in reputed international journals such as Elsevier
    (JII, IPM, JNCA, COMNET, ICT Express), IEEE Consumer Electronics Magazine, IEEE
    OJ-COMS, IEEE Computer, and IEEE EMR. His area of interests are Blockchain, 5G,
    6G, IoT, Information Centric Networking, Software Defined Networking, Next Generation
    Networks. For more info: https://sites.google.com/site/kallanshuman Gürkan Gür
    (Senior Member, IEEE) is a senior lecturer at Zurich University of Applied Sciences
    (ZHAW) – Institute of Applied Information Technology (InIT) in Winterthur, Switzerland.
    He received his B.S. degree in electrical engineering in 2001 and a Ph.D. degree
    in computer engineering in 2013 from Bogazici University in Istanbul, Turkey.
    His research interests include Future Internet, 5G, and Beyond networks, information
    security, and information-centric networking. He has two patents (one in the US,
    one in TR) and published more than 80 academic works. He is a senior member of
    IEEE and a member of ACM. Manoj Kumar Bohra (Senior Member, IEEE) is currently
    Professor at Manipal University Jaipur, India. Dr. Manoj received bachelor’s Degree
    in Computer Science and Engg. (CSE) from MBM Engg. College, Jodhpur, India in
    2003 and later the master’s degree and Ph.D. in CSE from MNIT Jaipur, India in
    2011 and 2017 respectively. He is having 15+ years’ experience in academia and
    research. His research work is in use of Machine Learning algorithms in Health
    Care IoT, Security, Blockchain Technology and Networks-on-Chip (NoC). Madhusanka
    Liyanage (Senior Member, IEEE) received his B.Sc. degree (First Class Honours)
    in electronics and telecommunication engineering from the University of Moratuwa,
    Moratuwa, Sri Lanka, in 2009, the M.Eng. degree from the Asian Institute of Technology,
    Bangkok, Thailand, in 2011, the M.Sc. degree from the University of Nice Sophia
    Antipolis, Nice, France, in 2011, and the Doctor of Technology degree in communication
    engineering from the University of Oulu, Oulu, Finland, in 2016. From 2011 to
    2012, he worked as a Research Scientist at the I3S Laboratory and Inria, Sophia
    Antipolis, France. He is currently an assistant professor/Ad Astra Fellow at the
    School of Computer Science, University College Dublin, Ireland. He is also acting
    as an adjunct Professor at the Center for Wireless Communications, University
    of Oulu, Finland. He was also a recipient of the prestigious Marie Skłodowska-Curie
    Actions Individual Fellowship during 2018-2020. During 2015-2018, he has been
    a Visiting Research Fellow at the CSIRO, Australia, the Infolabs21, Lancaster
    University, U.K., Computer Science and Engineering, The University of New South
    Wales, Australia, School of IT, University of Sydney, Australia, LIP6, Sorbonne
    University, France and Computer Science and Engineering, The University of Oxford,
    U.K. He is also a senior member of IEEE. In 2020, he has received the ”2020 IEEE
    ComSoc Outstanding Young Researcher” award by IEEE ComSoc EMEA. Dr. Liyanage’s
    research interests are 5G/6G, SDN, IoT, Blockchain, MEC, mobile, and virtual network
    security. More info: www.madhusanka.com View Abstract © 2023 Elsevier B.V. All
    rights reserved. Recommended articles Allocating edge service resources to the
    up-offloaded vehicle tasks in ICV environment Computer Networks, Volume 227, 2023,
    Article 109715 Hui Guo, …, Shu-long Wang View PDF Introduction to the special
    issue on machine learning and artificial intelligence for the internet of things,
    5G, and beyond Computer Networks, Volume 227, 2023, Article 109722 View PDF Blockchain-based
    IoT security solutions Distributed Computing to Blockchain, 2023, pp. 327-339
    Sandeep Srivastava, …, Deepak Singh Show 3 more articles Article Metrics Citations
    Citation Indexes: 13 Captures Readers: 80 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computer Networks
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Survey on Role of Blockchain for IoT: Applications and Technical Aspects'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Adhikari N.
  - Ramkumar M.
  citation_count: '7'
  description: 'During the recent decade, two variants of evolving computing networks
    have augmented the Internet: (i) The Internet of Things (IoT) and (ii) Blockchain
    Network(s) (BCNs). The IoT is a network of heterogeneous digital devices embedded
    with sensors and software for various automation and monitoring purposes. A Blockchain
    Network is a broadcast network of computing nodes provisioned for validating digital
    transactions and recording the “well-formed” transactions in a unique data storage
    called a blockchain ledger. The power of a blockchain network is that (ideally)
    every node maintains its own copy of the ledger and takes part in validating the
    transactions. Integrating IoT and BCNs brings promising applications in many areas,
    including education, health, finance, agriculture, industry, and the environment.
    However, the complex, dynamic and heterogeneous computing and communication needs
    of IoT technologies, optionally integrated by blockchain technologies (if mandated),
    draw several challenges on scaling, interoperability, and security goals. In recent
    years, numerous models integrating IoT with blockchain networks have been proposed,
    tested, and deployed for businesses. Numerous studies are underway to uncover
    the applications of IoT and Blockchain technology. However, a close look reveals
    that very few applications successfully cater to the security needs of an enterprise.
    Needless to say, it makes less sense to integrate blockchain technology with an
    existing IoT that can serve the security need of an enterprise. In this article,
    we investigate several frameworks for IoT operations, the applicability of integrating
    them with blockchain technology, and due security considerations that the security
    personnel must make during the deployment and operations of IoT and BCN. Furthermore,
    we discuss the underlying security concerns and recommendations for blockchain-integrated
    IoT networks.'
  doi: 10.3390/network3010006
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Network All Article Types Advanced   Journals
    Network Volume 3 Issue 1 10.3390/network3010006 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editors Michele
    Mastroianni Francesco Palmieri Subscribe SciFeed Recommended Articles Related
    Info Link More by Authors Links Article Views 3756 Citations 7 Table of Contents
    Abstract Introduction Architecture of IoT Applications and Categories of IoTs
    Blockchain Technology Materials and Methods Security Assurances and IoT Threat
    Model IoT and Blockchain Integration Challenges of IoT, Blockchain and the Integration
    Meeting the IoT-BCN Challenges: Tools, Techniques and Strategies Discussion and
    Conclusions Author Contributions Funding Acknowledgments Conflicts of Interest
    Abbreviations References share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessArticle IoT and Blockchain Integration: Applications,
    Opportunities, and Challenges by Naresh Adhikari 1,* and Mahalingam Ramkumar 2
    1 Department of Computer Science, Slippery Rock University, Slippery Rock, PA
    16057, USA 2 Computer Science & Engineering, Mississippi State University, Starkville,
    MS 39762, USA * Author to whom correspondence should be addressed. Network 2023,
    3(1), 115-141; https://doi.org/10.3390/network3010006 Submission received: 7 August
    2022 / Revised: 13 January 2023 / Accepted: 19 January 2023 / Published: 24 January
    2023 (This article belongs to the Special Issue Blockchain and Machine Learning
    for IoT: Security and Privacy Challenges) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract During the recent decade, two variants of evolving
    computing networks have augmented the Internet: (i) The Internet of Things (IoT)
    and (ii) Blockchain Network(s) (BCNs). The IoT is a network of heterogeneous digital
    devices embedded with sensors and software for various automation and monitoring
    purposes. A Blockchain Network is a broadcast network of computing nodes provisioned
    for validating digital transactions and recording the “well-formed” transactions
    in a unique data storage called a blockchain ledger. The power of a blockchain
    network is that (ideally) every node maintains its own copy of the ledger and
    takes part in validating the transactions. Integrating IoT and BCNs brings promising
    applications in many areas, including education, health, finance, agriculture,
    industry, and the environment. However, the complex, dynamic and heterogeneous
    computing and communication needs of IoT technologies, optionally integrated by
    blockchain technologies (if mandated), draw several challenges on scaling, interoperability,
    and security goals. In recent years, numerous models integrating IoT with blockchain
    networks have been proposed, tested, and deployed for businesses. Numerous studies
    are underway to uncover the applications of IoT and Blockchain technology. However,
    a close look reveals that very few applications successfully cater to the security
    needs of an enterprise. Needless to say, it makes less sense to integrate blockchain
    technology with an existing IoT that can serve the security need of an enterprise.
    In this article, we investigate several frameworks for IoT operations, the applicability
    of integrating them with blockchain technology, and due security considerations
    that the security personnel must make during the deployment and operations of
    IoT and BCN. Furthermore, we discuss the underlying security concerns and recommendations
    for blockchain-integrated IoT networks. Keywords: Internet of Thing(s); blockchain
    network; blockchain; Cybersecurity; privacy; integrity; smart city; smart home;
    IoT and blockchain 1. Introduction With the advent of the world wide web (WWW)
    by Tim Berners-Lee in 1989, the Internet morphed into an integral part of most
    life affairs, including education, communication, and business worldwide. Technologies
    such as a webcam—a small device to capture pictures—connected to the Internet
    have been evolving. The expansion of the Internet also gave way to new computing
    paradigms, such as the Internet of Things (IoT) and cloud computing. These two
    technologies have revolutionized the personal computing that began in the late
    1970s (https://www.britannica.com/technology/personal-computer (accessed on 14
    June 2022)). The Trojan Room coffee pot–the first webcam connected to the Internet
    – can be considered an earlier instance of the IoT. Today, smartwatches and hearing
    aids, among others, are popular IoT technologies. Similar technologies such as
    radio-frequency identification (RFID), and embedded electronic measuring devices
    such as thermostats, pressure gauges, glucose sensors, electrocardiography (EKG),
    electroencephalography (EEG), and sonar sensors, among others, saw their compelling
    applications when connected to the Internet. The actual term “internet of Things”,
    however, was coined in 1999 by Kevin Ashthon during his work at Procter & Gamble
    (https://bit.ly/2K5hUgH (accessed on 25 July 2022)). The term eventually captured
    widespread attention in the following decades. IoT gained momentum in real-time
    sensing, effective information exchange, reduced cost and energy, and improved
    work efficiency/productivity. In 2008, the International Business Machines Corporation
    (IBM) introduced the concept of a “Smart Planet”. It intends to employ massive
    IoTs to harvest IoT’s benefits [1]. A similar concept of “smart city” is about
    the use of IoT to automate operations (for example, sensing, automating, and monitoring)
    around public facilities such as buildings, public transit systems (including
    buses, subways, light rail, commuter rail, trolleys, and ferries), streets installations
    (lamps, traffic lights, notice boards, billboards), hospitals, schools, public
    offices, among others inside the city premises [2]. An integral part of a “smart
    city” is the “smart home”, which is about controlling and monitoring home appliances
    for audio, video, lighting, cooking, cooling, heating, surveillance, freezing,
    and power, among others [1] through the Internet applications. The idea of integrating
    IoT has been expanding to the areas of self-driving technologies (SDTs). Google,
    for instance, ventured into developing self-driving technology (SDT) at the Google
    X lab in 2009. In 2020, Alibaba-funded start-up—AutoX—launched fully driverless
    RoboTaxi in Shanghai, China (https://bbc.in/3iVFCmc (accessed on 14 June 2022)).
    Researchers are striving to enhance the safety and effectiveness of driverless
    technologies to operate in complex, dynamic environments. During the recent decade,
    IoT has been increasingly adopted in personal and public health [2,3], home [4],
    agriculture and forestry [5,6,7], climate and meteorological studies [8], among
    others. In Section 3, we will briefly discuss IoT applications grouped into seven
    different categories of IoT systems. In the following section, let us briefly
    discuss the motivation and contribution of this article. Motivation and Contribution
    According to IoT Analytics (https://bit.ly/3XPS99p (accessed on 30 December 2022)),
    the number of IoT devices grew by 9% to reach 12.3 B globally in 2021. The COVID-19
    pandemic catalyzed IoT adoption in the workplace, education, and public services.
    It also reported that the predicted number of connected IoT devices will reach
    27B by 2025. By 2025, IoT will produce (estimated) 79.4 zettabytes (ZB) (~79 ×
    10 12 GB) of data. By the same year, the economic impact of IoT will reach (estimated)
    11 trillion dollars (https://bit.ly/3iXjRCy (accessed on 14 June 2022)). In the
    meantime, 58% of cyberattacks occurred over IoT devices. Those attacks mainly
    were DDoS attacks and pilfering of confidential data. More than 1.5 B security
    breaches occurred over IoT in 2021 alone. While 64% global organizations use one
    or more IoT solutions, 43% do not protect them adequately (https://bit.ly/3D4vQoP
    (accessed on 14 May 2022)). The extent of growth and adoption of IoT is astounding.
    According to Cybersecurity Ventures, global cybercrime expected costs to grow
    by 15 percent per year over the next five years, reaching USD 10.5 trillion annually
    by 2025, up from $3 trillion in 2015 (https://bit.ly/3iT3sPz (accessed on 14 June
    2022)). According to IBM data breach report 2021 (https://ibm.co/3XMOrxv (accessed
    on 15 June 2022)), the average total cost of a data breach increased by nearly
    10% ($3.86 M in 2020, $4.24 M in 2021) year over year, the most significant single-year
    cost increase in the last seven years. However, due to a deficiency of security
    knowledge applicable during deploying the IoT, harvesting data from IoT, and consuming
    the IoT data or services, the fate of the life and properties are at higher stake
    than ever [9]. On the other hand, blockchain technology [10,11,12], yet another
    popular technology that operates on top of the Internet, has been adopted as a
    revolutionary technology for “trustless“ transaction verification and process
    automation. Popular blockchain frameworks such as Bitcoin [13] and Ethereum [14]
    have been increasingly utilized for payment for online transactions and transferring
    money between user accounts without the need for participating banks or credit
    card companies. It also tracks food, prescription drugs, and airline engine parts.
    As per Gartner (https://bit.ly/3HlZacF (accessed on 25 July 2022)), the value
    of blockchain would be 3.1 trillion in business by 2030. In light of evolving
    technologies such as IoT and blockchain, this paper draws together the notion
    of IoT ecosystems and their existing and potential integration with blockchain
    technologies. This paper will discuss the overall desired security assurances
    in explaining the security challenges of two emerging technologies. Specifically,
    this paper: precisely defines and exemplifies IoT, blockchain technology-related,
    and relevant security terminologies. examines the importance of IoT and Blockchain
    security as evolving technologies. explains the challenges of IoT and Blockchain
    integration. The rest of the paper is structured as follows: In Section 2, we
    discuss the general architecture of an IoT network. Section 3 discusses the major
    applications of IoT. Section 4 exemplifies the types and applications of blockchain
    networks. Section 5 outlines the research methodologies. Section 6 explains the
    security assurances applicable to the IoT. The same section discusses the security
    threats of IoT. In Section 7, we explore the integration of IoT and blockchain
    technology. Section 8 discusses the significant challenges of IoT and blockchain
    integration. Section 9 discusses the ways we can address the challenges of IoT
    and blockchain integration. We conclude the paper with a conclusion and an outlook
    in Section 10. 2. Architecture of IoT Several previous works discuss the architecture
    of IoT systems. Bayılmış et al. [15] discuss a six-layer IoT protocol stack. An
    article by Lao et al. [16] explains three- and five-layered architecture. Ray
    [17] examines IoT architectures for domains such as health care, smart society,
    and security. There are other efforts from commercial and standardization bodies
    to define and describe IoT architectures. For instance, the Industrial Internet
    Reference Architecture (IIRA) was jointly proposed by AT&T, Cisco, General Electric,
    IBM, and Intel [9]. The IoT-A FP7 project produced the Internet of Things Architecture(IoT-A)
    proposed the Reference Architecture (IIRA) (2017). The International Standardization
    Organization (ISO) proposed the ISO Internet of Things Reference Architecture
    (IoT RA—ISO/IEC WD 30141) in 2018. The IEEE P2413 WG proposed the IEEE Standard
    for an Architectural Framework for the Internet of Things [18]. This work, however,
    outlines simple four-layered IoT network architecture as depicted in Figure 1
    (Left). Figure 1. (Left) The general architecture of an IoT system consists of
    four major layers. The user commands and data from sensors become exchanged through
    the gateway layer. (Right) Popular instances of devices, protocols, or services
    in each layer of an IoT network. Discussion of the protocols and services is out
    of the scope of this article. 2.1. Sensor Layer The sensor layer is composed of
    sensors and/or actuators. Sensors (or actuators) are low-powered, resource-constrained
    sensing and acting devices. Figure 2 shows the internal components of a sensor.
    Each sensor is uniquely identified by its ID or IEEE/MAC addresses. They may be
    connected with high-powered devices known as a relay or coordinate devices. A
    network of sensor devices forms a sensor network that may utilize low-power sensor
    network protocols such as radio-frequency identification (RFID), near field communication
    (NFC), ZigBee, 802.14, ANT, Bluetooth, among others [16,17]. Figure 2. Major internal
    components of a sensor or an actuator. The component ADC stands for analog-to-digital
    converter, which converts an analog signal to a digital signal and vice-versa.
    TxRx stands for transceiver, which transmits and receives data from processor
    storage. Sensor layers may contain one or more special devices called routers
    in the gateway layer. Routers help extend network coverage, avoid network obstacles,
    and provide routes in case of network congestion or device failure. They may be
    connected to the network coordinator and other routers. However, in a distributed
    sensor network, there may be more than one network coordinator responsible for
    adding child nodes and authenticating them. The topology of a sensor network in
    sensor layers may be (i) star, (ii) mesh, and (iii) hybrid network [19]. 2.2.
    Gateway Layer In a typical IoT ecosystem, the gateway layer consists of the particular
    devices responsible for registering sensor nodes, authenticating nodes, broadcasting
    commands, and receiving, and aggregating data from the sensors [20,21]. These
    devices may relay data to cloud storage engines. In a Zigbee protocol [18], for
    example, specific nodes known as ZigBee coordinators function in the gateway layer.
    Because the devices in this layer operate to bridge the external sink layer with
    the sensor layer, this layer is also called the bridge layer. In this layer, the
    devices such as embedded operating systems (OS) and real-time OS, among others,
    operate using diverse communication standards such as Global System for Mobile
    Communications (GSM/2G), Universal Mobile Telecommunications System (UMTS/3G),
    RF, LoRA, ANT, ISM, WiMAX, WiFi, Sigfox, Ethernet, among others [17]. The gateway
    devices may connect to the Internet using network-layer protocols such as IPV4
    or IPV6. 2.3. IoT Sink Layer The sink layer provides services such as storing
    data, encryption, decryption, data format standardization, data processing, and
    service management to various applications (clients) specific to the business
    and industry [18]. The storage devices/services may be located locally close to
    the gateway layer or in the cloud containing cloud storage engines (https://bit.ly/3D5eqbC
    (accessed on 30 December 2022)) (for example, Amazon AWS, Google, Dropbox, Alibaba,
    Tencent, etc.) and data exchange services. Some popular onsite storage engines
    for IoT data are InfluxDB, CreateDB, Riak TS, MongoDB, RethinkDB, and Cassandra,
    among other (https://www.intuz.com/guide-on-top-iot-databases (accessed on 11
    July 2022)). 2.4. IoT Application, Visualization, Command, and Control Layer This
    layer of an IoT is an abstraction of services required for monitoring IoT devices,
    visualization, and analysis of IoT data, as well as command and control of IoT
    devices in the Sensor layer, among others. It may provide Application Programming
    Interfaces (APIs) to retrieve IoT data and send commands to IoT devices for business
    operations. IoT application layer protocols (https://bit.ly/3J5zGSh (accessed
    on 10 July 2022)) depend on several factors, such as data latency, reliability,
    and bandwidth, among others. Some of the popular application layer protocols specific
    to IoT systems are Message Queue Telemetry Transport (MQTT), Extensible Message
    and Presence Protocol (XMPP), Advanced Message Queuing Protocol (AMQP), Representational
    State Transfer (REST), Constrained Application Protocol (CoAP), Simple or Streaming
    Text Oriented Message Protocol (STOMP), Simple Media Control Protocol (SMCP),
    Simple Object Access Protocol (SOAP), among others [15,18]. 3. Applications and
    Categories of IoTs IoT has been utilized in various areas, from home to health,
    education, and agriculture industries. As an introduction, we highlighted the
    coarse evolutionary events of IoTs and different use cases. However, in this section,
    we instantiate major applications of IoTs under seven categories. (1) Climate
    and Environmental (Aquatic/Terrestrial) IoT: Environmental IoTs are composed of
    sensors employed for different purposes, such as detecting pathogens, chemicals,
    gas, temperature, and(or) other variables in an environment, such as land or water
    bodies [21]. For instance, regulatory bodies such as Environment Protection Agency
    (EPA) often employ IoT to monitor the risk factors that affect human and environmental
    health. Similarly, industries based on land and water resources have benefited
    from the IoTs for various business needs. For instance, climate and environmental
    IoTs have been used for real-time monitoring and forecasting of weather, and climatic
    conditions in an area [8]. (2) Forest and Agricultural IoT: Applying IoTs has
    proved profitable in forestry, and crop/animal farming [5,22,23]. Chiefly, IoT
    systems have been used for managing and monitoring several aspects of farming,
    such as irrigation, pest control, weed control, and crop density monitoring, among
    others. (3) Industrial IoT: The use of IoTs has been profitable in industries
    of varying kinds, such as hospitals [2], manufacturing industries, and retail
    and whole-shale markets, among others. Everyday use cases of an industrial IoT
    include remote condition monitoring, digital work instructions, predictive mainteisce,
    and disaster management. Using industrial IoTs brings several benefits, such as
    maximizing revenue, reducing time to market, and lowering operational costs. (4)
    Smart Home IoT An IoT find(s) is one of its most popular applications inside a
    home setting. Automating lighting, sound, and kitchen work such as cooking and
    washing are automated by using different connected devices. Controlling and maintaining
    home climate can also be performed effectively using sensors such as thermostats
    [1,4,21]. (5) Wearable IoT: Wearable IoT comprises wearable technologies such
    as Fitbit, Holter monitor, personal alarm devices, smartwatches, etc. The sensing
    devices have become so small that they have been integrated into normal clothing
    items such as bras or vests, caps, shoes, and travel/school backpacks [21,24,25].
    Wearable IoT has helped monitor personal health and supports remote health services
    [3]. (6) Smart City IoT: Smart city IoTs are an extended version of the smart
    home IoT [1]. It comprises many sensor technologies to sense an urban environment,
    streets, highways, traffic, and vehicle mobility. Smart retail shopping, intelligent
    health services, and smart parking are also an integral part of a smart city (https://en.wikipedia.org/wiki/Smart_city
    (accessed on 22 July 2022)) [4]. (7) Vehicular IoT: Vehicular IoT can be considered
    one of the components of a smart city IoT. Sensors that collect data from terrestrial
    and aerial vehicular devices constitute vehicular IoT. The data may be helpful
    to route the vehicular devices efficiently or may be helpful to collect environmental
    data such as temperature and humidity. For instance, United Parcel Service (UPS),
    a shipping company, deploys sensors in its transport vehicles to collect data
    such as mileage, speed, fuel cost, etc., for big data analysis [26,27]. Unmanned
    aerial vehicles (UAVs) also use different sensor data to optimize their route
    and operations to support “collaborative autonomous driving, and advanced transportation
    [28]”. 4. Blockchain Technology It is imperative to comprehend the components
    of the technology to understand the value that blockchain technology brings to
    the realm of IoT ecosystems. The major components of blockchain technology are
    (i) blockchain, (ii) blockchain networks, and (iii) distributed consensus mechanism
    [16]. In this section, we explain the working principle of blockchain technology
    and the types and features of blockchain networks. 4.1. Overview of Blockchain
    Network As the name suggests, a blockchain network (BCN) [29] is a broad-cast
    network of computing nodes that maintain a copy of a synchronized storage known
    as a blockchain ledger. The nodes in a blockchain network operate to persistently
    maintain data consistency through resistance to retrospective alteration, operation
    transparency through network consensus, and user privacy through anonymity, among
    others [16]. In previous works such as [20,30,31], a blockchain is described as
    an “immutable” ledger”–a series of data/record blocks. Every new block in a blockchain
    contains a cryptographic reference to the previous block, and so on. Figure 3
    shows a simple structure of a block, blockchain, and a blockchain network [30].
    In a blockchain network, every new node in the network is a computing platform
    with storage. Generally, each node in a BCN should maintain its copy of such a
    ledger. A new block, however, is appended to an existing ledger only after executing
    a “well-formed” transaction(s). A transaction (TXN) is a data structure representing
    an atomic operation that involves input values and, upon execution, produces an
    output and changes the state of a system. The term “transaction” is frequently
    misused in the literature on a blockchain network. Technically, a transaction
    is an atomic operation whose successful execution changes the system’s state.
    For example, consider a transaction statement: “Transfer of monetary value x from
    Alice’s wallet 𝑊 𝐴 to Bob’s wallet 𝑊 𝐵 ”. Before the transaction is executed,
    the system state is 𝑆 0 :[ 𝑊 𝐴 = 𝑣 1 , 𝑊 𝐵 = 𝑣 2 ] . After the transaction is
    verified (that is, 𝐵𝐴𝐿𝐴𝑁𝐶𝐸( 𝑊 𝐴 )−𝑥>=0 is true), then the state of the system
    changes to 𝑆 1 :[ 𝑊 𝐴 = 𝑣 1 −𝑥, 𝑊 𝐵 = 𝑣 2 +𝑥] , on the other hand, a query such
    as “Balance( 𝑊 𝐴 )” returns the balance in Alice’s wallet is just similar to seeking
    information from storage. Usually, a query by itself does not change the system’s
    state.and reaches an agreement on the transaction output among the network nodes.
    The mechanism that allows network nodes to reach an agreement on a transaction
    output is a consensus algorithm. Popular blockchains such as Bitcoin and Ethereum
    use the proof of work (PoW) consensus mechanism [13,14,32]. There are several
    other consensus mechanisms, such as Byzantine fault tolerance, proof of stake
    (PoS), proof of capacity (PoC), proof of authority, and proof of importance, among
    others. However, the PoW mechanism is more energy intensive and costly than other
    energy-efficient mechanisms such as PoS and PoC [30]. Figure 3. (Left) Structure
    of a blockchain (ledger) as a sequence of data blocks Block 0, Block 1, and so
    forth. Each block is linked to the previous block through a reference known as
    block hash, which is an output of a cryptographic function of the content of the
    previous block. (Right) A simple blockchain network with three nodes 𝑁 1 , 𝑁 2
    , and 𝑁 3 , each keeping a copy of a blockchain. As a transaction ( 𝑇 𝑗 ) is received
    by a node ( 𝑁 2 ), it is broadcast to other nodes for execution. Contrary to Wang
    et al. [20], blockchain data storage does not prevent forging and tampering with
    the data; it serves as a deterrence against such activity. However, when implementing
    blockchain in a decentralized network environment, one can achieve a higher level
    of data recovery services. 4.2. Types of Blockchain Networks Depending upon who
    can join a network, blockchain networks are of mainly four categories [30]: (i)
    public, (ii) private, (iii) consortium, and (iv) hybrid BCN. In public, open,
    or global blockchain network, any node can join, leave, and perform tasks independently
    following the network protocol. For instance, Bitcoin and Ethereum networks are
    popular public blockchain networks. However, in private BCN, also called permissioned
    BCN, only the permitted nodes can join the network. The network manager or owner
    performs the node authentication and access control operations. The identity of
    permitted nodes is also managed as part of the network operation. Consortium BCN
    is a particular type of private BCN where every participant in the network is
    a member of the same company or organization or a group of collaborating companies
    or organizations. A hybrid BCN combines the feature of both public and private
    BCN. They provide data privacy by allowing only permitted nodes to join the network
    while using the public node’s consensus to validate transactions that do not contain
    private data. Hybrid BCN is suitable for IoT systems such as supply chain management
    for data protection and access control [16]. In general, a blockchain network
    consists of two types of computing nodes, viz., verifier and normal nodes. Verifier
    nodes keep a copy of the complete blockchain structure and validates the transactions.
    These nodes are also known as full nodes. They have higher computing and storage
    power. They contribute to data integrity, execute smart contracts, maintain network
    security, and participate in network consensus mechanisms. They communicate transactions
    and messages using various communication protocols such as Gossip and Kademlia
    [16]. Normal nodes are lighter nodes that do not require high storage and computing
    power. They do not store a copy of the blockchain ledger; however, they obtain
    partial information about the blockchain status from the full nodes. Table 1 summarizes
    key features of blockchain networks. Table 1. Capabilities of a Blockchain Network.
    Hybrid BCN is excluded from this table as it has features from both public and
    private BCN. 4.3. Applications of Blockchain Technology Blockchain technology
    encompasses distributed ledger and a network of computing nodes. The application
    of the technology goes far beyond digital currencies such as Bitcoin and Ethereum.
    In this section, we discuss the chief applications of the technology. Financial
    Transactions and Trusted Digital Payment:In conventional digital payments, intermediaries
    such as banks, finances, and credit card companies act as a trusted party between
    a payee and a payer for any digital transactions [33]. It involves several tasks,
    such as bank balance verification of the payee, transaction validation, and payment
    verification. However, the network automates verification and validation with
    blockchain-based payment systems such as Bitcoin and Ethereum. As its main advantage,
    it reduces intermediaries’ fees and transaction completion time [30]. Process
    Automation: Blockchain networks may also support “smart contracts”. Smart contracts
    are similar to regular business contracts except for the contract rules, terms
    (agreements), and transactions are encoded as a computer program and are executed
    automatically, in real-time, on blockchain network nodes [10]. The blockchain
    miners validate the outputs of the execution. Smart contracts save business operation
    time and cost and guarantee contract compliance. They have a higher potential
    for automating financial payments, financial audits, online transactions, document
    signature and approval, supply-chain operations, and so on [10]. E-governance:
    E-governance is the practice of using information communication technology to
    provide government services, including issuing citizenship certificates, collecting
    taxes, delivering social securities, conducting elections, and crowd-sourcing
    [34,35]. Blockchain technology adds advantages to e-governance by automating most
    of the administrative services. Countries, including Estonia and China, have invested
    in research on the use of blockchain in e-governance to promote efficiency and
    effectiveness in the provision of public services [36,37]. Data Redundancy: One
    of the chief features of a blockchain network is distributed data storage [16].
    Both private and public blockchain networks enforce that the computing nodes securely
    keep a copy of application-related data. Any alteration of data in a store can
    be easily detected and recovered by importing from the network peers. For instance,
    DokChain (https://bit.ly/3QYRws1 (accessed on 13 July 2022)) project uses blockchain
    as a distributed data storage to store and process financial and clinical data.
    Such application enhances data integrity, auditability, and efficiency for healthcare
    and other related transactions and processes. 5. Materials and Methods This paper
    is a culmination of a detailed literature review from research articles and online
    resources relevant to the “Internet of Things”, “blockchain network”, “blockchain,
    and IoT integration”. Other research articles related to the security requirements
    of both technologies were referred to. This section includes the research questions,
    study sources, search criteria, and quality evaluation adopted for this study.
    5.1. Research Questions The proposed study began by identifying the research questions
    (RQs) as listed in Table 2. Table 2. Research questions and their objectives.
    5.2. Data Sources A wide range of study resources is required for a comprehensive
    study such as this. For study materials, we considered peer-reviewed journal databases
    such as IEEEXplore, Association for Computing Machinery (ACM) digital library,
    Google Scholar, ResearchGate, University Library thesis, and dissertation repositories.
    we also considered technical reports, conference proceedings, textbooks, patents,
    online blogs, and news to accumulate updated facts and figures on IoT, Blockchain,
    and their integration. 5.3. Search Criteria Search terminologies considered for
    this study logical combination of the terms listed in Table 3. The terminologies
    were searched against the title or the abstract of the study materials in the
    data sources. While specific date ranges were not considered during the search,
    materials published after 2015 were highly prioritized. To execute the searches,
    researchers applied manual search procedures. Table 3. Database search terminologies.
    5.4. Quality Evaluation We employed two significant questions to filter the search
    outputs to match the research objectives best. Q1: Does this resource refer to
    both the {internet of Things, IoT} and {blockchain network, blockchain}? Q2: Does
    this resource refer to an {challenges, application} of {internet of Things, IoT}
    and/or {blockchain network, blockchain}? Q3: Does this resource’s title, abstract,
    or any portion of body refer to an {application, combination, merging, issues,
    challenges} of {Internet of Things, IoT} and/or {blockchain network, blockchain}?
    Only the affirmative answers to any of the above questions from involved researchers
    would result in considering the resource for the study purpose. 6. Security Assurances
    and IoT Threat Model A simple IoT network consists of sensor devices, a gateway
    device, a data storage engine, and application services. Essential security requirements
    of an IoT network are anonymity, integrity, privacy, authentication, authorization,
    availability, and audit services [20]. This section defines and exemplifies the
    key security terms relevant to IoT and blockchain technology. 6.1. Definitions
    of Security Assurances 6.1.1. Confidentiality Confidentiality (or, privacy) [38]
    of data (or a message) in a storage device (such as hard disk, RAM) or a transmission
    channel (such as Ethernet cable, fiber optics, radio signal) ensures that the
    data [is not exposed/readable]/[remains secret] to illegitimate (unauthorized)
    parties but the authorized owner or a valid recipient of the message. For example,
    if any user, say, Alice, sends a message m targeted only to another user, say,
    Bob, on the other side through a public channel (medium), the confidentiality
    of the message ensures that any intermediate party, such as Eve, cannot read the
    message. For instance, as mandated by law [39], an individual may wish to keep
    his/her personal, professional, or academic matters secret; two people exchanging
    electronic mails (or any digital or analog messages) wish to keep their communication
    secret to both of them. Data privacy [40] has been a crucial requirement in demand
    since the medieval period up until today’s interconnected world. Several encryption
    algorithms such as Advanced Encryption Standards (AES), Data Encryption Standard
    (DES), Blowfish, Rivest-Shamir-Adleman (RSA), and Elliptic Curve Digital Signature
    Algorithm (ECDSA) are utilized to encrypt the data (message) to achieve data or
    communication confidentiality [41,42]. Figure 4 depicts the simple flow of encryption
    and decryption schemes. Encryption is scrambling messages (data) so that illegitimate
    parties cannot read the message. Two major encryption schemes are (i) symmetric
    encryption scheme and (ii) asymmetric encryption scheme. Under symmetric encryption
    schemes, both encryption and decryption operations are performed by a shared secret
    key. Some of the algorithms that follow symmetric encryption schemes are Advanced
    Encryption Standards (AES), Data Encryption Standards (DES), and Blowfish, among
    others [41,42]. Under asymmetric encryption schemes, two different keys are used
    for encryption and decryption. Each entity generates a pair of mathematically
    related public keys and private keys. The sender encrypts a message using the
    recipient’s public key. The recipient with the private key for the public key
    used for encryption can decrypt the message using the private key. This scheme
    is also called public key cryptography. Examples of algorithms based on asymmetric
    encryption schemes are RSA, and ECDSA, among others [41,42]. Figure 4. (a) A symmetric
    encryption scheme uses a single key, K for the encryption of a message, m and
    decryption of the encrypted message (cipher), c. (b) An asymmetric encryption
    scheme uses two different keys, 𝐾 𝑈 and 𝐾 𝑅 , for encryption and decryption. 6.1.2.
    Authentication and Authorization Authentication is identifying legitimate human
    or non-human users of a system or communicating party [41,42]. It is a method
    that allows Bob to verify that he is communicating with Alice and not Eve. The
    method eventually enables Bob to verify that a message originates from Alice,
    not Eve. Authorization is a mechanism by which a subject is provided with defined
    rights or privileges over different system resources such as files, processes,
    devices, etc. For example, system users such as Alice and Bob may have access
    rights such as read, write and execute over a file, while all other users, including
    Eve, may be restricted from all such operations [41]. 6.1.3. Integrity The property
    of message (or data) integrity [38] ensures that a message has not been tampered
    with or altered on its storage site or in the transfer’s transit. The requirement
    of message integrity is essential to a wide array of digital communications, such
    as emails, and instant messaging, among others. For example, if Alice sends a
    message m to Bob, the message integrity ensures that Bob receives a message 𝑚
    ′ such that 𝑚= 𝑚 ′ . In the context of IoT, data integrity ensures that the data
    exchanged between any two devices in an IoT network do not suffer unintentional
    modifications. Alteration of position, navigation, and timing of IoT sensors can
    severely hamper the effectiveness and trustworthiness of IoT systems. 6.1.4. Availability
    The property of availability [38] guarantees that services (e.g., web server,
    email server, data server, telephone, power, network bandwidth, and so on) and
    resources (e.g., data, storage engine, computational engine) are fully available
    when needed or requested by their consumers such as human users, computing nodes,
    processes or other entities. In the context of IoT, the availability property
    ensures that the components of IoT networks, such as sensor nodes, gateway servers,
    and data servers, among others, are available to each other and their users or
    owners. For instance, in an industrial IoT, temperature sensors must be available
    for measuring temperature throughout the operational time. In an agricultural
    IoT, losing equipment such as humidity and pesticide level measuring sensors,
    among others, can highly disrupt the production and supply chain [43]. Another
    issue affecting IoT data availability may arise due to the proprietary lock-in
    effect, where manufacturers or suppliers are forced to use outdated IoT products
    and services and sometimes be denied to export IoT data (https://bit.ly/3WsFfgA
    (accessed on 29 December 2022)). 6.1.5. Physical Security It is related to the
    security assurance of availability. Physical security [18] maintains the physical
    integrity of computing devices, networking devices, and communication channels
    such as cable, twisted pair cable, fiber optics, satellite, and radio (frequency)
    spectrum, among others. Activities such as theft of devices and relocation of
    the device hamper the physical security of the device. Physical security covers
    hardware and software security. In the context of IoT, physical security should
    protect every node in each of the components of the IoT ecosystem. 6.1.6. Anonymity
    Anonymizing is a task of removing explicit identifications, such as name, geo-location,
    address, date of birth, marital status, ethnicity, ZIP (zone improvement plan
    (ZIP) is a number that specifies an individual destination post office or mail
    delivery area.) code, SSNs (Social Security Numbers (SSN) are used to identify
    unique citizens in the USA. This number is used for obtaining credit, opening
    a bank account, claiming government benefits, and private insurance, purchase
    a home or a car, among others.), phone number, email address, IP address, timestamp,
    or any relevant attributes from the data. In the context of digital communication,
    the property of anonymity [44] refers to hiding users’ names or relevant attributes
    such as date of birth, phone numbers, and emails, among others. The property of
    anonymity is related to an individual’s privacy; however, anonymity may be achieved
    by removing the personally identifiable information in a data or a message. Privacy
    can be better preserved by anonymizing the data in transit or storage. For example,
    the message m may be anonymized by removing explicit information about the sender,
    Alice. Data without the details are of very little use to target specific user(s)
    and/or devices. This property prevents unstoppable surveillance of the users or
    computing nodes, and other analyses relevant to the person, things, or places.
    6.1.7. Trustworthiness The security of a system rests on the level of confidence
    one puts in security implementations and their execution. In other words, a system
    is secure as long as one trusts [45] its operations and outputs. For instance,
    we trust the secrecy of encrypted data because we have high confidence that the
    secret key is not exposed and the algorithm is not broken, given that it is publicly
    available for everyone to break. However, the “trust” in a system can be amplified
    by enforcing different strategies. For instance, compare the level of “trust”
    between an airplane with a single turbo engine and the other with two turbo engines.
    Given identical engines, the probability that an airplane with a single engine
    crashes is greater than the probability of double engines. In other words, we
    are improving dependability due to redundant engines. Similar is the case with
    the recently advancing blockchain technology, which is discussed in the following
    section. It is used as an infrastructure to raise trust in an output of a process
    being executed. Such trust stem from the fact that the process outputs are verifiable
    (in terms of correctness and completeness) by all of the participating computing
    nodes [29,45]. The output is stored in storage whose integrity can be globally
    verified and backed up because multiple clones exist in physically separated locations.
    The other property that blockchain technology brings is fault tolerance, data
    security, and disaster recovery. 6.2. IoT Threat Model With a threat modeling
    of an IoT ecosystem, we identify the sensitive assets, threats to those assets,
    and vulnerabilities that make the threats a necessary concern. Other aims are
    to outline security requirements, recognize security threats and vulnerabilities,
    quantify threat and vulnerability levels, prioritize threats and apply mitigation
    measures to protect the IoT-relevant assets [46]. We have several threat models
    [46], such as STRIDE, PASTA (https://threat-modeling.com/pasta-threat-modeling/
    (accessed on 31 December 2022)), CVSS (https://www.first.org/cvss/ (accessed on
    31 December 2022)), attack tree, and security cards. Each of these methodologies
    provides different ways to access the threats faced by underlying information
    systems. However, because IoT technologies are evolving, the IoT may involve devices
    with weak device manufacturing standards, and an attack surface could be huge
    because of the vast network size. In this section, we discuss a loosely coupled
    four-tier threat model for an IoT ecosystem as depicted in Figure 5, where an
    external adversary may attack devices or services on four different layers. For
    example, threats may occur to objects in the sensor layer. Such threats may be
    the theft of the sensor objects, spoofing the sensor data, and jamming the link
    between two sensor nodes, among others (https://bit.ly/3yYXm44 (accessed on 14
    June 2022)). Figure 5. The threat model shows the components of the general IoT
    architecture and their interactions. Overall, the components and channels in an
    IoT form an attack surface. Three types of potential threat actors, viz., (i)
    external adversary, (ii) internal compromised (malicious) gateway device 𝑔 𝑛 in
    the gateway layer, and (iii) regular malicious (internal) user. 6.2.1. Threat
    and Attacks on Confidentiality Sensitive data, including encryption keys, decision
    support data, and users’ private information stored in an IoT node, may be stolen.
    For instance, in June 2019, Bitdefender (Ring Video Doorbell Pro Under the Scope,
    URL:https://bit.ly/3XuikD2 (accessed on 21 June 2022)) discovered a vulnerability
    in Amazon’s Ring Video Doorbell Pro IoT camera device that permitted an attacker
    to physically near the device to intercept the owner’s WiFi network credentials
    and possibly mount a more powerful attack against the home network. Fox (https://bit.ly/3B5bWK6
    (accessed on 22 June 2022)) reported that a person’s smart home thermostat was
    hacked over WiFi to compromise the reading of the thermostat and played disturbing
    music from the video system. An adversary may obtain confidential sensor data
    causing attacks such as phishing attacks. Malicious scripts, malicious viruses/worms,
    Trojan horses, and malware can be exploited to steal information from IoT devices
    (https://bit.ly/3zpyBzq (accessed on 21 June 2022)) [27]. Attackers can utilize
    smart lamps, smart coffee machines, and smart speakers, among others, to steal
    personal information [47]. Over-the-air communication spoofing may result in the
    exposure of critical information shared between the nodes (https://bit.ly/3iOhwde
    (accessed on 1 June 2022)) [43]. Apart from directed malware attacks, the decision
    support applications could be implemented to steal sensitive data [43]. In industrial
    IoT and precision agriculture, the leak of confidential information from within
    an organization could cause massive damage to the supply and trust of the industries.
    External entities such as malicious actors, unethical domestic competitors, and
    foreign state and non-state adversaries could access confidential and valuable
    business-related, real-time IoT data. Such access could adversely impact production,
    business negotiations, and trade competency, among others [43]. An example of
    such an attack is `The Night Dragon’ [23], where an attacker targeted and harvested
    a large amount of sensitive competitive proprietary operations and project-financing
    information from multiple oil and petrochemical companies in 2011. 6.2.2. Threat
    and Attacks on Availability Several factors adversely affect the availability
    of an IoT network and relevant services. Loss or theft of nodes such as sensors
    and repeaters; jamming or interference or blocking or loss of the radio signals;
    disruption of the supply chain of network equipment; DDoS on the gateway devices
    or application servers; among others, could limit the effectiveness of an IoT
    network [43]. In 2015, a false data injection (FDI) cyber attack on a power grid
    in Ukraine resulted in the loss of service for over 22,500 customers [48]. The
    Mirai botnet [49] (2016) is an instance of a DoS attack where a malware named
    “Mirai” enslaved IoT devices such as cameras, routers, and digital video recorders
    to cause large-scale attacks to shut down websites and networks. Other variants
    of Mirai malware, such as Okiru, the Satori, the Masuta, and the PureMasuta, still
    live on the internet to exploit IoT devices to cause further cyber-attacks as
    anonymous agents (https://bit.ly/3GVt1HH (accessed on 21 June 2022)). An infected
    IoT device that can launch further attacks is called a bot. An IoT network of
    bots, also called a botnet of things, could deliver many HTTPS requests per unit
    of time, which can throttle a web server [23]. Attacks such as node capture attacks,
    malicious code injection, false data injection, replay (freshness) attacks, cryptanalysis,
    and side-channel attacks, sleep deprivation attacks, spoofing attacks, sinkhole
    attacks, wormhole attacks, man-in-the-middle, eavesdropping, and interference
    could adversely affect the availability of an IoT network [27]. 6.2.3. Threat
    and Attacks on Integrity Events such as theft of a node, unauthorized control
    of a node, MIM attack, insertion of a rouge sensor node, unapproved modification
    of input and output data, etc., may alter the integrity of data and operation
    of nodes in an IoT. A vital node on the sensor layer be physically stolen from
    the current network and may be accessed and controlled on a different network.
    Unauthorized node control may result from the theft of a node or an attack such
    as man-in-the-middle (MIM) that causes the communication between nodes to replay
    [12,40]. Due to an insecure channel, a MIM attack can mimic the communication
    and ultimately compromise the integrity of the message being exchanged between
    two nodes. Inserting a rouge sensor in an IoT can produce faulty data values that
    can negatively impact decision-making in different domains utilizing IoT [43].
    Unapproved input and output data modification relevant to precision agriculture
    IoT, smart home, and industrial IoT, among others, can cause massive economic,
    environmental, and trade disruptions. Artificial intelligence and machine learning
    techniques have been adopted for the advanced operation of agriculture, industry,
    and home systems. These techniques feed on the massive data collected by an IoT.
    However, there is a higher risk of using insufficiently modeled algorithms, and
    biased predictive models for decision supports [50]. The compromised models can
    produce unintended and adverse effects in the current and future operations of
    the IoT systems [43,51]. 6.2.4. Threat and Attacks on Authentication and Authorization
    Password cracking is a typical attack that compromises authentic access to a network
    or a device such as IoT sensors. Software packages such as aircrack-ng (a suite
    of packet monitoring and injection tools available in Kali Linux oS) could be
    utilized to monitor and capture WiFi-protected access (WPA) handshake packets
    to cause dictionary attack further to crack a WiFi password. WiFi attack occurs
    when a malicious user tries to take control of the network by intercepting the
    data packets over WiFi or ZigBee channels [12]. It is a type of MIM attack that
    compromises the integrity of the network. An example of such an attack is SkyJet
    [12]. Sontowski et al. [23] explain that other common attacks that compromise
    a WiFi network are evil twin access points, key reinstallation attacks, Address
    Resoulution Protocl (ARP) spoofing attacks, and DNS spoofing. An untrusted sensor
    node in a network may request sensitive data from the coordinator, and vice versa.
    Network nodes may enforce access control lists to manage the access of resources
    by participating nodes in a network. 7. IoT and Blockchain Integration The IoT
    has proven to automate domestic, industrial, and business monitoring and functioning.
    Nevertheless, it relies on centralized cloud computing for data storage, processing,
    and network command and control. With the centralized model, the integrity of
    the data and the process output of cloud computing are always in question because
    IoT owners have to rely on a third party (such as cloud vendors) for the integrity
    of the data and the process outputs [30]. On the other hand, the basic features
    of a blockchain network include transparency, verifiability, data redundancy,
    and trustworthy [52]. These principal features can fill the gaps in providing
    the security-related guarantees required by an IoT network and related applications.
    Thus integration of an IoT and a blockchain network can serve a primary need for
    colossal storage, business/industry automation, fault-tolerance, and data/process
    integrity. Devices in an IoT network can be designed to play different roles in
    a blockchain network. Edge devices such as routers, routing switches, integrated
    access devices, multiplexers, and gateways can be designed to store the blockchain
    and perform transaction validations. Intermediate devices such as relay routers
    can be designed to execute services for issuing transactions to a BCN on behalf
    of the connected resource constraint devices such as sensors. Several integration
    models have been discussed in previous studies [30,53]. Nevertheless, we summarize
    them into four major IoT and BCN integration models. Sensor devices as Transaction
    Issuer (SaTi): In this integration model(see the interaction (a) between sensor
    node s and BCN in Figure 6), IoT devices such as sensors take part in issuing
    transactions to the external BCN. Such IoT devices should be designed to accommodate
    computational power and bandwidth requirements. However, the typical IoT devices
    do not have the storage capacity to store a complete blockchain. In many use cases,
    such as industrial IOTs, this model may be too costly and ineffective for sensors
    to communicate with an external BCN. In that case, edge devices such as IoT gateways
    may be employed to issue transactions on behalf of all the low-power, resource
    constraint IoT devices. Edge devices as Transaction Issuer (EaTi): In this integration
    model (see the interaction (b) between edge device g and BCN in Figure 6), specially
    designed IoT edge devices such as gateway routers may be actively issuing transactions
    to an external BCN, without actually storing a copy of the blockchain ledger.
    This integration model is efficient, given that it requires a limited number of
    edge devices for interacting with the BCN. Edge devices as Transaction Verifier
    (EaTv): This integration model extends the EaTi model, where specially designed
    IoT edge devices issue transactions to the BCN and maintain an entire blockchain
    ledger for active block validations. In many cases, edge devices could handle
    both issues and validate transactions being an active node for a BCN. However,
    unless business interests require it, an industry may not use edge devices for
    transaction validations, which are computationally intensive and require higher
    storage and bandwidth. In the figure, interaction (c) is part of this integration
    model. Hybrid: In a hybrid integration model, IoT and blockchain interact through
    edge devices and specially designed IoT sensor devices. It depends on the applications
    whose interactions go through edge and IoT devices. In the figure, interactions
    (a), (b), and (c) are part of the hybrid integration model. In other words, sensor
    devices issue transactions, and edge devices issue, and validate transactions
    for a BCN. Nonetheless, this model imposes redundancy in issuing transactions
    for a BCN, which is costly in terms of bandwidth. Figure 6. IoT and blockchain
    network integration models. Having discussed the models of IoT and blockchain
    network integration, the following section discusses some compelling applications
    born out of IoT and blockchain integration. 7.1. Application Areas of IoT and
    BCN Integration There are different challenges concerning evolving IoT. They include
    the problems of IoT data storage and exchange, IoT devices and user identity management,
    device/user authentication, and access control. With blockchain technology, well
    integrated with IoT, many application areas are realized for an IoT. In this section,
    we distinctively discuss three chief application areas of IoT-blockchain integration.
    7.1.1. IoT Devices and IoT Applications’ Security Enforcement Trust Platform:
    As discussed in the previous section, a blockchain network is a platform that
    supports transaction and process verification and public audit of the data stored
    in the temper-detectable blockchain ledger. Thus, the blockchain network has the
    potential to be used as a trusted platform for several IoT-related applications.
    Dedeoglu et al. [54] presented a blockchain-based trust architecture for building
    end-to-end trust for various IoT-based applications. Tang et al. [55] proposed
    a decentralized trust framework called IoT Passport for cross-platform collaborations
    using blockchain to enforce trusted interactions between IoT devices across platforms.
    Authentication and Access Control: Access control is a mechanism of mapping computational
    resources with users with appropriate access, including reading, writing, and
    executing. Because the blockchain network guarantees the integrity of stored data,
    access control mechanisms for IoT devices and applications are built and encoded
    on the blockchain ledger. Ji et al. [56] used an identify-based data access control
    model, BDAC, to provide fine-grained data access control for IoT systems. Muzammal
    et al. [57] proposed an enhanced authentication and access control method for
    IoT devices to add features, such as decentralization, secured authentication,
    authorization, and scalability. Zhang et al. [58] proposed an attribute-based
    collaborative access control scheme on top of a blockchain for IoT devices. Recently,
    Pal et al. [59] proposed blockchain-based IoT access control mechanisms that are
    claimed to provide critical features, including resource management, access rights
    transfer, permission enforcement, attribute management, and scalability. Košťál
    et al. [60] proposed using the blockchain network to manage and monitor IoT devices.
    Previous works from [61,62,63] were heavily focused on using Blockchain for IoT
    access control management. Privacy and Integrity of IoT data: Privacy and integrity
    are the essential properties of the IoT ecosystem. Tan et al. [64] proposed Shamir’s
    threshold cryptography for protecting the privacy of the IoT data stored in the
    cloud. In this model, the end-users request decryption keys from the blockchain
    network to decrypt the encrypted data in the cloud. Negka et al. [65] proposed
    using hardware-derived functions known as physical unclonable functions (PUFs)
    to detect counterfeit IoT devices. Wu et al. [66] simulated a system of assuring
    and detecting IoT data integrity using a distributed blockchain system. Naresh
    et al. discussed a blockchain-based method to monitor the topographic integrity
    of an IoT network. 7.1.2. Industrial IoT Devices and Identity Management One of
    the challenges of IoT is the huge number of connected devices. Blockchain network
    has promising features such as decentralization and tamper-proofing of data, which
    could solve the issue of managing user and device identities. Nuss et al. [67]
    demonstrated that identity and access management could be better managed on a
    private blockchain for enterprise IoT devices. Vallois et al. [68] proposed distributed
    identity and access management for a group of industries sharing many IoT devices.
    They used an architecture that utilizes a blockchain network as a communication
    layer. Lee [69] utilized blockchain technology for identity and authentication
    management for mobile users and telecommunication companies. Several business
    startups such as ShoCard (https://www.shocard.com/en.html (accessed on 3 August
    2022)), UniquID (https://uniquid.com/ (accessed on 3 August 2022)), Chronicled
    (htts://chronicled.com (accessed on 3 August 2022)), Riddle and Code (https://www.riddleandcode.com/
    (accessed on 3 August 2022)), among others are developing blockchain-based identity
    verification and management platforms based on blockchain for IoT devices and
    users. 7.1.3. Industrial IoT Data Management and Resource Sharing/Trading IoT
    produces a vast amount of highly valuable and sensitive data pertinent to industries,
    including healthcare, manufacturing, and supply chain management. Both the size
    and importance of the data demand robust ways to promote the privacy and integrity
    of the data. Blockchain provides vital features such as integrity and decentralization
    of data, thus attracting many IoT-based industries to adopt the platform for secure
    data management. Sigwart et al. [70] provided an IoT data provenance framework
    for ensuring trust in the IoT data collection, which could be used in supply chain
    management and health care management. El Kafhali et al. [71] presented an architecture
    to manage IoT data on top of blockchain and fog computing, coupled with software-defined
    networking (SDN) and network functions virtualization (NFV). Qing Fan et al. [72]
    demonstrated a comparably efficient, secure, authenticated data-sharing model
    for the IoT based on blockchain. Similarly, Chi et al. [73] proposed a data-sharing
    framework based on identity authentication and Hyberledger Fabric to ensure data-sharing
    security. They also proposed a community detection algorithm to segregate the
    data-sharing clients into different communities based on the similarity of the
    data label. Mohammed et al. [74] elaborate on the use of the blockchain and e-commerce
    based on IoT. Jain et al. [75] discuss a decentralized distribution of solar energy
    between networks using IoT and blockchain networks. Khorasany et al. [76] proposed
    a peer-to-peer energy trading framework on blockchain to fully secure energy transactions
    between a pool of smart IoT devices serving energy suppliers and customers. Similarly,
    Bitcoin and Ethereum are popular platforms that permit payment for purchasing
    goods and services [13,14]. 8. Challenges of IoT, Blockchain and the Integration
    As an evolving technology, there are several challenges to overcome to harvest
    the utility of blockchain-integrated IoT fully. This section discusses significant
    challenges, including security, scalability, performance, and standardization
    of IoT and blockchain technology. 8.1. Network and Communication Security As explained
    in Section 6.1, it is vital to address the security issues such as privacy, data
    integrity, reliability (error handling), and availability, among others. These
    issues are the most critical requirements for an IoT system. For example, IoT
    devices installed without adequate security concerns are highly prone to attacks.
    Such attacks can cause a high loss of farm yield in the smart farming infrastructure
    not built with adequate security concerns, and end-users neglect to perform the
    security hardening settings [22]. Concerning blockchain, relying on blockchain
    to protect data privacy is far from efficient. It is because the data in a public
    blockchain are not generally encrypted to permit public validations [14]. Incorporating
    private data in a public chain makes it harder to securely share data between
    IoT nodes and relevant users’ private data. However, if the user’s anonymity is
    only the security goal of an organization employing an IoT, the anonymized user’s
    data (for example, transactional data from a smart electric meter) can be provided
    to the public, blockchain network nodes for transaction validation. In that case,
    the user’s unique account identity is sufficient for executing transactions [77].
    8.2. Scalability Scalability is another significant challenge to IoT as well as
    the blockchain network. IoT devices are easier to operate in small numbers in
    a local setting. However, the real-world requirements may demand the use of thousands
    of sensors (or actuators), which demands high-level experts to deploy and address
    the scalability concerns. Sensors collect very granular data values related to
    the environment of their deployments. It is crucial to consider the expansibility
    of computing power, data storage, and bandwidth, among others [78]. Concerning
    blockchain, regular (miner) nodes in the network require higher bandwidth, storage,
    and computational power. Specifically, computational power becomes more important
    if the blockchain network employs PoW as a consensus mechanism. Since IoT devices
    have minimal computational and storage capability, such nodes do not help use
    a blockchain network regular nodes [16]. Efforts are in progress to develop blockchain
    and IoT network protocols for efficient transaction validations [77]. Techniques
    such as off-chain transaction processing and network (or transaction or state)
    sharding (Sharding is the practice of segmenting an extensive network into subnets
    or large databases into smaller databases.) [79] techniques have been proposed
    and are under testing to improve the throughput of a blockchain network. 8.3.
    Interoperability, Standardization, Regulation, and Governance Interoperability
    is a question of enabling seamless communication among heterogeneous devices.
    Due to device and communication varieties related to IoT, there is a lack of IoT
    design and communication standards. Due to the explosion of the IoT business,
    privacy controls, user agreements, third-party applications, and system update
    procedures are not uniform and consistent across platforms and applications [43].
    Multitudes of standards such as IEEE, IETF, W3C, ITU-T, ONeM2M, OMG, and ETSi
    have been proposed for different products, services, and systems [80]. A unifying
    standard for cross-domain IoT communications is still far from adoption. For example,
    contemporary, popular blockchain networks such as Bitcoin and Ethereum are struggling
    to be adopted as stable, efficient, and dependable technologies for financial
    transactions and health care management, among others [77]. Similarly, these technologies
    struggle to operate along with existing regulatory and governing bodies (https://bit.ly/3QYnLYd
    (accessed on 15 July 2022)). 8.4. Deployment and Detection Due to the miniature
    nature of IoT devices, unscrupulous deployment has affected people’s privacy.
    For instance, VTech, a Hong Kong-based company that produces smart and connected
    toys, was hacked to expose critical user information such as names, mailing addresses,
    and email addresses (https://bit.ly/3QYfQKH (accessed on 6 August 2022)). As another
    instance, a Wi-Fi-enabled Barbie doll (https://bit.ly/3zuTmbS (accessed on 6 September
    2022)) could be easily hacked to use as a surveillance tool for spying on children
    to listen to their conversation without their knowledge. Poachers may exploit
    IoT to monitor wild lives for ultimate hunting (https://bit.ly/3StPkJx (accessed
    on 6 August 20222)) (https://bit.ly/3BJ5h8N (accessed on 6 August 2022)). Laws
    prohibiting the use of IoT without transparency should be enacted to discourage
    the potential exploitation of IoT. Increased literacy on IoT could help encourage
    the ethical use of the IoT. 8.5. Performance and Resource Constraints IoT devices
    are resource constraint devices [81]. They possess small memory and computational
    power. Additionally, they run on low power. These limitations hinder executing
    processes that are intensive but are required for security operations. On the
    other hand, a blockchain network requires validating nodes to be higher computational
    and storage power. For instance, according to YCharts.Com, Ethereum (https://ycharts.com/indicators/ethereum_chain_full_sync_data_size
    (accessed on 22 July 2022)) chain full sync data size is at a current level of
    814.32 GB (22 June 2022) down from 879.18 GB one year ago, which is −7.38% from
    one year ago. Similarly, Bitcoin (https://ycharts.com/indicators/bitcoin_blockchain_size
    (accessed on 22 July 2022)) blockchain size is at a current level of 417.59 GB
    (22 June 2022), up from 355.57 GB one year ago, which is 17.45% from one year
    ago. It means there is limited opportunity for the general purpose machines to
    take part in transaction validations in a blockchain network [36]. 8.6. Maintenance
    and Patching Depending on the organizational or industrial need, IoT devices may
    be deployed in challenging environments such as the bottom of the sea, near the
    furnace, and in the forest, among others. Since IoT device firmware is not patchable,
    it requires reloading new images or replacing the device. Concerning the blockchain,
    there exists a problem with forking. A blockchain forking [79] refers to the formation
    of two or more versions of the blockchain due to different events such as a major
    protocol update, existing bug fixture, or an attack on the main blockchain protocol
    (https://bit.ly/3knXLJG (accessed on 15 July 2022)). All or the majority of the
    network should agree to the outcome of such an event. In case some wish to retain
    the original protocol, there occurs a fork in a blockchain. For instance, the
    early version of the Ethereum blockchain went through a hard fork that resulted
    in Ethereum Classic (ETC) in July 2016 (https://bit.ly/3Hob8mq (accessed on 21
    July 2022)). 9. Meeting the IoT-BCN Challenges: Tools, Techniques and Strategies
    In Section 6.1, we discussed major security assurances for an IoT network. This
    section discusses the tools and techniques utilized to realize the security assurances
    for an IoT system, a blockchain network, and their integration. 9.1. Physical
    Security of IoT Devices Sensor nodes in an IoT system are often deployed in an
    open environment. For instance, in several IoT, such as those used for smart agriculture
    and forestry, smart cities, and Climate IoT, sensor nodes are installed in a public
    environment with no or little physical security, such as walls and boundaries.
    They are susceptible to physical security challenges such as theft, displacement,
    and physical damage. In case of displacement of the IoT nodes, the usability of
    the data may be negatively affected. While it may not always be feasible to create
    a physical boundary around IoT nodes, measures should be adopted to ensure the
    continuous availability of the IoT nodes. For instance, redundant IoT devices
    may be deployed to enhance the protections, and measures to detect physical damage,
    and out-of-service IoT devices should be implemented. 9.2. Confidentiality through
    Encryption Encryption is a method of hiding data [38]. For enhanced confidentiality,
    a robust encryption algorithm such as AES that employs a 128-bit encryption key
    is mandated [82] for data encryption. Data in the cloud can be encrypted with
    the credentials of the data owners. Fine-grained data encryption in the cloud
    can be performed using attribute-based encryption (ABE) as proposed by Goyal et
    al. [83]. It has been used on different occasions to secure data on the cloud.
    Studies such as [84,85,86] leverage a homomorphic crypto-system to encrypt locations
    and distance measurements harvested by such IoT. With statistical or machine learning
    based on IoT data, different privacy-preserving methods such as highlighted in
    [86,87,88] can be employed on IoT data. To generate machine learning models, federated
    machine learning models as specified by Yang et al. [89] can be employed to avoid
    data transfer from end devices to the remote machines. Over-the-air communication
    is encrypted using a secret key exchanged between the nodes. 9.3. Authentication
    An essential step in securing IoT connections and data, and avoiding attacks such
    as spoofing and eavesdropping, is to use a secure protocol such as TLS/SSL. TLS/SSL
    is a cryptographic protocol for secure communication, where end devices are authenticated
    before initiating data exchange. Ibrahim et al. [4] applied SSL/TLS to secure
    intelligent home IoT while preserving the speed and agility of device and data
    access. Attribute-based encryption (ABE) was used for key management, and homomorphic
    encryption was used for data aggregation. Network authentication policies, the
    distribution, and the storage of encryption keys should be commissioned securely.
    9.4. Anonymizing the IoT Data IoT devices collect sensitive data such as geolocation,
    name, and identity of the IoT devices, among others. For example, in smart home
    IoT, owners of a specific home may be tied with their access to IoT devices. In
    forest and agricultural IoT, farmers may track the fields and the yield. Additionally,
    conservationists and zoological science researchers may be tracking wild-life
    activities (https://bit.ly/3byymJd (accessed on 8 June 2022)). What could be the
    repercussions if the data go into the hand of poachers? Thus, it demands highly
    secure and protected data harvesting and storage by such IoT. Freely available
    networks for anonymous connections are unreliable for two main reasons: (i) such
    networks are not publicly verifiable, and (ii) the Internet service providers
    (ISPs) may exploit their power to monitor the packets’ origination and other information
    in insecure connections (https://bit.ly/3olJufm (accessed on 22 July 2022)). Stirapongsasuti
    et al. [90] demonstrated the application of k-anonymity method to tune the privacy
    of home IoT data (activities, logins, etc.) while sinking (uploading) to the remote
    storage. k-anonymity method, as proposed by Samarati et al. [44], employs the
    method of information (data) generalization and suppression before releasing person-specific
    data to safeguard the anonymity of the individuals. Other de-identification techniques
    include scrambling and swapping values and adding noises while retaining the result’s
    overall statistical property [44]. 9.5. Authorization Proper authorization of
    IoT devices provides proper access to their users. For example, in an industry
    setting, mission-critical devices need to be accessible to higher privileged users
    such as administrators. Goyal et al. [84] demonstrated access control policies
    to limit the operations performed by different users on IoT devices in domestic
    settings. There are various types of access control mechanisms [91], such as discretionary
    access control (DAC), mandatory access control (MAC), role-based access control
    (RBAC), and attribute-based access control (ABAC), among others. Specially designed
    languages such as web ontology language (OWL) [48] have been used in formulating
    complex relationships between users and resources and the security policies for
    cloud storage and smart farming operations. 9.6. Availability Chao et al. [26]
    proposed a BCN-based information exchange network for UAVs to ensure data transmission
    security and resilience against blocking line-of-sight. Applications can use a
    quieter channel and agile frequency to overcome the problem of blocking of line-of-sight
    of network receivers [82]. Zigbee, for instance, uses frame counters to defend
    against MIM. Additionally, to protect from unauthorized control, network keys
    should be regularly changed [82]. It is recommended to use an intrusion detection
    system (IDS) for possible attacks on the system [92]. Availability can be promoted
    by using redundant nodes deployed for the critical IoT nodes, which operate in
    case the original nodes are out of service for various reasons [46]. Modern security
    techniques exploit artificial intelligence and machine learning to defend an IoT
    network, such as smart farming, smart home, and smart health, among others [23,93,94].
    A system’s security lies in detecting any tampering or ongoing attack on a system.
    Efficient intrusion detection is a framework to continuously monitor any malicious
    activity on an IoT network. Monshizadeh et al. [92] discussed a software-defined
    network with detection as a service that enables early detection of network anomalies.
    9.7. Trustworthiness As mentioned in Section 6.1.7, trustworthiness is an ultimate
    requirement of an information system. It can only be confirmed if other security
    requirements, such as privacy, integrity, and availability, are guaranteed. For
    instance, as IEEE Standards for Blockchain-based IoT Data Management [45] outlines,
    a framework of blockchain-based IoT for data management must contain a batch of
    trusted sensing, storage, communication, and networking to monitor any malicious
    activity on an IoT network continuously information system can be significantly
    promoted by augmenting it with a blockchain-based solution. 9.8. IoT Security
    Controls and Policies As explained in Section 6, the attack surface of an IoT
    network is as large as the Internet. Applying the tools and techniques to provide
    the desired security assurances for an IoT system is insufficient. Additionally,
    it is crucial to establish and apply standard security controls to effectively
    mitigate the threats to an IoT system and thwart foreseeable attacks on the system.
    In this section, we adapt the CIS Controls (The Center for Internet Security (CIS)
    is an “independent, nonprofit organization with a mission to create confidence
    in the connected world” (https://www.cisecurity.org/controls (accessed 22 June
    2022); Alternative to CIS’s controls are the framework from National Institute
    of Science and Technology (NIST), ISO 27001, and PCI-DSS among others [95].))
    to strengthen the protection and defend an IoT system. Implement IoT devices and
    firmware version inventory management: This control encourages network owners
    to create an effective inventory of authorized network and sensor devices. This
    inventory assists in establishing authorized network devices and detecting unauthorized
    devices. Implement IoT application services and version management: This control
    provides a mechanism to create an inventory of software or firmware packages used
    by IoT devices. Such inventory is valuable during firmware/software vulnerability
    fixing and patch management. Implement IoT network or device access control management:
    Access control mechanism is one of the crucial techniques to provide operational
    and other permissions over IoT devices. It also assists in monitoring IoT device
    access by different users. Proper authentication mechanisms should also be implemented
    to avoid leaking or reusing user credentials such as usernames and passwords.
    Implement IoT network and application isolation: It is crucial to establish a
    distinction between an IoT network and an application (or analysis) layer. While
    an IoT network is a network of devices contributing to harvesting sensor data,
    the application layer consists of services used by end users to support organization
    decisions. A stringent isolating boundary should be created to mitigate risks
    of vulnerabilities affecting each other. Implement IoT network and access Log
    management: This control encourages network owners to collect, alert, review and
    retain events logs that could assist in detecting, comprehending, and recovering
    from any attack on an IoT system. Data protection and recovery management: Critical
    asset produced by an IoT is the vast set of application-specific data. Implementing
    adequate data backup procedures is crucial to avoid data loss during an attack
    or a disaster. User access and data encryption should also be properly managed
    to prevent information leaks. 10. Discussion and Conclusions This paper presented
    several topics, including the evolution of IoT things, its architecture and major
    application areas, security assurances of an IoT, and its relevance to blockchain
    technology. Blockchain technology can offer unique features such as decentralization,
    transparency, and data integrity to the areas of IoT to give rise to robust, compelling
    applications that span from home to industry to agriculture and farming. However,
    from our study, we concluded that the actual use case of the blockchain-integrated
    IoT lies in the reliable infrastructure supporting blockchain network operations.
    On the other hand, international standardization of the operation of devices and
    communication protocols is highly desirable for burgeoning use cases of the IoT.
    As discussed previously, there are several ways IoT and blockchain can be integrated
    to harvest riveting application services. At the same time, there are myriads
    of threats to IoT that could not be resolved by BCN integration. For instance,
    BCN cannot solve common threats for an IoT, are physical tampering with the deployed
    IoT devices and malware injection, DDoS attacks, and battery drainage attacks,
    among others [96]. The seamless interactions between IoT devices and the BCN depend
    on several factors, including computational power and bandwidth. An issue affecting
    IoT data availability may arise due to the proprietary lock-in effect, where manufacturers
    or suppliers are forced to use potentially incompetent IoT products and services
    and sometimes be denied to export data (https://bit.ly/3J5hY1p (accessed on 29
    December 2022)). With respect to blockchain technology, we still lack a reliable,
    scalable, efficient, affordable, well-governed, general-purpose blockchain platform
    to execute IoT-specific services. Much work is required to enhance the financial,
    operational reliability, and governance of popular open-source blockchain networks
    such as Bitcoin and Ethereum. Author Contributions Conceptualization, N.A.; software,
    N.A.; validation, M.R. formal analysis, N.A. and M.R.; investigation, N.A.; resources,
    N.A.; writing—original draft preparation, N.A.; writing—review and editing, M.R.;
    visualization, N.A.; supervision, N.A and M.R. All authors have read and agreed
    to the published version of the manuscript. Funding This research received no
    external funding. Acknowledgments N. Adhikari would like to thank Sam Thangiah,
    Chair of the Computer Science Department at Slippery Rock University, for lending
    tools for provisioning the IoT system(s) in the lab, and Vibha Acharya for encouraging
    in the research endeavors. Conflicts of Interest The authors declare no conflict
    of interest. Abbreviations The following abbreviations are used in this manuscript:
    ABE Attribute-Based Encryption AES Advanced Encryption Standards BC Blockchain
    BCN Blockchain Network CIS Center for Internet Security CVSS Common Vulnerability
    Scoring System DES Data Encryption Standard DoS Directory of open access journals
    ECDSA Elliptic Curve Digital Signature Algorithm FDI False Data Injection IIRA
    The Industrial Internet Reference Architecture LTE-M data LoRa Long Range MAC
    Mandatory Access Control MIM Man-in-the-Middle NFC Near Field Communication OWL
    Web Ontology Language PASTA Process for Attack Simulation and Threat Analysis
    PoS Proof of Stake PoW Proof of Work RBAC Role Based Access Control RFID Radio
    Frequency Identification RSA Rivest–Shamir–Adleman Algorithm TCP Transport Control
    Protocol TLS/SSL Transport Layer Securuirty/Socket Layer Security TXN Transactions
    (Plr. TXNs) Temp. Temperature UAV Unmanned Aerial Vehicle WIMAX Worldwide Interoperability
    for Microwave Access WWW World Wide Web ZB Zettabytes References Ainane, N.; Ouzzif,
    M.; Bouragba, K. Data security of smart cities. In Proceedings of the 3rd International
    Conference on Smart City Applications, Tetouan, Morocco, 10–11 October 2018. [Google
    Scholar] [CrossRef] YIN, Y.; Zeng, Y.; Chen, X.; Fan, Y. The internet of things
    in healthcare: An overview. J. Ind. Inf. Integr. 2016, 1, 3–13. [Google Scholar]
    [CrossRef] Arunkumar, N.; Pandimurugan, V.; Hema, M.S.; Azath, H.; Hariharasitaraman,
    S.; Thilagaraj, M.; Govindan, P. A Versatile and Ubiquitous IoT-Based Smart Metabolic
    and Immune Monitoring System. Comput. Intell. Neurosci. 2022, 2022, 9441357. [Google
    Scholar] [CrossRef] [PubMed] Ibrahim, J.M.; Karami, A.; Jafari, F. A secure smart
    home using Internet-of-Things. In Proceedings of the 9th International Conference
    on Information Management and Engineering, Barcelona, Spain, 9–11 October 2017;
    pp. 69–74. [Google Scholar] [CrossRef] Dineva, K.; Atanasova, T. Design of Salable
    IoT Architecture based on AWS for Smart Livestock. Animal 2021, 11, 2697. [Google
    Scholar] [CrossRef] [PubMed] Sudha, M.K.; Manorama, M.; Aditi, T. Smart Agricultural
    Decision Support Systems for Predicting Soil Nutrition Value Using IoT and Ridge
    Regression. Agris Online Pap. Econ. Inform. 2022, 14, 95–106. [Google Scholar]
    [CrossRef] Oliver, S.T.; González-Pérez, A.; Guijarro, J.H. An IoT proposal for
    monitoring vineyards called senviro for agriculture. In Proceedings of the 8th
    International Conference on the Internet of Things, IOT 2018, Santa Barbara, CA,
    USA, 15–18 October 2018. [Google Scholar] [CrossRef] Ahire, D.B.; Gond, D.V.J.;
    Ahire, N.L. IoT Based Real-Time Monitoring of Meteorological Data: A Review. In
    Proceedings of the 3rd International Conference on Contents, Computing & Communication
    (ICCCC-2022), Nashik, India, 26–27 February 2022; pp. 1–12. [Google Scholar] [CrossRef]
    Casola, V.; De Benedictis, A.; Rak, M.; Villano, U. Toward the automation of threat
    modeling and risk assessment in IoT systems. Internet Things 2019, 7, 100056.
    [Google Scholar] [CrossRef] Pennino, D.; Pizzonia, M.; Vitaletti, A.; Zecchini,
    M. Blockchain as IoT Economy Enabler: A Review of Architectural Aspects. J. Sens.
    Actuator Netw. 2022, 11, 20. [Google Scholar] [CrossRef] Huh, S.; Cho, S.; Kim,
    S. Managing IoT devices using blockchain platform. In Proceedings of the International
    Conference on Advanced Communication Technology, ICACT, PyeongChang, Republic
    of Korea, 19–22 February 2017; pp. 464–467. [Google Scholar] [CrossRef] Mehta,
    P.; Gupta, R.; Tanwar, S. Blockchain envisioned UAV networks: Challenges, solutions,
    and comparisons. Comput. Commun. 2020, 151, 518–538. [Google Scholar] [CrossRef]
    Nakamoto, S. Bitcoin: A Peer-to-Peer Electronic Cash System. Technical Report.
    2008. Available online: bitcoin.org (accessed on 19 September 2022). Wood, G.
    Ethereum: A secure decentralised generalised transaction ledger. Ethereum Proj.
    Yellow Pap. 2014, 151, 1–32 2019. [Google Scholar] Bayılmış, C.; Ebleme, M.A.;
    Çavuşoğlu, Ü.; Küçük, K.; Sevin, A. A survey on communication protocols and performance
    evaluations for Internet of Things. Digit. Commun. Netw. 2022, 8, 1094–1104. [Google
    Scholar] [CrossRef] Lao, L.; Li, Z.; Hou, S.; Xiao, B.; Guo, S.; Yang, Y. A survey
    of IoT applications in blockchain systems: Architecture, consensus, and traffic
    modeling. ACM Comput. Surv. 2020, 53, 1–32. [Google Scholar] [CrossRef] [Green
    Version] Ray, P.P. A survey on Internet of Things architectures. J. King Saud
    Univ. Comput. Inf. Sci. 2018, 30, 291–319. [Google Scholar] [CrossRef] [Green
    Version] Lea, P. Internet of Things for Architects, 1st ed.; Packt Publishing:
    Birmingham, UK, 2018; pp. 1–676. [Google Scholar] Dahlberg, R.; Pulls, T.; Peeters,
    R. Efficient Sparse Merkle Trees Caching Strategies and Secure (Non-) Membership
    Proofs. Lect. Notes Comput. Sci. 2016, 10014 LNCS, 199–215. [Google Scholar] [CrossRef]
    Wang, G.; Shi, Z.; Nixon, M.; Han, S. ChainSplitter: Towards blockchain-based
    industrial IoT architecture for supporting hierarchical storage. In Proceedings
    of the 2019 2nd IEEE International Conference on Blockchain, Blockchain 2019,
    Atlanta, GA, USA, 14–17 July 2019; pp. 166–175. [Google Scholar] [CrossRef] [Green
    Version] McGrath, M.J.; Scanaill, C.N. Sensor Technologies—Healthcare, Wellness
    and Environmental Applications; Apress: Berkeley, CA, USA, 2013; pp. 1–302. [Google
    Scholar] [CrossRef] Gupta, M.; Abdelsalam, M.; Khorsandroo, S.; Mittal, S. Security
    and Privacy in Smart Farming: Challenges and Opportunities. IEEE Access 2020,
    8, 34564–34584. [Google Scholar] [CrossRef] Sontowski, S.; Gupta, M.; Laya Chukkapalli,
    S.S.; Abdelsalam, M.; Mittal, S.; Joshi, A.; Sandhu, R. Cyber Attacks on Smart
    Farming Infrastructure. In Proceedings of the 2020 IEEE 6th International Conference
    on Collaboration and Internet Computing, CIC 2020, Virtual, 1–3 December 2020;
    Institute of Electrical and Electronics Engineers Inc.: Interlaken, Switzerland,
    2020; pp. 135–143. [Google Scholar] [CrossRef] Mann, S. Historical account of
    the ‘WearComp’ and ‘WearCam’ inventions developed for applications in ‘personal
    imaging’. In Proceedings of the International Symposium on Wearable Computers,
    Digest of Papers, Cambridge, MA, USA, 13–14 October 1997; pp. 66–73. [Google Scholar]
    [CrossRef] Tariq, N.; Qamar, A.; Asim, M.; Khan, F.A. Blockchain and smart healthcare
    security: A survey. In Procedia Computer Science; Elsevier: Amsterdam, The Netherlands,
    2020; Volume 175, pp. 615–620. [Google Scholar] [CrossRef] Chao, H.; Maheshwari,
    A.; Sudarsanan, V.; Tamaskar, S.; Delaurentis, D.A. UAV traffic information exchange
    network. In Proceedings of the 2018 Aviation Technology, Integration, and Operations
    Conference, Atlanta, GA, USA, 25–29 June 2018. [Google Scholar] [CrossRef] Lin,
    J.; Yu, W.; Zhang, N.; Yang, X.; Zhang, H.; Zhao, W. A Survey on internet of Things:
    Architecture, Enabling Technologies, Security and Privacy, and Applications. IEEE
    internet Things J. 2017, 4, 642–646. [Google Scholar] [CrossRef] Peng, C.; Wu,
    C.; Gao, L.; Zhang, J.; Yau, K.L.A.; Ji, Y. Blockchain for Vehicular internet
    of Things: Recent Advances and Open Issues. Sensors 2020, 20, 5079. [Google Scholar]
    [CrossRef] [PubMed] Ramkumar, M.; Adhikari, N. Blockchain Based Redistricting
    with Public Participation. J. Inf. Secur. 2022, 13, 140–164. [Google Scholar]
    [CrossRef] Ali, M.S.; Vecchio, M.; Pincheira, M.; Dolui, K.; Antonelli, F.; Rehmani,
    M.H. Applications of Blockchains in the internet of Things: A Comprehensive Survey.
    IEEE Commun. Surv. Tutor. 2019, 21, 1676–1717. [Google Scholar] [CrossRef] Alotaibi,
    B. Utilizing Blockchain to Overcome Cyber Security Concerns in the internet of
    Things: A Review. IEEE Sens. J. 2019, 19, 10953–10971. [Google Scholar] [CrossRef]
    Xu, J. The Application of Blockchain Technology in Equity Incentive. E3S Web Conf.
    2021, 235, 15–18. [Google Scholar] [CrossRef] Vora, G. Cryptocurrencies: Are Disruptive
    Financial Innovations Here? Mod. Econ. 2015, 06, 816–832. [Google Scholar] [CrossRef]
    [Green Version] Hou, H. The Application of Blockchain Technology in E-Government
    in China. In Proceedings of the 6th International Conference on Computer Communication
    and Networks (ICCCN), Vancouver, BC, Canada, 31 July–3 August 2017; Volume 235,
    pp. 1–4. [Google Scholar] [CrossRef] Casino, F.; Dasaklis, T.K.; Patsakis, C.
    A systematic literature review of blockchain-based applications: Current status,
    classification and open issues. Telemat. Inform. 2019, 36, 55–81. [Google Scholar]
    [CrossRef] Saxena, S.; Shao, D.; Nikiforova, A.; Thapliyal, R. Invoking blockchain
    technology in e-government services: A cybernetic perspective. Digit. Policy Regul.
    Gov. 2022, 24, 246–258. [Google Scholar] [CrossRef] Kassen, M. Blockchain and
    e-government innovation: Automation of public information processes. Inf. Syst.
    2022, 103, 101862. [Google Scholar] [CrossRef] Stallings, W. Cryptography and
    Network Security: Principles and Practice 7th Global Edition, 7th ed.; Pearson
    Education Limited: Harlow, UK, 2017. [Google Scholar] Tiedemann, P. The Human
    Right to Privacy. Philos. Found. Hum. Right 2020, 44, 197–214. [Google Scholar]
    [CrossRef] Tawalbeh, L.; Muheidat, F.; Tawalbeh, M.; Quwaider, M. IoT Privacy
    and Security: Challenges and Solutions. Appl. Sci. 2020, 10, 4102. [Google Scholar]
    [CrossRef] Pass, R.; Shelat, A. A Course in Cryptography, 3rd ed.; Printed Online;
    2010; pp. 1–192. Available online: https://bit.ly/3GZEiGN (accessed on 19 December
    2022). Bruce, S. Applied Cryptography: Protocols, Algorithms, and Source Code
    in C, 2nd ed.; John Wiley & Sons, Inc: New York, NY, USA, 1996. [Google Scholar]
    Brown, A.; Bethel, G.; Koehler, S. Threats To Percision Agriculture. Technical
    Report. 2018. Available online: https://bit.ly/3XNsSwC (accessed on 20 October
    2022). Samarati, P.; Sweeney, L. Protecting privacy when disclosing information:
    K-anonymity and its enforcement through generalization and suppression. In Proceedings
    of the IEEE Symposium on Research in Security and Privacy (S&P), Oakland, CA,
    USA, 3–6 May 1998. [Google Scholar] IEEE Std 2144.1-2020; IEEE Standard for Framework
    of Blockchain-based Internet of Things (IoT) Data Management. Institute of Electrical
    and Electronics Engineers Inc.: New York, NY, USA, 2021; pp. 1–20. [CrossRef]
    Bradbury, M.; Jhumka, A.; Watson, T.; Flores, D.; Burton, J.; Butler, M. Threat-modeling-guided
    Trust-based Task Offloading for Resource-constrained internet of Things. ACM Trans.
    Sens. Netw. 2022, 18, 1–41. [Google Scholar] [CrossRef] Hilt, S.; Kropotov, V.;
    Mercês, F.; Rosario, M.; Sancho, D. The Internet of Things in the Cybercrime Underground.
    Available online: https://bit.ly/2lZRnKv (accessed on 20 December 2022). Chukkapalli,
    S.S.L.; Piplai, A.; Mittal, S.; Gupta, M.; Joshi, A. A Smart-Farming Ontology
    for Attribute Based Access Control. In Proceedings of the 2020 IEEE 6th Intl Conference
    on Big Data Security on Cloud, BigDataSecurity 2020, 2020 IEEE Intl Conference
    on High Performance and Smart Computing, HPSC 2020 and 2020 IEEE Intl Conference
    on Intelligent Data and Security, IDS 2020, Baltimore, MD, USA, 25–27 May 2020;
    pp. 29–34. [Google Scholar] [CrossRef] Line, M.B.; Zand, A.; Stringhini, G.; Kemmerer,
    R. Targeted attacks against industrial control systems: Is the power industry
    prepared? In Proceedings of the ACM Conference on Computer and Communications
    Security. Association for Computing Machinery, Scottsdale, AZ, USA, 3–7 November
    2014; Volume 2014, pp. 13–22. [Google Scholar] [CrossRef] Nguyen, A.; Yosinski,
    J.; Clune, J. Deep Neural Networks are Easily Fooled: High Confidence Predictions
    for Unrecognizable Images. In Proceedings of the IEEE Conference on Computer Vision
    and Pattern Recognition (CVPR), Boston, MA, USA, 7–12 June 2015. [Google Scholar]
    Tyagi, T. Botnet of Things: Menace to Internet of Things. In Proceedings of the
    Third International Conference on Computing: Communication, Network and Security
    (IC3NS-2018), Sikar, Rajasthan, India, 25–27 October 2018; pp. 61–65. [Google
    Scholar] Wüst, K.; Gervais, A. Do you need a Blockchain? In Proceedings of the
    2018 Crypto Valley Conference on Blockchain Technology (CVCBT), Zug, Switzerland,
    20–22 June 2018; pp. 45–54. [Google Scholar] [CrossRef] Reyna, A.; Martín, C.;
    Chen, J.; Soler, E.; Díaz, M. On blockchain and its integration with IoT. Challenges
    and opportunities. Future Gener. Comput. Syst. 2018, 88, 173–190. [Google Scholar]
    [CrossRef] Dedeoglu, V.; Jurdak, R.; Putra, G.D.; Dorri, A.; Kanhere, S.S. A Trust
    Architecture for Blockchain in IoT. In Proceedings of the 16th EAI International
    Conference on Mobile and Ubiquitous Systems: Computing, Networking and Services,
    Houston, TX, USA, 2–14 November 2019; Association for Computing Machinery: New
    York, NY, USA, 2019; pp. 190–199. [Google Scholar] [CrossRef] [Green Version]
    Tang, B.; Kang, H.; Fan, J.; Li, Q.; Sandhu, R. IoT Passport: A Blockchain-Based
    Trust Framework for Collaborative internet-of-Things. In Proceedings of the 24th
    ACM Symposium on Access Control Models and Technologies, Toronto, ON, Canada,
    3–6 June 2019; Association for Computing Machinery: New York, NY, USA, 2019; pp.
    83–92. [Google Scholar] [CrossRef] Ji, Y.; Xiao, X.; Wu, F.; Chen, F.; Liu, S.
    BIDAC: Blockchain-Enabled Identity-Based Data Access Control in IoT. In Proceedings
    of the IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent
    Agent Technology, Melbourne, Australia, 14–17 December 2021; Association for Computing
    Machinery: New York, NY, USA, 2021; pp. 400–405. [Google Scholar] [CrossRef] Muzammal,
    S.M.; Murugesan, R.K. Enhanced Authentication and Access Control in internet of
    Things: A Potential Blockchain-Based Method. Int. J. Grid Util. Comput. 2021,
    12, 469–485. [Google Scholar] [CrossRef] Zhang, Y.; Li, B.; Liu, B.; Wu, J.; Wang,
    Y.; Yang, X. An Attribute-Based Collaborative Access Control Scheme Using Blockchain
    for IoT Devices. Electronics 2020, 9, 285. [Google Scholar] [CrossRef] [Green
    Version] Pal, S.; Dorri, A.; Jurdak, R. Blockchain for IoT access control: Recent
    trends and future research directions. J. Netw. Comput. Appl. 2022, 203, 103371.
    [Google Scholar] [CrossRef] Košťál, K.; Helebrandt, P.; Belluš, M.; Ries, M.;
    Kotuliak, I. Management and Monitoring of IoT Devices Using Blockchain. Sensors
    2019, 19, 856. [Google Scholar] [CrossRef] [Green Version] Banerjee, S.; Bera,
    B.; Das, A.K.; Chattopadhyay, S.; Khan, M.K.; Rodrigues, J.J. Private blockchain-envisioned
    multi-authority CP-ABE-based user access control scheme in IIoT. Comput. Commun.
    2021, 169, 99–113. [Google Scholar] [CrossRef] Iftekhar, A.; Cui, X.; Tao, Q.;
    Zheng, C. Hyperledger Fabric Access Control System for internet of Things Layer
    in Blockchain-Based Applications. Entropy 2021, 23, 1054. [Google Scholar] [CrossRef]
    [PubMed] Tan, L.; Shi, N.; Yu, K.; Aloqaily, M.; Jararweh, Y. A Blockchain-Empowered
    Access Control Framework for Smart Devices in Green internet of Things. ACM Trans.
    Internet Technol. 2021, 21, 80. [Google Scholar] [CrossRef] Tan, L.; Yu, K.; Yang,
    C.; Bashir, A.K. A Blockchain-Based Shamir’s Threshold Cryptography for Data Protection
    in Industrial internet of Things of Smart City. In Proceedings of the 1st Workshop
    on Artificial Intelligence and Blockchain Technologies for Smart Cities with 6G,
    New Orleans, LA, USA, 25–29 October 2021; Association for Computing Machinery:
    New York, NY, USA, 2021; pp. 13–18. [Google Scholar] [CrossRef] Negka, L.; Gketsios,
    G.; Anagnostopoulos, N.A.; Spathoulas, G.; Kakarountas, A.; Katzenbeisser, S.
    Employing Blockchain and Physical Unclonable Functions for Counterfeit IoT Devices
    Detection. In Proceedings of the International Conference on Omni-Layer Intelligent
    Systems, Crete, Greece, 5–7 May 2019; Association for Computing Machinery: New
    York, NY, USA, 2019; pp. 172–178. [Google Scholar] [CrossRef] WU, X.; Kong, F.;
    Shi, J.; Bao, L.; Gao, F.; Li, J. A Blockchain internet of Things Data Integrity
    Detection Model. In Proceedings of the International Conference on Advanced Information
    Science and System, Singapore, 15–17 November 2019; Association for Computing
    Machinery: New York, NY, USA, 2019. [Google Scholar] [CrossRef] Nuss, M.; Puchta,
    A.; Kunz, M. Towards Blockchain-Based Identity and Access Management for internet
    of Things in Enterprises. In Trust, Privacy and Security in Digital Business;
    Furnell, S., Mouratidis, H., Pernul, G., Eds.; Springer International Publishing:
    Cham, Switzerland, 2018; pp. 167–181. [Google Scholar] Vallois, V.; Mehaoua, A.;
    Amziani, M. Blockchain-based Identity and Access Management in Industrial IoT
    Systems. In Proceedings of the 2021 IFIP/IEEE International Symposium on Integrated
    Network Management (IM), Bordeaux, France, 18–20 May 2021; pp. 623–627. [Google
    Scholar] Lee, J.H. BIDaaS: Blockchain Based ID As a Service. IEEE Access 2018,
    6, 2274–2278. [Google Scholar] [CrossRef] Sigwart, M.; Borkowski, M.; Peise, M.;
    Schulte, S.; Tai, S. Blockchain-Based Data Provenance for the internet of Things.
    In Proceedings of the 9th International Conference on the Internet of Things,
    Bilbao, Spain, 22–25 October 2019; Association for Computing Machinery: New York,
    NY, USA, 2019. [Google Scholar] [CrossRef] [Green Version] El Kafhali, S.; Chahir,
    C.; Hanini, M.; Salah, K. Architecture to Manage internet of Things Data Using
    Blockchain and Fog Computing. In Proceedings of the 4th International Conference
    on Big Data and Internet of Things, Tangier-Tetuan, Morocco, 23–24 October 2019;
    Association for Computing Machinery: New York, NY, USA, 2019. [Google Scholar]
    [CrossRef] Fan, Q.; Chen, J.; Deborah, L.J.; Luo, M. A secure and efficient authentication
    and data sharing scheme for internet of Things based on blockchain. J. Syst. Archit.
    2021, 117, 102112. [Google Scholar] [CrossRef] Chi, J.; Li, Y.; Huang, J.; Liu,
    J.; Jin, Y.; Chen, C.; Qiu, T. A secure and efficient data sharing scheme based
    on blockchain in industrial internet of Things. J. Netw. Comput. Appl. 2020, 167,
    102710. [Google Scholar] [CrossRef] Mohammed, S.; Fiaidhi, J.; Ramos, C.; Kim,
    T.H.; Fang, W.C.; Abdelzaher, T. Blockchain in ECommerce: A Special Issue of the
    ACM Transactions on internet of ThingsBlockchain in ECommerce: A Special Issue
    of the ACM Transactions on internet of Things. ACM Trans. Internet Technol. 2021,
    21, 11–55. [Google Scholar] [CrossRef] Jain, R.; Dogra, A. Solar Energy Distribution
    Using Blockchain and IoT Integration. In Proceedings of the 2019 International
    Electronics Communication Conference, Okinawa, Japan, 7–9 July 2021; Association
    for Computing Machinery: New York, NY, USA, 2019; pp. 118–123. [Google Scholar]
    [CrossRef] Khorasany, M.; Dorri, A.; Razzaghi, R.; Jurdak, R. Lightweight blockchain
    framework for location-aware peer-to-peer energy trading. Int. J. Electr. Power
    Energy Syst. 2021, 127, 106610. [Google Scholar] [CrossRef] Attaran, M. Blockchain
    technology in healthcare: Challenges and opportunities. Int. J. Healthc. Manag.
    2022, 15, 70–83. [Google Scholar] [CrossRef] Bataineh, M.R.; Mardini, W.; Khamayseh,
    Y.M.; Yassein, M.M.B. Novel and Secure Blockchain Framework for Health Applications
    in IoT. IEEE Access 2022, 10, 14914–14926. [Google Scholar] [CrossRef] Wang, L.
    The Challenge and Prospect of Scalability of Blockchain Technology. In Proceedings
    of the 2021 5th International Conference on Computer Science and Artificial Intelligence,
    Beijing, China, 4–6 December 2021; pp. 296–301. [Google Scholar] [CrossRef] Gazis,
    V. A Survey of Standards for Machine-to-Machine and the internet of Things. IEEE
    Commun. Surv. Tutor. 2017, 19, 482–511. [Google Scholar] [CrossRef] Bertino, E.;
    Sandhu, R.; Thuraisingham, B.; Ray, I.; Li, W.; Gupta, M.; Mittal, S. Security
    and Privacy for Emerging IoT and CPS Domains. In Proceedings of the Association
    for Computing Machinery (ACM), Baltimore, MD, USA, 24–27 April 2022; pp. 336–337.
    [Google Scholar] [CrossRef] Maximizing Security in Zigbee Networks. Available
    online: https://bit.ly/3GVr4ed (accessed on 19 December 2022). Goyal, V.; Pandey,
    O.; Sahai, A.; Waters, B. Attribute-based encryption for fine-grained access control
    of encrypted data. In Proceedings of the ACM Conference on Computer and Communications
    Security, Taipei, Taiwan, 21–24 March 2006; pp. 89–98. [Google Scholar] [CrossRef]
    Goyal, G.; Lie, P.; Sural, S. Securing Smart Home IoT Systems with Attribute-Based
    Access Control. In Proceedings of the 2022 ACM Workshop on Secure and Trustworthy
    Cyber-Physical Systems, Baltimore, DC, USA, 27 April 2022; ACM: Baltimore, DC,
    USA, 2022; pp. 37–46. [Google Scholar] [CrossRef] Li, M.; Yu, S.; Zheng, Y.; Ren,
    K.; Lou, W. Scalable and Secure Sharing of Personal Health Records in Cloud Computing
    Using Attribute-Based Encryption. IEEE Trans. Parallel Distrib. Syst. 2013, 24,
    131–143. [Google Scholar] [CrossRef] [Green Version] Yan, Q.; Lou, J.; Vuran,
    M.C.; Irmak, S. Scalable Privacy-preserving Geo-distance Evaluation for Precision
    Agriculture IoT Systems. ACM Trans. Sens. Netw. 2021, 17, 1–30. [Google Scholar]
    [CrossRef] Bertino, E.; Carminati, B.; Ferrari, E.; Thuraisingham, B.; Gupta,
    A. Selective and Authentic Third-Party Distribution of XML Documents. IEEE Trans.
    Knowl. Data Eng. 2004, 16, 1263–1278. [Google Scholar] [CrossRef] [Green Version]
    Al-Rubaie, M.; Chang, J.M. Privacy-Preserving Machine Learning: Threats and Solutions.
    IEEE Secur. Priv. 2019, 17, 49–58. [Google Scholar] [CrossRef] [Green Version]
    Yang, Q.; Liu, Y.; Chen, T.; Tong, Y. Federated Machine Learning: Concept and
    Applications. ACM Trans. Intell. Syst. Technol. 2019, 10, 1–19. [Google Scholar]
    [CrossRef] Stirapongsasuti, S. Decision Making Support for Privacy Data Upload
    in Smart Home. In Proceedings of the Adjunct: Adjunct Proceedings of the 2019
    ACM International Joint Conference on Pervasive and Ubiquitous Computing and Proceedings
    of the 2019 ACM International Symposium on Wearable Computers, London, UK, 9–13
    September 2019; Association for Computing Machinery: New York, NY, USA, 2019;
    pp. 214–217. [Google Scholar] [CrossRef] Sandhu, R.S.; Samarati, P. Access Control:
    Principles and Practice. IEEE Commun. Mag. 1994, 32, 40–48. [Google Scholar] [CrossRef]
    Monshizadeh, M.; Khatri, V.; Kantola, R. Detection as a service: An SDN application.
    In Proceedings of the International Conference on Advanced Communication Technology,
    ICACT, Pyeongchang, Republic of Korea, 19–22 February 2017; pp. 285–290. [Google
    Scholar] [CrossRef] Ullah, Z.; Al-Turjman, F.; Mostarda, L.; Gagliardi, R. Applications
    of Artificial Intelligence and Machine learning in smart cities. Comput. Commun.
    2020, 154, 313–323. [Google Scholar] [CrossRef] Chukkapalli, S.S.L.; Mittal, S.;
    Gupta, M.; Abdelsalam, M.; Joshi, A.; Sandhu5, R.; Joshi, K. Ontologies and artificial
    intelligence systems for the cooperative smart farming ecosystem. IEEE Access
    2020, 8, 164045–164064. [Google Scholar] [CrossRef] CIS Controls Version 8. Available
    online: https://bit.ly/3kDgHnK (accessed on 19 December 2022). Iqbal, W.; Abbas,
    H.; Daneshmand, M.; Rauf, B.; Bangash, Y.A. An In-Depth Analysis of IoT Security
    Requirements, Challenges, and Their Countermeasures via Software-Defined Security.
    IEEE Internet Things J. 2020, 7, 10250–10276. [Google Scholar] [CrossRef]  Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Adhikari, N.; Ramkumar, M. IoT and Blockchain
    Integration: Applications, Opportunities, and Challenges. Network 2023, 3, 115-141.
    https://doi.org/10.3390/network3010006 AMA Style Adhikari N, Ramkumar M. IoT and
    Blockchain Integration: Applications, Opportunities, and Challenges. Network.
    2023; 3(1):115-141. https://doi.org/10.3390/network3010006 Chicago/Turabian Style
    Adhikari, Naresh, and Mahalingam Ramkumar. 2023. \"IoT and Blockchain Integration:
    Applications, Opportunities, and Challenges\" Network 3, no. 1: 115-141. https://doi.org/10.3390/network3010006
    Article Metrics Citations Crossref   6 Scopus   7 Google Scholar   [click to view]
    Article Access Statistics Article access statistics Article Views 6. Jan 16. Jan
    26. Jan 5. Feb 15. Feb 25. Feb 6. Mar 16. Mar 26. Mar 0k 1k 2k 3k 4k 5k For more
    information on the journal statistics, click here. Multiple requests from the
    same IP address are counted as one view.   Network, EISSN 2673-8732, Published
    by MDPI RSS Content Alert Further Information Article Processing Charges Pay an
    Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For
    Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Network
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'IoT and Blockchain Integration: Applications, Opportunities, and Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ozpinar A.
  citation_count: '3'
  description: Various human activities emit greenhouse gasses (GHGs) that contribute
    to global climate change. These include the burning of fossil fuels for energy
    production, transportation, and industrial uses, and the clearing of forests to
    create farmland and pasture, all for urban and industrial development. As a result,
    temperatures around the world are rising, extreme weather events are occurring
    more frequently, and human health is suffering because of these changes. As a
    result of massive traffic, agriculture, and urbanization, the natural environment
    is being destroyed, negatively affecting humans and other living things. Humanity
    plans to live in smart cities within this ecosystem as the world evolves around
    these mutations. A smart city uses technology and data to improve the quality
    of life of its citizens and the efficiency of its urban systems. Smart cities
    have the potential to be more sustainable because they use technology and data
    to improve the efficiency of urban systems and reduce the negative impact of human
    activities on the environment. Smart cities can also use technology to improve
    green transportation and waste management and reduce water consumption, which
    can help conserve natural resources and protect the environment. Smart cities
    can create livable, efficient, and sustainable urban environments using technology
    and data. This paper presents a new Enterprise Architecture Framework for reducing
    carbon emissions for environmental sustainability that combines gamification and
    green behavior with blockchain architecture to ensure a system that is trustworthy,
    secure, and scalable for shareholders, citizens, service providers, and technology
    vendors. In order to achieve this, the hyper-integrated framework approach explains
    a roadmap for how sustainability for reducing carbon emissions from transportation
    is based on an optimized MaaS approach improved by gamification. As part of this
    study, a computational model and a formulation are proposed to calculate the activity
    exchange values in the MaaS ecosystem for swapping, changing, and bartering for
    assets within the integrated system. This paper aims to propose the framework
    and a module interoperability approach, so numerical values for computation parameters
    are not included as they may belong to other research studies. In spite of this,
    a case study section has been provided as an example of a calculation approach.
  doi: 10.3390/en16052480
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Energies All Article Types Advanced   Journals
    Energies Volume 16 Issue 5 10.3390/en16052480 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editors Kittisak Jermsittiparsert
    Thanaporn Sriyakul Subscribe SciFeed Recommended Articles Related Info Link More
    by Author Links Article Views 2691 Citations 3 Table of Contents Abstract Introduction
    Materials and Methods Results and Case Study for the Framework Conclusions Funding
    Institutional Review Board Statement Informed Consent Statement Data Availability
    Statement Acknowledgments Conflicts of Interest Sample Availability Abbreviations
    References share Share announcement Help format_quote Cite question_answer Discuss
    in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article
    Reprints Open AccessArticle A Hyper-Integrated Mobility as a Service (MaaS) to
    Gamification and Carbon Market Enterprise Architecture Framework for Sustainable
    Environment by Alper Ozpinar Department of Mechatronics Engineering, Istanbul
    Commerce University, Istanbul 34840, Turkey Energies 2023, 16(5), 2480; https://doi.org/10.3390/en16052480
    Submission received: 8 February 2023 / Revised: 1 March 2023 / Accepted: 2 March
    2023 / Published: 5 March 2023 (This article belongs to the Topic Energy Management
    and Sustainable Development from Economic, Social and Environmental Aspects) Download
    keyboard_arrow_down     Browse Figures Versions Notes Abstract Various human activities
    emit greenhouse gasses (GHGs) that contribute to global climate change. These
    include the burning of fossil fuels for energy production, transportation, and
    industrial uses, and the clearing of forests to create farmland and pasture, all
    for urban and industrial development. As a result, temperatures around the world
    are rising, extreme weather events are occurring more frequently, and human health
    is suffering because of these changes. As a result of massive traffic, agriculture,
    and urbanization, the natural environment is being destroyed, negatively affecting
    humans and other living things. Humanity plans to live in smart cities within
    this ecosystem as the world evolves around these mutations. A smart city uses
    technology and data to improve the quality of life of its citizens and the efficiency
    of its urban systems. Smart cities have the potential to be more sustainable because
    they use technology and data to improve the efficiency of urban systems and reduce
    the negative impact of human activities on the environment. Smart cities can also
    use technology to improve green transportation and waste management and reduce
    water consumption, which can help conserve natural resources and protect the environment.
    Smart cities can create livable, efficient, and sustainable urban environments
    using technology and data. This paper presents a new Enterprise Architecture Framework
    for reducing carbon emissions for environmental sustainability that combines gamification
    and green behavior with blockchain architecture to ensure a system that is trustworthy,
    secure, and scalable for shareholders, citizens, service providers, and technology
    vendors. In order to achieve this, the hyper-integrated framework approach explains
    a roadmap for how sustainability for reducing carbon emissions from transportation
    is based on an optimized MaaS approach improved by gamification. As part of this
    study, a computational model and a formulation are proposed to calculate the activity
    exchange values in the MaaS ecosystem for swapping, changing, and bartering for
    assets within the integrated system. This paper aims to propose the framework
    and a module interoperability approach, so numerical values for computation parameters
    are not included as they may belong to other research studies. In spite of this,
    a case study section has been provided as an example of a calculation approach.
    Keywords: smart cities; MaaS; environmental sustainability; carbon credit; blockchain;
    gamification; hyper integrated services; pro-environmental behaviour; enterprise
    architecture 1. Introduction Climate change is caused by various human activities,
    particularly the emission of greenhouse gasses such as carbon dioxide and methane
    into the atmosphere [1]. The majority of these greenhouse gasses are produced
    by modern living standards, agriculture, and industrialization. Another massive
    carbon dioxide emission occurs from the production of cement that makes up buildings,
    factories, and human artifacts, as well as from the decomposition of organic material
    in landfills and other industrial processes [2]. These gasses in the atmosphere
    trap heat from the sun and cause the Earth’s temperature to rise. The impacts
    of climate change are far-reaching and include rising sea levels, more frequent
    and intense heat waves and storms, droughts and floods, and changes in the distribution
    and abundance of plants and animals [3]. These impacts can have negative consequences
    for human health, agriculture, biodiversity, water resources, and other aspects
    of human society [4]. Environmental factors, such as the endangered ozone layer,
    greenhouse gas emissions mentioned above, polluted rivers, and industrial waste
    discharged into freshwater resources and the environment, have been shown in recent
    studies to negatively affect quality of life. Climate change, for example, can
    negatively impact human health in several ways, including increased risk of heat
    stroke, respiratory problems, and infectious diseases [5]. It has also been shown
    that green space in the cities has a positive impact on mental health [6]. Moreover,
    there are other studies showing environmental factors increase various risk factors
    for human health [7,8]. Sustainable environmental management means reducing greenhouse
    gas emissions and adopting greener practices to mitigate the effects of climate
    change. Environmental sustainability requires balancing economic development,
    social needs, and environmental protection. For the benefit of present and future
    generations, environmental sustainability means preserving the natural environment,
    including biodiversity, natural resources, and ecological processes [9]. Measures
    to protect and preserve the natural environment and to use natural resources in
    ways that do not deplete or degrade them are critical to the continued existence
    of the natural environment [10]. In other words, it is about making decisions
    and acting in a way that takes into account the long-term impact on the environment,
    rather than focusing only on short-term economic or social benefits [11]. There
    are several approaches that can contribute to environmental sustainability, such
    as reducing resource use and waste, which reduces the environmental impacts associated
    with resource extraction, processing, and disposal [12]. By protecting and conserving
    natural habitats and biodiversity, human activities can have a less harmful effect
    on the environment [13], and the use of renewable energy sources can reduce the
    impact of energy production on the environment. Adopting green, sustainable practices
    at home, at work, and in the community can reduce daily environmental impact [14].
    Measures to reduce energy consumption and reduce humanity’s carbon footprint include
    the use of energy-efficient appliances and lighting, public transportation, environmentally
    friendly transportation, and applications that can be used to reduce energy consumption
    and reduce humanity’s carbon footprint. These measures can help humanity reduce
    the negative impact of human activities on the environment and improve environmental
    health by promoting environmental sustainability [15]. With most of humanity’s
    carbon footprint occurring where people live, the idea of ’smart cities’ is gaining
    momentum. Smart cities are urban areas where technology is used and data is analyzed
    to improve the quality of life for residents and create a more efficient and sustainable
    environment [16]. Smart cities unite technology, community, and people for a better
    future. All the different dimensions of technological improvements, but especially
    ICT, give the city the opportunity to have a creative, diverse, and educated population
    and management by ensuring a link between the two dimensions to drive sustainable
    expansion and improve the quality of life [17]. Throughout this paper, the organization
    and hierarchy will be the following. Section 1.1 is an introduction to smart cities.
    The purpose of Section 1.2 is to demonstrate the relationship between sustainability
    and smart cities. Section 1.3, how the concept of the paper and gamification with
    an ICT system can attract citizens to support and use it is discussed. Finally,
    Section 1.4 describes how such a complex system can be achieved technically. 1.1.
    Smart Cities Smart cities have a long history, dating back to the 1970s when the
    first urban Big Data project was launched in Los Angeles: “A Cluster Analysis
    of Los Angeles” [18]. Studies have been conducted around the world on smart cities
    that have reviewed and explored different perspectives and dimensions [19,20,21,22,23,24,25].
    Smart cities are a type of city management model that has gained worldwide attention
    due to the development and spread of digital technology. The development of smart
    cities has led to the construction of smart cities in many countries around the
    world. In 2006, the Singapore government introduced the “Smart Nation 2015” plan,
    the South Korean government implemented its plan to build “U-City”, a a smart
    city, and in 2011, the Netherlands also launched its “Smart City and Planning
    and Construction for Amsterdam” program. In 2010, IBM proposed “Smarter Cities”
    and built the first unified urban data management center in Rio de Janeiro. China
    began building smart cities in 2012, and 277 sites (including cities, counties,
    and municipalities) are currently designated as pilot projects [26]. Urban areas
    are experiencing continuous improvements in smart city technologies that aim to
    improve citizens quality of life, increase efficiency, and reduce the impact on
    the environment. Major examples for those improvements are 5G connectivity, Internet
    of Things, artificial intelligence applications, blockchain technologies, and
    so on. The deployment of 5G networks is set to revolutionize how cities function
    with its ultra-fast speed and low latency for real-time data transmission, which
    is essential for smart city applications, such as autonomous vehicles, traffic
    management, and remote healthcare [27,28,29]. The Internet of Things (IoT) for
    Smart sensors is now used in traffic management, air quality monitoring, waste
    management, and other applications [30,31,32]. Artificial intelligence for analyzing
    data collected from IoT sensors is providing insights that assist city officials
    in making informed decisions [33,34,35]. Blockchain technology can improve the
    security and transparency of smart city systems. This technology can help protect
    personal data, prevent fraud, and ensure the integrity of transactions [36,37].
    Smart grids are being developed to help manage energy consumption in cities more
    efficiently by using advanced analytics and automation to optimize energy usage
    and reduce waste [38,39]. One such improvement implemented for smart city solutions
    is MaaS, which stands for Mobility as a Service and involves the integration of
    different modes of transportation such as busses, trains, cabs, and car-sharing
    services into a single system accessible via a single integrated digital platform
    and payment method [40]. It is important to adapt the implementation of MaaS to
    the specifics of the place where the service is to be provided in order for the
    service to be successful. Multimodality, infrastructures, regulations, user goals,
    and user willingness to use and pay for MaaS services must all be considered when
    determining a city’s maturity [41]. The MaaS concept is reflected in the reduction
    of dependence on private cars [42] and has gained attention as a strategy to reduce
    emissions by promoting the use of public transit as part of a strategy to manage
    transportation demand and support environmental sustainability [43]. Moreover,
    MaaS systems can reward users for choosing sustainable modes of transportation
    or provide discounts to encourage environmentally friendly behaviors. Users who
    agree to walk or bike more often or use public transit less often can receive
    discounts on public transit fares or car-sharing rates or other promotions and
    support from shareholders through a MaaS platform. Citizens are an essential part
    of the process of smartification and sustainable development of cities, as they
    need to adopt, understand, and interact with the technologies that enable the
    digital transformation of societies, cities, and public administration. Therefore,
    technology adoption is crucial for creating smart and citizen-centric cities.
    This is even more challenging in small cities, which suffer from aging populations,
    desertification, lack of infrastructure, and above all, the digital divide [44].
    Providing sustainable and transferable transportation options to communities and
    individuals in convenient, accessible, and affordable ways has the potential to
    encourage environmentally friendly behaviors. 1.2. Sustainability in Smart Cities
    A sustainable approach to managing natural resources such as fresh water, energy,
    land, and biodiversity involves allocating and using limited resources in ways
    that meet the needs of current and future generations. It also includes finding
    more efficient ways to use resources, protecting and conserving them, and exploring
    alternatives to resource use [45]. To effectively manage scarce environmental
    resources, it is important to understand the environmental, economic, and social
    factors that influence the availability and use of these resources. Policy, regulation,
    and other measures can be used to manage resource use and promote sustainability
    [46]. The carbon footprint is primarily caused by the greenhouse gasses that humans
    emit into the atmosphere to produce energy. As a result of these emissions, climate
    change poses a major threat to environmental sustainability as mentioned before
    [47,48]. Reducing humanity’s carbon footprint is critical to preserving the environment
    for future generations. Through efficient energy use and conservation, the use
    of renewable energy sources, shifting from high carbon footprint activities to
    low carbon footprint activities, and reducing the use of fossil fuels in transportation
    and other emission generating activities in smart cities that contribute to carbon
    emissions, this paper focuses on improving energy efficiency and conservation
    through energy efficient vehicles, transportation, and reducing emissions caused
    by transportation. As a smart city strives for environmental sustainability, its
    target audience is its customers and citizens. Customers and citizens have to
    make some decisions based on their needs and requirements to achieve their goals.
    Nevertheless, some approaches to environmental sustainability do not fit into
    the customers’ comfort zones, especially those related to mobility and transportation.
    Replacing the exclusive or unnecessary use of private vehicles with public transportation
    or even carbon-free alternatives, such as walking and biking, requires a positive
    attitude toward customer behavior and an understanding of green approaches. 1.3.
    Citizen Behaviors for Sustainability in Smart Cities Green products, programs,
    and approaches to environmental sustainability are developed and promoted through
    green marketing. Green customer value refers to the perceived benefits that customers
    derive from environmentally friendly and sustainable products and services. Moreover,
    consumers who exhibit environmentally conscious behaviors make choices and take
    actions that result from their concern for the environment. Green marketing (GM)
    and green customer value (GCV) contribute to environmentally conscious consumer
    behavior (ECB), and PEB’s are key factors to consider in behavioral approaches
    to achieve successful goals [49]. In green marketing (GM), products or services
    are marketed on the basis of their environmental benefits or features. The use
    of eco-labels, promotion of energy efficiency, or promotion of sustainable materials
    are examples of this type of marketing [50]. Green customer value (GCV) refers
    to the value that environmentally conscious consumers place on products and services
    that are environmentally friendly. In addition to having an environmental benefit,
    such as reducing carbon emissions or reducing waste, this value may also reflect
    factors such as social responsibility as well as ethical considerations [51].
    The term “pro-environmental behavior” refers to actions taken by individuals or
    organizations to reduce their environmental impact [52]. Recyclables, energy-efficient
    products, and the use of public transportation are some examples of these behaviors.
    Eco-conscious consumer behavior (ECB) refers to consumer attitudes and behavior
    that take into account how they affect the environment and make purchasing decisions
    accordingly. There may be consumers who are seeking out products that are environmentally
    friendly or sustainable, and they may be willing to pay a higher price for products
    that align with their values [53]. These concepts are important for businesses
    and marketers to understand in light of the increasing awareness of the environment
    among consumers and their desire to purchase sustainable products and services.
    Businesses may be able to attract and retain eco-conscious customers through the
    use of green marketing strategies, as well as contribute to a more sustainable
    future through the adoption of such strategies [54,55]. Four different types of
    PEBs were identified, including environmental activism, non-activist behavior
    in the public sphere, environmental awareness in the private sphere, and other
    environmental behaviors. Participating in environmental social movements, donating
    money, holding demonstrations, and signing petitions are also forms of PEB in
    the public sphere [56]. In the public sphere, PEB refers to environmental behavior
    that involves collective action, such as filing environmental complaints, participating
    in environmental protection activities and organizations, and accepting environmental
    protection policies [57]. In contrast, private-sphere PEBs focus on ecological
    protection behaviors in citizen’s personal lives [58]. Purchasing, using, and
    disposing of household and personal products has a significant impact on the environment,
    and it is included under private-sphere PEB. Private-sphere PEBs include new energy
    vehicles, public transportation, recycling, green consumption, and energy-saving
    behaviors [59,60]. Psychology explains attitudes, subjective norms, perceptions
    of behavioral control, and the likelihood of engaging in a particular behavior
    using the Theory of Planned Behavior. This model is often referred to as the ABC
    model because it considers personal attitudes (A), subjective norms and perceived
    behavioral control as major factors (C) in determining behavior (B) [61]. In addition
    to energy conservation, recycling, and environmentally conscious purchasing, the
    ABC model has been applied to a variety of environmentally friendly behaviors.
    Several interventions have been developed to increase the likelihood of pro-environmental
    behaviors in individuals by understanding why some individuals engage in more
    pro-environmental behaviors than others [62]. 1.4. Enterprise Architecture for
    Smart City Applications Generally speaking, Enterprise Architecture (EA) refers
    to the discipline of proactively and holistically leading an enterprise response
    to destructive forces through identifying and analyzing the execution of change
    towards the attainment of our desired business outcomes and visions. To achieve
    such a complex and integrated sustainable system, a good Enterprise Architecture
    is required for end-to-end MaaS implementation on a large scale. Organizations
    are structured and operated according to an Enterprise Architecture (EA), which
    is a conceptual blueprint. An Enterprise Architecture is intended to help determine
    how an organization can achieve its current and future objectives in an efficient
    manner [63]. The practice of Enterprise Architecture involves analyzing, planning,
    designing, and eventually implementing the results of the analysis within an organization,
    provide a systematic approach for the products, services, information systems,
    system of systems, or business enterprises. Four well-known Enterprise Architectur’s
    are the Zachman Framework, the Federal Enterprise Architecture Framework (FEAF),
    the Department of Defense Architecture Framework (DoDAF), and the Open Group Architecture
    Framework (TOGAF) [64]. The Zachman Framework initially emerged in the 1980s as
    a two-dimensional 30-cell taxonomy for architectural descriptions [65]. The Federal
    Enterprise Architecture Framework (FEAF) is a rather comprehensive EA guidance
    developed specifically for the U.S. Federal Government in the end of the 1990s
    [66]. The Department of Defense Architecture Framework (DoDAF) emerged in the
    mid-2000s as a common approach to architecture for the U.S. Department of Defense
    (DoD) and represents an evolution of the earlier C4ISR framework born in the 1990s
    [67]. The Open Group Architecture Framework (TOGAF) was created by the Open Group
    in the mid-1990s from the materials of the earlier TAFIM framework [68]. The paper
    is organized in parts providing the information for understanding the overall
    sustainability of the environment as described in the this introduction. The materials
    and methods section examines how to manage specific resources to reduce energy
    consumption and reduce humanity’s carbon footprint through transportation with
    MaaS in smart cities. How to achieve this goal with an ICT framework and an integration
    model that incorporates citizen behavior are explained in the framework model
    and modules section. Results and a case study for a sample metropolitan city demonstrate
    how the system can be implemented. 2. Materials and Methods This paper aims at
    environmental sustainability to reduce energy consumption and reduce the carbon
    footprint of humanity in smart cities by using a MaaS solution. This is a mobility-as-a-service
    approach coupled with hyper-integrated ICT solutions, such as blockchain, cloud
    computing, microservices-based software architecture, and fully integrated web
    services, via API supported by DevSecOps practices and includes software features
    based on green marketing (GM), green customer value (GCV), pro-environmental behaviors
    (PEBs), and eco-conscious consumer behavior (ECB) approaches. The theoretical
    framework for this work is based on the ABC and the PEBs, which state that internal
    and external factors influence pro-environmental behavior.The ABC model and the
    PEBs are both useful frameworks for designing products that are easy and appealing
    to use and that provide users with a sense of control and reward for using them.
    The idea of those frameworks supports the designed framework by a gamification
    which engages users to do more than others and also a reward system protected
    by blockchain infrastructure for their PEBs. Attitudinal factors are internal
    elements that include individuals’ views and opinions, while contextual variables
    are external elements that include social norms, financial support, and institutional
    influences [69]. Actions that promote the environment or reduce negative impacts
    on nature are considered environmentally friendly behavior. Conserving natural
    resources, reducing energy consumption, reducing waste, protecting biodiversity,
    and supporting environmentally friendly practices are all examples of environmentally
    friendly behavior. Turning off lights when not in use, using public transportation
    or a fuel-efficient vehicle, using reusable bags instead of disposable bags, supporting
    environmentally conscious businesses, and participating in activities that help
    the environment, such as recycling, are also examples of environmentally friendly
    behavior [70]. In addition to caring about the environment and wanting to preserve
    natural resources for future generations, environmentally friendly behavior can
    be motivated by moral or ethical principles [69]. Researchers have found that
    pro-environmental behavior is influenced by a number of factors, including personal
    values, social norms, perceived behavioral control, and available resources and
    infrastructure. Developing policies and strategies that encourage and support
    pro-environmental behavior can be facilitated by understanding the factors that
    influence this behavior [71,72,73]. By providing convenient and affordable alternatives
    to owning a car, MaaS can be a great way to combine MaaS and PEBs for sustainability,
    because it is more sustainable than owning a car, and it provides convenient and
    affordable options for transportation. Utilizing public transportation, carsharing,
    and active transportation (e.g., walking and biking) with MaaS systems can make
    it easier for people to choose more sustainable modes of transportation. The result
    is fewer cars on the road and fewer transportation-related greenhouse gas emissions.
    As mentioned earlier, there are many complicated and different systems for the
    end-to-end solution. In order to implement a sustainable smart city MaaS solution
    and transform urban transportation services, both the demand side of the transportation
    sector and the supply side of the transportation sector need to be transformed
    from the perspective of all stakeholders. Traditionally, urban services have been
    delivered in silos and isolated services and applications using the traditional
    approach. Instead of the traditional management model with functionally oriented
    service providers that rely on individual communication of city residents with
    vertical silos that do not cooperate in the use of services, the smart city approach
    requires that users receive an uninterrupted and holistic service based on their
    transportation needs. In traditional governance models, urban services are delivered
    through closed systems that are disconnected, resident-centric, and ineffective.
    They are not open to innovation and cross-system integration and cannot respond
    quickly to changes in city size, data sharing between application silos, streamlined
    data distribution and use, levels of service delivery, and innovation by residents,
    technology vendors, and service providers based on the smart city approach. Thus,
    for smart city solutions to be successful, urbanization services must be user-centric,
    fully integrated and developed/improved according to user expectations, and enhanced
    by new technologies. 2.1. Proposed Enterprise Architecture Framework To achieve
    environmental sustainability with MaaS in smart cities, the application framework
    and interoperability model must be adaptable to citizens’ daily routines. As mentioned
    earlier, sustainability and pro-environmental behavior are closely related, as
    eco-friendly behaviors can contribute to the long-term sustainability of natural
    resources and ecosystems. Eco-friendly practices can be adopted and consumed by
    individuals, organizations, and communities to reduce negative ecological impacts
    and promote the long-term sustainability of natural systems. A recent study shows
    that it is possible to adopt environmentally beneficial technologies and products
    that are new to the market (called eco-innovations), such as electric cars or
    cultured meats, or to adopt new forms of activities to mitigate new environmental
    threats, such as using public transportation rather than private cars or following
    new environmental regulations [74]. Figure 1 shows the high-level architecture
    of the proposed framework with hyper-integrated service architecture. As you can
    see from the figure, the high-level architecture enables various integrations,
    starting from IoT sensors for smart city applications that support and provide
    information such as air quality, noise level, traffic congestion, availability
    of green vehicles, such as e-scooters and e-bikes and their battery level for
    travel planning, etc. The architecture also connects blockchain services via a
    dynamic hub that allows the system to use public and private blockchain services
    seemingly seamlessly. Users have the ability to access the system through a mobile
    application, as the majority of users will be on the go while using the application.
    However, for back-office users, reports, logging, system definitions, campaigns,
    rules, and settings, the traditional enterprise web applications are available.
    Figure 1. Framework high-level architecture. Figure 2 shows the technical perspective
    of architecture as a functional approach. The functional approach includes all
    the detailed DevSecOps practices, such as governance, cybersecurity, log management,
    regulation engine, authentication, single sign on, microservice-based continuous
    integration and continous delivery approach, scalability, and usage capabilities.
    Since these technical details are broad technical issues and are not the focus
    of the paper, the details are explained as a resource. To achieve this, such an
    integrated system should meet the key requirements and features explained in the
    figures and satisfy certain conditions, which are listed below in alphabetical
    order; Figure 2. Framework functional diagram. Achievable environmental sustainability
    goals; Distributed and flexible infrastructure for easy implementation; Easy integration
    of potential shareholders, policy makers and citizens; Easy maintenance with affordable
    technology requirements; Implemented governance and security; Interactive and
    attractive to users; Responsible practices for all sides; Respect for the sensitivity
    and priorities of users and shareholders; Support of social media to spread acceptanc;e
    Transparent operation with respect for privacy; User-friendly interface across
    different platforms for all parties as well as different generations. Because
    of these requirements and expectations, today’s ICT systems provide this framework
    and interoperability model through the use of hyper-integration with microservices
    via cloud services. The main modules are the gamification module, blockchain infrastructure
    module, commodity exchange, rules and carbon calculations, and system core integration
    module and support modules, such as security, governance, privacy, and fraud.
    2.2. Modules 2.2.1. Gamification Module Gamification uses game principles and
    mechanisms in non-game contexts to motivate and engage people. Education, information
    studies, human–computer interaction, and health are just a few of the areas where
    gamification has attracted the interest of researchers, practitioners, and businesses
    [75]. A gamification approach to environmentalism encourages environmentally friendly
    behavior by making it more fun and engaging [76]. There are good examples of different
    gamification techniques for various areas, such as education [77] and training
    [78]. The use of gamification can motivate people to recycle more, save energy,
    or get involved with the environment. Gamification can also be used to create
    a sense of competition or community around environmental goals in smart cities,
    which can increase motivation and support for environmental actions [79]. In many
    organizations today, gamification consists of points, badges, levels, and rewards.
    Businesses, marketing campaigns, websites, applications, online communities, as
    well as school classes and college courses have proved to be effective and fun
    ways to engage target audiences with game mechanics [80]. It is predicted that
    the gamification market will grow by 27.4 percent between 2020 and 2025, reaching
    USD 30.7 billion in value [81]. Some successful examples of gamification are Verizon
    Wireless increasing visitors’ browsing time by 30 percent by using badges and
    points on its website [82], and a gamified annual review experience was developed
    by LivingSocial, which resulted in over 90 percent of its users participating
    voluntarily [83]. Within the use of gamification in business, four main types
    of gamification elements employees encounter are the use of badges (71 percent),
    apps that score employee performances (59 percent), virtual or physical rewards
    (56 percent), and leader boards (51 percent) [84]. A pre-research exercise conducted
    by the author and colleagues from the Turkish–German University from Istanbul,
    Turkey, the University of Maribor and ACE Kıbla from Slovenia, and the ZentralWeb
    GmbH from Germany in the EU funded the Erasmus+ Green Energy Skills for Youth
    Project which deals with the comprehensive collection of ‘green education’ programs
    and activities for youth aged between 13 and 25. The main objectives of the project
    are to increase awareness and competencies of youth for green energies so that
    they will master skills on climate change, ecosystem, energy production and conservation,
    management of waste and recycling, pollution, carbon footprint, etc. Mobile and
    web-based games support the education and training for young people in green energy
    and environmental sustainability and awareness. The usability data has been collected
    since 2017 from the games for badges and rankings. We also collected pre- and
    post-surveys from users. The surveys included 128 young people from 3 different
    countries: 36 students from Turkey, 29 students from Germany, and 63 students
    from Slovenia who took the trainings and also played the games. According to the
    feedbacks, the top three types of games are action, arcade, and adventure games
    as their first choice. This is followed by trivia and puzzles in second place
    and simulations as their third choice. The ratios vary between genders, education,
    and ages as well as their time for playing without a significant model. This result
    illustrates that gamification requirements should be made player- and user-specific
    within general parameters. With the addition of leader boards and badges for these
    games, the attention and willingness to play and learn increased with different
    ratios from 8 percent to 20 percent. This result was calculated by game playing
    time as well as achievement points and scores from game servers. However, it is
    obvious that young people play more when they are close to a badge or a level
    increase in the leader board. As a result of the game research, a variety of game-like
    elements are included in the proposed framework and gamification module to encourage
    and reward specific behaviors, such as points, badges, leader boards, and other
    game-like elements for environmental sustainability goals. Gamification can be
    integrated into smart city applications through the use of framework technology,
    mobile native apps, and project websites or more traditional methods of education
    and outreach. This is because gamification holds great potential as a tool to
    encourage environmentally friendly behavior and support the adoption of more sustainable
    practices in MaaS applications. The framework supports the following features
    for gamification purposes: citizens can collect rewards, points, badges, leader
    boards, and direct carbon sustainability coins from the system by using the following
    methods; Scenarios as a series of events to be completed or achieved, such as
    using a bicycle at least once a week, switching from private to public transportation,
    using electric vehicles for a certain distance, checking in and out of special
    venues, and so on; Supported scenarios and events of shareholders and sponsors
    using the MaaS system in combination with campaigns; Social impact, society jobs
    and duties, performing outreach and raising awareness; Events and attractions,
    such as attending a sponsorship event, seminars, training, online training, information
    gathering related to carbon footprint, environmental sustainability, pollution,
    global warming, habitats and biodiversity, etc. 2.2.2. Blockchain Infrastructure
    Module Blockchain is actually a distributed ledger database or registry that is
    accessible to all authorized participants. The ledger or database records every
    transaction of all participants. Through this registration process, a chain is
    created by taking information from the block to which it is to be added. To change
    a record in this chain, all records up to that record must also be changed. Because
    of this distributed architecture, blockchain servers keep records anonymous so
    that in the event of a dispute or disagreement, the correct record is always stored.
    Blockchain servers are used for verification and control to ensure that consensus
    is reached. During all these stages, records and transactions can be encrypted
    according to the blockchain algorithm [85]. There is a lot of speculation about
    blockchain technology today, as it is an infrastructure technology that is also
    mixed with cryptocurrency processes and cryptocoin markets. A well-known cryptocurrency
    called Bitcoin was introduced to the world as a digital currency in the paper
    Bitcoin: A Peer-to-Peer Electronic Cash System, which is also based on blockchain
    infrastructure [86]. However, the use of blockchain infrastructures is completely
    safe and free from speculation. The main reason for implementing such blockchain
    architecture is to create transparency, distributed security, and globalization
    for carbon markets and carbon coins. There are several examples of blockchain
    use in education, healthcare, and financial services [87,88,89]. There are a number
    of different technologies used in the implementation of the blockchain module
    in the framework, using two major blockchain ecosystems. Ethereum and Hyperledger
    are two major ecosystems to implement practical private and public blockchain
    infrastructure. A smart contract is a computer program that is stored on a blockchain
    and is designed to execute when certain conditions are met [90]. Programming languages,
    such as Solidity, are commonly used, and blockchain networks, such as Ethereum,
    are commonly used to deploy them. In addition to being secure, transparent, and
    immutable, smart contracts have a number of other advantages [91]. All network
    participants can see the execution of a protocol once it has been deployed on
    the blockchain, and they cannot be altered or deleted once they have been deployed
    [92]. In the proposed framework, blockchain modules implement cryptographic techniques
    to secure data on the blockchain and verify transactions based on selected ecosystems,
    and distributed ledger technology enables decentralized storage and management
    of data on a blockchain, allowing multiple parties to access the same information
    without a central authority. In this way, the system and framework do not need
    a central authority to be successful. Since humanity has a world with many different
    countries, policies, laws, and agreements, a system without central authority
    is much more sustainable. All transactions in the framework, such as gamification
    processes, carbon credit revenues, rewards, mobility offers, personal choices
    for a low carbon footprint, sponsorship events, badges, promotions, and events,
    are stored as smart contracts. Smart contracts ensure that transactions are executed
    according to the predetermined rules and conditions in the proposed framework,
    which makes them more secure and reduces the risk of fraud or errors. The rules
    and conditions are also used to enforce the contract terms through an automation
    process of the framework. Since there are many potential users, the system shareholders
    need a consensus algorithm that ensures the integrity and security of the blockchain
    by allowing participating server nodes to agree on the validity of transactions.
    Blockchain interoperability protocols within the framework enable cross-chain
    transactions and the creation of hybrid blockchain systems by allowing communication
    and exchange of data between blockchain systems between modules. 2.2.3. Commodity
    Exchange Market, Rules, and Carbon Calculations Module To combine gamification
    with real-use cases, scientifically accepted and explainable measurement and counting
    systems are required. The system consists of different dimensions, and the formulas
    for the calculations vary from smart city to smart city, as do the MaaS services,
    even depending on the time zone. This module calculates the points and credits
    required for carbon trading, bartering, discounts and promotions, gamification
    points and rewards, free-to-use goods, and transactions for framework coin wallets.
    Since it is all about environmental sustainability and the framework focuses on
    emissions, a carbon credit is a unit of measurement used to quantify and reduce
    greenhouse gas emissions. Governments and businesses often use them to reduce
    carbon footprints and mitigate the negative effects of climate change. Carbon
    credits represent a reduction in carbon dioxide emissions or their equivalent
    in other greenhouse gasses. Carbon markets, such as the European Union Emissions
    Trading System (EU ETS) and the Chicago Climate Exchange (CCX), allow carbon credits
    to be bought and sold. The two main types of carbon credits are compliance credits
    and voluntary credits. Compliance credits are used by governments and companies
    to meet mandatory emission reduction targets. On the other hand, voluntary credits
    are purchased by individuals or organizations who wish to offset their own emissions
    or support emission reduction projects. Our framework offers both mandatory and
    voluntary credits. A voluntary carbon credit is a carbon emissions reduction credit
    that individuals or organizations purchase to offset their own carbon emissions
    and can be used for commodity exchange and gaming purposes in the system. The
    credits are not purchased to meet mandatory emissions reduction targets but to
    reduce an individual or organization carbon footprint or support sustainability
    initiatives in the system. Some examples of voluntary carbon credits in this module
    include renewable energy credits, such as for using electricity in MaaS systems;
    carbon offset credits, such as for switching from private vehicles to public transportation
    or zero-emission alternatives; verified carbon standard (VCS) credits provided
    by sponsors, municipalities, and government agencies in smart cities; and gold
    standard credits for meeting the highest standards for sustainability, environmental
    sustainability, and social and economic benefits for the smart city. On the other
    hand, carbon credits are used by governments, cities, and companies to meet mandatory
    emissions reduction targets. These are the shareholders of the system to benefit
    from the results and environmental sustainability of the system aimed at national
    or international agreements such as the Paris Agreement or other national or regional
    laws and regulations, such as credits from the European Union Emissions Trading
    System (EU ETS), credits from the Kyoto Protocol, credits from the Clean Development
    Mechanism (CDM), and credits from the Regional Greenhouse Gas Initiative (RGGI).
    2.2.4. System Core Integration Module The integration module integrates activities
    within a city and between shareholders, and the system is also used for national
    and international collaborations, as well as for the integration of sensors, data
    analytics, and the Internet of Things (IoT). It is a  fully managed protocol system
    that includes fail over approaches, real-time tracking and monitoring systems,
    relational database system integration for regular software engineering best practices,
    and blockchain implementations. This geo-redundant cloud-based architecture operates
    as a PaaS system with a hyper-converged approach. All smart city data center components
    are tightly integrated and optimized for collaboration and managed by a software
    platform framework. A hyper-integrated and hyper-convergent architecture enables
    easy scaling up or down as new cities, new activities, and new stakeholders want
    to collaborate, resources can be quickly and easily added or removed as requirements
    change. 2.2.5. Support Modules and Algorithms Enterprise-level ICT approaches
    are provided in the framework support modules. Examples include fraud detection
    and the introduction of greater enterprise level cybersecurity. Detecting fraud
    usually involves using advanced analytics and machine learning algorithms to analyze
    large volumes of data to find patterns, anomalies, and other indicators of fraud
    [93,94,95]. Especially in gamification and voluntary carbon credits, any fraudulent
    or dishonest activity should be detected within these modules. In addition, developing
    comprehensive cyber security strategies and practices is crucial to reducing cybersecurity
    risks, and protecting cities against cyberattacks and threats is crucial [96,97].
    2.3. The Formulation of Activities for Gamification and Smart Contracts The formulation
    of any activity for the gamification and smart contracts for the MaaS for a smart
    city is calculated by a multi-criteria and multi-objective function. This paper
    aims to propose a framework and module interoperability, so numerical values for
    computation parameters are not included as they may belong to other research studies.
    In spite of this, a case study section has been provided as an example of a calculation
    approach. All these parametric fields are not mandatory and can be flexibly evaluated
    or excluded for different purposes, goals, and cultures. It is quite normal that
    the goals and expectations of a tourist city and a city with industrial production
    are different in terms of sustainability. The activity credit value is then calculated
    using the following formulation; 𝑓(𝑥,𝐽𝑆𝑂𝑁𝑓𝑖𝑙𝑒)=( 𝐶 𝐵𝐴𝐴 + 𝐶 𝑉𝐶𝐶 + 𝐶 𝐶𝑆𝐼 + 𝐶 𝐶𝐸𝑃𝐼
    + 𝐶 𝐶𝐸𝑆𝐼 + 𝐶 𝐶𝑃𝑇𝐼 + 𝐶 𝐶𝐷𝐼 + 𝐶 𝐶𝑇𝐼 + 𝐶 𝐶𝐶𝐾𝐼 + 𝐶 𝑆𝐼 )𝑥+ 𝐶 𝐴𝑐𝑡𝑖𝑣𝑖𝑡𝑦 (1) Activity
    parameters are transferred in a JSON file. JSON (JavaScript Object Notation) is
    a lightweight data interchange format that is easy for humans to read and write
    and easy for machines to parse and generate. JSON data are represented as key-value
    pairs, where the keys are strings, and the values can be any valid JSON data type,
    such as a string, number, object, array, boolean, or null. The system offers to
    use JSON Schema for the application, a vocabulary that allows shareholders to
    validate JSON data against a defined set of rules for the system. JSON is used
    for transferring all the index and attribute values. 2.3.1. Activity-Specific
    Parameters x: This is an activity metering numerical values, such as distance,
    duration, time, carbon cost, etc. Since x is a required field, it is shown outside
    the JSON file. Normally, it will be transferred within the JSON. Base Activity
    Attribute (BAA): This is the multiplier measurement value for the calculation,
    such as the traffic intensity, weather status, temperature, and the time of day
    to use the system. Switching Index (SI): Switching costs for low-carbon products
    or services refer to the costs associated with switching to products or services
    with a lower carbon footprint. Learning costs for new products and services and
    fees or penalties are associated with terminating existing products and services,
    so citizens may need to be encouraged to leave their comfort zone. It is important
    to note that the costs associated with switching can be a significant barrier
    to adoption. This is especially true for individuals and organizations with an
    already high standard of living. The switching index is also required for the
    referral system in conjunction with the comfort level. Switching from a private
    car to crowded public transportation during rush hour should be different than
    switching from an e-bike to an e-scooter. Activity Constant Parameters: This is
    a specific activity related to the activity generated by sending all required
    information in a JSON to an integrated web API function. They include mplementing
    dynamic rules related to the activity, verifying that certain conditions are met,
    such as verifying the time of day, location zone, activity prior to the request,
    or image processing, by the rules engine that verifies that safety equipment and
    wearing reflective gear is visible on a selfie taken with the mobile application.
    2.3.2. City-Specific Parameters For metropolitan cities with high population and
    traffic activity, these data may be very high, but for coastal tourism cities
    with seasonal and seasonal visitors, they will be different. In a city with high
    carbon sequestration capacity and abundant trees and water resources, a net zero
    carbon target approach might differ from one in a fully built city. It is possible
    to support the user in using the system with different parameters depending on
    what kind of city they live in. City Specific Index (CSI): The multipliers for
    the city index constants are dynamic values for cities, city regions, time of
    activity, such as rush hour, and high-energy-demand time zones, weather, renewable
    energy production capacity, and similar indices to improve the adaptability and
    usability of the system. City Environmental and Pollution Index (CEPI): The index
    measures and evaluates a city’s environmental quality and sustainability, such
    as air and water quality, greenhouse gas emissions, waste management, air pollution,
    water pollution, noise pollution, and other environmental factors. Some examples
    of this index are the Air Quality Index, the Water Quality Index, and the Noise
    Pollution Index. City Environmental Sustainability Index (CESI): The index measures
    and evaluates the sustainability of a city, including economic and social factors.
    Some examples of this index are the Global Cities Index, the Arcadis Sustainable
    Cities Index, and the Green City Index. City Public Transportation Index (CPTI):
    The index measures and evaluates the quality and accessibility of public transportation
    in a city, such as the availability and reliability of different modes of transportation,
    the efficiency of the transportation system, and the level of service provided
    to users. The number of public transportation modes available, frequency of service,
    service area, number of trips provided for MaaS, speed and reliability of service,
    and customer satisfaction are measured. Some examples of this index are Transit
    Score and the Public Transport Accessibility Level (PTAL) Index. City Demography
    Index (CDI): The index measures and evaluates the characteristics of a city’s
    population, such as its size, age structure, racial and ethnic composition, and
    other demographic characteristics. Population size and density, age distribution,
    sex ratio, racial and ethnic diversity, income level, education level, and employment
    status are measured. Some examples of this index are the United Nations Development
    Program’s Human Development Index and the United States Census Bureau’s American
    Community Survey. City Technology Index (CTI): The index measures and evaluates
    the technological infrastructure and level of adoption in a city. It typically
    consists of a set of indicators that reflect the availability and use of different
    types of technology, such as broadband Internet, mobile coverage, and other digital
    technologies. Some examples of this index are the Broadband Quality Index and
    the Digital Capital Index. City Culture and Knowledge Index (CCKI): The index
    measures and evaluates the knowledge and cultural resources of a city. It usually
    consists of a set of indicators that reflect the availability and quality of educational
    and cultural facilities, as well as the level of cultural participation and engagement
    of the city’s population, reflecting its adaptability to the framework. Some examples
    of this index are the Global Cities Education Network Index and the Cultural Vitality
    Index. 2.3.3. Policy-Specific Credit Parameters Voluntary carbon credits (VCC):
    This is the multiplier for the credits that are constant for carbon credits for
    transactions as defined by local authorities, sponsors, and events. Compliance
    credits (CC): The transaction multiplier is set by the international and national
    authorities and company policies, such as withholding taxes or fees, salary promotions
    due to carsharing, and carsharing or cycling to work. An unfair advantage over
    other users can be gained by cheating, manipulating game mechanisms, or exploiting
    vulnerabilities in the system. To protect the system and the model, cheating should
    be avoided to improve the user experience. Recommendation systems (RS) filter
    out information and suggest items of interest to users based on their preferences
    for MaaS [98]. The framework also has a recommendation system that suggests different
    MaaS alternatives for citizen transportation needs. Depending on different activity
    types as mentioned below, the framework recommendation system offer alternatives
    to the users; Direct Activity: A direct activity includes mobility and transportation
    activities in the MaaS system. Direct activities can be organized as single activities
    or as a sequence of activities, such as starting mobility with public transportation,
    such as the subway, then transferring to a public bus, using an e-scooter, and
    finally walking to the destination. Indirect Activities: Indirect activities do
    not include physical contributions through transportation, but they do include
    education, sponsorship of events, volunteer tasks, participation in seminars,
    social media activities, and information gathering. Direct activities can be organized
    individually or in a sequence or mix of activities, such as participating in an
    online seminar on carbon footprint, posting sponsor or government events on social
    media, reading a QR code from a billboard, or participating in a sports activity
    within a month. Hybrid Activity: Hybrid activities consist of both direct and
    indirect activities in a sequence or mixed sequence. The recommender system algorithm
    is given in Algorithm 1. As be can seen from the algorithm, a constraint checker
    service is implemented before and after the selection of activities, which independently
    checks the rules, regulations, and principles. The system organizes hyper-integration
    with synchronized microservices within the system, as well as connection to service
    providers and shareholder cooperation services. For example, a discount for a
    service provided by the city, such as transportation, natural gas bill, property
    tax, or even a simple treatment from sponsors, can be organized, controlled, and
    distributed with these integrated systems. Algorithm 1: Activity Recommender System
    Require:  𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟        ▹ Constraints as time constraint, switch-over sacrifice
    constraint, max-min stops/changes etc. Require:  𝑗𝑠𝑜 𝑛 𝑎𝑑                              ▹
    Activity details as MaaS mobility sequence Require:  𝑗𝑠𝑜 𝑛 𝑢𝑠            ▹ User
    status as current location, demographics, targets, badges, campaigns etc. Require:  𝑡𝑦𝑝
    𝑒 𝑎𝑐𝑡𝑖𝑣𝑖𝑡𝑦                             ▹ 1: Direct, 2 : Indirect , 3 : Hybrid
    𝑐ℎ𝑒𝑐 𝑘 𝑒𝑛𝑢𝑚−𝑠𝑡𝑎𝑡𝑢𝑠 ←𝑓𝑎𝑙𝑠𝑒 𝑐𝑟𝑒𝑑𝑖 𝑡 𝑑𝑖𝑟𝑒𝑐𝑡 ←0 𝑐𝑟𝑒𝑑𝑖 𝑡 𝑖𝑛𝑑𝑖𝑟𝑒𝑐𝑡 ←0 if  𝑡𝑦𝑝 𝑒 𝑎𝑐𝑡𝑖𝑣𝑖𝑡𝑦
    =1 then     DirectCreditActivity( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 , 𝑗𝑠𝑜 𝑛 𝑎𝑑 , 𝑗𝑠𝑜 𝑛 𝑢𝑠 ) else if  𝑡𝑦𝑝
    𝑒 𝑎𝑐𝑡𝑖𝑣𝑖𝑡𝑦 =2 then     CheckConstraints( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 , 𝑗𝑠𝑜 𝑛 𝑎𝑑 , 𝑗𝑠𝑜 𝑛 𝑢𝑠 ) else
    if  𝑡𝑦𝑝 𝑒 𝑎𝑐𝑡𝑖𝑣𝑖𝑡𝑦 =3 then     HybridCreditActivity( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 , 𝑗𝑠𝑜 𝑛 𝑎𝑑 ,
    𝑗𝑠𝑜 𝑛 𝑢𝑠 ) end if procedure IndirectCreditActivity( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 , 𝑗𝑠𝑜 𝑛 𝑎𝑑 , 𝑗𝑠𝑜
    𝑛 𝑢𝑠 )     while  𝑐ℎ𝑒𝑐 𝑘 𝑒𝑛𝑢𝑚−𝑠𝑡𝑎𝑡𝑢𝑠 is true do         CheckConstraints( 𝑗𝑠𝑜
    𝑛 𝑐𝑛𝑠𝑡𝑟 )         𝑗𝑠𝑜𝑛 = 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 + 𝑗𝑠𝑜 𝑛 𝑎𝑑         𝑐𝑟𝑒𝑑𝑖 𝑡 𝑖𝑛𝑑𝑖𝑟𝑒𝑐𝑡 =APICall(
    𝑗𝑠𝑜𝑛 )         return  𝑐𝑟𝑒𝑑𝑖 𝑡 𝑖𝑛𝑑𝑖𝑟𝑒𝑐𝑡     end while end procedure procedure
    IndirectCreditActivity( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 , 𝑗𝑠𝑜 𝑛 𝑎𝑑 , 𝑗𝑠𝑜 𝑛 𝑢𝑠 )     while  𝑐ℎ𝑒𝑐 𝑘
    𝑒𝑛𝑢𝑚−𝑠𝑡𝑎𝑡𝑢𝑠 is true do         CheckConstraints( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 )         𝑗𝑠𝑜𝑛 =
    𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 + 𝑗𝑠𝑜 𝑛 𝑢𝑠         𝑐𝑟𝑒𝑑𝑖 𝑡 𝑖𝑛𝑑𝑖𝑟𝑒𝑐𝑡 =APICall( 𝑗𝑠𝑜𝑛 )         return  𝑐𝑟𝑒𝑑𝑖
    𝑡 𝑑𝑖𝑟𝑒𝑐𝑡     end while end procedure procedure HybridCreditActivity( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟
    , 𝑗𝑠𝑜 𝑛 𝑎𝑑 , 𝑗𝑠𝑜 𝑛 𝑢𝑠 )     while  𝑐ℎ𝑒𝑐 𝑘 𝑒𝑛𝑢𝑚−𝑠𝑡𝑎𝑡𝑢𝑠 is true do         CheckConstraints(
    𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 )         𝑗𝑠𝑜𝑛 = 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 + 𝑗𝑠𝑜 𝑛 𝑎𝑑 + 𝑗𝑠𝑜 𝑛 𝑢𝑠         𝑐𝑟𝑒𝑑𝑖 𝑡
    𝑖𝑛𝑑𝑖𝑟𝑒𝑐𝑡 =APICall( 𝑗𝑠𝑜𝑛 )         return  𝑐𝑟𝑒𝑑𝑖 𝑡 𝑑𝑖𝑟𝑒𝑐𝑡 + 𝑐𝑟𝑒𝑑𝑖 𝑡 𝑖𝑛𝑑𝑖𝑟𝑒𝑐𝑡     end
    while end procedure procedure CheckConstraints( 𝑗𝑠𝑜 𝑛 𝑐𝑛𝑠𝑡𝑟 )     ▹ for each constraint
    in the json check the status from hyper integration API’s, like time     if  𝑡
    𝑐𝑜𝑛𝑠𝑡𝑟𝑎𝑖𝑛𝑡 ≥ 𝑡 𝑒𝑠𝑡𝑖𝑚𝑎𝑡𝑒𝑑−𝑡𝑜−𝑐𝑜𝑚𝑝𝑙𝑒𝑡𝑒−𝑎𝑐𝑡𝑖𝑣𝑖𝑡𝑦  then  𝑐ℎ𝑒𝑐 𝑘 𝑒𝑛𝑢𝑚−𝑠𝑡𝑎𝑡𝑢𝑠 = false     else
    if  𝐭𝐡𝐞𝐧 𝑐ℎ𝑒𝑐 𝑘 𝑒𝑛𝑢𝑚−𝑠𝑡𝑎𝑡𝑢𝑠 = true     end if     return  𝑐ℎ𝑒𝑐 𝑘 𝑒𝑛𝑢𝑚−𝑠𝑡𝑎𝑡𝑢𝑠 end
    procedure procedure APICall( 𝑗𝑠𝑜𝑛 )     return Calculated Value JSON API end procedure
    Collaborative filtering, carbon footprint-based filtering, and hybrid approaches
    can be implemented in this module. Mobile and native web applications that simulate
    citizen locations, from and to destinations, time and other constraints, user
    preferences, habits, dynamic scoring and gamification approaches, bundled services,
    asset availabilities, value-added shareholder services and recommendations, and
    carbon calculations and present them to system users to choose between different
    MaaS alternatives. Service provider and shareholder back-office systems also provide
    a similar approach from their perspective to set rules, adjust constraints, and
    implement new alternatives. 3. Results and Case Study for the Framework The city
    of Istanbul, which has a suitable technological and communication infrastructure
    as well as alternative transportation options, is first and foremost necessary
    for the verification and successful functioning of this system. An adaptable,
    dynamic, environmentally sensitive potential user population that can utilize
    the proposed system is selected, as well as an individual who believes in smart
    city processes and has implemented projects in this regard. Istanbul is the fifth-largest
    city in the world, with more than 18 million residents, nearly 2 million students,
    and nearly 5 million vehicles. The economy of Istanbul surpasses that of more
    than 130 countries. The city has a variety of public transportation options, including
    the metro, railways, light rail, public buses, metro buses, sea buses, and ferries.
    In addition, there are three bridges over the Bosphorus channel and one underground
    tunnel. The city also offers city bikes, e-scooters, and shared car service providers,
    making it a good PoC proof of concept approach for MaaS. Currently, municipality
    transportation systems have a payment-only based MaaS infrastructure based on
    the Istanbul Metropolitan Municipality (IMM) RFID Card. However, this system is
    not connected to e-bike, taxi, and scooter rental companies [99]. As can be seen
    from Table 1 and the min/max normalized values of the data from Figure 3, traffic
    intensity affects air quality indicators and creates a cycle during the day. As
    part of the sustainable environment approach, more emission-free vehicles and
    transportation alternatives are sought to reduce traffic. The data are taken from
    the open data platform for June to August to exclude emissions caused by fossil-fuel-fired
    space and house heating and extra traffic caused by school services. Figure 3.
    Normalized air quality indicators and traffic intensity. Table 1. Air quality
    indicators and traffic density for Istanbul June–August 2022 for selected city
    center [100]. 3.1. Activity Switching Scenarios This section examines the possibility
    of providing alternative transportation as a service in the context of two sample
    activity chains. Among these scenarios, the first provides a viable plan for travel
    with a single person in a vehicle, which has the greatest impact on traffic congestion
    as well as emissions. In the second alternative, alternative transportation plans
    for a person who uses public transportation were evaluated. The basic indexes
    of the city will be the same in both scenarios. For the scenarios, 3 basic time
    spans are taken as can be easily seen in Figure 3 as morning rush hour 7–10, midday
    11–17, and afternoon rush hour 18–22 h. The zones can either be selected with
    more intermittent time spans or can be obtained directly from an open data service
    provided by the city, which is not the purpose and scope of this study. 3.1.1.
    Parameter Setting The parameters for calculating the activity credit are selected
    from fuzzy-like scale multipliers. In fuzzy domain scales, the multipliers are
    not numerical but consist of linguistic terms such as “very low”, “low”, “medium”,
    “high”, and “very high” for the city sustainability plans. The terms are not defined
    precisely but are meant to be interpreted by city decision makers understanding
    the city sustainability priority plans. Since the system is hyper-integrated and
    complex, such simplification is preferred for better implementation for a case
    study. Each multiplier is then normalized and adjusted according to the activity.
    However, as mentioned before, the system is not limited to using fuzzy-like scales;
    any numerical approach can be used in the system. 3.1.2. Switching Scenarios and
    Plans Table 2 shows a sample calculation for parameters. As mentioned, those values
    will be different based on the city, user, and policies. However, switching from
    a private car to public transportation can be offered as the highest impact parameters,
    but for the individuals already using public transportation, different supports
    and sponsor contributions may be required. The change in the comfort zone will
    not be the same for every citizen, such as voluntary carbon credits. Table 2.
    Switching scenarios and plans with sample parameters. 4. Conclusions Smart cities
    use information and communication technologies to improve the quality of life
    of their citizens by making the city more efficient, livable, and sustainable.
    Using renewable energy sources, promoting sustainable transportation, and implementing
    energy-efficient buildings will reduce greenhouse gas emissions and improve air
    quality in smart cities. This will improve the quality of life for citizens by
    providing better urban services, reducing congestion and pollution, and creating
    more livable and walkable neighborhoods. By demonstrating their commitment to
    sustainability and innovation, sustainable cities attract new business and investment,
    leading to economic development. In addition, smart cities can help reduce social
    inequality by giving all citizens equal access to urban services and public spaces.
    Mobility as a Service (MaaS) combines a variety of transportation services into
    a single, convenient package that can be accessed through a single platform, provider
    or cloud service. These include public transportation, subways and buses, ridesharing,
    bike-sharing, electric vehicles, carpooling, scooters, and other forms of alternative
    transportation within the urban transportation network. For daily needs, getting
    to work, school, and social events, MaaS makes getting around the city easier
    and more convenient. Thanks to Big Data analytics, machine learning, privacy-friendly
    computing, and boundary applications, MaaS can also reduce traffic congestion
    and air pollution, making efficient use of transportation resources. This study
    is also focused on developing a computational model for calculating the swapping,
    changing, and bartering activity that takes place in the MaaS ecosystem in order
    to calculate the amount of assets moving through the ecosystem. This paper presents
    a new Enterprise Architecture Framework and modules to achieve a high level of
    MaaS for smart cities from an environmental sustainability perspective. Dynamic,
    hyper-integrated ICT systems with microservices provide end-to-end solutions for
    all stakeholders. Gamification and blockchain infrastructure ensure system attractiveness,
    usability, traceability, and scalability through distributed implementation. As
    a novel outcome of this study, a computational model and a formulation is also
    proposed to calculate the activity exchange values in the MaaS ecosystem for real
    sustainable implementation for swapping, changing, and bartering for assets within
    the integrated system. The objective of future studies is to numerically analyze
    results that lead to the identification of the most effective preferences of individual
    behaviors in gamification processes to be applied to the given architecture. In
    addition, with the commissioning of the system as a pilot, it is intended to create
    Big Data on the transportation alternatives proposed by stakeholders in the ecosystem
    and the reasons for preference of these alternatives, as well as to create suggestions
    and gamification models specific to individuals with artificial intelligence algorithms,
    synthetic data, and simulation alternatives based on this data. In addition, the
    objective is to evaluate the numerical results related to the reduction of total
    carbon emissions with the most suitable estimation in MaaS processes using statistical
    models based on the data to be collected. Funding This research received no external
    funding. Planned to apply for EU project fundings for 2023 calls. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement The data and functional details presented in this
    study are available on request from the corresponding author. Acknowledgments
    This work and the research on which it is based would not have been possible without
    the extraordinary support of Sinem Altuncu, who assisted us throughout in developing
    the idea, developing business plans for the project, and finding potential partners
    with funding prospects, and her excellent team member Ahmet İşlemecioğlu from
    incentive supports, Uluer Sinici for full stack DevOps perspective, Busra Berfin
    Orhan for her young sprit in coding for mobile applications all from Paycore and
    Tugkan Tuglular for his support in blockchain module and implementations. Conflicts
    of Interest The author declares no conflict of interest. Sample Availability Samples
    of the framework coding and detailed technical details are available from the
    authors. Abbreviations The following abbreviations are used in this manuscript:
    CDM Clean Development Mechanism CCX Chicago Climate Exchange DoDAF Department
    of Defense Architecture Framework EA Enterprise Architecture EU European Union
    FEAF Federal Enterprise Architecture Framework JSON Java Script Object Notification
    ICT Information and Communication Technologies IMM Istanbul Metropolitan Municipality
    MaaS Mobility as a Service RFID Radio Frequency Identification Systems RGGI Regional
    Greenhouse Gas Initiative TOGAF The Open Group Architecture Framework VCS Verified
    Carbon Standard References Montzka, S.A.; Dlugokencky, E.J.; Butler, J.H. Non-CO2
    greenhouse gases and climate change. Nature 2011, 476, 43–50. [Google Scholar]
    [CrossRef] [PubMed] Crawford, R. Life Cycle Assessment in the Built Environment;
    Routledge: Abingdon-on-Thames, UK, 2011. [Google Scholar] Michener, W.K.; Blood,
    E.R.; Bildstein, K.L.; Brinson, M.M.; Gardner, L.R. Climate change, hurricanes
    and tropical storms, and rising sea level in coastal wetlands. Ecol. Appl. 1997,
    7, 770–801. [Google Scholar] [CrossRef] Pimentel, D.; Berger, B.; Filiberto, D.;
    Newton, M.; Wolfe, B.; Karabinakis, E.; Clark, S.; Poon, E.; Abbett, E.; Nandagopal,
    S. Water resources: Agricultural and environmental issues. BioScience 2004, 54,
    909–918. [Google Scholar] [CrossRef] [Green Version] Haines, A.; Kovats, R.S.;
    Campbell-Lendrum, D.; Corvalán, C. Climate change and human health: Impacts, vulnerability
    and public health. Public Health 2006, 120, 585–596. [Google Scholar] [CrossRef]
    World Health Organization. Climate Change and Human Health: Risks and Responses;
    World Health Organization: Geneva, Switzerland, 2003. [Google Scholar] Knowlton,
    K.; Sorensen, C.; Lemery, J. Global Climate Change and Human Health: From Science
    to Practice; John Wiley & Sons: Hoboken, NJ, USA, 2021. [Google Scholar] Patz,
    J.A.; Campbell-Lendrum, D.; Holloway, T.; Foley, J.A. Impact of regional climate
    change on human health. Nature 2005, 438, 310–317. [Google Scholar] [CrossRef]
    Goodland, R. The Concept of Environmental Sustainability. Annu. Rev. Ecol. Syst.
    1995, 26, 1–24. [Google Scholar] [CrossRef] Bernstein, L. Climate Change 2007;
    desLibris: Ottawa, ON, Canada, 2013. [Google Scholar] Chen, A.J.W.; Boudreau,
    M.; Watson, R.T. Information systems and ecological sustainability. J. Syst. Inf.
    Technol. 2008, 10, 186–201. [Google Scholar] [CrossRef] Dinan, T.M. Economic efficiency
    effects of alternative policies for reducing waste disposal. J. Environ. Econ.
    Manag. 1993, 25, 242–256. [Google Scholar] [CrossRef] Dearborn, D.C.; Kark, S.
    Motivations for conserving urban biodiversity. Conserv. Biol. 2010, 24, 432–440.
    [Google Scholar] [CrossRef] Coaffee, J. Risk, resilience, and environmentally
    sustainable cities. Energy Policy 2008, 36, 4633–4638. [Google Scholar] [CrossRef]
    Rusinko, C. Green manufacturing: An evaluation of environmentally sustainable
    manufacturing practices and their impact on competitive outcomes. IEEE Trans.
    Eng. Manag. 2007, 54, 445–454. [Google Scholar] [CrossRef] Batty, M.; Axhausen,
    K.W.; Giannotti, F.; Pozdnoukhov, A.; Bazzani, A.; Wachowicz, M.; Ouzounis, G.;
    Portugali, Y. Smart cities of the future. Eur. Phys. J. Spec. Top. 2012, 214,
    481–518. [Google Scholar] [CrossRef] [Green Version] Yin, C.; Xiong, Z.; Chen,
    H.; Wang, J.; Cooper, D.; David, B. A literature survey on smart cities. Sci.
    China Inf. Sci. 2015, 58, 1–18. [Google Scholar] [CrossRef] Bureau, L.A.C.C.A.;
    Division, L.A.C.C.A. Planning. In The State of the City Report: A Cluster Analysis
    of Los Angeles: A Report; Community Analysis Bureau: Los Angeles, CA, USA, 1974.
    [Google Scholar] Dashkevych, O.; Portnov, B.A. Criteria for Smart City Identification:
    A Systematic Literature Review. Sustainability 2022, 14, 4448. [Google Scholar]
    [CrossRef] Zheng, C.; Yuan, J.; Zhu, L.; Zhang, Y.; Shao, Q. From digital to sustainable:
    A scientometric review of smart city literature between 1990 and 2019. J. Clean.
    Prod. 2020, 258, 120689. [Google Scholar] [CrossRef] Hajek, P.; Youssef, A.; Hajkova,
    V. Recent developments in smart city assessment: A bibliometric and content analysis-based
    literature review. Cities 2022, 126, 103709. [Google Scholar] [CrossRef] Cocchia,
    A. Smart and digital city: A systematic literature review. Smart City: How to
    Create Public and Economic Value with High Technology in Urban Space; Springer:
    Berlin/Heidelberg, Germany, 2014; pp. 13–43. [Google Scholar] van Twist, A.; Ruijer,
    E.; Meijer, A. Smart cities & citizen discontent: A systematic review of the literature.
    Gov. Inf. Q. 2023, 101799. [Google Scholar] Stübinger, J.; Schneider, L. Understanding
    smart city—A data-driven literature review. Sustainability 2020, 12, 8460. [Google
    Scholar] [CrossRef] Anthopoulos, L.G. Understanding the smart city domain: A literature
    review. In Transforming City Governments for Successful Smart Cities; Springer:
    Berlin/Heidelberg, Germany, 2015; pp. 9–21. [Google Scholar] Ma, Z.; Wu, F. Smart
    City, Digitalization and CO2 Emissions: Evidence from 353 Cities in China. Sustainability
    2022, 15, 225. [Google Scholar] [CrossRef] Rao, S.K.; Prasad, R. Impact of 5G
    technologies on smart city implementation. Wirel. Pers. Commun. 2018, 100, 161–176.
    [Google Scholar] [CrossRef] Guevara, L.; Auat Cheein, F. The role of 5G technologies:
    Challenges in smart cities and intelligent transportation systems. Sustainability
    2020, 12, 6469. [Google Scholar] [CrossRef] Gohar, A.; Nencioni, G. The role of
    5G technologies in a smart city: The case for intelligent transportation system.
    Sustainability 2021, 13, 5188. [Google Scholar] [CrossRef] Theodoridis, E.; Mylonas,
    G.; Chatzigiannakis, I. Developing an iot smart city framework. In Proceedings
    of the 4th International Conference on Information, Intelligence, Systems and
    Applications (IISA), Piraeus, Greece, 10–12 July 2013; pp. 1–6. [Google Scholar]
    Kim, T.h.; Ramos, C.; Mohammed, S. Smart city and IoT. Future Gener. Comput. Syst.
    2017, 76, 159–162. [Google Scholar] [CrossRef] Ghazal, T.M.; Hasan, M.K.; Alshurideh,
    M.T.; Alzoubi, H.M.; Ahmad, M.; Akbar, S.S.; Al Kurdi, B.; Akour, I.A. IoT for
    smart cities: Machine learning approaches in smart healthcare—A review. Future
    Internet 2021, 13, 218. [Google Scholar] [CrossRef] Allam, Z.; Dhunny, Z.A. On
    big data, artificial intelligence and smart cities. Cities 2019, 89, 80–91. [Google
    Scholar] [CrossRef] Ullah, Z.; Al-Turjman, F.; Mostarda, L.; Gagliardi, R. Applications
    of artificial intelligence and machine learning in smart cities. Comput. Commun.
    2020, 154, 313–323. [Google Scholar] [CrossRef] Chen, Q.; Wang, W.; Wu, F.; De,
    S.; Wang, R.; Zhang, B.; Huang, X. A survey on an emerging area: Deep learning
    for smart city data. IEEE Trans. Emerg. Top. Comput. Intell. 2019, 3, 392–410.
    [Google Scholar] [CrossRef] [Green Version] Xie, J.; Tang, H.; Huang, T.; Yu,
    F.R.; Xie, R.; Liu, J.; Liu, Y. A survey of blockchain technology applied to smart
    cities: Research issues and challenges. IEEE Commun. Surv. Tutorials 2019, 21,
    2794–2830. [Google Scholar] [CrossRef] Biswas, K.; Muthukkumarasamy, V. Securing
    smart cities using blockchain technology. In Proceedings of the 2016 IEEE 18th
    International Conference on High Performance Computing and Communications; IEEE
    14th International Conference on Smart City; IEEE 2nd International Conference
    on Data Science and Systems (HPCC/SmartCity/DSS), Sydney, NSW, Australia, 12–14
    December 2016; pp. 1392–1393. [Google Scholar] Liu, Y.; Yang, C.; Jiang, L.; Xie,
    S.; Zhang, Y. Intelligent edge computing for IoT-based energy management in smart
    cities. IEEE Netw. 2019, 33, 111–117. [Google Scholar] [CrossRef] Strielkowski,
    W.; Veinbender, T.; Tvaronavičienė, M.; Lace, N. Economic efficiency and energy
    security of smart cities. Econ. Res.-Ekon. Istraživanja 2020, 33, 788–803. [Google
    Scholar] [CrossRef] Hietanen, S. Mobility as a Service. New Transp. Model 2014,
    12, 2–4. [Google Scholar] Caballini, C.; Corazza, M.V.; Costa, V.; Delponte, I.;
    Olivari, E. Assessing the Feasibility of MaaS: A Contribution from Three Italian
    Case Studies. Sustainability 2022, 14, 16743. [Google Scholar] [CrossRef] Martinčević,
    I.; Brlek, P.; Kačarević, N.D. Mobility as a Service (MaaS) as a Sustainability
    Concept for Tourist Destinations. Sustainability 2022, 14, 7512. [Google Scholar]
    [CrossRef] Kim, S.; Choo, S.; Choi, S.; Lee, H. What factors affect commuters’
    utility of choosing mobility as a service? An empirical evidence from seoul. Sustainability
    2021, 13, 9324. [Google Scholar] [CrossRef] Baldi, G.; Megaro, A.; Carrubbo, L.
    Small-Town Citizens’ Technology Acceptance of Smart and Sustainable City Development.
    Sustainability 2022, 15, 325. [Google Scholar] [CrossRef] Wilson, K.A.; Underwood,
    E.C.; Morrison, S.A.; Klausmeyer, K.R.; Murdoch, W.W.; Reyers, B.; Wardell-Johnson,
    G.; Marquet, P.A.; Rundel, P.W.; McBride, M.F. Conserving biodiversity efficiently:
    What to do, where, and when. PLoS Biol. 2007, 5, e223. [Google Scholar] [CrossRef]
    Mckenzie-Mohr, D. New ways to promote proenvironmental behavior: Promoting sustainable
    behavior: An introduction to community-based social marketing. J. Soc. Issues
    2000, 56, 543–554. [Google Scholar] [CrossRef] Owusu, P.A.; Asumadu-Sarkodie,
    S. A review of renewable energy sources, sustainability issues and climate change
    mitigation. Cogent Eng. 2016, 3, 1167990. [Google Scholar] [CrossRef] Beg, N.;
    Morlot, J.C.; Davidson, O.; Afrane-Okesse, Y.; Tyani, L.; Denton, F.; Sokona,
    Y.; Thomas, J.P.; La Rovere, E.L.; Parikh, J.K.; et al. Linkages between climate
    change and sustainable development. Clim. Policy 2002, 2, 129–144. [Google Scholar]
    [CrossRef] Chen, L.; Matloob, S.; Sunlei, Y.; Qalati, S.A.; Raza, A.; Limón, M.L.S.
    A Moderated–Mediated Model for Eco-Conscious Consumer Behavior. Sustainability
    2023, 15, 897. [Google Scholar] [CrossRef] Cronin, J.J.; Smith, J.S.; Gleim, M.R.;
    Ramirez, E.; Martinez, J.D. Green marketing strategies: An examination of stakeholders
    and the opportunities they present. J. Acad. Mark. Sci. 2011, 39, 158–174. [Google
    Scholar] [CrossRef] Almoussawi, Z.A.; Sarhed, J.N.; obay Saeed, M.; Ali, M.H.;
    Wafqan, H.M.; Abd Alhasan, S.A. Moderating The Role of Green Trust in The Relationship
    of Green Brand Positioning, Green Marketing, Green Production, and Green Consumer
    Value on Green Purchase Intention of University Students in Iraq. Transnatl. Mark.
    J. 2022, 10, 738–750. [Google Scholar] Lange, F.; Dewitte, S. Measuring pro-environmental
    behavior: Review and recommendations. J. Environ. Psychol. 2019, 63, 92–100. [Google
    Scholar] [CrossRef] Connell, K.Y.H. Internal and external barriers to eco-conscious
    apparel acquisition. Int. J. Consum. Stud. 2010, 34, 279–286. [Google Scholar]
    [CrossRef] Pastakia, A. Grassroots ecopreneurs: Change agents for a sustainable
    society. J. Organ. Change Manag. 1998, 11, 157–173. [Google Scholar] [CrossRef]
    Hameed, I.; Waris, I.; Amin ul Haq, M. Predicting eco-conscious consumer behavior
    using theory of planned behavior in Pakistan. Environ. Sci. Pollut. Res. 2019,
    26, 15535–15547. [Google Scholar] [CrossRef] [PubMed] Hadler, M.; Haller, M. Global
    activism and nationally driven recycling: The influence of world society and national
    contexts on public and private environmental behavior. Int. Sociol. 2011, 26,
    315–345. [Google Scholar] [CrossRef] Steg, L.; Vlek, C. Encouraging pro-environmental
    behaviour: An integrative review and research agenda. J. Environ. Psychol. 2009,
    29, 309–317. [Google Scholar] [CrossRef] Balzekiene, A.; Telesiene, A. Explaining
    Private and Public Sphere Personal Environmental Behaviour. Soc. Sci. 2012, 4,
    7–19. [Google Scholar] [CrossRef] Stern, P.C. Psychological dimensions of global
    environmental change. Annu. Rev. Psychol. 1992, 43, 269–302. [Google Scholar]
    [CrossRef] Stren, P.C. Toward a coherent theory of environmentally significant
    behaviour. J. Soc. Issues 2000, 56, 407–424. [Google Scholar] [CrossRef] Ertz,
    M.; Karakas, F.; Sarigöllü, E. Exploring pro-environmental behaviors of consumers:
    An analysis of contextual factors, attitude, and behaviors. J. Bus. Res. 2016,
    69, 3971–3980. [Google Scholar] [CrossRef] [Green Version] Farrow, K.; Grolleau,
    G.; Ibanez, L. Social norms and pro-environmental behavior: A review of the evidence.
    Ecol. Econ. 2017, 140, 1–13. [Google Scholar] [CrossRef] Dandashi, F.; Siegers,
    R.; Jones, J.; Blevins, T. The Open Group Architecture Framework (TOGAF) and the
    US Department of Defense Architecture Framework (DoDAF); Technical Report; The
    Open Group: San Francisco, CA, USA, 2006. [Google Scholar] Kotusev, S. A comparison
    of the top four enterprise architecture frameworks. British Computer Society (BCS)
    2020. Available online: https://www.bcs.org/articles-opinion-and-research/a-comparison-of-the-top-four-enterprise-architecture-frameworks/
    (accessed on 20 January 2023). Zachman, J.A. A framework for information systems
    architecture. IBM Syst. J. 1987, 26, 276–292. [Google Scholar] [CrossRef] Chief
    Information Officers Council. Federal Enterprise Architecture Framework Version
    1.1; Chief Information Officers Council: Washington, DC, USA, 1999; Volume 80,
    pp. 1–3. DoD Architecture Framework Working Group. DoD Architecture Framework
    Version 1.0, Volume I: Definitions and Guidelines; Department of Defense: Washington,
    DC, USA, 2004. Kotusev, S. TOGAF Version 9.2: What’s New. British Computer Society
    (BCS) 2020. Available online: https://www.bcs.org/articles-opinion-and-research/togaf-version-92-whats-new/
    (accessed on 20 January 2023). Xing, Y.; Li, M.; Liao, Y. Trust, Identity, and
    Public-Sphere Pro-environmental Behavior in China: An Extended Attitude-Behavior-Context
    Theory. Front. Psychol. 2022, 13, 919578. [Google Scholar] [CrossRef] Thomas,
    C.; Sharp, V. Understanding the normalisation of recycling behaviour and its implications
    for other pro-environmental behaviours: A review of social norms and recycling.
    Resour. Conserv. Recycl. 2013, 79, 11–20. [Google Scholar] [CrossRef] Karp, D.G.
    Values and their effect on pro-environmental behavior. Environ. Behav. 1996, 28,
    111–133. [Google Scholar] [CrossRef] Schultz, P.; Kaiser, F.G. Promoting pro-environmental
    behavior. In The Oxford Handbook of Environmental and Conservation Psychology;
    Oxford University Press: Oxford, UK, 2012. [Google Scholar] Turaga, R.M.R.; Howarth,
    R.B.; Borsuk, M.E. Pro-environmental behavior: Rational choice meets moral motivation.
    Ann. N. Y. Acad. Sci. 2010, 1185, 211–224. [Google Scholar] [CrossRef] [PubMed]
    Kronrod, A.; Tchetchik, A.; Grinstein, A.; Turgeman, L.; Blass, V. Promoting new
    pro-environmental behaviors: The effect of combining encouraging and discouraging
    messages. J. Environ. Psychol. 2023, 86, 101945. [Google Scholar] [CrossRef] Seaborn,
    K.; Fels, D.I. Gamification in theory and action: A survey. Int. J. Hum.-Comput.
    Stud. 2015, 74, 14–31. [Google Scholar] [CrossRef] Sailer, M.; Hense, J.; Mandl,
    J.; Klevers, M. Psychological perspectives on motivation through gamification.
    Interact. Des. Archit. J. 2014, 28–37. [Google Scholar] Pérez-Muñoz, S.; Sánchez
    Muñoz, A.; De Mena Ramos, J.M.; Rodríguez-Cayetano, A. Mario and Sonic at the
    Olympic Games: Effect of Gamification on Future Physical Education Teachers. Appl.
    Sci. 2022, 12, 9459. [Google Scholar] [CrossRef] Chaldogeridis, A.; Tsiatsos,
    T. Gamification Techniques and Best Practices in Computerized Working Memory Training:
    A Systematic Literature Review. Appl. Sci. 2022, 12, 9785. [Google Scholar] [CrossRef]
    Harwood, T.; Garry, T. An investigation into gamification as a customer engagement
    experience environment. J. Serv. Mark. 2015, 29, 533–546. [Google Scholar] [CrossRef]
    54 Gamification Statistics You Must Know: 2023 Market Share Analysis & Data. Available
    online: https://financesonline.com/gamification-statistics/ (accessed on 20 January
    2023). Gamification Market Growth Drivers & Opportunities. Markets and Markets.
    Available online: https://www.marketsandmarkets.com/Market-Reports/gamification-market-991.html
    (accessed on 20 January 2023). Harville, B. How You Win Big With Gamification
    in Marketing? Optinmonster 2020. Available online: https://optinmonster.com/gamification-in-marketing/
    (accessed on 20 January 2023). Gamification Market Analysis—Industry Report—Trends,
    Size & Share. Available online: https://www.mordorintelligence.com/industry-reports/gamification-market
    (accessed on 20 January 2023). Apostolopoulos, A. Gamification at Work: The 2019
    Survey Results; Talentlms: San Francisco, CA, USA, 2019. [Google Scholar] Yaga,
    D.; Mell, P.; Roby, N.; Scarfone, K. Blockchain technology overview. arXiv 2019,
    arXiv:1906.11078. [Google Scholar] Nakamoto, S. Bitcoin: A peer-to-peer electronic
    cash system. Decentralized Bus. Rev. 2008, 21260. [Google Scholar] Guo, Y.; Liang,
    C. Blockchain application and outlook in the banking industry. Financ. Innov.
    2016, 2, 24. [Google Scholar] [CrossRef] [Green Version] Mettler, M. Blockchain
    technology in healthcare: The revolution starts here. In Proceedings of the 2016
    IEEE 18th International Conference on e-Health Networking, Applications and Services
    (Healthcom), Munich, Germany, 14–17 September 2016; pp. 1–3. [Google Scholar]
    Sharples, M.; Domingue, J. The blockchain and kudos: A distributed system for
    educational record, reputation and reward. In Proceedings of the European Conference
    on Technology Enhanced Learning, Toulouse, France, 12–16 September 2016; pp. 490–496.
    [Google Scholar] Mohanta, B.K.; Panda, S.S.; Jena, D. An overview of smart contract
    and use cases in blockchain technology. In Proceedings of the 2018 9th International
    Conference on Computing, Communication and Networking Technologies (ICCCNT), Bengaluru,
    India, 10–12 July 2018; pp. 1–4. [Google Scholar] Watanabe, H.; Fujimura, S.;
    Nakadaira, A.; Miyazaki, Y.; Akutsu, A.; Kishigami, J. Blockchain contract: Securing
    a blockchain applied to smart contracts. In Proceedings of the 2016 IEEE International
    Conference on Consumer Electronics (ICCE), Las Vegas, NV, USA, 7–11 January 2016;
    pp. 467–468. [Google Scholar] Montes, J.M.; Ramirez, C.E.; Gutierrez, M.C.; Larios,
    V.M. Smart Contracts for supply chain applicable to Smart Cities daily operations.
    In Proceedings of the 2019 IEEE International Smart Cities Conference (ISC2),
    Casablanca, Morocco, 14–17 October 2019; pp. 565–570. [Google Scholar] Kou, Y.;
    Lu, C.T.; Sirwongwattana, S.; Huang, Y.P. Survey of fraud detection techniques.
    In Proceedings of the IEEE International Conference on Networking, Sensing and
    Control, Taipei, Taiwan, 21–23 March 2004; Volume 2, pp. 749–754. [Google Scholar]
    Bolton, R.J.; Hand, D.J. Statistical fraud detection: A review. Stat. Sci. 2002,
    17, 235–255. [Google Scholar] [CrossRef] Sadiq, A.S.; Faris, H.; Ala’M, A.Z.;
    Mirjalili, S.; Ghafoor, K.Z. Fraud detection model based on multi-verse features
    extraction approach for smart city applications. In Smart Cities Cybersecurity
    and Privacy; Elsevier: Amsterdam, The Netherlands, 2019; pp. 241–251. [Google
    Scholar] Habibzadeh, H.; Nussbaum, B.H.; Anjomshoa, F.; Kantarci, B.; Soyata,
    T. A survey on cybersecurity, data privacy, and policy issues in cyber-physical
    system deployments in smart cities. Sustain. Cities Soc. 2019, 50, 101660. [Google
    Scholar] [CrossRef] Baig, Z.A.; Szewczyk, P.; Valli, C.; Rabadia, P.; Hannay,
    P.; Chernyshev, M.; Johnstone, M.; Kerai, P.; Ibrahim, A.; Sansurooah, K.; et
    al. Future challenges for smart cities: Cyber-security and digital forensics.
    Digit. Investig. 2017, 22, 3–13. [Google Scholar] [CrossRef] Arnaoutaki, K.; Bothos,
    E.; Magoutas, B.; Aba, A.; Esztergár-Kiss, D.; Mentzas, G. A recommender system
    for mobility-as-a-service plans selection. Sustainability 2021, 13, 8245. [Google
    Scholar] [CrossRef] Turkish Statistical Institute Web Site. Available online:
    https://www.tuik.gov.tr/ (accessed on 20 January 2023). Open Data Portal for Istanbul’s
    Municipality. Available online: https://https://data.ibb.gov.tr/en/ (accessed
    on 20 January 2023). Disclaimer/Publisher’s Note: The statements, opinions and
    data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2023 by
    the author. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Ozpinar, A. A Hyper-Integrated Mobility as a Service (MaaS)
    to Gamification and Carbon Market Enterprise Architecture Framework for Sustainable
    Environment. Energies 2023, 16, 2480. https://doi.org/10.3390/en16052480 AMA Style
    Ozpinar A. A Hyper-Integrated Mobility as a Service (MaaS) to Gamification and
    Carbon Market Enterprise Architecture Framework for Sustainable Environment. Energies.
    2023; 16(5):2480. https://doi.org/10.3390/en16052480 Chicago/Turabian Style Ozpinar,
    Alper. 2023. \"A Hyper-Integrated Mobility as a Service (MaaS) to Gamification
    and Carbon Market Enterprise Architecture Framework for Sustainable Environment\"
    Energies 16, no. 5: 2480. https://doi.org/10.3390/en16052480 Note that from the
    first issue of 2016, this journal uses article numbers instead of page numbers.
    See further details here. Article Metrics Citations Crossref   3 Scopus   3 Web
    of Science   2 Google Scholar   [click to view] Article Access Statistics Article
    access statistics Article Views 6. Jan 16. Jan 26. Jan 5. Feb 15. Feb 25. Feb
    6. Mar 16. Mar 26. Mar 0k 1k 2k 3k For more information on the journal statistics,
    click here. Multiple requests from the same IP address are counted as one view.   Energies,
    EISSN 1996-1073, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Energies
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Hyper-Integrated Mobility as a Service (MaaS) to Gamification and Carbon
    Market Enterprise Architecture Framework for Sustainable Environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Senoo E.E.K.
  - Akansah E.
  - Mendonça I.
  - Aritsugi M.
  citation_count: '6'
  description: To mitigate the effects of the lack of IoT standardization, including
    scalability, reusability, and interoperability, we propose a domain-agnostic monitoring
    and control framework (MCF) for the design and implementation of Internet of Things
    (IoT) systems. We created building blocks for the layers of the five-layer IoT
    architecture and built the MCF’s subsystems (monitoring subsystem, control subsystem,
    and computing subsystem). We demonstrated the utilization of MCF in a real-world
    use-case in smart agriculture, using off-the-shelf sensors and actuators and an
    open-source code. As a user guide, we discuss the necessary considerations for
    each subsystem and evaluate our framework in terms of its scalability, reusability,
    and interoperability (issues that are often overlooked during development). Aside
    from the freedom to choose the hardware used to build complete open-source IoT
    solutions, the MCF use-case was less expensive, as revealed by a cost analysis
    that compared the cost of implementing the system using the MCF to obtain commercial
    solutions. Our MCF is shown to cost up to 20 times less than normal solutions,
    while serving its purpose. We believe that the MCF eliminated the domain restriction
    found in many IoT frameworks and serves as a first step toward IoT standardization.
    Our framework was shown to be stable in real-world applications, with the code
    not incurring a significant increase in power utilization, and could be operated
    using common rechargeable batteries and a solar panel. In fact, our code consumed
    so little power that the usual amount of energy was two times higher than what
    is necessary to keep the batteries full. We also show that the data provided by
    our framework are reliable through the use of multiple different sensors operating
    in parallel and sending similar data at a stable rate, without significant differences
    between the readings. Lastly, the elements of our framework can exchange data
    in a stable way with very few package losses, being able to read over 1.5 million
    data points in the course of three months.
  doi: 10.3390/s23052714
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 5 10.3390/s23052714 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Ivan Andonovic
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 2887 Citations 6 Table of Contents Abstract Introduction Background
    MCF Conceptualization Monitoring and Control Framework Implementation Case Study
    of the Framework in Smart Agriculture Discussion Conclusions and Future Work Author
    Contributions Funding Institutional Review Board Statement Informed Consent Statement
    Data Availability Statement Acknowledgments Conflicts of Interest Abbreviations
    References Altmetric share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessArticle Monitoring and Control Framework for IoT,
    Implemented for Smart Agriculture by Elisha Elikem Kofi Senoo 1, Ebenezer Akansah
    1, Israel Mendonça 2 and Masayoshi Aritsugi 2,* 1 Graduate School of Science and
    Technology, Kumamoto University, Kumamoto 860-8555, Japan 2 Faculty of Advanced
    Science and Technology, Kumamoto University, Kumamoto 860-8555, Japan * Author
    to whom correspondence should be addressed. Sensors 2023, 23(5), 2714; https://doi.org/10.3390/s23052714
    Submission received: 3 January 2023 / Revised: 9 February 2023 / Accepted: 27
    February 2023 / Published: 1 March 2023 (This article belongs to the Special Issue
    Smart Sensors, Sensing Applications and IoT Instrumentation) Download keyboard_arrow_down     Browse
    Figures Review Reports Versions Notes Abstract To mitigate the effects of the
    lack of IoT standardization, including scalability, reusability, and interoperability,
    we propose a domain-agnostic monitoring and control framework (MCF) for the design
    and implementation of Internet of Things (IoT) systems. We created building blocks
    for the layers of the five-layer IoT architecture and built the MCF’s subsystems
    (monitoring subsystem, control subsystem, and computing subsystem). We demonstrated
    the utilization of MCF in a real-world use-case in smart agriculture, using off-the-shelf
    sensors and actuators and an open-source code. As a user guide, we discuss the
    necessary considerations for each subsystem and evaluate our framework in terms
    of its scalability, reusability, and interoperability (issues that are often overlooked
    during development). Aside from the freedom to choose the hardware used to build
    complete open-source IoT solutions, the MCF use-case was less expensive, as revealed
    by a cost analysis that compared the cost of implementing the system using the
    MCF to obtain commercial solutions. Our MCF is shown to cost up to 20 times less
    than normal solutions, while serving its purpose. We believe that the MCF eliminated
    the domain restriction found in many IoT frameworks and serves as a first step
    toward IoT standardization. Our framework was shown to be stable in real-world
    applications, with the code not incurring a significant increase in power utilization,
    and could be operated using common rechargeable batteries and a solar panel. In
    fact, our code consumed so little power that the usual amount of energy was two
    times higher than what is necessary to keep the batteries full. We also show that
    the data provided by our framework are reliable through the use of multiple different
    sensors operating in parallel and sending similar data at a stable rate, without
    significant differences between the readings. Lastly, the elements of our framework
    can exchange data in a stable way with very few package losses, being able to
    read over 1.5 million data points in the course of three months. Keywords: Internet
    of Things (IoT); open-source; IoT architecture; smart agriculture; monitoring;
    control; framework; domain-agnostic; sensors; actuators 1. Introduction The Internet
    of Things (IoT) has the potential to transform a wide range of industries, including
    agriculture, healthcare, and transportation. It is said that it will transform
    different fields such as healthcare [1,2,3], education [4], transportation [5],
    security [6,7], finance [8,9], agriculture [10,11], and manufacturing [12]. It
    provides an opportunity for human-to-machine and machine-to-machine interaction
    [13,14] and is expected to become more common in modern society as the technology
    continues to be adopted more and more, and it is expected to reach about 75 billion
    devices by 2025 [15]. A typical IoT system describes a network of sensors and
    actuators that are either directly connected to cloud services or to edge devices
    that may be connected to the cloud [16,17,18]. The sensors perform monitoring
    by collecting data related to phenomena of interest, and actuators execute the
    control function, causing changes in the controlled devices. Different domains
    require different types of sensors and other devices to collect data on various
    aspects of the environment or system being monitored, such as soil moisture in
    agriculture, patient vital signs in healthcare, or vehicle localization in transportation
    [19,20,21]. These data are then analyzed and used to optimize various activities
    or processes, such as irrigation in agriculture, patient care in healthcare, or
    fleet management in transportation [20,21,22]. The organization of devices such
    as sensors, actuators, edge devices, cloud services, protocols, and layers that
    constitute IoT networking systems are referred to as the architecture [23]. IoT
    architecture is crucial to delivering desired services. Researchers have suggested
    multiple IoT architectures in response to a number of challenges, including interoperability,
    security and privacy, dependability, energy limitations, scalability, and the
    lack of universal standards [23]. According to Gupta et al. [24], the four major
    elements of the IoT environment are physical devices, interconnectivity, real-time
    applications, and operating platforms. These elements of the IoT environment have
    seen major advancements in technologies, protocols, and standards. Xu et al. [25]
    state that the success of IoT can be attributed to the advancements being made
    in many related technologies, including communication efficiency and the energy
    efficiency of devices, which have improved over the years. Gupta et al. [24] also
    state that, although these technologies, protocols, and standards are the main
    forces behind the expansion of the Internet of Things, they present new challenges
    to its integration with the traditional Internet framework and network scaling,
    in addition to problems unique to IoT, such as device heterogeneity and ambiguities
    in its framework standardization. The adoption of full-stack development solutions
    for the Internet of Things is still in its early stages; thus, there are challenges
    that must be overcome. As expected of any technology, the increase in interest,
    and its adoption without widely accepted standards, has led to a fragmented ecosystem,
    which makes the interoperability of systems challenging. The increasing participation
    of people and institutions has contributed to the fast growth in IoT, and the
    diversity of the multitude of contributions has created an environment in which
    many systems operate as standalone systems without interoperability or shared
    resources. Additionally, teams need to always be concerned with all aspects of
    the system that are being developed (electronics, hardware programming, communication,
    data management, and security), or bring together a host of subsystems and convince
    them to work together. For instance, the building of sensor networks takes a lot
    of time and resources. There are only a few open-source methods for integrating
    various devices and sensory modalities, making it challenging to expand on prior
    work [26]. In response, researchers have suggested IoT designs based on the use
    of various architectural layers and cutting-edge technologies for the end-to-end
    integration of IoT systems [26]. However, the existing solutions present many
    challenges, such as: interoperability [27,28], scalability [23,29], and complexity
    in customization and extension [23]. To address these challenges, we proposed
    the monitoring and control framework (MCF), a conceptual structure for the design
    and implementation of IoT projects in multiple domains. MCF utilizes a five-layer
    IoT architecture reference model, focusing on scalability, security, and interoperability.
    We have released our code for use, and to obtain open-source contributions from
    the IoT community, at https://github.com/dbms-ku/iot-mcf (2 January 2023). We
    demonstrate the effectiveness of the framework through its implementation in a
    case study looking at one of the targeted domains: smart agriculture. Our results
    show that MCF is a valuable tool for ensuring the success of IoT projects in a
    variety of industries. Our contributions can be summarized as follows: We propose
    an end-to-end IoT solution to monitor diverse phenomena using sensors. Our solution
    has extensibility, scalability, and interoperability as its main advantages, and
    allows for users to easily create and tailor our solutions to their needs; Our
    solution parts from the principle that the user wants to start his project straight
    away, providing the tools for a rapid prototyping, construction, and testing;
    Our solution is focused on using commercial, off-the-shelf products, which makes
    it much cheaper than commercially available systems. A price comparison with common
    solutions is provided; We provide an open-source code for our framework so that
    the user can use it as necessary; We describe our real-world use-case and provide
    some steps for the utilization of our framework. The remainder of this paper is
    organized as follows: the next section, Section 2, presents a review of the relevant
    literature on the existing frameworks for the Internet of Things (IoT), as well
    as the motivation, objective, and scope of this work. Section 3 discusses the
    five-layer architecture that forms the foundation of our framework and provides
    a conceptualization of the monitoring and control framework (MCF). Section 4 provides
    a detailed overview of the problems that users often find in IoT systems and how
    they are addressed using the MCF. Section 5 describes the MCF’s deployment in
    a smart agriculture monitoring system. Section 6 presents a discussion of the
    results and implications of our implementation. The final section, Section 7 summarizes
    the key points of the paper and highlights future research directions. 2. Background
    Before introducing our framework, we establish a parallel between our work and
    the related works in Section 2.1. We then explain the motivations that led us
    to develop the framework in Section 2.2. We finish this section by stating the
    objectives and scope of this work in Section 2.3. 2.1. Related Work IoT adoption
    has consistently grown over the years, with many authors noting its use in the
    provision of solutions across various industries [3,16,26,30,31]. As such, the
    development of IoT architectures and related frameworks remains an important topic
    of study. There are recognized challenges in the adoption of solutions, such as
    concerns regarding a lack of standardization [17,32], connectivity issues [28],
    and security and privacy [33,34]. Palit [35], Kakkar et al. [36], and Mirani et
    al. [26] provide overviews of the various IoT architecture frameworks, including
    their components and functionalities, further corroborating these challenges.
    Various researchers have developed application-specific architectures for IoT
    [37]. Many of these architectures are domain-specific, with a few of them being
    used for multiple domains. Khaoula et al., propose an architecture for an aquaponics
    system powered by solar energy [38], Quy et al. [39] and Aivaliotis et al. [40]
    propose an architecture for healthcare, Kniess et al. [41] and Salazar-Cabrera
    et al. [42] propose an architecture for transportation, and Coito et al. [43]
    and Voicu et al. [44] propose an architecture for industry. Despite the great
    results that were achieved in these works, they are all domain-specific and not
    applicable to other domains, or they require extensive modifications to be applied
    to other domains. This makes the integration of different solutions difficult.
    Konduru et al. [45] clearly states that IoT has potential regarding the building
    of cross-domain IoT frameworks and tools, which will allow for new and unanticipated
    applications and value-added services. In this regard, there have been works proposing
    cross-domain architectures. Trakadas et al. [46] proposed a domain-agnostic reference
    architecture that is capable of supporting heterogeneous devices in various network
    environments. Similarly, Sun et al. [47] and Neto et al. [48] propose architectures
    for cross-domain-sharing capabilities. However, these and many of the other proposed
    cross-domain and domain-agnostic architectures do not provide end-to-end implementation
    assistance in terms of software code. The focus of IoT frameworks, however, is
    addressing challenges in specific IoT domains [49]. As a result, there are major
    inadequacies in the literature and practice in terms of framework architectures
    that are both domain-agnostic and present an implementation code. To answer this,
    some authors propose domain-agnostic IoT architecture frameworks with code. Piadyk
    et al. [50] introduce a reconfigurable environmental intelligence platform (REIP)
    for fast sensor prototyping, providing a software framework that can be implemented
    in Python. REIP provides an SDK that includes dozens of blocks for commonly required
    tasks such as data acquisition, processing, and storage. REIP SDK is presented
    to alleviate the engineering burden of implementing sensor networks. However,
    REIP requires the sensing device to connect directly to the cloud, which is not
    feasible in locations with poor or no internet coverage. REIP also does not provide
    for IoT systems that control actuators in addition to monitoring. The requirement
    that sensing devices connect to the cloud, and the lack of support for control
    through actuators are common features of the multi-domain architectures that provide
    a software framework, as observed with the Signpost Platform [51] and SensorCentral
    [52]. Cloete et al. [53] propose a system architecture for sensing and control
    without an end-to-end software framework for quick prototyping. To the best of
    our knowledge, there is no domain-agnostic IoT architecture for both monitoring
    and control, with a software framework that is suitable for implementation in
    locations without internet coverage. Therefore, we propose a monitoring and control
    framework that is domain-agnostic and has subsystems for both monitoring and control,
    as well as a computing subsystem that is self-sufficient without connecting to
    the internet, making our framework suitable for locations without internet coverage.
    The MS and CTS of the MCF connect to CPS, which can optionally connect to the
    internet, reducing the entire system’s exposure to the public internet for enhanced
    security. Our framework is a first step toward the domain-agnostic standardization
    of shelf sensors. We follow the two standardization strategies proposed by Motlagh
    et al. [29]: First, we define systems using a shared understanding to enable equitable
    access and usage by all stakeholders. Secondly, we create open information models,
    architectures, and protocols for the standards that are freely and publicly available.
    Our proposed end-to-end IoT monitoring and control framework and implementation
    code provides the building blocks used to create IoT architectures and can be
    used in a wide range of scenarios, regardless of the domain. 2.2. Motivation The
    MCF was created to address IoT challenges such as scalability, lack of standardization,
    connectivity, reusability, and security and privacy. The MCF seeks to provide
    a domain-agnostic solution to these challenges to address the lack of standardization
    and encourage reusability. 2.3. Objective and Scope The objective of this study
    is to design and develop the MCF to improve the scalability, interoperability,
    and security of IoT projects in a domain-agnostic manner while reducing development
    and maintenance costs. The MCF aims to provide an end-to-end solution for monitoring
    and control in IoT. The scope of the MCF includes the design and implementation
    of the monitoring subsystem, control subsystem, and computing subsystem, which
    work together to collect and process data and control devices. The MCF provides
    a flexible and extensible architecture, allowing for it to be adapted to a wide
    range of applications and domains. The MCF is also accompanied by a code for implementation,
    to speed up development and reduce the associated costs. 3. MCF Conceptualization
    Several different reference models and architectures have been proposed for the
    Internet of Things (IoT) by different organizations, such as CREATE-IoT [54],
    OneM2M [55], IoT-A [56], and FIWARE [57]. These models differ in the number of
    layers and their respective functions, with the most common being the three-layer,
    five-layer, and seven-layer IoT architectures. The three-layer IoT architecture
    consists of the following layers [27,58]: Perception/Sensing Layer (PSL): This
    layer includes the physical devices and sensors that collect and transmit data
    from the physical world; Transportation/Network Layer (TNL): This layer includes
    the communication infrastructure that connects the devices and sensors to the
    platform and enables data transmission; Application Layer (APL): This layer includes
    the applications and services that run on top of the IoT platform and enable users
    to interact with the devices and sensor data. The five-layer IoT architecture
    adds two additional layers to the three-layer model: Perception/Sensing Layer
    (PSL): This layer has the same functionality as the three-layer model; Transportation/Network
    Layer (TNL): This layer includes the hardware and software infrastructure that
    supports the IoT devices and sensors, as well as the communication protocols and
    data management systems; Middleware/Processing Layer (MPL): This layer includes
    the software and services that provide functionalities such as data analytics
    and visualization; Application Layer (APL): This layer has the same functionality
    as the three-layer model; Business Layer (BSL): This layer includes the business
    processes and applications that leverage the data and services provided by the
    IoT platform to achieve business objectives. The seven-layer IoT architecture
    adds two additional layers to the five-layer model: Physical Devices and Controllers
    Layer: This layer includes the physical devices and sensors that collect and transmit
    data from the physical world; Connectivity Layer: This layer includes the hardware
    and software infrastructure that enables the devices and sensors to communicate
    with each other and with the rest of the IoT system; Edge Computing Layer: This
    layer includes the hardware and software infrastructure that supports edge computing,
    which refers to the processing of data at or near the source of data generation
    rather than in a centralized location; Data Accumulation Layer: This layer includes
    the data storage and management systems that store and process the data collected
    by the devices and sensors; Data Abstraction Layer: This layer includes the software
    and services that provide functionalities such as data analytics and visualization;
    Application Layer (APL); Collaboration and Processing Layer: This layer includes
    the business processes and applications that leverage the data and services provided
    by the IoT platform to achieve business objectives. In Figure 1, the layers are
    arranged from top to bottom depending on how close or far each layer is from the
    human level or the hardware level. Each of these reference models has its own
    strengths and weaknesses, and organizations may choose to adopt a particular model
    based on their specific needs and requirements. The five-layer IoT architecture
    reference model provides a middle ground that expands on the functionalities of
    the three-layer model, while adequately covering the granularity of the seven-layer
    model [27]. Thus, the five-layer IoT architecture is used as a base reference
    model to streamline the functionality of the MCF by carefully considering the
    responsibilities of each layer of the reference model. This approach ensures that
    our proposed framework provides a holistic implementation, which is capable of
    being deployed as a complete IoT system. In the following subsections, we will
    describe the types of solutions provided by our framework to solve common problems
    with each layer. Figure 1. IoT architectures commonly discussed in the literature.
    The three-layer IoT architecture, five-layer IoT architecture, and seven-layer
    IoT architecture are the most commonly discussed IoT architectures in the literature.
    3.1. Perception/Sensing Layer (PSL) The Perception/Sensing Layer, also known as
    the device layer, is the lowest layer in the IoT architecture. This layer is responsible
    for generating and collecting data using sensors, as well as affecting change
    in the environment or in systems with the use of actuators. Sensors are devices
    that detect changes in a physical property (such as temperature, pressure, or
    light) and convert these changes into an electrical signal that can be measured
    and analyzed. Many different types of sensors are available, including vision
    and imaging sensors, distance/position sensors, pressure sensors, gas sensors,
    radiation sensors, temperature and humidity sensors, flow sensors, and contact
    sensors. These sensors serve different purposes, including electrical circuit
    monitoring, weather monitoring, chemical monitoring, and optical monitoring. Many
    different types of sensors are available, and they can be broadly classified as
    digital or analog. Digital sensors report data in discrete values, while analog
    sensors report data in continuous values. The type of sensor that is used will
    determine whether digital or analog input/output pins on the microcontroller board
    are used to connect the sensor. It is important to choose an appropriate type
    of sensor for the data that are being collected, based on the accuracy and resolution
    that are required, as well as the range of values being measured. Actuators convert
    an electrical signal into a specific physical action. These can be classified
    by the source of motion energy (such as electrical, hydraulic, pneumatic, thermal,
    or magnetic) or the type of motion that is produced (such as rotary, oscillating,
    linear, or reciprocating). Actuators are used to turn command instructions into
    precise actions, causing a change in system status, the environment, or phenomena.
    In addition to sensors and actuators, the PSL includes microcontrollers that are
    used for hardware communication and to perform basic transformations on the data
    generated by the sensors, or to decode and encode control instructions. Thus,
    it is typically considered to be the foundation of any IoT system, as it is responsible
    for providing the data on which the entire IoT system depends. The number of sensors
    and actuators needed in this layer depends on the system objectives and the type
    of data being collected. The selection of a microcontroller also plays a key role
    in the scalability of an IoT implementation, as they only support a limited number
    of input/output pins, which limits the number of modules, such as sensors, actuators,
    and devices, that the microcontroller can effectively control under normal operating
    conditions. In cases where the number of modules that are needed is beyond a ability
    of a single microcontroller, multiple microcontrollers can be combined into an
    integrated system using a digital interface such as the Recommended Standard 485
    (RS-485), Inter-Integrated Circuit (I2C) or Controller Area Network (CAN) bus.
    Given that sensors are particularly prone to providing intermittent erroneous
    values, some level of data-processing occurs at the PSL to ensure that data are
    correct and complete. Our framework provides initial data processing functionalities,
    as explained in the subsections below. Energy consumption and some special considerations
    regarding actuators are discussed in the following subsections. 3.1.1. Error Detection
    and Correction The error detection and correction step during the initial data
    processing step is important in ensuring the accuracy and reliability of the data
    that are collected and transmitted. In this step, our framework selects any data
    values that are outside the expected range for a particular sensor. These are
    identified as errors and replaced with the maximum or minimum acceptable value.
    This helps to eliminate any incorrect or misleading data that could impact the
    performance or functionality of the IoT system. Using this error detection and
    correction method, the data recorded for transmission are structured to suppress
    any observable deviations. Equation (1) presents a mathematical representation
    of the error detection and correction. 𝑉 𝑟𝑒𝑔 = ⎧ ⎩ ⎨     𝑥 𝑚𝑎𝑥 𝑥 𝑥 𝑚𝑖𝑛 𝑥>
    𝑥 𝑚𝑎𝑥 𝑥 𝑚𝑖𝑛 ≤𝑥≤ 𝑥 𝑚𝑎𝑥 𝑥< 𝑥 𝑚𝑖𝑛 (1) where 𝑉 𝑟𝑒𝑔 is the regularized sensor value,
    x is the reported sensor value, 𝑥 𝑚𝑖𝑛 is the minimum reasonable sensor value,
    and 𝑥 𝑚𝑎𝑥 is the maximum reasonable sensor value. For every sensor, variables
    for 𝑥 𝑚𝑖𝑛 and 𝑥 𝑚𝑎𝑥 are provided for configuration to ensure that they suit the
    use-case. 3.1.2. Data Smoothing The simple average is used as a data-smoothing
    technique to reduce the impact of noise or fluctuations in sensor data. This is
    especially useful when the sensor is sensitive to external factors or when the
    data being collected may contain sudden spikes or jumps. By taking the average
    of multiple sensor readings, our framework can smooth out these fluctuations and
    obtain a more stable and reliable representation of the data. This is particularly
    useful for long-term data collection and analysis, where sudden spikes in the
    data could lead to incorrect conclusions or misleading results. Equation (2) represents
    the average of the reported sensor values 𝑉 𝑎𝑣 = 1 𝑁 ∫ 𝑁 0 𝑠(𝑡)𝑑𝑡 (2) where 𝑉
    𝑎𝑣 is the average value; N is the number of reported values; 𝑠(𝑡) is the sensor
    function over time t. For every sensor, we provide a variable that allows for
    N to be configured to determine how many values should be averaged. If spontaneous
    spikes are considered reasonable or valid data, N should be set to 1. 3.1.3. Data
    Transformation Typically, different sensors report values from different value
    ranges. Some might be larger than others. As such, the required precision of each
    sensor may be different. To avoid losses in data precision, our framework transformed
    the averaged value into an integer so that the inverse of the transformation was
    performed on the transmitted data to recover the averaged value. Equation (3)
    shows the mathematical representation of the data transformation function 𝑉 𝑡𝑟𝑎𝑛𝑠
    =𝑙𝑣+𝑘 (3) where 𝑉 𝑡𝑟𝑎𝑛𝑠 is the transformed value, l is the multiplicative function,
    k is the additive constant, and v is the averaged value. For every sensor, we
    provide variables for l and k to be configured to define the transformation function.
    Where such a transformation is not desired, l should be set to 1, and k should
    also be set to 0. Figure 2 summarizes the initial data processing that was carried
    out at the PSL before the data were transmitted to the CPS. Readings from a sensor
    go through error detection and correction, data smoothening, data transformation,
    and data packaging to generate the reported value. Figure 2. Block diagram of
    data processing in the perception/sensing layer (PSL). Sensor readings go through
    error detection and correction to regularize their values, then data smoothening,
    which involves taking a simple average of the regularized values, followed by
    data transformation and data packaging, to generate the reported value. 3.1.4.
    Energy Consumption Energy consumption is a critical concern in IoT systems. To
    minimize energy consumption, it is paramount that the systems designed in this
    layer adhere to a well-planned power management scheme. One such scheme is the
    sleep-and-wake cycle, where sensors are turned off during their inactive states
    and only activated to record readings. Each sensor in a device maintains its own
    sleep-and-wake cycle to ensure that every sensor is independent of the others,
    as shown in Figure 3b. With the sleep-and-wake cycle, in the sleep state, the
    sensor is turned off and consumes little to no energy until the end of the sleep
    mode. These cycles are precisely controlled by the microcontroller in a systematic
    loop, as shown in Figure 3a. The framework provides a robust scheme, with time-based
    or CPU clock cycle-based configurable variables that determine the sleep mode
    and wake mode of all modules connected to the microcontroller. The flowchart shown
    in Figure 4 describes the power management scheme as designed in the MCF. For
    each sensor cycle, calculations are only performed if the state of the sensor
    allows this. This state is based on pre-determined energy-saving profiles that
    allow for the user to control how much energy is being spent on the system. Figure
    3. Sensors attached to a device are managed by sleep-and-wake cycles; (a) Sensor
    state diagram showing the endless sleep-and-wake cycle observed by each sensor
    independent of other sensors on the same device; (b) Sensor timing diagram showing
    three sensors on the same device maintaining sleep-and-wake cycles independently.
    Figure 4. Sensor flowchart. Each sensor runs through SleepMode and WakeMode. The
    sensor only executes a sleep-wait in the SleepMode. The sensor loops to obtain
    sensor values and calculates the average when the WakeMode is completed. 3.1.5.
    Actuators The use of actuators presents a different challenge. They are typically
    expected to precisely respond to control instructions, provide periodic status
    reports and, on occasion, respond to user requests for system status checks and
    other predetermined functionalities. Thus, the data processing requirements differ
    slightly from the case of sensors and other modules. As expected, the MCF allowed
    for initial data processing before the instructions were executed, and for response
    protocols. The initial data processing that is provided specifically for control
    systems by the framework includes: Signal Decoding. The received signals require
    decoding because these signals are encoded before transmission. The structure
    of the message payload is similar to Figure 5. In this case, the data component
    of the received message requires decoding; Signal-to-Instruction Mapping. Here,
    there is an attempt to map all decoded signals to a corresponding instruction.
    Any signal that is not successfully mapped to an instruction is simply dropped
    or ignored. Three control instructions are supported by default by the MCF, with
    the ability tAmeno easily extend the instruction set to meet any project’s specifications.
    The three default instructions are: (1) checking the actuator status, (2) turning
    the actuator on, and (3) turning the actuator off; Instruction Execution. This
    is the point where the actuator performs the instruction, decides whether to turn
    on or off, or checks its status and sends the report; Status Response. The execution
    of all valid instructions is followed by a status check-and-response procedure.
    The current status of the actuator is recorded, packaged, and transmitted. Figure
    5. Message payload components. The message payload consists of three components:
    the acknowledgment (Ack) code, sender address, and data. Figure 6 summarizes the
    processes that signals go through, from signal decoding, signal-to-instruction,
    to instruction execution, with the status response shown in the block diagram.
    Figure 6. Block diagram of the processes in the perception/sensing layer. The
    received signals go through signal decoding, signal-to-instruction mapping, instruction
    execution with invalid signals ignored, and actuator status check and response.
    The processes described above (error detection and correction, data smoothening,
    data transformation, and data packaging), together with the sleep-and-wake cycle,
    determine sensor behavior in relation to data management. To enhance the reusability,
    extensibility, and readability of the instructions running on the microcontroller
    at this layer, we designed the code in a modular fashion. In view of the fact
    that IoT projects have different requirements and objectives, we designed the
    code for the framework to make it easy to add/remove sensors to/from the project.
    We created a modular sensor library that makes it easy to work with sensors or
    modules that are not yet included in the library. Figure 7 shows the class diagram
    of our modular sensor library, which includes 11 sensor classes derived from the
    parent class, the RegressiveDataTransformer class (derived from the DataTransformer
    class) for transforming the sensor data, and the SensorHandler class, which is
    responsible for managing the sensors’ sleep-and-wake cycles. Figure 7. Class diagram
    of a modular sensor library, showing 11 concrete sensor classes derived from the
    𝐴𝑏𝑠𝑡𝑟𝑎𝑐𝑡𝑆𝑒𝑛𝑠𝑜𝑟 class, the 𝑅𝑒𝑔𝑟𝑒𝑠𝑠𝑖𝑣𝑒𝐷𝑎𝑡𝑎𝑇𝑟𝑎𝑛𝑠𝑓𝑜𝑟𝑚𝑒𝑟 class derived from an abstract
    𝐷𝑎𝑡𝑎𝑇𝑟𝑎𝑛𝑠𝑓𝑜𝑟𝑚𝑒𝑟 class, and the 𝑆𝑒𝑛𝑠𝑜𝑟𝐻𝑎𝑛𝑑𝑙𝑒𝑟 class, which is responsible for the
    management of the sensors’ sleep-and-wake cycles. 3.2. Transportation/Network
    Layer (TNL) This layer, sometimes called the platform layer, is responsible for
    data transmission and connectivity between the different subsystems, end nodes,
    and modules of an IoT system. It also handles the routing of data to and from
    the cloud infrastructure that manages IoT services. Several communication technologies
    and protocols are available for use in the TNL, each with different capabilities,
    and each suitable for different use-cases [59,60,61]. These technologies can be
    classified into four main categories: device-to-device (D2D), device-to-application
    (D2A), device-to-gateway (D2G), and device-to-cloud (D2C) [62]. During D2D communication,
    devices establish direct communication with each other, without the need for an
    application server, base stations, or access points. D2A communication involves
    seamless communication between IoT devices and applications through well-implemented
    protocols. In D2G communication, devices communicate through a local gateway,
    such as access points and network servers, which act as a middleware service provider
    for communication translation. Finally, in D2C communication, devices directly
    handle information transfer and resource management on a cloud service infrastructure.
    Different communication technologies and protocols may be combined in the TNL
    to control the flow of messages and optimize throughput, power consumption, and
    resource usage. The TNL plays a critical role in the IoT system, as it enables
    the devices and sensors to communicate with each other and other system components.
    3.2.1. Communication We implemented the framework with LoRa as the radio communication
    module, providing an easy modification that allows for the use of other communication
    modules, such as nRF24L01. LoRa is a long-range modulation that can cover regions
    up to tens of kilometers away in rural areas and a few kilometers away in urban
    areas [63]. In comparison to competing technologies, the LoRa SX127x family from
    Semtech Corporation provides significant benefits in terms of range, reliable
    performance, and battery longevity [64]. The MCF provides three options for communication:
    Acknowledged Message. This option is a bare-bones option that automatically supports
    the acknowledgment of messages sent, and executes a number of retry attempts in
    the event of failure. The number of retries is configurable; Round Robin Communication.
    This option places an extra layer of functionality over the acknowledged message
    option such that each device is assigned a time slot to offload message payloads.
    We provide configuration variables that can determine the minimum time interval
    between successive transmission opportunities; Multi-receiver Communication. This
    provides extra functionality to support communication with a large number of devices.
    This option involves the use of multiple receivers on the same central node to
    coordinate, receive, and send acknowledged messages. A receiver, in the context
    of our implementation, is a module principally made of an Arduino microcontroller
    and a LoRa module, which is programmed to autonomously receive and send messages
    and uses serial output for communication with other devices. The receiver uses
    the Ack Code in the message to acknowledge receipt of the payload to the sender.
    After a successful acknowledgment process, the payload is unpacked to extract
    the data component. The data component is written to a serial output. This ensures
    that the receiver can easily be replaced by any module with a serial output, thus
    making the system customizable. 3.2.2. Data Packaging We also implemented communication
    acknowledgment. Message failure leads to retries to increase successful message
    delivery in challenging environments. Each message that is to be transmitted over
    the network has a randomly generated alphanumeric token called an Ack Code attached
    to the data payload, which is used to authenticate and confirm the receipt of
    the transmitted payload. The configurable parameters for efficient communication
    include the token’s size, the alphanumeric characters that are permitted, and
    the amount of time until a communication exchange is classified as unsuccessful.
    This offers the flexibility to avoid situations such as data collisions. Equation
    (4) was used to calculate the minimal length of the Ack Code N for any character
    set size S and the number of devices D with an Ack Code collision probability
    of 1 in 100,000 (that is, 0.00001), as well as a worst-case scenario in which
    all devices on the network are communicating simultaneously: 1 100,000 = 𝐷 𝑆 𝑁
    (4) We rewrote Equation (4) to determine the minimum recommended Ack Code size,
    as shown in Equation (5): 𝑁= 5+𝑙𝑜𝑔(𝐷) 𝑙𝑜𝑔(𝑆) (5) In terms of payload configuration,
    the MCF uses a fixed payload size. This enables messages to be sent successfully
    without reserving a special character as a delimiter to mark the end of a message,
    and also ensures uniformity and standardizes the data unpacking process. We provide
    a configuration variable to control the payload size, allowing for the size to
    be customized to suit project specifications. The structure of the payload consists
    of three components: the acknowledgment code, the message sender’s address, and
    the data, as shown in Figure 5. 3.3. Middleware/Processing Layer (MPL) The Middleware/Processing
    Layer, also known as the Data Layer, serves two essential functions in an IoT
    architecture. First, it acts as the data accumulation layer by aggregating data
    from all sources and managing the flow of data and control instructions. This
    requires the MPL to be able to accept and interpret different communication protocols,
    data formats, and types. To ensure interoperability, the design of this layer
    should consider syntactic interoperability (allowing for different types of applications
    to communicate and share data regardless of their language or protocols), structural
    interoperability (ensuring data exchange formats are standardized and homogeneous),
    and semantic interoperability (ensuring that the meaning of exchanged data and
    information is preserved). The second function of the MPL is to process the received
    data and store them for future retrieval for reporting and analytical purposes.
    Security and privacy are crucial in this layer, as vulnerabilities may lead to
    compromises in the data, which could adversely affect the usability of upstream
    data. Scalability and reliability are also important considerations in this layer,
    as the system should be able to handle increasing data flows and maintain availability.
    Two common technologies used for data storage in IoT projects are relational databases,
    such as MySQL and PostgreSQL, and NoSQL databases, such as MongoDB and Cassandra
    [65,66,67]. These technologies offer different trade-offs in terms of performance,
    scalability, and data model complexity, and the appropriate choice depends on
    the specific requirements of the IoT system. The MPL plays a critical role in
    the IoT system, as it enables the aggregation, processing, and storage of data
    from the devices and sensors. The MCF provides data processing and decision-making
    functions, in addition to data modeling and storage. We implemented the MPL using
    Flask, a micro-web framework written in Python. As it does not require any specific
    tools or libraries, it is considered a micro-framework. Flask has no database
    abstraction layer; as such, we used MongoEngine (as a document–object mapper)
    and MongoDB to store processed data. MongoDB is a cross-platform document-oriented
    NoSQL database program that uses JSON-like documents for data storage. The data
    model implemented with MongoEngine is shown in Figure 8, with six documents: 𝑆𝑒𝑛𝑠𝑜𝑟
    , 𝑆𝑒𝑛𝑠𝑜𝑟𝐷𝑎𝑡𝑎 (individual records of data from sensors), 𝐷𝑒𝑣𝑖𝑐𝑒 (collection of
    sensors on a common Arduino), 𝐹𝑖𝑒𝑙𝑑 (group of devices in a physical location),
    𝐴𝑐𝑡𝑢𝑎𝑡𝑜𝑟 , and 𝐴𝑐𝑡𝑢𝑎𝑡𝑜𝑟𝑆𝑡𝑎𝑡𝑢𝑠𝐶ℎ𝑎𝑛𝑔𝑒 (individual records of changes in the status
    of actuators). Figure 8. Data model implemented in the MongoDB database in the
    computing subsystem. 3.4. Application Layer (APL) The APL is responsible for enabling
    users to interact with the devices and sensor data in the system through applications
    and services. It sits above the MPL and below the BSL in the reference model.
    To facilitate this interaction, the APL applies a suitable data formatting protocol
    for effective data pushing and pulling. This can be implemented using various
    protocols, such as REST, WebSocket, Message Queue Telemetry Transport (MQTT),
    FTP, and HTTP/HTTPS [68]. These protocols can be used to implement different communication
    modalities, such as client/server architectures and subscription mechanisms. Some
    protocols, such as FIWARE and MQTT, use a publish–subscribe system, which is a
    distributed data messaging system that efficiently handles multiple data streams
    by categorizing data into independently accessible classes in a centralized broker.
    The publish–subscribe system allows for devices to publish data to a centralized
    broker, which then distributes the data to subscribed devices. This can be useful
    when handling large volumes of data or enabling real-time communication between
    devices. The APL serves as an interface between the lower layers of the system
    and the users, translating the data and functionality provided by the lower layers
    into user-friendly applications and services. It plays a critical role in enabling
    users to access and interact with the data and services provided by the IoT system.
    We provided an extensible RESTful application programming interface (API) with
    some initial endpoints. Representational state transfer (REST) is a software architectural
    style that defines a set of constraints and properties for the creation of web
    services. API endpoints are the specific points at which the API can be accessed
    by a client. By creating extensible endpoints, it is possible to allow for the
    expansion and customization of the API as the system scales to accommodate additional
    functionality. The API provides JavaScript object notation (JSON) data exchange.
    JSON is a lightweight data-interchange format that is easy to parse and generate,
    making it well-suited for use in IoT systems. There are numerous front-end technologies
    and libraries, such as React and VueJS, that can be utilized to provide user interactions
    and different teams have different preferences in terms of graphical user interfaces;
    hence, we do not provide a code implementation for user interfaces in the MCF,
    although a simple interface is provided with ReactJS in the Smart Agriculture
    implementation. However, we provided API endpoints that are accessible to most
    available front-end frameworks. 3.5. Business Layer (BSL) In a five-layer IoT
    architecture, the BSL is the highest layer and is responsible for defining the
    overall goals and objectives of the IoT system. It determines the value proposition
    of the system and defines the customer segments that it targets. It comprises
    analytical, visualization, and perception services that focus on analyzing the
    data provided by the IoT subsystems to provide users with useful information and
    insights for data-driven decision-making. These services can take various forms,
    such as dashboards, reports, alerts and notifications, depending on the specific
    requirements of the system. The BSL also handles user interactions with the IoT
    system by receiving control commands and user preferences through intuitive interfaces.
    These interfaces can be web-based, mobile-based, or other types of user interfaces
    that allow for users to interact with the system in a convenient and user-friendly
    way. It is critical to the success of an IoT system, as it determines how useful
    the users perceive the services to be. As a result, a careful design and implementation,
    which focuses on user-friendliness, responsiveness, security, and user privacy,
    is essential. The BSL plays a crucial role in defining the overall value proposition
    of the IoT system and determining its target customer segments. In general, this
    layer determines the overall goals and objectives of the system and defines the
    business processes and rules that govern its operation. For the avoidance of doubt
    regarding the difference between the BSL and the APL, the BSL is focused on the
    business goals and end-user experience, while the APL is focused on the technical
    aspects of data exchange and communication between the different system components.
    As a result, the BSL is domain-specific and is not directly provided in the MCF.
    However, Section 5 demonstrates the BSL, where a farmer is able to monitor soil
    and atmospheric conditions, and control irrigation in paddy rice fields using
    a curated business logic for this specific use-case. 4. Monitoring and Control
    Framework Implementation IoT projects, independent of the domain, are usually
    structured in many different subsystems. This relates to scalability and the reduction
    of having a single point of failure (SPOF). In this section, we demonstrate the
    actual implementation of our framework in terms of three different subsystems.
    Our objective is to provide a conceptual structure for the design and implementation
    of IoT projects that is drawn from experience and aims to address common IoT system
    challenges, such as scalability, reusability, and interoperability, that can arise
    from the lack of standardization in the IoT space. Figure 9 illustrates how each
    subsystem exchanges information with each other, and their respective responsibility.
    Each of these subsystems will be explained in detail in the following subsections.
    Figure 9. The monitoring and control framework (MCF) showing the three subsystems;
    monitoring and control subsystems communicating with the computing subsystem.
    4.1. The Monitoring Subsystem The monitoring subsystem is responsible for collecting
    (or generating) data related to a phenomenon that is being monitored. This subsystem
    typically consists of sensors, a microcontroller board, a communication module,
    and a power system supply system. The sensors convert the physical properties
    of the environment into electronic signals that can be measured and interpreted
    as data. These data are then processed before being sent to interested entities.
    The micro-controller board is responsible for orchestrating the whole operation:
    communicating with the sensors to fetch data, performing the necessary transformations
    to these data, packaging them and transmitting them through the communication
    channel. In our implementation, the communication is carried out via wireless
    antennas, and the entity that receives these data is the computing subsystem.
    Figure 10a presents a simple overview of the monitoring subsystem. Figure 10.
    Implementation of the monitoring subsystem: (a) A conceptual model of a monitoring
    module. These data are first read from sensors monitoring a phenomenon; after
    that, they are internally processed in the microcontroller and finally transmitted
    to the point of interest. (b) How this module can be implemented using our framework:
    by using the predefined modules, fewer than 20 lines of code are needed to obtain
    a working system with many advantages, such as error detection, data smoothing,
    transformation, and packaging. 4.1.1. Monitoring Subsystem Concerns From our experience,
    when a user needs to build an effective monitoring subsystem, there is one important
    point that needs to be ensured, namely data reliability; otherwise, the whole
    operation can become compromised. If there is no trust that the data arriving
    to the server is correct, the decisions taken by other subsystems can have catastrophic
    results. To guarantee that the data are correct, the user needs to consider the
    two major SPOFs: Data reading: The process of reading the sensors’ value for small/starting
    projects, in which the main source of information to the user is the sensor’s
    manual on how to read values. Determining how to correctly read values from different
    sensors may become overwhelming to users. If this process fails, the data have
    no value to the receiving end; in some cases, this can even lead the system to
    operate in the wrong way; Data transmission: The communication between the sensors
    and the receiving part is typically one-way communication, with data being transferred
    from the nodes to the computing subsystem. As there are many communication options,
    there are many errors that can arise with the chosen communication module, for
    example, protocol errors, packaging errors, and configuration errors. Having a
    solid communication protocol is essential to obtaining an effective system. These
    points require the user to spend time reading documentation and making crucial
    decisions. However, using our framework, many of these concerns are abstracted
    from the user and are guaranteed to be standardized and working. The following
    subsection shows how a user could use the proposed framework to build a monitoring
    subsystem. Another point of concern in the monitoring subsystems is their energy
    consumption. Unaware users may be tempted to continuously transmit the sensor
    data to obtain the system status in real-time. However, some sensor values do
    not change this often. For instance, a weather temperature monitoring sensor does
    not need to transmit every 1 ms, since, under normal conditions, the temperature
    will not change that quickly. Additionally, the careless transmission of data
    will flood the data transmission media, which will cause many package collisions,
    and the data may never reach their destination. Lastly, data reading and transmission
    are power-intensive tasks, and conducting these tasks too often will quickly exhaust
    the power system, which will result in power outages and, consequently, compromise
    the whole operation. How the MCF approaches these problems is explained in the
    next section. 4.1.2. MCF Approach of the Monitoring Subsystem Using the notation
    defined in Section 3, we can state that this subsystem includes elements from
    both the perception layer and the transportation layer. Figure 10b shows which
    parts can be used to make a monitoring system using our framework. Given that
    the user is using our supported sensors and LoRa, we remove the user overhead
    regarding how to reliably read the data (as the framework already provides error
    correction, data smoothing, and transformation). The user does not need to worry
    about how to send the data (as the packaging is also provided by our framework).
    The user only needs to select the sensors they would like to use, instantiate
    the data-handler to process the data from the sensors, and instantiate a communication
    module. Figure 11 illustrates a small monitor subsystem code using two sensors
    and the LoRa communicator. Figure 11. Monitor subsystem using our framework. The
    user needs fewer than 20 lines of code to obtain a working subsystem with all
    the advantages provided by the framework. Notably, the MCF uses an algorithm to
    control the data-reading and transmission based on the type of sensors to which
    it is attached. Each sensor has a value associated with the number of cycles required
    between readings. Doing this not only saves energy but also reduces the number
    of packages routed in the network, which eases the sensor burden when re-transmitting
    data. 4.2. The Control Subsystem The control subsystem is responsible for the
    execution of control functions on the elements with which it is associated. This
    subsystem primarily comprises actuators, a microcontroller, and a communication
    module. Control instructions are sent from the edge device to be executed by this
    subsystem. Although its main function is to control, in some cases it can double
    as a monitoring system by providing information on the status of the controlled
    elements and sensors. Similarly to the monitoring subsystem, the control subsystem
    usually has a micro-controller board that is responsible for orchestrating the
    whole operation. The main difference is that, in this system, the micro-controller
    not only senses but is also responsible for taking action in the associated elements.
    This leads to a different relationship between it and the edge module, in which
    the communication is now bi-directional, with the system sending and receiving
    data. Figure 12a illustrates a simple control system. Figure 12. The implementation
    of the control subsystem: (a) A conceptual model of a control module. Similarly
    to the monitor subsystem, the data are read, processed, and transmitted to the
    point of interest. However, the main difference is that the module also receives
    instructions, which it actuates. (b) How this module can be implemented using
    our framework. By using the pre-defined modules, very little code is needed to
    obtain a working system with many advantages, such as error detection, data smoothing,
    transformation, and packaging. 4.2.1. Control Subsystem Concerns The control subsystem
    has the same SPOFs as the monitor subsystem, and some extra SPOFs related to the
    actuators. This subsystem needs to receive messages to control its actuators;
    however, many problems arise when we need to guarantee that the edge module is
    aware that its message arrived safely, and to inform the interested modules of
    the internal state of its actuators. As many messages are exchanged, the communication
    channel can become busy and messages can be lost, resulting in two subsystems
    with incoherent information regarding the real state of affairs. These problems
    incur in increments in the time required for the user to ensure that the system
    works properly. As users need to worry about signal encoding/decoding, signal-to-instruction
    mapping, instruction execution, and status response. The next subsection shows
    how a user could use the proposed framework to build a control system with minimal
    effort. 4.2.2. MCF Approach to the Control Subsystem Similar to the monitor subsystem,
    the control subsystem uses elements from both the perception and the transportation
    layer. Figure 12b shows which parts could be used to create a control system using
    our framework. As the user is using our supported sensors, actuators, and LoRa,
    we can easily create a system that coordinates the sensors and actuators, reducing
    the user overhead when they want to create such a subsystem. Similarly to the
    monitoring system, the user only needs to select the sensors and actuators that
    it would like to use, instantiate the data-handler to process the data that come
    from the sensors and from the instructions to actuators, and instantiate a communication
    module. Figure 13 illustrates a small code of a control subsystem using one sensor,
    one actuator, and a LoRa communicator. Figure 13. Control subsystem using our
    framework. The user needs fewer than 20 lines of code to obtain a working subsystem
    with all the advantages provided by the framework. 4.3. Edge Computing Subsystem
    The edge computing subsystem is the central location for data processing and storage.
    It is also responsible for making decisions that determine the behavior of the
    control subsystem. The computing subsystem is provided by edge computing, which
    can optionally be supported by cloud services. This usually consists of a computing
    module that communicates with both monitoring and control subsystems, periodically
    backing up data to the cloud. This way, the edge device offers cloud services
    at the network edge, which enhances the response time, bandwidth usage, efficiency,
    and dependability of any IoT application. The edge device also provides data aggregation
    before transference to the cloud [69]. This setup also ensures that exposure to
    the public internet is reduced, as recommended by Ref. [70], since the only point
    of exposure to the public internet is the connection to the cloud. Figure 9 shows
    the MCF with the computing subsystem as a combination of an edge device and cloud
    services, communicating with the monitoring and control subsystems’ devices. The
    computing subsystem spans four of the five architecture layers, exempting the
    perception/sensing layer. 4.3.1. Edge Computing Subsystem Concerns Our experience
    shows that the main problem of the edge computing subsystem is that it needs to
    coordinate the transmission and reception of data through busy media while keeping
    the protocols in place as simple as possible. Basic functionalities such as acknowledgment
    of data and the means of addressing this are not usually provided, and the user
    has to either give up on these or implement them from scratch. Libraries are usually
    hardware-dependent, and finding one that attends to the user’s needs is not straightforward.
    Similar to the previous subsections, these problems take time for the user and,
    in some cases, may even be a deal-breaker regarding whether a user can finish
    something on time. 4.3.2. MCF Approach to the Edge Computing Subsystem The MCF
    provides solutions regarding all layers used in the computing subsystem. It provides
    the minimum requirements for the user to build a node that is capable of sending
    and receiving messages to nodes in a coordinated way. Our framework provides ACK
    messages as well as a round-robin system that guarantees a fair system in which
    nodes communicate in an orderly manner, providing an equal chance for all nodes
    in each subsystem to transmit/receive data. MCF also provides tools for re-transmission
    in case of data loss. 4.4. Assembling MCF Subsystems As discussed in previous
    sections, the MCF comprises three subsystems: the monitoring subsystem (MS), the
    control subsystem (CTS), and the computing subsystem (CPS). The purpose of designing
    the MCF to have subsystems is to allow for each subsystem to perform its tasks
    independently of other subsystems. This enhances the interoperability and minimizes
    the implementation costs, as subsystems can easily be added to or removed from
    the system when necessary. Figure 14 presents a visualization of the model of
    the three assembled MCF subsystems. The MS and CTS have two architecture layers
    (TNS and PSL), while the computing subsystem has four architecture layers (BSL,
    APL, MPL, and TNL). All the subsystems communicate with each other at the TNL.
    Figure 14. MCF subsystems assembled. The monitoring subsystem and control subsystems
    both have two architecture layers (transportation/network layer and perception/sensing
    layer), and the computing subsystem has four architecture layers (business layer,
    application layer, middleware/processing layer, and transportation/network layer).
    All three subsystems communicate with each other at the transportation/network
    layer. 5. Case Study of the Framework in Smart Agriculture This section presents
    a real-world case study for a Smart Agriculture farm. The objective of this case
    study is to demonstrate the use of the MCF. A more detailed report is presented
    by Akansah et al. [11]. The system consists of three subsystems working seamlessly
    to monitor the ambient and soil conditions necessary for the optimal growth of
    paddy rice, while maintaining an adequate water level in the paddy fields throughout
    the growing period. The framework provides the necessary design structure, ensuring
    that the system is easily scalable and maintainable. The monitoring and control
    subsystems, including the deployment of a test, are shown in Figure 15. Figure
    15. The monitoring and control subsystems of our smart agriculture use-case. (a)
    The monitoring subsystem consists of: (1) 18650 lithium–ion battery pack, (2)
    LM393 Rain Sensor, (3) E32-900T20D LoRa radio module, (4) Arduino nano hlATmega328P
    microcontroller in a protective enclosure, (5) SHT20 I2C temperature and humidity
    sensor, (6) HC-SR04 ultrasonic sensor. (b) The control subsystem, consisting of:
    (7) E32-900T20D LoRa radio module, (8) emergency push button and two-pole switch,
    (9) power supply for 5V components, (10) connection terminals, (11) Arduino nano
    ATmega328P microcontroller, 5 V relay and ACS712 current sensors in a protective
    enclosure, (12) Mitsubishi Electric S-T10 three-pole contactor. (c) Test deployment
    of the monitoring subsystem. The monitoring subsystem consists of weatherproof
    outdoor sensor nodes collecting valuable information such as ambient temperature
    and humidity, soil pH, soil nitrogen–phosphorus–potassium content, and soil moisture
    and temperature. These nodes are capable of working continuously due to the design
    of the reliable power system, which is explained in detail in Section 5.2. The
    reliability of the sensor data and the hardware communication robustness are discussed
    in Section 5.3 and Section 5.4. The control subsystem is responsible for listening
    for a specific command instruction from the computing subsystem and then acting
    on the command, either by turning the water pump it controls on or off, or by
    sending the current state of the water pump to the computing subsystem. It sends
    periodic statuses regarding its current state, not only to serve as valuable information
    for the end-user through the user interface but also to ensure reliable and uninterrupted
    communication, and assure the functionality of the subsystem. This closed feedback
    loop relationship ensures that commands are carried out with precision in a timely
    fashion. The computing subsystem, consisting of a Raspberry Pi 4 Model B development
    board with Broadcom BCM2711, Quad-core Cortex-A72 64-bit SoC, 4 GB of RAM and
    256 GB of storage as an edge computing device, handles the data pipeline, the
    custom-built data visualization, and the control application. The subsystem was
    implemented as described in Section 4.3, ensuring efficient communication between
    different services, components, and applications, with a focus on extensibility
    and scalability. 5.1. Evaluation Parameters In this section, we describe the parameters
    we used to evaluate the real case study: Power Consumption: To evaluate the amount
    of energy consumed by the system, we measured the voltages of the solar panels
    and battery pack. This metric is important because it provides insights into how
    much power our framework is utilizing, and consequently measures the efficiency
    of our system and helps to identify areas for optimization. Additionally, power
    can also be consumed to assess the energy usage of individual devices within the
    system and determine which devices are the most energy-intensive. This information
    can be used to target areas for energy-saving improvements and determine the overall
    impact of these changes on the system; Data Reliability: To evaluate the accuracy
    and dependability of the data readings obtained from sensors, devices, and other
    sources within our power system. This metric is important because it is necessary
    to have accurate and reliable data to make informed decisions and monitor the
    performance of the system. Data-reading reliability can be affected by factors
    such as device malfunctions, network issues, and interference from other devices.
    A low data-reading reliability can result in inaccurate readings, which can lead
    to incorrect decisions and affect the overall performance of the system; Communication
    Robustness: To evaluate the ability of the communication systems already in place.
    Communication robustness can be impacted by factors such as network outages, interference
    from other devices, and communication errors. Low communication robustness can
    result in communication failures and disruptions, which can impact the performance
    and reliability of the power system. The following subsections discuss the use-case
    study in detail, in light of the aforementioned evaluation metrics. Section 5.2
    talks about the power system, Section 5.3 talks about data reliability, and Section
    5.4 talks about communication robustness. 5.2. Power System Evaluation A critical
    component of our monitoring subsystem is our power supply system, as the reliability
    of the subsystem is highly dependent on its ability to work at all times, even
    in unfavorable weather conditions. To achieve this, our outdoor sensor nodes were
    powered by a pack of 18,650 lithium–ion rechargeable batteries. These batteries
    have a large capacity and a higher energy density, require less maintenance, and
    operate in wide temperature ranges (typically −20 ∘ C to 60 ∘ C). A major drawback
    of these batteries is their tendency to be overcharged and over-discharged; thus,
    to ensure the longevity of our batteries, we incorporated a battery protection
    system into our battery pack. We implemented an effective but inexpensive circuit
    using the DW01 + battery protection IC with 8205A MOSFETs to ensure that our battery
    pack did not overcharge and over-discharge, and provided over-current and short
    circuit protection. We also incorporated an efficient power distribution and charging
    module using the CN3791 PWM switch-mode battery charge controller with a constant
    voltage and current mode. The versatility of this charging solution enabled our
    sensor nodes to be powered by power sources such as photovoltaic cells, power
    banks, and DC power adapters, while recharging our battery pack. The output voltage
    was regulated through two MT3608 switch-mode DC-to-DC boost converters, ensuring
    that a constant supply of +5 V and +12 V was channeled to our different sensor
    categories, microcontrollers, and communication modules. Energy efficiency is
    a major concern in wireless sensor networks. The sensor nodes deployed in remote
    field applications must employ smart power management systems to ensure continuous
    operation. Common approaches include designing power-efficient circuitry and reducing
    power usage during the node’s idle states by inducing sleep modes. The authors
    in Ref. [71] introduced an energy management architecture that employs an on-board,
    off-chip real-time-clock configuration, to control the sleep–wake phases of sensors
    and a microcontroller connected to IoT remote nodes. They designed and demonstrated
    their proposed system using the ICARUS prototype mote. The mote features ultra-low-power
    ARM Cortex-M4 microcontroller, some integrated sensors, and expansion sockets
    for wireless interfaces and other sensors. The mote exhibited roughly 22 nA during
    sleep mode, which is about a 98% reduction, compared to the most power-efficient
    boards available. However, the mote lacks high-power rails, high-voltage power,
    and high current sensors. A software approach was experimented with by Ref. [72]
    using the SWORD algorithm to implement a wake/sleep scheme for sensor devices.
    The algorithm compares sensor values and determines which values are sent over
    the communication module, thereby reducing the overall power consumption of their
    system by 86.45%. However, not all sensors or electronic modules have a low-power
    sleep mode that can be controlled by a software implementation. An example sensor
    is the multi-parameter soil sensor, which has a maximum working current of 12.5
    mA (at 12 V), with no sleep mode [73]. For our solution, we implemented a hardware
    power-switching mechanism using MOSFETs controlled by microcontroller pin outputs
    to control the power delivery to sensors and modules during preprogrammed sleep/wake
    cycles. The FQP30N06L logic-level N channel MOSFET has a drain-source voltage
    of 60 V and a drain current of 32 A, which is capable of switching power to most
    power-hungry IoT sensors and modules. It also features a typical low gate charge
    of 15 nC, providing a fast switching time of 15 ns. This robust solution has the
    flexibility that allows for it to completely disable and isolate unneeded and
    faulty sensors, thereby preventing unnecessary power draws and possible damage
    to the entire system. All the components of our circuits were carefully chosen
    to optimize the power conversion processes to reduce losses through current leakages
    and heat and ensure a longer node life. Figure 16 shows the battery voltage (in
    green), and the solar voltage (in blue) for recharging the battery pack for one
    node during our experiment. It can be observed that there was wasted power (above
    the red line) from the solar panel, when the battery protection system cuts off
    the solar voltage, to protect the battery pack. Thus, such information is vital
    in the optimization of the design of the power system to reduce wastage by advising
    a developer/user to either increase the storage capacity of the system’s battery
    pack or use different specifications for an optimal solar panel. Figure 16. Sample
    visual of the recorded battery and solar voltages for one outdoor node. 5.3. Data
    Reliability Evaluation An extensive literature review was carried out by Refs.
    [74,75,76] on crucial sensors used in smart agricultural systems (SAS). These
    sensors play a key role in the collection of ambient, crop, and soil conditions
    and other relevant data to determine the state of the crops and the necessary
    actions to ensure optimal plant growth. Our proposed system is designed to accommodate
    a wide range of sensors depending on the monitoring needs of the crops and their
    environment. Some basic sensors, such as ambient temperature and humidity sensors,
    which are needed by most SAS, are incorporated by default in the sensor nodes
    while provisions are made for special-purpose sensors. These sensors are connected
    to the nodes through weatherproof aviation plugs, which ensures the continuous
    delivery of power and protects sensitive signal lines between the sensors and
    the microcontroller from fretting corrosion and oxidation. The data from the sensors
    are collected by a microcontroller, which is programmed to check the accuracy
    of the data, and the validated values are packaged and sent to the CPS through
    the communication module. To test the reliability of our processed data, we deployed
    redundancies in the MSes; that is, two nodes per field. The objective was to use
    the data values collected through these redundancies to monitor and detect inconsistencies
    in these data. To visualize one instance, we plotted two-week datapoints showing
    the ambient temperature from two nodes in a single field. As can be observed in
    Figure 17, the graph shows very little deviation between the recorded values.
    These results show that our choice of sensors, although inexpensive, provided
    stable and reliable recordings and this phenomenon can be observed throughout
    our redundant sensor pairs. Figure 17. Sample visual of the recorded ambient temperature
    from two outdoor nodes in the same field. 5.4. Communication Robustness Evaluation
    The main challenge in interfacing multiple hardware systems is the communication
    protocol. All sensors, communication modules and actuators possess a physical
    medium, which they use to send and receive data, and they differ greatly in their
    implementation. The same type of sensor, when obtained from different manufacturers,
    could have different communication protocols. This means that a microcontroller
    is required to interface with these devices and process their communication into
    desired outputs. This makes the choice of a microcontroller highly dependent on
    the choice of device, as effective communication and control are reliant on the
    microcontroller’s ability to accurately interpret and transmit the desired communication
    signals. Microcontrollers have limited resources and communication interfaces;
    thus, it is imperative to obtain the holistic requirements of the system before
    the circuitry design and hardware acquisition. In the case of D2D radio communication,
    a typical LoRa radio network is set in the star-of-stars topology. This topology
    consists of a central node receiving multiple messages from sensor nodes, which
    are spread across the fields under observation. Our scenario implements a strict
    fixed transmission mode, which ensures that the transmitted data are encoded with
    the specific configuration information of the target node. The transmitted data
    are received promptly, without interference. The results of this implementation
    can be observed through the field deployment, which lasted for 132 days, during
    which 1,608,143 sensor values were successfully received with close to no data
    losses. Through the volume of data that were collected and processed, we identified
    key points of improvement in our system through exploratory data analysis. 6.
    Discussion In this section, we will discuss some of the key issues and challenges
    in the design and deployment of IoT architectures, specifically focusing on domain
    restriction, scalability, interoperability, and security. 6.1. Domain Restriction
    It is important to address the issue of domain restriction in IoT architectures.
    Many existing frameworks are designed specifically for a particular domain [49].
    This can be limiting, as it means that these frameworks may not be suitable for
    use in other domains. To address this issue, we implemented the MCF as a domain-agnostic
    framework. This means that the MCF can be used in a variety of domains, as it
    comprises subsystems (MS, CTS, and CPS) that are common to IoT applications independently
    of their domains. The organization of IoT systems into MS, CTS and CPS is applicable
    to healthcare IoT (HIoT) [77,78,79,80], industrial IoT (IIoT) [81,82,83,84,85],
    Smart Agriculture [86,87], Smart Energy [58,88], Transportation [89,90,91,92],
    environment, waste management, and security, among others. For example, the monitoring
    subsystem, which includes sensors and microcontroller boards, is a fundamental
    component of many different IoT systems, regardless of their specific domain.
    By designing the MCF in this way, we made it more flexible and adaptable to a
    wide range of different use-cases. Furthermore, a domain-agnostic framework can
    help to facilitate interoperability between different IoT systems. By using a
    common set of subsystems, it becomes easier for different systems to communicate
    and exchange data, regardless of their specific domain of application. This can
    help to improve the overall efficiency of the IoT ecosystem, as it becomes easier
    to integrate different systems and extract insights from the collected data. 6.2.
    Scalability Scalability is an important consideration for IoT systems, as it determines
    the system’s ability to handle an increasing amount of data and devices without
    a decrease in performance. The MCF framework was designed with scalability in
    mind, with a focus on modularity and flexibility. One way in which the MCF is
    scalable is through the use of the monitoring subsystem, which can easily be expanded
    by adding more devices to accommodate more sensors as needed. Each device operates
    independently, allowing for the system to scale up without affecting the performance
    of other devices. The modular design of the MCF allows for the easy addition or
    removal of devices in the monitoring subsystem, without affecting the overall
    functioning of the system. This enables the system to scale up or down according
    to the user’s needs. The computing subsystem is also designed to be scalable using
    cloud-based servers and services. By using cloud servers, it is possible to add
    more server resources, such as CPU, RAM, and storage, as the demand for them increases.
    This ensures that the computing subsystem can handle an increase in the volume
    of data being transmitted from the monitoring subsystem and the number of control
    commands being sent from the control subsystem. Another aspect of MCF’s scalability
    is its ability to adapt to changes in the business requirements or goals. The
    business layer can easily be modified or extended to incorporate new features
    or functions as needed, without impacting the lower layers of the architecture.
    This allows for the system to easily adapt to changing business needs and remain
    relevant over time. 6.3. Interoperability One major challenge facing IoT systems
    is interoperability, which refers to the ability of different devices and systems
    to seamlessly communicate and exchange data. This is important because IoT systems
    often involve the integration of a wide range of devices and systems from different
    vendors, with different protocols and standards. Without interoperability, it
    would be difficult for these devices and systems to work together and achieve
    the desired outcomes. The MCF addresses the issue of interoperability in several
    ways. First, it uses standard protocols and interfaces, such as HTTP and REST,
    for communication between the monitoring and computing subsystems. This ensures
    that devices and systems using these protocols can easily integrate with the MCF.
    Additionally, the MCF includes a flexible data formatting protocol at the application
    layer that allows for the exchange of data in various formats, such as JSON. This
    allows for the integration of devices and systems that use different data formats.
    The MCF also addresses this challenge by providing a standardized and modular
    structure for the development of IoT systems. By dividing the system into three
    main subsystems (monitoring, control, and computing) and implementing a clear
    communication protocol between these subsystems, the MCF allows for easy integration
    and interoperability with other devices and systems. 6.4. Security Security is
    a critical concern in IoT architectures, as the connected nature of these systems
    makes them vulnerable to attacks and data breaches. The MCF is designed to minimize
    the exposure of devices in the monitoring and control of subsystems in the public
    internet. This is achieved by implementing a centralized broker in the computing
    subsystem that acts as a mediator between the monitoring and control subsystems
    and the rest of the internet. Only subsystem devices that have been registered
    with the broker are recognized and allowed to communicate with the computing subsystem.
    This registration process ensures that only authorized devices can access the
    system, providing an additional layer of security. Additionally, the communication
    subsystem in the MCF is designed to support secure communication protocols such
    as SSL/HTTPS, which encrypt the data being transmitted between devices to prevent
    unauthorized access or tampering. This is especially important for IoT applications
    that handle sensitive data such as personal information or financial transactions.
    6.5. Cost Analysis for the Monitoring System In this analysis, we describe the
    costs of our proposed MS, presented side-by-side with the costs of commercial
    solutions with similar components and functionality. The high cost of commercially
    available alternatives is one of the primary reasons why people want to build
    custom IoT devices [93,94]. This is important because the cost of the MS, which
    typically consists of many devices, could have a substantial impact on the overall
    system cost. Furthermore, commercial solutions often lack the control functionality,
    as implemented in the CTS of the MCF. These commercial solutions often rely on
    the direct connection of sensing devices to the cloud and may lack an edge device
    that is comparable to the CPS. The MS in the agricultural use-case described in
    Section 5 primarily contains an Arduino nano with ATmega328P microcontroller,
    HC-SR04 ultrasonic distance sensor, SHT20 I2C waterproof temperature and humidity
    sensor, RS485 Modbus waterproof multi-parameter soil-integrated sensor, LM393
    rain detection sensor, DC power system with a 3.7 V 13.6 AH protected battery
    pack, and 2 A DC-DC Boost Step-Up Conversion Module from 3.7 V to 5 V. The MS
    for the use-case with all these components cost USD 390 at the time of deployment.
    Commercially available alternatives from well-known providers ranged in price
    from USD 1000 to USD 12,000. Table 1 shows the prices of similar products from
    recognized vendors, and the corresponding cost of an MCF implementation with similar
    features. According to Table 1, the low end of commercial solutions cost 400%
    of the MCF implementation while the more high-end solutions cost upwards of 2200%.
    It is worth noting that, despite ensuring that the comparisons are similar in
    terms of their features, there are certain nuances that were not considered. For
    instance, the components used by these vendors may be of a higher quality than
    those used for our implementation. However, the MCF provides the flexibility to
    use any component. Thus, there is the possibility of developing solutions with
    high-end components, thereby removing the limitations of commercial solutions
    that have specific component catalogs as add-ons to their solutions. The software
    component of commercial systems often uses proprietary implementation, accompanied
    by user support from the vendors, which contributes to the higher overall cost
    of their solutions. Table 1. A price comparison between the MCF’s MS use-case
    and similar commercial solutions. 7. Conclusions and Future Work In conclusion,
    the Monitoring and Control Framework (MCF) is a scalable and interoperable architecture
    for IoT projects that aims to minimize the challenges that arise from the lack
    of IoT standardization. The MCF is composed of three main subsystems: the monitoring
    subsystem, the control subsystem, and the computing subsystem, with communications
    between them. The monitoring subsystem is responsible for the collection or generation
    of data related to the phenomena of interest, and comprises sensors, a microcontroller
    board, a communication module, and a power supply system. The control subsystem
    is responsible for the control of physical devices based on data received from
    the computing subsystem, and comprises microcontroller boards, actuators and a
    communication module. The computing subsystem is responsible for data storage,
    analysis, and visualization, and comprises a server, a database, and applications.
    Our framework was shown to be stable in real-world applications, with the code
    not incurring a significant increase in power utilization, and could be operated
    using common rechargeable batteries and a solar panel. It used so little energy
    that the usual amount of available energy surpassed up to two times the amount
    necessary for the system to operate. Our framework was also proved to be reliable
    by accurately reading data from multiple sensors that operate concurrently. We
    observed that these sensors’ data are consistent and stable, with very similar
    readings. This contributes to the reliability of the data that are collected and
    processed by the system. To further improve data reliability, the sensors are
    designed to send readings at a consistent rate. This can be customized to represent
    as many details as possible and ensure that the collected information is as accurate
    as possible. In addition to the use of multiple sensors, the components of our
    framework are designed to effectively exchange data. The data exchange process
    is intended to be stable, with very few lost packages (over 1.5 million packages
    received during the experiment). This helps to minimize interruptions in the flow
    of information and ensures that the data used are current and accurate. Our framework
    is intended to provide reliable data by utilizing multiple sensors operating in
    parallel, as well as a stable data exchange process. This helps to ensure that
    the data being collected and processed are correct, consistent, and up-to-date.
    Our real-world use-case demonstrated the system’s dependability, power-consumption
    viability, communication stability, and the overall suitability of the MCF. We
    demonstrated the implementation of the MCF using an open-source code and discussed
    the subsystems in detail, including the five-layer IoT reference model. We also
    discussed the communication between the subsystems and the energy optimization
    techniques applied in the monitoring subsystem. In this paper, we presented an
    end-to-end IoT solution, MCF, which is applicable to multiple domains. Our solution
    has extensibility, scalability, and interoperability as its main advantages, and
    allows for users to easily create and customize our framework to their project
    specifications. Additionally, our agricultural use-case is up to 20 times cheaper
    than commercial solutions. We provided an open-source code for our framework,
    enabling a broader collaborative development. There are several areas for future
    work in the development of the MCF. One potential direction is to explore the
    use of different communication protocols and technologies in the TNL to improve
    the reliability and efficiency of data transmission. Another area of exploration
    is the integration of machine learning and artificial intelligence techniques
    to enhance the data analysis and decision-making abilities of the system. Additionally,
    further research will be conducted on the design and implementation of our user-friendly
    interfaces in the BSL to improve the usability and user experience of the IoT
    system. Finally, continuing efforts to improve the security and privacy of the
    system will be essential to ensure the integrity and trustworthiness of the system.
    We are aware that the mathematical formulations of this work are mostly empirical,
    and a more theoretical analysis is required. However, at this time, our main objective
    was to have it open to the community, so that it could be tested together with
    other researchers. We expect the community to adopt our framework, and expand
    upon it, making it a strong competitor to available solutions. Overall, the aim
    of the MCF, which is to provide a conceptual structure for the design and implementation
    of IoT projects by providing a domain agnostic framework, was achieved through
    the development of modular and extensible subsystems. Our framework will make
    it easier for IoT developers to create scalable, reusable, and interoperable solutions.
    Author Contributions Conceptualization, M.A. and I.M.; methodology, M.A. and I.M.;
    software, I.M., E.E.K.S., and E.A.; hardware, I.M., E.E.K.S., and E.A.; field
    deployment, M.A., I.M., E.E.K.S., and E.A.; data collection, I.M., E.E.K.S., and
    E.A.; resources, M.A. and I.M.; writing—original draft preparation, E.E.K.S. and
    E.A.; writing—review and editing, M.A., I.M., E.E.K.S., and E.A.; supervision,
    M.A. and I.M.; project administration, I.M. All authors have read and agreed to
    the published version of the manuscript. Funding This research received no external
    funding. Institutional Review Board Statement Not applicable. Informed Consent
    Statement Not applicable. Data Availability Statement Not applicable. Acknowledgments
    We would like to thank the anonymous reviewers for their valuable comments, which
    strongly improved our paper. Two of the authors (Senoo E. E. K. and Akansah E.)
    are grateful to the Japan International Cooperation Agency (JICA) for their two-year
    full scholarship under the Master’s Degree and Internship Program of African Business
    Education Initiative for Youth (ABE Initiative). Conflicts of Interest The authors
    declare no conflict of interest. Abbreviations The following abbreviations are
    used in this manuscript: API Application Programming Interface APL Application
    Layer BSL Business Layer CAN Controller Area Network CPS Computing Subsystem CPU
    Central Processing Unit CTS Control Subsystem D2A Device-to-application D2C Device-to-cloud
    D2D Device-to-device D2G Device-to-gateway DC Direct Current DoS Denial of Service
    FTP File Transfer Protocol GSM Global System for Mobile communication HTTP Hypertext
    Transfer Protocol HTTPS Hypertext Transfer Protocol Secure I2C Inter-Integrated
    Circuit IoT Internet of Things JSON JavaScript Object Notation LoRa Long Range
    LPWA Low Power Wide Area MCF Monitoring and Control Framework MOSFET Metal–Oxide–Semiconductor
    Field-Effect Transistor MPL Middleware/Processing Layer MQTT Message Queue Telemetry
    Transport MS Monitoring Subsystem NL Network Layer PSL Perception/Sensing Layer
    PWM Pulse-Width Modulation RAM Random-Access Memory REST Representational State
    Transfer RS-485 Recommended Standard 485 SAS Smart Agricultural System SSH Secure
    Shell SSL Secure Sockets Layer TNL Transportation/Network Layer WiFi Wireless
    Fidelity References Khan, M.A.; Din, I.U.; Majali, T.; Kim, B.S. A Survey of Authentication
    in Internet of Things-Enabled Healthcare Systems. Sensors 2022, 22, 9089. [Google
    Scholar] [CrossRef] [PubMed] Adame, T.; Bel, A.; Carreras, A.; Melià-Seguí, J.;
    Oliver, M.; Pous, R. CUIDATS: An RFID–WSN hybrid monitoring system for smart health
    care environments. Future Gener. Comput. Syst. 2018, 78, 602–615. [Google Scholar]
    [CrossRef] Jeong, Y.S.; Shin, S.S. An IoT healthcare service model of a vehicle
    using implantable devices. Clust. Comput. 2018, 21, 1059–1068. [Google Scholar]
    [CrossRef] Alhazmi, A.K.; Kaed, E.; Al-Hammadi, F.; Alsakkaf, N.; Al-Hammadi,
    Y. The Internet of Things as a Tool Towards Smart Education: A Systematic Review.
    In Lecture Notes in Networks and Systems, Proceedings of the Future Technologies
    Conference (FTC), Vancouver, BC, Canada, 20–21 October 2022; Arai, K., Ed.; Springer
    International Publishing: Cham, Switzerland, 2023; Volume 3, pp. 633–648. [Google
    Scholar] [CrossRef] Mohammed, K.; Abdelhafid, M.; Kamal, K.; Ismail, N.; Ilias,
    A. Intelligent driver monitoring system: An Internet of Things-based system for
    tracking and identifying the driving behavior. Comput. Stand. Interfaces 2023,
    84, 103704. [Google Scholar] [CrossRef] Yesmin, T.; Agasti, S.; Pandit, J.K.;
    Mondal, B. Cyber Security and Its Prediction with Cloud Data Computing and IoT.
    In ICT with Intelligent Applications; Choudrie, J., Mahalle, P., Perumal, T.,
    Joshi, A., Eds.; Springer Nature Singapore: Singapore, 2023; pp. 43–50. [Google
    Scholar] [CrossRef] Pandey, J.K.; Jain, R.; Dilip, R.; Kumbhkar, M.; Jaiswal,
    S.; Pandey, B.K.; Gupta, A.; Pandey, D. Investigating Role of IoT in the Development
    of Smart Application for Security Enhancement. In IoT Based Smart Applications;
    Springer International Publishing: Cham, Switzerland, 2023; pp. 219–243. [Google
    Scholar] [CrossRef] Abdullah, T.; Zainuddin, S.A.; Md Nasir, N.A.; Said, N.M.;
    Yasoa’, M.R.; Muhamad, S.F.; Yusoff, M.N.H. Delivering Future-Ready Financial
    Management Course for Non-finance Students Using Internet of Things (IoT). In
    Impact of Artificial Intelligence, and the Fourth Industrial Revolution on Business
    Success; Alareeni, B., Hamdan, A., Eds.; Springer International Publishing: Cham,
    Switzerland, 2023; pp. 73–87. [Google Scholar] [CrossRef] Kumar, J.A. Role of
    the Internet of Things (IoT) in Digital Financial Inclusion. In IoT Based Smart
    Applications; Springer International Publishing: Cham, Switzerland, 2023; pp.
    363–373. [Google Scholar] [CrossRef] Ouhami, M.; Hafiane, A.; Es-Saady, Y.; El
    Hajji, M.; Canals, R. Computer Vision, IoT and Data Fusion for Crop Disease Detection
    Using Machine Learning: A Survey and Ongoing Research. Remote Sens. 2021, 13,
    2486. [Google Scholar] [CrossRef] Akansah, E.; Senoo, E.E.K.; Mendonça, I.; Aritsugi,
    M. Smart Agricultural Monitoring System: A Practical Design Approach. In Proceedings
    of the 12th International Conference on the Internet of Things, Delft, The Netherlands,
    7–10 November 2022; Association for Computing Machinery: New York, NY, USA, 2023;
    pp. 139–142. [Google Scholar] [CrossRef] Frankó, A.; Hollósi, G.; Ficzere, D.;
    Varga, P. Applied Machine Learning for IIoT and Smart Production—Methods to Improve
    Production Quality, Safety and Sustainability. Sensors 2022, 22, 9148. [Google
    Scholar] [CrossRef] Hasan, M.K.; Habib, A.A.; Shukur, Z.; Ibrahim, F.; Islam,
    S.; Razzaque, M.A. Review on cyber-physical and cyber-security system in smart
    grid: Standards, protocols, constraints, and recommendations. J. Netw. Comput.
    Appl. 2023, 209, 103540. [Google Scholar] [CrossRef] Maroua, B.; Rachida, A.A.;
    Abdelaziz, M. Smart farming architectures based on IoT review: Comparative study.
    Procedia Comput. Sci. 2022, 203, 783–788. [Google Scholar] [CrossRef] Fizza, K.;
    Banerjee, A.; Mitra, K.; Jayaraman, P.P.; Ranjan, R.; Patel, P.; Georgakopoulos,
    D. QoE in IoT: A vision, survey and future directions. Discov. Internet Things
    2021, 1, 4. [Google Scholar] [CrossRef] Chen, S.; Xu, H.; Liu, D.; Hu, B.; Wang,
    H. A Vision of IoT: Applications, Challenges, and Opportunities With China Perspective.
    IEEE Internet Things J. 2014, 1, 349–359. [Google Scholar] [CrossRef] Al-Qaseemi,
    S.A.; Almulhim, H.A.; Almulhim, M.F.; Chaudhry, S.R. IoT architecture challenges
    and issues: Lack of standardization. In Proceedings of the 2016 Future Technologies
    Conference (FTC), San Francisco, CA, USA, 6–7 December 2016; pp. 731–738. [Google
    Scholar] [CrossRef] Hinai, S.A.; Singh, A.V. Internet of things: Architecture,
    security challenges and solutions. In Proceedings of the 2017 International Conference
    on Infocom Technologies and Unmanned Systems (Trends and Future Directions) (ICTUS),
    Dubai, United Arab Emirates, 18–20 December 2017; pp. 1–4. [Google Scholar] [CrossRef]
    Kumari, T.; Kumar, R.; Dwivedi, R.K. Design of a Secure and Smart Healthcare IoT
    with Blockchain: A Review. In Proceedings of the IOT with Smart Systems; Choudrie,
    J., Mahalle, P., Perumal, T., Joshi, A., Eds.; Springer: Singapore, 2023; pp.
    229–238. [Google Scholar] [CrossRef] Sumit; Chhillar, R.S. A Review of Intelligent
    Transportation Systems in Existing Framework using IoT. Int. J. Eng. Trends Technol.
    2022, 70, 137–143. [Google Scholar] [CrossRef] Whaiduzzaman, M.; Barros, A.; Chanda,
    M.; Barman, S.; Sultana, T.; Rahman, M.S.; Roy, S.; Fidge, C. A Review of Emerging
    Technologies for IoT-Based Smart Cities. Sensors 2022, 22, 9271. [Google Scholar]
    [CrossRef] [PubMed] Thibaud, M.; Chi, H.; Zhou, W.; Piramuthu, S. Internet of
    Things (IoT) in high-risk Environment, Health and Safety (EHS) industries: A comprehensive
    review. Decis. Support Syst. 2018, 108, 79–95. [Google Scholar] [CrossRef] Samizadeh
    Nikoui, T.; Rahmani, A.M.; Balador, A.; Haj Seyyed Javadi, H. Internet of Things
    architecture challenges: A systematic review. Int. J. Commun. Syst. 2021, 34,
    e4678. [Google Scholar] [CrossRef] Gupta, B.; Quamara, M. An overview of Internet
    of Things (IoT): Architectural aspects, challenges, and protocols. Concurr. Comput.
    Pract. Exp. 2020, 32, e4946. [Google Scholar] [CrossRef] Xu, L.D.; He, W.; Li,
    S. Internet of Things in Industries: A Survey. IEEE Trans. Ind. Informatics 2014,
    10, 2233–2243. [Google Scholar] [CrossRef] Mirani, A.A.; Velasco-Hernandez, G.;
    Awasthi, A.; Walsh, J. Key Challenges and Emerging Technologies in Industrial
    IoT Architectures: A Review. Sensors 2022, 22, 5836. [Google Scholar] [CrossRef]
    Bellini, P.; Nesi, P.; Pantaleo, G. IoT-Enabled Smart Cities: A Review of Concepts,
    Frameworks and Key Technologies. Appl. Sci. 2022, 12, 1607. [Google Scholar] [CrossRef]
    Brewster, C.; Roussaki, I.; Kalatzis, N.; Doolin, K.; Ellis, K. IoT in Agriculture:
    Designing a Europe-Wide Large-Scale Pilot. IEEE Commun. Mag. 2017, 55, 26–33.
    [Google Scholar] [CrossRef] Hossein Motlagh, N.; Mohammadrezaei, M.; Hunt, J.;
    Zakeri, B. Internet of Things (IoT) and the Energy Sector. Energies 2020, 13,
    494. [Google Scholar] [CrossRef] [Green Version] Mohamad Jawad, H.H.; Bin Hassan,
    Z.; Zaidan, B.B.; Mohammed Jawad, F.H.; Mohamed Jawad, D.H.; Alredany, W.H.D.
    A Systematic Literature Review of Enabling IoT in Healthcare: Motivations, Challenges,
    and Recommendations. Electronics 2022, 11, 3223. [Google Scholar] [CrossRef] Yang,
    Y.; Wang, H.; Jiang, R.; Guo, X.; Cheng, J.; Chen, Y. A Review of IoT-Enabled
    Mobile Healthcare: Technologies, Challenges, and Future Trends. IEEE Internet
    Things J. 2022, 9, 9478–9502. [Google Scholar] [CrossRef] Saleem, J.; Hammoudeh,
    M.; Raza, U.; Adebisi, B.; Ande, R. IoT Standardisation: Challenges, Perspectives
    and Solution. In Proceedings of the 2nd International Conference on Future Networks
    and Distributed Systems, Amman, Jordan, 26–27 June 2018; Association for Computing
    Machinery: New York, NY, USA, 2018. [Google Scholar] [CrossRef] Vogel, B.; Varshney,
    R. Towards Designing Open and Secure IoT Systems: Insights for Practitioners.
    In Proceedings of the 8th International Conference on the Internet of Things,
    New York, NY, USA, 15–18 October 2018; Association for Computing Machinery: New
    York, NY, USA, 2018. [Google Scholar] [CrossRef] Liang, W.; Ji, N. Privacy challenges
    of IoT-based blockchain: A systematic review. Clust. Comput. 2022, 25, 2203–2221.
    [Google Scholar] [CrossRef] Palit, A.K. Internet of Things (IOT) Architecture—A
    Review. In Advances in Intelligent Systems and Computing, Proceedings of the International
    Conference on Recent Trends in Machine Learning, IoT, Smart Cities and Applications,
    Hyderabad, India, 16–17 September 2023; Gunjan, V.K., Zurada, J.M., Eds.; Springer
    Singapore: Singapore, 2021; pp. 67–72. [Google Scholar] [CrossRef] Kakkar, L.;
    Gupta, D.; Saxena, S.; Tanwar, S. IoT Architectures and Its Security: A Review.
    In Lecture Notes in Networks and Systems, Proceedings of the Second International
    Conference on Information Management and Machine Intelligence, Jaipur, India,
    24–25 July 2020; Goyal, D., Gupta, A.K., Piuri, V., Ganzha, M., Paprzycki, M.,
    Eds.; Springer Singapore: Singapore, 2021; pp. 87–94. [Google Scholar] [CrossRef]
    Kumar, K.; Kumar, A.; Kumar, N.; Mohammed, M.A.; Al-Waisy, A.S.; Jaber, M.M.;
    Shah, R.; Al-Andoli, M.N. Dimensions of Internet of Things: Technological Taxonomy
    Architecture Applications and Open Challenges-A Systematic Review. Wirel. Commun.
    Mob. Comput. 2022, 2022, 9148373. [Google Scholar] [CrossRef] Khaoula, T.; Abdelouahid,
    R.A.; Ezzahoui, I.; Marzak, A. Architecture design of monitoring and controlling
    of IoT-based aquaponics system powered by solar energy. Procedia Comput. Sci.
    2021, 191, 493–498. [Google Scholar] [CrossRef] Quy, V.K.; Hau, N.V.; Anh, D.V.;
    Ngoc, L.A. Smart healthcare IoT applications based on fog computing: Architecture,
    applications and challenges. Complex Intell. Syst. 2022, 8, 3805–3815. [Google
    Scholar] [CrossRef] Aivaliotis, V.; Tsantikidou, K.; Sklavos, N. IoT-Based Multi-Sensor
    Healthcare Architectures and a Lightweight-Based Privacy Scheme. Sensors 2022,
    22, 4269. [Google Scholar] [CrossRef] Kniess, J.; Rutke, J.C.; Castañeda, W.A.C.
    An IoT Transport Architecture for Passenger Counting: A Real Implementation. In
    Proceedings of the 2021 IFIP/IEEE International Symposium on Integrated Network
    Management (IM), Bordeaux, France, 18–20 May 2021; pp. 613–617. [Google Scholar]
    Salazar, R.; Pachón, Á. Develop of Mobility Services based on Intelligent Transport
    System (ITS) Architecture for an Intermediate City using Internet of Things (IoT).
    In Proceedings of the IV School on Systems and Networks, SSN 2018, Valdivia, Chile,
    29–31 October 2018; Céspedes, S., Bustos-Jiménez, J., Eds.; Volume 2178, pp. 21–23.
    [Google Scholar] Coito, T.; Firme, B.; Martins, M.S.; Costigliola, A.; Lucas,
    R.; Figueiredo, J.; Vieira, S.M.; Sousa, J.M. Integration of industrial IoT architectures
    for dynamic scheduling. Comput. Ind. Eng. 2022, 171, 108387. [Google Scholar]
    [CrossRef] Voicu, V.; Petreus, D.; Cebuc, E.; Etz, R. Industrial IoT (IIOT) Architecture
    for Remote Solar Plant Monitoring. In Proceedings of the 2022 21st RoEduNet Conference:
    Networking in Education and Research (RoEduNet), Sovata, Romania, 15–16 September
    2022; pp. 1–4. [Google Scholar] [CrossRef] Konduru, V.R.; Bharamagoudra, M.R.
    An architecture for enabling IoT interoperability between cross-platforms. Int.
    J. Internet Technol. Secur. Trans. 2021, 11, 545–563. [Google Scholar] [CrossRef]
    Trakadas, P.; Masip-Bruin, X.; Facca, F.M.; Spantideas, S.T.; Giannopoulos, A.E.;
    Kapsalis, N.C.; Martins, R.; Bosani, E.; Ramon, J.; Prats, R.G.; et al. A Reference
    Architecture for Cloud–Edge Meta-Operating Systems Enabling Cross-Domain, Data-Intensive,
    ML-Assisted Applications: Architectural Overview and Key Concepts. Sensors 2022,
    22, 9003. [Google Scholar] [CrossRef] Sun, Y.; Chen, S.; Fang, Y.; Xu, W.; Luo,
    Q.; Rui, L. A Trusted IoT Communication Architecture Based on Blockchain and Named
    Data Network. J. Phys. Conf. Ser. 2022, 2224, 012091. [Google Scholar] [CrossRef]
    Neto, R.J.; Merindol, P.; Theoleyre, F. A Multi-Domain Framework to Enable Privacy
    for Aggregated IoT Streams. In Proceedings of the 2020 IEEE 45th Conference on
    Local Computer Networks (LCN), Sydney, NSW, Australia, 16–19 November 2020; IEEE
    Computer Society: Los Alamitos, CA, USA, 2020; pp. 401–404. [Google Scholar] [CrossRef]
    Yelamarthi, K.; Aman, M.S.; Abdelgawad, A. An application-driven modular IoT architecture.
    Wirel. Commun. Mob. Comput. 2017, 2017, 1350929. [Google Scholar] [CrossRef] [Green
    Version] Piadyk, Y.; Steers, B.; Mydlarz, C.; Salman, M.; Fuentes, M.; Khan, J.;
    Jiang, H.; Ozbay, K.; Bello, J.P.; Silva, C. REIP: A Reconfigurable Environmental
    Intelligence Platform and Software Framework for Fast Sensor Network Prototyping.
    Sensors 2022, 22, 3809. [Google Scholar] [CrossRef] [PubMed] Adkins, J.; Ghena,
    B.; Jackson, N.; Pannuto, P.; Rohrer, S.; Campbell, B.; Dutta, P. The Signpost
    Platform for City-Scale Sensing. In Proceedings of the 2018 17th ACM/IEEE International
    Conference on Information Processing in Sensor Networks (IPSN), Porto, Portugal,
    11–13 April 2018; pp. 188–199. [Google Scholar] [CrossRef] [Green Version] Rafferty,
    J.; Synnott, J.; Ennis, A.; Nugent, C.; McChesney, I.; Cleland, I. SensorCentral:
    A Research Oriented, Device Agnostic, Sensor Data Platform. In Ubiquitous Computing
    and Ambient Intelligence; Ochoa, S.F., Singh, P., Bravo, J., Eds.; Springer International
    Publishing: Cham, Switzerland, 2017; pp. 97–108. [Google Scholar] [CrossRef] Cloete,
    A.H.; Booysen, M.J.; Sandell, R.C.; van der Merwe, A.B. Smart Electric Water Heaters:
    A System Architecture Proposal for Scalable IoT. In Proceedings of the Second
    International Conference on Internet of Things, Data and Cloud Computing, Cambridge,
    UK, 22–23 March 2017; Association for Computing Machinery: New York, NY, USA,
    2017. [Google Scholar] [CrossRef] CREATE-IoT. Cross Fertilisation through Alignment,
    Synchronisation and Exchanges for IoT. Available online: https://european-iot-pilots.eu/create-iot/
    (accessed on 20 December 2022). oneM2M. oneM2M: The IoT Standard. Available online:
    https://www.onem2m.org/ (accessed on 20 December 2022). IoT-A. Internet of Things-Architecture.
    Available online: https://www.iot-a.eu/ (accessed on 20 December 2022). Foundation,
    F. FIWARE: The Open Source Platform for Our Smart Digital Future. Available online:
    https://www.fiware.org/about-us/ (accessed on 20 December 2022). Kutseva, M. Adaptation
    of Seven-Layered IoT Architecture for Energy Efficiency Management in Smart House.
    In Proceedings of the 2022 10th International Scientific Conference on Computer
    Science (COMSCI), Sofia, Bulgaria, 30 May–2 June 2022; pp. 1–5. [Google Scholar]
    [CrossRef] Bahashwan, A.A.; Anbar, M.; Abdullah, N.; Al-Hadhrami, T.; Hanshi,
    S.M. Review on Common IoT Communication Technologies for Both Long-Range Network.
    In Advances on Smart and Soft Computing; Saeed, F., Al-Hadhrami, T., Mohammed,
    F., Mohammed, E., Eds.; Springer Singapore: Singapore, 2021; pp. 341–353. [Google
    Scholar] [CrossRef] Shilpa, B.; Radha, R.; Movva, P. Comparative Analysis of Wireless
    Communication Technologies for IoT Applications. In Artificial Intelligence and
    Technologies; Raje, R.R., Hussain, F., Kannan, R.J., Eds.; Springer Singapore:
    Singapore, 2022; pp. 383–394. [Google Scholar] [CrossRef] Feng, X.; Yan, F.; Liu,
    X. Study of Wireless Communication Technologies on Internet of Things for Precision
    Agriculture. Wirel. Pers. Commun. 2019, 108, 1785–1802. [Google Scholar] [CrossRef]
    Souri, A.; Hussien, A.; Hoseyninezhad, M.; Norouzi, M. A systematic review of
    IoT communication strategies for an efficient smart environment. Trans. Emerg.
    Telecommun. Technol. 2022, 33, e3736. [Google Scholar] [CrossRef] Parri, L.; Parrino,
    S.; Peruzzi, G.; Pozzebon, A. Low Power Wide Area Networks (LPWAN) at Sea: Performance
    Analysis of Offshore Data Transmission by Means of LoRaWAN Connectivity for Marine
    Monitoring Applications. Sensors 2019, 19, 3239. [Google Scholar] [CrossRef] [Green
    Version] Aref, M.; Sikora, A. Free space range measurements with Semtech Lora™
    technology. In Proceedings of the 2014 2nd International Symposium on Wireless
    Systems within the Conferences on Intelligent Data Acquisition and Advanced Computing
    Systems, Odessa, Ukraine, 11–12 September 2014; pp. 19–23. [Google Scholar] [CrossRef]
    Rautmare, S.; Bhalerao, D.M. MySQL and NoSQL database comparison for IoT application.
    In Proceedings of the 2016 IEEE International Conference on Advances in Computer
    Applications (ICACA), Coimbatore, India, 24 October 2016; pp. 235–238. [Google
    Scholar] [CrossRef] Reetishwaree, S.; Hurbungs, V. Evaluating the performance
    of SQL and NoSQL databases in an IoT environment. In Proceedings of the 2020 3rd
    International Conference on Emerging Trends in Electrical, Electronic and Communications
    Engineering (ELECOM), Balaclava, Mauritius, 25–27 November 2020; pp. 229–234.
    [Google Scholar] [CrossRef] Amghar, S.; Cherdal, S.; Mouline, S. Which NoSQL database
    for IoT Applications? In Proceedings of the 2018 International Conference on Selected
    Topics in Mobile and Wireless Networking (MoWNeT), Tangier, Morocco, 20–22 June
    2018; pp. 131–137. [Google Scholar] [CrossRef] Ansari, D.B.; Rehman, A.-U.; Mughal,
    R.A. Internet of Things (IoT) Protocols: A Brief Exploration of MQTT and CoAP.
    Int. J. Comput. Appl. 2018, 179, 9–14. [Google Scholar] [CrossRef] Chandnani,
    N.; Khairnar, C.N. An analysis of architecture, framework, security and challenging
    aspects for data aggregation and routing techniques in IoT WSNs. Theor. Comput.
    Sci. 2022, 929, 95–113. [Google Scholar] [CrossRef] Sen, S.; Song, L. An IIoT-Based
    Networked Industrial Control System Architecture to Secure Industrial Applications.
    In Proceedings of the 2021 IEEE Industrial Electronics and Applications Conference
    (IEACon), Penang, Malaysia, 22–23 November 2021; pp. 280–285. [Google Scholar]
    [CrossRef] Kazdaridis, G.; Sidiropoulos, N.; Zografopoulos, I.; Symeonidis, P.;
    Korakis, T. Nano-Things: Pushing Sleep Current Consumption to the Limits in IoT
    Platforms. In Proceedings of the 10th International Conference on the Internet
    of Things, Malmö, Sweden, 6–9 October; Association for Computing Machinery: New
    York, NY, USA, 2020. [Google Scholar] [CrossRef] Jawad, H.M.; Nordin, R.; Gharghan,
    S.K.; Jawad, A.M.; Ismail, M.; Abu-AlShaeer, M.J. Power Reduction with Sleep/Wake
    on Redundant Data (SWORD) in a Wireless Sensor Network for Energy-Efficient Precision
    Agriculture. Sensors 2018, 18, 3450. [Google Scholar] [CrossRef] [Green Version]
    Shandong Renke Control Technology Co. Ltd. Soil NPK Sensor. Available online:
    https://www.renkeer.com/product/soil-npk-sensor/ (accessed on 2 January 2023).
    Qazi, S.; Khawaja, B.A.; Farooq, Q.U. IoT-Equipped and AI-Enabled Next Generation
    Smart Agriculture: A Critical Review, Current Challenges and Future Trends. IEEE
    Access 2022, 10, 21219–21235. [Google Scholar] [CrossRef] Ayaz, M.; Ammad-Uddin,
    M.; Sharif, Z.; Mansour, A.; Aggoune, E.H.M. Internet-of-Things (IoT)-Based Smart
    Agriculture: Toward Making the Fields Talk. IEEE Access 2019, 7, 129551–129583.
    [Google Scholar] [CrossRef] Farooq, M.S.; Riaz, S.; Abid, A.; Umer, T.; Zikria,
    Y.B. Role of IoT Technology in Agriculture: A Systematic Literature Review. Electronics
    2020, 9, 3450. [Google Scholar] [CrossRef] [Green Version] Habibzadeh, H.; Dinesh,
    K.; Rajabi Shishvan, O.; Boggio-Dandry, A.; Sharma, G.; Soyata, T. A Survey of
    Healthcare Internet of Things (HIoT): A Clinical Perspective. IEEE Internet Things
    J. 2020, 7, 53–71. [Google Scholar] [CrossRef] [PubMed] Preethi, S.; Akshaya,
    A.; Seshadri, H.; Kumar, V.; Devi, R.S.; Rengarajan, A.; Thenmozhi, K.; Praveenkumar,
    P. IoT based Healthcare Monitoring and Intravenous Flow Control. In Proceedings
    of the 2020 International Conference on Computer Communication and Informatics
    (ICCCI), Coimbatore, India, 22–24 January 2020; pp. 1–6. [Google Scholar] [CrossRef]
    Binti Wan Abdullah, W.A.N.; Yaakob, N.; Badlishah, R.; Amir, A.; binti Yah, S.A.
    On the effectiveness of congestion control mechanisms for remote healthcare monitoring
    system in IoT environment — A review. In Proceedings of the 2016 3rd International
    Conference on Electronic Design (ICED), Phuket, Thailand, 11–12 August 2016; pp.
    348–353. [Google Scholar] [CrossRef] Rohokale, V.M.; Prasad, N.R.; Prasad, R.
    A cooperative Internet of Things (IoT) for rural healthcare monitoring and control.
    In Proceedings of the 2011 2nd International Conference on Wireless Communication,
    Vehicular Technology, Information Theory and Aerospace & Electronic Systems Technology
    (Wireless VITAE), Chennai, India, 28 February–3 March 2011; pp. 1–6. [Google Scholar]
    [CrossRef] Jayaraman; Hema. Industrial monitoring and control system using IoT.
    AIP Conf. Proc. 2022, 2519, 030080. [Google Scholar] [CrossRef] Mali, P.S.; Dankan
    Gowda, V.; Tirmare, H.A.; Suryawanshi, V.A.; Chaturvedi, A. Novel Predictive Control
    and Monitoring System based on IoT for Evaluating Industrial Safety Measures.
    Int. J. Electr. Electron. Res. 2022, 10, 1050–1057. [Google Scholar] [CrossRef]
    González, H.; Diaz, A.; Jaimes, L.; Meza, C. Design of IoT Platform for Monitoring
    and Control of Variables of Industrial Processes. In Computer Networks, Big Data
    and IoT; Pandian, A.P., Fernando, X., Haoxiang, W., Eds.; Springer Nature Singapore:
    Singapore, 2022; pp. 451–462. [Google Scholar] [CrossRef] Ramalingam, S.; Baskaran,
    K.; Kalaiarasan, D. IoT Enabled Smart Industrial Pollution Monitoring and Control
    System Using Raspberry Pi with BLYNK Server. In Proceedings of the 2019 International
    Conference on Communication and Electronics Systems (ICCES), Coimbatore, India,
    17–19 July 2019; pp. 2030–2034. [Google Scholar] [CrossRef] Karthikeyan, D.; Singh,
    M.; Dewangan, G.; Veer, J. Industrial monitoring and control using raspberry PI
    with IoT. J. Adv. Res. Dyn. Control Syst. 2018, 10, 1188–1196. [Google Scholar]
    Zabasta, A.; Avotins, A.; Porins, R.; Apse-Apsitis, P.; Bicans, J.; Korabicka,
    D. Development of IoT based Monitoring and Control System for Small Industrial
    Greenhouses. In Proceedings of the 2021 10th Mediterranean Conference on Embedded
    Computing (MECO), Budva, Montenegro, 7–10 June 2021; pp. 1–5. [Google Scholar]
    [CrossRef] Salhaoui, M.; Guerrero-González, A.; Arioua, M.; Ortiz, F.J.; El Oualkadi,
    A.; Torregrosa, C.L. Smart Industrial IoT Monitoring and Control System Based
    on UAV and Cloud Computing Applied to a Concrete Plant. Sensors 2019, 19, 3316.
    [Google Scholar] [CrossRef] [Green Version] Sathish, R.; Kumar, D.V.; Senthilkumar,
    C. Design and implementation IOT based industrial sub station monitoring and control
    system. J. Adv. Res. Dyn. Control Syst. 2020, 12, 1796–1801. [Google Scholar]
    [CrossRef] Sukode, S.; Gite, S. Vehicle traffic congestion control & monitoring
    system in IoT. Int. J. Appl. Eng. Res. 2015, 10, 19513–19524. [Google Scholar]
    Mohammadi, F.; Rashidzadeh, R. An Overview of IoT-Enabled Monitoring and Control
    Systems for Electric Vehicles. IEEE Instrum. Meas. Mag. 2021, 24, 91–97. [Google
    Scholar] [CrossRef] Godwin, J.J.; Krishna, B.V.S.; Rajeshwari, R.; Sushmitha,
    P.; Yamini, M. IoT Based Intelligent Ambulance Monitoring and Traffic Control
    System. Intell. Syst. Ref. Libr. 2021, 193, 269–278. [Google Scholar] [CrossRef]
    Afonso, J.A.; Sousa, R.A.; Ferreira, J.C.; Monteiro, V.; Pedrosa, D.; Afonso,
    J.L. IoT system for anytime/anywhere monitoring and control of vehicles’ parameters.
    In Proceedings of the 2017 IEEE International Conference on Service Operations
    and Logistics, and Informatics (SOLI), Bari, Italy, 18–20 September 2017; pp.
    193–198. [Google Scholar] [CrossRef] [Green Version] Maraveas, C.; Bartzanas,
    T. Application of Internet of Things (IoT) for Optimized Greenhouse Environments.
    AgriEngineering 2021, 3, 954–970. [Google Scholar] [CrossRef] Singh, D.K.; Sobti,
    R.; Jain, A.; Malik, P.K.; Le, D.N. LoRa based intelligent soil and weather condition
    monitoring with internet of things for precision agriculture in smart cities.
    IET Commun. 2022, 16, 604–618. [Google Scholar] [CrossRef] Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Senoo, E.E.K.; Akansah, E.; Mendonça, I.; Aritsugi,
    M. Monitoring and Control Framework for IoT, Implemented for Smart Agriculture.
    Sensors 2023, 23, 2714. https://doi.org/10.3390/s23052714 AMA Style Senoo EEK,
    Akansah E, Mendonça I, Aritsugi M. Monitoring and Control Framework for IoT, Implemented
    for Smart Agriculture. Sensors. 2023; 23(5):2714. https://doi.org/10.3390/s23052714
    Chicago/Turabian Style Senoo, Elisha Elikem Kofi, Ebenezer Akansah, Israel Mendonça,
    and Masayoshi Aritsugi. 2023. \"Monitoring and Control Framework for IoT, Implemented
    for Smart Agriculture\" Sensors 23, no. 5: 2714. https://doi.org/10.3390/s23052714
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations ads   3 Crossref   5
    PMC   2 Scopus   6 Web of Science   4 PubMed   2 Google Scholar   [click to view]
    Article Access Statistics Article access statistics Article Views 6. Jan 16. Jan
    26. Jan 5. Feb 15. Feb 25. Feb 6. Mar 16. Mar 26. Mar 0k 1k 2k 3k 4k For more
    information on the journal statistics, click here. Multiple requests from the
    same IP address are counted as one view.   Sensors, EISSN 1424-8220, Published
    by MDPI RSS Content Alert Further Information Article Processing Charges Pay an
    Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For
    Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Monitoring and Control Framework for IoT, Implemented for Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Pagano A.
  - Croce D.
  - Tinnirello I.
  - Vitale G.
  citation_count: '26'
  description: This article provides a survey on the adoption of LoRa in the agricultural
    field and reviews state-of-the-art solutions for smart agriculture, analyzing
    the potential of this technology in different infield applications. In particular,
    we consider four reference scenarios, namely, irrigation systems, plantation and
    crop monitoring, tree monitoring, and livestock monitoring, which exhibit heterogeneous
    requirements in terms of network bandwidth, density, sensors' complexity, and
    energy demand, as well as latency in the decision process. We discuss how LoRa-based
    solutions can work in these scenarios, analyzing their scalability, interoperability,
    network architecture, and energy efficiency. Finally, we present possible future
    research directions and point out some open issues which might become the main
    research trends for the next years.
  doi: 10.1109/JIOT.2022.3230505
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 10 Issue: 4 A Survey on LoRa for Smart Agriculture: Current Trends and
    Future Perspectives Publisher: IEEE Cite This PDF Antonino Pagano; Daniele Croce;
    Ilenia Tinnirello; Gianpaolo Vitale All Authors 23 Cites in Papers 4697 Full Text
    Views Open Access Under a Creative Commons License Abstract Document Sections
    I. Introduction II. LoRa and Its Perspectives in Agriculture III. Smart Agriculture
    Applications and Challenges IV. Generic LoRa-Based Platforms V. Application-Specific
    LoRa Platforms Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: This article provides a survey on the adoption of LoRa in the
    agricultural field and reviews state-of-the-art solutions for smart agriculture,
    analyzing the potential of this technology in different infield applications.
    In particular, we consider four reference scenarios, namely, irrigation systems,
    plantation and crop monitoring, tree monitoring, and livestock monitoring, which
    exhibit heterogeneous requirements in terms of network bandwidth, density, sensors’
    complexity, and energy demand, as well as latency in the decision process. We
    discuss how LoRa-based solutions can work in these scenarios, analyzing their
    scalability, interoperability, network architecture, and energy efficiency. Finally,
    we present possible future research directions and point out some open issues
    which might become the main research trends for the next years. Published in:
    IEEE Internet of Things Journal ( Volume: 10, Issue: 4, 15 February 2023) Page(s):
    3664 - 3679 Date of Publication: 20 December 2022 ISSN Information: DOI: 10.1109/JIOT.2022.3230505
    Publisher: IEEE Funding Agency: SECTION I. Introduction In the near future, the
    agricultural sector is called to face a significant challenge due to increasingly
    scarce resources, extreme weather conditions, a growing population, and a reduction
    in arable land [1]. Indeed, according to the FAO, by 2050, the world’s population
    will reach about 10 billion and, to be able to feed everyone, we will have to
    produce 70% more food [2], [3]. A practical and feasible solution is to move from
    the old farming concept to smart agriculture, with the adoption of information
    and communications technologies (ICTs) that help farmers to monitor, manage, and
    optimize their operations more effectively [4]. In particular, the introduction
    of the Internet of Things (IoT) applications, every single step of agricultural
    production can be improved: from soil management to minimizing water consumption,
    from plant protection to animal health and farm automation [5], [6]. Smart devices
    located infields are able to collect information and control the evolution of
    the different processes at various production stages. Besides, the miniaturization
    of electronic components allows to implement IoT sensors with reduced form factor
    and energy consumption, monitoring many variables of interest, such as temperature,
    humidity, wind speed and direction, soil conditions, chemical concentrations,
    crop growth, and solar exposure, as well as possible damages caused by drought,
    hail, or flooding. IoT systems integrate all this and other data and turn it into
    useful statistics: for example, predictive analysis allows farmers to use the
    strictly necessary resources (water, pesticides, fertilizers, etc.) and only where
    there is a real need, e.g., for poorly irrigated areas of the field, weak or sick
    plants, etc. [7], [8]. Despite such potential benefits, the deployment of smart
    agriculture systems is still in its infancy. Indeed, an obstacle to the digitization
    of agriculture is the lack or limitations of Internet connectivity in many areas.
    In the literature, several communication protocols have been proposed, with different
    characteristics related to cost, coverage, power consumption, and reliability
    [9]. Among the available technologies (summarized in Fig. 1 in terms of power
    consumption and coverage range), low-power wide-area networks (LPWANs), enlightened
    in a dashed box in Fig. 1 represent the best solution for supporting smart agriculture
    requirements. One of the most adopted LPWAN technology is LoRaWAN, which offers
    wide network coverage, built-in security, low cost, and limited power consumption
    during operation [10]. Fig. 1. Classification of wireless technologies: power
    consumption versus communication range [11]. Show All Indeed, LoRaWAN is an open
    system based on a very robust modulation (called LoRa), which provides several
    interesting features for covering rural areas with simple devices [9]. For such
    reasons, LoRa has been widely employed and tested in the agricultural field, connecting
    environmental sensors measuring temperature, air/soil moisture, etc., or to control
    different kinds of actuators (e.g., irrigation valves), and in applications, such
    as tractor communications, livestock monitoring, and location tracing [12], [13],
    [14]. Differently from existing surveys, which either treat LoRa together with
    all other IoT solutions or consider very specific technological aspects, we consider
    the adoption of these systems from an holistic perspective. For example, LoRa
    is cited in [5] in the general framework of IoT; [7] cites LoRa among the most
    promising technologies for agricultural IoT, and the same plan is followed by
    [8] which dedicated a Section to LoRa in Enabling Communication Technologies;
    similarly [15] includes LoRa in IoT communication protocols suitable for smart
    agriculture. On the other hand, [16] is specific to LoRa but is focused only on
    the protocol performance, [13] takes into consideration only the energy consumption
    of LoRa, [17] discusses the application of the technologies of industry 4.0 in
    the context of smart agriculture. Papers [18] and [19] deal with specific issues
    meaning the decision support system (DSS) and robotics in agriculture, respectively.
    Instead, in this article, we strive to provide a thorough and focused analysis
    on LoRa/LoRaWAN application in smart agriculture, offering a comprehensive view
    of the advancements and in-field applications of this IoT technology. LoRaWAN
    relies on LoRa modulation, a robust chirp-based modulation scheme, patented by
    Semtech [20]. It supports wireless connectivity with limited data rates over large
    areas and without the need of an operator. LoRaWAN is widely used in smart industry,
    smart home, smart city and, increasingly, in the smart agriculture environment.
    In the view of the authors of this article, LoRaWAN possesses five main strengths
    (low-cost, long-range, low-power, no-operator, and unlicensed spectrum) that can
    bridge the gap between smart agriculture and smart cities or industries. Moreover,
    several recent improvements on the resource allocation, channel access protocol,
    and network planning can enhance the efficiency of LoRaWAN networks, reducing
    capital and operational costs [21]. In rural areas, several experiments have demonstrated
    good coverage of LoRa [22], [23], [12]. Coverage ranges of up to 5 and 47 km have
    been obtained in the non-line-of-sight (NLOS) and line-of-sight (LOS) propagation
    conditions, respectively. In addition, in the case of NLOS propagation, the coverage
    range can be increased by using an unmanned aerial vehicle (UAV) [24], [25]. In
    terms of power consumption, LoRa offers up to 15 years of battery life to its
    devices. The low power consumption is a key feature of LoRa that makes it an ideal
    choice for smart agriculture applications. It was demonstrated experimentally
    that the estimated battery lifetime of a LoRa device may be six times that of
    a Wi-Fi device and two times that of a ZigBee device [26]. In this article, we
    provide a broad survey of LoRa-based smart agriculture systems, analyzing the
    state-of-the-art and highlighting for each solution the possible adoption of Machine
    Learning, control automation techniques, and energy autonomy features. We classify
    these works in four main categories: 1) irrigation systems; 2) plantation and
    crop monitoring; 3) tree monitoring; and 4) livestock monitoring. These LoRa systems
    are analyzed in terms of scalability, interoperability, network architecture,
    energy efficiency, and point out some open issues which traverse most of the current
    smart agriculture systems. References have been selected based on recent papers
    dealing with smart agriculture; however, some contributions in different fields
    useful as a benchmark are cited as well. Finally, we present the lessons learned
    and draw future research directions which we think crucial for the success and
    widespread of such technologies. The remainder of this article is structured as
    follows. Section II provides an overview of LoRa technology and its perspectives
    in agriculture, while Section III offers a brief summary on smart agriculture
    applications and their main challenges. Section IV reports on general purpose
    LoRa-based IoT platforms applied to smart agriculture. Section V, instead, discusses
    specific vertical solutions for smart agriculture, according to the four above-mentioned
    categories. Lessons learned and future research directions are proposed in Section
    VI. Finally, conclusions are drawn in Section VII. SECTION II. LoRa and Its Perspectives
    in Agriculture LoRa technology is a proprietary physical layer technology patented
    by Semtech, which is revealing as a promising solution for large-scale low-power
    IoT deployments, including smart agriculture applications. Indeed, by operating
    in the unlicensed industrial, scientific, and medical (ISM) radio bands and with
    a robust chirp-based modulation scheme, LoRa provides a cheap solution for supporting
    wireless connectivity with limited data rates (from 0.3 to 27 kb/s) in large areas
    and without the need of an operator. Moreover, LoRa transmissions are regulated
    by having a maximum transmission power of 25 mW (14 dBm) in the uplink, a configurable
    bandwidth of 125, 250, or 500 kHz, and a duty cycle of 0.1%, 1.0%, and 10%, which
    permit low energy consumption. In some scenarios, the battery of LoRa devices
    can last up to 15 years. Although LoRa technology is limited to the physical layer,
    different network solutions can be built on top of it, by exploiting its transmission
    interfaces. Among these, the most consolidated one is the open-source solution
    promoted by the LoRa Alliance, which is called LoRaWAN [27]. LoRaWAN networks
    are based on a simple star of star topology (Fig. 2): end-devices (EDs), such
    as sensors or actuators deployed infield, transmit packets on the wireless medium
    to fixed nodes called gateways (GWs), which, in turn, forward the collected packets
    to a central network server (NS) interacting with several application servers
    (ASs) [28]. The network infrastructure between GWs, NS, and ASs is typically based
    on a wired Internet technology, while EDs are not associated to a specific GW,
    which greatly simplifies implementation (e.g., in case of mobility [29]): in case
    a duplicate packet is simultaneously received by multiple GWs, the NS is responsible
    of filtering these packets and performs other simple decisions on network configuration.
    Fig. 2. LoRaWAN typical architecture. Show All To minimize the protocol complexity
    and the energy consumption, LoRaWAN employs a simple Aloha MAC protocol and defines
    three classes of devices (Fig. 3). Device classes represent different ways of
    managing the reception operations performed by the EDs. Class A devices, corresponding
    to the lowest energy profile, can receive downlink packets only in two time windows
    following the transmission of their own packet to the GW. In other words, devices
    can sleep all the time and downlink transmissions are triggered only after an
    uplink one. Class B devices add to this possibility a periodic scheduling of reception
    windows, by keeping a time synchronization with the GW. Finally, class C devices
    are constantly listening to the channel for downlink packets. Any time that a
    new packet is ready for transmission, devices attempt to transmit by randomly
    selecting one of the available channels in the ISM bands (e.g., in the 868 MHz
    there are 16 channels in Europe), together with a modulation parameter called
    spreading factor (SF). More into details, six different SFs are used in LoRa (from
    SF7 to SF12), which result in different symbol times and in almost orthogonal
    transmissions: when two signals modulated at different SFs overlap, the GW is
    able to decode both transmissions in a wide range of power ratios among the signals
    [30]. Unlike many other IoT technologies, the LoRaWAN specification offers dedicated
    end-to-end encryption to application providers, together with network-level security
    primitives, which allow sharing the same network among multitenant applications
    [31]. Fig. 3. LoRaWAN technology stack. Show All Summarizing, the ease of deployment
    with excellent coverage, the availability of devices with very low energy demand,
    and intrinsic security mechanisms make these systems very suitable for innovative
    agriculture applications. Indeed, several state-of-the-art IoT applications in
    smart agriculture are based on LoRa/LoRaWAN networks. For example, LoRa is used
    to connect sensor nodes measuring environmental parameters or to control different
    kinds of actuators (e.g., solenoid valve for irrigation purposes), and in applications
    such as livestock monitoring and location tracing [13], [10], [14]. These applications
    are not critical for data rates and latency, but often require to work in large
    rural areas, with limited access to energy grids and the Internet, and with decision
    mechanisms which benefit from data-driven learning. SECTION III. Smart Agriculture
    Applications and Challenges While industrial production processes have already
    become smarter and autonomous thanks to the implementation of the so called Industry
    4.0 concept, the integration of technologies such as IoT, artificial intelligence
    (AI), robotics, and big data is more recent in agriculture. The availability of
    IoT technologies for supporting wireless connectivity in rural areas and controlling
    infields smart objects shows a great potential for improving the agricultural
    sector, toward the so called smart agriculture [17], [18], [19]. Indeed, farm
    monitoring and automation can make production more efficient and sustainable [7],
    by promptly detecting and reacting to water or moisture stress, wastes of raw
    materials, crops’ diseases, pests, and nutrient deficiencies, as well as problems
    related to the wellbeing of farm animals. The interest on the development of smart
    agriculture applications has been demonstrated by the recent commercialization
    of agricultural sensors and robots (called Agribots), specifically designed for
    reducing the intense physical labor traditionally required in agriculture [15].
    Apart from the availability of smart devices for interacting with the farm in
    the physical world, smart agriculture applications require to build a digital
    representation of the farm status and a decision logic based on the collected
    data. Different protocols can be envisioned both for providing the wireless connectivity
    to heterogeneous devices (from simple low-cost temperature sensors, to complex
    remote-controlled robots) and exporting data for analysis and decisions [32],
    [33]. Since a large amount of data can be produced by agricultural sensors, big
    data analysis can provide efficient monitoring and processing methods [34]. Data
    processing may involve various features such as data loading, validation, aggregation,
    prediction, classification, image or video processing, and data mining. Thus,
    based on the acquired data, DSSs can optimize the productivity and reduce the
    ecological footprint of the farm. Researchers recognize that digitization of farming
    processes and activities is an important challenge for the adoption of smart agriculture
    technologies [32], [35]. In particular, the major challenges to digitization in
    agriculture can be categorized as follows. Communication Issues: As we will detail
    later, large-scale implementations of IoT solutions require robust and secure
    network architectures. The reliability of communicating information still represents
    a challenge to be addressed in the agricultural context and justifies the adoption
    of LoRa/LoRaWAN technologies. Energy Management: The power supply in devices for
    smart agriculture is a significant challenge and energy harvesting systems are
    a relevant area of research. The main issue concerns the sensor’s power supply
    and how to optimize efficiently the power consumption. Moreover, distributed nodes
    can execute some computations (Edge computing) which consumes more energy, while
    sensor batteries have a limited capacity. Consequently, smart devices require
    efficient energy storage and supply. Data/Device Heterogeneity: In general, the
    agricultural data is produced by heterogeneous sensors (soil sensors, weather
    sensors, trunk sensors, leaf sensors, etc.). In addition, IoT devices generally
    use different network protocols and platforms. Thus, in addition to sensors heterogeneity,
    network and protocol heterogeneity should be considered as well. Getting these
    technologies to work together is often an issue, especially for unskilled farmers.
    Physical Deployments: Spatial deployment of devices on farms proves to be a significant
    challenge, especially when the entire farm needs to be monitored across a large
    area and with different application scenarios (soil, plants, trees, animals, etc.).
    Data Management: The difficulty of interpreting the data can be a huge barrier:
    indeed, numerous sensors are necessary and big data analysis could be required
    to better understand and forecast the unpredictability of agricultural ecosystems.
    Generic Platform: To promote the adoption of smart agriculture technologies is
    often required to develop user friendly software platforms. The challenge here
    is to build a universal platform that can be easily modified to support different
    types of monitoring ranging from specific crop to livestock. These challenges,
    together with the cost of infrastructure investment, the complexity of technologies,
    lack of farmers’ education and training, data ownership, and privacy and security
    concerns, has motivated the research and development of innovative platforms,
    specific network technologies, and new architectures for smart agriculture [32],
    [35]. SECTION IV. Generic LoRa-Based Platforms Since agricultural applications
    are widely different, varying from soil and air monitoring, to irrigation automation
    and livestock breeding, several general purpose IoT platforms have been adapted
    for farmers to accommodate all these applications together under a unified, easy
    to understand and simple to use interface. Therefore, in this section, we will
    discuss some of these LoRa-based platforms horizontally designed for smart agriculture,
    while in the next one, we will dig into more vertical and application-specific
    systems, focusing on the four reference scenarios depicted in Fig. 4. Fig. 4.
    Four reference applications in smart agriculture. Show All Generic and open IoT
    platforms can indeed help to digitize farms by integrating numerous agriculture
    applications, harmonizing specific sensing devices, actuators, and decision logics,
    which exhibit heterogeneous requirements in terms of network bandwidth, latency,
    sensors’ complexity, and energy requirements. A clear example is constituted by
    FIWARE [36], a powerful open-source platform, sponsored by the European Commission,
    that provides standardized interfaces for many different IoT sectors including
    agriculture. The FIWARE platform includes several parts called generic enablers
    (GEs), which provide components and reference implementations that support specific
    APIs, and can integrate data collected from heterogeneous sensors using different
    communication technologies, to create custom applications [37], [38]. Several
    GEs are available making it easier to interface with IoT systems, and the IoT
    Agent for LoRaWAN offers a bridge between LoRaWAN and the FIWARE Context Broker
    (the core component of the “Powered by FIWARE” platforms). Moreover, FIWARE can
    be combined with other third-party platforms to provide accessible tools to worldwide
    farmers and consumers too [39]. Another example is the work in [40] where low-cost,
    LoRa-based devices are used for soil temperature and humidity monitoring, and
    the data is processed and sent to the Cayenne IoT Platform for storage and visualization
    [41]. This platform is a drag and drop project builder for developers and engineers
    that can be used in different IoT applications. It encompasses cloud-based web
    applications as well as mobile apps for Android and IOS devices. Cayenne can integrate
    any tool into the library with a wide variety of IoT ready-to-use devices and
    connectivity options. Other LoRaWAN-based IoT platforms are more specific to the
    agricultural world, aiming at improving the management of generic farms in a highly
    customizable way. For example, the LoRaFarM platform [42] has a generally applicable
    “core” infrastructure, which can be completed with specialized ad-hoc modules
    depending on the farm’s characteristics and requirements. The LoRaFarM platform
    derives its topological structure from the LoRaWAN architecture, since low-level
    communication patterns are built around the LoRaWAN technology (see Fig. 5). Hence,
    expansion modules can be added at farm level (or low level), if they include physical
    hardware to be installed in the deployment (sensors or actuators), as well as
    a high level, in case data processing is needed. The middleware, in the LoRaFarM
    domain, refers to the set of entities and technologies by which data coming from
    farm-level modules are collected, stored, and exposed to high-level modules. This
    middleware can be defined as a sort of “connecting layer” between the farm and
    the back-end domain. Fig. 5. LoRaFarM platform: levels and parallelism with LoRaWAN
    [42]. Show All One of the main advantages of the LoRaFarM platform is that heterogeneous
    subnetworks, in terms of capabilities (transmission range, data throughput, and
    energy consumption), can be incorporated without altering the platform structure
    and, thus, making it highly scalable, flexible, and suitable for a wide range
    of scenarios. Indeed, this gives the freedom to choose the most suitable communication
    protocols and traffic policy to monitor and control the farm different areas,
    such as greenhouses and fields. Messages between nodes employing different protocols
    are translated by a multiprotocol GateWay (mpGW), enabling communications between
    non-LoRaWAN-enabled nodes and the LoRaFarM middleware, in a seamless way. Its
    protocol translation functionality, the mpGW can be enriched with edge computing
    features, to process and aggregate sensor data. Moreover, LoRaFarM can be extended
    with new functionalities like data analysis and prediction of the evolution of
    environmental parameters to prevent plant diseases, relying on AI and Machine
    Learning techniques. Finally, the mySense environment proposed by Silva et al.
    [58] is a sensor data integration framework aimed to systematize data acquisition
    procedures to address common smart agriculture issues. It facilitates the use
    of low cost platforms such as Arduino and Raspberry Pi, making available a set
    of free tools based on the do it yourself (DIY) concept. The mySense platform
    builds over a 4-layer technological structure (sensor nodes, crop field and sensor
    networks, cloud services and front-end applications) and is accordingly divided
    into four levels of operation: Level 1, for data collection using common data
    transfer technologies (ZigBee, GSM/GPRS, LoRa, etc.); Level 2, for GWs (possibly)
    running local tasks according to the fog or edge computing paradigms; Level 3
    for storing data in the cloud; and Level 4 for high-level applications. Data can
    arrive from any device provided that complies with the data formats allowed by
    the platform. Summary and Insights: This Section discussed LoRa-based platforms
    which can be exploited to unify different applications into one simple and easy-to-use
    platform. Platforms such as Fiware, Cayenne, LoRaFarM, and mySense provide standardized
    interfaces to integrate different agricultural applications with each other. These
    platforms provide ready-to-use solutions and connectivity between heterogeneous
    networks. With these platforms, LoRa can integrate and complement existing systems
    based on other network technologies (ZigBee, Bluetooth, etc.), making them highly
    scalable. SECTION V. Application-Specific LoRa Platforms In this section, we provide
    an in-depth review focusing four reference scenarios: 1) irrigation systems; 2)
    plantation and crop monitoring; 3) tree monitoring; and 4) livestock monitoring,
    which broadly cover most of smart agriculture applications. A. Irrigation Systems
    Accurate monitoring of the soil water status allows to achieve seasonal water
    savings of up to 90% compared to traditional management, increasing productivity
    and introducing significant savings in energy costs for the water pumps management
    [59]. To improve water management in agriculture, it is necessary to analyze and
    monitor the complex water interactions that occur in field, following the concept
    of soil-plant-atmosphere (SPA) continuum systems [60]. Indeed, the knowledge of
    the water status of the SPA system plays a significant role for understanding
    the crop water stress and implement water saving mechanisms with a minimal effect
    on the production [59]. Measuring the evapotranspiration (ET), which refers to
    the amount of water that passes from the soil into the air due to the combined
    effect of plant transpiration and evaporation, is another complex task. Examples
    of these sensors are the lysimeters or sophisticated micro-meteorological sensors
    (e.g., Eddy covariance), whose cost and complexity limit their application to
    research studies [61]. Cheaper systems are the time domain reflectometry (TDR)
    technique or gravimetric methods [62], whose main limit is the difficulty in calibration
    and automation. Some LoRa-based irrigation systems are implemented using development
    boards such as Arduino, ESP32, Pycom, or STM32, e.g., [43], [44], [47], [48],
    [46], and [51]. Few of them also include energy harvesting modules, such as an
    hydroelectric generator, allowing them to operate for decades. For example, the
    LoRaWAN-based irrigation system in [51] comprises an energy-neutral irrigation
    node (Fig. 6) with the following modules: controller module, power module, irrigation
    module, and transmitter module. Fig. 6. Energy-neutral irrigation node described
    in [51]. Show All Exploiting AI and data coming from different sensor, such as
    air temperature and humidity, soil temperature and humidity, light intensity,
    etc. makes possible to develop and train specific irrigation models to calculate
    the exact amount of water to be distributed. For example, the works [54], [55],
    [56] provide machine-learning-based smart irrigation systems, all employing LoRa
    technology. In particular, in [55], a random forest classifier predicts the soil
    moisture and, thus, irrigation is planned accordingly. In [54], instead, multiple
    linear regression algorithm is employed to train the model using two highest correlation
    coefficient features: 1) light intensity and 2) soil humidity. Data is collected
    with a LoRa P2P network, which uses a master–slave and TDMA-based MAC protocol.
    Each slave node has a unique address and can transmit a packet in each of the
    reserved TDMA time slots. Alternatively, a Penman-Monteith-based irrigation model
    allows for an optimal irrigation strategy for different crop growth periods and
    uses the ET parameter to estimate the amount of water [63]. This solution requires
    an integration of actuators, sensors and a meteorological station in a LoRa network
    [49], [50]. In addition, third-party services such as weather information or fog
    computing may be needed to decide on irrigation schedules [57]. Since in LoRaWAN,
    the latency of downlink communication from GW to Class-A nodes (sensors or actuators)
    is relatively long (must first wait for an uplink transmission), few systems employ
    alternative Master/Slave protocols [52], [53], [54]. These protocols increase
    the stability of the LoRa irrigation system, avoiding packet collisions and, thus,
    can save water during the close command of the solenoid valve. Finally, AREThOU5A
    [43] is an example of a water management system that combines data collected from
    wireless sensor networks (WSNs) in the field and satellite data provided by international
    weather forecast services, to achieve efficient water usage strategies for farmers.
    It employs a WSN with two different sensors for measuring the temperature and
    the soil moisture in field. A routing subsystem controls and routes the data and
    information through LoRaWAN and TCP/IP with SSL network interfaces. The LoRa network
    is used to collect data from the EDs and perform administration processes, while
    the TCP/IP SSL works as a bridge to the rest of the network architecture. Summary
    and Insights: Comparing the characteristics of different irrigation systems, summarized
    in Table I, it is relevant to note that most of these LoRa-based irrigation systems
    adopt temperature, humidity, and soil moisture sensors. However, albeit all cited
    papers are recently published, ML is used only in 1/3 of the applications. TABLE
    I LoRa-Based Irrigation System Comparison Furthermore, only 13% of these irrigation
    systems used an evapotranspiration-based methodology. This strategy, which is
    often expensive, may be accomplished by combining inexpensive sensors and AI (with
    a more comprehensive approach integrating meteorological variables measured by
    a weather station with variables measured by soil sensors into the system), significantly
    lowering the cost of direct evapotraspiration measurements. Such improvements
    could lead to more effective water management, with the simultaneous impact of
    decreasing water usage and increase crop output. Finally, LoRaWAN communications
    can be tuned to adapt the duty cycle and manage the system optimally: for example,
    when the irrigation system is not in use, sensor data could be collected every
    hour or even less, while when irrigation is taking place the measurements could
    be increased to every 5–10 min. This way, the use of water and energy could be
    further reduced [71]. B. Plantation and Crop Monitoring Plantation and crop monitoring
    requires a large number of sensors to obtain an effective control and, thus, increase
    productivity, especially when agricultural fields are very heterogeneous. For
    example, in order to optimize the production while minimizing the ecological footprint,
    it is necessary to control the injection of pesticides and fertilizers [72], [73],
    increasing yields up to 10% and saving fertilizers up to 37% [74]. Such control
    can be performed by varying the pesticides and fertilizer application rate over
    time and space. Crops do not always need a uniform application, as some areas
    have different requirements due to their location (sunlight, soil features, etc).
    Over-fertilization can deteriorate water quality, favor weed growth, and reduce
    profit. Vice-versa under-fertilization restricts yield or reduces crop quality
    [75]. The application rate can be modified based on weather impacts, nutrient
    availability, and seasonal cycles [73], [75]. Some optical or ultrasonic sensors
    indirectly assess the nutrient request (nitrogen, phosphorus, potassium, etc.)
    of the crop at the time of application [72]. In addition, to reduce the loss of
    productivity in crops, surveillance systems can be adopted [76]. Providing visual
    monitoring to growers can prevent crops from getting damaged by intruders, ensure
    the field conditions or enable the detection of pests attacks remotely. Although
    there are plenty of devices which can be exploited for building a real-time visual
    monitoring system, deploying them in a wide area and over wireless channels can
    be challenging [77], [78], [79]. Table II summarizes the main characteristics
    of several plantation and crop monitoring systems, based on LoRa technology. The
    nodes used in these systems should be of small dimensions, self-sufficient in
    terms of energy, relatively cheap, and often able to acquire a large variety of
    parameters. For example, three different sensor nodes have been developed by Valente
    et al. [64] and tested in a vineyard field: node 1, with an ultrasonic anemometer
    (that measures the direction and speed of the wind) and a sensor that monitors
    bulk electrical conductivity, in addition to volumetric water content (by measuring
    soil permittivity) and soil and air temperature; node 2, an irrometer watermark
    soil water tension sensor; and node 3, an all-in-one weather station with 12 sensors
    to measure air temperature, relative humidity, vapor pressure, barometric pressure,
    wind speed, gust and direction, solar radiation, precipitation, lightning strike
    counter, and distance. It should be remarked that each node contains sensors which
    differ for the sampling rate, accuracy, and supplied energy. The nodes send data
    using LoRaWAN to a GW that is connected to a the things network (TTN) server.
    In the TTN server, data is decoded and sent to the ThingSpeak [80] platform for
    visualization and possible analysis and aggregation. Fig. 7 summarizes the different
    blocks composing the nodes: 1) a maximum power point tracker (MPPT) applied to
    a photovoltaic source and connected with a storage system; 2) a dc/dc switching
    converter to interface the source with the storage system and loads; 3) the LoRaWAN
    module for communication; and 4) the analog-to-digital converter (ADC) module
    to convert the signals available from sensors. TABLE II LoRa-Based Plantation
    and Crop Monitoring System Comparison Fig. 7. Block diagram of the sensor nodes
    taken from [64]. Show All In [66] a LoRa-based IoT monitoring system for starfruit
    plantation is presented. The LoRa network implemented includes three nodes and
    one master, and it can cover a range of 700 m. For optimal growth, starfruit plants
    need soil pH conditions between 5.5–7.5. Thus, thanks to the proposed LoRa system,
    the farmers can make important and precise decisions about how to grow the crop.
    Similarly, works [65], [67], [68], [69], [58] present solutions to increase production
    and fruit quality, with optimal use of resources through LoRa-based networks.
    The Smart Mushroom Cultivation is a system used to automatize the production of
    expensive mushrooms [67]. The smart system includes devices to monitor and control
    humidity and C O 2 levels through sensors and actuators all connected using LoRaWAN.
    The sensor nodes measure the ambient condition inside Mushroom House (humidity,
    temperature, and C O 2 ), and data is sent to the remote server for monitoring
    and analysis. An automatic control maintains the ambient conditions between the
    required levels. Finally, there are cases where anomaly detection near the sensor
    is required to allow decisions and actions as soon as possible. In this direction,
    Brunelli et al. [70] proposed a new paradigm of monitoring and pest detection
    to improve the performance of an apple orchard. They add intelligence to the LoRa
    nodes, shifting the detection of anomalies near the sensor. The application is
    developed on a low-energy platform powered by a solar panel, realizing an energy-autonomous
    system capable of operating unattended continuously over LoRa networks. Summary
    and Insights: Plantation and crop monitoring requires the control of numerous
    parameters, captured by different heterogeneous sensors deployed in the agricultural
    fields. Some of the sensors used in the cited papers are specific to the type
    of crop, while others (e.g., temperature, humidity, etc.) are deployed in almost
    all of the literature works. In addition, the use of AI is not yet widely adopted,
    and only three out of nine papers adopt automatic control for the implementation
    of DSSs. An innovative approach in this context would be to add intelligence to
    the LoRa nodes, while moving the DSS closer to the sensor. Finally, note that
    the maximum size of the LoRa payload is 250 bytes; this allows a wide variety
    of parameters to be monitored and transferred in a single packet. For example,
    Sacaleanu and Kiss [69] send eight agri-meteorological measurements in a single
    LoRa packet of only 16 bytes. C. Tree Monitoring Trees are essential in modern
    society and are widely applied in a great number of scenarios including soil erosion
    prevention, air purification, wood or fruit production. For supporting the managers
    of urban/rural green infrastructures and forests, it is important to constantly
    monitor the tree conditions, in terms of growth rate and failure risk, as well
    as micro-climate parameters in the tree surrounding areas. The analysis of this
    data allows the characterization of the trees functional responses to their environment
    and a prompt action in case of problems. Tree monitoring also requires reliable
    long-range communications in the presence of foliage, large sensor densification
    (i.e., one sensor per tree), and measurements of various physiological/biological
    parameters from specific locations (at the root, the trunk, or the branch) as
    a function of vegetation type to obtain accurate readings [83]. In these systems,
    it is also important to measure changes in position over time or instantaneous
    trunk accelerations. Table III summarizes the main characteristics of relevant
    Monitoring systems. TABLE III LoRa-Based Sensors Applications in Tree Farms One
    of the main properties to be measured is the water transport in the xylem of the
    trunk (called the sap flow). A possible measurement method is the Heat Balance
    Method, developed by Granier [91], [92], which is based on analyzing the temperature
    difference among two probes inserted into the stem wood at a 10 cm distance along
    the vertical trunk axis. The probe in the higher position is heated, while the
    lower one provides the stem wood reference temperature. The temperature difference
    generated between the probes represents an index of the transpiration activity
    of the plant, expressed as a variation of the flux density. This method can be
    used for accurate measurements of sap flow in plants, providing a reliable calibration
    procedure to relate the temperature difference to the actual sap flow [93]. For
    example, the TreeTalker (TT) [81] is a device that measures sapflow (water transport
    in the trunk), wood temperature and humidity, multispectral signature of light
    transmitted through the canopy, tree trunk radial growth, accelerations along
    a 3-D coordinate system used to detect tree movements, air temperature, and relative
    humidity, which can be additionally complemented by soil temperature and volumetric
    water content. A TT node is connected via LoRa wireless connection to a GW, that
    manages up to 48 devices in one cluster. The GW is, in turn, connected to the
    Internet via GPRS and sends data to a computer server. This technology can be
    applied to monitor the root plate tilt, as well as the flexion and the accelerations
    that tree trunks receive under the force of the wind for the evaluation of tree
    failure risk. Another solution to analyze the health condition of a tree consists
    on the electrical impedance spectroscopy (EIS), it is a well-known technique with
    a wide range of applications. EIS has been applied to characterize solids, liquids,
    both in the laboratory and industrial environments. Moreover, assessment of physiological
    states of some trees (pinus, chestnut, etc.) has also been studied. The method
    based on bioimpedance indexes allows determining three distinct physiological
    states: healthy and watered plants, plants with a high level of hydric stress,
    and plants with disease [94], [95], [96]. For example, Amaro et al. [82] integrated
    an EIS system in a sensor node to analyze the health condition of the tree and
    transfer the results through the LoRaWAN protocol. Finally, tree monitoring systems
    are often influenced by the presence of foliage which can severely impact wireless
    communication systems performance. This generally leads to node densification
    to increase coverage levels, especially in large areas, resulting in additional
    costs and constraining the design of LoRa systems in nonhomogeneous vegetation
    environments [84], [85], [97]. For such reasons, a small drone with a GW is sometimes
    required for collecting data from nodes and solving the Fresnel zone radio propagation
    issues encountered in tree farms [98], [86]. Summary and Insights: In this section,
    some methodologies for monitoring tree health have been discussed. It is important
    to highlight how LoRa can be easily integrated into these systems, e.g., to measure
    the lymph flow or bio-impedance of trees. In case the parameter to be monitored
    involves roots, it has been shown that LoRa can be used for under-ground or near-ground
    communications too [12], [99]. Finally, the use of drones for data collection
    has been exploited to solve the problem of foliage scattering. D. Livestock Monitoring
    System Smart livestock practices aim at improving the productive and reproductive
    parameters, feeding and handling of feces, producing a direct effect on the increment
    of the farmers’ income, and also better milk and meat production [100]. The implementation
    of these practices requires to monitor the general health conditions of the animals,
    by tracking some biological signals to be associated to symptoms of disease, estrus
    and calving [101]. Wearable sensor technologies provide the possibility of remotely
    managing individual animals facilitating urgent interventions, responding to time
    and labor-intensive concerns in a more efficient way [87]. In extensive livestock
    production systems, the absence of access to networking and animal contact presents
    a barrier to the effective use of these technologies. Wearable sensors, to be
    more practical for extensive management settings, must: 1) network over longer
    distances; 2) have reliable power supplies (preferably renewable); 3) be low-cost
    so that damaged and lost sensors are less economically impactful; and 4) transmit
    data in real time. For these reasons, LoRaWAN technology is indicated for above
    described applications, some of which are summarized in Table IV. Primarily, these
    systems are used to monitor the animal health, but by integrating LoRa technology
    with a GPS, remote grazing systems can be implemented [87], [88]. TABLE IV LoRa-Based
    Sensor Applications in Livestock Monitoring Animal monitoring can involve completely
    different scenarios; as a consequence, the LoRa network architecture could require
    a more specific design effort to work either in indoor or outdoor settings. For
    example, the work in [89] proposes two different versions of GWs: an indoor GW,
    designed for installation in sheltered areas such as barns and cowsheds and oriented
    toward dairy cattle livestock scenarios, and an outdoor version, more specific
    for open areas such as paddocks and pasture lands, and designed for beef cattle
    livestock scenarios. The indoor GW is conceived for monitoring several important
    physical parameters typical of the shed environment, such as temperature, relative
    humidity, illuminance, carbon dioxide (C O 2 ) , and ammonia (N H 3 ) concentration,
    while the main purpose of the outdoor GW is to manage nodes in remote areas, far
    from the shed, directly on the pasture land. In the open field scenario, weather
    parameters (temperature and humidity) are collected, for purposes of correlation
    with the animal health status. Moreover, in the presence of large herds, the high
    node density could cause an increase in collisions between sent packets. In such
    scenarios, a MAC layer that includes a listen-before-talk (LBT) mechanism could
    prevent as much as possible packet collisions among nodes. Indeed, LBT-based carrier-sense
    multiple access with collision avoidance (CSMA/CA) can be incorporated with the
    physical layer of LoRa [89]. The CA mechanism is based on a random retransmission
    time that randomizes the access of the nodes to the wireless medium. The size
    of the pasture area is another factor to consider in deploying the LoRaWAN network.
    In particular, it has been shown that in large areas of pasture, the use of a
    mobile GW that moves along the track is a better solution than the use of one
    or more static GWs [90]. Contrarily, when the livestock area is not too large,
    using only one static GW is preferable because the data extraction rate value
    is high enough and the energy consumption is lower compared to multiple static
    GWs or one mobile GW. The instance of cattle monitoring in New Mexico, as described
    by Actility [102], is one of the successful illustrations of a large-scale LoRaWAN-enabled
    deployment. Due to the large size of these desert ranches (10000–20000 hectares)
    and the large number of cows to track (up to 7000), monitoring and obtaining information
    regarding cattle wellbeing can be time consuming and expensive. Indeed, while
    the cattle were previously followed using traditional GPS devices, the absence
    of reliable cellular connection throughout the whole grazing region made this
    method ineffective. These issues were solved with an off-the-shelf LoRaWAN solution
    because of its extensive range and good coverage. Finally, LoRa technology can
    be used for sharing the short text messages and voice messages in the absence
    of cellular coverage. For example, COWShED [103] is used for supporting livestock
    transhumance in Senegal. Summary and Insights: In this section, we showed how
    LoRa is used to collect information about the movements and health of livestock,
    as well as on the conditions of grassland. LoRa can also aid herders in achieving
    remote grazing by combining data with electronic fences, to identify whether animals
    have crossed it. In addition, LoRa has been used to monitor environmental parameters
    of barns, demonstrating how this technology can be adopted in both outdoor and
    indoor scenarios. Additionally, innovative MAC schemes, such as LBT method could
    be implemented to minimize packet collisions when big herds present, and to mitigate
    the limits on the effective duty cycle of channel occupation. Finally, in the
    absence of cellular coverage, LoRa/LoRaWAN solutions have been used for large-scale
    cattle monitoring or even supporting livestock transhumance for text/voice messages.
    SECTION VI. Lessons Learned and Open Issues This Section discusses the lessons
    learned and the open research challenges for using LoRa technology in smart agriculture.
    According to the aim of this article, it was learned that, given the wide variety
    of sensors used in smart farming systems, different communication protocols need
    to be integrated, particularly when different platforms/vendors coexist and data
    must be collected from the various subsystems. In addition, since power supplies
    are frequently unavailable in a large agricultural area, nodes should be as energy
    self-sufficient as possible. Using local or edge data processing could mitigate
    this problem, optimizing the energy consumption. Moreover, keeping the logic on
    the Edge of the network could alleviate the hurdle on LoRa’s centralized communications
    (especially on the downlink). The development of interoperability in smart agriculture
    systems can also be accelerated by platforms such as FIWARE and Cayenne, while
    machine learning can be used to model and analyze technical problems, improving
    scalability of LoRa networks and predicting network congestion. The experience
    gained in Industry 4.0 can be transferred to agriculture, considering some peculiarities,
    including the need to cover large spaces that cannot be manned. In addition, there
    is the need to provide device power supply and data security (partially solved
    by leveraging on LoRaWAN built-in security schemes). Another significant factor
    is the initial cost of the system, which must be as low as possible since the
    pay-back time also depends on elements that cannot be predicted during the year,
    such as weather. Finally, it has been recognized that although ICT has long-term
    sustainability issues to be solved, they show great potential for improving the
    usage of natural resources, especially when cyber–physical systems (CPSs) are
    combined with IoT, AI, machine learning, and neuromorphic computing techniques
    [104]. Through the study carried out in this article, it is also possible to understand
    in which area LoRa has been applied and is emerging in recent years. In particular,
    among the application areas discussed in Section V, Fig. 8 shows in a pie chart
    that more than 40% of the analyzed studies focus on water management, while almost
    25% are dedicated on crop monitoring, followed by tree monitoring. This result
    is in line with recent market surveys on LPWANs (e.g., [105]), and other general
    studies on communications protocols for smart agriculture [9]. Fig. 8. Distribution
    of the LoRa papers according to smart agriculture application areas. Show All
    All this confirms the great potential of implementing smart agriculture solutions
    using IoT, and LoRa technology in particular. However, there are still some open
    issues that need to be faced: for example, LoRaWAN works quite well in uplink
    when it needs to collect data from sensors, while downlink connections might suffer
    high latency. In what follows, we briefly discuss future research directions related
    to downlink latency, energy management, device heterogeneity and interoperability,
    data management, and scalability. These open issues must be solved for LoRa systems
    to be widely adopted in smart agriculture. We conclude the Section with an eye
    on other wireless technologies, different from LoRa/LoRaWAN. A. LoRa Downlink
    Performance The downlink performance of LPWAN systems still represents a challenge
    since it is related to the energy consumption. In particular, LoRaWAN allows different
    tradeoffs between communication latency on the downlink channel and energy consumption.
    Nodes are classified by classes: they can receive only after an uplink transmission
    (Class A), or at regular time intervals (Class B), or at any time (Class C). The
    modern trend is to optimize energy efficiency, hence, data are transmitted only
    when necessary or periodically. According to the authors’ opinion, a further optimization
    could be retrieved by local data processing. As a matter of fact, even if nodes
    remain asleep most of the time, as in [57], or with scheduling intervals of reception
    windows of 10–20 min as in [48] and [50] or a few hours [58], local processing
    always lowers the data to be transmitted decreasing the transmission time; it
    has been successfully tested in [42] where edge processing on the GW allows a
    more effective control of the actuator nodes. This last approach improves also
    reliability since it allows farms to work even if the Internet connection of the
    LoRa GW is absent for a few hours. Reliability can also be improved by a Master/Slave
    access control method for the LoRa network [52], [53], [54]. Alternatively, for
    short-range communication, a Wake-up Radio (WuR) can be adopted. WuR technology
    is an ultralow-power receiver that is continuously listening to the channel while
    spending a few nanowatts or microwatts depending on the circuit’s design. WuRs
    work in parallel to the main LoRa transceiver and allow asynchronous wake-up of
    the nodes with low latency. With the LoRa-WuR scheme, the downlink latency can
    be reduced by almost 90% compared to the traditional LoRa protocol for a ten nodes
    cluster [106], [107]. B. Energy Efficiency Considerations In addition to downlink
    communication performance just explained, the energy consumption in an agricultural
    ED can include turning on booster pumps or solenoid valves, activating sensors
    over a long period, use of GPS and data transmission, etc. Nodes should be autonomous
    as much as possible since usually power supplies are not available in a wide agricultural
    area. Besides, the use of batteries needs to minimize disposal costs and pollution.
    Providing solutions to avoid the use of batteries by harvesting energy from the
    environment would encourage the deployment of wireless devices in smart agriculture.
    The use of different energy sources, such as solar energy, piezoelectricity, thermal,
    wind, water, and radiofrequency is consolidated [108]. However, making a device
    completely energy-neutral requires a thorough analysis of power consumption in
    different working states [109]. One facilitation is the availability of a renewable
    energy source as in [51]; on the other hand, a high energy consumption due to
    the heating of one probe as in [91] requires a different design or the remote
    monitoring of the energy available or harvested as in [110]. It is evident that
    there are many factors that influence the analysis of offering-demanding energy,
    it varies on a case-by-case basis and does not lend itself to systematic analysis;
    on the other hand, in this context, machine learning algorithms can give a significant
    contribution. Infact, the ML approach has been already successfully applied in
    different contexts allowing to implement an efficient renewable energy selection
    based on the geographic location [111], or to retrieve a good energy prediction
    [112]. An application example is given by the energy-neutral system for pest detection
    [70] which takes advantage of ML algorithms. C. Heterogeneity and Interoperability
    Smart agriculture systems are quite heterogeneous in terms of sensors and, in
    some cases, it is also required to integrate different communication technologies,
    e.g., when multiple platforms coexist and data arrives from different subsystems.
    LoRa platforms are used with ZigBee to implement hybrid communications managing
    different sensors clusters or with the IEEE 802.11s-based system to build a mesh
    networking architecture. The path for the integration of different technologies,
    such as cloud, IoT, and software-defined networking, with AI is proposed in [113]
    with the related challenges and opportunities. Assuring communications in heterogeneous
    smart agriculture systems is a critical issue that has been studied for example
    in [114], where LoRa and ZigBee hybrid communications are implemented. Precisely,
    two LoRa sensor clusters and two ZigBee sensor clusters are used and combined
    with two ZigBee-to-LoRa converters to communicate in a network managed by a LoRa
    GW. The token ring protocol in the ZigBee network and polling mechanism in the
    LoRa network is used. The system can work with a packet loss rate of less than
    0.5% when the communication distance is 630 m for the ZigBee network and 3.7 km
    for the LoRa network. An hybrid LoRa/IEEE 802.11s-based mesh networking architecture
    is proposed in [115], where an effective network protocol selection mechanism
    is developed to choose the right interface. Protocol selection is based on multiple
    parameters, including network communication interface type, GNSS position of the
    APs, RSSI of nearby nodes, type and amount of data to be transmitted. Large data
    to be transferred in a short time can rely on the IEEE 802.11s-based network while
    small data can be transmitted through a LoRa-based mesh network. Platforms such
    as FIWARE [116], Cayenne [41] and mySense [58], discussed in Section IV, can also
    give a push to achieve interoperability in the smart agriculture systems. The
    above described solutions can benefit of an “industry 4.0”-based approach where
    the integration of different protocols cooperate to address the needs of automating
    computing and technology processes [113], [18]. D. Machine Learning and Big Data
    Management The integration of big data analysis with machine learning can provide
    predictions about future outcomes, such as fruit quality or detect crops’ diseases
    using historical data, analytical techniques, and statistical modeling [117].
    The benefits of ML in the agriculture are relevant [118]. However, the deployment
    of models is the most challenging step to bring the ML algorithms in the production
    fields, and thanks to its advantages, LoRa technology could make a big contribution
    to taking this step. Collected data can be used to implement an intelligent system
    capable of supporting the identification of varieties and predicting the quality
    of the final product [64]. In fact, exploiting ML, the data can be used by the
    biologists to develop crop models and perform disease prediction [68]. The agricultural
    industry produces a large amount of data collected by heterogeneous sensors, so
    best practices should include the mechanisms to reduce the memory and time for
    data analysis. Thus, to pursue such objectives, edge computing models are also
    applied [119]. Distributed data process, such as MapReduce [120], may avoid bottlenecks
    when transferring all data to a single server, as in [121] where the proposed
    method adopts smart sensors to measure the soil quality indicators, while the
    preelaborated data is transmitted using the LoRaWAN protocol. The Apache Spark
    environment is then used to implement a parallel algorithm for statistical models
    based on the soil indicator data obtained from the experimental field. E. LoRa
    Scalability and Network Improvement As concerns scalability, some open points,
    shared with general applications, are recognized. For this reason, most of the
    reference literature does not directly address issues related to agriculture.
    Indeed, scalability is a key feature in LoRa networks due to its long-range and
    large number of devices can concurrently reach a given GW. The network scales
    quite well if dynamic transmission parameters are used, in combination with multiple
    sinks. However, the correct behavior of the NS is not easy to be evaluated [122].
    In fact, the NS presents some challenges from the point of view of its optimization,
    such as processing duplicate packets or packets from other networks, or bringing
    down the entire network in case of Internet connection loss. LoRa networks are
    bound by strict legal requirements, particularly where no LBT schemes are utilized.
    The transmission duty cycle (TDC) regulates the ISM bands to determine the maximum
    time that the band can be occupied, typically bounded to 1%. This implies that
    devices may not occupy the ISM band for more than 36 s per hour, forbidding the
    transmission of new packets when this limit is attained [123]. Machine learning
    can be applied to model and analyze technical problems, improving the scalability
    of LoRa networks and predicting network congestion [124]. Further developments
    could include enhanced ADR mechanisms, optimization of GW locations, and interference
    cancelation techniques [125]. Finally, some challenges remain such as the widespread
    adoption of multihop communications in LoRaWAN. Literature has shown that multihop
    or mesh topologies can extend the coverage of LoRaWAN networks and improve energy
    efficiency in certain scenarios [126]. These solutions propose intermediate nodes
    to forward messages to other EDs to extend the coverage. Other open points include
    the use of GWs as intermediate nodes, GW-to-GW communications, and practical large-scale
    deployment of LoRaWAN mesh networks. F. Other Communication Technologies The choice
    of a specific communication technology is central to the performance of IoT-based
    agricultural applications. Other than LoRa, many standards for wireless communications
    can be employed, including Bluetooth, ZigBee, Z-Wave, RFID, Sigfox, and NB-IoT.
    Some of them work well in the short-range (within 100 m), while others are more
    useful to cover long distances (up to tens of kilometers). Examples of the former
    are Bluetooth, ZigBee, Z-Wave, and passive and active RFID systems, while in the
    latter, standards are Sigfox and NB-IoT (and LoRa of course). As discussed previously,
    the deployment of a massive number of IoT devices might cause interference problems
    especially for technologies using the unlicensed spectrum, such as ZigBee, Wi-Fi,
    Sigfox, and LoRa. On the other hand, IoT devices operating with a licensed spectrum
    eliminate interference problems but might increase costs significantly. Several
    papers have analyzed different aspects of wireless communication protocols for
    smart agriculture, studying possible applications and comparing their performance.
    For example, ZigBee-based smart agriculture systems are described in [127], [128],
    [129], [130], and [131]. The biggest challenges for ZigBee networks are the limited
    range and increased power consumption (compared to LPWANs) and relatively low
    data rate (e.g., compared to BLE or WiFi). Therefore, ZigBee is better suited
    for small-scale scenarios [130], while the use of this protocol is not suitable
    when the agricultural area is vast and the distance between sensor nodes is large.
    On the other hand, the works [132], [133], [134], [135] represent successful examples
    of NB-IoT applications in smart agriculture. Indeed, extensive coverage, adaptable
    power consumption (depending on the mode of operation), and low interference among
    nodes, are features that make NB-IoT an interesting protocol for various agricultural
    systems [136]. However, NB-IoT employs licensed frequency channels, which results
    in higher subscription prices for the associated system even if it offers a higher
    data throughput than LoRa. Moreover, when there is an existing LTE infrastructure
    already in place, the need for hardware update may be another source of expense
    for such a system. This might be a drawback in the context of smart agriculture
    if the projected return on investment is not high enough to cover these costs
    [137]. Overall, the choice of the communication technology in smart agriculture
    needs to consider many factors and requirements, such as support for roaming,
    suitability of technology to small-scale, medium-scale, and large-scale deployments,
    geographical location, costs, etc. For example, it has been shown that Sigfox
    and LoRaWAN excel on network capacity, battery lifetime, and cost, whereas NB-IoT
    achieves higher quality of service and lower latency [27]. Finally, while LoRaWAN
    has been considered the most suitable communication network for IoT in smart agriculture
    [16], it is still difficult to tell which technology will dominate the market,
    or if several technologies will coexist, perhaps specializing on different application
    domains. SECTION VII. Conclusion Although the expected transition to smart agriculture
    has already begun, researchers around the world are still looking for new solutions
    to improve agricultural productivity through IoT architectures. Indeed, albeit
    applications in agriculture can benefit from the experience gained in Industry
    4.0, they require specific knowledge regarding sensor management, energy optimization,
    and data processing. LoRa technology is widely adopted, as it allows building
    an autonomous network that meets some of the requirements of the smart agriculture,
    such as low-power and long-range communication. The adoption of LoRa-based systems
    in agriculture results in an effective way to improve the connectivity of farms,
    encourage the deployment of DSSs and consequently improve their management, leading
    the agricultural sector toward smart agriculture. In order to provide a more focused
    and comprehensive view of the applications in the field, in this article, we restricted
    our focus to LoRa/LoRaWAN technology and its uses in the context of smart agriculture.
    We presented many LoRa applications in the field, and we discussed some open issues
    and research areas for future improvements. The main challenges analyzed using
    LoRa Technology in smart agriculture, are: latency on the downlink channel, energy
    management, heterogeneity and interoperability of the devices, data management,
    and scalability. All of these can benefit from the use of machine learning algorithms.
    Indeed, AI and edge computing are still scarcely used but related algorithms and
    technologies are now mature and may be successfully applied in this field. Finally,
    the optimization of multiple GW locations and multihop topologies to extend the
    coverage of LoRa networks have been recently tested to further improve the performance
    and coverage. NOTE Open Access funding provided by ‘Università degli Studi di
    Palermo’ within the CRUI CARE Agreement Authors Figures References Citations Keywords
    Metrics More Like This Internet of Things and Wireless Sensor Networks for Smart
    Agriculture Applications: A Survey IEEE Access Published: 2023 Weighted Connected
    Vertex Cover Based Energy-Efficient Link Monitoring for Wireless Sensor Networks
    Towards Secure Internet of Things IEEE Access Published: 2021 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Survey on LoRa for Smart Agriculture: Current Trends and Future Perspectives'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Roussaki I.
  - Doolin K.
  - Skarmeta A.
  - Routis G.
  - Lopez-Morales J.A.
  - Claffey E.
  - Mora M.
  - Martinez J.A.
  citation_count: '21'
  description: The digital transformation in agriculture introduces new challenges
    in terms of data, knowledge and technology adoption due to critical interoperability
    issues, and also challenges regarding the identification of the most suitable
    data sources to be exploited and the information models that must be used. DEMETER
    (Building an Interoperable, Data-Driven, Innovative and Sustainable European Agri-Food
    Sector) addresses these challenges by providing an overarching solution that integrates
    various heterogeneous hardware and software resources (e.g., devices, networks,
    platforms) and enables the seamless sharing of data and knowledge throughout the
    agri-food chain. This paper introduces the main concepts of DEMETER and its reference
    architecture to address the data sharing and interoperability needs of farmers,
    which is validated via two rounds of 20 large-scale pilots along the DEMETER lifecycle.
    This paper elaborates on the two pilots carried out in region of Murcia in Spain,
    which target the arable crops sector and demonstrate the benefits of the deployed
    DEMETER reference architecture.
  doi: 10.1016/j.dcan.2022.02.004
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. Main concepts and
    rationale 4. The DEMETER reference architecture 5. Overview of the foreseen pilots
    6. The Murcia pilots 7. Conclusions and future plans Declaration of competing
    interest Acknowledgements References Show full outline Cited by (21) Figures (10)
    Show 4 more figures Tables (2) Table 1 Table 2 Digital Communications and Networks
    Volume 9, Issue 1, February 2023, Pages 183-193 Building an interoperable space
    for smart agriculture Author links open overlay panel Ioanna Roussaki a, Kevin
    Doolin b, Antonio Skarmeta c, George Routis a, Juan Antonio Lopez-Morales c, Ethel
    Claffey d, Manuel Mora c, Juan Antonio Martinez e Show more Share Cite https://doi.org/10.1016/j.dcan.2022.02.004
    Get rights and content Under a Creative Commons license open access Abstract The
    digital transformation in agriculture introduces new challenges in terms of data,
    knowledge and technology adoption due to critical interoperability issues, and
    also challenges regarding the identification of the most suitable data sources
    to be exploited and the information models that must be used. DEMETER (Building
    an Interoperable, Data-Driven, Innovative and Sustainable European Agri-Food Sector)
    addresses these challenges by providing an overarching solution that integrates
    various heterogeneous hardware and software resources (e.g., devices, networks,
    platforms) and enables the seamless sharing of data and knowledge throughout the
    agri-food chain. This paper introduces the main concepts of DEMETER and its reference
    architecture to address the data sharing and interoperability needs of farmers,
    which is validated via two rounds of 20 large-scale pilots along the DEMETER lifecycle.
    This paper elaborates on the two pilots carried out in region of Murcia in Spain,
    which target the arable crops sector and demonstrate the benefits of the deployed
    DEMETER reference architecture. Previous article in issue Next article in issue
    Keywords Smart agricultureInternet of things (IoT)DEMETERReference architectureInteroperabilityAgricultural
    information model (AIM)Pilot validation 1. Introduction Multiple European Union
    (EU) policies have been creating new challenges for the agriculture technology
    development space, and impacting the entire supply chain from food production
    (FOOD2030) to the bio-economy1 through the future EU Common Agriculture Policy
    (CAP). In parallel, the digital single market strategy drives EU-wide requirements
    for “the right environment for networks and services” and “ensuring that the European
    economy takes full advantage of what digitization offers”, and pushes for the
    creation of a common European data space.2 In addition to policy pressures, the
    sector faces multiple technology-related challenges. While a plethora of digital
    technologies, such as IoT, big data, AI and robotics, are available, their capabilities
    in terms of gathering, understanding and using large volumes of relevant data
    have not been fully realized. Despite the topic having been studied for many years,
    farmers are yet to fully benefit from data sharing and exchange in masses. It
    is without question that the use of data-based IoT technologies will form a cornerstone
    of the truly smart agriculture [1], with the extensive ongoing research highlighting
    the usage and benefits of a myriad of sensor and connectivity types in the agricultural
    setting [[2], [3], [4], [5], [6], [7], [8], [9]]. However, it has been argued
    [10] that farmers need to know how to manage this new abundance of information
    to enable the automated decision-making in an economically, environmentally and
    socially aware manner. Processing the available data and enacting on its recommendations
    are quite labour demanding and require extended manual process executions and/or
    the usage of several technologies to enable remotely monitoring the farm data
    [[11], [12], [13], [14]] and often quite advanced (big) data analytics techniques
    [[15], [16], [17], [18]]. The motivation of this paper is to propose a technical
    approach that addresses the following challenges and difficulties existing in
    the agricultural domain. Firstly, farmers must have control of knowledge they
    can obtain from data relevant to their specific requirements and activities, i.e.,
    moving from the present situation in which farmers can be overwhelmed by the shear
    amount of data to one in which they benefit from the insights of that data. Next,
    there is the issue of protecting farmers'' current investments by deploying cutting-edge
    technologies, particularly on legacy systems (including machinery which can be
    20+ years’ old). Determining the correct data sources (weather, soil quality,
    irrigation levels etc.), building large data sets from multiple farms, and building
    information models encompassing the entire agri value chain are the other critical
    challenges, which require the establishment of trusted data sharing mechanisms.
    Economic and market barriers present another challenge in a context where large
    players have aimed, early on, to establish themselves in dominant positions via
    supplier-operated technological platforms, thereby creating walled-garden models
    of technology deployment. Finally, of course, a key motivation of the proposed
    approach is to solve the problem of interoperability and to support the adoption
    of technological standards to ensure compatibility, the usage of suitable well-established
    standards for data sharing, and communication that can allow for heterogeneous
    system interoperation. Currently, agricultural data consumers must interact with
    a multitude of systems, data models and user interfaces to access and exchange
    data they need to support their increasingly complex decision-making. The extended
    heterogeneity across the various technologies offered in this domain, which lack
    interoperability and cannot interact or exchange information, is a major problem
    that greatly reduces both the efficiency and the potential of the solutions adopted.
    This paper aims to present a solution addressing the aforementioned challenges.
    It elaborates on the related work carried out and the outcomes achieved by the
    DEMETER3 project (funded within Horizon 2020) to establish a farmer-centric approach
    by: • engaging farmers in the entire knowledge extraction process, and coupling
    the data collected by the available sensing infrastructure with the information
    provided by humans themselves. • focusing on establishing full-scale interoperability
    of all resources available (i.e., data, services, applications, devices, networks,
    platforms, and software modules), as well as interoperation across the various
    stakeholders engaged (e.g., farmers, advisors, agronomists, agricultural machinery
    manufacturers and technology providers). • transforming the agrifood sector by
    building a solution based on a wealth of technologies, such as IoT, AI, earth
    observation and big data, and various practices and goals, e.g., co-creation,
    open innovation, sustainability and fairness. In this respect, this paper aims
    to introduce the DEMETER reference architecture, mainly focusing on its interoperability-enabling
    features, and elaborate on a specific pilot use case, where this architecture
    has been instantiated and validated. The rest of this paper is structured as follows.
    Section 2 presents a brief overview of the dominating state-of-the-art smart farming
    initiatives that exploit advanced technologies to address several challenges,
    including interoperability. Section 3 introduces the main concepts and rationale
    based on which the DEMETER reference architecture has been designed, while Section
    4 presents the architecture itself. Subsequently, Section 5 provides an overview
    of the pilots and pilot clusters organized and elaborates on their main technological
    advancements and added values as perceived by the involved stakeholders. Section
    6 elaborates on a specific pilot that is currently carried out in Murcia in Spain
    and aims to demonstrate the advances enabled by DEMETER, focusing on the interoperability
    elements offered. Finally, in Section 7, the paper''s conclusions are presented
    and an overview of the plans ahead is provided. 2. Related work Connected systems
    must be compatible with each other and speak the same language in terms of protocols
    and encodings. This fuels innovation and provides suitable mechanisms for manufacturers
    to evolve their products. Noura et al. [19] made a detailed study of the most
    advanced solutions to facilitate interoperability between IoT-based platforms.
    The taxonomy of interoperability focuses on different perspectives: interoperability
    of networks, interoperability of devices, semantic and syntactic interoperability
    and interoperability of entire platforms. More specifically, farm-focused management
    systems are rapidly evolving and aim to improve decision-making to define the
    best practices in agricultural production, improve the management of natural resources,
    reduce production costs, increase productivity and optimise on-farm operations.
    A significant impediment to the process of digitising agriculture is the lack
    of capacity of current systems to interoperate with each other. These systems
    or “information islands” prevent the creation of services across different domains
    or platforms, as they are not able to interact and share information. Therefore,
    most of the data sets collected on farms are not exploited to their full extent,
    which prevents them from reaching their full potential. In the literature, various
    initiatives aim to address interoperability and data integration challenges in
    the scope of agriculture [20]. Bonacin et al. [21] proposed a set of ontologies
    to improve agricultural data integration using semantic web-based techniques.
    Sahin Aydin and Aydin [22] presented an ontology-based generic data acquisition
    model to create data acquisition forms based on the model-view-controller design
    pattern for publication and use on open agricultural data platforms. Schuetz et
    al. [23] designed a semantic active data warehouse to support data analysis in
    precision agriculture, using a relational database and a Resource Description
    Framework (RDF) triple store. Bazzi et al. [24] proposed an Application Programming
    Interface (API), which can be accessed from any other application that allows
    HTTP communication with a server to store, integrate and manage the datasets used
    in agriculture-oriented applications. Furthermore, Gallinucci et al. [25] used
    a relational scheme and exploited geographic information to integrate heterogeneous
    agricultural data of different levels in detail, oriented to data analysis and
    Business Intelligence (BI) 2.0. There are various other ongoing European initiatives
    that target, among others, a number of interoperability challenges in the agrifood
    sector. H2020 IoF2020 project [26] for example aims to tackle interoperability
    and offer portable solutions based on several IoT technologies exploited in the
    agrifood sector. The technologies and associated standards considered by IoF2020
    have been structured in several different layers, among which interoperability
    points have been implemented, each tackling selected interoperability challenges.
    In this respect, the main layers identified are: physical device layer, connectivity
    layer; IoT service layer; mediation layer; information management layer; application
    layer; security and privacy cross-cutting layer. CYBELE (Fostering precision agriculture
    and livestock farming through secure access to large-scale HPC-enabled virtual
    industrial experimentation environment empowering scalable big data analytics)
    [27] is another H2020 project that focuses primarily on high performance computing
    and implements use cases related to interoperability in agricultural technologies.
    The project adopts a layered architecture consisting of modular components and
    ensures interoperability between these through a central focus on how data are
    channelled from queries, to forming simulations, and onwards to final analytical
    processes and data visualisation. CYBELE adopts two main mechanisms to achieve
    its interoperability goals. Firstly, it emphasises the exposure of functional
    primitives for HPC/BigData frameworks that the project integrates. Secondly, it
    produces a number of normative schemes and common data models (common in particular
    at a semantic level). It also annotates information to be communicated between
    components, which in turn ensures that information is harmonised, and seamless
    communication is established. Validation of this approach is still to be made.
    Finally, the Agricultural Interoperability and Analysis System (ATLAS) H2020 project
    [28] focuses on the secure and dependable inter-connection of many elements of
    the agri supply chain, including sensor technology, machinery, and data sources.
    This is to be achieved by two complementary approaches. The first is architectural,
    taking a service-oriented approach. The second is what the project terms as the
    ATLAS AppEngine, which is essentially a standalone reference computing platform
    that allows applications to be installed and executed in situ on machinery. As
    is the case with CYBELE, the proposed approach remains to be validated. However,
    ontologies and relational schematics are not flexible when adding new data sets
    and are not capable of performing data analysis to mitigate these barriers. Ngo
    et al. [29] introduced a continent-wide data warehouse that was designed and implemented
    combining Hive, MongoDB and Cassandra and the constellation schema into actual
    agricultural data sets. However, they did not describe how their data warehouse
    was built. Nowadays, the use of spatial data helps the prediction of variables
    such as yield or optimal harvest date, so it is urgent to integrate and link them
    with other data generated by farms. Bordogna et al. [30] proposed an architecture
    for managing a spatial data infrastructure for creating, managing and analysing
    heterogeneous geospatial data sets from multiple sources and time series on the
    web. Besides, Jiang et al. [31] demonstrated that there are many possibilities
    for integrating statistical modelling techniques and spatial-temporal data for
    crop management in specific locations. The use of platforms, based on standard
    and open interfaces and protocols, allows the integration of different data sets,
    as well as interoperability with solutions from other suppliers for data exchange
    and exploitation. In this respect, FIWARE4 is one of the instruments used to build
    solutions tackling the needs of the agri-food sector. There are several initiatives
    that address farm management in different policy areas, using FIWARE as a central
    element. For example, López-Riquelme et al. [32] exploited FIWARE over cloud services
    to improve the management of irrigation water. Another initiative based on FIWARE
    is the Smart Water Management Platform (SWAMP) presented by Kamienski et al. [33],
    the main objective of which is to develop innovative methods based on the IoT
    for the intelligent management of irrigation water. Both solutions are based on
    FIWARE enablers to build their architectures, but they use these generic enablers
    as building blocks without exploiting the interoperability property in the abroad
    sense. A summary of the state-of-the-art approaches considered by the proposed
    solution is provided in Table 1. Table 1. Related state-of-the-art overview. Author/initiative
    Main focus of related work Noura et al. [19] reviewing dominant approaches that
    facilitate interoperability between IoT-based platforms, identifying taxonomies
    and challenges that remain open Bahlo et al. [20] reviewing the role of interoperable
    data standards in precision livestock farming Bonacin et al. [21] proposing a
    set of ontologies to improve agricultural data integration using semantic web-based
    techniques Ngo et al. [29] building a data warehouse for agricultural big data
    Bordogna et al. [30] building a spatial data infrastructure integrating heterogeneous
    geospatial data and time series in agriculture settings Sahin Aydin and Aydin
    [22] delivering an ontology-based data model for open data platforms in agriculture
    Schuetz et al. [23] building an active semantic data warehouse for precision dairy
    farming Bazzi et al. [24] providing an API to enable integration of data and software
    in precision agriculture Gallinucci et al. [25] building a heterogeneous agricultural
    data management and analytics solution integrating business intelligence concepts
    H2020 IoF2020 project [26] establishing IoT-based solutions to address interoperability,
    replicability and reuse across the agrifood chain H2020 CYBELE project [27] building
    high performance computing facilities for big data management and analytics in
    precision agriculture H2020 ATLAS project [28] supporting secure interoperation
    of several agrifood chain elements and technologies Besides, Jiang et al. [31]
    applying spatial statistical modelling for crop yield estimation in precision
    farming López-Riquelme et al. [32] improving irrigation water management based
    on FIWARE over cloud services Kamienski et al. [33] developing IoT-based solutions
    for smart irrigation based on FIWARE 3. Main concepts and rationale DEMETER''s
    core objectives and planned results are planned to be realized through the following
    main architectural concepts: • As the project is heavily user-centric and proposes
    a fully multiactor approach, a system which allows the needs of individual or
    groups of farmers to be expressed within a central framework is required. This
    expressed need is converted into a challenge, which then proceeds through a resolution
    mechanism that involves multiple stakeholders, such as the farmers themselves,
    and providers of technical/advisory services. The system enables pre-existing/pre-deployed
    technologies to be factored into the decision-making process combined with the
    farmers'' identified goals. The system to enable this is called the Stakeholders
    Open Collaboration Space (SOCS). Also includes features that structure the human-centric
    elements of DEMETER through knowledge improvement and sharing capabilities. The
    DEMETER SOCS takes inspiration from the EIP Agri Social Spaces and Operational
    Groups, which enables cocreation through meetups, working groups, hackathons and
    so on, coordinated through a web platform. • With the cocreated solution features
    identified, the DEMETER Agricultural Interoperability Space (AIS) takes control
    of its deployment. To do this, interoperability mechanisms are reused and extended
    at all levels (from sensors to data and to services). • The solutions required
    for fully interoperable agri-tech scenarios are complex, containing multiple components,
    hardware, software services, and sources of data etc., so the DEMETER project
    centralises the fully harmonised description of all elements into what is termed
    as the DEMETER Enabler Hub (DEH). The DEH has two main features – firstly it provides
    fully harmonised descriptions that allow components to be used within the SOCS.
    Secondly, it enables components to be adopted in multiple deployment scenarios
    by leveraging what are known as DEMETER-enabled interoperability mechanisms. These
    interoperability solutions come from standards, as well as from related initiatives
    such as IoF2020, DataBio (both H2020 projects). • The final piece of the puzzle
    is the DEMETER dashboard, which acts as a portal to the project ecosystem for
    all potential stakeholders. It provides the access point for the aforementioned
    SOCS and AIS. In addition, the dashboard provides typical functionality such as
    account management, data management, etc. Fig. 1 presents a stylised representation
    of these concepts. Essentially the main benefit of this approach is to provide
    a connection between the human-centric space (left) and the fully digital execution
    aspects (right). This enables DEMETER to ensure that all technical decisions/solutions
    are driven by human actors, and that all enabling technologies are absolutely
    aligned with the needs of farmers and based on combined intelligence captured
    through a stringent process. Download : Download high-res image (473KB) Download
    : Download full-size image Fig. 1. Overview of the main DEMETER concepts. The
    aforementioned DEMETER dashboard presents different views to the users based on
    the aims of their engagement with the system (e.g., to collaborate, to express
    their needs, to consumer resources, or to develop new applications based on the
    available resources), the type of user (and their associated access rights and
    roles), and the target for research and deployment. Through the DEH various stakeholders
    (e.g., developers) can register and describe their service capabilities and resources
    in a semantically consistent manner which includes provision of metadata to inform
    the system about security, privacy and usage policies for data, or QoS metrics
    etc. These can in turn be searched and discovered by other interested parties.
    Secure communication channels between consumers and providers are established
    through the hub, following an identification verification process. Note the enabling
    technologies provided via the DEH can be developed within the DEMETER project
    or by external parties (such as software developers, equipment manufacturers,
    platform providers). Fig. 2 illustrates a number of additional concepts that must
    be described prior to discussing the full DEMETER reference architecture. Firstly,
    there is the concept of a DEMETER-enhanced-entity. This represents any entity
    (hardware or software) that is registered in the DEH for external usage, and that
    consumes resources of other entities in the DEH, or vice versa. There are a number
    of rules related to provision and consumption of resources within the DEMETER
    ecosystem: • Applications can consume resources; • Services/platforms can consume
    and/or provide resources; • Things (hardware) can only provide resources. Download
    : Download high-res image (147KB) Download : Download full-size image Fig. 2.
    DEMETER-enhanced entity: mandatory components. A number of DEMETER enablers are
    mandatory so as to properly support communication and interoperability at each
    of the DEMETER-enhanced entities in the system. These core enablers are encapsulated
    in the DEMETER enhancing service, accompanied by the providers and consumers discussed
    above. A DEMETER DEH API ensures the communication between entities and the hub.
    Finally, all entities and their associated access rights and policies are registered
    in the DEMETER registry. These variations of DEMETER-enhanced entities form a
    core element of the DEMETER reference architecture, which is to be elaborated
    in the next section. 4. The DEMETER reference architecture Following the above
    presentation of the main conceptual architecture, this section presents an elevated
    view of the DEMETER reference architecture. A plethora of platforms and systems
    are deployed in a smart farming context, and this adds to the complexity of building
    a master system. To incorporate these and other systems (such as weather systems,
    satellite systems, …) is almost impossible, particularly due to the scale, variations,
    complexity, governance requirements and heterogeneity of the extant agri-tech
    sector. To counter this, DEMETER enables interoperability primarily at the data
    level, and includes features for scalability and data-ownership governance. This,
    as noted previously, is achieved through the AIS, through the extension of legacy
    Agricultural Knowledge Information Systems (AKISs) by enabling them to provide
    data to, and consume data from, cooperating systems through the exposure of new
    and emerging technologies and services that may be of interest. This approach
    presents a more realistic and viable solution in terms of potential adoption,
    sustainability and usability. To realise this approach, and to address the extracted
    requirements [34], DEMETER has specified the solution objectives as below: • Existing
    AKISs must be able to provide/consume data to/from their counterparts. • AKISs
    must be incentivised to share data by ensuring data integrity and exploitation,
    which in turn creates the potential for revenue generation. • In order to ensure
    portability, scalability and rapid deployment, virtualisation containers for services
    must be used extensively. The proposed architecture is presented in Fig. 3 and
    illustrates DEMETER''s providers and consumers, which draws inspiration from the
    architecture model introduced by the Industrial Data Space (IDS) [35] that was
    further enriched by the International Data Space Association (IDSA) [36]. Beyond
    this architectural foundation, DEMETER''s providers and consumers extend their
    core applications through the provision of support for AKISs to similarly provide
    and consume data. It is beneficial to enable the rapid deployment and decommissioning
    of survey services that don''t necessarily require an endless feed from an AKIS.
    In this case the service would simply start the consumer service for an AKIS,
    get the required data, and stop the service. For speed, the services are packed
    into lightweight containers accompanied by all necessary software for independent
    deployment (libraries for communication, runtime environment, security/encryption,
    etc.). Download : Download high-res image (997KB) Download : Download full-size
    image Fig. 3. High-level view of DEMETER reference architecture instantiation
    example. Acknowledging the criticality of interoperability at a data level, DEMETER
    implements a semantic data model Agricultural Information Model (AIM) [37] to
    support data translation, management and inference (complying with standardized
    solutions such as NGSI-LD,5 ADAPT6 and Saref4Agri7). The AIM common data format
    is adopted for DEMETER''s consumers and producers to support interoperability
    and heterogeneous data handling, implemented with lightweight data translators
    and wrappers. To achieve this, each AKIS must specify its utilised data model
    semantics, or it must employ the AIM format to parse the returning content. The
    AIM extends existing ontologies and vocabularies designed for the agri-tech domain,
    and as such is not built from scratch. Beyond data management and translation,
    DEMETER''s providers and consumers must cater for security and privacy requirements
    in a manner that supports trustworthy deployment within AKISs'' hosting environment.
    This is based on the principle that it is more efficient to model the processing
    capability rather than the data. Additionally, this provides privacy protection
    as data usage and sharing remain firmly in the control of the data owner. Furthermore,
    all services must provide user authentication and access authorisation, as is
    typical in deployments like this. Following the implementation of a DEMETER-enabled
    application, the production version can then be discovered (by agronomists, cooperatives,
    agencies, farmers, etc.) via the DEMETER dashboard/DEH. For brevity, Fig. 3 presents
    a sample of the platforms that can be integrated in the DEMETER reference architecture.
    This in effect represents a single instantiation of the architecture as deployed
    in a specific trial site. Apart from the platforms, the DEMETER service logic
    blocks can be employed by interested entities, similar to any other third-party
    resource. Registered resources, accompanied with deep metadata (describing their
    capabilities/constraints), are available via the DEH, and ensure that apps based
    on the adopted technologies are best prepared to fully leverage the available
    resources, whilst being cognisant of the potential location-based usage restrictions.
    DEMETER-enhanced entities (which represent things, platforms, services …) can
    have multiple instantiations as presented below: • A DEMETER-enhanced resource
    contains the resource (platform, thing, service) that registers its capabilities
    to the DEH for use by external parties. Note, a DEMETER-enabled resource can utilise
    other enablers within the DEH to enhance its capabilities. • DEMETER-enabled service:
    This is essentially a third-party service provided by external stakeholders and
    integrated into the project ecosystem. It registers its service logic to the DEH
    to support its discoverability, and it can also discover other enablers and consumer
    interfaces without interoperability concerns. • DEMETER-enabled application: The
    underlying logic and external UI of these applications are DEMETER-agnostic and
    are accessed directly by users, while the application can communicate with the
    DEMETER eco-system and browse the DEH to discover available resources that are
    compatible with and registered to DEMETER. Critically, it is possible for users
    to consume the functionality that the DEMETER-enabled resources expose exclusively
    through these applications. Fig. 4 presents the positioning of these entities
    in the DEMETER ecosystem, how the stakeholder interactions are supported, and
    how the communication with the DEH and each other operates. Human stakeholders
    access the SOCS, AIS and DEMETER-enabled applications directly via the dashboard.
    The primary interactions among the various entities take place during the registration
    and discovery stages to support discoverability by interested parties. Enablers
    and resources identified for use are packaged with any necessary facilities for
    development and runtime integration. Once a discovery has happened, the DEMETER-enabled
    entities (resources, applications, services) can interact directly. Finally, a
    DEMETER provider can restrict resources to interested consumers via the hub exclusively
    should it wish to do so. Download : Download high-res image (376KB) Download :
    Download full-size image Fig. 4. Positioning and interoperation of entities (i.e.,
    applications, services, resources) enhanced/enabled and/or made available via
    DEMETER. 5. Overview of the foreseen pilots The DEMETER reference architecture
    and concepts introduced in the previous sections will be fully tested during the
    lifetime of DEMETER via 20 large scale pilots (see Fig. 5). These pilots will
    be used to demonstrate and evaluate how well the architecture designed addresses
    the user and the technical requirements in place, to validate how much the involved
    stakeholders benefit from the mechanisms offered by DEMETER. The 20 pilots have
    been classified into 5 major clusters, with each cluster deploying 4 pilots, aiming
    to enable the evaluation of the provided solutions across various agri-food domains
    in different cultural, societal and farming contexts. The 20 pilots will be conducted
    in two rounds. The first pilot round is currently being executed and is based
    on the initial release of the DEMETER enablers, hub, spaces and applications.
    It will complete by April 2021 and be based on the respective system and user
    evaluations and assessments, as well as the feedback from the multi-actor ecosystem
    built. Then the second pilot round will be designed and implemented. The respective
    evaluation findings will drive the overall DEMETER impact assessment to be delivered
    at the end of the project. Table 2 above presents the pilot clusters and the focus
    of each underlying pilot. Download : Download high-res image (249KB) Download
    : Download full-size image Fig. 5. DEMETER pilot coverage and distribution. Table
    2. Pilot cluster overview.  Pilot Cluster Sector: Arable Crops Focus: Water &
    Energy Mgmt Description: The cluster focuses on an efficient integrated management
    of water and energy, from sources to end users to optimise both the quality and
    the quantity of the resources in irrigation systems applied to irrigated and arable
    crops. The pilots involve different technologies as IoT sensor networks or satellite
    imagery and advanced farming platforms. Countries: Spain, Greece, Romania, Portugal
    1.1 Water savings in irrigated crops: This pilot aims to increase production while
    saving water and improving the automation of the irrigation zones through interoperable
    remote-control systems and robust management systems adapted to the conditions
    required by the irrigated agriculture. 1.2 Smart energy management in irrigated
    & arable crops: This pilot aims to modernize irrigation systems and design efficient
    networks from the energy point of view, evaluating and selecting the optimal contracting
    of the electricity supply, as well as implementing alternative renewable and clean
    energies that reduce the price of consumption. 1.3 Optimal quality rice irrigation:
    This pilot is dedicated to both rice and maize crops where the smart irrigation
    system is deployed and validated in order to optimise water quality control (e.g.,
    salinity levels) and water quantity use. 1.4 IoT corn management & decision support
    platform: This pilot aims to implement an IoT corn decision support system platform
    for farmers to improve greenhouse gas emissions and poor water quality that adds
    business risks in corn production.  Pilot Cluster 2 Sector: Arable Crops Focus:
    Agricultural Machinery, Precision Farming Description: The cluster focuses on
    arable crops and specifically on the usage of agricultural machinery and the establishment
    of precision farming. The pilots concentrate on monitoring arable crops through
    sensors and their documentation, while decision support systems are developed
    for live support of agricultural process in a secure and trusted way. Countries:
    Germany, Poland, Czech Republic, Norway 2.1 In-service condition monitoring of
    agricultural machinery: This pilot aims at demonstrating the potential application
    of onboard After Treatment (AT) sensors for in-service monitoring, as well as
    testing the legal applicability of existing sensors as an alternative to PEMS
    (Portable Emission Measurement Systems) while considering aspects of data management,
    privacy and integrity. 2.2 Automated documentation of arable crop farming processes:
    This pilot develops a DSS for live support of agricultural processes and the connected
    supply chains based on autonomous documentation. This includes capturing high
    precision data, merging with data from other farms/machines, and deriving required
    documentation parameters via data analytics and knowledge management techniques.
    2.3 (Farming) Data brokerage service and Decision Support System (DSS) for farm
    management: This pilot establishes a trust-based and compliant data market for
    agricultural enterprise data that sits between the owners and operators of agricultural
    data clouds and the farmers, and that includes both a technical platform and advisory
    services that ensure the easy adoption of data and technology by farmers. 2.4
    Benchmarking at farm level DSS: This pilot aims at developing services to support
    the benchmarking on the productivity and sustainability performance of the farms,
    leveraging and extending the existing DSS. This involves monitoring different
    conditions and parameters affecting such indicators, collecting data and integrating
    it in a unified layer accessible by the DSS.  Pilot Cluster 3 Sector: Fruits and
    Vegetables Focus: Health and high- quality crops Description: The cluster focuses
    on supporting farmers in protecting the health and the quality of production of
    several fruit and vegetable crops in several European countries. Two pilots are
    crop-oriented: olive and corn pilots focus on a pest that affects a set of tree
    crops and one pilot focuses on precision farming for a set of mediterranean tree
    crops. The pilots involve the integration of several technologies: the existing
    farming digital platforms, IoT sensor networks, model and decision support systems,
    remote sensing data, and advanced data analysis tools. Countries: Italy, Portugal,
    Spain, Belgium, Serbia, Greece, Turkey 3.1 DSS to support olive growers: This
    pilot aims to optimise irrigation and fertilization in olive orchards with integrated
    pest management through an on-line platform for olive farms and advisers. The
    proposed platform integrates software, sensors and open data sources to provide
    farmers and technicians a complete and efficient support for olive growing and
    olive oil production. The platform is tested in several farms in Italy, Greece
    and Turkey. 3.2 Precision farming for mediterranean woody crops: This pilot aims
    at promoting technology, methods and IoT solutions to optimise precision farming
    practices of Mediterranean woody crops (apple, olive and grape), considering small
    farmers'' economic constraints. The proposed solutions (IoT and Ground Robots)
    enable a more efficient usage of inputs such as water, energy, macro-nutrients,
    and pesticides to increase the profits of small farmers and reduce their environmental
    impact. 3.3 Pest management control on fruit fly: This pilot aims at providing
    a set of tools to monitor and manage the Mediterranean fruit fly (Ceratitis capitata),
    which is a dangerous pest with a wide range of distribution and host plants. Automatic
    capture traps and remote sensing technologies are employed to predict and support
    in decision making and are tested in citrus farms in Valencia region. 3.4 Open
    platform for improved crop monitoring in potato farms: The pilot aims at integrating
    the Demeter project machinery data with crop- and field-specific info into WatchITgrow
    to analyze the interaction of parameters (yield data fertilization and protection
    data with satellite data, weather and soil info). Advice is provided to farmers
    for the optimisation of field management.  Pilot Cluster 4 Sector: Livestock Focus:
    Animal Health, High Quality & Optimal Mgmt of Animal Products Description: This
    cluster focuses on supporting farmers for livestock animal health and high quality
    in the production of animal products with farmers'' dashboards with AI-based prediction
    and decision support for animal health and animal products. Three pilots are milk
    cow oriented with one focusing on AI machine learning for predictive milk production
    and dashboard including data flow for invoicing, settlement, accounting, bank
    and insurance. Two pilots focus on milk quality and animal welfare tracking through
    health and welfare recording protocols which is applied using various sensor technologies
    and digitalised records. The fourth pilot is similarly focusing on chicken health
    and optimal production. Countries: Norway, Italy, Ireland, United Kingdom, Luxemburg,
    Serbia 4.1 Dairy farmers dashboard for the entire milk and meat production value
    chain: This pilot focuses on a full dataflow dashboard with animal product accounting,
    settlement and payment, including decision support based on AI machine learning
    from the sensor data. 4.2 Consumer awareness: milk quality and animal welfare
    tracking: This pilot focuses on an animal welfare scoring systems with appropriate
    ICT tools to measure relevant parameters on a continuous, real time basis; for
    a well-being audit for dairy cows. 4.3 Proactive milk quality control: This pilot
    focuses on prediction models of cow welfare and health based on the analysis of
    streaming data from cow sensors. 4.4 Optimal chicken farm management: This pilot
    focuses on chicken sensor data and benchmarking farm efficiency across the farms
    through IoT devices and AI-based algorithms.  Pilot Cluster 5 Cross-Sectorial
    Focus: Full supply chain, Interoperability, Robotics Description: The goal of
    this cluster is to run pilots across several sectors (fruit, vineyards, cattle,
    poultry) and to address both supply and demand sides of the supply chain. Such
    approach enables us to validate interoperability of platforms and solutions used
    in different sectors as well as to validate interoperability of platforms used
    for management of on-farm and post-farm (supply chain) activities. The complete
    lifecycle of a product is covered by inclusion of representatives of the recycling
    industry through the open call. Countries: Serbia, Montenegro, Serbia, Georgia,
    Slovenia, Spain, Poland 5.1 Disease prediction and supply chain transparency for
    Orchards/vineyards: This pilot addresses both on-farm and post-farm activities,
    from technical and business perspectives. Data analytics modules reason over the
    acquired sensor data and suitable advices given to farmers. Product passports
    are created for wine production and supply chain stakeholders (retailers, consumers)
    engaged. 5.2 Farm of things in extensive cattle holdings: This pilot addresses
    cattle farm operations, from technical and business perspectives. Knowledge extraction
    and fusion over the acquired sensor data is used, advisory services are provided
    to farmers and interaction with product passport is implemented. 5.3 Pollination
    optimisation in apiculture: This pilot addresses the apiary management from technical
    and business perspectives. Data analytics facilities are exploited, interaction
    with the product passport is implemented and suitable recommendations are provided
    to the farmers engaged. 5.4 Transparent supply chain in the poultry industry:
    This pilot addresses the post farm activities of a poultry farm. It validates
    both performance regarding technical features, as well as feasibility of business
    models. Product passports are created for poultry products and supply chain stakeholders
    (retailers, consumers). In the next figure, the geographic coverage of the DEMETER
    pilots and clusters is depicted. 6. The Murcia pilots This section presents the
    details of the pilots deployed in the Murcia Region in Spain as a subset of the
    broader work being undertaken within the DEMETER project. Nowadays, in irrigation
    communities, it is difficult to homogenize the information in a single coordination
    centre, therefore, limiting their organizational capacities as the joint management
    of all their data sets is not allowed. Also, they have installed multiple solutions
    that do not communicate with each other, such as Supervisory Control And Data
    Acquisition (SCADA) systems, different remote control systems and irrigation systems,
    with many sensors deployed. Nevertheless, in today''s hyper-connected world, isolated
    solutions have no place, and interoperability is the fundamental requirement that
    all solutions must address to contribute to a more productive environment where
    information exchange is possible for a greater good. One of the main challenges
    of irrigation communities is to provide a unique management system. The current
    technology-based solutions only partially cover their needs and limit their capabilities,
    as they do not allow for joint monitoring of water and energy. This makes the
    existing solutions monolithic and closed. 6.1. Outline Two DEMETER pilots are
    carried out in the Murcia Region, namely Pilots 1.1&1.2 – water savings and smart
    energy management in irrigated crops & arable crops. These are the so-called Murcia
    Pilots that aim to increase the production of irrigated crops while saving water
    and energy. The pilots are deployed in a specific location of the Spanish territory
    thanks to the collaboration with an irrigation community: Miraflores irrigation
    community in the Murcia region, where Odin Solutions and the University of Murcia
    who are responsible for the Murcia pilots’ execution, are also involved. The Miraflores
    irrigation community in Jumilla, Murcia, located in the Segura river basin, comprises
    1340 ha of agricultural land, mostly devoted to woody crops, irrigated through
    localized irrigation. It is supplied with 3.8 hm3 per year of surface water together
    with 1.5 hm3 per year of regenerated water produced in the Jumilla treatment plant,
    generating an average of 4025 m3/ha-y. Because the municipality has been excluded
    from the water supply of the Tajo-Segura transfer system, the use of reclaimed
    water has multiple benefits, both environmentally and in direct economic terms,
    for agricultural activities. Within the infrastructures that form part of the
    community, we can highlight those in charge of the water supply: eight pumping
    stations with their filtering stations, seven reservoirs and 1469 hydrants. These
    pilots use inputs from both soil sensors and meteorological stations, as well
    as satellite images, to optimise the irrigation and the SCADA systems. 6.2. Use
    case workflow For these pilots, the inputs considered include soil and weather
    information provided by soil sensors and a weather station, as well as satellite
    images and the different indexes they offer among others. Fig. 6 presents a general
    view of how this information is gathered through the different IoT platforms (smart
    agriculture and MEGA coordinator), tailored as DEMETER Enhanced Entities (DEEs)
    and integrated into the Brokerage Service Environment (BSE). Using for this purpose,
    specific functionalities and datasets which have been packaged as dockerized components
    can be searched and downloaded using the DEH. Download : Download high-res image
    (265KB) Download : Download full-size image Fig. 6. Examples of pilot flow information.
    For the case of smart agriculture, the data provided by IoT gateways follows open
    and standard protocols such as JSON documents over Message Queuing Telemetry Transport
    (MQTT). This way, the information is translated into a richer representation format
    by using NGSI as illustrated in Fig. 7. Download : Download high-res image (109KB)
    Download : Download full-size image Fig. 7. IoT level information translated to
    NGSI. Some of the irrigation control systems used in the pilots have their own
    sensors that cannot be accessed directly. To access this information, ISO 21622
    is used to make this information available via the MEGA platform, as indicated
    in Fig. 8. Download : Download high-res image (108KB) Download : Download full-size
    image Fig. 8. Getting sensor information through MEGA. The DEMETER components
    downloaded from the DEH and deployed in the pilot premises allowed for the instance
    of the MEGA DEE, which exposes its information using the AIM format and is registered
    in the BSE so that it could be available to all interested stakeholders. This
    information is also presented to the users using the DEMETER dashboard. This way,
    the information obtained by MEGA DEE can be shared with other platforms. This
    process is made in a secure manner, based on the DEMETER authorisation enablers
    to ensure that only legitimate users with the right permissions access the corresponding
    information. 6.3. Used data The Murcia pilots aim primarily at the optimisation
    of water and energy resources for arable crops. Therefore, the data collected
    and exploited include: • Geospatial data: location, Geographical Information System
    for Agricultural Parcels (SigPac), EGNSS (GPS/EGNOS/Galileo). • Satellite imagery:
    Copernicus Sentinel 2. • Climate data: air temperature/humidity, wind speed/direction,
    solar radiation and rain. • Soil data: temperature, salinity, humidity, conductivity,
    soil water tension, soil water content, soil water height. • Water data: hydrants
    (water flow and water consumption). • Farm data: historical farm statistics, farm
    crop data. Additionally, the Murcia pilots manage other general information related
    to users and companies such as username/password, personal or company details,
    etc. This information is modelled based on the AIM of DEMETER [37]. Below, in
    Listing 1, we detail the concepts more related to the agricultural domain. Download
    : Download high-res image (394KB) Download : Download full-size image Listing
    1 Representation of agronomic concepts These concepts have been mapped to AIM
    thanks to the reuse of standardized ontologies and dominant solutions related
    to the representation of agriculture features, crops, alerts, properties and systems.
    6.4. System extensions and applications This section elaborates on how the Murcia
    pilots are integrated in DEMETER, elaborating on the specific DEMETER enablers
    used, and the necessary customization of SW/HW external to DEMETER, applications,
    interfaces, as well as the customization of the DEMETER enablers needed. Fig.
    9 presents the instantiation of the reference architecture as deployed for the
    Murcia pilots. The figure illustrates the mapping of the DEMETER architecture
    to the pilot, the delivery of applications through the DEH and the composition
    of such applications from DEMETER-enabled entities, data and services. The raw
    resources (e.g., various types of devices) are presented at the bottom. They are
    connected through the appropriate communication protocols (LoRa, WiFi, etc.) to
    existing Farm Management Information Systems (FMIS) or IoT device platforms. These
    pilots integrate: • Irrigation systems: deployed across the farms engaged in the
    Murcia pilots. • Remote control systems: outdoor high performance dataloggers
    and controller devices for remote control and monitoring (i.e. IPEX12, IPEX16).
    • MEGA: Irrigation systems coordinator that manages, through different web services
    (i.e., SOAP, REST), the connections between all the management irrigation systems
    that implement ISO 21622. • Smart agriculture: a web-based platform based on standards
    and open protocols (i.e., NGSI, MQTT) that has specific modules for the integration
    with IoT devices, data exploitation and map-based interfaces. Download : Download
    high-res image (717KB) Download : Download full-size image Fig. 9. DEMETER reference
    architecture instantiation for the Murcia pilots. To make them compatible with
    DEMETER and to use their data and facilities, they are paired with an appropriate
    entity (DEMETER enabler) that will provide an AIM compliant wrapper. The central
    part of the figure above conforms the DEH through which all these entities are
    offered. On the left, we find the DEMETER mandatory entities (grey) to be used
    by the optional ones (blue) needed by this pilot, where we can find: • Data storage:
    A component having all the functionality related with database storage management.
    • Crop status identification: This component estimates the crop status with data
    fusion by using parametric and machine learning techniques with different inputs
    (i.e., weather stations, IoT devices, imagery, etc.). • Water consumption monitoring:
    This component monitors real time water consumption of the irrigation system with
    the information from the remote controllers. • Irrigation requirement estimation:
    This component estimates the crop''s irrigation needs with data fusion using parametric
    and machine learning techniques with different inputs (i.e. weather stations,
    IoT devices, imagery, etc.). • Machine learning and data exploitation: This component
    offers machine learning and parametric techniques to be used for data exploitation,
    predictions and input for the decision support system. These enablers offered
    by the DEH are used to compose the DEMETER enabled applications for the business
    solutions of the pilot, which are presented at the top of the figure: • Irrigation
    systems coordinator. • Optimized cost & quality irrigation management application.
    • Real-time monitoring and water supply control application. • DSS for irrigation.
    7. Conclusions and future plans This paper highlights the importance of developing
    a system that can enable interoperability across multiple heterogeneous systems,
    which has been noted as a critical requirement for technology development not
    only in the agricultural sectors. Stakeholders wishing to enter the agri tech
    domain, also the existing providers, need to factor the direction that the scientific,
    political and development community is taking in this regard, particularly to
    avoid walled-garden technology approaches which take choices and power away from
    the farmers. Across the globe, putting the end-user/farmer in better control is
    becoming an almost mandated requirement (considering the revised EU Common Agricultural
    Policy for example). Apart from the socioeconomic aspects that this presents,
    technological standpoint initiatives, such as the Common European Agricultural
    Data Space, are gaining traction. Moreover, developments such as DEMETER are playing
    heavily into this field, and future developments must take this into account.
    This paper proposes a reference architecture that addresses two main challenges
    in the agricultural domain: the lack of interoperability across a multitude of
    related software and hardware technologies available to farmers and agronomists,
    as well as the insufficient protection of farmers'' interests; and the lack of
    suitable farmer support, including their not being able to control the usage of
    their data and respective knowledge generated, or to co-create integrated technology
    offerings suitable for their needs and compatible to their current investments.
    In this respect, it presents an interoperable space for smart agriculture that
    has been introduced by the DEMETER project. Instead of creating a new master system
    to integrate other platforms, DEMETER proposes an overarching approach that allows
    the integration of heterogeneous technologies, platforms and systems. To do so,
    DEMETER builds its reference architecture based on three main concepts: a Stakeholders
    Open Collaboration Space (SOCS) for resolving the farmers'' needs to convert these
    needs into challenges, which are later addressed through a multi-actor co-creation
    process; an AIS providing all interoperability mechanisms for deploying the solution
    suitable to address the farmer''s needs and the DEMETER Enabler Hub (DEH) that
    provides the components, services and devices accessible for deployment; and a
    dashboard with the purpose of presenting user friendly interfaces to understand
    and access all available resources. The DEMETER reference architecture extends
    the model specified by IDSA by considering the support of AKIS, allowing for publication
    and consumption of information. Data interoperability is also a cornerstone aspect
    in DEMETER, which is tackled by the so-called AIM semantic data model by adopting
    well-known and standardized solutions. This reference architecture is foreseen
    to be validated via two rounds of 20 large scale pilots grouped in 5 clusters,
    the first of which addresses the arable crops domain. The Murcia pilots of DEMETER
    belong to this first cluster and their first round is now being executed. The
    reference architecture has been deployed to both Murcia pilots to allow for the
    integration of heterogeneous data sources, as well as enhancing and supporting
    the decision-making process, mainly for communities of irrigators, also for distinct
    types of agricultural facilities. Based on open interfaces, it allows increased
    interoperability in the level of communication between administrative services,
    the IoT devices and the controllers they interact with. DEMETER-enablers make
    it possible to integrate the controllers and the sensors from other manufacturers,
    and allow for the establishment of a singular access point for all information.
    By doing so, techniques applicable to the agricultural sector can be significantly
    improved, and this in turn enables sustainably higher social, economic and environmental
    yields. Additionally, the range of services offered by the system can be expanded
    as a result of the achieved interoperability. On the one hand, from a technical
    point of view, the homogenisation of the operation of agricultural exploitation
    systems has been achieved through the use of communications and data transmission
    standards, the integration of heterogeneous data sources, and the use of information
    models to harmonise specific data that does not have any linkage. The use of an
    information model creates a knowledge base for sharing/exposing data reliably
    among the managers of the irrigation communities, as well as for obtaining performance
    indicators and supporting farmers’ decision making. On the other hand, from an
    agricultural point of view, tasks that affect the efficiency of production have
    been optimized, such as the control of the quality of the reclaimed water, the
    generation of alerts to improve crop development (frost, water stress or pests)
    or efficient use of pumping. The evaluation findings of the first round of the
    20 large scale pilots carried out will be processed and properly considered to
    drive the revising of the DEMETER reference architecture. The revised architecture
    will be validated via the second round of pilots and offer full scale semantic,
    syntactic and technical interoperability for a larger set of existing models,
    devices, protocols, services, applications, platforms and systems. Moreover, additional
    features, such as personalised decision support and advisory services tailored
    to the farmers’ needs are to be supported. This includes establishing an agricultural
    solution/business benchmarking system, which targets productivity and sustainability
    performance of farms, agricultural services/technologies/practices, based on farming
    community specific Key Performance Indicators (KPIs). Eventually, DEMETER aims
    to demonstrate the impact of digital innovations across multiple sectors at national
    and international levels and to successfully promote its outcomes to the agrifood
    market. Nevertheless, there are certain limitations in the work presented in this
    paper and challenges that are not yet addressed sufficiently. This study is part
    of an ongoing complex EU project, where technologies are developed in conjunction
    with multiple partners with different priorities, and is still in quite an experimental
    phase. Therefore, bringing together such a large number of partners with the often
    competing technology offerings and different exploitation expectations, and addressing
    multiple agricultural scenarios within a singular system create a limitation in
    terms of the generalizability and applicability of results to particular agricultural
    sectors. However, it must be noted that the strategy for doing so is to demonstrate
    the relevance of the overall technical architecture across multiple domains. As
    another limitation, the proposed approach competes with very large-scale industrial
    players across the globe that are developing focused technologies in parallel
    in a rapidly expanding technical landscape. Therefore, there is no guarantee that
    the proposed approach will be the one that is eventually standardized and manages
    to dominate the agricultural domain. Finally, the presented solution is yet to
    be validated and verified in fully operational environments that include thousands
    of real end-users. This is to be fulfilled in the second round of the DEMETER
    pilots planned for execution in 2022, which not only aim to demonstrate the efficiency
    of the proposed solutions, but are also expected to reduce the aforementioned
    limitations as the real-world value and pertinency of the DEMETER approach achieve
    end-user validation. Declaration of competing interest The authors declare that
    they have no known competing financial interests or personal relationships that
    could have appeared to influence the work reported in this paper. Acknowledgements
    This paper is based on work carried out under the H2020 DEMETER project (Grant
    Agreement No 857202) that is funded by the European Commission under H2020-EU.2.1.1
    (DT-ICT-08-2019). References [1] C. Brewster, I. Roussaki, N. Kalatzis, K. Doolin,
    K. Ellis IoT in agriculture: designing a Europe-wide large-scale pilot IEEE Commun.
    Mag., 55 (9) (2017), pp. 26-33 View in ScopusGoogle Scholar [2] P. Sanjeevi, S.
    Prasanna, B. Siva Kumar, G. Gunasekaran, I. Alagiri, R. Vijay Anand Precision
    agriculture and farming using Internet of Things based on wireless sensor network
    Transact. Emerg. Telecommun. Technol., 31 (12) (2020), p. e3978 View in ScopusGoogle
    Scholar [3] A.D. Boursianis, M.S. Papadopoulou, P. Diamantoulakis, A. Liopa-Tsakalidi,
    P. Barouchas, G. Salahas, G. Karagiannidis, S. Wan, S.K. Goudos Internet of Things
    (IoT) and Agricultural Unmanned Aerial Vehicles (UAVs) in Smart Farming: a Comprehensive
    Review Internet of Things (2020), p. 100187 Google Scholar [4] M.E. Bayrakdar
    Energy-efficient technique for monitoring of agricultural areas with terrestrial
    wireless sensor networks J. Circ. Syst. Comput., 29 (9) (2020), pp. 1-17 CrossRefGoogle
    Scholar [5] M. Bacco, P. Barsocchi, E. Ferro, A. Gotta, M. Ruggeri The digitisation
    of agriculture: a survey of research activities on smart farming Array, 3 (2019),
    p. 100009 View PDFView articleView in ScopusGoogle Scholar [6] N. Islam, M.M.
    Rashid, F. Pasandideh, B. Ray, S. Moore, R. Kadel A review of applications and
    communication technologies for Internet of Things (IoT) and Unmanned Aerial Vehicle
    (UAV) based sustainable smart farming Sustainability, 13 (4) (2021), p. 1821 CrossRefGoogle
    Scholar [7] Y. Mekonnen, S. Namuduri, L. Burton, A. Sarwat, S. Bhansali Machine
    learning techniques in wireless sensor network based precision agriculture J.
    Electrochem. Soc., 167 (3) (2019), p. 37522 Google Scholar [8] X. Feng, F. Yan,
    X. Liu Study of wireless communication technologies on Internet of Things for
    precision agriculture Wireless Pers. Commun., 108 (3) (2019), pp. 1785-1802 CrossRefView
    in ScopusGoogle Scholar [9] M.E. Bayrakdar Enhancing sensor network sustainability
    with fuzzy logic based node placement approach for agricultural monitoring Comput.
    Electron. Agric., 174 (2020), pp. 1-10 CrossRefGoogle Scholar [10] C. Sørensen,
    L. Pesonen, D. Bochtis, S. Vougioukas, P. Suomi Functional requirements for a
    future farm management information system Comput. Electron. Agric., 76 (2) (2011),
    pp. 266-276 View PDFView articleView in ScopusGoogle Scholar [11] J. Doshi, T.
    Patel, S. kumar Bharti Smart Farming using IoT, a solution for optimally monitoring
    farming conditions Procedia Comput. Sci., 160 (2019), pp. 746-751 View PDFView
    articleView in ScopusGoogle Scholar [12] M.E. Bayrakdar Employing sensor network
    based opportunistic spectrum utilization for agricultural monitoring Sustain.
    Comput.: Inform. Sys., 27 (2020), pp. 1-10 CrossRefGoogle Scholar [13] A. Triantafyllou,
    P. Sarigiannidis, S. Bibi Precision agriculture: a remote sensing monitoring system
    architecture Information, 10 (11) (2019), p. 348 CrossRefView in ScopusGoogle
    Scholar [14] M. AshifuddinMondal, Z. Rehena January. Iot based intelligent agriculture
    field monitoring system 2018 8th International Conference on Cloud Computing,
    Data Science & Engineering, IEEE, Confluence) (2018), pp. 625-629 CrossRefView
    in ScopusGoogle Scholar [15] E.M. Ouafiq, A. Elrharras, A. Mehdary, A. Chehri,
    R. Saadane, M. Wahbi IoT in smart farming analytics, big data based architecture
    Human Centred Intelligent Systems, Springer, Singapore (2021), pp. 269-279 CrossRefView
    in ScopusGoogle Scholar [16] J. Iaksch, E. Fernandes, M. Borsato Digitalization
    and Big data in smart farming–a review J. Manage. Anal., 8 (2) (2021), pp. 333-349
    CrossRefView in ScopusGoogle Scholar [17] S. Wolfert, L.G. Cor Verdouw, M.J. Bogaardt
    Big data in smart farming – a review Agric. Syst., 153 (2017), pp. 69-80 View
    PDFView articleView in ScopusGoogle Scholar [18] B.I. Evstatiev, K.G. Gabrovska-Evstatieva
    A review on the methods for big data analysis in agriculture IOP Conference Series
    Mater. Sci. Eng., 1032 (No. 1) (2021), p. 12053 IOP Publishing Google Scholar
    [19] M. Noura, M. Atiquzzaman, M. Gaedke Interoperability in internet of things:
    taxonomies and open challenges Mobile Network. Appl., 24 (2019), pp. 796-809 CrossRefView
    in ScopusGoogle Scholar [20] C. Bahlo, P. Dahlhaus, H. Thompson, M. Trotter The
    role of interoperable data standards in precision livestock farming in extensive
    livestock systems: a review Comput. Electron. Agric., 156 (2019), pp. 459-466
    View PDFView articleView in ScopusGoogle Scholar [21] R. Bonacin, O.F. Nabuco,
    I.P. Junior Ontology models of the impacts of agriculture and climate changes
    on water resources: scenarios on interoperability and information recovery Future
    Generat. Comput. Syst., 54 (2016), pp. 423-434 View PDFView articleView in ScopusGoogle
    Scholar [22] Sahin Aydin, Mehmet N. Aydin Ontology-based data acquisition model
    development for agricultural open data platforms and implementation of OWL2MVC
    tool Comput. Electron. Agric., 175 (2020), p. 105589 View PDFView articleView
    in ScopusGoogle Scholar [23] C.G. Schuetz, S. Schausberger, M. Schrefl Building
    an active semantic data warehouse for precision dairy farming J. Organ. Comput.
    Electron. Commer., 28 (2) (2018), pp. 122-141 CrossRefView in ScopusGoogle Scholar
    [24] C.L. Bazzi, E.P. Jasse, M. Graziano, S. Paulo, G.K. Michelon, E.G. de Souza,
    K. Schenatto, R. Sobjak AgDataBox API – integration of data and software in precision
    agriculture SoftwareX, 10 (2019), p. 100327 View PDFView articleView in ScopusGoogle
    Scholar [25] E. Gallinucci, M. Golfarelli, S. Rizzi A hybrid architecture for
    tactical and strategic precision agriculture The 21st International Conference
    on DaWak, LNCS-Springer (2019), pp. 13-23 11708 CrossRefView in ScopusGoogle Scholar
    [26] IoF2020 Reference architecture for interoperability, replicability and reuse
    2020 https://www.iof2020.eu/open-call/d3.3-iof2020-reference-architecture.pdf
    (2019) Google Scholar [27] K. Perakis, F. Lampathaki, K. Nikas, Y. Georgiou, O.
    Marko, J. Maselyne Cybele – fostering precision agriculture & livestock farming
    through secure access to large-scale HPC enabled virtual industrial experimentation
    environments fostering scalable big data analytics Comp. Netw. j., 168 (26) (2020),
    p. 107035 View PDFView articleView in ScopusGoogle Scholar [28] ATLAS Deliverable
    D3.2 service architecture specification 2020 https://www.atlas-h2020.eu/wp-content/uploads/2020/06/ATLAS-D3.2-Service-Architecture-Specification.pdf
    (2020) Google Scholar [29] V.M. Ngo, N.A. Le-Khac, M.T. Kechadi Designing and
    implementing data warehouse for agricultural big data 8th Intern. Big Data, 11514
    (2019), pp. 1-17 Springer-LNCS CrossRefView in ScopusGoogle Scholar [30] G. Bordogna,
    T. Kliment, L. Frigerio, P.A. Brivio, A. Crema, D. Stroppiana, M. Boschetti, S.A.
    Sterlacchini Spatial data infrastructure integrating multisource heterogeneous
    geospatial data and time series: a study case in agriculture ISPRS Int. J. Geo-Inf.,
    5 (5) (2016), p. 73 CrossRefView in ScopusGoogle Scholar [31] G. Jiang, M. Grafton,
    D. Pearson, M. Bretherton, A. Holmes Integration of precision farming data and
    spatial statistical modelling to interpret field-scale maize productivity Agriculture,
    9 (11) (2019), p. 237 CrossRefView in ScopusGoogle Scholar [32] J.A. López-Riquelme,
    N. Pavón-Pulido, H. Navarro-Hellín, F. Soto-Valles, R. Torres-Sánchez A software
    architecture based on FIWARE cloud for Precision Agriculture Agric. Water Manag.,
    183 (2017), pp. 123-135 View PDFView articleView in ScopusGoogle Scholar [33]
    C. Kamienski, J.P. Soininen, M. Taumberger, S. Fernandes, A. Toscano, T.S. Cinotti,
    A.T. Neto Swamp: an Iot-Based Smart Water Management Platform for Precision Irrigation
    in agriculture.” 2018 Global Internet of Things Summit (GIoTS) (2018) Bilbao,
    Spain Google Scholar [34] I. Roussaki, et al. D3.1 DEMETER Reference Architecture
    (Release 1). H2020 DEMETER Project (2020) Available Online: https://h2020-demeter.eu/wp-content/uploads/2020/10/D3.1-DEMETER-reference-architecture_v1.0.pdf
    Google Scholar [35] B. Otto, S. Steinbuß, A. Teuscher, S. Lohmann, et al. IDS
    Reference Architecture Model Version 3.0, International Data Spaces Association
    (2019) Available Online: https://www.internationaldataspaces.org/publications/reference-architecture-model-3-0/
    Google Scholar [36] S. Bader, et al. The International Data Spaces Information
    Model – an Ontology for Sovereign Exchange of Digital Content. 19th International
    Semantic Web Conference (ISWC 2020), Virtual Conference (2020) November 2020 Google
    Scholar [37] R. Palma, et al. Agricultural Information Model (2021) Chapter accepted
    for publication in the Springer “ICT for Agri” Book Google Scholar Cited by (21)
    Integrated design framework for smart agriculture: Bridging the gap between digitalization
    and sustainability 2024, Journal of Cleaner Production Show abstract Spatio-temporal
    semantic data management systems for IoT in agriculture 5.0: Challenges and future
    directions 2024, Internet of Things (Netherlands) Show abstract Harvesting a sustainable
    future: An overview of smart agriculture''s role in social, economic, and environmental
    sustainability 2024, Journal of Cleaner Production Show abstract Decision support
    tools for agricultural adaptation in Africa 2024, Nature Food Smart forestry–a
    forestry 4.0 approach to intelligent and fully integrated timber harvesting 2024,
    International Journal of Forest Engineering Iot interoperability framework for
    smart home: MDA-inspired approach 2024, Cluster Computing View all citing articles
    on Scopus 1 https://ec.europa.eu/research/bioeconomy/pdf/ec_bioeconomy_strategy_2018.pdf.
    2 https://ec.europa.eu/digital-single-market/en/policies/building-european-data-economy.
    3 The full name of DEMETER is: “Building an Interoperable, Data-Driven, Innovative
    and Sustainable European Agri-Food Sector”. 4 https://www.fiware.org/. 5 https://www.etsi.org/deliver/etsi_gs/CIM/001_099/009/01.01.01_60/gs_CIM009v010101p.pdf.
    6 https://adaptframework.org/. 7 https://www.etsi.org/deliver/etsi_ts/103400_103499/10341006/01.01.01.
    © 2022 Chongqing University of Posts and Telecommunications. Publishing Services
    by Elsevier B.V. on behalf of KeAi Communications Co. Ltd. Recommended articles
    Joint offloading strategy based on quantum particle swarm optimization for MEC-enabled
    vehicular networks Digital Communications and Networks, Volume 9, Issue 1, 2023,
    pp. 56-66 Wanneng Shu, Yan Li View PDF FedRec: Trusted rank-based recommender
    scheme for service provisioning in federated cloud environment Digital Communications
    and Networks, Volume 9, Issue 1, 2023, pp. 33-46 Ashwin Verma, …, Kapal Dev View
    PDF A fixed clustering protocol based on random relay strategy for EHWSN Digital
    Communications and Networks, Volume 9, Issue 1, 2023, pp. 90-100 Xianquan Luo,
    …, Longju Bai View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 21 Captures Readers: 86 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Digital Communications and Networks
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Building an interoperable space for smart agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dimov V.
  - Sauzay E.
  citation_count: '0'
  description: Earth Observation infrastructure is one of the most valuable assets
    for humanity. Data produced by Earth Observation satellites is crucial to track
    climate change, improve agriculture, weather forecasting and disaster management.
    However, the currently available space-based sensors do not provide the required
    temporal resolution to achieve advanced monitoring system at a national and regional
    scale. To address this issue, EnduroSat is launching a cutting-edge Earth Observation
    data delivery service - the BALKAN constellation. The constellation will consist
    of multispectral and hyperspectral sensors hosted on EnduroSat's small satellite
    platforms. The BALKAN constellation will start with a pilot phase of two satellites,
    with the first satellite to be launched in 2024. This constellation has been selected
    as one of the Copernicus Contributing Missions by the European Union and ESA.
    In a second step, EnduroSat is going to expand the constellation by adding more
    satellites and sensors in orbit. The plan is to deploy a total of 120 satellites
    with multispectral and hyperspectral imagers between 2024 and 2028. The core innovation
    of the spacecraft is that they are software-defined, plug-and-play platforms,
    capable of in-orbit configurations and updates. The cutting-edge multispectral
    cameras can provide a native GSD of 1.5 m in 7 bands which allows interoperability
    with Sentinel-2 data. The powerful on-board processing device allows execution
    of complex AI algorithms, enabling automatic detection and download of data based
    on pattern recognition. It will allow customers to deploy apps running directly
    on the satellite, monitoring unprecedented surfaces from space. The mission is
    intended as a show case of continuous real-time processing on high-resolution
    optical data. The processing will rely on image equalization on board and simplified
    Deep Neural Networks. The innovative concept for a software-defined platform with
    exceptional resolution, on-board processing and data relay message transmission
    capabilities would enable unprecedented European data intelligence service. The
    BALKAN constellation will provide incomparable revisit time and scalability, as
    well as unmatched operational flexibility, facilitated by the short time to launch
    and streamlined in-house satellite development. A constellation of 120 satellites
    will bring revisit times from once a week to several minutes, complementing large
    satellites' data and substantially reducing spatial and temporal aliasing in prediction
    models. The BALKAN constellation has the potential to provide up to 20-30% overall
    increase of Earth Observation data and complement the Copernicus database with
    unrivalled local information and temporal resolution. The data service will vastly
    improve digital governance and data-driven decision making in the Balkan region.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Proceedings of the International Astronautical Congress, IAC
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: The BALKAN Constellation-Copernicus contributing mission with regional impact
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Lechqar K.
  - Errais M.
  citation_count: '0'
  description: Agriculture is confronting many challenges, from climate change to
    the considerable decreasing of the natural resources. In order to limit the impact
    of these challenges and ensure food sufficiency for the global growing population,
    precision agriculture is defined as one of sustainable solutions. This solution
    manages the whole agricultural cycle and it is based mainly on the use of information
    technologies. It ensures precision in the applied treatments, quantities and in
    time. By taking into account the nature of the agricultural field, this paper
    is interested in wireless technologies, more precisely, in IoT. In fact, many
    architectures and implementations have been proposed in this context, which can
    cause issues in scalability and interoperability. Thus, the principal aim of this
    paper is to define a conventional IoT architecture that can be used for precision
    agriculture.
  doi: 10.15866/irea.v11i6.23522
  full_citation: '>'
  full_text: '>

    "INFORMATION For Readers For Authors For Reviewers FONT SIZE Make font size smaller
    Make font size default Make font size larger  USER Username Password Remember
    me ARTICLE TOOLS Print this article How to cite item Finding References Email
    this article (Login required)   Praise Worthy Papers  Highly commended papers
    Commended papers Most Popular Papers  Individual Electronic Pill Dispenser - ePillbox
    R. Cruz et al. 893 views since: 2014-09-30  Review of the Constitutive Modeling
    of Shape Memory Alloy Material K. Bajoria et al. 576 views since: 2014-05-31  Short
    Review on Controller Design Approaches of Heating Ventilation Air Conditioner
    Systems Towards Energy-Efficient Buildings S. Attaran et al. 511 views since:
    2014-03-31  Investigation of Single Phase to Earth Fault and Protection Methods
    in Medium Voltage Networks A. R. Al-Zyoud 443 views since: 2014-03-31  Comparison
    of Different Optimization Criteria for Optimal Sizing of Hybrid Active Power Filters
    Parameters K. Elmathana et al. 428 views since: 2014-03-31  PRAISE WORTHY PRIZE
    HOMEPAGE SUBSCRIPTION Login to verify subscription Give a gift subscription NOTIFICATIONS
    View Subscribe / Unsubscribe JOURNAL CONTENT Search      All Authors Title Abstract
    Index terms Full Text      Browse By Issue By Author By Title Other Journals     HOME
    PRAISE WORTHY PRIZE ABOUT LOGIN REGISTER PWP ONLINE LIBRARY CURRENT ARCHIVES ANNOUNCEMENTS
    OTHER JOURNALS DOWNLOAD ISSUES SUBMIT YOUR PAPER SPECIAL ISSUE ETHICAL GUIDELINES
    ETHICS FOR PUBLISHING Home > Vol 11, No 6 (2023) > Lechqar Open Access  Subscription
    or Fee Access  A Conventional IoT Architecture: Precision Agriculture as Domain
    of Application Khadija Lechqar(1*), Mohammed Errais(2)  (*) Corresponding author   Authors''
    affiliations       DOI: https://doi.org/10.15866/irea.v11i6.23522  Abstract  Agriculture
    is confronting many challenges, from climate change to the considerable decreasing
    of the natural resources. In order to limit the impact of these challenges and
    ensure food sufficiency for the global growing population, precision agriculture
    is defined as one of sustainable solutions. This solution manages the whole agricultural
    cycle and it is based mainly on the use of information technologies. It ensures
    precision in the applied treatments, quantities and in time. By taking into account
    the nature of the agricultural field, this paper is interested in wireless technologies,
    more precisely, in IoT. In fact, many architectures and implementations have been
    proposed in this context, which can cause issues in scalability and interoperability.
    Thus, the principal aim of this paper is to define a conventional IoT architecture
    that can be used for precision agriculture. Copyright © 2023 Praise Worthy Prize
    - All rights reserved. Keywords  IoT; Conventional Architecture; ITU-T; ISO/IEC
    30141; Precision Agriculture  Full Text: PDF   References  K. Lechqar and M. and
    Errais, Crop Recommendation in the Context of Precision Agriculture, in Advances
    on Intelligent Computing and Data Science, 2023, pp. 523-532. https://doi.org/10.1007/978-3-031-36258-3_46  A.
    Srivastava and D. K. Das, A Comprehensive Review on the Application of Internet
    of Thing (IoT) in Smart Agriculture, vol. 122, no. 2. Springer US, 2022. https://doi.org/10.1007/s11277-021-08970-7  R.
    Akhter and S. A. Sofi, Precision agriculture using IoT data analytics and machine
    learning, J. King Saud Univ. - Comput. Inf. Sci., vol. 34, no. 8, pp. 5602-5618,
    2022. https://doi.org/10.1016/j.jksuci.2021.05.013  K. N. Mishra, S. Kumar, and
    N. R. Patel, Survey on internet of things and its application in agriculture,
    J. Phys. Conf. Ser., vol. 1714, no. 1, 2021. https://doi.org/10.1088/1742-6596/1714/1/012025  W.
    Rafique, L. Qi, I. Yaqoob, M. Imran, R. U. Rasool, and W. Dou, Complementing IoT
    Services through Software Defined Networking and Edge Computing: A Comprehensive
    Survey, IEEE Commun. Surv. Tutorials, vol. 22, no. 3, pp. 1761-1804, 2020. https://doi.org/10.1109/COMST.2020.2997475  D.
    Xie, L. Chen, L. Liu, L. Chen, and H. Wang, Actuators and Sensors for Application
    in Agricultural Robots: A Review, Machines, vol. 10, no. 10, 2022. https://doi.org/10.3390/machines10100913  M.
    K. A. and S. W. K. Yousaf Bin Zikria, Rashid Ali, Next-Generation Internet of
    Things (IoT): Opportunities, Challenges, and Solutions, Sensors 2021, pp. 1-7,
    2021, [Online].  Nahit Pawar, On Interoperability and Network Architecture Bottom-Up
    Heterogeneity Control in Internet of Things, Institut Polytechnique de Pris, 2021.  T.
    Domínguez-Bolaño, O. Campos, V. Barral, C. J. Escudero, and J. A. García-Naya,
    An overview of IoT architectures, technologies, and existing open-source projects,
    Internet of Things (Netherlands), vol. 20, 2022. https://doi.org/10.1016/j.iot.2022.100626  P.
    Placidi, R. Morbidelli, D. Fortunati, N. Papini, F. Gobbi, and A. Scorzoni, Monitoring
    soil and ambient parameters in the iot precision agriculture scenario: An original
    modeling approach dedicated to low-cost soil water content sensors, Sensors, vol.
    21, no. 15, 2021. https://doi.org/10.3390/s21155110  X. Feng, F. Yan, and X. Liu,
    Study of Wireless Communication Technologies on Internet of Things for Precision
    Agriculture, Wirel. Pers. Commun., vol. 108, no. 3, pp. 1785-1802, 2019. https://doi.org/10.1007/s11277-019-06496-7  Y.
    Mekonnen, S. Namuduri, L. Burton, A. Sarwat, and S. Bhansali, Review-Machine Learning
    Techniques in Wireless Sensor Network Based Precision Agriculture, J. Electrochem.
    Soc., vol. 167, no. 3, p. 037522, 2020. https://doi.org/10.1149/2.0222003JES  V.
    K. Quy et al., IoT-Enabled Smart Agriculture: Architecture, Applications, and
    Challenges, Appl. Sci., vol. 12, no. 7, 2022. https://doi.org/10.3390/app12073396  J.
    Xu, B. Gu, and G. Tian, Review of agricultural IoT technology, Artif. Intell.
    Agric., vol. 6, pp. 10-22, 2022. https://doi.org/10.1016/j.aiia.2022.01.001  F.
    A. Almalki, B. O. Soufiene, S. H. Alsamhi, and H. Sakli, A low-cost platform for
    environmental smart farming monitoring system based on iot and uavs, Sustain.,
    vol. 13, no. 11, 2021. https://doi.org/10.3390/su13115908  R. Abbasi, P. Martinez,
    and R. Ahmad, The digitization of agricultural industry - a systematic literature
    review on agriculture 4.0, Smart Agric. Technol., vol. 2, no. February, p. 100042,
    2022. https://doi.org/10.1016/j.atech.2022.100042  A. Triantafyllou, P. Sarigiannidis,
    and S. Bibi, Precision agriculture: A remote sensing monitoring system architecture,
    Inf., vol. 10, no. 11, 2019. https://doi.org/10.3390/info10110348  M. A. J. Jamali,
    A. Heidari, P. Allahverdizadeh, F. Norouzi, and B. Bahrami, IoT Architecture,
    EAI/Springer Innov. Commun. Comput., pp. 9-31, 2020. https://doi.org/10.1007/978-3-030-18468-1_2  A.
    H. Mohd Aman, E. Yadegaridehkordi, Z. S. Attarbashi, R. Hassan, and Y. J. Park,
    A Survey on Trend and Classification of Internet of Things Reviews, IEEE Access,
    vol. 8, pp. 111763-111782, 2020. https://doi.org/10.1109/ACCESS.2020.3002932  Union
    Internationale des Télécommunications, Y.2060: General overview of the Internet
    of Things, 2012. Accessed: Oct. 18, 2023. [Online]. Available: https://www.itu.int/rec/T-REC-Y.2060-201206-I/fr  International
    telecommunication union, Recommendation Y.4450/Y.2238 (06/15), 2015. (accessed
    Oct. 18, 2023). https://www.itu.int/rec/T-REC-Y.2238-201506-I/en  INTERNATIONAL
    and STANDARD, Internet of Things (IoT) - Reference architecture, 2018. (accessed
    Oct. 18, 2023). https://www.iso.org/fr/standard/65695.html  A. Gavioli, E. G.
    de Souza, C. L. Bazzi, K. Schenatto, and N. M. Betzek, Identification of management
    zones in precision agriculture: An evaluation of alternative cluster analysis
    methods, Biosyst. Eng., vol. 181, pp. 86-102, 2019. https://doi.org/10.1016/j.biosystemseng.2019.02.019  X.
    Shi et al., State-of-the-art internet of things in protected agriculture, Sensors
    (Switzerland), vol. 19, no. 8, 2019. https://doi.org/10.3390/s19081833  A. Khanna
    and S. Kaur, Evolution of Internet of Things (IoT) and its significant impact
    in the field of Precision Agriculture, Comput. Electron. Agric., vol. 157, no.
    January, pp. 218-231, 2019. https://doi.org/10.1016/j.compag.2018.12.039  J. Zuo
    et al., RFID-based sensing in smart packaging for food applications: A review,
    Futur. Foods, vol. 6, no. October, p. 100198, 2022. https://doi.org/10.1016/j.fufo.2022.100198  S.
    Suresh and G. Chakaravarthi, RFID technology and its diverse applications: A brief
    exposition with a proposed Machine Learning approach, Meas. J. Int. Meas. Confed.,
    vol. 195, no. April, p. 111197, 2022. https://doi.org/10.1016/j.measurement.2022.111197  N.
    Chamara, M. D. Islam, G. (Frank) Bai, Y. Shi, and Y. Ge, Ag-IoT for crop and environment
    monitoring: Past, present, and future, Agric. Syst., vol. 203, no. July, p. 103497,
    2022. https://doi.org/10.1016/j.agsy.2022.103497  L. Ahmad and S. S. Mahdi, Variable
    Rate Technology and Variable Rate Application, Satell. Farming, pp. 67-80, 2018.
    https://doi.org/10.1007/978-3-030-03448-1_5  A. Khanna and S. Kaur, Evolution
    of Internet of Things (IoT) and its significant impact in the field of Precision
    Agriculture, Comput. Electron. Agric., vol. 157, no. November 2018, pp. 218-231,
    2019. https://doi.org/10.1016/j.compag.2018.12.039  J. D. S. Giovanni Perrone,
    Massimo Vecchio, and V. K. Fabio Antonelli, The Internet of things: a survey and
    outlook, in Sensors in the Age of the Internet of Things, no. June, 2019, pp.
    1-320. https://doi.org/10.1049/PBCE122E_ch1  Angrisani, L., Bonavolontà, F., Dassi,
    C., Liccardo, A., Schiano Lo Moriello, R., Tocchi, A., On the Suitability of Compressive
    Sampling for LoRa Signals Classification, (2020) International Review of Electrical
    Engineering (IREE), 15 (3), pp. 187-198. https://doi.org/10.15866/iree.v15i3.18129  Youssef,
    A., El Khoreby, M., Issa, H., Abdellatif, A., Brief Survey on Industry 4.0 Warehouse
    Management Systems, (2022) International Review on Modelling and Simulations (IREMOS),
    15 (5), pp. 340-350. https://doi.org/10.15866/iremos.v15i5.22923  Daraghma, R.,
    Evaluating Narrowband Internet of Things Suitability for Wireless Sensor Networks,
    (2023) International Review on Modelling and Simulations (IREMOS), 16 (5), pp.
    345-351. https://doi.org/10.15866/iremos.v16i5.22754  Mohamed, K., El Shenawy,
    A., A Smart IoT-Based Home Automation System for Controlling and Monitoring Home
    Appliances, (2023) International Review of Automatic Control (IREACO), 16 (5),
    pp. 228-237. https://doi.org/10.15866/ireaco.v16i5.23872  Amusan, L., Aigbavboa,
    C., Ebitimi, V., Influence of Industry 4.0 Applications and Development of Internet
    of Things (IoT)-Based Logic Framework in Energy Management Systems in Buildings,
    (2023) International Review of Civil Engineering (IRECE), 14 (5), pp. 425-440.
    https://doi.org/10.15866/irece.v14i5.22108  Bendoukha, S., Al-Ali, R., Karunamurthy,
    J., Ghaoud, T., Alkharrat, M., Link Margin Assessment for CubeSat Using Long Range
    Communication System, (2022) International Review of Aerospace Engineering (IREASE),
    15 (4), pp. 215-223. https://doi.org/10.15866/irease.v15i4.21970  Refbacks There
    are currently no refbacks.   Please send any question about this web site to info@praiseworthyprize.com
    Copyright © 2005-2024 Praise Worthy Prize"'
  inline_citation: '>'
  journal: International Journal on Engineering Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Conventional IoT Architecture: Precision Agriculture as Domain of Application'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 32 papers. The special focus in this conference
    is on Software Architecture. The topics include: Continuous Dependability Assessment
    of Microservice Systems; assessing Security of Internal Vehicle Networks; methodical
    Approach for Centralization Evaluation of Modern Automotive E/E Architectures;
    MockSAS: Facilitating the Evaluation of Bandit Algorithms in Self-adaptive Systems;
    towards Uncertainty Reduction Tactics for Behavior Adaptation; towards Characterization
    of Edge-Cloud Continuum; towards Online Testing Under Uncertainty Using Model-Based
    Reinforcement Learning; a Maude Formalization of Object Nets; Developing an AI-Enabled
    IIoT Platform-Lessons Learned from Early Use Case Validation; an Overview About
    Terravis Architecture Large-Scale Business Process Integration for Swiss Land
    Register Processes; devOps in Robotics: Challenges and Practices; enabling IoT
    Connectivity and Interoperability by Using Automated Gateways; a Methodological
    Approach to Verify Architecture Resiliency; microservices Security: Bad vs. Good
    Practices; multi-metric Approach for Decomposition of Microservice-Based Data
    Science Workflows; Introducing Estimators—Abstraction for Easy ML Employment in
    Self-adaptive Architectures; generalization of Machine-Learning Adaptation in
    Ensemble-Based Self-adaptive Systems; finding Reusable Machine Learning Components
    to Build Programming Language Processing Pipelines; optimized Machine Learning
    Input for Evolutionary Source Code to Architecture Mapping; a Taxonomy for Design
    Decisions in Software Architecture Documentation; Architectural Revision of the
    E-Assessment System JACK; establishing a Benchmark Dataset for Traceability Link
    Recovery Between Software Architecture Documentation and Models; engineering of
    Trust Analysis-Driven Digital Twins for a Medical Device; using I4.0 Digital Twins
    in Agriculture; ExpressO: From Express.js Implementation Code to OpenAPI Interface
    Descriptions; tool-Based Attack Graph Estimation and Scenario Analysis for Software
    Architectures.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Computer Science (including subseries Lecture Notes in
    Artificial Intelligence and Lecture Notes in Bioinformatics)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 16th European Conference on Software Architecture, ECSA 2022
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
