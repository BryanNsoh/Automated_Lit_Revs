- analysis: 'The study presents a method for real-time monitoring of soil quality
    in coffee plantations using IoT and machine learning to aid farmers in making
    appropriate decisions for optimal crop growth. The framework gathers real-time
    data on soil parameters such as temperature, moisture, pH, nutrient levels, weather,
    CO2 levels, and historical data using a network of IoT sensors placed throughout
    the plantation.


    The collected data is then transmitted over a wireless cloud platform for processing
    and analysis using a combination of recurrent neural networks (RNNs) and gated
    recurrent units (GRUs). These techniques allow the system to learn and predict
    soil conditions and potential crop threats based on the gathered data.


    To enhance the accuracy of the system and provide actionable insights, counterfactual
    recommendations are utilized. These recommendations take into account current
    soil conditions, forecasts, and historical data to generate alternative strategies
    for irrigation, fertilization, and crop management.


    The proposed approach is evaluated through qualitative testing and is compared
    to other deep learning algorithms, demonstrating improved efficiency and accuracy.
    Moreover, by minimizing the use of water and fertilizers, the ecological impact
    is reduced while enhancing farmer decision-making and data accessibility.


    Overall, this framework provides a comprehensive solution for real-time soil health
    monitoring in coffee plantations, empowering farmers with the necessary information
    to increase crop yield, ensure sustainability, and prevent potential crop threats.'
  authors:
  - Selvanarayanan R.
  - Rajendran S.
  - Algburi S.
  - Ibrahim Khalaf O.
  - Hamam H.
  citation_count: '0'
  description: Soil health is essential for whirling stale soil into rich coffee-growing
    land. By keeping healthy soil, coffee producers may improve plant growth, leaf
    health, buds, cherry and bean quality, and yield. Traditional soil monitoring
    is tedious, time-consuming, and error-prone. Enhancing the monitoring system using
    AI-based IoT technologies for quick and precise changes. Integrated soil fertility
    control system to optimize soil health, maximize efficiency, promote sustainability,
    and prevent crop threads using real-time data analysis to turn infertile land
    into fertile land. The RNN-IoT approach uses IoT sensors in the coffee plantation
    to collect real-time data on soil temperature, moisture, pH, nutrient levels,
    weather, CO2 levels, EC, TDS, and historical data. Data transmission using a wireless
    cloud platform. Testing and training using recurrent neural networks (RNNs) and
    gated recurrent units gathered data for predicting soil conditions and crop hazards.
    Researchers are carrying out detailed qualitative testing to evaluate the proposed
    RNN-IoT approach. Utilize counterfactual recommendations for developing alternative
    strategies for irrigation, fertilization, fertilizer regulation, and crop management,
    taking into account the existing soil conditions, forecasts, and historical data.
    The accuracy is evaluated by comparing it to other deep learning algorithms. The
    utilization of the RNN-IoT methodology for soil health monitoring enhances both
    efficiency and accuracy in comparison to conventional soil monitoring methods.
    Minimized the ecological impact by minimizing water and fertilizer utilization.
    Enhanced farmer decision-making and data accessibility with a mobile application
    that provides real-time data, AI-generated suggestions, and the ability to detect
    possible crop hazards for swift action.
  doi: 10.1038/s41598-024-56954-x
  full_citation: null
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement View all journals
    Search Log in Explore content About the journal Publish with us Sign up for alerts
    RSS feed nature scientific reports articles article Article Open access Published:
    15 March 2024 Empowering coffee farming using counterfactual recommendation based
    RNN driven IoT integrated soil quality command system Raveena Selvanarayanan,
    Surendran Rajendran, Sameer Algburi, Osamah Ibrahim Khalaf & Habib Hamam  Scientific
    Reports  14, Article number: 6269 (2024) Cite this article 437 Accesses 9 Altmetric
    Metrics Abstract Soil health is essential for whirling stale soil into rich coffee-growing
    land. By keeping healthy soil, coffee producers may improve plant growth, leaf
    health, buds, cherry and bean quality, and yield. Traditional soil monitoring
    is tedious, time-consuming, and error-prone. Enhancing the monitoring system using
    AI-based IoT technologies for quick and precise changes. Integrated soil fertility
    control system to optimize soil health, maximize efficiency, promote sustainability,
    and prevent crop threads using real-time data analysis to turn infertile land
    into fertile land. The RNN-IoT approach uses IoT sensors in the coffee plantation
    to collect real-time data on soil temperature, moisture, pH, nutrient levels,
    weather, CO2 levels, EC, TDS, and historical data. Data transmission using a wireless
    cloud platform. Testing and training using recurrent neural networks (RNNs) and
    gated recurrent units gathered data for predicting soil conditions and crop hazards.
    Researchers are carrying out detailed qualitative testing to evaluate the proposed
    RNN-IoT approach. Utilize counterfactual recommendations for developing alternative
    strategies for irrigation, fertilization, fertilizer regulation, and crop management,
    taking into account the existing soil conditions, forecasts, and historical data.
    The accuracy is evaluated by comparing it to other deep learning algorithms. The
    utilization of the RNN-IoT methodology for soil health monitoring enhances both
    efficiency and accuracy in comparison to conventional soil monitoring methods.
    Minimized the ecological impact by minimizing water and fertilizer utilization.
    Enhanced farmer decision-making and data accessibility with a mobile application
    that provides real-time data, AI-generated suggestions, and the ability to detect
    possible crop hazards for swift action. Similar content being viewed by others
    Deep learning for water quality Article 12 March 2024 Historical impacts of grazing
    on carbon stocks and climate mitigation opportunities Article 15 March 2024 The
    interplay between microbial communities and soil properties Article 20 October
    2023 Introduction In the nineteenth century, coffee cultivation in Brazil began
    to expand into the Cerrado region. The Cerrado is a vast region of savanna with
    poor soils. However, Brazilian coffee farmers developed new techniques for improving
    the soil, such as using lime and fertilizer. As a result, the Cerrado is now the
    world''s largest coffee-producing region. The components nitrogen, phosphorus,
    potassium, calcium, magnesium, Sulphur, and iron can all be found in soil that
    is considered fertile1. The optimal soil for growing coffee is loamy soil, found
    in the state of north Karnataka, India which has a good combination of texture,
    drainage, and water retention. Coffee plantation soil requires well-drained soil
    to prevent waterlogging and root rot. Coffee plants have extensive root systems
    that extend deep into the soil to absorb nutrients and water2. The presence of
    nutrient-rich soil serves as the fundamental basis for the optimal growth and
    development of coffee plants, hence facilitating the production of superior-grade
    coffee beans. Fertility refers to the soil''s ability to provide essential nutrients
    for plant growth, such as nitrogen, phosphorus, and potassium. Healthy soil leads
    to healthier coffee plants, which produce higher yields of high-quality beans.
    Coffee plants thrive in slightly acidic soil with a pH of 5.0–6.5. Crop covering,
    composting, organic fertilizer, reduced tillage, water conservation, and shade
    management are ancient soil fertility strategies. Restoration of dry land to rich
    soil using IoT sensors to monitor and enhance coffee plantation soil health is
    creative and successful3. Soil sensors measure nitrogen, phosphorus, and potassium.
    Soil temperature sensors show how temperature affects plant growth and nutrient
    uptake. Farmers can protect coffee plants from extreme temperatures by tracking
    soil temperature patterns. Soil temperature sensors show how temperature affects
    plant growth and nutrient uptake. Analyzing soil temperature patterns protects
    coffee plants from extreme temperatures4. IoT sensors help farmers optimize irrigation,
    fertilization, and other soil management activities for healthier soil and higher
    crop yields by giving real-time soil data. Recurrent neural networks (RNNs) are
    a type of artificial neural network (ANN) that are well-suited for processing
    sequential data like IoT sensor time-series data. RNNs are useful for time series
    prediction, anomaly detection, and natural language processing because they can
    learn and understand temporal patterns and interdependencies in datasets. Recurrent
    neural networks (RNNs) provide the capability to analyze records of soil moisture
    data, enabling the prediction of forthcoming moisture levels. Conduct a comprehensive
    examination of soil nutrient data to predict potential nutrient deficits, hence
    facilitating the efficient and effective application of fertilizers by farmers.
    This research gap identifies characteristic patterns in soil sensor data, with
    a special emphasis on sudden changes in moisture and nutrient levels. Regular
    soil monitoring will monitor the alterations in soil condition and prompt safeguards
    will be implemented5. Develop predictive models that provide suggestions for optimal
    irrigation, fertilization, and other soil management practices. The limited scope
    of traditional soil testing often focuses on soil organic matter, microbial activity,
    and soil structure. However, the use of organic improvement in soil may result
    in delayed progress. Generalized suggestions derived from past data may not consider
    the particular soil characteristics, regional climate, or contemporary methods
    of management. The information provided Erroneous interpretation of soil test
    findings and suggestions might result in misguided conclusions and unproductive
    actions. Insufficient historical analysis, which fails to account for previous
    management techniques and local environmental conditions, can have an influence
    on evaluations of soil health status and long-term patterns. This paper is organized
    as follows: “Literature review” section presents a review of related work in Recurrent
    Neural Networks with the Internet of Things using deep learning. “The proposed
    model” section describes the proposed RNN-IoT approach in detail. “Results and
    discussion” section presents the experimental setup and results. “Conclusion”
    section discusses the results and compares RNN-IoT with existing methods. “Challenges
    and future possibilities” section concludes the paper and discusses future research
    directions. Literature review Aarthi, R., Sivakumar, D., et al., proposed the
    optimal watering schedule and fertilizer application rate. IoT software platforms
    that can be used to develop smart soil property analysis systems such as Thing
    Speak, Blynk, Cayenne, Node-RED, and Azure IoT Hub. Smart soil property analysis
    systems can provide real-time soil conditions data, allowing farmers to respond
    quickly to any changes. Future work is to develop more sophisticated machine learning
    models to improve the accuracy of the predictions6. Na, A., Isaac, W., Varshney,
    S, et al., proposed an Internet of Things (IoT)-based system for remote monitoring
    of soil characteristics a system that employs sensors to collect data on soil
    properties, such as pH, electrical conductivity (EC), moisture, temperature, and
    then communicates this data to a cloud platform or another remote location. These
    soil qualities include electrical conductivity (EC), pH, and temperature7. Jain,
    N., Awasthi, Y et al., proposed an IoT-based soil analysis system using optical
    sensors and multivariate regression is a system that uses optical sensors to measure
    the color and reflectance of soil and then uses multivariate regression to predict
    soil properties, such as pH, organic matter, and nutrient content. IoT-based soil
    analysis systems can be made small and portable, making them ideal for field use.
    Future work on IoT-based soil analysis systems could focus on making IoT-based
    soil analysis systems more affordable and accessible to small-scale farmers8.
    Patil, P et al., proposed the implementation of IoT to determine the level of
    bicarbonate in the soil a system that uses sensors to measure the pH and electrical
    conductivity (EC) of soil and then uses this data to calculate the bicarbonate
    level. IoT-based bicarbonate detection systems can provide users with the data
    they need to make informed decisions about irrigation, fertilization, and other
    agricultural practices9. Adrian Z et al. proposed integrating soil pH measurement
    into an Internet of Things (IoT) application a concept that involves using sensors
    to measure soil pH and then transmitting this data to a cloud platform or other
    remote location using a wireless communication protocol. The dataset collected
    by IoT-based soil pH measurement systems typically includes soil pH, Temperature,
    Humidity, Electrical conductivity (EC), and Timestamp10 as illustrated in Table
    1. Table 1 Literature review for soil health based on different proposed models.
    Full size table IoT (Internet of Things) is a key enabling technology for smart
    agriculture, as it allows for the collection and analysis of data from sensors
    in real-time. IoT-based soil parameter measurement systems can provide real-time
    data on soil parameters, which allows farmers to respond quickly to changes. Future
    work on IoT-based soil parameter measurement systems could focus on making the
    systems easier to set up and maintain18. The materials and methods section describes
    how the soil is fertilized using IoT sensors and Cloud storage. The proposed model
    The primary objective of this research study was to monitor the overall condition
    of the soil and to design an advanced algorithm called RNN-IoT. The present techniques
    for measuring soil health based on existing and past guidelines have yielded inaccurate
    results. The suggested approach has successfully addressed all of the aforementioned
    limitations and obtained a predictable outcome in transforming barren land into
    sustainable and rich soil suitable for coffee cultivation. Build an IoT sensor
    network to monitor soil health Moisture and temperature sensors, Purpose: Measure
    soil moisture and temperature, Version used: N95S31B outdoor NB. Carbon dioxide
    level sensors, Purpose:Measure CO2 concentration, Version used: CO2 concentration
    transmitter with 0–10 V, Measurement: CO2 concentration (0–10 V). Soil water level
    indication, Purpose: Indicate soil water level, Version used: Nordic nRF9160 SiP.
    GPS sensors, Purpose: Record location data, Version used: U-blox NEO-M8N. LDR
    soil color sensors, Purpose: Measure NPK color value, Version used: MNS2-9-W2-CM-020.
    Time stamps, Purpose: Record timestamps, Version used: Maxim Integrated DS3231.
    GPS units, Purpose: Record location data. Sensors measure soil potassium, phosphorus,
    and nitrogen levels and concentrations together with NPK color value indicators19.
    As demonstrated in Fig. 1, the N95S31B NB-IoT outdoor temperature and humidity
    sensor accurately measures air temperature and relative humidity. Figure 1 Working
    prototype for testing soil fertility. Full size image It subsequently sends data
    to an IoT server over NB-IoT. CO2 sensors measure CO. The waterproof, sturdy CO2
    concentration transmitter outputs 0–10 V. Nordic nRF9160 SiP is a low-power, single-chip
    cellular IoT solution. Its Arm Cortex-M33 CPU, low-power RF transceiver, and multiple
    ports make it adaptable. The Nordic nRF9160 SiP''s ADC peripheral measures soil
    moisture. SiP receives soil moisture sensor data20. The Soil EC NPK PH Sensor
    monitors NPK, EC, and pH. Soil electrical conductivity (EC) may indicate salt
    concentration. Higher EC values imply plant-harming soil salt. Growing plants
    need nitrogen, phosphorus, and potassium. It means 20% nitrogen, phosphorus, and
    potassium in the soil. Soil pH indicates acidity or alkalinity. Acidic soils have
    pH < 7, while alkaline soils have pH > 7. Electrical conductivity sensors detect
    soil solution. NPK sensors evaluate soil solution light absorption at different
    wavelengths. This data can track soil health trends and identify areas that need
    specialist soil management. LDR soil color sensors like the MNS2-9-W2-CM-020 improve
    coffee plantation soil health monitoring21. The Maxim Integrated DS3231 time stamp
    may improve coffee plantation soil health monitoring in numerous ways. Plantation
    operators can use time stamps to find patterns and trends in soil health data
    as indicated in Fig. 2. Figure 2 Virtual abstract for proposed system. Full size
    image Protocol for interfacing serial technology (IST) Soil moisture sensors measure
    volumetric water content. Two electrodes detect soil electrical resistance, which
    fluctuates with water content. Sensor output is usually a soil moisture-proportional
    voltage or frequency as indicated in Eq. (1). Where VWC is the volumetric water
    content which finds the percentage of soil volume occupied by water, can be calculated
    based on the weight of the wet soil minus the weight of the dry soil which divides
    the weight of the dry soil. εa is the apparent dielectric permittivity of the
    soil, εb is the dielectric permittivity of dry soil, εc is the dielectric permittivity
    of water. Where ρn is the neutron count rate in the soil, ρd is the neutron count
    rate in dry soil, and ρw is the neutron count rate in water as indicated in Eq.
    (2). $${\\text{VWC}} = \\left( {\\upvarepsilon {\\text{a}} -\\upvarepsilon {\\text{b}}}
    \\right)/\\left( {\\upvarepsilon {\\text{w}} -\\upvarepsilon {\\text{c}}} \\right)$$
    (1) $${\\text{VWC}} = \\left( {\\uprho {\\text{n}} -\\uprho {\\text{d}}} \\right)/\\left(
    {\\uprho {\\text{w}} -\\uprho {\\text{d}}} \\right)$$ (2) $${\\text{VWC}} = {\\text{M}}
    + {\\text{N}}*{\\text{R}}$$ (3) where R is soil electrical resistance and M and
    N are calibration constants from Eq. (3). A soil temperature sensor is needed
    to understand soil activity and plant growth22. It employs thermistors or thermocouples,
    whose resistance changes with temperature. Equation (4) shows that the sensor''s
    voltage or current output is proportional to soil temperature. Where T is soil
    temperature, R is thermistor electrical resistance, and A and B are calibration
    coefficients. $${\\text{T}} = {\\text{A}} + {\\text{B}}*\\ln \\left( {\\text{R}}
    \\right)$$ (4) Water level indicators assess soil water table depth. It employs
    a pressure transducer or ultrasonic sensor to detect water-induced pressure or
    sound reflection. Sensor output is generally a water level-proportional voltage
    or frequency. An NPK color value indicator evaluates soil nitrogen, phosphorus,
    and potassium levels. It measures soil extract color with a colorimetric sensor.
    Sensor output is generally an RGB color value or a numerical NPK level value.
    A GPS sensor locates the soil monitoring spot. GPS satellites inform it of its
    latitude, longitude, and altitude. The sensor sends NMEA messages with location
    coordinates as indicated in Eqs. (5), (6), and (7). $${\\text{Latitude}}={\\text{ArcTan}}2\\left({\\text{sin}}\\left({\\upvarphi
    }\\right),{\\text{cos}}\\left({\\upvarphi }\\right)*{\\text{cos}}\\left(\\uplambda
    \\right)\\right)$$ (5) $${\\text{Longitude}} = {\\text{ArcTan}}2\\left( {\\sin
    \\left(\\uplambda \\right),\\cos \\left(\\uplambda \\right)*\\cos \\left( {\\upvarphi
    } \\right) - \\sin \\left( {\\upvarphi } \\right)*\\sin \\left(\\updelta \\right)}
    \\right)$$ (6) $${\\text{Altitude}} = {\\text{R}}*\\left( {\\sin \\left( {{\\upvarphi
    } - {\\upvarphi }_{0} } \\right) - \\left( {{\\text{R}}_{0} + {\\text{h}}} \\right)/{\\text{R}}*\\sin
    \\left( {{\\upvarphi }_{0} } \\right)} \\right)$$ (7) where \\({\\upvarphi }\\)
    is the geodetic latitude, \\(\\uplambda\\) is the longitude, \\(\\updelta\\) is
    the sun’s declination, R is the Earth''s mean radius (6371 km), R0 is its equatorial
    radius (6378 km), h is the GPS antenna’s height above the Earth’s surface, and
    \\({\\upvarphi }_{0}\\) is the reference ellipsoid’s latitude (43.66° LDRs (light-dependent
    resistors) measure soil color to determine nutrient content. It usually uses an
    LDR, which changes resistance when exposed to different wavelengths of light.
    Sensor output is generally a resistance value that fluctuates proportionately
    with soil color as indicated in Eq. (8). $${\\text{R}}=({\\text{Cr}}+{\\text{Cg}}+{\\text{Cb}})/({\\text{Cw}}+{\\text{Cg}}+{\\text{Cb}})$$
    (8) where R is the reflected light, Cr is the red light component of the incident
    light, Cg is the green light component of the incident light, Cb is the blue light
    component of the incident light, and Cw is the white light component of the incident
    light. Soils with higher organic matter content tend to reflect more red light
    and less blue light, while soils with lower organic matter content tend to reflect
    more blue light and less red light. A pH sensor monitors the acidity or alkalinity
    of the soil. Typically, it employs a glass electrode that generates a voltage
    that varies by the pH of the solution that it is surrounded by. The output of
    the sensor is often in the form of a voltage, and its magnitude is typically proportional
    to the pH of the soil as shown in Eq. (9). $${\\text{pH}}=-{\\text{log}}10\\left({\\text{aH}}+\\right)$$
    (9) pH is soil acidity or alkalinity and pH+ is hydrogen ion activity in the soil
    solution. Each soil health measurement is timestamped. Even when the gadget is
    off, its real-time clock (RTC) preserves precise time. Synchronizing soil health
    data with other sources and tracking changes requires the timestamp. Table 2 estimates
    dry land-rich soil in coffee plantations2. IoT sensors may be connected to Arduino
    using IST. The simple and efficient IST protocol is ideal for connecting many
    sensors to an Arduino microcontroller. It includes Master Out Slave, in Master
    in Slave Out, Slave Select, and Serial Clock. SCLK synchronizes master–slave data
    transfer. MOSI and MISO signals send data from master to slave and slave to master.
    The owner chooses the slave via SS. A start condition from the master device starts
    IST communication with the slave. Most starts are high-to-low SS signal changes.
    After supplying the start condition, the master device can send a MOSI bit per
    SCLK clock pulse to the slave device. The slave device receives MISO data and
    delivers a bit to the master device for each SCLK clock pulse. Stop signals from
    master devices to slave devices halt IST communication. SS signals typically rise
    during a standstill. Arduino microcontroller board with enough computing power
    for data handling and communication interfaces. Use appropriate cables to connect
    each sensor to the microcontroller board for proper pinout and voltage. In Algorithm
    1, each sensor''s communication protocols are configured for data acquisition.
    Table 2 Parameters to fertile the coffee plantation soil from dry land. Full size
    table Algorithm 1 Interfacing Serial Technologies (IST) Full size image Configuration
    of sensor data transmission for arduino microcontroller For analysts to collect
    precise measurements of crucial soil characteristics like temperature, moisture,
    PH, CO2, fertilizer level, and nutrient concentrations, sensors are submerged
    far below the surface of the soil23. The Arduino microcontroller serves as the
    system''s primary central processing unit (CPU). It is in charge of gathering
    information from the sensors, processing that information, and then sending it
    to a computer or Laptop, Mobile Phone for utilization as indicated in Fig. 3.
    Arduino Uno, Wi-Fi module ESP8266, Jumper wires, breadboard, and 5 V Power Supply.
    Figure 3 Sensors connected to an Arduino microcontroller. Full size image From
    an Arduino microcontroller to a Node MCU to the cloud Arduino microcontrollers
    capture soil health data from connected sensors as the main data acquisition unit
    communicating with linked sensors, reading output values, and processing sensor
    data as requested. Arduino microcontrollers gather soil health data from sensors
    as the main data-collecting unit communicating with linked sensors, reading output
    values, and processing sensor data24. The Node MCU stores data in the cloud and
    uses AWS IoT Core for visualization, and these services are accessed through the
    Node MCU as indicated in Fig. 4. Figure 4 The connection between Arduino board
    to cloud storage. Full size image Cloud Interface provides dashboards or visualization
    tools to monitor the uploaded sensor data in real time or over time. The data
    can be analyzed to identify patterns, trends, and anomalies, providing valuable
    insights into the monitored environment or process. Analyzed sensor data can be
    used to trigger actions, such as sending alert messages based on soil health conditions.
    Recurrent neural network The raw data was delivered to the input layer, where
    it was often preprocessed and normalized to ensure network interoperability. Load
    the CSV file into Panda’s data frame. Preprocess the data by performing necessary
    steps such as cleaning, handling missing values, and feature selection. Sequence
    formation has sequence length is a variable that determines the length of each
    sequence to be created. An empty list called sequences is initialized to store
    the generated sequences. Formula for GRU-based Soil Health Monitoring where, h_t
    is the hidden state of the GRU at time step t, h_{t − 1} is the hidden state of
    the GRU at time step t − 1, h_t̃ is the candidate hidden state at time step t,
    gate_update is the update gate, gate_reset is the reset gate. $${h}_{t}=gat{e}_{update}*{h}_{\\left\\{t-1\\right\\}}+gat{e}_{reset}*{h}_{\\widetilde{t}}$$
    (10) The update gate controls which information is allowed to flow into the hidden
    state from the previous time step where W_h is the weight matrix for the hidden-to-hidden
    state connection, U_x is the weight matrix for the input-to-hidden state connection,
    b_h is the bias vector for the hidden state, x_t is the input at time step t.
    $${h}_{\\widetilde{t}}=tanh\\left({W}_{h}*{h}_{\\left\\{t-1\\right\\}}+{U}_{x}*{x}_{t}+{b}_{h}\\right)$$
    (11) Loops from 0 to len(data)—sequence length + 1. This loop generates dataset
    sequences. Unfold the RNN into interconnected layers with input, forget, cell,
    and output gates. Input the current input into the input gate to regulate information
    flow into the hidden state. Apply the forget gate on the previous hidden state
    to determine how much to remember. Update the cell state depending on the input
    gate, forget gate and previous hidden state cell state that stores sequence long-term
    memory. $${C}_{t}={f}_{t}*{C}_{\\left\\{t-1\\right\\}}+{i}_{t}*tanh\\left({W}_{h}*{h}_{\\left\\{t-1\\right\\}}+{U}_{x}*{x}_{t}+{b}_{c}\\right)$$
    (12) Consider Ct as the cell state at time step t, \\({C}_{\\left\\{t-1\\right\\}}\\)
    at time step t − 1, and \\({h}_{\\left\\{t-1\\right\\}}\\) as the forget gate
    \\({i}_{t}\\) is the input gate, tanh is the hyperbolic tangent activation function,
    \\({W}_{h}\\) and \\({U}_{x}\\) are the hidden-to-hidden and input-to-hidden weight
    matrices, respectively. At time step t, \\({b}_{c}\\) is the bias vector for the
    cell state, \\({x}_{t}\\) is the input, and \\({h}_{\\left\\{t-1\\right\\}}\\)
    is the hidden state. Use the output gate to create the current time step output
    that passes cell state information. Gated recurrent units (GRUs) architecture
    trains the dataset properly depending on soil prediction features. At each time
    step, calculate the error between expected and actual output. Back propagates
    the error via the unrolled RNN to calculate weight error gradients. Update weights
    to reduce inaccuracy. Prediction and Analysis in the RNN model increase warnings
    and suggestions by predicting soil health metrics from real-time sensor inputs.
    Historical sensor data, growth trends, and FFNN soil health results train the
    model25. Change specifics to simulate scenarios. Counter-factual recommendation
    generation Parameters within historical data to represent various ‘what-if’ situations.
    It compares with the actual generated out with historical data to generate recommendations.
    They are comparing the recommendation using three ways Present data—Historical
    data, Historical data—Historical data, and Present data—Present data as illustrated
    in Fig. 5. Figure 5 Counter-factual recommendations. Full size image For example,
    let us contemplate a hypothetical situation in which a soil health monitoring
    system, based on feedforward neural network (FFNN) architecture, provides a recommendation
    for the optimal application rate of fertilizer for a particular agricultural area.
    Counterfactual suggestion has the potential to be employed to generate alternative
    fertilizer recommendations. Manhattan distance, often known as taxi cab distance,
    is calculated by adding the absolute coordinate differences of two places. Imagine
    traveling solely horizontally or vertically in Manhattan’s grid. Distance is calculated
    using present and historical data. Consider N points in K-dimensional space, where
    2 <  = N <  = 10^ {5} and 1 <  = K <  = 5. Find the location with the lowest Manhattan
    distance from the N places. Manhattan distance is two points measured along right-angle
    axes. It is |x1 − x2| +|y1 − y2| on a plane with p1 at (x1, y1) and p2 at (x2,
    y2). Sorting the points in all K dimensions and outputting the middle components
    of each dimension reduces the Manhattan distance. $$Manhattan\\;Distance = \\left|
    {s1 - s2} \\right| + \\left| {r1 - r2} \\right|$$ (13) The Manhattan Distance,
    which indicates the dissimilarity between the current suggestion and several alternative
    fertilizer options, may be calculated as shown in Eq. (13), where |s1 − s2| denotes
    the absolute difference between the two points’ s-coordinates. |r1 − r2| is the
    absolute difference in r-coordinates. The calculation considers nutritional content,
    application rates, and environmental effects. The system may create counterfactual
    suggestions with Manhattan Distances below a threshold. This keeps alternate options
    comparable to the original advice while allowing for varied perspectives. The
    implementation phase collects and analyzes data. Results and discussion The field
    implementation of the AI-powered system involved deploying IoT sensors in selected
    infertile agricultural fields to collect real-time soil data. These sensors continuously
    monitor soil properties such as moisture, temperature, pH, nutrient levels, and
    electrical conductivity. XG-booster is used for the pre-training model for predicting
    specific soil properties (e.g., nutrient content, and moisture levels) based on
    sensor data. The collected data was then fed into the AI system, which employed
    RNNs and GRUs to identify patterns and trends in soil health indicators as indicated
    in Fig. 6. Figure 6 Agriculture land setup for testing soil fertility. (a) Agricultural
    infertile land, (b) 5-week monitoring land, (c) 6–10 week monitoring land, (d)
    11–15 weeks monitoring land, (e) 16–20 weeks monitoring land, (f) Fertile soil.
    Full size image Evaluation setup Hardware setup has a Microcontroller—Arduino
    Uno heart of any IoT device, and it is responsible for collecting data from sensors,
    processing that data, and sending it to the cloud. Sensors- Soil moisture sensor,
    soil temperature sensor, pH sensor, and nutrient sensor. Wireless Communication
    Modules—Wi-Fi communication module, Bluetooth communication module, cellular communication
    module, Irrigation system actuator, fertilizer applicator actuator. AC power supply,
    DC power supply, battery, SD card, USB flash drive. Software setup has Windows
    operating system, python 3.6 Amazon Web Services (AWS)0.5, Data Visualization
    Tools—Matplotlib, simulates the suggested model on PC i5-8600 k, GeForce 1050Ti
    4 GB, 16 GB RAM, 250 GB SSD, and 1 TB HDD. The suggested model is evaluated using
    False Negative, True Positive, True Negative, and False Positive metrics using
    the Recurrent Neural Network and Counter-Factual Recommendation Generation. Field
    setup for improving soil fertility Enhancing the fertility of the soil is essential
    for achieving sustainable agriculture and achieving maximum crop yields. To evaluate
    and enhance the fertility of the soil throughout a range of monitoring periods,
    this experiment describes a field design that makes use of several land portions.
    Datasets are collected in real-time from Madikeri, Coorg, Karnataka total of 640,
    monthly monitoring based on historical data from the past three years recorded
    around 300582. Performance evaluation compared with RNN A proposed model is compared
    to existing models to determine its accuracy. Table 3 shows random forest, SVM,
    K-means clustering, GAN, and feed-forward neural network. This performance is
    measured using several metrics, including accuracy, precision, recall, and F1
    score. Accuracy is the most straightforward metric, measuring the proportion of
    correct predictions made by the model. Precision measures the proportion of correct
    positive predictions. Recall, also known as sensitivity, measures the proportion
    of actual positive instances that are correctly identified as positive. Table
    3 Performance analysis for the proposed model. Full size table $$Accuracy = (True\\;
    Positives + True \\;Negatives) / (Total\\; Samples)$$ (14) $$Precision = True\\;
    Positives / (True\\; Positives + False\\; Positives)$$ (15) $$Recall = True\\;
    Positives / (True \\;Positives + False \\;Negatives)$$ (16) $$F1 \\;Score = 2
    * (Precision * Recall) / (Precision + Recall)$$ (17) $$Specificity = True \\;Negatives
    / (True \\;Negatives + False\\; Positives)$$ (18) The proposed method achieves
    94.25% accuracy, while random forest, SVM, K-means clustering, GAN, and FFNN obtain
    81.22%, 81.66%, 82.12%, 88.12%, and 89.73%. Existing approaches take longer to
    calculate all datasets. Figure 7 shows that the suggested technique detects events
    better than current methods. High EC and TDS readings indicate excessive salinity,
    which can stress and reduce coffee plant output. Most of the 30-day monitoring
    period had optimum EC and TDS values. NPK levels reflect coffee plant nutrient
    availability. Low nitrogen, phosphorus, and potassium (NPK) levels can decrease
    coffee plant output. The reduction in NPK levels from day 11–30 suggests dietary
    replenishment. During days 1–10, the soil moisture was a little dry, but otherwise,
    it was excellent. The rain prevented soil desiccation and reduced coffee plant
    stress. Figure 8 shows that soil temperature also affects coffee plant development.
    Coffee plants like soil temperatures between 20 and 25 °C. During the monitoring
    period, soil temperature stayed within the optimal range, promoting root growth
    and nutrient absorption. Figure 7 Result analysis for the proposed approach. Full
    size image Figure 8 Mobile application. Full size image Optimization of the model
    To keep the coffee plants healthy and the farm skiing, it is important to monitor
    the soil health of the plantations. Beans with more robust scents and tastes are
    a product of soil that is both healthy and well-tended. Farmers may maximize water
    and fertilizer efficiency and cut down on production expenses by learning what
    their soil requires to be healthy. To maintain healthy and fertile soil over the
    long term, it is important to evaluate it regularly for signs of nutrient imbalances.
    Weekly data analysis utilizing the RNN model is used to monitor soil conditions,
    and farmers are updated on health-related information and comments about soil
    quality. For a more precise prediction, we compare the soil condition from the
    second week of monitoring with that from the first week. In a similar way comparing
    week 2 with week 1 generates correct results, comparing week 3 with week 2 and
    so on also yields accurate results. Measurements taken to enrich the soil of coffee
    plantations in arid regions When substantially monitoring and tracking various
    essential indicators such as electrical conductivity (EC), total dissolved solids
    (TDS), nitrogen (N), phosphorus (P), potassium (K), soil moisture, soil temperature,
    carbon dioxide (CO2), and soil pH, agricultural practitioners can promptly detect
    potential issues and implement appropriate measures to uphold an optimal ecosystem
    for their coffee crops. The soil solution''s EC and TDS levels indicate salt content
    as indicated in Table 4. Table 4 Measurement Range to fertile the coffee plantation
    soil from dry land. Full size table CO2 levels rose somewhat from day 11–20, indicating
    a healthier soil microbial community. Coffee plants thrive best at 5.5–6.5 soil
    pH as illustrated in Fig. 9. The soil pH remained within the correct range during
    the monitoring period, ensuring that coffee plants could easily obtain nutrients
    as shown in Table 5. Rainfall is vital to soil hydration. The monitoring period
    was without significant precipitation from day one to day fourteen. This shows
    that irrigation was needed to maintain soil moisture levels throughout this era.
    Day 15 brought 15 mm of rain, restoring soil moisture. Coffee plant soil health
    measurements were within optimal levels for most of the 140-day monitoring period
    from week 1 to week 20. Figure 9 Weekly monitoring using the IoT Platform. Full
    size image Table 5 Parameters to fertile the coffee plantation soil from dry land.
    Full size table Counter-factual recommendation RNN-IoT model uses historical data
    and real-time sensor readings to predict future soil states and potential crop
    threats. Based on these predictions, the system generates counterfactual recommendations—alternative
    actions your farm could take to achieve desired outcomes. Mobile application sample
    The mobile application was created with the open-source Google framework Flutter,
    employing JavaScript. The RCNN model has been integrated and implemented, resulting
    in the generation of recommendations. These recommendations are created using
    Counterfactual suggestions. Figure 10 is a discussion based on the question raised
    by the agriculturist from various parts of the coffee plantation growers. Soil-rich
    mobile-based applications will provide recommendations after analyzing sensor
    data. Agriculturist question was “How do soil conditions that are too dry, too
    wet, too cold, or too hot affect coffee plants”. The recommendation is generated
    as High or low soil pH can make it difficult for coffee plants to absorb nutrients.
    Solution: Apply soil amendments to adjust the pH to the optimal range. The specific
    type of soil amendment to apply will depend on the current soil pH and the desired
    pH range. Similarly, “How does rainfall affect coffee plants, and what can coffee
    growers do to mitigate the negative effects of extreme rainfall events”. The recommendation
    is generated as Insufficient or excessive rainfall can lead to water stress or
    soil erosion. Irrigate during periods of low rainfall and implement erosion control
    measures during periods of high rainfall. Monitoring rainfall patterns is important
    to ensure that coffee plants receive the right amount of water26. The proposed
    model is trained using the Training Set, which enables it to discover hyperlinks
    and patterns in the data. To minimize loss and enhance predictions. To evaluate
    the model''s performance and adjust its hyper-parameters, a validation set is
    utilized during its development. Evaluates the model''s ability to be extrapolated
    to new data, which helps avoid excess fitting. The testing set is utilized for
    the final and unbiased evaluation of the model''s performance once all training
    and hyper-parameter adjustments have been finished. Ensures the model''s ability
    to apply knowledge to unfamiliar data and offers an accurate evaluation of its
    capabilities as shown in Fig. 11. The total dataset is divided into 60% for training,
    20% for validation, and 20% for testing. The difference between predicted and
    actual values is computed using a loss function by mean square error. The loss
    is propagated backward through time, updating model parameters (weights and biases)
    to minimize the loss. Figure 10 Farmer’s query-based recommendation. Full size
    image Figure 11 Training and validation loss versus accuracy of RNN over counterfactual
    recommendation. Full size image A confusion matrix is an illustrative format that
    exhibits the success of a proposed theory27. The data represents the observed
    vs projected results for each week of monitoring. Within the realm of soil fertility,
    weekdays may be classified as several tiers of fertility. For instance, weeks
    1–7 exhibit low fertility, weeks 8–14 demonstrate medium fertility, and weeks
    15–20 showcase high fertility, making them suitable for cultivation as shown in
    Fig. 12. Figure 12 Multiple confusion matrix for monitoring soil accuracy. Full
    size image By using IoT sensors to track soil moisture, temperature, pH, and nutrient
    levels, coffee farmers can gain valuable insights into their crops'' health and
    needs. Figure 13 data can then be used to make informed decisions about irrigation,
    fertilization, and other agricultural practices—a 20-week soil monitoring study
    that tracks the soil condition in a coffee plantation. The study was conducted
    in a coffee plantation in Madekari, Coorg, and Karnataka, India. Ten IoT sensors
    were installed on the plantation, and data was collected every hour for 20 weeks.
    The sensors measured soil moisture, temperature, and pH at a depth of 10 cm throughout
    20 weeks. Due to heavy rainfall in the early weeks of the research, soil moisture
    was maximum. Dry weather diminished soil moisture. The study''s soil temperature
    peaked in the first weeks and then dropped as the weather cooled. pH was almost
    consistent throughout the investigation. Figure 13 IoT sensors monitoring land
    view. Full size image 20-week. The investigation produced soil moisture, temperature,
    and pH maps. These maps helped identify under and over-watered crop regions and
    regulate the irrigation system. The maps were also utilized to identify acidic
    and alkaline soil on the farm and adapt the fertilization program. Conclusion
    The foreseeable future of coffee production demands beyond merely cultivating
    a diverse range of coffee beans; it involves establishing a sustainable and lucrative
    coffee business that will endure for future generations. Utilizing sophisticated
    sensors allows for the monitoring of environmental variables, including precipitation,
    humidity, and temperature, to optimize agricultural productivity. Internet of
    Things (IoT) devices have the potential to accurately assess the levels of water
    and nitrogen present in soil. Furthermore, by assessing the CO2 concentration
    in agricultural areas, it is possible to accurately monitor evapotranspiration
    rates, therefore enhancing the monitoring of soil health. This requires equipping
    coffee growers with the necessary tools and expertise to develop intelligent soil—a
    flexible and robust ecosystem that supports the growth of healthy coffee plants
    while reducing environmental harm. Farmers are provided with immediate updates
    on the condition of their soil and receive alerts on any potential issues. This
    enables farmers to promptly address any early signs of soil degradation. The Recurrent
    Neural Network and Counterfactual Recommendations utilize advanced algorithms
    to forecast future trends and provide tailored soil cures for youthful agriculturists.
    Knowledgeable farmers make well-informed choices regarding their soil, leading
    to higher crop production, better quality, and more profitability. The proposed
    method has overcome all of the above drawbacks and achieved the predictable result
    for converting infertile land to fertile land sustainable for coffee plantations.
    The future direction is moving towards installed outside Internet of Things devices
    are subject to severe weather, dust, wind, temperature, and other environmental
    hazards. This is one of the main issues with these devices. Unexpected mechanical
    failure of the complex devices could occur as a result of unfavorable environmental
    circumstances. Therefore, the raw materials used to construct the Internet of
    Things (IoT) devices used in smart farming must be able to endure such harsh climatic
    conditions. This will ensure that the devices last longer and provide more consistent
    results. Coffee cherry early detection and recommendation based on advanced deep
    learning technology which empowers farmers to cultivate a sustainable future for
    coffee, one smart earth revolution at a time. Challenges and future possibilities
    Global research on the Internet of Things (IoT) and sensor-based smart farming
    have revealed positive results. It is employed in several small-scale agricultural
    domains a rural farm, where farmers have less technological expertise, may provide
    more challenges. Even so, the execution of the project on a broad scale is still
    awaiting completion. An obstacle of great importance is the financial burden associated
    with the deployment and installation of IoT-tagged sensors and accessories in
    vast agricultural areas. Furthermore, there is ambiguity regarding the expenses
    associated with implementation and the monetary benefits that may be obtained.
    Deploying IoT-enabled technology incurs substantial expenses for hardware, software,
    and system operation. Supplementary costs may encompass energy usage, system upkeep,
    service enrollment, and labor fees for operating combined hardware and software.
    Enhancing farmers'' digital literacy on a global scale is crucial to facilitating
    the extensive use of IoT technologies. Lack of comprehension and consciousness
    of IoT-based technologies in agriculture might result in the underutilization
    of intelligent systems in farming28. Government policymakers should develop economic
    strategies to facilitate the successful and efficient implementation of Internet
    of Things (IoT) technology by farmers in agricultural areas. Data privacy and
    security issues might hinder large-scale IoT and smart system adoption. Attackers
    can manipulate cloud server data to harm automated agricultural activities in
    farmlands. Attacks can negatively impact agricultural output and prevent good
    environmental management. IoT data security concerns contribute to the sluggish
    adoption of smart farming systems. Encryption is crucial for protecting critical
    data and digital systems in smart farming from global cyberattacks. Integrating
    cryptography with strong keys can reduce cyber threats on cloud systems. Additional
    methods, such as integrating multiparty computing with homomorphic encryption
    or block-chain, can yield accurate results. Experimental statement No plants and
    Animals are disturbed for research work. All image datasets information regarding
    plant-based processes or applications was obtained from publicly available and
    ethically sourced data and publications. Plant Collection materials are complying
    with institutional, national, and international guidelines and legislation. So
    we confirm that all methods were performed in accordance with the relevant guidelines/regulations/legislation.
    Data availability The dataset utilized and analyzed in our research is publicly
    accessible to the public fertility land in the Zenodo communities Raveena. (2023).
    Empowering Coffee Farming Using Counterfactual Recommendation based RNN-IoT Integrated
    Soil Fertility Control System [Data set]. Zenodo. https://doi.org/10.5281/zenodo.10416960.
    The coding system along with additional data are accessible upon adequate request
    from the initial and coauthor authors. References Alharbi, M., Rajagopal, S. K.,
    Rajendran, S. & Alshahrani, M. Plant disease classification based on ConvLSTM
    U-net with fully connected convolutional layers. Traitement Signal 40(1), 157
    (2023). Article   Google Scholar   Kumar, R. S., Thanarajan, T. & Alotaibi, Y.
    Brain tumor: Hybrid feature extraction based on UNet and 3DCNN. Comput. Syst.
    Sci. Eng. 45(2), 2093–2109 (2023). Article   Google Scholar   Xiao, L. et al.
    Mineral coating enhances the carbon sequestration capacity of biochar derived
    from Paulownia biowaste. Agronomy 13(9), 2361 (2023). Article   CAS   Google Scholar   Mustafa,
    A. et al. Long-term fertilization alters the storage and stability of soil organic
    carbon in Chinese paddy soil. Agronomy 13(6), 1463 (2023). Article   CAS   Google
    Scholar   Saikia, D. & Khatoon, R. Smart monitoring of soil parameters based on
    IoT. Int. J. Adv. Technol. Eng. Explor. 9(88), 401 (2022). Google Scholar   Aarthi,
    R., Sivakumar, D. & Mariappan, V. Smart soil property analysis using IoT: A case
    study implementation in backyard gardening. Procedia Comput. Sci. 218, 2842–2851
    (2023). Article   Google Scholar   Na, A., Isaac, W., Varshney, S. & Khan, E.
    An IoT-based system for remote monitoring of soil characteristics. in 2016 International
    Conference on Information Technology (InCITe)-the next generation IT summit on
    the Internet of things: Connect your Worlds, 316–320 (2016). Jain, N., Awasthi,
    Y. & Jain, R. K. An IoT-based soil analysis system using optical sensors and multivariate
    regression. Int. J. Exp. Res. Rev. (IJERR). 31, 23–32 (2023). Article   Google
    Scholar   Patil, P., Vimala, M. S., Valarmathi, K. & Rose, L. Implementation of
    IoT to determine the level of bicarbonate in soil. in Implementation of IoT to
    Determine the Level of Bicarbonate in Soil, vol. 12, 5862–5876 (2023). Zarnescu,
    A., Ungurelu, R., Macovei, M. I. & Varzaru, G. Integrating soil pH measurement
    into an Internet of Things application. Sci. Pap.-Ser. B Hortic. 62, 703–708 (2018).
    Google Scholar   Ajit, P. et al. IoT based pH reader. Int. J. Adv. Res. Sci. Commun.
    Technol. (IJARSCT) 5(1), 119–123 (2021). Google Scholar   Kamelia, L., Nugraha,
    Y. S., Effendi, M. R. & Priatna, T. The IoT-based monitoring systems for humidity
    and soil acidity using wireless communication. in 2019 IEEE 5th International
    Conference on Wireless and Telematics (ICWT), 1–4 (2019). Ogudo, K. A., Surendran,
    R. & Khalaf, O. I. Optimal artificial intelligence based automated skin lesion
    detection and classification model. Comput. Syst. Sci. Eng. 44(1), 693–707 (2023).
    Article   Google Scholar   Deshpande, G., Goswami, M., Kolhe, J., Khandagale,
    V., Khope, D., Patel, G., Doijad, R., Mujumdar, M., Singh, B. B. & Ganeshi, N.
    IoT-Based Low-Cost Soil Moisture and Soil Temperature Monitoring System, p. 23.
    arXiv:2206.07488 (2023). Pechlivani, E. M., Papadimitriou, A., Pemas, S., Ntinas,
    G. & Tzovaras, D. IoT-based agro-toolbox for soil analysis and environmental monitoring.
    Micromachines 14(9), 1698 (2023). Article   PubMed   PubMed Central   Google Scholar   Vidhya,
    P., Ninshiya Mary, J., Yamuna Mary, J., Suriya Ponselvi, R., & Mr, K.S. IoT-based
    soil content analysis. J. Pharm. Negat. Results. 100–112 (2023). Ayyasamy, S.
    & Jhosiah Felips, J. F. Role of Internet of Things (IoT) in the protection of
    soil and plant life from acid rain disasters: A survey. IJCRT. 22(20), 10–20 (2023).
    Google Scholar   Mutyalamma, A. V., Yoshitha, G., Dakshyani, A. & Padmavathi,
    B. V. Smart agriculture to measure humidity temperature moisture Ph. and nutrient
    values of the soil using IoT. Int. J. Eng. Adv. Technol. (IJEAT). 9(5), 11–33
    (2020). Google Scholar   Subahi, A. F., Khalaf, O. I. & Alotaibi, Y. I modified
    the self-adaptive Bayesian algorithm for smart heart disease prediction in IoT
    system. Sustainability 14(21), 14208–14218 (2022). Article   Google Scholar   Raveena,
    S. & Surendran, R. Sustainable fertilizers in coffee plantation: Hybrid Recommendation
    for agricultural producers. in 2023 5th International Conference on Inventive
    Research in Computing Applications (ICIRCA), 1664–1671 (2023). Sowmiya, E. & Sivaranjani,
    S. Smart system monitoring on soil using the Internet of Things (IoT). Int. Res
    J. Eng. Technol. (IRJET) 4(2), 1070–1099 (2017). Google Scholar   Manivasan, V.,
    Rathinavel, J. P., Khanna, A. K. & Visu, P. Soil and water compatibility testing
    based on IOT. Int. J. Adv. Netw. Appl. 332–334 (2019). Schirrmann, M., Gebbers,
    R., Kramer, E. & Seidel, J. Soil pH mapping with an on-the-go sensor. Sensors.
    11(1), 573–598 (2011). Article   ADS   CAS   PubMed   PubMed Central   Google
    Scholar   Raut, S. & Chitre, V. Soil monitoring and testing using IoT for fertility
    level and crop prediction. in Proceedings of the 3rd International Conference
    on Advances in Science & Technology (ICAST), vol. 1, 1–19 (2020). Selvanarayanan,
    R., Rajandran, S. & Alotaibi, Y. using hierarchical agglomerative clustering in
    E-nose for coffee aroma profiling: Identification, quantification, and disease
    detection. Instrum. Mes. Métrol. 22(4), 1–23 (2023). Google Scholar   Surendran,
    R., Khalaf, O. I. & Tavera Romero, C. A. Deep learning based intelligent industrial
    fault diagnosis model. Comput. Mater. Contin. 70(3) (2022). Rajak, P., Ganguly,
    A., Adhikary, S. & Bhattacharya, S. Internet of Things and smart sensors in agriculture:
    Scopes and challenges. J. Agric. Food Res. 1(14), 100776 (2023). Google Scholar   Tamilvizhi,
    T., Alotaibi, Y. & Rajendran, S. It improved wolf swarm optimization with deep-learning-based
    movement analysis and self-regulated human activity recognition. AIMS Math. 8(5),
    12520–12539 (2023). Article   Google Scholar   Download references Funding The
    authors thank the Natural Sciences and Engineering Research Council of Canada
    (NSERC) and New Brunswick Innovation Foundation (NBIF) for the financial support
    of the global project. These granting agencies did not contribute to the design
    of the study and collection, analysis, and interpretation of data. Author information
    Authors and Affiliations Department of Computer Science and Engineering, Saveetha
    School of Engineering, Saveetha Institute of Medical and Technical Sciences, Chennai,
    602 117, India Raveena Selvanarayanan & Surendran Rajendran College of Engineering
    Techniques, Al-Kitab University, Kirkuk, Iraq Sameer Algburi Department of Solar,
    Al-Nahrain Research Centre for Renewable Energy, Al-Nahrain University, Jadriya,
    Baghdad, Iraq Osamah Ibrahim Khalaf University de Moncton, Moncton, NB, E1A 3E9,
    Canada Habib Hamam Contributions Conceptualization, S.A., and R.S.; methodology,
    S.R.; software, R.S.; validation, S.A., S.R., and R.S.; formal analysis, O.I.K.;
    investigation, S.R.; resources, O.I.K.; data curation, R.S.; writing—original
    draft preparation, S.R.; writing—review and editing, S.R.; visualization, H.H.;
    supervision, R.S.; project administration, S.R.; funding acquisition, S.A, O.I.K,
    H.H. All authors have read and agreed to the published version of the manuscript.
    Corresponding author Correspondence to Surendran Rajendran. Ethics declarations
    Competing interests The authors declare no competing interests. Additional information
    Publisher''s note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Open Access This article is licensed under a Creative Commons Attribution 4.0
    International License, which permits use, sharing, adaptation, distribution and
    reproduction in any medium or format, as long as you give appropriate credit to
    the original author(s) and the source, provide a link to the Creative Commons
    licence, and indicate if changes were made. The images or other third party material
    in this article are included in the article''s Creative Commons licence, unless
    indicated otherwise in a credit line to the material. If material is not included
    in the article''s Creative Commons licence and your intended use is not permitted
    by statutory regulation or exceeds the permitted use, you will need to obtain
    permission directly from the copyright holder. To view a copy of this licence,
    visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About
    this article Cite this article Selvanarayanan, R., Rajendran, S., Algburi, S.
    et al. Empowering coffee farming using counterfactual recommendation based RNN
    driven IoT integrated soil quality command system. Sci Rep 14, 6269 (2024). https://doi.org/10.1038/s41598-024-56954-x
    Download citation Received 21 December 2023 Accepted 13 March 2024 Published 15
    March 2024 DOI https://doi.org/10.1038/s41598-024-56954-x Share this article Anyone
    you share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Keywords
    Soil monitoring system Monitoring sensor Recurrent neural network (RNN) Gated
    recurrent units (GRU) IoT sensor Counterfactual recommendation Subjects Computational
    science Computer science Environmental biotechnology Environmental impact Information
    technology Comments By submitting a comment you agree to abide by our Terms and
    Community Guidelines. If you find something abusive or that does not comply with
    our terms or guidelines please flag it as inappropriate. Download PDF Sections
    Figures References Abstract Introduction Literature review The proposed model
    Results and discussion Conclusion Challenges and future possibilities Data availability
    References Funding Author information Ethics declarations Additional information
    Rights and permissions About this article Comments Advertisement Scientific Reports
    (Sci Rep) ISSN 2045-2322 (online) About Nature Portfolio About us Press releases
    Press office Contact us Discover content Journals A-Z Articles by subject Protocol
    Exchange Nature Index Publishing policies Nature portfolio policies Open access
    Author & Researcher services Reprints & permissions Research data Language editing
    Scientific editing Nature Masterclasses Research Solutions Libraries & institutions
    Librarian service & tools Librarian portal Open research Recommend to library
    Advertising & partnerships Advertising Partnerships & Services Media kits Branded
    content Professional development Nature Careers Nature Conferences Regional websites
    Nature Africa Nature China Nature India Nature Italy Nature Japan Nature Korea
    Nature Middle East Privacy Policy Use of cookies Your privacy choices/Manage cookies
    Legal notice Accessibility statement Terms & Conditions Your US state privacy
    rights © 2024 Springer Nature Limited"'
  inline_citation: null
  journal: Scientific Reports
  limitations: null
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Empowering coffee farming using counterfactual recommendation based RNN driven
    IoT integrated soil quality command system
  verbatim_quote1: The RNN-IoT approach uses IoT sensors in the coffee plantation
    to collect real-time data on soil temperature, moisture, pH, nutrient levels,
    weather, CO2 levels, EC, TDS, and historical data.
  verbatim_quote2: Data transmission using a wireless cloud platform.
  verbatim_quote3: The utilization of the RNN-IoT methodology for soil health monitoring
    enhances both efficiency and accuracy in comparison to conventional soil monitoring
    methods.
- analysis: "This work provides a prototype of a water quality monitoring system that\
    \ can be deployed in rural areas, where access to the Internet and reliable power\
    \ sources may be limited. It utilizes the LoRaWAN network for data transmission,\
    \ which is characterized by long-range communication, low power consumption, and\
    \ low cost. The system integrates multiple sensors to measure water quality parameters\
    \ such as pH, TDS, turbidity, and temperature, and employs a solar cell with a\
    \ solar shield charger to ensure sustainable operation. The data collected is\
    \ transmitted through a LoRa node (alongside a LoRa shield) to a LoRaWAN gateway,\
    \ which is connected to the Internet via a Raspberry Pi 3 Model B+. The collected\
    \ data is then made accessible through a web-based dashboard (ThingSpeak) and\
    \ a smartphone-based interface (ThingView). \n\nThe proposed system was subjected\
    \ to real-world testing at Gambang Lake, Malaysia. The results were promising,\
    \ demonstrating the system's ability to accurately and reliably monitor water\
    \ quality parameters in real-time. The data obtained from the system was consistent\
    \ with the measurements obtained from laboratory instruments, validating the system's\
    \ performance. \n\nThis system addresses several limitations of existing water\
    \ quality monitoring systems, including portability, waterproofing, energy efficiency,\
    \ and cost-effectiveness. Its deployment in rural areas can contribute to improved\
    \ water quality management and public health by providing real-time data on water\
    \ quality and enabling timely interventions to address any detected issues. \n\
    \nOverall, this work makes a valuable contribution to the field of water quality\
    \ monitoring, particularly in resource-constrained settings. The proposed system\
    \ offers a practical and cost-effective solution for monitoring water quality\
    \ in rural areas, where access to reliable power sources and Internet connectivity\
    \ may be limited."
  authors:
  - Jabbar W.A.
  - Mei Ting T.
  - I. Hamidun M.F.
  - Che Kamarudin A.H.
  - Wu W.
  - Sultan J.
  - Alsewari A.R.A.
  - Ali M.A.H.
  citation_count: '0'
  description: This article delineates the design and deployment of an innovative
    real-time water quality monitoring system tailored for rural regions, focusing
    on monitoring the water resource quality parameters. We propose a solar-powered,
    waterproof, portable, and Internet of Things (IoT)-enabled solution that leverages
    Long Range Wide Area Network (LoRaWAN) technology. Central to this system is a
    sophisticated LoRa node outfitted with an array of sensors for capturing key water
    parameters, such as pH, total dissolved solids, turbidity and temperature. A conjunction
    of an Arduino microcontroller-based board and a LoRa shield facilitates real-time
    data capture and transmission to a LoRaWAN gateway. The acquired data is transmitted
    to The Things Network server, which is seamlessly integrated with a ThingSpeak
    web-based IoT server and ThingView mobile applications. We incorporate a solar
    cell with a solar shield to ensure sustainable energy provision for powering the
    entire system through a rechargeable battery. This allows users to access vital
    water quality information online simultaneously and continuously in real-time.
    As a testament to its robustness, the system was empirically tested at Gambang
    Lake to demonstrate its effectiveness, functionality, buoyancy, and waterproof
    capabilities. We further validated the results by comparing them with laboratory
    sample analysis findings. Experimental evaluations confirmed the system's reliability,
    as evidenced by the strong agreement between the water conditions measured using
    our solution and those obtained from laboratory instruments. Moreover, our system
    efficiently and remotely updated data across multiple IoT platforms using the
    LoRa radio interface over the LoRaWAN gateway.
  doi: 10.1016/j.eswa.2023.122862
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Graphical abstract Keywords 1. Introduction 2. Research contributions
    3. Background and related works 4. Methods and materials 5. System development
    and implementation 6. Experimental results and validation 7. Conclusion and future
    work CRediT authorship contribution statement Declaration of competing interest
    Data availability References Show full outline Figures (19) Show 13 more figures
    Tables (2) Table 1 Table 2 Expert Systems with Applications Volume 242, 15 May
    2024, 122862 Development of LoRaWAN-based IoT system for water quality monitoring
    in rural areas Author links open overlay panel Waheb A. Jabbar a, Tan Mei Ting
    b, M. Fikri I. Hamidun b, Ajwad H. Che Kamarudin b, Wenyan Wu a, Jamil Sultan
    c d, AbdulRahman A. Alsewari e, Mohammed A.H. Ali f Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.eswa.2023.122862 Get rights and content Under
    a Creative Commons license open access Abstract This article delineates the design
    and deployment of an innovative real-time water quality monitoring system tailored
    for rural regions, focusing on monitoring the water resource quality parameters.
    We propose a solar-powered, waterproof, portable, and Internet of Things (IoT)-enabled
    solution that leverages Long Range Wide Area Network (LoRaWAN) technology. Central
    to this system is a sophisticated LoRa node outfitted with an array of sensors
    for capturing key water parameters, such as pH, total dissolved solids, turbidity
    and temperature. A conjunction of an Arduino microcontroller-based board and a
    LoRa shield facilitates real-time data capture and transmission to a LoRaWAN gateway.
    The acquired data is transmitted to The Things Network server, which is seamlessly
    integrated with a ThingSpeak web-based IoT server and ThingView mobile applications.
    We incorporate a solar cell with a solar shield to ensure sustainable energy provision
    for powering the entire system through a rechargeable battery. This allows users
    to access vital water quality information online simultaneously and continuously
    in real-time. As a testament to its robustness, the system was empirically tested
    at Gambang Lake to demonstrate its effectiveness, functionality, buoyancy, and
    waterproof capabilities. We further validated the results by comparing them with
    laboratory sample analysis findings. Experimental evaluations confirmed the system''s
    reliability, as evidenced by the strong agreement between the water conditions
    measured using our solution and those obtained from laboratory instruments. Moreover,
    our system efficiently and remotely updated data across multiple IoT platforms
    using the LoRa radio interface over the LoRaWAN gateway. Graphical abstract Download
    : Download high-res image (105KB) Download : Download full-size image WQMS-LoRaWAN
    Previous article in issue Next article in issue Keywords LoRaLoRaWANRural AreasTTNThingSpeakWater
    Quality Monitoring 1. Introduction Clean water is an essential resource that is
    required for life sustainability, and the quality of drinking water plays a major
    role in the well-being and health of human beings (Cloete et al., 2016, Zhao et
    al., 2022). However, the water sources available in rural areas for taps at urban
    houses and water supplies are not always safe to drink. Currently, water quality
    degradation and pollution problems are ascribed to a variety of sources and cause
    resulting from urbanization, industry, and over-exploitation of natural resources
    (Osman et al., 2018). Although it is the responsibility of the water authorities
    to guarantee that clean water is supplied to its nations, the clean water supply
    is strained by ageing infrastructures that are inadequately maintained and continuing
    population growth (Boccadoro et al., 2022). Hence, the water quality must be constantly
    monitored, and immediate action can be taken to maintain water quality, especially
    in rural areas. Water quality may be characterized by its broad composition of
    water-based properties, which includes physical, chemical, and biological features
    (parameters) (Caeiro and Martins, 2021, Zhang and Thorburn, 2022). These characteristics
    are crucial for monitoring water quality because it is used in daily activities,
    such as drinking, bathing, cooking, and other human tasks, such as agriculture,
    industrial production, and animal breeding. The parameters of water quality include
    potential hydrogen (pH), total dissolved solids (TDS), electrical conductivity,
    oxidation–reduction potential (ORP), dissolved oxygen (DO), turbidity, and temperature
    (Ighalo et al., 2020). Water quality monitoring systems are crucial for detecting
    any changes in the aforementioned quality parameters in real-time to ensure their
    safety (Shirode et al., 2018). The Internet of Things (IoT) embodies a dynamic
    paradigm where interconnected devices, varying in communication capabilities,
    engage in the exchange and synchronization of data. This network, potentially
    asymmetrical in nature, facilitates the seamless transfer of information to IoT
    servers for comprehensive processing and analytics (Kuo et al., 2018, Perumal
    et al., 2015, Tolentino et al., 2021). IoT-based applications can automatically
    update the sensor data to the internet in a device-to-device manner without requiring
    human intervention (Faber et al., 2020). The network infrastructure, particularly
    in urban areas, is undergoing rapid evolution, thanks in part to advancements
    in smart city concepts and the Internet of Things. This evolution is characterized
    by the widespread adoption and integration of established communication standards,
    network protocols and communication technologies such as ZigBee, Low Power Wide
    Area Networks (LPWAN), Narrow Band Internet of Things (NB-IoT), Long Range (LoRa),
    Long Range Wide Area Network (LoRaWAN), and Sigfox. These technologies, already
    well-defined in the realm of IoT, facilitate varied and efficient connectivity
    solutions within modern urban environments (Chen and Han, 2018, Premsankar et
    al., 2020, Singh et al., 2020). Environmental monitoring, including water quality
    monitoring, is among the emerging applications of IoT. Water quality monitoring
    and conservation are key utility services that face several problems from the
    consumer standpoint (Olatinwo & Joubert, 2018). However, the remote sensing assessment
    of water quality suffers from limited spatial resolution, making it difficult
    to monitor the quality of freshwaters, such as rivers, channels, and ponds, in
    urban areas (Chen & Han, 2018). Wireless sensor monitoring of such critical parameters
    is still considered ineffective and not energy efficient because it does not always
    fulfil the reasonable needs of certain utilities. Although the existing wireless
    sensor networks (WSNs) are less expensive than older equipment, certain issues,
    such as reliability, connectivity, and energy constraints, persist (Abdelfadeel
    et al., 2019, Cloete et al., 2016). Meanwhile, information handling and management
    can be improved. LoRa is a well-known LPWAN technology that exploits a proprietary
    physical layer (Chirp Spread Spectrum), whereas the upper layers are defined by
    an opensource standard — LoRaWAN (Sherazi et al., 2020; Magrin et al., 2019, Mroue
    et al., 2020). LoRa networks have been proposed to connect massive numbers of
    devices in large areas, and they have attracted increasing attention from the
    industry and academia to realize IoT implementation (Błaśkiewicz et al., 2019,
    Reynders et al., 2018). LoRaWAN networks are preferred for high-density deployments
    with flexible restrictions of latency and reliability. After a comprehensive investigation,
    LoRa and LoRaWAN as its network counterpart were nominated as potential LPWAN
    candidates for smart sensing technology in environmental monitoring as well as
    in industrial applications (Afisiadis et al., 2019, Jabbar et al., 2022). Hence,
    LoRa/LoRaWAN composition is selected for water quality monitoring system trials
    considering several features such as bitrate, energy consumption, communication
    range, simplicity, unlicensed band, and ease of management owing to its star of
    stars'' topology (Ana et al., 2020; Beltramelli et al., 2020, Chaudhari et al.,
    2020). In this work, the LoRa-based sensor node as a physical layer and LoRaWAN-based
    Gateway as a MAC layer protocol will be utilised to build a cost-effective, energy-efficient,
    multi-sensor, star topology wireless network for measuring the physicochemical
    water quality parameters and facultative real-time monitoring. The developed system
    is known as the water quality monitoring system WQMS-LoRaWAN. Four selected sensors
    are utilised and connected to a LoRa shield radio interface that is plugged into
    an Arduino UNO microcontroller-based board to measure the pH, TDS, turbidity,
    and temperature. The selected sensors enable the internal monitoring of the considered
    quality parameters of water and send the measured values as a payload stream based
    on a preset interval to the gateway that uploads the data to The Things Network
    (TTN (over the Internet. The TTN is a proud contributing member of the LoRa Alliance
    and is dedicated to building the LoRaWAN-based IoT network, which allows devices
    to connect to the cloud without cellular or Wi-Fi connectivity. The sensing information
    can be accessed by the user’s terminal either via a web-based dashboard over the
    ThingSpeak platform or ThingView mobile apps using laptops, PCs, or smartphones.
    1.1. Motivations and problem statement Water quality supplied in rural areas is
    not always safe to use in daily activities. Accordingly, conventional water quality
    check methods were carried out to monitor the water quality. Such traditional
    methods focused on manually gathering the water samples and delivering them to
    the research facility for further testing and inspection are ineffective, not
    economical, and time-consuming. Traditional water quality methods involve manual
    water sample collection in various sites and sending analytical techniques to
    the research facility to assess the character of water quality. These solutions
    are time-consuming and not economical (Lap et al., 2023). Although existing methods
    examine the physical, chemical, and biological agents, they still have some drawbacks,
    such as limited space–time range, time consumption, and cost, which is worker,
    operation, and apparatus and insufficiency of real-time quality of water info
    to allow crucial health of the people choose to be made (Feisal et al., 2023).
    However, constant real-time tracking of the water quality is necessary. WSNs are
    widely used for remote sensing and monitoring various stimuli or measuring change
    phenomena. Sensors in WSNs might need considerable computational power and generate
    large amounts of information that is transmitted. In rural areas, water quality
    monitoring networks are expected to have restricted local computation and transmission
    capabilities because of the nature of communication infrastructure in such areas
    in addition to limitations of the sensor process capabilities and energy resources
    (Bhardwaj et al., 2022). The utilization of such technologies is a non-economic
    and inefficient choice compared with conventional methods. Remote sensing is only
    suitable for a limited area and is not used in large and rural areas due to its
    limited communication range, bandwidth, and throughput. Therefore, the utilization
    of the IoT network is a good solution to overcome the limitations of conventional
    WSNs. The IoT architecture supports a wide variety of applications and supplies
    the required services. Data transmission over the Internet provides better accessibility
    regardless of time and place. The IoT cloud-based servers allow users to receive
    data in real-time from various sensors that communicate with each other via wireless
    radio interfaces. Given the lack of communication infrastructure in rural areas,
    LoRa is a promising candidate to build a free, long-range, and low-power wireless
    network for environmental monitoring. Such networks make IoT-based applications
    convenient for sensing and object detection (Almuhaya et al., 2022). Several parameters
    need to be considered when designing IoT-based monitoring systems to fulfil the
    system specifications. These parameters include the cost of materials, energy
    sustainability, reliability of data transmission, time delay, network coverage,
    and sensor accuracy (Jabbar et al., 2022). 2. Research contributions The proposed
    LoRaWAN system attempts to tackle the aforementioned issues to efficiently measure
    and track the water quality parameters in rural areas. In this paper, we present
    several significant advancements in the field of water quality monitoring systems,
    specifically addressing the limitations of existing solutions through the design,
    fabrication, and implementation of a novel WQMS-LoRaWAN IoT system. Our portable,
    real-time water quality monitoring system is well-suited for use in rural areas,
    as it continuously measures key water parameters and wirelessly transmits the
    data via the internet, regardless of location or time constraints. The following
    highlights the key innovations and contributions of our work: (i) We have developed
    a state-of-the-art WQMS utilizing LoRa and LoRaWAN technology, overcoming the
    challenges posed by short-range communication systems. Our system comprises a
    smart node equipped with multiple sensors, connected to an Arduino UNO microcontroller-based
    board, which is further augmented with a LoRa shield for seamless wireless communication
    with the LoRaWAN gateway. This gateway connects to the TTN network via the internet,
    and the entire system is powered by an environmentally friendly renewable energy
    source (solar cell). (ii) Our portable, floating, and waterproof WQMS boasts a
    unique design that seamlessly integrates into rural environments, providing real-time
    water quality monitoring and facilitating the detection of changes in water parameters.
    This data is then transmitted to the IoT cloud for analysis. In this work, we
    present a novel LoRaWAN-based WQMS tailored for rural areas, which incorporates
    the following key features: (a) We designed and fabricated a compact, IoT-based
    solar-powered water monitoring system that leverages LoRaWAN technology, an Arduino
    microcontroller-based board equipped with a LoRa shield, and multiple sensors
    (pH, TDS, turbidity, and temperature) to assess various water quality parameters.
    This portable, waterproof system features an integrated solar cell for enhanced
    durability and usability. (b) We introduced a new algorithm, implemented using
    the Arduino Integrated Development Environment (IDE), to consolidate data from
    multiple sensors into a single packet with eight payloads. This packet is then
    periodically transmitted via a multi-channel LoRaWAN gateway to the TTN server.
    (c) We developed a user-friendly Graphical User Interface (GUI) on the ThingSpeak
    IoT platform, which is integrated with the TTN server. This allows for the simultaneous
    display of real-time data on a web-based dashboard and the ThingView mobile application,
    enabling users to monitor data on their devices (PCs and smartphones). (d) We
    deployed and evaluated our proposed WQMS-LoRaWAN system in a real-world rural
    setting, demonstrating its effectiveness and accuracy in comparison to laboratory
    instruments. The paper is structured as follows: Section II reviews the research
    background and related studies; Section III details the methods and materials
    employed; Section IV elaborates on the design, fabrication, and implementation
    of the WQMS system; Section V presents the system''s functionality testing and
    validation against laboratory results; and Section VI concludes the paper, offering
    suggestions for future work. 3. Background and related works Living The development
    of the economy and agriculture sectors keep increasing unceasingly causing pollution
    in the urban and rural areas. This causes certain areas especially rural facing
    the problem of lacking clean water for daily use, livestock watering, and for
    their crops. Water quality assessment is a real need in such areas to ensure the
    suitability and safety of the water source for diverse purposes for instance irrigation,
    drinking water supply, industrial cooling, and bathing. The water quality assessment
    can be classified into physical, chemical, and biological analyses. The parameters
    of these assessments deliver a whole picture of the water quality all these aspects
    need to be covered. Water Quality Indices is a very useful tool for professionalism
    to refer to. The Water Quality Indices provide a clear and complete picture of
    the water quality standards. These standards contain information about the water
    quality and the behaviour of the water resources. There are six classes of water
    based on its usage, namely: Class I, Class IIA, Class IIB, Class III, Class IV,
    and Class V. A water quality monitoring system is required to identify the different
    water classes. Different LAB instrumentations can be used to measure the parameters
    related to water quality such as pH, TDS, turbidity, Manganese, Ammonia-Nitrogen,
    temperature, and Nitrate-Nitrogen. IoT is a recent paradigm of communication technology,
    where all objects with communication interfaces, such as sensors, appliances,
    smartphones, tablets, and laptops, can connect with the Internet. The main intention
    of IoT is to form a global and smart world using a global network system; thus,
    it creates a sense for data collection from a huge number of devices/sensors/nodes
    worldwide and makes it available over the Internet. IoT applications enhance all
    areas of our daily lives and become more inspiring and pervasive in many emerging
    domains, including environmental monitoring, smart grid, smart city, home automation,
    smart agriculture, healthcare and medical aids, and industrial automation which
    is known as Industrial IoT (IIoT). IoT applications with massive sensors need
    efficient wireless technologies which provide a wide range, energy efficient,
    cost-effective with low-complexity end nodes (Short and Twiddle, 2019, Wang et
    al., 2019). Basically, it wirelessly connects battery-powered sensors; thus, the
    profile of power usage must be wisely designed to prolong the lifetime of batteries
    (Goundar et al., 2015, Schneider et al., 2018). The range of communication needs
    to be extended from short-range distances up to several kilometres since end nodes
    are disseminated throughout a wide operation area. By the consideration of all
    these requirements, a low-power wide-area network technology. LPWANs empower an
    increasing number of IoT applications in a wider geographical coverage, with a
    lower bitrate, and a longer lifetime. Thus, LPWANs gained popularity due to low
    power consumption and long-range and their multiple applications in the IoT applications.
    Driven by the growing variety of IoT applications and the shortage and limitations
    of existing wireless technologies in terms of scalability and communication range,
    new emerging LPWAN technologies have been developed. Existing LPWAN networks can
    be classified into three main categories depending on their requirements for supplementary
    infrastructure: (i) Cellular infrastructure (NB-IoT), (ii) Third-party infrastructure
    (Sigfox), and (iii) Stand-alone autonomous networks (LoRa and LoRaWAN). This section
    reviews existing studies on smart water quality monitoring systems, found by searching
    with keywords such as ''smart systems for water quality monitoring'' and ''Internet
    of things for water quality'' in two databases: Scopus and Web of Science (WoS).
    The search yielded 201 articles from WoS and 376 articles from Scopus. To refine
    the search, the keyword ''LoRa'' was included, resulting in 42 articles in Scopus
    and 9 articles in the WoS database. To further identify the most relevant articles,
    the keyword ''LoRaWAN'' was used, which produced 23 LoRaWAN articles in Scopus
    and 5 articles in WoS. After removing duplicates from the two databases, a total
    of 24 articles remained, focusing on IoT-based water quality monitoring systems
    using LoRaWAN technology. For the sake of brevity, the reviewed smart water quality
    monitoring studies have been summarized and compared in Table 1. Overall, many
    systems for water quality monitoring that utilise various communication technologies,
    parameter sensors, and microcontrollers have been proposed in the literature.
    Most of the reviewed systems have been tested or implemented in a real environment,
    and most of them were validated via simple prototypes in the laboratory without
    finished product fabrication or validation using laboratory instruments. In addition,
    none of these studies considered the development of both GUI for smartphones and
    Web-based dashboards, and most of them used one dashboard only. To the best of
    our knowledge, none of these studies are suitable for application in the real
    environment of rural areas that suffer from a lack of network coverage and require
    a standalone and cost-effective wireless network for real-time monitoring with
    a sustainable power source and maintenance-free system. Table 1. Comparison of
    Existing WQM Systems. WQM System Focus Criteria/Parameters Wireless Interface
    Controller LoRaWAN TTN GUI or Dashboard Real Implementation IoT-based Solar-Powerd
    Floating Waterproof pH TDS Turbidity Temperature Other parameters Validation Liu
    et al. (2018) ✓ ✓ ✓ ✓ LoRa Arduino Pro Mini ✓ ✓ ✓ Tolentino et al. (2020) ✓ ✓
    ✓ ✓ ✓ ✓ LoRa/LoRaWAN Packetduino ✓ ✓ ✓ ✓ Alset et al. (2020) ✓ ✓ ✓ ✓ LoRa Fathoni
    et al. (2020) ✓ ✓ ✓ LoRa Rx64M MCU ✓ ✓ JIAO and Xuan (2018) ✓ ✓ ✓ LoRa Arduino
    Mega ✓ ✓ Vijayakumar and Ramya (2015) ✓ ✓ ✓ ✓ Wi-Fi Raspberry Pi B+ ✓ ✓ ✓ Raut
    and Shelke (2016) ✓ ✓ ✓ ZigBee PIC ✓ ✓ Myint et al. (2017) ✓ ✓ ✓ ✓ ✓ ZigBee FPGA
    ✓ ✓ ✓ Saravanan et al. (2017) ✓ ✓ ✓ ✓ ✓ LoRa Arduino Nano ✓ ✓ ✓ Li et al. (2018)
    ✓ ✓ ✓ ✓ Wi-Fi Arduino Uno ✓ ✓ ✓ Prasad et al. (2015) ✓ ✓ ✓ ✓ GSM Waspmote ✓ ✓
    ✓ Das and Jain (2017) ✓ ✓ ✓ ✓ GSM/ ZigBee LPC 2148 ✓ ✓ ✓ Qin et al. (2018) ✓ ✓
    ✓ ✓ Wire FPGA ✓ Ngom et al. (2019) ✓ ✓ ✓ LoRa/LoRaWAN Arduino Mega ✓ ✓ ✓ ✓ Wu
    and Khan (2019) ✓ ✓ ✓ ✓ LoRa/LoRaWAN ATmega32U4 ✓ ✓ ✓ ✓ ✓ ✓ WQMS-LoRaWAN ✓ ✓ ✓
    ✓ ✓ ✓ LoRa/LoRaWAN Arduino Uno ✓ Both ✓ ✓ ✓ ✓ ✓ In the literature, many studies
    investigated the usage of IoT in water quality monitoring. In (Liu et al., 2018),
    the authors proposed an IoT water quality monitoring based on LoRaWAN. The system
    consists of an Arduino Pro Mini, sensors (temperature, turbidity, conductivity,
    and pH), a LoRa module, and a solar panel. The system updates the data to a cloud
    database over the gateway using MQTT. However, among the drawbacks of the proposed
    system was the lack of system validation using laboratory instruments and the
    utilization of a private dashboard for data monitoring which makes it limited
    for a specific use case. In (Tolentino et al., 2020, Tolentino et al., 2021),
    the authors proposed an IoT-based device to allow local fish farmers to monitor
    various water parameters including pH, water level, temperature, dissolved oxygen,
    TDS, oxidation–reduction Potential, and turbidity using a smartphone. It also
    used different actuators to control fish-related activities like aerators, water
    filters, peristaltic pumps, water pumps, fish feeders, and heaters. The developed
    device used Packetduino as a microcontroller with a LoRa interface for data transmission
    to the Internet. However, system complexity, size, cost, and weight are among
    their drawbacks that need to be optimized according to the authors. In addition,
    the system needs to be powered using the main power source which might not be
    available in rural areas. In (Alset et al., 2020), the authors compared the performance
    of LoRa nodes under different frequencies (433 MHz, 865 MHz, and 915 MHz) based
    on the signal strength and the required energy using MATLAB. The study focused
    more on LoRa interface behaviour during the transmission of water quality-related
    information for example temperature, turbidity, pH, and GPS coordinates. The study
    simulated and analysed the LoRa node performance at different frequencies based
    on various spreading factors. Nevertheless, no real system development or prototype
    was carried out to monitor water quality. In addition, the study depends on the
    existing dataset rather than experimental sensor measurements. Ref. (Fathoni et
    al., 2020) implemented water quality monitoring using Rx64M MCU, pH, DO conductivity,
    and temperature sensors. The system uses LoRa to broadcast data over MQTT to the
    Grafana visualization platform. However, the system has limitations in terms of
    portability, waterproofing, and energy efficiency since it is battery-powered
    without any sustainable power source. Therefore, it is not suitable to be implemented
    in remote areas. The system prototype was tested in the LAB and it was not implemented
    in a real environment and no practical measurements were conducted for validation.
    Another study (Jiao & Luo, 2018) proposed a water quality monitoring system using
    Arduino Mega2560, LoRa shield with turbidity, pH, and temperature sensors. The
    acquired data by the sensors are updated on the JAVA-based website. Three sensors
    are used to check the uploaded information to the database. The study focused
    more on database design software development instead of system hardware implementation
    and validation. Ref. (Ngom et al., 2019) proposed a LoRa-based acquisition node
    that gathers information using Arduino Mega 2560 and four sensors (pH, electrical
    conductivity, oxidation/reduction potential, and temperature), then updates to
    the Global Visualization via a gateway. The system is powered using a fixed and
    separated solar panel and it was tested at the Botanical Garden pool in the faculty.
    However, the system lacks some features such as portability, floating, and the
    validation of the results. Ref. (Wu & Khan, 2019) developed a mobile monitoring
    system for water quality using USV, ATmega32U4 microcontroller, and Microchip
    RN2903 LoRa technology for Lake Dardanelle. Four sensors are used to collect data
    including pH, turbidity, DO, and temperature sensors. The gathered information
    is uploaded to the TTN and then to the MySQL database for further analysis. However,
    the usage of USV to carry the system increased system cost and complexity. Also,
    communication link stability and data transmission reliability are difficult to
    achieve with a mobile node. Vijayakumar & Ramya (2015) presented the design and
    development of a cost-effective, real-time water quality monitoring system using
    IoT technology. The system employs various sensors to measure the physical and
    chemical parameters of water, including temperature, pH, turbidity, conductivity,
    and dissolved oxygen. A Raspberry Pi B + model serves as the core controller to
    process the data collected from the sensors. The sensor data can then be accessed
    and viewed online through cloud computing, ensuring the safety of drinking water
    by continuously monitoring its quality. The Wi-Fi has a limited range, and no
    system prototype was developed or tested. In (Raut & Shelke, 2016), the authors
    presented a wireless acquisition system for water quality monitoring, aiming to
    overcome the limitations of traditional wired monitoring systems, such as high
    cost, installation complexity, and maintenance challenges. The wireless acquisition
    system consists of three main components: sensing nodes, a wireless transmission
    module, and a central control unit. Sensing nodes are equipped with various sensors
    to measure water quality parameters, such as temperature, pH, dissolved oxygen,
    and turbidity. These nodes are responsible for collecting and processing data,
    which is then transmitted wirelessly to the central control unit using a ZigBee
    module. Similarly, a reconfigurable smart water quality monitoring system for
    the IoT environment was introduced by Myint et al., (2017). The system is composed
    of three main components: IoT-based water quality sensors, a wireless communication
    module, and a cloud-based data processing and storage platform. The data collected
    by these sensors is wirelessly transmitted to the cloud-based platform over the
    ZigBee module which is a short-range communication technology. In (Saravanan et
    al., 2017), a smart water grid management system utilising LPWAN-IoT technology
    is presented. The system consists of IoT-based sensors, LPWAN communication modules,
    and a centralized data processing platform. IoT sensors are employed to collect
    real-time data on various water parameters, such as flow rates, pressure, and
    water quality. The collected data is transmitted using LPWAN technology, which
    offers long-range communication, low power consumption, and the ability to connect
    numerous devices. The study lacks real-world testing and case studies to validate
    the effectiveness of the proposed system. Another Wi-Fi-based system consisting
    of WSN-based sensors, and a central data processing unit was presented by Li et
    al., (2018). The sensors are responsible for collecting real-time data on water
    quality parameters, such as temperature, pH, dissolved oxygen, and turbidity.
    Although the study provides valuable insight into the potential benefits of using
    WSN technology for water quality monitoring, no real-world testing was conducted.
    A GSM-based water quality monitoring system for measuring various water quality
    parameters, such as temperature, pH, dissolved oxygen, and turbidity was introduced
    (Prasad et al., 2015). However, the study lacks a detailed examination of power
    consumption and strategies for optimizing energy efficiency within the system.
    Authors Das & Jain (2017) presented a detailed description of an IoT-based water
    quality monitoring system using ZigBee and GSM that can provide real-time data
    to ensure the safety and purity of water resources. However, some potential limitations
    should be considered. For example, the system was evaluated in a laboratory and
    a relatively small field test, so it is unclear how well it would perform in larger-scale
    implementations. Qin et al. (2018) discussed a unified water quality monitoring
    system that employs pH, free chlorine, and temperature sensors using FPGA and
    a wired network. The sensor configuration is dependable, cost-effective, and has
    fast response times, making it a valuable tool for constant monitoring of water
    quality aspects. However, the article could have discussed the potential challenges
    and limitations of the system, such as calibration and maintenance requirements,
    sensor life span, and the possible impact of external factors on sensor performance.
    Miao et al. (2022) described the creation of a monitoring system for monitoring
    air and water quality on a university campus. This system utilises LoRaWAN technology
    to collect and transmit data from various sensors that track temperature, humidity,
    PM2.5, and water quality. The authors note the system''s cost-effectiveness and
    potential for growth. However, the article lacks detailed information on the accuracy
    and reliability of the collected data, as well as any information on how the data
    is being used or shared. Additionally, the authors do not address any potential
    ethical or privacy concerns associated with monitoring individuals'' activities
    and behaviours on a university campus. In (Alobaidy et al., 2022), an Airborne
    IoT Network (LAP-AIN) based on low-altitude platforms for monitoring water quality
    in difficult tropical climates is introduced. By employing affordable solar-powered
    drones fitted with IoT sensors, the authors aimed to address the issues faced
    by conventional water quality monitoring techniques. The paper delves into the
    system''s structure, network planning, and simulation outcomes to showcase the
    efficiency and dependability of LAP-AIN. However, the study could benefit from
    a more in-depth analysis of the potential limitations and challenges of implementing
    the system in real-world scenarios, such as regulatory constraints, maintenance
    requirements, and the impact of extreme weather conditions on drone performance.
    Ref. (Jáquez et al., 2023) focused on improving the LoRa communication system
    and incorporating an unsupervised anomaly detection algorithm in an IoT-based
    water quality monitoring system. The researchers suggest extending LoRa coverage
    using a mix of terrestrial and satellite communication, providing improved reliability
    and accessibility for distant regions. The study effectively shows real-time water
    quality tracking and early anomaly detection. Nevertheless, the authors could
    have explored the scalability of their proposed system, as well as the potential
    challenges that may arise in the deployment of such systems in rural areas. Lastly,
    an examination of the system''s energy consumption and maintenance requirements
    would have provided a more comprehensive understanding of the system''s long-term
    feasibility. Incorporating insights from related works enhances our understanding
    of LoRa-based water quality monitoring systems. Notably, the study by Li et al.
    (2017) presents an innovative approach to water meter reading using LoRa communication
    technology. This research demonstrates the application of LoRa in a multi-level
    relay and concentrator structure for effective and efficient water meter reading
    in urban environments. Their system, featuring ultra-low power consumption and
    long-range wireless communication, offers valuable lessons for our WQMS-LoRaWAN
    system, particularly in terms of network design and energy efficiency. This reference
    underscores the growing relevance of LoRa technology in diverse urban and rural
    applications, reinforcing the potential of our proposed system to extend beyond
    its current rural-focused application. The study''s emphasis on achieving a balance
    between transmission efficiency and power consumption resonates with our system
    design considerations, particularly in ensuring sustainable and continuous operation
    in varied environmental conditions. A study by Ragnoli et al. (2020) demonstrates
    an application of LoRa technology in environmental monitoring. This research provides
    a comprehensive model for a flood-monitoring system utilizing a customized electronic
    board, emphasizing the system''s low power consumption and extensive coverage,
    attributes that are crucial for remote monitoring applications. The system''s
    modularity and adaptability to various sensor types are notable, illustrating
    the potential of LoRa technology in diverse environmental scenarios beyond flood
    detection. This inclusion not only enriches our literature review but also aligns
    with our study''s focus on harnessing IoT and LoRaWAN for real-time water quality
    monitoring in rural areas. The research underscores the importance of energy efficiency
    and the versatility of IoT devices in LPWANs, offering valuable insights and parallels
    to our own work in developing an efficient, adaptable, and sustainable water quality
    monitoring system. Zakaria et al. (2023) introduce an innovative flood monitoring
    and warning system (FMWS) utilizing LoRaWAN technology. This system is specifically
    designed to maintain extensive network connectivity, consume minimal power, and
    utilize low data transmission rates, thereby offering a cost-effective and user-friendly
    solution for real-time flood level monitoring and risk assessment. It employs
    an HC-SR04 ultrasonic sensor integrated with an Arduino microcontroller to measure
    flood levels and assess risk statuses, which are updated on The Things Network
    and integrated into TagoIO and ThingSpeak IoT platforms through a custom-built
    LoRaWAN gateway. The system''s solar-powered, standalone design ensures sustainability
    and continuous operation, making it an effective tool for early flood warnings
    and real-time updates to authorities and residents via mobile applications and
    web-based dashboards. This study not only demonstrates the system''s practical
    implementation and effectiveness but also evaluates the performance of the LoRa/LoRaWAN
    communication interface in various aspects such as signal strength and packet
    delivery, offering insights into the system''s adaptability and scalability for
    broader applications in environmental monitoring. The proposed system tackles
    multiple issues in the existing systems that were developed in the literature.
    The novelty of WQMS-LoRaWAN is from the consideration of several criteria in its
    design and fabrication. The system is compact, portable, lightweight, waterproof,
    expandable, cost-effective, and floatable. The system has benefited and combined
    the advantages of the existing systems into an all-in-one unique system. Firstly,
    the integration of multiple sensors in a single microcontroller (Arduino UNO)
    will be a good option for building cost-effective multi-sensor smart nodes with
    the ability to be extended by including more sensors to monitor other water quality
    parameters. Such a combination reduces the overall cost of the system compared
    to the market-available wireless sensors. Secondly, the usage of a license-free
    frequency spectrum transmission network (LoRa nodes), with low power and wide
    coverage network (LoRaWAN) will be privileged over the existing systems that utilise
    short-range communication technologies (ZigBee, Bluetooth, Wi-Fi) or commercial
    networks (GSM, 3G, 4G, NB-IoT, SigFox). Thirdly, the development of the new data
    acquisition algorithm based on IDE and the GUI based on open-source IoT platforms
    and servers (TTN, ThingSpeak, ThingView) will improve the public experience in
    rural areas to access data easily in real-time via public/private channels using
    their Internet-connected devices. Fourthly, the utilization of a solar cell with
    an Arduino-based solar shield charger will guarantee the sustainable operation
    of the proposed system in remote rural areas with lower energy constraints and
    less human intervention. Ultimately, the WQMS-LoRaWAN system''s real-world test
    at Gambang Lake demonstrated its floating capability, waterproof features, portability,
    and compact design. This field validation not only confirmed its effectiveness
    but also showcased its advantages over laboratory instruments, enhancing its usability
    and broader applicability. 4. Methods and materials This section provides an overview
    of the techniques and materials utilised in this study, as well as a description
    of the stages and processes followed to develop and implement the LoRaWAN-based
    water quality monitoring system. The method for choosing research materials is
    also outlined. The methodology flowchart can be found in Fig. 1. Our research
    commenced with an examination of the limitations of existing WQMS systems, followed
    by identifying research gaps. In the modelling phase, our focus is on system architecture
    and layout, component selection, and tool investigation for constructing the system
    prototype and developing the WQMS-LoRaWAN system. The system’s enclosure design
    is created using NX Siemens software, and a 3D-printed prototype is produced from
    ABS plastic. The WQM system''s design and implementation, utilizing LoRa technology,
    are carried out. Connections between various sensors in the WQM prototype and
    the attached LoRa system (including sensing node, gateway, power source, and IoT
    cloud) are set up and tested. Once the hardware installation and implementation
    are completed, software development and GUI design are executed to accomplish
    the necessary tasks. Then, the design is rechecked to verify the system''s functionality
    and identify whether any problem exists. The system returns to the previous phase,
    which is enhancement and optimization when any problem is found. The WQMS-LoRaWAN
    system is considered complete when it demonstrates strong performance and passes
    functionality testing. Practical implementation and performance assessment of
    the WQMS-LoRaWAN system are executed to confirm its effectiveness. Download :
    Download high-res image (419KB) Download : Download full-size image Fig. 1. Flowchart
    of research activities. 4.1. Components selection The required research components
    to build and fabricate the proposed system were selected after conducting a market
    survey on the available materials and prices. Several criteria were considered
    during component selection, including size, cost, operating conditions, applicability,
    and reliability. For example, we surveyed the available water parameter sensors
    included in the WQM system in the local market to compare the specifications and
    prices. The total cost of the proposed system including the cost of materials
    and fabrication service is around 240 USD. The following hardware and software
    components were selected. The hardware components include Arduino Uno Rev3 (Arduino,
    2023), Cytron 915 MHz Lora RFM shield (Cytron, 2021), 915 MHz LoRa Gateway Raspberry
    Pi Hat (Cytron, 2022), Raspberry Pi 3 Model B+ (Pi, 2020), Temperature (DS18b20)
    sensor, pH (E-201-C) sensor, Turbidity (SEN 0189) sensor, Gravity: Analog TDS
    sensor (SKU SEN0244), Solar charger shield v2.2 (Seeedstudio, 2021), LiPo rechargeable
    battery 9 V 5200 mAh, 2020 PCB connector housing 2 ways (Cytron, 2020), and SC10050
    Arduino compatible 5.0 V 100 mA solar cell. The software components include Nx
    Siemens software, Fritzing software, Arduino IDE software, The Thing Network,
    ThingSpeak Cloud, and ThingView. After the components selection process, we designed,
    fabricated, and implemented the WQMS-LoRaWAN system for water quality monitoring
    in rural areas. The selection of electronic components for the WQMS-LoRaWAN system
    was guided by several key criteria: cost-effectiveness, availability, ease of
    integration, and the need for modularity and adaptability in various rural water
    monitoring scenarios. We chose off-the-shelf elements for several reasons: Cost-Effectiveness
    and Accessibility: Using readily available components ensures that the overall
    cost of the system remains within a reasonable range. This is particularly important
    for potential replication and scaling in rural areas where resources may be limited.
    Ease of Integration and Adaptability: Off-the-shelf components allow for greater
    flexibility in modifying or upgrading the system. As the water quality monitoring
    needs may vary across different rural regions, the ability to easily replace or
    add components is beneficial. Reliability and Community Accessibility: Using standard,
    well-tested components ensures reliability and also makes it easier for local
    technicians to understand, repair, or modify the system, fostering community engagement
    and local capacity building. Regarding the implementation on a custom board, while
    it is true that a custom-designed board could potentially lead to a more compact
    and energy-efficient design, there are trade-offs to consider: Development Time
    and Cost: Designing and testing a custom board requires significant investment
    in terms of time and resources. For the initial phase of our project, our priority
    was to establish a functioning prototype that could be deployed and tested in
    real-world conditions rapidly. Flexibility and Scalability: Custom boards, while
    efficient, can be less flexible in terms of making quick modifications based on
    field feedback or integrating new sensors. Maintenance and Repair: In rural settings,
    the ease of maintenance and repair is crucial. Off-the-shelf components are more
    accessible and easier to replace or repair by local technicians who may not have
    specialized skills in custom electronics. 4.2. System architecture The overall
    system architecture of WQMS-LoRaWAN is illustrated in Fig. 2. Sensors are placed
    in the under-monitoring water source, such as a lake or a river. The pH sensor
    is utilised to define the acidity and alkalinity in the water. Meanwhile, the
    turbidity sensor is employed to detect the cloudiness of the water bodies. The
    DS18b20 sensor is utilised to identify the water temperature, while the TDS sensor
    is used to determine the salt concentration in the water. The four sensors measure
    the water quality parameters and transfer the information to the multi-sensor
    smart node, which consists of an Arduino Uno microcontroller-based board and LoRa
    shield. The microcontroller was used to gather data from different sensors and
    periodically send them as a payload stream over the 915 MHz Cytron LoRa radio
    to the LoRaWAN gateway. Download : Download high-res image (207KB) Download :
    Download full-size image Fig. 2. Overall system architecture. LoRa is the radio
    protocol, while LoRaWAN is the network protocol. LoRaWAN is a star topology network.
    This network uses sub-GHz frequency to communicate, which is regulated by each
    country’s regulatory body. The frequency range in Malaysia is from 919 MHz to
    923 MHz. The information will be transmitted by the LoRa gateway to the cloud,
    which is TTN, ThingSpeak, and ThingView application. The monocrystalline solar
    cell was placed on top of the smart node to harvest sunlight and generate the
    required electricity to supply the power for the sensors, microcontroller, and
    LoRa shield. The Solar Charger Shield v2.2 is an essential component of our WQMS-LoRaWAN
    system that was attached to the Arduino UNO R3. It functions as an interface between
    the solar panel and the system''s microcontroller, enabling efficient charging
    of the system''s battery using solar energy. This shield is specifically designed
    to manage the energy harvested from the solar cell, ensuring that the battery
    is charged safely and efficiently during daylight hours. Additionally, it regulates
    the power supply to the system''s components, contributing to the overall energy
    efficiency and sustainability of the WQMS-LoRaWAN. The inclusion of the Solar
    Charger Shield v2.2 is pivotal for ensuring that our system remains operational
    in rural areas, where access to conventional power sources might be limited. This
    choice aligns with our goal of developing a self-sustaining, environmentally friendly
    monitoring system suitable for remote applications. Energy efficiency is one of
    the key features of LPWAN to meet IoT application needs. Hence, the energy consumption
    of the sensing node is one of our system design considerations. Energy efficiency
    is a key player for extending the system''s lifetime. This criterion is well addressed
    by LoRa nodes that can run with the least maintenance and last for a long (up
    to 10 years). The energy consumption of LoRa nodes includes two types, (i) the
    consumed energy by the node’s controller that depends on the selected host board,
    and (ii) the wireless transmission energy that relates to LoRa shield and node
    activities. Although LoRaWAN technology has lower energy consumption compared
    to other wireless technologies, energy-saving is among the key considerations
    to enhance its performance. Class A LoRaWAN devices are the furthermost energy-efficient
    compared to other classes. Hence, we have selected Class A LoRaWAN in our system
    to improve the energy efficiency of wirelessly data transmission. Moreover, we
    have utilised renewable green energy resources with a rechargeable battery for
    the sustainable operation of our system regardless of the consumed energy by the
    microcontroller and sensors. The prototype employs a LiPo rechargeable battery,
    known for its efficiency and compact size. The battery is strategically placed
    within the enclosure to minimize direct exposure to sunlight, thereby reducing
    the potential for heat-induced degradation. The system’s enclosure, designed using
    PLA material, provides a protective barrier against direct sunlight. This design
    consideration helps in shielding the battery from excessive heat, which is crucial
    for maintaining its integrity and prolonging its life. During the deployment at
    Gambang Lake, we carefully observed the battery''s performance under natural sunlight
    conditions. This real-world testing is crucial in evaluating the battery''s resilience
    and in making necessary adjustments for future iterations. As soon as the gateway
    collects the data from the smart nodes, the data payloads will be transmitted
    to the IoT cloud, which is the TTN server. The TTN is integrated with the ThingSpeak
    IoT platform and ThingView mobile apps. The water quality information will be
    available either on web-based or mobile-based dashboards, and the users can easily
    access the water quality parameters by using their Internet-connected devices.
    The system runs depending on the developed coding and algorithm in the Arduino.
    The time interval for data gathering from sensors, packet size, data encoding,
    and decoding in addition to the LoRa configuration parameters are set using the
    Arduino IDE open-source platform. This system can be extended by adding more sensors
    and even actuators in real applications. The system''s operational procedure is
    depicted in Fig. 3. Download : Download high-res image (277KB) Download : Download
    full-size image Fig. 3. Flow Chart of WQMS working. 4.3. System design Siemens
    NX10 software was used in this project to design the WQMS-LoRaWAN enclosure. Before
    designing the prototype, a few criteria were considered. The design is in 3D because
    the system needs to be fabricated using a 3D printer to meet the criteria. The
    prototype design consists of multiple generations. The design is divided into
    two sections, namely, the lower and upper body parts. The system is designed on
    the basis of the criteria of being floatable, waterproof, and able to withstand
    sunlight. These requirements must be satisfied because we need to place the prototype
    in the lake and ensure that it will not drown. The design is straightforward and
    more practical with suitable dimensions. TWO main designs were proposed. The first
    design as illustrated in Fig. 4 (a) consists of microcontroller board holders
    which then were not suitable for our prototype since we need the prototype to
    be compact and practical which means space is very limited. The lower body part
    in the first design also was unsuitable since the prototype needed to float instead
    of submerged in water. In addition, it will be difficult to place the solar panel
    on the upside. Therefore, the round shape of the lower body part may affect the
    buoyancy of the prototype, thus it is changed to flat in the next design to make
    sure it floats. The second design is very straightforward and more practical as
    shown in Fig. 4 (b). The dimension of the second design was a little bit bigger
    than the first design to be more practical and potentially add attraction to our
    prototype. Consequently, our prototype is more practical and appealing. The upper
    body part is used to cover the sensor module and store the Arduino and LoRa shield.
    Download : Download high-res image (83KB) Download : Download full-size image
    Fig. 4. System design using NX10 software. 4.4. System fabrication and verification
    The proposed system design is finalized and then it is fabricated. The fabrication
    process included 3D printing, drilling, surface finishing, and wiring connection.
    The 3D printing method is used in this project because it helps reduce material
    waste, minimizing errors, and producing lightweight parts. 3D printing can also
    be used to produce complex shapes, such as circular or spherical designs. The
    prototype’s materials were then listed before they were finalized on the basis
    of their characteristics, which comprised polylactic acid (PLA) and acrylonitrile
    butadiene styrene (ABS). The former is then selected as the prototype material.
    The main reason was that the PLA could be used to create dimensionally accurate
    parts. We also chose PLA over ABS because it is stronger, has greater strength,
    is stiffer, and is cheaper. After the 3D printing, we begin drilling to create
    a hole in the materials for bolts and nuts to secure the components inside the
    system enclosure. The drill used was a step drill to avoid any failure during
    the drilling. Surface finishing is necessary because the surface finish of the
    printed product is below a decent state. Accordingly, sandpaper is used to give
    the product a good and smooth surface finish. The final fabricated system enclosure
    (Fig. 5). Download : Download high-res image (106KB) Download : Download full-size
    image Fig. 5. 3D Printed product. The concern about how our prototype''s enclosure
    handles high temperatures, particularly during sunny conditions, is an important
    consideration for the long-term reliability of our WQMS-LoRaWAN system. It is
    crucial to note that the current design is a prototype, not the final product,
    and is part of an ongoing development process. Considering that our prototype
    is strategically positioned on the water surface, it benefits from the moderating
    temperature effects of the surrounding water, mitigating the impact of high ambient
    temperatures typically experienced during sunny days. This phase also covers the
    wiring and installation of the system hardware components. Arduino Uno is a microcontroller
    board based on the ATmega328. Arduino is an open-source platform that is used
    as the main microcontroller and can be powered via a USB cable to a computer or
    powered with an AC-to-DC adapter or battery to get started. It contains a physical
    circuit board that can be programmed using the Arduino IDE to write and upload
    sketches to the physical board. The Arduino Uno can be connected to digital and
    analogue sensors. Cytron 915 MHz Lora RFM Shield is attached to the Arduino Uno
    to enable the wireless communication of the smart node. A solar charger shield
    v2.2 is also attached on top of the LoRa shield to interface between the solar
    panel and the microcontroller. Accordingly, Arduino Uno with LoRa and solar charger
    shield represent the main part of the multi-sensor smart node. Before the combination
    of all sensors within the smart node sensing unit, we tested each sensor in the
    laboratory. The calibration process of sensors with different samples of water
    and coding development for each sensor are performed to confirm the functionality
    and accuracy of all sensors as shown in Fig. 6. Download : Download high-res image
    (536KB) Download : Download full-size image Fig. 6. Individual sensor testing
    and calibration. Four sensors are utilised in this study for different parameter
    measurements. The turbidity sensor measures the water''s darkness. Turbidity specifies
    the degree to which the water misses its transparency. This metric is a key indicator
    of water quality. Turbidity blocks out the light needed by submerged aquatic vegetation.
    This parameter can also increase the surface water temperatures above the normal
    level since suspended particles near the surface help the absorption of sunlight
    heat. The sensor’s outputs are in the nephelometric turbidity unit (NTU). Our
    system uses a DS18B20 temperature sensor due to several merits including waterproof,
    cost-effective, long-standing stability, efficient quality, rapid response, robust
    anti-interference ability, long-range signal transmission, digital output, multi-measurements
    for relative humidity and temperature, and accurate calibration. This temperature
    sensor is used to detect the water temperature. The aforementioned device accurately
    measures the temperature because of its digital output. The temperature of the
    DS18B20 sensor ranges from −55 °C to +125 °C. In our study, a pH sensor is utilised
    to detect the pH value, which is the most critical parameter of water quality.
    This metric indicates the alkalinity or acidity of a sample. The pH sensor scale
    is a logarithmic scale with a 0–14 range, and a neutral point being seven. Values
    higher than seven indicate a basic or alkaline solution. Meanwhile, values lower
    than seven would indicate an acidic solution. The probe must be cleaned with distilled
    water before performing multiple water quality tests because it is sensitive.
    The TDS sensor indicates how many milligrams of soluble solids are dissolved in
    1 L of water. As the TDS value becomes higher, it increases the soluble solids
    dissolved in water and decreases the water''s cleanness. The TDS sensor kit is
    compatible with Arduino, has a reasonable price, and is easy to use. The excitation
    source is an AC signal that can efficiently avoid the polarization of the probe
    and extend the probe’s life while also increasing the stability of the output
    signal. The TDS probe is waterproof and may be immersed in water for extended
    time measurement. The output reading of this sensor is in parts per million (PPM).
    At the beginning of the experiment, we tested each of the capabilities and durability
    of the sensor by making a calibration. The calibration is the most important step
    before starting the project to ensure that the sensor is working well and waterproof.
    At the first calibration test, we managed to study the turbidity (SEN0189) sensor
    output, that is, brightness calibration. We connect the sensor to the analogue
    input (A0). The serial monitor is used in this step of project development. Then,
    we calibrated the DS18B20 temperature sensor where we applied the same steps.
    However, the connection of the temperature sensor is somewhat different because
    it connects to the digital input (D8) and includes a 4.7 kΩ resistor. The DS18B20
    is tested in hot and cold water. We have also calibrated the TDS sensor (SKU SEN0244)
    by connecting to (A1) to Arduino input to measure the cleanness of the water by
    ppm unit. The final calibration sensor in our project is the pH (E_201_C) sensor,
    which is connected to the (A2) Arduino analogue input to measure the alkalinity
    or acidity of a sample. After the individual testing of sensors, a complete combination
    of circuit and coding is applied. We simultaneously measured the different water
    quality conditions by using a multi-sensor smart LoRa node. These tests are conducted
    locally without data transmission to the LoRaWAN gateway. Communication between
    the smart node in our project and the IoT is established via Cytron 915 MHz LoRa
    RFM shield, which allows data to be wirelessly transmitted over a long distance
    at low data rates (<50 kbps). This LoRa shield enables ultra-long range spread
    spectral communication with high immunity for interference while minimal current
    and targets various IoT applications, such as smart agriculture, smart homes,
    smart cities, and building automation. The RFM LoRa shield can achieve a sensitivity
    of over 148 dBm using the LoRa TM modulation technique and a low-cost crystal
    and bill of materials. The higher sensitivity supported with the integrated +20
    dBm power amplifier produces an industrial-competitive link budget that makes
    it ideal for any applications requiring range or robustness. LoRa also outperforms
    modulation methods in terms of blocking and selectivity, for achieving an acceptable
    trade-off among range, interference immunity, and energy consumption. The RFM
    LoRa shield provides exceptional linearity of the receiver and Input Third Order
    Intercept Point. It also allows outstanding phase noise and selectivity for noticeably
    lower currents. It supports high-performance (G) FSK modes for systems, such as
    WMBus and IEEE802.15.4 g. The LoRa shield allows extra shields that are compatible
    with Arduino to be attached on top of it via a stackable side header. This shield
    also includes built-in connectors for grove sensors that enable the integration
    of grove sensors for various applications. Users can also integrate OLED with
    this shield. LoRa operates in various region-based frequencies. The LoRa network
    is linked in star regional anatomy stars where the end nodes are connected via
    one hop to the gateways within the LoRa communication range. The utilised LoRa
    radio shield does not contain the LoRaWAN protocol; thus, we have integrated the
    LoRaWAN stack into the Arduino board. The LoRaWAN gateway functions as a relay
    and transfers the packets to the TTN server as the LoRaWAN network server (TTN).
    The LoRaWAN gateway in this project is built from Raspberry Pi 3 Model B + with
    a 915 MHz LoRa Gateway Raspberry Pi Hat by Cytron. The gateway HAT is based on
    RHF0M301-920 MHz, and it is a ten LoRaWAN concentrator module channel (8 × multi-SF
    + 1 × standard LoRa + 1 × FSK) with a 915 MHz antenna. This gateway kit was designed
    and developed to stack on Raspberry Pi 3, which is programmed to connect to the
    TTN LoRaWAN network server and collect and transfer data among all smart LoRa
    nodes. The choice of the LoRaWAN gateway, was driven by several factors: Coverage
    and Range: The gateway was selected for its proven effectiveness in covering the
    required range, which was essential for the rural deployment scenario at Gambang
    Lake. Compatibility with LoRaWAN: This particular model ensured seamless integration
    with the LoRaWAN network protocols, crucial for the reliability of data transmission
    to the TTN server. Installation Point Decision: The gateway was strategically
    installed on our campus, approximately 2 km from the test site (Gambang Lake).
    Accessibility and Security: The campus provided a secure and accessible location
    for monitoring and maintaining the gateway. We can build our IoT system to observe
    the water quality in real-time by connecting the smart node with the LoRa shield
    to the gateway. Both the LoRa shield and LoRaWAN hat that we used in the proposed
    system are displayed in Fig. 7. Download : Download high-res image (162KB) Download
    : Download full-size image Fig. 7. (a) LoRa shield, (b) LoRa Gateway Hat. The
    received sensor readings by the gateway will be sent in real-time to the LoRaWAN
    server, TTN. TTN is an open-source and free IoT server that utilises the data
    from the LoRa sensor nodes. This server allows you to freely connect many LoRaWAN
    gateways and LoRa devices. The TTN is a powerful global platform for LoRaWAN applications
    with low complexity and efficient capabilities. Moreover, this server delivers
    a set of open tools and open network standards for developing the next IoT applications
    at a lower cost, higher security levels and maximum scalability. A secure and
    collaborative IoT network is built using robust end-to-end encryption that covers
    many countries across the world. In this study, the TTN LoRaWAN server is used
    to collect data from our system gateway through the internet. We have defined
    our gateway under the gateways of the TTN network and added our applications with
    smart devices. Each device should have its ID with multiple keys to ensure data
    security. These keys need to be included when building the smart nodes using the
    Arduino IDE. In our case, we have defined two sensor nodes, one for prototyping
    and testing and the other for the final product. Many verification steps were
    carried out during this phase to ensure the data flow from sensors to the TTN
    over the LoRa/LoRaWAN network. The sensing data, which include the encoded sensor
    measurements, are uploaded to the server as payload packets from the LoRa node.
    The data is instantaneously demonstrated on the TTN platform as encoded hexadecimal
    values. A new payload decoder was created at TTN based on the encoding procedure
    of data using the Arduino IDE at the sensor node. Accordingly, the TTN can receive
    and decode the uplink data which can be traced easily to monitor the considered
    water quality measurements. We have selected ThingSpeak among several available
    integrations in the TTN to build a user-friendly interface. ThingSpeak is an open-source
    IoT platform for storing and retrieving data from smart devices by utilizing MQTT
    and HTTP internet protocols. It enables the application''s creation for data logging,
    location tracking and status updates of sensors and actuators and enables integration
    with other tools and social networks. Users can access data output measurement
    of the system with their laptops or smartphones. The integration process was carried
    out to allow TTN to forward the data received from our system to ThingSpeak, which
    in turn makes it available to be displayed in its dashboard/channel or on ThingView
    mobile apps. Therefore, the proposed WQMS-LoRaWAN system can acquire data from
    sensors and send it to the ThingSpeak IoT server via the TTN LoRaWAN server and
    allow live cloud data streams to be aggregated, visualized, and analysed. We have
    selected the integration with ThingSpeak due to its key features, which include:
    (i) the ability to easily set up devices that use common IoT protocols to send
    data to ThingSpeak, (ii) visualize the sensor data from third-party sources in
    real-time, (iii) prototype and develop IoT applications without arranging networks
    or program development, (iv) a free software IoT system that uses the LAN or HTTP
    to collect related data from sensors or items through the internet, and (v) automatically
    activate data and connect with third-party providers to analyse data obtained
    by the device using ThingSpeak for easier processing, storage, and display. 5.
    System development and implementation After the individual testing for various
    components of the system, the implementation of the proposed design was carried
    out. The implemented WQMS-LoRaWAN IoT system was started by the combination of
    all sensors with the microcontroller and LoRa shield as one unit. 5.1. Functionality
    testing and design enhancement The testing of the all-in-one sensing unit was
    conducted to ensure system functionalities, and the design was enhanced and optimized
    when needed. This phase is vital to enhance the performance of the system and
    identify errors either in hardware connection or in software coding. Accordingly,
    the issues encountered in the previous stages are pointed out and solved. This
    phase was repeated to accomplish a successful system implementation. For example,
    at the initial stage of the system implementation, the output that we measured
    from the water quality system should be a reasonable measurement. After compiling
    all the programming codes into Arduino Uno, the 4-sensor module was installed
    on a breadboard according to Fig. 8 to measure various water quality parameters
    simultaneously. Download : Download high-res image (133KB) Download : Download
    full-size image Fig. 8. Schematic diagram of sensors connection with Arduino.
    The codes of individual sensors were compiled using the Arduino IDE and the four-sensor
    module was installed on a breadboard to simultaneously measure various water quality
    parameters. The sensing unit functionality and capability were locally tested
    via serial monitor first, as illustrated in Fig. 9 (a). The system’s wiring installation
    and labelling were carried out according to the system layout for diagnosing input/output
    malfunctions. Besides, the connection with TTN was tested using Cytron Lora RFM
    antenna to the LoRaWAN gateway as shown in Fig. 9 (b). The communication between
    LoRa and the gateway to the TTN is working smoothly. In this stage, the evaluation
    of the system is conducted to ensure that all sensors and Arduino with LoRa and
    LoRaWAN gateway are effectively functioning. Download : Download high-res image
    (132KB) Download : Download full-size image Fig. 9. System components testing:
    (a) Sensors combination testing via the serial monitor, (b) Connection of LoRa
    node/LoRaWAN gateway to TTN. 5.2. Hardware implementation of the multi-sensor
    smart LoRa node Before finalizing the WQMS-LoRaWAN system, we conducted numerous
    tests on individual sensors as well as on the multi-sensor unit using a breadboard.
    One of the key attributes of the proposed system is its portability. In order
    to enhance the system''s modularity and ease of use, a plug-and-play feature has
    been incorporated into the WQMS-LoRaWAN design. This feature not only facilitates
    easy installation and replacement of various sensors but also comes with a power
    management system. Specifically, the system can automatically switch between solar
    power and battery sources depending on availability and need. Upon connection,
    the core module automatically recognizes the attached sensor, retrieves its unique
    identifier and adjusts the communication protocols accordingly. This minimizes
    setup time and allows users to customize the system based on their specific monitoring
    needs. In practical terms, the plug-and-play feature empowers local authorities
    or community leaders to adapt the system for different water conditions or quality
    parameters, thereby maximizing its utility and adaptability in diverse rural settings.
    The system is suitable to be used in daily real-time monitoring of water sources
    in rural areas. The system is placed in a circular form with a thin fabrication
    to meet the water conditions and retested after the hardware is installed. The
    system was enhanced and optimized when necessary until it was fully functioning.
    Thereafter, the system components are placed and arranged inside the enclosure
    (Fig. 10). The sensors are fixed in the lower body part to be closer to the water
    surface and easily dropped to the water. Meanwhile, the microcontroller with LoRa,
    solar charger, and solar cell are placed on the upside of the system. The holes
    for the sensors and antenna are well protected against water leakage into the
    system. After the components were attached to the prototype, the wiring connection
    was then established. The sensors connect to the module, the module connects to
    the board, and the board connects to the controller. The wire is held together
    with a cable tie and wire tape to ensure that it looks neat and assorted. Download
    : Download high-res image (242KB) Download : Download full-size image Fig. 10.
    Implementation of Multi-Sensor Node. Fig. 11 shows a developed testing prototype
    with the final edition of the portable WQMS-LoRaWAN system placed in the water
    aquarium and Gambang Lake. The system''s floating capability and waterproofness
    were tested in the laboratory prior to real implementation. The LoRa communication
    coverage and connectivity with the gateway were also tested in indoor and outdoor
    environments. The system was finalized to be appropriate for practical deployment
    and applicable in the considered environment regardless of the surrounding conditions.
    Download : Download high-res image (364KB) Download : Download full-size image
    Fig. 11. Finalized system practical testing (a) LAB (b) Gambang Lake. For instance,
    during daylight hours, the system primarily relies on solar power, reducing the
    dependence on battery usage. When solar power is insufficient or unavailable,
    the system seamlessly switches to battery mode. This intelligent switching ensures
    continuous operation while optimizing energy consumption. In the context of energy
    sustainability, a paramount consideration for the WQMS-LoRaWAN system, we''ve
    undertaken an in-depth assessment of power utilization across all components.
    Our Arduino Uno core module accounts for roughly 40 % of the total system power
    consumption, while the SX127x LoRa Shield uses an additional 30 % and it is depending
    on the system situation (sending data or idle). The four water quality sensors—E-201-C
    for pH, SEN0189 for turbidity, DS18B20 for temperature, and SKU SEN0244 for TDS—cumulatively
    consume the remaining 30 % of the energy budget. Importantly, the inclusion of
    these sensors has a nominal effect on total power usage, elevating it by just
    5–8 %. This analysis corroborates the efficacy of our solar-powered configuration
    in meeting the energy requirements of both the core module and various sensors.
    This information is especially relevant for stakeholders planning to deploy this
    system in rural areas where energy efficiency is a critical concern. 5.3. Software
    implementation The software development focuses on proposing a new algorithm (Algorithm
    1) to gather data from a multi-sensing unit and compose it to be transmitted as
    a single packet periodically over the LoRa/LoRaWAN network to the TTN server.
    This process is known as encoding sensor readings for upload as bytes’ stream
    to the TTN via the gateway. Algorithm 1 is proposed and implemented in the Arduino
    IDE platform to perform the required monitoring tasks. Multiple functions were
    developed to gather data from each sensor. In our LoRaWAN-based system, we configured
    various parameters to optimize the node''s transmission capabilities and ensure
    efficient, collision-free communication (Croce et al., 2019). These configurations
    include: • Spreading Factor (SF): We experimented with two distinct SF settings:
    SF7 and SF12. These varying levels were tested to determine the most effective
    trade-off between communication range and data rate under different environmental
    conditions. • Bandwidth (BW): Set at 125 kHz, this bandwidth is a standard setting
    for LoRaWAN applications, providing a balance between data rate and signal robustness.
    • Coding Rate (CR): Typically, we set the CR at 4/5. This rate offers a compromise
    between transmission robustness and bandwidth efficiency, ensuring reliable data
    delivery without excessively consuming network resources. • Carrier Frequency
    (CF): The CF was selected in line with the regulatory norms and standard frequency
    bands specified for LoRaWAN operations in Malaysia, which range from 919 MHz to
    923 MHz. This careful selection ensured our system''s compliance with local regulations
    while optimizing signal transmission quality. • Transmission Power (Ptx): We adjusted
    the Ptx to balance the needs for transmission range and energy efficiency. The
    setting was fine-tuned based on the distance between the nodes and the gateway,
    aiming to maintain strong communication links while reducing power consumption
    as much as possible. This strategy is particularly crucial for our system''s solar-powered
    design, helping to extend battery life in remote or rural settings. By configuring
    these parameters, we aimed to create a network that is not only compliant with
    local telecommunication laws but also efficient and reliable, crucial for our
    system’s deployment in rural water quality monitoring scenarios. The LoRa parameters
    can be adjusted to achieve a trade-off between multiple features, such as data
    rate, range of transmission, interference robustness, and consumed energy. LoRa
    is a Physical Layer modulation technique proprietary by Semtech, whereas LoRaWAN
    is an open standard that offers a medium access control mechanism (MAC) that enables
    many LoRa end devices to communicate with the gateway. The LoRa Alliance supports
    and promotes global adoption of the LoRaWAN to ensure interoperability of all
    LoRaWAN-supported devices and technologies; thus, delivering IoT for a sustainable
    future. The structure of the LoRa packet includes (i) Preamble (≥4.25 symbols),
    (ii) 2-byte header (iii) 2-byte header CRC, (iv) data payload (≤255-bytes) and
    (v) Payload CRC(2-bytes). A packet initiates with the preamble, programmable 6–65535
    symbols, to which 4.25 symbols are added by the radio for the sync word. Next,
    it is optionally followed by a header that indicates the length and Forward Error
    Correction (FEC) rate of the payload and describes the existence of an optional
    16-bit Cyclic Redundancy Check (CRC) for the payload. The header has its own CRC,
    and it is always transmitted with a 4⁄8 FEC rate. The payload comes after the
    optional header, and it can comprise 1–255 bytes. An optional 16-bit CRC might
    be added at the payload’s end. In the proposed system, the collected readings
    from the sensors are combined into a packet of eight payloads to be sent to the
    LoRaWAN gateway. Each sensor reading is represented by two payloads (1-byte each).
    This combination denotes the payload of sensing data in the LoRa Phy Packet Format.
    Fig. 12 depicts the utilised code to compose eight payloads as a single packet
    to be updated to TTN every 10 s and will be decrypted and shown in the hexadecimal
    format of the decoded “binary data,” every pair digit being one “byte”, as sent
    by the sensors. The bytes are used to represent numbers, text, and switch status.
    Download : Download high-res image (151KB) Download : Download full-size image
    Fig. 12. Packet payloads structure. A payload decoder has been built in the TTN
    platform to interpret the received hexadecimal byte characters into human-readable
    information, as shown in Fig. 13. The uplink payload by the gateway is 16 bytes
    in length and represents the readings of four water quality parameters (pH, TDS,
    turbidity, and temperature) to show the gathered measurements from the employed
    sensors (Fig. 14). Nevertheless, the dashboard of TTN lacks a user-friendly interface
    and data visualization features. Consequently, we have integrated two user-friendly
    GUIs for water quality monitoring as part of the software development. One is
    a web-based ThingSpeak IoT dashboard where we have created our own channel that
    was integrated into the TTN platform using the channel ID, a write API key, and
    a read API key to enable the channel to acquire data from TTN and visualize it
    in the selected gauges, charts or widgets. The ThingSpeak represents IoT analytics
    with MATLAB. ThingSpeak IoT server has the capability to view the gathered data
    either as graphs, numerical values, or historical trends graphs for a selected
    period (daily, monthly, or annually). Four widgets were added to visualize the
    water quality measurements. The created channel has private and public views to
    support and control the privacy of displayed information. API read and write keys
    are exploited to share the sensor readings with other devices. Download : Download
    high-res image (205KB) Download : Download full-size image Fig. 13. TTN Payload
    Decoder Function. Download : Download high-res image (151KB) Download : Download
    full-size image Fig. 14. TTN data payload form. The second GUI is a smartphone-based
    interface using the MQTT protocol known as ThingView. The ThingView mobile application
    was exploited to view the graph and the reading on the smartphone because it is
    among the mobile applications integrated with the ThingSpeak IoT platform. ThingView
    enables the visualization of ThingSpeak channels instantaneously via channel ID.
    Different configurations for the GUI view are available based on channel types
    (public/private), such as colour, timescale, chart type, and the number of results.
    The information on the water quality can be easily viewed anytime and anywhere
    by users through these apps. The two GUIs are synchronised, and users have two
    options for monitoring. The conditions of the water quality can be monitored on
    the spot all the time and immediately treat the water quality that has been polluted
    by using these two dashboards (ThingSpeak and ThingView). Further details about
    the integrated GUIs with their usage in the WQMS-LoRaWAN are explained in the
    following section. 6. Experimental results and validation This section presents
    the main findings and the performance validation of the developed WQMS-LoRaWAN.
    As previously mentioned, the testing of the proposed system was carried out in
    the laboratory first before the real deployment. Several verification steps were
    carried out prior to the implementation of the monitoring system in the rural
    area of Gambang, Pahang, Malaysia. The testing scenarios of the developed system
    have been carried out outdoors at Gambang Lake and indoors at our laboratory.
    The practical test results were validated by comparison with real measurements
    using the laboratory apparatus at the site. After that, samples of water taken
    from the lake were tested again in the laboratory under various conditions in
    comparison with other water samples (tap water and wastewater). While we acknowledge
    the limitations of our sample size, it is essential to highlight the practical
    aspects of our study. Our system underwent rigorous testing in a real-world environment
    at “Gambang Lake”. The outcomes were promising as we effectively monitored the
    specified water quality parameters in real-time, with the data being seamlessly
    transmitted to the IoT Cloud via the LoRa/LoRaWAN network. The core objective
    of this study was to ascertain the performance of the IoT system, both in a controlled
    LAB environment and in an authentic implementation scenario for verification and
    validation purposes. Though our LAB demonstrations employed a restricted sample,
    the intent was primarily to showcase the system''s inherent capabilities. It is
    a consensus that a broader, more encompassing sample would be instrumental for
    any large-scale roll-outs to holistically gauge water quality. In real-world scenarios,
    an ideal approach would be to deploy multiple LoRa nodes throughout the targeted
    lake or river. This would facilitate the monitoring of water quality across various
    segments of the water body. The amalgamated data could then be collated and scrutinized
    at the central utility servers, allowing for real-time water quality assessments
    based on inputs from these distributed sensing units. We have integrated these
    observations and suggestions into our discussion, emphasizing the scope and requirements
    for expansive sampling in subsequent implementations. 6.1. Water quality monitoring
    at Gambang lake During the outdoor test at the lake, our primary objectives were
    to assess network connectivity and the timely updating of data to our IoT platform.
    The multisensory node was strategically placed in the lake, with sensors submerged
    in the water to collect real-time data. Powering the system, a solar panel was
    used during the day while a rechargeable battery took over at night, efficiently
    managed by a solar charger shield. Our LoRaWAN gateway, situated 2 km away on
    our campus, successfully received data transmitted from the lake location. The
    test ran continuously from 9:00 am to 2:00 pm, with multiple runtime cycles to
    ensure robust data collection. During these testing hours, we gathered ten readings
    for each of the four parameters—TDS, turbidity, temperature, and pH—utilizing
    a variety of instruments. The LoRa node periodically relayed this data to our
    gateway, which in turn uploaded the information to the TTN cloud and ThingSpeak
    platform. This data was made accessible in real-time on multiple platforms—TTN,
    ThingSpeak, and ThingView—and could be viewed via internet-enabled devices like
    laptops, PCs, and smartphones. The focus of this test was not a full-scale implementation
    but rather a targeted evaluation of the system''s networking capabilities, sensor
    accuracy, and data upload reliability. Overall, the trial validated our system''s
    functionality and laid the groundwork for future real-world deployments. Certainly,
    for a more comprehensive monitoring solution and permanent implementation, it
    will be essential to deploy multiple systems across various locations on the same
    lake. This will ensure more thorough coverage and allow for a more nuanced understanding
    of the water quality variables at play. By disseminating several multisensory
    nodes, we can capture spatial variations in water quality, thereby providing stakeholders
    with a holistic view of the lake''s condition. Such a multi-node deployment would
    also allow for greater data redundancy and improved fault tolerance, enhancing
    the robustness of the system. This added layer of complexity is especially pertinent
    for stakeholders considering a long-term, scalable solution for water quality
    monitoring. In the TTN, the information on the water quality is periodically updated
    depending on the time interval required to establish a connection with the gateway.
    This platform allows for real-time water quality tracking. The ThingSpeak also
    shows the information as graphs and numeric values with a historical trend graph
    for each sensor reading, as depicted in Fig. 15. We also have created a widget
    for every sensor to synchronous the data between the utilised IoT servers. The
    data is also saved in the channel of ThingSpeak and can be extracted for further
    analysis. The same real testing data can be displayed on smartphones via the ThingView
    application as shown in Fig. 16. The condition of the water quality can be viewed
    at any time, and any abnormal conditions of the water quality can be reported
    by using these three dashboards. Our system can be used to notify the consumers
    regarding the water quality and report to the responsible authorities to treat
    the water when needed. The application will display the data as long as the connection
    is stable between the gateway and the LoRa nodes. The floating capabilities, impermeability
    functions, and connectivity with the gateway were tested in the field at Gambang
    Lake. Download : Download high-res image (260KB) Download : Download full-size
    image Fig. 15. Sensor readings via the ThingSpeak dashboard: (a) Chart, and (b)
    Gage widget. Download : Download high-res image (160KB) Download : Download full-size
    image Fig. 16. Real-time lake water quality parameters in ThingView. Many tests
    have been conducted on the site and in the laboratory to analyse the performance
    of the proposed WQMS-LoRaWAN system. The reported results in this paper are observed
    and collected in real-time for the considered water quality parameters during
    a five-hour period. Since our system sends information to the cloud every 10 s
    in the testing scenario, more than one thousand entries have been received by
    the server. Thus, one thousand readings from each sensor have been averaged into
    ten readings (100 entries are averaged into one reading) to validate the system
    performance in comparison with practical measurements using laboratory apparatus.
    We have used 2100Q Portable Turbidimeter and SevenCompact pH/Ion Meter S220. The
    TDS values have been calculated based on laboratory experiments. The gathered
    data by the implemented WQMS-LoRaWAN was compared with practical measurements
    by LAB instruments. The turbidity data was validated first. Turbidity is often
    used to determine if the water loses clarity due to the existence of floating
    particles. The cloudiness of the fluid is usually invisible to the naked eye.
    The higher the TDS in the water, the more visible the cloudiness, and the higher
    the turbidity. NTU is used by turbidity to measure cloudiness. Turbidity is often
    used to determine if the water loses clarity due to the existence of floating
    particles. The cloudiness of the fluid is usually invisible to the naked eye.
    The turbidity of drinking water must not exceed 5 NTU and must be below 0.1 NTU,
    according to the World Health Organization. During the practical test, the 2100Q
    portable turbidity meter was used to test the turbidity of the lake water sample.
    Selected obtained results from practical water sample tests in the Lab are shown
    in Fig. 17. Download : Download high-res image (240KB) Download : Download full-size
    image Fig. 17. Parameters values of (a) pH (b) turbidity. Fig. 18 (a) illustrates
    the collected data by WQMS-LoRaWAN and the portable turbidimeter. The obtained
    results from the turbidimeter were marginally lower than the WQMS-LoRaWAN readings
    which represent an average value for 100 entries. Consequently, a minor variety
    is noticed between real-time data and experimental results of turbidity; however,
    it does not mean the imprecision of WQMS-LoRaWAN. The turbidity readings for real-time
    monitoring changed between 9.57 and 9.85 NTU compared with 9.46 to 9.6 NTU by
    the turbidimeter. Overall, the trend of both graphs is in agreement. Throughout
    this experiment, the turbidity (SEN 0189) sensor is validated, and it can be used
    for real-time monitoring of the water turbidity. Download : Download high-res
    image (246KB) Download : Download full-size image Fig. 18. Comparison of WQMS-LoRaWAN
    and Instrumentation measurements (a) Turbidity (b) pH, and (c) Temperature. Fig.
    18 (b) compares the collected results using the proposed system and the SevenCompact
    pH meter S220. The pH value is used to detect the concentration of hydrogen ions.
    This parameter measures the acidity or alkalinity of a solution. The scale of
    pH basically ranges from 0 to 14. Drinking water with a pH of 6–8.5 is safe to
    drink, while water with a pH below six is acidic, and that with a pH above 8.5
    is alkaline or basic. A pH test is required to determine the water’s corrosiveness
    to avoid harm to human health. The equipment used was the SevenCompact pH meter
    S220, which can test the pH and temperature values as well. There are slight differences
    in the pH readings from WQMS-LoRaWAN and SevenCompact pH meter. The pH value changes
    due to the active microorganisms in the water. Obviously, the trend of both charts
    was approximately the same. In contrast, the obtained pH readings from both systems
    are consistent and identical irrespective of time and within the Environmental
    Protection Agency’s standard. The pH (E-201-C) sensor is validated and works efficiently
    in the proposed system hydrogen ions concentration. Similarly, the SevenCompact
    pH meter S220 is used to measure the temperature of the lake’s water every 30
    min and compare the measurements with the average readings from the WQMS-LoRaWAN.
    The temperature has a little change because the water is exposed to the sunlight
    when monitoring in real-time. Accordingly, the water temperature will increase
    or decrease. These changes have an impact on the other water quality parameters
    as well. Fig. 18 (c) shows the collected readings via the temperature sensor for
    the sensor validation over the defined period. A comparison between the gathered
    water temperature using the considered systems is introduced. In general, the
    trend was consistent for the two graphs regardless of the time. Our system measurements
    of the water’s temperature were slightly higher compared to the digital thermometer.
    The WQMS-LoRaWAN succeeded in continuously measuring the temperature using the
    DS18b20 temperature sensor for five hours. The data is uploaded in real-time over
    the LoRaWAN gateway to the IoT cloud. The total dissolved solids of water are
    displayed in mg per unit of total volume (mg/L), sometimes known as ppm. The measurement
    of conductivity can be defined. According to the Environmental Protection Agency’s
    standard, the TDS level of drinking water is 50 mg/L, and the limitation is 500
    mg/L. The gathered data from the WQMA-LoRaWAN throughout the practical test at
    Gambang Lake varied between 551 and 570 mg/L. In order to validate the analogue
    TDS sensor (SKU SEN0244), a sample of lake water was tested at the laboratory.
    The formula has been applied to calculate the TDS value which was 560 mg/L and
    it is close to the measured values during the site test. TDS is used to determine
    the total concentration of dissolved substances in the water, which measures the
    disintegrated minerals and natural matter present in the water. The mineral salts
    in water are magnesium, potassium, sodium, and calcium, which are cations, while
    chlorides, sulfates, nitrates, and carbonates are anions. Therefore, the system''s
    effectiveness was proven during the real-time implementation in the lake. The
    system succeeded in periodically updating the gateway with precise data and the
    water quality parameters acquired by the sensors were also accurate compared to
    the tested water samples. The obtained results prove that our system is efficient,
    reliable and suitable for implementation in rural areas. Moreover, the WQMS-LoRaWAN
    is a standalone system that can operate and update information about water quality
    continuously without any human intervention. The PV solar panel provides the required
    power for the sustainable operation of the WQMS-LoRaWAN. The harnessed solar energy
    by the solar panel as a renewable energy resource is exploited to charge the LiPo
    battery and secure the sustainable operation of the system. The utilised battery
    requires six hours for full charging by the PV solar panel and can last for 13
    h of continuous operation according to the conducted tests. 6.2. Water quality
    testing at the laboratory In the first scenario (outdoor testing), only the leak
    water quality was assessed using the proposed LoRaWAN-based system. However, in
    the second scenario (indoor testing), three different samples of water (tap water,
    wastewater, and lake water) are used to validate the system''s performance under
    different water quality conditions. Water samples have been collected from the
    lake to be tested in the laboratory. When the water samples were transferred to
    the laboratory, the water quality parameters were affected due to the surrounding
    microorganisms and the way of taking the water sample. Therefore, we have noticed
    some variations compared with the obtained reading during the site test. The amount
    of time to test the water sample is restricted. The longer the time that the water
    sample is kept, the less accurate the parameter being tested. In the real test,
    the deeper the sensor is immersed, the higher the reading of the turbidity. In
    the practical test, only 10 mL of water sample has been tested. Temperature is
    the main parameter of water quality that can affect the other parameters, such
    as pH, DO, and conductivity. When the water sample was brought back to the laboratory
    for the laboratory experiments, the temperature was affected because of the room
    temperature. The second validation test was carried out in the laboratory for
    various water samples under the same conditions. A few water samples have been
    taken and tested in real-time based on the four sensors of WQMS-LoRaWAN and via
    laboratory equipment analysis to ensure the accuracy of the obtained result from
    the developed system. The obtained results of the three types of water samples
    via real-time monitoring and laboratory equipment analysis were compared. The
    comparison shows that the readings were slightly different but within the acceptable
    range of the sensors’ accuracy. In both methods of testing, the readings varied,
    except that the temperature measurements were close to each other in both tests.
    Overall, our system was functioning well and can provide an overview of the quality
    of water in real-time. Table 2 summarizes and compares the obtained results from
    the developed system and the laboratory instruments for the considered water samples
    according to the tested parameters. Table 2. Comparison of Water Quality Parameters
    for Different Samples During Laboratory Testing of WQMS-LoRaWAN. Water Quality
    Parameters WQMS-LoRaWAN Laboratory Test Tap Water Lake Water Waste Water Tap Water
    Lake Water Wastewater Temp. (°C) 24.93 25.06 25.25 24.0 22.2 22.0 pH 7.12 8.09
    10.98 6.69 6.85 9.34 Turbidity 0.97 9.37 11.34 1.34 10.9 13.3 TDS(mg/L) 62.39
    564.76 3332.3 30 600 4500 The traditional WQM methods, such as laboratory technique
    analysis, take a long time to analyse and obtain the result. Such methods also
    have the preferred time to keep the water sample to avoid the performance of the
    water sample from being affected. The pH of the water sample will become acidic
    if it is stored for an extended period. This phenomenon occurs because the oxygen
    in the water has been used up by the microorganism or bacteria. The microorganism
    or bacteria will die due to the lack of oxygen in the water. When the microorganism
    or bacteria are dead, the pH in the water will be affected and become acidic.
    Meanwhile, the acceptability of several inorganic constituents and chemical contaminants
    will be influenced by temperature, which may affect the water quality. The rise
    in water temperature increases the microorganism’s production. Taste, odour, colour,
    and corrosion issues are also affected. The ion concentrations will change with
    the increase or decrease in temperature, thus switching the pH value. Oxygen solubility
    will also decline with higher temperatures. The conductivity will also be affected
    by the temperature because the different ions in the water require various temperatures
    to activate. 6.3. High-Level application contexts and system integration By outlining
    high-level application contexts, we aim to emphasize the adaptability and broad-reaching
    implications of our WQMS-LoRaWAN system. This underscores the fact that although
    the system was originally conceived for monitoring water quality in rural areas,
    its applicability extends much further. Public Health Initiatives: Our WQMS-LoRaWAN
    system is designed with scalability and adaptability in mind, making it suitable
    for a range of high-level applications beyond rural water quality monitoring.
    For instance, our system can serve as an integral part of larger public health
    initiatives aimed at preventing waterborne diseases. Early warning signals triggered
    by deteriorating water quality can prompt immediate preventive actions, thereby
    protecting communities from outbreaks. Emergency Response Strategies: In the event
    of natural disasters such as floods or industrial accidents that compromise water
    quality, the WQMS-LoRaWAN system can provide real-time information that is crucial
    for emergency response teams. This aids in making quick decisions on evacuation,
    distribution of water purifiers, or targeted cleaning operations. Private Sector
    Applications: Water quality is not just a concern for public bodies; it''s also
    vital for various industries such as agriculture, brewing, and pharmaceuticals.
    Our system can be easily integrated into existing industrial processes for real-time
    water quality monitoring, helping businesses comply with regulations and optimize
    their operations. Smart Cities: As urban areas continue to grow and become smarter,
    the integration of IoT technologies like WQMS-LoRaWAN can serve as a critical
    component in larger systems of water management, waste treatment, and environmental
    monitoring. Its low energy consumption makes it ideal for long-term deployments
    in such scenarios. Potential for Integration: Given its modular design and ease
    of scalability, the WQMS-LoRaWAN system can be readily integrated into existing
    water quality monitoring infrastructures, including those that are not based on
    LoRaWAN technology. Its data output can be easily adapted to feed into other platforms
    and dashboards, thus offering flexibility and adaptability in a variety of implementation
    contexts. 7. Conclusion and future work The objectives of this study have been
    fulfilled by proposing the use of a new LoRaWAN wireless technology for IoT applications
    in rural areas. A cost-effective, portable, floating, waterproof smart, and environmentally
    friendly WQMS-LoRaWAN system for the monitoring of water’s quality parameters
    in real-time has been developed and deployed at Gambang Lake to help reveal the
    variation of water quality in real-time and update the information to the IoT
    cloud (TTN, ThingSpeak, and ThingView). Four water quality sensors, namely, pH,
    turbidity, temperature, and TDS, have been used. The system managed to enable
    the communication over LoRa and LoRaWAN network to the internet to smoothly transmit
    the data. The system could accurately and simultaneously gather the different
    sensors’ real-time data, and they can be accessed via web-based/mobile-based dashboards.
    The system is powered using a green energy source (solar cell), which can increase
    system independence and energy efficiency during continuous operation. The obtained
    results were promising, and the developed system can improve the awareness of
    people and authorities about the water quality in rural areas. This system is
    useful for people who live in rural areas that depend on lakes or rivers as primary
    water resources. Individuals can track the water quality to ensure that it is
    safe for daily usage and free of contamination. Our LoRaWAN-based IoT system allows
    for real-time monitoring of water quality, enabling rapid response to any changes
    or issues that may arise. The use of low-power and long-range communication technology
    allows our system to operate efficiently in rural areas with limited access to
    power and network infrastructure. The modular design of our system makes it easy
    to adapt to various water monitoring needs and to incorporate additional sensors
    or parameters as required. On the other hand, the performance of our system may
    be affected by environmental factors, interference from other substances, and
    network connectivity challenges, as previously discussed. The initial setup and
    calibration of the system may require technical expertise and resources that might
    not be readily available in some rural areas. The reliance on batteries for power
    supply in remote locations may necessitate regular maintenance and battery replacement,
    potentially increasing the long-term operational costs of the system. In our future
    work, we aim to conduct a more thorough and detailed analysis of the system''s
    power consumption. This analysis will extend to both the active and idle states
    of the system, enabling us to gain a deeper understanding of its energy dynamics.
    By meticulously measuring and recording the energy requirements during these different
    operational phases, we will be able to identify areas for optimization and enhance
    the overall efficiency of the system. This data will be critical in refining the
    system''s design, ensuring sustainable operation, and reducing the energy footprint,
    which is particularly important for deployment in resource-constrained rural areas.
    Our goal is to not only ensure reliable performance but also to contribute to
    the development of more energy-efficient IoT solutions for environmental monitoring.
    Detailed statistical analysis of network performance over various operational
    scenarios is a part of our future development roadmap. In future iterations, we
    plan to conduct a more thorough analysis of network performance under different
    environmental conditions and settings. This will include detailed statistical
    analysis of packet delivery rates, signal strength variations, and the impact
    of different LoRaWAN parameters on overall network performance. Our commitment
    to enhancing and refining our WQMS-LoRaWAN system will continue, with a focus
    on optimizing network parameters for diverse deployment scenarios and improving
    the system’s overall reliability and efficiency. Recognizing the benefit of community
    contributions to improve and adapt our system, we will make the schematics and
    software open-source once we complete the project and registration process of
    copyright with the Intellectual Property Corporation of Malaysia (MyIPO). The
    complete hardware design files, sensor interface codes, and communication protocols
    will be accessed from the Institutional Repository (IR UMPSA). This is to encourage
    developers and researchers to replicate and expand upon our system and contribute
    to its ongoing improvement. For the system''s future enhancement, we recommend
    adding sensors like electrical conductivity, ORP, DO, and a GPS sensor to give
    a more detailed water quality assessment. Investing in higher quality, albeit
    pricier, sensors can refine accuracy and cater to commercialization. Streamlining
    electrical connections with a printed circuit board can conserve space and boost
    efficiency. Our system presently monitors only four water quality parameters.
    Expanding this with sensors detecting parameters such as Manganese, Ammonia-Nitrogen,
    and Nitrate-Nitrogen can offer insights into water quality classifications, which
    could be integrated into our GUI dashboard. Enhancing the battery life and conducting
    thorough research on LoRa communication metrics are essential. Integrating multiple
    sensing units and employing deep learning models can help in predicting rural
    water quality. These recommendations, combined with insights from our study, can
    further LoRaWAN-based IoT applications in rural areas. For further enhancement
    of our system, we also suggest a focused integration of artificial intelligence
    (AI) and machine learning (ML) techniques. This would empower the system to understand
    and adapt to the nuances of water quality, building on long-term monitoring data.
    Collaborating with environmental specialists could allow the inclusion of a broader
    set of sensors, thereby broadening the scope of contamination detection. Engaging
    local communities might provide invaluable insights that could be used to refine
    the monitoring approach. The application of AI and ML can transform the system
    from merely recording data to forecasting potential water quality changes, facilitating
    a proactive approach to interventions. As the system''s reach is expanded to encompass
    diverse water sources, the addition of geographic information systems (GIS) can
    significantly enhance spatial analytics, guiding water quality improvement initiatives
    in specific areas. For a comprehensive understanding of water quality in rural
    areas, future research should adopt an interdisciplinary approach, integrating
    technological advances with socio-economic evaluations. Engaging with social scientists
    and local community leaders will be crucial to unravel the intricacies of cultural
    and economic influences on water quality and to devise strategies that are both
    technologically sound and socially attuned. CRediT authorship contribution statement
    Waheb A. Jabbar: Supervision, Funding acquisition, Project administration, Writing
    – original draft, Conceptualization, Methodology, Software, Validation, Investigation,
    Visualization, Resources, Writing – review & editing. Tan Mei Ting: Conceptualization,
    Methodology, Software, Validation. M. Fikri I. Hamidun: Conceptualization, Methodology,
    Software, Validation. Ajwad H. Che Kamarudin: Conceptualization, Methodology,
    Software, Validation. Wenyan Wu: Investigation, Visualization, Resources, Writing
    – review & editing. Jamil Sultan: Investigation, Visualization, Resources, Writing
    – review & editing. AbdulRahman A. Alsewari: Investigation, Visualization, Resources,
    Writing – review & editing. Mohammed A.H. Ali: Investigation, Visualization, Resources,
    Writing – review & editing. Declaration of competing interest The authors declare
    that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Data availability
    No data was used for the research described in the article. References Abdelfadeel
    et al., 2019 K.Q. Abdelfadeel, D. Zorbas, V. Cionca, D. Pesch $ FREE $—Fine-grained
    scheduling for reliable and energy-efficient data collection in LoRaWAN IEEE Internet
    of Things Journal, 7 (1) (2019), pp. 669-683 Google Scholar Afisiadis et al.,
    2019 O. Afisiadis, M. Cotting, A. Burg, A. Balatsoukas-Stimming On the error rate
    of the LoRa modulation with interference IEEE Transactions on Wireless Communications,
    19 (2) (2019), pp. 1292-1304 Google Scholar Almuhaya et al., 2022 M.A. Almuhaya,
    W.A. Jabbar, N. Sulaiman, S. Abdulmalek A survey on Lorawan technology: Recent
    trends, opportunities, simulation tools and future directions Electronics, 11
    (1) (2022), p. 164 CrossRefView in ScopusGoogle Scholar Alset et al., 2020 U.
    Alset, A. Kulkarni, H. Mehta Performance analysis of Various LoRaWAN frequencies
    for optimal data transmission of water quality parameter measurement 2020 11th
    International Conference on Computing, Communication and Networking Technologies
    (ICCCNT), IEEE (2020), pp. 1-6 CrossRefGoogle Scholar Arduino., 2023 Arduino.
    (2023). Arduino Uno Rev3 Retrieved 11 Nov 2023 from https://www.arduino.cc/. Google
    Scholar Beltramelli et al., 2020 L. Beltramelli, A. Mahmood, P. Österberg, M.
    Gidlund LoRa beyond ALOHA: An investigation of alternative random access protocols
    IEEE Transactions on Industrial Informatics, 17 (5) (2020), pp. 3544-3554 Google
    Scholar Bhardwaj et al., 2022 A. Bhardwaj, V. Dagar, M.O. Khan, A. Aggarwal, R.
    Alvarado, M. Kumar, R. Proshad Smart IoT and machine learning-based framework
    for water quality assessment and device component monitoring Environmental Science
    and Pollution Research, 29 (30) (2022), pp. 46018-46036 CrossRefView in ScopusGoogle
    Scholar Błaśkiewicz et al., 2019 Błaśkiewicz, P., Cichoń, J., Kutyłowski, M.,
    & Zawada, M. (2019). Revised Gateway Selection for LoRa Radio Networks. In Ad-Hoc,
    Mobile, and Wireless Networks: 18th International Conference on Ad-Hoc Networks
    and Wireless, ADHOC-NOW 2019, Luxembourg, Luxembourg, October 1–3, 2019, Proceedings
    18 (pp. 228-240). Springer International Publishing. Google Scholar Boccadoro
    et al., 2022 P. Boccadoro, V. Daniele, P. Di Gennaro, D. Lofù, P. Tedeschi Water
    quality prediction on a Sigfox-compliant IoT device: The road ahead of WaterS
    Ad Hoc Networks, 126 (2022), Article 102749 View PDFView articleView in ScopusGoogle
    Scholar Caeiro and Martins, 2021 J.J. Caeiro, J.C. Martins Water management for
    rural environments and IoT Research Anthology on Blockchain Technology in Business,
    Healthcare, Education, and Government, IGI Global (2021), pp. 246-262 CrossRefGoogle
    Scholar Chaudhari et al., 2020 B.S. Chaudhari, M. Zennaro, S. Borkar LPWAN Technologies:
    Emerging Application Characteristics, Requirements, and Design Considerations
    Future Internet, 12 (3) (2020), p. 46 CrossRefView in ScopusGoogle Scholar Chen
    and Han, 2018 Y. Chen, D. Han Water quality monitoring in smart city: A pilot
    project Automation in Construction, 89 (2018), pp. 307-316 View PDFView articleView
    in ScopusGoogle Scholar Cloete et al., 2016 N.A. Cloete, R. Malekian, L. Nair
    Design of smart sensors for real-time water quality monitoring IEEE Access, 4
    (2016), pp. 3975-3990 View in ScopusGoogle Scholar Croce et al., 2019 D. Croce,
    M. Gucciardo, S. Mangione, G. Santaromita, I. Tinnirello LoRa technology demystified:
    From link behavior to cell-level performance IEEE Transactions on Wireless Communications,
    19 (2) (2019), pp. 822-834 Google Scholar Cytron, 2021 Cytron. (2021). Cytron
    LoRa-RFM Shield. Retrieved 12 Nov 2023 from https://www.cytron.io/p-cytron-lora-rfm-shield.
    Google Scholar Cytron, 2020 Cytron. (2020). 2020 PCB Connector Housing 2 Ways.
    Retrieved 12 Nov 2023 from https://www.cytron.io/p-2020-pcb-connector-housing-2-ways.
    Google Scholar Cytron, 2022 Cytron.IO. (2022). 915MHz LoRa Gateway Raspberry Pi
    Hat. Retrieved 12 Nov 2023 from https://www.cytron.io/p-915mhz-lora-gateway-raspberry-pi-hat.
    Google Scholar Das and Jain, 2017 B. Das, P.C. Jain Real-time water quality monitoring
    system using Internet of Things 2017 International conference on computer, communications
    and electronics (Comptelix), IEEE (2017), pp. 78-82 CrossRefView in ScopusGoogle
    Scholar Faber et al., 2020 M.J. Faber, K.M. van der Zwaag, W.G.V. dos Santos,
    H.R. Rocha, d. O., Segatto, M. E., & Silva, J. A. A theoretical and experimental
    evaluation on the performance of LoRa technology IEEE Sensors Journal, 20 (16)
    (2020), pp. 9480-9489 CrossRefView in ScopusGoogle Scholar Fathoni et al., 2020
    H. Fathoni, H.Y. Miao, C.Y. Chen, C.T. Yang A monitoring system of water quality
    Tunghai Lake using LoRaWAN 2020 International Conference on Pervasive Artificial
    Intelligence (ICPAI), IEEE (2020), pp. 281-283 CrossRefView in ScopusGoogle Scholar
    Feisal et al., 2023 N.A.S. Feisal, N.H. Kamaludin, M.F.A. Sani, D.K.A. Ahmad,
    M.A. Ahmad, N.F.A. Razak, T.N.B.T. Ibrahim Anthropogenic disturbance of aquatic
    biodiversity and water quality of an urban river in Penang Water Science and Engineering,
    In Pres, Malaysia (2023), p. 2023 Google Scholar Goundar et al., 2015 S.S. Goundar,
    M.R. Pillai, K.A. Mamun, F.R. Islam, R. Deo Real time condition monitoring system
    for industrial motors 2015 2nd Asia-Pacific World Congress on Computer Science
    and Engineering (APWC on CSE), IEEE (2015), pp. 1-9 CrossRefGoogle Scholar Ighalo
    et al., 2020 J.O. Ighalo, A.G. Adeniyi, G. Marques Internet of things for water
    quality monitoring and assessment: A comprehensive review Artificial intelligence
    for sustainable development: Theory, practice and future applications (2020),
    pp. 245-259 Google Scholar Jabbar et al., 2022 W.A. Jabbar, S. Annathurai, T.A.A.
    Rahim, M.F.M. Fauzi Smart energy meter based on a long-range wide-area network
    for a stand-alone photovoltaic system Expert Systems with Applications, 197 (2022),
    Article 116703 View PDFView articleView in ScopusGoogle Scholar Jáquez et al.,
    2023 A.D.B. Jáquez, M.T.A. Herrera, A.E.M. Celestino, E.N. Ramírez, D.A.M. Cruz
    Extension of LoRa Coverage and Integration of an Unsupervised Anomaly Detection
    Algorithm in an IoT Water Quality Monitoring System Water, 15 (7) (2023), p. 1351
    CrossRefView in ScopusGoogle Scholar Jiao and Luo, 2018 D.L. Jiao, X. Luo Water
    quality monitoring system based on LoRa DEStech Trans. Comput. Sci. Eng, 10 (2018),
    pp. 1107-1116 Google Scholar Kuo et al., 2018 Y.-W. Kuo, C.-L. Li, J.-H. Jhang,
    S. Lin Design of a wireless sensor network-based IoT platform for wide area and
    heterogeneous applications IEEE Sensors Journal, 18 (12) (2018), pp. 5187-5197
    CrossRefView in ScopusGoogle Scholar Lap et al., 2023 B.Q. Lap, H. Du Nguyen,
    P.T. Hang, N.Q. Phi, V.T. Hoang, P.G. Linh, B.T.T. Hang Predicting Water Quality
    Index (WQI) by feature selection and machine learning: A case study of An Kim
    Hai irrigation system Ecological Informatics, 101991 (2023) Google Scholar Li
    et al., 2018 L.Y. Li, H. Jaafar, N.H. Ramli Preliminary study of water quality
    monitoring based on WSN technology 2018 International Conference on Computational
    Approach in Smart Systems Design and Applications (ICASSDA), IEEE (2018), pp.
    1-7 Google Scholar Li et al., 2017 Y. Li, X. Yan, L. Zeng, H. Wu Research on water
    meter reading system based on LoRa communication 2017 IEEE International Conference
    on Smart Grid and Smart Cities (ICSGSC) (2017) Google Scholar Liu et al., 2018
    Y.T. Liu, B.Y. Lin, X.F. Yue, Z.X. Cai, Z.X. Yang, W.H. Liu, J.Y. Chen A solar
    powered long range real-time water quality monitoring system by LoRaWAN 2018 27th
    Wireless and Optical Communication Conference (WOCC), IEEE (2018), pp. 1-2 View
    PDFView articleGoogle Scholar Magrin et al., 2019 D. Magrin, M. Capuzzo, A. Zanella
    A thorough study of LoRaWAN performance under different parameter settings IEEE
    Internet of Things Journal, 7 (1) (2019), pp. 116-127 Google Scholar Mroue et
    al., 2020 H. Mroue, B. Parrein, S. Hamrioui, P. Bakowski, A. Nasser, E.M. Cruz,
    W. Vince LoRa+: An extension of LoRaWAN protocol to reduce infrastructure costs
    by improving the Quality of Service Internet of Things, 9 (2020), Article 100176
    View PDFView articleView in ScopusGoogle Scholar Myint et al., 2017 C.Z. Myint,
    L. Gopal, Y.L. Aung Reconfigurable smart water quality monitoring system in IoT
    environment 2017 IEEE/ACIS 16th international conference on computer and information
    science (ICIS), IEEE (2017), pp. 435-440 View in ScopusGoogle Scholar Ngom et
    al., 2019 B. Ngom, M. Diallo, B. Gueye, N. Marilleau March). LoRa-based measurement
    station for water quality monitoring: case of botanical garden pool, IEEE (2019),
    pp. 1-4 CrossRefGoogle Scholar Olatinwo and Joubert, 2018 S.O. Olatinwo, T.-H.
    Joubert Energy efficient solutions in wireless sensor systems for water quality
    monitoring: A review IEEE Sensors Journal, 19 (5) (2018), pp. 1596-1625 Google
    Scholar Osman et al., 2018 Osman, S. O., Mohamed, M. Z., Suliman, A. M., & Mohammed,
    A. A. (2018, August). Design and implementation of a low-cost real-time in-situ
    drinking water quality monitoring system using arduino. In 2018 International
    Conference on Computer, Control, Electrical, and Electronics Engineering (ICCCEEE)
    (pp. 1-7). IEEE. Google Scholar Perumal et al., 2015 T. Perumal, M.N. Sulaiman,
    C.Y. Leong Internet of Things (IoT) enabled water monitoring system 2015 IEEE
    4th Global Conference on Consumer Electronics (GCCE), IEEE (2015), pp. 86-87 CrossRefView
    in ScopusGoogle Scholar Pi, 2020 R. Pi Raspberry Pi 3 Model B+ Retrieved 12 Nov
    2023 from https://www.raspberrypi.com/products/raspberry-pi-3-model-b-plus/ (2020)
    Google Scholar Prasad et al., 2015 A.N. Prasad, K.A. Mamun, F.R. Islam, H. Haqva
    Smart water quality monitoring system 2015 2nd Asia-Pacific World Congress on
    Computer Science and Engineering (APWC on CSE), IEEE (2015), pp. 1-6 View in ScopusGoogle
    Scholar Premsankar et al., 2020 G. Premsankar, B. Ghaddar, M. Slabicki, M. Di
    Francesco Optimal configuration of LoRa networks in smart cities IEEE Transactions
    on Industrial Informatics, 16 (12) (2020), pp. 7243-7254 CrossRefView in ScopusGoogle
    Scholar Qin et al., 2018 Y. Qin, A.U. Alam, S. Pan, M.M. Howlader, R. Ghosh, N.-X.
    Hu, M.J. Deen Integrated water quality monitoring system with pH, free chlorine,
    and temperature sensors Sensors and Actuators B: Chemical, 255 (2018), pp. 781-790
    View PDFView articleView in ScopusGoogle Scholar Ragnoli et al., 2020 M. Ragnoli,
    G. Barile, A. Leoni, G. Ferri, V. Stornelli An autonomous low-power LoRa-based
    flood-monitoring system Journal of Low Power Electronics and Applications, 10
    (2) (2020), p. 15 CrossRefView in ScopusGoogle Scholar Raut and Shelke, 2016 Raut,
    V., & Shelke, S. (2016, June). Wireless acquisition system for water quality monitoring.
    In 2016 Conference on Advances in signal Processing (CASP) (pp. 371-374). IEEE.
    Google Scholar Reynders et al., 2018 Reynders, B., Wang, Q., & Pollin, S. (2018,
    June). A LoRaWAN module for ns-3: Implementation and evaluation. In Proceedings
    of the 2018 Workshop on ns-3 (pp. 61-68). Google Scholar Saravanan et al., 2017
    M. Saravanan, A. Das, V. Iyer Smart water grid management using LPWAN IoT technology
    2017 Global Internet of Things Summit (GIoTS), IEEE (2017), pp. 1-6 Google Scholar
    Schneider et al., 2018 T. Schneider, N. Helwig, A. Schütze Industrial condition
    monitoring with smart sensors using automated feature extraction and selection
    Measurement Science and Technology, 29 (9) (2018), Article 094002 CrossRefView
    in ScopusGoogle Scholar Seeedstudio., 2021 Seeedstudio. (2021). Solar Charger
    Shield V2.2. Retrieved 12 Nov 2023 from https://wiki.seeedstudio.com/Solar_Charger_Shield_V2.2/.
    Google Scholar Sherazi et al., 2020 H.H.R. Sherazi, L.A. Grieco, M.A. Imran, G.
    Boggia Energy-efficient LoRaWAN for industry 4.0 applications IEEE Transactions
    on Industrial Informatics, 17 (2) (2020), pp. 891-902 Google Scholar Shirode et
    al., 2018 M. Shirode, M. Adaling, J. Biradar, T. Mate IOT Based Water Quality
    Monitoring System International Journal of Scientific Research in Computer Science,
    Engineering and Information Technology, 3 (1) (2018), pp. 1423-1428 Google Scholar
    Short and Twiddle, 2019 M. Short, J. Twiddle An industrial digitalization platform
    for condition monitoring and predictive maintenance of pumping equipment Sensors,
    19 (17) (2019), p. 3781 CrossRefView in ScopusGoogle Scholar Singh et al., 2020
    R.K. Singh, M. Aernouts, M. De Meyer, M. Weyn, R. Berkvens Leveraging LoRaWAN
    Technology for Precision Agriculture in Greenhouses Sensors, 20 (7) (2020), p.
    1827 Google Scholar Tolentino et al., 2020 L.K. Tolentino, J.R. Añover, C. Cabrera,
    E.J. Chua, C.A. Hizon, J.G. Mallari, E. Fernandez IoT-Based Automated Water Monitoring
    and Correcting Modular Device Through LoRaWAN for Aquaculture International Journal
    of Computing and Digital Systems, 9 (2020), pp. 1-14 View in ScopusGoogle Scholar
    Tolentino et al., 2021 L.K. Tolentino, E.J. Chua, J.R. Añover, C. Cabrera, C.A.
    Hizon, J.G. Mallari, G.A. Madrigal IoT-Based Automated Water Monitoring and Correcting
    Modular Device via LoRaWAN for Aquaculture International Journal of Computing
    and Digital Systems, 10 (2021), pp. 533-544 CrossRefView in ScopusGoogle Scholar
    Vijayakumar and Ramya, 2015 N. Vijayakumar, A.R. Ramya The real time monitoring
    of water quality in IoT environment 2015 International Conference on Innovations
    in Information, Embedded and Communication Systems (ICIIECS), IEEE (2015), pp.
    1-5 CrossRefGoogle Scholar Wang et al., 2019 G. Wang, M. Nixon, M. Boudreaux Toward
    cloud-assisted industrial IoT platform for large-scale continuous condition monitoring
    Proceedings of the IEEE, 107 (6) (2019), pp. 1193-1205 CrossRefView in ScopusGoogle
    Scholar Wu and Khan, 2019 N. Wu, M. Khan LoRa-based internet-of-things: a water
    quality monitoring system 2019 SoutheastCon, IEEE (2019), pp. 1-4 Google Scholar
    Zakaria et al., 2023 M.I. Zakaria, W.A. Jabbar, N. Sulaiman Development of a smart
    sensing unit for LoRaWAN-based IoT flood monitoring and warning system in catchment
    areas Internet of Things and Cyber-Physical Systems, 3 (2023), pp. 249-261 View
    PDFView articleView in ScopusGoogle Scholar Zhang and Thorburn, 2022 Y.-F. Zhang,
    P.J. Thorburn A deep surrogate model with spatio-temporal awareness for water
    quality sensor measurement Expert Systems with Applications, 200 (2022), Article
    116914 View PDFView articleView in ScopusGoogle Scholar Zhao et al., 2022 Z. Zhao,
    Y. Zhou, X. Wang, Z. Wang, Y. Bai Water quality evolution mechanism modeling and
    health risk assessment based on stochastic hybrid dynamic systems Expert Systems
    with Applications, 116404 (2022) Google Scholar Cited by (0) © 2023 The Author(s).
    Published by Elsevier Ltd. Recommended articles Deploying an energy efficient,
    secure & high-speed sidechain-based TinyML model for soil quality monitoring and
    management in agriculture Expert Systems with Applications, Volume 242, 2024,
    Article 122735 Saurabh Bhattacharya, Manju Pandey View PDF DJMF: A discriminative
    joint multi-task framework for multimodal sentiment analysis based on intra- and
    inter-task dynamics Expert Systems with Applications, Volume 242, 2024, Article
    122728 Yao Zheng, …, Pengzhou Zhang View PDF Efficient fuzzy-pruned high dimensional
    clustering with minimal distance measure Expert Systems with Applications, Volume
    243, 2024, Article 122748 Lidia Ghosh, Dipanjan Konar View PDF Show 3 more articles
    Article Metrics Captures Readers: 29 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Expert Systems with Applications
  limitations: '>'
  relevance_score: 0.9090909090909091
  relevance_score1: 0
  relevance_score2: 0
  title: Development of LoRaWAN-based IoT system for water quality monitoring in rural
    areas
  verbatim_quote1: '"This work provides a prototype of a water quality monitoring
    system that can be deployed in rural areas, where access to the Internet and reliable
    power sources may be limited. It utilizes the LoRaWAN network for data transmission,
    which is characterized by long-range communication, low power consumption, and
    low cost."'
  verbatim_quote2: '"The proposed system was subjected to real-world testing at Gambang
    Lake, Malaysia. The results were promising, demonstrating the system''s ability
    to accurately and reliably monitor water quality parameters in real-time."'
  verbatim_quote3: '>'
- analysis: 'The study revolves around the development and testing of an Intelligent
    Emergency Evacuation System (IEES) specifically designed for large and complex
    buildings. The IEES aims to enhance evacuation efficiency and safety in the event
    of emergencies, such as fires, by integrating multiple technologies, including
    IoT sensors, LoRa communication, and an optimized evacuation decision model.


    Central to the system is the Evacuation Decision Optimization Model (EDOM), an
    improved adaptive ant colony algorithm that determines the optimal evacuation
    routes based on real-time data collected from the environment. The EDOM considers
    factors such as the availability and congestion of evacuation routes, as well
    as the location of hazards and the behavior of evacuees. By optimizing the evacuation
    routes, the IEES aims to minimize evacuation time and prevent overcrowding, thereby
    improving safety.


    The IEES utilizes a Wireless Evacuation Indication System (WEIS) to provide dynamic
    guidance to evacuees. The WEIS employs LoRa communication technology to transmit
    evacuation instructions and directions to strategically placed wireless evacuation
    indication signs. These signs use a combination of visual and audio cues to guide
    evacuees along the optimal evacuation routes, even in low-visibility conditions.


    The paper presents the results of an on-site application of the IEES in a subway
    station with three underground floors. The results demonstrate the effectiveness
    of the IEES in optimizing evacuation routes, reducing congestion, and providing
    clear guidance to evacuees. The system was able to guide evacuees to safety within
    the required time frame, even under challenging conditions such as smoke and fire.


    Overall, the study contributes to the development of intelligent emergency evacuation
    systems by proposing a novel approach that combines real-time data collection,
    evacuation route optimization, and wireless guidance. The IEES has the potential
    to significantly improve the safety and efficiency of evacuations in large and
    complex buildings.'
  authors:
  - Jiang X.
  - Zhang P.
  - Zhang X.
  - Yu A.
  - Chen B.
  - Ye C.
  - Song J.
  citation_count: '0'
  description: The complexity and uncertainty of a fire in a large public building
    with complex structure leads to risks during emergency evacuation. Therefore,
    it is crucial to conduct intelligent emergency evacuation according to the situational
    development of the accident environment, the crowding degree of evacuation routes,
    as well as the reliability and flexibility of data transmission in large complex
    building structures. In this study, we develop an Intelligent Emergency Evacuation
    System (IEES) based on the Long Range (LoRa) communication technology and the
    Evacuation Decision Optimization Model (EDOM). The IEES comprises three parts,
    i.e., multi-sensor Fire Monitoring System (FMS), Central Control System (CCS),
    and Wireless Evacuation Indication System (WEIS). The LoRa communication technology
    is used for data transmission among the three parts of the IEES to assist large
    scale evacuation. The EDOM is developed to support the CCS based on the improved
    adaptive ant colony algorithm. To facilitate the evacuation decision optimization,
    the initial node database in the evacuation spatial network is established intelligently
    on the Building Information Modeling (BIM) platform. An on-site application in
    a subway station with three underground floors is conducted. The results demonstrate
    that the IEES can guide people in evacuating from hazardous locations according
    to the state of the fire. Moreover, the phenomena of crowd retention and congestion
    at a few certain evacuation exits are considerably reduced to achieve global optimization
    of the evacuation path and accomplish the objective of intelligent emergency evacuation.
    Furthermore, WEIS can maintain normal operation and have good visibility in the
    fire environment of heat radiation and thick smoke. The IEES can realize dual
    wireless indication of vision and sound perception, and its response time is slightly
    affected by the building structure and transmission distance. The electromagnetic
    signal of electrical equipment and the operational state of vehicles in and out
    of the subway station causes the response time to a relatively larger lag. The
    response time of the IEES is delayed up to 14 ms. Nonetheless, it fulfills the
    requirements of response time of evacuation indication signs stated in the Technical
    Standard for Fire Emergency Lighting and Evacuate Indicating System.
  doi: 10.1016/j.jii.2024.100601
  full_citation: Emergency evacuation based on long range communication technology
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Literature review 3. The
    IEES based on the EDOM 4. Application of the IEES in subway station 5. Results
    and discussion 6. Conclusion CRediT authorship contribution statement Declaration
    of competing interest Acknowledgements Data availability References Show full
    outline Figures (18) Show 12 more figures Tables (4) Table 1 Table 2 Table 3 Table
    4 Journal of Industrial Information Integration Volume 39, May 2024, 100601 Full
    Length Article Emergency evacuation based on long range communication technology
    Author links open overlay panel Xue Jiang a, Peihong Zhang a, Xinwei Zhang a,
    Aoran Yu a b, Bang Chen a, Chenghao Ye a, Jiabao Song a Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.jii.2024.100601 Get rights and content Highlights
    • A building information model spatial network database is established automatically.
    • A multivariate evacuation decision optimization model (EDOM) is proposed. •
    The EDOM achieves multi-objective global optimization in complex emergency scenes.
    • The intelligent emergency evacuation system (IEES) based on the EDOM and long
    range (LoRa) is developed. • A system integrating EDOM and intelligent control
    is used to realize intelligent indication in large building. Abstract The complexity
    and uncertainty of a fire in a large public building with complex structure leads
    to risks during emergency evacuation. Therefore, it is crucial to conduct intelligent
    emergency evacuation according to the situational development of the accident
    environment, the crowding degree of evacuation routes, as well as the reliability
    and flexibility of data transmission in large complex building structures. In
    this study, we develop an Intelligent Emergency Evacuation System (IEES) based
    on the Long Range (LoRa) communication technology and the Evacuation Decision
    Optimization Model (EDOM). The IEES comprises three parts, i.e., multi-sensor
    Fire Monitoring System (FMS), Central Control System (CCS), and Wireless Evacuation
    Indication System (WEIS). The LoRa communication technology is used for data transmission
    among the three parts of the IEES to assist large scale evacuation. The EDOM is
    developed to support the CCS based on the improved adaptive ant colony algorithm.
    To facilitate the evacuation decision optimization, the initial node database
    in the evacuation spatial network is established intelligently on the Building
    Information Modeling (BIM) platform. An on-site application in a subway station
    with three underground floors is conducted. The results demonstrate that the IEES
    can guide people in evacuating from hazardous locations according to the state
    of the fire. Moreover, the phenomena of crowd retention and congestion at a few
    certain evacuation exits are considerably reduced to achieve global optimization
    of the evacuation path and accomplish the objective of intelligent emergency evacuation.
    Furthermore, WEIS can maintain normal operation and have good visibility in the
    fire environment of heat radiation and thick smoke. The IEES can realize dual
    wireless indication of vision and sound perception, and its response time is slightly
    affected by the building structure and transmission distance. The electromagnetic
    signal of electrical equipment and the operational state of vehicles in and out
    of the subway station causes the response time to a relatively larger lag. The
    response time of the IEES is delayed up to 14 ms. Nonetheless, it fulfills the
    requirements of response time of evacuation indication signs stated in the Technical
    Standard for Fire Emergency Lighting and Evacuate Indicating System. Previous
    article in issue Next article in issue Keywords Adaptive ant colony algorithmEvacuation
    decision optimization modelIntelligent indicationLong range communication technologyCrowd
    retention and congestion 1. Introduction The development in science and technology
    and the intensification of urbanization have led to the continuous emergence of
    densely populated public places, such as large shopping malls, subway stations,
    stadium, etc., which are primarily characterized by their large space, complex
    internal structure and layout, and high density of crowd. Once encountering natural
    disasters or accidents such as fire, explosion and gas leakage, etc., as well
    as public safety events such as terrorist attacks, etc., the safety and availability
    of evacuation routes, safety exits, and refuge spaces are seriously threatened
    due to the catastrophic, complex, and random nature of emergencies, as well as
    the complex and variable environmental conditions. The emergent evacuation in
    large public places with dense population faces serious challenges, where the
    emergency evacuation indication system (EEIS) is a crucial system that acts as
    an internal guide for a large-scale emergency evacuation. However, up to now,
    a majority of the EEIS are stationary directions, which cannot be intelligently
    and dynamically changed according to the development of the emergency situation,
    and the conjunction of crowds. These systems can misdirect the crowd to hazardous
    areas or lead to overcrowding of evacuation routes and exits [1], [2], [3]. Due
    to ineffective emergency evacuation guidance, group fatalities and injuries have
    occurred frequently resulting in serious casualties. On September 20, 2008, a
    fire broke out at Shenzhen Dance King Club, resulting in 43 deaths and 88 injuries
    due to the difficulty in finding the right safety exit. At 23:35pm on December
    31, 2014, huge density of tourists and citizens gathered on the Bund of Shanghai
    to welcome the New Year, bad restriction in pedestrian flow volume and the counter
    flow in a stair are the mean reasons resulting in a stampede incident that resulted
    in 36 deaths and 49 injuries. On the evening of October 29, 2022, a serious stampede
    accident occurred in Halloween activities in Itaewon-dong, Longshan District,
    Seoul, South Korea, the high density of people and the sloping narrow road are
    the direct causes resulting in more than 150 deaths. At present, although the
    so-called intelligent evacuation indication signs have been installed in a few
    practical projects, most of them are only signs with dual indication directions
    indicating two available near exits without the support of the evacuation decision
    optimization model, and cannot make optimal decisions based on the development
    of accidents, let alone achieve the diversion of dense crowds [4,5]. In this study,
    based on the definition of the time cost function of emergency evacuation in combination
    with the degree of personnel detention and the walking velocity in the equivalent
    length of evacuation routes in accidental surroundings, an improved adaptive ant
    colony algorithm (IAACA) is developed by considering the effect of emergent accidental
    situations and the degree of congestion on the evacuation route or exit. The Evacuation
    Decision Optimization Model (EDOM) based on the IAACA was embedded in BIM platform
    to achieve the global optimization goal of balancing the utilization rate of each
    exit and completing the entire evacuation in the shortest evacuation time. Moreover,
    due to the dynamic progress of accident environment, it is necessary to temporarily
    add emergent rescue facilities, i.e., evacuation indication signs, gas sensors,
    etc., in some key areas of evacuation route. Wireless data transmission mode of
    emergency evacuation indication system is the key technology to help realize the
    intelligent large scale of evacuation in emergent situations. In this study, the
    Intelligent Emergency Evacuation System (IEES) was developed based on the Long
    Range (LoRa) communication technology and the EDOM. The IEES consisted of a three-level
    linkage system, i.e., Fire Monitoring System (FMS), Central Control System (CCS),
    and Wireless Evacuation Indication System (WEIS). The LoRa communication technology
    is used for data transmission among the three parts of the IEES, which ensured
    the reliability of long-distance data transmission and layout flexibility of the
    system. The CCS was integrated with the EDOM for routes planning on the base of
    the fire hazard identification detected by the FMS, and send the emergency evacuation
    optimal decision to the WEIS. Finally, the effectiveness of IEES is verified by
    taking an on-site application in a subway station with three underground floors.
    It issued the visual and sound evacuation indication command through the LoRa
    and EDOM-based WEIS, which can intelligently guide personnel evacuation away from
    the fire hazard and congested evacuation routes or exits, and achieve the global
    evacuation decision optimization objectives. The rest of this paper is structured
    as follows. Section 2 reviews the current research literature on decision optimization,
    wireless communication technology and emergency evacuation indication systems.
    Section 3 presents the IEES framework and details the structure, working principle,
    workflow, support algorithm and LoRa communication technology of CCS. Section
    4 presents the application of IEES in the subway station under the conditions
    without accident and with a fire, which includes establishing the Spatial Network
    Database (SND) based on BIM, determining EDOM''s parameters, EDOM based on the
    improved adaptive ant colony algorithm and the evacuation indication scheme under
    different conditions in the subway station. Section 5 introduces the on-site application
    results in the subway station and discusses the effectiveness of the EDOM and
    the WEIS. Section 6 concludes the paper. 2. Literature review 2.1. Decision optimization
    Decision optimization is a topic of concern in the fields of route planning [6],
    [7], [8], [9], [10], emergency evacuation [11,12], vehicle transportation and
    dispatching [13], [14], [15], [16], etc. In recent years, the optimization decision
    problem has gradually expanded to automation, intelligence and other emerging
    fields [17], [18], [19], [20]. Heuristic algorithms are extensively used as advanced
    optimization algorithms in the study of the decision-making optimization problem
    of personnel evacuation path in emergencies. A few commonly used heuristic algorithms
    are particle swarm algorithm [21,22], genetic algorithm [23,24] and ant colony
    algorithm [25,26]. Liu et al. combined the extended social force model and the
    improved artificial bee colony algorithm to propose grouping and exit selection
    strategies considering the effect of herd behavior on evacuation. But the exit
    congestion and exits location cannot be dynamically updated [27]. Kurdi et al.
    introduced a balanced evacuation algorithm based on cellular automata model to
    reduce excessive congestion around individual evacuation routes or exits considering
    the effect of congestion caused by herd behavior during evacuation process. However,
    the influence of obstacle and exit size on evacuation was not considered. [28].
    The effect of evacuation width was considered to investigate the relationship
    between the width of evacuation routes and evacuation time using the FDS + Evac
    software, but the crowed congestion at the exit cannot be taken into account [29,30].
    Lee et al. proposed a multi-exit evacuation algorithm based on the principle of
    shortest evacuation time and studied the evacuation optimization scheme of large
    subway stations with multiple exits. However, the impact of fire and other accidents
    on large multi-story buildings was not considered [31]. Khalid et al. introduced
    the concept of dynamic evacuation plan based on the artificial immune algorithm
    [32]. In this model, personnel in the environment of a fire or emergency adjust
    the evacuation route and attempt to complete the evacuation within the shortest
    time with the growth of the hazardous environment. However, the helpful information
    for evacuation decision is limited and ambiguous in emergent situations, which
    results in the congestion of crowds in familiar or hazardous routes and exits.
    The phenomenon of “faster is slower” is frequently observed in emergency evacuation
    situations [33,34], which has become a fatal factor to the integral optimization
    of the complex evacuation process. The increase in the complexity of optimization
    problems has led to the utilization of the ant colony algorithm as an effective
    solution owing to its strong integral optimization ability and fast calculation
    speed. Fang et al. improved the conventional ant colony algorithm, and adopted
    the hierarchical heuristic search strategy and pheromone update strategy, which
    significantly improved the search efficiency of route optimization. But the algorithm
    is not suitable for the evacuation routes optimization in space [35]. It was conducive
    to the realization of optimization decisions for practical applications. Zong
    et al. proposed an artificial bee colony algorithm considering obstacles and congestion
    to simulate the evacuation dynamics of indoor evacuation problems with a large
    number of evacuees, but it needs to be improved to avoid congestion at exit and
    achieve better effects [36]. The same group of evacuees might need different required
    safe escape time (RSET) for evacuation routes or exits with the same geometrical
    length and width in different accidental situations. At present, although many
    scholars have made a lot of research and contributions to the route optimization
    in the process of emergency evacuation, the influence of the emergency accidental
    situation and the degree of crowding on the evacuation routes or exits in large
    public places remains to be further studied. Therefore, on the premise of ensuring
    the safety of large scale evacuees, how to improve the integral evacuation efficiency
    and avoid congestion of large-scale emergency evacuation according to the emergency
    situations on site is a key problem worthy of our study. In this study, the time
    cost function is established based on the definition of the equivalent length
    of evacuation routes in emergency situations and congestion personnel volume through
    the evacuation exits of certain width. Hence, the adaptive ant colony algorithm
    is accordingly improved. Finally, the EDOM based on the improved adaptive ant
    colony algorithm is developed, which can significantly improve the integral evacuation
    efficiency and crowd safety for large-scale crowd emergency evacuation. 2.2. Wireless
    communication technology With the passing of time, the IoT is increasingly recognized
    as the development trend of communication technology [37]. The IoT technology
    is gradually applied in various fields such as transportation, logistics, location
    and fire protection. Pang et al. developed a Location Aided Commissioning system
    based on Ultra-Wide Band (UWB) to assist the debugging of building automation
    system and quickly complete positioning [38]. Most of the existing evacuation
    systems utilize Wi-Fi, Bluetooth, and other IoT technologies for wireless transmission
    [39,40]. The transmission distance is less than 300 m, which cannot fulfill the
    requirements of large-scale and long-distance communication. Long Range (LoRa)
    is an ultra-long distance wireless communication technology based on spread spectrum
    technology and has a transmission distance of approximately 20 km. It integrates
    digital spread spectrum, digital signal processing, forward error correction coding,
    and other technologies. Spread spectrum communication technology is used for data
    transmission in the physical layer to improve the sensitivity and reliability.
    LoRa communication technology has advantages, such as long-distance signal transmission,
    ultra-low power consumption, low-cost, and wide area coverage, that cannot be
    simultaneously realized in conventional IoT communication technology [41]. It
    is widely applied in the field of wireless communication control. Parvez et al.
    proposed a development architecture of LoRa gateway communication technology using
    artificial intelligence [42] to implement a wireless system for maintenance and
    remote monitoring of sensor equipment, which reduced the latency and complexity
    of communication. Kanakaraja et al. used LoRa communication technology to establish
    communication between no-signal areas and remote areas with limited information
    transmission [43]. Prasanna et al. used LoRa as a highly reliable data transmission
    tool between forest fire detection system and control system [44]. Li et al. applied
    LoRa communication technology in irrigation systems, providing wireless, low-power,
    low-cost, easy-to-deploy and intelligent solutions over traditional irrigation
    systems [45]. LoRa communication technology can realize long-distance and large-scale
    regional communication, but its application in the field of emergency rescue and
    evacuation under emergencies is scarce. In the state of emergency, an intelligent
    emergency evacuation system based on LoRa communication technology realized long
    distance and wireless data transmission among fire monitoring, central control
    and emergency evacuation indication system. The reliability of long-distance data
    transmission and layout flexibility of the intelligent emergency evacuation system
    can be realized. 2.3. Emergency evacuation indication system The emergency evacuation
    indication system can assist personnel to quickly determine the escape route and
    find the safety exit during the evacuation process. The enhancement of guiding
    role in an emergency environment is crucial. Fujii et al. [46]and Fridolf [47,48]
    et al. [5,46] studied the walking speed of personnel in a smoky environment and
    found that the setting of emergency evacuation signs aided in the rapid determination
    of evacuation routes during the process of evacuation. Kubota et al. studied the
    effect of different arrow types on evacuation route selection in combination with
    Virtual Reality technology, wherein the direction indication of left or right
    was effectively understood for efficient evacuation [49]. Galea et al. proved
    that a single green flashing arrow can be easily understood. Additionally, the
    voice alarm information can enable the sign to attract the attention of the personnel
    and effectively guide evacuation [50]. Research on the indication mode and type
    of emergency evacuation indication sign has laid the theoretical foundation for
    efficient personnel evacuation. In the case of contemporary systems, the direction
    is indicated primarily by a green arrow on the left, right, or both sides. However,
    the emergency evacuation indication system commonly used in engineering field
    has a fixed direction and wired indication system, which points to the nearest
    exit. The direction of evacuation guidance and strategy cannot be adjusted according
    to the development of emergency events in such systems. It has an imminent danger
    that it might lead people to a hazardous location when the evacuation route is
    inaccessible, i.e., a fire breaks out near the originally safety exit. This highlights
    the importance of dynamic and intelligent evacuation indication system to ensure
    rapid and safe evacuation. Research on dynamic and intelligent evacuation indication
    system is primarily divided into two aspects. On the one hand, the evacuation
    route optimal algorithms are proposed to determine the direction of dynamic evacuation
    sign [1,51]. Cho et al. proposed an automatic direction setting algorithm, which
    can plan the routes to the nearest exit from an arbitrary location inside the
    building [4]. Fu et al. proposed a method based on the Building Information Modeling
    (BIM) platform, which automatically and dynamically determined the direction of
    exit signs based on the principle of reaching the nearest accessible exit [5].
    However, the above mentioned optimal algorithms do not consider the effect of
    the accidental environment and the crowd congestion, and do not realize the data
    transmissions between the fire detectors and evacuation indication signs. On the
    other hand, information transmissions among the optimal evacuation route, fire
    detectors, and evacuation indication signs are realized using advanced technologies
    such as the Internet of Things (IoT). Ma et al. developed a building fire emergency
    management system on BIM based on the Dijkstra algorithm, and the evacuation route
    was transmitted to the evacuees through short messaging service [52]. Khan et
    al. proposed an intelligent fire evacuation system based on the wireless communication
    between the fire detector and control server integrated with the A* algorithm-based
    optimal evacuation route algorithm [39]. Chou et al. realized optimum path indication
    in real time for dynamic building fire rescues using wireless sensors and visual
    guidance based on Bluetooth technology [40]. However, the wireless signal transmission
    of Wi-Fi or Bluetooth technology is inadequate in large and complex structures,
    and areas with various interferences such as other wireless signals. Therefore,
    it is particularly important to apply the long-distance wireless communication
    technology to the signal transmission of the fire evacuation system. Table 1 lists
    the representative references mentioned above and compares them in terms of methods,
    optimization algorithms, emergency evacuation signs, communication modes and contributions.
    Table 1. Research status of emergency evacuation indication system. Author Method
    Optimization algorithm Emergency evacuation sign Communication mode Contribution
    Jun Kubota [49] Virtual reality (VR) scenario experiment —— The arrow type of
    the sign —— Arrows pointing to left or right are better understood and guide people
    to evacuate more quickly. Edwin R. Galea [50] Full-scale evacuation trials ——
    The effectiveness of active dynamic sign —— A single green flashing arrow and
    the voice alarm information can enable the sign to attract the attention of the
    personnel and effectively guide evacuation. Jehyun Cho [4] Simulation Dijkstra''s
    algorithm, the shortest safe evacuation routes —— —— An automated direction setting
    algorithm for a smart exit sign system can plan the routes to the nearest exit
    from an arbitrary location inside the building. Adriana Balboa [1] Scenario experiment
    Agent-based evacuation model, the minimum evacuation time Tablets as actuators
    HTTPS and URL Only 75 % of participants agreed that signals were conspicuous and
    understandable and 50 % reported that the system helped find their way. Meiqing
    Fu [5] Simulation test A balanced routing algorithm, the shortest safe evacuation
    routes and availability status of the exit The exit sign with negative direction
    is presented. Wifi Automated determination of exit sign direction can efficiently
    calculate the recommended directions of an intelligent dynamic exit sign system
    to respond to a fire emergency with real-time information. Afsana Khan [39] Experiment
    A* search algorithm, the shortest safe evacuation Laser light instead of LED lights
    WiFi An IoT Based Intelligent Fire Evacuation System can effectively guide people
    along an evacuation path in case of fire. Juisheng Chou [40] Case simulation Dijkstra''s
    algorithm, the locations of firefighters and trapped occupants A handheld transceiver
    Bluetooth Real-time updates for optimal path planning in a dynamic environment
    provide fire departments with useful information regarding the fire site in real
    time. To sum up, although the concept of intelligent evacuation indication system
    has been proposed and some research has been conducted, there are still some shortcomings
    in path optimization and communication technology. Considering the impact of congestion
    on personnel evacuation in accident environments, the EDOM based on the IAACA
    is proposed for large public place, which avoids congestion during the evacuation
    process, finishes the global evacuation in the shortest time, and achieves a balanced
    utilization of each safe available exit. At the same time, considering the effects
    of long-distance transmission, convenient temporary addition, and mobility of
    the intelligent evacuation indication system, LoRa communication technology is
    used as the information transmission tool of the IEES, and the IEES based on the
    EDOM and the LoRa communication technology has been developed. 3. The IEES based
    on the EDOM 3.1. Framework of the IEES The intelligent emergency evacuation system
    of large buildings is affected by the complexity and diversity of building structures.
    The collection of fire information in time and completion of evacuation decision
    are crucial. An intelligent emergency evacuation system based on evacuation decision
    optimization and communication technology can guide personnel to avoid dangerous
    locations and congested routes according to the actual situation of the site,
    and guide all evacuees to escape from the accident site efficiently and safely.
    The IEES was constructed by three functional parts, Fire Monitoring System (FMS),
    Central Control System (CCS), and Wireless Evacuation Indication System (WEIS).
    LoRa communication technology is used to carry out three-level linkage control
    of the FMS, CCS and WEIS to achieve timely, effective, and ultra-long distance
    intelligent evacuation wireless indication. And it can exhibit stronger anti-interference
    performance in complex buildings or environments, which consist of multiple obstacles,
    doors, and windows. The framework of the IEES is shown in Fig. 1. The FMS combined
    the dual action of the temperature and smoke sensors to collect accident field
    data in real time. It determined the occurrence of a fire when the data monitored
    by a sensor exceeded the threshold value. The location of the ignition point was
    immediately transmitted to the CCS through LoRa communication technology once
    a fire was confirmed and a voice alert was issued. The CCS embedded with the EDOM
    based on BIM platform optimized the available evacuation route in the building
    when it received an alarm, and determined the direction information of each wireless
    evacuation indication sign. Simultaneously, the determined direction information
    was transmitted to the WEIS by LoRa communication technology and the WEIS could
    intelligently guide the evacuees to escape safely and efficiently based on the
    double indication methods of vision and sound. Download : Download high-res image
    (1MB) Download : Download full-size image Fig. 1. System''s main framework. 3.2.
    The EDOM based on improved adaptive ant colony algorithm The behavioral characteristics
    of evacuees in an emergent accident environment are similar to the foraging behavior
    of the ant colony system. The difference, however, is that once the evacuees determine
    the safety exit, they do not immediately terminate the path traversal process.
    They usually continue along the defined routes until they reach the safe area
    as quickly and safely as possible according to the optimal routes. On the other
    hand, the evacuees spontaneously adjust to the evacuation action strategy according
    to the environmental status of the accident site, the available and congestion
    status of each evacuation route or exit. The fundamental objective is to realize
    the shortest time for the evacuees to reach a safe location using the principle
    of least restriction and the highest degree of safety. Therefore, the equivalent
    length of the evacuation path was defined on the premise of considering the development
    in the situation of the accident environment such as smoke temperature, concentration,
    and visibility, and their effect on the evacuation behavior. Furthermore, the
    search mechanism and information updating strategy of the adaptive ant colony
    algorithm were adjusted and improved using the retention state, which evacuees
    stay at the exit, accumulate more than a certain time and cannot continue to flow
    and leave on time in a state of emergency. Finally, an EDOM based on the adaptive
    ant colony algorithm was established and the optimum decision of large-scale emergency
    evacuation in an accident environment was determined. 3.2.1. The equivalent length
    of the evacuation route The RSET through the route with the shortest geometric
    length is not necessarily the smallest if we consider the effect of the accidental
    environment status on the evacuation availability of the evacuation routes, such
    as the toxicity, high temperature, and low visibility of flue gas in fire. Accordingly,
    the geometric length of the evacuation route is revised and the concept of the
    equivalent length (deij) is defined as shown by Eq. (1) to analyze the walking
    time of evacuees in accident environment. (1) where v0 denotes the normal walking
    speed of the personnel on a flat straight route, m/s; vs denotes the practical
    waking speed of people on the route considering route structure parameters, such
    as slop and curvature, and vs is less than or equal to v0 without considering
    the effect of fire situation such as smoke, m/s. Additionally, Leij denotes the
    geometrical length of the evacuation route, m; and Mb denotes the activity index
    of people in fire and accident environments, which is determined by the visibility,
    temperature, and smoke concentration in the environment as shown in Eq. (2) [53].
    (2) where, f1(V) denotes the effect of the shading coefficient (V) of smoke in
    the accident situation, as shown in Eq. (3) [53,54]. Note that f2(S) denotes the
    effect of the smoke concentration (S) measured by the smoke sensor in the situation
    and is illustrated in Eq. (4) [54]. Whereas, f3(T) denotes the effect of the ambient
    temperature (T) measured by the fixed temperature sensor, and its relation is
    shown in Eq. (5) [55]. (3) (4) (5) Based on Eqs. (2)–(5), in the case of emergency
    situations such as fire, with the increasing shading coefficient (V) of the smoke,
    smoke concentration (S), and ambient temperature (T), the Mb is always less than
    1. Therefore, the practical walking speed in emergent accident situations (which
    equals to vs × Mb) is less than the normal walking speed (v0). Accordingly, the
    equivalent length (deij) of the route in emergent situations is longer than that
    of its geometric length (Leij). 3.2.2. Time cost function of the evacuation route
    The global optimization target is to evacuate all the evacuees out of hazardous
    areas in the case of large-scale evacuation decision. Therefore, the time cost
    function (ueij) is defined as the sum of the walking time on the equivalent length
    (deij) of the evacuation route and the flowing time out of the route exit with
    a certain width of all the stranded personnel, and is expressed by Eq. (6). (6)
    where, meij denotes the number of stranded people in the route, per; ωeij denotes
    the width of the exit route, m; and ξeij denotes the flow rate of the route exit,
    that is, the number of evacuees who pass the unit evacuation length in a unit
    time, per/(m•s). It can be observed from Eq. (6) that the same evacuee requires
    the same walking time to travel through the two evacuation routes of the same
    equivalent length (deij) in the same building. Additionally, the time cost for
    the same route in emergent situations is greater than that in normal situations
    under the influence of visibility, temperature, concentration of smoke, and personnel
    density. 3.2.3. Evacuation route selection rules According to the pheromone amount
    on each route and the heuristic information of the route during the evacuation
    process, the evacuees select the evacuation route on the next time step using
    the state transition rule expressed by Eq. (7) [56]: (7) (8) where, allowedk is
    a set of nodes that have not been visited before; τeij(t) denotes the pheromone
    of evacuation route eij(si, sj) from node si to node sj at time t; ηeij(t) denotes
    the heuristic function, and its expression is the reciprocal of time cost function,
    as shown by Eq. (8); and α denotes the information heuristic factor, which represents
    the relative importance of trajectories. Herein, α reflects the degree of information
    accumulated by evacuees in the process of evacuation. A higher value of α represents
    that the evacuee is inclined to select the path taken by others and cooperation
    of people amongst themselves. Moreover, β denotes the expectation heuristic factor,
    which represents the importance of heuristic information in the path selection
    during evacuation movement. A larger value of β implies that the state is closer
    to that of the optimal path. Additionally, q denotes a random number distributed
    in the interval [0,1]. When an evacuee at node i selects the next node j, a random
    number q is selected.; q0 denotes a parameter of 0 ≤ q0≤1, which determines the
    relative importance between using prior knowledge and exploring new routes; and
    J denotes a random variable selected according to the probability distribution
    determined by Eq. (9) [57]. (9) 3.2.4. Pheromone update rules The pheromone of
    each node evaporates over time, leaving new pheromones for evacuees as they pass
    through the node. The probability of route selection of evacuees is proportional
    to the concentration of pheromone, which makes pheromone an effective guiding
    mechanism. Owing to the impossibility of unlimited accumulation of evacuees in
    each route, the residual information should be updated after each person takes
    a step. This renewal strategy imitates the characteristics of human brain memory.
    The original information stored in the brain is gradually diluted or forgotten
    over time, whereas new information is continuously stored in the brain. Therefore,
    the pheromones on the route eij at the time step (t + 1) can be updated according
    to Eq. (10). (10) where, deij(t) is the equivalent length of the evacuation route
    at time t; n denotes the number of iterations; U denotes the situation that traversal
    is terminated when 1/se of the total evacuees have chosen the same path, wherein
    se equals to the total number of available safety evacuation exits. The pheromone
    amount τeij(t + 1) at the next time step should be significantly reduced to tend
    to the average of the pheromone amount of each route. Thus, the evacuees can strongly
    explore the route that is not currently selected by the crowd to overcome the
    strong effect of herd behavior and avoid the occurrence of congestion during the
    process of evacuation. In addition, the reduction of pheromone amount is related
    to the equivalent length of the route, deij(t), and the degree of information
    reduction on the route is greater when the deij(t) is shorter. When the deij(t)
    is longer, the degree of information reduction on the path is smaller. The concentration
    of pheromone amount can be prevented while maintaining a good pheromone amount
    in each route. At the same time, the update of pheromone has a greater impact
    on the optimal solution, and the route of the optimal solution has a higher concentration
    of pheromones, so that the evacuees can find the optimal evacuation path faster.
    Different pheromone reduction amounts between the minimum and the maximum pheromone
    amount are tried, and finally determined that the pheromone reduction amount of
    10/deij(t) can achieve a better balance between the search speed and diversity
    of the results, and find the optimal evacuation routes. Otherwise, when the number
    of evacuees selecting the current route is lower, the pheromone amount τeij(t
    + 1) at the next time step should be increased so that more evacuees can explore
    the clearer route. However, if the increase of pheromone amount is too large,
    it can lead to the retention phenomenon on the route. Different increment of pheromones
    are tried, 1/deij(t) is adopted here. At the initial moment t = 0, the pheromone
    amount of each route is equal, . Simultaneously, the global pheromone update is
    performed according to Eqs. (11) and (12) to ensure that the evacuees can complete
    the evacuation in the shortest time and achieve the goal of global optimization
    [58]. (11) (12) where, denotes the pheromone increment of the optimal route eij
    (si,sj); Lgb denotes the equivalent length of the current optimal solution; and
    ρ (0,1) denotes the pheromone volatility coefficient. Considering the global searching
    ability and the convergence speed of the algorithm, the ρ value is adaptively
    changed according to Eq. (13). (13) where, a is a constant; and ρmin denotes the
    minimum value of ρ, which can prevent the convergence speed of the algorithm from
    being reduced if ρ is significantly small. A larger value of ρ is required at
    the initial stage of the solution to enhance the searching speed of the ant colony
    algorithm. The increase in the number of cycles indicates that the process has
    reached an extreme point if the optimal value of each time does not considerably
    differ. It does not have to be globally optimal. In this case, the volatile coefficient
    (ρ) should be reduced to improve the search ability of the algorithm. The update
    of the number of evacuees is related to the capacity of each node. If a node is
    selected by more evacuees, its traffic capacity will be reduced, indicating that
    the node may be congested. In the improved adaptive ant colony algorithm, a counter
    is used to record the number of evacuees at each node during the evacuation process.
    When each evacuee elects a node during evacuation, the evacuee counter on that
    node increases. The number of evacuee counter is a dynamically adjusted data structure,
    which will be dynamically adjusted and updated with the evacuation process. 3.2.5.
    The workflow of the EDOM The EDOM improved the pheromone update rules of ant colony
    algorithm considering the influence of crowd retention and congestion on evacuation
    in accident environment. After receiving the ignition location from the FMS, the
    EDOM determines the equivalent length of the path according to the accident environment
    information received from the smoke sensor and temperature sensor, and confirms
    the time cost function based on the number of evacuees at each node at the initial
    moment. Secondly, the route of the next node is selected for each node, and the
    local pheromone and the number of evacuees at each node are updated. Then, judge
    whether the evacuee has reached the exit. Global pheromone is updated if the exit
    is reached. Otherwise, routes selection is continued. Finally, judge whether the
    maximum number of iterations is reached. If the maximum number of iterations is
    reached, the optimal evacuation route is determined. Otherwise, re-initialize
    the parameters to select the routes. The workflow of the EDOM is shown in Fig.
    2. Download : Download high-res image (304KB) Download : Download full-size image
    Fig. 2. The workflow of the EDOM. 3.3. The CCS developed based on the EDOM The
    Central Control System (CCS) is the core of the IEES. The CCS primarily comprises
    radio monitoring equipment, embedded microprocessor, output control equipment,
    and LoRa communication technology. In the whole system, the CCS mainly plays the
    role of receiving fire information, planning evacuation routes, and sending the
    evacuation indication commands. The CCS plan the optimized evacuation routes based
    on the EDOM. To facilitate the EDOM, the building Spatial Network Database (SND)
    is established intelligently on the Building Information Modeling (BIM) platform.
    The room area, evacuation routes and exits inside the building were automatically
    identified according to the different types, structural characteristics, and actual
    situation of buildings. The evacuation route nodes around each room area were
    screened to establish the database of the evacuation spatial network nodes intelligently.
    The establishment of the SND is shown in Fig. 3. The SND information can be saved
    to the intelligent evacuation module by default through the export database button
    for further calculation in EDOM. The SND comprised source, intermediate, sign,
    and root nodes. The source node is the starting node in the evacuation action,
    where the flows are only away-from or out of the node. The root node is the node
    that represents the safety exits of the building, where there are only entering
    flows. The intermediate node is the transportation or link node between the source
    and root nodes in the evacuation space. The sign node is the node where the wireless
    emergency evacuation indication sign is located. Download : Download high-res
    image (199KB) Download : Download full-size image Fig. 3. Flowchart for establishing
    SND. According to the intelligent SND and the ignition location received by radio
    monitoring equipment from the FMS, the evacuation route planning and the direction
    of each wireless evacuation indication sign can be determined through EDOM. The
    optimal path and indication direction information are saved. At the same time,
    the direction information is sent to each wireless evacuation indication sign
    through the output control system to complete the global optimization of the emergency
    evacuation route and the intelligent evacuation guidance. The flow chart of the
    CCS is shown in Fig. 4. Download : Download high-res image (237KB) Download :
    Download full-size image Fig. 4. Flow chart of the CCS. 3.4. The WEIS based on
    LoRa communication technology A Wireless Evacuation Indication System (WEIS) based
    on LoRa communication technology was developed. The system comprised a power supply,
    information processing, visual display, and voice indication modules, and the
    LoRa communication technology. The WEIS used the information processing module
    to control the visual display module through dynamic scanning. In contrast to
    the existing emergency evacuation indication signs, the visual display module
    of the proposed wireless evacuation indication sign was composed of ten identical
    8 × 8 bright green LED dot lattices and received the direction instruction transmitted
    by the CCS through the LoRa communication technology. A voice indication module
    was added to assist evacuation to avoid the inability of evacuees to identify
    the indicated direction due to the low visibility owing to the smoke of the fire.
    It realizes dual wireless indication of vision and sound perception based on the
    global EDOM results. The physical figure of WEIS in different directions is shown
    in Fig. 5. In addition, the system adopted two forms of centralized power supply
    and standby power supply to provide electricity in the event of power failure
    in emergencies. Once the centralized power supply could not be applied in the
    building due to external factors, the standby power supply was started immediately
    to ensure the normal operation of the system. Download : Download high-res image
    (475KB) Download : Download full-size image Fig. 5. Wireless evacuation indication
    sign. 4. Application of the IEES in subway station In order to reflect the integrity
    of the system and the transmission performance of the system, IEES is applied
    in the subway station with three underground floors. First, the SND is automatically
    established according to the internal structure of the subway station. Then, the
    EDOM parameters, i.e. the information heuristic factor (α), expectation heuristic
    factor (β), and pheromone volatility coefficient (ρ) are determined by comparison
    of the optimized evacuation routes and the iteration number. Finally, the emergency
    evacuation decision optimization and the on-site indication scheme of WEIS are
    achieved in two scenarios before and after the fire in the subway station. 4.1.
    Establish SND based on BIM An on-site application was performed in a three-story
    subway station to test the overall performance of the IEES. The subway station
    is located in B2–B4 under the ground floor, wherein B2 is the station hall floor
    with a public area of approximately 5300 m2. There were eight evacuation exits
    numbered A–H, among which, exits A, B, C, F, and G directly lead to the ground,
    whereas exits D, E, and H lead to the underground business district on B1 floor.
    Floors B3 and B4 had a similar structure and represented the ascending and descending
    platform layers, respectively. Floors B3 and B4 had public areas of 4970 and 4600
    m2, respectively. The width of exits and stairs in the subway station are shown
    in Table 2. Table 2. The width of evacuation exits and stairs in the subway station.
    Number of evacuation exit A B C D E F G H Empty Cell Empty Cell Width (m) 5 5
    3.8 4.6 2.3 5 5 4 Number of stairs on floor B4 to B3 A3 B3 C3 D3 E3 F3 G3 H3 I3
    J3 Width (m) 1.5 1.5 2 1.9 1.95 1.95 1.95 1.95 1.9 1.8 Number of stairs on floor
    B3 to B2 K2 L2 M2 N2 O2 P2 Q2 Width (m) 1.9 1.9 2 2 2 2 2 According to the actual
    structural characteristics of the subway station, the Revit platform was used
    to develop a 3D building model and identify evacuation nodes. On the customized
    BIM platform, the SND of the subway station was automatically established. The
    database had 823 nodes, which included 89 source nodes, 549 intermediate nodes,
    177 sign nodes, and 8 root nodes. The eight root nodes represented the eight evacuation
    exits of the subway station. The database is shown in Fig. 6. It exhibits the
    attributes of nodes, location information, and the attributes of the adjacent
    nodes. Download : Download high-res image (547KB) Download : Download full-size
    image Fig. 6. Part of the database. The number of evacuees mainly affects the
    solution space size of the model, and then affects the global search ability,
    anti-interference ability and stability of the model. According to the characteristics
    of the selected subway station, which is located in the business district and
    is a transfer station, the flow of people in the rush hour is large. Considering
    the condition that the subway station is in the peak state of passenger flow and
    there is a train stopping at the station, it is determined that the number of
    evacuees on each floor is 1470, and all the evacuees are evenly distributed in
    each node. 4.2. Determination of EDOM''s parameters In the EDOM, the information
    heuristic factor (α), expectation heuristic factor (β), and pheromone volatility
    coefficient (ρ) are crucial parameters that affect the performance and efficiency
    of the model. The common adjustable scale is as follows [59]: (1) 0 ≤ α ≤ 5; (2)
    1 ≤ β ≤ 5; (3) 0.1 ≤ ρ ≤ 0.99. According to different parameter combinations,
    the evacuation path under the accident-free state was optimized considering B2
    of subway station as an example. The optimal parameter combination was obtained
    by analyzing and comparing the optimization results. The paths of most nodes were
    the same with different parameter combinations for 1000 iterations, whereas the
    paths of individual nodes were different. Table 3 lists the path lengths of eight
    nodes calculated using different parameter combination, wherein the optimum path
    lengths of eight nodes with different parameter combinations are highlighted in
    yellow background. The longest path length refers to the maximum path length of
    all nodes with different parameter combinations, and Nc denotes the number of
    iterations required to determine the optimum solution. Table 3. Path length of
    different nodes in different parameter combinations. α β ρ Path length of different
    nodes (m) Longest path length (m) Nc 61 77 97 125 138 160 175 198 0.5 0.5 0.98
    74.83 80.14 35.94 48.32 45.31 65.87 26.12 74.71 106.82 963 0.5 1 0.98 74.83 81.81
    35.94 46.21 49.86 66.57 25.44 74.71 137.34 902 0.5 2 0.98 50.00 42.89 35.94 46.21
    45.31 66.57 25.44 46.87 136.66 896 0.5 5 0.98 50.00 42.89 28.68 46.21 45.31 66.57
    25.44 46.87 131.40 970 1 0.5 0.98 88.91 84.72 37.41 48.32 45.31 81.14 26.12 77.61
    137.34 966 1 1 0.98 91.83 86.38 37.41 44.60 45.31 65.87 26.12 82.17 137.34 719
    1 2 0.98 50.00 81.81 35.94 46.21 45.31 62.28 26.12 85.78 137.34 871 1 5 0.98 48.34
    42.89 28.68 46.21 45.31 66.57 25.44 46.87 143.35 946 2 0.5 0.98 50.00 86.38 28.68
    44.60 45.31 101.36 26.12 90.35 106.82 978 2 1 0.98 79.39 86.38 37.41 48.32 45.31
    101.36 26.12 92.94 106.82 946 2 2 0.98 74.83 86.38 28.68 48.32 45.31 66.57 26.12
    45.21 137.34 927 2 5 0.98 48.34 42.89 35.94 48.32 49.86 66.57 26.12 46.87 137.34
    821 5 0.5 0.98 80.33 84.71 37.41 44.60 45.31 65.87 26.12 88.39 106.82 928 5 1
    0.98 48.34 84.71 37.41 44.60 45.31 66.57 26.12 46.87 106.82 977 5 2 0.98 50.00
    87.61 37.41 48.32 45.31 101.36 26.12 46.56 106.82 766 5 5 0.98 48.34 42.89 37.41
    48.32 49.86 101.36 26.12 45.21 136.66 950 1 5 0.9 50.00 42.89 37.41 46.21 45.31
    66.57 25.44 74.71 136.66 982 1 5 0.7 48.34 42.89 28.68 46.21 45.31 62.28 25.44
    46.87 106.82 733 1 5 0.5 50.00 42.89 28.68 48.32 45.31 66.57 25.44 45.21 136.66
    962 1 5 0.3 48.34 42.89 37.41 46.21 45.31 66.57 25.44 74.71 136.66 924 1 5 0.1
    48.34 78.49 28.68 46.21 45.31 66.57 25.44 73.06 136.66 896 The optimal evacuation
    path and number of iterations were compared to determine the optimal solution
    at each node under different parameter combinations. It can be observed that the
    calculated evacuation path of six nodes were optimal when α = 1, β = 5, and ρ
    = 0.7. Although the evacuation paths of No. 125 and No. 198 nodes were not the
    shortest, the length of evacuation paths were appropriately increased by 3.6%
    compared with that of the shortest length. Simultaneously, it can quickly determine
    the optimal solution. Therefore, α =1, β =5, and ρ =0.7 were selected for subsequent
    calculations in this study. 4.3. Emergency evacuation decision optimization and
    indication scheme under different conditions Two scenarios of accident-free state
    and a fire were set and applied in the subway stations to test the response effect
    of the IEES in different scenarios. The wireless evacuation indication signs were
    placed and recorded only at important positions in the application site of the
    subway stations due to the limitation of manpower and the normal operation of
    the subway station. The locations were marked with numbers 1 to 31. 4.3.1. Accident-free
    state Initially, the IEES was applied to optimize the evacuation route in the
    subway station without accidents based on the SND automatically generated by BIM.
    The optimal route and indication direction information of the signs after the
    optimization of EDOM are saved. The optimum evacuation routes and direction information
    are shown in Fig. 7. Figs. 7(a), (b), and (c) depict the optimal evacuation path
    and direction information of B2, B3, and B4 floors of the subway station without
    accident, respectively. The optimized information instructions were transmitted
    to each wireless evacuation indication sign. The field position and situation
    of the WEIS are shown in Fig. 8. Figs. 8(a) and (b) show the direction of each
    wireless evacuation indication signs from the overall building and the actual
    situation on site, respectively. Only a few important nodes in the field situation
    were recorded due to the limited number of field experimenters. The same numbers
    were used for marking in Figs. 7 and 8 to effectively identify the wireless evacuation
    indication signs corresponding to these nodes. Download : Download high-res image
    (1MB) Download : Download full-size image Download : Download high-res image (580KB)
    Download : Download full-size image Fig. 7. Optimum evacuation routes and direction
    information without accident. Download : Download high-res image (2MB) Download
    : Download full-size image Fig. 8. Location and situational diagram of Wireless
    Evacuation Indication System without accident. 4.3.2. A fire scenario According
    to the operation mechanism of the IEES, the FMS will immediately transmit the
    location of the fire hazard point to the CCS and issue an alarm once a fire occurs.
    An actual fire was not ignited during the application process considering the
    safety and site limitations. It was assumed that a fire occurred near the cross-floor
    elevator on floor B4 and the fire monitor was manually started. The monitoring
    module of the CCS sent out an alarm when it received the location of the ignition
    point by the LoRa communication technology. Simultaneously, according to the location
    of the fire alarm and the affected location in the building combined with the
    available state of each evacuation route, the global optimal evacuation route
    was obtained based on the EDOM, and the direction of each wireless evacuation
    indication signs was determined. The optimal evacuation route and the indication
    direction information under a fire are shown in Fig. 9. Figs. 9(a), 9(b), and
    9(c) depict the optimal evacuation path and direction information of B2, B3, and
    B4 floors of the subway station under a fire, respectively. Finally, the output
    controller module transmitted the indication direction information to the WEIS
    in various parts of the building through LoRa communication technology to guide
    the personnel to evacuate. The location and site situation of the WEIS in the
    fire scenario are shown in Fig. 10. Fig. 10(a) and (b) depict the direction of
    each wireless evacuation indication signs from the overall building and actual
    situation on site, respectively. The positions of important nodes recorded and
    the numbers marked did not change during the test. Download : Download high-res
    image (1MB) Download : Download full-size image Download : Download high-res image
    (591KB) Download : Download full-size image Fig. 9. Optimum evacuation routes
    and direction information under a fire. Download : Download high-res image (2MB)
    Download : Download full-size image Fig. 10. Location and situational diagram
    of Wireless Evacuation Indication System with a fire. It can be observed from
    Fig. 7, Fig. 8, Fig. 9, Fig. 10 that the IEES immediately re-planned the evacuation
    route in the subway station according to the location of the fire alarm point
    after a fire broke out on the B4 floor of the subway station, and induced the
    large-scale evacuation in the subway station by updating the direction information
    of the indication signs. The evacuation routes of 163 source nodes and intermediate
    nodes were changed after updating the optimal route, and the indication directions
    of 17 sign nodes were changed. Among them, the evacuation routes of 39 source
    and intermediate nodes in the B4 floor were changed, and the indication directions
    of 9 sign nodes were changed. The evacuation routes of 87 source and intermediate
    nodes were changed in the B3 floor, and the indication directions of 5 sign nodes
    were changed. The evacuation routes of 37 source and intermediate nodes were changed
    in the B2 floor, and the indication directions of 3 sign nodes were changed. The
    comparison between the optimal evacuation routes and change in different sign
    directions under the state of accident-free and a fire was performed. It was observed
    that the directions of the sign at the fire alarm point and the area affected
    by the fire on each floor were changed according to the principle of flow away
    from the hazard area to guide the evacuation. It enabled personnel to safely and
    efficiently find evacuation routes, which is beneficial for large-scale evacuation
    in accident environment. 5. Results and discussion According to the application
    of IEES in the subway stations, this section analyzes the effectiveness of DEOM
    with help from the Pathfinder software, and compares the evacuation time and diversion
    situation before and after the optimization decision in a fire. At the same time,
    the effectiveness of IEES is verified and the WEIS''s response time after the
    accident is analyzed. 5.1. Effectiveness of the EDOM Pathfinder is one of the
    most commonly used software programs to simulate the evacuation process. Based
    on the A* algorithm, the escape path and escape time of the accident are calculated,
    and visually presented through a three-dimensional view. Therefore, the Pathfinder
    software is used to compare the time of the large scale evacuation and the utilization
    rate of each exit or route planned by the EDOM to verify the effectiveness of
    the EDOM. First, the 3D model developed based on Revit was imported into Pathfinder
    software to establish a 3D simulation model. The effect of the state of the gates,
    fences, and escalators on each floor was considered during the evacuation process.
    It was assumed that the escalators were non-operational during the evacuation
    process and stairs were used for evacuation of personnel, and the gates were open
    [60]. Additionally, it was assumed that only one person can pass through one gate,
    and the people in the area enclosed by the gate can only reach the outer area
    through the gate. Subsequently, parameters, such as the type, proportion, and
    speed of action of the evacuees in the subway station, were set according to the
    evacuation behavior characteristics of the personnel in the subway station. According
    to the subway station location characteristics and station staff statistics to
    divide the proportion of personnel. The people parameter settings in the Pathfinder
    model are shown in Table 4 [61]. Table 4. The people parameters in Pathfinder.
    Personnel category Proportion Emergency walking speed (m/s) Stair walking speed
    (m/s) Shoulder width (cm) Children 2 % 0.80 0.48 0.30 Juvenile 4 % 1.10 0.66 0.32
    Young men 27 % 1.51 0.906 0.40 Young women 18 % 1.45 0.87 0.37 Middle-aged men
    27 % 1.47 0.882 0.41 Middle-aged women 18 % 1.39 0.834 0.38 The old 4 % 1.00 0.60
    0.40 Considering the most unfavorable situation of evacuation, it was assumed
    that a train arrived at the station at the initial moment and the people have
    to be evacuated from the train to the platform area. It was assumed that 1470
    persons required evacuation on each floor of the station and they were randomly
    distributed in the platform area. Finally, personnel select evacuation exits based
    on the principle of proximity, and combine path planning, guidance mechanisms,
    and collision handling between people to control pedestrian movement because the
    String mode of Pathfinder considers the interaction among people during movement.
    Its guidance mechanism conforms with emergency evacuation of crowds. Therefore,
    the String mode in Pathfinder software was used to simulate the evacuation of
    personnel optimized by EDOM. First, nodes area same as the Revit platform are
    divided in Pathfinder software. Then, according to the optimal evacuation path
    obtained by EDOM, the evacuation route of personnel in node area is specified
    in Pathfinder. Finally, the evacuation time of all personnel is obtained in String
    mode. The cross-floor elevator on B4 floor cannot be used as an exit for evacuation
    when a fire breaks around it, which leads to a longer RSET in the subway station.
    Fig. 11 shows the variation in the number of evacuees at each exit over time under
    a fire was applied. The people in the subway station selected the exit nearest
    for evacuation according to the built-in algorithm of Pathfinder software when
    the EDOM was not applied. The variation diagram of the number of evacuees at each
    exit with time under a fire without EDOM is shown in Fig. 11(a). It can be observed
    that evacuation exits A, C, E, H, and D did not serve as evacuation exits successively
    in approximately 90 s with a small number of evacuees and low utilization rate
    of exits. The evacuation pressure acted primarily on evacuation exits B, F, and
    G. The evacuation exit F was the primary exit used for evacuation, which ensured
    the evacuation of 1829 personnel. The distribution of personnel at each exit during
    evacuation at 180 s is shown in Fig. 12. A congestion was observed at the gates
    corresponding to evacuation exits B, F, and G at 6 min, which resulted in a long
    overall evacuation time. The evacuation time for all personnel in the subway station
    was 377.275 s, which did not fulfill the requirement of complete evacuation in
    6 min according to the Subway Design Code (GB50157–2013). The Pathfinder software
    was used to specify the personnel action route planned based on the EDOM to validate
    the application effectiveness of the EDOM. The change in the number of people
    evacuating at each exit based on the EDOM is shown in Fig. 11(b). It can be observed
    that the number of evacuees at exits A, C, H, and E increased due to the shunting
    effect of the EDOM. Exits B, F, and G acted as the main exits for evacuation.
    However, the evacuation pressure borne by them significantly decreased. The distribution
    of personnel at each exit during evacuation at 180 s is shown in Fig. 13. It can
    be observed that the route optimization based on the EDOM alleviated the phenomenon
    of personnel congestion at the gate. The personnel can complete the evacuation
    within 356.525 s, which is in accordance with the relevant requirements of the
    Subway Design Code (GB50157–2013) for the completion of evacuation within 6 min.
    After the optimization decision of evacuation path, the evacuation time is shortened
    by 20.75 s and the evacuation efficiency is improved by 5.49 %. Download : Download
    high-res image (658KB) Download : Download full-size image Fig. 11. Variation
    in the number of evacuees at each exit over time under a fire. Download : Download
    high-res image (505KB) Download : Download full-size image Fig. 12. Evacuation
    diagram without EDOM at t = 180 s. Download : Download high-res image (459KB)
    Download : Download full-size image Fig. 13. Evacuation diagram with EDOM at t
    = 180 s. The number of people completing the evacuation at each exit under the
    two conditions was compared. It can be observed from Fig. 14 that the EDOM can
    perform optimal planning according to the congestion degree and evacuation availability
    of each evacuation exit during the route optimization process. A few personnel
    in the station can be induced to evacuate to exits A, C, E, G, and H to alleviate
    the evacuation pressure and avoid congestion at individual exits. Download : Download
    high-res image (177KB) Download : Download full-size image Fig. 14. Comparison
    chart of evacuation number at each exit under a fire. In summary, the evacuation
    exits A, B, C, F, and G of the subway station served as direct access to the ground
    and were the main exits for evacuation. A long duration of time was required to
    pass through the route owing to the long distance between evacuation exits A and
    C and the gates. Fewer people selected the two exits during the process of evacuation,
    whereas more people selected B, F, and G exits. The evacuation exits D, E, and
    H led to the underground shopping mall and indirectly reached the ground. The
    number of people selecting the three evacuation exits was relatively small during
    evacuation, and the number of people evacuated was proportional to the width of
    the exit. Congestion occurred at individual evacuation exits or corresponding
    gates during the evacuation process due to the particularity of the evacuation
    exit of the subway station, which resulted in a longer evacuation time and lower
    evacuation efficiency. The evacuation decision-making optimization algorithm can
    achieve the goal of global optimization because it considers the availability
    status of each evacuation route and the evacuation capacity of the crowd under
    different conditions. Additionally, it considers the degree of congestion and
    stranded phenomenon in each route. It can shunt and induce the crowded evacuation
    route, and balance the utilization rate of each outlet to the greatest extent.
    5.2. Performance of the WEIS In a fire, due to the comprehensive influence of
    environmental factors such as high temperature, thermal radiation, smoke, etc.,
    it is of great significance whether the personnel can effectively receive the
    evacuation instructions and make corresponding responses during the escape process.
    In order to explore the impact of the fire environmental conditions, the performance
    of WEIS was tested in the fire experiment model. The ambient temperature is 14
    °C and the fluorescent lights are turned off during the test. The 1.0 m × 0.37
    m of copper indium gallium selenium (CIGS) photovoltaic penal was placed at a
    tilt of 30° from the ground acting as the fire source, a large amount of smoke
    and fierce flame is produced during the fire process. Totally four wireless evacuation
    indication signs were set in the experimental model, numbered as No.1-No.4. No.1
    and No.3 are located at 0.3 m above the ground, while the height of No.2 and No.4
    are 1.5 m. Five thermocouples were uniformly set on the surface of each wireless
    evacuation indication sign to monitor their temperatures in real time during the
    experiment. A camera was placed 10 m away from the front glass wall of the experimental
    model to record the visibility of WEIS. The main view of the experimental model
    is shown in Fig. 15. Download : Download high-res image (160KB) Download : Download
    full-size image Fig. 15. Main view of experimental model (unit:mm) . The average
    surface temperature of each wireless evacuation indication signs is shown in Fig.
    16. From Fig. 16, it can be seen that the surface temperature of each wireless
    evacuation indication signs is various, the surface temperature of No. 4 is the
    highest, which can reach 190 °C. The reason can be attributed to the heat radiation
    of the tilted flame and hot smoke. In the Fire Emergency Lighting and Evacuation
    Indication System, the evacuation indication system should be able to resist 16
    h at a temperature of 55 °C ± 2 °C [62]. The WEIS can operate normally for 11
    min in a dynamic, real-time fire environment, of which No. 4 can operate for 3
    min in the temperature range of 55 °—190 °C. However, its indication direction
    can be clearly seen from 10 m away. No. 2 can still maintain a stable working
    state within the temperature range of 100 °C. All wireless evacuation indication
    signs worked normally during and after the test and can be clearly seen as the
    fire progressed, as shown in Fig. 17. As can be seen from Fig. 17, when the fire
    develops to a large smoke concentration and a fierce fire, WEIS can still maintain
    its normal working state and can be clearly seen. Therefore, the WEIS can work
    stably and maintain high visibility in fire with high temperature and think smoke.
    As for the regulations in the building that all personnel need to complete the
    evacuation within 6 min, the WEIS fully meets the time requirements for guiding
    personnel evacuation. Download : Download high-res image (207KB) Download : Download
    full-size image Fig. 16. Temperature curve of each intelligent emergency evacuation
    induction indicator. Download : Download high-res image (603KB) Download : Download
    full-size image Fig. 17. Working condition and visibility at different times.
    5.3. Effectiveness of the IEES Communication distance is an important factor used
    to measure the performance of wireless communication technology. It is a direct
    factor that limits the transmission range of the IEES. Transmission time is an
    important parameter that determines the performance of wireless communication
    technology [63]. It is the time required for data transmission from one end to
    the other end. During this test, the data transmitting end was the CCS located
    on the B2 floor and the data receiving ends were the wireless evacuation indication
    signs placed in the subway station. The serial port debugging assistant was used
    to record the response time of the WEIS in real time when it was applied in the
    subway station to verify the transmission performance of the WEIS. The response
    time is the time difference between the signal sent by the CCS and the signal
    received by each wireless evacuation indication signs. There were multiple sources
    of wireless electromagnetic interferences from electrical equipment, such as subway
    trains arriving and leaving the station, during the in-site application process
    in the subway station, which affected the communication of the WEIS. However,
    the response time of the system was not affected. The transmission of instructions
    was performed and the communication success rate was 100%. Three tests were performed
    to record the response time of the system to avoid accidental data. The response
    time of the wireless evacuation indication signs in the subway station is shown
    in Fig. 18. Download : Download high-res image (100KB) Download : Download full-size
    image Fig. 18. Response time of each wireless evacuation indication sign. Fig.
    18 shows the response time of the wireless evacuation indication signs on B2 (number
    1–9), B3 (number 10–20), and B4 (number 21–31) layer receiving from the CCS located
    in B2 layer. As can be seen from the figure, the response time is 175 ms when
    CCS and wireless evacuation indication signs are located at different locations
    on the same floor, and 185 ms when CCS and wireless evacuation indication signs
    are located on different floor (B2 floor and B3 floor). It can be concluded that
    the horizontal and vertical transmission distance between the WEIS and CCS had
    a minor effect on the response time within the subway station. Essentially, a
    negative effect on the signal response was observed because the CCS was located
    on the B2 floor. The response efficiency of the wireless evacuation indication
    signs at the B2 layer was better than that at the B3 and B4 layers, and the response
    time between B3 and B4 layer is not much difference. The response time of B3 and
    B4 layer was delayed by approximately 10 ms and the response efficiency was decreases
    by approximately 5.7 %. In Fig. 18, we can see that the response time of the number
    13 wireless evacuation indication sign is 189 ms, which is 14 ms later compared
    with the response time of the wireless evacuation indication signs on B2 layer,
    and the response efficiency is reduced by 8 %. At the same time, the error of
    number 13 wireless evacuation indication sign is larger due to an experiment in
    a process of vehicles in and out of the station. The wireless evacuation indication
    signs of numbers 4 and 11 are located at the security check at the entrance and
    next to the elevator, respectively. The electromagnetic effect of the security
    check equipment and elevator also affect the response time of the wireless evacuation
    indication signs. Therefore, the operational state of vehicles in and out of the
    subway station and the electromagnetic signal of the electrical equipment is an
    important factor affecting the WEIS''s response time. However, the CCS and WEIS
    can complete signal transmission within 0.2 s regardless of the location of the
    wireless evacuation indication signs. The time fulfills the requirements of the
    response time of evacuation indication signs, as stated in the Technical Standard
    for Fire Emergency Lighting and Evacuate Indicating System (GB51309–2018) [64].
    Network packet loss rate has a very important effect on communication quality,
    data transmission speed and reliability. The lower the packet loss rate, the better
    the communication quality, the faster the data transmission speed and the higher
    the reliability. Therefore, it is necessary to test the packet loss rate of the
    IEES. In previous studies, the packet loss rate of the IEES has been tested [65].
    In a variety of urban environments with different weather, the LoRa communication
    technology can communicate stably within 1200 m without losing data. In open conditions,
    communication distance within 3000 m without packet loss. Within a radius of 1500
    m, the total packet loss rate of nodes between FMS and CCS is 0.23 %, and that
    of nodes between CCS and WEIS is less than 1 %. 6. Conclusion In this study, the
    influence of the accident environment is considered and the equivalent length
    of the evacuation route is defined. Additionally, the time cost function of emergency
    evacuation is defined in combination with the degree of personnel detention and
    the walking velocity in accidental surroundings in evacuation routes, and the
    EDOM is established considering the influence of multiple factors on personnel
    evacuation in an accident environment. On the BIM platform, the intelligent establishment
    of the SND is realized and the EDOM is embedded to achieve the global optimization
    goal of balancing the utilization rate of each exit and completing the whole evacuation
    in the shortest evacuation time. LoRa communication technology is utilized to
    realize a three-stage linkage control of FMS, CCS and WEIS, which solves the decision-making
    problem of large-scale regional emergency evacuation in complex environments such
    as large range, strong interference, etc. The effectiveness of the EDOM, WEIS
    and IEES is verified, and the following conclusions are drawn. (1) The IEES embedded
    with EDOM and LoRa communication technology can immediately replan the evacuation
    route and realize the goal of intelligent evacuation guidance through the dual
    function of sound and direction instructions. According to the verification result
    of the three-story subway station, EDOM can shorten evacuation time by 20.75 s
    and improve evacuation efficiency by 5.49 %. IEES can realize ultralong-distance
    and low-power wireless signal transmission of evacuation commands. It has a strong
    anti-interference ability and can be flexibly arranged. It can effectively assist
    the internal evacuation system of large and complex buildings to perform intelligent
    evacuation guidance and solve the communication problem of intelligent guidance
    for large-scale crowd evacuation in outdoor surroundings. (2) The EDOM can realize
    the global optimization of emergency evacuation routes and evacuation guidance
    schemes of different large buildings, such as subway stations by comprehensively
    considering the impact of emergent accidental situations, the availability and
    detention of evacuation routes or exits. The conventional concept of evacuation
    from the nearest fixed direction is upgraded to the concept of active evacuation
    distance from a hazardous area. It can effectively alleviate the congestion of
    individual evacuation exits and balance the utilization of each exit. Therefore,
    the efficiency of large-scale safe evacuation can be improved. (3) The WEIS can
    work stably and maintain high visibility in fire with high temperature and thick
    smoke. The WEIS can operate normally for 11 min in a dynamic, real-time fire environment,
    and the surface temperature can reach 190 °C. As for the regulations in the building
    that all personnel need to complete the evacuation within 6 min, the WEIS fully
    meets the time requirements for guiding personnel evacuation. (4) The application
    in the subway station demonstrates that the IEES can complete three-level wireless
    linkage control in a large-scale place. The response time was slightly affected
    by the building structure and transmission distance. The electromagnetic signal
    of the electrical equipment and the operational state of vehicles in and out of
    the subway station interfered with the response time to a relatively larger lag.
    IEES can complete the response within 0.2 s, which fulfills the requirements for
    the response time of the evacuation indication sign stated in the Technical Standards
    for Fire Emergency Lighting and Evacuate Indicating System. In this paper, the
    effectiveness of EDOM is only verified by Pathfinder on account of the limitation
    of copyright. In the future, we will try our best to compare and verify the effectiveness
    of EDOM with more path optimization models. Moreover, for the standard test of
    WEIS, it will be sent to a specialized institution for standardized testing in
    the next work. In addition, with the continuous development of the fire, the duration
    of smoke inhalation and the sustained effects of high temperatures during the
    evacuation process will also have a certain impact on the evacuation of personnel.
    Therefore, in the following work, the impact of factors such as the duration of
    smoke inhalation and the sustained effects of high temperatures on personnel evacuation
    will be comprehensively considered, and the equivalent length of EDOM will be
    revised. At the same time, the FMS is constantly improved, the visibility sensor
    is combined with the temperature and smoke concentration sensor to monitor the
    environment of the scene in real time, and the FMS takes certain measures such
    as smoke filters and heat dissipation devices, so as to obtain a reliable accident
    situation and optimize the evacuation routes of personnel. CRediT authorship contribution
    statement Xue Jiang: Conceptualization, Data curation, Software, Validation, Writing
    – original draft. Peihong Zhang: Supervision, Writing – review & editing, Project
    administration. Xinwei Zhang: Investigation, Project administration. Aoran Yu:
    Software, Visualization. Bang Chen: Methodology, Resources. Chenghao Ye: Validation,
    Visualization. Jiabao Song: Software. Declaration of competing interest The authors
    declare that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Acknowledgements
    This research was supported by the National Key R&D Program of China (2017YFC0804900).
    The authors deeply appreciate the support. Data availability The authors do not
    have permission to share data. References [1] A. Balboa, J. González-Villa, A.
    Cuesta, O. Abreu, D. Alvear Testing a real-time intelligent evacuation guiding
    system for complex buildings Saf. Sci., 132 (2020), 10.1016/j.ssci.2020.104970
    Google Scholar [2] Q. Zhang, T. Chen, X.Z. Lv New framework of intelligent evacuation
    system of buildings Procedia Eng, Elsevier Ltd (2014), pp. 397-402, 10.1016/j.proeng.2014.04.057
    View PDFView articleView in ScopusGoogle Scholar [3] Aydt, H., Lees, M.H., Turner,
    S.J., Cai, W. (2014). Toward simulation-based egress optimization in smart buildings
    using symbiotic simulation. In: Weidmann, U., Kirsch, U., Schreckenberg, M. (eds)
    Pedestrian and Evacuation Dynamics 2012. Springer, Cham. https://doi.org/10.1007/978-3-319-02447-9_82.
    Google Scholar [4] J. Cho, G. Lee, S. Lee An automated direction setting algorithm
    for a smart exit sign Autom. Constr., 59 (2015), pp. 139-148, 10.1016/j.autcon.2015.05.004
    View PDFView articleView in ScopusGoogle Scholar [5] M. Fu, R. Liu BIM-based automated
    determination of exit sign direction for intelligent building sign systems Autom.
    Constr., 120 (2020), 10.1016/j.autcon.2020.103353 Google Scholar [6] S. Li, T.
    Luo, L. Wang, L. Xing, T. Ren Tourism route optimization based on improved knowledge
    ant colony algorithm Complex. Intell. Systems. (2022), 10.1007/s40747-021-00635-z
    Google Scholar [7] K. Guo, S. Hu, H. Zhu, W. Tan Industrial information integration
    method to vehicle routing optimization using grey target decision J. Ind. Inf.
    Integr., 27 (2022), 10.1016/j.jii.2022.100336 Google Scholar [8] M. Mojtahedi,
    A.M. Fathollahi-Fard, R. Tavakkoli-Moghaddam, S. Newton Sustainable vehicle routing
    problem for coordinated solid waste management J. Ind. Inf. Integr., 23 (2021),
    10.1016/j.jii.2021.100220 Google Scholar [9] J. Pasha, A.L. Nwodu, A.M. Fathollahi-Fard,
    G. Tian, Z. Li, H. Wang, M.A. Dulebenets Exact and metaheuristic algorithms for
    the vehicle routing problem with a factory-in-a-box in multi-objective settings
    Adv. Eng. Inform., 52 (2022), Article 101623, 10.1016/j.aei.2022.101623 View PDFView
    articleView in ScopusGoogle Scholar [10] H. Yousefi, R. Tavakkoli-Moghaddam, M.
    Taheri Bavil Oliaei, M. Mohammadi, A. Mozaffari Solving a bi-objective vehicle
    routing problem under uncertainty by a revised multichoice goal programming approach
    Int. J. Ind. Eng. Comput., 8 (2017), pp. 283-302, 10.5267/j.ijiec.2017.1.003 View
    in ScopusGoogle Scholar [11] M.A. Dulebenets, J. Pasha, M. Kavoosi, O. F.Abioye,
    E. E.Ozguven, R. Moses, W.R. Boot, T. Sando Multiobjective optimization model
    for emergency evacuation planning in geographical locations with vulnerable population
    groups Am. Soc. Civil Eng., 36 (2020), 10.1061/(ASCE) Google Scholar [12] K. Guo,
    L. Zhang Adaptive multi-objective optimization for emergency evacuation at metro
    stations Reliab. Eng. Syst. Saf., 219 (2022), 10.1016/j.ress.2021.108210 Google
    Scholar [13] M. Rabbani, N. Oladzad-Abbasabady, N. Akbarian-Saravi Ambulance routing
    in disaster response considering variable patient condition: NSGA-II and MOPSO
    algorithms J. Ind. Manag. Optim., 18 (2022), pp. 1035-1062, 10.3934/jimo.2021007
    View in ScopusGoogle Scholar [14] F. Niu, Y. Chen Industrial information integration
    in track allocation optimization in high-speed train stations J. Ind. Inf. Integr.,
    21 (2021), 10.1016/j.jii.2020.100193 Google Scholar [15] M.A. Dulebenets A delayed
    start parallel evolutionary algorithm for just-in-time truck scheduling at a cross-docking
    facility Int. J. Prod. Econ., 212 (2019), pp. 236-258, 10.1016/j.ijpe.2019.02.017
    View PDFView articleView in ScopusGoogle Scholar [16] J. Pasha, M.A. Dulebenets,
    A.M. Fathollahi-Fard, G. Tian, Y. yip Lau, P. Singh, B. Liang An integrated optimization
    method for tactical-level planning in liner shipping with heterogeneous ship fleet
    and environmental considerations Adv. Eng. Inform. (2021), p. 48, 10.1016/j.aei.2021.101299
    Google Scholar [17] Y. Liu, Y. Du, S. Dou, L. Peng, X. Su, Research summary of
    intelligent optimization algorithm for warehouse AGV path planning, in: 2022:
    pp. 96–110. https://doi.org/10.1007/978-981-16-8656-6_9. Google Scholar [18] P.
    Wei, X. Yu, Z. Di, X. Dai, B. Wang, Y. Zeng Design of robot automatic navigation
    under computer intelligent algorithm and machine vision J. Ind. Inf. Integr.,
    28 (2022), Article 100366, 10.1016/j.jii.2022.100366 View PDFView articleView
    in ScopusGoogle Scholar [19] X. Liu, X. Song, Optimization of ant colony algorithm
    based on wireless sensor networks, in: Lect. Notes Electr. Eng. 2022: pp. 147–155.
    https://doi.org/10.1007/978-981-16-4258-6_19. Google Scholar [20] D. Bhardwaj,
    A.K. Gupta, A. Sharma, Improved ant colony optimization for optimal resource utilization
    in cloud computing, in: 2022: pp. 397–408. https://doi.org/10.1007/978-981-16-9756-2_38.
    Google Scholar [21] W. Zhao, H. Wang, J. Geng, W. Hu, Z. Zhang, G. Zhang Multi-Objective
    weather routing algorithm for ships based on hybrid particle swarm optimization
    J. Ocean Univ. China., 21 (2022), pp. 28-38, 10.1007/s11802-022-4709-8 View in
    ScopusGoogle Scholar [22] W.F. Wang, R. bin Wang, S. Yin, Z.W. An, L. Xu, Location
    optimization of service centers for seniors based on an improved particle swarm
    optimization algorithm, in: Smart Innovation Systems and Technologies, 2022: pp.
    249–256. https://doi.org/10.1007/978-981-16-4039-1_24. Google Scholar [23] A.
    Abdelghany, K. Abdelghany, H. Mahmassani, W. Alhalabi Modeling framework for optimal
    evacuation of large-scale crowded pedestrian facilities Eur J Oper Res, 237 (2014),
    pp. 1105-1118, 10.1016/j.ejor.2014.02.054 View PDFView articleView in ScopusGoogle
    Scholar [24] A.S.al Qhtani, A.S.al Shammari, H.A. Kurdi, A Fast Genetic Algorithm-based
    evacuation plan generator, in: Procedia Computer Science, 2017: pp. 994–998. https://doi.org/10.1016/j.procs.2017.05.437.
    Google Scholar [25] M. Liu, F. Zhang, Y. Ma, H.R. Pota, W. Shen Evacuation path
    optimization based on quantum ant colony algorithm Adv. Eng. Inform., 30 (2016),
    pp. 259-267, 10.1016/j.aei.2016.04.005 View PDFView articleView in ScopusGoogle
    Scholar [26] H. Zhao, C. Zhang An ant colony optimization algorithm with evolutionary
    experience-guided pheromone updating strategies for multi-objective optimization
    Expert. Syst. Appl., 201 (2022), Article 117151, 10.1016/j.eswa.2022.117151 View
    PDFView articleView in ScopusGoogle Scholar [27] H. Liu, B. Xu, D. Lu, G. Zhang
    A path planning approach for crowd evacuation in buildings based on improved artificial
    bee colony algorithm Appl. Soft Comput., 68 (2018), pp. 360-376, 10.1016/j.asoc.2018.04.015
    View PDFView articleView in ScopusGoogle Scholar [28] H. Kurdi, A. Almulifi, S.
    Al-Megren, K. Youcef-Toumi A balanced evacuation algorithm for facilities with
    multiple exits Eur. J. Oper. Res., 289 (2021), pp. 285-296, 10.1016/j.ejor.2020.07.012
    View PDFView articleView in ScopusGoogle Scholar [29] W. Lei, A. Li, R. Gao Effect
    of varying two key parameters in simulating evacuation for a dormitory in China
    Physica A, 392 (2013), pp. 79-88, 10.1016/j.physa.2012.07.064 View PDFView articleView
    in ScopusGoogle Scholar [30] W. Lei, A. Li, R. Gao, X. Hao, B. Deng Simulation
    of pedestrian crowds’ evacuation in a huge transit terminal subway station Physica
    A, 391 (2012), pp. 5355-5365, 10.1016/j.physa.2012.06.033 View PDFView articleView
    in ScopusGoogle Scholar [31] M. Lee, H. Nam, C. Jun Multiple exits evacuation
    algorithm for real-time evacuation guidance Spat Inf. Anal., 25 (2017), pp. 261-270,
    10.1007/s41324-017-0090-x View in ScopusGoogle Scholar [32] M.N.A. Khalid, U.K.
    Yusof Dynamic crowd evacuation approach for the emergency route planning problem:
    application to case studies Saf. Sci., 102 (2018), pp. 263-274, 10.1016/j.ssci.2017.10.024
    View PDFView articleView in ScopusGoogle Scholar [33] F.E. Cornes, G.A. Frank,
    C.O. Dorso Microscopic dynamics of the evacuation phenomena in the context of
    the Social Force Model Physica A, 568 (2021), 10.1016/j.physa.2021.125744 Google
    Scholar [34] D.R. Parisi, R. Josens, Human-ant behavior in evacuation dynamics,
    in: Traffic and Granular Flow, 2015: pp. 203–211. https://doi.org/10.1007/978-3-319-10629-8_24.
    Google Scholar [35] Z. Fang, X. Zong, Q. Li, Q. Li, S. Xiong Hierarchical multi-objective
    evacuation routing in stadium using ant colony optimization approach J. Transp.
    Geogr., 19 (2011), pp. 443-451, 10.1016/j.jtrangeo.2010.10.001 View PDFView articleView
    in ScopusGoogle Scholar [36] X. Zong, A. Liu, C. Wang, Z. Ye, J. Du Indoor evacuation
    model based on visual-guidance artificial bee colony algorithm Build. Simul.,
    15 (2022), pp. 645-658, 10.1007/s12273-021-0838-z View in ScopusGoogle Scholar
    [37] S. Li, L.Da Xu, S. Zhao 5G internet of things: a survey J. Ind. Inf. Integr.,
    10 (2018), pp. 1-9, 10.1016/j.jii.2018.01.005 View PDFView articleGoogle Scholar
    [38] Z. Pang, B. Xie, H. Zhu, M. Luvisotto Location aided commissioning of building
    automation devices enabled by high accuracy indoor positioning J. Ind. Inf. Integr.,
    15 (2019), pp. 258-263, 10.1016/j.jii.2017.12.002 View PDFView articleView in
    ScopusGoogle Scholar [39] A. Khan, A.A. Aesha, J.S. Aka, S.M.F. Rahman, M.J.U.
    Rahman An IoT based intelligent fire evacuation system 2018 21st International
    Conference of Computer and Information Technology, Institute of Electrical and
    Electronics Engineers Inc. (2019), 10.1109/ICCITECHN.2018.8631945 Google Scholar
    [40] J.S. Chou, M.Y. Cheng, Y.M. Hsieh, I.T. Yang, H.T. Hsu Optimal path planning
    in real time for dynamic building fire rescue operations using wireless sensors
    and visual guidance Autom. Constr., 99 (2019), pp. 1-17, 10.1016/j.autcon.2018.11.020
    View PDFView articleView in ScopusGoogle Scholar [41] M.O. Farooq Multi-hop communication
    protocol for LoRa with software-defined networking extension Internet Things,
    14 (2021), 10.1016/j.iot.2021.100379 Google Scholar [42] F.A. Parvez, J. Chaitanya,
    T. Yara A development architecture of Lora gateway communication technology using
    artificial intelligence Mater Today Proc. (2021), 10.1016/j.matpr.2021.01.747
    Google Scholar [43] P. Kanakaraja, S. v. Aswin Kumer, B. Jaya Krishna, K. Sri
    Hari, V. Mani Krishna, Communication through black spot area using LoRa technology
    and IOT, in: Mater Today Proc, 2020: pp. 3882–3887. https://doi.org/10.1016/j.matpr.2021.02.339.
    Google Scholar [44] K.Ram Prasanna, J.M. Mathana, T.A. Ramya, R. Nirmala LoRa
    network based high performance forest fire detection system Mater Today Proc.
    (2021), 10.1016/j.matpr.2021.05.656 Google Scholar [45] L. Gong, J. Yan, Y. Chen,
    J. An, L. He, L. Zheng, Z. Zou An IoT-based intelligent irrigation system with
    data fusion and a self-powered wide-area network J. Ind. Inf. Integr., 29 (2022),
    10.1016/j.jii.2022.100367 Google Scholar [46] K. Fujii, T. Sano, Y. Ohmiya Influence
    of lit emergency signs and illuminated settings on walking speeds in smoky corridors
    Fire Saf. J., 120 (2021), 10.1016/j.firesaf.2020.103026 Google Scholar [47] K.
    Fridolf, E. Ronchi, D. Nilsson, H. Frantzich Movement speed and exit choice in
    smoke-filled rail tunnels Fire Saf. J., 59 (2013), pp. 8-21, 10.1016/j.firesaf.2013.03.007
    View PDFView articleView in ScopusGoogle Scholar [48] K. Fridolf, K. Andrée, D.
    Nilsson, H. Frantzich The impact of smoke on walking speed Fire Mater., 38 (2014),
    pp. 744-759, 10.1002/fam.2217 View in ScopusGoogle Scholar [49] J. Kubota, T.
    Sano, E. Ronchi Assessing the compliance with the direction indicated by emergency
    evacuation signage Saf. Sci., 138 (2021), 10.1016/j.ssci.2021.105210 Google Scholar
    [50] E.R. Galea, H. Xie, S. Deere, D. Cooney, L. Filippidis Evaluating the effectiveness
    of an improved active dynamic signage system using full scale evacuation trials
    Fire Saf. J., 91 (2017), pp. 908-917, 10.1016/j.firesaf.2017.03.022 View PDFView
    articleView in ScopusGoogle Scholar [51] H. Ran, L. Sun, X. Gao Influences of
    intelligent evacuation guidance system on crowd evacuation in building fire Autom.
    Constr., 41 (2014), pp. 78-82, 10.1016/j.autcon.2013.10.022 View PDFView articleView
    in ScopusGoogle Scholar [52] G. Ma, Z. Wu BIM-based building fire emergency management:
    combining building users’ behavior decisions Autom. Constr., 109 (2020), 10.1016/j.autcon.2019.102975
    Google Scholar [53] L. Yi, S. Zhu, Z. Xu, A. Huang, W. Zhu Quantitative study
    on human behavior in fire Sci. Technol. West China, 9 (08) (2010), pp. 4-6 +59
    Google Scholar [54] T. Jin, T. Yamada Irritating effects of fire smoke on visibility
    Fire Sci Technol, 5 (1) (1985), pp. 79-90, 10.3210/fst.5.79 View in ScopusGoogle
    Scholar [55] C. Tao Study On Evacuation Model and Application in Fire University
    of Science and Technology of China (2004) Google Scholar [56] M. Dorigo, L.M.
    Gambardella, Ant colony system: a cooperative learning approach to the traveling
    salesman problem, 1997. Google Scholar [57] M. Dorigo, A. Colorni, V. Maniezzo,
    M. Trubian, Ant system for job-shop scheduling, 1994. https://www.researchgate.net/publication/228540568.
    Google Scholar [58] M. Dorigo, M. Birattari, T. Stutzle Ant colony optimization
    IEEe Comput. Intell. Mag., 1 (2006), pp. 28-39, 10.1109/MCI.2006.329691 View in
    ScopusGoogle Scholar [59] H. Duan, D. Wang, X. Yu Research on the optimum configuration
    strategy for the adjustable parameters in ant colony algorithm Journal of Communication
    and Computer, 2 (2005), pp. 32-35 View in ScopusGoogle Scholar [60] Ministry of
    Housing and Urban-Rural Development of the People''s Republic of China. Standard
    for fire protection design of metro, 2018. Google Scholar [61] J. Qin, C. Liu,
    Q. Huang Simulation on fire emergency evacuation in special subway station based
    on Pathfinder, Case Stud Therm. E64ng., 21 (2020), 10.1016/j.csite.2020.100677
    Google Scholar [62] Standardization Administration of China. Fire Emergency Lighting
    and Evacuation Indication System, 2010. Google Scholar [63] K. Naganuma, K. Mogi,
    H. Yamada General method for ultrashort light pulse chirp measurement IEEe J.
    Quantum. Electron., 25 (1989), pp. 1225-1233, 10.1109/3.29252 View in ScopusGoogle
    Scholar [64] Ministry of Housing and Urban-Rural Development of the People''s
    Republic of China. Technical Standard for fire emergency lighting and evacuate
    indicating system, 2018. Google Scholar [65] H. Pei, X. Zhu, X. Li, Yu A An induction
    system for the emergent evacuation in the oilfield accident based on LoRa technology
    Fire Sci. Technol., 38 (2019), pp. 391-393 Google Scholar Cited by (0) View Abstract
    © 2024 Elsevier Inc. All rights reserved. Recommended articles Thermo-inspired
    model of self-propelled hard disk agents for heterogeneous bidirectional pedestrian
    flow Physica A: Statistical Mechanics and its Applications, Volume 635, 2024,
    Article 129500 Maricruz Rangel-Galván, …, Violeta Rangel-Galván View PDF Application
    of the social force modelling method to evacuation dynamics involving pedestrians
    with disabilities Applied Mathematics and Computation, Volume 460, 2024, Article
    128297 Libi Fu, …, Yongqian Shi View PDF Effects of tree density variations on
    outdoor heritage conservation: Numerical study of an ancient brick city wall with
    four orientations Building and Environment, Volume 254, 2024, Article 111392 Ting
    Zhang, …, Yonghui Li View PDF Show 3 more articles About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: Jiang Zhang, Peihong Zhang, Xinwei Zhang, Aoran Yu, Bang Chen,
    Chenghao Ye, Jiabao Song, Emergency evacuation based on long range communication
    technology, Journal of Industrial Information Integration, Volume 39, 2024, 100601,
    ISSN 2452-4212, https://doi.org/10.1016/j.jii.2024.100601.
  journal: Journal of Industrial Information Integration
  limitations: 'The study lacks a detailed description of how the system handles the
    dynamic changes in the environment, such as the emergence of new hazards or changes
    in the availability of evacuation routes. It would be valuable to know how the
    system adapts to these changes and ensures the ongoing safety of evacuees.

    Additionally, the paper does not provide any information on the scalability of
    the system. It is unclear how the system would perform in even larger and more
    complex buildings, with potentially thousands of occupants and multiple interconnected
    evacuation routes.

    Finally, the study does not mention any measures taken to ensure the security
    and privacy of the data collected by the system. This is a crucial consideration,
    given the sensitive nature of personal data and the potential for misuse or unauthorized
    access.'
  relevance_score: 0.9071186440677966
  relevance_score1: 0
  relevance_score2: 0
  title: Emergency evacuation based on long range communication technology
  verbatim_quote1: '"The IEES can guide people in evacuating from hazardous locations
    according to the state of the fire. Moreover, the phenomena of crowd retention
    and congestion at a few certain evacuation exits are considerably reduced to achieve
    global optimization of the evacuation path and accomplish the objective of intelligent
    emergency evacuation."'
  verbatim_quote2: '"Furthermore, WEIS can maintain normal operation and have good
    visibility in the fire environment of heat radiation and thick smoke. The IEES
    can realize dual wireless indication of vision and sound perception, and its response
    time is slightly affected by the building structure and transmission distance."'
  verbatim_quote3: '"The response time of the IEES is delayed up to 14 ms. Nonetheless,
    it fulfills the requirements of response time of evacuation indication signs stated
    in the Technical Standard for Fire Emergency Lighting and Evacuate Indicating
    System."'
- analysis: '"Type 2 fuzzy sets (T2FS) are suitable for providing precise solutions
    in insecure network environments and provide greater flexibility for handling
    insecure data." This paper proposes a new energy-saving method to achieve the
    optimal path from source CH to destination node BS in DIoT and WSN and a new fitness
    function combining T2FS and HHO methods (T2FHHO). Then this method is applied
    to get the best CH.'
  authors:
  - Lahmar I.
  - Zaier A.
  - Yahia M.
  - Lloret J.
  - Bouallegue R.
  citation_count: '0'
  description: 'Due to the widespread availability of services and smart devices,
    the decentralized internet of things and wireless sensor network-based systems
    (DIoT and WSN) have drawn the attention of academics and researchers and are still
    under constant development. Many challenges face the DIoT and WSN networks and
    need to be solved. The main issue among these challenges is reducing energy consumption
    in order to increase network lifetime. Energy-efficient routing protocols and
    the clustering method are the best solutions to this problem. In this paper, Type-2
    Fuzzy Harris Hawks Optimization (T2FHHO) is used to choose the best path (route)
    from the source (cluster head (CH)) to the destination nodes (base station (BS)).
    Along with this, we propose a new fitness function to find the next hop based
    on residual energy, distance, traffic, and buffer size. Then, we apply the T2FHHO
    method to get the best CH. This protocol seeks to increase the long-term reward
    earned by each node. The best path in terms of the minimum cost obtained using
    the proposed method is found. The two main contributions of this study are as
    follows: firstly, we present a new efficient routing approach that minimizes costs
    and maximizes efficiency. Secondly, we apply the T2FHHO to the network parameters
    of energy consumption, network lifetime, and convergence curves. The results indicate
    that T2FHHO outperforms competing methods. The proposed method holds the promise
    of significantly advancing the state of the art in energy-efficient routing for
    DIoT and WSN networks, with significant implications in various sectors and applications,
    ensuring extended network lifetimes and sustainable IoT implementations.'
  doi: 10.1016/j.iot.2023.101028
  full_citation: Optimal data transmission for decentralized IoT and WSN based on
    Type-2 Fuzzy Harris Hawks Optimization
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Motivation and contribution 3. Related
    works 4. Proposed method 5. Results and discussion 6. Discussion 7. Conclusion
    CRediT authorship contribution statement Declaration of competing interest Data
    availability References Show full outline Figures (10) Show 4 more figures Tables
    (6) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Internet of Things Volume
    25, April 2024, 101028 Research article Optimal data transmission for decentralized
    IoT and WSN based on Type-2 Fuzzy Harris Hawks Optimization Author links open
    overlay panel Ines Lahmar a, Aida Zaier b, Mohamed Yahia c, Jaime Lloret d, Ridha
    Bouallegue b Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.iot.2023.101028
    Get rights and content Under a Creative Commons license open access Abstract Due
    to the widespread availability of services and smart devices, the decentralized
    internet of things and wireless sensor network-based systems (DIoT and WSN) have
    drawn the attention of academics and researchers and are still under constant
    development. Many challenges face the DIoT and WSN networks and need to be solved.
    The main issue among these challenges is reducing energy consumption in order
    to increase network lifetime. Energy-efficient routing protocols and the clustering
    method are the best solutions to this problem. In this paper, Type-2 Fuzzy Harris
    Hawks Optimization (T2FHHO) is used to choose the best path (route) from the source
    (cluster head (CH)) to the destination nodes (base station (BS)). Along with this,
    we propose a new fitness function to find the next hop based on residual energy,
    distance, traffic, and buffer size. Then, we apply the T2FHHO method to get the
    best CH. This protocol seeks to increase the long-term reward earned by each node.
    The best path in terms of the minimum cost obtained using the proposed method
    is found. The two main contributions of this study are as follows: firstly, we
    present a new efficient routing approach that minimizes costs and maximizes efficiency.
    Secondly, we apply the T2FHHO to the network parameters of energy consumption,
    network lifetime, and convergence curves. The results indicate that T2FHHO outperforms
    competing methods. The proposed method holds the promise of significantly advancing
    the state of the art in energy-efficient routing for DIoT and WSN networks, with
    significant implications in various sectors and applications, ensuring extended
    network lifetimes and sustainable IoT implementations. Previous article in issue
    Next article in issue Keywords Decentralized IoTWSNFitness functionHHOPathfindingRouting
    dataType 2 fuzzy logic 1. Introduction Wireless sensor networks (WSNs) are indeed
    a critical subcategory of networks that consist of a multitude of distributed
    sensor nodes. These nodes are equipped with sensors to collect data from their
    environment and can be used in various systems, including Internet of Things (IoT)
    models, [1], [2]. One of the main advantages of WSNs is their ability to be deployed
    easily in remote or challenging environments. These nodes are typically small
    and wireless, making them suitable for monitoring and collecting data in areas
    that are hard to reach or dangerous for humans. The power limitation of sensor
    nodes in these networks allows for improving energy efficiency and network lifetime
    by applying optimal methods for data forwarding and routing [3]. IoT and WSN systems
    complement each other seamlessly, with WSNs serving as the foundation for data
    collection in IoT. This integration enhances the capabilities of IoT and opens
    up a vast array of applications, especially in the context of decentralized IoT
    (DIoT) [4]. There may be issues with an IoT with traditional centralized services
    in cases where there are concerns with the internet. Furthermore, a sizable portion
    of the workload in this architecture is placed on the server-side cloud application.
    Blockchain technology is another suggestion as a solution to enhance the security
    and reliability of this architecture. Decentralized process designs are commonly
    used in industrial systems because they might be more productive. As a result,
    distributed and decentralized architectures can be used as answers. These applications
    fit our definition of DIoT. WSNs are typically created using a decentralized structure.
    The DIoT and WSN systems are given in Fig. 1 [5]. The IoT device has the option
    of using a single hop or a multi-hop path (route) to transmit its packet size
    to the base station (BS). Multi-hop methods are widely used in distributed structures
    that are decentralized. All data packets are gathered by the BS and sent to a
    server for data analysis and end-user access. An effective mechanism of data transport
    is required because sensor nodes cooperate. These nodes have little battery power,
    bandwidth, processing power, or memory space. Hence, it is a difficult task to
    carry out the intricate computations at each sensor node. Nevertheless, physical
    limitations like the nodes’ positions make charging virtually impossible. Increasing
    the network lifetime is the key challenge in WSN and IoT. Nodes within the network
    are evaluated to determine their fitness values. This evaluation considers various
    factors, such as energy levels, distances to the base station, and network traffic.
    If a node’s fitness value starts at zero, it is subsequently updated based on
    a weighted combination of these factors [6]. Energy consumption rate is a fundamental
    component in these schemes since network longevity directly affects the remaining
    battery capacity of sensor nodes, making energy one of the most crucial resources
    [7]. Download : Download high-res image (501KB) Download : Download full-size
    image Fig. 1. Architecture for DIoT and WSN [5]. One of the most important challenges
    in DIoT and WSN systems is effective resource consumption, such as energy consumption
    [8]. Methods to get the optimal paths while using the least amount of energy are
    important. In the literature to address this issue, several multipurpose routing
    solutions have been proposed that maintain the integrity, inclusiveness, and connectivity
    of the network. Finding the optimal path in a large and complex network among
    numerous options necessitates additional processing. Selecting suitable, efficient
    coefficients for the pertinent routing parameters is also difficult. These issues
    actually fall within the non-deterministic polynomial-time jobs [9]. It is therefore
    appropriate to apply optimization methods to solve this problem. Nevertheless,
    these methods are used throughout the entire routing process; they frequently
    add extra burden to the system and use some system resources inefficiently. The
    meta-heuristic methods are better suited for pathfinding issues in DIoT and WSNs.
    These methods can be divided into three categories: physics-based, evolutionary,
    and swarm intelligence methods. In the first one, some studies are gravitational
    local search [10], charged system search [11], and the black hole algorithm [12].
    In the second one, some methods are the genetic algorithm [13], differential evolution
    [14], evolutionary programming [15], and evolution strategy [16]. The last one
    is based on swarm behaviors: partial swarm optimization (PSO) [17], flower pollination
    (FPA) [18], whale optimization (WOA) [19], grey wolf optimization (GWO) [20],
    and Harris Hawk optimization (HHO) [21]. HHO is an optimization method influenced
    by hunting Harris Hawks. The fast convergence and global search capabilities of
    this method make it suitable for solving various optimization challenges. The
    goal of HHO is to achieve an optimal configuration that minimizes latency, reduces
    power consumption, and improves data reliability in a decentralized environment.
    In recent years, the use of metaheuristics has become very popular in IoT and
    WSN systems. In this paper, optimal paths and optimal cluster heads (CH) in DIoT
    and WSN systems are presented using the HHO method. In this study, DIoT and WSN
    have emerged that provide a distributed and scalable approach to harnessing the
    potential of IoT. The proposed method is motivated by the need to address numerous
    challenges faced by DIoT and WSNs by improving energy-efficient routing and optimizing
    the selection of CH. The main goal of this work is to advance the state-of-the-art
    in energy-efficient routing and network optimization. In DIoT and WSN, data characteristics
    and network conditions can be highly uncertain. Therefore, Type 2 fuzzy sets (T2FS)
    are suitable for providing precise solutions in insecure network environments
    and provide greater flexibility for handling insecure data. This paper proposes
    a new energy-saving method to achieve the optimal path from source CH to destination
    node BS in DIoT and WSN and a new fitness function combining T2FS and HHO methods
    (T2FHHO). Then this method is applied to get the best CH. The new fitness value
    is found using the network parameters (residual energy, distance, traffic, and
    buffer size). Finally, the T2FHHO is compared with a variety of well-known methods
    in terms of energy consumption, network lifetime, and convergence curves. The
    rest of the paper is given as follows: Section 2 includes related works. Section
    3 presents the proposed method. Section 4 illustrates a detailed analysis of the
    experimental results. Finally, the conclusion is reported in Section 5. 2. Motivation
    and contribution In DIoT and WSN, energy consumption during data transmission
    must be minimized. Many methods are ways to alleviate this problem and mainly
    focus on one energy parameter and pay less attention to other related parameters,
    such as quality of service, coverage, connectivity, etc. Some protocols strive
    to choose the best path from source to destination nodes and face challenges related
    to selecting the path that provides high throughput and less delay. Therefore,
    it is a challenge and motivation to extend the lifetime of DIoT and WSNs by considering
    conflicting parameters for optimal path, CH selection, and energy-efficient routing.
    The main contributions of this paper are given as follows: • Introducing a method
    for determining the optimal path from source to destination node and increasing
    the lifetime of DIoT and WSN • The proposed method employs the HHO, derived from
    the hunting behavior of Harris Hawks and renowned for its rapid convergence rate
    and global search capabilities. • Pathfinding efficiency is increased by using
    T2FHHO to identify the most appropriate coefficients for each parameter of the
    specified fitness function. • A new fitness function is used to calculate the
    cost of each path in the network using a fuzzy method and find the next hop based
    on residual energy, distance, traffic, and buffer size. • Applying the T2FHHO
    method to get the optimal CH selection 3. Related works Efficient resource consumption
    in WSN and DIoT is one of the key fundamental issues. The methods in energy efficiency
    for determining the best path among many possible paths are of important value.
    To solve this difficulty, many multipurpose routing methods are presented. Furthermore,
    further processing is required to determine the best route out of many achievable
    paths in complex networks. Thus, meta-heuristic methods are proposed to solve
    this problem [22]. Finding the most efficient CH selection among many possible
    nodes in a wide and complex network requires further processing. It is not easy
    to find appropriate, effective coefficients for the relevant parameters. In fact,
    these issues are classified as non-deterministic polynomial-time problems (NP-hard).
    The authors propose a multi-factor-based routing algorithm and energy-efficient
    clustering for WSN, where sensors are grouped into clusters by energy-efficient
    heterogeneous clustering. Three parameters are used to select the best CH: (a)
    transmit power, the delay as a function of the node residual energy, etc.; (b)
    the distance between the node and the corresponding CH; and (c) the distance between
    the CH and the BS [8]. Address multiple conflicting factors to achieve load and
    power balance during data collection. The chosen CH always has a good balance
    of factors, which helps the network transmit data to the receiver in an energy-efficient
    manner. Both nodes and CHs consume less power, and the load is balanced among
    them, which ensures the continuity of the data collection process for a long time.
    Hence, this algorithm is beneficial for collecting information in remote areas
    over a longer period of time [23]. Any sensor node or IoT device can use a single-hop
    or multi-hop paradigm to transmit its data packets to the BS. Multi-hop approaches
    are widely used in distributed structures that are decentralized. All data packets
    are gathered by the BS and sent to a server (potentially in the cloud) for data
    analysis and end-user access [24]. An effective mechanism of data transport is
    required because sensor nodes cooperate. These nodes have issues with their low
    memory, bandwidth, computing capability, and memory space. The key challenge in
    WSN and IoT is increasing network lifetime. It is vital to note that resource
    management and network topology are crucial to network lifetime and availability.
    Efficient resource application is a real requirement in WSN and DIoT schemes.
    In these cases, a pathfinding method can achieve this goal. Nevertheless, since
    this problem exists, meta-heuristic methods can be applied. Further processing
    is necessary in order to identify the most effective path out of numerous alternatives
    in a large and complicated network. Additionally, it is challenging to locate
    suitable, efficient coefficients for the pertinent routing parameters. To find
    the best paths, two routing techniques based on GWO techniques are proposed [5].
    Another state-of-the-art meta-heuristic method, named ant colony optimization
    (ACO), has been proposed for the DIoT and WSN. The authors propose a routing protocol
    based on ACO in multi-agents that manages network assets in real-time. This method
    is applied to find the next destination for ants. However, because it doesn’t
    operate in a fair and balanced manner, it is not seen as being highly effective
    in terms of energy efficiency. The fitness function utilized does not use enough
    parameters, which is the main cause of the issue [24]. Choosing a suitable CH
    and getting the best coefficients for every parameter of a pertinent fitness function
    in CH are NP-hard problems that require additional processing. To find the best
    coefficients for every parameter, metaheuristic approaches are used [25]. The
    optimized CH routing method to minimize nodes’ energy consumption and fast data
    transmission in a WSN combines both local and global search optimization techniques
    and uses a specific routing algorithm (Dragonfly Algorithm) for effective data
    transmission [26]. To improve the energy utilization in the IoT networks through
    an optimal CH selection using HHO algorithm [21]. Many researchers use Type-1
    Fuzzy Sets (T1FS) to handle some uncertainties in DIoT and WSN, such as the estimation
    of the position of a node or the present status of the network. However, T1FS
    cannot effectively deal with uncertainties that emerge in DIoT and WSN because
    they employ T1FS that are essentially precise and crisp. As an extension of the
    concept of a T1FS, the concept of a T2FS was developed [27]. T2FS is applied to
    model the uncertainty and vagueness of the problem, which are common in real-world
    optimization problems. Using a fuzzy method in CH selection and routing can improve
    the efficiency of DIoT and WSN. A node seeking a higher probability of being selected
    as a CH is based on the values of the four descriptors it employs. The process
    dumps the output and uses fuzzy logic to select the best route and the best CHs
    [28], [29]. The fuzzy logic used offers the possibility of making decisions in
    a real-time environment, with or without complete information [30], [31]. Many
    other strategies have also been reported in the related literature. To optimize
    the network lifetime, in [32], the authors have proposed an energy-aware CH selection
    algorithm, an optimal clustering architecture, and a routing protocol. However,
    [32] has works that propose an energy-efficient fuzzy-based unequal clustering
    for IoT utilizing WSN. The fuzzy logic system is used in the cluster head selection
    process. In a clustering protocol, the main processes are creating a cluster,
    choosing a CH selection, and routing between source and destination nodes. This
    paper provides the T2FHHO method to get the best path to increasing the network
    lifetime. The T2FS is highly helpful in providing the best solution for DIoT and
    WSN. Therefore, T2FS is used (residual energy, distance, and traffic) to find
    the fitness function. Hence, T2FHHO reduces energy consumption in order to increase
    network lifetime. Numerous optimization techniques are proposed for choosing the
    appropriate path from CH to BS nodes and the best CH in DIoT and WSN based on
    the review of related studies. These are the restrictions: selecting the best
    path to the minimization and maximum of fitness function parameter values; many
    optimization techniques take a long time to analyze the fitness function (see
    Table 1). Table 1. Comparative methods. Methods Problem addressed Methodology
    Application I-GWO and Ex-GWO [5] Optimal data transmission to find the next destination
    of the target Find the best path with low power consumption to extend network
    lifetime in parallel and concurrent states WSN and DIoT ACO [24] Multi-agent real-time
    pathfinding method Finding the best path of any length for each path between source
    and destination nodes WSN and DIoT HHO [24] CH selection Choosing the best CH
    in each of the clusters in the IoT networks IoT Machine learning and meta-heuristic
    algorithms [30] CH selection Choosing the best CH and considering power and concentration
    factors as well as routing and data transmission using fuzzy clustering IoT Fuzzy
    clustering [31] CH selection The best CH is select by determining the maximum
    fitness value using a fuzzy method WSN Meta-heuristic algorithms [2], [26] Best
    CH and route Select the best CH and the Nodes transmit the aggregated data to
    the best CH or BS via the best route WSN Diversity analysis in optimization algorithms
    is important. To gain insights into the importance of diversity in optimization,
    the authors in this study [33] have explored the impact of diversity preservation
    mechanisms and strategies in nature-inspired algorithms. These studies provide
    valuable references for understanding the role of diversity in optimization and
    its potential implications for future research. 4. Proposed method In this section,
    we apply T2FHHO to get the best path from source CH to destination BS in DIoT
    and WSN to increase the networks’ lifetime. HHO, defining the problem as an optimization
    job to get the best CH in DIoT and WSN. The T2FS is highly useful because uncertainty
    provides an accurate solution. The fitness value is found using the network parameters
    (residual energy, distance, traffic, and buffer size). 4.1. Harris Hawks optimization
    method HHO is an optimization method whose idea is the hunting behavior of the
    Harris Hawk [21]. These birds perch in the air, scout out prey from a distance,
    and swoop down on it in concert. In HHO, Hawks perch and explore during this time.
    Note that in HHO, the candidate solution is called Hawk (x), while the good solution
    is called prey. A recent study indicates that HHO is an efficient optimization
    strategy for identifying good solutions to complicated problems more rapidly and
    with fewer calculations. The benefits of the HHO include avoiding local optima,
    showing a smooth passage from exploration to exploitation, offering high accuracy
    in pulling up the best parameters, and discovering a superior solution. With optimization
    methods, a problem situation is searched thoroughly to determine the optimum answer
    from the numerous available solutions. Find out the best position (location) in
    the middle of hills and valleys in the search space; the meta-heuristic begins
    the hunting in the exploration phase. In an optimization method like HHO, the
    search agent is widely spread in the search space. Nevertheless, we view equal
    probability for both strategies [21], which is calculated as: (1) where the location
    vector of Hawk is defined as , whereas the location vector of Hawk in the first
    iteration is represented by . Hawk’s current location vector is , and the best
    location is . The lower and upper bounds of variables are L and U, respectively.
    Random numbers between [0, 1] are represented by the variables a1, a2, a3, a4,
    and l. The formula for , which represents the mean location of the solution, is
    as follows: (2) where displays the location of the hawks after each n iteration
    and K shows the full number of hawks. During the escaping actions, the power of
    the prey (Z) significantly decreases throughout, which causes the HHO method to
    switch from exploration to exploitation. The power of the prey [21], can be expressed
    as follows: (3) where Z denotes the prey’s escape energy, shows the number of
    iterations, and shows the initial energy that varies from in each iteration. Regarding
    the exploitation phase, it comprises four different strategies, which are formulated
    as follows: The soft besiege strategy holds when and . In this phase, the Hawk
    updates its location [21], which is explained as: (4) (5) where J 2 (1 a5) specifies
    the rabbit’s jump power and indicates the distance between the rabbit and Hawk
    in iteration n. Here, the random variable is r5. The hard besiege strategy holds
    when and . In this phase, the Hawk modifies its place [21], which is formulated
    as: (6) When and are both present, a soft besiege strategy with progressive rapid
    dives is still effective. Before prey may effectively flee at this phase, all
    hawks must choose the best posture to target the prey, which can be formulated
    as follows: (7) In HHO, if the movement does not approve of fighting the prey,
    a dive is chosen based on a levy flight (FL) [21], which is formulated as: (8)
    where E shows the problem dimension. S shows a vector of random numbers with a
    size of . The FL function [21] is written as follows: (9) where is a constant
    with a value of 1.5 and m and n are random variables in the range [0, 1]. The
    following formulation can be used to describe how Hawk positions are updated throughout
    the soft besiege phase: (10) where A and M are obtained using Eqs. (7), (8), and
    both refer to the new iteration’s next location. In HHO, besiege with the progressive
    rapid dives strategy occurs when and [21], which is formulated as: (11) where
    (12) (13) where has been obtained in Eq. (2). 4.2. Proposed method In DIoT and
    WSN, T2FHHO is used to optimize various facets of the network, such as energy
    efficiency, data routing, and energy consumption. The HHO has many advantages,
    such as the distributed nature of the network to optimize performance, better
    convergence speed, dodging of the device at local and global extremes, and ameliorated
    threshold coefficients. HHO uses T2FS to handle uncertainties in the fitness value
    scores (see Algorithm 1). In this paper, the T2FHHO method is used to address
    the critical challenge of optimizing the path selection from source to destination
    nodes. Our method extends beyond conventional routing methods, selecting the best
    CH and introducing a novel fitness function that intelligently considers parameters
    such as residual energy, distance, traffic, and buffer size. In this investigation,
    BS is taken to be the final node. To determine the most appropriate path, the
    BS node considers other useful criteria that are specified in the new fitness
    function. Consequently, T2FHHO can offer the greatest solution for obtaining the
    best path in search space. To put it briefly, they identify the best route among
    the sets of feasible paths by making multiple hops. In DIoT and WSNs, clustering
    involves organizing sensor nodes into groups to improve energy efficiency. In
    this paper, we use fuzzy logic with triangular and trapezoidal membership functions
    to assign nodes to clusters based on factors such as residual energy, distance,
    traffic, and buffer size. Download : Download high-res image (620KB) Download
    : Download full-size image 4.3. Network model We make the following assumptions
    about DIoT and WSN systems: • The network consists of sensor nodes randomly deployed
    within a square area of size . Each sensor node is uniquely identified by a network
    ID. • BS is situated at the center of the network. All sensor nodes are assumed
    to have at least one neighbor, which means they are within the communication range
    of at least one other node. Data packets from sensor nodes can be transmitted
    to the BS in one or multiple hops. The maximum number of hops to reach the BS
    is assumed to be four. • All sensor nodes in the network are assumed to be homogeneous.
    This means that they have the same initial energy level and communication range.
    Homogeneity simplifies the network model and allows for uniform treatment of all
    nodes. 4.4. CH selection The variables used in this procedure are mapped. Because
    of the increased degrees of freedom and greater number of parameters (residual
    energy, distance, traffic, and buffer), the primary advantage of T2FS over T1FS
    is its improved management of uncertainty, which includes the fuzzifier, rule
    base, and defuzzifier tasks. Fuzzifier A fuzzier is a tool that converts exact
    values into fuzzy values [34]. The fuzzy inputs in this work are residual energy,
    distance, traffic status, and buffer size. In a fuzzy set, the membership value
    and linguistic variable are crucial to describing the crisp value in a given situation.
    The linguistic variables in these fuzzy sets contain speeches or sentences instead
    of books. Similarly, for residual energy, traffic status, and buffer rate, we
    can establish linguistic terms as “low”, “medium”, and “high”. For distance, we
    can establish linguistic terms such as “close”, “medium”, and “far”. In this work,
    we create membership functions for each linguistic variable using triangular and
    trapezoidal functions in the T2FHHO based on the characteristics of the input
    parameters. Triangular and trapezoidal membership functions are commonly used
    in fuzzy logic systems. Rule Base In this paper, the fuzzy rules are calculated
    by considering the input (residual energy (RE), distance, traffic status (TS),
    and buffer size (BZ)) and two output parameters (fitness value (FV) and optimal
    path (OP)). The value of fuzzy rules is defined by the values of the linguistic
    and input variables. The IF-THEN rules are used to specify the fuzzy rules and
    are then generated using the Mamdani system. Table 2 presents the fuzzy rules.
    Defuzzifier Table 2. T2FHHO fuzzy rules. Rule RE Distance TS BZ FV OP 1 Low Close
    High Medium Very high Preferred 2 Medium Medium Low High Moderate Acceptable 3
    High Far High Low Low Discouraged 4 Low Far Low Medium Moderate Acceptable 5 Medium
    Close High Low High Preferred 6 Low Medium Medium High High Preferred 7 High Close
    Low Low Moderate Discouraged 8 High Medium High Medium Very low Acceptable 9 Medium
    Far Medium Medium Low Acceptable One of the stages that converts the fuzzy output
    into a precise value is defuzzification. The center of gravity is a defuzzification
    technique [29] (see Fig. 2). In WSNs, clustering involves organizing sensor nodes
    into groups or clusters to enhance energy efficiency. In this paper we use the
    fuzzy logic to assign nodes to clusters based on factors such as residual energy,
    distance, traffic, and buffer size. Download : Download high-res image (296KB)
    Download : Download full-size image Fig. 2. Membership functions. The maintenance
    of clusters can involve periodic updates of membership values, reevaluation of
    fuzzy rules, and adaptation to changes in the network environment. The proposed
    T2FHHO method likely incorporates mechanisms to handle changes in the network,
    ensuring that the clusters remain effective in optimizing energy efficiency, data
    routing, and other network objectives. 4.5. Fitness function To assess the performance
    of the methods and select the optimum one, residual energy, distance, traffic
    and buffer size are considered. A new fitness value is developed to get the best
    CH and the best route, and it is used by these methods. A route is not necessary
    if the number of hops between CH and BS is 1. The problem caused by the multi-hop
    mechanism is that at that place there may be multiple paths of varying sizes and
    possible involvement of intermediate nodes (see Fig. 3). To solve this issue,
    the optimal route for any number of hops is determined at the end of each iteration
    based on T2FS using Eqs. (15), (16), and the best path is chosen to utilize Eq.
    (17). The new fitness value using T2FHHO can help DIoT and WSN perform better
    by using these methods to determine the best path with the least cost between
    two points with T2FS. The proposed fitness function is defined in Eq. (14). (14)
    where the coefficients , and are power parameters between 0 and 1 computed using
    the T2FHHO method, where and . shows the distance between two nodes i and j using
    T2FS. denotes the number of hops from CH to BS. indicates the current traffic
    intensity between them using T2FS. indicates the residual energy. indicates the
    current energy of the receiver node. Download : Download high-res image (330KB)
    Download : Download full-size image Fig. 3. Finding the optimal path. 4.6. Pathfinding
    method Pathfinding is another important aspect of DIoT and WSN systems. The major
    goal of this method is to identify the best route between CH and BS while considering
    various constraints such as node energy, distance, and transmission quality. T2FHHO
    can be used to optimize pathfinding by taking these constraints into account and
    using a combination of fuzzy logic and Harris Hawk’s hunting behavior to determine
    the optimal route with a minimum cost (see Fig. 3). This method follows three
    phases (see Fig. 4): • Phase 1: Calculation of Path Cost In the first one, Eq.
    (14) is utilized to find the path cost for every middle node between the CH and
    BS nodes. The T2FHHO method efficiently searches for the best coefficient numbers
    for each parameter in order to get the best path cost. • Phase 2: Calculation
    of Candidate Path Cost In the second one, the method computes the cost of the
    candidate path using Eq. (15) [5]. Candidate paths from CH to BS are evaluated
    according to their cost. In turn, fuzzy logic is applied to deal with uncertainty
    and inaccuracies in the input data. Then, the optimum route for each hop is determined
    using Eq. (16) [5], utilizing the route having the smallest cost. This process
    is used for all hops. This selection is carried out for all hops along the path
    of various sizes. Select the optimal candidate of the same length. (15) (16) •
    Phase 3: Select the Best Path Finally, the method selects the optimal CH and path
    between these nodes based on Eq. (17) from the found candidate paths. This path
    must also have the lowest cost. T2FHHO looks like the best route between CH and
    BS with the lowest costs. (17) In this network, information about each node is
    stored in the BS. This information is acquired by sending a request data packet
    from the BS to the sensor nodes during the network’s initialization phase. The
    BS stores data related to residual energy, traffic status, buffer size, distance,
    and the neighbor list. Download : Download high-res image (449KB) Download : Download
    full-size image Fig. 4. The mechanism of proposed method in pathfinding. 4.7.
    Other features of the proposed method In DIoT and WSN systems, multiple sources
    and destination nodes can communicate with each other concurrently, requiring
    parallel processing to handle the large amounts of data generated. In this research,
    the proposed node deployment method has other features besides the combination
    of parallel and concurrent applications, which seems well suited to handle such
    scenarios and allow efficient data processing in such complex systems. By utilizing
    parallel and concurrent processing, the algorithm can carefully search for the
    most efficient paths between these nodes simultaneously. 5. Results and discussion
    In this section, our simulation results are developed using MATLAB R2022b. The
    energy consumption, convergence curves, and network lifetime are shown in order
    to assess the effectiveness of the strategies and select the best one. The proposed
    method is contrasted with the PSO [16], WOA [19], GWO [20], Energy optimization
    for green communication in IoT using HHO (HHO-IoT) [21], A meta-heuristic optimized
    cluster head selection based routing algorithm for WSN (MOCRAW) [26]. 5.1. Parameter
    settings Over 30 iterations of the outcomes of various optimization methods are
    performed. The maximum number of iterations is 50. The number of Hawks is 100,
    …, 5000. The initial energy is set at 0.1 J, and each packet should consume of
    energy during reception and transfer. Each packet has a size of 250 kB and is
    broadcast for 600 ms. There is one legitimate traffic source per edge. Each node’s
    maximum buffer size is 10,000 kB (see Table 3). Table 3. Simulation parameters.
    Parameters sets Values Network 100 100 m Nodes 100, …, 500–1000, …, 5000 Number
    of cluster 4 BS location 50 50 m Data packet 250 kB and 0.5, 0.5 c1, c2, c3 and
    c4 0.15, 0.20, 0.25, and 0.4 0.5 0.008 5.2. Results 5.2.1. Energy consumption
    The network must be subjected to the energy consumption test. The employed method
    is evaluated in situations with 10 sensor nodes of various numbers. The testing
    results showed that the T2FHHO was more successful in reducing the network’s overall
    energy consumption. The search agents in the methods used in this experiment imitate
    the network sensor nodes’ lifespan by absorbing the leftover energy following
    a predetermined number of repetitions, depending on the fitness function. The
    overall energy consumption for each network size is then provided. According to
    each network scenario, Fig. 5 indicates the overall energy usage for the T2FHHO
    method and four other methods. As it is obvious from Fig. 5, T2FHHO consumes the
    least amount of energy for all the varied networks sized from 100 to 5000, among
    other methods employed in this research. According to Fig. 5, which reports the
    overall energy consumption of the DIoT and WSN with chosen methods, the full energy
    consumption in the 1000-node situation with T2FHHO, HHO, WOA, PSO, GWO and MOCRAW
    methods is 97 456, 107 456, 488 989, 131 419, 1 133 185, and 97 459, respectively.
    Fig. 6 presents the power consumption along the time, showing at least 3–4 nodes
    from the border with 1–2 connections, 2 nodes with few connections, 3 nodes with
    many connections, and the 4 nodes with the most connections. It shows that a border
    node with 1–2 connections uses the least power over the course of the observation.
    Several factors affect the power consumption of a DIoT and WSN utilizing the T2FHHO
    method. It is crucial to take these parameters into account when deploying the
    network to optimize power efficiency and guarantee the length of the nodes’ battery
    lives. Download : Download high-res image (319KB) Download : Download full-size
    image Fig. 5. Comparison of energy consumption between the different methods.
    Fig. 7 illustrates the relationship between power consumption and the size of
    the network in DIoT and WSN. The main concept behind energy conservation in a
    network is to choose the best CH and shorten the transmission route from the CH
    to the BS. As a result, the exploited T2FHHO outperforms other methods in energy
    usage as the size of the network grows. Download : Download high-res image (106KB)
    Download : Download full-size image Fig. 6. Power consumption vs. time in DIoT
    and WSN. Download : Download high-res image (161KB) Download : Download full-size
    image Fig. 7. Power consumption vs. time between different methods. 5.2.2. Network
    lifetime One of the most crucial aspects of DIoT and WSN is the network’s lifetime.
    The simulation results were evaluated for 100 nodes with an initial energy of
    0.5 J per node, and each method was run for 100 to 5000 rounds. The simulation
    results presented in Fig. 8 show that T2FHHO is better in terms of network lifetime
    than previous methods. Specifically, the PSO depletes all the energy of the nodes
    before the 2000th round, while the WOA and GWO methods do so before the 3000th
    round. The MOCRAW and T2FHHO method lasts until the 5000th round, but its performance
    is inferior to that of the T2FHHO-based method. Download : Download high-res image
    (236KB) Download : Download full-size image Fig. 8. Network lifetime. 5.2.3. Convergence
    rate One of the most helpful graphics for applying an optimization method to identify
    the optimal solution is a convergence curve. To measure the performance of the
    considered methods in terms of utilizing and decreasing the fitness score to attain
    the lowest energy consumption rate, the convergence curves were chosen from each
    method after 1000 iterations to understandably assess the convergence of methods
    abilities. Fig. 9 shows a comparison between T2FHHO line plots of the convergence
    curves for all reasonable network sizes and other well-known optimization techniques.
    Fig. 9 illustrates that the T2FHHO approach converges to the optimum, the quickest
    of all methods. In this graph, the four curves are not all the same; Fig. 9a and
    c are distinct from Fig. 9b and d. This is because each curve contains a different
    network size. Depending on the approach, the factors in the fitness function,
    such as residual energy, distance, and traffic, will also vary depending on the
    network scale. Download : Download high-res image (418KB) Download : Download
    full-size image Fig. 9. Convergence rate of the methods over 1000–10 000 sizes.
    6. Discussion In the experiment described in this part, network sizes ranging
    from 100 to 5000 nodes were used to compare the performance of the T2FHHO in DIoT
    and WSN. To ensure the statistical significance of the findings when compared
    to well-known methods like HHO, WOA, PSO, GWO, and MOCRAW, the experimentation
    was repeated M times. The typical evaluation measure found by the fitness function
    is for all possible network sizes over a set number of generations. Table 4 summarizes
    the performance metrics for all the competing methods and shows that the proposed
    T2FHHO outperformed the competing methods for all network sizes in terms of mean,
    best, and worst. Additionally, these empirical results support T2FHHO capability
    to select the best path from CH to BS. To summarize the received statistical results,
    Table 5 indicates the average best and worst average evaluation metrics found
    by the above fitness functions according to all the considered network sizes for
    other methods. The T2FHHO method used accomplishes optimum performance, which
    demonstrates its quality to decrease the fitness function and select the best
    CH and route. To examine the time consumption of the methods after 1000 iterations,
    Table 6 indicates that the proposed method has a faster running time than the
    other ways, which take longer to get the best CH and the route with low power
    consumption. Table 4. Average evaluation criteria for the different methods. Nodes
    Coverage T2FHHO HHO-IoT WOA PSO GWO MOCRAW 100 Mean 0.103 0.123 0.292 0.368 0.875
    0.105 Best 0.111 0.121 0.126 0.322 0.420 0.119 Worst 0.132 0.144 1.08 0.408 1.17
    0.135 200 Mean 0.059 0.062 0.081 0.92 0.214 0.058 Best 0.059 0.061 0.062 0.182
    0.185 0.057 Worst 0.078 0.080 0.205 0.232 0.867 0.079 300 Mean 0.080 0.853 0.071
    0.197 0.262 0.083 Best 0.039 0.041 0.042 0.243 0.082 0.041 Worst 0.102 0.139 0.121
    0.281 0.430 0.104 400 Mean 0.030 0.034 0.037 0.149 0.200 0.033 Best 0.039 0.041
    0.042 0.243 0.082 0.037 Worst 0.039 0.044 0.118 0.439 0.159 0.041 500 Mean 0.020
    0.027 0.037 0.089 0.078 0.022 Best 0.021 0.024 0.025 0.028 0.070 0.023 Worst 0.021
    0.028 0.046 0.204 0.090 0.020 1000 Mean 0.019 0.0280 0.037 0.204 0.044 0.021 Best
    0.011 0.012 0.067 0.018 0.042 0.014 Worst 0.041 0.046 0.067 0.057 0.046 0.041
    5000 Mean 0.005 0.006 0.0088 0.009 0.019 0.008 Best 0.0031 0.0033 0.0063 0.019
    0.0073 0.0039 Worst 0.0069 0.0075 0.0107 0.020 0.011 0.0071 Table 5. Average evaluation
    criteria for the different methods. Coverage T2FHHO HHO-IoT WOA PSO GWO MOCRAW
    Mean 0.021 0.037 0.061 0.119 0.194 0.023 Best 0.020 0.029 0.038 0.107 0.083 0.021
    Worst 0.049 0.051 0.168 0.129 0.324 0.051 The time complexity of proposed method
    expressed as O(M * N), where M is the number of iterations and N is the number
    of sensor nodes in the network. Table 6. Time consumption. Parameters T2FHHO HHO-IoT
    WOA PSO GWO MOCRAW Running time 5.50 ms 6.22 ms 7.77 ms 8.11 ms 7.36 m 5.91 ms
    Success rate 99% 98% 94% 90% 95% 98% 7. Conclusion This paper solves one of the
    biggest problems in DIoT and WSNs by reducing network energy consumption. The
    best CH and path from the source (CH) to the destination (BS) are determined by
    considering all potential routes that can connect any two nodes. Finding the most
    efficient paths between nodes can make more efficient use of resources and extend
    system life by reducing network energy consumption. This method calculates the
    cost of each network path using a fitness function that takes into account the
    energy consumption rate, remaining energy, distance, traffic volume, buffer size.
    Our proposed T2FHHO method has been used together with other well-known methods
    in DIoT and WSN. The results show that our method generally performs better than
    other methods in finding the optimal solution. The proposed method can be applied
    in subsequent research to solve challenging issues in numerous disciplines, including
    electrical circuits, connected car networks, mobile robotics’ 3D path planning,
    and systems’ optimum node localization. Despite the importance of this research,
    it is necessary to acknowledge its limitations. The study is based on simplifications
    and assumptions regarding grid conditions and energy models. Real-world scenarios
    can be considerably more complex and dynamic. Hence, future work should aim to
    address these limitations through more comprehensive testing and robust adaptations.
    In future directions, this work can help use heterogeneous sensor nodes to support
    different IoT devices, integrate machine learning techniques, and enhance security
    and privacy measures. CRediT authorship contribution statement Ines Lahmar: Data
    curation, Investigation, Writing – original draft. Aida Zaier: Data curation,
    Investigation, Supervision, Validation, Writing – original draft. Mohamed Yahia:
    Investigation, Supervision. Jaime Lloret: Supervision, Writing – review & editing,
    Investigation. Ridha Bouallegue: Investigation, Supervision, Visualization. Declaration
    of competing interest Authors declare that they have no conflict of interest.
    Data availability Data will be made available on request. References [1] Chahal
    R.K., Kumar N., Batra S. Trust management in social internet of things: A taxonomy,
    open issues, and challenges Comput. Commun., 150 (2020), pp. 13-46 View PDFView
    articleView in ScopusGoogle Scholar [2] García L., Parra L., Jimenez J.M., Parra
    M., Lloret J., Mauri P.V., Lorenz P. Deployment strategies of soil monitoring
    WSN for precision agriculture irrigation scheduling in rural areas Sensors, 21
    (5) (2021), p. 1693 CrossRefGoogle Scholar [3] Seyyedabbasi A., Aliyev R., Kiani
    F., Gulle M.U., Basyildiz H., Shah M.A. Hybrid algorithms based on combining reinforcement
    learning and metaheuristic methods to solve global optimization problems Knowl.-Based
    Syst., 223 (2021), Article 107044 View PDFView articleView in ScopusGoogle Scholar
    [4] Chen J., Wei Z., Li S., Cao B. Artificial intelligence aided joint bit rate
    selection and radio resource allocation for adaptive video streaming over F-RANs
    IEEE Wirel. Commun., 27 (2) (2020), pp. 36-43 CrossRefView in ScopusGoogle Scholar
    [5] Seyyedabbasi A., Kiani F., Allahviranloo T., Fernandez-Gamiz U., Noeiaghdam
    S. Optimal data transmission and pathfinding for WSN and decentralized IoT systems
    using I-GWO and Ex-GWO algorithms Alex. Eng. J., 63 (2023), pp. 339-357 View PDFView
    articleView in ScopusGoogle Scholar [6] Rajpoot P., Dwivedi P. Multiple parameter
    based energy balanced and optimized clustering for WSN to enhance the lifetime
    using MADM approaches Wirel. Pers. Commun., 106 (2019), pp. 829-877 CrossRefView
    in ScopusGoogle Scholar [7] Qureshi K.N., Bashir M.U., Lloret J., Leon A. Optimized
    cluster-based dynamic energy-aware routing protocol for wireless sensor networks
    in agriculture precision J. Sensors, 2020 (2020), pp. 1-19 CrossRefGoogle Scholar
    [8] Rajpoot P., Harsh Singh S., Verma R., Dubey K., Kumar Pandey S., Verma S.
    Multi-factor-based energy-efficient clustering and routing algorithm for WSN Soft
    Computing: Theories and Applications: Proceedings of SoCTA 2018, Springer (2020),
    pp. 571-581 CrossRefView in ScopusGoogle Scholar [9] Chaudhry R., Kumar N. A multi-objective
    meta-heuristic solution for green computing in software-defined wireless sensor
    networks IEEE Trans. Green Commun. Netw., 6 (2) (2021), pp. 1231-1241 Google Scholar
    [10] Feng Z.-k., Liu S., Niu W.-j., Jiang Z.-q., Luo B., Miao S.-m. Multi-objective
    operation of cascade hydropower reservoirs using topsis and gravitational search
    algorithm with opposition learning and mutation Water, 11 (10) (2019), p. 2040
    CrossRefView in ScopusGoogle Scholar [11] Feng Z.-k., Liu S., Niu W.-j., Li S.-s.,
    Wu H.-j., Wang J.-y. Ecological operation of cascade hydropower reservoirs by
    elite-guide gravitational search algorithm with Lévy flight local search and mutation
    J. Hydrol., 581 (2020), Article 124425 View PDFView articleView in ScopusGoogle
    Scholar [12] Harb A., Kassem H., Ghorayeb K. Black hole particle swarm optimization
    for well placement optimization Comput. Geosci., 24 (2020), pp. 1979-2000 CrossRefView
    in ScopusGoogle Scholar [13] Hatamian M., Barati H., Movaghar A., Naghizadeh A.
    CGC: centralized genetic-based clustering protocol for wireless sensor networks
    using onion approach Telecommun. Syst., 62 (2016), pp. 657-674 CrossRefView in
    ScopusGoogle Scholar [14] Pant M., Zaheer H., Garcia-Hernandez L., Abraham A.,
    et al. Differential evolution: A review of more than two decades of research Eng.
    Appl. Artif. Intell., 90 (2020), Article 103479 Google Scholar [15] Slowik A.,
    Kwasnicka H. Evolutionary algorithms and their applications to engineering problems
    Neural Comput. Appl., 32 (2020), pp. 12363-12379 CrossRefView in ScopusGoogle
    Scholar [16] He X., Zhou Y., Chen Z., Zhang J., Chen W.-N. Large-scale evolution
    strategy based on search direction adaptation IEEE Trans. Cybern., 51 (3) (2019),
    pp. 1651-1665 CrossRefView in ScopusGoogle Scholar [17] Eberhart R., Kennedy J.
    A new optimizer using particle swarm theory MHS’95. Proceedings of the Sixth International
    Symposium on Micro Machine and Human Science, Ieee (1995), pp. 39-43 Google Scholar
    [18] Alyasseri Z.A.A., Khader A.T., Al-Betar M.A., Awadallah M.A., Yang X.-S.
    Variants of the flower pollination algorithm: a review Nat.-Inspir. Algorithms
    Appl. Optim. (2018), pp. 91-118 CrossRefView in ScopusGoogle Scholar [19] Khishe
    M., Mosavi M.R. Chimp optimization algorithm Expert Syst. Appl., 149 (2020), Article
    113338 View PDFView articleView in ScopusGoogle Scholar [20] Mirjalili S., Mirjalili
    S.M., Lewis A. Grey wolf optimizer Adv. Eng. Softw., 69 (2014), pp. 46-61 View
    PDFView articleGoogle Scholar [21] Dev K., Maddikunta P.K.R., Gadekallu T.R.,
    Bhattacharya S., Hegde P., Singh S. Energy optimization for green communication
    in IoT using harris hawks optimization IEEE Trans. Green Commun. Netw., 6 (2)
    (2022), pp. 685-694 CrossRefView in ScopusGoogle Scholar [22] Zamani H., Nadimi-Shahraki
    M.H., Gandomi A.H. Starling murmuration optimizer: A novel bio-inspired algorithm
    for global and engineering optimization Comput. Methods Appl. Mech. Engrg., 392
    (2022), Article 114616 View PDFView articleView in ScopusGoogle Scholar [23] Rajpoot
    P., Dwivedi P. Optimized and load balanced clustering for wireless sensor networks
    to increase the lifetime of WSN using MADM approaches Wirel. Netw., 26 (1) (2020),
    pp. 215-251 CrossRefView in ScopusGoogle Scholar [24] Seyyedabbasi A., Kiani F.
    MAP-ACO: An efficient protocol for multi-agent pathfinding in real-time WSN and
    decentralized IoT systems Microprocess. Microsyst., 79 (2020), Article 103325
    View PDFView articleView in ScopusGoogle Scholar [25] Kiani F., Seyyedabbasi A.,
    Nematzadeh S. Improving the performance of hierarchical wireless sensor networks
    using the metaheuristic algorithms: efficient cluster head selection Sensor Rev.,
    41 (4) (2021), pp. 368-381 CrossRefView in ScopusGoogle Scholar [26] Chaurasia
    S., Kumar K., Kumar N. Mocraw: A meta-heuristic optimized cluster head selection
    based routing algorithm for wsns Ad Hoc Netw., 141 (2023), Article 103079 View
    PDFView articleView in ScopusGoogle Scholar [27] Zadeh L.A. The concept of a linguistic
    variable and its application to approximate reasoning—I Inf. Sci., 8 (3) (1975),
    pp. 199-249 View PDFView articleView in ScopusGoogle Scholar [28] Akhbari A.,
    Ghaffari A. Selfish node detection based on fuzzy logic and harris hawks optimization
    algorithm in IoT networks Secur. Commun. Netw., 2021 (2021), pp. 1-20 CrossRefGoogle
    Scholar [29] Saini R., Dubey K., Rajpoot P., Gautam S., Yaduvanshi R. Lifetime
    maximization of heterogeneous WSN using fuzzy-based clustering Recent Adv. Comput.
    Sci. Commun. (Formerly: Recent Pat. Comput. Sci.), 14 (9) (2021), pp. 3025-3039
    CrossRefView in ScopusGoogle Scholar [30] Hatamian M., Bardmily M.A., Asadboland
    M., Hatamian M., Barati H. Congestion-aware routing and fuzzy-based rate controller
    for wireless sensor networks Radioengineering, 25 (1) (2016), pp. 114-123 CrossRefView
    in ScopusGoogle Scholar [31] de Souza R.W.R., De Oliveira J.V.C., Passos L.A.,
    Ding W., Papa J.P., de Albuquerque V.H.C. A novel approach for optimum-path forest
    classification using fuzzy logic IEEE Trans. Fuzzy Syst., 28 (12) (2019), pp.
    3076-3086 Google Scholar [32] Alharbi M.A., Kolberg M., Zeeshan M. Towards improved
    clustering and routing protocol for wireless sensor networks EURASIP J. Wireless
    Commun. Networking, 2021 (1) (2021), pp. 1-31 Google Scholar [33] Kiani F., Nematzadeh
    S., Anka F.A., Findikli M.A. Chaotic sand cat swarm optimization Mathematics,
    11 (10) (2023), p. 2340 CrossRefView in ScopusGoogle Scholar [34] Kiamansouri
    E., Barati H., Barati A. A two-level clustering based on fuzzy logic and content-based
    routing method in the internet of things Peer-to-Peer Netw. Appl., 15 (4) (2022),
    pp. 2142-2159 CrossRefView in ScopusGoogle Scholar Cited by (0) © 2023 The Author(s).
    Published by Elsevier B.V. Recommended articles Blockchain based secure Ownership
    Transfer Protocol for smart objects in the Internet of Things Internet of Things,
    Volume 25, 2024, Article 101002 Kiran M., …, Varun Yarehalli Chandrappa View PDF
    LEGAN: A low-light image enhancement generative adversarial network for industrial
    internet of smart-cameras Internet of Things, Volume 25, 2024, Article 101054
    Jing Tao, …, W.H. Ip View PDF EP-CuMAC: Energy and performance-efficient integrity
    protection for narrow-band IoT Internet of Things, Volume 25, 2024, Article 101004
    Vamshi Sunku Mohan, …, Krishnashree Achuthan View PDF Show 3 more articles Article
    Metrics Captures Readers: 4 View details About ScienceDirect Remote access Shopping
    cart Advertise Contact and support Terms and conditions Privacy policy Cookies
    are used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: Lahmar, Zaier, Yahia, Lloret, & Bouallegue, 2023
  journal: Internet of Things (Netherlands)
  limitations: null
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  title: Optimal data transmission for decentralized IoT and WSN based on Type-2 Fuzzy
    Harris Hawks Optimization
  verbatim_quote1: The proposed method employs the HHO, derived from the hunting behavior
    of Harris Hawks and renowned for its rapid convergence rate and global search
    capabilities.
  verbatim_quote2: Pathfinding efficiency is increased by using T2FHHO to identify
    the most appropriate coefficients for each parameter of the specified fitness
    function.
  verbatim_quote3: '>'
- analysis: 'The proposal presented in this paper is aimed at addressing the problem
    of data collection and transmission within the context of environmental monitoring
    systems. The authors introduce AlLoRa, a new protocol that is based on LoRa, that
    seeks to overcome the limitations of existing approaches, particularly in scenarios
    involving remote and challenging natural environments.


    AlLoRa is designed to be a flexible and modular solution, enabling its adaptation
    to a wide range of hardware configurations and supporting mesh networking capabilities.
    This versatility makes it suitable for deployment in diverse environmental monitoring
    scenarios, where the collection of data from sensors located in remote or hard-to-reach
    areas is crucial.


    The evaluation of AlLoRa''s performance was conducted through a series of real-world
    tests, assessing its efficiency in terms of transfer time, energy usage, effective
    range, and mesh networking capabilities. The results obtained demonstrate the
    protocol''s ability to achieve reliable data transfer, with low power consumption,
    over extended distances, even in challenging conditions characterized by low or
    no connectivity.


    One of the key strengths of AlLoRa lies in its mesh networking capabilities, which
    allow for the extension of communication range and the provision of more robust
    and reliable connectivity in scenarios where direct communication paths may be
    obstructed or unreliable. The successful implementation of mesh networking in
    AlLoRa was validated through extensive testing, showcasing its ability to maintain
    stable data transfer over distances exceeding 20 kilometers, even in the presence
    of obstacles and challenging terrain.


    In comparison to other commonly used IoT communication technologies, AlLoRa stands
    out due to its advantages in terms of range and energy efficiency. While technologies
    such as Bluetooth and Wi-Fi offer shorter communication ranges, typically limited
    to a few hundred meters, AlLoRa demonstrated the capability to achieve effective
    long-range connectivity of up to 11.69 kilometers using point-to-point communication.
    Additionally, AlLoRa''s low power consumption makes it particularly well-suited
    for applications where battery life and energy efficiency are critical considerations.


    Overall, the introduction of AlLoRa as a modular and mesh-capable communication
    protocol for environmental sensing represents a significant contribution to the
    field of environmental monitoring. Its demonstrated performance in terms of transfer
    time, energy consumption, range, and mesh networking capabilities make it a compelling
    choice for researchers and practitioners seeking to develop robust and reliable
    data collection and transmission solutions in the context of environmental monitoring
    systems.'
  authors:
  - Arratia B.
  - Rosas E.
  - Calafate C.T.
  - Cano J.C.
  - Cecilia J.M.
  - Manzoni P.
  citation_count: '0'
  description: Environmental intelligence aims to improve the decision-making process
    for high social and environmental value ecosystems. To this end, data are collected
    using different sensors to allow monitoring of different variables of interest.
    Typically, these ecosystems cover a large geographical area, with spots of low
    or no connectivity, preventing their monitoring in real time. In this work, we
    propose AlLoRa (Advanced Layer LoRa), a modular, low-power, long-range communication
    protocol based on LoRa, that allows monitoring of remote natural areas. AlLoRa
    has been evaluated and tested in an operational oceanographic buoy that has been
    deployed to address the specific environmental crisis of the Mar Menor lagoon
    in southeastern Spain - a region spanning 135 Km2 currently undergoing severe
    eutrophication process. Our results reveal that AlLoRa offers good performance
    regarding transfer time, power consumption, and range. The throughput ranged from
    around 2 kbps with SF7 to approximately 300 bps with SF11; the power consumption
    per kilobyte transmitted varied from 395μWh to 428μWh depending on the specific
    device used. The Mesh mode test successfully maintained communication between
    nodes over 20.33 km. Further tests in various configurations under challenging
    conditions validated the mesh forwarding approach. Despite tripling the distance,
    the system maintained reliable data transfer, improving speeds from the original
    point-to-point setup.
  doi: 10.1016/j.comcom.2024.02.014
  full_citation: 'AlLoRa: Empowering environmental intelligence through an advanced
    LoRa-based IoT solution'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Background and related work 3. Proposed
    solution 4. Results and discussion 5. Conclusions CRediT authorship contribution
    statement Declaration of competing interest Acknowledgments Data availability
    References Show full outline Figures (19) Show 13 more figures Tables (1) Table
    1 Computer Communications Volume 218, 15 March 2024, Pages 44-58 AlLoRa: Empowering
    environmental intelligence through an advanced LoRa-based IoT solution Author
    links open overlay panel Benjamín Arratia, Erika Rosas, Carlos T. Calafate, Juan-Carlos
    Cano, José M. Cecilia, Pietro Manzoni Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.comcom.2024.02.014
    Get rights and content Under a Creative Commons license open access Abstract Environmental
    intelligence aims to improve the decision-making process for high social and environmental
    value ecosystems. To this end, data are collected using different sensors to allow
    monitoring of different variables of interest. Typically, these ecosystems cover
    a large geographical area, with spots of low or no connectivity, preventing their
    monitoring in real time. In this work, we propose AlLoRa (Advanced Layer LoRa),
    a modular, low-power, long-range communication protocol based on LoRa, that allows
    monitoring of remote natural areas. AlLoRa has been evaluated and tested in an
    operational oceanographic buoy that has been deployed to address the specific
    environmental crisis of the Mar Menor lagoon in southeastern Spain - a region
    spanning 135 Km currently undergoing severe eutrophication process. Our results
    reveal that AlLoRa offers good performance regarding transfer time, power consumption,
    and range. The throughput ranged from around 2 kbps with SF7 to approximately
    300 bps with SF11; the power consumption per kilobyte transmitted varied from
    to depending on the specific device used. The Mesh mode test successfully maintained
    communication between nodes over 20.33 km. Further tests in various configurations
    under challenging conditions validated the mesh forwarding approach. Despite tripling
    the distance, the system maintained reliable data transfer, improving speeds from
    the original point-to-point setup. Previous article in issue Next article in issue
    Keywords LoRaIoTMeshEnvironmental intelligenceGreen connectivity 1. Introduction
    Environmental sensing provides mechanisms for efficiently treating water, waste,
    or emergencies with which to face the new challenges of globalization and climate
    change [1]. This sector evolves into the so-called Environmental Intelligence
    (EI), where information about a particular region or process is collected for
    decision-makers’ benefit using more than one inter-related source. The proliferation
    of sensors increasingly changes how we relate to and manage the environment, providing
    data to answer scientific questions and generating social, cultural, and political
    impacts. The main data generation engine for EI is the Internet of Things (IoT),
    where numerous devices interact with our environment, monitoring it and even autonomously
    taking actions [2]. The potential scalability of IoT can facilitate the creation
    of a Global Environmental Sensor Web [3], offering an analytical tool for a better
    understanding of our planet and enabling informed ecological decisions [4]. However,
    implementing and adopting IoT systems in natural environments encounter numerous
    challenges, from communication and network architectures to data analysis [5].
    These environments often span vast geographical areas with limited connectivity
    [6], presenting a significant challenge in designing novel approaches for integrating,
    operating, and managing large-scale IoT networks. To address these challenges,
    this research introduces Advanced Layer LoRa (AlLoRa), a modular communication
    protocol tailored for EI applications. AlLoRa enhances IoT devices’ connectivity
    and data transmission capabilities in remote and challenging natural environments,
    promoting the scalability and integration of environmental sensing networks. The
    protocol’s design prioritizes energy efficiency and long-range capabilities to
    ensure sustainable operation and extensive coverage. Its adaptability to various
    hardware configurations and support for mesh networking further facilitates the
    deployment of expansive sensor networks in ecologically sensitive areas. Most
    existing IoT solutions are built on proprietary systems, creating dependencies
    on external entities and often come with the added complexity and cost of tailoring
    parts of the communication protocol. This article is an extension of [7], where
    a preliminary LoRa-based connectivity solution for environmental intelligence
    was presented. In this work, we elaborate on AlLoRa; a long-range, low-power,
    and modular communication protocol based on LoRa, which facilitates monitoring
    remote natural areas. Several new features have been developed, improving the
    overall capabilities of the toolbox to make it applicable in more contexts and
    compatible with more hardware setups. AlLoRa is developed within the context of
    the SMARTLAGOON project, aiming to develop a Digital Twin of Europe’s largest
    saltwater coastal lagoon, the Mar Menor in Spain [8]. This lagoon is a hyper-saline
    coastal ecosystem with high environmental value. Recent changes in water quality
    have caused social alarm [9], sparking several initiatives. Despite the vulnerability
    and complexity of these ecosystems, there has been limited development of novel
    techniques that can provide real-time monitoring, analysis, and management of
    these critical resources. This research aims to advance IoT systems’ capabilities
    for environmental monitoring by offering a robust, scalable, and efficient alternative
    to current solutions. We aim to demonstrate the application of AlLoRa for real-time
    data acquisition, enhance environmental understanding and conservation efforts,
    and validate the protocol’s effectiveness in achieving long-distance communication
    with low power consumption. AlLoRa enables data collection on water temperature,
    chlorophyll-a, and oxygen concentration from sensors located on an oceanographic
    buoy. This capability for real-time data collection and analysis significantly
    enhances our understanding of the environment and enables proactive decision-making
    for environmental conservation. In this oceanographic and environmental context,
    energy consumption is critical for several reasons, including the need to minimize
    the environmental impact of the solutions developed to conserve the environment
    and ensure the systems’ autonomy. The scalability of these oceanographic systems
    to host a larger number of nodes is also relevant, as it allows for extending
    geographical coverage. Moreover, long-distance connection ranges are necessary
    in oceanographic contexts to retrieve and transmit collected data to a receiving
    node. AlLoRa addresses these issues and allows generic content transfer using
    LoRa technology. It is designed to be compatible with a wide range of devices,
    facilitating the adoption and deployment of edge devices that require transferring
    large data files over long distances with low power consumption. It also supports
    mesh mode, which enables message forwarding between nodes to extend communication
    range. Our experimental results reveal that long distances can be achieved within
    a reasonable budget, showing energy consumption figures very attractive for this
    kind of environmental intelligence system. The rest of the paper is structured
    as follows: Section 2 shows the critical technologies behind AlLoRa and related
    work. Section 3 details the design and logic of the communication protocol. The
    results of the tests performed using our prototype are displayed and analyzed
    in Section 4. Finally, Section 5 presents our conclusions and directions for future
    work. 2. Background and related work We propose a communication architecture and
    protocol based on the LoRa technology [10]. LoRa is a Low Power Wide Area Network
    (LPWAN) technology that uses a proprietary spread spectrum modulation technique
    derived from the chirp spread spectrum (CSS) to achieve long-range wireless transmissions
    at extremely low power. Chirps make LoRa resilient to noise, fading, and interference.
    LoRa has been widely proposed for IoT solutions since it allows long-range communications,
    from 2 to 5 km in urban areas and 15 km in suburban areas [11]. It allows data
    rates from 250 B/s to 5.5 B/s using unlicensed sub-GHZ ISM band, 868MHz frequency
    band in Europa, 915MHz in America, and 433 in Asia. There are four parameters
    that LoRa defines: Bandwidth (BW), Spreading Factor (SF), Carrier Frequency (CF),
    and Code Rate (CR). Their selection defines a trade-off between transmission range
    and data rate. The bandwidth determines the data transmission rate. Its frequency
    range of 125 to 500 kHz allows for broad design options for several applications.
    The SF defines the signal’s processing gain and, therefore, airtime and latency
    of packets. It is defined as the base-2 logarithm of the number of chirps per
    symbol, and it runs from SF7 to SF12, with higher SF values providing longer transmission
    ranges but slower data rates and longer airtime. The CR indicates the signal’s
    capability to correct errors. With values ranging from CR4/5 to CR4/8, the communication
    system can withstand more errors and interference with a higher CR, but at the
    expense of a lower data rate. Recent research has identified LoRa as a key technology
    to address the connectivity requirements of IoT systems providing cost-efficient
    long-range coverage [12]. Tangible implementations of LoRa in smart applications
    have demonstrated successful deployment. However, these applications come with
    issues and challenges, ranging from concerns about security, scalability, and
    network lifetime [13], [14]. 2.1. LoRa for environmental intelligence The straightforward
    approach of using the benefits of the LoRa technology is the implementation of
    LoRaWAN, which is at the MAC layer of the OSI Reference model and is an open specification
    standard managed by LoRa Alliance [15]. It uses a star-of-stars topology, where
    a gateway connects to IoT devices using a single-hop link. LoRaWAN has been extensively
    proposed for sensing and monitoring environmental parameters with low-cost and
    long-range communications [16], [17], [18][19]. However, the LoRaWAN star-of-stars
    topology is not suitable for challenged networks, as a single hop is not enough
    to achieve long-range coverage in environments with poor infrastructure and a
    heterogeneous mix of resource-constrained nodes, as is the case of the Smartlagoon
    European project. Centelles et al. [20] elaborate on three representative scenarios
    that would benefit from a more flexible topology than LoRaWAN. One of them applies
    to our case scenario, which is extending the coverage beyond the infrastructure
    reach. Using LoRaWAN implies the installation of more gateways in a geographic
    area where we want to intervene as little as possible. In the literature, we have
    found approaches that improve the geographical coverage of LoRaWAN. We focus our
    analysis on software improvements that do not require modification of commercially
    available chips. Cotrim and Kleinschmidt [21] survey recent studies that proposed
    multihop LoRaWAN networks, thus forming wireless mesh networks. Some solutions
    use the LoRaWAN characteristics, while others use only the LoRa physical layer.
    The former solutions generally introduce multi-hop networking using existing protocols
    such as Ad hoc On-Demand Distance Vector (AODV) [22] or Destination-Sequenced
    Distance Vector (DSDV) [23]. Similarly, Prade et al. [24] propose Multi-LoRa for
    large-scale IoT deployments, using smart agriculture in farms with hundreds of
    square kilometers. The authors propose a routing algorithm using a routing table
    and a neighbor table. To maintain tables, messages need to be exchanged between
    neighbors periodically, as proposed by Solé et al. [25] in the LoRa Mesh Library.
    Our solution avoids using routing protocols that maintain tables and exchange
    routing protocol messages to favor a low-energy solution, excluding unnecessary
    overhead and complexity. Linear multihop communication increases network coverage
    with a more straightforward approach and has been proposed in underground scenarios
    for urban water infrastructure management, like tunnels and pipelines. For example,
    Abrardo and Pozzebon have used a LoRa linear multi-hop network for aqueducts in
    Siena, Italy [26], and Ebi et al. [27] deployed the wireless sensor network in
    Fehraltorf, in Zurich, Switzerland. In underground facilities, high signal path
    attenuation is one crucial challenge, together with packet loss, and solutions
    require using a larger number of intermediary devices. To deploy a low-energy
    solution, our approach uses only the physical layer of LoRa. Among similar approaches,
    Mai and Kim [28] proposed a tree-based protocol built by exchanging packets between
    the LoRa nodes and the sink node. A time slot channel is assigned to each tree
    link, producing a collision-free approach. Another tree-based solution is MLoRa,
    proposed by Feng et al. [29], which uses a spanning tree variation to enable multi-hop
    over LoRa and extend end devices’ lifetime. Tran et al. propose a two-hop real-time
    LoRa protocol [30] focused on dynamic configurations. The protocol is built with
    a tree topology and requires slot scheduling, topology maintenance, and updating
    the slot schedule. Acknowledging that these solutions produce high overhead, Ahmar
    et al. [31] propose Smart-hop. This approach proposes a low-overhead routing,
    eliminating the complexity and overhead of traditional multi-hop mesh solutions.
    In Smart-hop the focus is on low latency communications, achieved by selectively
    replacing high SF links with chains of lower SF links. Similarly, MRT-LoRa [32]
    focuses on maintaining a shorter time in the air at each hop. However, these solutions
    still maintain a tree-based topology for forwarding messages. LoRaHop proposes
    to perform several flooding rounds during which end-devices communicate on multiple
    channels without the need to establish and maintain routers or a network hierarchy
    which simplifies network formation at a cost of energy consumption [33]. Hun and
    Kim [34] proposed a LoRa protocol that supports mesh and time-division multiple
    access (TDMA). The mesh networks dynamically connect end nodes and self-configure
    routing paths using a flooding algorithm, then a mesh table is prepared for each
    node based on the RSSI of beacon messages. Wu and Lieberherr have studied extensively
    collision mitigation methods that include multichannel communication and adaptive
    random backoff delays, and propose to organize a mesh LoRa network as a rooted
    spanning tree that synchronizes duty cycles disseminating information of the next
    round in the preceding duty cycle [35]. Similarly to work in [36], we use a polling-based
    approach, where devices listen to gateway requests. This approach avoids collision
    and is efficient with several sensor nodes. Unlike these solutions, our intermediary
    nodes do not spontaneously build routes and forward messages. Such an approach
    is appropriate in scenarios with poor infrastructure, as the one we found in Mar
    Menor, where the sensors are sparse in the geographical region. Another recent
    approach for mesh and multi-hop LoRa-based networks is the one proposed by Berto
    et al. [37]. Their solution is completely gateway-free, enabling peer-to-peer
    communication. The authors have a use case that differs from the one we target
    without the requirement of carrying all the data to one particular node for monitoring
    or processing. In the context of rivers and bays, Guibene et al. [38] deployed
    a buoy on the Liffey River in Dublin city center to monitor river depth, air,
    water temperature, barometric pressure, and solar/battery performance. The authors
    used the physical layer of LoRa using SF12 and a bandwidth of 125 KHz for eight
    months and obtained an overall error of 1.78%. More recently, the work proposed
    by Cecílio [39], called AQUAMESH, aims at collecting real-time information in
    environments where LoRaWAN point-to-point communication cannot provide sufficient
    coverage. The authors adapt the LoRaWAN stack protocol to support mesh capabilities
    and use TDMA to extend the node lifetime. Another real application of LoRa communication
    in a hydrological setting was presented by Nordin et al. [40], where the authors
    deployed four sensors and a gateway in the Tasik Chini lake in Pahang, Malaysia.
    LoRaWAN has also been the key technology to the proposal of Sendra et al. [41]
    that build a sensor network comprised of a buoy that monitors water turbidity,
    salinity levels, water temperature, presence of oils and fuels, and meteorological
    parameters. Long-range inter-vessel low-cost communication has been studied in
    [42] for building coastal IoT services. Measurements, such as water temperature,
    wave period, and height or direction of current, are to be exchanged in a mesh
    network. The solution proposed utilizes the pyMesh library developed by Pycom
    [43], which is, in turn, based on OpenThread developed by Google. The latter manages
    the routing algorithms. The authors propose an architecture with two levels, the
    first level an opportunistic LoRa-mesh mesh network and the second level a social
    network. The mesh network requires a watchdog that constantly monitors the network
    status. Monitoring large aquatic environments is a research problem that has been
    stated recently by Msaad et al. in [44], oriented to give support to the so-called
    Ocean of Things deploying a distributed network of low-cost sensors for real-time
    data acquisition to support the sustainable management of aquatic environments.
    This preliminary analysis presents two possible scenarios: one with static sensor
    platforms, such as the buoy we deployed in the Mar Menor, and another that includes
    moving platforms, such as vessels or boats. No results are presented in the mentioned
    work. AlLoRa shares the context of these solutions, emphasizing achieving long-range
    coverage at a low energy cost, building a modular protocol implementation to facilitate
    the deployment in heterogeneous devices while proposing a simple and efficient
    solution. 3. Proposed solution In this section, the AlLoRa content transfer protocol
    is described in terms of its modular architecture, its communication protocol,
    and the format of exchanged packets. Moreover, we explain the mesh mode and additional
    services of AlLoRa. The open-source software, licensed under GPL-3.0, can be accessed
    at the GitHub repository indicated in [45]. 3.1. AlLoRa Architecture AlLoRa is
    a half-duplex protocol based on a classical stop-and-wait ARQ scheme, where one
    or various Source Nodes wait for commands from a Requester/Gateway Node and answer
    with the requested data. It offers two operation modes, i.e. point-to-point and
    mesh modes. The latter extends the former by increasing the coverage area, and
    using intermediary nodes to forward packets until reaching the destination node.
    The mesh mode is activated if the Source node does not respond after a certain
    number of queries that is specified by the user. Download : Download high-res
    image (265KB) Download : Download full-size image Fig. 1. The various modules
    constituting the AlLoRa architecture. AlLoRa is developed using a series of interchangeable
    modules to simplify its deployment with a wide range of devices, giving access
    to the content transfer protocol and its combined capabilities. AlLoRa packets
    contain the content transmitted by the Source Node, which is split into chunks
    (blocks of bytes) that are sent using the protocol. The content transfer protocol
    is symmetrically structured, as shown in Fig. 1. In this architecture, a Source
    Node receives a File object, typically in JSON format, from a Datasource (e.g.,
    an oceanographic buoy). It uses a Connector to access a LoRa data channel to send
    the packets. On the other side, a Requester Node is built around a Digital Endpoint,
    an object that receives and processes or stores the information coming from a
    Source Node. It also uses a Connector to access LoRa. The AlLoRa architecture
    is composed of several key building blocks. The Node manages the communication
    logic for the AlLoRa protocol. It can function as a Source Node, a Requester Node,
    or a Gateway Node. The Source Node waits and listens for requests to send chunks
    of content until it finishes and is ready to send another file. The Requester
    Node requests information from a Source Node and listens for responses. A Gateway
    Node is similar to a Requester Node, but can manage multiple Digital Endpoints.
    Fig. 2 depicts a Gateway Node, where it communicates with three Source Nodes.
    The Connector bridges LoRa, providing access to a LoRa channel for a Node. A Connector
    aims to make AlLoRa available to as many types of devices as possible, considering
    that some devices may have embedded LoRa capabilities, while others may not. The
    AlLoRa File is a critical component that manages the content to be sent or received
    by Nodes. It can be initialized with data (a byte array) to be used by the Source
    Node to transmit its chunks. Alternatively, it can be instantiated as a container
    on the Requester’s side to gather the chunks and assemble them to obtain the original
    content. The Packet acts as the envelope for sending the content through LoRa.
    It structures the message to be sent and can load the data received to check that
    the content was correctly received (with a checksum). The packet structure is
    described in Section 3.2. The Digital Endpoint represents a Source companion on
    the Requester’s side. It is used by the Requester or Gateway Node to communicate
    with the designated Source. The object contains the MAC Address of the endpoint
    to communicate with and manage the transfer state. It also handles the File to
    be received. The Datasource is designed to provide AlLoRa files to a Source Node
    by facilitating interactions with the data source for the node (usually sensors).
    It contains methods to read and store data, as well as to retrieve it when needed.
    Finally, Adapters and Interfaces represent advanced components within the AlLoRa
    architecture. An Adapter, functioning as a distinct type of Node, facilitates
    communication between an AlLoRa network and a device that does not possess native
    LoRa capabilities. It manages an Interface and a Connector. The Interface standardizes
    the communication process across different hardware and communication methods,
    enabling the Adapter to interact seamlessly with various devices and protocols,
    such as Wi-Fi or Serial connections. Download : Download high-res image (473KB)
    Download : Download full-size image Fig. 2. AlLoRa architecture with a Gateway
    communicating with 3 Source Nodes using a Wi-Fi adapter Node. For example, in
    a typical AlLoRa communication setup, a Source Node might use a Wi-Fi or Serial
    Connector to communicate with a corresponding Interface on an Adapter Node. The
    Adapter then utilizes a LoRa Connector to transmit the packets over LoRa. On the
    other side, a Requester or Gateway Node, also equipped with a LoRa Connector,
    receives the data. This flexibility allows for diverse hardware integrations within
    AlLoRa, as demonstrated in Fig. 2. This modular approach ensures that AlLoRa can
    be easily adapted and deployed in various scenarios, ranging from simple point-to-point
    setups to complex networks involving multiple types of devices. 3.2. Protocol
    packet structure The AlLoRa packets are the basic data unit sent and received
    through the LoRa channel. They were designed to maximize the amount of content
    (or chunk size) sent but also to ensure the right reception of the package by
    the Requester node. The AlLoRa packet has a maximum size of 255 bytes, the maximum
    payload of a LoRa message. Fig. 3, Fig. 4 show the format of the AlLoRa packets
    for both point-to-point and mesh communication modes, respectively. The header
    size varies depending on the communication mode, but both have a standard header
    of 20 bytes. The first 16 bytes contain the first eight characters of the MAC
    Address of the source and destination nodes. 1 Byte is used for the message’s
    command and flags (explained below). Three bytes are reserved for a checksum of
    the content used to check if the content arrived correctly or has some corruption.
    We use the rightmost three bytes of the SHA-256 hash digest, computed over the
    data to be sent. Finally, if the system works in Mesh mode, an additional 2 bytes
    store a message ID. The ID is a random number between 0 and 65.535% (the range
    of values that can be represented in binary using 2 bytes). which is used to manage
    the retransmissions and avoid chunk duplication. Therefore, the maximum payload
    of the Point-to-Point mode packet is 235 bytes, while the Mesh mode packet has
    233 available for payload. Download : Download high-res image (223KB) Download
    : Download full-size image Fig. 3. Point-to-point Packet. Download : Download
    high-res image (230KB) Download : Download full-size image Fig. 4. Mesh-mode Packet.
    The Flag byte is structured as follows (see Fig. 5). Download : Download high-res
    image (225KB) Download : Download full-size image Fig. 5. The Flag Byte composition.
    • Command bits: 2 bits that combined represent one of the four types of commands
    detailed in Table 1. • Mesh bit: Indicates whether or not the message should be
    forwarded. • Sleep bit: Determine whether a node should sleep before sending the
    message. If this bit is activated, the device will wait before forwarding the
    message. If it is set to false, the node will immediately forward the message.
    • Hop bit: If the message was forwarded at some point, then this bit is set to
    true. Section 3.3.2 provides more details on the Mesh, Sleep, and Hop bit. • Debug
    hop bit: Indicates that the message in question is in “debug hop mode”, used only
    for research purposes. It allows the system to overwrite the content to be sent
    and replace it with the path the Packet is going through. • Change SF bit: It
    signals that the protocol changes the SF between nodes. Section 3.4 details the
    uses of the Debug hop and the Change SF bit. Table 1. Command codes and their
    descriptions. Command Code Description DATA 00 Activated when the payload contains
    a requested chunk. OK 01 Used to establish a connection between nodes or notify
    of the correct reception of the final chunk of the received content. It implies
    that the payload is empty. CHUNK 10 Used by the Requester/Gateway to request a
    chunk of the received content. The chunk number is stored in the payload, so the
    Source can know the requested data block. METADATA 11 Used by the Requester/Gateway
    to ask for the metadata of the File to be received. If this is the case, the request’s
    payload will be empty. The Source also uses it to answer the metadata request.
    In this case, the payload contains the name and size of the File to be sent. 3.3.
    Communication scheme 3.3.1. Point-to-point mode The protocol follows a request/reply
    scheme from the Requester Node to a Source Node. The Requester sends commands
    to the Source and waits for the reply. If no answer is received within a certain
    interval or the message is corrupted, the Requester Node repeats the request until
    the reply is correctly received. Fig. 6 shows the message exchanged between the
    nodes that are divided into four phases: Establish Connection, Ask for metadata,
    Ask for data, and Final Acknowledgment. The communication begins with the Digital
    Endpoint in the Establish connection state. During this phase, the Requester/Gateway
    Node sends an OK command to the Source Node and waits for a corresponding OK message
    in return. The Requester will wait for this response for a fixed period, known
    as a timeout. If a message different from the expected reply (i.e., OK) is received,
    it is discarded, and the Requester continues to listen for the remaining time.
    Once the OK message is received, the Digital Endpoint proceeds to the following
    three states in a loop. Download : Download high-res image (392KB) Download :
    Download full-size image Fig. 6. Phases of the communication flow. In the Ask
    for metadata state, the Digital Endpoint requests the metadata of the content
    to be received from the Source. It waits until a packet arrives with the name
    and the number of file chunks. At this stage, the Digital Endpoint creates an
    empty AlLoRa File object that will act as a container for the incoming chunks.
    If this process is successful, the system moves on to the next state. During the
    Ask for data state, the Requester asks for chunks in sequential order to obtain
    the full content. Each chunk is added to the File object as it arrives. Once the
    File is complete, it is reassembled and ready to be accessed or saved in the Digital
    Endpoint. Finally, in the Final acknowledge state, an OK command is sent to maintain
    synchronization between nodes. The system waits until the Source replies with
    an OK command. Once this is completed, the Digital Endpoint returns to the “Ask
    metadata” state, preparing to receive the next File. 3.3.2. Mesh mode The mesh
    mode of the AlLoRa protocol is designed to extend the communication range. This
    is achieved by utilizing intermediary nodes that forward packets until they reach
    their intended destination. This mode is activated when a request to a Source
    node remains unanswered after a certain number of attempts, as specified by the
    user. In mesh mode, the communication process largely follows the same procedure
    described in the point-to-point mode (Section 3.3.1). However, when a Source node
    fails to respond to a request after a certain number of attempts, the Digital
    Endpoint associated with that Source node shifts into a “retransmission mode”.
    In this mode, the Digital Endpoint activates the Mesh bit in its packets, signaling
    the need for retransmissions. This shift to retransmission mode enables the protocol
    to maintain communication over extended ranges by dynamically adjusting to situations
    where direct communication with a Source node is impossible. This makes the mesh
    mode a powerful tool for enhancing the reach and reliability of the AlLoRa protocol
    in various IoT applications. The flowchart of the mesh mode function when sending
    an AlLoRa file is presented in Fig. 7. Whenever a node receives a Packet not addressed
    to it, it is discarded. With the Mesh bit set, the node will help it reach its
    destination by forwarding it if it has not already done so. Download : Download
    high-res image (479KB) Download : Download full-size image Fig. 7. Send File with
    mesh mode function flowchart. To mitigate the risk of packet collisions, particularly
    in scenarios where multiple nodes in proximity might retransmit packets not intended
    for them, the AlLoRa protocol introduces a random delay of 0.1 to 0.5 s prior
    to packet forwarding. This delay, controlled by the Sleep bit, can be deactivated
    in situations where the user anticipates no collision risk. Following the initiation
    of a request, the Gateway node enters a waiting state for a fixed duration, during
    which it expects a response to arrive. If the Gateway receives a retransmitted
    version of its own packet from another node during this period, it disregards
    the retransmitted packet and continues to wait for the remaining duration for
    the expected response. In the event of a timeout, the Gateway continues its attempts
    to reach the node for the remaining focus time. Once this time has elapsed, the
    Gateway shifts its attention to the next node in the list of registered Digital
    Endpoints. This ensures a balanced distribution of communication attempts across
    all nodes. In the AlLoRa protocol, the activation of the Hop bit indicates the
    forwarding of a packet. This allows the destination node to discern whether the
    received packet has been relayed through other devices (arrived via the Mesh mode)
    or was sent directly from the source node. If a packet arrives at the destination
    node via intermediary nodes, the Source Node generates a response packet with
    the Mesh bit activated. This is based on the assumption that the response will
    follow the same path back to the Gateway. If the packet arrives directly from
    the source node, the Source Node responds directly with the Mesh bit deactivated.
    This is because the protocol prioritizes the node that is currently being polled,
    ensuring timely responses to requests. If a response packet is received by the
    Gateway with the Hop bit deactivated, it signifies that the Source Node is within
    direct communication range, and intermediary nodes are not required to facilitate
    communication. In such scenarios, the Requester/Gateway deactivates the Mesh mode
    for the corresponding Digital Endpoint. The same action is taken if the Mesh bit
    in the response is deactivated. To enhance the robustness and efficiency of the
    AlLoRa protocol in mesh mode, a specific mechanism is employed. This mechanism
    assigns a unique random ID to each new packet to prevent duplication and unnecessary
    retransmission of messages. This ID is stored in a queue that is referenced every
    time a new message with the Mesh bit activated is received. By checking this queue,
    the nodes can effectively identify and disregard any duplicate packets, thereby
    preventing the unnecessary retransmission of messages that could potentially congest
    the network. In addition to this queue, the nodes maintain a second list of fixed
    size that records the IDs of all forwarded messages. This list is checked prior
    to the forwarding of any packet, ensuring that the same packet is not forwarded
    multiple times. This dual-layered mechanism of assigning unique IDs to packets
    and maintaining comprehensive records of received and forwarded messages significantly
    enhances the efficiency of the AlLoRa protocol in mesh mode, ensuring reliable
    communication while minimizing network congestion. The approach utilized in AlLoRa
    for collision avoidance in mesh mode is simple and with low overhead. However,
    special attention is required for scenarios with a high density of nodes. In the
    Smartlagoon project, the aim is to have the least amount of intervention to the
    environment, and therefore, it results in a sparse distribution of nodes. For
    other case studies, scalability in the face of collisions can be achieved using
    different radio channels for each sensor node to avoid a collision [24] or to
    implement a Channel Activity Detection protocol (CAD) [46]. CAD operation involves
    listening for a LoRa preamble, which if not detected returns an all-clear status
    to proceed with the transmission. Prade et al. [24] proposed a frequency multiplexing
    control algorithm to reduce the collision rate and data is partitioned between
    two available interfaces simultaneously. 3.4. Additional services To enhance adaptability
    and performance in dynamic communication environments, AlLoRa provides two additional
    services. The first is the SF change request, a critical feature for wirelessly
    adjusting the Spreading Factor (SF) value. This service allows dynamic reconfiguration
    of node parameters to accommodate environmental changes or application requirements
    without physical intervention. The SF change is initiated by a Requester or Gateway
    Node, which sends an OK command along with the new SF value in the payload, flagged
    by the Change SF bit. Upon receiving this packet, nodes update their SF setting
    to the new value. If the SF update is successful, nodes continue operation with
    the updated configuration; otherwise, they revert to their previous SF setting
    after a specified number of unsuccessful communication attempts. This fallback
    mechanism ensures network reliability and prevents nodes from becoming isolated
    due to incompatible SF settings. Fig. 8 illustrates the communication process
    involved in changing the LoRa SF on both sides. If a Source Node receives a packet
    structured as previously explained, it will reply with the same structure and
    change the SF value for its connector to start listening to messages in the new
    SF configuration. Then, a trial phase starts, where the Source will attempt three
    times to receive messages from the Requester. If any message arrives, the changing
    process is completed, the new SF is settled, and a backup with this new configuration
    will be saved. If not, the node will revert to the original SF. The second additional
    service is called Debug Mesh mode. It is developed to test the message routes
    when mesh mode is enabled. Triggered by the Requester or Gateway Node, it activates
    the Debug Hop bit in the request packets. This feature is instrumental if a node
    must forward a message, as it overrides the payload and adds the “hop” information,
    including its name, the RSSI of the message received, and the wait time before
    forwarding the packet. When the packet reaches the destination node, it responds
    by maintaining the payload (with the route information) and adds it to a list.
    Upon reaching the gateway, the payload reveals the full path traversed by the
    message, assisting in determining the optimal distribution of nodes in an area
    for deploying an AlLoRa network. Download : Download high-res image (321KB) Download
    : Download full-size image Fig. 8. Change SF flow. The strategic adaptation of
    SF in response to the varying demands of IoT applications is crucial for network
    efficiency. A lower SF may be preferred to optimize data throughput in urban environments
    with dense node deployments. In contrast, a higher SF may be necessary in rural
    or expansive areas to ensure long-range connectivity. This flexibility is vital
    for the robust performance of the network under diverse conditions. However, it
    is important to calibrate these adjustments precisely. Overly frequent or poorly
    optimized changes in SF can lead to increased signaling overhead and energy consumption.
    Such inefficiencies not only strain the network resources but also can shorten
    the lifespan of battery-powered nodes and reduce the overall operational efficiency
    of the network. 4. Results and discussion In this section, we delve into the empirical
    evaluation of AlLoRa, assessing its performance through a series of real-world
    tests. These tests were designed to measure the protocol’s transfer efficiency,
    energy usage, effective range, and mesh networking capabilities, with a focus
    on the adaptability of AlLoRa to diverse environmental conditions and its scalability
    for energy-efficient IoT implementations. The prototype configuration used for
    these tests is depicted in Fig. 9. A Raspberry Pi 4 served as the Gateway node,
    with a Pycom LoPy4.1 device providing LoRa access via a Wi-Fi channel, functioning
    as an AlLoRa adapter. Additional Pycom LoPy4 devices were configured as Source
    Nodes The selection of Pycom LoPy4 for both the Gateway node and Source Nodes
    reflects a deliberate choice to balance cost, performance, and ease of integration.
    The integration of a Raspberry Pi 4 as the Gateway node is a strategic choice,
    capitalizing on its affordability and capacity for data processing. This enables
    a cost-effective yet functional gateway solution that aligns with the lightweight
    and efficiency-driven design of AlLoRa. Tests were conducted using the European
    868MHz band, with a default Spreading Factor (SF) of 7, increased to SF11 for
    bandwidth and energy consumption tests. The protocol’s support was extended to
    ESP32-based microcontrollers, specifically the Heltec Wi-Fi LoRa 32 and the LILY
    GO LoRa 32. Download : Download high-res image (337KB) Download : Download full-size
    image Fig. 9. The modules distribution and hardware used for the prototype used.
    The use of a single-channel LoRa gateway, as in this implementation of the AlLoRa
    protocol, offers simplicity and cost-effectiveness, suitable for scenarios with
    fewer nodes and sparse network distribution. However, this configuration limits
    the network to a single channel, potentially restricting scalability. Multi-channel
    LoRa gateways, while more complex and costly, can handle more traffic and support
    a larger number of nodes, suitable for dense networks. As the network grows, transitioning
    to a multi-channel gateway might be necessary to handle increased traffic and
    prevent data collisions. Therefore, the choice between single-channel and multi-channel
    LoRa involves a trade-off between cost, complexity, and network capacity, necessitating
    careful consideration of the specific network requirements and anticipated growth.
    While the current version of AlLoRa does not consider multi-channel gateways,
    the protocol is designed in a way that is compatible with such a configuration.
    This means that the implementation of multi-channel gateway support could be easily
    integrated into future versions of the protocol, further enhancing its scalability
    and adaptability to diverse network conditions. 4.1. Transfer time tests The “Successful
    Transfer Time” (STT) is a crucial metric for assessing the efficiency of AlLoRa.
    It encapsulates the time required for a Source Node to successfully send a message,
    including both the data transmission and the acknowledgment reception. This metric
    is fundamental in estimating the throughput of the communication system, providing
    insights into the protocol’s performance under various conditions. The distance
    between the deployed nodes was 1 meter. The Source Node was set to send increasingly
    larger messages from 1 to 1024 kilobytes (1 MB), with the STT recorded for each
    transmission. Additionally, the SF value was varied from 7 to 11 to examine its
    impact on the time and throughput, using a chunk size of 235 bytes, the maximum
    allowable with AlLoRa when mesh mode is disabled (see Fig. 3). Fig. 10 shows the
    value of the STTs by varying the file size and varying the SF. Sending 1 KB took
    about 4 s with SF7, and 27 s with SF11, while sending 1 MB took about 1 h with
    SF7 and about 8 h with SF11. Download : Download high-res image (300KB) Download
    : Download full-size image Fig. 10. STTs per content size, varying the SF. Fig.
    11 shows the estimated throughput for each content size tested while also varying
    the SF. The throughput varies therefore from around 256 Bps (approximately 2 kbps)
    with SF7 to 38 Bps (approximately 300 bps) with SF11 and is stable and linear
    with the increase of the content size and the SF. As an example, the Mar Menor
    Buoy’s data logger generates contents of 33 kB each, requiring an average transfer
    time of 100 s. Download : Download high-res image (282KB) Download : Download
    full-size image Fig. 11. Average throughput per content size varying SF. The data
    presented in Fig. 10, Fig. 11 illustrate the influence of SF on transmission times
    and throughput. With higher SF values, STT increases due to extended airtime required
    for the same data volume, a factor that could impact the protocol’s operational
    efficiency, especially over larger distances. This test validates the importance
    of SF selection in relation to the network environment, node density, and distance
    coverage, providing a basis for configuring AlLoRa in diverse application scenarios.
    Furthermore, the relationship between SF and throughput is crucial for practical
    deployments. The results indicate a decrease in throughput by approximately sevenfold
    when switching from SF7 to SF11, underscoring the need for a balanced approach
    in SF tuning to optimize both range and data transmission rates. These findings
    will guide users in adapting AlLoRa to their specific needs, ensuring reliable
    data communication while maximizing network longevity. 4.2. Energy consumption
    test Sustainability in IoT networks is closely tied to energy efficiency, particularly
    in scenarios where power resources are scarce or replenishment is challenging.
    Therefore, we closely scrutinized the power requirements of AlLoRa, aiming to
    optimize energy consumption without compromising communication effectiveness.
    This section shows the evaluation of the power consumption for sending files of
    different sizes. The Source node is connected to a current and voltage measurement
    unit.2 We repeated the same experiments of Section 4.1. Fig. 12 shows the current
    usage behaviors obtained while a LoPy4 was sending 2 KB of content with each tested
    SF. It is interesting to analyze this graph, as each pulse represents a phase
    of communication, as shown in Section 3.3. The first pulse is the response for
    metadata, the next 9 pulses are the data chunks of the content being transferred.
    The ninth pulse seems to have a smaller width than the rest; this is because 8.79
    chunks are needed to send 2 KB of data, so this last pulse contains 0.79 of the
    remaining data. The last pulse is the final acknowledgment after the Requester
    obtains all the chunks of the file being transferred. This figure helps visualize
    once more the impact of the SF used on the duration of the data transmission and
    therefore on the power demand of the system. Download : Download high-res image
    (298KB) Download : Download full-size image Fig. 12. Current vs. time, sending
    2 kilobytes of content at different SFs. Fig. 13 shows the energy needed to transmit
    1 KB for increasing values of SF. The average consumption using SF7 was per kilobyte
    sent, increasing to 3.52 mW h per kilobyte when transmitting with SF11. This result
    was expected because of the longer time-on-air needed with a higher SF. Download
    : Download high-res image (176KB) Download : Download full-size image Fig. 13.
    Energy to send 1 KB per SF. We also tested the average power consumption per KB
    with SF7 of AlLoRa using the ESP32 devices Heltec Wi-Fi LoRa 32 and the LILY GO
    LoRa 32. For the Heltec device, we obtained a value of per KB, while with the
    LILY GO LoRa 32 the average power consumption was per KB transmitted. These variations
    are minimum and clearly depend on the specific board being used. The data on energy
    consumption provide actionable insights for field deployments, where the longevity
    of sensor nodes is crucial. By adjusting the SF, AlLoRa demonstrates the capability
    to balance energy usage against the need for range, which is vital for remote
    monitoring activities. 4.3. Range test The effective communication range is a
    vital metric for environmental monitoring applications, particularly over extensive
    areas such as the Mar Menor lagoon. The range tests conducted in different terrains
    validate AlLoRa’s robustness and its capability to maintain reliable connections
    over considerable distances. The range test in Mar Menor was done using a Source
    Node sending a small message simply containing the Received Signal Strength Indicator
    (RSSI) of each request received. The gateway was installed on the roof of the
    IEO (Spanish Institute of Oceanography, Murcia, Spain)3 at a height of approximately
    25 m. The Source Node was moving in a boat toward the predetermined buoy coordinates.
    We registered the GPS position of the Source Node to compare the RSSI value with
    the Gateway distance. We managed to communicate from the Source Node to the Gateway
    at a maximum distance of 11.69 km, achieving the intended location of the buoy
    (see Fig. 14). We repeated the same range test at Erken Lake, Sweden, and achieved
    approximately 8.4 km of communication between the nodes, as shown in Fig. 15.
    In this case, the gateway antenna was approximately 4 meters in height, which,
    combined with the number of trees and changes in terrain, may explain the decrease
    in range compared to the test in Mar Menor. Download : Download high-res image
    (801KB) Download : Download full-size image Fig. 14. RSSI Map distribution in
    Mar Menor, Murcia, Spain. These tests, conducted in varied geographic settings,
    from the coastal Mar Menor to the wooded areas surrounding Erken Lake, demonstrate
    the protocol’s versatility and confirm its suitability for a broad spectrum of
    deployment scenarios. Download : Download high-res image (520KB) Download : Download
    full-size image Fig. 15. RSSI Map distribution in Erken Lake, Sweden. 4.4. Mesh
    mode tests Mesh networking in AlLoRa offers enhanced flexibility and operational
    reach, particularly valuable in complex or challenging network environments. The
    following tests, conducted within the Mar Menor context, were designed to evaluate
    the functionality and reliability of this mesh networking feature. The initial
    feasibility test involved disrupting the direct link from the gateway to the buoy.
    An additional AlLoRa node was strategically placed on a mountain, 5.5 km away
    from the buoy and at an elevation of 65 m, to act as a forwarder. This test setup
    was critical in evaluating the mesh mode’s capacity to maintain connectivity and
    effectively manage data forwarding in scenarios where direct communication paths
    are obstructed. In Fig. 16, the Gateway is represented with the letter G, the
    Buoy Node is represented with the letter B, and the forwarder Node with A. Between
    G and A there was a distance of 14.78 km, but with A being placed at a higher
    altitude than B, the Gateway messages were constantly arriving. We started by
    replicating the Gateway at the location A. Establishing communication directly
    to the Buoy and receiving its messages as expected (point-to-point communication).
    Then, we configured Node A as a Source Node. When activated, it began receiving
    and forwarding requests from G intended for the Buoy, and also receiving the Buoy’s
    replies and forwarding them to G, achieving a mesh with a total route length of
    20.33 kilometers. This experiment allowed us to validate the mesh forwarding approach.
    To conduct a more thorough study, we set up three nodes as Source (labeled A,
    B, and C, respectively) and set up a Gateway (G) in “debug hop mode” with “sleep
    mesh” off. Source nodes were distributed in different configurations and distances
    in the Universitat Politècnica de València’s Campus to test the path followed
    by the Packets. We tested it under challenging conditions for LoRa, without line
    of sight, many objects and buildings, and with the nodes approximately 1 m from
    the ground, forcing low signals to evaluate the system’s behavior with forwarding
    enabled. The Gateway was configured to ask for data only to node A, to evaluate
    the differences in packet reception rate for the furthest Node in each arrangement.
    Each case was tested for 15 min. Download : Download high-res image (708KB) Download
    : Download full-size image Fig. 16. The Mar Menor Mesh feasibility test. To evaluate
    and visualize the Mesh mode, we developed an arch diagram that represents node
    interactions, where the curves’ color and style denote the message’s intended
    recipient, and their thickness reflects the number of messages that have traveled
    along that path (with thicker lines portraying more messages), and their opacity
    indicates the message’s RSSI, with more visible indicating a stronger signal.
    The message’s direction is represented with arrowheads. Hence, forwarded messages
    can be recognized when a node receives a curve not intended for it, and curves
    with the same destination can be seen leaving it. We tested the nodes distributed
    in 3 configuration types. First, to validate the set-up, we located Node A about
    200 meters from the Gateway (see Fig. 17). As expected, the Gateway received correct
    messages from the node, as it works precisely like the point-to-point configuration.
    The average RSSI registered in this case was −95 dBm. This location was selected
    to be the point where even a small distance increase produced a drastic decrease
    in the RSSI and packet losses became considerably high, due to the presence of
    a building. In this attempt, the average response packet reception was of about
    3 per second. Download : Download high-res image (142KB) Download : Download full-size
    image Fig. 17. Nodes’ distribution for mesh mode test: first case with a single
    hop. In the second configuration (see Fig. 18), we replaced Node A with B and
    increased the distance to force node A to lose direct contact with G. At that
    point, the Gateway activated the mesh mode for Node A and B started acting as
    a forwarder node. Finally, we placed Node A 200 m from B. The average RSSI registered
    between A and B was −80 dBm, and the average response packet reception was about
    2 per second. As can be seen from Fig. 18 the majority of messages for Node A
    were forwarded through Node B, but in some cases, point-to-point communication
    between A and G was still achieved, as the tested distances were not high enough
    for LoRa. This is a realistic event, since propagation can vary during time, and
    it is handled properly by AlLoRa. Download : Download high-res image (167KB) Download
    : Download full-size image Fig. 18. Node’s distribution for Mesh mode test: the
    second case. Finally, in the third configuration, we placed Node C in B’s place
    at the first 200 m, replaced Node A for B at 400 m, and then went another 200
    m away with Node A. The average RSSI registered between B and A in this case was
    of −93 dBm. As shown in Fig. 19, with this distribution of nodes, the messages
    directed to A were “hopping” 2 times, first being forwarded by node C and then
    by Node B. A’s responses followed the reverse path, eventually arriving at the
    Gateway as responses for its original requests. In this case, the response packets
    arrived at about 1 per second, a third of the base case. Same as with the last
    case, it can be observed that some packets went directly between the Gateway and
    B, and also some packets arrived directly from Node A to G. Download : Download
    high-res image (185KB) Download : Download full-size image Fig. 19. Nodes’ distribution
    for Mesh mode test: the third case. With this nodes’ distribution, we triplicated
    the original distance of the point-to-point set-up with improved speeds than those
    obtained with the original mesh test in Mar Menor. Along these experiments AlLoRa
    maintained a stable functioning behavior, properly handling the connectivity tasks
    and maintaining the data transfer performance. These tests showcase AlLoRa’s ability
    to adaptively use mesh networking for consistent network performance, even when
    direct line-of-sight communication is obstructed or impractical. This feature
    proves particularly useful in maintaining network integrity in diverse and challenging
    environmental conditions. 4.5. Comparative analysis with other IoT communication
    technologies This section proposes a comparative analysis of AlLoRa against possibly
    equivalent technologies such as the LoRa modulation technique, the LoRaWAN network
    protocol, and the Bluetooth and Wi-Fi wireless standards, all of which are accessible
    through the tested devices. Additionally, we consider the broader context by including
    cellular networks and satellite technologies, which, though not directly accessible
    through our test devices, play a significant role in IoT communications. Drawing
    from our AlLoRa test results, we aim to highlight its potential advantages and
    suitability for several IoT applications. It is important to note that technologies
    like LoRa, LoRaWAN and AlLoRa, while offering more extended range and lower power
    requirements, generally provide slower data transmission speeds compared to Bluetooth,
    Wi-Fi, and cellular networks. This trade-off is crucial in contexts where the
    range and energy efficiency are prioritized over high-speed data transmission.
    Starting with range capabilities, AlLoRa demonstrates a distinct advantage over
    technologies such as Bluetooth and Wi-Fi. While Bluetooth and Wi-Fi generally
    offer shorter-range communications (up to a few hundred meters), AlLoRa achieved
    effective long-range connectivity of up to 11.69 kilometers using point-to-point
    communication (as observed in 4.3), making it particularly advantageous for remote
    environmental monitoring. While standard LoRa provides the basics for point-to-point
    communication, it lacks the comprehensive features offered by AlLoRa. The protocol
    enhances LoRa’s basic functionality with a modular design, facilitating adaptable
    deployments in various scenarios. This approach is further enriched by advanced
    features such as mesh networking and efficient data handling, contributing to
    a robust and user-friendly experience. Moreover, AlLoRa excels in node and file
    management, offering a systematic approach to handling complex network configurations
    and data flows. This makes AlLoRa significantly more suitable for diverse IoT
    applications than using the LoRa physical layer in standard configurations. LoRaWAN,
    designed for end-to-end wide-area network coverage, is not suitable for direct
    point-to-point connections with nearby IoT nodes. Moreover, inheriting limitations
    from its underlying LoRa technology, it faces certain constraints. For example,
    while AlLoRa demonstrates the ability to transmit 1 KB of data in about 4 s using
    SF7, as depicted in Fig. 10, achieving this in LoRaWAN would require the “manual”
    transmission of multiple payload fragments from the device. Upon receipt, these
    fragments must be reassembled, rendering the use of LoRaWAN for such tasks significantly
    more challenging. Shifting focus to cellular networks like 4G and 5G or even to
    satellite technologies like the emerging low Earth orbit (LEO), it is important
    to contextualize their role in IoT communications. While these technologies offer
    high-speed data transfer and extensive coverage, their reliance on established
    infrastructure and ongoing costs associated with data plans and network services
    limit their applicability in remote or undeveloped areas. This makes them less
    viable for environmental intelligence projects, especially in cost-sensitive or
    infrastructure-limited scenarios. From all the above, AlLoRa emerges as a versatile
    and efficient communication protocol that excels in scenarios where range, flexibility,
    and cost-effectiveness are paramount Its performance in our tests highlights its
    suitability for environmental monitoring and IoT applications, where it can reliably
    operate under varying conditions without the constraints of more complex and costly
    technologies. 5. Conclusions In this work, we introduce AlLoRa a high range, low
    power, and modular communication protocol, based on LoRa, designed explicitly
    for environmental intelligence-oriented deployments. Our solution is energetically
    sustainable and flexible enough to adapt to a variable number of sensing devices
    and modular to allow additional hardware implementations to be used in the deployment.
    An exhaustive evaluation was conducted with a real test bed in a 135 km2 coastal
    lagoon, where we developed an oceanographic monitoring system. We showed that
    it offers the required performance according to transfer time, energy consumption,
    range, and performance in mesh mode. As future work, we expect to analyze the
    system’s robustness and scalability using a larger scale deployment in Mar Menor.
    The objective is to communicate a larger number of sensors that capture a more
    diverse set of environmental metrics. Future developments may also apply AlLoRa
    to other large-scale real applications such as smart cities, tourism, and agriculture.
    Further research is required to provide an efficient solution in the context of
    mobile sensors, hence, we plan to include dynamic SF capabilities to adapt to
    different conditions. Moreover, security and privacy will also be considered in
    future implementations of AlLoRa. CRediT authorship contribution statement Benjamín
    Arratia: Conceptualization, Data curation, Investigation, Methodology, Software,
    Validation, Visualization, Writing – original draft. Erika Rosas: Data curation,
    Investigation, Validation, Writing – original draft. Carlos T. Calafate: Conceptualization,
    Formal analysis, Validation, Writing – review & editing, Supervision. Juan-Carlos
    Cano: Formal analysis, Funding acquisition, Project administration, Supervision,
    Validation, Writing – review & editing. José M. Cecilia: Conceptualization, Funding
    acquisition, Methodology, Project administration, Resources, Supervision, Writing
    – original draft, Writing – review & editing. Pietro Manzoni: Conceptualization,
    Formal analysis, Funding acquisition, Investigation, Methodology, Project administration,
    Resources, Supervision, Validation, Writing – original draft, Writing – review
    & editing. Declaration of competing interest The authors declare that they have
    no known competing financial interests or personal relationships that could have
    appeared to influence the work reported in this paper. Acknowledgments This work
    has been supported by the European Union’s Horizon 2020 research and innovation
    program under grant agreement No 101017861 and also by the project Ramon Cajal
    Grant RYC2018-025580-I, funded by MCIN/AEI/ 10.13039/501100011033 and ESF Investing
    in your future, GVA GRISOLIAP/2021/103 and Grant TED2021-130890B funded by MCIN/AEI
    and by European Union NextGenerationEU/PRTR . Data availability Data will be made
    available on request. References [1] Yang L., Li W., Ghandehari M., Fortino G.
    People-Centric Cognitive Internet of Things for the Quantitative Analysis of Environmental
    Exposure IEEE Internet Things J., 5 (4) (2018), pp. 2353-2366, 10.1109/JIOT.2017.2751307
    View in ScopusGoogle Scholar [2] Gubbi J., Buyya R., Marusic S., Palaniswami M.
    Internet of Things (IoT): A vision, architectural elements, and future directions
    Future Gener. Comput. Syst., 29 (7) (2013), pp. 1645-1660 View PDFView articleView
    in ScopusGoogle Scholar [3] Shafique K., Khawaja B.A., Sabir F., Qazi S., Mustaqim
    M. Internet of Things (IoT) for next-generation smart systems: A review of current
    challenges, future trends and prospects for emerging 5G-IoT scenarios IEEE Access,
    8 (2020), pp. 23022-23040, 10.1109/ACCESS.2020.2970118 View in ScopusGoogle Scholar
    [4] Voosen P. Europe builds ‘digital twin’of earth to hone climate forecasts Science,
    370 (6512) (2020), pp. 16-17 CrossRefView in ScopusGoogle Scholar [5] Montino
    P., Pau D. Environmental Intelligence for Embedded Real-time Traffic Sound Classification
    2019 IEEE 5th International Forum on Research and Technology for Society and Industry,
    RTSI (2019), pp. 45-50, 10.1109/RTSI.2019.8895517 View in ScopusGoogle Scholar
    [6] TAŞKIN D., Yazar S. A Long-range context-aware platform design for rural monitoring
    with IoT In precision agriculture Int. J. Comput. Commun. Control, 15 (2) (2020)
    Google Scholar [7] Arratia B., García-Guillamón P., Calafate C.T., Cano J.-C.,
    Cecilia J.M., Manzoni P. A modular and mesh-capable LoRa based Content Transfer
    Protocol for Environmental Sensing 2023 IEEE 20th Consumer Communications & Networking
    Conference, CCNC (2023), pp. 378-383, 10.1109/CCNC51644.2023.10060496 View in
    ScopusGoogle Scholar [8] J.M. Cecilia, P. Manzoni, D. Trolle, A. Nielsen, P. Blanco,
    C. Prandi, S. Peña-Haro, L. Barkved, D. Pierson, J. Senent, SMARTLAGOON: Innovative
    modelling approaches for predicting socio-environmental evolution in highly anthropized
    coastal lagoons, in: Proceedings of the Conference on Information Technology for
    Social Good, 2021, pp. 204–209. Google Scholar [9] Jimeno-Sáez P., Senent-Aparicio
    J., Cecilia J.M., Pérez-Sánchez J. Using machine-learning algorithms for eutrophication
    modeling: case study of Mar Menor Lagoon (Spain) Int. J. Environ. Res. Public
    Health, 17 (4) (2020), p. 1189 CrossRefView in ScopusGoogle Scholar [10] Ayoub
    W., Samhat A.E., Nouvel F., Mroue M., Prévotet J.-C. Internet of mobile things:
    Overview of LoRaWAN, DASH7, and NB-IoT in LPWANs standards and supported mobility
    IEEE Commun. Surv. Tutor., 21 (2) (2019), pp. 1561-1581, 10.1109/COMST.2018.2877382
    View in ScopusGoogle Scholar [11] Semtech Corporation W. LoRa and LoRaWAN: A Technical
    Overview: Tech. Rep. LoRa Alliance (2019) https://lora-developers.semtech.com/documentation/tech-papers-and-guides/lora-and-lorawan/
    Google Scholar [12] Milarokostas C., Tsolkas D., Passas N., Merakos L. A comprehensive
    study on LPWANs with a focus on the potential of LoRa/LoRaWAN systems IEEE Commun.
    Surv. Tutor., 25 (1) (2023), pp. 825-867, 10.1109/COMST.2022.3229846 View in ScopusGoogle
    Scholar [13] Li C., Cao Z. LoRa networking techniques for large-scale and long-term
    IoT: A down-to-top survey ACM Comput. Surv., 55 (3) (2022), 10.1145/3494673 Google
    Scholar [14] Jouhari M., Saeed N., Alouini M.-S., Amhoud E.M. A survey on scalable
    LoRaWAN for massive IoT: Recent advances, potentials, and challenges IEEE Commun.
    Surv. Tutor., 25 (3) (2023), pp. 1841-1876, 10.1109/COMST.2023.3274934 View in
    ScopusGoogle Scholar [15] Lorawan v1.1 specification (2023) Available online:
    https://lora-alliance.org/resource_hub/lorawan-specification-v1-1/. (Accessed
    10 February 2023) Google Scholar [16] Tamang D., Pozzebon A., Parri L., Fort A.,
    Abrardo A. Designing a Reliable and Low-Latency LoRaWAN Solution for Environmental
    Monitoring in Factories at Major Accident Risk Sensors, 22 (6) (2022), 10.3390/s22062372
    Google Scholar [17] Márquez-Sánchez S., Herrera-Santos J., Alonso-Rollán S., Muñoz
    A.M.P., Rodríguez S. LoRaWAN Module for the Measurement of Environmental Parameters
    and Control of Irrigation Systems for Agricultural and Livestock Facilities Marreiros
    G., Martins B., Paiva A., Ribeiro B., Sardinha A. (Eds.), Progress in Artificial
    Intelligence, Springer International Publishing, Cham (2022), pp. 351-360 CrossRefView
    in ScopusGoogle Scholar [18] Zhao H., Kam K.A., Kymissis I., Culligan P.J. A LoRaWAN-Based
    Environmental Sensor System for Urban Tree Health Monitoring 2021 IEEE Sensors
    (2021), pp. 1-4, 10.1109/SENSORS47087.2021.9639788 View in ScopusGoogle Scholar
    [19] Wang Y., Huang Y., Song C. A New Smart Sensing System Using LoRaWAN for Environmental
    Monitoring 2019 Computing, Communications and IoT Applications, ComComAp (2019),
    pp. 347-351, 10.1109/ComComAp46287.2019.9018829 View in ScopusGoogle Scholar [20]
    Centelles R.P., Freitag F., Meseguer R., Navarro L. Beyond the Star of Stars:
    An Introduction to Multihop and Mesh for LoRa and LoRaWAN IEEE Pervasive Comput.,
    20 (2) (2021), pp. 63-72, 10.1109/MPRV.2021.3063443 View in ScopusGoogle Scholar
    [21] Cotrim J.R., Kleinschmidt J.H. LoRaWAN Mesh Networks: A Review and Classification
    of Multihop Communication Sensors, 20 (15) (2020), 10.3390/s20154273 URL https://www.mdpi.com/1424-8220/20/15/4273
    Google Scholar [22] Lundell D., Hedberg A., Nyberg C., Fitzgerald E. A Routing
    Protocol for LoRA Mesh Networks 2018 IEEE 19th International Symposium on “A World
    of Wireless, Mobile and Multimedia Networks”, WoWMoM (2018), pp. 14-19, 10.1109/WoWMoM.2018.8449743
    Google Scholar [23] Dias J., Grilo A. Multi-hop LoRaWAN uplink extension: specification
    and prototype implementation J. Ambient Intell. Humaniz. Comput., 11 (3) (2020),
    pp. 945-959, 10.1007/s12652-019-01207-3 View in ScopusGoogle Scholar [24] Prade
    L., Moraes J., de Albuquerque E., Rosário D., Both C.B. Multi-radio and multi-hop
    LoRa communication architecture for large scale IoT deployment Comput. Electr.
    Eng., 102 (2022), Article 108242, 10.1016/j.compeleceng.2022.108242 View PDFView
    articleView in ScopusGoogle Scholar [25] Solé J.M., Centelles R.P., Freitag F.,
    Meseguer R. Implementation of a LoRa mesh library IEEE Access, 10 (2022), pp.
    113158-113171, 10.1109/ACCESS.2022.3217215 View in ScopusGoogle Scholar [26] Abrardo
    A., Pozzebon A. A Multi-Hop LoRa Linear Sensor Network for the Monitoring of Underground
    Environments: The Case of the Medieval Aqueducts in Siena, Italy Sensors, 19 (2)
    (2019), 10.3390/s19020402 Google Scholar [27] Ebi C., Schaltegger F., Rüst A.,
    Blumensaat F. Synchronous LoRa Mesh Network to Monitor Processes in Underground
    Infrastructure IEEE Access, 7 (2019), pp. 57663-57677, 10.1109/ACCESS.2019.2913985
    View in ScopusGoogle Scholar [28] Mai D.L., Kim M.K. Multi-Hop LoRa Network Protocol
    with Minimized Latency Energies, 13 (6) (2020), 10.3390/en13061368 Google Scholar
    [29] Feng S., Chen J., Zhao Z. Cost effective routing in large-scale multi-hop
    LoRa networks IEEE INFOCOM 2022 - IEEE Conference on Computer Communications Workshops,
    INFOCOM WKSHPS (2022), pp. 1-6, 10.1109/INFOCOMWKSHPS54753.2022.9798302 View in
    ScopusGoogle Scholar [30] Tran H.P., Jung W.-S., Yoo D.-S., Oh H. Design and implementation
    of a multi-hop real-time LoRa protocol for dynamic LoRa networks Sensors, 22 (9)
    (2022), 10.3390/s22093518 Google Scholar [31] Ahmar A.-U.-H., Joosen W., Hughes
    D. Smart-hop: Low-latency multi-hop networking for lora 2022 18th International
    Conference on Distributed Computing in Sensor Systems, DCOSS (2022), pp. 17-20,
    10.1109/DCOSS54816.2022.00014 View in ScopusGoogle Scholar [32] Leonardi L., Lo
    Bello L., Patti G. MRT-LoRa: A multi-hop real-time communication protocol for
    industrial IoT applications over LoRa networks Comput. Commun., 199 (2023), pp.
    72-86, 10.1016/j.comcom.2022.12.013 URL https://www.sciencedirect.com/science/article/pii/S0140366422004637
    View PDFView articleView in ScopusGoogle Scholar [33] Tian P., Boano C.A., Ma
    X., Wei J. LoRaHop: Multihop support for LoRaWAN uplink and downlink messaging
    IEEE Internet Things J., 10 (17) (2023), pp. 15376-15392, 10.1109/JIOT.2023.3263630
    View in ScopusGoogle Scholar [34] Huh H., Kim J.Y. LoRa-based Mesh Network for
    IoT Applications 2019 IEEE 5th World Forum on Internet of Things, WF-IoT (2019),
    pp. 524-527, 10.1109/WF-IoT.2019.8767242 View in ScopusGoogle Scholar [35] Wu
    D., Liebeherr J. A low-cost low-power LoRa mesh network for large-scale environmental
    sensing IEEE Internet Things J., 10 (19) (2023), pp. 16700-16714, 10.1109/JIOT.2023.3270237
    View in ScopusGoogle Scholar [36] Lee H.-C., Ke K.-H. Monitoring of Large-Area
    IoT Sensors Using a LoRa Wireless Mesh Network System: Design and Evaluation IEEE
    Trans. Instrum. Meas., 67 (9) (2018), pp. 2177-2187, 10.1109/TIM.2018.2814082
    View in ScopusGoogle Scholar [37] Berto R., Napoletano P., Savi M. A LoRa-based
    mesh network for peer-to-peer long-range communication Sensors, 21 (13) (2021),
    10.3390/s21134314 URL https://www.mdpi.com/1424-8220/21/13/4314 Google Scholar
    [38] Guibene W., Nowack J., Chalikias N., Fitzgibbon K., Kelly M., Prendergast
    D. Evaluation of LPWAN Technologies for Smart Cities: River Monitoring Use-Case
    2017 IEEE Wireless Communications and Networking Conference Workshops, WCNCW (2017),
    pp. 1-5, 10.1109/WCNCW.2017.7919089 Google Scholar [39] Cecílio J. AQUAMesh: A
    Low-Power Wide-Area Mesh Network protocol for Remote Monitoring Applications in
    Water Environments IECON 2021 – 47th Annual Conference of the IEEE Industrial
    Electronics Society (2021), pp. 1-6, 10.1109/IECON48115.2021.9589117 Google Scholar
    [40] Nordin R., Mohamad H., Behjati M., Kelechi A.H., Ramli N., Ishizu K., Kojima
    F., Ismail M., Idris M. The world-first deployment of narrowband IoT for rural
    hydrological monitoring in UNESCO biosphere environment 2017 IEEE 4th International
    Conference on Smart Instrumentation, Measurement and Application, ICSIMA (2017),
    pp. 1-5, 10.1109/ICSIMA.2017.8311981 View in ScopusGoogle Scholar [41] Sendra
    S., Parra L., Jimenez J.M., Garcia L., Lloret J. Lora-based network for water
    quality monitoring in coastal areas Mob. Netw. Appl., 28 (1) (2023), pp. 65-81,
    10.1007/s11036-022-01994-8 View in ScopusGoogle Scholar [42] Patriti T., Mirri
    S., Girau R. A lora-mesh based system for marine social IoT 2023 IEEE 20th Consumer
    Communications & Networking Conference, CCNC (2023), pp. 329-332, 10.1109/CCNC51644.2023.10060829
    View in ScopusGoogle Scholar [43] Pycom T. PyMesh (2023) Available Online: https://docs.pycom.io/firmwareapi/pycom/network/lora/pymesh/
    Google Scholar [44] Msaad M., Hambly A., Mariani P., Kosta S. Mobile and Delay
    Tolerant Network for LoRa at Sea Proceedings of the Student Workshop, CoNEXT ’20,
    Association for Computing Machinery, New York, NY, USA (2020), pp. 3-4, 10.1145/3426746.3434053
    View in ScopusGoogle Scholar [45] Arratia B. AlLoRa Zenodo (2023), 10.5281/zenodo.10161627
    v1.2.0, URL https://github.com/SMARTLAGOON/AlLoRa Google Scholar [46] Barbas D.,
    Gimenez O. Channel Activity Detection: Ensuring Your LoRa Packets are Sent: Tech.
    Rep. Semtech Corporation and RAKwireless (2019) https://lora-developers.semtech.com/documentation/tech-papers-and-guides/channel-activity-detection-ensuring-your-lora-packets-are-sent/how-to-ensure-your-lora-packets-are-sent-properly
    Google Scholar Cited by (0) 1 https://pycom.io/. 2 Otii Arc: https://www.qoitech.com.
    3 http://www.ieo.es/es/web/murcia/. © 2024 The Authors. Published by Elsevier
    B.V. Recommended articles Untargeted white-box adversarial attack with heuristic
    defence methods in real-time deep learning based network intrusion detection system
    Computer Communications, Volume 218, 2024, pp. 97-113 Khushnaseeb Roshan, …, Shiekh
    Burhan Ul Haque View PDF Improving collision resolution of superposed LoRa signals
    using a Slot-Free Decoding Scheme Ad Hoc Networks, Volume 157, 2024, Article 103442
    Weixuan Xiao, …, Alexandre Guitton View PDF ms-van3t: An integrated multi-stack
    framework for virtual validation of V2X communication and services Computer Communications,
    Volume 217, 2024, pp. 70-86 F. Raviglione, …, C.F. Chiasserini View PDF Show 3
    more articles Article Metrics Captures Readers: 6 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '[7]'
  journal: Computer Communications
  limitations: null
  relevance_score: 0.912788658107053
  relevance_score1: 0
  relevance_score2: 0
  title: 'AlLoRa: Empowering environmental intelligence through an advanced LoRa-based
    IoT solution'
  verbatim_quote1: Our results reveal that AlLoRa offers good performance regarding
    transfer time, power consumption, and range. The throughput ranged from around
    2 kbps with SF7 to approximately 300 bps with SF11; the power consumption per
    kilobyte transmitted varied from 395μWh to 428μWh depending on the specific device
    used.
  verbatim_quote2: The Mesh mode test successfully maintained communication between
    nodes over 20.33 km.
  verbatim_quote3: '>'
- analysis: The paper proposes a semantic communication framework for virtual apple
    orchard development using YOLO object detection and resource allocation techniques.
    It effectively reduces transmission costs by extracting semantic information from
    captured images, quantifying their importance, and allocating transmission power
    accordingly. The evaluation demonstrates significant cost savings and improved
    transmission quality for important information.
  authors:
  - Du B.
  - Du H.
  - Liu H.
  - Niyato D.
  - Xin P.
  - Yu J.
  - Qi M.
  - Tang Y.
  citation_count: '0'
  description: Digital Twins play a crucial role in bridging the physical and virtual
    worlds. Given the dynamic and evolving characteristics of the physical world,
    a huge volume of data transmission and exchange is necessary to attain synchronized
    updates in the virtual world. In this article, we propose a semantic communication
    framework based on you only look once (YOLO) to construct a virtual apple orchard
    with the aim of mitigating the costs associated with data transmission. Specifically,
    we first employ the YOLOv7-X object detector to extract semantic information from
    captured images of edge devices, thereby reducing the volume of transmitted data
    and saving transmission costs. Afterwards, we quantify the importance of each
    semantic information by the confidence generated through the object detector.
    Based on this, we propose two resource allocation schemes, i.e., the confidence-based
    scheme and the acrlong AI-generated scheme, aimed at enhancing the transmission
    quality of important semantic information. The proposed diffusion model generates
    an optimal allocation scheme that outperforms both the average allocation scheme
    and the confidence-based allocation scheme. Moreover, to obtain semantic information
    more effectively, we enhance the detection capability of the YOLOv7-X object detector
    by introducing new efficient layer aggregation network-horNet (ELAN-H) and SimAM
    attention modules, while reducing the model parameters and computational complexity,
    making it easier to run on edge devices with limited performance. The numerical
    results indicate that our proposed semantic communication framework and resource
    allocation schemes significantly reduce transmission costs while enhancing the
    transmission quality of important information in communication services.
  doi: 10.1109/JIOT.2023.3317629
  full_citation: YOLO-Based Semantic Communication with Generative AI-Aided Resource
    Allocation for Digital Twins Construction
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 11 Issue: 5 YOLO-Based Semantic Communication With Generative AI-Aided
    Resource Allocation for Digital Twins Construction Publisher: IEEE Cite This PDF
    Baoxia Du; Hongyang Du; Haifeng Liu; Dusit Niyato; Peng Xin; Jun Yu; Mingyang
    Qi; You Tang All Authors 243 Full Text Views Abstract Document Sections I. Introduction
    II. Related Work III. System Model IV. YOLO-Based Semantic Communication System
    Design V. Numerical Results Show Full Outline Authors Figures References Keywords
    Metrics Abstract: Digital Twins play a crucial role in bridging the physical and
    virtual worlds. Given the dynamic and evolving characteristics of the physical
    world, a huge volume of data transmission and exchange is necessary to attain
    synchronized updates in the virtual world. In this article, we propose a semantic
    communication framework based on you only look once (YOLO) to construct a virtual
    apple orchard with the aim of mitigating the costs associated with data transmission.
    Specifically, we first employ the YOLOv7-X object detector to extract semantic
    information from captured images of edge devices, thereby reducing the volume
    of transmitted data and saving transmission costs. Afterwards, we quantify the
    importance of each semantic information by the confidence generated through the
    object detector. Based on this, we propose two resource allocation schemes, i.e.,
    the confidence-based scheme and the acrlong AI-generated scheme, aimed at enhancing
    the transmission quality of important semantic information. The proposed diffusion
    model generates an optimal allocation scheme that outperforms both the average
    allocation scheme and the confidence-based allocation scheme. Moreover, to obtain
    semantic information more effectively, we enhance the detection capability of
    the YOLOv7-X object detector by introducing new efficient layer aggregation network-horNet
    (ELAN-H) and SimAM attention modules, while reducing the model parameters and
    computational complexity, making it easier to run on edge devices with limited
    performance. The numerical results indicate that our proposed semantic communication
    framework and resource allocation schemes significantly reduce transmission costs
    while enhancing the transmission quality of important information in communication
    services. Published in: IEEE Internet of Things Journal ( Volume: 11, Issue: 5,
    01 March 2024) Page(s): 7664 - 7678 Date of Publication: 20 September 2023 ISSN
    Information: DOI: 10.1109/JIOT.2023.3317629 Publisher: IEEE Funding Agency: SECTION
    I. Introduction In recent years, the advances in technologies, such as augmented/extended/virtual
    reality (AR/XR/VR), blockchain, sixth-generation (6G) network, artificial intelligence
    (AI), and edge computing have led to an increasing demand for virtual reality
    and digital worlds. The metaverse, as a virtual reality concept, is considered
    an integration of multiple virtual worlds that can provide people with a more
    immersive and realistic digital space [1], [2], allowing them to engage in various
    activities, such as virtual conferences, remote collaboration, online learning,
    digital exhibitions, etc. The emergence of these virtual reality activities has
    not only alleviated social isolation and transportation restrictions, but also
    saved time and costs, gradually becoming essential tools for people’s lives and
    work. Moreover, the popularity of these activities in various social domains has
    also accelerated the development of digital economy and digital transformation
    [3], [4]. In agriculture, novel paradigms, such as digital farms, smart agriculture,
    and agricultural metaverse, which are combined with metaverse technology, are
    emerging and flourishing [4], [5]. In terms of agricultural production, users,
    such as farmers, can establish virtual farms in a virtual environment, simulate
    the complete growth process of crops and livestock, and obtain real-time growth
    data to achieve intelligent and refined agriculture. For instance, the XR Laboratory
    of Alibaba DAMO Academy presented a case study of an autonomous agricultural picking
    robot. The proposed approach entails the development of a high-precision 3-D model
    of the entire orchard via 3-D modeling techniques of both the orchard and fruit
    trees. Subsequently, a motion planning scheme can be established in the virtual
    environment, which can facilitate the robot’s autonomous picking process in the
    real world. This innovative approach can potentially minimize the costs associated
    with orchard management [6]. Furthermore, virtual agriculture can be combined
    with other fields, such as agricultural leisure and agricultural education. For
    example, the Faculty of Agriculture has developed an agricultural metaverse teaching
    system for an egg chicken farm at the National University of Laos. Through the
    VR technology, the faculty members provide agricultural education to learners,
    including knowledge related to technology, farm location, and other relevant aspects.
    The system has been reported to have yielded positive results [7]. Digital twins
    (DTs), namely, digital replications of physical objects, have emerged as a pivotal
    technology for creating virtual environments [8], [9]. In agriculture, the physical
    realm is characterized by its intricate and constantly changing nature, necessitating
    digital twins (DTs) synchronizing with the physical world to ensure their accuracy
    in virtual operations. This process requires that edge devices persistently gather
    the most recent data from the physical world, enabling real-time DTs updates.
    The acquisition and transmission of the data from the physical world often rely
    on various advanced edge devices and wireless communication technologies [10],
    [11]. Various fixed or mobile devices (e.g., sensors and cameras) are deployed
    to collect status data of physical objects, which, in real time, update, and interact
    with the virtual world through wireless communication. However, continuous data
    transmission poses stringent requirements on wireless communication systems, especially
    when dealing with extensive data, such as high-definition images, which can be
    both expensive and challenging when the physical world is vast. Fortunately, semantic
    communication has been introduced as a novel avenue for tackling the aforementioned
    challenge [12], [13]. In contrast to conventional communication technologies,
    semantic communication systems regard transmission effective if the meaning of
    the received information maintains the original meaning of the transmitted information
    [14]. For example, in the context of image transmission, a semantic-based communication
    system can reduce the amount of data that needs to be transmitted by only transmitting
    the semantic information behind the image, while achieving the same effect [15].
    In this article, we present a case study focusing on the development of a virtual
    apple orchard using a real apple data set. In the virtual orchard, users, i.e.,
    fruit growers, can easily access various information, such as the quantity and
    location of fruit on each apple tree, as well as growth status and view real images
    of individual apples. The virtual orchard can help users manage their orchard
    more efficiently. In this case, the implementation of DTs requires edge devices,
    such as unmanned aerial vehicle (UAV) to capture the status information of fruit
    trees by taking photographs, and then transmitting the collected data to users
    via the wireless communication technology. To reduce costs and enhance communication
    quality during this process, we propose a semantic communication and resource
    allocation framework based on YOLO. Our main contributions are summarized as follows.
    Unlike traditional communication methods that necessitate transmitting all acquired
    images, we propose a YOLO-based semantic communication framework. Specifically,
    the proposed framework discards irrelevant interference information after image
    data acquisition, retaining only the critical semantic information for transmission.
    This significantly reduces the data volume needed for transmission and lowers
    resource costs while achieving the same outcome. We employ the YOLOv7-X object
    detector to extract semantic information from images and enhance its performance
    on a real-world apple data set. Considering the limitations of existing object
    detectors in detecting small objects, such as small apples, and the constraints
    of processing power and memory in edge devices, larger models necessitate increased
    computational resources and memory for operation, which may result in performance
    degradation or inoperability. Consequently, we improve the YOLOv7-X algorithm
    by introducing the ELAN-H and the SimAM attention modules. These modifications
    elevate the detector’s performance and reduce the parameters and computational
    requirements, facilitating deployment on edge devices with greater ease. In the
    pursuit of enhancing transmission quality during the wireless transmission of
    a huge volume of images, we propose a resource allocation scheme based on the
    significance of semantic information. The scheme allocates transmission power
    following the relative importance of the semantic information, with the aim of
    enhancing the overall communication quality of image transmission systems by minimizing
    important information loss and improving the reliability of transmitted information.
    This approach ensures that critical information is transmitted with high quality
    to users, even in challenging wireless communication environments. Furthermore,
    we utilize the AI-generated resource allocation scheme algorithm as an alternative
    allocation scheme, which facilitates more efficient processing power distribution.
    Specifically, by using the denoising technique, the AI-generated algorithm generates
    a design for the allocation scheme and subsequently adds exploration noise to
    execute it, thereby gaining experience in exploration. The numerical results clearly
    demonstrate that this method achieves the highest score in terms of semantic information
    transmission quality. The remainder of this article is organized as follows. In
    Section II, we initially summarize the related work about DTs, semantic communication,
    and apple detection. Section III introduces the overall system design, semantic
    communication approach, and the metric used for evaluating the system’s communication
    quality. In Section IV, the YOLOv7-X object detector and its enhancement methods
    are described in detail, followed by an explanation of two distinct resource allocation
    methods for data transmission. Subsequently, we analyze the numerical results
    in Section V. Finally, Section VI concludes this article. SECTION II. Related
    Work In this section, we briefly introduce three related techniques, i.e., DTs,
    semantic communication, and apple detection. A. Digital Twins The physical system
    and physical world in agriculture are complex and dynamic environments that include
    basic information and characteristics of physical objects. DTs require continuous
    updating from the physical to the virtual space as the state of physical objects
    changes over time [16], [17]. Li et al. [18] proposed a deep learning-based single-view
    leaf reconstruction method for a plant growth DT system, improving leaf reconstruction’s
    accuracy and speed. Angin et al. [19] introduced a DT framework for agriculture
    called AgriLoRa, which detects plant diseases and weeds using computer vision
    algorithms after uploading data from UAV images and field sensor data to cloud
    servers. Awais et al. [20] used the multispectral UAV and DTs model to achieve
    intelligent irrigation in the field. However, these works have focused only on
    the use of collected data and have not considered the impact of data transmission.
    DTs require a significant amount of computing power to render 3-D objects, which
    is achieved through collecting large amounts of data from perception networks
    and ultralow latency communication to maintain a seamless user experience [1].
    When physical objects are large enough, the massive data streams can burden communication
    systems and cause excessive latency, or even transmission failure. Therefore,
    in this article, we use a semantic-aware communication method to reduce the amount
    of data that needs to be transmitted. B. Semantic Communication In classical communication
    theory, the semantic content and meaning of the message are largely considered
    irrelevant to communication. However, in the age of rapidly increasing data volume,
    the limitations of classical communication theory have begun to be revealed [21].
    Semantic communication constitutes an innovative paradigm wherein message transmission
    is not confined solely to the message content, but rather entails direct extraction
    of pertinent semantic information, thereby eliminating redundant data and mitigating
    associated costs. Xie et al. [22] proposed a text transfer framework called DeepSC
    based on the Transformer [23], which can recover the meaning of sentences through
    semantic information, thus minimizing semantic errors during transmission. Zhou
    et al. [24] proposed a cognitive semantic communication framework that utilizes
    knowledge graphs, which has good data compression rates and communication reliability.
    In addition to text-based semantic communication, some literature also proposes
    semantic communication methods applied to images. Lokumarambage et al. [25] obtained
    semantic information through semantic segmentation at the transmitter and used
    GAN networks to reconstruct the image at the receiver, greatly saving bandwidth
    resources, but the reconstructed image is slightly different from reality. Zhang
    et al. [26] proposed a neural network-based image transfer semantic communication
    system, where the transmitter can extract and transmit the required semantic information
    in a dynamic environment through a receiver-leading training process without knowing
    the task. Kang et al. [27] proposed a task-oriented semantic communication framework,
    where users can match the semantic information of images by querying text, and
    also consider the resource allocation problem when there are multiple users. Although
    the above literature reduces communication overhead through semantic communication,
    they have not considered the varying importance of semantic information itself,
    which may result in the loss of significant semantic information in the competition
    for channel resources. Therefore, we assign different levels of importance to
    the semantic information extracted from images to ensure the transmission quality
    of critical semantic information by rationally allocating transmission power.
    C. Object Detection In the communication framework proposed in this article, the
    UAV needs to extract the semantic information of the acquired images, i.e., to
    achieve the separation of apples and backgrounds, and the core of achieving this
    is the object detection technique. Apple Detection: In recent years, deep learning-based
    object detection techniques have achieved remarkable success. In contrast to traditional
    algorithms that rely on appearance features, such as shape and color [28], [29],
    deep learning-based techniques demonstrate strong adaptability to different scenarios
    and achieve higher accuracy. Chen et al. [30] utilized the DenseNet network structure
    to optimize the YOLOv4 model, proposing a Des-YOLOv4 algorithm for detecting apples.
    However, the performance of the algorithm significantly deteriorates under low-light
    conditions. Yan et al. [31] proposed an improved YOLOv5 [32] algorithm for real-time
    apple recognition by incorporating squeeze-and-excitation (SE) modules and modifying
    the fusion mode of feature maps. Despite the improved performance, the algorithm’s
    effectiveness in detecting small apples is suboptimal. Sun et al. [33] proposed
    a novel balanced feature pyramid network (BFP Net) that enhances the accuracy
    of small apple detection. Nevertheless, the BFP Net has a slower detection speed.
    The above work indicates that it is difficult to balance the detection speed and
    accuracy of the model, and detecting small apples in complex environments remains
    a challenge. With the continuous development of the YOLO series object detectors,
    the YOLOv7 model emerges as a highly advanced and efficient end-to-end object
    detector. It employs a state-of-the-art methodology for detecting objects in an
    image, with exceptional accuracy and real-time performance [34]. However, its
    performance on data set with a considerable number of small apples is slightly
    limited. Thus, we employed it as the baseline model for improving detection performance.
    Data Augmentation: In addition to modifying the model structure to improve detection
    capability, data augmentation is another straightforward and effective approach.
    Data augmentation allows generating additional equally effective data based on
    limited data without altering the essential information of the images. This significantly
    enhances the diversity of the training data, thereby enhancing the model with
    stronger generalization capabilities. Changing the color and shape of images is
    the fundamental and common approach in data augmentation. In this study, we use
    fundamental data augmentation methods, such as randomly altering the hue, saturation,
    and brightness of images, as well as performing random scaling and translation.
    In addition to these basic data augmentation methods, some studies have proposed
    more efficient approaches, such as Mosaic [35] and Mixup [36]. Mosaic involves
    randomly cropping and scaling four images, then combining them into a single image
    for training data. Mixup randomly selects two samples from the training data and
    constructs new training samples and labels through linear interpolation. In this
    work, we use a combination of Mosaic, Mixup, and fundamental methods. In summary,
    we propose a YOLO-based semantic communication and resource allocation framework
    to address the above problems in this article. First, we select the advanced YOLOv7-X
    object detector as the core of the entire system and optimize its performance
    on real data set. Following that, the UAV extracts semantic information from collected
    images using the optimized YOLOv7-X object detector. Then, the UAV allocates transmission
    power based on the importance of semantic information before transmitting, ultimately
    achieving high-quality transmission of critical information. SECTION III. System
    Model In this section, we present the proposed data transmission framework and
    the semantic-based communication approach, followed by an explanation of the metric
    methodology for assessing image semantic information transmission quality. A.
    Design of Semantic Communication and Resource Allocation Framework In data collection
    in DTs, a UAV takes images along a specified trajectory and transmit the data
    to users. However, in wireless communication environments with fading channels,
    the cost of transmitting all data to users at high quality is prohibitive. To
    address this issue, we propose a semantic communication framework based on YOLO,
    as shown in Fig. 1. We first simulate the images captured by the UAV using real
    apple data set. After the collection task is completed, the UAV uses the trained
    YOLOv7-X object detector to extract semantic information behind the image that
    people need and transmit them. At the same time, we quantify the importance of
    each semantic information based on the confidence generated by the object detector
    and allocate transmission power accordingly to ensure the transmission quality
    of important information. The problem of optimal power allocation schemes is introduced
    in Section IV. It is worth noting that the semantic extraction model is a flexible
    module. When faced with user interest in other single or multiple classes of objects
    in the captured image, this module can be replaced with other pretrained YOLO
    series models or alternative object detectors to assist users in extracting useful
    information. By employing other well-trained object detectors, our semantic communication
    framework can expand its applicability, enabling the extraction and transmission
    of useful information about different objects in images according to user demands.
    Fig. 1. Illustration of the YOLO-based semantic communication system model. Show
    All B. Semantic Communication Solution In conventional communication paradigms,
    edge devices transmit the entirety of the acquired image data to facilitate continuous
    data synchronization for DTs, resulting in voluminous data traffic. This imposes
    substantial burdens on both edge devices and the communication infrastructure.
    To illustrate, in smart agriculture, users deploy UAVs for image capture [37].
    However, oftentimes, only a portion of the captured content is relevant to users,
    e.g., ripening fruits. Utilizing such an inefficient communication approach for
    transmitting all images leads to the excessive consumption of communication resources
    and energy for UAVs, thereby exacerbating resource wastage. The development of
    semantic communication provides a solution to the aforementioned problems. Upon
    completing the designated data acquisition task, the UAV transmits only the pertinent
    semantic features extracted from the captured images, rather than the entire data
    set. The transmission of these semantic features requires minimal channel resources
    and facilitates efficient data storage for users. In the virtual orchard, users,
    e.g., fruit growers, are primarily more concerned about the status of the fruits.
    As a result, we discard irrelevant background and interference factors before
    transmitting the images, ensuring that users only receive the semantic information
    they are interested in, which helps reduce transmission cost. C. Semantic Communication
    Quality Analysis To evaluate the quality of semantic communication, we propose
    a metric for image semantic transmission (MIST) in this work, which involves combining
    the importance weights of each semantic information with their respective transmission
    quality to obtain the final evaluation result. Considering that a UAV needs to
    send an image to the user after capturing it, semantic information is first extracted
    by the object detector. Specifically, a total of U apple objects are detected,
    with i denoting the i th object and c i denoting its corresponding confidence.
    The relationship between the importance score W i and the confidence c i of the
    object i can be represented as W i = c i σ , where σ is a variable that adjusts
    the importances among different semantic information. The final semantic transmission
    quality score can be represented as follows: E(A, W i ,Q( p i ))=A ∑ i=1 U ( W
    i ×Q( p i )) (1) View Source where A represents the accuracy of semantic information
    extraction, i.e., the performance evaluation metric Average Precision at 0.5 Intersection
    over Union (AP@0.5) of the object detector, and Q( p i ) represents the structure
    similarity index measure (SSIM) [38] value of object i before and after transmission,
    which is a function that is positively correlated with the transmission power
    p i according to [27]. Therefore, considering the definition of the communication
    system in this article, our goal is to maximize the MIST while satisfying the
    transmission power constraint, which can be expressed as follows: max A, W i ,
    p i ∑ i=1 U E(A, W i ,Q( p i ))) (2) View Source ∑ i=1 U p i ≤P c i ∈[ c min ,1]
    (2a) (2b) View Source where the constraint in (2a) is the total transmitted power,
    and c min in (2b) is the confidence threshold, the objects with confidence below
    this value are not detected by the detector. In this study, we set the variable
    σ=1 and the confidence threshold c min =0.25 by default. The proposed MIST considers
    not only the transmission quality of each semantic information but also their
    respective significance, which can provide a more comprehensive and accurate assessment
    of the performance of these methods. SECTION IV. YOLO-Based Semantic Communication
    System Design The YOLOv7-X object detector is a critical component of the overall
    communication system. It aids UAVs in extracting semantic information from images
    and subsequently quantifying the semantic information’s importance to facilitate
    optimal transmission power allocation. In this section, we present the motivation
    for choosing YOLO and provide a detailed exposition of YOLOv7-X, along with the
    improvements made. Subsequently, we discuss two distinct resource allocation schemes
    in data transmission. A. Overview of YOLOv7-X The motivation for selecting YOLO
    as the semantic extraction model in our study stems from several key factors.
    First, YOLO has demonstrated exceptional performance in real-time object detection
    tasks, making it a suitable choice for various applications. Its ability to achieve
    high accuracy while maintaining impressive inference speed aligns with our goal
    of efficiently detecting and extracting semantic information from apple images
    in real-world scenarios. Moreover, YOLO’s end-to-end architecture contributes
    to its simplicity and ease of implementation. This feature not only simplifies
    the overall model structure but also reduces computational complexity, making
    it suitable for resource-constrained environments such as edge devices like UAVs.
    Furthermore, in the application scenario of our article, the confidence generated
    by the YOLO model effectively measures the importance of the object’s semantic
    information. This aids in efficient semantic communication by prioritizing and
    transmitting important features, thus ensuring optimal power allocation for the
    information. YOLOv7 has seven different models of varying sizes, including YOLOv7-tiny,
    YOLOv7, YOLOv7-X, and YOLOv7-W6, among others, which are suitable for different
    application environments. Considering both model complexity and detection performance,
    we select YOLOv7-X as the base model for improvement. The YOLOv7-X model can be
    divided into three parts: 1) Input; 2) Backbone; and 3) Head. Specifically, the
    Input resizes the input image to the required training size. The Backbone component
    includes multiple CBS convolutions, max pooling convolution (MPConv), efficient
    layer aggregation network in YOLOv7-X (ELAN-X) modules, and an SPPCSPC module.
    The CBS convolution consists of a convolutional layer, a batch normalization layer
    (BN), and a sigmoid linear unit (SiLU) activation function. ELAN-X extends the
    efficient layer aggregation network (ELAN) module by increasing its depth and
    width, and enhances the learning capability of the network by guiding the computation
    blocks to learn more diverse features of different feature groups. The MPConv
    module adds a Maxpool layer on top of CBS and strengthens the feature extraction
    ability by merging features from the top and bottom branches. The SPPCSPC module
    is similar to the spatial pyramid pooling-fast (SPPF) used by YOLOv5 [32], which
    increases a network’s receptive field. The Head component employs the same path
    aggregation feature pyramid network (PAFPN) [39] architecture as YOLOv5 to efficiently
    fuse features from multiple levels. Finally, the fused and enhanced feature map
    is fed to three detection heads to generate predictions for confidence, object
    category, and anchor boxes. B. Model Enhancement Methods ELAN-H: The ELAN-X module
    in YOLOv7-X is an efficient network structure that enables the network to learn
    more features and have stronger robustness by controlling the shortest and longest
    gradient paths. The structure of ELAN-X is shown in Fig. 4. The shortest branch
    passes through only one CBS convolution to change the number of channels, while
    the longest branch extracts features through seven CBS convolutions. The feature
    maps extracted by each branch are concatenated through the Concatenation (Concat)
    operation as the final result of feature-enhanced fusion. ELAN-X is repeatedly
    used in the Neck to improve the model’s learning capability. However, too many
    branches and convolution operations also increase model complexity and parameter
    size, leading to increased processing time and consumption of computing resources.
    Therefore, we reduce the depth and width of this module without breaking its original
    architecture, changing the number of CBS in the longest branch to three and correspondingly
    decreasing the number of output feature maps to four. In addition, to compensate
    for the decrease in detection performance caused by simplifying this module, we
    replace one CBS convolution in the long branch with Hornet Block [40] to enhance
    the module’s ability to learn important features. Finally, this module, named
    ELAN-H, has a structure shown in Fig. 2(a). Fig. 2. ELAN-H model structure with
    HorNet. (a) ELAN-H model structure, which stacks feature maps from different levels
    by Concatenation (Concat) operation as the final output. (b) Overview of the basic
    building block in HorNet with Recursive Gated Convolution ( g n Conv) . Show All
    Fig. 3. Comparisons of different attention steps. (a) Channel-wise attention.
    (b) Spatial-wise attention. (c) Full 3-D weights for attention. Show All Fig.
    4. Network architecture of YOLOv7-HS contains general modules: input, backbone,
    and head, and basic components: CBS, MPConv, UP, SPPCSPC, SimAM, and two ELAN
    NPSabbrpl with different structures, namely, ELAN-X and ELAN-H. Show All Here,
    the Hornet block is a design based on Recursive Gated Convolution ( g n Conv)
    . The output of the gated convolution y=gConv(x) can be represented as follows:
    [ p 0 HW×C , q HW×C 0 ]= ϕ in (x)∈ R HW×2C p 1 =f( q 0 )⊙ p 0 ∈ R HW×C ,y= ϕ out
    ( p 1 )∈ R HW×C (3) (4) View Source where x∈ R HW×C represents the input features
    which are linearly projected to obtain p 0 and q 0 . Then, q 0 is subjected to
    depth-wise convolution and multiplied with p 0 to obtain p 1 . Finally, p 1 is
    projected linearly again to yield the output y . High-order spatial interaction
    requires the implementation of gated convolutions with recursive designs. Initially,
    a higher-order linear projection is applied to x resulting in p 0 and q k (k=0,1,…,n−1)
    . Subsequently, recursive gated convolutions are executed to generate p k+1 .
    The output of y= g n Conv(x) can be mathematically expressed as follows: = p k+1
    = g k = C k = [ p 0 HW× C 0 , q HW× C 0 0 ,…, q HW× C n−1 n−1 ] ϕ in (x)∈ R HW×(
    C 0 + ∑ 0≤k≤n−1 C k ) f k ( q k )⊙ g k ( p k )/α,k=0,1,…,n−1 { Identity,k = 0,
    Linear( C k−1 , C k ),1≤k≤n−1 C 2 n−k−1 ,0≤k≤n−1 (5) (6) (7) (8) View Source where
    { g k } are utilized to match the dimension in various orders and { f k } are
    depth-wise convolution layers. As depicted in Fig. 2(b), the HorNet block employs
    a block-wise design inspired by Transformer [23] and replace the self-attention
    sublayer with g n Conv that have high-order spatial modeling capability. We replace
    all ELAN-X modules in the Neck with ELAN-H modules, which can better fuse and
    enhance the image features extracted by the Backbone, leading to improved detection
    performance while reducing model complexity. SimAM [41]: The attention module
    can assign different weights to different channels or regions in space, thereby
    helping the model to focus on extracting more important information. Existing
    attention mechanisms typically generate corresponding 1-D or 2-D weights in the
    channel or spatial dimension, as shown in Fig. 3(a) and (b), such as BAM [42],
    which parallelly connects two kinds of attention, and CBAM [43], which serially
    connects them. However, they treat each neuron in every channel or spatial position
    equally during the generation process. This limitation restricts their ability
    to learn more discriminative cues, while in the human brain, these two types of
    attention often occur simultaneously [41]. As shown in Fig. 3(c), SimAM is a unified
    weight attention module that can derive 3-D attention weights for feature maps
    without requiring additional parameters. In visual neuroscience, the most informative
    neurons typically exhibit discharge patterns that differ from those of surrounding
    neurons, and active neurons tend to inhibit surrounding neurons [44]. Drawing
    inspiration from this, the SimAM module designs an energy function to measure
    the linear separability between neurons, thereby identifying important neurons.
    The energy function is defined as follows: e t ( w t , b t ,y, x i )= 1 M−1 ∑
    i=1 M−1 (−1−( w t x i + b t )) 2 + (1−( w t t+ b t )) 2 +λ w 2 t (9) View Source
    where t denotes the target neuron and x i denotes other neurons in a single channel
    of the input feature x∈ R HW×C , i is index over spatial dimension, and M is the
    number of neurons. w t and b t are weight and bias the transform. Subsequently,
    by computing the closed-form solutions of variables w t and b t , and substituting
    them into (9). The minimum energy can be obtained as follows: e ∗ t = 4( σ ^ 2
    +λ) (t− μ ^ ) 2 +2 μ ^ 2 +2λ . (10) View Source The expression in (10) indicates
    that a smaller energy value corresponds to a greater linear separability between
    neuron t and other neurons, which signifies higher importance. Following the definition
    of attention mechanisms, the SimAM module can be expressed as follows: x ~ =sigmoid(
    1 E )⊙x (11) View Source where E is a classification function for all energy functions
    e ∗ t in both channel and spatial dimensions. The sigmoid function ensures that
    the larger values in E are constrained, thereby not affecting the relative importance
    of each neuron. We integrate SimAM modules into the Neck section of the YOLOv7-X
    model, which helps the model to better focus on targets without introducing additional
    parameters. YOLOv7-HS: The improved architecture of the YOLOv7-X model is depicted
    in Fig. 4. We enhance the YOLOv7-X model using the above methods to make it more
    suitable for the Minneapple data set, and named it YOLOv7-HS. C. Resource Allocation
    in Semantic Communication After the UAV obtains the semantic information of images,
    a straightforward approach is to transmit it equally to users. However, due to
    the limited bandwidth resources in wireless transmission, semantic information
    is susceptible to signal attenuation during transmission, consequently affecting
    communication quality. Simultaneously, as nearly every original image is cropped
    into numerous apple images, and considering the highly complex orchard environment
    and the inherent limitations of the detection model, the importance of each cropped
    image (e.g., apple completeness and cropping accuracy) varies. The average allocation
    method (named Avg-SemCom) faces intense competition for scarce wireless channel
    resources among multiple images, resulting in the discarding of crucial images.
    Therefore, we propose a Confidence-based Semantic Communication (Conf-SemCom)
    method, which allocates transmission power by quantifying the importance of semantic
    information to ensure the transmission quality of important data. The correlation
    between an object detector’s confidence and the object it identifies is significant.
    Generally, the confidence of a detected object is positively correlated with the
    amount of semantic features it contains. As illustrated in Fig. 5, apples f ,
    g , and h exhibit relatively complete and rich characteristic information of apples,
    making them easily detectable with a high confidence. While apples a and c are
    heavily obscured by leaves, resulting in low confidence scores for all of them.
    The semantic information of these low-confidence objects, after being cropped,
    is far less important than the other objects, and they should not occupy too much
    power during wireless transmission. In summary, the Conf-SemCom method can ensure
    that more important information is successfully transmitted to users. Fig. 5.
    Results of apple detection comprise anchor boxes and corresponding confidence
    values for each object, apples a to f are sorted in ascending order of confidence
    scores. Furthermore, the cropped images are resized to the same height for ease
    of viewing. Show All Specifically, we prioritize sorting based on the confidence
    c i of each object i and allocate more transmission power with a higher priority
    weight w i . The definition of w i is as follows: w i = c i η (12) View Source
    we use the variable η to adjust the relative difference in power allocation between
    different semantic information. The proposed Conf-SemCom is summarized in Algorithm
    1 with the corresponding pseudo code. Algorithm 1 Resource Allocation in Conf-SemCom
    Input: Captured image X on a UAV Output: Users receive semantic information x
    of the image X 1: procedure UAV-SEND(x) 2: YOLOv7-HS detects apple images x 1
    , x 2 ,…, x i ,…, x U and their confidence c 1 , c 2 ,…, c i ,…, c U 3: Calculate
    the priority weight w i of x i by confidence c i using (12) 4: for i=1 to U do
    5: Allocate transmission power to x i according to their priority weight w i using
    PA [27] 6: end for 7: The UAV sends semantic information x to users 8: end procedure
    D. Diffusion-Based Resource Allocation Diffusion Model: The diffusion model has
    emerged as a new state-of-the-art deep generative model [45]. The fundamental
    concept of the diffusion model entails systematically perturbing the distribution
    of data during the forward diffusion process by introducing the Gaussian noise.
    Subsequently, the data distribution is recovered through the reverse diffusion
    process, which can be viewed as a denoising procedure. Specifically, within the
    forward diffusion process, by iteratively adding Gaussian noise T times to any
    initial sample x 0 , we can obtain x 1 , x 2 ,…, x T . As T approaches infinity,
    the original features of sample x 0 completely vanish and become pure Gaussian
    noise. This process can be represented as follows: q( x 1 ,…, x T ∣ x 0 )= q(
    x t ∣ x t−1 ):= ∏ t=1 T q( x t ∣ x t−1 ) N( x t ; 1− β t − − − − − √ x t−1 , β
    t I) (13) (14) View Source where β t is a parameter that controls the progress
    of noise. From (14), it can be inferred that given the sample x t−1 , the sample
    x t at time t follows a Gaussian distribution with a mean of 1− β t − − − − −
    √ x t−1 and a variance of β t I . The parameters under this condition only depend
    on the x t(!−!)1 at the previous time step. Therefore, the diffusion process is
    a Markov process. When β t is sufficiently small, the reverse diffusion process
    q( x t(!−!)1 ∣ x t , x 0 ) is the posterior probability distribution of the forward
    diffusion process q( x t ∣ x t−1 ) . In order to achieve incremental sampling
    from the Gaussian noise x T to obtain real samples, it is necessary for the generative
    model p θ ( x 0:T ) to learn sufficiently good parameters θ from the training
    samples. This process can be represented as follows: p θ ( x 0:T )= p θ ( x t−1
    ∣ x t )= p( x T ) ∏ t=1 T p θ ( x t−1 ∣ x t ) N( x t−1 ; μ θ ( x t ,t), Σ θ (
    x t ,t)) (15) (16) View Source where p( x T )=N( x T ;0,I) . Finally, the reverse
    diffusion process can be achieved by utilizing a well-trained p θ ( x t−1 ∣ x
    t ) to approximate q( x t(!−!)1 ∣ x t , x 0 ) . AI-Generated Power Allocation
    Scheme: Motivated by diffusion model-based AI-generated contract [46], we propose
    an AI-generated power allocation scheme. In deep reinforcement learning (DRL),
    the intelligent agent learns the optimal policy through interaction with the environment
    to maximize cumulative rewards. As shown in Fig. 6, the AI-generated algorithm
    is capable of addressing the challenges posed by high-dimensional state spaces
    and complex action spaces. Compared to the aforementioned two methods, i.e., Avg-SemCom
    and Conf-SemCom, this method exhibits superior performance in generating resource
    allocation schemes. Specifically, we represent the environment using the vector
    e , which encompasses various factors, such as the wireless channel model, the
    transmission power P , and the number of objects U involved in the semantic communication.
    In this given environment, our objective is to maximize the expected cumulative
    reward across a series of time steps, aiming to determine the transmission power
    weights w i for each object. Fig. 6. Design principles of diffusion model. The
    diffusion model performs multistep denoising on noise and generates an optimal
    allocation scheme. Show All We first construct a generative model π θ (w∣e) that
    can map the environmental state e . The reverse process of the conditional diffusion
    model can be represented as follows: π θ (w∣e)= = p θ ( w 0:N ∣e) N( w N ;0,I)
    ∏ i=1 N p θ ( w j−1 ∣ w j ,e) (17) View Source where p θ ( w j−1 ∣ w j ,e) can
    be modeled as a Gaussian distribution N( w j−1 ; μ θ ( w j ,e,j), Σ θ ( w j ,e,j))
    . According to denoising diffusion probabilistic models (DDPMs) [47], the covariance
    matrix Σ θ ( w j ,e,j) of this Gaussian distribution is β j I , and the mean μ
    θ ( w j ,e,j) can be represented as (1/ α j − − √ )( w j −( β j )/ 1− α ¯ j −
    − − − − √ ) ε θ ( w j ,e,j)) . Initially, we sample w N ∼N(0,I) , and then from
    the reverse diffusion chain parameterized by θ as follows: w j−1 | w j = 1 α j
    − − √ ( w j − β j 1− α ¯ j − − − − − √ ε θ ( w j ,e,j))+ β j − − √ ε. (18) View
    Source From (18), as can be seen that the result is only related to w j and the
    added noise ε . Therefore, the training of the denoising process π θ can be achieved
    by training ε θ . Subsequently, we use the quality network Q v to train the ε
    θ , which represents the expected cumulative reward that an agent takes an allocation
    scheme in the current state and executes accordingly. The objective function that
    needs to be optimized becomes π= argmin π θ L(θ)=− E w 0 ∼ π θ [ Q v (e, w 0 )].
    (19) View Source Utilizing the double Q -learning method [48], the network Q v
    is learned by minimizing the Bellman operator. Consequently, we construct two
    networks, specifically Q v 1 and Q v 2 , along with corresponding target networks
    Q v ′ 1 , Q v ′ 2 , and π θ ′ . The optimization of v 1 and v 2 is achieved by
    minimizing the objective E w 0 t+1 ∼ π θ ′ ⎡ ⎣ ⎢ ⎢ ∥ ∥ ∥ ∥ (r(e, w t )+γ min i=1,2
    Q v ′ i (e, w 0 t+1 )) − Q v i (e, w t ) ∥ ∥ ∥ ∥ 2 ⎤ ⎦ ⎥ ⎥ . (20) View Source
    In DRL, we set the training parameters: batch size N b , discount factor γ , diffusion
    step N , soft target update parameter τ , and exploration noise ϵ . The loss function
    can be represented as follows: L= 1 N b ∑ j ( r j +γ Q ′ v ′ ( e j , w ′ o t )−
    Q v ( e j , w j )) 2 . (21) View Source Then, we can obtain the optimal allocation
    scheme based on the wireless communication environment. The detail of the AI-generated
    scheme is shown in Algorithm 2. Additionally, the trained diffusive model requires
    only five denoising process steps during inference to achieve optimized power
    allocation schemes. Its low computational complexity avoids excessive resource
    consumption. Algorithm 2 Diffusion Model-Based AI-Generated Scheme Training: 1:
    Initial: 2: Initialize replay buffer R and the weights of models, i.e., θ , θ
    ′ , v , v ′ 3: for Episode = 1 to Max_episode do 4: Initialize a random process
    N 5: for Step = 1 to Max_step do 6: Observe the existing environment e t 7: According
    to (18), set w N t as Gaussian noise and generate allocate scheme w 0 t by denoising
    w N t using ε θ 8: Combine w 0 t with the exploration noise ϵ 9: Execute scheme
    w 0 t and observe reward score according to (1) 10: Save the record ( e t , w
    0 t , τ t ) in R 11: Randomly sample N b records ( e j , w j , τ j ) from R as
    a minibatch 12: Minimize the loss to update Q v according to (21) 13: Update ε
    θ by taking gradient descent step on 14: ∇ θ ε θ ≈ 1 N b ∑ j ∇ w 0 Q v (e, w 0
    ) | e= e j ∇ θ ε θ | e j 15: θ ′ ←τθ+(1−τ) θ ′ 16: v ′ ←τv+(1−τ) v ′ 17: end for
    18: end for 19: return ε θ Inference: 1: Input e 2: According to (18), denoise
    Gaussian noise using ε θ to generate the optimal allocation scheme w 0 3: return
    The optimal resource allocate scheme w 0 SECTION V. Numerical Results This section
    primarily presents the experimental settings, materials, and results in this study.
    Initially, we evaluate the effectiveness of the improvements made to the object
    detector YOLOv7-X and compare its performance with other state-of-the-art models.
    Subsequently, we assess the performance of the proposed YOLO-based semantic communication
    system, verify the cost savings of semantic communication, and examine the impact
    of two proposed power allocation schemes on the transmission quality for critical
    information. A. Environment Setup The experimental platform is built on a generic
    Ubuntu 20.04 system with 2 Intel Xeon Silver 4110 CPUs and GeForce RTX 3090 GPU.
    The parameters of the object detection model training process used are shown in
    Table I. The MinneApple data set [49] is the apple image data set used in this
    experiment. It is a publicly available data set utilized for apple detection and
    segmentation, containing images of multiple apple varieties at different stages
    of growth, with a large number of densely packed small apples. The MinneApple
    data set contains a total of 670 labeled images and 331 unlabeled images. Fig.
    7 shows example images from the MinneApple data set. TABLE I Object Detection
    Models Training Parameters Fig. 7. Partial overview of MinneApple data set. Show
    All We use the Fisher-Snedecor F channel model [27] in wireless semantic communication
    to analyze the performance of our model. The small-scale fading between the UAV
    and users is represented by the Fisher–Snedecor F fading distribution, while small-scale
    variations follow the Nakagami- m distribution and shadowing follows the inverse
    Nakagami- m distribution [27]. We set the fading parameter m f = 6, the shadowing
    parameter m s = 6 and the transmit power P= 3000 W by default. In addition, the
    parameters of the resource allocation scheme generated by the AI-generated algorithm
    during the training process are shown in Table II. TABLE II Diffusion Model-Based
    AI-Generated Algorithm Training Parameters B. Results and Analysis Results of
    Ablation Experiment: To evaluate the effectiveness of the ELAN-H and SimAM attention
    modules, we utilize the amount of parameters and computational complexity, i.e.,
    floating point operations (FLOPs), as well as AP@0.5 and AP@0.5:0.95 as indicators
    to measure the performance of the models, where AP@0.5 and AP@0.5:0.95 are commonly
    used evaluation standards in object detection, with higher values indicating better
    model performance. From the results in Table III, the utilization of the ELAN-H
    module leads to 1.3% and 1.7% increases in AP@0.5 and AP@0.5:0.95, respectively,
    while reducing the amount of parameters by 24% and FLOPs by 19%. The incorporation
    of the SimAM attention module enhances the value of AP@0.5 by 0.8%, with no changes
    to the amount of parameters and FLOPs. TABLE III Results of Ablation Experiment
    Comparison With Other State-of-the-Art Object Detectors: We conduct a performance
    comparison of our enhanced YOLOv7-X model with other advanced object detection
    models. In addition to the comparison items presented in Table III, we also compare
    the detection speed. As shown in Table IV, our proposed model achieves the best
    performance in terms of AP@0.5 compared to other models. Although the performance
    difference between our proposed model and other advanced YOLO series models is
    not significant, our model greatly reduces the amount of parameters and FLOPs
    while achieving the fastest detection speed. However, Faster R-CNN, RetinaNet,
    and FCOS models, although having smaller parameter size, perform poorly on the
    MinneApple data set, which contains many small objects, and their detection performance
    fails to meet the requirements of our proposed scenarios. TABLE IV Comparison
    of State-of-the-Art Object Detectors The Effects of Reducing Communication Overhead:
    We use 331 unannotated test images from the MinneApple data set as the images
    to be sent by the UAV. Fig. 8 illustrates a comparison between the data size of
    images transmitted through conventional communication methods and the data size
    resulting from semantic communication after the implementation of semantic feature
    extraction. The aggregate size of the original images amounts to 595.2 MB. However,
    following semantic feature extraction, the volume of data required for transmission
    by edge devices is considerably reduced to 55.4 MB, encompassing 54.8 MB of image
    format data and 0.6 MB of text format data. This reduction corresponds to a 91%
    decrease in communication costs, thereby substantially minimizing power consumption
    during transmission. Fig. 8. Comparison of transferred bytes for each image in
    the two communication methods. Show All The Effect of η on Conf-SemCom: Given
    that the textual data required for transmission by the UAV is considerably smaller
    than image data, we focus solely on the impact of wireless transmission environments
    on the semantic information transfer of image formats. Taking Fig. 5 as an example,
    the UAV first detects that the image contains 30 objects and then allocates power
    for transmission according to the confidence of each object. We first show the
    effectiveness of the proposed Conf-SemCom method. Additionally, to investigate
    the impact of variable η on the transmission performance, we increase η from 0.25
    to 1.5 and the transmission distance from 10 to 30 m. Each experiment is repeated
    100 times, and the average results are shown. The curves of transmission quality
    values (i.e., MIST scores) are shown in Fig. 9. It can be observed that due to
    allocating more resources to important information, Conf-SmeCom outperforms the
    Avg-SemCom method in most cases, with its effectiveness becoming more evident
    as the transmission distance increases. Furthermore, the optimal value of variable
    η varies across different transmission distances. At transmission distances of
    10, 20, and 30 m, the highest MIST scores are achieved when η equals 0.5, 0.75,
    and 1, respectively. This indicates that appropriately increasing the value of
    variable η as the transmission distance increases, while keeping the total power
    P unchanged, allows for a better enhancement of overall communication quality
    by increasing the transmission power p i for more significant objects i . Fig.
    9. Curves of transmission quality scores with different weight adjustment variables
    η and transmission distance D . (a) Transmission Distance D=10 m. (b) Transmission
    Distance D=20 m. (c) Transmission Distance D=30 m. Show All The Effects of Power
    Allocation: We investigate the impact of two power allocation methods, i.e., Avg-SemCom
    and Conf-SemCom, on the transmission quality of images with different levels of
    confidence, over different transmission distances (i.e., 10, 20, and 30 m). As
    shown in Fig. 10, the horizontal axis represents the 30 detected images, sorted
    in ascending order of confidence levels, and the vertical axis represents the
    bit error rate (BER) values derived from the channel model according to the allocated
    power. It is evident that, as the distance increases, the image transmission quality
    declines for both communication methods. However, Conf-SemCom opts to allocate
    more power to semantically important information, resulting in reduced error rates
    for crucial semantic information even under poor channel conditions. Fig. 10.
    BER of images at different transmission distances under two transmission methods.
    Show All To facilitate a comprehensive comparison between the two power allocation
    methods, Fig. 11 illustrates the transmission performance of select images at
    various communication distances. We use SSIM to evaluate the transmission quality
    of each object. From Fig. 11, the transmitted image quality for both methods degrades
    significantly as the transmission distance increases. Moreover, due to the uniformed
    distribution of transmission power, the SSIM values transmitted by Avg-SemCom
    for each image exhibit a relatively uniform and irregular pattern, resulting in
    certain critical images possessing inferior transmission quality compared to original
    images. For instance, apples a and c are heavily occluded and contain very little
    usable information. The significance of semantic features for these images is
    less than that for other images. However, their transmission quality surpasses
    that of other images, which is unreasonable. In contrast, Conf-SemCom allocates
    increased power to salient images, enabling the high-quality transmission of these
    images even in poor channel conditions. Fig. 11. Transmission effects and corresponding
    SSIM values of partial images at different transmission distances. The odd-numbered
    rows are Conf-SemCom and the even-numbered rows are Avg-SemCom. Show All The Effects
    of AI-Generated Scheme: We compare the diffusion model-based AI-generated scheme
    with two other transmission power allocation methods for transmitting semantic
    information at the transmission distance D= 20 m and the transmission power P=
    4 kW. As illustrated in Fig. 12, the diffusion model-based AI-generated algorithm
    exhibits rapid training speed during the optimization of power allocation schemes,
    surpassing the confidence-based allocation scheme at approximately 500 iterations.
    The superiority of the AI-generated approach primarily stems from the exploration
    conducted through the diffusion method, which enhances the flexibility of strategies
    and prevents the model from getting trapped in suboptimal solutions. Furthermore,
    it is evident that the Avg-SemCom method significantly underperforms in terms
    of the MIST score compared to the other two schemes, indicating the necessity
    of considering the importance of semantic information during the communication
    process. Fig. 12. Comparison of the training process of the diffusion model-based
    AI-generated algorithm and the results of two other methods (i.e., Avg-SemCom
    and Conf-SemCom), with transmission distance D= 20 m and transmission power P=
    4 kW. Show All SECTION VI. Conclusion In this article, we have proposed a YOLO-based
    semantic communication framework for developing a virtual apple orchard case,
    focusing on optimizing semantic information transmission and resource allocation
    for images collected by edge devices. Initially, we have enhanced the performance
    of the object detector YOLOv7-X on a real apple data set and have employed the
    optimized object detector to extract semantic information from images captured
    by edge devices, aiming to reduce transmission costs. Furthermore, to ensure the
    high-quality transmission of essential semantic information, we have allocated
    resource based on the significance of their semantic content. Specifically, we
    have allocated the transmission power of semantic information based on the confidence
    generated by the object detection algorithm and the scheme generated by the diffusion
    model-based AI-generated algorithm, respectively. Numerical results have demonstrated
    that the proposed framework and strategy have considerably reduced communication
    costs and have markedly improved the transmission quality of important information
    during communication. Authors Figures References Keywords Metrics More Like This
    Noisy Image Edge Detection Based on Multi-scale and Multi-structuring Element
    Order Morphology Transformation 2008 Congress on Image and Signal Processing Published:
    2008 Performance Comparison of FOD based Edge Detector and Traditional Edge Detectors
    on Fish Image Edge Detection 2020 International Conference on Computational Performance
    Evaluation (ComPE) Published: 2020 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: Du et al. (2023)
  journal: IEEE Internet of Things Journal
  limitations: The study was conducted on a limited dataset (MinneApple). Evaluation
    on more diverse datasets with varying image characteristics and complexity would
    strengthen the generalizability of the proposed framework.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: YOLO-Based Semantic Communication with Generative AI-Aided Resource Allocation
    for Digital Twins Construction
  verbatim_quote1: '"Specifically, we first employ the YOLOv7-X object detector to
    extract semantic information from captured images of edge devices, thereby reducing
    the volume of transmitted data and saving transmission costs."'
  verbatim_quote2: '"Afterwards, we quantify the importance of each semantic information
    by the confidence generated through the object detector. Based on this, we propose
    two resource allocation schemes, i.e., the confidence-based scheme and the acrlong
    AI-generated scheme, aimed at enhancing the transmission quality of important
    semantic information."'
  verbatim_quote3: '>'
- analysis: "The paper seeks to address plant disease detection via IoT technology.\
    \ To this end, the article introduces a novel plant disease detection model based\
    \ on the use of deep structured approaches to identify and mitigate the effects\
    \ of plant disease at an early stage through the use of IoT technology. \n\nThe\
    \ paper's contributions include:\n\n1. A novel plant disease detection model that\
    \ leverages the capabilities of IoT technology.\n2. The implementation of the\
    \ AES encryption scheme to safeguard image transmission.\n3. The use of Mask R-CNN\
    \ for image segmentation and subsequent disease detection.\n4. The development\
    \ and implementation of the MHHO algorithm to enhance the detection accuracy of\
    \ the proposed method.\n5. The utilization of the ADHCN-AM model for classifying\
    \ plant diseases with optimized parameters.\n\nTo evaluate the proposed model's\
    \ performance, the authors compare it against various traditional algorithms and\
    \ classifiers, demonstrating its superior performance. \n\nThe paper concludes\
    \ by highlighting promising future research directions, including the analysis\
    \ of real-time PCR and the implementation of enhanced deep-learning models for\
    \ disease diagnostics. \n\nAlthough the proposed model demonstrates high accuracy\
    \ in plant disease prediction, several limitations were encountered during its\
    \ development, including the challenge of collecting plant disease images due\
    \ to varying climatic conditions. However, the authors express their intent to\
    \ address these limitations in future work through the incorporation of real-time\
    \ PCR analysis and the exploration of improved deep-learning models."
  authors:
  - Ananthi N.
  - Balaji V.
  - Mohana M.
  - Gnanapriya S.
  citation_count: '0'
  description: Plant diseases are rising nowadays. Plant diseases lead to high economic
    losses. Internet of Things (IoT) technology has found its application in various
    sectors. This led to the introduction of smart farming, in which IoT has been
    utilized to help identify the exact spot of the diseased affected region on the
    leaf from the vast farmland in a well-organized and automated manner. Thus, the
    main focus of this task is the introduction of a novel plant disease detection
    model that relies on IoT technology. The collected images are given to the Image
    Transmission phase. Here, the encryption task is performed by employing the Advanced
    Encryption Standard (AES) and also the decrypted plant images are fed to the pre-processing
    stage. The Mask Regions with Convolutional Neural Networks (R-CNN) are used to
    segment the pre-processed images. Then, the segmented images are given to the
    detection phase in which the Adaptive Dense Hybrid Convolution Network with Attention
    Mechanism (ADHCN-AM) approach is utilized to perform the detection of plant disease.
    From the ADHCN-AM, the final detected plant disease outcomes are obtained. Throughout
    the entire validation, the offered model shows 95% enhancement in terms of MCC
    showcasing its effectiveness over the existing approaches.
  doi: 10.1080/0954898X.2024.2316080
  full_citation: 'Smart plant disease net: Adaptive Dense Hybrid Convolution network
    with attention mechanism for IoT-based plant disease detection by improved optimization
    approach'
  full_text: '>

    "Access provided by University of Nebraska, Lincoln Log in  |  Register Cart Home
    All Journals Network: Computation in Neural Systems List of Issues Latest Articles
    Smart plant disease net: Adaptive Dense .... Search in:                                        This
    Journal                                                                                Anywhere                                                                  Advanced
    search Network: Computation in Neural Systems Latest Articles Submit an article
    Journal homepage Full access 9 Views 0 CrossRef citations to date 0 Altmetric
    Listen Research Article Smart plant disease net: Adaptive Dense Hybrid Convolution
    network with attention mechanism for IoT-based plant disease detection by improved
    optimization approach N. Ananthi , V. Balaji , M. Mohana & S. Gnanapriya Received
    11 Oct 2023, Accepted 26 Jan 2024, Published online: 24 Feb 2024 Cite this article
    https://doi.org/10.1080/0954898X.2024.2316080 In this article ABSTRACT Introduction
    Literature survey Structural view of the developed IoT-aided smart plant disease
    detection with elucidation of gathered Datasets Image transmission using standard
    encryption scheme for IoT-based smart farming Image segmentation and dense hybrid
    convolution-based disease detection with tuning of parameters Computation of results
    Conclusion Disclosure statement Additional information References Full Article
    Figures & data References Citations Metrics Reprints & Permissions View PDF View
    EPUB Formulae display:? ABSTRACT Plant diseases are rising nowadays. Plant diseases
    lead to high economic losses. Internet of Things (IoT) technology has found its
    application in various sectors. This led to the introduction of smart farming,
    in which IoT has been utilized to help identify the exact spot of the diseased
    affected region on the leaf from the vast farmland in a well-organized and automated
    manner. Thus, the main focus of this task is the introduction of a novel plant
    disease detection model that relies on IoT technology. The collected images are
    given to the Image Transmission phase. Here, the encryption task is performed
    by employing the Advanced Encryption Standard (AES) and also the decrypted plant
    images are fed to the pre-processing stage. The Mask Regions with Convolutional
    Neural Networks (R-CNN) are used to segment the pre-processed images. Then, the
    segmented images are given to the detection phase in which the Adaptive Dense
    Hybrid Convolution Network with Attention Mechanism (ADHCN-AM) approach is utilized
    to perform the detection of plant disease. From the ADHCN-AM, the final detected
    plant disease outcomes are obtained. Throughout the entire validation, the offered
    model shows 95% enhancement in terms of MCC showcasing its effectiveness over
    the existing approaches. KEYWORDS: Plant disease detectionInternet of ThingsAdvanced
    Encryption Standardmodernized horse herd optimizationadaptive dense hybrid convolution
    network with attention mechanismimage segmentation using mask R-CNNparameter optimization
    maximization of accuracy and precision Introduction Recently, a new technology
    called the IoT has been used in various remote monitoring and data exchanging
    tasks over large environmental areas (Saleem et al. 2022). Thus, this IoT technology
    has been widely used in various automated applications. This IoT technology has
    also been used in the agricultural sector to help farmers improve their agricultural
    productivity, which in turn increases the overall economy of the entire country
    (Delnevo et al. 2022). In the agriculture field, the farmers suffer from various
    issues that arise as a result of sudden climatic change, pests, and different
    kinds of plant diseases (Zhao et al. 2022). Most of the agriculture losses, nearly
    39% are caused as a result of the occurrence of distinct plant diseases. Therefore,
    to enhance the productivity of crops, IoT-based devices are implemented in the
    agricultural field to protect the crops from different kinds of plant diseases.
    In the agriculture field, IoT-based sensors are used to track the presence of
    insects and monitor the condition of crops (Sunil et al. 2022). IoT networks can
    be accessed from any locality with less consumption of energy along with enhanced
    performance, thus its applicability in automatic monitoring of the agricultural
    field is vast. IoT is used for evaluating the soil type, environmental conditions,
    and chemical reactions that take place in plants as a result of photosynthesis.
    The temperature and humidity of the environment are also measured using IoT technologies
    (Ashourloo et al. 2016). Vibration can occur during the transportation process
    and can also be measured with the aid of IoT technology. The effects of this vibration
    can also be reduced by using IoT-based systems. The IoT-based systems are helpful
    in improving the communication between the grasslands and the respective landlords.
    The information related to the state of plants is gathered using the sensors in
    the IoT network (Zeng et al. 2020). Sensors are nothing but low-cost electronic
    devices that are connected to the IoT network to maintain the interaction between
    the farmers and the outside world (Chen et al. 2022). The data gathered from these
    devices are stored using the cloud platform. This cloud-aided IoT technology is
    implemented to improve agricultural productivity (Kumar et al. 2021). IoT-based
    models are designed to detect plant disease in agro-industry applications (Li
    et al. 2021). Basically, in the conventional agriculture system, the farming area
    is huge in size, and therefore it is a complicated task for the agronomist and
    the farmers to record the information related to the diseases that affect the
    plants in the field. Commonly, plant diseases initially affect the leaves of the
    plants. These diseases are then detected by placing distinct sensors in the leaf
    at various positions (Patle et al. 2021). Detection of plant disease in its initial
    stage may help in improving the productivity of the crops (Ashourloo et al. 2016).
    The sensors are placed at different ranges together with video recording equipment
    in order to generate and capture the plant images. The seized images are then
    sent to the sink node from these sensor nodes for further processing. Here, the
    sink node acts as a gateway for sending the data over the internet (Amin et al.
    2022). By using the IoT technique, the crops are protected from various diseases
    by sending alert signals to the farmers whenever a disease offsets a plant (Schor
    et al. 2016). Information regarding the plants and their diseases is sent to the
    farmers by means of these alert messages. Yet, various practical challenges have
    occurred in this process like some diseases that have been identified by the IoT
    device are more specific and are not even familiar to the farmers. Conversely,
    manual observation is time time-consuming, and expensive process. Therefore, automatic
    detection of plant disease, like digital image processing with IoT devices is
    very useful in diminishing the time and expense-related issues that occur in such
    systems. Different techniques are used in the agriculture field to improve overall
    productivity (Nie et al. 2019). Yet, various ecological and agricultural pollution
    affects the health of the plants. Artificial intelligence technology is used by
    farmers to minimize the risk factors associated with the detection of plant diseases.
    This artificial intelligence technology assists in generating an effective plant
    disease detection model (Deng et al. 2022). During the season times, farmers need
    a large number of experienced workers to carry out different tasks like picking
    fruits, eliminating weeds, harvesting, and sowing crops manually. All these manual
    methods are time-consuming and expensive (Ahmad et al. 2021). The disease, if
    present in plants will affect the entire growth of the plant and hence will result
    in higher losses for farmers. Therefore, a computer-based disease diagnostic system
    has to be implemented in order to prevent such occurrences. Predicting the affected
    area in the leaf with much accuracy is a difficult task in several existing traditional
    deep learning-based disease identification approaches (Huang et al. 2020). An
    outstanding application of artificial intelligence is its application in the detection
    of diverse kinds of plant diseases in the affected region. A few of the recent
    research works have been provided in the below section. In (Movassagh et al. 2023),
    an integrated algorithm to train the neural network with the help of meta-heuristic
    algorithms has been developed by the authors. Here, the key input to the neural
    network was determined using the recommended algorithm. However, this technique
    does not have the capacity to minimize the system overhead in producing accurate
    detection outcomes. In (Parida et al. 2023), a novel image encryption and authenticated
    framework using the Elliptic Curve have been generated. Here, the suggested Elliptic
    Curve Diffie-Hellman (ECDH) has been generated for performing the encryption process.
    Moreover, the chaotic matrix was XORed by the non-shuffled image in this approach.
    However, the developed model was not able to predict effectively regarding accuracy.
    In (Gheisari et al. 2022), a cluster election algorithm with the help of a fuzzy
    logic inference system was executed. Here, the developed “Low Energy Adaptive
    Clustering Structure (LEACH)” algorithm and “Fuzzy Clustering Algorithm (FCA)”
    model have been adopted for evaluating the active nodes in the developed IoT-based
    plant disease detection system. Here, the maintenance of sensor efficiency becomes
    a challenging task. In order to alleviate these issues, a novel methodology was
    suggested along with the detection of the plant disease in an effective way. Contribution
    of the offered method The key contributions of the recommended detection of plant
    disease model based on the classifiers are specified as below. To adopt a new
    model for identifying plant disease using a deep learning model at the initial
    stage to maximize the overall productivity of the crops and help in enhancing
    the agricultural sector. To ensure security by implementing the AES encryption
    scheme in the image transmission phase. Here, the data encryption is accomplished
    using the encryption key and the data is then secured. To develop a Mask R-CNN
    for segmenting the pre-processed images. Here, the segmentation at the pixel level
    is performed to isolate the specific portion of the image from the whole image.
    To design the MHHO algorithm to maximize the prediction credibility of the proposed
    method by optimizing the constraints such as, “counts of hidden, step-per-epoch
    and count of epoch” in the ADHCN-AM To implement a hybrid model called the ADHCN-AM
    model for classifying plant diseases. Here, the variables are optimized to maximize
    precision; Negative Predictive Value (NPV) rate, accuracy, and Matthew’s Correlation
    Coefficient (MCC) for minimizing the False Positive Rate (FPR). To validate the
    performance offered by the executed model to show the superior performance provided
    by the executed approach by comparing it with various baseline approaches. The
    following sections of the research work are depicted here. Following Section I
    in which a detailed introduction to the IoT-based plant disease identification
    model is explained, the useful attributes and the disadvantages regarding the
    baseline works on the plant disease detection model are discussed in Section II.
    Section III shows the developed IoT-based smart plant disease identification model
    along with the elucidation of collected datasets. Section IV explains the standard
    encryption scheme for IoT-based smart plant disease detection. Image segmentation
    and enhanced deep structure-based disease detection approach with tuning of parameters
    are depicted in section V. The experimental evaluation and conclusion are discussed
    in Sections VI and VII, respectively. Literature survey Related works Mishra et
    al. ( 2021) introduced an automated plant disease detection approach using IoT
    devices. The images of the affected plant leaf were captured using the camera
    by means of an IoT device and then were transferred to the sink node. This sink
    node helped to transmit the data from the field to the pre-processing phase. A
    median filter was executed in the pre-processing phase to boost the grade of the
    image. Then, segmentation was done to eradicate the pixel factors that were present
    within the images. The Sine Cosine Rider Algorithm was used in the classification
    stage for optimizing the parameters The provocation results of the offered advent
    have upgraded the overall performance in identifying plant disease with high perfection.
    Chen et al. ( 2020) have innovated a pattern-based technique that has utilized
    various IoT devices for the identification of bugs in rice bursts. The disease
    detection technique that existed mostly relies on plant images for the recognition
    of bugs in the plant. In the proposed approach, non-image data were automatically
    collected and trained using artificial intelligence techniques. Concurrent data
    was clustered for the analysis of plant diseases. IoT devices have reduced the
    computation cost in real-time training and prediction tasks. The features were
    extracted using the spore germination mechanism. These extracted features have
    improved the overall accuracy rate in leaf disease detection tasks. Udutalapally
    et al. ( 2021) have developed a creative idea-based internet-of-agro-things for
    the automatic detection of bacterial disease in plants. Genetic variation in the
    crops raised the vulnerability of the disorder known as mutation pathogens. Most
    of the production in the agriculture field got degraded due to mutation disorder
    because the farmers didn’t have any idea about this disease. Therefore, implementing
    disease prediction technology using neural structure was needed, to help the farmers
    for improving their crop yield. A convolutional network with neural structure
    was used in this proposed model for performing the task of mutation disorder prediction.
    Input images were collected by the health maintenance system using various sensor
    nodes. In the wireless network, the real-time images from the environment were
    collected using the nodes with a camera module. The proposed model used several
    integrated circuits and smartphone applications to monitor the affected plant
    in the field. A separate protocol was developed to monitor the weather conditions
    of the environment as well. Debnath and Saha ( 2022) have recommended an artificial
    intelligence model based on the IoT network using machine learning for performing
    smart plant disease detection tasks. In this proposed model, CNN was used for
    discriminating the brown spot infection in the paddy crop from the healthy crop.
    Real-time images were collected, recognized, and pre-processed using the self-invented
    pre-processing tool. Next, the collected data were trained and tested using tensor
    flow and keras pattern. The validation has shown that the developed model has
    observed an elevated production rate thus helping in reducing production losses.
    Rezk et al. ( 2022) have introduced a plant infection recognition system using
    deep learning techniques. In this system, the input images were divided into multiple
    segmented images corresponding to their pixel values. Various semantic techniques
    were used in this model like U-Net, CED-Net, Deep LABV3, and Se-Net to recognize
    the disease-affected area from the obtained segmented plant images. Performances
    of the developed model were compared with other networks. Experimentation was
    carried out on the executed model by considering the “sensitivity, F1-score, and
    Intersection over Union (IoU)”. The preferred model with Se-net and Conditional
    Random Fields (CRFs) has given inflated outcomes when compared with other methods.
    The strength and capability of the proposed process and its enhancement were compared
    with numerous existing methods. Gunisetti et al. ( 2022) have proposed an intuitive
    model for the detection of leaf disease in crops. Sensor nodes were used to gather
    real-time leaf images from the platform and these images were transmitted using
    the routers in the wireless network model. The competitive Shuffled Shepherd Optimization
    (CSSO) algorithm was utilized to tune the optimal features for improving the prediction
    rate on disease detection. Swarm and Shepherd’s optimization was assimilated to
    choose a better path. The disease prediction process underwent pre-processing
    techniques. Features like energy and statistical features were extracted and finally,
    the type of disease was predicted. Region of Interest (ROI) and CNN were used
    for feature extraction and pre-processing. The weights were tuned using the executed
    CSSO algorithm. The resultant outcome illustrated that the assigned method’s performance
    was improved than the traditional methods based on their prediction and communication
    delay. Zhang et al. ( 2022) have suggested an IoT-based system to detect diseases
    in apple leaf. Multi-scale Dual Channel (MSDC) was developed in this suggested
    model for detecting apple plant diseases. Initially, the leaf images were collected
    and converted into “Red, Green, and Blue (RGB)”. Following this, the “Hue, Saturation,
    and Value (HSV)” colour scale images were performed to acquire the colour and
    consistency attributes from the input images. Texture features were extracted
    using an RGB colour image and colour analysis was carried out using the HSV colour
    scale on the input image. The weights were optimized to improve the prediction
    rate and to enhance their accuracy. Deep CNN with an attention mechanism was developed
    in this proposed model to perform the detection task. Finally, an IoT-based identification
    of infection in plants was established by merging appliances and identification
    patterns. The experimentations conducted on the developed while utilizing the
    self-gathered database and other scholars’ databases have shown that the innovative
    “Deep Multi-scale dual-channel Convolutional Neural Network (DMCNN)” has attained
    higher performance than other existing approaches. Jiang et al. ( 2019) have proposed
    a machine learning-based model for the detection of apple disease. Real-time images
    were collected automatically. These datasets were made of complex and laboratory
    images. These images have undergone data argumentation and image interpretation
    methods. In this proposed apple plant disease detection model, the Module and
    Rainbow Concentration (IMRC) method was used to identify the apple disease. The
    collected dataset has a total of 26,773 images of apple leaves with diseases.
    This dataset was considered for experimentation. The proposed IMRC was pre-trained
    to collect five kinds of apple leaf disease. The experimental outcomes of the
    IMRC model have obtained a high-speed detection of around 23.13 FPS. Further,
    the suggested IMRC pattern has provided a high-accomplishment solution for the
    advanced models used for the identification of apple leaf infection than the other
    models with higher perfection and better identification speed. Appe1 et al. (
    2023) developed an improved YOLOv5-based tomato plant disease detection algorithm.
    Here, the relevant features were extracted with the help of CAM-YOLO in which
    the YOLOv5 model was used. However, the Convolutional Block Attention Module (CBAM)
    was suggested for the target identification. Here, the developed model has enhanced
    accuracy thus, has improved the overall detection performance of the system. Problem
    statement Conventionally, several plant diseases are analysed by professionals
    manually. However, these identification procedures have some complexity while
    finalizing the type of the disease due to the similarities in shape, colour, and
    size. The merits and drawbacks of the existing method are illustrated in Table
    1. Several complexities attained in the conventional IoT-based plant disease identification
    model as well are provided in Table 1. SCA-based RideNN (Mishra et al. 2021) effectively
    enhances the disease detection rate in terms of accuracy. However, it is not the
    ability to classify various types of plant diseases. CNN (Chen et al. 2020) automatically
    analyzes the data and generates the outcome relevant to that of the real-world
    outcome. Yet, it was not capable of encoding the position as well as the orientation
    of the objects. CNN (Udutalapally et al. 2021) has a higher robustness than the
    classical techniques and they are widely utilized in all types of applications.
    Still, it faces issues regarding a higher imbalance rate and also faces overfitting
    issues. CNN (Debnath and Saha 2022) didn’t need any human supervision to identify
    the essential features for the identification of disease in plants. However, it
    takes an enormous time to train the data and consumes more time to perform the
    identification task. CNN and CRF (Rezk et al. 2022) effectively improve the augmentation
    size of the dataset and also it has the ability to detect the disease-affected
    part specifically. However, it needs to enhance the performance rate effectively
    in terms of accuracy. CSSO (Gunisetti et al. 2022) offers high-quality solutions
    as the outcome within a reasonable period of time. Still, it easily falls into
    local optimal solutions. DMCNN (Zhang et al. 2022) effectively optimizes the double
    factor weight in order to enhance the textural feature extraction process. Yet,
    it needs a massive amount of data for training, and also it requires more storage
    space for computation. CNN (Jiang et al. 2019) has the capability to attain discriminate
    features automatically for effective analysis. Yet, it needs more time to obtain
    the important features for effective analysis. Thus, to tackle the above-mentioned
    complexities it is significant to develop a new IoT-based model for the identification
    of diseases in plants with the aid of deep structured approaches. Table 1. Advancement
    and complications of baseline blockchain-based smart grid security systems. Download
    CSVDisplay Table Structural view of the developed IoT-aided smart plant disease
    detection with elucidation of gathered Datasets Developed IoT-based smart plant
    disease detection Plant disease affects the natural growth of the plants and reduces
    the yield that is produced by the crop. Infectious plant diseases are caused by
    the attack caused by other living organisms. These infections reduce the nutritional
    contents in the plant. Fungi, bacteria, and viruses are the common pathogens that
    affect crops and reduce the overall plant yield. Various ecological factors like
    soil, heat, and acidic value are some of the other main causes of disease in plants.
    This results in a deduction in the overall productivity of the crop. Diseases
    affecting the food crops may lead to a situation in which there will be an inadequate
    supply of food to humankind leading to the death of people in the worst-case scenario.
    Hence, the identification of infectious plants is necessary to ensure the food
    supply to humans and to prevent the heavy losses that are caused to the farmers
    (Sreedevi and Manike 2022). Automatic identification of disease in plants with
    deep learning is introduced to expose the possible occurrence of plant diseases
    in an automated manner. However, the prediction accuracy of these models is very
    low and these models have a higher bug rate (Alzubi et al. 2022, 2022). Non-linear
    data computation is a little difficult in these developed structures. Even, though
    farmers use improved IoT-based technologies for farming, they are not able to
    obtain a profit due to poor communication framework and as a result of the high
    cost of equipment needed to implement IoT-based agriculture farming. The presence
    of the complex background cannot be easily separated from the original images
    that are collected by means of these IoT-based methods. The boundaries of the
    symptoms of various plant diseases are also not identified in this IoT-based plant
    disease detection framework. So, a hybrid convolution model with an attention
    network is implemented in this work to enlarge the reliability of plant disease
    prediction by reducing the error rate. The architectural view of the offered plant
    disease prediction approach is given in Figure 1. Figure 1. Architectural view
    of the offered plant disease detection model using adaptive deep learning approach.
    Display full size The latest approach for detecting various plant diseases in
    their early stages with high accuracy is executed in this work using an adaptive
    deep structured model. Using IoT technology, the images of the field are gathered.
    The raw data consisting of field images that are obtained by means of IoT technology
    are gathered from various datasets and are subjected as input to the image transmission
    stage, where encryption and decryption are carried out using the AES scheme. At
    first, the raw images are encrypted using AES, and then the encrypted images are
    forwarded to attain the decrypted plant image. Then, the decrypted images are
    subjected to the pre-processing stage, where the quality of the decrypted real-time
    images is improved using the CLAHE technique. Following this, the noises in the
    images are removed with the aid of a median filter. Here, the grey level of the
    pixel value is replaced by the median value using an averaging operation. The
    median filter in the pre-processing stage protects the edge pixel value. Next,
    the pre-processed images are taken for the segmentation phase. Here, the pre-trained
    mask R-CNN network is used for executing the pixel-level segmentation on the pre-processed
    images. Finally, the attained segmented images are passed to the classification
    stage where the ADHCN-AM is utilized to detect the presence of plant diseases.
    The proposed method’s detection accuracy is enhanced by optimizing parameters
    like epoch count, step-per-epoch size, and the hidden count in the recommended
    detection model using the improved MHHO algorithm. The parameters are tuned to
    improve “MCC, accuracy, precision, NPV” as well as minimize the error rate. The
    obtained outcomes are compared with various traditional algorithms and classifiers
    to check the superiority of the suggested IoT-based plant disease detection model.
    The final outcomes of the proposed model produce a high disease detection rate
    with less prediction error. Dataset description The useful data that are required
    for the identification of plant disease are collected from two standard datasets,
    namely the Plantify Dr Dataset and the Plant Village Dataset. A detailed explanation
    of the data gathered from these two datasets is given below. Plantify Dr. Dataset:
    This plant disease dataset is available on the data sources which are available
    in the link https://www.kaggle.com/datasets/lavaman151/plantifydr-dataset, and
    it was accessed on 5 July 2023. It contains a total of 134,000 jpg images with
    plant disease regarding various plant varieties. These images include the leaf
    images of cherry plants, citrus, peach, tomato, strawberry, and apple. A total
    of 32 images are taken in this dataset, and these images are used for training
    our deep learning technique. Plant Village Dataset: The data is garnered from
    online sources which are available in the link https://github.com/spMohanty/PlantVillage-Dataset.
    This dataset was accessed on 5 June 2023. It contains RGB colour images of the
    affected plant, greyscale images, and RGB images with leaf segmented and some
    high-quality images. The gathered images needed for the designed model are denoted
    by the term B N h C L . The variable h presents the average of images, such that
    h = 1 , 2 , 3 , \\ldotsH , where the variable H indicates the total number of
    collected samples. The garnered sample images are given in Figure 2. Figure 2.
    Sample images collected for detecting plant diseases from various standard datasets.
    Display full size Image transmission using standard encryption scheme for IoT-based
    smart farming AES algorithm The gathered input images are initially given as input
    to the image transmission phase. Here, the images are secured with the aid of
    encryption and decryption processes. For performing the process of encryption
    and decryption, the AES algorithm is utilized. Here, the collected images are
    encrypted using AES and then the encrypted images are forwarded to the node from
    there the decryption process is executed to attain the decrypted plant images.
    AES (Anurekha1 et al. 2022): This algorithm is flexible in nature so it can be
    effectively used in various hardware and software during implementation. In the
    encryption process, a secret key is used to convert the input data into cipher
    text, then using the same key the cipher text is again converted into its original
    data. A number of steps of transmission round in the AES algorithm take place
    based on the key size. Data encryption provides security to the data and prevents
    unauthorized users from reading these protected data. It also prevents mischievous
    one-path attacks in the gathered images. The most significant drawback of using
    a symmetric chipper is associated with the management of the keys in a secure
    manner. Communicating user must share their secret key with enhanced security.
    The number of users in the network is selected according to the number of secret
    keys used in the network. If the network has multiple users, then maintaining
    the security while transferring the data is difficult. Hence, an advanced AES
    scheme is used in this proposed plant disease detection model. AES-based image
    transmission and image decryption The raw images B N h C L are given as input
    to the image transmission phase, where the images are decrypted and encrypted
    by the AES algorithm. Here, the AES algorithm encloses three processes such as
    cipher, inverse cipher, and key description. A cipher is used to convert the original
    images into meaningless information. This information is secured using some special
    key and again is converted into meaningless information. These meaningless ciphers
    are again converted back into original images using an inverse cipher. Computation
    in the AES algorithm utilizes an alternation-permutation module. Here, streams
    of linked mathematical operations are performed and are represented in terms of
    bytes. AES uses 128 bites of plaintext block and these blocks are arranged into
    four columns and rows. The 128-bit round original key is used in this AES algorithm
    for encrypting the images. During the encryption process, the images and the secret
    key are collected from the user. This secret key is used to encrypt the images
    using the AES algorithm. Each block in the image is encrypted separately for the
    entire image. The first block is encrypted using the special key and a cipher
    block is generated from it. The second block is encrypted using the previously
    generated cipher block and the action is repeated till the end of the final block.
    Next, the output is fed to the image steganography phase to hide the secret data
    within the encrypted images in order to improve the overall accuracy. These images
    are divided into two different parts and are merged to form the cover image. Finally,
    these cover images are transmitted over the internet with high security and these
    images are denoted as the steno-images. Each image uses a different routing path
    in the networks, so the hackers are not allowed to retrieve the secret image in
    the encrypted form. On the receiver side, all the shares of images are collected
    and merged to form a single image and are decrypted using the same secret keys.
    The AES-based decryption undergoes four processes, Shift row, inverse mix column,
    Add round key, and Inverse subbyte, and their execution is similar to that of
    the encryption process. Thus, data encryption helps to secure important data in
    the database and helps protect the personal information within the collected images.
    Financial records are stored on the devices. Here, each block is decrypted to
    produce the original images. Thus, the original images are decrypted and retrieved
    without any loss. Finally, the decrypted images Y U h Q W are produced as the
    output from the image transmission phase. Developed MHHO A new MHHO algorithm
    is generated in the implemented IoT-based plant disease detection model. The detection
    accuracy of the system is improved by optimizing the parameters in the ADHCN-AM-based
    detection model. The variables like “step-per-epoch, hidden neuron count, and
    epoch size” are tuned to enlarge precision, MCC, NPV, and accuracy to decrease
    the FPR value with the aid of the MHHO algorithm. In this proposed plant disease
    detection system, the Horse Herd Optimization (HHO) algorithm is utilized because
    of its very few parameter requirements, as it reduces the burden of degrading
    the performance of the executed complex structure. This algorithm also has a high
    convergence speed and strong searching capacity. Yet, falling for the local optimum
    is very high in this algorithm. To overcome this problem, the HHO algorithm is
    modified by uniformly selecting a random number λ between 0 − 1 . HOA (Naeimi
    et al. 2021): The HHO algorithm is developed by considering certain behaviours
    of horses like Sociability, Grazing, Hierarchy, and Defense mechanisms at their
    distinct ages. The iterative movement of each horse is given by Equation (1) .
    C V l iter = B ⃗ l iter , AGE + C V l iter − 1 , A G E AGE = α , ε , η (1) In
    Equation (1) , the term B ⃗ l iter , AGE denotes the initial position of the horse,
    AGE denotes the specified age of the horse, and iter denotes the current iteration
    of the HHO algorithm. The behaviour of horses is changed with respect to their
    age. The maximum life span of horses is 25–30 years. This term α represents the
    horse at the age limit of 0 − 10 years, the term ε represents the horse at the
    age limit of 10 − 20 years, and the term η represents the horse above 25 years.
    Matrix performance is conducted to identify the age of the horse. The behaviour
    of the horses is numerically evaluated to identify the velocity vector. The position
    vector of each horse at different ages is mentioned as computed in Equation (2)
    . B l iter , = H l iter + J ⃗ l iter + D l iter + O m iter + G m iter _ T m iter
    (2) Usually, horses graze for about 16 to 20 hours a day. A specific area is considered
    for grazing and the coefficient of each horse while grazing is denoted by h .
    Horse grazes at any age throughout their lifetime. The gazing of the horse is
    mathematically formulated using Equation (3) . H ⃗ l iter , AGE = kiter χ + κλ
    C m iter − 1 , age = α , ε , η (3) kiter = kite r iter − 1 , A G E × E g (4) In
    Equation (3) , the term H ⃗ l iter , AGE denotes the motion parameters, the terms
    χ and κ denotes the maximum and the minimum grazing bound, and λ denotes the random
    number that is selected between 0 − 1 . Horses are divided into several groups
    with a leader for each group. Members in each group follow the orders from their
    respective leaders. The coefficient of the strongest member in the group is denoted
    as j . Middle age horses ages between 5 − 15 is considered as the strongest horse
    and the position of these strongest horses is determined using Equation (5) and
    Equation (6) . F G l iter , A G E = k l iter , A G E B iter − 1 − B l iter − 1
    (5) j l iter , A G E = j l iter − 1 , A G E × λ (6) In Equation (5) , the term
    F G l iter , A G E denotes the better position of the horse in the population
    based on the velocity parameter. To ensure security, the horses live together
    and they fight with each other due to their social behaviour. Some of the horses
    are always happy with other animals and move towards the average position of other
    horses using the formula given in Equation (7) and Equation (8) . D l iter , a
    g e = d l iter , a g e 1 \\overm ∑ k = 1 M C k iter − 1 − C l iter − 1 , age =
    ε , η (7) d l iter , a g e = d m iter − 1 , a g e × β (8) In Equation (7) , the
    term D l iter , a g e denotes the social motion vector of the horses, d l iter
    , a g e denotes the movement of horses towards the leader in the ite r th iteration,
    and m presents the total number of horses in a group. In each group, the motion
    vector decreases with respect to the factor β . To find the appropriate position,
    the horse imitates one another, and they grasp each other’s best and worst habits.
    The imitation behaviours of the horse are denoted by the term y in this algorithm.
    The movement vector of the horse towards the better position is determined using
    Equation (9) and Equation (10) . D ⃗ l iter , age = d l iter , a g e 1 QM ∑ k
    = 1 M C ˆ k it − 1 − C l i r − 1 , age = η (9) d l i r , a g e = d m i r − 1 ,
    a g e × ξ (10) In Equation (9) , QM notes the total number of horses having only
    the best position and ξ denotes the reduction factor that is used in the motion
    vector. In the HHO algorithm, the characterization of the defence system is noted
    as f and the main function of the defence system is neglecting the position of
    horses having improper responses far away from the target point. Horses fight
    for food and water to reduce their survival difficulties. The defence mechanism
    of a horse is computed using Equation (11) . F ˉ z iter , age = − f z iter , a
    g e 1 wM ∑ k = 1 wM C k iter − 1 − C iter − 1 (11) In Equation (11) , the variable
    F ˉ z iter , age notes the escape matrix and wM denotes the number of horses with
    the worst location. Horses move from one location to another location for grazing.
    They are always eager to visit new locations and to know about the neighbour’s
    location. Horses see each other using the side wall and move towards the stable
    point. This movement is represented as an arbitrary propagation and is represented
    by the term q . Roaming in the horses is carried out only at a young age and this
    behaviour stops when they reach maturity. The process of roaming in the horse
    is mathematically represented using Equation (12) . T n iter , a g e = q n iter
    , a g e λ E iter − 1 (12) q n i t r , a g e = q m i t r − 1 , a g e × e t (13)
    In Equation (12) , the variable T n iter , a g e denotes the velocity vector value
    in a random position and e t denotes the reduction factor. The α horses obtain
    the best solution and are considered the leader of the group. This leader horse
    starts the algorithm by searching for the best position by making use of the exploitation
    strategy. The most common optimal position is denoted as ζ . This position of
    the horses is selected using the attention mechanism. Algorithm 1 gives the pseudocode
    of the offered MHHO algorithm and the Flowchart of this MHHO algorithm is given
    in Figure 3. Table Display Table Figure 3. Flow diagram of proposed MHHO algorithm.
    Display full size Image segmentation and dense hybrid convolution-based disease
    detection with tuning of parameters Image preprocessing The decrypted images Y
    U h Q W are subjected as input to the pre-processing stage. The encrypted images
    are passed through the pre-processing stage, where techniques like “Contrast-Limited
    Adaptive Histogram Equalization (CLAHE) and Median filter” are utilized to enhance
    the quality of the images. CLAHE: Amplification noise in the images is reduced
    to enlarge the quantity of the concurrent images using the CLAHE approach. It
    concentrates on a small portion of the entire image called tiles at a time to
    generate the enhanced images. The neighbouring pixels are combined using the bilinear
    interpolation method. Thus, the contrast of the image is improved. This in turn
    enhances the clarity of the pixel value at the edge region of an image. Therefore,
    the user can limit the divergences of the resemblances by decreasing the size
    of the image on the basis of the need before and after CLAHE. The image obtained
    from the CLAHE is denoted as Y U h H J . Median filter: The output image from
    the CLAHE Y U h H J is provided as the input to the median filter. The noise from
    the images is removed with the help of a median filter without losing any edge
    information during the noise-removal process. In the median filter, the result
    is not a statistical function of the input and the median value is equal to one
    of the pixel values. When the median filter moves towards the edge it doesn’t
    create any unrealistic pixel values. Thus, the median filter is good for preserving
    sharp edges in the images. Finally, the pre-processed images obtained from the
    median filter P L h R F are provided as input to the segmentation phase. MR-CNN-based
    image segmentation The pre-processed image P L h R F is given as input to the
    distribution phase, where mask R-CNN is used for segmenting the images. MR-CNN
    (Park 2017) is a state-of-the-art method that is used for performing valuable
    detection and real-time image segmentation tasks. The backbone branch, ROI align
    branch, and mask branch are the three major branches that constitute the basic
    operation in the mask R-CNN. The pooling function generated in the ROI branch
    helps to reduce the quantization error. A convolutional network with different
    weighted layers is used for segmenting the images. Yet, CNN leads to a high training
    error and poor accuracy; therefore, the ResNet model is used to clear up the problems
    that arise in the conventional CNN-based image segmentation model with the aid
    of multiple layers. During the training process, many small features from the
    original images get rejected due to their poor quality. In order to maintain these
    small features, the DensNet with a feed-forward network is used in the mask R-CNN
    model. It enhances feature proliferation and enhances segmentation accuracy. The
    product from each layer is connected to the initial layer to provide continuous
    transmission of information. In this network, the input image is denoted by v
    o , and the number of layers is represented as Y , which executes a non-linear
    transformation function K z ⋅ . Here, the term z denotes the z th layer and the
    cascaded function of the feature map is computed using Equation (14) . v o = K
    z v o , v 1 , … , v z − 1 (14) The input and output of the q th layer are denoted
    by G q − 1 and G q , respectively. The output feature map of the convolution layer
    is computed as given in Equation (15) . G q , v = J G q − 1 , G q , … , G q ,
    G q , v − 1 (15) The maximum information flow is maintained between each layer
    by connecting one layer with another. The resemblance of each layer is the summation
    of the previous output layer and this results in a feed-forward mechanism. A multilayer
    feature of the obtained image is fused to obtain strong semantic information with
    the aim of enhancing the accuracy of the image segmentation process. The ROI align
    layer is utilized to reduce the quantization error in the network. The ROI images
    are divided into H × H boundary cells with their coordinate positions and these
    positions are evaluated using the bilinear interpolation. Finally, the pooling
    function is performed to produce a stable ROI image with less quantization error.
    Region proposal network in mask R-CNN is used to detach the ROI features. Single-layer
    features are replaced with multilayer features, then these features are fused
    together to produce the essential ROI images with multiple features. In mask R-CNN,
    the segmented images are produced after the mask accession method. The ROI images
    after pooling are given to the fully connected layer for employing the classification
    of plant disease task. Here, the bounding box, regression, and instant segmentation
    are done to speed up the processing and execution of this approach. The feature
    size of the images is reduced using convolution and pooling operation and de-convolution
    operation is carried out to improve the quality of the feature by adopting the
    interpolation method. Finally, each pixel is classified and an accurate segmented
    image is produced as an output. The structural demonstration of the image segmentation
    process using mask R-CNN is given in Figure 4. Figure 4. Structural demonstration
    of image segmentation process using mask R-CNN. Display full size Basic DenseNet
    DenseNet is a deeply connected variant of CNN that has the capability to automatically
    acquire the features and optimize the average weight to deduce the overall computational
    complexity. DenseNet uses a feed-forward mechanism for connecting every layer
    in the network with one another. Pooling, convolution, and Rectified Linear Unit
    (ReLU) are the inbuilt operations performed in each layer of the DenseNet in the
    downsampling process. The multichannel input is given as the input to the DenseNet,
    in which the features get extracted and the outcome feature map is created by
    means of the distinct layers in the DenseNet structure. The structural arrangement
    of DenseNet is very easy and straightforward. The DenseNet model has the ability
    to rescue the features across the layers with the aim of improving the efficacy
    of the system and reducing the complexity that arises across the entire system.
    In this DenseNet, the H H + 1 / 2 layers are used, where the outcome of each layer
    is considered as input to the next layer. A rectified layer with a distributed
    activation function is provided as the first layer of the architecture. The nonlinearity
    of the image is improved by using the ReLU layer in the next layer. Moreover,
    the overfitting problem can be reduced using the third layer which is specified
    as the dropout. This dropout layer has a dropout rate of 0.2. The fourth layer
    is the pooling layer which has the tendency to deduce the size of the feature
    map, and finally, the softmax operation is performed by the final layer of the
    DenseNet. The basic architectural view of DenseNet is given in Figure 5. Figure
    5. The basic architecture of DenseNet. Display full size Developed ADHCN-AM for
    plant disease detection The modified ADHCN-AM is utilized in this work to classify
    the types of plant disease at its initial stage. Here, several constraints like
    hidden neuron counts, epoch count, and step-per-epoch are optimized to improve
    the disease detection accuracy with the aid of the MHHO algorithm. The optimization
    helps to attain enhanced accuracy, MCC, NPV, and precision along with the reduction
    in the FPR error value. In this modified dense hybrid convolution network, the
    output layer of each 3DCNN block is densely connected with the 2DCNN layer with
    an attention mechanism in between for performing non-linear transformation in
    the network. The main advantage of concatenating these 3D features with the 2D
    features is for reshaping. Then, maximum pooling is performed using the kernel
    function. This max pooling is a very easy process. Finally, a fusion layer was
    performed to fuse the features to detect the presence of diseases. In this proposed
    model, the attention mechanism was performed to point out special features in
    the segmented images, by allocating different weights to various features in the
    input. Thus, the performance and accuracy of the developed model are increased
    along with reducing the information loss and the burden on the hidden layer in
    the model. The major fitness function of the proposed ADHCN-AM-based plant disease
    prediction is given mathematically as given in Equation (16) . G H 1 = arg min
    W S g ∗ A D H C N , E D h ∗ A D H C N , R F j ∗ A D H C N 1 Aq + Pr e + MC + NPV
    + FDR (16) In Equation (16) , the term W S g ∗ A D H C N denotes the hidden neuron
    which lies in the range 5 − 255 , E D h ∗ A D H C N indicates the epoch, whose
    size varies in the range 5 − 50 and the term R F j ∗ A D H C N denotes the step
    per epoch, which varies in the range 5 − 250 . The terms Aq , Pr e , MC , NPV
    denote the Accuracy, Precision, MCC, and NPV, respectively, and the term FDR denotes
    the False Discovery Rate (FDR). The mathematical expression for computing the
    value of Accuracy, Precision, MCC, and NPV is given below in Equation (17) , (
    18 ), ( 19 ), and ( 20 ), respectively. Ac = T Y p 1 + G H n 1 T Y p 1 + G H n
    1 + Y H p 1 + U J n 1 (17) Pr ecision = G H n 1 T Y p 1 + Y H p 1 (18) MCC = T
    Y p 1 × G H n 1 − Y H p 1 × U J n 1 T Y p 1 + Y H p 1 T Y p 1 + U J n 1 G H n
    1 + Y H p 1 G H n 1 + U J n 1 (19) NPV = G H n 1 G H n 1 + Y H p 1 (20) In the
    aforementioned terms from Equation (17) to Equation (20) , the terms T Y p 1 ,
    G H n 1 , Y H p 1 and U J n 1 note the true positive observations, true negative
    observations, false positive observations, and false negative observations. In
    the classification stage, the attention mechanism is applicable to enhance the
    performance and detection accuracy of the developed advanced plant disease detection
    model, in which Long Short Term Memory (LSTM) is utilized. Initially, the feature
    map is assigned and passed to the global maximum and average pooling function
    to produce a fused feature. Then, the resultant features are fed to the Perceptron
    layer, where the activation function is performed to produce the final feature
    vector of the image. The mathematical expression for the channel attention mechanism
    is given by Equation (21) . Z v g = δ ZAQ avgpool g + ZAQ max pool q Z v g = δ
    E 1 E o G a v g V + E 1 E o G max V (21) In Equation (21) , the variable δ presents
    the sigmoid function, and the terms E 1 and E o denote the specified weights after
    the activation function is performed. Using the convolution operation, the features
    are fused to produce the required output. The spatial attention module is mathematically
    indicated as Equation (22) . Z v g = δ g 7 × 7 g a v g d , g max d (22) Thus,
    the complex network is utilized to easily compute the assigned task of plant disease
    detection using the attention network by dividing the area into smaller areas
    and then processing it sequentially by deducing the noise to improve the efficacy
    of the approach. The diagrammatic illustration of the hybrid ADHCN-AM model that
    is developed to employ the task of plant disease detection is illustrated in Figure
    6. Figure 6. Diagrammatic representation of the proposed ADHCN-AM-based plant
    disease detection model. Display full size Computation of results Validation setup
    The implemented plant disease detection model was executed in the Python platform.
    This innovative plant disease detection model was designed with a maximum iteration
    count of iteration 50, chromosome length of 3, and population count of 10. The
    confusion matrix analysis, convergences analysis, and accuracy analysis were executed
    on the proposed model to evaluate the accuracy of the classification output attained
    by the developed plant diseases detection model. The results obtained from the
    implemented model were compared with various traditional algorithms such as Dingo
    Optimization Algorithm (DOA) (Frisoni et al. 2009), Coati Optimization Algorithm
    (COA) (Mansour et al. 2022), Variables Long-Precision Arithmetic (VLPA) (Fang
    et al. 2022), and Hawkins Optimization Algorithm (HHO) (Al-Safi et al. 2021) and
    with conventional detection techniques like MobileNet (Younis et al. 2021), DenseNet
    (Srinidhi et al. 2021), Convolutional Neural Network (CNN) (Sardogan et al. 2018),
    DenseNet+CNN (Santhi and Chairman 2022) to showcase its superiority over other
    existing approaches. Resultant segmented images The resultant images after pre-processing
    and segmentation with 10 different classes of plants using an adaptive dense hybrid
    convolution network with an attention mechanism are given in Figure 7. short-legendFigure
    7a. Display full size Figure 7b. Resultant pre-processed and segmented images
    for 10 different classes of plant images from the executed model. Display full
    size Encrypted output images The AES scheme-based encrypted and decrypted images
    are depicted in Figure 8. Figure 8. Encrypted and decrypted images from the AES
    scheme. Display full size Efficacy metrics The efficacy of the developed plant
    disease detection model is analysed by diverse performance metrics which are given
    below. The F1-score is computed using Equation (23) . F − score = 2 × 2 g h p
    2 g h p + k l p + k l n (23) The sensitivity is computed using Equation (24) .
    Sensitivity = g h p k l p + k l p (24) The False Negative Rate (FNR) is computed
    using Equation (25) . FNR = g h p k l p + g h p (25) The False Discovery Rate
    (FDR) is computed using Equation (26) . FDR = g h n k l n + k l p (26) The specificity
    is computed using Equation (27) . specificity = g h h k l h + k l l (27) The Negative
    Predictive Value (NPR) is computed using Equation (28) . NPV = g h l k l l + k
    l l (28) Validation of confusion matrix The suggested MHHO-AHCN-AM-based plant
    disease detection model is implemented and the detection results provided by this
    model are represented as a confusion matrix. The confusion matrix analysis results
    provided by the suggested MHHO-AHCN-AM-based plant disease detection model are
    given in Figure 9. Here, the confusion matrix analysis is carried out based on
    positive and negative prediction labels for different classes of diseases. short-legendFigure
    9a. Display full size Figure 9b. Evaluation of confusion matrix of the implemented
    plant disease detection models for various classes such as “(a) class 1, (b) class
    2, (c) class 3, (d) class 4, (e) class 5, (f) class 6, (g) class 7, (h) class
    8, (i) class 9 and (j) class 10”. Display full size Evaluation of the proposed
    method The accuracy of the implemented suggested MHHO-AHCN-AM-based plant disease
    detection is analysed against various existing methods and algorithms. The analysis
    results are presented in Figure 10. The performance analysis regarding accuracy
    for dataset 1 is given in Figure 10. The implemented MHHO-AHCN-AM-based recommended
    approach has yielded the results that have attained higher accuracy in detection
    by 7.14% than MobileNet, 5.88% than DenseNet, 4.65% than CNN and 1.12% than DenseNet+CNN
    while considering the citrus fruit. Thus, the implemented MHHO-AHCN-AM-based plant
    disease detection model based on IoT has achieved higher accuracy than other baseline
    methods. Figure 10. Evaluation of accuracy on the developed plant disease detection
    model for dataset 1 against conventional (a) techniques, (b) algorithms. Display
    full size Convergence analysis of the recommended framework The estimation of
    the convergence rate for the implemented plant disease detection model is visualized
    in Figure 11. This inquiry is carried out by contrasting the cost function of
    the recommended MHHO-AHCN-AM model with respect to the iteration count. The recommended
    MHHO-AHCN-AM model has provided better convergence than other algorithms. For
    iteration 30, the convergence rate is a little slow, and then for the remaining
    iteration, it is much better. Thus, the result proves that the recommended MHHO-AHCN-AM-based
    plant disease detection model has an enhanced cost function which is 5.6% more
    than HHO-ADHCN-AM, 5.2% more than COA-ADHCN-AM and 2.8% more than DOA-ADHCN-AM,
    respectively, for iteration 30. Figure 11. Convergence examination on developed
    deep learning-based plant disease detection model regarding dataset 1. Display
    full size Validation of the implemented model The overall analysis of the implemented
    MHHO-AHCN-AM- model using deep learning technique is carried out against various
    conventional techniques and algorithms and their evaluation results are given
    in Figures 12 and 13. The recommended MHHO-AHCN-AM-based plant disease detection
    model has achieved a higher F1-score of 2.34% than the mobile net, 3.4% than DenseNet,
    1.23% than CNN and 2.3% than dense net-CNN, respectively, with respect to the
    peach fruit. Thus, the recommended MHHO-AHCN-AM model has achieved a high performance
    when contrasted against other traditional techniques and algorithms. short-legendFigure
    12a. Display full size Figure 12b. Performance assessment of the executed plant
    disease detection model against diverse techniques in terms of (a) F1 scare, (b)
    FDR, (c) FNR, (d) FPR, (e) MCC, (f) NPV, (g) precision, (h) sensitivity, (i) specificity.
    Display full size short-legendFigure 13a. Display full size Figure 13b. Performance
    assessment of the recommended deep learning-based plant disease detection model
    against various algorithms in terms of “(a) F1 scare, (b) FDR, (c) FNR, (d) FPR,
    (e) MCC, (f) NPV, (g) precision, (h) sensitivity, (i) specificity”. Display full
    size Segmentation analysis of the implemented model The segmentation analysis
    of the suggested model that is used to assist in the process of disease detection
    in the plant when contrasted against conventional segmentation models is given
    in Figure 14. The segmented performance of the proposed Mask RCNN model performs
    with higher accuracy than other existing segmentation techniques. Figure 14. Segmentation
    analysis on the developed deep learning-based image segmentation model regarding
    (a) accuracy, (b) dice coefficient and (c) jacquard. Display full size Performance
    estimation of the developed model with statistical measures The generated plat
    disease detection model is analysed by utilizing the statistical measures and
    the results are listed in Table 2. The proposed MHHO-AHCN-AM-based plant disease
    detection model is evaluated by using various statistical measures. The statistical
    analysis shows that the implemented MHHO-AHCN-AM-based plant disease detection
    model performs superior than existing algorithms. Table 2. Statistical analysis
    of the recommended plant disease detection model. Download CSVDisplay Table Conclusion
    In recent years, diverse research has been explored in the field of plant disease
    using various techniques. This is because plant disease identification is important
    to aid the farmers in attaining a higher yield with reduced production loss. Detecting
    plant disease effectively enhances the overall profit margin for the farmers and
    also enhances the overall productivity of the plant. However, the large amount
    of data was not handled effectively by the existing plant disease detection models
    and these models require more computation time. So, an effective model was suggested
    for detecting the plant disease in an effective way using a deep learning model
    in this work. In order to solve the issues that exist in the conventional models,
    a deep learning-based plant disease detection model has been introduced in this
    research work to predict the disease in plants with higher reliability and accuracy
    at the very beginning stage. Two different datasets were collected and given to
    the image transmission stage, where the AES scheme was used for encrypting and
    decrypting the images to enhance their privacy. The decrypted images were then
    fed to the pre-processing stage, where the quality of the image was enhanced by
    using CLAHE, and the noise in the image was removed by using a median filter.
    The pre-processed images from the median filters were given as input to the image
    segmentation phase. Here, the mask RCNN was utilized to provide the segmented
    images. Finally, the segmented images were given to the classification stage.
    Here, the ADHCN network was used to produce classified outcomes. The parameters
    in the ADCN were optimized using the proposed MHHO algorithm to enhance MCC, accuracy,
    and precision and to reduce the FPR error rate at the time of plant disease detection.
    Various experimentations were performed on the implemented deep learning-based
    plant disease detection model, and the results were compared with other existing
    algorithms and detection techniques. The experimental outcomes have shown that
    the implemented MHHO-ADHCN-AM-based plant disease detection model has achieved
    high accuracy in prediction with around 9.30% higher than DOA-ADHCN, 8.4% higher
    than COA-ADHCN (Mansour et al. 2022), 4.4% more than VLPA-ADHCN, 2.13% better
    than HHO-ADHCN algorithms, respectively. Finally, from this analysis, the righteous
    model for the detection of various diseases in the crops with high accuracy is
    attained by the executed MHHO-ADHCN-AM-based plant disease detection model when
    compared with various existing detection models and conventional algorithms. However,
    certain limitations were faced while implementing this MHHO-ADHCN-AM-based plant
    disease detection model. The limitations faced during the research works are described
    below. Due to the different climatic conditions, the collection of plant images
    with disease has become a challenging factor. However, in future work, the real-time
    “Polymerase Chain Reaction (PCR)” will be analysed and the experiments will be
    carried out using enhanced deep-learning models. Additionally, the real-time implementation
    will be performed for the same crop using different datasets for the same crops
    in the near future. Disclosure statement No potential conflict of interest was
    reported by the author(s). Additional information Funding The author(s) reported
    there is no funding associated with the work featured in this article. References
    Ahmad M, Abdullah M, Moon H, Han D. 2021. Plant disease detection in imbalanced
    datasets using efficient convolutional neural networks with stepwise transfer
    learning. IEEE Acces. 9:140565–140580. doi: 10.1109/ACCESS.2021.3119655.  Web
    of Science ®Google Scholar Al-Safi H, Munilla J, Rahebi J. 2021. Harris Hawks
    Optimization (HHO) algorithm based on artificial neural network for heart disease
    diagnosis. Int Conf Mobile Net Wireless Commun (ICMNWC). 1–5.  Google Scholar
    Alzubi JA, Alzubi OA, Beseiso M, Budati AK, Shankar K. 2022. Optimal multiple
    key-based homomorphic encryption with deep neural networks to secure medical data
    transmission and diagnosis. Expert Syst. 39(4):e12879. doi: 10.1111/exsy.12879.  Web
    of Science ®Google Scholar Alzubi OA, Alzubi JA, Alazab M, Alrabea A, Awajan A,
    Qiqieh I. 2022. Optimized machine learning-based intrusion detection system for
    fog and edge computing environment. Electron. 11(19):3007. doi: 10.3390/electronics11193007.  Web
    of Science ®Google Scholar Amin H, Darwish A, Hassanien AE, Soliman M. 2022. End-to-end
    deep learning model for corn leaf disease classification. IEEE Acces. 10:31103–31115.
    doi: 10.1109/ACCESS.2022.3159678.  Google Scholar Anurekha1 R, Thirugnanasambandan
    N, Rajivkannan A. 2022. Enhancing security of neurological health information
    using cryptography in wireless sensor network. Health Inf Cryptogr Wireless Sens
    Netw. 20:96–106. doi: 10.14704/nq.2022.20.2.NQ22031.  Google Scholar Appe1 SN,
    Arulselvi G, Balaji GN. 2023. CAM-YOLO: tomato detection and classification based
    on improved YOLOv5 using combining attention mechanism. PeerJ Comput Sci. 9:e1463.
    doi: 10.7717/peerj-cs.1463.  PubMed Web of Science ®Google Scholar Ashourloo D,
    Aghighi H, Matkan AA, Mobasheri MR, Rad AM. 2016. An investigation into machine
    learning regression techniques for the leaf rust disease detection using hyperspectral
    measurement. IEEE J-Stars. 9(9):4344–4351. doi: 10.1109/JSTARS.2016.2575360.  Google
    Scholar Ashourloo D, Matkan AA, Huete A, Aghighi H, Mobasheri MR. 2016. Developing
    an index for detection and identification of disease stages. IEEE Geosci Remote
    Sens Lett. 13(6):851–855. doi: 10.1109/LGRS.2016.2550529.  Web of Science ®Google
    Scholar Chen J, Chen W, Zeb A, Yang S, Zhang D. 2022. Lightweight inception networks
    for the recognition and detection of rice plant diseases. IEEE Sens J. 22(14):14628–14638.
    doi: 10.1109/JSEN.2022.3182304.  Web of Science ®Google Scholar Debnath O, Saha
    HN. 2022. An IoT-based intelligent farming using CNN for early disease detection
    in rice paddy. Microprocess Microsyst. 94:104631. doi: 10.1016/j.micpro.2022.104631.  Web
    of Science ®Google Scholar Delnevo G, Girau R, Ceccarini C, Prandi C. 2022. A
    deep learning and social IoT approach for plants disease prediction toward a sustainable
    agriculture. IEEE Internet Things J. 9(10):7243–7250. doi: 10.1109/JIOT.2021.3097379.  Web
    of Science ®Google Scholar Deng F, Mao W, Zeng Z, Zeng H, Wei B. 2022. Multiple
    diseases and pests detection based on federated learning and improved faster R-CNN.
    IEEE Trans Instrum Meas. 71:1–11. doi: 10.1109/TIM.2022.3201937.  Web of Science
    ®Google Scholar Fang W, Wang X, Liu L, Wu Z, Tang S, Zheng Z. 2022. Community
    detection through vector-label propagation algorithms. Chaos, Solitons Fractals.
    153:7043. doi: 10.1016/j.chaos.2022.112066.  Google Scholar Frisoni GB, Fox NC,
    Jack CR, Scheltens P, Alsaggaf1 W, Abukhodair F, Tariq Jamal A, Abdel-Khalek S.
    2009. The clinical use of structural MRI in Alzheimer disease. Nat Rev Neurol.
    6(2):67–77. doi: 10.1038/nrneurol.2009.215.  Web of Science ®Google Scholar Gheisari
    M, Yaraziz MS, Alzubi JA, Fernández-Campusano C, Feylizadeh MR, Pirasteh S, Abbasi
    AA, Liu Y, Lee C-C. 2022. An efficient cluster head selection for wireless sensor
    network-based smart agriculture systems. Comput Electron Agric. 198:107105. doi:
    10.1016/j.compag.2022.107105.  Web of Science ®Google Scholar Gunisetti L, Koduri
    SB, Jagannathan V. 2022. Optimized deep learning system for smart maize leaf disease
    detection in IoT platform via routing algorithm. Multimedia Tools Appl. 82(9):13533–13555.
    doi: 10.1007/s11042-022-13775-2.  Web of Science ®Google Scholar Huang S, Zhou
    G, He M, Chen A, Zhang W, Hu Y. 2020. Detection of peach disease image based on
    asymptotic non-local means and PCNN-IPELM. IEEE Acces. 8:136421–136433. doi: 10.1109/ACCESS.2020.3011685.  Web
    of Science ®Google Scholar Jiang P, Chen Y, Liu B, He D, Liang C. 2019. Real-time
    detection of apple leaf diseases using deep learning approach based on improved
    convolutional neural networks. IEEE Acces. 7:59069–59080. doi: 10.1109/ACCESS.2019.2914929.  Google
    Scholar Kumar M, Kumar A, Palaparthy VS. 2021. Soil sensors-based prediction system
    for plant diseases using exploratory data analysis and machine learning. IEEE
    Sens J. 21(16):17455–17468. doi: 10.1109/JSEN.2020.3046295.  Web of Science ®Google
    Scholar Li F, Liu Z, Shen W, Wang Y, Wang Y, Ge C, Sun F, Lan P. 2021. A remote
    sensing and airborne edge-computing based detection system for pine wilt disease.
    IEEE Acces. 9:66346–66360. doi: 10.1109/ACCESS.2021.3073929.  Web of Science ®Google
    Scholar Mansour RF, Lalith Bharadwaj B, Boddeda R, Vardhan S, Sandeep Kautish
    K, Alnowibet KF, Alrasheedi A, Wagdy Mohamed A. 2022. Intelligent disease diagnosis
    model for energy aware cluster based IoT healthcare systems. Comput Mater Continua.
    71(1):1189–1203. doi: 10.32604/cmc.2022.022469.  Web of Science ®Google Scholar
    Mishra M, Choudhury P, Pati B. 2021. Modified ride-NN optimizer for the IoT based
    plant disease detection. J Ambient Intell Hum Comput. 12(1):691–703. doi: 10.1007/s12652-020-02051-6.  Web
    of Science ®Google Scholar Movassagh AA, Alzubi JA, Gheisari M, Rahimi M, Mohan
    S, Abbasi AA, Nabipour N. 2023. Artificial neural networks training algorithm
    integrating invasive weed optimization with differential evolutionary model. J
    Ambient Intell Hum Comput. 14(5):6017–6025. doi: 10.1007/s12652-020-02623-6.  Google
    Scholar Naeimi FM, Azizyan G, Rashki M. 2021. Horse herd optimization algorithm:
    a nature-inspired algorithm for high-dimensional optimization problems. Knowl
    Based Syst. 213:106711. doi: 10.1016/j.knosys.2020.106711.  Web of Science ®Google
    Scholar Nie X, Wang L, Ding H, Xu M. 2019. Strawberry verticillium wilt detection
    network based on multi-task learning and attention. IEEE Acces. 7:170003–170011.
    doi: 10.1109/ACCESS.2019.2954845.  Web of Science ®Google Scholar Parida P, Pradhan
    C, Alzubi JA, Javadpour A, Gheisari M, Liu Y, Lee C-C. 2023. Elliptic curve cryptographic
    image encryption using henon map and Hopfield chaotic neural network. Multimedia
    Tools Appl. 82(22):33637–33662. doi: 10.1007/s11042-023-14607-7.  Web of Science
    ®Google Scholar Park S. 2017. Image compression based on MR-CNN (modified region
    convolutional neural network). SoC Design Conf (ISOCC). 292–293.  Google Scholar
    Patle KS, Saini R, Kumar A, Surya SG, Palaparthy VS, Salama KN. 2021. IoT enabled,
    leaf wetness sensor on the flexible substrates for in-situ plant disease management.
    IEEE Sens J. 21(17):19481–19491. doi: 10.1109/JSEN.2021.3089722.  Web of Science
    ®Google Scholar Rezk NG, Attia A-F, El-Rashidy MA, El-Sayed A, Hemdan E-D. 2022.
    An efficient plant disease recognition system using hybrid convolutional neural
    networks (CNNs) and conditional random fields (CRFs) for smart IoT applications
    in agriculture. Int J Comput Intell Syst. 15(1). doi: 10.1007/s44196-022-00129-x.  Web
    of Science ®Google Scholar Saleem MH, Potgieter J, Arif KM. 2022. A performance-optimized
    deep learning-based plant disease detection approach for horticultural crops of
    New Zealand. IEEE Acces. 10:89798–89822. doi: 10.1109/ACCESS.2022.3201104.  Web
    of Science ®Google Scholar Santhi S, Chairman M. 2022. Oral disease detection
    from dental X-Ray images using Densenet. Inventive res. Comput Appl(icirca). 1280–1286.  Google
    Scholar Sardogan M, Tuncer A, Ozen Y. 2018. Plant leaf disease detection and classification
    based on CNN with LVQ algorithm. C Comp Sci Eng (UBMK). 382–385.  Google Scholar
    Schor N, Bechar A, Ignat T, Dombrovsky A, Elad Y, Berman S. 2016. Robotic disease
    detection in greenhouses: combined detection of powdery mildew and tomato spotted
    Wilt Virus. IEEE Robot Autom Lett. 1(1):354–360. doi: 10.1109/LRA.2016.2518214.  Google
    Scholar Sreedevi A, Manike C. 2022. A smart solution for tomato leaf disease classification
    by modified recurrent neural network with severity computation. Cybern Syst. 55(2):1–41.
    doi: 10.1080/01969722.2022.2122004.  Web of Science ®Google Scholar Srinidhi VV,
    Sahay A, Deeba RK. 2021. Plant pathology disease detection in apple leaves using
    deep convolutional neural networks: apple leaves disease detection using EfficientNet
    and DenseNet. Comput Methodol Commun (ICCMC). 1119–1127.  Google Scholar Sunil
    CK, Jaidhar CD, Patil N. 2022. Cardamom plant disease detection approach using
    EfficientNetV2. IEEE Acces. 10:789–804. doi: 10.1109/ACCESS.2021.3138920.  Web
    of Science ®Google Scholar Udutalapally V, Mohanty SP, Pallagani V, Khandelwal
    V. 2021. sCrop: a novel device for sustainable automatic disease prediction, crop
    selection, and irrigation in internet-of-agro-things for smart agriculture. IEEE
    Sens J. 21(16):17525–17538. doi: 10.1109/JSEN.2020.3032438.  Web of Science ®Google
    Scholar W–L C, Y–B L, F–L N, C–Y L, Lin Y-W. 2020. RiceTalk: rice blast detection
    using internet of things and artificial intelligence technologies. IEEE Internet
    Things J. 7(2):1001–1010. doi: 10.1109/JIOT.2019.2947624.  Web of Science ®Google
    Scholar Younis H, Khan MZ, Khan MUG, Mukhtar H. 2021. Robust optimization of MobileNet
    for plant disease classification with fine tuned parameters. Int Conf Artif Intell
    (ICAI). 146–151.  Google Scholar Zeng Q, Ma X, Cheng B, Zhou E, Pang W. 2020.
    Gans-based data augmentation for citrus disease severity detection using deep
    learning. IEEE Acces. 8:172882–172891. doi: 10.1109/ACCESS.2020.3025196.  Web
    of Science ®Google Scholar Zhang W, Zhou G, Chen A, Hu Y. 2022. Deep multi-scale
    dual-channel convolutional neural network for internet of things apple disease
    detection. Comput Electron Agric. 194:106749. doi: 10.1016/j.compag.2022.106749.  Web
    of Science ®Google Scholar Zhao Y, Chen Z, Gao X, Song W, Xiong Q, Hu J, Zhang
    Z. 2022. Plant disease detection using generated leaves based on DoubleGAN. IEEE/ACM
    Trans Comput Biol Bioinf. 19(3):1817–1826.  PubMed Web of Science ®Google Scholar
    Download PDF X Facebook LinkedIn Email Share   Related research  People also read
    Recommended articles Cited by Haemorrhage diagnosis in colour fundus images using
    a fast-convolutional neural network based on a modified U-Net Rathinavelu Sathiyaseelan
    et al. Network: Computation in Neural Systems Published online: 12 Feb 2024 Stable
    route selection for adaptive packet transmission in 5G-based mobile communications
    Muthulakshmi Karuppiyan et al. Network: Computation in Neural Systems Published
    online: 3 Mar 2024 Q-learning and fuzzy logic multi-tier multi-access edge clustering
    for 5g v2x communication Sangeetha Alagumani et al. Network: Computation in Neural
    Systems Published online: 6 Mar 2024 View more Information for Authors R&D professionals
    Editors Librarians Societies Open access Overview Open journals Open Select Dove
    Medical Press F1000Research Opportunities Reprints and e-prints Advertising solutions
    Accelerated publication Corporate access solutions Help and information Help and
    contact Newsroom All journals Books Keep up to date Register to receive personalised
    research and resources by email Sign me up Copyright © 2024 Informa UK Limited
    Privacy policy Cookies Terms & conditions Accessibility Registered in England
    & Wales No. 3099067 5 Howick Place | London | SW1P 1WG     Cookies Button About
    Cookies On This Site We and our partners use cookies to enhance your website experience,
    learn how our site is used, offer personalised features, measure the effectiveness
    of our services, and tailor content and ads to your interests while you navigate
    on the web or interact with us across devices. By clicking \"Continue\" or continuing
    to browse our site you are agreeing to our and our partners use of cookies. For
    more information seePrivacy Policy CONTINUE"'
  inline_citation: Mishra et al. (2021)
  journal: 'Network: Computation in Neural Systems'
  limitations: '1. Limited availability of plant disease images due to varying climatic
    conditions

    2. The proposed model has not been tested in real-world conditions

    3. The model may not be able to generalize well to different plant species and
    diseases'
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart plant disease net: Adaptive Dense Hybrid Convolution network with
    attention mechanism for IoT-based plant disease detection by improved optimization
    approach'
  verbatim_quote1: '"Throughout the entire validation, the offered model shows 95%
    enhancement in terms of MCC showcasing its effectiveness over the existing approaches."'
  verbatim_quote2: '"To adopt a new model for identifying plant disease using a deep
    learning model at the initial stage to maximize the overall productivity of the
    crops and help in enhancing the agricultural sector."'
  verbatim_quote3: '"To implement a hybrid model called the ADHCN-AM model for classifying
    plant diseases. Here, the variables are optimized to maximize precision; Negative
    Predictive Value (NPV) rate, accuracy, and Matthew’s Correlation Coefficient (MCC)
    for minimizing the False Positive Rate (FPR)."'
- analysis: The paper proposes DSLC-IoT, a data science life cycle for IoT applications,
    as a structured approach to addressing common challenges in IoT data management
    and analysis. It presents an overview of prominent data science approaches and
    their applicability to IoT data for various domains, including healthcare, agriculture,
    business, logistics, and manufacturing. The paper provides specific examples of
    data science methods used in each domain to address real-world problems.
  authors:
  - Zheng P.
  - Lau B.T.
  citation_count: '0'
  description: The Internet of Things (IoT) is a rapidly expanding field of research
    and application that focuses on creating networks of physical objects embedded
    with sensors, software, and connectivity. The number of IoT devices continues
    to grow, there is a corresponding surge in the amount of data they generate. This
    data presents opportunities for gaining valuable insights and making better decisions
    across various sectors, such as healthcare, agriculture, business, logistics,
    and manufacturing. However, the growing volume, speed, and diversity of IoT data
    present significant challenges for processing and analysis using traditional methods.
    This is where the role of data science methods becomes crucial. In this chapter,
    we examine existing frameworks and overarching methodologies widely employed in
    the field of data science and data analytics. Drawing inspiration from these,
    we introduce the Data Science Life Cycle for IoT Applications (DSLC-IoT), which
    serves as a fundamental guideline for addressing data-intensive and data-driven
    challenges in the realm of IoT. Subsequently, we delve into an exploration of
    various data science methods utilized to enhance data processing within the context
    of IoT. The review centers on the application areas of healthcare, agriculture,
    business, logistics, and manufacturing. These areas have significant social and
    economic importance and are closely intertwined with people's lives.
  doi: 10.1016/bs.adcom.2023.10.006
  full_citation: Zheng, P. & Lau, B. T. (2024). Internet of things and data science
    methods for enhanced data processing. Advances in Computers, 133, 181-199.
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full volume
    Outline Abstract Keywords 1. Introduction 2. Data science and analytics life cycle
    3. Data science in healthcare IoT 4. Data science in agriculture IoT 5. Data science
    in business IoT 6. Conclusion References Further reading Vitae Show full outline
    Figures (2) Advances in Computers Volume 133, 2024, Pages 181-199 Chapter Seven
    - Internet of things and data science methods for enhanced data processing Author
    links open overlay panel Pan Zheng a, Bee Theng Lau b Show more Share Cite https://doi.org/10.1016/bs.adcom.2023.10.006
    Get rights and content Abstract The Internet of Things (IoT) is a rapidly expanding
    field of research and application that focuses on creating networks of physical
    objects embedded with sensors, software, and connectivity. The number of IoT devices
    continues to grow, there is a corresponding surge in the amount of data they generate.
    This data presents opportunities for gaining valuable insights and making better
    decisions across various sectors, such as healthcare, agriculture, business, logistics,
    and manufacturing. However, the growing volume, speed, and diversity of IoT data
    present significant challenges for processing and analysis using traditional methods.
    This is where the role of data science methods becomes crucial. In this chapter,
    we examine existing frameworks and overarching methodologies widely employed in
    the field of data science and data analytics. Drawing inspiration from these,
    we introduce the Data Science Life Cycle for IoT Applications (DSLC-IoT), which
    serves as a fundamental guideline for addressing data-intensive and data-driven
    challenges in the realm of IoT. Subsequently, we delve into an exploration of
    various data science methods utilized to enhance data processing within the context
    of IoT. The review centers on the application areas of healthcare, agriculture,
    business, logistics, and manufacturing. These areas have significant social and
    economic importance and are closely intertwined with people''s lives. Previous
    chapter in volume Next chapter in volume Keywords IoT data analyticsData science
    methodsData analytics frameworkData analytics methods 1. Introduction The Internet
    of Things (IoT) is a rapidly growing research and application field that aims
    to develop networks of physical objects embedded with sensors, software, and connectivity,
    which enables them to exchange data with other devices and systems over the Internet.
    With the proliferation of IoT devices, there is an exponential increase in the
    amount of data generated by these devices. This data can be harnessed to gain
    insights and improve decision-making in various domains, including healthcare,
    agriculture, business, logistics and manufacturing. The sheer volume, velocity,
    and variety of IoT data pose significant challenges for data processing and analysis.
    Traditional data processing techniques are inadequate to handle the complexity
    and scale of IoT data. This is where data science methods come into play. Data
    science involves the application of statistical, mathematical, and machine learning
    techniques to extract insights from large and complex datasets. In this context,
    data science methods have become essential for processing and analyzing IoT data.
    By leveraging data science methods, it is possible to extract meaningful insights
    from IoT data, predict future outcomes, and optimize processes. This can lead
    to improved decision-making, enhanced efficiency, cost savings and better computational
    results. In this chapter, we first go through some prevalent and renowned frameworks
    and high-level approaches for data science and data analytics. Enlightened by
    those, we proposed Data Science Life Cycle for IoT Applications (DSLC-IoT), which
    can serve as a based line for data-intensive and data-driven IoT problems. Subsequently,
    we explored some of the data science methods used for enhanced data processing
    in IoT. We reviewed data science methods that can be applied to IoT data to gain
    insights and improve decision-making in three primary application areas of the
    IoT that hold immense social and economic value: Healthcare IoT, Agriculture IoT,
    and Business IoT. These areas are investigated in-depth, covering a broad range
    of real-life issues. Each of these domains has notable and representative research
    studies that shed light on the data science methods currently in use. 2. Data
    science and analytics life cycle This section provides a description of the major
    data analytics frameworks and approaches. These approaches may offer high-level
    guidance when IoT data is processed and analyzed. Previously, researchers proposed
    different approaches and frameworks of data analytics [1], [2], [3], [4], [5]
    for problems in different domains. It is a concept that has changed over time
    and has been affected by numerous disciplines and practices, hence there is no
    standardized data analytics life cycle that suits all situations. 2.1. Cross-industry
    standard process for data mining CRISP-DM (Cross-Industry Standard Process for
    Data Mining) [6] is one of the most popular frameworks for planning and executing
    data science and data mining projects. It is an open standard that offers an organized
    and methodical approach to the entire data mining process, from problem understanding
    and data preparation to the evaluation and deployment of models. It was proposed
    by the CRISP-DM consortium which consisted of three major players in the data
    processing and data science industry, DaimlerChrysler AG, SPSS Inc. and NCR Corporation
    (Fig. 1). Download : Download high-res image (213KB) Download : Download full-size
    image Fig. 1. The six-phase CRISP-DM data mining life cycle. The first phase is
    Business Understanding. Data analytics always starts with a practical problem.
    The “business” here can be generally interpreted as the environment of the problem.
    In fact, it can be in the field of engineering and science. This phase involves
    understanding the actual problem including its scope, background and constraints,
    and more importantly, its objectives. As the first phase in the life cycle, a
    data mining project/task plan should be developed to better illustrate the needs
    of different stakeholders, data and resource requirements and the expected outcomes
    at a high level. In the Data understanding phase, the relevant data is identified,
    collected, and explored to understand its quality, completeness, and relevance
    to the data mining problem. There are often four tasks in this phase, namely data
    collection, data description, data assessment and data exploration. Data collection
    means that data are obtained and gathered from various sources based on data mining
    problems. Data description is related to the tasks that investigate the structures,
    types, relationships and distributions of the data. It also identifies the values
    that are most pertinent to the data mining problem. Initial data exploration can
    be carried out to better understand the data, especially to find the trends, patterns,
    outliers and anomalies of the data. Data assessment is about examining and verifying
    the data, which includes evaluating the quality, completeness, and relevance of
    the data. Data preparation is the phase focusing on data pre-processing, data
    cleansing and data wrangling [7]. Data cleaning task is carried out by removing
    or imputing missing values, correcting inconsistent or incorrect values, and removing
    duplicates or irrelevant records. Data pre-processing involves data consolidation,
    feature extraction, data balancing and dimension reduction. Data wrangling is
    a process of tailoring and mapping raw data which can be better used by the consumer
    application. By completing these tasks, the analyst prepares the data for analysis
    and ensures that it is of high quality and suitable for the chosen modeling techniques.
    This, in turn, helps to improve the accuracy and reliability of the results obtained
    from the analysis. Model building involves selecting and applying appropriate
    models or algorithms to the prepared data. Depending on the type of analytics,
    modeling techniques, such as linear regression, decision trees, neural networks,
    optimization or simulation, can be selected. Model training, model evaluation
    and validation, and model refinement are the major activities that happen in this
    phase. Model testing and evaluations are closely related to the model-building
    phase. In this phase, the model''s effectiveness and efficiency are evaluated
    based on its ability to meet the business and data mining goals defined in the
    first phase. This involves testing the model on new data sets and comparing its
    performance with other models. Metrics, e.g., Mean Squared Error, R-squared, and
    Area Under the ROC Curve, are used to determine how well the model is able to
    predict and classify. After the testing and evaluation, it is the last phase of
    CRISP-DM, where the model is integrated into the data mining solution. The model''s
    ongoing performance is monitored to ensure that it continues to meet the requirements.
    The monitoring metrics include accuracy, throughput, latency and robustness. If
    issues or anomalies are identified, timely adjustments and updates are implemented.
    CRISP-DM is a comprehensive and iterative process model that covers the entire
    data mining process, from problem understanding and data understanding to evaluation
    and deployment. It provides a structured approach for data mining projects, ensuring
    that all relevant aspects of the project are taken into account. It also exhibits
    a good deal of adaptability. It is flexible enough to be applied to several kinds
    of data mining initiatives, regardless of the sector or target audience. It offers
    a broad framework that can be altered to meet the particular requirements of the
    project. For data mining, it is a widely recognized and approved industry standard.
    Many businesses, including finance, healthcare, retail, and telecommunications,
    have effectively used it. Moreover, it also demonstrates a good deal of flexibility.
    it can be adapted to various types of data mining projects and problems, regardless
    of the industry or application area. It offers a general framework that can be
    customized to fit the specific needs of the project. it is a widely accepted and
    recognized industry standard for data mining. It has been used successfully in
    various industries. 2.2. Knowledge discovery in databases KDD (Knowledge Discovery
    in Databases) [8] was a series of processes that were initially designed to generate
    knowledge and discover patterns in structured data stored in databases, especially
    relational databases. KDD involves a sequence of steps that includes data selection,
    cleaning, integration, transformation, mining, pattern evaluation, and knowledge
    representation. These steps are often referred to as the KDD processes. With the
    advancement of data science, many approaches to data science problems take inspiration
    from KDD processes. It is worthwhile to look at KDD here. There are five processes
    in KDD, which are selection, pre-processing, transformation, data mining and interpretation/evaluation.
    In the selection process, the relevant data is selected from a larger set of data
    sources based on the requirement of the data science problem. The pre-processing
    is very similar to data preparation in CRISP-DM, in which the selected data is
    cleaned and integrated. In the data transformation step, relevant data is transformed
    into a suitable format for further analysis. Data mining is the process of drawing
    patterns and knowledge from data using statistical and machine learning methods.
    Domain specialists then interpret the patterns that were identified in order to
    gather knowledge and make informed decisions. The last process of KDD is Interpretation
    that the gain insights and results are explained and communicated with relevant
    parties. 2.3. Sample, explore, modify, model, and assess (SEMMA) SEMMA [9] is
    a data mining methodology developed by SAS Institute that provides a framework
    for data mining projects. The five phases of the approach are referred to by the
    acronym SEMMA, which are Sample, Explore, Modify, Model and Assess. In “Sample”
    phase, a subset of the data is obtained for the large dataset. Often the selected
    data should bear distinctive features and characters of the whole dataset to ensure
    the soundness of the analytical results. The second phase is “Explore” which is
    quite similar to the data understanding of the CRISP-DM. It finds and explores
    the distribution of the data values, relationships among different variables,
    outliers and predominant features. The third phase is “Modify” which can be mapped
    to the data preparation of CRISP-DM. It includes pre-analytics activities such
    as data cleansing and data wrangling. In the “Model” phase, statistical, machine-learning
    models are usually developed based on the data and the problem of study. it is
    similar to the model building of CRISP-DM. The final phase is “Assess.” The performance
    of the model is evaluated to determine its accuracy and effectiveness. This involves
    testing the model on a validation set and using metrics such as accuracy to evaluate
    its performance. 2.4. Data science life cycle for IoT applications The IoT is
    a fast-expanding field with the potential to transform a variety of aspects of
    the way how we live. IoT applications often generate a vast amount of data and
    it is crucial to have a dedicated data science and analytics life cycle for IoT-related
    study and research. With reference to various data science and mining approaches,
    hereby the data science life cycle for IoT applications (DSLC-IoT) is proposed
    (Fig. 2). Download : Download high-res image (281KB) Download : Download full-size
    image Fig. 2. Data science life cycle for IoT application (DSLC-IoT). IoT Application
    Problem is the first phase, where the problem of interest is identified and formulated.
    Relevant background, constraints and requirements are identified in this phase.
    The problem in IoT applications may involve a wide range of use cases, from optimizing
    energy usage in a building to predicting equipment failure in a manufacturing
    plant. The second phase of the life cycle is IoT Data understanding and collection.
    In this stage, data is collected from various sources such as sensors, devices,
    and other sources of IoT data. The data is then consolidated and integrated into
    a single data store, e.g., data lake. In this phase, some preliminary study is
    carried out to interpret and make sense of the data, e.g., the structure of data,
    the dimensions of the data and the categories of the data. In the data preparation
    and wrangling phase, the collected data is cleaned, transformed, and formatted
    into a consistent and usable format. It involves removing duplicates, filling
    in missing data, and converting data into a format that can be analyzed. Model
    development is related to the use of statistical, machine learning and AI methods
    and techniques to create data science models. Depending on the IoT problem, the
    models can be used for making predictions or classifications The IoT devices are
    monitored for performance, data quality, and reliability in the “Monitor & Maintenance
    for IoT Devices” phase. Maintenance and repair of devices are carried out as needed.
    it is important to take the IoT hardware aspects in the life cycle. IoT hardware
    is the essential component to enable the functionality of IoT systems. For example,
    IoT hardware such as sensors and monitoring systems can be used to collect data
    about the performance of machines and equipment. This data is then analyzed using
    data science models such as predictive maintenance to predict when maintenance
    is required, reducing downtime and improving operational efficiency. IoT devices
    often play the data source role. In most IoT systems, the capability of analyzing
    data in real-time is needed. Stream processing is used to process and analyze
    high-velocity data streams. IoT hardware such as edge computing devices can be
    used to process data in real time at the edge of the network. This allows for
    faster processing of data and reduces the amount of data that needs to be transmitted
    to the cloud for analysis, reducing latency and improving the overall performance
    of the IoT system. The last phase is data-driven IoT solution. Eventually, the
    data science models need to serve the purpose of IoT problem-solving and sometimes
    decision-making. By collecting and analyzing data from the environment, businesses
    can make data-driven decisions, improve operational efficiency, and provide more
    accurate results to IoT application problems. 3. Data science in healthcare IoT
    Data science methods and techniques have significant applications in healthcare
    IoT (Internet of Things) problems [10], [11], [12]. Patient Monitoring [13], [14]
    using Healthcare IoT devices such as wearables, sensors, and mobile health apps
    collect real-time data on patient health metrics such as heart rate, temperature,
    blood pressure, and oxygen saturation. Data science algorithms can analyze this
    data to identify trends and predict health risks, enabling clinicians to provide
    more personalized care. Such application can be further extended in a remote scenario
    [15]. Machine learning is a powerful tool for analyzing data from healthcare IoT
    devices and can be used to develop more personalized and effective treatments,
    identify new patient subgroups, and improve patient outcomes. In healthcare IoT,
    supervised learning can be used to predict patient outcomes or classify patient
    conditions based on input data from IoT devices such as wearables, sensors, or
    medical imaging. Reinforcement learning can be used to optimize treatment plans
    for patients with chronic conditions, such as diabetes or hypertension. Unsupervised
    learning can be used to identify new patient subgroups or to cluster patients
    with similar conditions based on data from IoT devices. Machine learning algorithms
    can be used to analyze large amounts of data from healthcare IoT devices, such
    as wearables or sensors, to identify patterns and make predictions about patient
    health. For example, machine learning algorithms can be used to analyze data from
    glucose monitors to predict hypoglycemic events in patients with diabetes [16].
    Data mining is another key method of data science used in IoT applications and
    systems. Association rule mining involves finding patterns in data that occur
    together frequently. In healthcare IoT, association rule mining can be used to
    identify relationships between patient symptoms and conditions, or between patient
    characteristics and treatment outcomes [17], [18]. Clustering involves grouping
    similar data points together based on their attributes. In healthcare IoT, clustering
    can be used to identify patient subgroups with similar characteristics, such as
    risk factors for a particular condition or response to treatment [19], [20]. Classification
    is about assigning data points to predefined categories based on their attributes.
    In healthcare IoT, classification can be used to predict patient outcomes or to
    identify patients with a particular condition based on data from IoT devices [21].
    Regression involves analyzing the relationship between variables to predict a
    continuous outcome. In healthcare IoT, regression methods can be used to predict
    patient outcomes, such as the risk of readmission to the hospital or the progression
    of a particular condition [22]. Outlier detection involves identifying data points
    that are significantly different from the rest of the dataset. In healthcare IoT,
    outlier detection can be used to identify patients who are at high risk of a particular
    condition or who may require more intensive care [23]. Decision trees involve
    creating a tree-like structure that represents decisions and their possible consequences.
    In healthcare IoT, decision trees can be used to predict patient outcomes or to
    guide treatment decisions based on data from IoT devices [24]. Principal component
    analysis transforms high-dimensional data into a lower-dimensional space while
    retaining as much information as possible. In healthcare IoT, principal component
    analysis can be used to identify key features or variables that are most relevant
    for predicting patient outcomes or classifying patient conditions [25]. Text mining
    extracts valuable insights from unstructured text data, such as patient notes
    or medical records. In healthcare IoT, text mining can be used to identify patterns
    in patient data that may be missed by structured data analysis. In healthcare
    IoT, data science can be used to analyze patient data and predict the onset of
    diseases, identify risk factors, and personalize treatment plans. It can also
    be used to optimize hospital operations, improve patient safety, and reduce readmission
    rates. Moreover, data science can play a crucial role in the development of new
    medical devices and drugs by enabling efficient clinical trials and facilitating
    drug discovery. However, there are still several challenges to be addressed [26],
    such as data security and privacy concerns, data quality issues, and the need
    for collaboration between healthcare providers, data scientists, and IoT engineers.
    Nevertheless, with the continued advancement of technology and the increasing
    adoption of IoT devices in healthcare, the future of data science in healthcare
    IoT looks promising. How data science methods are used in the healthcare sector
    could be revolutionary because of IoT. Data science techniques such as machine
    learning, data mining, and predictive analytics can be used to improve diagnosis
    outcomes, lower costs, and boost the effectiveness of healthcare services as a
    result of the explosive rise of IoT devices and the growing availability of healthcare
    data. 4. Data science in agriculture IoT The use of IoT devices and sensors in
    agriculture to maximize crop yields, decrease waste, and enhance efficiency is
    known as agriculture IoT, also known as Smart Agriculture. Soil sensors, weather
    stations, GPS trackers, drones, and smart irrigation systems are a few IoT instruments
    utilized in agriculture. By collecting and analyzing data collected by various
    IoT networks and devices, e.g. soil moisture, temperature, weather patterns, and
    other environmental factors, farmers can make more informed decisions about planting,
    fertilization, and irrigation, leading to increased crop yields and reduced impacts
    of natural disasters. Data science and analytics methods play important roles
    in those studies and processes. Predictive analytics and modeling use statistical
    methods and machine learning algorithms to predict future outcomes. In Agriculture
    IoT, predictive analytics can be used to forecast crop yields, predict weather
    patterns, and identify potential crop diseases before they occur [27], [28]. Regression
    is one of the popular predictive analytics methods often used. For example, Elastic
    Net Regression and Multiple Linear Regression are used to predict soil moisture
    based on the data collected from IoT devices [29]. Machine learning based on analytics
    approaches is used to carry out those studies, e.g., a fuzzy logic-based model
    is constructed to analyze the weather condition [30]. A study of real-time analysis
    of weather parameters is presented [31], [32], [33]. For crop yields, a multilayer
    perceptron neural network (MLP), a machine learning method, is used to predict
    sugarcane yield production in an IoT environment [34]. The time factor contributes
    significantly to Agriculture IoT, hence in agriculture IoT, time-series analysis
    can be utilized to identify trends and patterns in temperature [35], humidity
    [36], rainfall [37], soil conditions [38] and wind speed [37] captured by IoT
    sensors. Most of the work focus on descriptive and predictive analytics. Classification
    and data-driven agriculture decision-making is another important problem in agriculture
    IoT. Decision tree methods exhibit the capability in those problems. The decision
    tree can be used for data fusion, where a comprehensive view is created based
    on the data from multiple IoT sensors [39]. Classifying farming machinery is another
    application of the decision tree method [40]. The paradigms are developed for
    classifying different environmental factors of agriculture IoT, Here are some
    studies of such problems. A Gradient Boost Decision Tree is created to model the
    internal temperature of a greenhouse [41]. A Decision tree is developed to predict
    the health situation of crops based on environmental factors [42], [43]. For the
    honey and bee products industry, to monitor the health condition of the bees,
    a decision tree model is created to classify bee hive conditions [44]. Similarly,
    we found the use of a decision tree in monitoring and classifying cow behaviors
    [45]. Decision Tree also finds its applications in crop yield maximization and
    prediction [46], The agriculture industry has undergone a significant transformation
    with the integration of data science through the use of IoT sensors. This technology
    allows farmers to collect vast amounts of data related to crop growth, soil conditions,
    and weather patterns. By applying advanced data analytics and machine learning
    techniques, farmers can gain valuable insights into their farming practices. Leveraging
    IoT-enabled sensors, farmers can collect massive amounts of data about their crops,
    soil, weather conditions, livestock health and more, and use data science and
    related methods to gain valuable insights for their farming operations. As the
    world''s population continues to grow and the demand for food increases, the importance
    of data science in agriculture IoT is set to rise. It is a powerful instrument
    that enables farmers to feed the world while minimizing negative impacts on the
    environment. The future of agriculture, including animal husbandry and aquaculture,
    depends on better understanding of the farming environment and relevant factors,
    where data science methods facilitate such understanding. Data science methods
    will continue to be a driving force in shaping the industry for years to come.
    5. Data science in business IoT IoT can offer numerous benefits and improve business
    processes. IoT devices in the context of business can generate vast amounts of
    data from various sources such as customer interactions, manufacturing processes,
    and supply chain operations. Data science methods and techniques can be used to
    extract meaningful information from this data and to develop computational models
    that can help businesses make data-driven decisions. There have been loads of
    studies on IoT models for business, business management and business operation
    proposed by different researchers [47], [48], [49], [50]. This section looks at
    the data sciences methods for solving specific business-related problems. IoT
    explores its potential uses in inventory management, Supply Chain Management (SCM)
    and optimization, predictive maintenance of equipment and facilities, workplace
    safety monitoring, customer experience and relationship management(CRM). Among
    all these practical problems, we choose a few important aspects and look at the
    data science methods used in providing solutions to the problems. IoT is being
    used more and more in inventory management to increase warehouse efficiency, asset
    tracking and logistics operations. Data science methods Naive Bayes, K-nearest
    neighbors and Support Vector Machine are used in SKU (stock keeping unit) classification
    of items for better inventory management [51]. Manufacture demand forecast is
    an important problem for inventory management. Multiple linear regressions (MLR)
    with genetic algorithms (GA) is used to make such predictions [52]. Machine learning
    algorithms are used to understand the operation status of the power tools and
    assets with IoT SmartTag [53]. Indoor positioning using IoT devices can greatly
    help inventory operations. Multi-layer perceptron [54] and linear regression method
    [55] are two methods employed in indoor positioning studies. Supply Chain Management
    and optimization is an application domain closely related to inventory management.
    Harnessing the potential of IoT technologies, supply chain managers can gain real-time
    visibility into their operations and make data-driven decisions that drive efficiency
    and improve profitability. The statistical approach Peak Over Threshold (POT)
    method of the extreme value theory is used to supply chain risk based on IoT [56].
    particle swarm optimization (PSO) algorithm is used to track, trace and manage
    the operations of food supply chain management. There are some studies carried
    out on predictive maintenance using IoT for business. IoT sensors can be attached
    to machinery and capture the status of machines. The data obtained can be used
    for predicting maintenance needs [57]. Exploratory data analysis using Classification
    and Regression Trees(CART), Neural Networks and Support Vector Machines to train
    a classifier to detect quality failures in production cycles. Autoregressive Integrated
    Moving Average (ARIMA) predict the future status of machines. An Improved Consensus
    self-organized model is found in IoT-based predictive maintenance [58]. The Learning
    Remaining-Useful-Time (LRUT) is used in predictive maintenance based on the equipment
    vibration data captured by IoT sensors [59]. Customer experience and customer
    relationship management (CRM) have become key differentiators in today''s competitive
    market [60]. IoT has enabled businesses to personalize their customer experiences.
    With the ability to track customer behavior and preferences, businesses can tailor
    their products and services to better meet their customers'' needs which leads
    to more personalized interactions and improved customer satisfaction. An open
    and automated customer service platform based on IoT, blockchain, and automated
    machine learning is proposed [61]. AutoML, one of the major components of the
    technical layer of the framework, is implemented to process a large amount of
    customer service data collected using IoT sensors. Customer behavior classification
    using three different clustering methods [62], agglomerative hierarchical clustering,
    K-Medoids clustering and Density-Based Spatial Clustering of Applications with
    Noise (DBSCAN), where the first two methods seem to perform better. Classification
    and Regression Trees (CART) is used to predict sales of different categories of
    items depending on the customer activities at convenience stores in gas stations
    [63]. Data Science methods are rapidly transforming the way businesses leverage
    IoT technologies to drive growth and innovation. The power of IoT lies in the
    ability to collect and analyze vast amounts of data, but it is Data Science that
    provides the tools and methods to extract actionable insights from this data.
    By adopting a Data Science-driven approach to IoT, businesses can gain a competitive
    advantage by improving their operations, creating new revenue streams, and delivering
    personalized experiences to their customers. The successful integration of Data
    Science and IoT will require a strategic approach that considers the unique needs
    and goals of each business, as well as the rapidly evolving landscape of technology
    and data. 6. Conclusion Data science methods are essential for making sense of
    the vast amounts of data generated by IoT devices. Advanced data science algorithms
    and machine learning models can identify patterns, anomalies, and correlations
    in the data, enabling businesses to make data-driven decisions. In this chapter,
    different data science life cycles and frameworks for general analytical problems
    are reviewed first to reflect the state-of-the-art. The current prevalent frameworks
    are mostly iterative multiphase approaches. Based on those structured approaches,
    we proposed a Data Science Life Cycle for IoT Applications (DSLC-IoT), which aims
    to provide a high-level architecture for practical data-driven IoT problems. Three
    major IoT application areas with high social and economic values, namely Healthcare
    IoT, Agriculture IoT and Business IoT, are closely investigated with a wide spectrum
    of real-life problems. In each of the areas, we find some notable and representative
    studies which enable us to explore the data science methods in use. It is found
    that statistical methods and conventional AI methods are used in earlier literature,
    whereas in the latest data-driven IoT problems, machine learning and neural network
    methods are increasingly gaining popularity, which, in fact, reflect the current
    trend of machine/deep learning development and application in all science and
    engineering fields. However, the use of IoT and data science methods raises concerns
    regarding data privacy and security. The vast amounts of data collected by IoT
    devices can include sensitive information such as personal health information,
    financial information, and location data. As such, organizations need to take
    steps to ensure that this data is secure and protected from unauthorized access
    or breaches. The integration of IoT and data science offers exciting opportunities
    for enhanced data processing. As the technology continues to advance, businesses
    and industries need to stay abreast of the latest developments to maximize the
    benefits of IoT and data science while minimizing the risks. With proper planning
    and execution, the combination of IoT and data science can transform industries,
    improve operations, and enhance the quality of life for individuals around the
    world. References [1] D. Dietrich, B. Heller, B. Yang Data Science & Big Data
    Analytics: Discovering, Analyzing, Visualizing and Presenting Data Wiley (2015)
    Google Scholar [2] N.W. Grady, J.A. Payne, H. Parker Agile big data analytics:
    AnalyticsOps for data science 2017 IEEE International Conference on Big Data (Big
    Data), IEEE (2017), pp. 2331-2339 CrossRefView in ScopusGoogle Scholar [3] M.
    Schulz, U. Neuhaus, J. Kaufmann, D. Badura, S. Kuehnel, W. Badwitz, D. Dann, S.
    Kloker, E.M. Alekozai, C. Lanquillon Introducing DASC-PM: A Data Science Process
    Model ACIS 2020 Proc., 45 (2020) https://aisel.aisnet.org/acis2020/45 Google Scholar
    [4] K. Rahul, R.K. Banyal Data life cycle management in big data analytics Procedia
    Comput. Sci., 173 (2020), pp. 364-371 View PDFView articleView in ScopusGoogle
    Scholar [5] H.-N. Dai, R.C.-W. Wong, H. Wang, Z. Zheng, A.V. Vasilakos Big data
    analytics for large-scale wireless networks: challenges and opportunities ACM
    Comput. Surv., 52 (5) (2019), pp. 1-36 View in ScopusGoogle Scholar [6] P. Chapman,
    J. Clinton, R. Kerber, T. Khabaza, T. Reinartz, C. Shearer, R. Wirth CRISP-DM
    1.0: Step-by-step data mining guide SPSS Inc., 9 (13) (2000), pp. 1-73 Google
    Scholar [7] F. Endel, H. Piringer Data Wrangling: Making data useful again IFAC-PapersOnLine,
    48 (1) (2015), pp. 111-112 View PDFView articleView in ScopusGoogle Scholar [8]
    U.M. Fayyad, G. Piatetsky-Shapiro, P. Smyth Knowledge discovery and data mining:
    towards a unifying framework E. Simoudis, J. Han, U. Fayyad (Eds.), Proceedings
    of the Second International Conference on Knowledge Discovery and Data Mining,
    AAAI Press (1996), pp. 82-88 View in ScopusGoogle Scholar [9] R. Matignon Data
    Mining Using SAS Enterprise Miner John Wiley & Sons (2007) Google Scholar [10]
    S.B. Baker, W. Xiang, I. Atkinson Internet of things for smart healthcare: technologies,
    challenges, and opportunities IEEE Access, 5 (2017), pp. 26521-26544 View in ScopusGoogle
    Scholar [11] S. Selvaraj, S. Sundaravaradhan Challenges and opportunities in IoT
    healthcare systems: a systematic review SN Appl. Sci., 2 (1) (2020), p. 139 View
    in ScopusGoogle Scholar [12] W. Li, Y. Chai, F. Khan, S.R.U. Jan, S. Verma, V.G.
    Menon, X. Li A comprehensive survey on machine learning-based big data analytics
    for IoT-enabled smart healthcare system Mob. Netw. Appl., 26 (2021), pp. 234-252
    CrossRefGoogle Scholar [13] M.A. Akkaş, R. Sokullu, H.E. Çetin Healthcare and
    patient monitoring using IoT Internet of Things, 11 (2020), Article 100173 View
    PDFView articleView in ScopusGoogle Scholar [14] H. Pandey, S. Prabha Smart health
    monitoring system using IOT and machine learning techniques 2020 Sixth International
    Conference on Biosignals, Images, and Instrumentation (ICBSII), IEEE (2020), pp.
    1-4 Google Scholar [15] H.T. Yew, M.F. Ng, S.Z. Ping, S.K. Chung, A. Chekima,
    J.A. Dargham IOT based real-time remote patient monitoring system 2020 16th IEEE
    International Colloquium on Signal Processing & its Applications (CSPA), IEEE
    (2020), pp. 176-179 CrossRefView in ScopusGoogle Scholar [16] G. Alfian, M. Syafrudin,
    N.L. Fitriyani, M.A. Syaekhoni, J. Rhee Utilizing IoT-based sensors and prediction
    model for health-care monitoring system Artificial Intelligence and Big Data Analytics
    for Smart Healthcare, Academic Press (2021), pp. 63-80 View PDFView articleView
    in ScopusGoogle Scholar [17] J. Nahar, T. Imam, K.S. Tickle, Y.P.P. Chen Association
    rule mining to detect factors which contribute to heart disease in males and females
    Expert Syst. Appl., 40 (4) (2013), pp. 1086-1093 View PDFView articleView in ScopusGoogle
    Scholar [18] M. Tandan, Y. Acharya, S. Pokharel, M. Timilsina Discovering symptom
    patterns of COVID-19 patients using association rule mining Comput. Biol. Med.,
    131 (2021), Article 104249 View PDFView articleView in ScopusGoogle Scholar [19]
    A. Srivastava, A. Singh, S.G. Joseph, M. Rajkumar, Y.D. Borole, H.K. Singh WSN-IoT
    clustering for secure data transmission in E-health sector using green computing
    strategy 2021 9th International Conference on Cyber and IT Service Management
    (CITSM), IEEE (2021), pp. 1-8 Google Scholar [20] J.A. Onesimu, J. Karthikeyan,
    Y. Sei An efficient clustering-based anonymization scheme for privacy-preserving
    data collection in IoT based healthcare services Peer Peer Netw. Appl., 14 (2021),
    pp. 1629-1649 CrossRefView in ScopusGoogle Scholar [21] A.U. Haq, J.P. Li, S.
    Khan, M.A. Alshara, R.M. Alotaibi, C. Mawuli DACBT: deep learning approach for
    classification of brain tumors using MRI data in IoT healthcare environment Sci.
    Rep., 12 (1) (2022), p. 15331 View in ScopusGoogle Scholar [22] D. Upadhyay, P.
    Garg, S.M. Aldossary, J. Shafi, S. Kumar A linear quadratic regression-based synchronised
    health monitoring system (SHMS) for IoT applications Electronics, 12 (2) (2023),
    p. 309 CrossRefView in ScopusGoogle Scholar [23] M.A. Samara, I. Bennis, A. Abouaissa,
    P. Lorenz A survey of outlier detection techniques in IoT: review and classification
    J. Sens. Actuator Netw., 11 (1) (2022), p. 4 CrossRefGoogle Scholar [24] R. Manikandan,
    R. Patan, A.H. Gandomi, P. Sivanesan, H. Kalyanaraman Hash polynomial two factor
    decision tree using IoT for smart health care scheduling Expert Syst. Appl., 141
    (2020), Article 112924 View PDFView articleView in ScopusGoogle Scholar [25] J.M.
    Philip, S. Durga, D. Esther Deep learning application in iot health care: a survey
    Intelligence in Big Data Technologies—Beyond the Hype: Proceedings of ICBDCC 2019,
    Springer Singapore (2021), pp. 199-208 CrossRefView in ScopusGoogle Scholar [26]
    R. De Michele, M. Furini IoT healthcare: benefits, issues and challenges Proceedings
    of the 5th EAI International Conference on Smart Objects and Technologies for
    Social Good (2019), pp. 160-164 CrossRefView in ScopusGoogle Scholar [27] M. Lee,
    J. Hwang, H. Yoe Agricultural production system based on IoT 2013 IEEE 16Th International
    Conference on Computational Science and Engineering, IEEE (2013), pp. 833-837
    CrossRefView in ScopusGoogle Scholar [28] L.O. Colombo-Mendoza, M.A. Paredes-Valverde,
    M.D.P. Salas-Zárate, R. Valencia-García Internet of things-driven data mining
    for smart crop production prediction in the peasant farming domain Appl. Sci.,
    12 (4) (2022), p. 1940 CrossRefView in ScopusGoogle Scholar [29] G. Singh, D.
    Sharma, A. Goap, S. Sehgal, A.K. Shukla, S. Kumar Machine learning based soil
    moisture prediction for internet of things based smart irrigation system 2019
    5th International Conference on Signal Processing, Computing and Control (ISPCC),
    IEEE (2019), pp. 175-180 CrossRefView in ScopusGoogle Scholar [30] B. Keswani,
    A.G. Mohapatra, A. Mohanty, A. Khanna, J.J. Rodrigues, D. Gupta, V.H.C. De Albuquerque
    Adapting weather conditions based IoT enabled smart irrigation technique in precision
    agriculture mechanisms Neural. Comput. Appl., 31 (2019), pp. 277-292 CrossRefView
    in ScopusGoogle Scholar [31] G. Suciu, H. Ijaz, I. Zatreanu, A.M. Drăgulinescu
    Real time analysis of weather parameters and smart agriculture using IoT Future
    Access Enablers for Ubiquitous and Intelligent Infrastructures: 4th EAI International
    Conference, FABULOUS 2019, Sofia, Bulgaria, March 28–29, 2019, Proceedings 283,
    Springer International Publishing (2019), pp. 181-194 CrossRefView in ScopusGoogle
    Scholar [32] T.W. Ayele, R. Mehta Real time temperature prediction using IoT 2018
    Second International Conference on Inventive Communication and Computational Technologies
    (ICICCT), IEEE (2018), pp. 1114-1117 CrossRefView in ScopusGoogle Scholar [33]
    N. Golubovic, R. Wolski, C. Krintz, M. Mock Improving the accuracy of outdoor
    temperature prediction by iot devices 2019 IEEE International Congress on Internet
    of Things (ICIOT), IEEE (2019), pp. 117-124 CrossRefView in ScopusGoogle Scholar
    [34] Y. Ma, J. Jin, Q. Huang, F. Dan Data preprocessing of agricultural IoT based
    on time series analysis Intelligent Computing Theories and Application: 14th International
    Conference, ICIC 2018, Wuhan, China, August 15–18, 2018, Proceedings, Part I 14,
    Springer International Publishing (2018), pp. 219-230 CrossRefGoogle Scholar [35]
    R. Kumar, P. Kumar, Y. Kumar Time series data prediction using IoT and machine
    learning technique Procedia Comput. Sci., 167 (2020), pp. 373-381 View PDFView
    articleView in ScopusGoogle Scholar [36] R. Ab Rahman, U.R.A. Hashim, S. Ahmad
    IoT based temperature and humidity monitoring framework Bull. Electr. Eng. Inform.,
    9 (1) (2020), pp. 229-237 CrossRefGoogle Scholar [37] G. Stamatescu, C. Drăgana,
    I. Stamatescu, L. Ichim, D. Popescu IOT-enabled distributed data processing for
    precision agriculture 2019 27th Mediterranean Conference on Control and Automation
    (MED), IEEE (2019), pp. 286-291 CrossRefView in ScopusGoogle Scholar [38] R. Lomte,
    G. Patil, C. Patil, N. Sawant, S. Mane Cropping Pattern Based on Weather Conditions
    and Soil Composition (2022) Available at SSRN 4040958 Google Scholar [39] S. Aygün,
    E.O. Güneş, M.A. Subaşı, S. Alkan Sensor fusion for IoT-based intelligent agriculture
    system 2019 8th International Conference on Agro-Geoinformatics (Agro-Geoinformatics),
    IEEE (2019), pp. 1-5 CrossRefGoogle Scholar [40] M. Waleed, T.W. Um, T. Kamal,
    S.M. Usman Classification of agriculture farm machinery using machine learning
    and internet of things Symmetry, 13 (3) (2021), p. 403 CrossRefGoogle Scholar
    [41] W. Cai, R. Wei, L. Xu, X. Ding A method for modelling greenhouse temperature
    using gradient boost decision tree Inf. Process. Agric., 9 (3) (2022), pp. 343-354
    View PDFView articleView in ScopusGoogle Scholar [42] T.S.T. Bhavani, S. Begum
    Agriculture productivity enhancement system using IOT Int. J. Theor. Appl. Mech.,
    12 (3) (2017), pp. 543-554 Google Scholar [43] C. Dewi, R.C. Chen Decision making
    based on IoT data collection for precision agriculture Intell. Inf. Database Syst.:
    Recent Develop., 11 (2020), pp. 31-42 CrossRefView in ScopusGoogle Scholar [44]
    F. Edwards-Murphy, M. Magno, P.M. Whelan, J. O''Halloran, E.M. Popovici B+ WSN:
    smart beehive with preliminary decision tree analysis for agriculture and honey
    bee health monitoring Comput. Electron. Agric., 124 (2016), pp. 211-219 View PDFView
    articleView in ScopusGoogle Scholar [45] O. Unold, M. Nikodem, M. Piasecki, K.
    Szyc, H. Maciejewski, M. Bawiec, M. Zdunek IoT-based cow health monitoring system
    Computational Science–ICCS 2020: 20th International Conference, Amsterdam, the
    Netherlands, June 3–5, 2020, Proceedings, Part V, Springer International Publishing,
    Cham (2020), pp. 344-356 CrossRefView in ScopusGoogle Scholar [46] A. Ikram, W.
    Aslam, R.H.H. Aziz, F. Noor, G.A. Mallah, S. Ikram, …, I. Ullah Crop yield maximization
    using an IoT-based smart decision J. Sensors (2022), p. 2022 Google Scholar [47]
    S. Turber, C. Smiela A business model type for the IoT Anais da 26th European
    Conference on Information Systems (ECIS), Tel Aviv University, Tel Aviv (2014)
    Google Scholar [48] I. Lee The internet of things for enterprises: an ecosystem,
    architecture, and IoT service business model Internet of Things, 7 (2019), Article
    100078 View PDFView articleView in ScopusGoogle Scholar [49] M. Palmaccio, G.
    Dicuonzo, Z.S. Belyaeva The internet of things and corporate business models:
    a systematic literature review J. Bus. Res., 131 (2021), pp. 610-618 View PDFView
    articleView in ScopusGoogle Scholar [50] C. Metallo, R. Agrifoglio, F. Schiavone,
    J. Mueller Understanding business model in the internet of things industry Technol.
    Forecast. Soc. Change, 136 (2018), pp. 298-306 View PDFView articleView in ScopusGoogle
    Scholar [51] A. Mishra, M. Mohapatro Real-time RFID-based item tracking using
    IoT & efficient inventory management using machine learning 2020 IEEE 4th Conference
    on Information & Communication Technology (CICT), IEEE (2020), pp. 1-6 View in
    ScopusGoogle Scholar [52] A. El Jaouhari, Z. Alhilali, J. Arif, S. Fellaki, M.
    Amejwal, K. Azzouz Demand forecasting application with regression and IOT based
    inventory management system: a case study of a semiconductor manufacturing company
    Int. J. Eng. Res. Afr., 60 (2022), pp. 189-210 Trans Tech Publications Ltd. CrossRefView
    in ScopusGoogle Scholar [53] M. Giordano, R. Fischer, M. Crabolu, G. Bellusci,
    M. Magno SmartTag: an ultra low power asset tracking and usage analysis IoT device
    with embedded ML capabilities 2021 IEEE Sensors Applications Symposium (SAS),
    IEEE (2021), pp. 1-6 Google Scholar [54] E. Cakan, A. Şahin, M. Nakip, V. Rodoplu
    Multi-layer perceptron decomposition architecture for mobile IoT indoor positioning
    2021 IEEE 7th World Forum on Internet of Things (WF-IoT), IEEE (2021), pp. 253-257
    CrossRefView in ScopusGoogle Scholar [55] C.K.M. Lee, C.M. Ip, T. Park, S.Y. Chung
    A bluetooth location-based indoor positioning system for asset tracking in warehouse
    2019 IEEE International Conference on Industrial Engineering and Engineering Management
    (IEEM), IEEE (2019), pp. 1408-1412 CrossRefView in ScopusGoogle Scholar [56] R.
    Wang, C. Yu, J. Wang Construction of supply chain financial risk management mode
    based on internet of things IEEE Access, 7 (2019), pp. 110323-110332 CrossRefView
    in ScopusGoogle Scholar [57] A. Kanawaday, A. Sane Machine learning for predictive
    maintenance of industrial machines using IoT sensor data 2017 8th IEEE International
    Conference on Software Engineering and Service Science (ICSESS), IEEE (2017),
    pp. 87-90 CrossRefView in ScopusGoogle Scholar [58] P. Killeen, B. Ding, I. Kiringa,
    T. Yeap IoT-based predictive maintenance for fleet management Procedia Comput.
    Sci., 151 (2019), pp. 607-613 View PDFView articleView in ScopusGoogle Scholar
    [59] D. Jung, Z. Zhang, M. Winslett Vibration analysis for iot enabled predictive
    maintenance 2017 IEEE 33rd International Conference on Data Engineering (ICDE),
    IEEE (2017), pp. 1271-1282 View in ScopusGoogle Scholar [60] D.T.N. Hashem The
    reality of internet of things (Iot) in creating a data-driven marketing opportunity:
    mediating role of customer relationship management (Crm) J. Theor. Appl. Inf.
    Technol., 99 (2) (2021) Google Scholar [61] Z. Li, H. Guo, W.M. Wang, Y. Guan,
    A.V. Barenji, G.Q. Huang, K.S. McFall, X. Chen A blockchain and automl approach
    for open and automated customer service IEEE Trans. Industr. Inform., 15 (6) (2019),
    pp. 3642-3651 CrossRefView in ScopusGoogle Scholar [62] I.A. Zualkernan, M. Pasquier,
    S. Shahriar, M. Towheed, S. Sujith Using BLE beacons and machine learning for
    personalized customer experience in smart Cafés 2020 International Conference
    on Electronics, Information, and Communication (ICEIC), IEEE (2020), pp. 1-6 Google
    Scholar [63] R. Marques, W. de Paula, G.N. Ferreira, F. Armellini, J. Dungen,
    L. Antonio, de Santa-Eulalia. Exploring the application of IoT in the service
    station business IFAC-PapersOnLine, 54 (1) (2021), pp. 402-407 View PDFView articleView
    in ScopusGoogle Scholar Further reading [64] B.K. Chae The evolution of the internet
    of things (IoT): a computational text analysis Telecomm. Policy, 43 (10) (2019),
    Article 101848 View PDFView articleView in ScopusGoogle Scholar [65] C. Krintz,
    R. Wolski, N. Golubovic, F. Bakir Estimating outdoor temperature from CPU temperature
    for IOT applications in agriculture Proceedings of the 8th International Conference
    on the Internet of Things (2018), pp. 1-8 CrossRefGoogle Scholar Cited by (0)
    Pan Zheng is currently a Senior Lecturer in Information Systems at the University
    of Canterbury. His research pursuits encompass the applications of artificial
    intelligence in healthcare, medicine, and various interdisciplinary domains, as
    well as a focus on business analytics and data science. Bee Theng Lau currently
    holds the position of Professor in ICT and the Associate Dean of Research and
    Development in the Faculty of Engineering, Computing and Science at Swinburne
    University of Technology Sarawak. She has been actively contributing to her research
    areas on assistive technologies for special children, facial expression recognition-based
    communication, real-time behaviour recognition, smart technologies for the visually
    impaired, creative art therapies for Autism, STEM education, IoT, etc. View Abstract
    Copyright © 2024 Elsevier Inc. All rights reserved. Part of volume Internet of
    Things: Architectures for Enhanced Living Environments Edited by Gonçalo Marques
    Download full volume Recommended articles Article Metrics Captures Readers: 2
    View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: Zheng and Lau (2024)
  journal: Advances in Computers
  limitations: null
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Internet of things and data science methods for enhanced data processing
  verbatim_quote1: '"In this chapter, we examine existing frameworks and overarching
    methodologies widely employed in the field of data science and data analytics.
    Drawing inspiration from these, we introduce the Data Science Life Cycle for IoT
    Applications (DSLC-IoT), which serves as a fundamental guideline for addressing
    data-intensive and data-driven challenges in the realm of IoT."'
  verbatim_quote2: '"The review centers on the application areas of healthcare, agriculture,
    business, logistics, and manufacturing. These areas have significant social and
    economic importance and are closely intertwined with people''s lives."'
  verbatim_quote3: '>'
- analysis: "The paper proposes a method for optimizing cluster head selection and\
    \ path selection in IoT-enabled smart agriculture systems. The method combines\
    \ modified fuzzy logic, Whale Optimization Algorithm (WOA), and Enhanced Crow\
    \ Swarm Optimization (ECSO). The modified fuzzy logic is used to evaluate relevant\
    \ parameters such as energy, distance, overhead, trust, and node degree to select\
    \ the most suitable cluster head (CH). The ECSO is then employed to find the optimal\
    \ path for data transmission based on the selected CH. \n\nThe authors evaluate\
    \ the proposed approach using simulation experiments in a smart agriculture scenario.\
    \ The results show that the proposed approach outperforms existing approaches\
    \ in terms of throughput, packet delivery ratio, delay, and energy efficiency.\
    \ The proposed system demonstrates substantial advantages in terms of throughput,\
    \ with a remarkable throughput value of 68 Mbps, outperforming the other methods,\
    \ including EQSR (12.5 Mbps), E2S-DRL (60 Mbps), and OSEAP. The packet delivery\
    \ ratio (PDR) is also significantly higher for the proposed system, reaching 90.9%.\
    \ \n\nThe authors conclude that the proposed approach can significantly improve\
    \ the performance of IoT-enabled smart agriculture systems, leading to better\
    \ crop yield and higher profitability for farmers."
  authors:
  - Chandrasekaran S.K.
  - Rajasekaran V.A.
  citation_count: '0'
  description: The advent of Internet of Things (IoT) in agriculture has revolutionized
    the way farmers monitor and manage their crops. IoT-enabled sensors can provide
    real-time data on various environmental parameters such as temperature, humidity,
    soil moisture, and crop growth, which can be used to make informed decisions and
    optimize crop yield. However, the vast amount of data generated by these sensors
    poses a significant challenge in terms of data processing and communication. To
    address this challenge, clustering is often used to group the sensors into clusters
    and elect a cluster head (CH) to communicate with the gateway node. The selection
    of an appropriate CH and the optimal path for data transmission are critical factors
    that affect the performance of the IoT system. In this paper, we propose a novel
    approach to optimize the CH selection and path selection using modified fuzzy
    logic, Whale optimization algorithm (WOA) and enhanced crow swarm optimization
    (ECSO). Fuzzy logic is used to evaluate the relevant parameters such as energy,
    distance, overhead, trust, and node degree to select the most suitable CH. ECSO
    is then employed to find the optimal path for data transmission based on the selected
    CH. We evaluate the proposed approach using simulation experiments in a smart
    agriculture scenario. The results show that the proposed approach outperforms
    existing approaches in terms of throughput, packet delivery ratio, delay, and
    energy efficiency. The proposed system demonstrates substantial advantages in
    terms of throughput, with a remarkable throughput value of 68 Mbps, outperforming
    the other methods, including EQSR (12.5 Mbps), E2S-DRL (60 Mbps), and OSEAP. The
    packet delivery ratio (PDR) is also significantly higher for the proposed system,
    reaching 90.9%. The proposed approach can significantly improve the performance
    of IoT-enabled smart agriculture systems, leading to better crop yield and higher
    profitability for farmers. The results of the simulation experiments demonstrate
    the superiority of the proposed approach over the existing one’s throughput, packet
    delivery ratio (PDR), delay, and energy consumption efficiency is found in the
    result section.
  doi: 10.1007/s11227-023-05780-5
  full_citation: Energy-efficient cluster head using modified fuzzy logic with WOA
    and path selection using enhanced CSO in IoT-enabled smart agriculture systems
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home The Journal of Supercomputing Article
    Energy-efficient cluster head using modified fuzzy logic with WOA and path selection
    using enhanced CSO in IoT-enabled smart agriculture systems Research Published:
    20 January 2024 (2024) Cite this article Download PDF Access provided by University
    of Nebraska-Lincoln The Journal of Supercomputing Aims and scope Submit manuscript
    Senthil Kumar Chandrasekaran & Vijay Anand Rajasekaran  63 Accesses Explore all
    metrics Abstract The advent of Internet of Things (IoT) in agriculture has revolutionized
    the way farmers monitor and manage their crops. IoT-enabled sensors can provide
    real-time data on various environmental parameters such as temperature, humidity,
    soil moisture, and crop growth, which can be used to make informed decisions and
    optimize crop yield. However, the vast amount of data generated by these sensors
    poses a significant challenge in terms of data processing and communication. To
    address this challenge, clustering is often used to group the sensors into clusters
    and elect a cluster head (CH) to communicate with the gateway node. The selection
    of an appropriate CH and the optimal path for data transmission are critical factors
    that affect the performance of the IoT system. In this paper, we propose a novel
    approach to optimize the CH selection and path selection using modified fuzzy
    logic, Whale optimization algorithm (WOA) and enhanced crow swarm optimization
    (ECSO). Fuzzy logic is used to evaluate the relevant parameters such as energy,
    distance, overhead, trust, and node degree to select the most suitable CH. ECSO
    is then employed to find the optimal path for data transmission based on the selected
    CH. We evaluate the proposed approach using simulation experiments in a smart
    agriculture scenario. The results show that the proposed approach outperforms
    existing approaches in terms of throughput, packet delivery ratio, delay, and
    energy efficiency. The proposed system demonstrates substantial advantages in
    terms of throughput, with a remarkable throughput value of 68 Mbps, outperforming
    the other methods, including EQSR (12.5 Mbps), E2S-DRL (60 Mbps), and OSEAP. The
    packet delivery ratio (PDR) is also significantly higher for the proposed system,
    reaching 90.9%. The proposed approach can significantly improve the performance
    of IoT-enabled smart agriculture systems, leading to better crop yield and higher
    profitability for farmers. The results of the simulation experiments demonstrate
    the superiority of the proposed approach over the existing one’s throughput, packet
    delivery ratio (PDR), delay, and energy consumption efficiency is found in the
    result section. Similar content being viewed by others A Review of the Applications
    of the Internet of Things (IoT) for Agricultural Automation Article 26 November
    2020 Energy-Efficient Routing in Wireless Sensor Networks: A Meta-heuristic and
    Artificial Intelligence-based Approach: A Comprehensive Review Article 02 January
    2024 A new energy-aware technique to improve the network lifetime of wireless
    Internet of Things using a most valuable player algorithm Article 18 March 2024
    1 Introduction Agriculture is widely considered as the backbone of human civilization
    as it serves as the primary source of crops and essential resources. It plays
    a pivotal role in the growth and development of a country''s economy and provides
    diverse employment opportunities to people [1]. The progress of the agricultural
    sector is crucial for enhancing the economic landscape of a nation. However, the
    use of outdated farming techniques by some farmers leads to a decrease in crop
    and fruit yields. On the other hand, the implementation of technology and machinery
    has resulted in increased productivity by replacing human labour in various areas
    of agriculture [2]. The application of modern science and technology is imperative
    for augmenting production in the agricultural sector. New approaches and technological
    advancements are continually being put forth and put into practice in order to
    suit the demands of modern humanity [3]. Due of this, IoT has emerged. IoT is
    a system of all things that are integrated into gadgets, detectors, computers,
    applications, and individuals through the Internet context to converse, exchange
    data, and connect in order to offer a viable approach between both the physical
    and digital world. IoT has been used in a variety of fields recently, including
    precision farming, driverless cars, home automation, smart buildings, smart energy,
    campus administration, medical, and transportation [4]. The rising number of people
    shows how important agricultural activities are to growing and producing enough
    food for everyone on the planet. The efficiency of the agricultural production
    sector is a major factor in the economics of most nations [5]. A nation''s prosperity
    is strengthened by enhanced quality in the agricultural sector. Yet, compared
    to persons employed in a variety of other industries, such as computing, building,
    teaching, and more, producers have relatively fewer earnings on the agricultural
    commodities and goods they produce [6]. Farmers are thus lacking enthusiasm for
    engaging in agriculture because it takes more labour to develop commodities or
    food stuffs in the agricultural industry than it does in several other fields,
    and because the work rewards for producers are considerably lower than ideal.
    In reality, if producers are not ready for unforeseen circumstances, the economic
    burden connected with farming or cultivation is also larger because of the immediate
    effect of unanticipated catastrophic events on farming [7]. The development of
    technology like IoT has changed the environment of farming and improved operational
    skills in the industry [8]. Sustainable farming and precision agriculture refer
    to the use such as IoT technologies in agriculture and farming. According to predictions,
    the industry for agricultural robots would increase at an annualized pace of 20.31%
    from 2021 to 2028, reaching USD 15.93 billion. Given the increasing incorporation
    of technological equipment into farming and the growth of the farm economics market,
    the agriculture industry is evolving into a convenient scapegoat for attackers
    to execute attacks [9]. For example, a cyberattack on JBS, a meat production business
    in the food supply, forced the closure of 13 meat plants. To capability approach,
    the corporation was forced to pay an extortion of USD 11 million. As a result,
    safety is viewed as a major issue in industries like agriculture, and improvements
    in agricultural security products are highly wanted. Smart farming IoT uses are
    shown in Fig. 1. Farm monitoring, precision farming, supply chain management,
    tracking and tracing, forest monitoring, and UAV farming are a few of the applications
    [10]. Fig. 1 IoT in smart farming Full size image High agricultural production
    and resource-efficient practices in farming and agriculture may increase production.
    Sustainable farming is one of the IoT''s possible applications for significant
    quality management, according to current IoT developments [11]. The monitoring
    of soil conditions, insect management, crop production, animal herds, water level
    management, ambient health monitoring, and other Iot devices in sustainable farming
    are only a few examples. On the farming, sensing equipment is set up nearby the
    buildings as well as the vicinity of the agricultural field to detect the operational
    as well as ecological circumstances and transform the observed analogue information
    into an electronic format [11]. The most common instruments in sustainable farming
    are those that measure heat, moisture, sunlight, force, and closeness. To organization
    the detecting data in the cloud, such various sensors are linked to the web via
    edge bridges or router. The ability to communicate with the cloud offers data
    analysis and database format, but internet access on a connected home raises worries
    about privacy and security [12]. The introduction of IoT in farming has completely
    changed how farmers operate and track their crops. Smart applications may give
    real-time information on a variety of environmental factors, including temperatures,
    moisture, soil humidity, and crop development [13]. This information can be utilized
    to optimize crop output and make well-informed decisions. The enormous volume
    of data that these sensors produce, nevertheless, presents a considerable problem
    for data processing and communication [14]. Clustering is frequently used to organize
    the devices into clusters and choose a Cluster Head (CH) to connect with the default
    gateway in order to overcome this problem [15]. The efficiency of the IoT system
    is significantly impacted by the decision as to the right CH and the best method
    for data transfer. The introduction of IoT in farming has completely changed how
    farmers oversee and track their crops. This paper presents a novel approach to
    route and CH selection optimisation using Enhanced Crow Swarm Optimization (ECSO)
    and modified Fuzzy logic [16]. To determine which CH is best, fuzzy logic is utilized
    to analyse pertinent factors such energy, distance, overhead, trust, and node
    degree. Following then, ECSO is used to determine the best route for data transfer
    according to the selected CH. The suggested strategy can considerably enhance
    the functionality of IoT-enabled smart farming system, resulting in better crop
    output and more farmer profitability [17]. The massive volume of data generated
    by sensors in IoT-enabled smart agriculture systems poses a significant challenge
    in terms of data processing and transmission efficiency. Clustering has emerged
    as a popular solution for addressing this challenge by organizing sensors into
    clusters and selecting a cluster head (CH) to serve as a communication gateway.
    To select the optimal cluster head, fuzzy logic is employed to evaluate critical
    parameters, including energy levels, communication range, overhead, trustworthiness,
    and node degree. The selection of an appropriate CH and the optimization of data
    communication pathways are critical factors influencing the overall efficiency
    of IoT systems in agriculture. The proposed method for energy-efficient cluster
    head selection in IoT-enabled smart agriculture systems combines several innovative
    techniques to optimize resource allocation and enhance the overall efficiency
    of the network. The basic framework of this approach involves the integration
    of modified fuzzy logic, Whale optimization algorithm (WOA), and enhanced crow
    swarm optimization (CSO) for cluster head selection and path establishment in
    the IoT network. This work employs enhanced crow swarm optimization (ECSO) to
    enhance and identify the most efficient data transmission routes. To determine
    the best-suited CH, fuzzy logic is employed to evaluate key parameters such as
    energy levels, distances, overhead, trustworthiness, and node degrees. The research
    presents, the modified fuzzy logic to make intelligent decisions on cluster head
    selection based on various parameters such as node energy levels, location, and
    data load. This allows for the dynamic and adaptive selection of cluster heads,
    ensuring that nodes with sufficient energy and proximity to other nodes are chosen;
    thereby minimizing energy consumption. The Whale Optimization Algorithm is introduced
    to further optimize the selection process. WOA is used to fine-tune the fuzzy
    logic-based decisions, effectively reducing the energy consumption of the selected
    cluster heads by iteratively refining the selection process. The innovative aspect
    of the suggested approach to energy efficiency in IoT-enabled smart farm systems
    is its all-encompassing methodology. It optimizes both cluster head selection
    and data transmission pathways by combining modified fuzzy logic, WOA, and Enhanced
    CSO. The key contributions of the research paper are as follows: The research
    addresses the critical problem of energy-efficient cluster head selection in IoT-based
    smart agriculture. The research begins with a thorough problem analysis, highlighting
    the need for optimized resource allocation in the agricultural IoT context. This
    framework proposes a novel approach that incorporates modified fuzzy logic to
    intelligently select cluster heads based on parameters like node energy levels,
    location, and data load. This innovative integration enhances cluster head selection
    for reduced energy consumption. The research incorporates the WOA to fine-tune
    the fuzzy logic-based decisions, leading to further optimization of cluster head
    selection. The research introduces an optimal path selection method using the
    CSO algorithm, which ensures efficient data transmission while minimizing energy
    consumption. The approach addresses the crucial challenge of data routing in agricultural
    IoT systems. It conducts extensive simulation experiments to empirically validate
    the performance of the proposed method. Through these experiments, it demonstrates
    the practical applicability and effectiveness of our approach in real-world agricultural
    scenarios. 2 Related work 2.1 Energy efficient cluster head selection Amandeep
    Kumar et al. proposed an energy-efficient cluster head selection mechanism for
    IoT-enabled smart agriculture applications that utilizes a stabilized routing
    and a hybrid particle swarm wild horse optimizer [18]. The IoT has become increasingly
    important in uses for automated farming in recent years. By using actuators and
    sensing nodes, producers can periodically get information about the moisture of
    the soil, water utilized, moisture, temperature, humidity, etc. Numerous grouping
    methods have produced energy-efficient outcomes in wireless sensor network apps.
    Nevertheless, long-distance transmission and scalable networks are needed for
    IoT-enabled smart farming uses. The currently available clustering methods are
    unable to offer SF clarification, while working on latency, end-to-end delay,
    transmission overhead, etc., has not been fully pursued. In order to reduce energy
    usage, latency, transmission delay, etc. in SF usages, a stable routing method
    and hybrid particle swarm wild horse optimizer, based on cross-layer architecture,
    has been developed. The network is primarily envisioned as a network of bi-concentric
    hexagons. To address the issues with excessive energy usage in WSN, cross-layer-based
    optimum CH selection method is created employing hybrid optimization algorithm
    known as PSWHO. The likelihood of every node with sensors is computed during clustering
    using cross-layer factors from various levels, including networks, medium and
    physical access control. Additionally, the expanded deep golden eagle neural networks,
    deep learning-based routing method, stands presented near investigate the best
    path for data transmission. In regards to energy economy, QoS effectiveness, and
    efficiency of computation, the technique has done better. However, the proposed
    optimizer has a low degree of convergence during the iterative process and is
    susceptible to falling into local optimal in high-dimensional spaces. 2.2 Lightweight
    clustering algorithm for smart agriculture Hemant et al. created a lightweight
    clustering algorithm for smart farming with industry 4.0. IoT-based smart agriculture
    is an innovation from Industry 4.0 that is applied in both metropolitan and agricultural
    settings. A new branch of Industrial Revolution known \"Industry 4.0\" places
    a strong emphasis on mechanization, connectivity, artificial intelligence, and
    information in real time. Smart farming takes become one of core uses of Industry
    4.0 due towards the increasing requirement for agricultural technology to boost
    farm production while fulfilling minimum criteria. The study suggests an AI-based
    smart agricultural strategy because AI techniques are crucial for enhancing Industry
    4.0 specifications'' effectiveness. Utilizing routing and clustering methods,
    researchers create the Lightweight Clustering Interface for Industries 4.0 Integrated
    Agriculture protocol. Long-distance interactions, energy economy, processing effectiveness,
    and guaranteed QoS efficiency are all addressed by smart farming, such as the
    concept of Industry 4.0. The study calculates both the indirect and direct sensing
    node values during the clustering stage to obtain the combined fitness function
    measurement. Utilizing the innovative fitness function, the best trustworthy data
    forwarders and Cluster Head are chosen. Employing a combined fitness function,
    researchers define the routing and clustering goal functions to minimize energy
    use and transmission overhead while maximizing network efficiency. A lightweight
    route-finding method relies on periodic fitness scores for both intra-cluster
    and inter-cluster data transmission, without requiring specialized processing.
    The simulation findings show that the LCIPA protocol is more efficient than the
    base techniques. The created method, however, is complicated and unable to repair
    database problems [19]. 2.3 Optimized dynamic approach and effective cluster-based
    routing For IoT-assisted smart Agriculture, Chavan et al. suggested an innovative
    Optimized dynamic approach and Effective Cluster Based Routing Protocol [20].
    Precision farming has entered a new age, and it is anticipated that people will
    profit more from it. The use of new tools is now necessary in contemporary agriculture
    in order to achieve better outputs. The IoT currently contributes to novel farming
    practices. IoT is an adaptable network of sensing nodes that gathers information
    from the outside world and transmits it to a sink node for processing. An essential
    component of IoT network is the transmission of information from nodes containing
    sensors to sink nodes or base stations. To increase the automation in farmland,
    it is necessary to discover methods to create and use routing algorithms as well
    as protocols whenever this is feasible. Precision Agriculture is nothing more
    than automating agriculture in a manner that allows it to function automatically
    in circumstances where individual participation would be difficult. In an IoT
    network, sensing nodes have a limited lifespan. Therefore, it is necessary to
    adopt a strategy that uses little node energy as feasible. Energy-conscious and
    effective routing methods are required when sending data between servers. The
    energy efficiency of routing methods can be improved using a variety of clustering
    algorithm techniques. However, as energy dissipation increases, network life decreases
    and speed ultimately has a significant impact. Therefore, multi-hop correspondence
    must be available wherever it is necessary for improved efficiency. Vatan and
    Sandip Kumar suggested a neighbourhood-aware clustering protocol is a WSN-assisted
    IOT system as agricultural applications. Currently, smart farming is essential
    if you want to increase output and safeguard your products. The agricultural instruments
    and internet-connected equipment can be used for this. In order to promote smart
    farming, the base network of wireless sensors can detect a variety of environmental
    factors and transmit data to devices that connected to internet. However, the
    sensing units have a short lifespan and receive power by smaller cells. As a result,
    the clustering algorithm presented in the article requires to increase the usefulness
    of the sensor nodes. These sensors, which are distributed in a network and are
    referred to as sensors for pressure, can send signals to an alert system that
    is connected to the internet wherever an animal enters a farm, enabling the farmer
    to fight off predators and safeguard his harvests. The cluster leader is chosen
    so that the cluster it forms contains a larger amount of highly energetic nodes.
    The sensing network is thought to 3 levels of energy variability among nodes.
    The protocol has performed better when compared to these other protocols. However,
    the network has a node''s separation issue [21]. 2.4 Energy management strategy
    for IoT-enabled smart agriculture Utilizing improved intelligence techniques,
    Asif Irshad Khan et al. [22] suggested a novel energy management strategy for
    an IoT-enabled smart system for irrigation. Smart agricultural businesses are
    essential now more to ever because of expanding worldwide population and increasing
    demand for food. IoT technologies have grown into a major route to cutting-edge
    farming methods in the context. These IoT devices have encountered energy restrictions
    and challenging routing strategies due to their limited capacity. As a consequence,
    delays, energy usage, network lifetime decrease, and data transmitting failures
    occur in the context of IoT-based agriculture. The research suggests an innovative
    mix of improved intelligent smart systems for irrigation in order to address the
    issue and enhance the system''s energy management capabilities. Hierarchy Shuffled
    Shepherd Clustering is utilized in the instance to conduct the best cluster leader
    development and decision-making process. The suggested Imperial Penguin Jellyfish
    Optimizer technique also offers the best energy control and routing route. Network
    Simulator-2 applications are used to simulate the task. The suggested technique''s
    simulation results are verified and contrasted with those from traditional techniques.
    As a consequence, the findings of the suggested method show that the model that
    was created has significantly lower energy usage and better network lifespan than
    the conventional works. However, when the movement of nodes is enhanced, the linguistic
    factors do not produce enough information. Hemant et al. [23] suggested an IoT
    protocol that encompasses multiple layers for intelligent production and smart
    farming. Researchers have paid a lot of attention to the IoT for Intelligent Production
    of Smart agricultural devices for automating different agricultural uses. The
    farm''s actuators and sensors, which are utilized to provide producers with recurring
    information about the farm''s weather, soil wetness, sun intensity, water usage,
    etc. The clustering-based techniques for wireless sensing networks have been shown
    to be energy-efficient. However, the current clustering methods cannot be practical
    and have greater latency and delay for different SF applications when taking into
    account distant communication and extensible systems of IoT-enabled SF. The CL-IoT
    protocol is an adaptive and efficient protocol designed for remote surveillance
    and decision-making of rural fields, with a focus on SF applications. In order
    to reduce network transmission latency, delay, and energy usage, cross-layer-based
    routing and clustering methods have been developed. The energy imbalance issue
    in WSNs can be solved by implementing the best CH selection method based cross-layers,
    where the network layer, medium, and physical access control settings of each
    sensor are analysed to determine the best CH for optimal data transfer. Additionally,
    a new probabilistic selection formula based on nature-inspired fitness function
    has been proposed to identify the best path for data transfer. By taking into
    account the elements of energy economy, computational effectiveness, and QoS effectiveness,
    the efficacy of the CL-IoT algorithm was examined utilizing NS2. The CL-IoT maximizes
    network throughput while minimizing energy usage, transmission overhead, and overall
    delay when compared to cutting-edge IoT-based agricultural techniques. However,
    it has difficulties managing clusters of various proportions. 2.5 Energy efficient
    device for smart agriculture An enhanced energy-efficient device for IoT-enabled
    smart agriculture was created by Himanshu Agrawal et al. WSN energy economy is
    well-researched study issue. Developing the energy-efficient collection of information
    at the ground stations is an open-source issue, according to a recent paper on
    IoT-based smart agriculture. The latest advancements in energy-efficient algorithms
    then models towards keep energy demand at ground stations are the driving force
    behind the study. The base station is an energy-constrained device that must sustain
    the energy demands of different sensors and gateway components in order to function.
    In order to keep energy balance, base station employs energy harvesting. Two key
    research issues need to be investigated: To determine the solar energy required
    to maintain energy balance at the base station with solar support for energy gathering,
    and to calculate the energy requirements of base station at various intervals,
    certain calculations must be performed. The first query has received a substantial
    response. Researchers are attempting to answer the second query in the article,
    which is how to calculate the base station''s energy needs for smart agriculture
    with IoT. Multiple sensor types are utilized in smart agriculture to constantly
    monitor the landscape and link to the base station, which includes soil, wetness,
    temperatures, direction of the wind, velocity of the wind, video, drones, etc.
    As a result, depending on the sort of communication over wireless networks medium
    being used at any given moment, the base station may require minimal power, less
    power, or excessive power. The article suggests a new product density approach
    to calculate the base station''s energy needs. Additionally, the residual energy
    parameter is suggested for an enhanced duty cycling method. When compared to two
    other algorithms, the effectiveness of the suggested Improved Duty Cycling algorithm
    performs better in terms of average electricity usage, leftover energy efficiency,
    throughput, etc. However, because it is made for low speed uses, it is not appropriate
    for high speed transmission [24]. 2.6 IoT-based WSN framework for smart agriculture
    An IoT-Based WSN Framework: A Connection to Smart Agriculture was suggested by
    Khalid Haseeb et al. In many areas, including communication, agribusiness, surveillance,
    industry, and monitoring, wireless sensor networks have shown study and development
    interests. IoT-based WSN has utilized farmland output to monitor crop conditions
    and handle smart farming employing variety of sensors. These instruments are used
    in the agricultural setting to collect data on crops, trees, temperature monitoring,
    humidity, watering systems, and more in order to increase output rates through
    smart farming alternatives. The productivity of agriculture can be negatively
    impacted due to limitations in the functioning, energy, sending, and memory capacities
    of sensors. Moreover, IoT-based farming devices must also be safeguarded against
    malicious attacks, in addition to their effectiveness. To address these issues,
    the researchers proposed a WSN architecture for smart agriculture with multiple
    design levels. The agricultural sensors collect relevant data and use a multi-criteria
    judgement function to select a group of cluster heads for reliable and efficient
    data transmission. Signal-to-noise ratio is also used to assess the signal strength
    on transmission lines. Secondly, security is ensured for data transfer from agricultural
    devices to base stations by utilizing the recurrence pattern of the linear congruential
    generator. The simulated outcomes demonstrated that, in comparison to other methods,
    the suggested structure greatly improved communication effectiveness. However,
    the structure''s effectiveness in an intelligent transportation system and mobile-based
    IoT network is not examined [25]. Table 1 represents the comparison of exiting
    approach merits and demerits in IoT network. Table 1 Comparison of existing system
    merits and demerits in IoT network Full size table 3 Problem statement Traditional
    cultivation has a tendency to gradually deplete the soil''s nutrients, leaving
    it undernourished and prone to erosion. Harvesting requires a lot of effort. In
    order to stop pests from producing assaulting, pesticides will be utilized. The
    products are therefore not in good condition. Additionally, conventional cultivation
    requires a lot of time for decomposition. The suggested IoT-enabled smart farming
    is presented to address these challenges. In an attempt to increase output and
    safeguard the crops, smart farming becomes increasingly important today. In comparison
    to traditional agricultural techniques, it is significantly more efficient [18].
    Smart farming involves the use of sensors and autonomous irrigation techniques
    to monitor temperature, moisture, and other relevant characteristics of agricultural
    regions. Farmers would be able to check on their produce from anywhere with this.
    Numerous clustering methods have produced energy-efficient outcomes in wireless
    sensing network applications. However, long-distance communication and scalable
    networks are needed for IoT-enabled smart agricultural uses. Smart agricultural
    solutions cannot be achieved with the currently available clustering methods,
    and the impact on transmission end-to-end delay, overhead, latency, etc. has not
    been fully explored. It is suggested to use adapted fuzzy logic and enhanced crow
    swarm optimization to optimize cluster head selection and path selection in IoT-enabled
    smart agriculture in order to get around the limitations. In order to support
    smart farming, it can detect a variety of environmental factors and transmit data
    to internet-enabled devices. 4 Proposed method for CH and path selection in IoT
    The massive volume of data produced by those sensors presents a considerable difficulty
    in terms of data processing and transmission. Clustering is frequently utilized
    for solve that problem by grouping sensors into clusters and selecting a CH to
    interact with the gateway node. The selection of a suitable CH and the ideal channel
    for data communication are crucial aspects influencing IoT efficiency of the systems.
    They present a unique strategy to optimize CH selection and route selection utilizing
    modified Fuzzy Logic and whale optimization. To enhance and find easiest path
    using ECSO. To determine which CH is best, fuzzy logic is utilized to analyse
    pertinent factors such energy, distance, overhead, trust, and node degree. Figure
    2 shows a diagram illustrating the flow of smart agriculture can be created. Fig.
    2 A diagram illustrating the flow of smart agriculture can be created Full size
    image 4.1 Grouping sensors into clusters using k-means algorithm Unsupervised
    clustering method called as K-means. Several clustering issues were resolved with
    ease using. The technique was used to divide a network into several clusters.
    Based on distance between an elected CH and other nodes in same cluster, the algorithm
    may primarily divide the node space into k clusters. A squared error function
    is the goal function that this method seeks to minimize. Equation (1) contains
    the objective function. $$A = \\sum\\limits_{y = 1}^{k} {\\sum\\limits_{x = 1}^{m}
    {\\left\\| {R_{x}^{y} - {\\text{ClHe}}} \\right\\|} }^{2}$$ (1) Moreover, \\(\\left\\|
    {R_{x}^{y} - {\\text{ClHe}}} \\right\\|^{2}\\) denotes the measure the distance
    between sensor \\(R\\) numbers \\(x\\) belongs to cluster \\(y\\) and \\(ClHe\\)
    for \\(m\\) sensors. Figure 3 depicts the entire process of the suggested framework.
    Fig. 3 Entire process flow diagram for proposed system Full size image 4.2 Using
    fuzzy logic and WOA to determine cluster head A fuzzifier, a rule-based a fuzzy
    inference engine called and a defuzzifier make up the fuzzy logic control paradigm.
    The Mamdani Method, the most popular fuzzy inference approach, was chosen because
    of its ease of use [26]. There are four steps to the process: Fuzzification among
    the input variables energy, concentration, and centrality involves assessing the
    degree that the clear entries from all of these variables correspond to the relevant
    fuzzy sets. Matching the fuzzified inputs to each of the fuzzy rules'' precursors
    is the process of evaluating the rules. Clustering of regulation results is the
    process of combining all rule outputs. The total of the output of a fuzzy probability
    is the input used in the defuzzification manage, and the result is a single crisp
    integer. When defuzzifying, it locates the location wherein a straight line would
    split the total set chance into two equal masses. Using the following formula,
    the COG (Centre of Gravity) is computed and approximated over a sample of points
    on the aggregate output membership function: $${\\text{CH}} = \\left( {\\Sigma
    \\mu z\\left( c \\right)*c} \\right)/\\Sigma \\mu z\\left( c \\right)$$ (2) where
    \\(\\mu z\\left(c\\right)\\) is the set A membership function. 4.2.1 Whale optimization
    algorithm (WOA) The WOA is an intelligent planning tool for population optimization
    based on animal behaviour. The white shark-pray served as the model for this algorithm.
    The WOA is animated and applies the design strategy throughout. The term WOA is
    used to describe each alternative choice. WOA lives together and works together
    to solve problems. At the end of the algorithm, the candidate solution with highest
    fitness selected as the optimal set of CHs which is represented in Eq. (3). $${\\text{fitness}}
    = \\vec{X}\\left( {h + 1} \\right) = \\vec{D}^{\\prime} .\\cos (2\\pi p) + \\vec{X}^{*}
    \\left( h \\right)$$ (3) here \\(h\\) is the present iteration, \\(\\vec{X}\\)
    position vector of most successful solution, \\(\\vec{D}\\) can be an element-by-element
    multiplication or a position vector. This part presents a mathematical model of
    the bubble net attack strategy, including encircling the target and prey search.
    Whale optimization algorithm starts the optimization procedure required to resolve
    an optimization problem by randomly generating a pool of beginning solutions because
    it is a population-based algorithm. A matrix may be used to indicate a population
    of \\(m\\) CHs (i.e. population number) in a \\(x\\) dimensional search space
    (i.e. problem dimension), where each CH location denotes a potential solution
    to a problem: $${\\text{CH}}\\alpha = \\left[ {\\begin{array}{*{20}c} {{\\text{CH}}_{{1}}^{{1}}
    } & {{\\text{CH}}_{{2}}^{{1}} } & {....} & {....} & {{\\text{CH}}_{{\\text{w}}}^{{1}}
    } \\\\ {{\\text{CH}}_{{1}}^{{2}} } & {{\\text{CH}}_{{2}}^{{2}} } & {....} & {....}
    & {{\\text{CH}}_{{\\text{w}}}^{{2}} } \\\\ {...} & {....} & {....} & {...} & {...}
    \\\\ {{\\text{CH}}_{{1}}^{m} } & {{\\text{CH}}_{{2}}^{m} } & {....} & {....} &
    {{\\text{CH}}_{w}^{m} } \\\\ \\end{array} } \\right]$$ (4) With \\(\\mathrm{COG}\\alpha\\)
    denotes the overall amount of simulated devices, \\(\\alpha\\) is the size of
    cluster head in fuzzy logic, and \\(w\\) the placement of cluster head within
    the dimension, \\({\\mathrm{CH}}_{w}^{i}\\) representing the position (capacity)
    of all \\({i}{\\mathrm{th}}\\) cluster head in the \\({w}{\\mathrm{th}}\\) search
    space. The domain''s starting population is produced using the subsequent uniform
    random initialization: Encircling prey: Once the best search agent has been determined,
    the remaining search agents will make an effort to move closer to the top search
    agent. These equations illustrate this behaviour: $${}_{CH}^{ \\to } = \\left|
    {\\vec{w}.\\vec{X}*\\left( h \\right) - \\vec{X}\\left( h \\right)} \\right|$$
    (5) $$\\vec{X}\\left( {h + 1} \\right) = \\vec{X}\\left( h \\right) - \\vec{y}.
    \\overrightarrow {CH}$$ (6) where h is the present iteration, \\(\\overrightarrow{X}*\\)
    denotes position vector of best solution found thus far, \\(\\overrightarrow{w}\\)
    and \\(\\overrightarrow{y}\\) denote the coefficient vectors. If there is a better
    solution, the \\(\\overrightarrow{X}*\\) must be modified based on the equations
    in each iteration. The following calculation is made for the vectors \\(\\overrightarrow{y}\\)
    and \\(\\overrightarrow{{\\varvec{w}}}\\): $$\\vec{\\user2{y}} = 2\\vec{Y}.\\vec{\\user2{r}}
    - \\vec{Y}$$ (7) $$\\overrightarrow {{\\varvec{w}}} = {\\mathbf{2}}.\\vec{\\user2{r}}$$
    (8) In all the investigating and exploiting stages, \\(\\overrightarrow{Y}\\)
    is reduced linearly from 2 to 0 over a number of iterations, and \\(\\overrightarrow{{\\varvec{r}}}\\)
    is a random vector in the range [0, 1]. Bubble-net attack technique: Two strategies
    are created to statistically simulate humpback whale behaviour in bubble nets:
    i) Shrinking encircling mechanism: The value of \\(\\overrightarrow{Y}\\) an is
    decreased to produce this behaviour. Take note that \\(\\overrightarrow{{\\varvec{y}}}\\)
    an also results in a reduction in the range of fluctuations of \\(\\overrightarrow{Y}\\).
    Or to put it another way, \\(\\overrightarrow{Y}\\) is a random number in the
    range [Y, Y] where Y decreases from 2 to 0 during the period of iterations. The
    new position of a search agent may be determined somewhere within the agent''s
    starting position and the position of the best agent right now by using random
    values for \\(\\overrightarrow{Y}\\) in the range [1, 1] displays the possible
    places that may be reached by 0 < Y < 1 in a 2D space from (X, Y) towards (X,
    Y). ii) Spiral updating position: Then, to replicate the helix-shaped motions
    of humpback whales, a spiral equation is developed connecting the location of
    the whale and its prey in the following way. $$\\vec{c}\\left( {h + 1} \\right)
    = \\overrightarrow {CH}^{\\prime} .e^{zp} .{\\text{cos}}\\left( {2\\pi l + \\vec{c}^{*}
    \\left( h \\right)} \\right)$$ (9) Here is \\({\\overrightarrow{CH}}^{\\prime}=|{\\overrightarrow{c}}^{*}\\left(h\\right)-{\\overrightarrow{c}}\\left(h\\right)|\\)
    variable for determining the form of the spiral with logarithms, l is an arbitrary
    integer in the range [1, 1], and. is an element-by-element multiplica- tion, and
    denotes the distance of the i th whale to the prey (best answer so far). $$\\vec{c}\\left(
    {h + 1} \\right) = \\left\\{ {\\begin{array}{*{20}l} {\\vec{c}*\\left( h \\right)
    - \\vec{y}.\\overrightarrow {CH} \\quad {\\text{if}}\\;l < 0.5} \\\\ {\\overrightarrow
    {CH}^{\\prime} .\\cos (2\\pi p) + \\vec{c}^{*} \\left( h \\right)\\quad {\\text{if}}\\;\\;l
    < 0.5} \\\\ \\end{array} } \\right.$$ (10) where p falls between [0, 1] at random.
    Search the prey:The following equation is a description of the mathematical model
    used to find the prey. $$\\overrightarrow {CH} = \\left| {\\vec{w}.\\overrightarrow
    {Cran} - \\overrightarrow {c} } \\right|$$ (11) $$\\vec{c}\\left( {h + 1} \\right)
    = \\overrightarrow {{{\\text{Cran}}}} - \\vec{y}.\\overrightarrow {{{\\text{CH}}}}$$
    (12) where \\(\\overrightarrow{Xran}\\) is denoted by the random position vector
    (a random cluster) from the present position, \\(\\overrightarrow{CH}\\) denotes
    the cluster head of current position. Algorithm 1: WOA algorithm 4.2.1.1 Enhanced
    Crow Swarm Optimization for find the path The optimal path for data transmission
    based on the selected CH refers to the best path that can be used to transmit
    data between a source node and a destination node in a IoT network, in view of
    the specific characteristics of the selected CH (Channel). In a IoT network, data
    can be transmitted over multiple paths, and the selection of the path can have
    significant impact on performance of the network. Optimal path is the one that
    provides the highest data transmission rate, signal strength, or other relevant
    metrics that are important for the specific application. The selection of the
    CH can also have a significant impact on performance of network, different channels
    may have different characteristics in terms of interference, noise, and other
    factors. Therefore, finding the optimal path for data transmission based on the
    selected CH requires considering both the characteristics of the channel and the
    available paths. Optimization algorithms such as ECSO can used to search for the
    optimal path of data transmission based on the selected CH, by evaluating the
    fitness of candidate paths and iteratively refining the search based on the feedback
    from the fitness function. The optimal path identified by the algorithm is expected
    to provide the highest performance in terms of the specific metrics used to evaluate
    the fitness of the path. Algorithm 1 represents the efficient way to cluster head
    path selection using ECSO. In these subgroups, the CSO method and its computational
    formalism are presented. The optimum crow''s position within the group determines
    every crow''s updated location, which may be calculated using the following Eq.
    (13). $$L_{q + 1} = L_{q} + G_{q + 1} *\\cos (\\theta )$$ (13) If is a departing
    angle and \\(L_{q + 1}\\) is a new location, \\(\\theta\\) is an angle, the velocity
    value is \\(G_{q}\\). Group Division: Suppose that the crow''s computational programme
    chooses the simplest cluster when selecting food area then also calculates overall
    numbers that did not receive logical food on this journey. Teams carrying risky
    food can consume sensible food during the upcoming food search mission. Based
    on the animal''s attributes, such as speed, departure angle, and location, this
    behaviour is defined by Eq. (14): $$E_{q + 1} = (J*E_{q} ) + (L_{{{\\text{best}}}}
    - L_{q} )*J$$ (14) here \\(q\\) denotes present iteration, \\(J\\) is random number
    belongs to (0,1), \\(L_{q}\\) is position vector, and \\(L_{{{\\text{best}}}}\\)
    is position vector of best solution thus far. Update angle: Worst crow angle may
    be adjusted in accordance with the following Eq. (15) when best crow follows behaviour.
    $$\\frac{{\\theta_{q + 1} = (\\theta_{q} + \\theta_{{{\\text{best}}}} )}}{2}$$
    (15) where \\(\\theta_{q}\\) is present angle of the crow, \\(\\theta_{{{\\text{best}}}}\\)
    is angle of the finest crow, and \\(\\theta_{q + 1}\\) is new angle of crow. Reading
    the data from the issue database is the initial step. Next produce numerous units
    for each of the nine measurements, with a total of 100 units scattered at random.
    They used the CSO technique to resolve this issue in the second step. It begins
    by figuring out what each crow''s speed limit and angle should equal. Depending
    on speed, current position, and crow angle, they update position (number of units).
    Before updating the position, the speed must be adjusted by taking into account
    the previous speed, which varies depending on location of the best crow and current
    Algorithm 2: Cluster head path selection using ECSO 5 Results and discussion The
    result section focuses on evaluating the proposed system''s performance in the
    context of IoT-enabled smart agriculture. The evaluation is conducted using a
    combination of Enhanced Crow Swarm Optimization and improved fuzzy logic to optimize
    cluster head selection and route selection. Various key parameters are assessed
    to gauge the system''s effectiveness, which includes throughput, packet delivery
    ratio (PDR), delay, and energy efficiency. The section also discusses the fitness
    function used for optimization, which is determined by factors such as energy
    balance, the quantity of cluster heads, total distance for intra-cluster communications,
    and overall distance between cluster heads and the base station. The fitness function
    is optimized through fuzzy logic and the Whale Optimization Algorithm. The results
    are then compared for different cluster scenarios to determine how the system''s
    performance changes as the number of clusters increases. The study also highlights
    the significance of throughput, PDR, delay, and energy efficiency as critical
    performance metrics, providing equations and explanations for each. It includes
    a comparison of the proposed system''s performance with other existing approaches,
    demonstrating that the proposed system achieves superior results in terms of throughput,
    PDR, delay, and energy efficiency when compared to EQSR, E2S-DRL, and QSEAP. Using
    ECSO and improved fuzzy logic, the Cluster Head selection and route selection
    are optimized. To choose the best cluster head, fuzzy logic is utilized to assess
    important factors including energy, range, overhead, trustworthiness, and node
    degree. The best data transfer route is then determined using ECSO depending on
    the chosen cluster head. Simulations are carried out in Matlab R2016b on an Intel
    Core i7-1065G7 computer running at 1.30 GHz and with 8 GB of RAM. Throughput,
    packet delivery ratio, latency/delay, and energy efficiency are used to evaluate
    it. Figures 4, 8, 12, 16, and 20 depict the randomly distributed sensor node has
    been grouped into cluster based various node conditions (K = 5, 10, 15, 20 & 25).
    Figures 5, 9, 13, 17, and 21 depict the cluster head selection of various node
    conditions. Figures 6,  10, 14, 18, and 22, and depict the best route selection
    for various node conditions. Figures 7,  11, 15, 19, and 23 depict the throughput,
    PDR, delay and energy efficiency analysis for various node conditions. Fig. 4
    Analysing randomly distributed sensor node grouped into cluster (K = 5) Full size
    image Fig. 5 Analysing cluster head selection for K = 5 Full size image Fig. 6
    Analysing best route from selected cluster head for K = 5 Full size image Fig.
    7 Various performance analyses for cluster head K = 5 Full size image Fig. 8 Analysing
    randomly distributed sensor node grouped into cluster (K = 10) Full size image
    Fig. 9 Analysing cluster head selection for K = 10 Full size image Fig. 10 Analysing
    best route from selected cluster head for K = 10 Full size image Fig. 11 Various
    performance analyses for cluster head K = 10 Full size image Fig. 12 Analysing
    randomly distributed sensor node grouped into cluster (K = 15) Full size image
    Fig. 13 Analysing cluster head selection for K = 15 Full size image Fig. 14 Analysing
    best route from selected cluster head for K = 15 Full size image Fig. 15 Various
    performance analyses for cluster head K = 15 Full size image Fig. 16 Analysing
    randomly distributed sensor node grouped into cluster (K = 20) Full size image
    Fig. 17 Analysing cluster head selection for K = 20 Full size image Fig. 18 Analysing
    best route from selected cluster head for K = 20 Full size image Fig. 19 Various
    performance analyses for cluster head K = 20 Full size image Fig. 20 Analysing
    randomly distributed sensor node grouped into cluster (K = 25) Full size image
    Fig. 21 Analysing cluster head selection for K = 25 Full size image Fig. 22 Analysing
    best route from selected cluster head for K = 25 Full size image Fig. 23 Various
    performance analyses for cluster head K = 25 Full size image The number of clusters
    into which the nodes have been divided into K = 5 in this scenario. A popular
    method for clustering sensor nodes based on their proximity to one another and
    the similarity of the data they gather is the K-means clustering algorithm. The
    algorithm operates by updating the cluster centres based on the updated assignments
    after repeatedly allocating nodes to the closest cluster centre. For effective
    data collection and transmission in a sensor network, the cluster head selection
    procedure is crucial. There are five clusters in the context of K-means clustering
    with K = 5, and each cluster requires a cluster head. There are several methods
    for choosing a cluster head, including picking a node at random from the cluster,
    choosing the node with the greatest energy, and choosing the node with the most
    connections to other nodes. Each cluster in the context of K-means clustering
    with K = 5 has a cluster head who acts as the coordinator for the cluster''s nodes.
    The cluster head oversees gathering data from the nodes and sending it to the
    base station or another cluster head at a higher level. The performance of the
    network may be assessed using many metrics such as throughput, packet delivery
    ratio, latency, and energy efficiency in a wireless sensor network with K-means
    clustering and K = 5. These metrics can provide information about the network''s
    performance and efficiency, as well as point out areas that could want improvement.
    Iteration vs. Throughput: Throughput describes the volume of data that can be
    sent across a network in a specific length of time. We may assess the network''s
    performance over time by charting throughput versus the number of rounds. If the
    throughput grows over time, the network is functioning effectively and has the
    capacity to handle more data. Throughput fluctuations over time may be a sign
    of congestion or other problems that are affecting the network''s performance.
    Iteration vs. Packet Delivery Ratio: The packet delivery ratio measures the proportion
    of packets that reach their destination without error. We may assess the network''s
    dependability over time by charting PDR versus the number of iterations. The network
    is dependable and capable of transmitting data successfully if the PDR is high
    and consistent throughout time. The network''s dependability may be affected by
    problems like packet loss or interference if the PDR is low or fluctuates dramatically
    over time. Iteration vs. Delay: The duration of the data transmission from the
    source node to the destination node is referred to as the iteration. We may assess
    the network''s speed and effectiveness over time by charting latency versus the
    number of iterations. The network is effective and capable of sending data fast
    if the delay is small and consistent across time. The performance of the network
    may be impacted by problems like interference or congestion if the delay is substantial
    or fluctuates dramatically over time. Energy efficiency vs. Iteration: The quantity
    of data that may be transferred over the network per unit of energy consumption
    is referred to as energy efficiency. We may assess the network''s energy usage
    and efficiency over time by displaying energy efficiency versus the number of
    repetitions. The network is energy-efficient and can transport data with little
    energy if the energy efficiency is good and consistent across time. Low energy
    efficiency or substantial fluctuations over time might be an indicator of network
    performance problems like high energy consumption or ineffective routing. The
    algorithm will try to cluster the sensor nodes into 10 clusters based on their
    closeness to one another if K is set to 10. Each data point is iteratively allocated
    to the closest centroid (or cluster centre) in the K-means clustering method,
    which then updates the centroids based on the mean of the data points assigned
    to each cluster. In a wireless sensor network with K-means clustering and K = 10,
    the selection of cluster heads is an important step in the clustering process.
    Cluster heads are responsible for managing and coordinating the nodes within their
    respective clusters, collecting data from the nodes, and transmitting it to the
    base station or higher-level cluster head. The choice of the optimum path from
    a chosen cluster head to the base station or higher-level cluster head is a crucial
    component of network performance in a wireless sensor network with K-means clustering
    and K = 10. Throughput, packet delivery ratio, and latency metrics may all be
    impacted by the optimum route choice. The performance of the network may be assessed
    using a variety of metrics in a wireless sensor network with K-means clustering
    and K = 10. Following are some typical performance evaluations for cluster heads
    with K = 10. These performance evaluations can assist network designers in tailoring
    the network to meet various needs, including high throughput, dependable packet
    delivery, minimal latency, and energy economy. They can also aid in locating performance
    bottlenecks and potential areas for development. The sensor nodes in a wireless
    sensor network with K = 15 and K-means clustering are divided into 15 clusters
    according to their location and other characteristics like energy level, data
    type, or application. With the help of clustering, networks may operate more effectively
    and efficiently while using less power. The choice of cluster heads is a crucial
    component of network performance in a wireless sensor network with K-means clustering
    and K = 15. The cluster heads are in charge of directing data to the base station
    or a higher-level cluster head and overseeing communication within their own clusters.
    Metrics like as throughput, packet delivery ratio, and energy efficiency can be
    impacted by the choice of cluster heads. Analysis of the optimum path from a chosen
    cluster head for K = 15 is shown in Fig. 14. However, in a wireless sensor network
    with K-means clustering and K = 15, the optimum path from a chosen cluster head
    can typically be established using a variety of routing techniques. The performance
    of the network may be assessed using a variety of metrics in a wireless sensor
    network with K-means clustering and K = 15. The following are some typical performance
    evaluations for cluster head K = 15. The sensor nodes in a wireless sensor network
    with K = 20 and K-means clustering are divided into 20 clusters according to their
    location and other characteristics like energy level, data type, or application.
    With 20 clusters as opposed to K = 5, K = 10, or K = 15, the clustering procedure
    remains the same. The cluster head selection procedure is a crucial component
    of network performance in a wireless sensor network with K-means clustering and
    K = 20. The cluster heads oversees directing data to the base station or a higher-level
    cluster head and overseeing communication within their own clusters. Using routing
    methods like shortest path, energy-aware routing, or multi-path routing, the optimum
    path from a chosen cluster head may be found in a wireless sensor network using
    K-means clustering and K = 20. The optimum route will be determined by a few variables,
    including network structure, node location, and data transmission needs. The performance
    of the network may be assessed using measures such as throughput vs. iteration,
    packet delivery ratio vs. iteration, latency vs. iteration, and energy efficiency
    vs. iteration in a wireless sensor network with K-means clustering and K = 20.
    These measurements aid in determining how effectively, efficiently, and quickly
    the network can transport data. The analysis may be used to tailor the network
    to meet certain needs, like increasing throughput or reducing energy use. The
    sensor nodes in a wireless sensor network with K = 25 and K-means clustering are
    divided into 25 clusters according to location, energy level, data type, or application.
    By lowering communication overhead and energy consumption, the clustering process
    seeks to increase network performance and efficiency. Various techniques and criteria,
    including shortest path, energy-aware routing, and multi-path routing, can be
    used to choose cluster heads and the optimal routes from them. Metrics like as
    throughput, packet delivery ratio, latency, and energy efficiency can be used
    to gauge the network''s performance. The cluster head selection procedure in a
    wireless sensor network with K-means clustering and K = 25 selects a node from
    each cluster to serve as the central communication node. The decision may be made
    considering a number of variables, including the node''s location, residual energy
    level, degree, or proximity to the base station. The cluster head oversees directing
    data to base station or higher-level cluster heads and overseeing communication
    within its cluster. By lowering communication overhead and energy use, choosing
    an effective cluster head can enhance network performance. Using several routing
    methods such shortest path, energy-aware routing, or multi-path routing, the optimum
    route from a chosen cluster head may be found in a wireless sensor network using
    K-means clustering and K = 25. The optimum route is chosen based on a few variables,
    including network structure, node location, and data transfer needs. The path
    should enable reliable data transfer with a minimum amount of latency, minimize
    energy usage, and lower communication overhead. The network''s unique needs and
    the type of data being delivered determine which routing method is used. In the
    context of clustering algorithms, K refers to the number of clusters or groups
    that data points are partitioned into. In this case, K = 25 means that the data
    has been divided into 25 clusters or groups. Performance analyses for cluster
    head K = 25 typically involve evaluating the quality of the clustering results,
    as well as the efficiency and scalability of the algorithm used to generate the
    clusters. 5.1 Fitness function An individual''s capacity for survival is influenced
    by their fitness level. Depending on a fitness function, the fitness value of
    every person is determined. The following four parameters make up the fitness
    function in this study. Balance of Energy (Er) The quantity of Cluster Heads (NCH)
    Total Distance for Intra-cluster Communications (TIC) Distance overall between
    Cluster Heads and Base Station (TBSD) The value of the last element depends on
    the initial one. The overall range between fewer cluster heads and the base station
    is also less, however the total distance for interaction inside the cluster is
    longer. A larger amount of cluster heads has a generally lower range for intra-cluster
    interaction but a greater average distance from cluster heads to base station.
    The fitness function obtained when fuzzy is optimized with WOA. Equation (12)
    depicts fitness function, $${\\text{Fitness Function}} = w1 * Er + w2 * N_{{\\text{CH
    }}} + w3 * T_{{{\\text{IC}}}} + w4 * T_{{{\\text{BSD}}}}$$ (16) where, Fitness
    is the fitness value that we want to optimize. w1, w2, w3, and w4 are weighting
    factors that represent the importance of each parameter. These weights can be
    adjusted based on the specific requirements of your optimization. Er is the balance
    of energy. \\(N_{{\\text{CH }}}\\) is the quantity of Cluster Heads. \\(T_{{{\\text{IC}}}}\\)
    is the total distance for intra-cluster communications. \\(T_{{{\\text{BSD}}}}\\)
    is the distance overall between Cluster Heads and the Base Station. When the fitness
    function has been scaled, the study''s fitness value is represented by Eq. (13):
    $$f = {\\text{Er}} + \\left( {K - N_{{{\\text{CH}}}} } \\right) + \\frac{{T_{{{\\text{IC}}}}
    }}{K} + \\frac{{T_{{{\\text{BSD}}}} }}{K}$$ (17) K indicates the total number
    of nodes in the network. The fitness function demonstrates that reducing the overall
    distance between cluster heads and base stations is given higher priority. Table
    2 depicts the fitness value of the proposed system and its performance evaluation
    is represented in Fig. 24. Table 2 Fitness value of the proposed system Full size
    table Fig. 24 Fitness analysis of each cluster node Full size image Table 1 shows
    that if the number of cluster nodes grew, the system''s fitness value also increased.
    The fitness value typically reflects how well the clustering algorithm has separated
    the data into distinct groups or clusters, with higher values indicating better
    separation. It is important to note that the optimal number of clusters can vary
    depending on the specific data and problem being addressed. Therefore, it is recommended
    to evaluate the clustering algorithm for different numbers of clusters and choose
    the one that provides the best results based on the fitness value and other performance
    metrics. 5.2 Throughput (T) The entire quantity of packets transferred from a
    sender to a recipient in a predetermined period of time is known as throughput.
    Since the data these messages correspond to might be supplied across a logical
    or physical connection or it could travel by a specific network node, it often
    reduces as the quantity of nodes grows. The standard unit of measurement for throughput
    is bits per sec (bit/s or bps), while it can also refer to information packets
    per second or data packets per time frame. The value of successfully delivered
    messages via a communication connection is known as throughput. Table 3 depicts
    the proposed system throughput (T) value comparison for different iteration and
    its performance evaluation is represented in Fig. 25. It provides information
    about how quickly data is effectively transmitted to the base station and is provided
    by Eq. (18). $$T = \\left( {\\frac{{P_{d} \\times P_{s} }}{{P_{t} }}} \\right)$$
    (18) Table 3 Compute throughput of the proposed system Full size table Fig. 25
    Performance assessment of throughput in each iteration Full size image The delivered
    packets are denoted by Pd. Pt is the time it takes to distribute the packets,
    and Ps is the volume of the packet. 5.3 Packet delivery ratio (PDR) It shows the
    proportion between the overall amounts of packets the base station receives and
    the entire quantity of packets every node send. The higher the PDR number, which
    is often expressed as a percentage, the better it is thought to be. Table 4 depicts
    the proposed system packet delivery ratio comparison for different iteration and
    its performance assessment is represented in Fig. 26. The suggested approach has
    a higher percentage of packets delivered since it has a large throughput which
    is represented in Eq. (19). $${\\text{PDR}} = \\left( {\\frac{{P_{r} \\times 100}}{{\\sum\\nolimits_{k
    = 1}^{m} {P_{g} } }}} \\right)$$ (19) whereas, Pg is the entire number of packets
    created by the source nodes, m refers to the amount of sensor nodes, and Pr is
    the entire number of packets obtained by the sensor nodes. Table 4 Compute the
    packet delivery ratio of the proposed system Full size table Fig. 26 Performance
    assessment of PDR in each iteration Full size image 5.4 Delay (D) The duration
    required for a packet of data to travel from one specified location to another
    is known as packet delay. It depends on the speed of the communication system,
    including such copper cable, optical fibre, or radio signals, as well as the transmission
    delay made by devices along the way, such as routers and modems. Table 5 depicts
    the proposed system delay/latency comparison for different iteration and its performance
    assessment is represented in Fig. 27. Increasing system efficiency is indicated
    by a little latency. Mathematically, the entire network latency that occurs during
    communication is represented in Eq. (20): $$D = \\left( {\\frac{{\\sum\\nolimits_{k
    = 1}^{{P_{r} }} {\\left( {T_{rk} - T_{rg} } \\right)} }}{{P_{r} }}} \\right)$$
    (20) where Trg is the timeframe when every source node generates a data packet
    and Trk is the timeframe at which the sensor node receives a data packet. Table
    5 Compute the delay/latency of the proposed system Full size table Fig. 27 Performance
    assessment of delay in each iteration Full size image 5.5 Energy consumption efficiency
    (E) The total of the received energy multiplied by the total amount of nodes and
    the transmitted energy is the energy consumption (E) assessment which is calculated
    by using Eq. (21). Table 6 depicts the proposed system efficiency comparison for
    different iteration and its performance assessment is represented in Fig. 28.
    $$E = \\left( {E_{r} \\times N} \\right) + E_{t}$$ (21) where N represents the
    total number of nodes, Er is the receiving energy, and Et is the transmitting
    energy. Table 6 Compute the energy efficiency of the proposed system Full size
    table Fig. 28 Performance assessment of energy efficiency in each iteration Full
    size image 5.6 Comparison of proposed system with other existing approaches To
    evaluate the efficacy of the suggested system in terms of throughput, PDR, delay,
    and energy efficiency in comparison to other existing approaches like EQSR, E2S-DRL,
    and QSEAP. Table 7 compares the proposed system with other current methods using
    a variety of performance criteria. Table 7 Compute the proposed system with other
    existing work Full size table Figure 29 depicts the throughput for the suggested
    technique and the other three current methods after conducting a throughput study.
    The suggested approach''s throughput is 3% higher than that of its nearest approach,
    OSEAP. Because to congestion brought on by individual nodes that aren''t part
    of clusters, the graph shows that the EQSR has the poorest throughput. By using
    goal functions for many parameters like energy, distance link quality, etc., the
    suggested solution has resolved the issue. Fig. 29 Throughput performance analyses
    of proposed system with other existing approach Full size image Figure 30 shows
    the network latency in seconds for the three methods and suggested approach. The
    bar charts in Fig. 30 were created using data from Table 6, which displays the
    average delay rates for each of the four strategies. It should be noted that the
    highest average latency for the suggested technique in a network with 20 nodes
    is 0.11 s. When the size of the network grows, the latency for the other methods
    also grows. Fig. 30 Delay performance analyses of proposed system with other existing
    approach Full size image Figure 31 depicts the energy efficiency for the suggested
    technique and the other three current methods after conducting an efficiency study.
    The suggested approach''s energy efficiency is higher than other approaches. The
    graph shows that the OSEAP and EQSR have the poorest energy efficiency approach.
    Fig. 31 Energy performance analyses of proposed system with other existing approach
    Full size image 6 Conclusion In conclusion, the proposed approach using modified
    Fuzzy Logic, whale optimization algorithm, and Enhanced Crow Swarm Optimization
    can effectively optimize the CH selection and path selection for IoT-enabled smart
    agriculture systems. Throughput reflects the data transmission capacity, ensuring
    that a cluster head can efficiently handle and relay information. A high Packet
    Delivery Ratio indicates the cluster head''s effectiveness in successfully delivering
    data packets to their intended destinations, reducing wasteful retransmissions.
    Minimal network Delay highlights the promptness of data delivery, ensuring that
    critical information reaches its destination without undue latency. Energy Efficiency,
    as a fundamental criterion, signifies how effectively a cluster head utilizes
    its resources, including energy, to perform its tasks. An energy-efficient cluster
    head should maximize data transmission and minimize energy consumption, ultimately
    prolonging the network''s operational life. By evaluating relevant parameters
    and employing optimization algorithms, the proposed approach can improve the performance
    of the system in terms of throughput, packet delivery ratio, delay, and energy
    efficiency. The results of the simulation experiments demonstrate the superiority
    of suggested approach over existing ones, which highlights its potential to revolutionize
    the way farmers monitor and manage their crops. By optimizing the IoT system,
    proposed approach can lead to better crop yield and higher profitability for farmers,
    making it a promising solution for smart agriculture. In the future, to improve
    the usability of the proposed approach, a user-friendly interface can be developed
    that allows farmers and other stakeholders to easily interact with the system,
    visualize data, and make informed decisions. This can help to increase adoption
    and usage of the system, leading to more effective and efficient agricultural
    practices. Availability of data and materials Not Applicable. References “Renewable
    Energy Integration Into Cloud & IoT-Based Smart Agriculture | IEEE Journals &
    Magazine | IEEE Xplore.” Accessed: Apr. 05, 2023. [Online]. Available: https://ieeexplore.ieee.org/abstract/document/9662338
    Sinha BB, Dhanalakshmi R (2022) Recent advancements and challenges of Internet
    of Things in smart agriculture: a survey. Future Gener Comput Syst 126:169–184.
    https://doi.org/10.1016/j.future.2021.08.006 Article   Google Scholar   Awan SH
    et al (2020) BlockChain with IoT, an emergent routing scheme for smart agriculture.
    Int J Adv Comput Sci Appl 11(4). https://doi.org/10.14569/IJACSA.2020.0110457.
    “Nature-inspired algorithm-based secure data dissemination framework for smart
    city networks | SpringerLink.” Accessed: Apr. 05, 2023. [Online]. Available: https://doi.org/10.1007/s00521-020-04900-z
    Nagaraja GS, Soppimath AB, Soumya T, Abhinith A (2019) IoT based smart agriculture
    management system. In: 2019 4th International Conference on Computational Systems
    and Information Technology for Sustainable Solution (CSITSS), pp. 1–5. https://doi.org/10.1109/CSITSS47250.2019.9031025.
    Ayaz M, Ammad-Uddin M, Sharif Z, Mansour A, Aggoune E-HM (2019) Internet-of-Things
    (IoT)-Based smart agriculture: toward making the fields talk. IEEE Access 7:129551–129583.
    https://doi.org/10.1109/ACCESS.2019.2932609 Article   Google Scholar   Salam A,
    Shah S (2019) Internet of Things in smart agriculture: enabling technologies.
    In: 2019 IEEE 5th World Forum on Internet of Things (WF-IoT), pp. 692–695. https://doi.org/10.1109/WF-IoT.2019.8767306.
    Suma V (2021) “Internet of Things (IoT) based smart agriculture in India: an overview.
    J ISMAC 3(1):1–15. https://doi.org/10.36548/jismac.2021.1.001. Poornima MR, Vimala
    HS, Shreyas J (2023) Holistic survey on energy aware routing techniques for IoT
    applications. J Netw Comput Appl 213:103584. https://doi.org/10.1016/j.jnca.2023.103584.
    Kaur N, Aulakh IK, Tharewal S, Keshta I, Rahmani AW, Ta TD (2022) Enhanced route
    discovery mechanism using improved CH selection using Q-learning to minimize delay.
    Sci Program 2022:1–25. https://doi.org/10.1155/2022/3187858 Article   Google Scholar   “Enhanced
    Differential Crossover and Quantum Particle Swarm Optimization for IoT Applications
    | IEEE Journals & Magazine | IEEE Xplore.” Accessed: Apr. 05, 2023. [Online].
    Available: https://ieeexplore.ieee.org/abstract/document/9466498 “Development
    of IoT for Smart Agriculture a Review | SpringerLink.” Accessed: Apr. 05, 2023.
    [Online]. Available: https://doi.org/10.1007/978-981-13-2285-3_50 Chaganti R,
    Varadarajan V, Gorantla VS, Gadekallu TR, Ravi V (2022) Blockchain-based cloud-enabled
    security monitoring using Internet of Things in smart agriculture. Future Internet
    14(9). https://doi.org/10.3390/fi14090250. Lu W et al (2021) Energy efficiency
    optimization in SWIPT enabled WSNs for smart agriculture. IEEE Trans Ind Inform
    17(6):4335–4344. https://doi.org/10.1109/TII.2020.2996672 Article   Google Scholar   Sinha
    A, Shrivastava G, Kumar P (2019) Architecting user-centric internet of things
    for smart agriculture. Sustain Comput Inform Syst 23:88–102. https://doi.org/10.1016/j.suscom.2019.07.001
    Article   Google Scholar   Rao SS, Reddy KCK, Chand SR (2022) A novel optimization
    based energy efficient and secured routing scheme using SRFIS-CWOSRR for wireless
    sensor networks. Int J Electr. Electron Res 10(3):644–650. https://doi.org/10.37391/ijeer.100338.
    Wang P, Hafshejani BA, Wang D (2021) An improved multilayer perceptron approach
    for detecting sugarcane yield production in IoT based smart agriculture. Microprocess
    Microsyst 82:103822. https://doi.org/10.1016/j.micpro.2021.103822 Article   Google
    Scholar   Kumar A, Dhaliwal BS, Singh D (2023) CL‐HPWSR: Cross‐layer‐based energy
    efficient cluster head selection using hybrid particle swarm wild horse optimizer
    and stable routing in IoT‐enabled smart farming applications. Trans Emerg Telecommun
    Technol 34(3). https://doi.org/10.1002/ett.4725. Mahajan HB, Junnarkar AA, Tiwari
    M, Tiwari T, Upadhyaya M (2022) LCIPA: lightweight clustering protocol for industry
    4.0 enabled precision agriculture. Microprocess Microsyst 94:104633. https://doi.org/10.1016/j.micpro.2022.104633
    Article   Google Scholar   Chavan VG, Gadekar A (2022) A novel intelligent robust
    optimized dynamic and efficient cluster (NIRODEC) based routing protocol for IoT
    assisted precision agriculture”, presented at the The 2nd Universitas Lampung
    international conference on science, technology, and environment (ULICoSTE), 2021
    Bandar Lampung Indonesia, 070016. https://doi.org/10.1063/5.0106967 Sehrawat V,
    Goyal SK (2023) NaISEP: neighborhood aware clustering protocol for WSN assisted
    IOT network for agricultural application. Wirel Pers Commun, pp 1–16. Khan AI,
    Alsolami F, Alqurashi F, Abushark YB, Sarker IH (2022) Novel energy management
    scheme in IoT enabled smart irrigation system using optimized intelligence methods.
    Eng Appl Artif Intell 114:104996. https://doi.org/10.1016/j.engappai.2022.104996
    Article   Google Scholar   Mahajan HB, Badarla A, Junnarkar AA (2021) CL-IoT:
    cross-layer Internet of Things protocol for intelligent manufacturing of smart
    farming. J Ambient Intell Humaniz Comput 12(7):7777–7791. https://doi.org/10.1007/s12652-020-02502-0
    Article   Google Scholar   Agrawal H, Dhall R, Iyer KSS, Chetlapalli V (2020)
    An improved energy efficient system for IoT enabled precision agriculture. J Ambient
    Intell Humaniz Comput 11(6):2337–2348. https://doi.org/10.1007/s12652-019-01359-2
    Article   Google Scholar   Haseeb K, Ud Din I, Almogren A, Islam N (2020) An energy
    efficient and secure IoT-based WSN framework: An application to smart agriculture.
    Sensors 20(7):2081. Qohar AL, Suharjito S (2022) Smart agriculture for optimizing
    photosynthesis using internet of things and fuzzy logic. Int J Electr Comput Eng
    IJECE 12(5):5467. https://doi.org/10.11591/ijece.v12i5.pp5467-5480. Al-Jemeli
    M, Hussin FA (2014) An energy efficient cross-layer network operation model for
    IEEE 802.15. 4-based mobile wireless sensor networks. IEEE Sens J 15(2):684–692.
    https://doi.org/10.1109/JSEN.2014.2352041 Article   Google Scholar   Sinde R,
    Begum F, Njau K, Kaijage S (2020) Refining network lifetime of wireless sensor
    network using energy-efficient clustering and DRL-based sleep scheduling. Sensors
    20(5):1540. https://doi.org/10.3390/s20051540 Article   Google Scholar   Reddy
    PK, Babu R (2017) An evolutionary secure energy efficient routing protocol in
    Internet of Things. Int J Intell Eng Syst 10(3):337–346 Google Scholar   Download
    references Funding Not Applicable. Author information Authors and Affiliations
    School of Computer Science Engineering and Information Systems (SCORE), Vellore
    Institute of Technology, Vellore, India Senthil Kumar Chandrasekaran & Vijay Anand
    Rajasekaran Contributions SKC prepared the main manuscript and VAR guided throughout
    the system design, analysis, Figures. All authors read and approved the final
    manuscript. Corresponding author Correspondence to Vijay Anand Rajasekaran. Ethics
    declarations Conflict of interest The authors declare no competing interests.
    Ethical approval Not Applicable. Additional information Publisher''s Note Springer
    Nature remains neutral with regard to jurisdictional claims in published maps
    and institutional affiliations. Rights and permissions Springer Nature or its
    licensor (e.g. a society or other partner) holds exclusive rights to this article
    under a publishing agreement with the author(s) or other rightsholder(s); author
    self-archiving of the accepted manuscript version of this article is solely governed
    by the terms of such publishing agreement and applicable law. Reprints and permissions
    About this article Cite this article Chandrasekaran, S.K., Rajasekaran, V.A. Energy-efficient
    cluster head using modified fuzzy logic with WOA and path selection using enhanced
    CSO in IoT-enabled smart agriculture systems. J Supercomput (2024). https://doi.org/10.1007/s11227-023-05780-5
    Download citation Accepted 02 November 2023 Published 20 January 2024 DOI https://doi.org/10.1007/s11227-023-05780-5
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Cluster head Internet of things Enhanced crow swarm optimization
    Whale optimization algorithm Fuzzy logic Use our pre-submission checklist Avoid
    common mistakes on your manuscript. Sections Figures References Abstract Introduction
    Related work Problem statement Proposed method for CH and path selection in IoT
    Results and discussion Conclusion Availability of data and materials References
    Funding Author information Ethics declarations Additional information Rights and
    permissions About this article Advertisement Discover content Journals A-Z Books
    A-Z Publish with us Publish your research Open access publishing Products and
    services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.222 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: Chandrasekaran & Rajasekaran  63
  journal: Journal of Supercomputing
  limitations: The paper is mainly focused on the optimization of CH selection and
    path selection for IoT-enabled smart agriculture systems. It does not provide
    a detailed analysis of other important aspects of IoT-enabled smart agriculture
    systems, such as data security and privacy, network connectivity, and sensor deployment.
    Additionally, the paper does not provide a comprehensive comparison of the proposed
    approach with other existing approaches in terms of scalability, robustness, and
    adaptability to different IoT-enabled smart agriculture scenarios.
  needs_work: false
  relevance_score: 0.9433962264150944
  relevance_score1: 0
  relevance_score2: 0
  title: Energy-efficient cluster head using modified fuzzy logic with WOA and path
    selection using enhanced CSO in IoT-enabled smart agriculture systems
  verbatim_quote1: '"The proposed system demonstrates substantial advantages in terms
    of throughput, with a remarkable throughput value of 68 Mbps, outperforming the
    other methods, including EQSR (12.5 Mbps), E2S-DRL (60 Mbps), and OSEAP."'
  verbatim_quote2: '"The packet delivery ratio (PDR) is also significantly higher
    for the proposed system, reaching 90.9%."'
  verbatim_quote3: '>'
- analysis: This study introduces a novel IoT-driven SPMS that leverages LoRaWAN technology,
    termed as IoT-SPMS-LoRaWAN, to overcome restrictions related to communication
    range, energy usage, and implementation cost. IoT-SPMS-LoRaWAN features intelligent
    sensing nodes that incorporate an Arduino UNO microcontroller and two sensors—a
    triaxial magnetic sensor and a waterproof ultrasonic sensor. LoRa technology enables
    extensive network coverage and energy efficiency. Users receive real-time parking
    availability updates via an accessible graphical user interface. The system operates
    independently, powered by a solar-powered rechargeable battery. Tests validate
    functionality, ease of use, reliable data transmission, and precision. Urban implementation
    is expected to improve parking management and utilization and increase user awareness
    of available parking spaces.
  authors:
  - Jabbar W.A.
  - Tiew L.Y.
  - Ali Shah N.Y.
  citation_count: '3'
  description: As the Internet of Things (IoT) evolves, it paves the way for vital
    smart city applications, with the Smart Parking Management System (SPMS) standing
    as a prime example. This research introduces a novel IoT-driven SPMS that leverages
    Long Range Wide Area Network (LoRaWAN) technology, termed as IoT-SPMS-LoRaWAN,
    to surmount typical restrictions related to communication range, energy usage,
    and implementation cost seen in traditional systems. IoT-SPMS-LoRaWAN features
    intelligent sensing nodes that incorporate an Arduino UNO microcontroller and
    two sensors—a triaxial magnetic sensor and a waterproof ultrasonic sensor. These
    components collaboratively detect vehicle occupancy and transmit this data to
    the server via a LoRaWAN gateway. Notably, the integration of LoRa technology
    enables extensive network coverage and energy efficiency. Users are provided with
    real-time updates on parking availability via the accessible AllThingsTalk Maker
    graphical user interface. Additionally, the system operates independently, sustained
    by a solar-powered rechargeable battery. Practical testing of IoT-SPMS-LoRaWAN
    under various scenarios validates its merits in terms of functionality, ease of
    use, reliable data transmission, and precision. Its urban implementation is expected
    to alleviate traffic congestion, optimize parking utilization, and elevate awareness
    about available parking spaces among users. Primarily, this study enriches the
    realm of smart city solutions by enhancing the efficiency of parking management
    and user experience via IoT.
  doi: 10.1016/j.iotcps.2023.09.001
  full_citation: Internet of things enabled parking management system using long range
    wide area network for smart city
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related works 3. System modelling,
    design, and fabrication 4. System development and implementation 5. Experimental
    results 6. Conclusions and future work Declaration of competing interest References
    Show full outline Cited by (3) Figures (19) Show 13 more figures Tables (2) Table
    Table 1 Internet of Things and Cyber-Physical Systems Volume 4, 2024, Pages 82-98
    Internet of things enabled parking management system using long range wide area
    network for smart city Author links open overlay panel Waheb A. Jabbar a, Lu Yi
    Tiew b, Nadiah Y. Ali Shah b Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.iotcps.2023.09.001
    Get rights and content Under a Creative Commons license open access Abstract As
    the Internet of Things (IoT) evolves, it paves the way for vital smart city applications,
    with the Smart Parking Management System (SPMS) standing as a prime example. This
    research introduces a novel IoT-driven SPMS that leverages Long Range Wide Area
    Network (LoRaWAN) technology, termed as IoT-SPMS-LoRaWAN, to surmount typical
    restrictions related to communication range, energy usage, and implementation
    cost seen in traditional systems. IoT-SPMS-LoRaWAN features intelligent sensing
    nodes that incorporate an Arduino UNO microcontroller and two sensors—a triaxial
    magnetic sensor and a waterproof ultrasonic sensor. These components collaboratively
    detect vehicle occupancy and transmit this data to the server via a LoRaWAN gateway.
    Notably, the integration of LoRa technology enables extensive network coverage
    and energy efficiency. Users are provided with real-time updates on parking availability
    via the accessible AllThingsTalk Maker graphical user interface. Additionally,
    the system operates independently, sustained by a solar-powered rechargeable battery.
    Practical testing of IoT-SPMS-LoRaWAN under various scenarios validates its merits
    in terms of functionality, ease of use, reliable data transmission, and precision.
    Its urban implementation is expected to alleviate traffic congestion, optimize
    parking utilization, and elevate awareness about available parking spaces among
    users. Primarily, this study enriches the realm of smart city solutions by enhancing
    the efficiency of parking management and user experience via IoT. Previous article
    in issue Next article in issue Keywords LoRaLoRaWANParking managementSmart parkingSmart
    cityTTN 1. Introduction Parking availability in almost every suburban area is
    always limited, and searching for a vacant parking spot is time-consuming and
    leads to traffic congestion, air pollution, fuel waste, and the frustration of
    drivers [1]. Moreover, the development in the cities leads to many traffic problems,
    where searching for parking slots can cause up to 30% of inner-city traffic congestion
    [2,3]. On the contrary, some parking lots have low utilization rates and are vacant
    most of the time, but no drivers reach such parking lots because of the lack of
    real-time information [4]. Thus, parking slot availability has become a widespread
    problem in urban development, and recently, people''s awareness of the importance
    of parking spaces has increased. Accordingly, using a smart parking management
    system that gathers real-time information about parking spots around the city
    and makes them available to the public is necessary [5]. Thus, this system can
    help match drivers to the available parking slots, save their time, improve utilization
    of parking spots, reduce the cost of parking management, and relieve traffic congestion
    [6]. Considering the aforementioned issues, various smart parking systems (SPSs)
    are founded in the market [7]. SPS comprises barrier gates, controls accessibility,
    and automates parking systems. Therefore, SPS helps to overcome illegal parking,
    and traffic congestion problems, waste time in finding a parking space, and optimization
    of the parking capacity [8]. Sensors for detecting vehicles are usually placed
    in parking spaces to update the drivers with the parking status and allow them
    to secure a vacant parking space conveniently [9]. Some systems also utilize access
    control (tickets or tokens) of the hassle-free payment mechanism to allow a vehicle
    to enter and exit conveniently. Most importantly, the development of the parking-guided
    system plays the biggest role in the newest SPS technology in public or private
    parking areas. To always offer the best system management, the system is continuously
    being further developed. Every year, ongoing developments of new features are
    to be added for successful and updated smart parking management. The reason is
    the influence of the Internet of Things (IoT) paradigm to automize and improve
    our daily lives by utilizing new technologies. IoT utilizes various systems and
    protocols to connect multiple networks of devices and sensors to the Internet
    [10,11]. IoT involves the extension of Internet connectivity beyond standard devices
    to link everyday objects to be remotely monitored and controlled over the Internet.
    The IoT depends on smartphone applications to update data to a central server.
    Thus, IoT improves network scalability, data security, and transmission reliability
    and presents features, such as real-time analysis and event processing. IoT also
    provides historical data trends, alerts, and notifications; in addition, it collects
    device data and turns it into actionable insights [12,13]. The implementation
    of IoT applications and smart infrastructure has affected possibilities for parking.
    According to Ref. [14], parking operators should pay particular attention to customer
    experience, technology and data analytics, location management, efficient pricing
    systems, demand management, and robust cost management. The concept of an IoT-based
    parking system uses sensors to monitor parking slots availability and a graphical
    user interface (GUI) for the end-user to check the parking slot status and book
    it accordingly [15]. Many IoT-based SPSs are proposed in the literature, and some
    are implemented in pioneer Smart City projects for improving urban life by considering
    several social, financial, and environmental aspects. However, most of them have
    limitations in terms of the microcontroller processing capabilities, the sensitivity
    of the detection methods, and the system interface. In addition, most of the implemented
    parking monitoring systems are locally operated and lack real-time information
    to the driver about where to find a parking space [16]. In addition, most of them
    are commonly used in either wired networks or short-range communication technologies
    (Bluetooth, ZigBee, Wi-Fi, and RFID). However, these technologies are not reliable
    in most scenarios of indoor and outdoor parking and have many issues related to
    interference, energy consumption, and limited resources. The evolution of smart
    parking has had many motivations, and among them is the utilization of long-range
    technologies, such as Long-Range Wide Area Network (LoRaWAN) [17,18]. Thus, in
    this study, we propose to implement LoRaWAN into the SPS. LoRa is a patented technology
    for wireless communication of IoT and the LoRaWAN, which is a low-power and wide-area
    networking (LPWAN) protocol with an open specification that supports LoRa technology.
    The topology of LoRaWAN networks is star-of-stars with a gateway that forwards
    the data from the LoRa nodes to the IoT server [19]. The wireless communication
    channel between the nodes and the gateway goes through the LoRa physical layer,
    whereas the gateways and the IoT server are connected through LoRaWAN MAC Layer
    over a backbone IP-based network. The LoRa technology can be easily plugged into
    the conventional infrastructure to enable low-cost, low-data rate and battery-operated
    IoT applications [20]. The LoRa technology supports secure, two-way communication
    for IoT applications that scale to connect millions of potential devices. The
    LoRaWAN protocol was designed with authentication and encryption built into the
    specification itself for security purposes. Single-LoRa gateway devices can handle
    thousands of end devices or nodes. Compared with other IoT, LoRaWAN is a low-power,
    long-range network and has secure data transmission, allowing the system to work
    for a long time and reach any device at a longer distance. This technology may
    be applied to big spaces of parking lots. The conventional parking systems failed
    to provide reliable and real-time information. Data unreliability and low robustness
    in data transmission because of the frequent link failure cause difficulties in
    data collection from malfunctioned sensors, resulting in miscommunication with
    the management server and end-users. Furthermore, the high cost of the market-available
    smart sensing units, implementation and maintenance cost, systems complexity,
    and energy consumption are among the issues in conventional systems. Therefore,
    these constraints should be tackled in any proposed solutions. In addition, more
    efficient, reliable, robust, cost-effective, maintenance-free, and easy-to-deploy
    smart parking units with IoT support should be developed for real-time information
    and data accessibility by drivers and management. The utilization of LPWAN, such
    as LoRa, NB-IoT, and SigFox, is still in its early stages in smart parking applications
    [21]. Hence, the development of smart sensing units for real-time parking monitoring
    and management is based on one of these most advanced wireless technologies highly
    in demand. Overall, most of the SPS includes a sensing unit (controller and sensor)
    with a communication interface, power supply, and a management server. The on-site
    sensing unit is usually deployed in the parking spots to detect vehicle presence
    at the considered parking space. In some systems, Wireless Sensor Networks (WSNs)
    are used to manage the parking and notify end-users about parking slots availability
    through a mobile application GUI. Most of the related studies on parking management
    had constraints related to communication technology and IoT utilization. Although
    some systems applied the WSNs concept in parking monitoring, real-time data updating
    to the Internet is not yet supported. Hence, most of the existing SPSs operate
    locally with a limited area. From another perspective, a few studies applied the
    IoT concept for parking management systems but had some issues related to connectivity
    range, microcontroller processing capabilities, sensing accuracy, energy consumption,
    and cost. This study aims to develop an IoT-based smart parking management system
    by utilizing LPWAN technologies. Smart sensing nodes using a LoRa communication
    interface with an embedded microcontroller will be developed and deployed in the
    parking lots for a real-time update of parking slots status to the IoT platform
    that will be supervised by the management office to allow drivers to find the
    vacant spots easily and efficiently using their smartphones. LoRa is selected
    because it maintains a wide range of network connectivity, consumes low power,
    uses a low data transmission rate, and is license-free sub-GHz. As expected, the
    IoT-based parking system will reduce traffic in the city, particularly in the
    holy sites and improve parking utilization and people''s awareness of parking
    availability. In this study, our emphasis is placed on creating advanced sensing
    nodes utilizing LoRa technology, comprised of dual sensors (ultrasonic and magnetic
    sensors). This design ensures efficient real-time information transfer and extended
    network connectivity range within the targeted area. The sophisticated and efficient
    sensing units will consequently update data to the IoT cloud platform, granting
    real-time access to both drivers and parking management. A LoRa gateway will be
    employed for simultaneous data collection from multiple sensors and subsequent
    transmission to the Internet. An IoT dashboard/GUI will be fashioned to facilitate
    real-time parking data collection for drivers and management personnel. In pursuit
    of these objectives, we design and fabricate a Smart Parking System (SPS) predicated
    on LoRaWAN capable of reaching up to a 10 km range and transmitting sensor data
    to users. Users will be empowered to monitor parking space data from the AllThingsTalk
    Glance GUI at any given time and location. The unique contributions of this work
    encompass the following: (i) Development of an SPS employing LoRaWAN-based IoT
    technology, capable of providing real-time information about the availability
    of both indoor and outdoor parking spaces. This development is projected to enhance
    data transmission reliability, diminish implementation costs, and extend the system
    communication range by enabling parking authorities to implement their own gateways
    for data collection and updates to the IoT server without incurring any data subscription
    charges. (ii) Implementation of a smart sensing unit integrating a three-axis
    digital compass breakout board and a waterproof ultrasonic sensor, linked to an
    Arduino Uno with a LoRa shield and powered by a solar panel via a solar charger
    shield. This configuration is expected to boost data collection accuracy and operation
    sustainability of the developed sensing node. (iii) Introduction of a novel algorithm
    for data collection from both sensors using the Arduino IDE, facilitating data
    acquisition scheduling and data forwarding via a custom-made LoRaWAN gateway.
    This algorithm allows interaction between both sensors, the gateway, The Things
    Network (TTN) platform, and the integrated AllThingsTalk GUI. The new algorithm
    ensures the compatibility of all components to provide real-time information about
    vacant parking slots to drivers. (iv) Fabrication and deployment of the smart
    sensing node and the LoRaWAN gateway along with their configuration in the open-source
    IoT platform, TTN. (v) Validation of functionality and performance of the developed
    LoRaWAN-based system through practical use cases at Universiti Malaysia Pahang
    parking lots. The remainder of this paper is structured as follows. Section II
    reviews the related literature. Section III expounds on the design and modelling
    of the sensor node along with the fabrication process. Section IV delves into
    the details of the developed LoRaWAN SPS architecture, its implementation, and
    its functionalities. Section V deliberates on the results, and finally, Section
    VI offers the conclusion of the study. 2. Related works The advancement of SPSs
    has garnered attention from both academic and industrial sectors due to their
    financial, ecological, and visual effects. A variety of proprietary parking solutions,
    including SmartParking, PlacePod, and Sitraffic Scala, have emerged, offering
    features such as online reservation, fee processing, and dynamic parking maps.
    Nonetheless, their primary limitations are the expensive price point and restricted
    development potential for public developers, as they are not open-source. Numerous
    scholarly reviews have investigated, categorized, and examined the technical components
    of intelligent parking systems [[22], [23], [24], [25]]. The range of associated
    articles tackles various topics such as application and user experience [6,[26],
    [27], [28]], pricing and agreements [[29], [30], [31]], and predicting availability
    and allocation [8,32,33]. Several criteria can be used to categorize these systems,
    such as parking environment, offered services, or primary sensing methods. Parking
    systems can be analyzed and grouped based on essential sensing techniques like
    wireless, mobile, and camera-based systems. This section will only focus on the
    most relevant smart parking solutions to the suggested approach in this article.
    These solutions employ wireless sensor-based systems that use LoRa as the system''s
    network infrastructure, enabling extensive coverage and low power consumption.
    Several studies [[34], [35], [36]] have demonstrated a proof-of-concept implementation
    for a Smart Parking System (SPS) using LoRa infrastructure. The implemented systems
    exhibited efficiency in energy, robustness, and scalability for large-city parking
    monitoring and management. In Ref. [37], an online reservation system was integrated
    with parking lots at Universitas Hasanuddin. Similarly, a LoRa-based SPS was developed
    in Ref. [38], which included sensor modules, a server module, a reservation application,
    and a third-party payment platform. This system was tested in Ningbo and Zhoushan,
    two cities in China''s Zhejiang province, resulting in improved monitoring and
    booking capabilities. However, the LoRa communication''s quality, security, and
    reliability were not evaluated in real parking lots with intricate urban settings.
    In [39], researchers presented a smart parking solution that integrated Libelium
    smart parking sensors, LoRaWAN, and a Kubernetes cluster with MQTT and MongoDB.
    This combination improved the SPS''s availability, scalability, and portability
    by addressing information sharing bottlenecks. The system stored all messages
    in a messaging server for further processing if the primary data collection server
    failed. Another smart parking solution with a pricing algorithm for maximizing
    revenue was proposed in Ref. [40], where the price was dynamically adjusted to
    balance the supply and demand of parking spaces while ensuring a minimum parking
    fee. This solution employed various sensors to detect vehicles and gather contextual
    and environmental data, utilizing edge cloud computing to reduce network load
    and gateway quantity. Other studies aimed to enhance the interoperability of parking
    solutions. The system in Ref. [41] implemented an IoT Gateway Centric Architecture
    [42], enabling real-time interaction between supported sensor devices and/or actuators
    via the LoRa gateway using the LoRa network. The gateway then converted packets
    into a format acceptable by the server, eliminating the need for a network server
    to route packets. Received packets were parsed using Spring functions and processed
    with database data if required before being sent to users. The parking payment
    functions utilized the payment highway API. In Ref. [43], a novel Wise-IoT system
    framework was developed for global interoperability and mobility of IoT applications
    and devices, using different IoT infrastructures (including LoRaWAN) and interoperability
    layers. Implemented in Busan and Santander, the smart parking system in Santander
    could be used in various Busan locations and vice versa. To preserve privacy in
    parking systems [44], proposed an enhanced LoRaWAN security protocol that provided
    basic connectivity functions and addressed security issues. This protocol prevented
    malicious network servers from compromising end-to-end security between a device
    and its application server. The protocol was tested using various tools, demonstrating
    its superiority over two handshake options in terms of network latency and signalling
    overheads. In Ref. [45], a new method using secure elements was proposed to safely
    store keys and process the LoRaWAN protocol. The secure element managed security
    functions like data encryption and message signing and an efficient integrity
    verification method was proposed for the main microcontroller unit based on Secure
    Element. Most SPSs consist of a sensing unit (controller and sensor) with a communication
    interface, power supply, and management server. On-site sensing units are typically
    deployed in parking spaces to detect vehicle presence. Some systems use Wireless
    Sensor Networks (WSNs) to manage parking and notify users about parking slot availability
    via a mobile app GUI. Many studies on parking management faced constraints related
    to communication technology and IoT utilization. Although some systems applied
    the WSNs concept in parking monitoring, real-time data updating to the Internet
    was unsupported, and most existing SPSs operated locally within a limited area.
    A few studies applied the IoT concept for parking management systems but faced
    issues related to connectivity range, microcontroller processing capabilities,
    sensing accuracy, energy consumption, and cost. In this study, we focus on developing
    smart sensing nodes based on LoRa technology, consisting of two sensors (ultrasonic
    and magnetic) to ensure efficient real-time information transfer and extended
    network connectivity. Smarter and more efficient sensing units will update information
    on the IoT cloud platform, accessible by drivers and parking management in real
    time. A LoRa gateway will collect data from multiple sensors simultaneously and
    send it to the Internet, and an IoT dashboard/GUI will enable real-time parking
    data access for drivers and management officers. 3. System modelling, design,
    and fabrication 3.1. Research methodology In the early phase of the research,
    the focus is identifying what are the challenges to be confronted by the Smart
    Parking Management System. With the problems identified, research on potential
    solutions related to the issues had been conducted. All possible sensors, software
    used to develop mobile applications, and microcontrollers that have been used
    in the past and existing prototypes have been surveyed. This section explains
    how the research is conducted based on several phases and plans. This section
    includes the detailed proposed system components and the impact on solving the
    research gap and limitations. Fig. 1 depicts our research methodology flowchart.
    Download : Download high-res image (347KB) Download : Download full-size image
    Fig. 1. Flowchart of research activities. In the first phase, we observe to find
    the limitations of SPSs in the market. Based on the investigation of the previous
    works, the research gaps are identified to be solved through the proposed system.
    Then, we proposed a smart sensor node that combines the IoT paradigm based on
    the LoRaWAN technology with the parking management system. After the equipment
    and materials for SPS are surveyed, the suitable components for harsh weather
    and strong feature are chosen to ensure that these materials can achieve the objectives
    in the modelling phase. A virtual parking lot plan layout is designed as shown
    in Fig. 2 to decide about the place of sensors, gateway, and parking area. Only
    one LoRaWAN gateway will be implemented to receive all the information from the
    sensor as its range can reach up to 10 km. The sensor will be implemented on the
    ground for each parking lot. A LED light is installed on the ceiling for each
    parking lot, which turns green when there is no vehicle in the parking lot. The
    light turns red when there is a vehicle parked inside. The LED light is implemented
    for local indicator purposes. LoRa is chosen as a communication module for SPS.
    A microcontroller with a LoRa interface is used to build the smart sensor node,
    and an ultrasonic sensor with a three-axis magnetic sensor is used for vehicle
    detection. Raspberry Pi has been utilized as a gateway to provide fast data analysis,
    thereby, speeding up the uploading of information to the cloud. The gateway will
    be updated on the data about parking availability in real-time to the IoT platform
    to be accessed by management and drivers. After that, the enhancement optimization
    phase was taken place via many tests virtually and physically. The design and
    modelling phase is followed by the development phase of the smart sensing unit
    to be installed in the parking spots. The proposed smart sensor is implemented
    as an individual unit. The design for the electronic circuits and schematic diagrams
    has been done by using suitable software. Then, the circuit connection among all
    the required components is installed on the breadboard for the initial stage.
    Download : Download high-res image (220KB) Download : Download full-size image
    Fig. 2. Parking lot plan layout (top view). Then, we developed coding to achieve
    the targeted system workflow. This process was followed by the design of the sensing
    node enclosure to finish the product and assemble all components as a unique and
    compact smart sensing unit. After that, several nodes’ prototypes can be developed
    and deployed to form a smart parking testbed that collects data from multiple
    nodes about vacant parking slots in the area under the test and updates information
    to the cloud. The verification and validation of the entire network will be performed.
    Improvement is also performed when needed to ensure system functionality and its
    effectiveness. The test is repeated until the device is ready for practical implementation.
    When the effectiveness of the system is proved via the testbed, the product will
    be finalized, and a series of experiments will be carried out on the final prototype
    to evaluate its performance and analyze the collected data to report the main
    findings. 3.2. System architecture Fig. 3 shows an overview of the system architecture,
    where the Arduino UNO microcontroller in the proposed system gathers data from
    the three-axis magnetic and ultrasonic sensors. This microcontroller can collect
    data and send it to the IoT server by the attached LoRa module. The node is powered
    using a rechargeable battery that is charged by using a solar panel through a
    solar charger shield. TTN is an open-source and secure LoRaWAN IoT server that
    is selected to receive the data payloads from the LoRaWAN gateway. The data transmission
    from the smart occupancy sensor will be verified to TTN and then integrated into
    AllThingsTalk Maker. The users can remotely monitor the parking services information
    available using Internet-connected devices. Both sensors will begin to simultaneously
    collect data on the parking space to ensure data accuracy. Once a car occupies
    the parking lot, it sends information right away to the TTN server through the
    LoRaWAN gateway. The TTN console collects all the messages from the gateway, filters
    out the duplicate information, and then forwards this information to the integration
    platform AllThingsTalk Maker. Immediately, a red LED will light up if the car
    is within a 50-cm radius. Otherwise, the green LED will continuously light up
    until the next car triggered the sensor. The red LED will turn green if the car
    left the parking spot. All the information will be synchronized with the GUI,
    and drivers can conveniently find vacant and occupied parking spaces in real time.
    The duration of parking for each car can be estimated using the ultrasonic sensor
    timer from the time the red LED lights up until it turns green again. This time
    can be used to estimate the parking charges. Thus, drivers will find a more convenient
    way of monitoring parking status, a greener technology advancement experience,
    and better time management from the automated parking service provider. Download
    : Download high-res image (381KB) Download : Download full-size image Fig. 3.
    Overall System architecture. 3.3. Components selection The selection of the components
    required for our system was made after thorough research into similar studies,
    projects, and datasheet specifications. We aimed to ensure the utmost functionality,
    compatibility, and efficiency, which drove our choices of hardware and software.
    The hardware components were selected based on their unique features and abilities
    to fulfil the functions required by our system. The Arduino Uno Rev3 was chosen
    for its flexibility, simplicity, and strong community support, making it an excellent
    base for our smart sensor node. The LoRa-RFM Shield was selected for its superior
    long-range communication capability, critical for data transmission in our SPMS.
    The Solar Charger Shield v2.2 and the Solar Panel were included to provide a sustainable,
    autonomous power source, a necessity for the stand-alone operation of our system.
    The three-axis digital compass breakout board (QMC5993L) was incorporated for
    its accuracy in vehicle detection, and the Waterproof Ultrasonic Module (JSN-SR04T)
    was chosen for its effectiveness in outdoor conditions and durability in various
    weather scenarios. The 3.7 V LiPo rechargeable battery was chosen for its high
    energy density and rechargeable nature, perfectly complementing our solar power
    setup. For the software components, Fritzing software and Proteus Stimulation
    were selected for their usefulness in electronic design and circuit simulation,
    respectively. Arduino IDE software, given its compatibility with our chosen microcontroller,
    was a logical choice for coding and debugging. The Things Network (TTN) server
    was selected for its widespread use and compatibility with LoRaWAN, and AllThingsTalk
    Maker and Glance were chosen for their user-friendly interfaces, allowing for
    efficient data display and interaction. Finally, Solidwork software was chosen
    for its extensive capabilities in 3D modelling, vital for the design and fabrication
    of the sensor node. After the careful selection of these components, we successfully
    designed and fabricated the sensor node, subsequently installing the LoRaWAN gateway,
    hence paving the way for our IoT-SPMS-LoRaWAN system''s functionality. 3.4. Sensor
    circuit design Fig. 4 shows the virtual circuit designed using Fritzing Software.
    The sensor node is equipped with a three-axis digital compass breakout board,
    which acts as a magnetometer to detect the presence of the metal (car) and a waterproof
    ultrasonic sensor to detect the distance and time taken by the car to use the
    parking lot. When the sensors gather the required data, one of the LED lights
    will light up, satisfying the condition predetermined automatically. The update
    of parking lot status along with the locations will eventually be displayed on
    the AllThingsTalk GUI. This real-time update will help the drivers to reduce the
    time and fuel consumed by wandering around. The controller of the smart parking
    sensor is powered by a 5-V USB power source, a 3.7-V rechargeable Lipo battery,
    and a photovoltaic array to ensure the continuity of the system''s operation.
    The LoRa-RFM Shield and Solar Charger Shield v2.2 are stacked together on top
    of the Arduino. Download : Download high-res image (830KB) Download : Download
    full-size image Fig. 4. Sensors implementation on breadboard. Fig. 5 shows the
    simulation of the ultrasonic sensor replacing the waterproof ultrasonic sensor
    because of the limited Proteus library. Only the codes for the waterproof ultrasonic
    sensor were simulated. The distance is fixed to 20 cm in the coding for the red
    LED light to turn on. Otherwise, LED green will light up, indicating that the
    space is not yet taken. After completing the simulation, we connect the system
    components to the Arduino, which is programmed through the Arduino IDE software.
    In the beginning, the code was implemented only through virtual simulation using
    different components with similar properties. As we cannot fully utilize the Proteus
    software, the three-axis compass breakout board was tested physically using the
    Arduino UNO serial monitor. Experimentally, we tested the circuit several times
    before proceeding with the next process. In this phase, we focus more on the proof
    of concept and the compatibility testing of the selected components to work together
    in the proposed smart sensing unit. Download : Download high-res image (286KB)
    Download : Download full-size image Fig. 5. Proteus simulation of the ultrasonic
    sensor. 3.5. Smart sensor model fabrication The node enclosure layout has been
    designed, as shown in Fig. 6(a). Three-dimensional printing is used to build the
    enclosure of the sensor node. The rough design of the enclosure is sketched by
    considering the height of the stacked modules inside the nodes as the tallest
    height and the PCB and battery layout inside as the length and width of the enclosure.
    The measurements taken were in mm units only for the inner part, and 5 mm was
    added considering the thickness of the enclosure. A sketching software called
    Solidwork is used to obtain a real view of the enclosure. Download : Download
    high-res image (417KB) Download : Download full-size image Fig. 6. (a) Enclosure
    designed with Solidwork Software (b) End Node Enclosure. This model consists of
    the top part, which can be detached from the bottom part to ease the placement
    of the components inside. The top part is designed to be tightly closed with the
    bottom part as shown in Fig. 6(b). This part can be closed tightly and fully covered.
    The enclosure is waterproof and can keep the components safe from the surrounding
    conditions. The enclosure is made of PLA Filament which will not intercept or
    disturb the signal transfer of the sensors. This material can stand a temperature
    up to 190 °C. Given that we only use the enclosure for a sample prototype, we
    fix the infill to 30% with the total weight after printed is 514 g for the enclosure
    only. We use sandpaper for a smoother finish of the final product. The material
    is waterproof, but to ensure that no water can come in through the holes of the
    top part, a transparent plastic cover is added and glued using a hot glue gun,
    specifically to protect the three-axis compass breakout board, which is not waterproof.
    The other components that have been soldered and connected to their respective
    part are then fixed to the inner enclosure using silicon. The prototype is screwless,
    so the reading of the sensor is not affected by anything in the enclosure. A better
    design can be implemented, such as a smaller size, no sharp edges for the top
    and bottom parts, and a higher infill rate to withstand greater weight and pressure
    whenever it encounters the car. Fig. 7 shows the top view of the end node exterior
    after soldering all the components. The solar panel is placed on the top to ease
    the process of battery charging by absorbing the sunlight. The antenna of the
    LoRa shield is placed on the left side of the enclosure to avoid any signal interruption.
    The ultrasonic sensor and magnetometer are placed on the top of the enclosure,
    and a transparent layer is placed on the magnetometer to make it more waterproof.
    Two green and red LEDs are used to locally show the status of the parking lot.
    Download : Download high-res image (297KB) Download : Download full-size image
    Fig. 7. Top view of end node exterior. 4. System development and implementation
    In this section, the development and implementation of the IoT LoRaWAN-based parking
    management system are explained. After performing individual testing for various
    components of the proposed system, the implementation of the proposed design was
    carried out. The implemented IoT-SPMS-LoRaWAN was started by combining all sensors
    with the microcontroller and LoRa shield as one smart sensing unit to be placed
    in the considered parking spot. This phase includes system testing, enhancement,
    and finalization and also covers software development. 4.1. Functionality testing
    and enhancement The verification of the system functionality was conducted, and
    the design was enhanced and optimized if necessary. This stage is vital to meet
    the design objectives of the system and identify and fix hardware and software
    problems. These verification steps are repeated until a successful implementation
    is accomplished. For example, before starting the real placement of the smart
    sensing node in the parking slots, the system inputs and outputs should be measured
    in the LAB and ensure that the measurements are satisfactory. After compiling
    the coding libraries of the sensors, actuators, and interfaces into Arduino Uno,
    sensing unit functionality and communication capability were locally tested using
    a serial monitor first and then checked in the IoT platform. The code testing
    is repeated until the desired result is obtained. The configuration of the sensing
    node in the TTN platform either as an application or device also has been carried
    out to generate a unique identifier to receive the data from the smart sensing
    unit as shown in Fig. 8. This figure shows the connectivity of the device through
    the TTN server. Notably, the device address, network session key, and application
    key are the same as in the Arduino Uno coding. The application was integrated
    with the TTN, and a unique ID was generated for the application. The LoRaWAN gateway
    configuration is also set up in the TTN platform. Download : Download high-res
    image (343KB) Download : Download full-size image Fig. 8. Device overview of TTN
    Server. Once the device is correctly configured and linked to the LoRaWAN gateway
    and TTN server, the data can be uploaded to the IoT server as soon as the device
    is turned on. The gateway receives the data and displays it in the TTN server
    as shown in Fig. 9. Here, the payload is displayed in a readable form and translated
    using a decoder function accordingly to display the obtained readings from the
    sensors. The next step is to integrate the data into a user-friendly interface.
    An ATT Maker is created and linked to the gateway. Again, using the same information
    in TTN and the gateway, ATT was able to be connected and integrated as shown in
    Fig. 10. The device EUI information is taken from the TTN server. Then, the ATT
    Maker is linked to the gateway by inserting the gateway ID in the ATT Maker. The
    name of the gateway and its status currently serving the ground or device is connected
    to ATT Maker. We have conducted many tests under various conditions, such as outdoor,
    windy, and rainy days. Download : Download high-res image (432KB) Download : Download
    full-size image Fig. 9. Successfully received data at the TTN platform. Download
    : Download high-res image (193KB) Download : Download full-size image Fig. 10.
    Successfully received data at the TTN platform. 4.2. System operational procedure
    The developed smart sensing units are placed in the parking lots. Nodes are powered
    on, and the solar panel will charge the battery when the parking spot is empty.
    If a car is parked, the node will be powered using a rechargeable battery. The
    magnetic and ultrasonic sensors will detect the presence of the vehicles above
    the sensing unit. The collected data by the sensors will be processed in the Arduino
    to be sent as payloads using the LoRa shield to the LoRaWAN gateway and uploaded
    to the TTN. In our coding, we have developed an algorithm to gather the information
    from the sensors and passed to the cloud as in Algorithm 1. When a user wants
    to access this SPS, the user''s mobile phone or laptop needs to connect to the
    Internet to view the real-time information of the parking lot via ATT Glance.
    The gateway placed in the parking area needs to be connected to the Internet as
    well to receive and send data to the network server. The smart parking node will
    start to send the data detected by the waterproof ultrasonic sensor and magnetometer
    to the TTN through the gateway. If the distance of the waterproof ultrasonic sensor
    is less than 40 cm and the value of the z-axis which is the magnetic field strength
    is more than 225, then the red LED (occupied) will light up as a local indicator
    in the parking lot. If not, then the green LED will light up, which means that
    the parking lot is vacant. Drivers can explore this information through the ATTM
    GUI using Internet-connected devices. Fig. 11 shows the detailed steps of the
    IoT-SPMS-LoRaWAN. Algorithm 1 Smart Parking System based on LoRaWAN Require: Monitor
    parking lot occupancy and vacancy status Ensure: Real-time parking monitoring
    (ultrasonic sensor and magnetometer) 1: Install LoRaWAN Gateway & connect to the
    Internet 2: Register the Gateway in the TTN Console (GW ID, Frequency Plan, router,
    GW key) 3: Create IoT-SPMS-LoRaWAN Application in the TTN Console (App. ID, App.
    EUI, TTN-Handler) 4: Register LoRa Node under IoT-SPMS-LoRaWAN Application (Dev.
    ID, Dev. EUI, App Key, App EUI) 5: Define Device Activation Method (ABP) 6: Get
    Network Session Key & App Session Key & Device Address 7: Define Libraries for
    multi-sensor smart LoRa node & TTN 8: Define LoRa-Node pin mapping ➲ For sensors
    & LoRa connection 9: Set LoRa configuration parameters 10: D ← Distance value➲
    B25 sensor 11: Z← z-axis magnetometer value ➲ ACS712 Sensor 12: Initialize IoT-SPMS-LoRaWAN
    ➲ System Powered ON at t = 0 13: for each round do 14: Get D, Z 15: Multiply each
    reading by 100 ➲ Represent each sensor by 2 words 16: Split both words (16 bits)
    into 2 bytes of 8 bits 17: Encode all bytes into ONE Payload of 4 bytes 18: Establish
    a connection between LoRa Node & LoRaWAN GW 19: Update status of the node in TTN
    Server (online) 20: Send data to LoRaWAN GW 21: Upload data to TTN Server over
    the Internet 22: Decode the received Payloads to retrieve original sensors readings
    23: Integrate data into ATTM Web-based dashboard 24: Synchronize data with ATTM
    mobile App. using Smartphone 25: if Z > 225 && D < 40 cm then 26: Red LED lights
    up and updates “occupied parking” ➲ ATT Glance 27: else Green LED lights up and
    notify “vacant parking” ➲ ATT Glance 28: end for 29: Drivers monitor parking status
    in realtime using their devices 30: END Download : Download high-res image (611KB)
    Download : Download full-size image Fig. 11. System operational procedure. 4.3.
    Sensor node implementation In the practical implementation of the designed sensing
    node, we uploaded all the developed coding into Arduino Uno, connected to LoRaWAN
    using the LoRa shield, and supplied power to the system using the rechargeable
    battery and solar panel that is connected to the solar shield. All these modules
    were stacked on top of each other and placed inside the node enclosure. From the
    bottom, the arrangement is as follows: Arduino Uno, LoRa shield, and solar shield.
    A magnetometer and waterproof ultrasonic sensor were soldered to PCB 1, whereas
    LEDs and resistors were soldered to PCB 2. The battery used a 3.7-V LiPo rechargeable
    battery, and the solar panel is a 5-V solar panel. All the components were then
    connected according to the pins and ports defined in the Arduino Uno sketch. To
    ensure that the data transmission is efficiently transferred from sensors to the
    gateway receiver, the antenna is placed outside the enclosure. A hotspot was used
    to connect to the LoRaWAN gateway to the Internet, which is placed in the office
    that is 1 km away from the parking lots. From here, all data can be seen on the
    TTN server website, which receives data every 5 s when the device is connected
    to the gateway. The number of packets transmitted can be reduced and scheduled
    based on the demand to reduce the usage of the power supply. The obtained data
    from the implemented waterproof ultrasonic sensor and magnetometer are updated
    on the TTN server. After the data were integrated into the ATT Maker, the information
    can be viewed in a more readable form through ATT Glance GUI which is available
    only for the mobile version of ATT Maker. The web version of ATT allows editing
    of the rules that are used to control the virtual actuator that indicates the
    occupancy/vacancy status of the parking. The web version of ATT Maker must be
    linked to the sensing node that is configured in the TTN platform application
    first as stated earlier. When the gateway is connected to the device, the TTN
    server and ATT Maker will collect the data and display the parking status in ATT
    Glance accordingly. 4.4. System verification and data collection A series of experiments
    were designed and implemented to capture data from both the magnetometer and the
    waterproof ultrasonic sensor. This data was vital for verifying the system''s
    accuracy and calibrating the sensor outputs. We used three distinct conditions
    to position the sensing unit, allowing us to observe changes in the gathered data
    and establish threshold values. Fig. 13 visually depicts the prototype placed
    in both vacant and occupied parking lots, illustrating the three testing scenarios.
    Each scenario was meticulously designed to ensure uninterrupted sensitivity and
    LoRaWAN signal throughout the tests. In the first scenario, we considered two
    subcases within a vacant parking lot: one with neighbouring vehicles and another
    without, as depicted in Fig. 12(a). Download : Download high-res image (1MB) Download
    : Download full-size image Fig. 12. Data collection scenarios. Download : Download
    high-res image (263KB) Download : Download full-size image Fig. 13. Variation
    of magnetic strength readings with vehicle presence. Next, in the second scenario,
    we tested the unit with a vehicle occupying the parking lot. We placed the unit
    in three different positions on the ground of the target lot as demonstrated in
    Fig. 12(b). Although the signal strength was noticeably better at the front and
    rear positions, we selected the middle position for its balanced data accuracy
    across a variety of car lengths. Furthermore, the sensors were most efficient
    at detecting distance and metal objects from this position. We observed that the
    readings taken from the front and back of the car were sometimes unclear, which
    could potentially skew performance evaluations. In our final scenario, we recorded
    data from both the magnetometer and waterproof ultrasonic sensor while the parking
    lot was occupied. Here, we placed the prototype under five different vehicles—Toyota
    Yaris, Proton Saga, Perodua Myvi, Santria Neo, and Honda City—as demonstrated
    in Fig. 12(c). The data was collected every 10 min for subsequent analysis and
    comparison, enabling us to thoroughly evaluate the system''s performance across
    diverse situations. Furthermore, the value of combining a magnetic sensor with
    an ultrasonic sensor is evidenced during testing of the sensing unit in proximity
    to non-metallic objects. Despite a plastic object satisfying the distance threshold
    criteria by being placed close to the sensor, the magnetic strength did not reach
    the designated threshold value (225 T). Consequently, the reported parking status
    remained ''vacant,’ and the green LED remained illuminated, confirming the absence
    of a vehicle. Sensor readings were observed and logged from both the TTN server
    and the ATT Maker. This experiment was reproduced across all case scenarios and
    with each vehicle type to assess the data transmission performance. Fig. 13 shows
    the graph of magnetic strength obtained from the Z-axis magnetometer in different
    scenarios. The range of vacant vehicles in the parking lot was much lower than
    the range of occupied vehicles in the parking lot. The minimum value of magnetic
    strength obtained from the magnetometer for vacant vehicles was 132 T, whereas
    the maximum value was 146 T. Meanwhile, the value of magnetic strength for occupied
    vehicles ranges from 112 to 137 T. The threshold is set at the value of 225 T
    in the system coding. When the value is lower than 225 T, the parking lot is vacant.
    On the contrary, when the value of the magnetometer is above 225 T, the parking
    lot is occupied. Comparing the values of the z-axis magnetometer for both conditions
    of vacant parking, the magnetic strength was not affected by the vehicle beside
    the selected parking lot. Considering that the axis is only pointed upward, the
    surrounding objects will not disrupt the data acquisition process. Fig. 14 represents
    the data procured from the waterproof ultrasonic sensor under diverse conditions
    of the target parking lot. Prior to initiating the experiment, the threshold for
    the waterproof ultrasonic sensor was pre-established at 40 cm within the system
    code, a requisite for the optimal functionality of the prototype. The graph validates
    the appropriateness of the predetermined system threshold for the vehicle, as
    the distances gleaned from the various vehicles fell below 22 cm, as observed
    during the experiment. It can be discerned that when the value registered by the
    waterproof ultrasonic sensor exceeds 40 cm, the parking lot is deemed vacant.
    Conversely, when the value falls below 40 cm, the parking lot is identified as
    occupied. Download : Download high-res image (108KB) Download : Download full-size
    image Fig. 14. Variation of ultrasonic distance readings with vehicle presence.
    5. Experimental results The effectiveness of our system was put to the test in
    an array of meticulously designed scenarios, yielding a multitude of intriguing
    results. In this section, we delve into the findings and outcomes extracted from
    these varied system experiments. The evaluation phase encompasses three distinct
    cases that collectively assess the system''s robustness and versatility. The initial
    case examines the system''s ability to instantaneously update information regarding
    parking spot availability, testing its aptitude for real-time updates. The second
    case investigates the dependability of the LoRa communication interface, ensuring
    its trustworthiness under various circumstances. Finally, we gauge the system''s
    sustainability, affirming its potential for long-term operation. By delving into
    these experimental results, we hope to offer comprehensive insight into the system''s
    performance and potential. 5.1. System validation This experiment primarily focuses
    on validating the accuracy of the data collected by the developed system. As depicted
    in Fig. 15, the smart parking node is situated at the centre of the parking lot,
    ready to detect and report on both vacant and occupied parking statuses. The data
    gathered by the sensors is subsequently updated to the Internet via the LoRaWAN
    gateway, making it accessible through both the TTN server and ATT Glance. The
    ATT Maker is in sync with the TTN server, ensuring a seamless data synchronization
    process during the software development phase. This process necessitates the input
    of target TTN server information, including device EUI, application ID, device
    address, network session key, and application session key. Download : Download
    high-res image (452KB) Download : Download full-size image Fig. 15. System validation:
    (a) Vacant, (b) Occupied. The values procured by the sensor are presented in an
    easily digestible format, thanks to the rules established within the ATT Maker
    that govern the assets (actuators). This amalgamated information can then be conveniently
    accessed and viewed on mobile devices. Fig. 16 (a) depicts the user interface
    of ATT Maker during a scenario where the parking lot is vacant. A vacant parking
    status is indicated when the waterproof ultrasonic sensor detects distances exceeding
    40 cm, and the magnetometer registers magnetic strengths of less than 225 T. During
    such instances, the smart parking node''s green LED indicator is consistently
    illuminated. The sensor''s reading is displayed as a dash on the interface, signifying
    that the detected distance is beyond its maximum range of 40 cm. Download : Download
    high-res image (389KB) Download : Download full-size image Fig. 16. GUI of ATT
    Maker for parking lot. Conversely, when the sensor detects a vehicle within its
    range, the system''s actuator, represented by a red LED, illuminates, indicating
    that the parking space is occupied. The developed sensing unit includes both a
    physical and a virtual LED that mirrors each other''s status. Fig. 16(b) presents
    the ATT Maker interface displaying an ''occupied’ parking status, alongside the
    corresponding red LED light. Additionally, as shown in Fig. 17, the system sends
    an instant notification to the user''s mobile device, alerting them about the
    current parking status. Any detected change in the parking status prompts ATT
    Maker to execute programmed rules, which then trigger these notifications to the
    driver''s mobile application or ATT Glance displayed on their mobile phone. Download
    : Download high-res image (338KB) Download : Download full-size image Fig. 17.
    Parking status notification via smartphone ATTM GUI. 5.2. LoRa/LoRaWAN connectivity
    analysis Our research includes a comprehensive evaluation of the connectivity
    and reliability of data transmission between the sensing nodes and the LoRaWAN
    gateway. We performed this test under various conditions, which included different
    times of day and inclement weather scenarios, to assess the robustness of our
    system. In this particular scenario, we positioned a single sensing node at three
    distinct locations, each separated by a 10 m distance and approximately 1 km away
    from the LoRaWAN gateway (refer to Fig. 18). This setup was designed to mimic
    the behaviour of sensing nodes situated at varied spots within the same parking
    area. Download : Download high-res image (499KB) Download : Download full-size
    image Fig. 18. Parking Layout of nodes location for connectivity testing. The
    evaluation spanned over 6 h and was conducted under a range of conditions including
    strong winds and light rain, during both daylight and night hours. Every 10 min,
    we measured the Received Signal Strength Indication (RSSI) and the Signal-to-Noise
    Ratio (SNR) to assess the quality of the transmitted signal based on the distance
    from the gateway. We calculated the Time on Air (ToA), which refers to the duration
    taken for the gateway to receive the packet sent by the sensing node, based on
    the LoRa duty cycle. The duty cycle— the period during which a system is active
    or operating— is expressed as a percentage, equating to 1% for LoRa. Our results
    showed that the signal maintained a consistent 5-s interval or dwell time for
    transmitting a new signal at a frequency with a ToA of 50.5 ms. This remained
    constant throughout the experiment despite frequency changes, with the frequency
    range lying between 922 and 923 MHz. In terms of signal strength, the device recorded
    71.75 dB of free space losses. Path loss, or the energy lost as it traverses the
    distance from transmitter to receiver, decreases with increased distance in a
    LoRaWAN network. This reduction is influenced by several factors such as wave
    reflections and refractions from objects. To achieve optimum radio signal efficiency,
    the gateway''s antenna needs to be positioned outdoors at an elevated height,
    minimizing obstacles within the Fresnel zone. The configuration of antennas for
    both the gateway and the end nodes must be customized according to their geographical
    frequency. During the 6-h connectivity evaluation, we ensured the optimal positioning
    of the antenna, oriented upwards and with minimal interference in the direct sightline
    between the transmitter (Tx) and receiver (Rx). It is important to note that any
    obstacles within the first Fresnel zone can negatively impact the received signal
    strength and the connectivity range. Our system demonstrated robust performance,
    with the battery reliably powering the device for the entire duration of the 6-h
    test. We calculated the path losses for each of the three node locations, recording
    losses of 51.75 dB, 57.77 dB, and 61.29 dB respectively. These calculations factored
    in the distance from the gateway to each location, considering an average frequency
    of 922.5 MHz. Our findings confirm that the signal loss increases as the node''s
    distance from the gateway expands, underscoring the importance of proximity for
    maintaining strong connectivity in our system. Our experimental campaign, which
    took place at three distinct locations with a 10-m gap between each, has yielded
    some enlightening data. The RSSI and SNR values were documented over 6 h, during
    which our system was tested under night-time conditions with the battery at full
    capacity, demonstrating its sustainability. Fig. 19 provides a graphical depiction
    of the RSSI and SNR data collected from 19:00 to 01:00. In this 6-h window, the
    timeline from 19:00 to 21:00 is representative of data from location 1 (10 m),
    21:00 to 23:00 corresponds to location 2 (20 m), and 23:00 to 1:00 pertains to
    location 3 (30 m). The graph illustrates a clear trend: as the distance increases,
    the RSSI values show a gradual decline. This trend is indicative of a slight loss
    in signal strength with increasing distance from the gateway. However, it''s crucial
    to note that despite this decrease, the signal strength remains well within acceptable
    limits for our application, ensuring reliable data transmission. Download : Download
    high-res image (450KB) Download : Download full-size image Fig. 19. Nodes-Gateway
    connection quality with time (a) RSSI, (b) SNR for varying locations. The SNR
    values present another aspect of the system''s performance. Despite slight variations,
    the SNR remains relatively consistent across all three locations. This consistency
    indicates that our system maintains a good quality signal, irrespective of the
    distance from the gateway. Moreover, the magnetometer data shows that despite
    the changes in distance and accompanying RSSI and SNR values, it is not affected
    by signal variations. Its readings consistently remain below the threshold of
    225 T, which validates that there is no vehicle presence in the parking lot across
    all the tested locations. We verified the accuracy of our results by cross-referencing
    the data from the Arduino IDE''s serial port, the TTN server, and the AllThingsTalk
    Maker interface. This step ensures the reliability of our data before presenting
    it in Fig. 19. The overall analysis of these data points demonstrates a systematic
    correlation between distance and RSSI values and the reliable performance of the
    magnetometer across varying signal strengths. The detailed discussion of these
    results, as per Fig. 19, provides a deeper understanding of the system''s performance
    and reliability, substantiating our claim of an effective IoT-enabled Smart Parking
    Management System. Regardless of weather conditions, our system demonstrated consistent
    signal transmission throughout the experiment. It proved to be resilient to changes
    in environmental factors, showcasing its potential to perform under various weather
    scenarios. This resilience is essential for its real-world deployment in outdoor
    parking areas, where it may encounter a variety of weather conditions. While our
    current study did not include testing under extreme weather conditions like heavy
    snow or torrential rain, the robustness of our system under mild weather conditions
    suggests that it is likely to perform well in harsher environments. However, we
    recognize the importance of this concern and will extend our testing to include
    such conditions in our future work to further validate the reliability of our
    system. 5.3. LoRa SNR and RSSI analysis This experiment scrutinizes the effects
    of parking status and gateway proximity on received signal strength indication
    (RSSI), Signal-to-Noise ratio (SNR), and sensors readings. We ran a series of
    measurements where a vehicle was intermittently parked in the parking lot, and
    the corresponding RSSI, SNR, and sensor data were logged and analyzed. Importantly,
    the test proceeded without any interruption between 8:00 a.m. and 2:00 p.m. on
    a clear day at the university campus, which allowed for direct solar panel operation.
    RSSI was used to evaluate the LoRaWAN gateway''s performance in receiving signals
    from the sensors. Meanwhile, SNR measurements provided insight into the ratio
    between the received power signal and the background noise level. With a lower
    boundary of -120 dBm, a smaller RSSI value indicates a weaker signal, whereas
    values closer to -30 dBm signify a stronger signal. SNR is typically within the
    range of -20 to 20 dB, with values closer to 10 dB denoting less signal corruption.
    Data for RSSI, SNR, and sensor values were recorded at 10-min intervals. Table
    1 details the sensor node''s registered readings on the TTN server and ATT Maker,
    with a timeline graph displaying parking status: green shading indicates an empty
    parking lot, while red represents an occupied lot. Table 1. Sensing Unit Collected
    Data from attm Time/Parkin Status RSSI SNR Magnetometer Ultrasonic Sensor 0800
    -76 9 112 0 0810 -82 8.8 100 0 0820 -79 9.5 100 0 0830 -79 9.8 95 0 0840 -81 8.8
    107 0 0850 -79 8.2 105 0 0900 -93 2.8 382 23 0910 -91 4.8 392 23 0920 -91 5.5
    373 23 0930 -89 7 392 23 0940 -87 8.2 387 23 0950 -91 6.8 377 23 1000 -95 5 387
    23 1010 -95 4.5 385 23 1020 -93 6 387 23 1030 -93 6.2 392 23 1040 -93 5.5 380
    23 1050 -94 5 392 23 1100 -94 6.2 390 23 1110 -94 6.8 407 23 1120 -95 5 395 23
    1130 -95 4.5 392 23 1140 -94 6.2 380 23 1150 -93 6.2 392 23 1200 -85 8.8 161 0
    1210 -85 9.8 132 0 1220 -90 7.8 148 0 1230 -75 9.5 324 23 1240 -74 10.20 326 23
    1250 -73 9.2 337 22 0100 -72 8.5 340 22 0110 -76 9.2 326 22 0120 -73 9.2 335 22
    0130 -43 10 129 0 0140 -43 10.2 126 0 0150 -45 9.5 134 0 0200 -49 10 131 0 Initially,
    we left the parking lot vacant for an hour to assess the deployed sensors'' signal
    and LoRaWAN connectivity, yielding an average RSSI of -79.3 dBm. From 9:00 a.m.
    to 11:50 a.m., a parked vehicle caused the RSSI to drop to an average of -92.78
    dBm. Once the vehicle departed, the signal strength increased to an average of
    -86.67 dBm over the next 30 min. This pattern persisted throughout the testing
    period, confirming that vehicles in the parking lot weakened the RSSI of LoRaWAN.
    However, interestingly, the sensor readings remained largely unaffected by the
    signal fluctuations, with the device continuing to accurately transmit data. Our
    SNR analysis also revealed a stable average of approximately 9 dB during the initial
    hour when the parking lot was vacant. The arrival of a vehicle between 9:00 a.m.
    and 11:50 a.m. caused a notable drop in SNR values to an average of 4.75 dB. However,
    the SNR rebounded to an average of 8.8 dB over the next 30-min period when the
    parking lot was vacated. Finally, the waterproof ultrasonic sensor provided key
    readings for these different conditions. When the parking lot was unoccupied,
    the sensor registered 0 cm, indicating no vehicle was detected within its 40 cm
    range. Upon a car''s arrival, the sensor detected its presence at a distance of
    23 cm. Additionally, the magnetometer readings clearly varied depending on whether
    the parking lot was empty or occupied. Throughout the experiment, both the ultrasonic
    sensor and the magnetometer provided stable readings, successfully validating
    the proposed system. 6. Conclusions and future work An innovative SPS based on
    LoRa/LoRaWAN communication technology has been designed and fabricated to cater
    to the high demand for smart parking that has been growing simultaneously with
    the number of parking lots that take up a wide area. Owing to their accuracy and
    compatibility, the three-axis magnetic sensor and ultrasonic sensor have been
    utilized for detecting parking lot occupancy. In addition, LoRa/LoRaWAN communication
    technology was chosen in the proposed IoT-SPMS-LoRaWAN system because of its independent
    infrastructure, license-free frequency bands, low power consumption, and long-range
    coverage. The collected data are transmitted in real time from the smart sensing
    node using a LoRa shield to the TTN IoT server through a LoRaWAN gateway. Parking
    status information can be monitored in real time via the ATTM IoT GUI using smartphones
    and other Internet-connected devices. The smart sensing node is powered using
    a rechargeable battery that is attached to a solar panel to charge the battery
    through a solar charger shield when no vehicle is located above the sensor, thereby
    maintaining a continuous operation of nodes. The proposed system has been deployed
    and validated in a real parking lot as a single node with a single gateway and
    has performed effectively. Various parameters have been considered to evaluate
    the system performance, including distance to the gateway and parking occupancy
    status. Several performance metrics related to the LoRa signal have been evaluated,
    such as SNR and RSSI. Implementing the IoT-SPMS-LoRaWAN system in the entire parking
    areas of smart cities, particularly in crowded areas, will help reduce traffic
    congestion, improve life quality, and result in a cleaner environment. Our system
    can be extended to collect data on the duration of the car parked for bill calculation
    and automatic bill payment for e-money application users and any online banking
    pre-linked to the application. In future studies, we will implement multiple sensing
    nodes in a multi-parking space to evaluate the network scalability and further
    evaluate the LoRa network performance. We also plan to conduct tests under various
    weather conditions such as snow and rain to ensure the system''s robustness. Changing
    our current non-switch type magnetometer to a switch type could enhance our capacity
    to track parking durations by providing distinct indications of active and passive
    system modes. This would make data translation and subsequent calculations easier.
    Ultimately, our goal is to design a compact, water-resistant iteration with a
    higher infill rate to withstand adverse conditions like flooding and high pressure.
    Declaration of competing interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. References [1] C.G. Hoehne, M.V.
    Chester, A.M. Fraser, D.A. King Valley of the sun-drenched parking space: the
    growth, extent, and implications of parking infrastructure in Phoenix Cities,
    89 (2019), pp. 186-198 View PDFView articleView in ScopusGoogle Scholar [2] J.
    Arellano-Verdejo, F. Alonso-Pecina, E. Alba, A. Guzman Arenas Optimal allocation
    of public parking spots in a smart city: problem characterisation and first algorithms
    J. Exp. Theor. Artif. Intell., 31 (4) (2019), pp. 575-597 CrossRefView in ScopusGoogle
    Scholar [3] R. Ke, Y. Zhuang, Z. Pu, Y. Wang A smart, efficient, and reliable
    parking surveillance system with edge artificial intelligence on IoT devices IEEE
    Trans. Intell. Transport. Syst., 22 (8) (2020), pp. 4962-4974 Google Scholar [4]
    J. Parmar, P. Das, S.M. Dave Study on demand and characteristics of parking system
    in urban areas: a review J. Traffic Transport. Eng., 7 (1) (2020), pp. 111-124
    View PDFView articleView in ScopusGoogle Scholar [5] S.Z. Shahraki, A. Hosseini,
    D. Sauri, F. Hussaini Fringe more than context: perceived quality of life in informal
    settlements in a developing country: the case of Kabul, Afghanistan Sustain. Cities
    Soc., 63 (2020), Article 102494 View PDFView articleView in ScopusGoogle Scholar
    [6] W.A. Jabbar, C.W. Wei, N.A.A.M. Azmi, N.A. Haironnazli An IoT Raspberry Pi-based
    parking management system for smart campus Internet of Things, 14 (2021), Article
    100387 View PDFView articleView in ScopusGoogle Scholar [7] J. Liu, J. Wu, L.
    Sun Control method of urban intelligent parking guidance system based on Internet
    of Things Comput. Commun., 153 (2020), pp. 279-285 View PDFView articleCrossRefView
    in ScopusGoogle Scholar [8] G. Jelen, V. Podobnik, J. Babic Contextual prediction
    of parking spot availability: a step towards sustainable parking J. Clean. Prod.
    (2021), Article 127684 View PDFView articleView in ScopusGoogle Scholar [9] N.
    Jindaprakai, S. Nuchitprasitchai Intelligent parking system using multiple sensor
    detection 2019 Research, Invention, and Innovation Congress (RI2C), IEEE (2019),
    pp. 1-4 CrossRefGoogle Scholar [10] W.A. Jabbar, M.A.B. Yuzaidi, K.Q. Yan, U.S.B.M.
    Bustaman, Y. Hashim, H.T. AlAriqi Smart and green street lighting system based
    on Arduino and RF wireless module 2019 8th International Conference on Modeling
    Simulation and Applied Optimization (ICMSAO), IEEE (2019), pp. 1-6 CrossRefGoogle
    Scholar [11] W.K. Saad, Y. Hashim, W.A. Jabbar Design and implementation of portable
    smart wireless pedestrian crossing control system IEEE Access, 8 (2020), pp. 106109-106120
    CrossRefView in ScopusGoogle Scholar [12] R.M. Ramli, W.A. Jabbar Design and implementation
    of solar-powered with IoT-Enabled portable irrigation system Internet of Things
    and Cyber-Physical Systems, 2 (2022), pp. 212-225 View PDFView articleView in
    ScopusGoogle Scholar [13] M.I. Zakaria, W.A. Jabbar, N. Sulaiman Development of
    a smart sensing unit for LoRaWAN-based IoT flood monitoring and warning system
    in catchment areas Internet of Things and Cyber-Physical Systems, 3 (2023), pp.
    249-261 View PDFView articleView in ScopusGoogle Scholar [14] P. Willingmann,
    S. Turbek, R. Goldsberry The Future of Parking - Can Providers Find a Space in
    the New Mobility Ecosystem? Deloitte Insights (2018) Google Scholar [15] F. Al-Turjman,
    A. Malekloo Smart parking in IoT-enabled cities: a survey Sustain. Cities Soc.,
    49 (2019), Article 101608 View PDFView articleView in ScopusGoogle Scholar [16]
    F. Bock, S. Di Martino, A. Origlia Smart parking: using a crowd of taxis to sense
    on-street parking space availability IEEE Trans. Intell. Transport. Syst., 21
    (2) (2019), pp. 496-508 Google Scholar [17] L.D. Rodić, T. Perković, M. Škiljo,
    P. Šolić Privacy leakage of LoRaWAN smart parking occupancy sensors Future Generat.
    Comput. Syst., 138 (2023), pp. 142-159 Google Scholar [18] M.A. Almuhaya, W.A.
    Jabbar, N. Sulaiman, S. Abdulmalek A survey on Lorawan technology: recent trends,
    opportunities, simulation tools and future directions Electronics, 11 (1) (2022),
    p. 164 CrossRefView in ScopusGoogle Scholar [19] W.A. Jabbar, S. Annathurai, T.A.A.
    Rahim, M.F.M. Fauzi Smart energy meter based on a long-range wide-area network
    for a stand-alone photovoltaic system Expert Syst. Appl., 197 (2022), Article
    116703 View PDFView articleView in ScopusGoogle Scholar [20] W.A. Jabbar, T. Subramaniam,
    A.E. Ong, M.I. Shu''Ib, W. Wu, M.A. de Oliveira LoRaWAN-based IoT system implementation
    for long-range outdoor air quality monitoring Internet of Things, 19 (2022), Article
    100540 View PDFView articleView in ScopusGoogle Scholar [21] P. Misra, A. Vasan,
    B. Krishnan, V. Raghavan, A. Sivasubramaniam The future of smart parking systems
    with parking 4.0 GetMobile: Mobile Comput. Commun., 23 (1) (2019), pp. 10-15 CrossRefGoogle
    Scholar [22] C. Biyik, et al. Smart parking systems: reviewing the literature,
    architecture and ways forward Smart Cities, 4 (2) (2021), pp. 623-642 CrossRefView
    in ScopusGoogle Scholar [23] A. Fahim, M. Hasan, M.A. Chowdhury Smart parking
    systems: comprehensive review based on various aspects Heliyon, 7 (5) (2021),
    Article e07050 View PDFView articleView in ScopusGoogle Scholar [24] M. Khalid,
    K. Wang, N. Aslam, Y. Cao, N. Ahmad, M.K. Khan From smart parking towards autonomous
    valet parking: a survey, challenges and future Works J. Netw. Comput. Appl. (2020),
    Article 102935 Google Scholar [25] M.G. Diaz Ogás, R. Fabregat, S. Aciar Survey
    of smart parking systems Appl. Sci., 10 (11) (2020), p. 3872 CrossRefGoogle Scholar
    [26] S. Aravinthkumar, S. Makkar, A.A. Al-Absi Smart parking management system
    in shopping malls International Conference on Smart Computing and Cyber Security:
    Strategic Foresight, Security Challenges and Innovation, Springer (2020), pp.
    135-146 Google Scholar [27] A. Karare, R. Channe, L. Paliwal, R. Gupta Advanced
    real-time automated smart parking system for smart cities Data Driven Approach
    towards Disruptive Technologies: Proceedings of MIDAS 2020, Springer Singapore
    (2021), pp. 205-215 CrossRefGoogle Scholar [28] S. Singh, S. Zacharia, J.P. Mathew,
    H.K. Chavan S. Park: a smart parking approach International Congress on Information
    and Communication Technology, Springer (2020), pp. 418-426 CrossRefGoogle Scholar
    [29] M.M. Badr, W. Al Amiri, M.M. Fouda, M.M. Mahmoud, A.J. Aljohani, W. Alasmary
    Smart parking system with privacy preservation and reputation management using
    blockchain IEEE Access, 8 (2020), pp. 150823-150843 CrossRefView in ScopusGoogle
    Scholar [30] N. Buldakov, T. Khalilev, S. Distefano, M. Mazzara An open source
    solution for smart contract-based parking management Open Source Systems, 582
    (2020), p. 55 CrossRefView in ScopusGoogle Scholar [31] C. Zhang, et al. BSFP:
    blockchain-enabled smart parking with fairness, reliability and privacy protection
    IEEE Trans. Veh. Technol., 69 (6) (2020), pp. 6578-6591 CrossRefView in ScopusGoogle
    Scholar [32] A. Bandyopadhyay, S. Misra, D. Nath, V. Sarkar Automatic smart parking
    one-sided free slot booking using internet of things (IoT) Advances in Medical
    Physics and Healthcare Engineering, Springer (2021), pp. 463-472 CrossRefView
    in ScopusGoogle Scholar [33] S. Garg, P. Lohumi, S. Agrawal Smart parking system
    to predict occupancy rates using machine learning International Conference on
    Information, Communication and Computing Technology, Springer (2020), pp. 163-171
    CrossRefView in ScopusGoogle Scholar [34] S.A. A''ssri, F.H. Zaman, S. Mubdi The
    efficient parking bay allocation and management system using LoRaWAN 2017 IEEE
    8th Control and System Graduate Research Colloquium (ICSGRC), IEEE (2017), pp.
    127-131 CrossRefView in ScopusGoogle Scholar [35] R.K. Kodali, K.Y. Borra, S.S.
    Gn, H.J. Domma An IoT based smart parking system using LoRa 2018 International
    Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC),
    IEEE (2018), pp. 151-1513 CrossRefGoogle Scholar [36] K.K. Angelov Development
    and implementation of a demonstration model of smart parking with LoRa-based communication
    module 2020 XI National Conference with International Participation (ELECTRONICA),
    IEEE (2020), pp. 1-4 Google Scholar [37] M. Anshar, R. Sadjad, M. Hanan, R. Prayudha,
    M. Abry Design and implementation monitoring and booking systems for smart parking
    at engineering faculty campus IOP Conference Series: Materials Science and Engineering,
    IOP Publishing (2020), Article 012036 vol. 875, no. 1 CrossRefView in ScopusGoogle
    Scholar [38] J. Shi, L. Jin, J. Li, Z. Fang A smart parking system based on NB-IoT
    and third-party payment platform 2017 17th International Symposium on Communications
    and Information Technologies (ISCIT), IEEE (2017), pp. 1-5 Google Scholar [39]
    J.J. Barriga, et al. A smart parking solution architecture based on LoRaWAN and
    Kubernetes Appl. Sci., 10 (13) (2020), p. 4674 CrossRefView in ScopusGoogle Scholar
    [40] V.K. Sarker, T.N. Gia, I. Ben Dhaou, T. Westerlund Smart parking system with
    dynamic pricing, edge-cloud computing and lora Sensors, 20 (17) (2020), p. 4669
    CrossRefGoogle Scholar [41] C. Sewagudde The Design and Implementation of a Smart-Parking
    System for Helsinki Area (2016) Google Scholar [42] S.K. Datta, C. Bonnet, N.
    Nikaein An IoT gateway centric architecture to provide novel M2M services 2014
    IEEE World Forum on Internet of Things (WF-IoT), IEEE (2014), pp. 514-519 View
    in ScopusGoogle Scholar [43] P. Sotres, C.L. de la Torre, L. Sánchez, S.M. Jeong,
    J. Kim Smart city services over a global interoperable internet-of-things system:
    the smart parking case 2018 Global Internet of Things Summit (GIoTS), IEEE (2018),
    pp. 1-6 CrossRefGoogle Scholar [44] I. You, S. Kwon, G. Choudhary, V. Sharma,
    J.T. Seo An enhanced LoRaWAN security protocol for privacy preservation in IoT
    with a case study on a smart factory-enabled parking system Sensors, 18 (6) (2018),
    p. 1888 CrossRefView in ScopusGoogle Scholar [45] Y. Jeon, H.-I. Ju, S. Yoon Design
    of an LPWAN communication module based on secure element for smart parking application
    2018 IEEE International Conference on Consumer Electronics (ICCE), IEEE (2018),
    pp. 1-2 Google Scholar Cited by (3) Real-Time Traffic Management in Smart Cities:
    Insights from the Traffic Management Simulation and Impact Analysis 2024, BIO
    Web of Conferences Development of a parking system based on learning automata
    2024, Multimedia Tools and Applications Newfangled Automatic Car Parking Technology
    using RFID 2023, 2nd International Conference on Automation, Computing and Renewable
    Systems, ICACRS 2023 - Proceedings © 2023 The Authors. Published by Elsevier B.V.
    on behalf of KeAi Communications Co., Ltd. Recommended articles Impact of moving
    target on underwater positioning by using state measurement Internet of Things
    and Cyber-Physical Systems, Volume 4, 2024, pp. 141-153 Tippireddy Srinivasa Reddy,
    Rajeev Arya View PDF Designing an internet of things laboratory to improve student
    understanding of secure IoT systems Internet of Things and Cyber-Physical Systems,
    Volume 4, 2024, pp. 154-166 A. Ravishankar Rao, Angela Elias-Medina View PDF Development
    of LoRaWAN-based IoT system for water quality monitoring in rural areas Expert
    Systems with Applications, Volume 242, 2024, Article 122862 Waheb A. Jabbar, …,
    Mohammed A.H. Ali View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 2 Captures Readers: 38 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: Waheb A. Jabbar, Lu Yi Tiew, Nadiah Y. Ali Shah (2023). Internet
    of things enabled parking management system using long range wide area network
    for smart city. Internet of Things and Cyber-Physical Systems.
  journal: Internet of Things and Cyber-Physical Systems
  limitations: No major limitations were identified for this paper.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Internet of things enabled parking management system using long range wide
    area network for smart city
  verbatim_quote1: As the Internet of Things (IoT) evolves, it paves the way for vital
    smart city applications, with the Smart Parking Management System (SPMS) standing
    as a prime example.
  verbatim_quote2: This research introduces a novel IoT-driven SPMS that leverages
    Long Range Wide Area Network (LoRaWAN) technology, termed as IoT-SPMS-LoRaWAN,
    to surmount typical restrictions related to communication range, energy usage,
    and implementation cost seen in traditional systems.
  verbatim_quote3: '>'
- analysis: '**Types of Data Most Applicable to Irrigation Management and Their Typical
    Sources**


    **Data type** | **Definition** | **Sources**

    ---|---|---

    Soil moisture | Water content in the soil | Soil moisture sensors, satellites

    Crop health | Measure of crop growth and well-being | Satellite imagery, sensors
    mounted on agricultural machines

    Weather data | Temperature, humidity, wind speed, precipitation | Weather stations,
    satellites

    Water usage | Amount of water used for irrigation | Water meters, flow sensors

    Topographical data | Elevation, slope, aspect | LiDAR, aerial imagery

    Administrative data | Farm boundaries, crop types, irrigation schedules | Farm
    management systems, government records'
  authors:
  - Förster A.
  - Dede J.
  - Könsgen A.
  - Kuladinithi K.
  - Kuppusamy V.
  - Timm-Giel A.
  - Udugama A.
  - Willig A.
  citation_count: '1'
  description: Infrastructure-less networks connect communication devices end-to-end
    by managing links and routes independent of fixed networking facilities, relying
    on dedicated protocols running on end-user devices. The large variety of infrastructure-less
    concepts and related aspects can be confusing both for beginning Ph.D. students
    as well as experienced researchers who wish to get an overview of neighbouring
    areas to their own research foci. Frequently discussed topics such as different
    types of sensor-, vehicular-, or opportunistic networks are covered. The authors
    describe different networking concepts by looking at aspects such as the main
    properties, common applications, and ongoing research. Furthermore, the concepts
    by common characteristics such as node mobility, network density, or power consumption
    are compared. The authors also discuss network performance evaluation by describing
    commonly used metrics, different evaluation techniques, and software tools for
    simulation-based evaluation. The references given in each section help obtain
    in-depth information about the presented topics and give hints about open research
    questions, which can be a starting point for own investigations.
  doi: 10.1049/ntw2.12094
  full_citation: A beginner's guide to infrastructure-less networking concepts
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register IET HUB HOME JOURNALS IET PRIZE PROGRAMME SUBJECTS Visit IET IET Networks
    PERSPECTIVE Open Access A beginner''s guide to infrastructure-less networking
    concepts Anna Förster,  Jens Dede,  Andreas Könsgen,  Koojana Kuladinithi,  Vishnupriya
    Kuppusamy,  Andreas Timm-Giel,  Asanga Udugama,  Andreas Willig First published:
    25 August 2023 https://doi.org/10.1049/ntw2.12094Citations: 1 SECTIONS PDF TOOLS
    SHARE Abstract Infrastructure-less networks connect communication devices end-to-end
    by managing links and routes independent of fixed networking facilities, relying
    on dedicated protocols running on end-user devices. The large variety of infrastructure-less
    concepts and related aspects can be confusing both for beginning Ph.D. students
    as well as experienced researchers who wish to get an overview of neighbouring
    areas to their own research foci. Frequently discussed topics such as different
    types of sensor-, vehicular-, or opportunistic networks are covered. The authors
    describe different networking concepts by looking at aspects such as the main
    properties, common applications, and ongoing research. Furthermore, the concepts
    by common characteristics such as node mobility, network density, or power consumption
    are compared. The authors also discuss network performance evaluation by describing
    commonly used metrics, different evaluation techniques, and software tools for
    simulation-based evaluation. The references given in each section help obtain
    in-depth information about the presented topics and give hints about open research
    questions, which can be a starting point for own investigations. 1 INTRODUCTION
    A large number of different wireless networking methods and technologies have
    been developed in recent years. One of the main areas of wireless networking includes
    networks that do not strongly rely on existing network facilities which can be
    broadly termed as infrastructure-less networks, as opposed to heavily infrastructure-dependent
    networks such as 5G or 6G. In the infrastructure-less world, terms such as Mobile
    Ad Hoc Network (MANET), Wireless Sensor Network (WSN), Internet of Things (IoT),
    Device-to-Device (D2D), Vehicular Network (VANET), Delay-Tolerant Network (DTN),
    Opportunistic Network (OppNet), and many variations of these have been extensively
    discussed in the literature. All of them have also been extensively studied in
    dedicated surveys. However, to the best of our knowledge, no introductory overview
    exists to compare their properties and discuss their similarities and differences.
    This paper closes the gap by exploring the development of the aforementioned research
    areas and explaining differences and similarities. We have set ourselves the rather
    challenging goal of summarising, from a ten thousand-foot view, some of the defining
    characteristics and research topics of a wide range of similar yet different types
    of networks. The authors of this paper share the strong belief that if you consider
    yourself, for example, an expert in vehicular networks, you should also be knowledgeable
    in sensor networks, opportunistic networks and several others. Otherwise, as a
    community, we risk reinventing the wheel again and again while the solution to
    our problems might have been just another buzzword away. We target this paper
    to newcomers in the area, such as beginning graduate students. However, also more
    experienced newcomers, such as industry experts or experienced researchers, will
    profit from reading it to understand the different terms and their main properties
    and research contributions. This is especially true for upcoming fields, such
    as flying ad hoc networks. As it can be seen at the beginning of the introduction,
    which mentioned MANETs or VANETs, there is also the notion of “ad hoc network”
    which is closely related to the term “infrastructure-less network”. They are often
    used synonymously. However, an ad hoc network has a special property that many
    other types of infrastructure-less networks do not share. Ad hoc networks establish
    end-to-end routes for forwarding messages, even though the nodes may be mobile
    and the network topology may change frequently. In contrast, other infrastructure-less
    network architectures, such as opportunistic networks, do not set up end-to-end
    routes but use other forwarding methods, as discussed in a later section. This
    paper is a broad overview of all types of infrastructure-less networks irrespective
    of their forwarding method. There are some types of networks that resemble infrastructure-less
    networks from a wording point of view, for example, peer-to-peer networks or crowd
    computing. However, they are omitted here because they are not covered by the
    definition of an infrastructure-less network, as we define it in Section 3. We
    make no attempt to cover the entire field of wireless networking and communications
    [1], we do not consider the performance of the discussed types of networks, nor
    will we say that one is better than the other. We offer a high-level comparison
    of their goals, challenges, and assumptions and we do sketch the main research
    breakthroughs. It is those more “soft” differences, which we aim to highlight
    in this paper, giving the reader an idea of the pre-dominant types of assumptions
    being made for the different types of networks and the differences in emphasis
    of research being applied. It is unavoidable that such a discussion will be influenced
    by our own research interests, biases, and perceptions, which we have attempted
    to counter by having a range of contributing authors, working in different areas.
    In this regard, we also like to point out that the focus of topics in the paper
    results from the work area of the authors. Therefore, not all aspects of infrastructure-less
    networks are covered in the same level of detail. This is the reason why we are
    more detailed about, for example, the architecture of network designs while mentioning
    security and privacy only occasionally. Additionally, to allow readers to delve
    deeper into their areas of interest, we provide an extensive array of valuable
    references to accompany each concept under discussion. We also like to clarify
    up-front that in the interest of conciseness and readability, we will leave out
    in many places (necessary) qualifications such as “from our point of view” or
    “this is what we perceive to be the mainstream in this field”. So, for example,
    we will prefer a statement like “In wireless sensor networks (WSNs) nodes are
    mostly assumed to be static” instead of the much more accurate but much wordier
    “In our view most of the papers in sensor networking assume largely static networks;
    this does, however, not preclude the case where some or all nodes in the network
    are mobile, and in fact, there are several works where explicit (and clever) use
    is being made of mobile networks”. This guide is organised as follows. We start
    with a description of our goals and our approach in Section 2. Then, we define
    an infrastructure-less network, and identify relevant research fields in Section
    3. In this same section, we put the different fields in relation to each other,
    and we discuss them individually in detail. Section 122 compares the infrastructure-less
    networking research areas among each other in terms of certain important network
    characteristics, such as delay and mobility support requirements. Section 132
    looks into the evaluation metrics and methodologies often used for infrastructure-less
    networks. The tutorial is concluded in Section 155. 2 GOALS AND METHODOLOGY In
    this section, we first identify our goals and objectives and then discuss the
    approach we decided to follow to compile this guide. Our high-level objectives
    are: Provide the reader sufficient information to understand the most significant
    differences and similarities between different flavours of infrastructure-less
    networks. Enable the reader to transfer knowledge and experience from one field
    to another. These objectives are based on our own experience with supervising
    students at the postgraduate level. Most of them focus on one particular aspect
    of infrastructure-less networks, for example, sensor networks, and find it very
    hard to connect to related fields, to find relevant literature and to transfer
    knowledge from one field to another. We believe this is mostly due to the amount
    of published literature, which makes it simply impossible to follow all fields
    and to read all publications. At the same time, a high-level overview and comparison
    between these closely related fields is largely missing. We aim to fill this gap
    with this paper. Our objectives transform into more concrete goals to: (1) Offer
    a high-level definition of infrastructure-less networks and identify current research
    fields therein (2) Provide a concise and representative (but not exhaustive) description
    of each individual field (3) Identify important network characteristics, which
    drive the differences in the research fields (4) Compare research fields in terms
    of those network characteristics (5) Discuss typical performance evaluation tools
    and metrics The structure of this tutorial follows the above-identified goals
    closely. For the first goal, we first identified well-known infrastructure-less
    networks such as sensor networks, mobile ad hoc networks, vehicular networks,
    and so on. This first list is coming directly from the research fields of the
    involved authors. Then, we studied the recent literature to identify further types
    of infrastructure-less networks. In this way, we were able to identify some more
    fields: train-to-train networks (T2T) and ship-to-ship (S2S) networks. We also
    discuss shortly D2D networks, which can be defined as somewhere between ad hoc
    networks and infrastructure-borne networks. In order to address the second goal,
    we decided to study some particular topics of each infrastructure-less type of
    network as follows: Definition and main properties: Give a high-level definition
    as it can be found in the corresponding literature and discuss important properties
    and assumptions. Targeted applications: Discuss the main driving applications
    of the field. History: Discuss where this type of network comes from and why it
    separated later. Most prominent research: Discuss the major contributions and
    achievements in the field. Open issues and research challenges: Discuss ongoing
    issues and challenges, not yet solved. Most relevant communication technologies:
    List the most widely applied wireless communication technologies for implementation.
    Most related other concepts: Compare to the most closely related fields. Summary
    and recommended readings: Summarise and provide recommendations for further general
    studies, like surveys and books. The third and fourth goals are addressed in Section
    122, where we identified the most important network or system characteristics,
    which drive the development and deployment of the discussed infrastructure-less
    networks. These include mobility, scale, density, connectivity, data traffic,
    and power restrictions. We compare each of the infrastructure-less networking
    fields in terms of each individual network characteristic. In Section 132 we identify
    the performance tools and metrics, most widely used in the infrastructure-less
    networking community, which also addresses our fifth and last goal. 3 INFRASTRUCTURE-LESS
    NETWORKS: FLAVOURS AND CONCEPTS In infrastructure-based networks, some stations
    play a special role. Depending on the technology, these are called base stations
    (2G/GSM networks), eNodeBs or gNodeBs (3G/4G/5G networks), gateways (LoRaWAN/SigFox),
    or access points (wireless local area network (WLAN) in some of its operating
    modes). In all of these technologies, these base stations are key facilitators
    for any communication: any node wishing to communicate must associate (and perhaps
    authenticate) itself with a base station before it can communicate with others,
    and subsequently, all communication is relayed through this base station, even
    if the initiating node and the final destination are direct neighbours. The base
    stations must be pre-deployed. They are interconnected with each other via a so-called
    backbone to facilitate communications over longer distances and to manage the
    mobility of nodes. A key property of such an infrastructure-based network is that
    end devices critically depend on the base stations, and removing the latter will
    leave the end devices unable to communicate. In the broadest sense, in an infrastructure-less
    network, the critical reliance on infrastructure stations like base stations are
    completely removed or at least substantially weakened to allow end nodes to communicate
    with each other in a self-organised fashion, perhaps over multiple hops. The absence
    of infrastructure nodes means that end nodes need to have all the required capabilities
    to act as facilitators for the communications of other nodes, that is, they engage
    with routing, they need to collaborate with each other to allocate channel resources
    like frequency, code, or time, and they need to be able to carry out a wide range
    of management tasks involved with networking, for example, address assignment,
    fault management, and so forth. It is not required that a node carries out all
    these functions all the time, it is perfectly reasonable for a set of nodes to
    elect one of them as a leader node and have this leader deal with all the management
    tasks, but in an infrastructure-less network, each end node must have the capabilities
    to take over this role, if needed. Overall, infrastructure-less networks need
    to be self-organising. Furthermore, due to mobility and the instability of wireless
    channels, the network topology frequently changes, and consequently the network
    must adapt to this, for example, in its routing protocol or wireless resource
    allocation. The research area of infrastructure-less networks includes many different
    concepts or flavours, some of them connected closely to each other, some even
    overlapping, and some with very unique properties. They have developed historically
    from each other. As a first step before we dive deeply into details, we depicted
    these “family ties” in Figure 1. This family tree is built upon some important
    properties of these concepts. In this family tree, we see, for for example, three
    of the most prominent representatives, mobile ad hoc networks (MANETs), WSNs,
    and delay-tolerant networks (DTNs) have all emerged from the main idea of ad hoc
    organization, but have a different goal behind them. For example, in WSNs, we
    are mostly concerned about energy efficiency, while in DTNs, we need to tolerate
    substantial delays, mostly for space communications. Many concepts emerged and
    specialised from WSNs, such as body sensor networks (BSNs), underwater (Wireless
    Underwater Sensor Networks (WUWSNs)), or underground (Wireless Underground Sensor
    Networks (WUSNs)) sensor networks, each of them targeting a specific environment.
    Many also emerged from MANETs, such as vehicular networks (VANETs), which are
    faster and move on roads, flying networks (FANETs) to cater to drones, aeroplane-to-aeroplane
    networks (AANETs) to serve aeroplanes'' special needs, and train-to-train (T2T)
    and ship-to-ship (S2S) networks to cater for further specialised applications.
    Opportunistic Networks (OppNets) have emerged from DTNs by bringing them to personal
    communication, mostly on smartphones. Device-to-device networks (D2D) are a special
    case of cellular networks, where the base station permits direct communication
    between devices for offloading traffic from the main network. FIGURE 1 Open in
    figure viewer PowerPoint Infrastructure-less networks family tree. In this section,
    we will step through the individual concepts and discuss them. We will focus on
    their main properties, application scenarios, and achievements. The goal is not
    to exhaustively discuss all work performed (the sheer amount of available work
    simply does not allow this) but to offer an orientation to the reader to learn
    the differences and the unique properties of these concepts. Further, more in-depth
    readings are provided for each concept in the form of references. 3.1 Delay-tolerant
    networks 3.1.1 Definition and main properties Delay-tolerant networks are designed
    to cope with intermittent connectivity along the path between the source and the
    destination of data messages [2], in contrast to legacy Internet communication
    which requires uninterrupted end-to-end connectivity. For this reason, intermediate
    nodes of DTN have large buffers which can keep a set of data packets called bundles
    for an extended period of time. The intermediate node acknowledges the reception
    to the sender on behalf of the destination; this functionality is also called
    custody node. There may be multiple custody nodes along the path. Custody nodes
    are, in many cases, mobile, for example, in space networks. A DTN, therefore,
    follows the store-carry-and-forward principle—the custody node physically carries
    stored information from one location to another and then forwards it once the
    next hop is reachable. 3.1.2 Application scenarios Delay-tolerant networks were
    initially deployed for extraterrestrial networks such as satellites or deep-space
    vessels where due to large distances or occlusions, links are temporarily unavailable—see
    Figure 2, which also highlights the store-carry-and-forward principle mentioned
    before. In addition, properties of data generated by spacecraft have to be considered.
    On the one hand, there is operational data to control and monitor the spacecraft
    itself. These data are usually small by volume but must be transported with high
    priority and reliability in order to intervene in case of spacecraft malfunction.
    On the other hand, there are bulk data collected from scientific missions which
    need to be offloaded to Earth as efficiently as possible in order to save the
    scarce capacity of space links. With the growing amount of spacecraft in the Earth
    orbit and exploring deep space and the increased amount of instruments on board
    the spacecraft, the amount of data to be transported by the network has increased
    in the last decades. FIGURE 2 Open in figure viewer PowerPoint Delay-tolerant
    networks (DTNs) which were first introduced for space applications are only intermittently
    connected and mostly use the concept of store-carry-and-forward to deliver data.
    3.1.3 History The ideas behind DTN had been around for many decades in the latter
    part of the 1900s. These ideas were mainly driven by the needs of the space programme
    of USA''s National Aeronautics and Space Administration. A pioneer was Vint Cerf
    with his work on the Interplanetary Internet (IPN) in 2003 [3]. Those ideas were
    subsequently adapted for terrestrial networks by Kevin Fall [4]. The idea was
    to enable Internet Protocol (IP) based communications in use cases where connectivity
    was intermittent. The focus especially was on the ability of transport protocols,
    such as Transmission Control Protocol (TCP) to operate in use cases such as terrestrial
    mobile networks, exotic media networks, military and sensor networks where delays
    resulted in disruptions to communications. As a result of the ideas that were
    generated and the different solutions which were being proposed, subsequently,
    standardisation bodies were involved in developing common architectures and protocols,
    able to handle delay and disruption tolerance in networks. One such effort is
    the definition of the DTN architecture and the Bundle Protocol (BP) by the Internet
    Engineering Task Force in the form of Request for Comments [5-7]. 3.1.4 Research
    topics Delay-tolerant networks were thought of as a solution to make existing
    networking protocols operate under intermittency. Since intermittency was disruptive
    for transport and network layers, research has focused on finding solutions at
    these layers. The transport layer was disrupted due to breaks in sessions. The
    network layer was disrupted due to nodes attaching to different networks at different
    times, thereby, breaking the hierarchical addressing required for routing. Therefore,
    research that focussed on the transport layer problems introduced adaptation or
    shim layers below the transport layer, such as the BP [5, 8]. Solutions focusing
    on the routing layer identified different packet routing schemes that considered
    other factors compared to IP-based routing [9] provides a detailed survey of the
    routing protocols, including the metrics used in those protocols to determine
    how best to forward packets. 3.1.5 Open issues and research challenges Along with
    the continuing exploration of space, DTNs will rapidly grow in size and get a
    meshed structure so that manual routing, as it is performed nowadays, is no longer
    useful. Instead, the routing will become automated. In contrast to mobile networks
    on Earth, where user mobility is hard to predict, space vessels move on regular
    trajectories, which makes it possible to calculate future connectivity patterns.
    Routing algorithms make use of this fact for example, by deploying contact-graph
    routing where a connectivity pattern is assumed for a given time and then replaced
    by the next one when the topology of the network has changed. The constraint of
    such routing schemes is that, even though they consider changing connectivity,
    they do not take load requirements into account. While this is tolerable nowadays,
    where each transmission in a space network is previously scheduled, it will become
    increasingly complex the more space vessels are actively collecting and exchanging
    data. This issue becomes particularly important with the introduction of swarms
    of small satellites, which need communication not only for the offloading of surveillance
    data but also for the positioning and coordination inside the swarm. In the farther
    future, one can also think about deep-space relay satellites that buffer data
    from distant vessels and forward them to Earth. Besides the variation of the traffic
    load, another reason for less predictable changes in the link quality between
    space vessels is interference by the environment, such as solar effects. For this
    reason, routing protocols relying on regular schedules have to be extended for
    example, by a machine learning component, in order to cope with these less predictable
    effects. Furthermore, the IPN remains an important topic when manned space missions
    are connected to IP-based terrestrial networking services, in contrast to unmanned
    spacecraft communication for which various non-IP based protocols are provided
    by an international standardisation organization named Consultative Committee
    for Space Data Systems (CCSDS)1. The biggest challenge for such manned missions
    is that they can no longer directly communicate with Earth due to the long propagation
    time of the signals and link interruptions due to lack of transmission range or
    occlusions, for example, on a Mars habitat. As already mentioned, the transport
    layer with TCP as the standard protocol does not work efficiently in space communication.
    Transport protocols for space conditions have been specified by CCSDS, the challenge
    is the seamless integration into the terrestrial network. On the application layer,
    one could think about proxies for web access that buffer, for for example, content
    from the terrestrial Internet. Such proxies could learn about the popularity of
    content to load information proactively to make it immediately available when
    the users demand it. Live streams should respond to hints from lower layers about
    the available link capacity and may need to be buffered transparently on a proxy
    if no direct connection is available. 3.1.6 Most relevant wireless technologies
    Space-borne communication networks do not use off-the-shelf wireless technologies
    as they are known from terrestrial networks. Researchers, national space agencies
    and private operators develop specialised wireless transmission systems adapted
    to conditions in space, in particular the fact that signals are very weak at the
    receiver side due to the large distances to be covered. In order to foster interoperability
    between the different players working in this area, CCSDS has published recommendations
    for the design of interfaces used for space communication links. 3.1.7 Most related
    other concepts As shown in Figure 1, DTNs are the foundation for several types
    of terrestrial networks with intermittent connectivity. Opportunistic networks
    forward data between mobile user devices where the users'' mobility pattern dictates
    the available connectivity. Mobile ad hoc networks (MANETs) focus on extending
    IP-based networks to operate with topologies rapidly changing over time, however
    expecting paths to be set up for end-to-end connectivity. OppNets combine the
    ideas of MANETs and DTNs by relaxing the requirement of having end-to-end connectivity
    between MANET users and, at the same time, removing the assumption of DTNs that
    contacts can be predicted or looked up. 3.1.8 Summary and recommended readings
    Delay-tolerant networks have been initially introduced for space applications
    that suffer from long propagation delays and intermittent connectivities. They
    were later applied to terrestrial applications such as opportunistic networks,
    vehicular networks, and others. One of the earliest publications about DTNs in
    space networks and the IPN is ref. [10], which can be used as an introduction
    to the topic. The publication [11] gives both a historic overview of space networks
    as well as an outlook into the future. In ref. [12], the communication technologies
    and architectures for the IPN and DTNs are summarised. The survey in ref. [13]
    provides an overview of routing methods in DTNs. 3.2 Opportunistic networks 3.2.1
    Definition and main properties Opportunistic Networks (OppNets) have developed
    from DTNs and have one important distinctive property: the mobility of the nodes
    is not known apriori. OppNets target mostly human-centred applications and devices,
    such as smartphones, where devices exchange data whenever they are in contact
    with each other. Participants can join and leave the network at any time, and
    there can exist isolated nodes or islands. This property comes from the assumption
    that OppNets do not use infrastructural communication technologies, but only localised
    ones such as WLAN or Bluetooth, which enable communication between two nodes whenever
    they are in the physical reach of each other. OppNets are largely technology-agnostic,
    they can work with any wireless local technology as long as it allows to dynamically
    discover and exchange data with physical neighbours. There is no strict differentiation
    between OppNets and DTNs in the literature [14]. However, for the sake of good
    structure and scientific rigour, we decided to split and discuss them separately,
    as their research activities and fine properties differ from each other. 3.2.2
    Application scenarios OppNets target applications where infrastructure is either
    not existing at all, damaged or overloaded, and where sporadic communication is
    tolerable. Examples include disaster management applications [15], communication
    in remote regions [16], as well as communication in scenarios where larger groups
    of humans split up into smaller groups that act independently and only meet other
    groups sporadically, like, for for example, when tourists move around in a city
    in groups that make and break due to the interests they have [17, 18]. Other emerging
    application areas are vehicular communications [19, 20], agriculture [21], and
    smart city scenarios [22-24], where information exchange is localised and sporadic.
    3.2.3 History To the best of our knowledge, one of the first publications to talk
    about intermittently connected user-held devices was the work of Vahdat and Becker
    from 2000 [25], who proposed a simple, but a very efficient Epidemic forwarding
    for partially connected ad hoc networks. Later on, a publication describing the
    Haggle networking architecture [26] was published in 2004, from which the EU-funded
    FP6-IST HAGGLE project [27] resulted, which elaborated and evaluated the architecture
    and proposed a forwarding mechanism called BUBBLE Rap [28] to disseminate data.
    The SCAMPI follow-up project [29] focused on services. Since then, different efforts
    have focused on improving and evaluating the performance of OppNets. These include
    new forwarding protocols [25, 30-32], new or improved caching mechanisms, use
    of upcoming link technologies [33, 34] and newer usage scenarios [35]. A recent
    development is the use of OppNets in the Internet of Things, where stationary
    or mobile nodes disseminate information using OppNets [36]. 3.2.4 Research topics
    Most researchers assume that OppNets are always delay-tolerant, because the intermittent
    contacts and isolation of nodes often result in prolonged delivery times. This
    is true in most cases, especially when considering people-driven mobility and
    a relatively low percentage of people running OppNet services on their devices.
    This assumption has led to the deployment of the store-carry-and-forward principle
    which was already discussed in section 3. An example of how OppNets rely on this
    principle is shown in Figure 3 which also depicts the main challenge in data dissemination
    in OppNets. Node 6 is the node that finally delivers the data packet to destination
    node 7, but how can intermediate nodes predict this? The mobility is mostly human-driven,
    and predictions are hard to make, which has to be considered when designing forwarding
    protocols for OppNets. FIGURE 3 Open in figure viewer PowerPoint Opportunistic
    networks make use of occasional (unpredictable) connections and mostly use the
    concept of store-carry-and-forward to deliver data. MObility framework for CHaracteristics
    Analysis (MOCHA) [40] compares mobility traces in terms of their social, spatial,
    and temporal characteristics. Their results show that traces from similar environments
    (e.g., cities) and similar entities (e.g. vehicles) exhibit similar, but not identical
    properties. Most of the derived metrics have been described in ref. [41], including
    radius of gyration, travel distance or jump size, connectivity, centrality, betweenness,
    contact times and contact probabilities, etc. An example of their usage in forwarding
    protocols is Transmission Prediction Mechanism Exploiting Comprehensive node forwarding
    capability (TPMEC) [42], which selects the next hop of a message given the contact
    probability for the final destination (from historical encounters). Other protocols
    use variants of the centrality metric, for example, influencer [43] or efficient
    broadcast [37]. Many more are described in ref. [44]. TPMEC [42], which selects
    the next hop of a message given the contact probability for the final destination
    (from historical encounters). Other protocols use variants of the centrality metric,
    for example, influencer [43] or efficient broadcast [37]. Many more are described
    in ref. [44]. MOCHA [40] compares mobility traces in terms of their social, spatial,
    and temporal characteristics. Their results show that traces from similar environments
    (e.g., cities) and similar entities (e.g. vehicles) exhibit similar, but not identical
    properties. Most of the derived metrics have been described in ref. [41], including
    radius of gyration, travel distance or jump size, connectivity, centrality, betweenness,
    contact times and contact probabilities, etc. An example of their usage in forwarding
    protocols is TPMEC [42], which selects the next hop of a message given the contact
    probability for the final destination (from historical encounters). Other protocols
    use variants of the centrality metric, for example, influencer [43] or efficient
    broadcast [37]. Many more are described in ref. [44]. The most important existing
    implementations of OppNets are the Serval project [45], Forban [46], SOSChat [47]
    and FireChat [48]. All of these implementations employ Epidemic-like flooding.
    Also, the DTN standards described in Section 3 are relevant here and often used
    for various application scenarios, such as agriculture [21]. 3.2.5 Open issues
    and research challenges There are many open research challenges in OppNets: Unavailability
    of dedicated communication technologies. Currently, OppNet implementations use
    Bluetooth or WLAN adaptations and tweaks. One disadvantage is that this hinders
    the normal operation of the user-carried devices, such as simultaneous usage of
    WLAN for browsing. One solution to this is to duty-cycle [49] the WLAN connection
    to only serve OppNets from time to time. Conversely, this severely impacts the
    data dissemination protocols, which assume that neighbours are discovered quickly.
    Thus, real-world implementations perform always well below the predicted performance
    in simulation [50]. Security and especially data privacy is very problematic with
    most of the proposed destination-oriented data dissemination protocols. Many of
    them require the nodes to exchange information about their contacts, their mobility,
    or their social preferences. Such information is highly sensitive and further
    prohibits real-world applications. Optimal broadcast (destination-less) data dissemination
    techniques are largely missing. Even if some protocols have been proposed [32,
    37, 38], they still perform well below the possible optimum. Existing destination-less
    protocols require very high communication costs and cache sizes and do not scale
    with increasing traffic. Seamless handover between delay-tolerant and non-delay-tolerant
    applications and infrastructures has not been extensively studied yet. The open
    questions include how to differentiate between both types of traffic and how to
    connect delay-oriented infrastructures like WLAN with delay-tolerant ones. The
    need is also great for controlled testbed environments and real deployments. 3.2.6
    Most relevant wireless technologies Nodes in OppNets require direct wireless communication
    technologies to communicate among nodes. The most widely discussed wireless technologies
    [51] are IEEE 802.11 [52] in ad hoc [53] or WiFi Direct mode [54-56], Bluetooth
    [52, 57, 58], LoRaWAN [59], and the PHY [60] mode of LoRa. Sometimes also IEEE
    802.15.4 is considered [61], but not available on end-user devices. An overview
    of all relevant technologies is provided in the Appendix. 3.2.7 Most related other
    concepts The foundations of OppNets evolved from the concepts of mobile ad hoc
    networking (MANET) and delay tolerant networking (DTN). MANETs focused on extending
    IP-based networks to operate in an ad hoc mode, expecting paths to be formed for
    end-to-end connectivity. OppNets combine both ideas by relaxing the requirement
    of having end-to-end connectivity between MANET users and, at the same time, removing
    the assumption of DTNs that contacts can be predicted or looked up. Wireless sensor
    networks and all their subconcepts are also related to OppNets. In fact, many
    routing protocols in WSNs are named “opportunistic” [62], referring to the hop-by-hop
    discovery and data dissemination in WSNs. In the WSN case the “opportunistic”
    approach (e.g. opportunistic forwarding) is often more targeted towards exploiting
    link fluctuations/fading, and not so much to counter the mobility of nodes. Especially
    in highly unstable environments such as underwater WSNs [63], opportunistic protocols
    are used. Last but not least, vehicular networks are opportunistic-based too,
    even if the mobility of vehicles is slightly more predictable than that of humans
    alone [19, 20]. However, VANETs can be also more challenging than OppNets in general
    in terms of speed, as vehicles can travel at very high speeds. 3.2.8 Summary and
    recommended readings OppNets focus on enabling data delivery in environments where
    connectivity is intermittent. They use the store-carry-and-forward methodology
    to deliver destination-less or destination-oriented data and exploit mobility
    as a means of disseminating data by using encounters with other devices to exchange
    cached data. There are several surveys that provide insights into the different
    aspects of OppNets. A good overview of the research achievements in OppNets is
    provided in ref. [35]. The surveys in refs. [44, 64, 65] provide a concise summary
    of the different architectural elements, the application scenarios, and some of
    the forwarding protocols used in OppNets, and cover also performance evaluation
    topics. 3.3 Mobile ad hoc networks 3.3.1 Definition and main properties of MANETs
    A MANET is an ad hoc, multihop wireless network in which the nodes can possibly
    be mobile [66, 67]. A MANET is often only set up temporarily and for a limited
    purpose. Mobile Ad Hoc Network nodes are usually assumed to be human-centred devices
    like laptops, tablets and the like, and these devices run applications of interest
    to humans, for example, web browsers, video- and audioconferencing tools, chat
    software, tools for collaborative editing, etc. A typical MANET scenario is depicted
    in Figure 4. FIGURE 4 Open in figure viewer PowerPoint A typical mobile ad hoc
    network (MANET). Accordingly, MANET research and MANET protocols are designed
    to support well IP-based protocols (IP, TCP, UDP, SCTP, multicast protocols, etc.)
    and IP-based applications (e.g. video conferencing and collaborative editing),
    and the resulting user traffic characteristics (packet sizes and packet inter-arrival
    time distributions) are similar to user traffic characteristics in wired networks.
    There exist some typical assumptions about MANETs. As opposed to WSNs (Section
    63), MANET nodes have quite limited or no interaction with the physical environment,
    as they mainly serve human-interest applications. Mobile Ad Hoc Network nodes
    can be mobile but are commonly assumed to move at relatively low speeds, for example,
    pedestrian speeds. The mobility patterns are often assumed to be completely random
    (like for example in the random waypoint model [68, 69]) and not strongly bound
    by additional constraints—unlike vehicular networks (VANETs, Section 30), where
    nodes are constrained to move along streets. A single MANET is considered to be
    connected to most if not all of the time, that is, any node in the network has
    a route to any other node. Network partitioning is usually considered a rare exception
    and treated as such. MANETs are often assumed to be multi-hop wireless networks,
    with low to moderate network diameters. MANETs can operate in isolation, for example,
    as a temporary network set up for an ad hoc working group to support collaborative
    work on a document. However, there can also be one or more nodes with access to
    the general Internet, which then serve as gateways. All nodes except for the gateways
    have the same set of capabilities, even though the member nodes can temporarily
    elect some particular member to take on special roles, for example, related to
    resource management. 3.3.2 Targeted applications Important use cases include temporary
    local networks and extensions to existing networks, for for example, an ad hoc
    working group sharing files or doing collaborative editing during a meeting, where
    the participants communicate directly with each other. This can also include the
    sharing of resources like printers, file servers, etc, perhaps facilitated by
    service discovery protocols [70, 71] that allow nodes to offer and advertise services
    to others, and nodes needing services to specify their requirements and find service
    providers. Another use case is the extension of wired networks for Internet access
    and the establishment of a multi-hop connection between wireless terminals and
    an Internet Gateway (IGW). Here, most communication is between the wireless terminals
    and the gateway, and rarely between wireless terminals (except for routing/forwarding
    or other network management purposes). These use cases clearly show that MANETs
    were always considered as a means of extending the reach of traditional networks.
    Establishing paths include delays and overheads due to the signalling involved,
    varying based on the specific signalling protocol used. But once the paths are
    established, the applications simply employ traditional communication protocols
    (IP, TCP, UDP, etc.), expecting similar end-to-end delays and overheads. However,
    it is fair to say that there is no real “killer application” for MANETs and neither
    has there been any strong commercial interest and research emphasis has shifted
    somewhat towards vehicular and flying ad hoc networks (VANETs and FANETs), and
    WSNs. Nevertheless, the research activities of the MANET community have laid important
    foundations for these newer fields and MANETs can be regarded as their “ancestor”.
    3.3.3 History Research efforts in infrastructure-less networking already started
    with the DARPA packet radio project, initiated in 1973 (see [72, 73]). The introduction
    and commercialisation of wireless local area technologies like the IEEE 802.11
    standard then led to a vast increase in research activities. The first version
    of IEEE 802.11 was published in 1997, building on earlier commercial systems like
    WaveLAN (introduced in 1988) and ArLAN. Research in MANET routing protocols gained
    traction in the early to the mid-1990s, when Destination-Sequenced Distance-vector
    routing, one of the first routing protocols for MANETs was published in 1994 [74].
    Later on, many more protocols emerged and were adopted as Internet standards.
    3.3.4 Research topics The area that has received perhaps the most attention is
    multi-hop routing protocols. In recognition of node mobility, and in response
    to the observation that in many scenarios it is simply not necessary for a node
    to have a route to an arbitrary other node available immediately, the class of
    reactive routing protocols have gained prominence in the MANET area. Examples
    of this class are the Dynamic Source Routing [75] and Ad-hoc On-Demand Distance
    Vector routing protocols [76]. Reactive routing protocols differ from their (pro-active)
    counterparts on the Internet. In pro-active routing, the routing protocols are
    active all the time to gather information about the topology and to calculate
    forwarding tables for all possible destinations, independently of whether there
    is any actual data transfer ongoing. In reactive routing protocols, routes are
    only discovered and the routing state is only created when an actual need arises,
    that is, if some source node wants to send a packet to a destination node. Note,
    however, that not all MANET routing protocols are reactive ones, for for example,
    Optimized Link State Routing [77] is a pro-active routing protocol. There are
    further classes of MANET routing protocols, for example, geographic routing protocols
    [78] like the greedy-perimeter stateless routing protocol [79], where routing
    is only based on geographic positions. In particular, a forwarder node will have
    to make a routing decision knowing only the geographic position of the destination
    and of its immediate neighbours. An important and foundational stream of research
    has been concerned with the provision of quality-of-service (QoS) guarantees over
    multihop wireless networks, including transmission scheduling schemes [80, 81],
    admission control or QoS-aware routing [82, 83]. Another prominent line of research
    has been the behaviour and performance of TCP over wireless networks [84], in
    particular multihop wireless networks [85-87]. A key difficulty is related to
    TCP''s congestion control algorithm [88] which in several TCP versions have a
    tendency to interpret packet losses as a sign of congestion, triggering TCP to
    reduce the sending rate. In wireless networks, however, packet losses can also
    be induced by the wireless channel. Besides the construction of protocols and
    systems for MANETs, the emergence of wireless multihop networks has triggered
    a significant amount of theoretical research, which comes broadly under the notion
    of network information theory [89] and which includes important results on the
    capacity of mobile multi-hop networks [90, 91] or the application of novel coding
    techniques like network coding to wireless multihop networks [92]. 3.3.5 Open
    issues and research challenges Broadly, the research mainstream has moved away
    from general MANETs towards more specialised types of wireless multihop networks,
    including vehicular networks (Section 30), flying ad hoc networks (Section 39),
    sensor networks (Section 63), and opportunistic networks (Section 12). 3.3.6 Most
    relevant wireless technologies The field of MANETs grew more or less in parallel
    with the emergence of commercially available WLAN technologies, and in this class
    the IEEE802.11 standard family [93] (also referred to as WiFi) gained practically
    complete dominance already in the second half of the 1990s. Hence, naturally,
    the bulk of research work was built on WLAN. Some of the WLAN (and more general
    WLAN) characteristics most relevant for MANET research are: (i) ranges of up to
    a few hundred of metres; (ii) data rates of tens or even hundreds of Mbit/s; and
    (iii) availability of decentralised medium access control protocols. An overview
    of all relevant technologies is provided in the Appendix. 3.3.7 Most related other
    concepts The most related other concepts are vehicular and flying ad hoc networks
    (VANETs, FANETs) and the different types of WSNs. VANETs consider a special case
    of MANETs with vehicles as devices and the resulting vehicular mobility on road
    networks. FANETs are often seen as a specialisation of VANETs, where devices are
    flying drones moving without the restrictions of a road network. In the case of
    WSNs, the main difference is the extreme resource limitation within sensor nodes
    and the need for energy efficiency. At the same time, mobility is usually not
    considered a lot in WSNs and applications do not centre on humans but on interactions
    with our physical environment. 3.3.8 Summary and recommended readings The research
    activities in the field of mobile ad hoc networks have been foundational for several
    other fields of ad hoc networks, in particular, they have led to a deeper understanding
    of the challenges in routing, QoS provisioning, end-to-end transport, and several
    other issues in multi-hop mobile wireless networks. Surveys of routing protocols
    can be found in [94, 95]. There also exist good books summarising the research
    on MANETs [66, 67]. 3.4 Vehicular ad hoc networks 3.4.1 Definition and main properties
    Vehicular Ad Hoc Networks (VANETs) are an important component of intelligent transportation
    systems (ITS), which aim to improve transportation of humans and goods to be safer,
    more environmentally friendly and more resource-efficient [96]. An ITS system
    architecture (an example is shown in Figure 5) involves several stakeholders and
    devices, including vehicles (also autonomous ones), road-side units (RSU), possibly
    satellites and stationary computing elements like (the cloud) servers. An essential
    part of an ITS is the communication between vehicles (V2V—vehicle-to-vehicle communications)
    and between vehicles and RSU or other fixed infrastructure (V2I—vehicle to infrastructure).
    In the ITS architecture adopted in the United States,2 the V2X part of an ITS
    relies on ad hoc networking techniques. FIGURE 5 Open in figure viewer PowerPoint
    Typical Vehicular Network (VANET) scenario. There are some key properties distinguishing
    vehicular ad hoc networks [97, 98] from general ad hoc networks. First, a primary
    purpose of vehicular networks is to support a wide range of road safety applications
    (e.g. collision avoidance, intersection collision warnings, lane change assistance,
    emergency vehicle warnings, etc.), and many of these applications require vehicles
    to frequently broadcast their own position, speed, and heading to their immediate
    neighbourhood. A fairly typical assumption is that these messages are sent every
    100 ms [99]. In addition to these time- and reliability-critical applications,
    they also need to support general IP traffic to support applications in the area
    of entertainment or traffic resp. vehicle fleet management. Secondly, the mobility
    assumptions in VANETs are substantially different from those in general MANETs.
    In VANETs, the nodes move at vehicular speeds ranging from 40 to 60 km/h in urban
    environments and often exceeding 100 km/h on motorways. Hence, vehicular nodes
    move much faster, leading to a much more volatile topology and only relatively
    short connectivity periods. At the same time, the movements of vehicles are much
    more predictable (since they usually follow streets) and can be strongly correlated
    (e.g. all cars on a one-way road will move in the same direction). Third, in VANETs
    there is a strong need to include geographical concepts, for example, one needs
    communication primitives allowing to disseminate information to all or only some
    of the nodes within a given geographical region. This has not received much attention
    in the MANET space. A further related point is that in VANETs many information
    items are only of local relevance and only need to be disseminated in some geographical
    neighbourhood of a transmitter. Information is also often only valuable for a
    limited amount of time, like for example, information about ephemeral events like
    congestion. 3.4.2 Targeted applications The main application areas for vehicular
    networking are described in [99], together with important requirements. Of particular
    importance are applications related to road safety, for for example, collision
    warnings, warnings about overtaking vehicles, merging assistance, stationery vehicle
    warnings, and others. The goal of traffic efficiency and management applications
    are to improve the traffic flow and efficiency, for for example, reducing fuel
    consumption through platooning [100], disseminating map updates to vehicles, and
    others. Furthermore, there are infotainment applications. 3.4.3 History Research
    and development of ITS in general and vehicular networks in particular already
    started in the 1990s. A key development was the Dedicated Short-Range Communications
    (DSRC) technology in the United States [101, 102], which combined the IEEE 802.11p
    protocol and the WAVE resp. IEEE 1609.x standards suite [103-105], the latter
    specifying operation on multiple frequency channels, security aspects, networking
    services and message formats for vehicular applications (the WAVE Short Message
    Protocol). These developments were supported by the allocation of a frequency
    band in the 5.8–5.9 GHz range dedicated to vehicular communications. In the last
    few years, there has been substantial interest in augmenting or even replacing
    the DSRC services with cellular technologies like LTE or 5G, also often denoted
    as C-V2X (“cellular vehicle-to-x”) [106, 107]. 3.4.4 Research topics An important
    research area in VANETs are MAC protocols [108, 109]. These are challenging to
    design because VANETs are faced with a fast-changing topology and have to provide
    reliable and periodic local broadcasts of safety messages to neighbouring vehicles.
    To address reliability and periodic transmissions, distributed TDMA-like MAC protocols
    have received some attention [110-112]. The majority of the work, however, has
    focused on the properties of IEEE 802.11p, as it is a part of the DSRC protocol
    stack. A key problem in IEEE 802.11p is that safety messages are transmitted as
    local broadcasts, and the sender does not get any feedback about the transmission
    outcome. Hence, the transmitter will not know if its messages have experienced
    collisions, in particular, hidden-terminal collisions and the reliability of IEEE
    802.11p for safety applications has received significant attention, for example,
    in [113-115]. Another important research area in VANETs is routing [116, 117].
    Due to the high relative speeds, the network is quite volatile and established
    routes become stale quite quickly, posing serious problems for classical MANET-type
    routing protocols. Furthermore, VANETs often have to deal with intermittent connectivity
    between nodes, for example, when a platoon of cars on a motorway becomes separated
    temporarily. These issues have motivated researchers to design specifically tailored
    VANET routing protocols, some of which extend classical MANET routing schemes
    [118], while others use geographical routing and forwarding [119]. A third important
    research area for VANETs is protocols for information dissemination, which can
    deal with the problems posed by intermittent connectivity [120-123]. These protocols
    often incorporate store-carry-and-forward techniques, which implies that VANETs
    also operate the same way that opportunistic networks do. Information dissemination
    protocols also need to be cognizant of the fact that information is often only
    of value for a limited time or within a limited region. This research area overlaps
    largely with opportunistic networks, detailed in Section 12. 3.4.5 Open issues
    and research challenges VANETs pose substantial challenges in the areas of security,
    trust, and privacy [124]. In traditional centralised approaches to security (e.g.
    in enterprises) users and nodes are usually authenticated against a centralised
    database and the devices themselves are tightly managed. In ITS it would be impractical
    or even impossible to establish a centralised database for authentication, and
    the devices/vehicles are generally unmanaged and can be compromised. It is therefore
    in general hard for a receiver of a vehicular message to authenticate or trust
    the sender. Instead, it appears more promising to establish trust in the contents
    of a message, for example, by comparing it against messages from other senders
    related to the same event. 3.4.6 Most relevant wireless technologies The preferred
    technologies for VANETs and ITS have varied between regions. Until quite recently,
    both the US and Europe have converged on a technology known under the designation
    IEEE802.11p, which started out as an amendment to/a variant of WLAN and has since
    been integrated into the WLAN standard [93, 125]. It shares many characteristics
    of other WLAN variants, but has a modified physical layer (to increase range and
    make it more robust to mobility) and includes MAC layer modifications that remove
    the need for authentication/association and increase interoperability with the
    IEEE1609.4 WAVE multi-channel extension. Recently, there has been substantial
    interest in C-V2X, see above. An overview of all relevant technologies is provided
    in the Appendix. 3.4.7 Most related other concepts VANETs have commonalities with
    general MANETs but use different assumptions about traffic load (in particular
    the added safety-critical traffic) and mobility features (higher speeds and better
    predictability). Due to their mobility properties VANETs also have a higher propensity
    to be only intermittently connected, which explains why opportunistic networking
    techniques have also often been considered in the context of VANETs [122, 126,
    127]. 3.4.8 Summary and recommended readings Vehicular ad hoc networks, while
    sharing some commonalities with MANETs have unique characteristics which make
    them a class of their own. These characteristics include much higher node speeds,
    more constrained node trajectories, and more volatile topologies, which result
    in a higher potential for intermittent connectivity. The potential societal and
    commercial benefits of VANETs are well understood and have motivated government
    agencies and car manufacturers to enter this area [128]. For further studies,
    these papers give a good overview of VANETs [129-132]. 3.5 Flying ad hoc networks
    3.5.1 Definition and main properties A FANET is made up of several drones, formally
    called unmanned aerial vehicles (UAV), possibly of different types. A drone is
    a remotely or autonomously piloted aerial vehicle that carries an application-dependent
    payload, for example, cameras, LIDARs, or other sensors. There are two main classes
    of drones: fixed-wing and rotary-blade drones (the latter are also often referred
    to as copters). Fixed-wing drones are similar to aeroplanes, they have fixed wings
    with a predetermined aerofoil generating lift, and a propulsion system moving
    the drone forward [133]. In rotary-wing drones, lift and movement are generated
    through rotating rotor blades. Fixed-wing UAVs can achieve much higher speeds,
    much longer mission times, and can carry more payload, but copters have better
    maneuverability, for for example, they can perform vertical take-off and landing
    or can hover over a fixed position. Some designs of rotary UAVs are discussed
    in [134, 135]. Many UAV applications can benefit from deploying multiple UAVs,
    operating individually and only interacting to avoid collisions, or forming a
    FANET to enable deeper collaboration. Such applications include object detection
    (several UAVs searching for an object and sharing information about their observations
    so far [136]), or object inspection (several UAVs take observations of the same
    object, e.g., from different angles/positions, or using different sensors). It
    is fair to say that civil applications of collaborative swarms are still rare.
    General advantages of using several UAVs instead of a single one include increased
    dependability through redundancy, and the ability to operate “in parallel” to
    gain significant speedups. A typical FANET Architecture is shown in Figure 6.
    A ground station is usually operated by a human user, it can range from a simple
    remote control for small UAVs to much larger stations which include also payload
    control. The ground station transmits control commands for manipulating the UAV
    flight paths, and possibly also control commands for the payloads (e.g., starting/stopping
    sensors) through the uplink channel. In the opposite direction, the downlink channel
    is used for acknowledgements of control commands, frequent status information
    from the UAVs (e.g., position, speed, heading—telemetry), and transmitting sensor
    data or payload information. The information exchanged among UAVs often includes
    position/speed/heading and mission-specific information, for example, about task
    allocation, coordination of movements in swarms or formations. The communications
    technology used among UAVs can generally differ from the one used for ground communications.
    Within the UAV swarm, there is often one or a few designated members which maintain
    the ground link and which act as a gateway for the other UAVs, hence, a multihop
    ad hoc network needs to be established among the UAVs. Alternatively, each UAV
    can have a separate link to the ground station, and inter-UAV communication is
    going through the ground station. In another alternative network architecture,
    UAVs could be grouped into clusters with an ad hoc intra-cluster communication,
    and inter-cluster communications being facilitated by the ground station. FIGURE
    6 Open in figure viewer PowerPoint Typical flying ad hoc network (FANET) architecture.
    3.5.2 Targeted applications A FANET broadly needs to support three different kinds
    of data, with different requirements. Telemetry data A UAV periodically reports
    the status of onboard sensors (IMU and GPS information) and its own state (speed
    and direction). Coordination data Data required to coordinate the UAVs, for example,
    frequent information about the position, speed, heading for collision avoidance,
    data for collaborative flight path computation, routing and network information.
    Sensor data Onboard sensors data (e.g. camera) is being reported to the ground
    station. In the last few years, drones or UAVs have found applications in a wide
    range of areas focusing on the above requirements, for environmental monitoring
    [137], surveillance and inspection of infrastructure [138], search and rescue
    [134, 136], logistics and delivery services, telecommunications and public safety
    communications [139-143], as well as to collect data from ground sensors, and
    in forestry and precision agriculture [144, 145]. 3.5.3 History FANETs are a relatively
    young area of active research. The earliest known work related to the use of UAVs
    for commercial purposes was in agriculture [146], in 2002. The work was related
    to developing an unmanned helicopter to map the area covered by crops. 3.5.4 Research
    topics There are several primary areas on which research has focussed. The first
    of these is the designs (or the types) of UAVs. The work in refs. [135, 137, 147-149]
    provides research done on the designs of the different drone types. A second large
    area concerns applications of UAVs (see the references given above), which often
    integrate techniques from artificial intelligence (e.g., computer vision) and
    optimization to determine tasks for individual UAVs, compute flight paths, and
    so on. In particular, (cooperative) path planning is a rich area of research,
    see for example, [150-153]. And of course, classical topics like routing have
    also received significant attention [154]. 3.5.5 Open issues and research challenges
    The research issues in FANET design overlap substantially with important research
    issues in VANETs. In both cases, the mobility characteristics of high node speeds
    and frequent topology changes make the design of routing or medium access control
    protocols a challenge. In the case of MAC protocols, the research emphasis is
    largely the same between FANETs and VANETs, whereas in the case of routing protocols
    the different properties of FANETs (three-dimensional node deployments, reduced
    predictability of node trajectories) require unique solutions. Note that FANETs
    also naturally have some overlap with AANETs, though the latter tend to operate
    at higher speeds and have a substantially lower network density than FANETs. Aside
    from these more classical research areas shared between VANETs and FANETs, there
    are some issues specific to FANETs. A more foundational issue is to gain a more
    detailed understanding of the link characteristics in aerial networks so that
    suitable channel models can be created. A second key area is the design of coordination
    and collaboration protocols allowing UAVs to perform joint task allocation and
    path planning. Furthermore, many applications will also require high-quality video
    to be streamed from selected FANET nodes to a human on the ground, and this traffic
    needs to properly co-exist with real-time traffic for coordination and control.
    A quite important issue for individual UAVs and FANETs is airspace management
    [155], which in the broadest sense focuses on avoiding collisions between aerial
    vehicles, in particular between UAVs and manned vehicles. However, this problem
    is out of scope for this paper. 3.5.6 Most relevant wireless technologies For
    air-to-air communications between drones, most publications assume WLAN (or its
    802.11p variant) [93], particularly when higher data rates are required between
    drones (e.g. for transmission of video streams). Cellular D2D is also used to
    enable reliable communication among UAVs [156]. For lower data rate requirements
    and when energy is an issue, a low-power local or personal area networking technology
    like IEEE 802.15 [157] has been considered. An overview of all relevant technologies
    is provided in the Appendix. 3.5.7 Most related other concepts FANETs have many
    similarities with VANETs, for example,: (i) the relatively high speeds of the
    involved vehicles (fixed-wing UAVs can reach speeds of up to 100 m/s); (ii) the
    need to frequently exchange information about the position, speed and direction
    with neighbours to avoid physical collisions; and (iii) the fact that energy considerations
    do not play a major role in the design of network protocols—in both cases the
    energy consumption of a UAV is dominated by the energy required to keep it in
    the air. However, there are important differences in the mobility properties:
    in VANETs, the stations move in two dimensions and are often constrained to roads;
    in FANETs, the stations move in three dimensions and are much less constrained.
    Furthermore, VANETs are made up of independent nodes under different ownership,
    whereas to date FANETs are mission-specific and the nodes cooperate under a common
    authority. 3.5.8 Summary and recommended readings FANETs are a young and emerging
    area, and one can expect substantial change over the next few years as commercial
    applications and the regulatory landscape evolves, for example, allowing for a
    larger degree of autonomous and beyond visual line-of-sight operations. In terms
    of network properties FANETs are perhaps closest to VANETs and AANETs, but with
    some important differences, including different mobility properties or the fact
    that as of today FANETs are made up of cooperating stations under the same ownership.
    A number of surveys have appeared recently, including [135, 149]. 3.6 Air-to-air
    networks 3.6.1 Definition and main properties Ad hoc networks consisting of multiple
    aircraft used to extend the connectivity over continents and oceanic regions are
    referred to as Aircraft-to-Aircraft Networks (AANET) or Aeronautical Ad Hoc Networks.
    AANETs enable air-to-air communication to exchange information among Aircraft
    over multiple hops. Generally, the use of wireless communication in aviation applications
    is categorised as follows (additionally, refer to Figure 7): FIGURE 7 Open in
    figure viewer PowerPoint Categories of wireless communication used in aviation—(a)
    inside the aircraft, (b) external wireless communication, and (c) communication
    between aircraft. Inside the aircraft Modern aircraft use different communication
    technologies and a large number of sensors and actuators, for the purpose of improving
    the operations, providing more comfort for passengers, and simplifying the maintenance
    procedure. However, the current means of communication used for maintenance purposes,
    for example, monitoring the air quality inside the cabin, is still based on wired
    technologies. In 2015, the frequency band of 4200–4400 MHz was allocated for on-board
    wireless communication. The current standard that is being discussed to replace
    on-board wired communication is called “Wireless Avionic Intra Communication (WAIC)”
    [158]. The WAIC standard considers a TDMA scheme in combination with channel hopping
    and ARQ to compensate for packet losses caused by interference. The WAIC-based
    avionic applications can be considered as a specific category under WSNs (refer
    to (a) of Figure 7). External wireless communication When an aircraft is in the
    air, either a satellite link or a cellular link is used for communication. This
    requires to enable communication with the control centres, ground staff and also
    to let passengers access the Internet, for example, GoGo@2Ku system is capable
    of supporting at least 70 Mbit/s per aircraft [159] (refer to (b) of Figure 7).
    Communication between aircraft Though satellite links provide global coverage,
    they are expensive and have higher delays. Unfortunately, cellular coverage is
    limited to the land area. Considerations of these hindrances and avionic requirements
    like reducing the congestion of air space during peak times, direct communications
    among aircraft for supporting formation flights to reduce fuel consumption, have
    inspired both academic and industrial communities to develop the AANET concept.
    AANETs extend the coverage range over oceanic and remote airspace where no connectivity
    to the base station and satellite exists. AANETs also reduce the communication
    cost and delay in communications compared to the traditional avionic wireless
    communication achieved with satellite links. The different kinds of existing as
    well as upcoming communication technologies used in avionic applications are shown
    in Figure 7. Additional details about these technologies are given in ref. [160].
    Here we focus only on the third category, which is concerned with the communication
    between aircraft, referred to as AANETs. 3.6.2 Targeted applications There are
    mainly 3 types of applications that require connectivity over air. Air Traffic
    Control (ATC) provides all communications between the cockpit crew and the air
    traffic controllers and the computation of aircraft position using DMEs (Distance
    Measuring Equipment). This should be very safe and reliable. The current system
    is based on radar-based technologies. Airline Operational Communications exchange
    business-related information between the crew and the airline operations centre
    on the ground, for example, related to catering. Aeronautical Passenger Communication
    dedicated for entertainment applications. 3.6.3 History AANETs are still a relatively
    young research area with the earliest works appearing in 2005–2006. Their focus
    was the extension of Internet connectivity over other aircraft using ad hoc networks
    to reach the aircraft that has better Internet connectivity [161]. The idea to
    have ad hoc networks in the air mainly came about with the introduction of Internet
    connectivity inside aircraft for the use of passengers using mechanisms such as
    Connexion by Boeing [162]. 3.6.4 Research topics Most application scenarios considered
    in AANETs serve ATC needs. Some research focuses on reliable communication to
    share flight recorder information among aircraft [163] in proximity from time
    to time and to exchange control information for fuel-saving purposes. For example,
    the sharing of the expected waiting time for landing via the propagation of Traffic
    Collision Avoidance System messages helps an aircraft to smoothly reduce the speed
    even before reaching the airport''s coverage area. This helps to reduce fuel consumption
    by avoiding drastically reducing the speed. Formation flight is an upcoming avionic
    application to let multiple aircraft fly together similar to the formation flying
    of birds. This helps to save fuel and thus carbon dioxide emissions. Aircraft
    flying over the North Atlantic air space are extensively studied for AANET research
    as they create stable communication links due to less movement and stable velocities
    [164-166]. An aircraft closer to the ground or having a satellite link acts as
    an IGW of the AANET. 3.6.5 Open issues and research challenges Like in MANETs,
    several ad hoc routing protocols have been proposed and evaluated for AANETs.
    The main research challenges of AANETs are on mobility, security, reliability,
    and interference. One key research area is to discover an aircraft, which serves
    as an IGW which has either a satellite or a ground-based cellular connection.
    A popular routing scheme used in AANETs is geographic-based forwarding [160].
    Further, the upcoming communication technologies used in AANETs such as L-band
    Digital Aeronautical Communications System (LDACS) [167] are being evaluated to
    integrate secondary data without interfering with the existing system like DMEs.
    In contrast to MANET mobility models with unpredictable node trajectories, AANET
    mobility mainly depends on pre-planned flight routes. Therefore mobility patterns
    are mainly analysed based on existing flight data records [164]. In summary, the
    relative position of the aircraft is more or less stable in an AANET, while the
    connection to an IGW is constantly changing. Energy efficiency is not an issue
    in AANETs and thus also resource intensive optimization and machine learning algorithms
    are considered to enhance the reliability of communications [168, 169] and to
    find the optimum IGWs. 3.6.6 Most relevant technologies L-band Digital Aeronautical
    Communications System Air-to-Air (A2A) mode enables IPv6-based air-to-ground communication
    ensuring interference-free coexistence of LDACS in parallel with other aeronautical
    systems in the same frequency band (960–1164 MHz). L-band Digital Aeronautical
    Communications System supports bidirectional links to multiple aircraft under
    its control. User data transmissions over LDACS are scheduled by the ground station,
    while control data uses statically allocated recurring resources. The current
    specification documents do not include scheduling. The LDACS data link layer uses
    ARQ to provide reliable data transmission. L-band Digital Aeronautical Communications
    System specifications are not yet standardized [167, 170]. Some of the LDACS A2A
    most relevant characteristics for AANET research are: (i) ranges of up to 370
    km; (ii) data rates of 315 to 1428 kbit/s (ground-air) and 294 to 1390 kbit/s
    (air-ground); (iii) 512 planes per cell; and (iv) 34–968 bytes payload. An overview
    of all relevant technologies is provided in the Appendix. 3.6.7 Most related other
    concepts As in MANETs, AANETs are also formed in dynamic topologies with self-organised
    routing. But compared to MANETs, aircraft forming AANETs travel along predefined
    trajectories rather than having random changes in direction or speed. Furthermore,
    while power consumption is amongst the more important issues in MANETs, this is
    not the case for AANETs. The characteristics of radio propagation follow mostly
    the Line of Sight pattern for AANETs. Both, acceptable delays and throughput to
    satisfy passengers'' needs in the aircraft and additionally, reliable links are
    the main requirements for AANETs [160] while MANETs are mostly focused on energy-aware
    routing and maximising the network lifetime. 3.6.8 Summary and recommended readings
    AANETs provide an extension of the Internet connectivity over other aircraft using
    ad hoc networks to reach an aircraft that has better Internet connectivity and
    also enhancing information sharing among aircraft. In contrast to MANET applications,
    aircraft manufacturers and telecom operators are very keen on realizing AANETs.
    The main challenge is to certify technologies used in AANETs before real deployments.
    We recommend the survey in ref. [160] to know more about the current research
    progress, recent experimental results and future research directions, and possible
    scenarios for AANETs. 3.7 Wireless sensor networks 3.7.1 Definition and main properties
    Wireless sensor networks consist of (wirelessly) interconnected sensors [171-173],
    which can measure a range of different environmental variables, for example, temperature,
    or light intensity. Individual sensors are housed in a sensor node platform, which
    integrates the actual sensors, a general-purpose processor or microcontroller,
    memory, transceiver, energy supply, and possibly some additional circuitry. Sensor
    node platforms tend to be small embedded platforms with rather limited resources
    in terms of computational power and memory, and are often deployed in large numbers.
    A very early paper in the field coined the (still) visionary notion of “smart
    dust” [174]. While the popular node platforms have evolved over time (for example
    memory is now in the orders of tens to hundreds of megabytes whereas in the beginning,
    memory was in the order of tens to hundreds of kilobytes), the “small platform”
    assumption still holds, relatively speaking [175]. Furthermore, most sensor nodes
    are assumed to be battery-driven and thus energy efficiency becomes crucial and
    has been one of the main drivers for research. We briefly summarise some of the
    “typical” assumptions being made in much of the mainstream sensor networking research:
    A large fraction of nodes is battery-driven and needs to conserve energy, for
    example, through frequent sleeping. Network designers and researchers often aim
    for network lifetimes in the order of months or even years. Nodes are severely
    limited in terms of resources like memory and/or computational capability, due
    to cost reasons and for reasons of energy expenditure. This limits the amount
    of processing that nodes can do. A common communication pattern is convergecast,
    where the sensor nodes report their data to one or a few special sink nodes, which
    are responsible for collecting the data and its further forwarding. There is usually
    also communication from the sink to all sensors, for example, to change the configuration
    of the sensor network or disseminate code updates. The network can be large, sometimes
    dense, and may have a network diameter of several hops so that routing is required.
    Most of the nodes are static, but sinks can be mobile [176]. Packets mostly contain
    sensor data and tend to be rather small. Sensor data can be generated periodically
    or in an event-driven fashion, and the network may have to carry a substantial
    fraction of periodic data packets. 3.7.2 Targeted applications Sensor networks
    have been designed for many applications, for example, in environmental monitoring
    [177], monitoring of built infrastructure [178, 179], distributed industrial and
    process control [180-182], or agriculture [183, 184]. Most of these applications
    share one property: the network is isolated from the rest of the world, the sensors
    are geographically close to each other and some environmental properties are monitored.
    In some rare cases, also actuators are involved, for example, for irrigation applications
    [185]. 3.7.3 History The field of sensor networks came into being when advances
    in hardware miniaturisation and low-power circuitry for processors and transceivers
    made possible the construction of the earliest sensor node platforms [174, 186].
    A key point in the development of sensor networks was the publication of the IEEE
    802.15.4 standard for the physical and medium access control layers in 2003 [187]
    and the market availability of compliant transceivers (e.g. [188]). Slightly later,
    the first version of the complementary ZigBee standard was developed [189], which
    builds on IEEE 802.15.4. The Internet of Things (IoT) [190] concept has emerged
    in the last decade from the field of WSNs. The main difference is the connection
    of individual devices to the outside world, and the strong focus on IP protocols,
    in particular IPv6 in 6LoWPAN. In WSNs, we usually assume that individual nodes
    are connected to each other and to a sink and only the sink is connected to the
    outside world. Thus, in some way, a WSN is a stand-alone network, visible only
    as a whole from the outside. In the IoT, it is assumed that each IoT node is connected
    to the outside world and has its own IP address. Furthermore, IoT communication
    architectures are usually infrastructure-based. Hence, research in WSNs is largely
    focused on (wireless) networking, while IoT research focuses on integration with
    cloud and edge computing, data analysis, and applications. 3.7.4 Research topics
    As already discussed, a key driver for WSNs has been energy efficiency. The energy
    budget available to a sensor node is ultimately spent on hardware operations,
    and it is well-known that the single most effective method to save hardware energy
    expenditure is to simply not use the hardware and put it into a sleep mode as
    often as possible. This observation has led to the concept of duty cycling, where
    the node alternatively wakes up to perform sensing, analysis and communication,
    and then returns back to sleep. However, a sleeping node cannot communicate with
    other nodes. This restriction changes the network topology (and thus impacts routing)
    and requires additional levels of coordination between neighboured nodes wishing
    to exchange data for collaborative data processing, as they need to agree on a
    common schedule where both nodes are awake and can exchange data. We briefly describe
    some of the main areas of activity in the field of sensor networks: Physical layer
    design Design of energy-efficient coding and modulation schemes, power control
    algorithms, and rate- and power adaptation schemes [191]. Compressive sensing
    schemes [192, 193] help to reduce the number of samples of a physical signal that
    need to be taken (and transmitted!) to achieve satisfactory reconstruction, whereas
    compression, source coding, and distributed source coding schemes [194, 195] optimise
    the encoding of the physical data to reduce the number of bits needed to encode
    a sample or a sequence of samples. MAC layer Design of MAC protocols for WSNs,
    particularly the design of energy-efficient MACs and the support of reliability,
    timeliness, and throughput [196]. One of the main objectives is to enable duty
    cycling without time synchronization and thus synchronous transmissions with sleep-enabled
    nodes. Routing and topology control There is a huge body of work on routing for
    sensor networks [197], building on the area of MANET routing, but additionally
    considering the constraints of WSNs, in particular energy-efficient routing. Routing
    is, together with MAC, perhaps the area that has received the most attention.
    The area of topology control [198] is concerned with thinning out the network
    topology (by deliberately removing nodes or links) to simplify routing. Clustering
    algorithms [199] are a prime example of topology control algorithms, since they
    can significantly simplify routing by forcing simple cluster members to route
    packets to their cluster heads, and the network of cluster heads being much smaller
    than the overall network. Transport and reliable end-to-end delivery The energy-efficient
    and reliable transfer of data end-to-end, say from a sensor node to a sink node,
    has also received some attention [200]. Efforts have not so much focused on TCP,
    as TCP often is not a natural fit for sensor networks. Some issues with TCP include
    its inefficiency when the role of a transmitter is rotated over time, or its difficult
    integration with data-centric networking principles allowing routers/forwarders
    to actually modify payload data. Localization and time synchronization The goal
    of localization is to provide nodes with information about their geographical
    position relative to some reference frame [201]. Position information can play
    a substantial role in applications (as it enables to relate sampled information
    to its location) and in protocols (e.g. geographical routing). Time synchronization
    is important when sampled data and observed events need to be anchored in time,
    for example, to infer which of two events has occurred earlier [202]. Particularly
    localization has attracted a significant amount of interest and still does. Data-centric
    networking An important design strand in sensor networks which set them truly
    apart from other types of wireless mobile networks is the inclusion of data-centric
    networking [203, 204]. Roughly speaking, in data-centric networking application
    data plays a role in protocol decisions. A simple example is congestion control,
    where a congested router does not just throw away the most recent packet but the
    packet which is least important to the application (e.g. which contents can be
    predicted best). Intermittent computing The concept of energy efficiency has naturally
    led to leveraging energy harvesting techniques directly in the field, like solar
    panels. However, a new problem arises: the power is not always available and the
    firmware/software needs to cater for interruptions and unpredictability. Such
    nodes are called transiently powered and new operating systems have been developed
    to support them, like MementOS, CleanCut, or HarvOS [205]. 3.7.5 Open issues and
    research challenges Open challenges are still security and trust in sensor networks,
    as well as deployment and maintenance. The trust domain is shared with IoT and
    focuses on how to trust the data arriving from the sensors [206]. This is a major
    issue and spans problems like security attacks and data manipulation to data ageing,
    hardware ageing, and software bugs. Deployment and maintenance are also major
    problems when installing WSNs and IoT applications, as the devices are usually
    out of reach, have very limited resources for self-assessment and self-control,
    and rely on notoriously unreliable wireless communication in the wild. Solution
    ideas include containerisation for sensor nodes [207], but the research area is
    not very well developed currently. Furthermore, especially with the rise of IoT,
    time and mission-critical applications start gaining more importance. These include
    the so-called Industry 4.0 [208], space applications, and predictive maintenance
    [209]. Reliability and resilience [210] become more and more important. 3.7.6
    Most relevant wireless technologies While the early phases of sensor network research
    have used custom-designed low-power radio technologies, from 2003 onwards the
    IEEE 802.15.4 low-power wireless PAN standard [157] has played a dominant role,
    not the least due to early commercial availability and its role serving as a foundation
    for the ZigBee protocol stack and providing the physical layer for a number of
    industrial WSN technologies like WirelessHART or ISA100.11a [211, 212]. The 15.4
    standard aims to achieve high energy efficiency, it offers relatively low ranges
    in the order of tens to hundreds of metres (depending on transmit power, frequency
    band and antennas), low to moderate data rates of up to 250 kbit/s, and a hybrid
    medium access control protocol combining both scheduled transmissions and random
    access. More recently, technologies like LoRA/LoRAWAN [213, 214] have established
    themselves as wireless “low-power wide area networks”, they are optimized for
    the sporadic transmission of small data packets over large ranges of up to 10
    km, predominantly using sub-GHz frequency bands. However, ad hoc WSNs can only
    leverage the LoRa physical layer, as LoRaWAN is infrastructure-based. An overview
    of all relevant technologies is provided in the Appendix. 3.7.7 Most related other
    concepts Body sensor networks can be regarded as a particular sub-class of WSNs.
    Body sensor networks tend to be relatively small, both in terms of the number
    of nodes (at most a few tens of sensors per person) and in terms of network diameter—BSNs
    are usually single- or at most two-hop networks. In underwater sensor networks,
    nodes are either fixed (e. g. buoys) or mobile, such as tethered or autonomous
    underwater vehicles (AUV). A key challenge is that radio frequencies are strongly
    attenuated so that traditional wireless communication does not work [215]. In
    underground sensor networks sensors are installed under the ground, which changes
    the communication properties and protocols used. 3.7.8 Summary and recommended
    readings Wireless sensor networks, or more recently the “Internet of Things”,
    is a field that has reached a mature stage, as there is now a well-accepted set
    of technologies and design approaches for sensor networks. Much of the attention
    in this field has shifted to the integration of sensor networks into IP-based
    networks, and their usage in broader application scenarios like for example, Smart
    Cities [216]. For further reading, the books [171-173] are recommended which give
    comprehensive introductions about WSNs. 3.8 Wireless body sensor networks 3.8.1
    Definition and main properties Wireless BSNs—often also called Wireless Body Area
    Networks (BANs) or Wireless PANs in IEEE standards—are a special class of WSNs,
    in which sensors are attached to or implanted in the body of a human or an animal
    to measure vital signals for further analysis by medical or health professionals
    or for well-being purposes [217, 218]. Of course, several design concerns for
    WSNs, like for example, the importance of energy efficiency, also apply to BSNs.
    However, there are some characteristic properties of BSNs that make them substantially
    different from “normal” WSNs: Network size and architecture Typically, the number
    of sensors that are deployed on or inside a human body is limited to a few or
    a few dozen at most. These sensors often report to a coordinator or sink node,
    which is also attached to the body. The sink node can collect and pre-process
    the data and transfer it to a server for further processing. The sink node could
    be a separate node or could be integrated with a mobile phone or smartwatch. Body
    sensor networks usually adopt a star topology where each sensor is one or at most
    two hops away from the sink. Most of the traffic will be from sink to sensors
    or from sensors to sink. Overlapping networks A common feature in the application
    of BSNs is that several distinct networks may have to share the same space, for
    example, when multiple persons are close together. The sharing patterns depend
    on the movements of people and can usually not be planned in advance. It is imperative
    that the networks remain separate and that there is no risk of sensor data belonging
    to one person being mistaken for the sensor data of another person. Furthermore,
    there can be co-technology interference coming from other BSNs operating nearby.
    This is often referred to as co-existence. Intra-network mobility Body sensor
    networks can have substantial intra-network mobility with resulting fast changes
    in the network topology. For example, when one sensor is attached to the wrist
    and the other to the chest, then the relative position of these two sensors changes
    quickly when the person walks or runs. And depending on the orientation and precise
    placement of these sensors, a line-of-sight may periodically disappear and re-appear.
    Network mobility In addition to intra-network mobility, a BSN itself moves as
    a whole when the person wearing it moves. This can become important when the BSN
    uses a wireless technology operating in an unlicensed frequency band that is shared
    with other technologies. For example, the BSN may be based on the IEEE 802.15.4
    standard [157] operating in the 2.4 GHz ISM band, which is also shared with IEEE
    802.11 WLAN networks. When a BSN moves into an urban environment with many WLAN
    access points in range, it experiences a dynamically changing “interference landscape”.
    3.8.2 Targeted applications Body sensor networks are used in a range of applications
    in the general fields of medical and healthcare, well-being and sports [217, 219,
    220]. Applications in the medical and healthcare fields include ambient-assisted
    living and patient monitoring, measuring blood sugar or cardiovascular parameters
    including electrocardiograms, pacemaker diagnostics, rehabilitation support after
    strokes or accidents, and others. Non-medical applications include the monitoring
    of heart rate for fitness training, detection and tracking of movements during
    sports practice, and entertainment. 3.8.3 History Body sensor networks are instances
    of PANs, a class of networks meant to interconnect personal or wearable computing
    devices with transmission ranges in the order of centimetres to a few metres [221].
    The Bluetooth technology, arguably one of the first PAN technologies, was standardized
    in 1998 by the Bluetooth Special Interest Group, the physical and MAC layer evolved
    into the IEEE 802.15.1 standard. In the year 2003, the first version of the IEEE
    802.15.4 standard appeared, which was designated as a low-rate wireless PAN technology,
    and which had addressed energy-efficiency as a key design goal—this made IEEE
    802.15.4 popular in the realm of WSNs, and there has also been a body of work
    considering its usage for BSNs [222-224]. In 2007, the IEEE has established a
    task group for creating a dedicated body sensor networking standard under the
    designation IEEE 802.15.6, the first version of which was published in 2012 [225].
    One distinctive feature of IEEE 802.15.6 is the inclusion (amongst others) of
    a human-body communications physical layer, which allows implanted devices to
    communicate with on-body devices using radio signals in the 5–50 MHz range. 3.8.4
    Research topics A number of key research questions are related to the intra-network
    mobility patterns resulting from the different poses that humans can adopt, including
    running, walking, lying, or sitting. Particularly when the human carrier runs
    or walks, the qualities of communication links can change periodically and quite
    drastically, and hence the overall network topology will also change quickly.
    This has substantial impact on routing protocols [226-228], but also on other
    aspects, like for example, the choice of a suitable transmit power. One interesting
    approach is to learn the current channel quality and choose the transmit power
    accordingly [229]. More generally, activities such as routing or resource allocation,
    which critically depend on the state of communication links, can be supported
    by methods for pose estimation or motion recognition, that allow to infer the
    current pose of the human carrier and predict the link qualities accordingly.
    Activity detection and pose estimation in BSNs are for example, discussed in [230,
    231], whereas [232] uses regularities in motion patterns for data compression
    of motion information. Any research that aims to exploit the channel properties
    found in BSNs need a good understanding of these channels, and hence channel modelling
    becomes an important issue. Besides the impact of periodicity induced by movements
    like running or walking, it is particularly non-standard channels involving implanted
    sensors and the propagation of signals through tissues that have received intense
    interest, see for example, [233, 234]. Another interesting research issue is interference
    management, which considers both external interference (i.e. interference generated
    by other technologies operating in the same frequency band as the BSN), and internal
    interference, which addresses the case where several BSNs using the same technology
    and channel resources have to operate in close vicinity to each other. Some research
    has for example, considered the issue of WLAN interference on IEEE 802.15.4-compliant
    body sensors networks when both operate in the 2.4 GHz ISM band, addressing it
    by considering a combination of transmit power and frequency adaptation, shown
    by simulation and experimental studies [235, 236] as well as analytical optimization
    [237]. The case of internal interference has for example, been addressed in refs.
    [224, 238, 239]. Recognising that the BSNs themselves have only limited capabilities
    for medical signal processing and that much of the generated data needs to be
    inspected by professionals, the integration of BSNs with fixed network infrastructure
    has recently gained significant interest. This concerns in particular the integration
    of BSNs with cloud-, edge- or fog computing systems, see for example, [240-242].
    3.8.5 Open issues and research challenges Body sensor networks process sensitive
    information about a person''s health status. In case they are connected with cloud
    services, privacy becomes an issue that needs investigation. For implantable sensors,
    the aim is to reduce the sizes as far as possible which poses challenges for the
    energy supply and the wireless communication interface. 3.8.6 Most relevant wireless
    technologies Aside from the Bluetooth and IEEE 802.15.4 technologies popular for
    general sensor networks and widely used also for BSNs, there has also been some
    work assuming the IEEE 802.15.6 wireless BAN standard mentioned above [225]. Furthermore,
    also short-range technologies such as RFID, EnOcean, ANT, and NFC have been considered.
    An overview of all relevant technologies is provided in the Appendix. 3.8.7 Most
    related other concepts Body sensor networks are a special case of WSNs. They are
    optimised to be small and light so that they can be conveniently worn or implanted
    into the body. A long battery life is however only critical for implanted sensors.
    3.8.8 Summary and recommended readings Body sensor networks share many traits
    with WSNs but require tailored solutions to deal with the very specific mobility
    patterns, perform interference and resource management, and deal with the special
    kind of propagation channels that is involved when sensors are implanted. Multiple
    surveys were published about BSNs [217, 219, 229, 243] which are recommended for
    further reading. 3.9 Wireless underground sensor networks 3.9.1 Definition and
    main properties In contrast to traditional sensor networks, WUSNs are deployed
    below the surface, that is, they are buried in the soil. This is their main property
    and the main difference from all other concepts discussed in this paper. The unique
    underground environment not only creates a very challenging wireless channel,
    but also influences other system aspects, including deployment and maintenance,
    and the lack of solar power for energy harvesting. Additionally, sensor nodes
    are even more exposed to humidity, as they are in direct contact with the soil.
    However, their topologies usually remain stable over extended periods of time,
    not counting hardware failures or special applications where nodes are supposed
    to move with the soil (e.g. to monitor landslides). Furthermore, WUSN nodes are
    less vulnerable to theft, as they are well concealed below the ground. Sometimes
    WUSNs are also called Internet of Underground Things [244]. 3.9.2 Targeted applications
    The most prominent application for WUSNs is agricultural soil monitoring [245,
    246], where nodes are buried in the field to monitor the soil temperature and
    moisture. Other prominent applications are structural monitoring for dams [247],
    underground mining monitoring [248], or landslide monitoring [249]. All these
    applications have in common that most of the sensor nodes are buried below the
    ground, while some few are above-ground and serve as gateways to the outer world.
    This is depicted in Figure 8, which represents a typical WUSN deployment. FIGURE
    8 Open in figure viewer PowerPoint Types of wireless sensor networks (WSNs). 3.9.3
    History Wireless Underground Sensor Networks have emerged from traditional sensor
    networks. Around the mid of the 2000s, researchers used off-the-shelf sensor nodes
    and attached coaxial cables to extend the antennas above the ground, while the
    sensors attached to the node were underground [249]. Probably the first work to
    consider burying the nodes completely was GlacsWeb [250], a glacier monitoring
    application, where the sensor probes were in the ice or even in the sediment and
    the gateway was on the surface. Early works were all based on commodity sensor
    nodes communicating in the 433–434 MHz frequency range. Later on, researchers
    tried to use the 2.4 GHz ISM bands, but with little success [248], since higher
    frequencies do not penetrate the ground well enough to reach a gateway above the
    ground. The new LoRa communication technology has given rise to many more deployments,
    because of the improved communication range and the growing number of available
    devices and gateways [251, 252]. 3.9.4 Research topics A significant amount of
    communication technology feasibility studies have been conducted to identify which
    communication technologies are suited for the underground scenario. MicaZ sensor
    nodes operating at 2.4 GHz have been tested in ref. [253], while mica2 nodes at
    433 MHz have been more successfully applied in ref. [254]. The newer LoRa standard
    has also been shown to work well at its lower frequencies (434 MHz) [248, 252].
    Further research has been conducted with custom sensor nodes at 433 MHz in ref.
    [255] and in ref. [256]. In general, underground communication performance is
    strongly impacted by the volumetric water content of the soil [257]. Broadly,
    the lower the frequency, the better the communication performance. Channel modelling
    has been mostly considering soil moisture, as it is the main determinant of communication
    performance underground, as shown in the studies above. In 258, researchers have
    investigated the impact of environmental conditions (rainfall, soil porosity and
    vegetation root zone) on soil moisture, which affects underground communication
    performance and consequently also places constraints on node deployments (e.g.
    distance constraints). Several underground path loss models have been proposed.
    They can be classified into UG2UG (underground to underground), UG2AG/AG2UG (underground
    to aboveground and vice versa) and general models. One of the main problems is
    to estimate precisely the complex dielectric constant of the soil. Different approaches
    have been developed, but most of the resulting models [259, 260] require a soil
    sample analysis in a laboratory, which is not practical for real deployments,
    where the soil properties differ over small distances. Simpler and more practical
    models have been proposed for UG2AG/AG2UG communications, where the additional
    refraction by the soil has been taken into account, for example, in ref. [261].
    A more general approach for both UG2UG and UG2AG/AG2UG has been proposed in ref.
    [262], which relies only on wavelength, clay portion, and soil moisture. Furthermore,
    it performs in situ measurements and is thus more practical for real deployments.
    3.9.5 Open issues and research challenges Energy harvesting is still a significant
    challenge. Currently, most of the research focuses either on wireless power transfer
    approaches from external sources on the ground or extending the sensor node lifetime
    via energy harvesting from sources like vibration or temperature differences [263].
    However, wireless power transfer requires a dedicated above-ground infrastructure,
    which is expensive and makes the deployment vulnerable to sabotage and damage.
    On the other hand, power harvesting from vibration is suitable only if there are
    vibration sources in the field, like regular agricultural activities. In this
    case, sufficient energy can be harvested to send out some data to the agricultural
    machines [264]. However, this scenario is not suitable for more passive monitoring
    or some agricultural crops. Thus, a solution for an autonomous underground energy
    source is still largely missing. Routing and MAC protocols for UG2UG topologies
    have not been considered a lot in the literature. Mostly standard protocols are
    used, such as LoRaWAN. Some researchers have applied opportunistic [21] or probabilistic
    approaches [265]. However, the underground environment poses some new challenges
    but also has some advantages as compared to the aboveground environment. For example,
    soil moisture largely dictates the path loss and thus the communication quality
    [266]. This can lead to complete link outages where no communication whatsoever
    is possible. The real problem with these events is their duration, which can span
    several hours to a few months, depending on the weather conditions (e.g. monsoons
    or rain periods). On the positive side, besides rain, the underground environment
    is much more stable than the aboveground. Temperature is largely stable, passing
    animals, people and vehicles have little to no impact, and soil changes are very
    slow. These properties need to be taken into account in future research in the
    area of routing and MAC protocols in order to significantly extend the lifetime
    of WUSN deployments. Simulation and testbed environments are also largely missing.
    Typical WSN simulators are not adapted (yet) to the needs of WUSNs, especially
    in terms of channel models available and soil moisture models. One promising candidate
    is Castalia-WUSN for OMNeT++,3 but its development is sporadic. Data measurements
    and traces are also rare, one good example being [267] or the Thoreau deployment
    [268]. 3.9.6 Most relevant wireless technologies In the first implementations
    of WUSNs, researchers turned mostly to WSN-like standards, such as 802.15.4 [157,
    253]. Later on, lower frequencies were adopted [254] and the new LoRa standard
    [248, 252] was embraced. An overview of all relevant technologies is provided
    in the Appendix. 3.9.7 Most related other concepts Clearly, WUSNs have a family
    relationship with traditional WSNs. To wit, there exist many deployments and concepts
    combining underground sensors with aboveground sensor nodes for wireless communications,
    for example, for potato monitoring [21]. The similarities and differences to underwater
    sensor networks are discussed in Section 101. 3.9.8 Summary and recommended readings
    Wireless underground sensor networks are a very interesting alternative to traditional
    sensor networks or current IoT deployments since they offer the chance to use
    a concealed and safe environment. They enable some novel applications such as
    decision agriculture or landslide monitoring. However, experience with real deployments
    is still very limited with wireless communications over larger distances and energy
    harvesting being the two most challenging issues. There are not many surveys dedicated
    to WUSNs, and some of them are outdated. One recent but short overview of challenges
    and application scenarios is provided in [269]. A very good and detailed book
    about wireless communications in the soil is [244]. It also provides some information
    about deployments and applications. 3.10 Wireless underwater sensor networks 3.10.1
    Definition and main properties Wireless Underwater Sensor Networks—sometimes also
    referred to as UWSNs—are sensor units included into AUV floating or moving inside
    the water, sometimes supplemented by buoys on the surface. Especially in seawater
    environments, the sensors have to tackle harsh environmental conditions for communication.
    Not only the damping of the radio signal is challenging, but also the delay for
    acoustic, that is, sound-based communication requires special hardware and settings
    [270]. 3.10.2 Targeted applications Wireless Underwater Sensor Networks are used
    in general for environmental monitoring or aquaculture applications like fish
    farms, reef monitoring, monitoring offshore installations etc. [270-272]. They
    are also deployed in disaster warnings, such as tsunamis, by seismic monitoring
    [273] or can augment navigation to avoid dangerous underwater obstacles [274].
    3.10.3 History The predecessor of transmitting messages underwater in a digital
    way were signalling systems for submarines which were already discussed since
    the beginning of the 20th century.4 Underwater digital communication has been
    developed since the early 1970s [275] and was in the beginning focused on point-to-point
    communication with research taking place on the physical layer. Attempts of underwater
    networking have been discussed since the beginning of the new millennium [276].
    Even in recent publications, the main focus is on dealing with the challenges
    coming from the communication channel, that is, high transmission delays or high
    signal damping depending on the used technology [270]. 3.10.4 Research topics
    The communication in this harsh environment is also the main research challenge
    in this area [277]. Microwave links only work across small distances due to the
    high conductivity of water [278, 279]. The most important alternative, acoustic
    communication, is subject to high interference and only provides a small data
    rate [280, 281]. Also, the propagation speed is smaller than light or radio waves
    by several orders of magnitude which results in higher propagation delays. As
    an alternative, optical communication like laser communication can achieve data
    rates up to Gbit/s over distances of tens of metres, even though the optical channel
    suffers from light absorption in the water and scattering by particles [282].
    Magnetic induction [283] provides low propagation delay and well-predictable channel
    characteristics. The low production cost of magnetic induction-based nodes allows
    for communication for example, to be deployed for large-scale applications. Therefore,
    the main research focus is on the physical technologies as well as on special
    protocols capable of dealing with the special conditions as listed below. Physical
    transmission Trends and challenges in the physical aspects of acoustic communication
    are summarised in ref. [284]. Further research challenges are keeping the devices
    in a fixed position in the presence of currents, and power efficiency due to lack
    of solar charging [285]. Furthermore, nodes can act as range extenders that pick
    up the signal of a neighbour and retransmit it [283]. Research challenges are
    multidirectional antennas, arranging multiple antennas in an array, and the properties
    of the underwater channel. Localization Inside the water, localization systems
    such as GPS do not work because the radio signals from satellites cannot penetrate
    the water. Therefore, dedicated underwater localization systems have been developed
    [286-288]. Many of them are based on anchor nodes with well-known positions which
    send out acoustic signals. By comparing the time of arrival, the location can
    then be determined. Medium access As mentioned before, the signal propagation
    speed in acoustic channels is low compared to radio channels and also dependent
    on environmental factors such as temperature. This property requires an adaptation
    both of contention-based as well as contention-free medium access protocols [273].
    Further challenges are service guarantees, for example, minimum throughput of
    a connection, node mobility, coping with high propagation delay and cross-layer
    design for example, between the MAC layer and the physical transmission. Routing
    Most publications about WUWSN routing assume acoustic communication. Wireless
    Underwater Sensor Network routing protocols tackle unreliable links by making
    use of omnidirectional propagation which is deployed in a WUWSN-specific way by
    allowing it to fall back to a spare neighbour node if the current one fails [289].
    The selection of neighbours is also investigated in optical networks where an
    energy-efficient routing algorithm is described [290] which balances the energy
    consumption amongst the nodes. Research challenges in WUWSN routing protocols
    are scalability, selection of forwarding nodes, mobility support [289], support
    of multiple network interfaces [291], and avoiding dead-ends [292]. Architecture
    There are three important design goals for the architecture of WUWSNs: Clustering
    means grouping a number of nodes into smaller sets of nearby located neighbours,
    basically in order to reduce the energy consumption. Coverage of a sensor network
    requires that the sensors'' detection ranges should cover the geographic area
    of the network without gaps so that any event inside that area is detected. Maximising
    connectivity relies on proper control of the network so that there is a path between
    every two nodes of the network as often as possible, or in order words, the network
    forms a single connected graph [293]. Hybrid networks Hybrid approaches jointly
    use different types of bearer technologies or routing methods. On the physical
    layer, similarities between the optical and acoustic channel statistics are identified
    in order to predict each channel based on knowledge of the other one [294]. On
    the network layer, a multimodal routing protocol optimises the efficient and fair
    use of links across different physical bearer technologies with low and high speeds
    [291]. 3.10.5 Open issues and research challenges The communication channel in
    WUWSNs mostly depends on environmental effects such as the turbidity of the water
    which affects both optical and acoustical links. Therefore it is desirable to
    identify regular patterns, for example, dependent on the time of the day in order
    to predict the communication conditions. Another aspect of communication is the
    extension from pure sensor networks to robotic networks that deploy both sensors
    as well as actuators. With the increasing demand for underwater surveillance and
    offshore installations, an “Internet of Underwater Things” will develop with a
    rapidly increasing number of nodes, so the question of network scalability arises—a
    routing protocol that works well with tens of nodes might not scale well to hundreds
    or thousands of nodes. Since underwater nodes may have to sustain for long times
    without service, energy-efficiency of protocols as well as energy harvesting is
    crucial. Most relevant wireless technologies Because of the special conditions
    for underwater communication, off-the-shelf wireless bearer technologies as they
    are known from other communication applications are not suitable. The most widely
    used technology are underwater acoustic modems, both proprietary solutions and
    developments by the scientific community became available over time [295, 296].
    There are also software-defined modems that provide maximum flexibility [297].
    Most related other concepts Wireless Underwater Sensor Networks are similar to
    WUSNs in the sense that they have to face a harsh environment, difficult communication
    conditions, and restricted energy supply. Also similar to WUSNs, they have to
    perform unattended operations over an extended period of time which may be several
    months. In contrast to WUSNs, underwater networks may have to cope with mobility
    if nodes are installed on vehicles such as underwater robots. The speeds are however
    lower than in vehicular networks. Summary and recommended readings In the past
    years, careful monitoring of the oceans and offshore facilities has gained increasing
    interest. Wireless Underwater Sensor Networks are one way to perform long-term
    observations in this difficult environment. Special research challenges are posed
    by quickly changing communication channels, narrowband links, and high interference.
    In order to get an introduction to the topic of underwater networks, the publication
    [276] is recommended which gives an overview of the design of underwater networks.
    Additionally, [272] offers a more general overview of the whole research area
    listing the basics as well as a survey of existing research projects. The articles
    [63, 298] discuss practical issues when setting up a WUWSN in a real environment.
    3.11 Other ad hoc concepts Apart from the concepts presented above, there are
    some further ones, which deviate in one way or another from the ad hoc concept
    or are too application-specific. We discuss those shortly next. 3.11.1 Device-to-device
    mode Device-to-Device (D2D) communication refers to a special mode of 4G (also
    referred to as LTE) and 5G (also referred to as New Radio) where two end User
    Equipment, for example, mobile phones, can directly communicate with each other
    without relaying the data via the base station (called eNB). Device-to-device
    communication aims to extend cell coverage, possibly provide services without
    base station infrastructure, use cellular resources efficiently, and reduce the
    burden on the base station. The latter is also referred to as cellular off-loading.
    Some of the targeted applications are proximity-based services, push-to-talk public
    safety, V2X, and X2X applications [299]. Here, X2X can be any kind of scenario,
    a car communicating with a traffic light, or a phone communicating with a smart
    poster advertising a concert. The current killer D2D application for most of the
    cellular operators is V2X, which is planned to be deployed in Europe as the 5G
    D2D mode. Cellular D2D communication has been discussed in 3GPP since release
    12 in 2012 in parallel to the work done by the research community. The 3GPP standards
    are governed mostly by cellular operators focusing on business-oriented applications.
    Two main types of D2D are Type 1: Inband D2D, which uses licenced spectrum, and
    Type 2: Outband D2D, which uses unlicensed spectrum. In Type 1: Inband D2D, the
    sharing of the licenced spectrum can be done in two ways. In the underlay approach,
    the primary cellular users and D2D users share the same spectrum, while in the
    overlay approach, a dedicated spectrum is assigned to the D2D users, making sure
    that the primary cellular users do not interfere with the D2D users. Compared
    to the two types discussed by the research community (inband and outband), 3GPP
    standardisation has focused on four sub modes to serve specific applications.
    3GPP release 14 [300] has introduced an outband solution, called LTE V2X, which
    uses spectrum originally allocated for the IEEE 802.11p vehicular standard [125].
    The latest releases 16 (2019) and 17 (2021) of 3GPP propose an inband solution,
    based on the 5G D2D mode, also known as new radio, specifically for V2X autonomous
    driving. Early research papers focused on Type 2: Outband D2D, to solve co-channel
    interference among D2D users and other wireless users like WLAN and Bluetooth
    [301, 302]. With the introduction of four sub-modes that consider both types of
    inband and outband communication, most of the research focused on addressing the
    optimal use of the cellular spectrum and the resource allocation mechanisms. The
    resource allocation challenges are on how the eNB assigns exact resources (time-
    and frequency resources) to D2D users or how the eNB delegates resource allocation
    to some end devices [303, 304]. The latter case represents how a platooning leader
    negotiates the range of resources from the eNB to allocate for the platooning.
    The resource allocation is also done to prioritise the dissemination of emergency
    messages [305]. Train-to-train Train-to-train networks focus on two main applications.
    Firstly, the communication between different trains and the infrastructure (CBTC,
    Communication-based train control) is nowadays done with several components and
    unreliable communication channels. Focussing on wireless communication technologies
    aims at more reliable and simplified infrastructure. This will lead to increased
    reliability and safety. Additionally, the number of trains on a single track can
    also be increased. Here, the communication range is several hundreds of metres
    up to kilometers. Wireless local area network and 5G are planned to be used for
    communication [306, 307]. Secondly, the communication between the individual carriages
    of one train can also be replaced by wireless communication links. Here, the advantages
    are easier coupling and decoupling of trains and the radio communication is less
    susceptible to outdoor influence like dirt and rain. The required communication
    range in this application is a couple of metres. Here, IEEE 802.11.ad is a commonly
    used standard. It offers high data rates over short distances [308]. Also, the
    combination of both applications is currently evaluated. Here, the objective is
    the automatic coupling and decoupling of trains and individual carriages while
    driving on the track [309]. This would further increase the efficiency on the
    track as several trains with similar destinations are combined into one without
    the need for stopping and manual coupling. Ship-to-ship Direct communication between
    ships is developed since the 90s as the Automatic Identification System (AIS).
    The standard is maintained by the International Telecommunication Union5. Most
    commercial vessels are equipped with AIS transceivers and transmit their voyage
    data like position, speed, course, destination port, etc. regularly using maritime
    VHF frequencies. The main objective of AIS is collision avoidance, sharing journey
    information, and general monitoring by the vessel traffic service. Although AIS
    is a widely used service for exchanging basic information between ships, it does
    not offer sufficient bandwidth for increasing communication requirements. In some
    cases, expensive satellite communication is used. Especially the communication
    between vessels in the vicinity, like during towing or berthing, requires high-speed
    and low-latency communication technologies. Several approaches are currently being
    explored. The VHF Data Exchange System (VDES) maintained by the International
    Association of Lighthouse Authorities can be seen as an extension of AIS. It uses
    AIS as the underlying communication technology but can also use more efficient
    modulation schemes for higher data rates [310]. Due to the used frequency band,
    VDES offers only limited bandwidth. Triton (TRI-Media Telematic Oceanographic
    Network) is a project which offers high-speed ship-to-ship and ship-to-shore communication
    technology. The basic idea is to migrate the concept of VANETs to ships [311].
    It is based on WiMAX with some adaptations which make it incompatible with existing
    systems. Therefore, it is only used in a few limited scenarios. The objective
    of netBaltic is to offer high bandwidth, non-satellite communication between ships.
    For that, it focuses on existing technologies like standard IP and Ethernet connections
    which simplifies the integration. The communication is adapted according to the
    distance to shore and the area: Near shore, the infrastructure is used. To extend
    the shore communication range, mesh communication is used. For communication outside
    the range, delay tolerant direct communication is used [312]. e-navigation is
    a general communication concept by the International Maritime Organization. It
    focuses more on the communication flows and optimization than on the technical
    details themselves.6 An overview of the existing technologies for ship-to-ship
    communication and the related concepts is given in ref. [313]. 3.12 Summary In
    this section, we have presented various infrastructure-less networking concepts
    and their distinguishing properties. Now we give a comparative overview of them
    in terms of the networking layers they mainly focus on. Table 1 summarises the
    research efforts of the community as presented in the previous subsections, organised
    by network layer and infrastructure-less concepts. In infrastructure-less networks,
    a modified OSI stack is usually used, as shown in the table. The table also includes
    cross-cutting concerns like privacy and security. The table is not intended to
    be exhaustive and is purely subjective. Due to the substantial amount of publications
    in infrastructure-less networks in general, even a cell marked with “minus” might
    represent quite a lot and important work. Thus, this table should be understood
    as an orientation help to understand where most of the research and publications
    have been focused and not to say that one or another layer is less relevant. TABLE
    1. Main research foci of the different infrastructure-less concepts across the
    networking stack. MANET OppNet/DTN VANET AANET FANET WSN BSN WUWSN WUSN Application
    o o + o o + + o o Transport/Congestion control o o o – – + o – – Routing/Forwarding
    + + + + + + + + + Link + + + + + + + + + MAC o o o o o + + + + PHY – – o + – +
    + + + Security o o + + + o + + o Privacy o o o o o o + – – Note: Legend: – → limited,
    o → moderate, + → extensive. The network protocols and research approaches discussed
    in this survey mainly cover the medium access control, network (routing/forwarding),
    and transport layer, as seen in the table. The application-specific layers are
    not touched widely—to forward messages, application-specific details are usually
    irrelevant. An exception could be if data messages are subject to QoS, for example,
    the application requires a maximum end-to-end delay. However, application requirements
    are considered when designing and evaluating solutions at the lower layers. At
    the same time, there are some infrastructure-less concepts where the application
    has been the focus, for example, VANETs, WSNs, and BSNs. Here, novel applications
    were developed, and the lower layers of the stack were adapted. The MAC and physical
    layers are usually considered when designing and evaluating protocols at the other
    layers, but have seen real research focus only on the area of WSNs and its sub-topics
    like BSNs, WUWSNs, and WUSNs. Another concept that deals a lot with the MAC and
    physical layers is D2D, where spectrum access and allocation play the most prominent
    role. The link layer (retransmission and error control, neighbour management)
    is an important issue with infrastructure-less concepts because links change significantly
    due to mobility and/or interference. Security and privacy also play a significant
    role across all networking layers. They are usually considered at all layers.
    However, for some of the presented concepts, security plays a more important role
    than privacy and vice versa. Moreover, for WUWSNs and WUSNs, privacy does not
    play a significant role, as data is considered human-independent. Most research
    efforts have been dedicated to the transport, network, and link layers across
    all concepts shown. However, while all three layers and their challenges and problems
    have been considered widely, most publications and works follow a cross-layer
    design where a single protocol spans two or three layers. 4 QUALITATIVE COMPARISON
    OF NETWORK CHARACTERISTICS In the previous sections, we have described individual
    concepts. There is a myriad of relevant, important, and interesting applications
    for infrastructure-less networks. In fact, they are too many to be described and
    discussed here in detail. Instead, we will focus on their main properties, putting
    limitations and requirements on the networking stack they use. In this section,
    we will focus especially on their mobility, connectivity, traffic, delay, scale,
    density, and energy consumption. These requirements follow also the generalised
    family tree, presented earlier in Figure 1. All figures in this section visualise
    our own view of the comparison of different concepts, highlighting their similarities
    and differences in terms of network and system properties. 4.1 Mobility Mobility
    of nodes (speed and direction) has an impact on connectivity with nodes moving
    away and to each other, and this has an impact on topology and its rate of change.
    An important property of mobility is predictability, which allows nodes to efficiently
    allocate resources in advance, to hand over, or to wait for particular neighbours
    to communicate with. In Figure 9, we visualise the assumptions researchers make
    in the different infrastructure-less networking concepts we discuss in this paper.
    We consider mobility of nodes and predictability of mobility as independent, orthogonal
    properties. These properties emerge from the application scenario and from the
    used devices. The x-axis presents the typical speed of the nodes, from static
    to very high speeds to the right. The y-axis presents the predictability horizon,
    with low predictability being at the bottom and better and longer predictability
    being at the top. For example, it is typically easy to predict the position of
    a mobile node in the next few seconds, given its current speed and direction.
    However, its long-term position cannot be predicted as easily. FIGURE 9 Open in
    figure viewer PowerPoint Qualitative comparison of “typical” assumptions about
    node speeds and predictability horizons. In WSNs nodes are usually assumed to
    be static, or they move with relatively low speeds (like data mules in agricultural
    scenarios). The position of static nodes is trivially predictable, while the mobile
    nodes in WSNs can be well predictable (e.g. a tractor passing every day to gather
    the data over a field) to being quite unpredictable (WSNs for animal monitoring).
    The sub-types of WSNs, like BSNs or WUSNs, typically share the same mobility properties
    as for traditional WSNs. In MANETs mobility is typically considered, but application
    scenarios are targeted towards pedestrians or office workers in an indoor environment.
    Thus, at most biking speeds are considered and the predictability is relatively
    good, in the sense that nodes stay close to each other and move a little around,
    like in an office building. In VANETs the node speeds are substantially higher,
    they are often assumed to be in the range between 40 and 60 km/h in urban scenarios
    and in the order of 80 and100 km/h or higher in rural scenarios or on motorways.
    Furthermore, since vehicles usually stick to streets, their movements can often
    be predicted over timespans of minutes or even hours in rural or highway scenarios,
    and tens of seconds to minutes in urban scenarios. Importantly, these observations
    can actually be exploited in the construction and configuration of VANET protocols.
    Mobility in FANETs depends on the type of drones. Fixed-wing drones can achieve
    maximum speeds similar to an aeroplane but also need to maintain a minimum speed
    to sustain the lift. Hence, their trajectories are predictable over short time
    horizons, and, depending on their mission, even over longer ones. Rotary-wing
    drones usually have lower speeds, and have the ability to hover and to make quick
    changes in direction. Furthermore, it holds for all types of drones that (at least
    as of 2022) their movements are not constrained to roads. Delay-tolerant networks
    typically enable communications between satellites or between satellites and ground
    stations. The speeds are very high, but the predictability is almost perfect,
    as satellite orbits are pre-calculated. However, DTNs and OppNets are often used
    as synonyms in the literature and one has to be aware of which type a specific
    application targets. A key feature in opportunistic networking is the usage of
    store-carry-and-forward communications, which builds on node mobility. OppNets
    approaches have been used in conjunction with pedestrian nodes, but have also
    found their way into vehicular/VANET scenarios and FANET scenarios. The very notion
    “opportunistic” suggests that the considered predictability horizon tends to be
    in the order of seconds or minutes, and not higher (otherwise one could, similar
    to DTNs, actually apply scheduling methods to plan communications well in advance
    instead of opportunistically or greedily picking the option that seems best right
    now). At the same time, human mobility is usually coarsely predictable over the
    course of days too, for example, when a person goes to work or to school. This
    is a property often leveraged in OppNets with the so-called history-based data
    dissemination protocols. However, the predictability in these horizons is low.
    By definition, AANETs are run between aeroplanes which move at high speeds. Furthermore,
    usually, the path of commercial flights is very well known and from the path and
    the flight schedule the trajectory of an aeroplane can be predicted. Since flights
    only last for hours, it does not make sense to evaluate the predictability for
    the next weeks or months. In summary, most infrastructure-less networking concepts
    need to cope with mobility, even if the concrete assumptions for speed and predictability
    differ. The borders between the individual concepts are vague and many exceptions
    can be found in the literature. 4.2 Connectivity Mobility can turn a network that
    is normally fully connected into a network with only intermittent connectivity,
    networks can frequently get partitioned and re-connected, or they can even spend
    all of their lifetime in a state where the overall “network” indeed only consists
    of a number of connected clusters, with occasional “rendezvous” between clusters.
    An example of the latter is clusters of cars on a highway, with relatively small
    distances between nodes/vehicles within the same cluster, but larger distances
    between clusters. Depending on the amount of time that a network spends in a partitioned
    state, normal packet forwarding can become severely affected. In Figure 10, we
    distinguish in the y-axis between “full connectivity” and “intermittent connectivity”.
    By full connectivity, we mean that the network and the protocols make an assumption
    that the network is normally fully connected and that end-to-end paths do exist
    as a rule. It is treated as an error or exception should an end-to-end path not
    exist, and packets that cannot be forwarded further are dropped. For example,
    this is the main assumption in Internet connectivity. In intermittently connected
    networks, the non-existence of an end-to-end path occurs frequently, and the network
    protocols are actually prepared to deal with this, for example, by adopting the
    store-carry-and-forward strategy. On the x-axis of this figure, we aim to catch
    the typical assumptions on the dynamics of the node population. In “static” settings
    the arrival or departure of nodes is not explicitly considered. In “transient-individual”
    scenarios the node population is dynamic and changes with the arrival and departure
    of nodes, but nodes arrive or depart individually. In “transient-batch” scenarios
    it is also possible that nodes arrive or depart in larger groups or batches. FIGURE
    10 Open in figure viewer PowerPoint Qualitative comparison of “typical” assumptions
    about network connectivity and dynamics of nodes. In MANETs and WSNs the protocols
    typically assume full connectivity and in tendency either assume static node populations
    or individual arrivals or departures of nodes (group arrivals appear to be rarely
    considered). In FANETs and VANETs, the protocols account for individual nodes
    and clusters of nodes leaving and joining the network and they mainly cater for
    nodes with high mobility. Hence, the connectivity can vary from intermittent to
    a fully connected network. In DTNs, particularly of the “Interplanetary Internet”
    type, changes in the node population are usually not considered, and the connectivity
    is intermittent—after all, the store-carry-and-forward paradigm has featured prominently
    in DTNs, and DTNs emerged historically before opportunistic networks. OppNet protocols
    are well prepared to deal with intermittent connectivity (which is a main motivation
    for opportunistic networks in the first place). Of course, also fully connected
    networks are served well, but naturally, the protocols will not be optimal in
    such scenarios. It is also fairly common to assume a dynamic node population in
    OppNets, there usually being no restrictions to individual departures or arrivals.
    AANETs can be both intermittently or fully connected. The first case is valid
    when the aircraft flying over the land or during landing or take off as individual
    aircraft come into contact with others in their range for a short time. The latter
    case is valid for aircraft flying over the ocean, for example, East and West-bound
    flights over the North-Atlantic corridor (flights between Europe and the USA).
    A group of aircraft following the same path has full connectivity among neighbouring
    aircraft for about 4–6 h. Only individual nodes move in and out of the network
    formation and group arrivals and exits are not considered. In summary, the connectivity
    of the above networks is to some extent influenced by the mobility of individual
    nodes and most of these networks operate well in intermittent connectivity with
    increasing network performance in times of full connectivity. 4.3 Scale and density
    The scale and density of networks can vary significantly. Scale refers to the
    varying size of the network in terms of the number of nodes served, without considering
    the area where they are deployed. Some networks are typically quite small in scale,
    for for example, most BSNs consist of only a few sensor nodes. Others, like vehicular
    applications, may have to cope with node numbers in the order of hundreds to thousands
    of vehicles. The density of the network considers also the area where the nodes
    are deployed, which then impacts the number of single-hop neighbours a node has.
    For example, space probes have a very low density, while vehicular networks can
    have very high densities. In Figure 11, we have represented density as the typical
    number of neighbours (y-axis) and the scale as network size (x-axis). FIGURE 11
    Open in figure viewer PowerPoint Density and network size for different infrastructure-less
    networks. MANETs are characterised by mobile nodes which connect dynamically,
    with network sizes ranging from tens to hundreds of nodes, and node densities
    usually not exceeding a few (tens of) neighbours. FANETs being typically mission-oriented,
    are deployed with network sizes of tens to hundreds of nodes. Node densities typically
    do not exceed more than tens of neighbours. AANETs are formed for communication
    between aircraft over the air at altitudes of 10–13 km. The scale of AANETs depends
    on the number of aircraft in the communication range of each other and the aircraft
    flying in the same direction for the time the network is formed. AANETs are dense
    over areas close to airports (or more generally populated areas), and sparse in
    unpopulated areas such as flying over the oceans. Hence, network sizes of AANETs
    are in the order of tens of nodes while the neighbour size can be just up to a
    few nodes. Delay-tolerant networks—The primary applications of DTN research are
    space communications, satellite and interplanetary networks and they do not involve
    dynamically changing network sizes. The network size of DTNs can be up to 15 nodes
    in maximum while smaller network sizes are more common. Delay-tolerant networks
    are extremely sparse networks. OppNets and VANETs are characterised by highly
    mobile devices in urban scenarios and hence, the scale of the network can be easily
    expanded to thousands of nodes. However, in some extreme scenarios (traffic jams
    for VANETs or concerts in OppNets), the number of nodes in the network may grow
    even larger. Often OppNets and VANETs experience a range of quickly changing densities,
    ranging from no neighbours at all (in isolated areas) to hundreds of neighbours
    (in a city centre). Wireless sensor networks are often deployed with a relatively
    high density, which allows for more aggressive duty cycling (i.e. a higher fraction
    of nodes sleeping) without breaking network connectivity. The scale of the WSNs
    is mainly limited by the cost of the devices and the transmission range of the
    devices involved. Typical WSN deployments are in the order of several tens of
    nodes, however some IoT applications involve deployments scaling up to orders
    of several hundred to thousands. In summary, the scale and density of the discussed
    infrastructure-less networks mainly are characterised by the type of network requirements
    and leading to low network sizes and densities in DTNs and AANETs and comparatively
    higher network sizes in others mentioned. The application requirements do not
    necessarily limit the network size and density, however, the availability of neighbours
    and mobility dictate the size and density of these networks. 4.4 Traffic characteristics
    The different types of ad hoc and opportunistic network applications discussed
    in this paper generate traffic which can be characterised by the following properties:
    4.4.1 Intensity The amount of data that has to be transported per time unit, averaged
    over a longer period of time, which means fluctuations of the traffic demand are
    not considered. 4.4.2 Pattern Traffic may not be constant over time, some applications
    generate variable traffic. For example, web traffic occurs in bursts whenever
    a web page is downloaded whereas a voice connection usually has a constant bit
    rate. Sensor data may generate periodic messages whenever measurement data is
    sent. 4.4.3 Maximum delay required Maximum amount of time between the sending
    of a data packet and receiving it. Differently from simply measuring the delay
    of a packet, the required delay is a property of the application, which says after
    how much time the data packet becomes unusable. 4.4.4 Communication mode Most
    traffic for example, in the Internet is transported from one originating to one
    destination node (unicast), where the two nodes are arbitrary. A special case
    of this is convergecast where the traffic is still one-to-one, but the destination
    node is identical for all data packets. Other options are multicast, broadcast,
    geocast, and anycast. Individual characteristics of different network types are
    summarised in the paragraphs below. Figure 12 gives a graphical overview of the
    delay requirement and traffic intensity occurring in different networks. We focus
    mostly on these two aforementioned metrics, as they pose the most significant
    challenges for network design, while the traffic pattern and the communication
    mode can be tackled more easily. FIGURE 12 Open in figure viewer PowerPoint Delay
    requirements versus traffic intensity. MANETs may carry all types of traffic typical
    for the Internet, e.g. streaming, video conferencing, web traffic, etc. Some are
    tightly delay-constrained and have high intensity (video conferencing), others
    can tolerate some level of delay and have bursty traffic (web page access). VANETs
    forward sporadic or periodic information between vehicles and roadside infrastructure
    in proximity. Typical messages can be grouped into safety messages—alerts such
    as a suddenly braking car—or traffic management messages, e.g. a traffic jam on
    nearby roads. While safety messages are tightly delay-constrained, traffic information
    tolerates a slower delivery, but is also delay-constrained. The intensity of messages
    can be very low to high and depends mostly on the number of involved vehicles
    and on the importance of the messages. The preferred way of delivering messages
    is broadcast for emergency messages and geocast for traffic information. FANETs
    are used to offload surveillance data collected by drones to the ground and also
    to control the drones themselves. Surveillance data may be a video stream that
    generates approximately periodic real-time traffic whereas the download of photos
    is a file transfer generating traffic that adapts to the free capacity on the
    link. Sensor readings generate small periodic messages. Mission control/telemetry
    messages exchanged between the drones, or between a drone and the ground, are
    messages as well which may be periodic (e.g. regular position update) or occasional
    (collision warning). The control/telemetry messages have to be transferred in
    real-time with a minimum possible delay in the order of milliseconds. Real-time
    video or sensor data meant for human supervision is less critical, but should
    still be delivered with a constrained delay. Non-real-time data can be buffered
    and transmitted when free capacities are available. OppNets are used to forward
    relatively small personal messages across users, with relatively low intensity.
    Messages can only be forwarded when two devices meet, therefore such networks
    are only useful for messages which are not delay-critical. The meeting duration
    between devices may be short and the bearer technologies for the message transmission
    such as Bluetooth Low Energy do not provide fast rates. Therefore, messages should
    have a low data volume such as text messages or a small picture, e.g. to indicate
    the time and location of an event in the city centre. Delay-tolerant networks
    are widely used in space communication to exchange files, images, pre-recorded
    videos, etc. Technically, transferring such content is based on file downloads
    using elastic traffic which fills the remaining space of a communication link
    as mentioned earlier. For the special case of interplanetary communication, link
    speeds are limited due to the weak signals resulting from extremely large distances,
    which means the download of a single file may take a long time. Furthermore, the
    link delay is high and a real-time control or monitoring of a distant space vessel
    is not possible. AANETs are used to send small delay-constrained messages between
    aircraft. The delay budget is a couple of seconds for ATC and several minutes
    for Airline Operational Communications. AANETs can also be used to offload flight
    recorder information, which is delay-critical in case of an emergency. Aeroplane-to-aeroplane
    network traffic intensity is in general low or medium, like in the L-band Digital
    Aeronautical Communication System used for ATC. However, in the special case of
    flight recorder offloading which is not depicted in Figure 12 for overview reasons,
    the data should be sent as quickly as possible which may result in a high intensity.
    Like in VANETs, the preferable option to deliver data in AANETs is geocast. Wireless
    sensor networks collect measurement values periodically such as the ambient temperature,
    or they report sporadic events, for example, a car passing by. Their traffic,
    therefore, consists of periodic or sporadic short messages typical for machine-type
    communication. In some cases, these messages are delay-constrained/delay-critical,
    for example, in the case of safety monitoring. In other cases, they may not be
    delay-constrained, for example, in case of long-term environmental monitoring
    for research purposes, and only occasionally picked up by a human operator. Sensor
    networks often use convergecast for the delivery of data packets. Similar considerations
    as described before also apply to WUWSNs and WUSNs which are not included in Figure
    12 for clarity. Body sensor networks are similar to WSNs by producing short messages,
    however the frequency of measurement, for example, pulse or blood oxygen level
    is typically higher than in sensor networks. Moreover, most BSN applications are
    very delay-constrained, as they mainly serve safety and health purposes. In summary,
    the traffic characteristics for different infrastructure-less applications can
    be very diverse, from very low intensities like sensor networks in agriculture
    to very high intensities like space applications or VANETs. The delay tolerance
    is also very different: sometimes it is dictated by the application itself, like
    in safety-related vehicular applications, and sometimes it is imposed by the system
    architecture, as is the case for DTNs or OppNets. In case a high delay cannot
    be avoided, the applications need to handle it appropriately. 4.5 Power restrictions
    and requirements The emphasis on power requirements and restrictions varies greatly
    over the different types of infrastructure-less networks. When the emphasis is
    strong, the focus is mainly on two aspects: Finding the best energy source and
    optimising energy consumption. The source of energy dictates the amount of available
    energy and thus the time the device can operate. Instead of increasing the amount
    of energy available, the consumed energy can also be reduced which leads us to
    the second aspect. The optimization is usually done on a systems level, taking
    both hardware and software into account. The objective is to reduce the energy
    consumption of the device to a minimum while reducing the functionality of the
    overall system only minimally. On the hardware level, the most common steps are
    a careful selection of individual components and power supply parts like voltage
    regulators. The software optimization usually tries to reduce the required energy
    by keeping everything to the lowest power mode possible. Duty cycling, for example,
    enables the radio only for short periods when data has to be transmitted. Also,
    the CPU frequency can be reduced if no complex operations are required. The challenge
    is to find a trade-off between lifetime, delay, and coordination overhead caused
    by sleeping nodes and network throughput. This results in a wide range of protocols
    and solutions for different applications. [314] gives an overview of the available
    energy-saving concepts in the area of WSNs, where it has been most prominent.
    However, the energy constraints of the different infrastructure-less networks
    presented in this paper emerge mostly from the available power, which emerges
    in turn from the deployment environment. The main options are to have wall power
    (stationary and uninterrupted access to power) or to run on batteries. Depending
    on the size and the expected lifetime of the used devices, the batteries can be
    very large or very small, like for BSNs. A third option is to use energy harvesting
    techniques, such as solar power. This option is commonly combined with a battery,
    which is recharged on the spot. However, sometimes it is also used alone, for
    example, for passive RFID or EnOcean devices. Figure 13 provides an overview of
    the importance of energy efficiency for the different concepts. FIGURE 13 Open
    in figure viewer PowerPoint Importance of energy efficiency for the different
    infrastructure-less concepts. FIGURE 14 Open in figure viewer PowerPoint Evaluation
    techniques for different sizes of infrastructure-less networks. For FANETs, AANETs,
    and VANETs, there are no real energy constraints from the communication point
    of view as the energy required can be obtained from the carrying vehicle. The
    energy required for the movement is usually significantly higher compared to the
    energy for the communication [315]. Here, energy-efficient path planning has a
    higher importance than energy-efficient network protocol operation. For DTNs,
    the energy usage highly depends on the platform and thus the type of satellite.
    The radio can be disabled for certain periods of time if it is not required. If
    and how often it is disabled depends on the satellite type and the communication
    requirements. In general, there has not been much research on energy efficiency
    for interplanetary communications. In OppNets and MANETs energy is not the main
    research focus. Although the devices usually operate on battery power, most applications
    assume that sufficient energy is available: The devices are usually recharged
    regularly and do not operate for a longer period of time without user interaction.
    However, communication has a significant impact on the lifetime of the involved
    devices and has been considered also in research. For WSNs and its related siblings
    (BSNs, WUWSNs, WUSNs), the energy source is usually a battery and is limited due
    to the price, capacity, or size. Also, the availability of a primary energy source
    like sunlight plays a role. Energy optimization is one of the main research foci.
    For example, Radio Duty Cycling protocols were invented to reduce energy consumption
    drastically. The exact set of parameters and thus the optimization goals vary
    within this family and depend on the application. The nodes of BSNs could be recharged
    every couple of days. Wireless Underground Sensor Networks on the other hand can
    require a lifetime of several years. The concept of intermittent computing has
    been also developed to cater to the special needs of WSN applications (see Section
    63). In summary, the importance of energy efficiency and the used power sources
    are very diverse for the different infrastructure-less concepts. While this has
    been the main research focus for some of them, like all types of sensor networks,
    it has been only marginally or not at all considered for others, like AANETs.
    The availability and amount of power are dictated directly by the carrying devices—the
    smaller and more mobile the devices, the less power is available. 5 EVALUATION
    TOOLS AND METRICS This section gives a short overview of typical evaluation metrics
    and tools for infrastructure-less networks. Most of them are similar or identical
    to evaluating infrastructure-borne networks, but there are also some important
    differences. 5.1 Evaluation metrics There are several important and interesting
    aspects to consider when evaluating infrastructure-less networks. The usual network
    performance metrics can be used for all of them, for example, delivery delay,
    delivery rate or loss rate, throughput, and network overhead. When evaluating
    routing/forwarding protocols, metrics like route length, link/route lifetime,
    and route discovery time are important. For battery-powered devices, power consumption
    and node/network lifetime become critical. For memory-restricted devices, cache
    usage and cache drop rates are relevant. For on-body or in-body devices, thermal
    dissipation is health-critical. Table 2 provides an overview of all infrastructure-less
    concepts discussed in this survey and their typical performance metrics. TABLE
    2. Relevant performance metrics for all infrastructure-less concepts discussed.
    Metric MANET VANET FANET AANET DTN OppNets WSN WUWSN WUGSN WSAN BSN Delay (time)
    + + + + + + + + + + + Delivery rate/loss rate (%) + + + + + + + + + + + Network
    overhead (%) + + + + + + + + + + + Throughput (data/time) + + + Network capacity
    (throughput/space) + Route length (hops) + + + + + Route/link lifetime (time)
    + + + Route discovery time (time) + + Duty cycle (%) + + + + + Node/network lifetime
    (time) + + + + + Energy consumption (joule) + + + + + + Cache occupancy (%) +
    + Cache drop rate (%) + + The underlying components used for computing and the
    interpretation of these metrics sometimes vary from one evaluation to another.
    An example is Network Overhead. Sometimes it refers to the total number of bytes
    exchanged (data bytes and overhead bytes together) in a network, while at other
    times only the overhead bytes required to deliver the data are considered. Yet
    another version is to compute the factor between the data bytes and all bytes
    sent. Therefore, each of the metrics described in the following (and listed in
    Table 2) needs to be specified in a given context. 5.1.1 Delay (time) The delivery
    delay measures how fast a message can be delivered to a single intended recipient
    or a group of recipients, either over a single link or end-to-end. For example,
    in case of emergency messages, it is always critical to know how quickly the data
    is delivered. The delay is typically measured for each packet (hop-by-hop or end-to-end),
    which can be summarised using average, confidence intervals or CDFs (Cumulative
    distribution functions). 5.1.2 Delivery rate/loss rate (%) The delivery rate or
    reception ratio provides a metric of how many packets were delivered successfully.
    There are several reasons for losing packets, for example, due to buffer drop
    in a congestion state, TTL expiry, transmission errors on links, crashing forwarders,
    cache drops, and so on. Delivery rate is typically computed by counting how many
    packets were expected to be delivered and how many were actually delivered, for
    each node in the network. 5.1.3 Network overhead (%) The term overhead in general
    refers to the additional activities needed to achieve an intended objective. It
    comes in many shapes and forms, for example, in routing protocols it could measure
    the number of routing control packets required to establish a route; in MAC and
    link-layer protocols it could refer to the additional packet header fields required
    for control purposes, to extra MAC control packets, to redundant bits in error-correcting
    codes, or retransmission packets, etc. Usually, it is computed by summing up all
    packets (bytes) in the network and dividing them by the bytes of the data payload
    (the actual data). However, sometimes also only the total number of bytes is reported,
    without dividing it by the payload. 5.1.4 Throughput (data/time) The throughput
    refers to the rate at which a node receives or sends out packets. It can be considered
    hop-by-hop or end-to-end. It should not be confused with the link speed or data
    rate for example, of a wireless bearer technology (e.g., WLAN, Bluetooth) which
    is also measured as data/time, but specifies how many bits per time are physically
    transmitted over the wireless medium. The maximum hop-to-hop throughput is determined
    by the performance of the bearer technology which connects two stations under
    ideal transmission conditions and can be reduced by interference or congestion
    on the radio channel. When measuring the end-to-end throughput, the overhead of
    higher-layer protocols (e.g. routing, transport, application) needs to be considered.
    However, this metric has not been considered very widely in infrastructure-less
    networks. Many of the infrastructure-less technologies are not focusing on optimising
    the throughput but on energy efficiency or delivery rate. A related term is Network
    Capacity, which is the throughput of the complete network. This has been used
    only for MANETs. 5.1.5 Route length (hops) Packets hop over other nodes to reach
    their destinations. This metric measures the number of hops travelled by a packet.
    Its interpretation is not trivial. A high number of hops might mean a very large
    network, but also an inefficient selection of next hops by the routing protocol.
    Thus, it only makes sense when several routing protocols are compared to each
    other in the same network. It is also a proxy for energy efficiency, as a higher
    number of hops requires more energy. However, short routes with a small number
    of hops are also not always the best solution, as delays can still be higher and
    link speeds be lower. 5.1.6 Route/link lifetime (time) Nodes in a communication
    neighbourhood connect with each other to exchange packets. Since nodes are mobile,
    direct connections to other nodes become possible only when they are in communication
    range with each other. Thus, once the individual links change (appear, disappear
    or change their quality), routing algorithms will adapt and change the routes.
    This metric only refers to ad hoc concepts, which use end-to-end routes, such
    as MANETs or AANETs. Sometimes, also the individual link duration is of interest,
    as for WUWSNs. 5.1.7 Route discovery time (time) In networks where end-to-end
    delivery of packets is a requirement (e.g., MANETs), nodes initiate a path discovery
    mechanism to determine the set of optimum intermediate nodes over which to hop
    packets. This activity is performed by sending signalling packets. Data exchange
    can occur only after the path is established. This metric measures the duration
    of the discovery of the path. Higher values coupled with other metrics, such as
    low contact durations may result in poor data delivery rates. Again, this metric
    is used only for ad hoc concepts, where end-to-end routes are established and
    do not make sense for many others, such as OppNets. 5.1.8 Duty cycle (%) Nodes
    in networks such as WSNs employ duty cycling to save energy. Duty cycling is a
    method where nodes split the operation time into active and sleeping phases. During
    a sleeping phase, a node (or at least critical hardware components) is switched
    off, in an active phase the node is awake and ready to communicate. This metric
    computes the percentage of time in which a node is active. Higher values indicate
    nodes performing more work and showing better performance but at the cost of faster
    battery drainage. Lower values indicate a lower energy consumption, at the cost
    of a reduced ability to participate in network activities. 5.1.9 Node/network
    lifetime (time) The duration after which a network or a node is considered as
    being unusable is measured using this metric. While the lifetime of a node is
    straightforward to define, for the network lifetime, there are many possible definitions.
    A node may become inactive due to factors such as battery drainage or shutdown.
    Regarding the network lifetime, common criteria for “network death” include: death
    of the first node, death of a given percentage of nodes, the time at which the
    network becomes partitioned first, the time at which the network is not able any
    longer to observe a given physical phenomenon at a prescribed accuracy, and so
    on. 5.1.10 Energy consumption (joule) The energy consumption is the intake of
    electrical energy by a network node. It can be measured relative to a certain
    time unit in order to compare how much energy different protocols or nodes from
    different manufacturers require to transport a given amount of data, which is
    useful for finding the most energy-efficient solution. It can also be measured
    w.r.t., different actions that a node performs, such as reading a value from a
    sensor or transmitting a packet. This is useful for identifying which action causes
    the highest battery drain. If it is for example, observed that the radio interface
    has a high energy consumption, it should be checked how the power-on times of
    the radio can be reduced. 5.1.11 Cache occupancy (% or bytes) Networking architectures
    such as OppNets depend on the store-carry-forward principle to disseminate data.
    Since caching of data is important, dimensioning caches becomes an important aspect
    of resourcing nodes. Under-dimensioning caches may result in increased pressure
    on caches, thereby degrading performance (due to constant cache removals) while
    over-dimensioning results in wasted resources. Therefore, this metric provides
    a means of assessing the optimum cache sizes to use. The cache occupancy can be
    measured as a percentage when the cache is limited or in bytes when it is unlimited.
    5.1.12 Cache drop rate (bytes/time) Cache drops occur when new data received by
    a node has to be inserted into an already full cache. This metric measures the
    number of dropped bytes over a certain period. Higher values may appear periodically
    when large volumes of data are exchanged, and the caches are overwhelmed. Therefore,
    this metric is useful in determining the best caching policy to employ, to obtain
    an optimum performance with data delivery. 5.2 Evaluation techniques Generally
    speaking, there are three main alternatives to evaluate infrastructure-less networks
    and networks, in general: Real-world measurements, simulations, and theoretical
    models (Figure 14). When discussing the advantages and disadvantages of these
    three options, we need to consider the following properties: 5.2.1 Repeatability
    The ability to repeat an experiment in the exact same environment and scenario
    [316]. In the case of computer systems, this means literally the same computing
    system without any changes. This is very useful to compare the performance of
    a particular component (such as a communication protocol) with different parameter
    settings, for debugging, etc. 5.2.2 Reproducibility The ability to reproduce an
    experiment in similar environments [316]. In the case of computer systems, this
    means transferring the implementation to another computing system, which is typically
    harder than to repeat the experiment. This is very important to validate the implementation
    of a particular component. 5.2.3 Visibility The ability to inspect deeply the
    state of all components involved in an experiment. 5.2.4 Time Time needed to conduct
    an experiment, including preparation and processing of results. 5.2.5 Costs The
    financial and time cost for preparing and running the experiment. 5.2.6 Representativeness
    The degree of similarity between the experimental environment and the targeted
    one. 5.2.7 Sensitivity The parameters that exert the most significant influence
    on the system. We have summarised these properties for all three options in Table
    3. TABLE 3. Properties of the three main evaluation techniques for infrastructure-less
    networks. Measurements Simulation Theory Repeatability – ++ +++ Reproducibility
    – + ++ Visibility – +++ +++ Time – +++ + Costs – +++ +++ Representativeness ++
    + – Sensitivity – + + Repeatability of experiments is best for theoretical studies
    but also very good for simulation studies. The reason is that the models can be
    repeated typically without any problems on different machines. For simulation,
    when moving the experiment from one machine to another, some inconsistencies might
    occur, for example, hidden parameters. Theoretical studies are typically closed-form
    expressions that yield the same results independently of the machine which computes
    them. For measurements, repeatability is hard since the environment never stays
    exactly the same. For example, real measurements with sensor networks would yield
    different sensor values since they are conducted under different weather conditions,
    and those slight changes might have an unpredictable impact on the final results.
    Reproducibility is harder for any of the environments, and the reasons are the
    same as for repeatability. Visibility is an important property, especially in
    case of errors. It allows the developer to inspect her system closely. This is
    most easily done for simulation and theoretical studies, as you can analyse the
    exact state of the system at any time, including all parameter and state variables''
    values. For measurements, this is done by writing out log files to be analysed
    later. However, the log files have to be carefully designed, as their output might
    actually influence the work of the system under test. Thus, the visibility of
    measurements is generally low. Time and costs to conduct an experiment are important
    to consider. Measurements are very costly, as they require real hardware and long
    setup times, and the time for one measurement is dictated by the environment and
    the scenario. Theoretical studies are very fast to conduct since they are completely
    detached from the environment and the scenario. However, they are usually designed
    from scratch, and their mathematical derivation takes a long time. Simulation
    is very cost-efficient (if we assume free, open-source tools) and faster than
    theoretical studies because tools and models typically already exist to support
    the development. Representativeness is crucial for any evaluation method since
    it tells you how close you are to the final or targeted environment and scenario.
    A theoretical study gives you only an approximate idea about the behaviour of
    a system, usually in extreme conditions or on average. Depending on the models
    used, simulation can be close to a theoretical study or measurement. Measurements
    are very representative, but only if conducted in an appropriate environment.
    Otherwise, the results might change dramatically. Sensitivity of the methods means,
    how much do the results change when you change the experimental setup? As discussed,
    measurements are very sensitive, even to slight changes. Simulation and theory
    studies are not necessarily more stable, but at least their sensitivity can be
    evaluated in a more extensive and structured manner. This is typically done with
    a sensitivity analysis, a method from Design of Experiments [317]. In summary,
    simulation exhibits some sort of a sweet spot, where development is fast and cost-efficient,
    comfortable because of high visibility and repeatability, and when conducted professionally
    with sophisticated models, also representative. Thus, most researchers and developers
    turn to simulation first. Theoretical studies are conducted usually as part of
    PhD theses to prove particular properties and are relatively rare. Most researchers
    in infrastructure-less networks are more interested in the practical applicability
    of their work in real-world implementations and deployments. Thus, more practical
    measurements than theoretical studies are conducted. In the next section, we provide
    an overview of available and popular simulation tools for infrastructure-less
    networks. We do not dive deeper into theoretical studies, as there are only general
    mathematical tools (like Matlab, Python libraries, and linear programming tools),
    which are not dedicated to infrastructure-less networks in any way. We also do
    not dive deeper into measurements, because those are very application-specific
    and there are simply too many to be summarised in a single paper. The interested
    reader is invited to inspect closely the provided literature in Section 3 to explore
    which tools, testbeds, and hardware researchers use in their work. 5.3 Simulation
    tools There exists a myriad of network simulators. Here, we will focus on freely
    available ones, as they are most accessible to researchers worldwide. OMNeT++
    7 is a general-purpose discrete event simulator (DES) written in C++. OMNeT++
    has a free academic licence and provides the mechanisms for building and simulating
    any type of network, from simulating epidemics to wireless networks. The OMNeT++
    simulator by itself only provides the blocks for building nodes in networks and
    modelling their behaviour and interactions. So-called frameworks have emerged
    over the years that make available pre-defined nodes with some special behaviour:
    sensor nodes, IP-based nodes, satellites, cars, etc. Examples include INET8 for
    IP-based networks and sensor networks, Veins9 for VANETs, OPS10 for opportunistic
    networks, and FLoRa11 for LoRa networks. OMNeT++ has some important advantages.
    It offers a sophisticated user interface, with many possibilities for visualising
    and inspecting various scenarios, including 3D visualizations. It is also highly
    modular while clearly separating node behaviour from node parameters, making it
    easier to run large parameter studies. It runs on all major operating systems
    and has very well-maintained documentation, including user guides, tutorials,
    wiki pages, etc. At the same time, OMNeT++ does not offer the possibility of transferring
    simulation models to real implementations, for example, directly to Linux distributions.
    Network Simulator 3 (ns-3) 12 is a DES primarily focused on simulating IP-based
    networks with an emphasis on the network layer (layer 3) and the above layers
    of the protocol stack. The simulation scenarios can be created using C++ or Python,
    and run as command-line applications without a GUI. However, NetAnim is a tool
    that ships with ns-3 for visualising node mobility during or after a simulation.
    Network Simulator 3 is licenced under the GPLv2 open-source licence. Network Simulator
    3 was completely rewritten, although it is considered the successor to ns-2. For
    this reason, ns-3 is incompatible with ns-2, and the simulation models must be
    adapted to be used in ns-3. At present, ns-2 is only lightly maintained as the
    focus of the developers is on ns-3, which should therefore be used for new projects.
    The available libraries and communication modules are maintained by the community
    and cover many different areas and goals. Modules included in the official ns-3
    releases provide design documentation and include unit tests. For example, MANET
    routing protocols, 6LoWPAN-based WSNs, the WAVE model for VANETs, and an LTE library
    to model D2D technologies are available. One important advantage of ns-3 against
    other simulators is that all communication modules have been designed in such
    a way as to easily match the network interfaces to the standard Linux APIs. For
    this reason, it is possible to easily move a simulation setup to the real world
    and vice versa. It is also possible to interact with existing real-world networks
    using virtual TAP (layer 2) devices, connecting simulated and real nodes. On the
    negative side, ns-3 clearly misses sophisticated visualisation. Furthermore, the
    simulator structure is rather complex and not easy to parametrise or change, even
    for experienced researchers. The Opportunistic Network Environment (ONE) [318],
    is a simulation tool designed specifically for OppNets. It was first developed
    in 2009 at Aalto University, and it is now maintained cooperatively by Aalto University
    and the Technische Universität München. The current version is 1.6.0, released
    in July 2016, and is available on GitHub13. It is written in Java. The ONE is
    designed specifically for OppNets and therefore offers a wide variety of models
    for these networks that continues to grow. It is especially rich in data dissemination
    models for OppNets. The ONE allows for the generation of node movements using
    different models, the reproduction of message traffic and routing, cache handling,
    and the visualisation of both mobility and message passing through its graphical
    user interface. It can also produce a variety of reports, such as node movements
    to message passing and general statistics. However, the ONE does not perform well
    for large simulations, mainly because of the programming language. In terms of
    models, it has neither any link technology models nor radio propagation models.
    Thus, it is not well suited for evaluating other infrastructure-less networks,
    such as MANETs or WSNs. It is partially well suited for VANETs, where link technologies
    are not the focus of the research. Cooja 14 is a simulator for WSNs, based on
    the WSN operating system Contiki and its most recent branch Contiki-NG15. It runs
    compiled Contiki code on various simulated hardware. It has a simple graphical
    user interface and supports some channel models and trace-based radio models.
    The main advantage of Cooja is that Contiki code can be run on real hardware and
    in Cooja without adaptation, and Contiki itself supports a good variety of WSN
    hardware. In addition to the simulation tools described above, there are some
    other mobility-oriented tools that are also very useful for simulating mobility-driven
    infrastructure-less networks. BonnMotion is a tool that can create and analyse
    mobility scenarios and is most commonly used for researching MANET characteristics
    [319]. BonnMotion''s main objective is to create mobility traces using mobility
    models, as well as trace-based mobility scenarios. Furthermore, the generated
    traces can be exported to a notable number of formats used by network simulators,
    such as ns-3, Cooja, The ONE, OMNeT++, etc. PedSim (Pedestrian Simulator) [320]
    is a tool for generating mobility scenarios used by architects and civil engineers
    for urban and traffic planning. Using this mobility simulator, we can create our
    own scenarios (mainly buildings or city areas) and define the number of pedestrians/vehicles,
    their type of movement, and their destination. The generated output can be used
    as input to a network simulator after re-formatting. Simulation of Urban MObility
    is a mobility traffic generator written by the German Aerospace Centre (DLR) [321].
    The main focus is on the simulation of public transport, pedestrians, and vehicles,
    including speed limits, traffic lights, etc. From these simulations, mobility
    traces can be exported for trace-driven mobility in ad hoc network simulations.
    There are some important parameters to consider when selecting the right simulator
    to use. In most cases, none of the available simulators provides all the needed
    features and models. Thus, it is more important to consider existing experience
    (own or from close colleagues), support and documentation, graphical user interface,
    and scalability/extensibility of the models. Sometimes researchers decide to implement
    also their own simulators, but this should be the last resort. Such a solution
    requires much more time to implement, is rarely reliable and the acquired results
    are not reproducible. Reproducibility of research has become more and more important,
    and many publication venues and publishers have started placing strict requirements
    for publishing programme code and data. 6 CONCLUSION In this paper, we have attempted
    to give a broad overview of the infrastructure-less networking concepts and their
    main properties. We have highlighted their differences and commonalities, and
    have discussed shortly their main targeted applications and their history. We
    have placed special focus on some important system properties, such as mobility,
    connectivity, scale, density, traffic, and power, and highlighted the differences
    in the assumptions of the presented infrastructure-less concepts in these terms.
    While our primary objective was to provide a source of concentrated information
    for novices in this area, such as graduate students, we also discussed open issues
    and challenges. As we have seen, all of the presented infrastructure-less concepts
    are still under active development and far away from becoming standardized and
    stable solutions. We hope that the provided discussions will inspire researchers
    to not only attack the identified issues and problems but also to transfer concepts
    and solutions across the topics. AUTHOR CONTRIBUTIONS Anna Förster: Conceptualization;
    funding acquisition; methodology; project administration; resources; visualization;
    writing – original draft; writing – review & editing. Jens Dede: Visualization;
    writing – original draft; writing – review & editing. Andreas Könsgen: Visualization;
    writing – original draft; writing – review & editing. Koojana Kuladinithi: Visualization;
    writing – original draft; writing – review & editing. Vishnupriya Kuppusamy: Visualization;
    writing – original draft; writing – review & editing. Andreas Timm-Giel: Funding
    acquisition; resources; writing – review & editing. Asanga Udugama: Visualization;
    writing – original draft; writing – review & editing. Andreas Willig: Conceptualization;
    funding acquisition; resources; writing – original draft; writing – review & editing.
    ACKNOWLEDGEMENTS Open access funding enabled and organized by Projekt DEAL. [Correction
    added on 28 August 23, after first online publication: Projekt DEAL funding statement
    has been added.] CONFLICT OF INTEREST STATEMENT The authors declare no conflicts
    of interest. APPENDIX A: Existing communication technologies for ad hoc networks
    Figure A1 gives a list and an overview of the most important properties of the
    wireless technologies used to implement the different flavours of ad hoc networks.
    Table A1 maps the technologies against concepts discussed in this paper and where
    they are mostly used. FIGURE A1 Open in figure viewer PowerPoint Comparison between
    different wireless technologies. TABLE A1. Technologies and applications. (✓:
    Used in research, O: Partly used in research). MANETs VANETs FANETs OppNets AANETs
    WSNs BSNs WUSNs IEEE 802.11ac ✓c ✓ ✓ ✓ c Ob IEEE 802.11p (VANET) ✓ ✓ IEEE 802.11ad
    (wireless gigabit) Oe IEEE 802.15.1 bluetooth ✓ ✓ IEEE 802.15.4 ✓ Oa ✓ ✓ O Zigbee
    alliance ✓ O 6LoWPAN ✓ WirelessHART ✓ ISA100.11a ✓ IEEE 802.15.6 WBAN ✓ ANT ✓
    ✓ EnOceanp ✓ ✓ RFID ✓d ✓ NFC ✓d ✓ Z-wave ✓ LoRa-PHY ✓ ✓ ✓ Weightless-P ✓ DASH7
    (D7A) ✓ LDACS (A2A mode) ✓ WAIC ✓ a Not available on end user devices. b Not used
    in research but in real applications. c Ad-Hoc direct mode. d Partly/edge technologies.
    e Currently not used but might be an option depending on the distribution on end-user
    devices. Open Research REFERENCES Citing Literature Volume13, Issue1 January 2024
    Pages 66-110 Figures References Related Information Recommended Clustering multi-hop
    information dissemination method in vehicular ad hoc networks Daxin Tian,  Yunpeng
    Wang,  Haiying Xia,  Fengtian Cai IET Intelligent Transport Systems Composite
    mechanisms for improving Bubble Rap in delay tolerant networks Sweta Jain,  Nikhitha
    Kishore,  Meenu Chawla,  Vasco N.G.J. Soares The Journal of Engineering Beacon
    trust management system and fake data detection in vehicular ad‐hoc networks Muhammad
    Arshad,  Zahid Ullah,  Muhammad Khalid,  Naveed Ahmad,  Waqar Khalid,  Duri Shahwar,  Yue
    Cao IET Intelligent Transport Systems Human resource management in the age of
    generative artificial intelligence: Perspectives and research directions on ChatGPT
    Pawan Budhwar,  Soumyadeb Chowdhury,  Geoffrey Wood,  Herman Aguinis,  Greg J.
    Bamber,  Jose R. Beltran,  Paul Boselie,  Fang Lee Cooke,  Stephanie Decker,  Angelo
    DeNisi,  Prasanta Kumar Dey,  David Guest,  Andrew J. Knoblich,  Ashish Malik,  Jaap
    Paauwe,  Savvas Papagiannidis,  Charmi Patel,  Vijay Pereira,  Shuang Ren,  Steven
    Rogelberg,  Mark N. K. Saunders,  Rosalie L. Tung,  Arup Varma Human Resource
    Management Journal Cross layer protocol architecture for spectrum‐based routing
    in cognitive radio networks R. Sri Uma Suseela,  Korlapati Satyanarayana Murthy,  Hima
    Bindu Valiveti,  Mohammad Akhtaruzzaman IET Networks Download PDF ABOUT THE IET
    IET PRIVACY STATEMENT CONTACT IET Copyright (2024) The Institution of Engineering
    and Technology. The Institution of Engineering and Technology is registered as
    a Charity in England & Wales (no 211014) and Scotland (no SC038698) Additional
    links ABOUT WILEY ONLINE LIBRARY Privacy Policy Terms of Use About Cookies Manage
    Cookies Accessibility Wiley Research DE&I Statement and Publishing Policies HELP
    & SUPPORT Contact Us Training and Support DMCA & Reporting Piracy OPPORTUNITIES
    Subscription Agents Advertisers & Corporate Partners CONNECT WITH WILEY The Wiley
    Network Wiley Press Room Copyright © 1999-2024 John Wiley & Sons, Inc or related
    companies. All rights reserved, including rights for text and data mining and
    training of artificial technologies or similar technologies."'
  inline_citation: Refer to Table 1 for more data
  journal: IET Networks
  limitations: 'The paper does not explicitly mention what are the most important
    sources of information for irrigation management. '
  relevance_score: 0.9862430640087168
  relevance_score1: 0
  relevance_score2: 0
  title: A beginner's guide to infrastructure-less networking concepts
  verbatim_quote1: Soil moisture | Water content in the soil | Soil moisture sensors,
    satellites
  verbatim_quote2: Crop health | Measure of crop growth and well-being | Satellite
    imagery, sensors mounted on agricultural machines
  verbatim_quote3: '>'
- analysis: This paper presents the Multi-objective Fuzzy Krill Herd Algorithm (MFKHA)
    to address network congestion in Wireless Sensor Networks (WSNs) by optimizing
    the source sending rate. A distinctive priority-based data differentiation mechanism
    has been developed, improving QoS in a gardening application scenario. Extended
    simulations using MATLAB demonstrate MFKHA's effectiveness, outperforming existing
    algorithms by improving sending rate, throughput, and fairness and friendliness
    index, while reducing packet loss, delay, queue size, energy usage, and congestion.
    This research contributes to the optimization of source sending rates to alleviate
    congestion, and thereby, improving network performance.
  authors:
  - Bhatti K.A.
  - Asghar S.
  - Naz S.
  citation_count: '2'
  description: Wireless Sensor Network (WSN) consists of hundreds of devices with
    limited resources that collect, analyze, and transmit data to a base station.
    The carry-send nature and inconsistent transmission rate caused network congestion.
    Congestion incites decreased throughput, increased packet loss, and energy depletion.
    The existing congestion control strategies address congestion problems but still
    lack performance and quality of service issues. The optimal source transmission
    rate helps to alleviate congestion. The article proposes a Multi-objective Fuzzy
    Krill Herd Algorithm (MFKHA) control network congestion by optimizing the source
    sending rate. This innovative multi-objective outflow rate optimization mechanism
    improves network performance by designing a unique probability-based data differentiation
    mechanism coupled with an optimal source outflow rate optimization. To minimize
    network congestion by achieving fast convergence, this optimization algorithm
    incorporates the five objectives (congestion level, inflow rate, outflow rate,
    bandwidth, and queue length). To validate the performance of the proposed MFKHA
    algorithm, extensive simulations are carried out using MATLAB. Moreover, the proposed
    MFKHA algorithm is compared to those of cutting-edge meta-heuristic algorithms
    such as ECA-HA, ACSRO, and PSOGSA. The simulation result shows that the proposed
    MFKHA outperformed all counterparts and specifically improved the sending rate,
    throughput, and fairness and friendliness index. Furthermore, it has also reduced
    packet loss, delay, queue size, energy usage, and congestion against ECA-HA.
  doi: 10.1007/s11042-023-15200-8
  full_citation: 'Kabeer Ahmed Bhatti, Sohail Asghar & Sheneela Naz  Multi-objective
    fuzzy krill herd congestion control algorithm for WSN Published: 11 May 2023'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Multimedia Tools and Applications
    Article Multi-objective fuzzy krill herd congestion control algorithm for WSN
    Published: 11 May 2023 Volume 83, pages 2093–2121, (2024) Cite this article Download
    PDF Access provided by University of Nebraska-Lincoln Multimedia Tools and Applications
    Aims and scope Submit manuscript Kabeer Ahmed Bhatti , Sohail Asghar & Sheneela
    Naz  182 Accesses 3 Citations 1 Altmetric Explore all metrics Abstract Wireless
    Sensor Network (WSN) consists of hundreds of devices with limited resources that
    collect, analyze, and transmit data to a base station. The carry-send nature and
    inconsistent transmission rate caused network congestion. Congestion incites decreased
    throughput, increased packet loss, and energy depletion. The existing congestion
    control strategies address congestion problems but still lack performance and
    quality of service issues. The optimal source transmission rate helps to alleviate
    congestion. The article proposes a Multi-objective Fuzzy Krill Herd Algorithm
    (MFKHA) control network congestion by optimizing the source sending rate. This
    innovative multi-objective outflow rate optimization mechanism improves network
    performance by designing a unique probability-based data differentiation mechanism
    coupled with an optimal source outflow rate optimization. To minimize network
    congestion by achieving fast convergence, this optimization algorithm incorporates
    the five objectives (congestion level, inflow rate, outflow rate, bandwidth, and
    queue length). To validate the performance of the proposed MFKHA algorithm, extensive
    simulations are carried out using MATLAB. Moreover, the proposed MFKHA algorithm
    is compared to those of cutting-edge meta-heuristic algorithms such as ECA-HA,
    ACSRO, and PSOGSA. The simulation result shows that the proposed MFKHA outperformed
    all counterparts and specifically improved the sending rate, throughput, and fairness
    and friendliness index. Furthermore, it has also reduced packet loss, delay, queue
    size, energy usage, and congestion against ECA-HA. Similar content being viewed
    by others Energy-Efficient Routing in Wireless Sensor Networks: A Meta-heuristic
    and Artificial Intelligence-based Approach: A Comprehensive Review Article 02
    January 2024 Enhancing the Network Performance of Wireless Sensor Networks on
    Meta-heuristic Approach: Grey Wolf Optimization Chapter © 2021 A survey of energy-efficient
    clustering routing protocols for wireless sensor networks based on metaheuristic
    approaches Article 11 February 2023 1 Introduction WSN is a collection of numerous
    sensor nodes (SNs) that can sense environmental data, process it, and transmit
    collected data to the sink. It is widely used in IoT networks for several applications,
    such as military, smart agriculture, health care, smart technologies, and many
    more IoT [6, 10, 15, 19, 22, 31]. Deep learning techniques are well-known AI methods
    that can assist IoT devices in adapting their behaviour based on experience represented
    as data [30]. WSNs are composed of tiny devices called sensor nodes (SNs), scattered
    in a specific area for monitoring and surveillance purpose. These SNs are distributed
    in an ad-hoc manner and are resource constraints in terms of storage, bandwidth,
    energy, and processing speed [15, 19]. SNs collect scalar and multimedia data
    using light, temperature, sound, image, and video sensors. All connecting nodes
    between the sensor and sink are called intermediate nodes (INs), and collected
    data is forwarded toward the base station through INs [2, 23]. Presently, WSN
    applications have several types of data packets without distinguishing features.
    The INs cannot recognize the importance of data packets because INs handle all
    traffic similarly, which may lead to delayed important information [8, 11, 24].
    Moreover, WSNs face several challenges, such as energy consumption, medium access,
    routing, data processing, and transport; however, network congestion is one of
    the most significant issues [38]. Network congestion occurs when inflow is higher
    than outflow at any SN. In WSNs, the SNs are responsible for the transmission
    of sensitive data toward a single sink node. The INs have an additional responsibility
    to forward their sensed data and the data received from descending nodes. Due
    to this, all these nodes suffer from network congestion. Moreover, WSN has no
    time limit for data transmission and can be carried out in the same period and
    instant [21], which results in network congestion because INs receives more inflow
    data than their outflow capabilities [25], shown in Fig. 1. As a result of more
    inflow messages, the INs need to store additional messages in their buffer [17].
    Due to memory constraints and unsynchronized data flow [34], the buffer capacity
    of these nodes rapidly becomes full, which results in the drop of packets, hence
    creating network congestion. Fig. 1 Intermediate nodes congestion Full size image
    The performance of WSN is significantly affected by network congestion as the
    SN has to retransmit the dropped packets after the expiration of the packet timer
    [5], which increases energy consumption, reduces throughput, and degrades the
    overall performance of WSN. The congestion control process defines measures to
    minimize network congestion. This process is divided into three phases, i.e.,
    network congestion detection, congestion notification, and rate adaptation [4,
    7, 16]. Congestion occurs due to the collision of packets and the queuing buffer
    overflow. In literature, many mechanisms have already been proposed to control
    the congestion using several modified optimization versions of Cuckoo Search,
    ACO, GSA, PSO, NSGA-III, Krill Herd (KH), Blockchain Technology, etc. [13, 18,
    20, 39]. However, the congestion problem still exists due to buffer overflow.
    Chaturvedi et al. [12] conducted a comparative analysis of GSA, PSO, and KH. The
    authors conclude that the KH is more efficient and has improved convergence speed.
    Moreover, fuzzy logic is exercised to enhance the convergence of KH. Therefore,
    this research proposes Multi-objective Fuzzy Krill Herd Algorithms (MFKHA). In
    MFKHA, first, fuzzy logic is used to estimate the congestion level, further used
    in congestion detection and rate optimization. Second, Kill Herd objective function
    is designed by maximizing or minimizing several objectives such as fuzzy congestion
    level, packet inflow, queue length, link bandwidth, and packet outflow. Third,
    it provides an innovative priority-based data differentiation mechanism to address
    the quality of service for the gardening application. The performance of MFKHA
    is compared with lasted algorithms such as ECA-HA (efficient congestion avoidance
    approach using Huffman coding algorithm), PSOGSA (Particle Swarm Optimization
    and Gravitational Search Algorithm), and ACSRO (Adaptive Cuckoo Search based Rate
    Optimization). The rest of the paper is organized; Section 2 presents the literature
    review, and the research contribution is highlighted in Section 3. Section 4 explains
    the theoretical concepts of the Krill Herd Algorithm (KHA) and Fuzzy Logic for
    basic understanding. Section 5 describes the problem formulation and assumptions.
    Section 6 offers the proposed model MFKHA. Section 7 is followed by results and
    discussion, whereas Section 8 shows the computation complexity of the proposed
    algorithm, and Section 9 highlights the conclusions and future works. 2 Literature
    review This section highlights significant contributions proposed by researchers
    using highly-ranked international journals. The field congestion control in WSN
    is surveyed and analyzed in light of existing literature. This survey has critically
    reviewed several hybrid and multi-objective mechanisms to address congestion issues,
    such as queue management and source rate optimization. Furthermore, The performance
    of these mechanisms is compared using principal congestion control metrics such
    as Throughput, Delay, Packet loss, Congestion level, Energy usage, Packet delivery
    ratio, Sending rate, and Receiving rate [19]. However, these mechanisms cannot
    provide an optimal sending rate for the source node that enhances the network
    performance. Optimizing the source transmission rate has led to many hybrid congestion
    control solutions. Table 1 shows a comprehensive comparison conducted on fuzzy
    and multi-objective optimization techniques and enlists the existing approaches
    to minimize network congestion. Table 1 Comparison of Congestion Control Algorithms/Approaches
    Full size table Yadav et al. [37] have developed a traffic and energy-aware congestion
    control algorithm called ECA-HA (efficient congestion avoidance approach using
    Huffman coding algorithm and ant colony optimization). It is used to optimize
    the traffic flow using ant colony optimization (ACO) and Huffman coding. This
    algorithm has a two-step optimization approach that enhances the convergence time.
    The first step optimizes the source transmission rate; in the second step, it
    discovers the optimal path from source to destination. It is cascading contribution,
    and the results are expected given that fact. However, this algorithm has a scalability
    issue. Qu et al. [27] proposed a fuzzy sliding mode congestion control algorithm
    (FSMC), which is an adaptive rate adjustment. This algorithm applies Fuzzy logic
    to the buffer queue to minimize congestion automatically. Aimtongkham et al. [3]
    introduced a Fuzzy logic rate adjustment scheme, which implements the fuzzy logic
    rigorously in all routing, rate adjustment, and congestion control areas. The
    technique solves congestion problems in three ways: traffic rate adjustment, selection
    of optimal time, and optimal path selection. However, fuzzy logic is inappropriate
    in situations with varying input and output. Vijayalakshmi et al. [35] presented
    a method, which is a combination of Tabu search and PSO. The key objectives were
    network lifetime, delay, and optimizing the energy consumption during data transmission
    in a network. The main drawback of this algorithm is convergence. By nature, the
    convergence rate of PSO is slow to get an optimal solution. Amit et al. [16] developed
    a rate-aware congestion control mechanism (RACC). This mechanism effectively adjusts
    the source transmission rate to minimize the congestion using receiving and processing
    data rate, throughput, and delay. However, this technique generates extra traffic
    at the cost of additional energy usage, inciting a reduced network lifetime. Srivastava
    et al. [34] proposed a technique that used an Adaptive Weight Firefly algorithm
    to find the optimal sending rate, improving PDR using an optimized sending rate.
    However, it is necessary to focus on fault management techniques. This technique
    can improve the network lifetime by optimizing energy utilization. Parsa et al.
    [26] proposed a priority mechanism that manages the traffic priority by setting
    the waiting time of packets in the queue. Shelke et al. [32] proposed a scheme
    for a healthcare system in which the QoS is achieved by dividing the traffic into
    multiple sub-queue based on its priority. Narawade et al. [24] proposed a method
    that considers the relative priority of child nodes to decrease congestion and
    optimize the transmission rate of child nodes. This rate is evaluated using a
    multi-objective mechanism in addition to various parameters, such as share rate,
    bandwidth, service rate, congestion level, and queue length, which is employed
    in order to offer a minimal amount of packet loss on the congested node. Singh
    et al. [33] introduced an algorithm that combines the PSO and GSA and considers
    an energy parameter in its objective function. However, the sending rate is adjusted
    after the identification of specific congestion level detection. This detection
    level is calculated based on fixed parameter values for queue length, which lacks
    adaptability. 2.1 Outcomes of the literature The outcomes of the literature are
    listed below: - a. Due to the gigantic transmission, the existing approaches still
    face three problems: an efficient detection mechanism, the optimal sending rate
    for the source node, and the services differentiation mechanism because the sensor
    nodes have limited bandwidth, memory, energy, and processing capability. There
    is a requirement to introduce an advanced algorithm for managing the massive load
    of traffic, which results in less energy usage, minimum bandwidth utilization,
    and restrains the processing power [1, 4, 19, 35]. b. The most critical challenges
    are increasing throughput (TP) while decreasing delay (DL), packet loss (PL),
    congestion level (CL), and energy consumption (EU). Numerous algorithms have been
    developed to address these challenges [3, 24]. c. MATLAB software is used to simulate
    most of the solutions in the literature [24, 29, 34]. As a result, this research
    also uses the Matlab tool to analyze and compare the performance of the proposed
    algorithm with existing solutions. 3 Research contributions The research contributions
    of this manuscript are as below: - a. A comparative analysis of multi-objective
    congestion control mechanisms has been conducted to alleviate the congestion and
    optimize the source sending rate. b. A novel fuzzy congestion detection (FCD)
    algorithm has been formulated to improve the accuracy of congestion detection
    during network communication by using the factors involved in congestion decisions.
    FCD works in normal flow and accurately detects congestion in case of massive
    network traffic flows. The right time revelation of congestion increases the efficiency
    of MFKHA. c. An MFKHA has been designed to find the optimal sending rate using
    an objective function. An objective function uses the congestion level provided
    by FCD as a parameter to obtain the optimal sending rate. d. A distinctive priority-based
    data differentiation mechanism has been developed to improve the QoS and a scenario
    of an intelligent gardening application. e. The simulated results of MFKHA are
    analyzed and compared with state-of-the-art techniques. Furthermore, the results
    are generated using MATLAB simulation, confirming that the MFKHA outperforms existing
    mechanisms. 4 Preliminary 4.1 Krill herd algorithm Krill Herd Algorithm (KHA)
    is a bio-inspired and population-based algorithm motivated by KH behaviors, a
    group of krill (tiny fish that live under deep oceans) that search for food in
    the high-density group. This algorithm is used to solve global optimization and
    complex engineering problems based on the herding behaviors of krills. Krills
    make the decisions not only using their information but also by examining the
    behavior of others. The individual krill lacks real-time data, which can be learned
    through the judgment of other krill [36]. Let ''s NK is the number of krills moving
    in the search space to find the best solution to the problem. The position of
    krills is considered a variable, and its distance from the source of food is equivalent
    to the fitness value of the objective function. KH Optimization Algorithm adopted
    a Lagrangian model formulated by (1). The movement of krills depends on their
    actions, and each krill is equipped with three types of activities, i.e., induced
    speed (N), foraging speed (F), and random diffusion speed (D). $$ \\frac{dX_{i}}{dt}=N_{i}+F_{i}+D_{i}
    $$ (1) The Ni is the induced speed of other krill individuals, Fi is the foraging
    speed, and Di is the diffusion speed of the ith individual krill in search space.
    These speeds are described as follows: - a. The first motion reflects the movement
    of individual krill according to the neighbor''s positioning. This action is calculated
    using (2). $$ N_{i}^{new}=N^{max}(\\alpha_{i}^{local}+\\alpha_{i}^{target})+\\omega_{n}N_{i}^{old}
    $$ (2) Where Nmax is the maximum induced speed, ωn is the inertia weight lies
    between 0 and 1, \\(N_{i}^{old}\\) is the last motion-induced, \\(\\alpha _{i}^{local}\\)
    is the local effect and \\(\\alpha _{i}^{target}\\) is the target direction effect.
    b. The second foraging is used to search current food locations by individual
    krill keeping in view the previous location. The foraging action is computed as
    given in (3). $$ F_{i}=V_{f}({\\upbeta}_{i}^{food}+{\\upbeta}_{i}^{best})+\\omega_{f}F_{i}^{old}
    $$ (3) In (3) foraging speed is denoted Vf, ωf is the inertia weight between 0
    and 1, \\(F_{i}^{old}\\) is the last foraging motion, \\({\\upbeta }_{i}^{food}\\)
    is the food attractive and \\({\\upbeta }_{i}^{best}\\) is the effect of the best
    fitness of the ith krill so on. c. Third random diffusion is based on density.
    The individual krill takes the decision movement a low-density area into a high-density
    area [36]. The diffusion action is defined in (4). $$ D_{i}=D^{max}\\delta $$
    (4) Where maximum diffusion speed is denoted by Dmax and δ is any random value
    between -1 and 1. 4.2 Fuzzy inference system Fuzzy logic is a computational and
    precise problem-solving technique inspired by human thinking [36]. It is to solve
    complex and uncertain problems and makes a decision, which is based on inputs.
    It differs from the traditional computational logic of false is 0 or true is 1
    and has no intermediate point. However, in a fuzzy system, the value lies between
    ranges, representing very low, low, medium, and high. A fuzzy inference system
    (FIS) is a system that uses fuzzy set theory to map inputs to outputs. This system
    consists of a set of inputs and an active set of rules that triggers the set of
    actions to generate output Mamdani FIS having sixteen rules is used to alleviate
    the network congestion based on two input parameters. The first input parameter
    is the individual portion of SNs in the intermediate node, denoted by alpha (α).
    The second input parameter is the overall queue length of INs represented by beta
    (β) The values of these parameters are defined with some uncertainties. The system
    generates the output congestion level denoted by lambda (λ). Figure 2 shows the
    Matlab software screenshot for fuzzy logic for two inputs and output parameters.
    Moreover, the fuzzy logic system goes under the following three stages. Fig. 2
    FIS used for congestion level Full size image 5 Problem formulation and assumptions
    In a WSN, SNs sense data packets from the environment and transmit them using
    a Poisson process to the sink through IN. It is a system in which traffic is generated
    at predetermined intervals and processed at a random rate. The IN acts as a bottleneck
    node, accepting packets from all sources and transmitting them to the SKN. The
    congestion is exacerbated when the sum of IF is higher than the OF at IN, and
    (5) represents this relation. $$ Congestion=(OF)<\\sum\\limits_{i=0}^{N}(IF_{i})
    $$ (5) Figure 3 depicts the entire situation in which IN gets data packets from
    SNs at regular intervals and must queue the extra packets after processing them
    to the best of its capacity. Consider an example where four SNs (SN1, SN2, and
    SN3) are the sensor nodes connected with IN. All these SNs transmit their packets,
    two packets (Pkti) from each sensor node simultaneously. The processing rate of
    IN is four packets at a time. In a first-time instance, six packets are received
    by the IN from SNs. Out of these six packets, four packets will be processed,
    and the remaining two packets will be waiting in the queue. The queue length is
    three, so two packets will stay safely in the queue of a node. Thus, there will
    be no network congestion. Fig. 3 Queuing congestion model Full size image Six
    more packets are received for the second time, and four packets will be processed
    again. The queue is unable to store currently received six packets because it
    has space for three packets. This increasing trend of incoming packets leads to
    congestion and increased retransmissions due to packet drops. The receiving rate
    of the data packet can be adjusted with the optimized sending rate, and this rate
    reduction helps minimize congestion and retransmission. Table 2 contains a list
    of the notations used in this article. Moreover, the following assumptions [3]
    have been taken, keeping in view many constraints of WSN like limited energy,
    processing capability and buffer size, etc. All sensor nodes (SNs) are stationary
    and initialized with equal energy. SN is no longer available in the network if
    its energy level reaches zero. N number of SNs and single SKN are randomly deployed
    in the square area with the same communication range. SNs priorities are set according
    to sensor node objectives in smart gardening applications; temperature, humidity,
    and moisture have high, medium, and low priority, respectively. All SNs are traffic
    generators and data forwarding nodes, except the SKN. The traffic generation rates
    of each link are asymmetric, i.e., the inflow (IF) and outflow (OF) of a specific
    node are different and have a dissimilar share in the intermediate node (IN) queue
    Packet loss is not considered due to collision. Table 2 Notations to be used Full
    size table 6 Proposed model for MFKHA This section discusses the operation and
    architecture of the proposed mechanism. This mechanism consists of three key objectives.
    First, it presents a distinctive priority-based traffic differentiation mechanism
    with an application scenario. Second, it introduced a queue-based congestion detection
    algorithm called Fuzzy Congestion Detection (FCD). Third, a novel rate adaptation
    algorithm is named the Multi-objective Fuzzy Krill Herd Algorithm. Figure 4 illustrates
    the overarching conceptual model for the detailed explanation and steps to be
    taken during the implementation of this mechanism. Furthermore, the research has
    straightforward objectives, such as maximizing throughput, optimizing sending
    rate, and maximizing delay, packet loss, network congestion, and energy usage.
    Fig. 4 System model Full size image 6.1 Smart gardening application scenario Smart
    gardening is a vital agriculture sector, and solar radiation affects the greenhouse.
    In gardening applications, there is a requirement to regularly monitor environmental
    parameters such as temperature, humidity, moisture, etc. The sensors are used
    to monitor the real-time data of such parameters. Typically, SNs collectively
    gather data and transmit it to the base station through several INs according
    to the IF rate. The control center examines the data received at the base station
    to adjust the temperature, attune the humidity level, and regulate the watering
    system, as shown in Fig. 5. Fig. 5 Application scenario Full size image There
    are three types of SNs used in the application. First, the temperature sensor,
    which provides the temperature around the plants and its reading concerning timing,
    is essential to growing good plants. Second, the humidity is estimated by the
    humidity sensor, due to which most plants grow best with relative humidity levels.
    Third, the moisture sensor plays a vital role in growing plants. In this scenario,
    priority-based data transmission is applied because the optimization approach
    governs the inflow rate depending on the priority sensor node data. Different
    static priority is assigned to each sensor depending on the importance of the
    data sensed by the node, such as temperature, humidity, and moisture level is
    assumed as high, medium, and low priority, respectively. Two bits are set in the
    header of each existing sensor packet to mark the priority of SNs, as listed in
    Table 3. Table 3 List of sensors used in gardening application Full size table
    After setting Sensor Type ID (STID) and priority in sensor data is recorded, the
    recorded data is forwarded to sink through INs. Figure 6 shows two central units
    of this mechanism, i.e., the packet classification and the packet processing unit.
    A packet classification unit classifies the queue of INs after detecting the congestion.
    This unit maintains three different sub-queues as HPQ (High Priority Queue), MPQ
    (Medium Priority Queue), and LPQ (Low Priority Queue). This unit stores data packets
    in the respective array after examining the priority of the data packet. The specified
    queue is maintained so that if priority is 3 then the data packet is enqueued
    in HPQ, if priority is 2 then the data packet is enqueued in MPQ, and if priority
    is 1 then the data packet is enqueued in LPQ. Algorithm 1 shows the pseudocode
    of the packet classification unit. Fig. 6 Priority-based traffic differentiation
    mechanism Full size image Algorithm 1 Packet classification unit for MFKHA. Full
    size image After proper queueing of sensed data packets, the packets must be processed
    to reach the next intermediate forwarder. The packet processing unit is used to
    process packets by packets in sub-queues at IN based on SNs priority. A weighted
    algorithm is employed to process each sub-queue, guaranteeing fairness among SNs.
    According to the assigned priority, the weights of HPQ, MPQ, and LPQ are set to
    50, 33, and 17, respectively. During scheduling, HPQ, MPQ, and LPQ obtain 50%,
    33%, and 17% of the resources. This algorithm applies a sequential procedure to
    process three, two, and one packet from HPQ, MPQ, and LPQ, respectively. Algorithm
    2 shows the pseudocode of the packet processing unit. Algorithm 2 Packet processing
    unit for MFKHA. Full size image 6.2 Fuzzy Congestion Detection (FCD) model for
    MFKHA This section explains the proposed FCD used to compute the congestion level.
    Further, the congestion level helps to decide the network congestion. The FCD
    is exercised to find congestion levels by optimally tuning the queue length of
    IN. FCD has two input parameters and one output parameter. The first is the percentage
    of SNs utilizing 95% of their assigned portion in IN [24], denoted by α. The second
    input is the percentage of IN''s overall occupied queue, indicated by β. Both
    α and β are categories in four linguistic states defined in (6) and (7). $$ \\alpha
    \\epsilon \\{LW, MD, MO, HI\\} $$ (6) $$ \\upbeta \\epsilon \\{LW, MD, MO, HI\\}
    $$ (7) Both input parameters are taken as percentages therefore their value ranges
    from 0 to 100. In the fuzzification process, both variables are modified with
    Υ(α) ∈ [0 100] and Υ(β)) ∈ [0 100]. The fuzzy inference step defines the rules
    based on fuzzy input. Rules details are listed in Table 4. Table 4 Fuzzy inference
    rules Full size table Ambiguity is created by mixing values of input variables
    α and β. Both variables have been defined as [0 100], and these variables are
    divided into four levels, i.e., Low (LW), Medium (MD), Moderate (MD), and High
    (HI). The triangular membership function is used for the input variable shown
    in Figs. 7 and 8. Fig. 7 Membership function curve of the input variable (α) Full
    size image Fig. 8 Membership function curve of the input variable (β) Full size
    image The hybrid (combination of triangular, s-shape, and z-shape) member function
    is used for output to improve the control effects. A z-shape process is used at
    the left edge, an s-shape terms edge is used at the right edge, and a triangular
    membership function is used in the middle. This configuration of the membership
    function is applied to make an efficient congestion control system, which provides
    an effectively tuned congestion level. The membership function curve for output
    variable λ is shown in Fig. 9. Fig. 9 Membership function curve of the output
    variable (λ) Full size image According to the member functions of inputs and output,
    the resultant output variable λ is returned by FCD, which shows the congestion
    level of nodes. Using λ, the decision about congestion is taken whether it exists
    or not. The complete congestion detection flow is shown in Fig. 10, and the network
    congestion detection condition is described as when λ is greater than 95% [24].
    Fig. 10 Congestion detection flow for IN Full size image 6.3 Objective function
    for MFKHA In any optimization problem, the decision about the control variables
    is critical and is taken by the objective function, which leads to optimized performance
    [9, 14, 16]. The proposed objective function considers the five network control
    variables, i.e., inflow, outflow, congestion level, available bandwidth, and queue
    length. According to (8), considering these network control variables, the objective
    gets maximum reachability. These are the most important network parameters to
    control congestion [24]. The performance in the optimization algorithm is correlated
    with objective function parameters, thus this research considers five important
    and most relevant control parameters. The objective function summarizes the input
    parameter by using maximization or minimization values for each parameter [24,
    37]. $$ \\begin{array}{l} f = max(FCD_{congestionlevel}+f_{inflow}+f_{outflow}\\\\
    +f_{bandwidth}+f_{queuelength}) \\end{array} $$ (8) The first control variable
    in the objective function is the congestion level. This congestion level is calculated
    by FCD, which is based on the SNs and IN queues. If congestion is observed at
    the current congestion level, this means that the objective is minimized. It is
    mandatory to keep the congestion level at a minimum, calculated using FCD and
    further used by MFKHA. The new optimized inflow rate is calculated by an objective
    function considering the maximum factor. This parameter is denoted by FCDcongestionlevel
    and calculated using (9). $$ FCD_{congestionlevel}=min(FCD(\\alpha,\\upbeta))
    $$ (9) The second control variable in the objective function is inflow. It is
    calculated as the number of packets per second received by the node. If congestion
    is observed in the current inflow rate, the objective has reduced the inflow rate
    to avoid congestion; therefore, the objective function must have a minimum receiving
    rate to alleviate the congestion. This parameter is denoted by finflow and calculated
    using (10). $$ f_{inflow}=min(1-\\frac{inflow^{l}_{prv}-inflow^{l}_{new}}{inflow^{l}_{prv}})
    $$ (10) The third control variable in the objective function is outflow. It is
    calculated as the number of packets sent out from the node per second. If congestion
    is observed in the current outflow rate, the objective is reduced by increasing
    the outflow rate to avoid congestion; therefore, the objective function must have
    a maximum outflow packet rate to eliminate the congestion. The parameter is denoted
    by foutflow and calculated using (11). $$ f_{outflow}=min(1-\\frac{inflow^{l}_{prv}-inflow^{l}_{new}}{outflow^{l}_{prv}})
    $$ (11) The fourth control variable in the objective function is bandwidth. It
    is calculated as the number of bytes per second received by the node. If congestion
    is observed in the currently available bandwidth, therefore it needs to reduce
    the Inflow rate. This parameter is denoted by fbandwidth and calculated using
    (12). $$ f_{bandwidth}=Bandwidth_{avail}-inflow^{l}_{new} $$ (12) The fifth control
    variable in the objective function is Queue Length, calculated as the number of
    packets lost per second at the node. If congestion happens due to the current
    queue length, the objective is to get the minimum queue length for eradicating
    congestion. It is the minimum of two values, which are calculated based on a queue
    of intermediate nodes. The parameter is denoted by fqueuelength and calculated
    using (13). $$ \\begin{array}{l} f_{queuelength}=min(\\frac{IN^{l}_{phyQ}-inflow^{l}_{prv}}{IN^{l}_{occupiedQ}}\\\\
    -\\frac{IN^{l}_{phyQ}-inflow^{l}_{new}}{IN^{l}_{occupiedQ}}) \\end{array} $$ (13)
    6.4 Multi-objective Fuzzy Krill Herd Algorithm (MFKHA) Initially, in this section
    MFKHA congestion control mechanism is described to optimize sending rate of the
    source node and share it with SNs. Further, SNs generate network traffic according
    to a new rate, sufficiently reducing network congestion and improving network
    performance by minimizing retransmissions. Algorithm 3 calculates the optimal
    rate by considering different environmental parameters in the objective function,
    such as fuzzy congestion level, inflow, outflow, bandwidth, and queue length.
    The SN continuously sends packets toward the sink through IN at the IF rate. The
    IN receives the data and calculates the network congestion using FCD. If there
    is no congestion, make changes in IF according to a defined standard and notify
    the SNs. When IN observes network congestion, MFKHA is employed to determine optimized
    IF using the objective, and the new optimized IF is to notify the SNs. The flow
    chart of the source sending rate adjustment is shown in Fig. 11. Algorithm 3 Multi-objective
    Fuzzy Krill Herd Algorithm (MFKHA). Full size image Fig. 11 SNs rate adjustment
    flow used by MFKHA Full size image The overall network performance has improved
    by employing MFKHA. The parameter FCDcongestionlevel along with the priority-based
    mechanism has sufficiently contributed to optimizing the new inflow rate. The
    optimal inflow rate is advertised to the source node through an implicit method
    called piggybacks, i.e., the inflow rate is embedded in the header of the existing
    data packet instead of generating extra control packets. 7 Evaluation In this
    section, the simulation setup and results are discussed in detail. The effective
    performance evaluation parameters are selected, and a comprehensive comparison
    of proposed and existing algorithms is presented. 7.1 Simulation setup The simulation
    uses a wireless transmission library in the Matlab R2016a on the Intel Core i7
    computer system. In this simulation, 100 sensor nodes are deployed randomly in
    a square space of 100m × 100m, as shown in Fig. 12. The sink node is placed in
    the middle, and SNs generate the network traffic using the Poisson process. Fig.
    12 Network topology Full size image The simulation is executed for 200 secs. The
    results are generated by employing the realistic scenario of network operation,
    condition, and effective parameter setting listed in Table 5. Table 5 Parameters
    used for simulation Full size table The motivation for using the MATLAB tool is
    the existing congestion control algorithms were implemented with the help of the
    tool. Furthermore, MATLAB was also used as a baseline algorithm for simulation.
    Investigative literature takes a simulation period of 200 secs. According to the
    simulation model, as shown in Fig. 13, implementing MFKHA algorithms have been
    implemented using MATLAB. Each algorithm records the resultant values every 20
    seconds in text files. After completing the simulation, the processing is applied
    to a text file for generating evaluation results. The principal evaluation metrics
    are used to generate the results graphically. Fig. 13 Complete simulation model
    Full size image 7.2 Performance evaluation metrics The performance of the MFKHA
    is validated through results of PSOGSA and ACSRO using principal evaluation parameters
    of network congestion such as sending rate (SR), throughput (TP), packet loss
    (PL), delay (DL), queue size (QS), energy utilization (EU) congestion level (CL)
    and fairness and friendliness index (FFI). The detailed explanation of each metric
    is as follows: - Sending Rate (SR): The SR (bits/s)is the rate at that SNs transmit
    the data packets to the sink through INs. This SR is varying according to network
    congestion, which is examined by network congestion control algorithms. Throughput
    (TP): The TP of the network is defined as it is the ratio of receiving rate (bits/s)
    of the sink and the total available bandwidth (bits/s) assigned to the sink. It
    is expressed using (14). $$ TP= \\frac{data pkt receiving rate}{total available
    bandwidth} $$ (14) Packet Loss (PL): The PL is the failure of transmitted data
    packet to reach at sink. It is the ratio of difference of sending and receiving
    of data packet with every time instance. It is expressed in (15). $$ PL= \\frac{(pkt
    send-pkt receive)}{time} $$ (15) Delay (DL): The network DL is expressed as it
    is the time taken to transmit data packets from the SN and receive them at the
    sink. It is represented using (16). $$ DL=(pkt receiving time)-(pkt sending time)
    $$ (16) Queue Size (QS): The node QS is signifying the queue utilization degree
    and it also represents the total number of data packets that exist in the queue
    of node at time instance. It depends on the SR of SNs. Energy Used (EU): The EU
    is defined as, it is the total energy used to transmit, process, and receive data
    along with the sensor network and measured as joule/bits. It is the sum of the
    total energy utilized by each link between the source and sink. Congestion Level
    (CL): The congestion level is measured when network congestion occurred i.e. IF>OF.
    This means that the packet processing reflects the congestion level at each SN.
    Fairness and Friendliness Index (FFI): Jan Fairness Index computation formula
    used by [28] is applied in order to assess the FFI of the proposed algorithm.
    This index is computed by using (17). Assuming that n in is the number of flows
    and xi represents the throughput of flow i. $$ FFI = \\frac{({\\Sigma}_{i=1}^{n}
    x_{i})^{2}}{n{\\Sigma}_{i=1}^{n} (x_{i})^{2}} $$ (17) 7.3 Simulation results The
    experiment results reported in this section prove the effectiveness of the proposed
    fuzzy multi-objective krill herd optimization algorithm, MFKHA. The principal
    congestion metrics such as SR, TP, PL, DL, QS, EU, CL, and FFI are used to compare
    the latest benchmark algorithm ECA-HA with the proposed algorithm in the same
    network environment settings. 7.3.1 Analysis based on Sending Rate (SR) The simulated
    results of SR for the proposed MFKHA and existing PSOGSA and ACSRO are shown in
    Fig. 14. It has been noted that the results of SR vary as time elapsed. It is
    evident from the figures at all-time instances that the SR offered by MFKHA is
    greater than the benchmark algorithms PSOGSA and ACSRO because MFKHA has enhanced
    optimization. Existing algorithms have a massive incline of SR between time instances
    80th and 160th. However, the MFKHA remains stable due to its robust optimization.
    At time instance 200th SR offered by MFKHA, EAC-HA, PSOGSA, and ACSRO are 9.96,
    9.62, 8.41, and 8.12, respectively. Fig. 14 Analysis based on sending rate Full
    size image 7.3.2 Analysis based on Throughput (TP) The simulated results of TP
    for the proposed MFKHA and existing PSOGSA and ACSRO are shown in Fig. 15. TP
    is a performance indicator, which will be dropped when traffic load, as well as
    congestion level, increases over time. It is evident from the figure at time 200th
    instance that the TP of MFKHA is 7.62, whereas ECA-HA, PSOGSA, and ACSRO have
    4.73, 3.91, and 1.2, respectively. According to TP statistics, the performance
    of the MFKHA has substantially improved. Fig. 15 Analysis based on throughput
    Full size image 7.3.3 Analysis based on Packet Loss (PL) The simulated results
    of PL for the proposed MFKHA and existing PSOGSA and ACSRO are shown in Fig. 16.
    The loss of packets may be observed when increases the network traffic. It is
    evident from the figures at the time 200th instance MFKHA measures the PL as 1.73
    × 104. However, at the same time, PL computed by ECA-HA, PSOGSA, and ACSRO are
    1.79 × 104, 2.67 × 104, and 2.89 × 104, respectively. It can be observed that
    MFKHA significantly decreased the PL and outperformed other available techniques.
    Fig. 16 Analysis based on packet loss Full size image 7.3.4 Analysis based on
    Delay (DL) In Fig. 17, the result of DL is presented for both proposed and existing
    algorithms. To show performance improvement, the DL must be minimized. It is proved
    from the figures at time 200th instance the proposed algorithm calculates the
    DL as 0.185 sec. However, at the same time, ECA-HA, PSOGSA, and ACSRO are DL measured
    by 0.201 sec, 0.205 sec, and 0.214 sec, respectively. It is evident that the MFKHA
    is slightly behind the existing algorithms but supersedes other available techniques.
    Fig. 17 Analysis based on delay Full size image 7.3.5 Analysis based on Queue
    Size (QS) The simulated results of QS for the proposed MFKHA and existing PSOGSA
    and ACSRO are presented in Fig. 18. To show performance improvement in the QS
    must be minimum. It is evident from the figures at the time 200th instance the
    queue size attained by MFKHA is 48 pkts. However, at the same time, the queue
    size achieved by ECA-HA, PSOGSA, and ACSRO is 51 pkts, 66 pkts, and 70 pkts, respectively.
    It can be clear that the MFKHA significantly decreased the QS and outperformed
    other available algorithms in the literature. Fig. 18 Analysis based on queue
    size Full size image 7.3.6 Analysis based on Energy Used (EU) The simulated results
    for energy used by the sensor nodes for the proposed MFKHA and existing PSOGSA
    and ACSRO are presented in Fig. 19. The minimum utilization of energy is required
    to show performance improvement. It is apparent from the figure at time 200th
    instance that the energy consumed by MFKHA is 2.1 J. However, at the same time,
    the energy used by ECA-HA, PSOGSA, and ACSRO is 2.6 J, 3.6 J, and 3.9 J, respectively.
    According to these facts, the MFKHA has substantially improved its performance
    in terms of energy utilization and outperformed the other latest available algorithms.
    Fig. 19 Analysis based on energy Full size image 7.3.7 Analysis based on the Congestion
    Level (CL) The simulated results of CL for the proposed MFKHA and existing PSOGSA
    and ACSRO are shown in Fig. 20. To show enhancement in performance, the CL must
    be minimized. The CL calculated by FCD is in percentage; however, it is scaled
    between ranges [0 to 5]. It is apparent from the figure at the time 200th instance
    that the CL of MFKHA is 0.95, whereas the CL of existing ECA-HA, PSOGSA, and ACSRO
    is at 1.1, 2.0, and 2.3, respectively. According to the results, the MFKHA has
    enhanced the network performance and beat the existing algorithms. Fig. 20 Analysis
    based on congestion level Full size image 7.3.8 Analysis based on the Fairness
    and Friendliness Index (FFI) The simulated results of FFI for the proposed MFKHA
    and its counterparts ACSRO, PSOGSA, and ECA-HA are shown in Fig. 21. The value
    of FFI ranges from 0 to 1. To show the network performance, the FFI value closer
    to 1 indicates maximal fairness. It is evident from the figure at the time 200th
    instance that the FFI of MFKHA is 0.351, whereas the FFI of counterpart algorithms
    ECA-HA, PSOGSA, and ACSRO are 0.193, 0.185, and 0.187, respectively. Fig. 21 Analysis
    based on fairness and friendliness index Full size image 7.3.9 Performance summary
    The performance summary of all results is shown in Table 6. The enhancement percentage
    for both algorithms MFKHA and ECA-HA in each metric is computed at the end simulation.
    According to summarized data, the performance of MFKHA has been improved due to
    robust adjustments in sending rate of SNs and accurate estimation of congestion
    level. Table 6 Summary of performance analysis Full size table 7.4 Discussion
    The proposed MFKHA provides a feedback-based congestion alleviation solution.
    This algorithm is applied to each intermediate node. The KH is used to compute
    the optimal message-dropping probability, which calculates the sending rate for
    the source node. A multi-objective function is designed for KH by considering
    several parameters: congestion level, inflow rate, outflow rate, bandwidth, and
    queue length. Due to the fact, the WSN has many-to-one and carry-to-send nature.
    Therefore, the buffer occupancy at each intermediate node strongly depends on
    the incoming and outgoing rates. All under-considering parameters play an essential
    role in minimizing congestion. However, the congestion level is significant. The
    significant parameter congestion level is computed by a fuzzy logic system which
    must be adjusted concerning buffer occupancy. The accurate estimation of congestion
    level provides better performance. This fuzzy system is applied using two buffer-level
    parameters. First, it considers the occupied share of individual source nodes
    in the intermediate node queue. Second, it takes occupancy of the overall intermediate
    node queue. This congestion level contributes to this research in detecting the
    congestion and in the fitness function of KH. Accordingly, in our proposed system,
    the message-dropping probability depends on the microscopic measurements carried
    out by each intermediate node. 8 Time complexity The time complexity of MFKHA
    is the same as PSOGSA and ACSRO because the fuzzy system has a smoother and faster
    response than the conventional systems with less complexity and no iterations.
    Congestion level is computed by applying the behavior of queue length using fuzzy
    membership functions. The best member function is selected in every iteration,
    with the minimum congestion level (λ computed between a member function chosen
    and the initial member function. In MFKHA, the time complexity is calculated for
    each krill in each round using three actions, i.e., induced speed, foraging speed,
    and random diffusion speed. The time complexity for induced and foraging speed
    is O(n), whereas the random diffusion speed has O(n2). In the best-case scenario,
    the time complexity of MFKHA is linear because each round of operation is incremented,
    i.e., Ω(n). In the worst-case scenario, the time complexity of MFKHA is O(n2).
    Thus, MFKHA has improved its performance in terms of optimized sending rate by
    maintaining the same level of complexity as PSOGSA and ACSRO and having less computational
    cost than ECA-HA. 9 Conclusion and future work This paper proposed the Multi-objective
    Fuzzy Krill Herd Algorithm (MFKHA) control congestion for wireless sensor networks.
    The proposed algorithm uses fuzzy logic for congestion detection, which optimally
    tunes the queue of the intermediate node. Further, this algorithm calculates the
    optimal inflow rate. This rate is implicitly communicated to the source nodes
    to adjust the sending rate, this rate adjustment eliminates congestion and has
    improved the results. The substantial performance results of the proposed algorithm
    outperform terms of several parametric than state-of-art algorithms. Thus, we
    compared the MFKHA with the existing proposed protocols, ECA-HA, ACSRO, and POSGSA,
    regarding sending rate, throughput, packet loss, delay, queue size, energy consumption,
    and congestion level. We showed that the MFKHA algorithm improved sending rate
    and throughput through simulation experiments while decreasing packet loss, delay,
    queue size, energy consumption, and congestion. Further experimental investigations
    are needed to optimize the sending rate of source nodes in future work. We will
    propose innovative hybrid multi-objective algorithms to improve the convergence
    rate. Furthermore, we will also explore more meta-heuristic approaches to reduce
    network congestion for WSNs. Data Availability Data sharing not applicable to
    this article as no datasets were generated or analyzed during the current study.
    References Ahmed MM, Houssein EH, Hassanien AE, Taha A, Hassanien E (2019) Maximizing
    lifetime of large-scale wireless sensor networks using multi-objective whale optimization
    algorithm. Telecommun Syst 72(2):243–259. https://doi.org/10.1007/s11235-019-00559-7
    Article   Google Scholar   Aimtongkham P, Nguyen TG, So-In C (2018) Congestion
    control and prediction schemes using fuzzy logic system with adaptive membership
    function in wireless sensor networks. Wirel Commun Mob Comput 2018:1–19. https://doi.org/10.1155/2018/6421717
    Article   Google Scholar   Aimtongkham P, Heng S, Horkaew P, Nguyen TG, So-In
    C (2020) Fuzzy logic rate adjustment controls using a circuit breaker for persistent
    congestion in wireless sensor networks. Wireless Netw 26: 3603–3627. https://doi.org/10.1007/s11276-020-02289-0
    Article   Google Scholar   Alaei M, Sabbagh P, Yazdanpanah F (2019) A qos-aware
    congestion control mechanism for wireless multimedia sensor networks. Wireless
    Netw 25 (7):4173–4192. https://doi.org/10.1007/s11276-018-1738-8 Article   Google
    Scholar   Alipio MI, Tiglao NMC (2018) Rt-cacc: A reliable transport with cache-aware
    congestion control protocol in wireless sensor networks. IEEE Trans Wireless Commun
    17(7):4607–4619. https://doi.org/10.1109/TWC.2018.2827986 Article   Google Scholar   Almalawi
    A, Khan AI, Alsolami F, Abushark YB, Alfakeeh AS, Mekuriyaw WD (2022) Analysis
    of the exploration of security and privacy for healthcare management using artificial
    intelligence: Saudi hospitals. Comput Intell Neurosci 2022:1–10. https://doi.org/10.1155/2022/4048197
    Article   Google Scholar   Amer H, Al-Kashoash H, Khami MJ, Mayfield M, Mihaylova
    L (2020) Non-cooperative game based congestion control for data rate optimization
    in vehicular ad hoc networks. Ad Hoc Netw 107:1–13. https://doi.org/10.1016/j.adhoc.2020.102181
    Article   Google Scholar   Beitelspacher S, Mubashir M, Besher K M, Ali M Z (2020)
    Prioritizing health care data traffic in a congested iot cloud network. In: IEEE
    Wireless Communications and Networking Conference Workshops, WCNCW, IEEE. https://doi.org/10.1109/WCNCW48565.2020.9124867
    Bhatti KA, Asghar S (2022) Progressive fuzzy pso-pid congestion control algorithm
    for wsns. Arabian Journal for Science and Engineering, https://doi.org/10.1007/s13369-022-06701-z
    Bohloulzadeh A, Rajaei M (2020) A survey on congestion control protocols in wireless
    sensor networks. Int J Wireless Inf Networks 27:365–384. https://doi.org/10.1007/s10776-020-00479-3
    Article   Google Scholar   Cameron J, Kaye ME, Scheme E (2020) Dynamic prioritization
    of surveillance video data in real-time automated detection systems. Expert Syst
    Appl 161:1–21. https://doi.org/10.1016/j.eswa.2020.113672 Article   Google Scholar   Chaturvedi
    S, Pragya P, Verma HK (2015) Comparative analysis of particle swarm optimization,
    genetic algorithm and krill herd algorithm. In: 2015 International Conference
    on Computer, Communication and Control (IC4), pp 1–7, https://doi.org/10.1109/IC4.2015.7375552
    Daanoune I, Baghdad A, Balllouk A (2019) A comparative study between aco-based
    protocols and pso-based protocols in wsn. In: The 7th Mediterranean Congress of
    Telecommunications (CMT), pp 1–4, https://doi.org/10.1109/CMT.2019.8931320 Dev
    K, Maddikunta PKR, Gadekallu TR, Bhattacharya S, Hegde P, Singh S (2022) Energy
    optimization for green communication in iot using harris hawks optimization. IEEE
    Transactions on Green Communications and Networking 6(2):685–694. https://doi.org/10.1109/TGCN.2022.3143991
    Article   Google Scholar   Fei Z, Li B, Yang S, Xing C, Chen H, Hanzo L (2016)
    A survey of multi-objective optimization in wireless sensor networks: Metrics,
    algorithms, and open problems. IEEE Communications Surveys and Tutorials 19(1):550–586.
    https://doi.org/10.1109/COMST.2016.2610578 Article   Google Scholar   Grover A,
    Kumar RM, Angurala M, Singh M, Sheetal A, Maheswar R (2022) Rate aware congestion
    control mechanism for wireless sensor networks. Alex Eng J 61(6):4765–4777. https://doi.org/10.1016/j.aej.2021.10.032
    Article   Google Scholar   Hamidouche R, Aliouat Z, Ari AAA, Gueroui M (2019)
    An efficient clustering strategy avoiding buffer overflow in iot sensors: a bio-inspired
    based approach. IEEE Access 7:156733–156751. https://doi.org/10.1109/ACCESS.2019.2943546
    Article   Google Scholar   Khan AI, Alghamdi ASAM, Alsolami FJ, Abushark YB, Almalawi
    A, Ali AM, Agrawal A, Kumar R, Khan RA (2022a) Integrating blockchain technology
    into healthcare through an intelligent computing technique. Computers, Materials
    and Continua 70(2):2835–2860. https://doi.org/10.32604/cmc.2022.020342 Khan AI,
    Alsolami F, Alqurashi F, Abushark YB, Sarker IH (2022b) Novel energy management
    scheme in iot enabled smart irrigation system using optimized intelligence methods.
    Eng Appl Artif Intell 114:104996 Lin L, Shi Y, Chen J, Ali S (2020) A novel fuzzy
    pid congestion control model based on cuckoo search in wsns. Sensors 20(7):1–16.
    https://doi.org/10.3390/s20071862 Article   Google Scholar   Ma C (2018) A congestion
    control protocol for wireless sensor networks. In: International Conference on
    Computational Social Networks, Springer, pp 356–367, https://doi.org/10.1007/978-3-030-04648-4_30
    Maddikunta PKR, Gadekallu TR, Kaluri R, Srivastava G, Parizi RM, Khan MS (2020)
    Green communication in iot networks using a hybrid optimization algorithm. Comput
    Commun 159:97–107 . https://doi.org/10.1016/j.comcom.2020.05.020. https://www.sciencedirect.com/science/article/pii/S0140366420301286
    Article   Google Scholar   Mansouri N, Zade BMH, Javidi MM (2020) A multi-objective
    optimized replication using fuzzy based self-defense algorithm for cloud computing.
    J Netw Comput Appl 171:1–33. https://doi.org/10.1016/j.jnca.2020.102811 Article   Google
    Scholar   Narawade V, Kolekar UD (2018) Acsro: Adaptive cuckoo search based rate
    adjustment for optimized congestion avoidance and control in wireless sensor networks.
    Alex Eng J 57(1):131–145. https://doi.org/10.1016/j.aej.2016.10.005 Article   Google
    Scholar   Nikokheslat HD, Ghaffari A (2017) Protocol for controlling congestion
    in wireless sensor networks. Wireless Pers Commun 95(3):3233–3251. https://doi.org/DOI10.1007/s11277-017-3992-y
    Parsa A, Moghim N (2021) Qos-aware routing and traffic management in multi-flow
    opportunistic routing. Computers & Electrical Engineering 94:1–14. https://doi.org/10.1016/j.compeleceng.2021.107330
    Article   Google Scholar   Qu S, Zhao L, Xiong Z (2020) Cross-layer congestion
    control of wireless sensor networks based on fuzzy sliding mode control. Neural
    Comput Appl 32:13505–13520. https://doi.org/10.1007/s00521-020-04758-1 Article   Google
    Scholar   Qureshi IA, Asghar S (2021) A genetic fuzzy contention window optimization
    approach for IEEE 802.11 WLANS. Wireless Netw 27(4):2323–2336. https://doi.org/10.1007/s11276-021-02572-8
    Article   Google Scholar   Rezaee AA, Pasandideh F (2018) A fuzzy congestion control
    protocol based on active queue management in wireless sensor networks with medical
    applications. Wireless Pers Commun 98(1):815–842. https://doi.org/10.1007/s11277-017-4896-6
    Article   Google Scholar   Sarker IH, Khan AI, Abushark YB, Alsolami F (2022)
    Internet of things (iot) security intelligence: A comprehensive overview, machine
    learning solutions and research directions. Mobile Networks and Applications,
    https://doi.org/10.1007/s11036-022-01937-3 Shah SA, Nazir B, Khan IA (2017) Congestion
    control algorithms in wireless sensor networks: Trends and opportunities. J King
    Saud Univ Comput Inform Sci 29(3):236–245. https://doi.org/10.1016/j.jksuci.2015.12.005
    Article   Google Scholar   Shelke MP, Malhotra A, Mahalle P (2017) A packet priority
    intimation-based data transmission for congestion free traffic management in wireless
    sensor networks. Comput Electr Eng 64:248–261. https://doi.org/10.1016/j.compeleceng.2017.03.007
    Article   Google Scholar   Singh K, Singh K, Son LH, Aziz A (2018) Congestion
    control in wireless sensor networks by hybrid multi-objective optimization algorithm.
    Comput Netw 138:90–107. https://doi.org/10.1016/j.comnet.2018.03.023 Article   Google
    Scholar   Srivastava V, Tripathi S, Singh K, Son LH (2020) Energy efficient optimized
    rate based congestion control routing in wireless sensor network. J Ambient Intell
    Humaniz Comput 11:1325–1338. https://doi.org/10.1007/s12652-019-01449-1 Article   Google
    Scholar   Vijayalakshmi K, Anandan P (2019) A multi objective tabu particle swarm
    optimization for effective cluster head selection in wsn. Cluster Computing 22(5):12275–12282.
    https://doi.org/10.1007/s10586-017-1608-7 Article   Google Scholar   Wang GG,
    Gandomi AH, Alavi AH, Gong D (2017) A comprehensive review of krill herd algorithm:
    variants, hybrids and applications. Artif Intell Rev 51(1):119–148. https://doi.org/10.1007/s10462-017-9559-1
    Article   Google Scholar   Yadav SL, Ujjwal RL, Kumar S, Kaiwartya O, Kumar M,
    Kashyap PK (2021) Traffic and energy aware optimization for congestion control
    in next generation wireless sensor networks. J Sensors 2021:5575802. https://doi.org/10.1155/2021/5575802
    Article   Google Scholar   Yang X, Chen X, Xia R, Qian Z (2018) Wireless sensor
    network congestion control based on standard particle swarm optimization and single
    neuron pid. Sensors 18(4):1265. https://doi.org/doi:10.3390/s18041265 Yannibelli
    V, Pacini E, Monge D, Mateos C, Rodriguez G (2020) A comparative analysis of nsga-ii
    and nsga-iii for autoscaling parameter sweep experiments in the cloud. Scientific
    Programming 2020, https://doi.org/10.1155/2020/4653204 Download references Author
    information Authors and Affiliations Department of Computer Science, Shaheed Zulfikar
    Ali Bhutto Institute of Science and Technology (SZABIST), Islamabad, Pakistan
    Kabeer Ahmed Bhatti Department of Computer Science, Comsats University, Islamabad,
    Pakistan Sohail Asghar & Sheneela Naz Corresponding author Correspondence to Kabeer
    Ahmed Bhatti. Ethics declarations This article does not contain any studies with
    human participants or animals performed by any of the authors. Conflict of interests
    Authors declare that they have no conflict of interest. Additional information
    Publisher’s note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Springer Nature or its licensor (e.g. a society or other partner) holds exclusive
    rights to this article under a publishing agreement with the author(s) or other
    rightsholder(s); author self-archiving of the accepted manuscript version of this
    article is solely governed by the terms of such publishing agreement and applicable
    law. Reprints and permissions About this article Cite this article Bhatti, K.A.,
    Asghar, S. & Naz, S. Multi-objective fuzzy krill herd congestion control algorithm
    for WSN. Multimed Tools Appl 83, 2093–2121 (2024). https://doi.org/10.1007/s11042-023-15200-8
    Download citation Received 21 January 2022 Revised 13 March 2023 Accepted 30 March
    2023 Published 11 May 2023 Issue Date January 2024 DOI https://doi.org/10.1007/s11042-023-15200-8
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Wireless sensor network Meta-heuristics techniques Krill herd
    optimization Congestion control Use our pre-submission checklist Avoid common
    mistakes on your manuscript. Associated Content Part of a collection: Computer
    Science SDG 7: Affordable and Clean Energy Sections Figures References Abstract
    Introduction Literature review Research contributions Preliminary Problem formulation
    and assumptions Proposed model for MFKHA Evaluation Time complexity Conclusion
    and future work Data Availability References Author information Ethics declarations
    Additional information Rights and permissions About this article Advertisement
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.222
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: null
  journal: Multimedia Tools and Applications
  limitations: null
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Multi-objective fuzzy krill herd congestion control algorithm for WSN
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: '>'
- analysis: 'This paper introduces an Internet of Things (IoT) system for monitoring
    environmental conditions in peach orchards using multi-sensors and LoRa technology
    for data transmission. The system includes sensors for temperature, humidity,
    illumination, and soil moisture, and data is transmitted using LoRa, a long-range,
    low-power wireless communication technology. The system aims to provide accurate
    and reliable data for orchard management and irrigation decisions.


    In terms of the point "Types of data most applicable to irrigation management
    and their typical sources," this paper is relevant because it discusses the use
    of sensors for collecting data on temperature, humidity, illumination, and soil
    moisture. These parameters are crucial for irrigation management, as they influence
    plant growth and water consumption.


    The paper provides several specific examples of how the data collected by the
    system can be used for irrigation management. For instance, soil moisture data
    can be used to determine when irrigation is necessary, and temperature and humidity
    data can be used to adjust irrigation schedules based on the specific needs of
    the crop.


    **Here are the three most relevant verbatim quotes from the paper that demonstrate
    its relevance to the outline point:**


    **Verbatim quote 1:** "Setting a low-power IoT sensor network in the orchard can
    remotely measure the parameters in the orchard."


    **Verbatim quote 2:** "LoRa WAN is used to transmit data to the central node."


    **Verbatim quote 3:** "Experiments in different environments in the peach orchard
    show that the monitoring system has enough reliability and accuracy, and is suitable
    for environmental monitoring in orchards in remote areas or areas with complex
    terrain."


    **Relevance score:** 0.8


    Overall, this paper provides valuable information on the types of data most applicable
    to irrigation management and their typical sources. It also demonstrates the application
    of this data in real-world scenarios, making it highly relevant to the outline
    point.


    **Limitations:** The paper focuses on the use of sensors and LoRa technology for
    data collection and transmission. It does not discuss other aspects of irrigation
    management, such as scheduling and control systems. Additionally, the paper does
    not provide a comprehensive analysis of the accuracy and reliability of the system
    in different environmental conditions.'
  authors:
  - Zhang P.
  - Chen X.
  - Li S.
  - Zhang C.
  - Hu Y.
  citation_count: '0'
  description: With the rapid growth of science and technology, the Internet of Things
    (IoT) technology has matured and attracted the attention of many researchers.
    The development of agricultural modernization leads to the gradual emergence of
    intelligent management gradually taking root in agricultural production. Among
    many technologies in the IoT technologies, low-power Wide Area Network (WAN) technology
    has the characteristics of reliable and stable transmission with long distance
    and low power consumption. This is very useful for data transmission in special
    environments, especially for orchards in mountainous areas. This paper proposed
    a new agricultural Internet of Things in orchard management based on multi-sensors,
    such as DHT11 for temperature/humidity and GY-30 for illumination, the Long Range
    (LoRa) technology for transmitting the collected data or control command between
    the terminal and data cloud center, etc. Setting a low-power IoT sensor network
    in the orchard can remotely measure the parameters in the orchard. LoRa WAN is
    used to transmit data to the central node. In order to reduce power consumption
    and cost, a single monitoring node selects two power supplies, a solar power supply
    and a power supply, and the power supply can be turned on remotely by users in
    special circumstances. Experiments in different environments in the peach orchard
    show that the monitoring system has enough reliability and accuracy, and is suitable
    for environmental monitoring in orchards in remote areas or areas with complex
    terrain.
  doi: 10.23919/ICN.2023.0028
  full_citation: Zhang, P., Chen, X., Li, S., Zhang, C., & Hu, Y. (2023). Development
    of the Internet of Smart Orchard Things Based on Multi-Sensors and LoRa Technology.
    Intelligent and Converged Networks, 4(4), 342-354.
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >Intelligent and Converged Net...
    >Volume: 4 Issue: 4 Development of the Internet of Smart Orchard Things Based
    on Multi-Sensors and LoRa Technology Publisher: TUP Cite This PDF Pingchuan Zhang;
    Xu Chen; Shan Li; Caihong Zhang; Yanjun Hu All Authors 102 Full Text Views Open
    Access Abstract Document Sections 1 Introduction 2 Material and Method 3 Result
    and Discussion 4 Conclusion Authors Figures References Keywords Metrics Abstract:
    With the rapid growth of science and technology, the Internet of Things (IoT)
    technology has matured and attracted the attention of many researchers. The development
    of agricultural modernization leads to the gradual emergence of intelligent management
    gradually taking root in agricultural production. Among many technologies in the
    IoT technologies, low-power Wide Area Network (WAN) technology has the characteristics
    of reliable and stable transmission with long distance and low power consumption.
    This is very useful for data transmission in special environments, especially
    for orchards in mountainous areas. This paper proposed a new agricultural Internet
    of Things in orchard management based on multi-sensors, such as DHT11 for temperature/humidity
    and GY-30 for illumination, the Long Range (LoRa) technology for transmitting
    the collected data or control command between the terminal and data cloud center,
    etc. Setting a low-power IoT sensor network in the orchard can remotely measure
    the parameters in the orchard. LoRa WAN is used to transmit data to the central
    node. In order to reduce power consumption and cost, a single monitoring node
    selects two power supplies, a solar power supply and a power supply, and the power
    supply can be turned on remotely by users in special circumstances. Experiments
    in different environments in the peach orchard show that the monitoring system
    has enough reliability and accuracy, and is suitable for environmental monitoring
    in orchards in remote areas or areas with complex terrain. Published in: Intelligent
    and Converged Networks ( Volume: 4, Issue: 4, December 2023) Page(s): 342 - 354
    Date of Publication: December 2023 Electronic ISSN: 2708-6240 DOI: 10.23919/ICN.2023.0028
    Publisher: TUP Funding Agency: SECTION 1 Introduction The spectrum of applications
    for Internet of Things (IoT) technology in production and life has grown as the
    technology has matured. Using the IoT technology to intelligently monitor and
    scientifically manage the agricultural environment has become an unavoidable trend
    and a critical component of current agricultural development[1]. Agricultural
    IoT technology is a new type of agriculture that combines the IoT with agricultural
    production, and is a new trend in global agricultural development[2], [3]. The
    purpose of an intelligent orchard is to keep track of environmental temperature
    and humidity, light intensity, soil humidity, and other factors that affect fruit
    tree growth, and to realize the monitoring, collection, transmission, and regulation
    of data. The fruit business contributes significantly to economic growth. Today,
    people pay special attention to quality of life, and the demand for fruit is a
    remarkable manifestation. Each season, the market demand for fruit increases continuously,
    which requires fruit farmers to increase the production of orchards and expand
    the scale of orchards. At the same time, the problems are gradually exposed. According
    to the traditional management mode, large-scale orchards need a lot of labor and
    financial resources[4]. Only when all factors (meteorological factors, geographical
    factors, and human factors) are kept normal can we ensure the output and income
    of the orchard. However, if there is no early prevention and control of sudden
    weather information such as continuous rainstorms and droughts and other meteorological
    factors, there is a great chance that the orchard will reduce production, increase
    the loss of fruit farmers, and fail to meet the demand for fruits[5]. China''s
    agricultural IoT started later and developed slowly, and it has been in a backward
    state due to unbalanced industrial development and other factors. However, Chinese
    scientists have not stopped researching related aspects, and some of them are
    of outstanding significance, which can be recorded and have good enlightenment
    and leading role. In the late 1990s, Mao et al.[6] developed the first generation
    of automatic irrigation system on Intel 8031, the originator of 51 single chip
    microcomputer. This system not only realizes the function of regular irrigation,
    but also has the function of measuring soil moisture. High-quality fruits have
    many benefits for people. Only by grasping the growing environment of fruits at
    any time can we cultivate high-quality fruits. For orchard managers, it is most
    effective to provide solutions with low cost, low maintenance, and low power consumption[7].
    Based on Long Range (LoRa) technology, fog computing and other means, this paper
    uses advanced energy efficiency and IoT wireless sensor network to monitor the
    orchard environment, which puts forward a technical framework to meet these requirements
    and can improve the overall performance of the ecosystem[8], [9]. LoRa is a low
    power long-distance communication technology that belongs to the Low Power Wide
    Area Network (LPWAN)[10]. LoRa is widely used in medical treatment, environment,
    military affairs, precision agriculture, etc., and its application fields are
    constantly expanded by research and technological progress[11]. Meanwhile, orchard
    is a multi-parameter environment, and the main environmental parameters include
    air temperature and humidity, light illumination, soil temperature and humidity,
    and meteorological parameters. Therefore, the orchard IoT needs multi-class sensors
    to collect the above parameters as the data basis for realizing smart orchard.
    Fog computing cloud services are being extended to the edge. They aim to improve
    low latency, mobility, network bandwidth, security, and privacy by bringing computation,
    communication, and storage closer to edge devices and end users[12]. Another layer,
    called the fog layer, is introduced between the fog computing cloud and terminal
    equipment. Terminal devices, also known as IoT nodes, are located at the endpoint
    layer. According to the definition, IoT nodes must be connected to the network,
    and they usually contain various sensors or actuators that interact with the physical
    world[13]. Specifically, in the fog computing of orchard environmental monitoring,
    IoT nodes can be connected to the gateway device of orchard management, which
    provides cloud services. Practice has proved that applying LoRa technology and
    fog computing to orchard monitoring system can effectively guide fruit farmers
    to manage orchards scientifically and improve yield and quality. SECTION 2 Material
    and Method The monitoring system of IoT introduced in this paper, although specially
    tested in peach garden, can be applied to any kind of fruit tree or nut tree park
    for monitoring application. Therefore, this section briefly introduces the monitoring
    factors needed by peach garden and the growing environment conditions of peach
    trees, which prepares for choosing which components to arrange later, and deeply
    studies all the sensors and methods mostly used for each hardware component. The
    overall structure of the orchard IoT-based surveillance system is shown in Fig.
    1. 2.1 Peach Garden Environment In this section, some details of peach garden
    are introduced. There are many factors that affect orchard growth including light
    intensity, temperature, humidity, soil temperature and humidity, soil pH, etc.,
    which will affect the growth of fruit trees and fruit development. Among them,
    temperature is an extremely important energy factor for peach tree growth and
    development. It directly affects the photosynthesis, transpiration, and respiration
    of fruit trees. Peach tree is a warm-loving tree species, which prefers dry and
    cool climate during its development. Peach trees have a wide temperature adaptation
    range and strong cold tolerance, but winter temperatures below −25–−23 °C are
    prone to freezing damage, Therefore, peach grows best in cool and mild climate,
    with 10–17 °C for southern varieties and 4–8 °C for northern varieties[14]. The
    cold tolerance of peach buds belongs to the weak category in temperate fruit trees.
    In winter, the tolerance of buds gradually increases with decreasing temperature
    during natural dormancy. The peach blossom buds can withstand the low temperature
    of −18–−16 °C during the dormancy period, and the freezing temperature of the
    buds after germination is from −1°C to 2 °C during the discoloration period. After
    the natural dormancy of flower buds ends, the short-term high temperature suddenly
    leads to a significant decrease in tolerance to cold. When the temperature drops
    again, even if it does not reach the critical temperature for freezing, it is
    extremely vulnerable to freezing damage. The relationship between root growth
    and temperature is also very close. The soil temperature at the beginning of the
    growth of the roots of peach trees is 4–12 °C, and the optimal soil temperature
    is 18°C[15]. The cold tolerance of peach root system is weak. It can resist −11–−10
    °C in dormant period, but it can withstand low temperature above −9°C in active
    period. After the root system of peach suffers from freezing damage, it will soon
    wither in spring. It will die after a few years of mild freezing, or in the year
    of severe freezing. Furthermore, peaches trees are more suitable for weakly acidic
    soil, and the pH of suitable soil for peach trees is 6.0–6.5[16]. Peaches trees
    grow well in slightly acidic to slightly alkaline soil. If planted in alkaline
    soil, yellow leaf disease is more likely to occur. When the salt content of the
    soil reaches more than 0.28%, it will hinder the growth of peach trees, and even
    lead to dead plants[17], [18]. Sensor technology, wireless communication technology,
    and other forms of technology are all being used in new ways, and other related
    technologies in the field of IoT to orchard management will greatly address the
    above problems. The first thing to study is the effort of labor and energy. At
    the same time, it also solves the problems of traditional environmental monitoring
    methods, such as difficult collection, low monitoring data efficiency, difficult
    data processing, and high maintenance and management costs. Fig. 1 Overall structure
    of the orchard monitoring system. Show All 2.2 Multi-Sensor''s Modules Taking
    into account the automation of the orchard monitoring system and the fact that
    the environment in which the orchard is located is different from the greenhouse
    environment, where many factors are beyond human control and are affected by weather,
    such as rainstorm, light, wind erosion, etc., the equipment selection in the orchard
    should consider this influence and should pay attention to some corrosion-resistant
    devices or shells to protect the components[19]. When building a transmission
    network, because there are many branches in the orchard, it is not easy to conduct
    wiring by conventional wired transmission. If leaves and fruits fall off without
    timely treatment, the soil will become acidic, which has a great influence on
    wired transmission, not only shortening service life, but also increasing the
    frequency of device replacement frequency, thus increasing labor input and cost.
    The orchard IoT system can transmit the collected environmental factors and meteorological
    factors such as temperature, air humidity, light intensity, soil humidity, and
    soil pH to the host computer through wireless network communication and display
    them to users[20]. Wireless communication can be carried out between the collecting
    node and the uploading node. At this time, the wireless transmission mode between
    nodes is required to have the characteristics of long communication distance,
    low power consumption, high security, and stable signal. The information collected
    can cross the distance barrier and be collected from the upper computer in a lossless
    and real-time way. At present, there are many types of Supply Chain Management
    (SCM) on the market, each with its own advantages and disadvantages in function.
    The STM32 series SCM is not only small and low in cost, but also has many I/O
    ports, comprehensive internal modules, and flexible and simple operation. In this
    design, STM32F103C8T6 is the primary control chip of the orchard IoT system. 2.2.1
    Temperature and Humidity Sensor Through the analysis and research of the existing
    sensors, this sensor is designed to monitor the internal and external parameters
    of peach trees in peach garden, i.e., the growth environment parameters of peach
    trees, and at the same time, it analyzes the most suitable method for supplying
    power to the intelligent sensing devices efficiently. Two temperature and humidity
    sensors are selected, because the environment and the temperature inside the trees,
    as well as the air and soil humidity have different effects on fruit trees. The
    DHT11 sensor composed of the Negative Temperature Coefficient (NTC) thermistor
    and humidity sensor is used to monitor atmospheric temperature and humidity. A
    sensor with an NTC thermistor and a hygrometer sensor are selected for internal
    temperature measurement and soil moisture monitoring, respectively. The above
    sensors are easy to arrange in orchards, and their power consumption is very low,
    thus achieving low power consumption. The working standard of the thermistor consists
    of a temperature sensitive resistor, which is inversely proportional to temperature.
    The hygrometer sensor detects the change of soil moisture according to the principle
    of electrical conductivity[21]. Figure 2 shows the physical drawing of DHT11.
    It is a sensor that combines temperature and humidity to measure. The circuit
    diagram is shown in Fig. 3. The description of DHT11 pin is shown in Table 1.
    The two types of optical fiber temperature sensors are type 1 in which the optical
    fiber only serves to transmit light, and other sensitive elements must be installed
    on the end face of the optical fiber to form the new sensor''s transmission sensor;
    and type 2 in which the sensitive function of the optical fiber itself is used
    to make the optical fiber measure the temperature, which belongs to the functional
    type, and the optical fiber not only serves to transmit light but also to measure
    the temperature. Figure 4 depicts the fundamental system structure of an optical
    fiber temperature sensor. Fig. 2 Temperature and humidity sensor DHT11. Show All
    Fig. 3 Circuit diagram of DHT11. Show All Fig. 4 Basic system structure. Show
    All Table 1 Description of DHT11 pin. Optical fiber sensors are classified as
    functional optical fiber sensors or non-functional optical fiber sensors based
    on their sensing principles. The transmission equation in an optical fiber is
    Eq. (1). E= E 0 cos(wt+φ) (1) View Source where E 0 is the initial amplitude,
    w is the optical frequency, φ is the initial phase of the incident light, and
    E 0 , ω , and φ are the characteristic parameters of optical transmission in the
    optical fiber. The power supply voltage for DHT11 is 3.5-5 V. For decoupling and
    filtering, a 100 nF capacitor can be inserted between the power supply pins (VCC,
    GND). To improve the signal''s anti-interference capacity, a pull-up resistor
    of more than 5 kΩ is connected in parallel to the DATA pin. Wait 1 second after
    the sensor is turned on to get out of the unstable state, during which no instructions
    should be sent. Figure 5 shows how the circuit is commonly used. 2.2.2 Illumination
    Sensor In this design, GY-30 is selected as the illumination sensor module, and
    the internal integration of the module utilizes BH1750FVI illumination sensor.
    The internal photosensitive diode of BH1750 is responsible for light sensitivity.
    The operational amplifier is used to obtain analog value for weak current change,
    and the digital signal is obtained through the AD converter. The internal crystal
    oscillator is also selected to provide the reference frequency. The description
    diagram, physical diagram, and circuit diagram of the GY-30 module are shown in
    Figs. 6–8. Fig. 5 DHT11 in the circuit. Show All The photodiode, operational amplifier,
    ADC acquisition, crystal oscillator, and other components of BH1750 are depicted
    in Fig. 9. The photovoltaic effect converts the input optical signal into an electrical
    signal, which is amplified by the operational amplifier circuit, collected by
    the ADC, and then converted into a 16-bit binary number by the logic circuit and
    stored in the internal register. Note that the stronger the light entering the
    optical window, the larger the photocurrent, the larger the voltage, so the magnitude
    of illumination can be judged by the voltage instead of the photocurrent, but
    from BH1750, the clock and data lines are led out. The Microcontroller Unit (MCU)
    may use the Inter-Integrated Circuit (I2C) protocol to connect with the BH1750
    module, select the BH1750''s working mode, and collect the BH1750 register''s
    illumination data. The definitions of each pin can be found in Table 2. Fig. 6
    GY-30 module description diagram. Show All Fig. 7 GY-30 module. Show All Fig.
    8 Circuit diagram of BH1750. Show All Fig. 9 BH1750 internal structure. Show All
    In the design, it is necessary to ensure the timing relationship between DVI and
    VCC. Generally, there are two schemes that can be realized: MCU controls DVI signal,
    as shown in Fig. 10. Implementation of an embedded RC circuit between VCC and
    DVI, as shown in Fig. 11. 2.2.3 Soil Moisture Sensor The soil moisture sensor
    is made up of two parts. One is the waterproof probe that has been treated with
    waterproof and the other part is the probe that has been treated with rust prevention
    probe. It can be widely laid in orchard soil, and it can measure the moisture
    and humidity of shallow soil and deep soil. The soil moisture sensor is shown
    in Fig. 12, and the circuit diagram is shown in Fig. 13. Fig. 10 MCU controlling
    DVI signal. Show All Fig. 11 RC circuit between VCC and DVI. Show All Fig. 12
    Soil moisture sensor Show All Fig. 13 Circuit diagram of the soil moisture sensor.
    Show All Table 2 Definition of each pin. Through the work and data monitoring
    of soil temperature and humidity sensors in the surface and deep layers of soil,
    we can obtain the latest soil temperature and humidity data in real time, which
    is convenient for us to monitor the soil environment in orchards, so that orchard
    managers can observe in time, improve the soil quality in orchards, and increase
    the output. At this time, there is a variety of soil moisture measuring methods
    available both at home and abroad, as well as a variety of soil moisture sensors.
    Soil moisture measuring methods includes Time Domain Reflection (TDR), gypsum
    method, infrared remote sensing method, Frequency Domain Reflection/Frequency
    Domain method (FDR/FD method), titration method, capacitance method, resistance
    method, microwave method, neutron method, Karl Fischer method, nuclear magnetic
    resonance method, and so on. 2.3 LoRa Technology His design adopts from LoRa point-to-point
    communication[22], [23]. For orchard production, a low-power, low-cost long-distance
    transmission scheme is the key consideration. It is of great significance to arrange
    all kinds of information collection sensors in the orchard to increase output
    and reduce resource consumption. These sensors will upload data regularly and
    send the data wirelessly to the remote user center to realize remote real-time
    data acquisition. There are numerous new network protocols and gadgets, according
    to the information. Many of them, such as Wi-Fi, Bluetooth, ZigBee, and 2G/3G/4G
    cellular networks, are commonly used in daily life, but there are some new emerging
    network alternatives, such as Narrow Band (NB)-IoT, LoRa, and Sigfox. The best
    communication choices are chosen based on the scope of the application, the data
    requirements, the safety, and the battery life. The primary communication protocols
    in the IoT technology are summarized in Table 3. Large-scale planting in orchards,
    due to the lush branches and leaves of fruit trees, has a certain influence on
    signal transmission, and it is extremely cumbersome and difficult to pull the
    power lines. Therefore, when selecting communication modules, the characteristics
    of low power consumption and long-distance transmission should be met at the same
    time[24], i.e., LPWAN needs to be built. The main purpose of LPWAN is the long-distance
    communication between power supply devices through low bit rate transmission.
    Choosing LPWAN can reduce labor investment, equipment investment, line construction
    investment, and power consumption, and meet the environmental protection requirements
    of low cost and low power consumption. Table 3 Main communication protocols in
    IoT technology. The LoRa technology is a superior option for monitoring the orchard
    environment. LoRa is a physical layer technology that uses commercial proprietary
    spread spectrum technology to modulate industries below gigahertz and provides
    two-way communication via special linear frequency modulation spread spectrum
    technology that expands narrowband input signals to a wider channel bandwidth[25].
    The resulting signal has noise-like qualities, making detection and blocking more
    challenging. With a maximum payload length of 256 bytes, the processing gain can
    improve the capacity to resist interference and noise while also providing an
    adaptable data rate function. LoRa''s communication frequencies are primarily
    within unlicensed Industrial, Scientific, and Medical (ISM) radio frequency band,
    while it can work at any frequency below 1 GHz[26]. This is the main factor behind
    low-cost worldwide deployment and interoperability. The modernization process
    of orchards makes modern orchards have the characteristics of large area, complex
    geographical factors, long fruit cultivation period, etc., which results in the
    requirements of orchard IoT, such as many detection factors, long monitoring period,
    deployment of monitoring points, and so on. LoRa technology is suitable for such
    application scenarios. LoRa technology considers the balance between long-distance
    transmission and transmission power consumption, and has the advantages of low
    cost, low power consumption, and long-distance transmission[27], [28]. The ATK-LORA-01
    wireless serial port module selected in this system is a LoRa wireless serial
    port module introduced by ALIENTEK. It has the characteristics of small size,
    low power consumption, high performance, and long communication distance. The
    physical drawing of ATK-LORA-01 is shown in Fig. 14. Fig. 14 ATK-LORA-01 wireless
    serial port module. Show All Using simplified interface for connecting to this
    module, all functions can be completed with only 4 I/O, and it is simple and convenient
    to use 1×6 rows of needles to connect with the outside. When the module is electrically
    connected to MCU/ARM equipment, attention should be paid: The wireless serial
    port module is TTL level (high level >2.4 V; low level <0.4 V). The pin level
    of the module is 3.3 V, and the level conversion adaptation is needed to communicate
    with the 5 V MCU. The MD0 and AUX pins are low when suspended. The Received Signal
    Strength Indicate (RSSI) algorithm can divided into two categories, propagation
    model modeling method and fingerprint database matching method. Here the RSSI
    propagation model is used. RSSI propagation model estimation method first calculates
    the signal propagation loss by using the received signal strength, then converts
    the transmission loss into distance by using theoretical and empirical models,
    and then calculates the location of nodes. The traditional RSSI estimation method
    usually carries out many measurement experiments on the positioning environment,
    obtains the relationship between the signal propagation distance and the path
    loss in this environment, and establishes the “distance-loss” model, which is
    generally as follows: P= P r0 +10nlg( d d 0 )+ξ (2) View Source where d 0 is the
    distance between the reference point and the signal source, P r0 is the RSSI of
    the received signal source when the distance is d 0 , d is the real distance,
    ξ∼N(0,  δ 2 ) is the masking factor, P is the RSSI of the signal source received
    by the point under test, and n is path loss coefficient. When the path loss system
    is known, the propagation distance of the signal can be calculated according to
    the received signal strength. The RSSI positioning algorithm is based on distance[29],
    and the accuracy of distance estimation directly affects the accuracy of the final
    positioning. After estimating the distance between the terminal equipment and
    the three anchor nodes, the location of the target can be estimated by the trilateral
    positioning model shown in Fig. 15. There is always an error in the distance estimation
    value obtained by RSSI, so that the three circles in Fig. 15 do not intersect
    at one point, but form an area. 2.4 Software Architecture The overall functional
    flow framework is shown in Fig. 16. This system consists of four parts, information
    collection, information transmission, PC interaction, and downlink command execution,
    and these four parts can be classified into terminal node, gateway terminal, and
    PC terminal. Information transmission is an essential carrier for all other functions.
    If the information transmission function is compared to the body, then the information
    collection function and the down command execution are two hands, one for getting
    data and the other for doing things. Simply put, it is one body with two wings,
    and the upper computer is the brain. In this design, the terminal module is divided
    into two parts. The first part is to collect the environmental information from
    the orchards at regular intervals through sensors. The sensor relates to the acquisition
    module through the I/O interface, and is mainly responsible for monitoring the
    environment of the park within a set time (500 ms) and collecting primary data.
    Fig. 15 Trilateral positioning model. Show All Fig. 16 Overall functional flow
    chart. Show All The working flow of the entire terminal node is shown in Fig.
    17. On the other hand, the serial port 2 (USART2) of the STM32 microprocessor
    is connected to the LoRa module to receive the downlink command. If the command
    from the upper computer is received, the judgment is made by the IF statement
    to open/close the water pump relay. 2.5 Decision on Irrigation The main purpose
    of irrigation decision is to calculate the irrigation time, i.e., the time of
    each irrigation activity[30]. In each period, intelligent irrigation calculates
    the irrigation time for each region according to the measured soil humidity and
    temperature. Fuzzy Logic Control (FLC) is an intelligent algorithm for dealing
    with uncertain information. FLC mainly consists of four parts, fuzzification interface,
    knowledge base, jamming engine, and defuzzification interface. The fuzzy interface
    converts the input quantity into a fuzzy set. The knowledge base is the main system
    of FSC, which stores fuzzy rules. In the interference engine, fuzzy rules are
    evaluated according to the input variables of the membership function. The defuzzification
    interface is to forward the fuzzy set to the output.s Fig. 17 Workflow of the
    whole terminal node. Show All The system model of Fuzzy logic Input-based Decision
    Algorithm for Irrigation Time (FI-DAIT) algorithm is shown in Fig. 18. The change
    rate of soil temperature and soil humidity is taken as the input of fuzzy logic
    controller, and the output is irrigation time. First, take the soil moisture decrease
    rate ΔM(k) as the input of the fuzzy logic system, and its definition is shown
    in Eq. (3). ΔM(k)=M(k)−M(k−1) (3) View Source where M(k) is the current soil humidity,
    M(k−1) is the soil humidity at the last moment, Δt=t(k)−t(k−1) represents the
    time interval between two consecutive sampling values. Another input is the soil
    temperature T(k). ΔM(k) and T(k) are two inputs to the system inputs, and the
    output P(k) represents the irrigation time. Fig. 18 FI-DAIT algorithm model based
    on FLC. Show All By inputting the acquired data parameters into the model, we
    can get the irrigation time required by the soil in this area and set the value
    of P(k) to judge, and the system will need to complete irrigation at the corresponding
    time. The arrangement of automatic irrigation pipes is shown in Fig. 19. The arrangement
    of water pipes in the whole orchard is linearly distributed, which not only saves
    the cost, but also allows peach trees to be irrigated scientifically. SECTION
    3 Result and Discussion Through monitoring and summarizing the data, the reliability
    of LoRa''s network transmission is tested, and the results are shown in Table
    4. After the orchard IoT system''s software and hardware have been configured,
    it is placed in the orchard IoT model for actual testing. As indicated in Table
    5, three time points of morning, noon, and night are chosen for this study, and
    three sets of temperature and humidity data are chosen for each time point. The
    temperature and humidity data collected by the sensors are essentially the same
    as those measured manually, according to the experimental data, and the system
    fits the predicted design requirements. Fig. 19 Layout of automatic irrigation
    pipeline. Show All Table 4 Test results of network communication reliability.
    Table 5 Experimental data of orchard. Make the measured data change into a line
    chart as shown in Fig. 20. Through image analysis, it is concluded that the temperature
    change of the orchard soil is relatively stable in one day, and regular irrigation
    is needed to maintain sufficient soil moisture, so that peach trees can grow normally.
    Fig. 20 Chart of temperature and humidity change. Show All In the process of system
    debugging and testing, the following considerations are considered. First, it
    should be checked whether the design principle of the hardware circuit is correct,
    whether the desired results can be achieved in advance, and whether the implementation
    method is too complicated. Second, the model of the device should be calculated
    and selected. If selection is not reasonable enough, it will weaken the efficacy
    of the system and fail to achieve the expected effect, or it will damage the device
    and cause the system to fail to operate. Third, after the hardware welding is
    finished, it is necessary to carefully check whether the circuit welding is accurate
    and whether there is any open circuit or short circuit. During the test, there
    is a problem that the soil moisture field of the upper computer does not have
    an indication. After the test of changing the location, it is confirmed that the
    orchard is exposed for a long time, lacking effective management, and the system
    integration and program design are working normally due to the drought of the
    soil. According to the actual test results, this system can realize the task of
    remote environment monitoring and water pump controlling in orchard IoT, which
    meets the original design requirements. SECTION 4 Conclusion In this document,
    we discuss the use of IoT technology in orchard monitoring, which includes data
    collection of environmental temperature, humidity, soil temperature, and humidity,
    and orchard irrigation decisions. The main communication protocol of the system
    is LoRa technology, which has characteristics of long range, low power consumption,
    and reliable transmission. It is used to continuously monitor the temperature
    readings of different spots in the needed area. Users can see parameters related
    to network operation in addition to temperature, monitor the growth environment
    parameters of peach garden by intelligent equipment and the surrounding environment
    by video monitoring equipment, and make scientific decisions in orchard irrigation.
    On the one hand, it can reduce manual management and cost; on the other hand,
    it can improve the yield and fruit quality through scientific irrigation and planting.
    ACKNOWLEDGMENT This work was supported by the Science and Technology Department
    of Henan Province (Nos. 212102310553 and 222102210116), and Ministry of Education
    Industry-University Cooperation Collaborative Education Projects (HENAN CHENYUNYANG
    Electronics Technology Co., Ltd. (No. 221001221014436) and WUHAN MaiSiWei (No.
    202101346001)). Authors Figures References Keywords Metrics More Like This Automatic
    Irrigation System with Water-Level Indicator and IOT Enabled Humidity Lodger 2022
    IEEE Delhi Section Conference (DELCON) Published: 2022 PEDOT:PSS-Coated Screen-Printed
    Graphene–Carbon Ink-Based Humidity and Temperature Sensor IEEE Journal on Flexible
    Electronics Published: 2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: (Zhang et al., 2023)
  journal: Intelligent and Converged Networks
  limitations: The paper focuses on the use of sensors and LoRa technology for data
    collection and transmission. It does not discuss other aspects of irrigation management,
    such as scheduling and control systems. Additionally, the paper does not provide
    a comprehensive analysis of the accuracy and reliability of the system in different
    environmental conditions.
  relevance_score: 0.8
  relevance_score1: 0
  relevance_score2: 0
  title: Development of the Internet of Smart Orchard Things Based on Multi-Sensors
    and LoRa Technology
  verbatim_quote1: Setting a low-power IoT sensor network in the orchard can remotely
    measure the parameters in the orchard.
  verbatim_quote2: LoRa WAN is used to transmit data to the central node.
  verbatim_quote3: '>'
- analysis: "This study applied hierarchical clustering and the Thiessen polygon method\
    \ to identify crucial rain gauge stations for accurate flood forecasting at Sardar\
    \ Sarovar Dam in India. It also employed the Hydrologic Engineering Center's Hydrologic\
    \ Modeling System (HEC-HMS) to simulate rainfall-runoff and evaluate the model's\
    \ performance using observed data. \n\nThe study revealed two distinct clusters\
    \ of rain gauge stations based on rainfall patterns and divided the study area\
    \ into 17 regions using Thiessen polygons. Land use analysis indicated that crop\
    \ lands dominated the area, while soil analysis identified three types of sedimentary\
    \ claystone soil. The HEC-HMS model effectively simulated rainfall-runoff processes,\
    \ with good correlation between observed and estimated runoff values for the years\
    \ 2012 and 2016. \n\nThe findings demonstrate the adequacy of the existing rain\
    \ gauge network for flood forecasting and highlight the effectiveness of combining\
    \ the developed model with the Thiessen polygon method for more accurate flow\
    \ predictions. The study underscores the significance of selecting appropriate\
    \ rain gauge stations for reliable flood forecasting in vulnerable basins and\
    \ provides valuable insights for future runoff prediction and flood forecasting\
    \ in the study area."
  authors:
  - Mehta D.
  - Dhabuwala J.
  - Yadav S.M.
  - Kumar V.
  - Azamathulla H.M.
  citation_count: '7'
  description: The purpose of the study was to use hierarchical clustering and Thiessen
    polygon algorithms to identify the significant rain gauge stations for flood forecasting
    at Sardar Sarovar Dam. Rainfall data from 2010 to 2018 was utilized to analyze
    the catchment region between Omkareshwar Dam and Sardar Sarovar Dam. The study
    identified two clusters of rain gauge stations with similar rainfall patterns
    and divided the study area into seventeen regions using Thiessen polygons. The
    land use map showed that the study area was mostly covered by crop lands, and
    the soil map divided the area into three types of sedimentary claystone soil.
    A hydrological model, Hydrologic Engineering Center – Hydrologic Modelling System
    (HEC-HMS), was used for rainfall-runoff modeling, and the computed runoff was
    compared with observed gauge discharge and inflow of Sardar Sarovar Dam. Regression
    analysis was performed to assess the performance of the model, and the results
    showed a good correlation between observed rainfall and estimated runoff values
    for 2012 and 2016. The study concludes that the existing rain gauge network is
    sufficient for flood forecasting, and the developed model along with the Thiessen
    polygon method can provide more accurate predictions of flow. The study highlights
    the importance of selecting suitable rain gauge stations for reliable flood forecasting
    in flood-prone basins. The study findings can be useful for future runoff prediction
    and flood forecasting in the study area.
  doi: 10.1016/j.rineng.2023.101571
  full_citation: Improving flood forecasting in Narmada river basin using hierarchical
    clustering and hydrological modelling
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Study area 3. Data collection
    4. Methodology 5. Result and discussion 6. Conclusion Limitations Funding Declaration
    of competing interest Data availability References Show full outline Cited by
    (7) Figures (12) Show 6 more figures Tables (4) Table 1 Table 2 Table 3 Table
    4 Results in Engineering Volume 20, December 2023, 101571 Improving flood forecasting
    in Narmada river basin using hierarchical clustering and hydrological modelling
    Author links open overlay panel Darshan Mehta a, Jay Dhabuwala b, Sanjaykumar
    M. Yadav c, Vijendra Kumar d, Hazi M. Azamathulla e Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.rineng.2023.101571 Get rights and content
    Under a Creative Commons license open access Highlights • Use of hierarchical
    clustering and Thiessen polygon algorithms for identifying the significant rain
    gauge stations for flood forecasting at Sardar Sarovar Dam. • Land use map showed
    that the study area was mostly covered by crop lands. • HEC-HMS, was used for
    rainfall-runoff modeling, and the computed runoff was compared with observed gauge
    discharge and inflow of Sardar Sarovar Dam. • The study concludes that the existing
    rain gauge network is sufficient for flood forecasting, and the developed model
    along with the Thiessen polygon method can provide more accurate predictions of
    flow Abstract The purpose of the study was to use hierarchical clustering and
    Thiessen polygon algorithms to identify the significant rain gauge stations for
    flood forecasting at Sardar Sarovar Dam. Rainfall data from 2010 to 2018 was utilized
    to analyze the catchment region between Omkareshwar Dam and Sardar Sarovar Dam.
    The study identified two clusters of rain gauge stations with similar rainfall
    patterns and divided the study area into seventeen regions using Thiessen polygons.
    The land use map showed that the study area was mostly covered by crop lands,
    and the soil map divided the area into three types of sedimentary claystone soil.
    A hydrological model, Hydrologic Engineering Center – Hydrologic Modelling System
    (HEC-HMS), was used for rainfall-runoff modeling, and the computed runoff was
    compared with observed gauge discharge and inflow of Sardar Sarovar Dam. Regression
    analysis was performed to assess the performance of the model, and the results
    showed a good correlation between observed rainfall and estimated runoff values
    for 2012 and 2016. The study concludes that the existing rain gauge network is
    sufficient for flood forecasting, and the developed model along with the Thiessen
    polygon method can provide more accurate predictions of flow. The study highlights
    the importance of selecting suitable rain gauge stations for reliable flood forecasting
    in flood-prone basins. The study findings can be useful for future runoff prediction
    and flood forecasting in the study area. Previous article in issue Next article
    in issue Keywords Flood forecastingRainfall-runoff modellingHierarchical clusteringThiessen
    polygonHydrological modelling 1. Introduction Floods have long been a major concern
    in flood-prone areas due to their potential to cause severe damage to life, property,
    and infrastructure [1,2]. Flood forecasting is a crucial component of flood management,
    as it allows for the prediction and mitigation of potential flood impacts [3,4].
    Rainfall data is necessary for flood forecasting models. The ability to gather
    data from all rain gauges (RGs) is not always practicable for a variety of reasons,
    including non-recording, failure, and the difficulties of transmitting information
    during floods, especially in huge catchment regions [5,6]. According to Ref. [7],
    changes in the climate also alter the volumes and patterns of rainfall, runoff,
    and runoff coefficient. As a result, choosing the primary network of rain gauges
    is crucial for accurate flood forecasts [8]. proposed a method to determine the
    estimation error in order to estimate airborne rainfall and therefore forecast
    runoff [9]. Selecting important rain gauge stations that can offer precise estimates
    of rainfall in a catchment region may be done using this technique. The uncertainty
    associated with measuring rainfall can be decreased by identifying the key rain
    gauge sites, which helps improve flood forecasts [10,11]. Due to rivers'' vast
    and complex catchment basins, choosing a rain gauge network might be difficult
    [12,13]. Numerous strategies for choosing the most appropriate rain gauging networks
    have been developed as a result of the requirement for precise and trustworthy
    flood forecasts. Principal component analysis (PCA) [14], entropy-based approaches
    [15], and correlation coefficient methods [16] are just a few of the techniques
    that may be used to choose a rain gauge network. The PCA approach determines the
    key variables that contribute to the variance in rainfall patterns [17], whereas
    the correlation coefficient method assesses the correlation between rainfall data
    from various rain gauge stations. To find the most useful rain gauge stations
    for a particular catchment region, the entropy-based technique makes use of information
    theory [18,19]. However, each of these approaches has drawbacks. The correlation
    coefficient technique, which may not always be correct, makes the assumption that
    the correlation between two rain gauge stations is constant throughout time [20,21].
    The geographic connection between rain gauge stations is assumed to be linear
    by PCA; however this may not always be the case [22]. The entropy-based technique
    could need difficult mathematical calculations and might not offer useful data
    for choosing rain gauge locations [23]. Each approach therefore has its drawbacks
    and might not be appropriate for all catchment regions. One such technique is
    hierarchical clustering (HC) [24], which classifies rain gauge stations according
    to how closely their rainfall patterns resemble one another [25,26]. Another option
    is the Thiessen polygon [27], which splits a catchment region into smaller sections,
    with each section represented by the single rain gauge station that has the greatest
    impact on it [28,29]. In earlier investigations, these techniques were utilized
    to pinpoint crucial rain gauge sites for flood forecasting. Numerous research
    have looked at the usage of Thiessen polygon algorithms and hierarchical clustering
    to choose rain gauge sites for flood forecasting [[30], [31], [32]]. These techniques
    locate rain gauge stations with comparable rainfall parameters and pinpoint the
    region of effect surrounding each station using statistical and geographical analysis.
    In several catchment regions, it has been discovered that these methodologies
    produce dependable and accurate flood predicting predictions [31]. Therefore,
    combining the HC and Thiessen polygon techniques can result in a system that is
    more thorough and efficient for choosing rain gauge networks for flood forecasting.
    Forecasting floods requires careful consideration of the hydrological models of
    rainfall-runoff [33,34]. A special hydrological model known as a rainfall-runoff
    model focuses on how rainwater in a watershed is converted into runoff to anticipate
    how a watershed would react to rainfall events and the amount of water that will
    enter rivers, streams, and other water bodies [35]. Different kinds of rainfall-runoff
    models exist, each with its own assumptions, parameters, and restrictions. Here
    are a few of the most used rainfall-runoff models [36]. Empirical models are built
    on statistical correlations between rainfall and runoff, which were developed
    using historical data to forecast runoff in the future [37]. Empirical models
    estimate runoff based on historical data and assumptions rather than attempting
    to explain the fundamental physical mechanisms that regulate it [38,39]. Conceptual
    models uses mathematical equations to describe the system''s behaviour and are
    based on streamlined representations of the hydrological processes involved in
    rainfall-runoff [40]. For ungauged watersheds, conceptual models can be used to
    forecast runoff, but effective predictions require a lot of data and calibration
    [41]. Physically based models uses mathematical equations that explain the flow
    of water through the watershed to replicate the underlying physical processes
    involved in rainfall-runoff [9]. Physically based models need precise data on
    the terrain, soil characteristics, vegetation, and other elements that affect
    the watershed''s hydrological behaviour [42]. Hydrologic Engineering Center Hydrologic
    Modeling System (HEC-HMS), is one popular model. The HEC-HMS model is a computer-based
    hydrological simulation tool that enables precise flood forecasting by simulating
    the rainfall-runoff process for watersheds [43]. The HEC-HMS model is classified
    as a physically-based model [44]. The HEC-HMS model operates by converting measured
    precipitation data into stream flow [45]. It is founded on an idea of water balance,
    which is the accounting of water movement through a watershed [46]. Input data
    for the model include watershed geometry, land use, soil properties, and precipitation
    data [47]. The amount of water that enters the watershed, how much is retained
    in the soil, and how much is released as stream flow are all determined by these
    data. The HEC-HMS model has several sub-models, including the Unit Hydrograph
    model [48], the Muskingum-Cunge routing model [49], and the Groundwater model
    [50]. The hydrograph that would result from a unit amount of precipitation is
    calculated using the Unit Hydrograph model [51], and it is routed downstream using
    the Muskingum-Cunge routing model. To simulate subsurface water movement, groundwater
    models are utilized [52]. One of the benefits of the HEC-HMS model is its adaptability
    to handle massive, intricate watersheds. The model may incorporate a wide range
    of land use patterns and soil properties, simulating the rainfall-runoff process
    for watersheds of various sizes [[53], [54]]. Additionally versatile, the HEC-HMS
    model enables customization to particular watershed circumstances. The HEC-HMS
    model''s accessibility to user-friendly interfaces, which enables it to be utilized
    by users of various levels of competence, is another benefit [55]. Additionally,
    the model produces a number of outputs, including as hydrographs, water balance
    tables, and maps, which may be used for flood control and forecasting [56]. The
    goal of this study is to locate crucial rain gauge locations for accurate flood
    projections in the catchment area between the Omkareshwar and Sardar Sarovar dams.
    The study locates rain gauge stations with comparable rainfall characteristics
    and determines the zone of influence surrounding each station using the hierarchical
    clustering and Thiessen polygon techniques. The annual runoff is predicted using
    HEC-HMS based on daily rainfall data. The study''s conclusions will contribute
    to enhancing the precision and dependability of flood forecasts in the catchment
    area between the Omkareshwar and Sardar Sarovar dams. The study can help with
    the effective allocation of resources for flood control and allow early evacuation
    and warning systems by identifying the key rain gauge stations. For academics,
    decision-makers, and other stakeholders interested in flood management in flood-prone
    areas, the study''s findings can be a useful resource. 2. Study area The Narmada
    River is the biggest west-flowing river in India and the sixth largest river overall.
    It drains a sizable area of 98,796 square kilometers as it passes through the
    states of Madhya Pradesh, Maharashtra, and Gujarat. Between the North Latitudes
    21° 20′ and 23° 45′ and the East Longitudes 72° 32′ to 81° 45′, the Narmada basin
    is located. It flows through the Deccan trap between the Vindhya and Satpura ranges
    of hills before reaching the Arabian Sea. The Narmada River rises in Amarkantak
    in the top portion of the landscape, which is hilly. The center portion of the
    landscape is a rich plain. The coastline where the river joins the Arabian Sea
    is in the basin''s lowest portion. The Narmada River between the Omkareshwer Dam
    in Madhya Pradesh and the Sardar Sarovar Dam in Gujarat will be the subject of
    this study. This section, which spans a distance of around 270 km, is located
    between the East Longitudes 72° 50′ to 76° 00′ and the North Latitudes 21° 20′
    to 23° 45''. The concentration period is 6–8 h from Omkareshwer Dam to Mandleshwer
    and 12–15 h from Mandleshwer to Sardar Sarovar Dam. The state governments of Gujarat
    and Madhya Pradesh each operate 12 gauge and discharge sites and 31 gauge/gauge
    and discharge sites respectively in the Narmada basin. Fig. 1 shows the line diagram
    of the Narmada basin with observation stations. Additionally, there are five CWC
    sites located between Omkareshwer Dam to SardarSarovar Dam, mainly at Mortakka,
    Maheshewar, Kogaon, Dhulsar, and Pati locations. Download : Download high-res
    image (754KB) Download : Download full-size image Fig. 1. Location of study area
    in Narmada Basin (Source: indiawris.gov.in). 3. Data collection The study focused
    on a 270 km stretch of the Narmada River, with DEM data obtained from “bhuvan-app3.nrsc.gov.in”.
    Discharge data was provided by the Central Water Commission, Bhopal, while rainfall
    data for the river from 2010 to 2018 was provided by the Narmada Control Authority.
    Inflow data for Sardar Sarovar Dam was obtained from Narmada Bhavan, Kevadiya
    Colony, Gujarat. To improve the analysis of the rain gauge network for flood forecasting,
    data was collected from various rain gauge stations located within the Narmada
    basin. Table 1 provides the location, latitude, and longitude of the rain gauge
    stations, along with their corresponding Basin Ids. The stations are spread across
    different locations within the basin, including OSP, Dhadgaon, Kogaon, Khargone,
    Dharmpuri, Man, Maheshwar, Rajpur, Sendhwa, Barwani, Dhulsar, Jobat, Alirajpur,
    Pati, Toranmal, Molgi, and SSP. Table 1. Location of Rain Gauge station with Basin
    Ids. Basin Id Location Latitude Longitude W1400 OSP 22° 14′ 37.26″ 76° 09′ 46.83″
    W820 Dhadgaon 22° 05′ 24″ 76° 07′ 12″ W1014 Kogaon 22° 09′ 38.9′ 75° 39′ 21.7″
    W1220 Khargone 21° 49′ 48′ 75° 36′ 36″ W890 Dharmpuri 22° 10′ 12″ 75° 21′ 00″
    W640 Man 22° 25′ 11.7″ 75° 06′ 28.8″ W650 Maheshwar 22° 10′ 48″ 75° 10′ 48″ W930
    Rajpur 21° 55′ 48″ 75° 07′ 48″ W1000 Sendhwa 21° 40′ 48″ 75° 05′ 24″ W700 Barwani
    22° 02′ 24″ 74° 54′ 00″ W1140 Dhulsar 22° 12′ 00″ 74° 52′ 12″ W710 Jobat 22° 25′
    12″ 74° 34′ 12″ W670 Alirajpur 22° 18′ 19″ 74° 21′ 09″ W1120 Pati 21° 56′ 24″
    74° 45′ 00″ W1150 Toranmal 21° 52′ 48″ 74° 27′ 36″ W1100 Molgi 21° 45′ 53.3″ 74°
    00′ 24.8″ W1130 SSP 21° 49′ 49″ 73° 45′ 09″ 4. Methodology The model structure,
    as shown in Fig. 2, shows the methodology of the work. The first step is to identify
    a key rain gauge station by using the Hierarchical Clustering (HC) technique based
    on the characteristics of each rain gauge area. The Thiessen polygon method is
    used to delineate the Narmada River basin, and the resulting polygons are plotted
    using Arc-GIS (10.1). Next, the Hydrologic Engineering Center''s Hydrologic Modeling
    System (HEC-HMS 4.3) is employed to model rainfall runoff. The runoff generated
    from the hydrologic model is then compared with the observed gauge discharge and
    inflow of the Sardar Sarovar dam. Download : Download high-res image (453KB) Download
    : Download full-size image Fig. 2. Flowchart of methodology. 4.1. Hierarchical
    clustering Hierarchical clustering is a clustering method that establishes a tree-based
    relationship between clusters, resulting in a dendrogram that represents the nested
    grouping relationship among objects. The agglomerative approach forms the hierarchy
    from the bottom-up. In this method, clusters are merged together until all the
    data points belong to a single cluster. To perform hierarchical clustering and
    plot the dendrogram, R version 3.6.1 Statistical Computing software is used. 4.2.
    Digital elevation model A digital elevation model (DEM) is a 3D depiction of the
    surface of a terrain for a planet that shows the elevation of the land. It is
    used to calculate slope, height of the landscape, etc. The DEM for the research
    region was downloaded from the “bhuvan.nrsc.gov.in” website for this study and
    23 tiles containing the satellite images were processed before extracting basin
    characteristics using HEC-GeoHMS. The following steps were taken to process the
    satellite images: a) First, all 23 images were merged to create a single mosaic
    raster (Fig. 3a). Download : Download high-res image (1MB) Download : Download
    full-size image Fig. 3. (a)Mosaic raster. (b) Flow fill in the Mosaic raster.
    (c) Flow direction in the Mosaic raster. (d) Sub basins in the study area. b)
    Then, the “Flow fill” tool of the Spatial Analyst was used to identify the flow
    in the mosaic raster (Fig. 3b). c) Next, the flow direction of each flow fill
    was processed to connect the flow lines and generate the river system in the mosaic
    raster (Fig. 3c). d) Finally, the generated river system was processed to create
    sub-basins in the mosaic raster (Fig. 3d). 4.3. HEC-GeoHMS process HEC-GeoHMS
    is a geospatial hydrological toolkit that has been designed specifically for hydrologists
    who may have less experience with GIS. It provides various programs, such as data
    management, terrain processing, basin processing, hydrologic parameter estimation,
    and HEC-HMS model support that help to create hydrologic input that can be directly
    used with the HEC-HMS modeling system. HEC-GeoHMS is an extension for ArcGIS and
    requires the spatial analyst extension to be installed. In this study, HEC-GeoHMS
    version 10.1 along with ArcGIS version 10.1 was used. 4.3.1. Terrain processing
    The raster data created is converted into a vector format using the three functions
    drainage line processing, adjoint catchment processing, and drainage point processing.
    The input stream link grid is transformed into a drainage line feature class via
    the drainage line processing method. According to Fig. 4, each line in the feature
    class has the catchment identification for where it is located. Download : Download
    high-res image (385KB) Download : Download full-size image Fig. 4. Drainage line
    processing. The aggregated upstream catchments are produced from the catchment
    feature class by the adjoint catchment processing function. A polygon depicting
    the whole upstream area draining to its intake point is created for each catchment
    that is not a head catchment and saved in a feature class that has an adjoint
    catchment tag. The point delineation procedure is expedited by the usage of this
    feature class. The catchment-related drainage points may be generated using the
    drainage point function. Creating polygons from a collection of sample points
    so that each one defines an area of impact around its sample point is the process
    of plotting thiessen polygons. Any of the several sample sites will now have a
    thiessen polygon network, as seen in Fig. 5. Download : Download high-res image
    (286KB) Download : Download full-size image Fig. 5. Thiessen polygon. 4.3.2. Basin
    processing To identify the watershed upstream of each point in a given batch point
    feature class, utilize the batch watershed delineation tool in HEC-GeoHMS. However,
    there is a way to define the watershed of a single point of interest using the
    interactive point delineation tool without having to use batch mode. For all the
    points in a chosen point feature class, sub-watersheds are delineated using the
    batch sub watershed delineation algorithm. A site of interest''s immediate drainage
    area is referred to as a sub-watershed; all other areas that are a part of other
    sub-watersheds are not included. Since the watershed flowing to a point that is
    within another watershed is omitted from the sub-watershed of the downstream point,
    the sub-watersheds drawn from a set of points do not overlap. The flow path from
    the chosen site to the catchment outlet following the sharpest slope is found
    using flow path tracing. Fig. 6 displays a schematic illustration of a basin being
    treated. Download : Download high-res image (354KB) Download : Download full-size
    image Fig. 6. Sub basin with Basin processing. 4.3.3. Steps for calculating LULC
    and soil map In order to detect fundamental changes in the study area, such as
    the areas covered by water, vegetation, forests, and urbanization, the land use
    land cover (LULC) map was employed. The LULC map was produced using the following
    procedures: 1. Downloaded decadal land use and land cover classification data
    for India from 1985, 1995, and 2005. 2. Extracted the data and added it to ARC-GIS.
    3. Changed the symbology to see all classes of the LULC categories and repeated
    the same for other files. 4. Added the study area polygon to the data view and
    extracted the LULC data for the study area using the extract by mask tool. 5.
    Prepared a shapefile raster to polygon and changed the symbology to grid code
    and color. 6. Changed the color and name of the grid code according to the classification.
    The methodological algorithm presented the LULC images as well as the percentage
    of land covered by each chosen feature. On the color class cluster, the approach
    was used to extract the feature. The segmented LULC images produced by ArcGIS
    that were the end product of the aforementioned output showed several color class
    clusters. The soil map and land use map were uploaded to the ArcGIS platform to
    build the CN map. The FAO soil portal, which offers a global soil map, is where
    the soil map was downloaded. A new map with new polygons representing the combined
    soil land map was developed once the soil map and land use map were chosen for
    intersection. The next stage involved calculating the curve number in ArcGIS 10.1
    using a union method to combine an attribute with one of the land use and hydrological
    groups of soil. By using the land covers and hydrologic soil classification, the
    proper CN value was assigned for each polygon on the soil-land merged map. For
    each sub-station that corresponds to a sub-basin, Table 2 below lists the CN number.
    Table 2. Curve Number for each station corresponding to sub-basin. Sr. No. Station
    name Subbasin Class Landscape CN 1 W1400 OSP C Forest 73 2 W820 Dhadgaon D Crop
    89 3 W1014 Kogan D Forest 79 4 W1220 Khargone D Crop + Forest 77 5 W890 Dharmapuri
    C Crop + Forest 70 6 W640 Man D Water body + Crop 89 7 W650 Maheshwar C Crop 85
    8 W930 Rajpur D Crop 89 9 W1000 Sendhwa C Crop + Forest 70 10 W700 Barwani C Crop
    85 11 W1140 Dhulsar C Crop + Forest 70 12 W710 Jobat C Mixed Forest 73 13 W670
    Alirajpur D Crop 89 14 W1120 Pati C Crop + Forest 70 15 W1150 Toranmal C Forest
    73 16 W1100 Molgi C Crop 85 17 W1130 SSP C Crop 85 4.4. Hydrological model To
    create a water balance relationship for hydrologic modeling, it is important to
    determine the basic characteristics of the basin. These characteristics can be
    obtained through watershed delineation, CN grid, and raw data for the study area.
    The following steps outline how to prepare basin data in ArcGIS using the HEC-GeoHMS
    tool: 1. Terrain Processing: Create a Slope Grid The first step is to create a
    stream network and sub-basins using the DEM. This involves terrain processing,
    which includes creating a slope grid. 2. HEC-GeoHMS Model Development: a) Project
    Setup & Basin Processing: Set up the selected watershed for basin processing using
    the spatial data obtained from watershed delineation. Use ProjectPoint and ProjectArea
    to define the areas for which the HMS project will be created. Basin Processing
    allows for revision of features such as basin delineation, dividing and merging
    of basins and streams. b) Basin Characteristics: After setting up the project
    and basin processing, use the basin characteristic menu in HEC-GeoHMS tool to
    extract the physical characteristics of stream and sub-basins into the attribute
    table. c) HMS Parameters: Use the hydrologic parameters menu in HEC-GeoHMS to
    estimate and assign numbers to watershed and stream parameters for use in HMS.
    d) Check Data: Use this tool to check and verify input data. The summary shows
    the results after checking and highlights any problems found. e) HMS Schematic:
    This tool creates a GIS representation of the hydrologic system by a schematic
    network with basin elements such as links and nodes. The physical characteristics
    of the sub-basin were extracted and then HMS parameters were created, reflecting
    the nodes and links with the streams and reaches in the sub-basin. This created
    a basin model with HMS parameters, which was further processed to add more information
    about the coordinates. The resulting model, including a background shapefile,
    was then exported from the HEC-GeoHMS tool in ArcGIS. Fig. 7 shows the basin model
    with HMS parameters. Download : Download high-res image (492KB) Download : Download
    full-size image Fig. 7. Basin model with HMS parameters. 4.5. Importing basin
    model in HEC-HMS The basin model that was created in GeoHMS was then imported
    into HEC-HMS for hydrologic analysis. The figure-8 displays the imported model
    from ArcGIS that contains all the hydrologic elements. Download : Download high-res
    image (675KB) Download : Download full-size image Fig. 8. Basin model imported
    in HEC-HMS. 4.6. Calibration and validation of model Once the hydrologic model
    was generated in HEC-HMS, simulations were conducted to calibrate the model using
    three sets of observed flow data for the years 2012, 2015, and 2016. The model
    was then validated using two sets of observed flow data for the years 2017 and
    2018. Upon successful validation of the hydrologic model, its efficiency and root
    mean square error were calculated to assess the model''s accuracy using regression
    analysis. 4.6.1. Regression analysis To ascertain the connection between a dependent
    variable and one or more independent variables, regression analysis is a statistical
    technique. Regression analysis is used to evaluate the model''s accuracy in hydrological
    modeling by comparing the simulated and observed values. The goal is to determine
    how closely the model fits the observed data. The linear regression model is used
    to determine the minimal distance between the fitted line and all observed data
    points. This method, known as ordinary least squares (OLS) regression, reduces
    the sum of the squared residuals. The closer the sum of the squared residuals
    is to zero, the better the fit of the model to the observed data. 4.6.2. Correlation
    between observed and simulated discharge The degree to which the estimated and
    observed data match each other is measured using the coefficient of determination,
    or R-squared. R-squared measures how much of the variance in the response variable
    can be accounted for by a linear model. It can be figure it out by dividing the
    variance that can be explained by the overall variation. R-squared has a 0 %–100
    % range. A number of 100 % means that the model completely explains all of the
    variability of the response data around its mean, whereas a value of 0 % means
    that the model completely fails to explain any of the variability. R-squared is
    a measure of how well a model fits the data, and the higher the number, the better.
    The ability of the model to be employed in hydrologic simulation in the Narmada
    watershed at the Sardar Sarovar dam site is demonstrated by the comparison of
    observed and simulated hydrographs with a high R-squared value. 4.6.3. Root mean
    square error The root-mean-square error (RMSE) is a widely used metric for assessing
    the accuracy of a model or an estimator in predicting values as compared to observed
    values. The RMSE is calculated as the square root of the second sample moment
    of the differences between predicted and observed values, or the quadratic mean
    of these differences. For peak discharge, the root mean square error can be determined
    using the following Eq. (1): (1) where, Qop represents the observed peak discharge,
    Qcp represents the computed peak discharge, and SEi is the relative error percent
    for each of the events. The RMSE provides a quantitative measure of the differences
    between the observed and computed values, and can be used to evaluate the accuracy
    of the model''s predictions for peak discharge. 4.6.4. Nash-Sutcliffe models efficiency
    The Nash-Sutcliffe model efficiency coefficient (NSE) is a well-liked indicator
    for evaluating the effectiveness of hydrological models. It is calculated using
    Eq. (2), which compares the observed peak discharge (Qop) with the computed peak
    discharge (Qcp) of the model. (2) Here, Qmean is the mean of observed peak discharge
    data, Qop is observed peak discharge, and Qcp is computed peak discharge. The
    NSE ranges from -∞ to 1, where an NSE of 1 indicates a perfect match between modelled
    and observed discharge. An NSE of 0 suggests that the model performs no better
    than the mean of the observed data. The NSE can be used to quantitatively assess
    the accuracy of model predictions and can be applied to other models as long as
    observed data is available for comparison. 5. Result and discussion 5.1. Hierarchical
    clustering Hierarchical clustering is a technique that groups objects into clusters
    based on their similarity. The resulting dendrogram displays the nested relationships
    between the clusters. In agglomerative clustering, which is a bottom-up approach;
    objects are first treated as individual clusters and are successively merged together
    based on their similarity until all the objects belong to one cluster. In the
    case of raingauge stations, the dendrogram in Fig. 9 shows that the stations are
    divided into two major groups. The first group consists of five stations, namely
    Kogaon, Khargone, Pati, Dhulsar, and Jobat, which have similar rainfall patterns.
    Specifically, the characteristics of rainfall at Pati match with those of the
    cluster of raingauge stations at Dhulsar and Jobat. Moreover, the grouping of
    Dhulsar, Jobat, and Pati is similar to that of the Khargone raingauge station,
    followed by Kogaon. The second group includes Udaynagar, Kannod, Khandwa, Sendhwa,
    Dhonchiya, Barwani, Dhadgoan, New Harsud, and Maheshwar raingauge stations. Udaynagar''s
    rainfall features are comparable to those of Dhonchia, Kannod, Khandwa to Sendhwa,
    New Harsud to Maheshwar, and Dhadgoan to Barwani. Download : Download high-res
    image (271KB) Download : Download full-size image Fig. 9. Cluster Dendrogram using
    complete linkage distance. 5.2. Thiessen polygon A.H. Thiessen created the Thiessen
    polygon method in 1911, and it is a popular method for determining the mean areal
    precipitation for a catchment from raingauge data. This approach makes the assumption
    that observed precipitation at each location may be dispersed evenly halfway to
    each subsequent station in all directions. As a result, the amount of rainfall
    is assumed to be the same at any given spot at any gauge nearby. The relative
    areas of the rain gauges, which are calculated using the Thiessen polygon network,
    are what determine the weights of the rain gauges. By drawing perpendicular bisectors
    of lines connecting neighboring stations, the polygons are formed. The area of
    each polygon is then used to calculate the amount of rainfall for the station
    located in the middle of each one. If the data from any station is missing, the
    pertinent polygon must be modified. However, the Thiessen method disregards variations
    in rainfall driven on by topographical factors. The seventeen polygons that make
    up the research region in Fig. 10 are based on the influence zone that surrounds
    each sample point. Download : Download high-res image (417KB) Download : Download
    full-size image Fig. 10. Rain gauge stations in the Thiessen polygon. 5.3. Hydrological
    modelling In the present study, rainfall data were used from the years 2012, 2015,
    and 2016 to calibrate the model and rainfall data from the years 2017 and 2018
    to verify the model. 5.3.1. Comparing the observed and simulated flow Model calibration
    is the process of modifying the model''s parameters to find a fixed parameter
    value that gives the best estimate of the observed discharge. In this study, data
    from 2012, 2015, and 2016 were used to calibrate the model. Two locations had
    their calibration done. First, the Sardar Sarovar Dam''s upstream gauging station
    at Mandelshwar was calibrated. The calibration of the Sardar Sarovar Dam site
    came next. 5.3.2. Comparison of model calibration and validation at the Mandelshwer
    gauging site In order to calibrate the model at Mandelshwar gauging site, rainfall
    data from stations at Dhadgon, Koagon, Khargon, and Omkareshwer. The comparison
    of the simulated and observed discharge for the year 2012 is shown in Fig. 11a.
    The observed peak discharge was 25442 cumec, while the peak discharge of the calibrated
    model at Mandelshwar gauging site was 26949.4 cumec, which is higher than the
    observed discharge. The day of peak discharge was August 7th, 2012. Download :
    Download high-res image (1MB) Download : Download full-size image Fig. 11. (a)
    Observed flow vs Simulated Flow 2012. (b) Observed flow vs Simulated Flow 2015.
    (c) Observed flow vs Simulated Flow 2016. (d) Observed flow vs Simulated Flow
    2017. (e) Observed flow vs Simulated Flow 2018. Similarly, the comparison of the
    simulated and observed discharge at Narmada river at Mandelshwar gauging site
    for the years 2015 and 2016 is shown in Fig. 11b and c, respectively. For the
    year 2015, the observed peak discharge is 11326.5 cumec, while the simulated peak
    discharge of the calibrated model at Mandelshwar gauging site is 12640.2 cumec,
    which is higher than the observed discharge. The day of the peak was August 6,
    2015. For the year 2016, the observed peak discharge is 9000 cumec, while the
    simulated peak discharge of the calibrated model at Mandelshwar gauging site is
    8373.3 cumec, which is also higher than the observed discharge. The day of the
    peak was August 7, 2016. Validation of a model refers to the process of testing
    the model''s ability to accurately simulate observed data that were not used during
    the calibration process. In this study, the model was validated using data from
    the years 2017 and 2018. The comparison of observed and simulated flow graphs
    are shown in Fig. 11d and e. The peak observed discharge for 2017 was 2590 cumec,
    while the simulated peak discharge at Mandelshwer Gauging site was 2775.2 cumec,
    indicating that the simulated value was higher than the observed discharge. The
    peak occurred on the August 13, 2017 (Fig. 11d). Similarly, the observed peak
    discharge for 2018 was 2590 cumec, and the simulated peak discharge at Mandelshwar
    gauging site was 2675.2 cumec, which was also higher than the observed discharge.
    The peak occurred on the August 18, 2018 (Fig. 11e). 5.3.3. Comparison of model
    calibration and validation at the Sardar Sarovar Dam In this study, the calibration
    of the model at the Sardar Sarovar Dam site was performed using rain gauge data
    from various stations including Maheshwer, Dharampuri, Man, Barwani, Rajpur, Sendhwa,
    Alirajpur, Dhulsar, Pati, Jobat, Toranmal, Dhadgaon, Molgi, and Sardar Sarovar
    Dam. The observed and simulated flow graph for the calibration is presented below.
    Fig. 12a shows a comparison of simulated and observed discharge of the Narmada
    river at Sardar Sarovar Dam site for the year 2012. The observed peak discharge
    for the year 2012 is 25751.3 cumec, and the simulated peak discharge of the calibrated
    model at Sardar Sarovar Dam site is 26254 cumec, which is higher than the observed
    discharge. The day of peak was August 8, 2012. Download : Download high-res image
    (2MB) Download : Download full-size image Fig. 12. (a) Observed flow vs Simulated
    Flow 2012. (b) Observed flow vs Simulated Flow 2015. (c) Observed flow vs Simulated
    Flow 2016. (d) Observed flow vs Simulated Flow 2017. (e) Observed flow vs Simulated
    Flow 2018. Similarly, the comparison of the simulated and observed discharge at
    Sardar Sarovar Dam site for the years 2015 and 2016 is shown in Fig. 12b and c,
    respectively. The observed peak discharge for 2015 was 11326.7 cumec, while the
    peak discharge of the calibrated model at Sardar Sarovar Dam site was 11141.6
    cumec, which is lower than the observed discharge. The day of peak discharge was
    August 8th, 2015. For the year 2016, the observed peak discharge was 9464.6 cumec,
    while the peak discharge of the calibrated model at Sardar Sarovar Dam site was
    9510.9 cumec, which is higher than the observed discharge. The day of peak discharge
    was August 5th, 2016. A model is validated by putting it to the test to see whether
    it can faithfully reproduce observed data that weren''t utilized in the calibration
    procedure. Data from the years 2017 and 2018 were used in this study to validate
    the model. Fig. 12d and e compare flow graphs that were observed and those that
    were simulated. The peak observed discharge for 2017 was 2590.9 cumec, while the
    simulated peak discharge at Sardar Sarovar Dam site was 2775.2 cumec, indicating
    that the simulated value was higher than the observed discharge. The peak occurred
    on the August 13, 2017 (Fig. 12d). Similarly, the observed peak discharge for
    2018 was 2741.4 cumec, and the simulated peak discharge at Sardar Sarovar Dam
    site was 2446.9 cumec, which was also higher than the observed discharge. The
    peak occurred on the August 18, 2018 (Fig. 12e). 5.4. Results of regression analysis
    Regression analysis were being employed to assess the root mean square error and
    coefficient of corelation for two sites. The results are tabulated in Table 3
    for the Mandelshwar gauging site and in Table 4 for Sardar Sarovar dam site. Table
    3. Result summary for Mandelshwar Gauging site. Year Date Simulated discharge
    (Cumec) Observed discharge (Cumec) NSE R2 RMSE 2012 7 Aug 26949.4 25442 0.906
    0.9318 0.5 2015 6 Aug 12640.2 11326.6 0.875 0.9272 0.4 2016 7 Aug 8373.3 9000
    0.916 0.9378 0.3 2017 13 Aug 2775.2 2590.9 0.901 0.9207 0.4 2018 18 Aug 2675.2
    2590.9 0.889 0.9159 0.5 Table 4. Result summary for Sardar Sarovar dam site. Year
    Date Simulated discharge (Cumec) Observed discharge (Cumec) NSE R2 RMSE 2012 8Aug
    26254 25751.3 0.963 0.9636 0.2 2015 8Aug 11141.6 11326.7 0.889 0.9014 0.3 2016
    5Aug 9510.9 9464.6 0.937 0.9488 0.3 2017 13Aug 2775.2 2590.9 0.833 0.9033 0.4
    2018 23Aug 2446.9 2741.4 0.912 0.925 0.3 The table above indicates that the developed
    model performs well, as evidenced by the coefficient of correlation being above
    0.91 and the root mean square error being small for all scenarios. The hydrological
    model along with Thiessen polygon generates more accurate predictions of flow
    at Sardar Sarovar dam site, as indicated by the low root mean square error values
    and high coefficients of correlation (>0.90) for all flow data. This suggests
    that the developed model can better reflect real flow values compared to observed
    values. 6. Conclusion In conclusion, this study emphasizes the importance of selecting
    a suitable rain gauging network and employing accurate hydrological models for
    making reliable flood forecasts in flood-prone areas. The study used hierarchical
    clustering and Thiessen polygon methods to identify important rain gauge stations
    in the Narmada River catchment area between Omkareshwar and Sardar Sarovar dams.
    The results showed that the developed hydrological model with Thiessen polygons
    accurately predicted flow values and had a high coefficient of correlation and
    low root mean square error for all flow data. The study also found that future
    runoff prediction is linked to prior knowledge of probable precipitation amounts,
    and hydrological models can transform observed precipitations into stream flow.
    Moreover, the study''s regression analysis indicated a good correlation between
    observed rainfall and estimated runoff values at the Sardar Sarovar dam and Mandelshwar
    gauging site. The results indicated a good correlation between observed rainfall
    and estimated runoff values with a coefficient of determination (R-squared) of
    0.9636, NSE value of 0.963, and RSME of 0.2 for the year 2012 at Sardar Sarovar
    dam. For the year 2016 at Mandelshwar gauging site, the R2 value was 0.9378, and
    the NSE and RSME std dev were 0.916 and 0.3, respectively. The evaluation parameters
    provided realistic flow predictions, indicating that the existing rain gauge network
    was sufficient for flood forecasting. The study''s findings have practical implications
    for flood management authorities and policymakers to establish and maintain an
    efficient rain gauging network and utilize accurate hydrological models for flood
    forecasting in flood-prone basins. Further research can explore the application
    of other advanced techniques for improving the accuracy of flood forecasting and
    enhancing flood management strategies. Limitations • Data Reliability: The accuracy
    and completeness of available rainfall and discharge data determine the findings.
    • Station Density: A lack of rain gauge stations might contribute to forecasting
    errors. • Thiessen Assumes that precipitation is distributed evenly within polygons.
    • Calibration Data: Limited years data are available for model calibration and
    validation. Funding This research received no external funding Declaration of
    competing interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Data availability Data will be made available on
    request. References [1] T.H. Dewan Societal impacts and vulnerability to floods
    in Bangladesh and Nepal Weather Clim. Extrem., 7 (2015), pp. 36-42, 10.1016/j.wace.2014.11.001
    View PDFView articleView in ScopusGoogle Scholar [2] M.B. Gunathilake, C. Karunanayake,
    A.S. Gunathilake, N. Marasingha, J.T. Samarasinghe, I.M. Bandara, U. Rathnayake
    Hydrological models and artificial neural networks (ANNs) to simulate streamflow
    in a tropical catchment of Sri Lanka Appl. Comput. Intell. Soft Comput., 2021
    (2021), pp. 1-9, 10.1155/2021/6683389 Google Scholar [3] M. Borga, E.N. Anagnostou,
    G. Blöschl, J.-D. Creutin Flash flood forecasting, warning and risk management:
    the HYDRATE project Environ. Sci. Pol., 14 (2011), pp. 834-844, 10.1016/j.envsci.2011.05.017
    View PDFView articleView in ScopusGoogle Scholar [4] M.B. Gunathilake, Y.V. Amaratunga,
    A. Perera, C. Karunanayake, A.S. Gunathilake, U. Rathnayake Statistical evaluation
    and hydrologic simulation capacity of different satellite-based precipitation
    products (SbPPs) in the Upper Nan River Basin, Northern Thailand J. Hydrol.: Reg.
    Stud., 32 (2020), Article 100743, 10.1016/j.ejrh.2020.100743 View PDFView articleView
    in ScopusGoogle Scholar [5] M. Ivković, A. Todorović, J. Plavšić Improved input
    to distributed hydrologic model in areas with sparse subdaily rainfall data using
    multivariate daily rainfall disaggregation J. Hydroinf., 20 (2018), pp. 784-797,
    10.2166/hydro.2018.053 View in ScopusGoogle Scholar [6] V. Kumar, H.M. Azamathulla,
    K.V. Sharma, D.J. Mehta, K.T. Maharaj The state of the art in deep learning applications,
    challenges, and future prospects: a comprehensive review of flood forecasting
    and management Sustainability, 15 (13) (2023), Article 10543, 10.3390/su151310543
    View in ScopusGoogle Scholar [7] N. Nyaupane, S.R. Mote, M. Bhandari, et al. Rainfall-runoff
    simulation using climate change based precipitation prediction in HEC-HMS model
    for Irwin Creek, Charlotte, North Carolina World Environmental and Water Resources
    Congress 2018, American Society of Civil Engineers, Reston, VA (2018), pp. 352-363
    CrossRefView in ScopusGoogle Scholar [8] J. Kagan Reflection-impulsivity: the
    generality and dynamics of conceptual tempo J. Abnorm. Psychol., 71 (1966), pp.
    17-24, 10.1037/h0022886 View in ScopusGoogle Scholar [9] D.J. Mehta, S. Eslamian,
    K. Prajapati Flood modelling for a data-scare semi-arid region using 1-D hydrodynamic
    model: a case study of Navsari Region Model Earth Syst Environ, 8 (2022), pp.
    2675-2685, 10.1007/s40808-021-01259-5 View in ScopusGoogle Scholar [10] V. Kumar,
    S.M. Yadav Real-time flood analysis using artificial neural network K.K. Pathak,
    J.M.S.J. Bandara, R. Agrawal (Eds.), Recent Trends in Civil Engineering, Lecture
    Notes in Civil Engineering, vol. 77, Springer, Singapore (2021), pp. 973-986,
    10.1007/978-981-15-5195-6_71 View in ScopusGoogle Scholar [11] V. Kumar, N. Kedam,
    K.V. Sharma, D.J. Mehta, T. Caloiero Advanced machine learning techniques to improve
    hydrological prediction: a comparative analysis of streamflow prediction models
    Water, 15 (14) (2023), p. 2572, 10.3390/w15142572 View in ScopusGoogle Scholar
    [12] B. Szeląg, G. Łagód, A. Musz-Pomorska, et al. Development of rainfall-runoff
    models for sustainable stormwater management in urbanized catchments Water, 14
    (2022), p. 1997, 10.3390/w14131997 View in ScopusGoogle Scholar [13] M.B. Gunathilake,
    Y.V. Amaratunga, A. Perera, I.M. Chathuranika, A.S. Gunathilake, U. Rathnayake
    Evaluation of future climate and potential impact on streamflow in the upper nan
    River Basin of northern Thailand Adv. Meteorol., 2020 (2020), pp. 1-15, 10.1155/2020/8881118
    Google Scholar [14] J.B. Nagel, J. Rieckermann, B. Sudret Principal component
    analysis and sparse polynomial chaos expansions for global sensitivity analysis
    and model calibration: application to urban drainage simulation Reliab. Eng. Syst.
    Saf., 195 (2020), Article 106737, 10.1016/j.ress.2019.106737 View PDFView articleView
    in ScopusGoogle Scholar [15] C. Bertini, E. Ridolfi, L.H.R. de Padua, et al. An
    entropy-based approach for the optimization of rain gauge network using satellite
    and ground-based data Hydrol Res, 52 (2021), pp. 620-635, 10.2166/nh.2021.113
    View in ScopusGoogle Scholar [16] H. Wu, Q. Yang, J. Liu, G. Wang A spatiotemporal
    deep fusion model for merging satellite and gauge precipitation in China J. Hydrol.,
    584 (2020), Article 124664, 10.1016/j.jhydrol.2020.124664 View PDFView articleView
    in ScopusGoogle Scholar [17] J.D. de Guia, R.S. Concepcion, H.A. Calinao, et al.
    Using stacked long short term memory with principal component analysis for short
    term prediction of solar irradiance based on weather patterns 2020 IEEE REGION
    10 CONFERENCE (TENCON), IEEE (2020), pp. 946-951 CrossRefView in ScopusGoogle
    Scholar [18] Y. Huang, H. Zhao, Y. Jiang, et al. Comparison and analysis of different
    discrete methods and entropy-based methods in rain gauge network design Water,
    11 (2019), p. 1357, 10.3390/w11071357 View in ScopusGoogle Scholar [19] S. Verma,
    M.K. Verma, A.D. Prasad, D. Mehta, H.M. Azamathulla, N. Muttil, U. Rathnayake
    Simulating the hydrological processes under multiple land use/land cover and climate
    change scenarios in the mahanadi reservoir complex, Chhattisgarh, India Water,
    15 (17) (2023), p. 3068, 10.3390/w15173068 View in ScopusGoogle Scholar [20] A.
    Arshad, W. Zhang, Z. Zhang, et al. Reconstructing high-resolution gridded precipitation
    data using an improved downscaling approach over the high altitude mountain regions
    of Upper Indus Basin (UIB) Sci. Total Environ., 784 (2021), Article 147140, 10.1016/j.scitotenv.2021.147140
    View PDFView articleView in ScopusGoogle Scholar [21] S. Verma, K. Kumar, M.K.
    Verma, A.D. Prasad, D. Mehta, U. Rathnayake Comparative analysis of CMIP5 and
    CMIP6 in conjunction with the hydrological processes of reservoir catchment, Chhattisgarh,
    India J. Hydrol.: Reg. Stud., 50 (2023), Article 101533, 10.1016/j.ejrh.2023.101533
    View PDFView articleView in ScopusGoogle Scholar [22] L. Buzna, P. De Falco, G.
    Ferruzzi, et al. An ensemble methodology for hierarchical probabilistic electric
    vehicle load forecasting at regular charging stations Appl. Energy, 283 (2021),
    Article 116337, 10.1016/j.apenergy.2020.116337 View PDFView articleView in ScopusGoogle
    Scholar [23] W. Wang, D. Wang, V.P. Singh, et al. Evaluation of information transfer
    and data transfer models of rain-gauge network design based on information entropy
    Environ. Res., 178 (2019), Article 108686, 10.1016/j.envres.2019.108686 View PDFView
    articleView in ScopusGoogle Scholar [24] H. Vijith, D. Dodge-Wan Spatial and temporal
    characteristics of rainfall over a forested river basin in NW Borneo Meteorol.
    Atmos. Phys., 132 (2020), 10.1007/s00703-019-00714-4 683–702 Google Scholar [25]
    Z. Jamshidi, N. Samani Mapping the spatiotemporal diversity of precipitation in
    Iran using multiple statistical methods Theor. Appl. Climatol., 150 (2022), pp.
    893-907, 10.1007/s00704-022-04191-5 View in ScopusGoogle Scholar [26] S. Verma,
    M.K. Verma, A.D. Prasad, D.J. Mehta, M.N. Islam Modeling of uncertainty in the
    estimation of hydrograph components in conjunction with the SUFI-2 optimization
    algorithm by using multiple objective functions Model. Earth Syst. Environ. (2023),
    pp. 1-19, 10.1007/s40808-023-01758-7 Google Scholar [27] S.H. Hwang, K.B. Kim,
    D. Han Comparison of methods to estimate areal means of short duration rainfalls
    in small catchments, using rain gauge and radar data J. Hydrol., 588 (2020), Article
    125084, 10.1016/j.jhydrol.2020.125084 View PDFView articleView in ScopusGoogle
    Scholar [28] S. Williams, J. Griffiths, B. Miville, et al. An impacts-based flood
    decision support system for a tropical pacific Island catchment with short warnings
    lead time Water, 13 (2021), p. 3371, 10.3390/w13233371 View in ScopusGoogle Scholar
    [29] D. Mehta, J. Hadvani, D. Kanthariya, P. Sonawala Effect of land use land
    cover change on runoff characteristics using curve number: a GIS and remote sensing
    approach Int. J. Hortic. Sci. Technol., 16 (1) (2023), pp. 1-16, 10.1504/IJHST.2023.131824
    View in ScopusGoogle Scholar [30] H. Chu, J. Wei, J. Qiu, et al. Identification
    of the impact of climate change and human activities on rainfall-runoff relationship
    variation in the Three-River Headwaters region Ecol. Indicat., 106 (2019), Article
    105516, 10.1016/j.ecolind.2019.105516 View PDFView articleView in ScopusGoogle
    Scholar [31] F.J. Pirani, R. Modarres Geostatistical and deterministic methods
    for rainfall interpolation in the Zayandeh Rud basin, Iran Hydrol. Sci. J., 65
    (2020), pp. 2678-2692, 10.1080/02626667.2020.1833014 Google Scholar [32] F. de
    O. Simoyama, S. Croope, L.L. de Salles Neto, L.B.L. Santos Optimization of rain
    gauge networks—a systematic literature review Socioecon Plann Sci, 86 (2023),
    Article 101469, 10.1016/j.seps.2022.101469 Google Scholar [33] P. Gangani, N.K.
    Mangukiya, D.J. Mehta, N. Muttil, U. Rathnayake Evaluating the efficacy of different
    DEMs for application in flood frequency and risk mapping of the Indian coastal
    River Basin Climate, 11 (5) (2023), p. 114, 10.3390/cli11050114 View in ScopusGoogle
    Scholar [34] V. Kumar, K.V. Sharma, T. Caloiero, D.J. Mehta, K. Singh Comprehensive
    overview of flood modeling approaches: a review of recent advances Hydrology,
    10 (7) (2023), p. 141, 10.3390/hydrology10070141 Google Scholar [35] D. Abdessamed,
    B. Abderrazak Coupling HEC-RAS and HEC-HMS in rainfall–runoff modeling and evaluating
    floodplain inundation maps in arid environments: case study of Ain Sefra city,
    Ksour Mountain. SW of Algeria Environ. Earth Sci., 78 (2019), p. 586, 10.1007/s12665-019-8604-6
    View in ScopusGoogle Scholar [36] L. Santos, J.C.M. Andersson, B. Arheimer Evaluation
    of parameter sensitivity of a rainfall-runoff model over a global catchment set
    Hydrol. Sci. J., 67 (2022), pp. 342-357, 10.1080/02626667.2022.2035388 View in
    ScopusGoogle Scholar [37] M. Jehanzaib, M. Ajmal, M. Achite, T.-W. Kim Comprehensive
    review: advancements in rainfall-runoff modelling for flood mitigation Climate,
    10 (2022), p. 147, 10.3390/cli10100147 View in ScopusGoogle Scholar [38] K.S.
    Rawat, S.K. Singh, S. Szilard Comparative evaluation of models to estimate direct
    runoff volume from an agricultural watershed Geol Ecol Landscapes, 5 (2021), pp.
    94-108, 10.1080/24749508.2020.1833629 View in ScopusGoogle Scholar [39] N.K. Mangukiya,
    D.J. Mehta, R. Jariwala Flood frequency analysis and inundation mapping for lower
    Narmada basin, India Water Pract. Technol., 17 (2) (2022), pp. 612-622, 10.2166/wpt.2022.009
    View in ScopusGoogle Scholar [40] W.J.M. Knoben, J.E. Freer, K.J.A. Fowler, et
    al. Modular Assessment of Rainfall–Runoff Models Toolbox (MARRMoT) v1.2: an open-source,
    extendable framework providing implementations of 46 conceptual hydrologic models
    as continuous state-space formulations Geosci. Model Dev. (GMD), 12 (2019), pp.
    2463-2480, 10.5194/gmd-12-2463-2019 View in ScopusGoogle Scholar [41] N.M. Reddy,
    S. Saravanan, D. Abijith Streamflow simulation using conceptual and neural network
    models in the Hemavathi sub-watershed, India Geosyst. Geoenviron., 2 (2023), Article
    100153, 10.1016/j.geogeo.2022.100153 View PDFView articleView in ScopusGoogle
    Scholar [42] F. Vilaseca, A. Castro, C. Chreties, A. Gorgoglione Daily rainfall-runoff
    modeling at watershed scale: A Comparison Between Physically-Based and Data-Driven
    Models (2021), pp. 18-33, 10.1007/978-3-030-87007-2_2 View in ScopusGoogle Scholar
    [43] P. Filianoti, L. Gurnari, D.A. Zema, et al. An evaluation matrix to compare
    computer hydrological models for flood predictions Hydrology, 7 (2020), p. 42,
    10.3390/hydrology7030042 View in ScopusGoogle Scholar [44] S. Chiang, C.-H. Chang,
    W.-B. Chen Comparison of rainfall-runoff simulation between support vector regression
    and HEC-HMS for a rural watershed in Taiwan Water, 14 (2022), p. 191, 10.3390/w14020191
    View in ScopusGoogle Scholar [45] N.C.S. Shekar, D.C. Vinay Performance of HEC-HMS
    and SWAT to simulate streamflow in the sub-humid tropical Hemavathi catchment
    J Water Clim Chang, 12 (2021), pp. 3005-3017, 10.2166/wcc.2021.072 Google Scholar
    [46] C. Karunanayake, M.B. Gunathilake, U. Rathnayake Inflow forecast of iranamadu
    reservoir, Sri Lanka, under projected climate scenarios using artificial neural
    networks Appl. Comput. Intell. Soft Comput., 2020 (2020), pp. 1-11, 10.1155/2020/8821627
    Google Scholar [47] M. Jaberzadeh, A. Saremi, H. Ghorbanizadeh Kharazi, H. Babazadeh
    SWAT and IHACRES models for the simulation of rainfall-runoff of Dez watershed
    Clim Dyn (2022), 10.1007/s00382-022-06215-2 Google Scholar [48] C. Cahyono, W.K.
    Adidarma Influence analysis of peak rate factor in the flood events'' calibration
    process using HEC–HMS Model Earth Syst Environ, 5 (2019), pp. 1705-1722, 10.1007/s40808-019-00625-8
    View in ScopusGoogle Scholar [49] A. Kulkarni, G. Kale Identifying best combination
    of methodologies for event-based hydrological modeling using HEC-HMS software:
    a case study on the Panchganga River basin, India Sustain Water Resour Manag,
    8 (2022), p. 123, 10.1007/s40899-022-00691-4 View in ScopusGoogle Scholar [50]
    S. Şengül, M.N. İspirli Predicting snowmelt runoff at the source of the mountainous
    euphrates River Basin in Turkey for water supply and flood control issues using
    HEC-HMS modeling Water, 14 (2022), p. 284, 10.3390/w14030284 View in ScopusGoogle
    Scholar [51] M. Spiliotis, L. Garrote Unit hydrograph identification based on
    fuzzy regression analysis Evol Syst, 12 (2021), pp. 701-722, 10.1007/s12530-021-09380-7
    View in ScopusGoogle Scholar [52] S. Natarajan, N. Radhakrishnan An integrated
    hydrologic and hydraulic flood modeling study for a medium-sized ungauged urban
    catchment area: a case study of Tiruchirappalli city using HEC-HMS and HEC-RAS
    J Inst Eng Ser A, 101 (2020), pp. 381-398, 10.1007/s40030-019-00427-2 View in
    ScopusGoogle Scholar [53] M.O.A. Shakarneh, A.J. Khan, Q. Mahmood, et al. Modeling
    of rainfall–runoff events using HEC-HMS model in southern catchments of Jerusalem
    Desert-Palestine Arabian J. Geosci., 15 (2022), p. 127, 10.1007/s12517-021-09406-z
    Google Scholar [54] D. Mehta, K. Prajapati, M.N. Islam Watershed delineation and
    land use land cover (LULC) study of purna river in India India II: Climate Change
    Impacts, Mitigation and Adaptation in Developing Countries, Springer International
    Publishing, Cham (2022), pp. 169-181, 10.1007/978-3-030-94395-0_7 View in ScopusGoogle
    Scholar [55] D.B. Wijayarathne, P. Coulibaly Identification of hydrological models
    for operational flood forecasting in St. John''s, Newfoundland, Canada J Hydrol
    Reg Stud, 27 (2020), Article 100646, 10.1016/j.ejrh.2019.100646 View PDFView articleView
    in ScopusGoogle Scholar [56] CAF do Lago, M.H. Giacomoni, R. Bentivoglio, et al.
    Generalizing rapid flood predictions to unseen urban catchments with conditional
    generative adversarial networks J. Hydrol., 618 (2023), Article 129276, 10.1016/j.jhydrol.2023.129276
    Google Scholar Cited by (7) Modeling streamflow in non-gauged watersheds with
    sparse data considering physiographic, dynamic climate, and anthropogenic factors
    using explainable soft computing techniques 2024, Journal of Hydrology Show abstract
    Experimental analysis of turbulence measurements in a new dissipator structural
    (cross beams) in abruptly expanding channels 2024, Results in Engineering Show
    abstract An integration of geospatial and fuzzy-logic techniques for multi-hazard
    mapping 2024, Results in Engineering Show abstract Flood hazards and susceptibility
    detection for Ganga river, Bihar state, India: Employment of remote sensing and
    statistical approaches 2024, Results in Engineering Show abstract Assessing Impact
    of Nature Based Solutions on Peak Flow Using HEC-HMS 2024, Water Resources Management
    Hydroclimatic projection: statistical learning and downscaling model for rainfall
    and runoff forecasting 2024, Journal of Water and Climate Change View all citing
    articles on Scopus © 2023 The Authors. Published by Elsevier B.V. Part of special
    issue Advances in Hydrologic Modelling and Hazard Assessment Edited by Upaka Rathnayake,
    Nitin Muttil, Komali K View special issue Recommended articles Machine learning-based
    performance evaluation and sludge characterization studies of oxidized starch-aluminum
    electrode assisted by direct current treatment of dye laden wastewater Results
    in Engineering, Volume 20, 2023, Article 101576 P.C. Nnaji, …, O.D. Onukwuli View
    PDF HydroShare retrospective: Science and technology advances of a comprehensive
    data and model publication environment for the water science domain Environmental
    Modelling & Software, Volume 172, 2024, Article 105902 David G. Tarboton, …, Clara
    Cogswell View PDF Deep learning for Multi-horizon Water levelForecasting in KRS
    reservoir, India Results in Engineering, Volume 21, 2024, Article 101828 Abhinav
    Dayal, …, Ruthvika Mohan View PDF Show 3 more articles Article Metrics Citations
    Citation Indexes: 4 Captures Readers: 20 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: ' Mehta, Jay Dhabuwala, Sanjaykumar M. Yadav, Vijendra Kumar, and
    Hazi M. Azamathulla. “Improving flood forecasting in Narmada river basin using
    hierarchical clustering and hydrological modelling.” River Research and Applications,
    vol. 00, no. 00, 2023, pp. 1–13. Taylor and Francis+NE, https://doi.org/10.1016/j.rineng.2023.101571.'
  journal: Results in Engineering
  limitations: The study discusses the application of hierarchical clustering and
    Thiessen polygon algorithms for identifying crucial rain gauge stations for flood
    forecasting. While the study provides valuable insights, it does not explore limitations
    or challenges associated with the methods used. Additionally, the study does not
    address factors such as data quality, temporal and spatial variability in rainfall
    patterns, or the potential impact of climate change on rainfall-runoff relationships.
    A more comprehensive analysis that considers these factors would strengthen the
    study's findings.
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Improving flood forecasting in Narmada river basin using hierarchical clustering
    and hydrological modelling
  verbatim_quote1: '"The study concludes that the existing rain gauge network is sufficient
    for flood forecasting, and the developed model along with the Thiessen polygon
    method can provide more accurate predictions of flow."'
  verbatim_quote2: '"Hydrologic Engineering Center – Hydrologic Modelling System (HEC-HMS),
    was used for rainfall-runoff modeling, and the computed runoff was compared with
    observed gauge discharge and inflow of Sardar Sarovar Dam."'
  verbatim_quote3: '>'
- analysis: 'The paper highlights the use of AI, Machine Learning, and LoRa technology
    in agriculture, focusing on real-time data collection and analysis to improve
    farming practices.


    The paper discusses the importance of data collection and transmission in precision
    farming, emphasizing the role of IoT and LoRa technology in enabling seamless
    communication between sensors and the cloud.


    The paper also addresses the challenges and limitations of existing systems in
    terms of data security, privacy, and the need for interdisciplinary collaboration
    between researchers and farmers.


    The authors propose a novel architecture for a smart farming system that leverages
    edge computing and cloud computing for efficient data processing and analysis.


    The paper provides a comprehensive overview of the potential benefits and challenges
    of AI in agriculture, and outlines a roadmap for future research and innovation
    in this field.'
  authors:
  - Indira P.
  - Arafat I.S.
  - Karthikeyan R.
  - Selvarajan S.
  - Balachandran P.K.
  citation_count: '0'
  description: Artificial intelligence (AI) can be used in a variety of fields and
    has the potential to alter how we currently view farming. Due to its emphasis
    on effectiveness and usability artificial intelligence has the largest impact
    on agriculture of all industries. We highlight the automation-supporting technologies
    such as Artificial Intelligence (AI), Machine Learning, and Long-Range (LoRa)
    technology which provides data integrity and protection. We also offer a structure
    for smart farming that depends on the location of data processing after a comprehensive
    investigation of numerous designs. As part of our future study we have divided
    the unresolved difficulties in smart agriculture into two categories such as networking
    issues and technology issues. Artificial Intelligence and Machine Learning are
    examples of technologies whereas the Moderate Resolution Imaging Spectroradiometer
    satellite and LoRa are used for all network-related jobs. The goal of the research
    is to deploy a network of sensors throughout agricultural fields to gather real-time
    information on a variety of environmental factors including temperature, humidity,
    soil moisture and nutrient levels. The seamless data transmission and communication
    made possible by these sensors’ integration with Internet of Things technologies.
    With the use of AI techniques and algorithms the gathered data is examined. The
    technology may offer practical insights and suggestions for improving agricultural
    practices because the AI models are trained to spot patterns, correlations, and
    anomalies in the data. We are also focusing on indoor farming by supplying Ultra
    Violet radiation and artificial lighting in accordance with plant growth. When
    a pest assault is detected using AI and LoRa even in poor or no network coverage
    area and notifies the farmer’s mobile in any part of the world. The irrigation
    system is put to the test with various plants at various humidity and temperature
    levels in both dry and typical situations. To keep the water content in those
    specific regions soil moisture sensors are used.
  doi: 10.1007/s42452-023-05526-1
  full_citation: null
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home SN Applied Sciences Article Fabrication
    and investigation of agricultural monitoring system with IoT & AI Research Open
    access Published: 09 November 2023 Volume 5, article number 322, (2023) Cite this
    article Download PDF You have full access to this open access article SN Applied
    Sciences Aims and scope Submit manuscript P. Indira, I. Sheik Arafat, R. Karthikeyan,
    Shitharth Selvarajan & Praveen Kumar Balachandran  1378 Accesses 3 Altmetric Explore
    all metrics Abstract Artificial intelligence (AI) can be used in a variety of
    fields and has the potential to alter how we currently view farming. Due to its
    emphasis on effectiveness and usability artificial intelligence has the largest
    impact on agriculture of all industries. We highlight the automation-supporting
    technologies such as Artificial Intelligence (AI), Machine Learning, and Long-Range
    (LoRa) technology which provides data integrity and protection. We also offer
    a structure for smart farming that depends on the location of data processing
    after a comprehensive investigation of numerous designs. As part of our future
    study we have divided the unresolved difficulties in smart agriculture into two
    categories such as networking issues and technology issues. Artificial Intelligence
    and Machine Learning are examples of technologies whereas the Moderate Resolution
    Imaging Spectroradiometer satellite and LoRa are used for all network-related
    jobs. The goal of the research is to deploy a network of sensors throughout agricultural
    fields to gather real-time information on a variety of environmental factors including
    temperature, humidity, soil moisture and nutrient levels. The seamless data transmission
    and communication made possible by these sensors’ integration with Internet of
    Things technologies. With the use of AI techniques and algorithms the gathered
    data is examined. The technology may offer practical insights and suggestions
    for improving agricultural practices because the AI models are trained to spot
    patterns, correlations, and anomalies in the data. We are also focusing on indoor
    farming by supplying Ultra Violet radiation and artificial lighting in accordance
    with plant growth. When a pest assault is detected using AI and LoRa even in poor
    or no network coverage area and notifies the farmer’s mobile in any part of the
    world. The irrigation system is put to the test with various plants at various
    humidity and temperature levels in both dry and typical situations. To keep the
    water content in those specific regions soil moisture sensors are used. Similar
    content being viewed by others Multidiscipline Applications of Triboelectric Nanogenerators
    for the Intelligent Era of Internet of Things Article Open access 20 December
    2022 Smart controlled environment agriculture methods: a holistic review Article
    13 September 2021 Machine learning in agriculture: a review of crop management
    applications Article 01 July 2023 1 Introduction The present world population
    will increase to 8 billion people in 2023. Rapid population growth according to
    the United Nation (UN) makes it more difficult to eradicate poverty, end hunger
    and malnutrition, and broaden access to healthcare and educational opportunities
    [1]. The UN Food and Agriculture Organisation predicts that the global food supply
    would need to increase by 70% by 2050 as a result of decreasing agricultural lands
    and the depletion of limited natural resources [2]. As a result there is a pressing
    need to raise farm productivity. Due to a lack of natural resources such as fresh
    water and cultivated land as well as trends in declining agricultural yields for
    several key commodities the issue has gotten worse. Another obstacle is the agricultural
    workforce’s changing organisational structure. There seem to be astonishing numbers
    for the Indian agricultural industry. With a Gross Value Addition of US Dollar
    265.51 billion it supports the livelihood of 58% of Indians. Despite employing
    around 58% of the working force directly and indirectly, this industry only provides
    about 15.87% of the nation''s Gross Domestic product (GDP) [3]. The topic of agricultural
    productivity is brought up as a result. Agricultural Value Added per Worker is
    the indicator that is most frequently used to gauge agricultural output. China,
    India, Indonesia and other impoverished or emerging countries with large populations
    have the lowest agricultural value added per worker. India has the lowest agricultural
    value added per worker among the top 20 economies. Water is essential to life
    for all creatures including plants and animals. It is a fundamental necessity
    of every human being. The only way that water is used in agriculture in India
    today is for irrigation. This proportion may increase as a result of increased
    food consumption and population growth. So a problem that affects most agriculture
    is a lack of water. By applying various water-saving strategies this can be reduced
    to a minimum. There are many strategies to stop or minimise water waste. Tamil
    Nadu''s quick development and industrialisation is responsible for the state''s
    excessive water usage. The primary factor influencing the rapid deployment of
    ground water irrigation is the ongoing change in Tamil Nadu''s yearly rainfall
    pattern. The main objective of this work is to use groundwater irrigation to decrease
    the negative effects of water scarcity on crop productivity in order to sustain
    agriculture in Tamil Nadu throughout the year. This investigation looks at temporal
    variations in irrigated areas between 2000 and 2014 [4]. We use spectral matching
    methods to map and classify the seven bands of MODIS satellite images of the land
    surfaces in order to show changes in rainfall at the sub-basin level. The only
    way that water is used in agriculture today is for irrigation. This proportion
    may increase as a result of increased food consumption and population growth.
    Thus, one of the problems facing the planet is water scarcity. Day by day the
    most efficient plant monitoring systems currently in use make use of plant optical
    and infrared imaging. Everyone needs water including humans, animals, and plants.
    It is a fundamental necessity of human being. Water waste is the key problem in
    the majority of agriculture. By applying various water-saving strategies this
    can be reduced to a minimum. There are many strategies to stop or minimise water
    waste. Water is trickled onto the plant’s roots using drip irrigation which is
    the most effective method of irrigation [5]. A sprinkler system is an irrigation-based
    system that makes use of tubes-mounted guns, sprays, or sprinklers. Abiotic and
    biotic constraints are two categories of environmental limitations that have an
    impact on crop production. Actually these aspects are more obvious due to climate
    change brought on by global warming [6]. Abiotic stresses modify a plant''s morphology,
    physiology, biochemistry, and molecular structure which negatively affects its
    growth and productivity. Climate and soil characteristics (soil components, physicochemical,
    pH, and biological features) (drought, flood, cold, heat stress, etc.) are examples
    of abiotic constraints. On the other hand biotic variables include weeds, vertebrate
    pests, pathogens, beneficial species (pollinators, decomposers, and natural enemies),
    and anthropogenic evolution. To address all the environmental issues that are
    lowering crop yields and maintaining food security, trans- and multidisciplinary
    research is required. Numerous factors present a severe risk that will lower productivity
    if farms are not adequately monitored and maintained. Three categories biological,
    environmental, and technological can be used to categorise these variables [7].
    Due to the need to increase crop production and the increasing use of farming
    practises like irrigation, extensive inorganic fertiliser application, and synthetic
    chemical weed and insect control, more land has been converted to agriculture
    [8]. These operations have decreased the quality of the soil, the water, exacerbated
    soil erosion, contaminated groundwater and the quality of the food. In an effort
    to enhance yields on current farms while reducing the environmental effect of
    agriculture this has prompted programmes for sustainable development [9,10,11,12,13].
    Today wireless sensor networks play a huge role in agriculture. These systems
    among others include those that use Radio Frequency Identification (RFID) based
    traceability systems, continuously monitor the environment and preserve agricultural
    accuracy. For the automated irrigation system to transmit the sensor data for
    the soil moisture content, temperature, and humidity to the remote area, a wireless
    modem using LoRa is essential. Wireless sensor networks are used to remotely monitor
    humidity and temperature information on a regular or irregular basis utilising
    General Packet Radio Service (GPRS) based systems. The aforementioned information
    allows us to frame the proposal’s objective as Fabrication of monitoring device
    with AI analyzation of Drought Monitoring and forecasting by Normalized Difference
    Vegetation Index (NDVI) time series data from MODIS Satellite. The contributions
    of the study are as follows NDVI time series data from MODIS Satellite along with
    Micro climate Analysis for adapting the new cropping pattern. Implementation of
    irrigation depends on age of crops and Micro climate using AI To monitor crop
    growth leaf colour changes, pest control, nutrients deficiency by Spectrogram
    images adopting AI. Also provide Fertilizer calculator to have a realistic estimate
    of the quality of fertilizer needed for our crop and area. To proposed LoRa Technology
    transmit all sensors data from farm field to control unit without Global System
    for Mobile communication (GSM) technology and any other Internet facilities. 2
    Literature review Currently irrigation is the only usage of water in agriculture.
    Increased food demand and population expansion could cause this percentage to
    increase. Therefore a global issue is the lack of water [14]. Utilising plant
    optical and infrared pictures the most effective plant monitoring systems are
    being implemented daily [15]. Every human, animal and plant needs water to survive.
    Every human being has a basic need for it. Water waste is the main issue in the
    majority of agriculture. Utilising various water saving techniques can help to
    lessen this [16]. There are numerous ways to prevent or reduce water waste. The
    first one is the ditch irrigation system, in which rows of seeds are placed in
    ditches that have been dug out. For the passage from the main ditch to the canals
    there are tubes resembling syphon tubes. The most effective technique of irrigation
    is drip irrigation which involves pouring water onto the plant''s roots [17, 18].
    Sprinkler systems are another type of irrigation-based system that employ sprinklers,
    sprays or guns mounted on tubes. The tubes carry water and some of the ends include
    sprinklers to apply water where it is needed. The sprinkler won’t activate until
    the temperature and humidity sensor in the root zone surpasses the threshold value.
    The rotary system is the best irrigation technique for large regions. The rotary
    system uses mechanically driven sprinklers that travel in a round motion due to
    its 100-foot range. As a result the device sprinkles over time in a larger area
    while using less water. For the purpose of watering cotton crops, infrared thermometers
    are utilised to measure the temperature of the remote canopy [19]. A temperature
    threshold is upheld during this process. When the canopy temperature rises above
    a certain threshold the mechanism activates. The majority of irrigation systems
    are automated rather than manual in order to maximise cotton production and water
    usage. An alternative parameter to calculate agricultural irrigation requirements
    is plant Evapotranspiration (ET). When two terms are combined as in evaporation
    and plant transpiration the result is called ET. Evaporation is the vaporisation
    of water from soil, water bodies and canopy interception [20] into the atmosphere.
    Water vaporises from stems, flowers, and leaves during the process of transpiration.
    Water reductions of up to 42% are possible with ET-based systems [21]. Due to
    uses like vehicle monitoring and robot control, Wireless Sensor Network (WSN)
    nodes have grown in popularity in recent years. IRIS nodes built on TINY OS are
    used to measure the soil moisture content of paddy fields [15]. The most popular
    method for measuring the data in irrigation fields is the ZigBee transmission
    of data from end devices. However the distance between the two nodes is only 10
    to 100 m when these devices are used. As a result the majority of applications
    transport data to faraway locations using GPRS-based technologies [17]. ZigBee-based
    transmission is used in the agricultural sector to collect data from numerous
    sensor nodes. In today''s world wireless sensor networks are essential to agriculture
    and the food industry. These systems among others, include those that use RFID-based
    traceability systems, continuously monitor the environment and uphold agricultural
    precision [16].A wireless modem using GSM/GPRS is called the SIM900A. It is crucial
    for the automated irrigation system to communicate the values from the soil moisture
    [12] content sensor as well as the temperature, humidity and other sensor data
    to the remote area. The AT commands can be used to do this. The microcontroller
    unit and GSM/GPRS modem are interfaced [12]. Wireless sensor networks are used
    for remote monitoring using GPRS-based systems to continuously or sporadically
    monitor temperature and humidity data in industry and even in agricultural [18].Various
    models and limitations of existing systems are discussed in the Table 1. Table
    1 Comparison of existing systems Full size table The main objective of this article
    is to develop an automatic watering system using AI and sensors linked to a microcontroller.
    This study made use of the DHT11 sensor for temperature and humidity as well as
    the VH400 sensor for soil moisture. These sensors are interfaced with the microcontroller
    unit which was buried beneath the root zone of the plant. Sending an SMS to a
    mobile phone of a remote owner is the main goal of using a microcontroller. SMS
    messages are delivered using the SIM900A module which is coupled to the microcontroller
    unit. The irrigation system is put to the test with various plants at various
    humidity and temperature levels in both dry and typical situations. To keep the
    water content in those specific regions soil moisture sensors are used. All results
    acquired under wet and normal conditions have been shown to be logical. 2.1 LoRa
    technology A LoRa-enabled architecture for precise irrigation and monitoring has
    been demonstrated [28] with each sensor node being able to connect to another
    LoRa-enabled receiver and create a communication channel. A low-power operating
    method called LoRa allows for transmission and reception over a vast communication
    range. Despite the fact that LoRa technology makes it simple to transfer sensor
    data from farm fields to a control unit. Field-installed sensors gather information
    about things like soil moisture, temperature, and humidity. These sensors broadcast
    the data in discrete packets using low-power, long-range wireless technology called
    LoRa. The packets are sent by LoRa-capable sensors to LoRa gateways placed around
    the farm. Gateways accept the packets and use the LoRaWAN (LoRa Wide Area Network)
    protocol to send them to a central control unit. The control unit gathers and
    analyses the incoming data to produce actionable insights. Real-time updates on
    crop conditions may be included in this data, enabling knowledgeable decisions
    on pest management, fertilisation, and irrigation. 2.2 Challenges of AI Although
    implementing AI in the agricultural sector faces significant obstacles it is a
    logical step towards smart agriculture for efficient, cost-effective, and sustainable
    farming. The agricultural sector and the field of AI research are not connected.
    Therefore AI researchers are not well-versed in the issues that farmers confront,
    and farmers are also not well-versed in the AI technologies that are currently
    available. It will take more interdisciplinary cooperation to find a solution
    to this dual issue. The use of AI in agriculture is still in its early stages,
    hence there aren''t any established norms or regulations. As a result there are
    several legal questions surrounding smartt farming. Because the majority of AI-IoT
    solutions were cloud-based until recently, farmers were reluctant to adopt AI
    methods due to worries about cyber attacks, data security, and privacy. A new
    IoT option called \"Edge AI\" has emerged to address this problem. Edge AI handles
    sensor data locally and offers better data protection and privacy as well as reduced
    latency and cost. Another challenge for AI in agriculture is a lack of data. AI
    is a data-driven technology. The absence of pertinent data makes it difficult
    to deploy certain AI algorithms. In remote, rural areas with no higher speed mobile
    networks but where agriculture is the main industry, edge AI has the potential
    to transform the game. The potential for intelligent agriculture is increased.
    Convolution Neural Networks (CNN) were used in [29] to compress sensor image data
    at the edge layer before transmitting the compressed data to the fog layer using
    LoRa technology. 3 System architecture The three layers of the proposed system
    architecture are depicted in Fig. 1. Layer 1: A farming device The foundation
    layer of the smart farm architecture is called layer. It consists of numerous
    components, including sensors which are dispersed across the agricultural ground.
    These devices also known as distributed source nodes, are simply LoRa wireless
    sensor networks. They recognise the physical parameters continuously collect data
    in real-time and send it to the gateway node at the following layer. The data
    received by several sensors and cameras in various smart agriculture applications
    is shown in Fig. 2. For instance data is gathered by on Unmanned Aerial Vehicle
    (UAV) sensors and cameras in a field of rice and relayed to the edge where subsurface
    soil sensors process it. Fig. 1 System architecture Full size image Fig. 2 Product
    over view Full size image Layer-2: The Edge Computing Layer is included in Layer
    2. There are several edge nodes in this. Depending on the particular smart agriculture
    system, different nodes may be present. Here, layer-1 data is processed, filtered
    and encrypted. Due of resource constraints at the edge layer the prognostic and
    solution components were previously completed at the following layer. Trained
    machine learning models can perform prognostics and provide suggestions at this
    layer, nevertheless thanks to recent hardware advancements and initiatives for
    AI at the edge. However if the task requires a lot of resources or is not time-sensitive,
    prognosis and inference can both be done in the following layer. For instance
    the ESP8266 for integrating smart agricultural components to manage environmental
    conditions [25] and the ESP32 for smart irrigation [26]. Layer-3: The third or
    uppermost layer in the bottom-up design of the smart agriculture system is cloud
    computing. This virtual layer is often located in data centres and is accessible
    via the Internet from any location in the world [27]. Massive amounts of data
    generated by cameras or sensors in agricultural farms are required. 4 Data 4.1
    Satellite data The seven bands of MODIS are used to measure surface reflectance.
    Blue wavelengths between 459 and 479 nm, green between 545 and 565 nm, red between
    620 and 670 nm, near-infrared between 841 and 875 nm, and short-wave infrared
    between 1628 and 2155 nm, are used to examine vegetation and land surfaces. For
    monitoring the vegetation at a continental scale [30] using the Terra platform''s
    MODIS 500-m resolution and 8-day surface reflectance. Scientific Data Set documentation
    for MOD09A1 [31] is given. The study also included secondary data in addition
    to the original data set, which came from MODIS time-series data as shown in Fig.
    3a Fig. 3 a Rainfall fluctuations over time in different irrigated agricultural
    areas in Tamil Nadu. b Tamil Nadu agricultural land classification, by source,
    with major river basins Full size image 4.2 River basins and their irrigated area
    There are 40,000 tanks, 1 million wells, and 61 large reservoirs that rely extensively
    (17.5 BCM) on surface water. Surface irrigation is not as important as ground
    water irrigation (15. 3 BCM). Table 2 provides information on the basin''s irrigation
    condition for 39 years, from 1976 to 2014, together with 54 years'' worth of rainfall
    data, from 1961 to 2014 shown in Fig. 3b also. At the sub-national level, which
    is similar to a state, county or district, statistics on the total amount of irrigated
    agriculture and irrigated area of the country were gathered. The Department of
    Economics and Statistics of the Tamil Nadu government provided data on irrigated
    areas. Daily rainfall data from 2000 to 2014 were collected from the India Meteorological
    Department''s (IMD) Hydro Met Division website at http://imd.gov.in. The monsoon
    was the subject of our investigation. We focused our research on the monsoon season
    (kharif season) from May to December because all the agricultural activities are
    done during this season and image analysis also carried out for that season. Table
    2 Characteristics of the major river basins Full size table 4.3 Spectral matching
    techniques for identifying changes in irrigated area using NDVI The NDVI, which
    is a combination of near infrared and red bands, is frequently used to discern
    vegetation conditions such as density and vigour. NDVI values range from − 1 to + 1,
    with higher values indicating more vigorous vegetation and lower values indicating
    less vigorous vegetation. The total area irrigated from 2000–2001 to 2014–2015
    and the annual irrigated area differ significantly. The change in the irrigated
    area was discovered using spectral matching techniques. The highest mean NDVI
    value in Tamil Nadu was 0.79 during the kharif season. From this result along
    with the micro climate analysis (Temperature, Air quality index and Humidity)
    suggest the right crop for the season. 4.4 Crop management Crop management is
    the process of evaluating the sociological, ecological and economic factors that
    play a significant role in the choice, growing and selling of crops. Cropping
    patterns are influenced by crop growth, the availability of water resources, labour,
    insurance, and environmental conditions using MODIS satellite and AI. Cropping
    patterns might change according to ecological variables. For instance traditional
    crops like paddy agriculture, which require extensive water resources, cannot
    be supported in places with diminishing water supplies and groundwater tables.
    Crop choice is also influenced by the agricultural product''s market as well as
    the export and import regulations of other nations. 4.5 Soil monitoring In the
    overall farming process, soil moisture is crucial. During the course of a plant’s
    growth, it is in charge of photosynthesis, respiration, transpiration and the
    transfer of minerals [30]. In making decisions for farms, soil monitoring is crucial.
    Cropping patterns are influenced by a number of variables, including soil salinity,
    pests, precipitation, pH, and humidity. These elements support the evaluation
    of soil health. Field-based sensors track the temperature and humidity of the
    soil, and the cloud receives through LoRa Transmitter and the process the data.
    Farmers will be informed about a variety of issues, and planting patterns are
    evaluated and chosen depending on salinity content, soil nutrient level, humidity,
    and temperature. A wide range of topics will be discussed with farmers, and planting
    patterns will be considered and selected based on factors like salinity content,
    soil nutrient level, humidity, and temperature. Water is essential for photosynthesis,
    regulates temperature, and transports food and nutrients for plant growth, making
    soil moisture a crucial element in plant growth. Humidity controls the food supply
    and transpiration rate for ideal plant growth. A humidity of 50% to 60% is ideal
    for the growth of vegetable plants [32]. To ensure the best possible use of water
    resources, soil moisture sensors are inserted into plant roots and analyse soil
    moisture level measurements [33, 34]. 4.6 Smart irrigation Smart irrigation is
    the practise of enhancing the quality and quantity of production while making
    the most use of available water resources. By giving the plants the right amount
    of water, it saves water. Irrigation systems can be classified as either soil
    moisture sensor-based or weather-based. A controller controls the irrigation in
    weather-based irrigation systems, which collect temperature and rainfall data
    from a nearby small weather station. In irrigation systems using soil moisture
    sensors, sensors buried in tree grass provide precise measurements of the soil''s
    moisture content. In order to irrigate the field with this sort of irrigation,
    precise humidity and air temperature measurements, weather monitoring, and cropping
    patterns are all necessary with AI. Sprinkler actuators and data are delivered
    to the cloud together [35]. The data from the soil moisture sensor determine the
    irrigation schedule for each farm area. Maximum crop growth and 100% water utilisation
    efficiency are guaranteed by micro level analysis, scheduling, and effective actuation
    [36]. From a mobile application built for smart phones, farmers can monitor and
    may control the irrigation system. This irrigation system is based on information
    collected from field-installed temperature, humidity, soil moisture, and ultrasonic
    sensors [37]. Farmers can execute actuation by turning on the irrigation pumps
    to water the farm using a user-friendly mobile application that is built for smart
    phones and connected to the cloud for analysis. 4.7 Plant growth monitoring The
    key step after selecting a crop is crop cultivation. Modern technology is available
    to farmers and sensors installed in the field monitor plant growth. For instance,
    ultrasonic sensors. For instance, to track the presence of insects and pests that
    hinder plant growth, ultrasonic sensors are deployed in the field. When pests
    are found, high frequency sound waves are produced to eliminate them, and the
    farmer is also made aware of their presence for additional assistance [31]. 5
    Methodology and implementation Applied Machine Learning and Artificial Intelligence
    Machine intelligence that resembles human intelligence is known as artificial
    intelligence. Many industries, including e-commerce and marketing [38], human
    resources [39], computer vision [40], multimedia forensics [41, 42], healthcare
    [43], social media [44, 45], gaming [46, 47] and agriculture have showed great
    potential as a result of advancements in AI and ML. In agriculture, artificial
    intelligence (AI) is used to improve productivity, crop yield, and profitability
    as well as to track livestock, monitor the weather, optimise supply chains, manage
    irrigation systems, manage pesticide and fertiliser use, and control weeds. Researchers
    are using fuzzy logic, other AI/ML techniques like classification and logistic
    regression, as well as Neuro-Fuzzy logic, to improve agricultural decision-making,
    predictive analytics, and mobile expert systems [48]. Real-time monitoring of
    the environment in agricultural areas is made possible by integrating sensors
    with a microcontroller unit. The system can identify the presence of pests or
    unusual variables linked to pest attacks by deploying sensors like temperature,
    humidity and pest-specific sensors. Early identification is made possible by this
    allowing farmers to act right away and minimise any crop damage. The system may
    analyse sensor data and detect certain pest species or patterns linked to pest
    infestations by incorporating AI algorithms. The accuracy of pest identification
    can be increased over time by using AI models that have been taught to detect
    pests. The manual effort needed for pest monitoring is decreased thanks to this
    automated identification procedure which also provides prompt and precise detection.
    By utilizing LoRa the system can transmit data even in areas with poor or no network
    coverage. This is particularly valuable in rural or remote agricultural locations
    where traditional network connectivity may be limited. The agricultural system
    can transmit pest detection data via LoRa to a central server or cloud platform.
    Using LoRa technology alerts can be sent to the farmer’s mobile device as soon
    as the system detects and identifies a pest attack. These notices may contain
    details on the individual pest the intensity of the attack and suggested pest
    control measures. This makes it possible for farmers to act quickly and protect
    their crops no matter where they are. Farmers can keep informed and make informed
    decisions wherever they are thanks to remote accessibility via mobile alerts.
    According to the Indian Council of Agricultural Research, pests lose between 30
    and 35 percent of India''s annual agricultural yield. By applying cutting edge
    AI solutions to this issue there is a tremendous possibility to raise our yield.
    Early pest detection allows for the use of appropriate and less-excessive pesticides
    to protect the crop, increasing crop output. Three steps make up the Process Flow
    module: Data gathering, Keras-RetinaNet-based pest detection and Pest attack density
    detection as shown in Fig. 4 Fig. 4 AI process flow for pest detection Full size
    image 5.1 Training the model We utilised a Keras-RetinaNet model to identify pest
    photos because deep learning for visual identification is becoming increasingly
    successful. Keras-RetinaNet With ResNet + FPN as the backbone for feature extraction
    and two task-specific subnetworks for classification and bounding box regression,
    Keras-RetinaNet, developed by Facebook AI Research (FAIR), achieves state-of-the-art
    performance and outperforms Faster RCNN, the well-known two-stage detector [49].
    Recent studies have shown that adopting pre-trained networks and applying them
    to other datasets significantly improves performance compared to developing new
    models from scratch. This was made possible by the models’ capacity to discover
    general features applicable to a variety of computer vision tasks. On the COCO
    dataset, we used a pre-trained model with a ResNet50 backbone, and we trained
    it using our own data. To train our model, we utilised the weights “resnet50_coco_best_v2.1.0.h5”.
    We have tested a number of models throughout the course of this project and updated
    them as we discovered models that performed better. 5.2 Features Pest Detection:
    Detects pests through Keras-RetinaNet object detection model. (As explained above)
    Pest affect Density: The amount of pests found in each image is counted by the
    model. It serves as a criterion to determine how much damage has already been
    done and provides an estimate of how many pests are present on a leaf. The sensors
    and AI will begin to function according to the power supply given to the Arduino
    board in the proposed approach. A soil moisture sensor coupled to a microcontroller
    unit delivers the corresponding readings on a periodic basis, and the DHT11 sensor
    detects the temperature and humidity in the crop roots on the other end. An air
    index sensor is also used to determine the air index. The microcontroller unit''s
    primary goal is to get the data values sent by the sensors and ESP32, which was
    configured to save the data in the cloud. These values are shown on the LCD screen
    by the data that is delivered to the microcontroller. For timely irrigation, which
    supplies the necessary amount of water to the receptive crops according to the
    stages, a Direct Current (DC) Pump and a Microcontroller are employed. If the
    Arduino is turned on and all the sensors are controlled by Arduino, then all of
    the aforementioned sensors will start working at once. The Raspberry PI, AI, and
    camera that are housed in the other portion of the gadget are utilised to detect
    both pest and disease attacks. The farmer is informed if the camera detects the
    insect attack. We also offer a fertiliser calculator to help you determine how
    much fertiliser is necessary for each crop in order to control insect attacks.
    Therefore, farmers may apply the proper amount of fertilisers to the crops using
    our fertiliser calculator. We now offer a mobile application that allows you to
    examine real-time farm data in addition to the fertiliser calculator feature.
    Our mobile application pulls data from the cloud and displays it in accordance
    with what farmers are asking for. Micro climate analysis, harnessed through AI
    algorithms, offers a data-driven approach to optimize crop selection. Through
    continuous monitoring of temperature, air quality index, and humidity, AI employs
    decision trees algorithm to correlate environmental variables with crop preferences.
    For instance, decision trees analyze historical and real-time data to identify
    temperature thresholds where specific crops flourish, ensuring ideal growing conditions.
    Air quality insights guide choices, as AI recognizes crops resilient to pollutants
    or sensitive to air composition changes. Humidity data guides water-intensive
    crop selection in suitable conditions. Additionally, AI can perform clustering
    analysis, grouping areas with similar micro climates, enabling regional-specific
    crop recommendations. AI''s adaptive learning capabilities fine-tune crop recommendations
    over time, enhancing accuracy with each season’s data. 5.3 Implementing a fertilizer
    calculator with AI involves several steps 1. Collect data on crop types, soil
    characteristics, growth stages, and historical pest incidents. 2. Apply regression
    algorithms to analyze this data, correlating nutrient levels with pest occurrences.
    3. Train the AI model using historical data to predict optimal nutrient requirements
    based on crop and soil conditions. Incorporate real-time data such as weather
    forecasts and pest population trends to dynamically adjust recommendations. 4.
    Create a user-friendly Mobile App interface where farmers input crop details and
    receive AI-generated fertiliser suggestions. Integrate data from IoT devices and
    sensors for accurate, up-to-date information. 5. Regularly update and refine the
    AI model with new data to improve accuracy. 6 Results Framework of proposed work
    is variety of environmental factors including temperature, humidity, soil moisture
    and nutrient is defined. Next, select and fabricate the necessary hardware components,
    including sensors and IoT devices. Then, set up data collection and management,
    ensuring secure storage and preprocessing. Develop AI models for real-time analysis
    and visualization of data, enabling actionable insights for farmers. According
    to the suggested algorithm as depicted in Fig. 2, the sensors will start operating
    in accordance with the power supply provided to the Arduino board. The microcontroller
    unit and the soil moisture sensor are both interfaced, and the microcontroller
    unit periodically receives the corresponding readings from the soil moisture sensor.
    Along with the temperature and humidity of the microenvironment detected by the
    temperature sensor, the air index is also monitored using an air index sensor
    and NDVI time series data from MODIS Satellite for adapting the new cropping pattern.
    The main objective of the microcontroller unit is to receive the data values transmitted
    by the sensors and the LoRa transmitter, which is set up to save the data in the
    cloud. The microcontroller receives the data from the LoRa receiver and displays
    the information in the LCD screen. For timely irrigation, which supplies the necessary
    amount of water to the receptive crops according to the stages, a DC Pump and
    a Microcontroller are employed. If the Arduino is turned on and all the sensors
    are controlled by Arduino, then all of the aforementioned sensors will start working
    at once. The Raspberry PI, AI and camera that are located in the other portion
    of the gadget are utilised to detect both insect and disease attacks. The farmer
    is informed if the camera detects the insect attack. We also offer a fertiliser
    calculator to help you determine how much fertiliser is necessary for each crop
    in order to control pest attacks. So, according to our fertilizer calculator farmers
    can feed the correct quantity of fertilizers to the crops. Along with fertilizer
    calculator facility we also provide Mobile Application to view the live data of
    the farm. Our mobile application retrieves data from the cloud and shows it in
    accordance with what farmers are asking for (multilingual). Google Firebase, where
    the database is located and the web server is hosted on Apache Web Server, receives
    the data. Figures 5, 6, 7, 8, 9, 10 and 11 display the entire prototype output
    screenshot of Mobile Application. Fig. 5 Output of micro climate analysis humidity
    Full size image Fig. 6 Output of micro climate analysis temperature Full size
    image Fig. 7 Output of micro climate analysis air quality Full size image Fig.
    8 Output of soil nutrients—nitrogen value Full size image Fig. 9 Output of soil
    nutrients—potassium value Full size image Fig. 10 Output of soil nutrients—phosperous
    value Full size image Fig. 11 Output of pest attack identification Full size image
    7 Conclusion Technology advancements and the meteoric expansion of ICT have transformed
    traditional agriculture into a smart, intelligent, automated agriculture. Smart
    agriculture reduces its carbon footprint by implementing sustainable, green farming,
    limiting the use of pesticides and fertilisers, and increasing the use of natural
    resources. As was already said, smart agriculture has various challenges. To get
    around these challenges, both new and old technologies must be used. In this work,
    cloud-based AI models for smart agriculture are used. The use of advanced microcontrollers
    in hardware has expedited the shift in computing paradigm. Giving IoT devices
    intelligence is the most recent development. LoRa technology enables network accessibility.
    If the sensor data exceeds a predetermined threshold value, the microcontroller
    unit continuously examines the sensor data using AI and sends an alarm SMS to
    the mobile phone of an owner who is in a faraway place. The relevant data obtained
    from measuring the DHT11 sensor''s varied readings in a range of climatic conditions
    are used to determine the threshold value. By employing WSN nodes like LoRa for
    data transmission and database systems for local data storage, this system can
    be improved. Technology advancements and the meteoric emergence of AI have transformed
    traditional agriculture into a smart, intelligent, automated agriculture. Smart
    agriculture reduces its carbon footprint by implementing sustainable, green farming,
    limiting the use of pesticides and fertilisers, and increasing the use of natural
    resources. The agricultural industry will soon include Agriculture 5.0 [48]. By
    doing this, the system''s sustainability will be preserved as yields rise. Both
    industrialised and developing countries will follow a similar trend. From an economic
    and environmental standpoint, humanity will embrace efficient food production
    and delivery more than ever [50]. Future work of the work should prioritize sensor
    technology advancements, enhancing AI models for precision agriculture, optimizing
    energy efficiency, expanding user-friendly interfaces, promoting scalability and
    cost-efficiency. These efforts will contribute to more accurate data collection,
    better decision-making for farmers, sustainable IoT implementations, improved
    accessibility, and wider adoption of this technology, ultimately fostering increased
    agricultural productivity and sustainability. References World Health Organization
    (2019) The state of food security and nutrition in the world: safeguarding against
    economic slowdowns and downturns. FAO, Rome Google Scholar   Wunderlich SM, Martinez
    NM (2018) Conserving natural resources through food loss reduction: production
    and consumption stages of the food supply chain. Int Soil Water Conserv Res 6:331–339
    Article   Google Scholar   Press Information Bureau Government of India Ministry
    of Finance 31-January-2022 “Despite COVID-19 shock agriculture sector grows at
    3.9% in 2021–22 and 3.6% in 2020–21 Gumma MK, Kajisa K, Mohammed IA, Whitbread
    AM, Nelson A, Rala A, Palanisami K (2015) Temporal change in land use by irrigation
    source in Tamil Nadu and management implications. Environ Monit Assess 187:4155.
    https://doi.org/10.1007/s10661-014-4155-1 Article   Google Scholar   Reynolds
    TW, Waddington SR, Anderson CL, Chew A, True Z, Cullen A (2015) Environmental
    impacts and constraints associated with the production of major food crops in
    Sub-Saharan Africa and South Asia. Food Secur 7:795–822 Article   Google Scholar   Rajendranath
    UNVP, Hency VB (2015) Implementation of an automated irrigation system smart irrigation
    system. In: IEEE sponsored 2nd international conference on innovations in information,
    embedded and communication systems Metclfe DS, Elkins DM (1980) Crop production:
    principles and practices. Macmillan Publishing Co., Inc., New York Google Scholar   Oldfield
    EE, Bradford MA, Wood SA (2019) Global meta-analysis of the relationship between
    soil, organic matter and crop yields. Soil 5:15–32. https://doi.org/10.5194/soil-5-15-2019
    Article   Google Scholar   Allen P, Van Dusen D (1988) Sustainable agriculture:
    choosing the future. In: Appen P, Van Dusen D (eds) Global perspectives on agro-ecology
    and sustainable agricultural systems. University of California, Santa Cruz, pp
    1–14 Google Scholar   Godfray HCJ, Beddington JR, Crute IR, Haddad L, Lawrence
    D, Muir JF et al (2010) Food security: the challenge of feeding 9 billion people.
    Science 327:812–818. https://doi.org/10.1126/science.1185383 Article   Google
    Scholar   Foley JA, Ramankutty N, Brauman KA, Cassidy ES, Gerber JS, Johnston
    M et al (2011) Solutions for a cultivated planet. Nature 478:337–342. https://doi.org/10.1038/nature10452
    Article   Google Scholar   Mueller ND, Gerber JS, Johnston M, Ray DK, Ramankutty
    N, Foley JA (2012) Closing yield gaps through nutrient and water management. Nature
    490:254–257. https://doi.org/10.1038/nature11420 Article   Google Scholar   Wang
    C-H (2014) Farming methods effects on the soil fertility and crop productionn
    under a rice—vegetables cropping sequences. J Plant Nutr 37:1498–1513. https://doi.org/10.1080/01904167.2014.881876
    Article   Google Scholar   Lin J, Yu W, Zhang N, Yang X, Zhang H, Zhao W (2017)
    A survey on Internet of Things: architecture enabling technologies security and
    privacy and applications. IEEE Internet Things J 4(5):1125–1142 Article   Google
    Scholar   Hi X, An X, Zhao Q, Liu H, Xia L, Sun X et al (2019) State-of-the-art
    Internet of Things in protected agriculture. Sensors 19(8):1833 Article   Google
    Scholar   Elijah O, Rahman TA, Orikumhi I, Leow CY, Hindia MN (2018) An overview
    of Internet of Things (IoT) and data analytics in agriculture: benefits and challenges.
    IEEE Internet Things J 5(5):3758–3773 Article   Google Scholar   Tzounis A, Katsoulas
    N, Bartzanas T, Kittas C (2017) Internet of Things in agriculture recent advances
    and future challenges. Biosyst Eng 164:31–48 Article   Google Scholar   Vågen
    T-G, Winowiecki LA, Tondoh JE, Desta LT, Gumbricht T (2016) Mapping of soil properties
    and land degradation risk in Africa using MODIS reflectance. Geoderma 263:216–225
    Article   Google Scholar   Khoa TA, Man MM, Nguyen T-Y, Nguyen VD, Nam NH (2019)
    Smart agriculture using IoT multi-sensors: a novel watering management system.
    J Sens Actuator Netw 8(3):45 Article   Google Scholar   Biswas SB, Iqbal MT (2018)
    Solar water pumping system control using a low cost ESP32 microcontroller. In:
    Proceedings of IEEE Canadian conference on electrical & computer engineering (CCECE).
    IEEE, pp 1–5 Gupta M, Abdelsalam M, Khorsandroo S, Mittal S (2020) Security and
    privacy in smart farming: challenges and opportunities. IEEE Access 8:34564–34584.
    https://doi.org/10.1109/ACCESS.2020.2975142 Article   Google Scholar   Muangprathub
    J, Boonnam N, Kajornkasirat S, Lekbangpong N, Wanichsombat A, Nillaor P (2019)
    IoT and agriculture data analysis for smart farm. Comput Electron Agric 156:467–474
    Article   Google Scholar   Haseeb K, Ud Din I, Almogren A, Islam N (2020) An energy
    efficient and secure IoT-based WSN framework: an application to smart agriculture.
    Sensors 20(7):2081 Article   Google Scholar   Sushanth G, Sujatha S (2018) IOT
    based smart agriculture system. In: 2018 International conference on wireless
    communications, signal processing and networking (WiSPNET). IEEE, pp 1–4 Araby
    AA, Abd Elhameed MM, Magdy NM, Abdelaal N, Abd Allah YT, Darweesh MS, Fahim MA,
    Mostafa H (2019) Smart IoT monitoring system for agriculture with predictive analysis.
    In 2019 8th international conference on modern circuits and systems technologies
    (MOCAST). IEEE, pp 1–4 Kajol R, Kashyap AK (2018) Automated agricultural field
    analysis and monitoring system using IoT. Int J Inf Eng Electron Bus 10(2):17
    Google Scholar   Vanaja KJ, Suresh A, Srilatha S, Kumar KV, Bharath M (2018) IOT
    based agriculture system using node MCU. Int Res J Eng Technol 5(3):3025–3028
    Google Scholar   Swain M, Zimon D, Singh R, Hashmi MF, Rashid M, Hakak S (2021)
    LoRa-LBO: an experimental analysis of LoRa link budget optimization in custom
    build IoT test bed for agriculture 4.0. Agronomy 11:820 Article   Google Scholar   Yao-lin
    Z, Gao-qiang Z, Lei Z, Jin X (2011) Design of wireless multi-point temperature
    transmission system based on nRF24l01. In: 2011 international conference on business
    management and electronic information. IEEE. https://doi.org/10.1109/icbmei.2011.5920375
    Thenkabail PS, Schull M, Turral H (2005) Ganges and Indus river basin land use/land
    cover (LULC) and irrigated area mapping using continuous streams of MODIS data.
    Remote Sens Environ 95(3):317–341 Article   Google Scholar   Vitali G, Francia
    M, Golfarelli M, Canavari M (2021) Crop management with the IoT: An interdisciplinary
    survey. Agronomy 11(1):181. https://doi.org/10.3390/agronomy11010181 Article   Google
    Scholar   Balakrishna K, Nethravathi SN, Harshitha K (2016) Real-time soil monitoring
    system for the application of agriculture. Int J Eng Sci Comput 6(5):2016 Google
    Scholar   Ma Z, Pan X (2012) Agricultural environment information collection system
    based on wireless sensor network. In: 2012 IEEE global high tech congress on electronics,
    pp 24–28 Radha N, Swathika R (2021) A polyhouse: plant monitoring and diseases
    detection using CNN. In: Proceedings of international conference on artificial
    intelligence and smart systems (ICAIS), pp 966–971. https://doi.org/10.1109/ICAIS50930.2021.9395847
    Kanchana S (2018) IoT in agriculture: smart farming. Int J Sci Res Comput Sci
    Eng Inf Technol 3:181–184. https://doi.org/10.32628/cseit183856 Article   Google
    Scholar   Nagothu SK (2016) Weather based smart watering system using soil sensor
    and GSM. In: Proceedings of world conference on futuristic trends in research
    and innovation for social welfare (startup conclave), pp 1–3. https://doi.org/10.1109/STARTUP.2016.7583991
    Ogidan OK, Afia KR (2019) Smart irrigation system with an androidbased remote
    logging and control. In: Proceedings of IEEE AFRICON. IEEE. https://doi.org/10.1109/africon46755.2019.9133953
    Soni VD (2020) Emerging roles of artificial intelligence in ecommerce. Int J Trend
    Sci Res Dev 4(5):223–225 Google Scholar   Strohmeier S, Piazza F (2015) Artificial
    intelligence techniques in human resource management—a conceptual exploration.
    In: Kahraman C, Onar SC (eds) Intelligent techniques in engineering management.
    Springer, pp 149–172 Mitra A, Mohanty SP, Corcoran P, Kougianos E (2021) Detection
    of deep-morphed deepfake images to make robust automatic facial recognition systems.
    In: Proceedings of the 19th OITS international conference on information technology
    (OCIT) Mitra A, Mohanty SP, Corcoran P, Kougianos E (2021) EasyDeep: an IoT friendly
    robust detection method for GAN generated deepfake images in socialmedia. In:
    Proceedings of the 4th FIP international Internet of Things (IoT) conference (IFIP-IoT)
    Mitra A, Mohanty SP, Corcoran P, Kougianos E (2021) iFace: a deepfake resilient
    digital identification framework for smart cities. In: Proceedings of IEEE international
    symposium on smart electronic systems (iSES) (formerly iNiS), 2021, Accepted,
    In Press. 36 everything you wanted to know about smart agriculture A PREPRINT
    Jiang F, Jiang Y, Zhi H, Dong Y, Li H, Ma S, Wang Y, Dong Q, Shen H, Wang Y (2017)
    Artificial intelligence in healthcare: past, present and future. Stroke Vasc Neurol
    2(4):230–243 Mitra A, Mohanty SP, Corcoran P, Kougianos E (2020) A novel machine
    learning based method for deepfake video detection in social media. In: Proceedings
    of IEEE international symposium on smart electronic systems (iSES) (formerly iNiS),
    pp 91–96. https://doi.org/10.1109/iSES50453.2020.00031 Mitra A, Mohanty SP, Corcoran
    P, Kougianos E (2021) A machine learning based approach for deepfake detection
    in social media through key video frame extraction. SN Comput Sci 2(2):98. https://doi.org/10.1007/s42979-021-00495-x
    Article   Google Scholar   Palaus M, Marron EM, Viejo-Sobera R, Redolar-Ripoll
    D (2017) Neural basis of video gaming: a systematic review. Front Hum Neurosci
    11:248 Article   Google Scholar   Skinner G, Walmsley T (2019) Artificial intelligence
    and deep learning in video games a brief review. In: Proceedings of IEEE 4th international
    conference on computer and communication systems (ICCCS), pp 404–408. https://doi.org/10.1109/CCOMS.2019.8821783
    Saiz-Rubio V, Rovira-Más F (2020) From smart farming towards agriculture 5.0:
    a review on crop data management. Agronomy 10(2):207 Article   Google Scholar   Rahutomo
    R, Perbangsa AS, Lie Y, Cenggoro TW, Pardamean B (2019) Artificial intelligence
    model implementation in web-based application for pineapple object counting. In:
    International conference on information management and technology (ICIMTech),
    pp 19–21 Fraser EDG, Campbell M (2019) Agriculture 5.0: reconciling production
    with planetary health. One Earth 1(3):278–280 Article   Google Scholar   Download
    references Funding The authors have not disclosed any funding. Author information
    Author notes Praveen Kumar Balachandran Present address: Department of EEE, Vardhaman
    College of Engineering, Hyderabad, TS, 501218, India Authors and Affiliations
    Department of Physics, Gnanamani College of Technology, Namakkal, Tamil Nadu,
    India P. Indira & I. Sheik Arafat Department of ECE, Vel Tech Rangarajan Dr. Sagunthala
    R&D Institute of Science and Technology, Chennai, Tamil Nadu, India I. Sheik Arafat
    Department of CSE (AI&ML), Vardhaman College of Engineering, Hyderabad, India
    R. Karthikeyan Department of CSE, Kebri Dehar University, Kebri Dehar, Somali,
    Ethiopia Shitharth Selvarajan School of Built Environment, Engineering and Computing,
    Leeds Beckett University, LS1 3HE, Leeds, U.K. Shitharth Selvarajan Contributions
    Data curation, I.S.A and R.K.K and P.K.B.; Formal analysis, S.S. and P.I; Funding
    acquisition, P.I and P.K.B.; Methodology, I.S.A. and S.S.; Project administration,
    P.K.B.; Resources, I.S.A, and P.I. ; Supervision, S.S.; Writing–original draft,
    R.K.K and P.I. All authors have read and agreed to the published version of the
    manuscript. Corresponding author Correspondence to Shitharth Selvarajan. Ethics
    declarations Conflict of interest The authors have not disclosed any competing
    interests. Additional information Publisher''s Note Springer Nature remains neutral
    with regard to jurisdictional claims in published maps and institutional affiliations.
    Rights and permissions Open Access This article is licensed under a Creative Commons
    Attribution 4.0 International License, which permits use, sharing, adaptation,
    distribution and reproduction in any medium or format, as long as you give appropriate
    credit to the original author(s) and the source, provide a link to the Creative
    Commons licence, and indicate if changes were made. The images or other third
    party material in this article are included in the article''s Creative Commons
    licence, unless indicated otherwise in a credit line to the material. If material
    is not included in the article''s Creative Commons licence and your intended use
    is not permitted by statutory regulation or exceeds the permitted use, you will
    need to obtain permission directly from the copyright holder. To view a copy of
    this licence, visit http://creativecommons.org/licenses/by/4.0/. Reprints and
    permissions About this article Cite this article Indira, P., Arafat, I.S., Karthikeyan,
    R. et al. Fabrication and investigation of agricultural monitoring system with
    IoT & AI. SN Appl. Sci. 5, 322 (2023). https://doi.org/10.1007/s42452-023-05526-1
    Download citation Received 01 June 2023 Accepted 16 October 2023 Published 09
    November 2023 DOI https://doi.org/10.1007/s42452-023-05526-1 Share this article
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Keywords AI LoRa IoT Sensors MODIS satellite Use our pre-submission checklist
    Avoid common mistakes on your manuscript. Associated Content Part of a collection:
    Engineering: AI and IoT in Agriculture: Advances and Applications Sections Figures
    References Abstract Introduction Literature review System architecture Data Methodology
    and implementation Results Conclusion References Funding Author information Ethics
    declarations Additional information Rights and permissions About this article
    Advertisement Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.222 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: null
  journal: SN Applied Sciences
  limitations: null
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Fabrication and investigation of agricultural monitoring system with IoT
    &amp; AI
  verbatim_quote1: Artificial intelligence (AI) can be used in a variety of fields
    and has the potential to alter how we currently view farming. Due to its emphasis
    on effectiveness and usability artificial intelligence has the largest impact
    on agriculture of all industries.
  verbatim_quote2: The seamless data transmission and communication made possible
    by these sensors’ integration with Internet of Things technologies.
  verbatim_quote3: '>'
- analysis: 'The document describes a method of using sensors and a fuzzy logic controller
    to make irrigation decisions based on data on soil moisture, ambient temperature,
    solar irradiance, and rainfall. The system is connected to an IoT platform for
    users to monitor system and data remotely. Results from field experiments show
    significant reduction in energy and water usage compared to traditional methods.
    The system could be implemented with any irrigation installation without major
    modifications.


    The specific point of interest for this review is the type of data used to inform
    irrigation decisions, i.e., soil moisture, ambient temperature, solar irradiance,
    and rainfall. For this point, the paper provides:


    1. **verbatim_quote1**: "The proposed system uses the collected data from the
    sensors unit to provide the optimal irrigation decision and communicates it with
    the operator (farmer) via a developed IoT platform. Data from soil moisture, ambient
    temperature, solar irradiance, and rainfall sensors are processed through the
    FL controller to adjust the irrigation times."

    2. **verbatim_quote2**: "The field experimentation of the developed SPIS in the
    eastern region of Morocco shows high efficiency and reliability by saving water
    and energy compared to traditional irrigation control."

    3. **verbatim_quote3**: "The proposed system, with remote data monitoring, promotes
    better management of irrigation, water, and energy consumption, and it is suitable
    to be mounted with any type of irrigation installation in the field, without extensive
    modifications."'
  authors:
  - Benzaouia M.
  - Hajji B.
  - Mellit A.
  - Rabhi A.
  citation_count: '0'
  description: Adopting and developing sustainable precision irrigation systems allows
    for improving productivity, reducing water and energy losses in agricultural fields.
    This paper deals with the development and real-time implementation of a smart
    precision irrigation system (SPIS). The proposed system combines two irrigation
    approaches, processed by a feedback fuzzy logic (FL) controller, and long-range
    data transmission and monitoring via the LoRa protocol. The combined approaches
    not only enhance overall performance but also address several limitations commonly
    associated with existing approaches. The proposed system uses the collected data
    from the sensors unit to provide the optimal irrigation decision and communicates
    it with the operator (farmer) via a developed IoT platform. Data from soil moisture,
    ambient temperature, solar irradiance, and rainfall sensors are processed through
    the FL controller to adjust the irrigation times. The inputs and outputs are fuzzified
    by trapezoidal and triangular membership functions. Mamdani's fuzzy inference
    is used to control the system through a set of linguistic control rules for a
    more accurate decision for each scenario. The field experimentation of the developed
    SPIS in the eastern region of Morocco shows high efficiency and reliability by
    saving water and energy compared to traditional irrigation control. The proposed
    system, with remote data monitoring, promotes better management of irrigation,
    water, and energy consumption, and it is suitable to be mounted with any type
    of irrigation installation in the field, without extensive modifications.
  doi: 10.1016/j.compag.2023.108407
  full_citation: Fuzzy-IoT smart irrigation system for precision scheduling and monitoring
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Design and control of
    the proposed irrigation system 3. Operating steps of the proposed irrigation system
    4. Software and hardware implementation 5. Experimental performance evaluation
    6. Conclusion CRediT authorship contribution statement Declaration of Competing
    Interest Acknowledgment Data availability References Show full outline Figures
    (17) Show 11 more figures Tables (6) Table 1 Table 2 Table 3 Table 4 Table 5 Table
    6 Computers and Electronics in Agriculture Volume 215, December 2023, 108407 Fuzzy-IoT
    smart irrigation system for precision scheduling and monitoring Author links open
    overlay panel M. Benzaouia a, B. Hajji a, A. Mellit b, A. Rabhi c Show more Add
    to Mendeley Share Cite https://doi.org/10.1016/j.compag.2023.108407 Get rights
    and content Highlights • Smart, sustainable precision irrigation system to prevent
    water and energy losses. • Combined weather-soil irrigation strategies using field
    sensor evaluation and fuzzy logic-optimized control decision. • Long-range IoT
    communication unit using LoRa protocol. Abstract Adopting and developing sustainable
    precision irrigation systems allows for improving productivity, reducing water
    and energy losses in agricultural fields. This paper deals with the development
    and real-time implementation of a smart precision irrigation system (SPIS). The
    proposed system combines two irrigation approaches, processed by a feedback fuzzy
    logic (FL) controller, and long-range data transmission and monitoring via the
    LoRa protocol. The combined approaches not only enhance overall performance but
    also address several limitations commonly associated with existing approaches.
    The proposed system uses the collected data from the sensors unit to provide the
    optimal irrigation decision and communicates it with the operator (farmer) via
    a developed IoT platform. Data from soil moisture, ambient temperature, solar
    irradiance, and rainfall sensors are processed through the FL controller to adjust
    the irrigation times. The inputs and outputs are fuzzified by trapezoidal and
    triangular membership functions. Mamdani''s fuzzy inference is used to control
    the system through a set of linguistic control rules for a more accurate decision
    for each scenario. The field experimentation of the developed SPIS in the eastern
    region of Morocco shows high efficiency and reliability by saving water and energy
    compared to traditional irrigation control. The proposed system, with remote data
    monitoring, promotes better management of irrigation, water, and energy consumption,
    and it is suitable to be mounted with any type of irrigation installation in the
    field, without extensive modifications. Previous article in issue Next article
    in issue Keywords Precision irrigationSensorsIoTLoRaFuzzy logicWater savingEnergy
    saving 1. Introduction Agriculture is considered a key issue of national development
    due to the important economic, social, and territorial stakes of this sector (Knox
    et al., 2012). In Morocco, agriculture is the first contributor to the gross domestic
    product (GDP) with a variation of 11 % to 18 %, which is mainly influenced by
    climatic conditions. Moreover, Moroccan agriculture employs nearly half of the
    active population and provides 23 % of the nation''s exports1. In 2022–2023, water
    scarcity in Morocco is considered a major concern as water reserves have been
    reduced by 59 %, which exposes them to spatial and temporal irregularity issues.
    Fig. 1 (a) shows the rainfall deficit percentage and Fig. 1 (b) shows the drought
    index of January 2023 in Moroccan regions2. Given the enormous evolution of irrigated
    agricultural areas that consume huge amounts of water, the unpredictability of
    rainfall may lead to increasing and deepening the problem of water availability
    and the failure to meet the irrigation needs of crops, resulting in rising drought
    areas and a decline in agricultural productivity. One of the factors contributing
    to this is the use of permanent alimentation solenoids to activate irrigation
    systems and low performance irrigation approaches (Avşar et al., 2018, Le et al.,
    2020). These solenoids require a continuous power supply, leading to increased
    energy demands. The reliance on such solenoids is prevalent in various agricultural
    processes, including irrigation systems, crop harvesting machinery, and automated
    greenhouse controls. The constant power requirements of these solenoids contribute
    significantly to the overall energy consumption in the agricultural sector, further
    straining the already limited resources. Addressing this issue and exploring alternative
    energy-efficient solutions could mitigate the environmental impact and reduce
    the sector''s overall energy consumption. Download : Download high-res image (466KB)
    Download : Download full-size image Fig. 1. (a) The rainfall deficit percentage
    (%), (b) The drought index of January 2023 of Morocco. For the agricultural areas
    of eastern Morocco, irrigation water and energy losses are generally caused by
    two factors: the first factor is the manual control of the pump and valves in
    the pressurised irrigation system. According to Hamami and Nassereddine, 2020,
    Xie et al., 2022, the inefficiency of these irrigation systems extends beyond
    Morocco and has been observed in other regions as well. The studies highlight
    that these traditional irrigation systems, which rely on manual pump activation,
    contribute to significant losses in irrigation water and energy. These findings
    suggest that the low efficiency of such systems is not limited to a specific geographical
    area but is a widespread issue that affects multiple agricultural regions (Kumar
    et al., 2023). In those cases, farmers use their prior knowledge of crop response,
    or by observing leaf stress, to determine the duration of irrigation. This technique
    cannot be relied upon since it does not reflect the actual water needs of the
    plants, which are related to the growth stage and weather conditions (Jaafar et
    al., 2021). On the other hand, the second factor is the losses due to the process
    in which irrigation water is released into the atmosphere as vapor, caused mainly
    by the high temperature and solar irradiance rates. This factor can be solved
    by using drip irrigation methods, but it is also necessary to adopt advanced control
    techniques. The development and design of smart precision irrigation systems and
    mechanisms with the use of IoT technologies for the visualization and monitoring
    of different parameters of agriculture and irrigation is the key solution to managing
    irrigation water resources efficiently and sustainably by delivering the exact
    amount of water required by the crop (Capraro Fuentes et al., 2018). In addition,
    optimizing the energy supplied to operate the various actuators (Qaisar et al.,
    2021, Mellit et al., 2021). Irrigation systems are classified into two categories
    according to their control, open-loop and closed-loop control systems. Open-loop
    control, also called no-feedback control, is a type of controller that generates
    decisions based on the current state, i.e., it has no feedback to determine if
    the assessed input has achieved the desired objective, in our case satisfying
    the crop''s water needs with precision while considering climatic-soil conditions
    (Navarro-Hellín et al., 2016). Therefore, an open-loop irrigation system cannot
    be reliably used to deal with the challenges of precision irrigation. Programmable
    irrigation controller, also called irrigation timers are among the systems based
    on this control technique. The scheduling of the period and duration of the irrigation
    remains constant without knowing the real needs of irrigation in the crop. Closed-loop
    control systems are the most efficient and robust in terms of decision support
    and allow for precision irrigation (Bwambale et al., 2022). The action depends
    on the output provided by the system; the input varies according to the output,
    which produces a more accurate decision. The feedback loop also allows for automatic
    adjustments to be made in real time, which improve the accuracy, stability and
    performance of irrigation decisions. Sensor units are used to provide this feedback
    to the processing unit. According to agriculture experts and scientific research,
    three approaches are distinguished (Abioye et al., 2020, Wang et al., 2020). The
    first approach is based on the measurement of soil moisture, which indicates the
    amounts of water consumed and absorbed by the crop during a period, and then decides
    on the scheduling of future irrigation times by setting a percentage of soil moisture,
    so the irrigation system works until it reaches the set value of moisture (Soulis
    et al., 2015). An intelligent urban irrigation system is discussed in (Mason et
    al., 2019) aiming at decreasing water use without reducing crop yield. The system
    includes a wireless soil moisture sensor network and controllable valves and tested
    in nine climatic regions of the contiguous United States. Tomatoes are chosen
    due to their sensitivity to water stress. The second approach is to control irrigation
    according to the evolution of the meteorological conditions (Kool et al., 2014).
    The measurement of environmental variables in real time such as: air temperature
    and humidity, solar irradiance and wind speed allows estimating the reference
    evapotranspiration level (ET0) (Chiew et al., 1995), which indicates the water
    losses suffered by the plant and the soil (J. Doorenbos et al., 1976). Weather
    stations or IoT-based sensor networks are used to provide such information. In
    (González-Briones et al., 2018), a monitoring system able to collect various data
    on its environment, by sensing temperature, solar irradiance, pH, humidity, and
    wind speed is presented. The objective of this research is to build virtual organizations
    of agents based on several master and slave nodes that are connected to ensure
    data exchange from sensors while monitoring the crops. The development of a platform
    (IoT) with a fibrous capillary irrigation system based on the climatic demand
    estimated by the weather condition was reported by (Abd Rahman et al., 2019).
    The experiment has been conducted using a Choy sum plant as a test crop in a greenhouse.
    Demand tracking, management of the irrigation system, and the use of weather information
    allowed for near real-time estimation of the crop''s water requirements, which
    also allowed the monitoring of the progress of water consumption by the plants.
    The last approach is the survey of the plant evolution parameters, such crop water
    stress index (CWSI), which determine the water needs of the plant, through the
    measurement of canopy temperature. Most irrigation systems are based on simple
    control techniques and algorithms (Davis, and Dukes, 2010; Singh et al., 2023),
    containing a single input or a threshold value to be set by the operator to decide
    on starting or ending the irrigation. The reliability and efficiency of those
    controls’ techniques are limited and unable to reliably schedule irrigation since
    precision irrigation involves the evaluation and processing of multiple inputs.
    Fuzzy logic (FL) is one of the intelligent control techniques that allow to manipulation
    of multiple input variables while taking account of the output action. So, it
    is more suitable for non-linear systems due to its flexibility in data processing
    and it is very effective for decision-making problems that require precision (Zadeh,
    1999). The operation of fuzzy logic has been thoroughly tested in a diverse and
    challenging field (Yahyaoui et al., 2017). It is structured with three main modules,
    a fuzzification module, an inference engine, and a defuzzification module. Mamdani
    and Sugeno are the two popular approaches in FL (Omomule et al., 2020, Shafaei
    et al., 2017), each with its own distinct characteristics. The key difference
    lies in how they handle the fuzzy rule’s consequences. In Mamdani-FL, the output
    membership function is a fuzzy set representing the degree of membership of the
    output variable. This allows for linguistic descriptions, where the output can
    be interpreted in terms of linguistic terms (Pourjavad et al., 2019). On the other
    hand, Sugeno-FL employs a more mathematical approach, where the output is represented
    as a crisp value or a mathematical function of the input variables. This enables
    precise numerical calculations and facilitates mathematical modelling. The advantage
    of the Mamdani-FL lies in its ability to incorporate linguistic rules and provide
    interpretable outputs. By using linguistic terms, the system''s behaviour becomes
    more understandable and intuitive to humans, making it suitable for applications
    where transparency and explainability are crucial. It allows experts to easily
    define rules using their domain knowledge and linguistic terms, making it a powerful
    tool in decision-making processes (Hamam et al., 2008). Additionally, Mamdani-FL
    supports a wide range of inference methods and can handle complex and nonlinear
    systems effectively. While Sugeno-FL has its own advantages, such as its computational
    efficiency and ability to handle mathematical modelling, the interpretability
    and linguistic-based nature of Mamdani-FL make it a preferred choice in agriculture
    applications (Urbieta Parrazales et al., 2021). A FL-based irrigation controller
    is designed and integrated into a field in India, to perform multi-criteria decision-making,
    this allows to select of the most efficient and adequate irrigation sub-system
    (Yilmaz and Harmancioglu et al., 2010). Another application of FL has been reported
    in (Krishnan et al., 2020). The objective is to automatically control the irrigation
    through the measurement of soil moisture to decide the necessary flow for irrigation.
    Six fuzzy rules have been implemented. DC motor is activated in cases where the
    soil moisture value is between medium and very low values, otherwise the contrary.
    The modelling and simulation of a fuzzy irrigation system have been presented
    in (Mushtaq et al., 2016). The approach is based on the calculation of ET by a
    fuzzy inference system. The input variables are temperature, humidity, wind, and
    solar radiation. The obtained results show the effectiveness of the fuzzy system
    in accurately determining and compensating the water loss due to ET. Another work
    (Kurniawan et al., 2017) presented the combination of a prediction algorithm and
    fuzzy control. The combination of fertilization and irrigation precisely to reduces
    the amount of irrigation water and the waste of chemical fertilizers. This results
    in further saving and reducing production costs and improving agricultural efficiency.
    In our previous work (Benzaouia et al., 2021) we developed an intelligent irrigation
    system based on FL controller for the automatic watering of agricultural areas
    (Oriental Morocco). The simulation results proved that the irrigation system allows
    to keep the soil moisture measurements higher than the value specified by the
    user and eliminates the under-irrigation risk. In the presented research works,
    the utilization of FL is primarily focused on simple applications. These applications
    involve employing fuzzy sets and membership functions to handle vague or uncertain
    data and make decisions based on fuzzy reasoning. Moreover, a noteworthy aspect
    of these works is the use of minimal control rules, implying that the number of
    rules employed in the fuzzy logic systems is kept to a minimum. In the realm of
    modern field management, it is crucial not only to adopt advanced control systems
    but also to incorporate communication IoT protocols to enable seamless data transmission
    and enhanced control. The integration of IoT offers numerous benefits, including
    real-time data acquisition, remote monitoring, and improved decision-making capabilities.
    Various communication technologies, such as Wi-Fi, Bluetooth, Zigbee, and others,
    can be utilized to establish reliable connections in field management applications.
    Table 1 provides a summary of these technologies and their application for irrigation
    monitoring, outlining their respective ranges and power consumption. The common
    characteristic among these technologies is their low data transmission range.
    However, in the case of large agricultural areas, it becomes necessary to employ
    technologies that can cover vast distances with improved sending capabilities
    which makes them very limited. LoRa technology stands out as one of the promising
    solutions that has proven its effectiveness in various industrial applications
    (Kaur et al., 2022), additionally, in fields such as telemedicine (Ayat et al.,
    2023). It offers several advantages for IoT applications, its long-range capability
    allows for communication over large distances, while its low power consumption
    ensures minimizing energy consumption. The cost-effectiveness of LoRa, coupled
    with its scalability and secure communication features, also makes it suitable
    for large-scale deployments. The flexibility of LoRa enables its use in diverse
    environments, and its open standard promotes interoperability. Table 1. IoT technologies
    used in agriculture. Authors Technology Range (km) Data rate and Power consumption
    Narvekar et al., 2013 Bluetooth 0.001 to 0.01 km − 2.4 GHz 250 Kbps - Medium Hong
    et al, 2016 Montoya et al., 2020 Imteaj et al., 2016 Wi-Fi 0.03 to 0.07 km − 2.4
    GHz 11–54 Mbps - High Goap et al., 2018 Sadowski et al., 2020 Veerachamy et al.,
    2022 Nagarajan et al., 2018 Zigbee 0.03 km to 1.6 km − 2.4 GHz 250 Kbps - Low
    Bodunde et al., 2019 Jaiswal et al., 2020 GSM & GPRS Up to35 km – 1.9 GHz Very
    high Krishnan et al., 2020 Sangeetha et al., 2022 Nam et al., 2017 RFID Up to
    10 km <500 Kbps - Medium Jamroen et al., 2020 In this study, a FL-based automatic
    smart precision irrigation system with a combined weather-soil approach is proposed
    and designed, to efficiently schedule the irrigation of apple trees in fields
    located in the eastern region of Morocco. Soil moisture, ambient temperature,
    solar irradiance, and rainfall are the inputs of the FL controller. They are sensed
    through different sensors, and subsequently transmitted to apply the well-designed
    fuzzy rules for irrigation control, while the output is the duration and timing
    of irrigation which depends on the crop requirements in the field. This allows
    for optimizing the soil water content, enhancing plant health and product quality.
    The system also includes a long-range LoRa communication module for wireless transmission
    and a developed IoT platform for visualization and monitoring to enhance the mentioned
    drawbacks of discussed IoT techniques in irrigation. The techno-economic study
    between the proposed system in the literature and the one available on the commercial
    market, proved the reliability of the proposed SPIS to manage the irrigation process
    in a precise and intelligent manner with low-cost installation. This is the first
    research study reported on the design of an intelligent precision irrigation system
    adapted to the eastern climate of Morocco. The main contributions of the paper
    can be summarized as follows: • The design of an automated intelligent irrigation
    controller based on FL inference that evolves in real-time the weather-soil monitoring
    approach to decide the optimal irrigation time and impulse solenoid-valve opening.
    The system is highly efficient and tested in an agricultural field under real
    scenarios. • The development of a real-time visualization and monitoring IoT platform
    for irrigation and field data such as system status, soil moisture, air humidity,
    ambient temperature, solar irradiance, irrigation time, energy, water consumption,
    etc. • Provide a reliable and efficient irrigation system at a low cost. The article
    is organized as follows, Section 2 presents the design and control of the proposed
    irrigation system. Section 3 describes the operating steps of the system. Section
    4 discusses the software and hardware implementation. The experimental performance
    evaluation and the techno-economic study are given in Section 5. Conclusion and
    future improvement are reported in the last Section 6. 2. Design and control of
    the proposed irrigation system The structure of the proposed smart precision irrigation
    system based on an effective strategy that combines both weather and soil approaches
    is given in Fig. 2. It consists of five essential sub-systems: (1) the sensors
    unit, (2) the controller unit, (3) the irrigation unit, (4) the IoT communication
    unit, and finally (5) the power unit. A detailed description of the methodology
    of the development of these subsystems is given in the following sections. Download
    : Download high-res image (367KB) Download : Download full-size image Fig. 2.
    The structure of the smart precision irrigation system. 2.1. Location and specification
    of the study field An agricultural field situated around the eastern region of
    Morocco has been selected to carry out the experimentation of the developed irrigation
    system (See Fig. 3). The location and global positioning are a latitude of 34.811835
    and a longitude of −1.967141 (34°48′42.6″N 1°58′01.7″W). Download : Download high-res
    image (271KB) Download : Download full-size image Fig. 3. Geographical view of
    the field of experimentation. The field is divided into three areas (A), (B) and
    (C). The focus is only on the A and B zones, the irrigation system in the first
    zone (A) is controlled by the proposed smart precision irrigation system and the
    second zone (B) temporised controller is used. Note that the area A and B are
    about 1300 m2 for each and contain about 140 apple trees, with an irrigated surface
    approximately 100 m2. The experiment region exhibits a unique semi-arid climate
    influenced by its geographical location and topography. Situated in the eastern
    part of the country, this region experiences distinct climatic conditions that
    have significant implications for agriculture and socio-economic activities. The
    climate can be classified as Mediterranean with semi-arid characteristics. It
    is characterized by hot and dry summers with limited rainfall and mild, wet winters.
    The region is known for its high temperatures during the summer months, often
    exceeding 40 °C (104°F). Additionally, the area experiences high ET rates due
    to the combination of high temperatures and limited rainfall, resulting in the
    loss of water from both the soil and vegetation. Precipitation is moderate, with
    most rainfall occurring between October and April. However, there is considerable
    variability in precipitation patterns, leading to occasional drought conditions.
    The unique semi-arid climate of the region plays a crucial role in shaping agricultural
    practices, water resource management, and overall livelihoods in the area. 2.2.
    Sensors unit The sensors unit consists of specific field sensors for soil moisture
    measurement, and climatic sensors for measuring ambient temperature, relative
    air humidity, solar irradiance, and rainfall. All the used sensors are calibrated
    to prevent any drift that could be generated during their operation. 2.2.1. Soil
    moisture sensing Soil moisture information is extremely important for the control
    and scheduling of irrigation periods. It allows to identify the characteristics
    of diffusion or storage of water in a defined soil, which is usually influenced
    by its composition and texture (sandy, clayey and silty soil). There are two main
    techniques for determining soil moisture, the direct method and the indirect method.
    The direct method, known as gravimetric, consists of drying a soil sample and
    then determining the weight of the water contained in the sample. This method
    is not adapted to real-time applications and remains expensive. Indirect methods
    consist in measuring the electrical conductivity or the dielectric permittivity
    of the soil and then converted to volumetric soil water content. For this application,
    a UM-MS-10 sensor is selected. This sensor is dedicated to precision irrigation
    applications while offering very accurate measurements, and a high sensitivity
    to amounts of water applied to the soil with a low error range (about ± 2 % and
    ± 4 % for a water content between 0 and 53 % and 53–100 % respectively), in addition
    to the possibility of calibration for specific soils. Determining the number of
    soil moisture sensors is based on several factors, including the size and nature
    of the area being monitored, the type of crops, the depth of the root zone, the
    soil properties, and the way that the area is exposed to weather variations. In
    our research focused on apple trees, a case study to examine soil moisture levels
    in zone A has been conducted firstly. Multiple sensors have been strategically
    placed at different locations within the zone to capture comprehensive data. The
    analysis revealed consistently low measurement errors, attributable to the soil''s
    homogeneity and absence of geographical irregularities. Consequently, a single
    sensor has been selected and positioned at a depth of 0.3 m. This depth is justified
    based on the relevant findings reported in our previous research (Benzaouia et
    al., 2021). To ensure the generalizability of our results across the entire field,
    further investigations are planned. These subsequent examinations will involve
    subdividing the field into smaller zones, allowing for the optimization of sensor
    placement, and determining the minimum number of sensors required for accurate
    soil moisture assessments. This approach enhances the scientific rigor of the
    study and provides valuable insights into the spatial variability of soil moisture.
    2.2.2. Ambient temperature sensing As temperatures increase toward limit values,
    the plants'' ET rates increase and the water balance of the soil decreases, therefore
    the scheduling of irrigation according to temperature variations is also crucial.
    The DHT-11 sensor is a reliable sensor for measuring ambient temperature and relative
    humidity, requiring no external calibration, and able to measure temperatures
    from −40 to + 125 °C with an accuracy of ± 0.5 °C and relative humidity ranges
    from 0 to 100 % with an accuracy of ± 2 %. 2.2.3. Solar irradiance sensing Solar
    irradiance is a source of energy that comes from a thermal process, which also
    contributes to the evaporation process. So, it is important to schedule irrigation
    during a period of minimal solar irradiance. Several devices are available to
    measure and quantify the intensity of solar irradiance, including pyrometer, LDR,
    photoristor and others. However, most of them are expensive and usually require
    an adapter to exploit the collected data. For economic and technical reasons,
    a BH1750 sensor has been selected to estimate solar irradiance intensity. It allows
    a measurement range from 1 lx to 100.000 lx, with an error of ± 3 % for low and
    high ranges, additionally to its robustness against IR radiation (Very small effect
    of IR radiation). 2.2.4. Rainfall sensing To save the water and energy consumption
    of the proposed irrigation system in the agricultural field in case of precipitation,
    a rain sensor or rain switch is integrated, allowing the detection of rainfall.
    Hence, if the feedback received from the sensor indicates the availability of
    high rates of rainfall, the system is turned off and the irrigation periods are
    rescheduled by referring to fuzzy logic rules. 2.3. Controller unit The controller
    is held responsible for intelligent data processing for irrigation scheduling,
    and the generation of the output control signal, namely the duration, time, and
    period of irrigation unit opening and activation which is decided by FL programmed
    and implemented in ATmega2560 microcontroller. In addition, this unit is responsible
    for receiving and transmitting time-series data from the sensor’s unit to the
    developed visualization and monitoring platform. 2.3.1. Mathematical modeling
    The proposed FL controller is composed of three key components, namely the fuzzification
    module, the inference engine, and the defuzzification module, as illustrated in
    Fig. 4. The system operates by developing a universe of discourse ( ) that entails
    a membership function and defining an interval of ( ) represented by . In this
    context, is characterized as a membership function that comprises a set of ordered
    pairs of elements and the probability that e belongs to ( ), as described by Pazouki
    et al., 2021. Download : Download high-res image (171KB) Download : Download full-size
    image Fig. 4. Flow-chart of FL inference-based irrigation controller. The system
    requires three input parameters, namely soil moisture (SM), temperature (T), and
    solar irradiance (SR). Each of these parameters comprises three membership functions
    that are identified by a fuzzy subset of ( ). Specifically, variable represents
    soil moisture, variable represents temperature, and variable represents solar
    irradiance. The degree to which a given value of belongs to variables , , and
    is expressed by the membership functions , and . Equations (2), (3) respectively
    provide the fuzzy intersection and union set for the three variables. The purpose
    of the fuzzification step is to transform a digital input obtained from a sensor
    into a linguistic variable by means of membership functions. A membership function
    can be defined as a function that specifies the degree of membership of a numerical
    input to a linguistic variable. In this context, the membership function employed
    regulates a variety of parameters, including fluctuations in soil moisture, temperature,
    and solar irradiance. The proposed irrigation system commonly employs triangular
    and trapezoidal membership functions to make appropriate decisions. Equations
    (4), (5) depict the triangular and trapezoidal shapes, respectively, for a three-value
    fuzzification system. Fig. 5 illustrates the membership functions for both the
    inputs and outputs of the FL controller. (2) (3) (4) (5) Download : Download high-res
    image (340KB) Download : Download full-size image Fig. 5. Inputs and output membership
    functions. The fuzzy inference process involves the interpretation of input values
    gathered from sensors, which are then utilized to determine output values based
    on sets of rules. To accomplish this, a set of if-then rules has been formulated
    to operate with the membership functions of each input. The literature describes
    two types of fuzzy inference systems that can be implemented: Mamdani type and
    Sugano type. The Mamdani type has been selected for the proposed irrigation system
    because it is well-suited for expert system applications. In each given scenario,
    the output of the controller is represented by the irrigation duration, time and
    periods which varies in accordance with the fuzzy rules grouped in Table 2, Table
    3, and Table 4. Table 2. Rules of the output (duration of irrigation in min) for
    dry soil. Temperature (°C) Solar irradiance (%) Dark Medium Light Cold Very Long
    Very Long Long Medium Short Long Short Hot Very short Very short Zero Table 3.
    Rules of the output (duration of irrigation in min) for wet soil. Temperature
    (°C) Solar irradiance (%) Dark Medium Light Cold Zero Zero Zero Medium Zero Zero
    Zero Hot Zero Zero Zero Table 4. Rules of the output (duration of irrigation in
    min) for medium soil wetness. Temperature (°C) Solar irradiance (%) Dark Medium
    Light Cold Short Short Short Medium Short Short Very short Hot Zero Very short
    Zero In the process of implementing an intelligent irrigation strategy, defuzzification
    serves as the final step. After fuzzification, the rules are applied to generate
    a fuzzy output which is subsequently transformed into a scalar quantity. The selection
    of the centroid defuzzification method has been based on its precision in producing
    reliable outputs. Equation (6) expresses the defuzzified output ( ). (6) 2.3.2.
    Simulation and validation of proposed system A preliminary simulation of the irrigation
    system has been carried out using the FL toolbox available in the Matlab/Simulink
    environment in order to build the fuzzy rules for each irrigation scenario and
    verify the system responses. The fuzzy rules are based on Mamdani''s “if-then”
    conditions. The 3D graphical representation of the temperature and soil moisture
    variables as a function of the irrigation time is given in Fig. 6. It is clear
    that the system allows the irrigation process with variable duration according
    to the parameters of the plants, the soil, and the weather conditions. Download
    : Download high-res image (362KB) Download : Download full-size image Fig. 6.
    3D Fuzzy logic graph of rules. 2.4. Irrigation unit The irrigation unit is composed
    of an impulse solenoid and diaphragm valve, distribution pipes, and emitters.
    The solenoid is controlled through the output signal provided by the controller
    unit. The opening time and duration can be adjusted according to the decision
    of the FL controller and vary depending on the conditions affecting the irrigation.
    The efficiency of the system is considered. For this purpose, a flow meter is
    located next to the valve to measure the water consumption in the distribution
    line. Moreover, the overall energy consumed during the operation under the adopted
    irrigation strategy is calculated from the installed voltage and current sensors.
    The obtained values are used to calculate the energy consumed per time unit. 2.5.
    LoRa based IoT communication unit In order to closely monitor the status of the
    irrigation system and to visualize the evolution of the parameters related to
    precision irrigation to fulfil the customer''s display requirements, ten parameters
    are displayed in a developed platform (See Fig. 7). This platform allows to follow
    in real-time the evolution of each parameter as well as the implementation of
    alerts (e-mail, telegram, and SMS) in case of failure (problems at the level of
    the sensors, condition on the irrigation parameters), moreover the transversal
    communication between the hardware and software part. The main page that is displayed
    contains an indication of the status of the system (on/off), the air temperature,
    the soil moisture, the soil temperature, the electrical conductivity, and the
    salinity. The irrigation duration provided by the FL controller, the evolution
    of the solar irradiance (the parameter is displayed as a percentage just to simplify
    the display) during each day is also displayed, and finally, the water flow rate
    distributed to the plant for each irrigation decision. An example of visualization
    charts is given by Fig. 8. Download : Download high-res image (285KB) Download
    : Download full-size image Fig. 7. Visualization platform. Download : Download
    high-res image (654KB) Download : Download full-size image Fig. 8. Graphical representation
    of irrigation parameters. The platform has been developed using multiple languages,
    frameworks, and a hardware environment containing boards with microcontrollers
    for processing as well as different communication shields for sending and receiving
    data, Fig. 9 represents the conception of each environment. Django is chosen given
    the multiple advantages that it presents, namely the robust development language
    Python, the ability to run with any client-side infrastructure, return data in
    any format namely HTML, RSS, JSON, XML, and provides robust security features
    that avoid common security errors (Srivastava et al., 2021). MySQL database is
    chosen as a manager owing to its many advantages in terms of rapidity, and ability
    to perform various operations using interfaces written in C, C++, Python, Java
    and PHP (Rao et al., 2014). The configuration of the manager is done at the Django
    framework level. Download : Download high-res image (247KB) Download : Download
    full-size image Fig. 9. The conception of soft and hardware IoT platform. The
    communication between the HTTP client and the platform is done through an API,
    which allows to interface and translate the requests received by the HTTP client
    to the server and return a response to the clients (when the Rest-API has what
    it needs, it sends back a response to the clients, typically be in JSON or XML
    format) (Ong et al., 2015). ATmega2560 programming is based on the Processing
    IDE and programmed with Arduino IDE software. The code is called a sketch and
    the assembly of several for functionalities are called libraries, which simplifies
    the user''s programming tasks by hiding the code in the libraries as a “black
    box”. The ATmega2560 can be programmed within the limits of 256 Kb of Flash memory
    with a clock rate of 16 MHz, moreover in this application of the smart precision
    irrigation system, it is autonomously working without being connected to an interface
    (computer) for control exchange. 2.6. Power unit The power consumption of the
    controller and sensor units, which represent a node in the proposed SPIS, is presented
    in Table 5. Specifically, the sensor unit consumes approximately 1.3 mA. Current
    investigations are being conducted to test the effectiveness of using small batteries
    to power this node. Based on initial estimations, two batteries of 6600 mAh associated
    in parallel could potentially provide a supply duration of around 1 year. This
    allows for reliable data collection with long-range capabilities and the ability
    to record hourly data. Table 5. Current consumption of the proposed system. Sensor
    Current consumption Temperature & Humidity sensor 200 µA Solar irradiance sensor
    120 µA Soil Moisture sensor 330 µA Rain sensor 150 µA Controller 500 µA Total
    1.3 mA To assess the effectiveness of the proposed soil-weather fuzzy logic approach,
    the primary goal is to gather precise and comprehensive data. To achieve this,
    an integrated system that relies on a PV panel for power supply coupled with batteries.
    3. Operating steps of the proposed irrigation system The operating steps of the
    proposed system are shown in Fig. 10. In the first step, the precipitation status
    is checked, if the sensor indicates that availability, the system is turned off,
    otherwise the system proceeds to the next step of sensing the values received
    by the sensor unit hourly (ambient temperature, solar irradiation and soil moisture).
    The time and duration of irrigation is given after applying the appropriately
    designed fuzzy rules by reasoning according to the information from these sensors.
    Download : Download high-res image (425KB) Download : Download full-size image
    Fig. 10. Operating steps of the proposed irrigation system. In this study, the
    information generated by the soil moisture sensor indicates the requirement for
    irrigation. According to the expert of agriculture, the optimal threshold of soil
    moisture for apple tree’s is 30 %. Therefore, the measurement of this variable
    is taken into account in this study. For each situation and variation of the input
    variables of the FL controller, the result is determined by the rules summarized
    in tables 2,3 and 4. Some real scenarios examples are given as follow: • If the
    soil is wet, i.e. exceeds 30 %, and regardless of the values of solar irradiance
    and ambient temperature, the irrigation decision is given by a duration equal
    to zero. • If the soil moisture equals 30 %, and regardless the value of all input
    variables, the system remains turned off, with a null irrigation duration decision.
    • If the soil contains an average soil moisture value, with an average temperature
    and solar irradiance, then the irrigation duration is set to very short duration.
    • If the soil is dry with a high temperature and a minimum solar irradiance, the
    duration is set to zero, since the high temperatures generate an increase in evaporation
    and water loses. In the area where the experiment is conducted, the process of
    water aspiration through the soil has been estimated at 60 min. This duration
    is based on experimental measurements for a well-known soil constitution. The
    system is programmed to restart the same sequences, which justifies the frequency
    of sending data to the platform. 4. Software and hardware implementation The FL
    controller has been implemented in real-time through a code in C language adapted
    with ATmega2560 microcontroller, the structure of the code is given as follows:
    firstly, a declaration of the libraries to be used, namely that of the FL, the
    sensors used, the actuators (relay) that is used to control the impulse solenoid
    and the display. After acquiring the data, the processing by fuzzy controllers
    begins. The fuzzy logic code is devised in three parts, first is the design of
    the membership functions by using equations (4), (5) on each of the three inputs
    (soil moisture, ambient temperature, and solar irradiance) and defining the variation
    ranges. Secondly the design of the fuzzy rules, in our case 27 rules are implemented.
    The last part is the defuzzification, which consists in assigning the results
    to the output in the form of linguistic variable to be exploited afterwards. The
    output being the duration and the time of irrigation, this value is converted
    into control signal form to activate the relay that enables to activate the electro
    valve and pump to start the irrigation process. The controller is programmed to
    repeat the same sequences every hour, the program performs and schedule automatically
    the duration and times of irrigation periods without any human intervention. The
    communication between the control unit (ATmega2560), the sensors unit, the irrigation
    unit and the IoT platform is realized via the ESP32 development board by sending
    instructions. The SPIS prototype is shown in Fig. 11, and the irrigation unit
    is shown in Fig. 12. The control unit, which provides decisions, and the sensor
    unit are assembled in a case with an IP67 degree of protection. After receiving
    the decision from the FL controller, an electric control signal is sent back to
    the solenoid. It should be noted that the solenoid is impulse driven, i.e., for
    switching on and off states, it is sufficient to send only one impulse for micro-seconds.
    The operation of the solenoid according to the time decided by the proposed fuzzy
    controller, operates on the internal membrane of the valve. The component list
    used in its conception is summarized in Table 6. Download : Download high-res
    image (205KB) Download : Download full-size image Fig. 11. SPIS units, (a) control
    unit: ATmega2560 microcontroller, (b) IoT communication unit: ESP32 with antenna,
    (c) Solar irradiance sensor, (d) Rainfall sensor, (e) Temperature and humidity
    sensor, (f) Soil moisture sensor, (i) Display, (j) Relay, (k) Current and voltage
    sensor. Download : Download high-res image (527KB) Download : Download full-size
    image Fig. 12. Irrigation unit (a) impulse solenoid, (b) diaphragm valve. Table
    6. The hardware component list. N° Item Quantity Description 1 Arduino Mega 2560
    Rev3 1 Main controller, ATmega2560 microcontroller, 16 analog input pins, 16 MHz
    clock speed, 256 KB flash memory. 2 Lilygo® Ttgo LoRa32 868mhz Module 1 Communication
    shield used for sending measured Data acquired from sensors unit. 3 Soil moisture
    sensor MS10 1 Power supply voltage: 5-30VDC, RS485 output signal. 4 Light sensor
    BH1750FVI 1 Able to measure and estimate solar irradiance. 5 DHT11 sensor 1 Measuring
    air temperature and humidity sensor with high accuracy. 6 Rain sensor 1 Gives
    information about the availability of rainfall. 7 Voltage - Current sensor 1 Measuring
    the absorbed current and voltage during irrigation process 8 Relay 1 Controlled
    switch 9 LCD 16x02 1 Instantaneous display of selected parameters. 10 Impulse
    solenoid valve 1 Controlled valve, opening and closing depends on the feedback
    from the main controller 5. Experimental performance evaluation Fig. 13 illustrates
    the deployment of SPIS within an agricultural context, offering an on-site perspective
    of its operational dynamics. The experimental results of implementing the SPIS
    in the agricultural area (A), are presented in Fig. 14, Fig. 15, Fig. 16, Fig.
    17. The experimentation has been conducted over ten days of two different seasons,
    the summer of 2022 and the winter of 2023, this allowed to obtain an overview
    of the behaviour of the system as well as to perform a test under different meteorological
    variations in order to approve the efficiency of the adopted soil-weather approach.
    Download : Download high-res image (314KB) Download : Download full-size image
    Fig. 13. Real photo of the designed smart precision irrigation system. Download
    : Download high-res image (1MB) Download : Download full-size image Fig. 14. Real
    time SPIS performance during summer period (From 05 to 14 September 2022), (a)
    Solar irradiance and temperature variation, (b) Irrigation duration in function
    of solar irradiance evolution, (c) Irrigation duration in function of temperature
    evolution, (d) soil moisture evolution. Download : Download high-res image (591KB)
    Download : Download full-size image Fig. 15. Real time remote solar irradiation,
    temperature, soil moisture, irrigation duration and precipitation variation for
    the selected two days of summer (14 and 15 September 2022). Download : Download
    high-res image (390KB) Download : Download full-size image Fig. 16. Irrigation
    duration during the selected two days of summer (2022), (a) Duration in function
    of temperature evolution, (b) Duration in function of solar irradiance evolution.
    Download : Download high-res image (918KB) Download : Download full-size image
    Fig. 17. SPIS performance during winter period (from 11/01/2023 to 20/01/2023),
    a) Solar irradiance and temperature variation, b) Irrigation duration in function
    of solar irradiance evolution, c) Irrigation duration in function of temperature
    evolution, d) soil moisture evolution. 5.1. Summer period The recorded weather
    data for the summer period from 05/09/2022 to 14/09/2022 are presented in Fig.
    14 (a) The data are sensed hourly and consist of temperature (T) and solar irradiance
    (G) measurements. The highest and lowest temperatures are 37.72 °C and 15.32 °C
    respectively. The solar irradiance values vary from 0 to 1000 W/m2, indicating
    the intensity of solar radiation received during each hour. It can be observed
    that lower solar irradiance values occur during the night-time hours, indicating
    the absence of sunlight. As the day progresses, the solar irradiance values increase,
    reaching their peak at 1000 W/m2. The temperature fluctuations correlate with
    the solar irradiance values, as higher solar irradiance leads to higher temperatures.
    The collected data from the sensor unit of the SPIS have been cross validated
    with the measurements obtained from a trusted meteorological station. These validations
    have confirmed the accuracy of the collected data, with minimal margin of error.
    During the 10-day performance evaluation, it can be observed that the FL controller
    effectively avoids operating the system during periods of high temperatures and
    intense solar radiation, as depicted in Fig. 14 (b) and Fig. 14 (c) and decides
    on short durations when input variables are medium. This strategy significantly
    contributes to the reduction of ET losses throughout the day. Additionally, by
    referring to the well-designed fuzzy rules, the FL controller selects the appropriate
    timing and duration for system operation. Consequently, the actual soil moisture
    closely tracks the desired value of 30 % with smooth oscillations (See Fig. 14
    (d)), in contrast to traditional single input- single output (SISO) feedback systems
    that often result in low irrigation performance. This performance evaluation over
    the 10-day period demonstrates the effectiveness and improved performance of the
    FL in maintaining optimal soil moisture levels while minimizing water loss. An
    extensive performance analysis has been conducted on two specific days of summer
    period (13 and 14 September), to understand the overall operation of the SPIS
    (See Fig. 15). September 13th (13/09/2022) represents the operational conditions
    of the system that persist throughout the 10-day experimental period in September
    (summer). By observing the system''s performance on this day, valuable insights
    can be gained regarding its sustained operation throughout the experiment. In
    addition, September 14th (14/09/2022) has been chosen due to the presence of precipitation.
    This provides an opportunity to assess the system''s performance under the same
    conditions (high weather parameters variation), but with the added factor of precipitation.
    Analysing its behaviour on a day with precipitation allows for an evaluation of
    the system''s ability to cope with such weather conditions. Throughout the selected
    two-days observation period, it is evident that the FL-based irrigation system
    allowed for considerable irrigation durations during periods of minimal variation
    in meteorological conditions as seen in point A (See Fig. 15). However, it effectively
    avoided irrigation during high-temperature and solar radiation conditions, as
    observed in point B. Consequently, the system reprograms the irrigation decision
    until conditions reached minimal or intermediate values. These decisions have
    been automatically made by the system based on fuzzy rules summarized in Table
    2, Table 3 of section 2.3. Given the high hourly ET rate during the observed period
    in point B, it was apparent that the amount of water applied during irrigation
    would be lost to the air without benefiting the crops. This finding aligns with
    expert recommendations on irrigation practices. In the case of point C, where
    soil moisture is about 24 % and the solar irradiance variable is at a minimum
    value (G = 17 w/m2) while the temperature in a medium value (T = 29 °C), the irrigation
    duration is decided as medium. This approach effectively minimized losses in terms
    of ET. A similar decision was observed in point F, where G = 330 w/m2 and T =
    24 °C. The system consistently made the decision to withhold irrigation when soil
    moisture reached the pre-defined value set by the farmer. This is being observed
    in multiple points during the experimental days, particularly at points D. Additionally,
    the system maintained the same decision (null duration of irrigation) in the presence
    of precipitation, as observed in points E. The average applied amount of water
    for the first day was 529,6L, over the irrigated area which is approximately 100
    m2. It follows that the proposed FL-irrigation control system provides appropriate
    duration to the irrigation unit of the field to apply an average of 5.29L/day/m2,
    that is, 5.29 mm/day. This is similar to the daily estimated ET value using the
    Penman-Monteith FAO model, which is about 5.31 mm/day (according to data collected
    from the sensor unit). Similarly for the second day, the system permit applying
    an average of 471,4L/day/m2, while the ET value is about 4,73 mm/day. The proposed
    irrigation-based soil-weather approaches have been verified under summer period,
    the FL controller avoids applying water during periods when there are significant
    variations in weather conditions (See Fig. 16), this avoids the loss of water
    through evaporation processes, while keeping the plants in a better condition,
    i.e., no stress. In addition, as noted, the duration of irrigation varies depending
    on the conditions measured by the sensors, namely, soil moisture, ambient temperature,
    solar radiation, air humidity and rainfall. 5.2. Inter period Likewise, the obtained
    results during the winter period over 10 days (From 11/01/2023 to 20/01/2023)
    show that the irrigation system is operating in efficient mode and compensates
    the quantities of water required by the plants while considering the values of
    solar irradiance and temperature which are practically small and average during
    this period. A daily average of 1.98 mm/day, has been applied to the soil, which
    permits maintaining a soil moisture close to the predefined value of soil moisture
    30 % defined by the user (See Fig. 17). During this period, the system considers
    the presence of rainfall rates, to minimize the over-irrigation that influence
    the plants. The evolution of soil moisture is shown in Fig. 17 (d). It is remarkable
    that this variable reaches maximums of about 48 % since the precipitation rate
    are important. The duration and period of irrigation are always optimized during
    the variations of solar irradiance and temperature (See Fig. 17 (b) and Fig. 17
    (c)). The system avoids applying water to the plants during the night period,
    this is justified by the minimal ET rate during this period, and low irradiance
    and temperatures values therefore the irrigation durations are at mid-days. In
    summary, the aforementioned results indicate that the proposed irrigation system
    based on the soil-weather approach and fuzzy concept effectively compensates water
    losses in semi-arid regions where the experiment has been conducted, ensuring
    optimal hydration for well-watered and actively growing crops. The SPIS also has
    the capability to adjust water requirements according to weather conditions that
    influence the irrigation process, thereby facilitating improved irrigation management.
    Achieving a forecast of irrigation duration for several days would entail the
    creation of suitable artificial intelligence algorithms, such as artificial neural
    networks (ANN), long term short memory (LSTM), and support vector machines (SVM)
    which can be trained using extensive data collected through the SPIS. At present,
    our team is actively engaged in the development of these algorithms, as well as
    expanding the system to cover larger agricultural areas. 5.3. Water and energy
    consumption analysis The energy and water consumption at the level of the “irrigation
    unit” in the ‘A’ and ‘B’ areas of the experiment field have been carried out.
    It should be noted that the ''A'' area is furnished with drip irrigation pipes,
    along with the proposed SPIS and an impulse solenoid valve, and ‘B’ area is equipped
    only with a manual drip irrigation based commercial timer to preset the applied
    water flow and period which are performed according to the knowledge and visualisation
    of the water-stress on the leaves by the farmer. It is noted also that the ‘B’
    area contains a classical solenoid, which require a significant current to maintain
    the On state compared to the adopted impulse solenoid. During the summer period,
    the farmer refers to a commercial timer to regulate a fixed water flow rate of
    approximately 11 mm/day for ‘B’ area. This estimation was based solely on the
    observation of climatic conditions, neglecting the influence of irrigation quantities
    on plant growth and soil moisture dynamics. Conversely, the proposed irrigation
    system demonstrated its efficacy in area ‘A’ through the evaluation of climatic
    and soil variables. It effectively delivered a precise water supply while maintaining
    soil moisture levels near the optimal range for apple trees. By incorporating
    these variables, the proposed irrigation system proficiently optimized the water
    supply for apple trees, resulting in a notable water-saving of nearly 61 % (±2%)
    over a 10-day period. The farmer consciously decided to apply an average of 110
    mm of water, whereas the SPIS determined a more optimal irrigation amount of 51.6
    mm, equivalent to an approximate daily application rate of 5.16 mm/day. This demonstration
    underscores the system''s efficiency and significance in precise irrigation management,
    ensuring the health and optimal growth of plants. Similarly, the power consumption
    in area ‘B’ stands at approximately 620Wh. Nevertheless, by optimizing water usage
    levels using the proposed SPIS-based FL decision and impulse solenoids, a remarkable
    reduction of approximately 46 % in overall power consumption has been achieved.
    6. Conclusion In this paper, a feedback FL control and combined soil-weather approach
    were presented, to foster water conservation and better irrigation scheduling
    and management in the eastern agriculture fields of Morocco. The fuzzy controller,
    developed based on Mamdani fuzzification using trapezoidal and triangular membership
    functions, effectively determined the duration of irrigation for crops. This utilization
    of FL control played a crucial role in maintaining soil moisture levels above
    pre-defined thresholds, exhibiting slight oscillations to prevent excessive run-off,
    thus conserving water and energy resources. To facilitate real-time performance
    monitoring and the creation of a comprehensive database, LoRa protocol has been
    utilised to communicate with a developed IoT platform. This enabled data to be
    collected on key environmental and climatic variables, as well as precise information
    on irrigation duration and soil proprieties. Presently, this is significantly
    contributing to data analysis and enhancing system performance. Implementing the
    system is straightforward, and its economic viability. CRediT authorship contribution
    statement M. Benzaouia: Conceptualization, Methodology, Software, Writing – original
    draft. B. Hajji: Methodology, Software. A. Mellit: Writing – review & editing,
    Investigation. A. Rabhi: Supervision. Declaration of Competing Interest The authors
    declare that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Acknowledgment
    Sincere gratitude to MIS Laboratory for providing equipment and to REESDL Laboratory,
    where the experiment was conducted.The third author (Dr. A. Mellit) would like
    to acknowledge support from the ICTP, Trieste (Italy) through the Associates Programme
    (2023–2028). Data availability No data was used for the research described in
    the article. References Abd Rahman et al., 2019 M.K.I. Abd Rahman, M.S.Z. Abidin,
    M.S.A. Mahmud, S. Buyamin, M.H.I. Ishak, A.A. Emmanuel Advancement of a smart
    fibrous capillary irrigation management system with an Internet of Things integration
    Bulletin of the Georgian Academy of Sciences. Electr. Eng. Inform., 8 (4) (2019),
    pp. 1402-1410 View in ScopusGoogle Scholar Abioye et al., 2020 E.A. Abioye, M.S.Z.
    Abidin, M.S.A. Mahmud, S. Buyamin, M.H.I. Ishak, M.K.I. Abd Rahman, A.O. Otuoze,
    P. Onotu, M.S.A. Ramli A review on monitoring and advanced control strategies
    for precision irrigation Comput. Electron. Agric., 173 (2020), Article 105441
    View PDFView articleView in ScopusGoogle Scholar Avşar et al., 2018 Avşar, E.,
    Buluş, K., Saridaş, M. A., & Kapur, B., 2018. Development of a cloud-based automatic
    irrigation system: A case study on strawberry cultivation. In 2018 7th International
    Conference on Modern Circuits and Systems Technologies (MOCAST), 1-4, IEEE. Google
    Scholar Ayat et al., 2023 Ayat, Y., El Moussati, A., Benzaouia, M., & Mir, I.,
    2023. New Topology of WSN for Smart Irrigation with Low Consumption and Long Range.
    In International Conference on Digital Technologies and Applications, 221-231.
    Cham: Springer Nature Switzerland. Google Scholar Benzaouia and Hajji., B H.,
    Anne MD, A., Mellit A. and Rabhi, A.H., 2021 Benzaouia M., Hajji., B H., Anne
    MD, A., Mellit A. and Rabhi, A.H., 2021, An intelligent irrigation system based
    on fuzzy logic control: A case study for Moroccan oriental climate region. In
    2nd international conference on Embedded Systems and Artificial Intelligence (ESAI’21),
    https://hal.archives-ouvertes.fr/hal-03312289. Google Scholar Bodunde et al.,
    2019 O.P. Bodunde, U.C. Adie, O.M. Ikumapayi, J.O. Akinyoola, A.A. Aderoba Architectural
    design and performance evaluation of a ZigBee technology based adaptive sprinkler
    irrigation robot Comput. Electron. Agric., 160 (2019), pp. 168-178 View PDFView
    articleView in ScopusGoogle Scholar Bwambale et al., 2022 E. Bwambale, F.K. Abagale,
    G.K. Anornu Smart irrigation monitoring and control strategies for improving water
    use efficiency in precision agriculture: A review Agric. Water Manag., 260 (2022),
    Article 107324 View PDFView articleView in ScopusGoogle Scholar Capraro Fuentes
    et al., 2018 Capraro Fuentes, F. A., Tosetti Sanz, S. R., Rossomando, F. G., Mut,
    V. A., & Vita Serman, A. F., 2018. Web-based system for the remote monitoring
    and management of precision irrigation: A case study in an arid region of Argentina.
    Google Scholar Chiew et al., 1995 F.H.S. Chiew, N.N. Kamaladasa, H.M. Malano,
    T.A. McMahon Penman-Monteith, FAO-24 reference crop evapotranspiration and class-A
    pan data in Australia Agric. Water Manag., 28 (1) (1995), pp. 9-21 View PDFView
    articleView in ScopusGoogle Scholar Davis and Dukes, 2010 S.L. Davis, M.D. Dukes
    Irrigation scheduling performance by evapotranspiration-based controllers Agric.
    Water Manag., 98 (1) (2010), pp. 19-28 View PDFView articleView in ScopusGoogle
    Scholar Doorenbos and Pruitt, 1976 J. Doorenbos, W.O. Pruitt “Guidelines for predicting
    crop water requirements,” FAO Irrigation and Drainage Paper 24 Roma, Italia (1976)
    Google Scholar Goap et al., 2018 A. Goap, D. Sharma, A.K. Shukla, C.R. Krishna
    An IoT based smart irrigation management system using Machine learning and open
    source technologies Comput. Electron. Agric., 155 (2018), pp. 41-49 View PDFView
    articleView in ScopusGoogle Scholar González-Briones et al., 2018 González-Briones,
    A., Castellanos-Garzón, J.A., Mezquita Martín, Y., Prieto, J. and Corchado, J.M.,
    2018. A framework for knowledge discovery from wireless sensor networks in rural
    environments: a crop irrigation systems case study. Wireless Communications and
    Mobile Computing, 2018. Google Scholar Hamam and Georganas, 2008 Hamam, A., &
    Georganas, N. D., 2008. A comparison of Mamdani and Sugeno fuzzy inference systems
    for evaluating the quality of experience of Hapto-Audio-Visual applications. In
    2008 IEEE international workshop on haptic audio visual environments and games
    87-92. IEEE. Google Scholar Hamami and Nassereddine, 2020 L. Hamami, B. Nassereddine
    Application of wireless sensor networks in the field of irrigation: A review Comput.
    Electron. Agric., 179 (2020), Article 105782 View PDFView articleView in ScopusGoogle
    Scholar Hong and Hsieh, 2016 G.Z. Hong, C.L. Hsieh Application of integrated control
    strategy and bluetooth for irrigating romaine lettuce in greenhouse IFAC-PapersOnLine,
    49 (16) (2016), pp. 381-386 View PDFView articleView in ScopusGoogle Scholar Imteaj
    et al., 2016 Imteaj, A., Rahman, T., Hossain, M. K., & Zaman, S., 2016. IoT based
    autonomous percipient irrigation system using raspberry Pi. In 2016 19th International
    Conference on Computer and Information Technology (ICCIT), 563-568, IEEE. Google
    Scholar Jaafar and Kharroubi, 2021 H. Jaafar, S.A. Kharroubi Views, practices
    and knowledge of farmers regarding smart irrigation apps: A national cross-sectional
    study in Lebanon Agric. Water Manag., 248 (2021), Article 106759 View PDFView
    articleView in ScopusGoogle Scholar Jaiswal and Ballal, 2020 S. Jaiswal, M.S.
    Ballal Fuzzy inference based irrigation controller for agricultural demand side
    management Comput. Electron. Agric., 175 (2020), Article 105537 View PDFView articleView
    in ScopusGoogle Scholar Jamroen et al., 2020 C. Jamroen, P. Komkum, C. Fongkerd,
    W. Krongpha An intelligent irrigation scheduling system using low-cost wireless
    sensor network toward sustainable and precision agriculture IEEE Access, 8 (2020),
    pp. 172756-172769 CrossRefView in ScopusGoogle Scholar Kaur et al., 2022 G. Kaur,
    S.H. Gupta, H. Kaur Optimizing the LoRa network performance for industrial scenario
    using a machine learning approach Comput. Electr. Eng., 100 (2022), Article 107964
    View PDFView articleView in ScopusGoogle Scholar Knox et al., 2012 J.W. Knox,
    M.G. Kay, E.K. Weatherhead Water regulation, crop production, and agricultural
    water management—Understanding farmer perspectives on irrigation efficiency Agric.
    Water Manag., 108 (2012), pp. 3-8 View PDFView articleView in ScopusGoogle Scholar
    Kool et al., 2014 D. Kool, N. Agam, N. Lazarovitch, J.L. Heitman, T.J. Sauer,
    A. Ben-Gal A review of approaches for evapotranspiration partitioning Agric. For.
    Meteorol., 184 (2014), pp. 56-70 View PDFView articleView in ScopusGoogle Scholar
    Krishnan et al., 2020 R.S. Krishnan, E.G. Julie, Y.H. Robinson, S. Raja, R. Kumar,
    P.H. Thong Fuzzy logic based smart irrigation system using internet of things
    J. Clean. Prod., 252 (2020), Article 119902 View PDFView articleView in ScopusGoogle
    Scholar Kumar et al., 2023 M. Kumar, S. Ambika, A. Hassani, P.V. Nidheesh Waste
    to catalyst: role of agricultural waste in water and wastewater treatment Sci.
    Total Environ., 858 (2023), Article 159762 View PDFView articleView in ScopusGoogle
    Scholar Kurniawan et al., 2017 Kurniawan, A.P., Jati, A.N. and Azmi, F., 2017,
    August. Weather prediction based on fuzzy logic algorithm for supporting general
    farming automation system. In 2017 5th international conference on instrumentation,
    control, and automation (ICA), 152-157, IEEE. Google Scholar Le et al., 2020 A.T.
    Le, Y. Wang, L. Wang, D. Li Numerical investigation on a low energy-consumption
    heating method for recirculating aquaponic systems Comput. Electron. Agric., 169
    (2020), Article 105210 View PDFView articleView in ScopusGoogle Scholar Mason
    et al., 2019 B. Mason, M. Rufí-Salís, F. Parada, X. Gabarrell, C. Gruden Intelligent
    urban irrigation systems: Saving water and maintaining crop yields Agric. Water
    Manag., 226 (2019), Article 105812 View PDFView articleView in ScopusGoogle Scholar
    Mellit et al., 2021 A. Mellit, M. Benghanem, O. Herrak, A. Messalaoui Design of
    a novel remote monitoring system for smart greenhouses using the internet of things
    and deep convolutional neural networks Energies, 14 (16) (2021), p. 5045 CrossRefGoogle
    Scholar Montoya et al., 2020 A.P. Montoya, F.A. Obando, J.A. Osorio, J.G. Morales,
    M. Kacira Design and implementation of a low-cost sensor network to monitor environmental
    and agronomic variables in a plant factory Comput. Electron. Agric., 178 (2020),
    Article 105758 View PDFView articleView in ScopusGoogle Scholar Mushtaq et al.,
    2016 Mushtaq, Z., Sani, S.S., Hamed, K., Ali, A., Ali, A., Belal, S.M. and Naqvi,
    A.A., 2016. Automatic agricultural land irrigation system by fuzzy logic. In 2016
    3rd International Conference on Information Science and Control Engineering (ICISCE),
    871-875, IEEE. Google Scholar Nagarajan and Minu, 2018 G. Nagarajan, R.I. Minu
    Wireless soil monitoring sensor for sprinkler irrigation automation system Wirel.
    Pers. Commun., 98 (2018), pp. 1835-1851 CrossRefView in ScopusGoogle Scholar Nam
    et al., 2017 W.H. Nam, T. Kim, E.M. Hong, J.Y. Choi, J.T. Kim A Wireless Sensor
    Network (WSN) application for irrigation facilities management based on Information
    and Communication Technologies (ICTs) Comput. Electron. Agric., 143 (2017), pp.
    185-192 View PDFView articleView in ScopusGoogle Scholar Omomule et al., 2020
    T.G. Omomule, O.O. Ajayi, A.O. Orogun Fuzzy prediction and pattern analysis of
    poultry egg production Comput. Electron. Agric., 171 (2020), Article 105301 View
    PDFView articleView in ScopusGoogle Scholar Ong et al., 2015 S.P. Ong, S. Cholia,
    A. Jain, M. Brafman, D. Gunter, G. Ceder, K.A. Persson The Materials Application
    Programming Interface (API): A simple, flexible and efficient API for materials
    data based on REpresentational State Transfer (REST) principles Comput. Mater.
    Sci., 97 (2015), pp. 209-215 View PDFView articleView in ScopusGoogle Scholar
    Pourjavad and Mayorga, 2019 E. Pourjavad, R.V. Mayorga A comparative study and
    measuring performance of manufacturing systems with Mamdani fuzzy inference system
    J. Intell. Manuf., 30 (2019), pp. 1085-1097 CrossRefView in ScopusGoogle Scholar
    Qaisar et al., 2021 Y.H. Qaisar, M.M. Akram, M.N. Tahir High Efficiency Irrigation
    Technology As a Single Solution for Multi-Challenge: A Case of Pakistan V. Prasad
    (Ed.), Water, Climate Change, and Sustainability, Pandey, Sangam Shrestha, David
    Wiberg, Wiley (2021), pp. 185-196 Google Scholar Rao et al., 2014 N.S. Rao, K.A.
    Geetha, S. Maiti Web-based networking of herbal gardens for exchange of planting
    material Comput. Electron. Agric., 103 (2014), pp. 26-32 View in ScopusGoogle
    Scholar Sadowski and Spachos, 2020 S. Sadowski, P. Spachos Wireless technologies
    for smart agricultural monitoring using internet of things devices with energy
    harvesting capabilities Comput. Electron. Agric., 172 (2020), Article 105338 View
    PDFView articleView in ScopusGoogle Scholar Sangeetha et al., 2022 B.P. Sangeetha,
    N. Kumar, A.P. Ambalgi, S.L.A. Haleem, K. Thilagam, P. Vijayakumar IOT based smart
    irrigation management system for environmental sustainability in India Sustain.
    Energy Technol. Assess., 52 (2022), Article 101973 Google Scholar Shafaei et al.,
    2017 S.M. Shafaei, M. Loghavi, S. Kamgar Appraisal of Takagi-Sugeno-Kang type
    of adaptive neuro-fuzzy inference system for draft force prediction of chisel
    plow implement Comput. Electron. Agric., 142 (2017), pp. 406-415 View PDFView
    articleView in ScopusGoogle Scholar Soulis et al., 2015 K.X. Soulis, S. Elmaloglou,
    N. Dercas Investigating the effects of soil moisture sensors positioning and accuracy
    on soil moisture based drip irrigation scheduling systems Agric. Water Manag.,
    148 (2015), pp. 258-268 View PDFView articleView in ScopusGoogle Scholar Srivastava
    et al., 2021 Srivastava, P. K., Singh, P., Pandey, V., and Gupta, M., 2021. Development
    of android application for visualisation of soil water demand. Agricultural Water
    Management, 375-389. Academic Press. Google Scholar Urbieta Parrazales et al.,
    2021 R. Urbieta Parrazales, M.T. Zagaceta Álvarez, K.A. Aguilar Cruz, R. Palma
    Orozco, J.L. Fernández Muñoz Implementation of a fuzzy logic controller for the
    irrigation of rose cultivation in mexico Agriculture, 11 (7) (2021), p. 576 CrossRefView
    in ScopusGoogle Scholar Veerachamy et al., 2022 R. Veerachamy, R. Ramar, S. Balaji,
    L. Sharmila Autonomous Application Controls on Smart Irrigation Comput. Electr.
    Eng., 100 (2022), Article 107855 View PDFView articleView in ScopusGoogle Scholar
    Wang et al., 2020 E. Wang, S. Attard, A. Linton, M. McGlinchey, W. Xiang, B. Philippa,
    Y. Everingham Development of a closed-loop irrigation system for sugarcane farms
    using the Internet of Things Comput. Electron. Agric., 172 (2020), Article 105376
    View PDFView articleView in ScopusGoogle Scholar Xie et al., 2022 J. Xie, Y. Chen,
    P. Gao, D. Sun, X. Xue, D. Yin, W. Wang Smart fuzzy irrigation system for litchi
    orchards Comput. Electron. Agric., 201 (2022), Article 107287 View PDFView articleView
    in ScopusGoogle Scholar Yahyaoui et al., 2017 I. Yahyaoui, F. Tadeo, M.V. Segatto
    Energy and water management for drip-irrigation of tomatoes in a semi-arid district
    Agric. Water Manag., 183 (2017), pp. 4-15 View PDFView articleView in ScopusGoogle
    Scholar Yilmaz and Harmancioglu, 2010 B. Yilmaz, N. Harmancioglu Multi-criteria
    decision making for water resource management: a case study of the Gediz River
    Basin Turkey. Water SA, 36 (5) (2010) Google Scholar Zadeh, 1999 L.A. Zadeh Fuzzy
    logic and the calculi of fuzzy rules, fuzzy graphs, and fuzzy probabilities Comput.
    Math. Appl., 37 (11–12) (1999), p. 35 View PDFView articleView in ScopusGoogle
    Scholar Cited by (0) 1 https://www.agriculture.gov.ma/fr/programme/exportation
    2 https://www.marocmeteo.ma/. View Abstract © 2023 Elsevier B.V. All rights reserved.
    Recommended articles Explainable hybrid deep learning and Coronavirus Optimization
    Algorithm for improving evapotranspiration forecasting Computers and Electronics
    in Agriculture, Volume 215, 2023, Article 108387 A.R. Troncoso-García, …, F. Martínez-Álvarez
    View PDF A novel method for seed cotton color measurement based on machine vision
    technology Computers and Electronics in Agriculture, Volume 215, 2023, Article
    108381 Hao Li, …, Qingxu Li View PDF Box-supervised dynamical instance segmentation
    for in-field cotton Computers and Electronics in Agriculture, Volume 215, 2023,
    Article 108390 Yanan Li, …, Yifei Liu View PDF Show 3 more articles Article Metrics
    Captures Readers: 18 View details About ScienceDirect Remote access Shopping cart
    Advertise Contact and support Terms and conditions Privacy policy Cookies are
    used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: Fuzzy-IoT smart irrigation system for precision scheduling and
    monitoring
  journal: Computers and Electronics in Agriculture
  limitations: null
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: Fuzzy-IoT smart irrigation system for precision scheduling and monitoring
  verbatim_quote1: '"The proposed system uses the collected data from the sensors
    unit to provide the optimal irrigation decision and communicates it with the operator
    (farmer) via a developed IoT platform. Data from soil moisture, ambient temperature,
    solar irradiance, and rainfall sensors are processed through the FL controller
    to adjust the irrigation times."'
  verbatim_quote2: '"The field experimentation of the developed SPIS in the eastern
    region of Morocco shows high efficiency and reliability by saving water and energy
    compared to traditional irrigation control."'
  verbatim_quote3: '>'
