- DOI: https://doi.org/10.1109/access.2020.3009298
  analysis: Among the types of data most applicable to irrigation management and their
    typical sources, soil water sensors, weather stations, and crop water use models
    are the most prevalent. Volumetric water content, soil water potential, and soil
    water salinity are the most common soil water measurements. Crop water use is
    determined by crop reference evapotranspiration (ETo) and crop coefficients (Kc).
    The authors applied these concepts to an algorithm to estimate irrigation amounts
    and timing while meeting farmers' soil water management objectives. The article's
    strengths include its clearly defined goal, comprehensive overview of relevant
    concepts, and in-depth description of the algorithm and its components. Despite
    some shortcomings, such as the algorithm not being tested against existing models
    or experimental data, the authors conclude that their work provides a valuable
    foundation for optimizing irrigation management in arid and semi-arid regions.
  authors:
  - Vippon Preet Kour
  - Sakshi Arora
  citation_count: 96
  full_citation: Howell, T. A. (2001, July). Enhancing water use efficiency in irrigated
    agriculture. In Deficit irrigation practices (pp. 327-352). Springer, Dordrecht.
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 8 Recent
    Developments of the Internet of Things in Agriculture: A Survey Publisher: IEEE
    Cite This PDF Vippon Preet Kour; Sakshi Arora All Authors 98 Cites in Papers 12530
    Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Sources and Search Methods III. Introduction
    to the Internet of Things (IoT) Concepts and Theories IV. Related Work V. Findings
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    A rise in the population has immensely increased the pressure on the agriculture
    sector. With the advent of technology, this decade is witnessing a shift from
    conventional approaches to the most advanced ones. The Internet of Things (IoT)
    has transformed both the quality and quantity of the agriculture sector. Hybridization
    of species along with the real-time monitoring of the farms paved a way for resource
    optimization. Scientists, research institutions, academicians, and most nations
    across the globe are moving towards the practice and execution of collaborative
    projects to explore the horizon of this field for serving mankind. The tech industry
    is racing to provide more optimal solutions. Inclusion of IoT, along with cloud
    computing, big data analytics, and wireless sensor networks can provide sufficient
    scope to predict, process, and analyze the situations and improve the activities
    in the real-time scenario. The concept of heterogeneity and interoperability of
    the devices by providing flexible, scalable, and durable methods, models are also
    opening new domains in this field. Therefore, this paper contributes towards the
    recent IoT technologies in the agriculture sector, along with the development
    of hardware and software systems. The public and private sector projects and startup''s
    started all over the globe to provide smart and sustainable solutions in precision
    agriculture are also discussed. The current scenario, applications, research potential,
    limitations, and future aspects are briefly discussed. Based on the concepts of
    IoT a precision farming framework is also proposed in this article. A graphical
    abstract for Recent developments of the Internet of Things in Agriculture: A Survey.
    Published in: IEEE Access ( Volume: 8) Page(s): 129924 - 129957 Date of Publication:
    14 July 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.3009298 Publisher:
    IEEE CCBY - IEEE is not the copyright holder of this material. Please follow the
    instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text
    articles and stipulations in the API documentation. SECTION I. Introduction The
    term ‘Agriculture’ is inferred from the Latin words ‘Ager’ means ‘Land’ and ‘Culture’
    means ‘Cultivation’. It is the milestone field of human civilization and is one
    of the benchmark areas. This field is the withstander of the economies of various
    nations. According to the Food and Agricultural Organization of the United Nations
    (FAO), more than 60% of the human population depends on agriculture for survival
    and around 12% of the total land area is under agricultural production [1]. Predicted
    by FAO, the global population will reach the mark of 8 billion people by the year
    2025 and 9.6 billion by the end of 2050 (FAO, 2009) [2]. The interpretation of
    this data shows that to tackle this population growth, an estimated increase of
    70% in food production must be achieved worldwide by 2050 [3]. Agriculture is
    also the second-largest greenhouse gas (GHG) emitter, because of fossil-based
    fertilizers, biomass, and machinery. In some of the developed and developing nations,
    the agriculture sector is the backbone of the economy. This field has a huge contribution
    in the growth of Gross Domestic Product (GDP) of developing countries, in particular,
    some of them are listed in TABLE 1. TABLE 1 Nations Having Agriculture as a Major
    Part of Their GDP [4] In India, 53% of the population is dependent on the agriculture
    sector for employment and 61.5 % of the Indian population is primarily dependent
    on the agriculture sector for its livelihood [5]. Focusing on the market size,
    India is the second-largest fruit producer in the world. Based on certain data
    and statistics, the farming income in India is expected to double by 2022. Eyeing
    this change, there is an intra-state cluster development of certain states in
    terms of the agriculture sector. The various stats and numbers representing the
    impact of agriculture in the overall economic development of India as compared
    to other fields has been shown in Fig. 1. FIGURE 1. Contributions of various sectors
    in the Indian economy [6]. Show All At present, the demand is more than the supply
    generated and this curve will illustrate more unstable results in the coming years,
    due to increase in demand with population rise. To maintain the demand-supply
    curve, there will be enormous stress on the agricultural sector. Global warming
    and changing climatic conditions are also important factors to be taken into consideration.
    From the past decades, due to the increase in demand and pressure on the overall
    structure of the field, this area is witnessing the slow but progressive shift
    from traditional approaches to the most advanced technology-driven methods. The
    use of traditional approaches and conventional methods, as well as the changes
    in the environment, lay stress on the agricultural sector. Some of the challenges
    for the agricultural sector are given as follows: The use of traditional techniques
    of farming hinders the optimization of both cost and time. Depletion of the topsoil
    due to floods and winds resulting in the deposition of the pollutants, sediments,
    nitrates, and phosphates, result in causing the eutrophication and the runoff
    of the soil. Planting the same crop after each harvest makes the soil redundant
    of the essential nutrients. Water scarcity due to the climatic changes lowers
    the level of groundwater for irrigation, thereby disturbing the water cycle. Global
    climate changes due to the destruction of the tropical forests and the other vegetative
    species in agriculture result in the elevation of the carbon dioxide and other
    greenhouse gas levels. Lack of expertise in proper recognition of the particular
    plant species. There is no proper method to detect the disease at early stages,
    such that precautionary measures could be taken to prevent it. Therefore, because
    of these factors, the need for the creation of modern methods and intensification
    of the agricultural practices to use water, soil, minerals, and other resources
    efficiently becomes obligatory. The nature of the technology and devices is changing
    i.e. it never settles for any less. A lot of research papers addressing the challenges
    of agriculture in the IoT domain have been put forth. Constant developments and
    everlasting expectations from the existing technologies paves a great way for
    motivating academicians and researchers to set and attain new standards. During
    recent years, there has been a paradigm shift in the study and application of
    domains like IoT, cloud computing, machine learning, and big data, etc. Therefore,
    from the trends of these data sets, a constant need is felt to revisit the current
    standings and capacities of the new age IoT concepts. The modern-day requirements
    and the counteractive substitutes in the field of agriculture and changes exactly
    to the expectations based on the concepts of IoT must be addressed. The contribution
    of IoT in the agriculture field and certain gaps in resource utilization motivated
    us to perform a study that addresses current issues and applications of IoT in
    agriculture. Agriculture is expected to get immensely fortified by the advancement
    of technology especially by the domain IoT. Precision agriculture is the new term
    appended to the agriculture filed, with all the procedures being followed, addressed,
    and simulated in a tech-driven manner. Incorporation of the internet has started
    to revolutionize this field by associating devices together, now being identified
    as the Internet of Things. Coined in 1999 by a British visionary “Kevin Ashton”,
    Internet of Things is a consortium of devices connected [7]. The devices are associated
    with internet via Wireless Sensor Networks (WSN), Radio-frequency Identification
    (RIFD), Near Field Communication (NFC), Long Term Evolution (LTE), and other devices
    and communication technologies. This association helps the devices and the other
    objects transfer the information gathered to destined places all over the network.
    Precision agriculture, therefore, aims to optimize and improve agricultural processes
    to ensure optimum production with reliable, fast, and distributed dimensions thus
    providing growers a detailed overview of the ongoing scenarios in the cultivation
    stretches. This practice is followed to reduce energy consumption. The major areas
    where IoT can leave an everlasting impression are climate monitoring [8], data
    analytics [9], early disease detection [10], crop counting [11], smart irrigation
    [12], etc. With the spread of a network of devices, a communication channel can
    be established between the farmers, fields, and experts. By developing IoT based
    models, the field conditions can be monitored remotely on regular time intervals
    without any human intervention and after analyzing the data favorable and efficient
    decisions can be taken accordingly. This will help to ensure both field and market
    safety and security to the farmer. Also, with early monitoring of crops, disease
    detection can be done and thus preventive measures can be taken to save the crop
    beforehand. For producers it will also help in the analysis of consumer demands.
    Whether the product will be able to meet market expectations, thus creating an
    intelligent decision driven farming. An analysis of different existing articles
    addressing the research and development of precision agriculture is presented
    in TABLE 2. TABLE 2 Alaysis of Various Papers in the Field of Precison Agricuture
    for the Current Study In this article based on research gaps and findings obtained
    from articles analyzed below, a systematic survey is done. Therefore in this study,
    the most prominent problems of the agriculture sector, and solutions provided
    by modern systems are addressed and discussed in detail. The major contributions
    of this study are as follows: A comprehensive survey of the architectural, conceptual,
    and implementation details of IoT models adopted for Precision Agriculture has
    been carried out. Various IoT hardware platforms and other associated devices
    like sensors, accumulators, etc. along with their role in agriculture have been
    discussed in brief. Various IoT OS supported for Precision Agriculture have been
    discussed. The significance and key differences of MIoT in agriculture have been
    discussed along with related studies. Studies limited to a specific domain has
    been merged together for clear mapping of the domain. Sensors and their role in
    agriculture is discussed. Various projects/ start-up’s started all over the globe
    for tacking agricultural problems and providing intelligent and sustainable solutions
    to farmers have also been discussed. Functional concepts like limitations, improvements,
    future works and applications are discussed separately. The rest of the paper
    has been organized as in Section 2 various search and source methods used for
    the selections of relevant articles has been introduced, in Section 3 to get into
    the deep insight of the various concepts, theories, and devices related to the
    implementation of Internet of Things has been discussed, followed by Section 4
    which gives the various related studies concerning different applications of Internet
    of Things in Agriculture, findings like challenges, limitations, improvements,
    future work, etc. with a short description of our proposed work has been given
    in Section 5, and finally, at last, the article ends with a conclusion. Table
    3 gives the detailed nomenclature used throughout this article. TABLE 3 Nomenclature
    SECTION II. Sources and Search Methods The research methodology consists of going
    through articles based on the contribution of IoT and its related technologies
    for the advancement and development of the agriculture filed. For designing the
    overall structure of this article, the data and selected studies are chosen strictly
    based on a time frame. Most of the articles taken for study are sorted from 2015
    to 2020. This time frame is chosen to visualize and understand the current impact
    of IoT in the field. In TABLE 4, a summary of the resources from where the papers
    have been selected is presented. TABLE 4 Summary of the E-Reserves for Obtaining
    the Related Research Articles Given the objective of this article, research has
    been conducted thoroughly by examining the existing literature work related to
    the subject. For developing a firm foundation, the articles containing the origin
    of IoT, alongside current standings, recent trends, and technologies, were considered
    for a study concerning their contributions to the field of agriculture. By reviewing
    the existing literature, a sustainable framework has been developed to overcome
    the existing challenges in the field. The keywords mainly used to identify the
    literature included Precision Agriculture, Agriculture, Plant Monitoring, Internet
    of Things, Smart Agriculture, Smart Farming, Irrigation, Plant Pathology, Wireless
    Sensor Networks, etc. The eight-year trends of the different terminologies and
    their search significance over the years have been extracted from Google and are
    presented in Fig. 2 and Fig. 3. FIGURE 2. Worldwide distribution of IoT of the
    past eight years [19]. Show All FIGURE 3. Precision Agriculture distribution worldwide
    of the past eight years [19]. Show All From the figures, it can be seen that the
    frequency of search or usage of these two terms is somewhat stable over the past
    eight years. An average, 80% of people talk and search about these topics for
    study and other related purposes, thus establishing the growing interest worldwide
    in this area. So for a better understanding, in the next section, the various
    terminologies related to the Internet of things concepts and devise have been
    discussed. SECTION III. Introduction to the Internet of Things (IoT) Concepts
    and Theories Inspired from the technology of the internet to connect the whole
    world, the Internet of Things constitutes of things possessing unique identities
    and are connected to the internet. A cosmos of sensors, actuators, appliances,
    and other devices connected with each over the internet, results in making the
    Internet of Things (IoT). The scope of IoT is not just limited to only connecting
    things but to allow them to communicate and exchange data. Based on the Electronic
    Devices and Network Annex-IEA-4E (EDNA), by 2020 the number of connected devices
    will rise to 50 billion, thus resulting in the generation of high revenue. IoT
    works in a layered manner depending upon the problem it is addressing. Therefore,
    it can be define that IoT possesses a layered architecture [20]. All these layers
    combined are called the IoT functional blocks. Apart from the functional blocks,
    various communication models that aid the smooth working of an IoT model are a
    request-response model, publish-subscribe, push-pull, and exclusive pair [20].
    Fig. 4 represents the reference architecture of IoT in agriculture and includes
    the following layers: device/physical layer, network layer, middleware layer,
    service layer, analytics layer, and end-user layer. The layered architecture includes
    all the hardware devices, facilities, equipment, internet, communication technologies,
    protocols, and data analytic algorithms. How the layers work along with each other
    is described below: Perception Layer: Also called physical or the device layer,
    this layer lies at the bottom of the architecture and constitutes of sensors,
    actuators, microcontrollers, gateways, routers, switches, hubs, etc. The main
    role of this layer is, how efficiently the sensing devices and the other equipment’s
    can work together to gather data. The microcontroller device acts as a controller
    as it performs all the networking ifunctionalities. The microcontroller also acts
    as a network regulating body as it regulates the networks, such that the sensors
    and other devices can collect data. The main aim of this layer is to capture data
    and transfer it to the other layer i.e., the higher abstraction layers. In terms
    of agriculture, the devices in the physical layer gather, soil, water, pH value,
    humidity, leaf wetness, and other data parameters. Also, the topology in which
    the devices are placed plays a major role in power consumption and efficient data
    collection in this layer. Network Layer: It comprises of internet and other communication
    technologies. The main aim of this layer is, how to achieve better communication
    in the platform. In terms of agriculture, the design of this layer plays an important
    role in a framework due to the selection of suitable communication technologies
    relevant to field size or the test bed size. LTE, CDMA, GSM, Wi-Fi, ZigBee, LoRa,
    NFC, UWB Bluetooth, and RIFD are some of the communication technologies used for
    agriculture purposes. ZigBee, LoRa, and NFC are the most used communication technologies
    employed depending upon the problem and the area to be addressed in the agro domain.
    NFC and Bluetooth are the most suitable for the greenhouses. Various protocols
    like HTTP, WWW, and SMTP serve for efficient communication in the agricultural
    scenarios. Middleware Layer: This layer in IoT architecture is accountable for
    device management, context awareness, interoperability, portability, and security-related
    responsibilities. In terms of agriculture scenarios, HYDRA, SMEPP act as best
    middleware due to their context-aware functionalities. Service Layer: Dealing
    with agricultural problems, cloud-assisted service layer in IoT layered architecture
    plays a prominent role in providing cloud storage and Software-as-a-Service (SaaS).
    To facilitate the function of sensing, actuation, and other activities, this layer
    focuses on some main areas or domains such as monitoring, detection, control,
    decision making, recognition, etc. The service layer offers services like device
    monitoring, control, discovery, and data publishing services. Analytics Layer:
    The layer is responsible for the processing and analysis of data. This layer works
    as a consortium of two steps- 1) Data ingestion, is the step that performs storage,
    cleansing, and streaming of data and the 2) Data analytics, which performs data
    reporting, mining, and learning. In the analytics layer various machine learning
    tools, data analytic algorithms are employed to give early predictive decisions
    for measuring the crop yield, crop growth, disease detection, etc. These decisions
    can enhance farm monitoring capacity. The predictive decisions can help in the
    design of better decision support systems. End-User Layer: Being the topmost layer
    of the model, it serves the consumer or the user. To provide the interface to
    the users to control and monitor their model, this layer allows them to view the
    system status, analyze or process the data. In agro models, the farmer is the
    end-user. This layer provides a user-friendly experience and platform to the farmers.
    The services or applications in this layer are designed based on the behavioral
    study and pattern analysis of the user. Various intelligent approaches and data
    analytic studies are employed to understand the behavior of the users, as they
    come with different needs and offer a lot of diversity. Social media, Cloud computing,
    Mobile messaging are the platforms used to provide services to users, experts,
    and industries. Through this layer, the whole IoT based platform can be monitored,
    controlled, and run. The services generated from this layer are mostly the link
    between the user and the systems/platforms. FIGURE 4. A layered ecosystem/architecture
    of Agro-IoT. Show All A. Multimedia Internet of Things (MIoT) in Agriculture Based
    on the working, nature of deployment, and the subject IoT concepts are used to
    address, traditional IoT is differentiated into various forms such as IoMT, MIoT,
    IIoT, etc. Without the inclusion of these concepts, IoT systems cannot successfully
    realize the concept of ubiquitous computing. In these paradigms, the interaction
    and cooperation between the heterogeneous devices is facilitated. Due to the increase
    in the number, diversity of devices and data with time, these concepts have become
    more functional and prominent to develop models and techniques for coming challenges
    and reflect the possibilities enabled in them. All these concepts have the same
    main character of availability, intelligence, and devices but they only differ
    in their due course of action i.e., their general usage. Being an allied branch
    or extension of IoT, MIoT, include smart objects that are usually resource-constrained,
    in terms of memory, energy, and processing power. Due to the progressive reduction
    in size and cost of production of these devices, MIoT models are expected to be
    developed and deployed on a large scale. Generally, the sensors of these models
    are usually designed to be battery operated or solar power operated. Due to the
    large data sensing and analysis, these devices require high computational power.
    Mostly, the multimedia data includes audio, video, and image data, which possess
    unstructured features and is difficult to transmit and analyze on a computationally
    scarce network and low bandwidth conditions. Multimedia data shows different behavior
    compared to the scalar data due to its computational complexity and network topology
    bottlenecks to the Quality of Service (QoS). A lot of work has been done in IoT
    and its allied fields to realize the concept of heterogeneous, low-level data
    transmission, and communication. In agricultural frameworks, the data is mostly
    in the visual form e.g., pest images, plant disease images, field images, etc.
    The characteristic difference in scalar and multimedia data is shown in Fig. 5.
    FIGURE 5. Key characteristic differences between IoT and MIoT data [25]. Show
    All Depending upon the various parameters there are key differences between IoT
    and MIoT and they are discussed as: The IoT systems work mostly on non-heterogeneous
    devices while the MIoT functions well in case of heterogeneity. IoT data is mostly
    scalar, however, MIoT considers the multimedia data. Traditional IoT networks
    does not take into consideration the concept QoS while transmission and communication
    whereas in case of MIoT, QoS and QoE play a major role as the prime parameters.
    IoT can function well over low bandwidth channels whereas MIoT networks are in
    demand of high bandwidth due to bulky data. Node operation is predefined in IoT
    whereas in MIoT the node operation is adaptive in nature. Various authors have
    worked on the implementation of concepts of MIoT for agriculture. Zhang et al.
    [21], worked on the concept of preserving the concept of data confidentiality
    while realizing the challenge of low-cost data acquisition. A measurement matrix
    under the control of chaos and random subsampling is employed to capture the ruptured
    image signals. Then these sampled sub-images are assembled to form a big master
    image and then encrypted based on android transform and single value diffusion.
    Correlation, histogram, keyspace, robustness, real-time, and entropy analysis
    are performed to understand and realize the concept of low-level transmission.
    Rani et al. [22], worked on the concept of bridging the gap between the scalar
    and multimedia data, and for this, they developed an IoMT cross-layer protocol.
    This protocol considered cross-communication between the physical, data link,
    and routing layers. The main objective of this work was to achieve energy-efficient
    communication with less computational time complexity. An optimal mathematical
    model was developed to study the cross-layer behavior in all the three layers,
    therefore selecting the efficient one. A comparative study was conducted on two
    parameters like delay and distance. Usman et al. [23], proposed a multilayer framework
    based on multilevel edge computing architecture to manage, and preserve the privacy
    of end devices from external attacks. Authors mainly focused on the three major
    challenges i.e., node management, privacy-preserving, and network protection.
    The proposed architecture is divided into three layers with the first layer comprising
    of underlying network partitioned into multiple clusters to manage end-devices
    and Level-One Edge Devices (LOEDs). In the second layer, the LOEDs apply an efficient
    aggregation technique to reduce the volumes of generated data and preserve the
    privacy of end-devices. Local differential privacy-based technique is applied
    to protect the privacy of sensitive information in aggregated data. In the last
    layer, the mobile sinks are registered with a level-two edge device via a handshaking
    mechanism to protect the underlying network from external threats. Floris and
    Atzori [24], addressed the issue of evaluation of Quality of Experience (QoE)
    for IoT applications where mostly multimedia data is involved. For designing a
    layered architecture, authors first tried to analyze the QoE parameters or factors
    with applications in the relevant scenarios. Then a layered multimedia IoT architecture
    was proposed for QoE analysis by combing each of the analytic and contributing
    factors. Zikria et al. [25], presented a brief overview of the MIoT along with
    its challenges, solutions and future opportunities. The authors discussed the
    data differences between the traditional IoT and MIoT, along with the role of
    communication technologies. The demand for realizing the dream of MIoT and its
    bottlenecks were also discussed. The challenge of data collection and its impact
    over the network traffic is also discussed along with the methodologies developed
    to solve it. Nauman et al. [26], presented a comprehensive survey on the multimedia
    internet of things. Authors discussed the existing role of MIoT in concern with
    various fields like medical, agriculture, automation, and industry, etc. The importance
    of QoE and QoS for multimedia transmission over IoT channels is also discussed.
    A better need for routing and Physical-Medium Access Control (PHY-MAC) protocols
    for M-IoT was also discussed. A potential discussion on open research issues related
    to multimedia communication in IoT was presented. Alsamhi et al. [27], presented
    a survey on the role of green IoT in greener and smart cities. The authors focused
    on how the environment pollution can be controlled along with other parameters
    for making living more sustainable and green with the aid of IoT concepts. AlSkaif
    et al. [28], presented a survey on the energy efficiency of MAC protocols in low
    data rate wireless multimedia sensors. The conflicting goals of WMSN were also
    discussed. Role and challenges of multimedia data were also discussed. A focused
    analysis was performed on network parameter constraints and what techniques are
    employed to solve them. A comparison of the energy consumption of MAC protocols
    in four selected application scenarios related to smart cities and environment
    monitoring was also presented. Libo et al. [29], worked on how with the use of
    multimedia data in the form of images can be employed to detect the plant diseases.
    Rape diseases were studied as a case study. Authors also discussed the challenges
    and bottlenecks faced for the transfer of multimedia data over low bandwidth channels.
    With machine intelligence, authors also proposed a diagnostic procedure via which
    the data can be transferred over wireless multimedia sensors networks. Psannis
    et al. [30], proposed a technique for the transfer of advanced media-based smart
    big data via intelligent systems. Authors in their work addressed the problem
    of the rapid rise of devices and heterogeneity. An encoding algorithm with HVEC
    standard for performance evaluation was proposed to transfer the data intelligently.
    B. Hardware Platforms for IoT The hardware platform for IoT comprises a set of
    compatible hardware capable of running certain software. The main components of
    a hardware platform are machine language, sensors, wireless devices, programs,
    and processors, protocols, etc. The processor in a hardware platform determines
    how much fast a framework can work. To design certain new methodologies in IoT,
    various hardware platforms supported are elaborated as: 1) Raspberry Pi It is
    a series of single-board computers developed in the UK by Raspberry foundation.
    There are various families of raspberry i.e., Raspberry Pi 1, Raspberry Pi 2,
    Raspberry Pi 3, Raspberry Pi Zero, Raspberry Pi 4. All these families have different
    models. The Broadcom processor is used in most of the boards. It acts more like
    a computer system and can do multitasking [31]. 2) Arduino Uno Developed by Arduino.cc,
    it is a microcontroller board and is based on the ATMega32 processor. Arduino
    Uno possessing a USB port is a very valuable addition to the family of microcontrollers.
    Various versions of Arduino like Arduino Uno, Arduino Due, Arduino Leonardo, and
    Arduino Mega are present in the market. Out of these the most common versions
    are Arduino Uno and Arduino Mega [32]. 3) Node MCU It is an open-source IoT platform.
    It generally refers to firmware rather than the development kits. It is a low-cost
    open-source kit/module developed for the ESP8266 Wi-Fi chip. It is developed in
    the Arduino IDE environment [33]. 4) Beaglebone Developed by Texas Instruments,
    it is a low-cost open-source single-board computer. Its size measures 75 by 75
    mm and possesses all the functionality of a basic computer. It requires 2W of
    power or a 5V separate power and can work smoothly without any cooling or sinks
    [34], [35]. 5) Banana Pi It is a low-cost credit-card-sized single-board computer
    developed by a Chinese company Shenzhen SINOVOIP Co. Ltd. The hardware design
    is hugely influenced by Raspberry Pi. It is compatible with Raspberry Pi boards
    as well. It can be developed both on Android and Linux [36]. The various hardware
    platforms of IoT with their functional specifications are given in TABLE 5. TABLE
    5 Hardware Platforms of IoT and Their Specifications C. IoT Operating System (IoT
    OS) for Agriculture IoT operating system (IoT OS) is an operating system designed
    to perform within the constraints particular to Internet of Things devices. IoT
    OS are designed and developed in such a way that it can function under the restrictions
    of memory, size, power and processing capability. The main aim of IoT OS is to
    enable successful data transfer over the network via internet. The IoT OS for
    a particular framework is not chosen at random. Certain parameters such as footprint,
    scalability, portability, modularity, connectivity, and reliability are taken
    into consideration. As per the requirement of agriculture, a huge number of devices
    are connected having different features and also the devices have to withstand
    the different environments, the OS then to be chosen must be scalable, cost-efficient,
    and reliable. Various studies have been put forward for the role of IoT OS in
    network management and overall communication. Javed et al. [37], provided a detailed
    reviewed comparison of the operating systems designed for IoT devices based on
    their architecture, scheduling methods, networking technologies, programming models,
    power, and memory management methods, along with other features required for IoT
    OS applications. Musaddiq et al. [38], studied the role of small IoTOS in powering
    the scarce network devices. Authors also put light on the energy consumption of
    these devices. A detailed discussion on IoT devices and resource management is
    provided and some state of art IoT OSs such as Contiki, TinyOS, and FreeRTOS are
    also investigated. Baccelli et al. [39], a comprehensive review of RIOT is provided.
    The key components highlighted in this study are the kernel, hardware abstraction,
    software modularity for various configurations. The authors also discussed the
    operational aspects like system boot-up, timers, power management, and networking
    along with the relevant APIs. Zikria et al. [40], proposed a study for the management,
    challenges, and opportunities of IoT OS in managing IoT systems. The authors discussed
    the issue of interoperability, protocol functionalities to support heterogeneous
    deployment scenarios. Supported hardware and future research trends are also discussed.
    Ain et al. [41], proposed an efficient and flexible decision-making system for
    maintaining user thermal comfort with the help of intelligent sensors. Fuzzy based
    approach along with RIOT OS was developed to tackle the problem of fluctuation
    and adjustment. Results show that the proposed approach can perform 28% better
    than the existing approaches in terms of energy efficiency. Stergiou et al. [42],
    studied the transfer of metadata in the IoT networks. Authors discussed the techniques
    and open tools such as CC analyzers and simulators which can provide intelligent
    metadata transfer over a network. The experimentation was performed on CloudSim
    and Cooja emulator of Contiki OS for the testing of a single network segment.
    From the experimentation, it was found that no duplicate packet transfer occurred
    which is a good sign for multimedia data transmission. The various IoT OS with
    their functional specifications are presented in TABLE 6. TABLE 6 IoT OS Platforms
    in Agriculture and Their Specifications D. Sensors and Their Role in Agriculture
    Sensors are the devices, modules, machines or subsystems capable of detecting
    the changes or events in the environment. They also send signals back to the receiver
    end. Mostly the sensors are used with other electronics. A sensors sensitivity
    usually indicates how much change in sensor output occurs with respect to the
    change in the input quantity measurements. Most sensors possess the linear transfer
    function. The sensitivity of a sensor is defined as the ratio between the output
    signal and the measured property. The resolution of a sensor is the smallest change
    it can detect in the quantity it is measuring. In the area of agriculture, demand
    of technological solutions with high aim in rising production and quality is increasing
    day by day. Also the solutions are required which provide optimal analysis and
    sustainable methods for the field development with reduced cost and time. To sustain
    such challenges, sensor- based technologies have proven to be of much help to
    tackle the above issues and challenges. Precision agriculture is an emerging area
    where sensor based technologies are playing a major role. Since the sensors are
    a major data collection agents, they play a dynamic role in agriculture. Also,
    it is very difficult to collect the data from an agricultural field due to the
    undulating field conditions that keep on changing over time. Sensors are selected
    or designed according the problem to be addressed or needs identified by the farmers.
    Agriculturalists generally use sensors to sense the soil conditions, humidity,
    crop conditions, minerals, pH value, water levels, and sunlight, etc. The nature
    and the characteristics of the component which needs to be sensed also plays a
    major role in the development of a sensing device. With the development of technology,
    machinery and easy-to-use microcontroller platforms, the usage of sensors has
    expanded beyond the traditional fields of measurement i.e., temperature, pressure
    and flow. However, the analog sensors such as potentiometers and force sensing
    resistors are still widely in use. Pajares et al. [54], discussed the sensors
    in agriculture and forestry. In the article, various related works of the sensors
    performed by different authors in the same domain were presented. The role and
    importance of the component or substance which needs to be sensed was discussed
    along with their characteristics and specifications. The major areas focused by
    authors were soil analysis, seed growth, weed detection, forest stands and reflectance,
    machinery for effective treatments, microorganisms, pest control, seedling breeding,
    growing, state of health, positioning, navigation, safety, detection and classification.
    Zhu et al. [55], showed that LIDAR, IMU, and Encoder (x2) can be used for designing
    a prototype vehicle for the agricultural domain. The authors also discussed how
    these sensors can be used for the development and usage of that prototype in case
    of undulating surfaces and rough terrains. A complete review of the wireless sensors
    and the network applications used in agriculture is provided. The authors also
    addressed the importance of sensors in the field of agriculture. Along with the
    sensors, the communication technologies that support sensor communications are
    also mentioned by Rehman et al. [56]. The sensors used in the medical and agricultural
    fields have also been discussed. In the case of the agricultural field, the various
    conditions and circumstances affecting the data collection from sensors are addressed.
    The various types of sensors and their platforms used by different authors in
    their work are also included by Chokkareddy et al. [57]. Plageras et al. [58],
    used efficient IoT based sensor and big data analytics for secure collection of
    data and communication over a channel. In the study, smart housing or building
    was taken as case study, and the secure data collection with the sensors was performed
    and analyzed. The behavior of various sensors for data collection in different
    scenarios in terms of IoT and cloud computing was studied by Stergiou et al. [59].
    The secure communication among devices was also studied along with performance
    bottlenecks and challenges. The various sensors and their use in agriculture is
    discussed below: 1) Level Sensors They measure the substance of liquid in a cast.
    The cast can be any agricultural field, pond, water tank, etc. They measure data
    in two methodologies 1) Point level measurements: indicate only whether the constituent
    or level measured is above or below the sensing point or threshold. 2) Continuous
    measurements: specific range measurements and exact substance amount determination
    are performed by these sensors. In agricultural fields, the water level sensors,
    humidity sensors, and moisture sensors are used to measure the water content levels
    in a field. The point level sensors are used when the water content in the cast
    i.e., soil or testbed is very less i.e. in dry and arid areas, whereas the continuous
    level sensors are feasible for semi-arid locations. Some of the ultrasonic level
    sensors are also used in water treatment plants. Blank et al. [60], designed a
    low-level senor based fusion application for agricultural machinery design. 2)
    Temperature Sensor Temperature sensors measure the temperature of the environment
    or surroundings. They are of different types i.e. thermistors, thermocouples,
    resistance temperature detectors, infrared sensors, semiconductor sensors. In
    agriculture they measure the temperature variants in a field. Mahan et al. [61]
    designed an optimal temperature based field monitoring system by using a low-cost
    infrared sensor. 3) Proximity Sensors Detect the presence of nearby objects without
    any physical intervention. The sensor works by emitting an electromagnetic beam
    in the field and looks for any alterations in the signal. These are mainly employed
    in agricultural cattle grazing, counting of fruits, etc. Kim et al. [62] used
    a capacitive proximity sensor to optimize the harvest yield of fields. 4) Infrared
    Sensors Senses the changes in the environment by emitting infrared rays. They
    work in two approaches i.e., active and passive. An active IR sensor can both
    emit and detect the radiations and constitute a light-emitting diode and a receiver.
    The passive IR sensors can only detect the radiation and possess only a LED. In
    agriculture field infrared sensors can be employed to detect the presence of rodents
    in the orchards, count the number of plants or trees in the field, capturing satellite
    images of the field. Allred et al. [63], used IR sensor-based satellite imagery
    to map the findings and results of UAV to chart agricultural drainage systems.
    5) Touch Sensors Also known as tactile sensors, work on sensing the touch. They
    are low-cost sensors. In the agriculture field they can be used for the detection
    of intrusions in the field. Depending on the target and the range, there are different
    types of sensors, the same are discussed in Fig. 6 and TABLE 7 below: TABLE 7
    Sensors Based on Their Fields of Application FIGURE 6. Sensors and their types.
    Show All SECTION IV. Related Work The advancement and role of the Internet of
    Things in precision agriculture along with the related areas where research is
    being conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections. Various studies are performed and put forward by various
    academicians and authors concerning the evolution of agriculture relating to the
    incubation of the concepts of the Internet of Things. Kim et al. [64], reviewed
    different articles related to the induction of unmanned aerial vehicles in agriculture.
    The authors highlighted the recent trends, controls, perspectives, and platforms
    of UAV for agriculture. The study focused on what are the different platforms
    used for UAV and how those platforms can be designed. The hardware components
    related to the design of UAVs were also discussed. Sensor types compatible with
    platforms such as fixed-wing, helicopter, quadcopter, etc. were also discussed.
    A study on critical technologies for communication, modeling, and control was
    also presented. Various applications of UAVs in crop monitoring, spraying, and
    mapping, etc. were also presented. The authors concluded their study by providing
    the data on the latest technology trends and applications of UAVs in agriculture.
    Ayaz et al. [65], studied the latest trends and technologies in the field of agriculture.
    The potential sensors, IoT devices, communication techniques, used for soil, crop
    irrigation, insect, pest analysis were studied and discussed. Also, how this technology
    is redefining the agriculture system and boosting farmers to work, is portrayed.
    Authors studied the recent developments of IoT and how it is helping in providing
    the solutions while designing an IoT system for agriculture, what strategies and
    policies need to be considered. The advanced agricultural practices such as greenhouses,
    vertical farming, hydroponic farming, and phenotyping are also explained. All
    the crop stages and potential challenges are also discussed. Farooq et al. [66],
    presented many aspects of IoT in agriculture. Authors discussed all the recent
    technologies associated with IoT along with big data analytics for the development
    of precision agriculture systems. Various network topologies, architectures, layers,
    and protocols are also presented. In context to the development of a smart farm,
    all the major components and relevant technologies were discussed. Also, the regulations,
    standardizations, and policies used by several countries to standardize IoT methods
    for agriculture have been discussed. Elijah et al. [67], gave an overview of IoT
    and data analytics technologies and practices in agriculture. The authors divided
    their study into four sections i.e., communication technology, internet, data
    storage, technology. The authors also provided an analysis and data on how the
    aforementioned sections can be employed for dealing with the diminishing agricultural
    resources. The pros and cons of various technologies such as cloud computing,
    WSN, radio frequency identification, middleware systems, etc. to their application
    in the agriculture field are also discussed. Studies on how these technologies
    can be used to develop an IoT ecosystem, with technical and business scenarios
    were also presented. Misra et al. [68], discussed the concepts and role of IoT,
    AI and big data in the field of agriculture. In the review, focus was laid on
    green- house monitoring, disease detection, usage UAV machines and drones agriculture
    and supply chain modernization, social media in food industry, food quality assessment
    and modernization for food traceability. Thakur et al. [69], reviewed articles
    of repute in the context of the employability of WSN in agriculture. The authors
    highlighted the different communication technologies and WSN technologies adopted
    for precision agriculture. The authors also discussed various sensors and their
    role in agriculture. The influence of various techniques for designing the models
    is also discussed at length. Damos [70], presented a review on the pest control
    in precision agriculture. The author discussed the various computer-aided technologies
    employed for forecasting and designing decision support systems. The challenges
    and constraints of designing the decision support system were highlighted. The
    most available and published data present online in terms of pest management was
    also discussed. A differentiation between the documented and existing decision
    support systems was highlighted. The advancement and role of the internet of things
    in precision agriculture along with the related areas where research is being
    conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections and are discussed as follows: A. IoT in Farm Management
    Farm management refers to the construction and implementation of decisions for
    obtaining the maximum production and profit via organizational operation of decisions.
    This area is most benefitted by automation and the implementation of new technological
    methods. With farm management agricultural practices are made informative by evaluation
    and comparison with the other developed approaches and methods. Diedrichs et al.
    [71], with the aid of machine learning and IoT sensing devices, predicted the
    occurrence of frost events. Authors designed their system based on three layers
    i.e., a group of internet-enabled devices for water data collection. The authors
    augmented the data using the synthetic minority oversampling technique due to
    its capability of reducing the occurrence of errors with the ML approaches. The
    humidity and temperature sensors were employed to collect data from five meteorological
    stations of the Mendoza Province of Argentina. For each station, the existing
    sensor data spanning from a period 2001 to 2016 was taken as a reference to collect
    the daily data. The data was divided into two sets i.e., locally available is
    the config-local and the one available globally is the config-all. Bayesian Networks
    were employed along with SMOTE and recursive portioning, to train the system.
    Jawad et al. [72], designed a wireless power transfer technology based on a drone
    charging system for smart agriculture. The authors used the concepts of magnetic
    resonator coupling and sleep/active modes of charge transfer system for designing
    the model. Authors mainly focused on how to charge wirelessly the drones and other
    equipment employed in agricultural field monitoring. The magnetic resonant coupling
    technique was considered due to its capability of high power transfer and efficiency.
    In the experimentation, authors found that the FSC coil with 150 coil turns in
    the transmitter circuit and the MTC comprising of 60 coil turns in the receiver
    (i.e. drone) accomplish the maximum transfer power and efficiency. For finding
    the accurate efficiency, the model was tested based on different load, and how
    to load misalignment changes the model behavior was also noted. Drone flight time
    was also taken into consideration and was estimated based on the adopted battery
    capacity and payload of the drone. Tseng et al. [73], proposed an intelligent
    IoT based platform for farm management. The authors took the data based on different
    plants i.e., beans, spinach, celery via sensors, and used 3D normalization on
    that data to extract the optimal/useful data. The average and variance were moved
    to obtain user data without making any visible changes in the actual data. Farmer’s
    behavior was analyzed for the application of pesticides and fertilizers. For the
    platform development SIM5320E, IoT Development Board is used along with the BH1750
    illumination sensor and BME280 temperature and moisture sensor. Bacco et al. [74],
    designed a model based on air-ground UAV communications for smart farming. Authors
    empirically and analytically developed a real test-bed implementation of IEEE
    802.15.4 based communication between unmanned aerial vehicle and ground sensors.
    The focus was laid on how to transfer data between sensors and other devices present
    on the ground in an optimized manner to ensure fewer transmission losses. From
    the experimentation, and result analysis authors found the Gilbert-Elliot model
    to be suitable to approximate the packet loss in the link at low transmission
    speeds. The authors used approximately 80,000 datasets from the testbed. Ahmed
    et al. [75], based on the concepts of fog computing and Wi-Fi-based long-distance
    networks proposed a system for smart monitoring. In comparison to the existing
    traditional models, a scalable and flexible model was designed for monitoring
    and controlling agro farms in rural areas. Authors introduced a WiLD network and
    fog computing in the existing WSN-based solutions to cover long ranges with fewer
    delays. A cross-layer based MAC and routing solution for sensing and actuating
    were proposed to reduce the network latency. Throughput, coverage range, and network
    latency of the network structure were analyzed. Liu et al. [76], by hybridizing
    the concepts of IoT, cloud computing, and data mining proposed an integrated framework
    for the agricultural field. China was considered as the territory to design and
    devise mechanisms to enhance modern agriculture as compared to the conventional
    one. Quality, safety, management, and pollution are were taken into consideration
    while designing the model. NoSql database, DynamoDB, relational database Oracle,
    and file object storage Amazon S3, were employed to provide the hybrid data storage
    design. Bai et al. [77], due to the issue of frequently changing environmental
    conditions addressed the issue of estimation and control in the greenhouse. The
    authors studied how to collaboratively deploy WSNs and actuator schemes for agriculture.
    Sensor nodes were used to conduct a local estimation with Kalman filters to enhance
    the stability and transmission of data ensuring energy optimization. Using the
    concepts of collective clustering and mutual effect, the actuator node based scheme
    is designed for the improvement of estimation speed and conversion accuracy. Parameter
    optimization is achieved through fuzzy neural networks along with the PID control
    algorithm. Jinbo et al. [78], performed research on developing a platform for
    the monitoring of a field with agricultural modernization. A system named DEMO
    was proposed by using the SpringMVC framework, MyBatis, Spring Data DynamoDB Stored
    Procedure, Paho, and other related technologies grounded on the J2EE platform.
    Open-source elements such as raspberry, IoT gateway integrated with the ZigBee
    module were used for the development of the platform and were chosen due to their
    stable and cost-efficient properties. The proposed system is capable of massive
    data processing and analysis for agricultural monitoring. RESTful interface service
    system developed on a cloud platform, ExtJs client technology, and WeChat were
    applied to develop the Demo system of an application layer. Mukherjee et al. [79],
    worked on the challenges of a decentralized and heterogeneous UAV swarm deployment.
    The work is focused on how to design and deploy a UAV in resource-constrained,
    harsh, and challenging environments. Swarm edge due to its heterogeneous nature
    and unequal data generation within its member’s results in under-utilization of
    the available computational resources. To solve this issue, the authors proposed
    a Nash bargaining-based weighted intra edge processing offload scheme which can
    reduce the problem of heavy processing in some swarm members. The proposed method
    achieves better scalability and reduced processing delays. Chen et al. [80], developed
    an IoT based inexpensive platform named ‘AgriTalk’ for precision soil farming.
    Turmeric plant was considered for cultivation and experiments were conducted to
    enhance its growth and production. Authors employed AgriTalk in developing several
    other IoT based models for the fields of Mountain Bao in Taiwan. For the study
    authors grew turmeric in three fields. The proposed model is capable of addressing
    dynamic changes in the field conditions for plants grown via in-soil cultivation.
    Automated devices like sensors, actuators with desired farming intelligence were
    employed to design the model. Manual delays for automatic control and switching
    over long distances were also addressed. From experim-entation it was found that
    the curcumin concentration in turmeric leaves after six months was elevated to
    6685.6 μM as compared to 72.1 μM thus witnessing a fivefold increase. Lopez et
    al. [81], proposed a smart system for estimation of soil parameters using an autonomous
    wireless sensor network. Phosphorus content in the soil was measured. For power
    optimization and maintaining a balance between change rate phenomena of soil throughout
    the day for phosphorous estimation, authors developed a dynamic power management
    approach. DPM was tested on both the circuit level and the system level. ANN was
    used to find the significant correlations between the soil parameters such as
    electrical conductivity, phosphorous, temperature, and humidity. Also, energy
    harvesting with the help of IoT and cloud services is proposed. Chen and Yang
    [82], provided a detailed analysis of how efficiently the systems can be developed
    for agriculture based on the techniques of data visualization, clustering, etc.
    The authors studied the significance of various parameters in the same environment
    and effects. For the promotion of efficient development of agriculture, the authors
    proved that data visualization and cluster analysis pave a way for finding the
    key technologies to be applied in modern agriculture. For time and cost optimization,
    functions such as sensing, monitoring, identification, transmission, and feedback
    can be realized using IOT platforms and they can serve as an impetus for intelligent
    agriculture. To test and develop their methodology, authors took the agriculture
    situation in the Jhinsa river basin which lies in the upper reaches of the Yangtze
    River as a testbed. This area has become the most abundant area of biological
    communities in Eurasia. For the study, the authors collected precipitation and
    temperature data. Since data was large, k-means clustering is used to analyze
    the data. Leng et al. [83], presented a study for the application of IoT in agricultural
    products supply chain management. Authors discussed in length what to take into
    consideration, while designing a structural model for the supply chain management.
    RIFD technology was considered as the key constituent for designing the model.
    Pereira et al. [84], based on the concepts of IoT developed an instrument capable
    of performing environment monitoring in a poultry farm. The authors focused on
    designing a cost efficient prototype for the poultry monitoring which provides
    affordable benefits compared to the commercial products available in the market.
    DHT22 sensors were used to collect air pressure and temperature details and CPU
    such as Wemos Mini D1with chipset ESP-8266EXwith standard Wi-Fi 2.4 Ghz connectivity
    were used to calibrate the whole model. Singh et al. [85], developed a cloud based
    autonomic system for delivering agriculture as a service via web and mobile based
    applications. For data collection IoT and other devices were used for communication
    and coordination. Fuzzy logic was used to automatically analyze agriculture. An
    architecture named Agri-info was developed to provide user services. Kolipaka
    [86], proposed a predictive analysis using cross media references for precision
    farming. Authors focused on the usage of sensors and MEMS integrated IoT for precision
    farming. The crop growth parameters such as soil state, water, weed state, crop
    quality and seed quality were also discussed. ML and big data approaches were
    applied to perform predictive analysis and thus finding method to provide optimal
    solutions to farmers. Further based upon the certain characteristics we have tabularized
    the major findings in TABLE 8. TABLE 8 Summary of Developed Methods for Farm Management
    B. IoT in Irrigation Irrigation is the method of application of controlled water
    to the farming fields, at needed intervals. Irrigation has been a constant area
    where a lot of energy, money, and labor is invested in the case of farming. Detection
    and knowledge of water level can reduce the cost of production by half. For increasing
    crop yield, smart irrigation management is essential. Various optimized and precise
    methods have been developed by various academicians. Klein et al. [96], with the
    help of satellite images, worked on the implementation of closed-loop irrigation.
    The authors designed a real-time water requirement system, which can optimize
    water delivery for 140 cells located in four hectares of land. Vegetative indexes
    were calculated for analyzing the total water consumption and how via loops this
    facility can be automated. Through this study and experimentation it was found
    that with the integration of closed-loop strategy and advanced water analysis,
    the overall water consumption efficiency can be improved. Alahi et al. [97], extended
    research to design and develop a smart nitrate monitoring system for the monitoring
    nitrate content in the surface and groundwater. The authors proposed a portable
    sensing system with the help of a planar inter-digital sensor, associated electronics,
    instrumentation, and electrochemical impedance spectroscopy-based analysis. Through
    real-time monitoring and sending data directly to the IoT web server, the proposed
    system possesses the capacity to monitor the impact of industrial, urban, and
    agricultural activity on water content and quality. The system also ensures distributed
    monitoring. Daskalakis et al. [98], used leaf sensing technology instead of ground
    soil monitoring for knowing the plant water stress. The authors proposed a low
    cost and low power consumption leaf moisture sensing model by sensing the leaves
    with the new plant backscatter sensor node/tag. The developed tag collects the
    information from a leaf via analog and digital conversions and then the data is
    transferred via remote communication to a low-cost software-defined radio reader
    using monostatic backscatter architecture. The data collected from this node is
    then connected to the irrigation system. The proposed system is powered by a flexible
    solar panel. Jayalakshmi and Gomathi [99], proposed a sensor-cloud based precision
    agriculture for intelligent water management, to enhance crop production. For
    the model design, moisture and stress levels of different plant organs were considered
    along with the behavior vegetative and reproductive organs cell growth, and its
    effects on the water requirement were studied. The dimensionality reduction technique
    was employed to choose the optimal parameters. For the case study, the wheat plant
    was taken. The effect of soil temperature and water suction rate was studied in
    the case of the plant growth. The non-adsorbing testbed was prepared by exploding
    the sand grains at high temperatures. With the aid of WSN, it was monitored when
    the plant needs to be irrigated. Angelopoulos et al. [100], developed a small
    scale smart irrigation prototype for a strawberry greenhouse. The prototype possesses
    off the shelf hardware and software requirements and was tested on large farms
    having multiple crops to get a data gain. The reference architecture also targets
    edge data distribution. The model was tested in Greece and its performance was
    compared against the traditional existing strawberry greenhouse methods for irrigation.
    Compared to the cloud-based approaches, and their incompetence to handle network
    traffic, security challenges, and data sharing with the third party, this model
    is secure and reliable and can handle large datasets. Dominguez-Nino et al. [101],
    worked on how to integrate sensors for developing automated software tools to
    undertake the routine tasks and decision-making involved in scheduling irrigation.
    The authors also focused on the suitability of capacitance approach soil moisture
    sensors and how to automatically interpret them and providing feedback to the
    scheduling algorithm. The proposed approach was tested in the apple orchards located
    at the IRTA-Lleida Experimental Station in Mollerussa, Lleida, Spain. For the
    study, both the physiological and agronomic properties were taken into consideration
    while experimentation. Krishnan et al. [102], designed an automated irrigation
    method. The authors developed a fuzzy logic-based system for precision irrigation
    by using Global System for Mobile Communication (GSM) service to enable farmers
    to water the fields. Soil and temperature, humidity, and motor status parameters
    were monitored and taken for the study. For the efficiency evaluation of the system,
    a comparison was done between the proposed system, drip irrigation, and manual
    flooding. Harun et al. [103], designed an environment-friendly system named “Greenhouse
    Irrigation Management System” for precision irrigation in agriculture. Some critical
    environmental parameters such as soil moisture, pH, temperature, humidity are
    measured with the use of WSNs to make decisions. The sensors measure the data
    and based on certain threshold value result, the fields are irrigated. Olivo [104],
    focused on the problems associated with device growth and its effects on the control
    decisions. To address this issue, an architecture named “Rules Engine and Context
    Event Processor (RECEP)” is proposed for the dynamic processing of events originated
    in the context of IoT and PA. In this model the concept if optimization was used
    to optimize the resources to increase agricultural production. The experimental
    setup was set in a banana field located in Machala-Ecuador. The given model was
    designed for operating in low-cost infrastructures for both small and large producers.
    Marcelino et al. [105], based on the work and issues of small family farmers,
    proposed a low-cost system for control, monitoring, and automation of agricultural
    greenhouse. The proposed model was designed by prototyping Raspberry Pi and Arduino
    along with sensors. Temperature, humidity, and light sensors are used for the
    field data collection. The web human interface was developed for interaction between
    the system and the farmers. Koksal and Tekinerdogan [106], developed an automatic
    farm management information system capable of performing data acquisition, processing,
    monitoring, planning, and decision making and managing the farm fields. The authors
    tested their models on two case studies on smart farming in Turkey, one for smart
    wheat in Konya and other greenhouses in Antalya. The feature-driven domain analysis
    model is designed based on IoT reference architectures and data modeling approaches.
    The system was capable of performing all farming related functions, such as irrigation,
    crop monitoring, etc. Hate et al. [107], designed a vegetable traceability system
    with smart irrigation. The field parameters like soil moisture, humidity, water
    supply control, and temperature of particular farmland are monitored with sensors
    such as water level, humidity, soil moisture, and temperature sensors. With IoT,
    the cost is reduced and efficiency is improved. Agale and Gaikwad [108], focused
    on the problem of water reduction in farmlands. An IoT based automatic system
    is designed to collect, analyze, and monitor the real-time sensor data every 10
    seconds from soil and environment and provide irrigation solutions based on that.
    The parameters like temperature, humidity, soil moisture were considered for data
    collection. The proposed method achieved 92.24 % accuracy in water-saving strategy.
    Huan et al. [109], designed a system for monitoring of water in aquaculture ponds.
    To design the system authors used the concept of narrowband IoT (NB-IoT). The
    system used STM32L151C8 microcontroller, sensors and other devices for real time
    data collection and other services. The system was implemented and tested in ChangZhou,
    JiangSu Province, China and performed with low error rate. Vij et al. [110], developed
    a smart precision irrigation system based on the concepts of IoT and machine learning.
    The main aim of authors was to develop a computationally efficient and low cost
    system. Raspberry Pi and Arduino Mega 3 were used as microcontroller and other
    sensors were used to fabricate the system. Compared to the existing systems, the
    proposed system is computationally efficient. The various findings of this section
    have been tabularized in TABLE 9. TABLE 9 Summary of IoT Based Developed Methods
    for Irrigation C. IoT in Crop Monitoring Crop monitoring is the process or method
    of observing the farm fields and crops for enhancing productivity and reducing
    cost. This can be performed with satellites, drones, sensors, and other methods.
    Vegetative indexes of an area can also play a major role in crop monitoring by
    providing the data related to the exact area of land under cultivation etc. With
    crop monitoring the estimated time of harvest can be predicted. de Souza et al.
    [118], proposed an integrated framework with the combination of hardware, software,
    middleware, and other equipment to monitor the testbed. The authors also recorded
    the testing of each equipment in the seed test labs. An IoT based system was developed
    where soil sensors provided the relevant information/data for the growth of seeds.
    Testing was performed in the Official Seed Analysis Laboratory (OSTL) of the Brazilian
    Agricultural Research Corporation. Rekha et al. [119], developed a WSN based framework
    for sensing agricultural characteristics and then provide decisions to the farmers.
    Based on the data collected, the model will provide decisions for irrigation and
    crop monitoring. For the case study, India was taken into consideration due to
    its large farming area and population dependence on agriculture. Groundnut farming
    was studied in this work. Becker Reshef et al. [120], proposed a remote sensing
    analysis based crop monitoring system for strengthening agricultural decisions
    and improving crop security. The authors named this model as “GEOGLAM” model which
    ensures the decision support of all the necessary steps for crop security and
    analysis. Kamath et al. [121], proposed a wireless sensor-based model for monitoring
    the growth of weeds in paddy crop. The authors performed a study on how Raspberry
    Pi and WSN can be modeled for precision agriculture. Raspberry Pi based model
    was deployed to monitor crop along with the integration of Bluetooth 4.0 to send
    signals from visual sensors to the base station. A solar cell battery was used
    to provide power to the system. At the remote station, the images of the crops
    were processed to extract the background and foreground objects. Classification
    between weeds and paddy crop was performed with SVM. Rao and Sridhar [122], Developed
    an automatic irrigation system by prototyping Raspberry Pi and other IoT devices
    to enhance crop productivity. A cloud-based data collection system supported by
    sensors used for data collection is employed to collect the field data. The data
    collected is sent to the base station and based on that data, the decisions are
    made. Parameters like humidity, soil temperature, and sunlight availability are
    measured. Geng et al. [123], for greenhouse environment monitoring proposed a
    four-layer IoT based mobile system. To design the system, the authors proposed
    integration of both Raspberry Pi and Arduino chip in the design where the former
    serves as the data server and later as the master chip for a mobile system. Fabrication
    of all the sensors, actuators, and other devices was done on a single board, thereby
    reducing the device’s physical distances for better performance due to serial
    communication. A dedicated communication protocol with CYC was designed to reduce
    transmission errors and data loss. Shadrin et al. [124], designed an intelligent
    agriculture IoT equipment to monitor the crop. The authors designed the system
    using the test case of monitoring the seed germination. The proposed model was
    fabricated with the integration of low power embedding wireless sensor nodes with
    artificial intelligence. CNN was used to train the model along with the collection
    of data via sensor nodes of the different stages of germinated seeds. A 3D clustering
    analysis was used to analyze the relationship between environmental factors and
    farmer issues. Uddin et al. [125], focused on developing a system for monitoring
    crops from the stage of seed germination to harvest. For this authors proposed
    a resource optimized fast health crop monitoring system. Saudi Arabian agriculture
    was taken into consideration as a case study. IoT and drones were harnessed to
    make an efficient agricultural monitoring system. Data collection methods were
    used to collect data from heterogeneous devices arranged in localized clusters.
    The system was designed to withstand a harsh environment with agility and feasibility.
    Feng et al. [126], proposed a crop growth and nutrition diagnostic system based
    on hyperspectral remote sensing. Color canopies obtained from images captured
    with satellites, UAV, and remote sensing were used to determine the index of yield.
    To determine the color canopy of plants, the color correlation was employed. Cen
    et al. [127], discussed the usage of UAV with dual image frame cameras to estimate
    the aboveground biomass and panicle biomass of rice. The authors conducted their
    study at different growth stages of the crop. The field investigations were made
    on the variations in typical vegetation indices. The accuracy of the model was
    obtained with the extraction of RGB images at two different stages. Random forest
    was employed to obtain AGB as well as the PB. Khan and Kumar [128], proposed a
    framework for the monitoring the crop field. To make their study reliable, the
    authors monitored weather in real-time to get an idea of how to provide an ambient
    condition to farm. Production increase techniques are also proposed for precision
    farming. To overcome the problems of delay in information transfer from the field
    to the farmer, the context-based agricultural mobile sink is designed in WSN.
    Thus the mobile sink node introduction improves the overall efficiency and energy
    consumption of the model. Frontward communication area (FCA) based route selection
    is proposed to reduce energy consumption and delay. Min and Kuang [129], designed
    a system for monitoring the rice crop field. The analysis of the growth of rice
    and rice duck in real-time is done by obtaining the data via the Internet of Things.
    Authors comprehensively viewed the rice and rice duck plant species and the ambient
    farm conditions required for their growth. Qiulan et al. [130], estimated the
    production of carbon from the crop growth. The authors provided a framework for
    the estimation of organic carbon compounds in the farmland soil. The wheat plant
    was taken as a test case in this study. The model provided the real monitoring
    of the farm for carbon production with the aid of IoT and other devices. The real-time
    data was collected from the Yanzhou District of Jining City, Shandong Province,
    China. Harun et al. [131], proposed an improved crop monitoring system based on
    IoT concepts. Brassica Chinensis is the plant taken for study and was subjected
    to four different light treatments such as pulse treatment, continuous treatment,
    high intensity, and artificial control for enhancing the plant growth. The authors
    also analyzed parameters such as leaf count, height, dry weight, and chlorophyll
    a and b. An intelligent embedded system was developed to monitor and capture real-time
    data. Alonso et al. [132], designed an intelligent edge IoT based platform for
    precision livestock and crop monitoring in a dairy farming scenario. In their
    study, authors used the concepts of AI, blockchain technology, edge computing
    and IoT concepts for designing the platform. The architecture named Global Edge
    Computing Architecture (GCEA) was tried and tested in real time in a dairy farm.
    Castellanos et al. [133], proposed a narrowband IoT (NB-IoT) system for collection
    of soil parameters to monitor the potato crop health and growth. A UAV aided network
    is used to support the purpose. The architecture proposed accessed the real filed
    scenario of a potato filed near Bogota, Columbia. The main achievement of this
    work was the energy harnessing due to optimal topology applied for the deployment
    of sensors across the field and thus making the battery last for 82 hours for
    above ground sensors and 77 months for the deep buried sensors. Shafi et al. [134],
    presented a multimodal for crop health monitoring based on the concepts remote
    sensing, IoT and ML. Authors conducted their research in Pakistan. Sensors were
    deployed in fields to collect the real time data. Multispectral data from drones
    presented a NDVI and was used to analyze the crop based on its chlorophyll content.
    Variable length time series data captured from IoT devices and sensors were used
    to generate crop health maps. Deep neural networks were implemented for classification
    and provided the optimal classification. Some studies of the articles incorporating
    IoT in fields related to crop monitoring are presented in TABLE 10. TABLE 10 Summary
    of Developed Methods Crop Monitoring D. IoT in Disease Detection Diseases play
    a vital role in the economic and food crisis of a country. So to avoid this, disease
    detection is employed. This involves the detection of various diseases whether
    fungal, viral, bacterial, etc. from the stages of early to the post-harvest. Incubation
    of IoT has revolutionized the disease detection area in plant phenotyping resulting
    in major control resources available to avoid disease occurrence. Wang et al.
    [146], focused on addressing the problem of pests and insects. Authors proposed
    an IoT based model that can detect the early occurrence of the pests and diseases
    from visual references. Rough set theory algorithm and NN were used to model design.
    The proposed model was compared with existing models for accuracy and efficiency.
    Pandiyan et al. [147], applied the concepts of image segmentation and IoT, to
    develop a system/platform that can detect the diseases in plants. Authors proposed
    a novel platform having an Advanced Segmented Dimension Extraction (ASDE) with
    Heterogeneous Internet of Things procedural (HIoT) aspects, to detect the apple
    leaf diseases. A sign based plant disease identification model for real-time resembling
    of leaf diseases namely bacteria, fungi, micro-organisms, and viruses is presented.
    Three levels i.e. connectivity level, platform level, and service level were employed
    for performing data aggregation, transmission, and automatic identity identification.
    Leaf gestures were studied to identify the diseases in leaves. Zhao et al. [148],
    developed an automatic crop disease detection system capable of identifying and
    recognizing the leaves from a cluttered background. Combining IoT concepts and
    CNN, authors designed a novel approach named “Multi-Context Fusion Network (MCFN)”
    along with IoT deployments for crop diseased detection in wild. Kale and Sonavane
    [149], developed a smart and optimized smart fertilizing decision support system
    for smart farming. The authors addressed the problem of disproportion due to lack
    of judgment. Concepts of IoT and GA were used to design the system. An improved
    GA based multilevel parameter optimized feature selection algorithm for ELM classifier
    along with IoT was proposed in the designed system. The proposed system focuses
    on plant disease detection in a real-time environment. Khattab et al. [150], developed
    an IoT based cognitive automatic monitoring system for detecting the epidemic
    diseases in plants. By combining the concepts of artificial intelligence and prediction
    algorithms to develop the expert system, capable of predicting, analyzing, and
    decision making. A layered approach was used to design the model. Soil, leaf wetness,
    wind speed, and wind direction sensors were employed to gather the data. The model
    was tested on detection of the diseases like Late Blight, Early Blight, and Powdery
    Mildew in tomato and potato crops. Chen et al. [151], based on AI technologies
    and IoT, developed a system named “RiceTalk” for the detection of Blight diseases
    in the rice plant. AgriTalk model was used as a base model in this work to develop
    this system. Compared to AgriTalk, the authors used non-image IoT devices to design
    this model for disease detection. Devi et al. [152], proposed a simple and efficient
    IoT enabled solution for developing a system for automatic disease detection.
    Bunchy top of banana and Sigatoka diseases in the wild banana plant were detected
    and classified. Environmental parameters like soil moisture, temperature were
    measured with sensors and the IoT model was framed using the Raspberry PI hardware
    model. Data were classified using GLCM and RFC for disease detection. Kitpo and
    Inoue [153], developed an early disease detection system for rice crops disease
    detection. The drones based IoT architecture with real-time data collection capabilities
    was designed. For the mapping of drones on the fields, GPS sensors were used.
    The designed system is capable of displaying the analytical results and the position
    of the plant where the disease is present. Pawara et al. [154], studied the pomegranate
    diseases such as Bacterial Blight, Fruit Spot, Fruit Rot, and Leaf Spot. Developed
    a HMM and senor based model to early detect the disease and provide the solutions.
    Parameters like air temperature, leaf wetness, air humidity, and soil wetness
    were considered and studied for model design. For digital communication between
    field and farm GSM module was used. Truong et al. [155], real-time data monitoring
    capable system was designed with IoT and cloud storage for disease detection and
    recognition. The fungal diseases of rural crop fields with detected. Environmental
    data conditions such as humidity, temperature, wind speed, and rainfall were employed
    for designing decision support. A Support Vector Machine Regression (SVMr) model
    was used to classify the data. Jumat et al. [156], developed a cost-efficient
    and affordable smart farming prototype capable of detecting plant disease and
    proving decisions. For study and experimentation, Septoria plant disease was taken
    and studied for different stages right from outbreak to spread maturity. The system
    also possesses the web-enabled facilities for farmer support. Some studies of
    the articles incorporating IoT in fields related to disease detection are presented
    in TABLE 11. TABLE 11 Summary of IoT Based Developed Methods for Disease Detection
    SECTION V. Findings Several research articles related to the role and responses
    of the Internet of Things in agriculture have been studied. From the literature
    and studies, it can be seen that immense contribution has made by IoT in the field
    of agriculture starting from micro areas and moving over to macro environments.
    Internet of Things along with the concepts of cloud computing, cluster computing,
    wireless sensor networks and computer vision has revolutionized the field of monitoring,
    crop production, disease detection, and supply chain management. Since the domain
    of agriculture itself is a wide domain so considering the impact IoT has or can
    make on this field, the search was not restricted or limited to any area. The
    data acquisition for agriculture systems is a multidimensional approach. There
    are several fields in agriculture where IoT is applied e.g., crop monitoring,
    diseased detection, precision irrigation, supply chain, cattle grazing, and raising,
    etc. To design a precision approach, the target plays a very important role in
    data collection. From the existing studies it is found that mostly overall 90%
    of the data is self-acquired by the authors with the use of wireless sensors.
    This data included soil data, pH values, light, water, humidity, and images. In
    the case of crop disease detection, leaves were taken as the primary subject of
    study due to their ease of availability and quantity. Nearly 80% of the leaf data
    was self-acquired using digital cameras and web-enabled devices. However in some
    studies to validate their models, authors also used the existing standard ground
    truth databases available. Satellite imaging and remote sensing images were also
    taken to understand the demography and vegetative indexes of a region. UAV drones
    were the most used devices along with web-enabled digital cameras and mobile devices
    to capture the data in the form of images and also acted for providing real-time
    monitoring of device location in the fields. Certain issues and challenges are
    faced by the authors while capturing real-time images due to environmental and
    lighting conditions. To avoid these issues, laboratory-based testbeds such as
    greenhouses were developed and their data was acquired in a closed environment.
    From the literature, it is seen that, to develop the prototypes certain common
    parameters were taken for conducting the study irrespective of the problem to
    be addressed. Theses parameters included soil data, pH value, humidity level,
    moisture content, water content. After the analysis of the studies it was found
    that for any agricultural system to flourish all these parameters play a combined
    role. These parameters were most common for the problems addressing farm management,
    crop monitoring, and irrigation. However in certain other parameters like leaf
    wetness, salinity, disease severity, fertilizer ratio, plant height, CO2 content,
    mineral content, and conductivity were considered while addressing the specific
    problems like plant disease detection, smart irrigation, seedling germination,
    etc. These were the devices employed to collect the data. Depending upon the problem
    the authors addressed, different type of sensors were employed. For soil data
    collection, the contact method sensors such as hygrometers, or electrodes which
    penetrate the soil were used to collect soil information. While as in the case
    of the collection of soil information via tractors or vehicles non-contact soil
    sensors were employed. But for the studies it can be seen that contact method
    sensors are the most common devices used for soil data collection. In case of
    soil pH value and salinity electrochemical sensors are employed. In the case of
    soil nitrates, CO2, and fertilizer content, topsoil depth, biomass content, organic
    matter are measured. For water data collection, parameters like relative humidity,
    leakage of pipes, dissolved oxygen, nitrates, and other oxides were measured by
    the authors. To accomplish this various water sensors like ultrasonic sensors
    were employed to measure the water levels in the tanks, ponds, and farms. Temperature
    and humidity sensors were used to measure the temperature of water and humidity
    of soil for water content. In the case of plant leaves, the leaf wetness sensors
    were employed to understand the moisture content of the plants. Other than these
    sensors, neutron sensors, time travels sensors, and capacitance sensors are also
    employed by some authors for measuring the water levels. In the case of supply
    chain and cattle grazing, tags and biosensors were employed to gather the data.
    To develop the prototypes, the authors used the devices based on functional capabilities.
    From all the devices, Arduino and Raspberry Pi were the most desirable hardware
    platforms for the authors. Arduino was employed to tackle simple or sequential
    issues that do not require complex solutions. In the case of scenarios with complex
    environments, Raspberry Pi boards were employed due to their capability of addressing
    multiple problems at the same time. For functionalities that faced time issues,
    Raspberry Pi boards were employed. In the case of communication technologies,
    LoRa and ZigBee are the most commonly used communication technologies by the authors
    in the platform designs due to their capabilities of handling a multitude of solutions.
    Lora and ZigBee use GPS to enable and detect geo-locations. They are low cost
    and secure for data transmission. Other than these technologies, authors also
    made use of cloud and cluster computing to handle a large mass of data and provide
    on-spot solutions to the consumers. The authors performed the processing of data
    in different stages. At first preprocessing on data was performed to remove any
    kind of outliers or anomalies in the data. To remove the imperfect data, algorithms
    such as noise removal with Gaussian noise, salt and pepper noise, histogram equalization
    were commonly used for the preprocessing of image data. However in the case of
    numerical data missing value imputation, the banana dataset for noise reduction
    was employed. To obtain the optimal data from a given set of data, data reduction
    was performed. The data reduction approaches e.g., dimensionality reduction, attribute
    subset selection, numerosity reduction, etc. were employed by various authors.
    To make systems capable of taking decisions, several learning algorithms like
    GA, CNN, NN, SVM, PNN, GANs were used to train and test the models. From the literature,
    it is seen that most studies and experiments were performed in countries that
    have agricultural economies like the USA, China, India, Brazil, Australia, etc.
    Most of these countries are economically stable and first world countries. They
    have better infrastructure and service availability. Also only 20% of the studies
    were focused on real-time implementation of their prototypes which indicates that
    most of the experimentation was conducted in a closed environment. This pattern
    raises concerns on how these studies can be employed in real-time environments
    with low infrastructure and maintenance costs. The problem of power consumption
    was also addressed by some studies. However there were no comparisons and reasons
    given on how the dream of IoT can be made real for poor and self-financing farmers.
    Along with this, a few studies provided the cost estimation for the deployment
    of the models. In the Fig. 7, the percentage distribution and contribution of
    IoT in different fields of agriculture are shown. From the figure it can be seen
    that more extensive studies are conducted in the field of crop monitoring. FIGURE
    7. Percentage contribution of IoT in different fields of agriculture. Show All
    These studies and analysis put forth by different articles show that current/existing
    solutions have incorporated IoT to solve several challenges in the agricultural
    domain. With the incorporation of these technologies, a large number of challenges/factors
    for improvement have emerged. Along with the study of factors for improvement,
    future research directions, applications are also highlighted. The sections below
    explain the factors for improvement and the futuristic research directions. A.
    Challenges Despite the growth achieved by IoT over the past few decades, there
    still exist some conceptual, fundamental, and developmental issues. 1) Cost Designing
    a cost-optimized model is still a difficulty faced by many authors. Scientists
    are focusing on developing cost-efficient systems by reducing the hardware and
    software requirements in IoT deployments. Economic differences of countries make
    it difficult for farmers to deploy devices and technology. So, it is important
    to develop some economic models. 2) Standardization To fully utilize the technology
    for large range of applications, standardization of devices is essential. The
    present or current mechanisms do not confirm any standardization formats either
    for the data and process representation. Deprived of the cordial use of the semantic
    ontologies, machine-readable codes result in output differences due to misinterpretation
    and alterations from time to time. With standardization the interoperability issues
    of the devices, applications, systems and products can be solved. 3) Heterogeneity
    While designing a system, heterogeneous devices are used. Every device differs
    in processes and services requirements. In the case of agriculture, most models
    perform with heterogeneous devices, so it is important to create interaction between
    heterogeneous modules and communication technologies. Because of heterogeneity,
    the complexity of the network increases, and sometimes falsified results may appear.
    4) Accessibility For developing any farming decision support system based on IoT
    technology and other devices, the demand for availability of existing software
    and hardware to be present anywhere any time is a must thing. These problems need
    to be addressed to ensure the availability of services anywhere and anytime. Lack
    of availability of the required equipment can result in chaos and delay in the
    services. 5) Adaptability While designing a model, especially for precision farming,
    it is pertinent for the devices to be adaptable with the other devices and the
    surroundings. Since the environmental conditions keep varying and also sometimes
    due to certain communication or hardware issues certain devices are not adaptable
    with each other. 6) Energy Optimization Energy is the most emerging issue in IoT
    systems, WSNs, and other devices for their communication. Till now conventional
    sources of energy have been supporting the designing and working models. But due
    to an increase in devices, the consumption of conventional energy is not a reliable
    solution. Non-conventional sources of energy like solar, wind, water energy harvesting
    schemes should also be tested, but they haven’t been of much success and new methodologies
    should be developed to employ them for model development. 7) Compatibility To
    achieve the standards of fragmentation and scalability, the developed models or
    software should be flexible and should run on any machine. 8) Reliability For
    successful and smooth working, reliability is a major concern for IoT devices
    in terms of data transmission. The devices need to gather and transfer reliable
    data as based on the data received and interpreted, the decisions are made. Reliability
    is still a challenge due to system failures, node failures, battery issues, or
    other interventions. 9) Mobility Generally the systems or models developed are
    static. For smooth implementation of the framework, there should be mobility as
    most of the devices and applications are mobile. In mobile models, the issue of
    maintaining connectivity is still a difficult task. 10) Environmental Conditions
    In agriculture there are different landforms. So it becomes difficult to adapt
    to those changes, and this also jeopardizes data and services. This alters the
    accuracy of a system. 11) Real-Time Deployment Most of the studies put forward
    are not employed or tested in a real-time testbed. So before deploying a system
    or model, real-time analysis is a must, to avoid post-deployment losses. B. Improvements
    Since the growth of IoT is remarkable in the field of agriculture, certain improvements
    can be included in the growth and developmental state to make the systems and
    models more efficient, reliable, and business-oriented. 1) Warding Off the Performance
    Degradation Generally while developing systems, customer interaction or input
    is not taken. As the models serve a variety of customers from dynamic backgrounds,
    therefore their input must be taken while developing the models. This way the
    performance hazards and chaos that occurs on the filed can be avoided. 2) Sharing
    Rich Data Globally In almost all, the IoT based models designed for precision
    farming, the data sharing while integrating and mapping the system design should
    be encouraged. This can lead to the development of an interactive model globally.
    This feature can also help in understanding the topographic and demographic challenges
    of various regions on a global level. Thus the suitable solutions can be designed
    with those working in resource-constrained environments. 3) Moving Towards High-Speed
    Communication The communication domain itself is witnessing a progressive and
    dynamic shift. Since the IoT models are remotely located, so better communication
    is a prerequisite. Therefore it is important to consider high-speed communication
    strategies like 5G, for making the devices more reachable with lesser delays.
    4) Cost Analytic Studies for Model Design With the incumbent of IoT in agriculture,
    a variety of models are designed for addressing different domains such as irrigation,
    farm management, disease detection, and crop monitoring, etc. While designing
    the models various case studies are performed. As the development cost of models
    for these cases varies from country to country i.e., in first world countries
    there will be the different cost of devices and in second and third world countries
    it will be different. Therefore a model cost analysis will provide an idea of
    the purchasing power and investment a farmer from these varied economic regions
    can invest to develop a model. Also this can result in seeking or considering
    other cheaper and efficient ways to develop models. C. Future Research Directions
    With the advancement in the development of precision agriculture platforms with
    IoT and other technologies, the development of new applications or research areas
    is envisioned. After the study of the literature, certain potential concepts and
    futuristic research directions are listed and discussed below: Design of platforms
    in a user-friendly manner (from farmers’ perspective and ease of using) using
    Artificial Intelligence and other learning tools. Farmer’s perspective here means
    that an audit should be done well before designing the prototype. From this study
    a clear insight and differences between the requirements of the farmers and farming
    systems across the globe can be understood. To develop concepts and methodologies
    based on multidimensional aspects like science, expertise, experience, industry,
    etc. Energy harvesting or power optimization methodologies should be developed
    to reduce the cost of production, maintenance, and fault tolerance. It is evident
    that mostly the farms be it small or large, require power and energy for the working
    of devices. In most of the cases, the power to the devices is supplied from the
    main line or the power grid. But this is not a sustainable and efficient method.
    Thus in order to make farms self-reliant, the energy harvesting or power optimization
    approaches should be developed or incorporated while designing of the models.
    Induction of cloud sources for data gathering and processing in a reliable, systematic,
    and scientific manner. Develop systems that can withstand variable soil and environmental
    conditions. Since the agricultural environments are harsh and keep on changing
    with change in climatic conditions or seasons. So it is essential to develop systems
    which can be robust and sustainable to the changes in the external as well as
    internal factors. Development of user or farmer friendly apps for monitoring crop
    and plant health. Mostly farmers come different ethnic and linguistic backgrounds.
    So due to this their level of understanding and ways to perform agricultural tasks
    is also different. It is important to develop frameworks considering the native
    language of a region into consideration so the farmer and machine interaction
    can be improved. This will enhance enable the acceptance of precision farming
    methods easy as it can be seen some areas are reluctant to adopt due to this linguistic
    and understanding problems. Development of efficient sensor-based systems for
    high elevation areas. High elevation areas mostly have undulating surfaces and
    also in most of the countries, supply of power to these areas is still a dream.
    Form the literature, it can be seen that these areas have not been targeted for
    precision farming instead of being resource deficient. Therefore deployment and
    design of sensor based systems in these areas opens a scope in future of precision
    farming. Usage of previous and existential scientific data for the development
    of decision support systems in farming. Generally for designing the precision
    farming models, the primary data is considered. However for designing cost efficient
    and reliable models, the previous case studies and deployment models should be
    considered for the study. This means a collaborative model development methodology
    should be developed for understanding the nature of the work. To recognize various
    plant species using mixed data sets or heterogeneous data. Design of a portable
    and sustainable farming equipment control systems for large as well as small farms.
    Mostly from the study it can be seen that first world countries are welcoming
    in PA approaches while as in most third world and other nations, this concept
    is still in avoidance due to cost and shelf life of products and equipment’s.
    Development of reliable supply chain management methods for precision farming.
    D. Applications of IoT in Agriculture IoT has revolutionized the world of agriculture,
    and a manifold of application can be derivative of implementation of the Internet
    of Things in agriculture. These applications are a resultant of the architectural
    design chosen. These applications have been categorized and differentiated based
    on the subject they focus on and also the service they provide. The major sectional
    areas where IoT is applicable in agriculture are- observation, data collection
    and corroboration, governing, and management. Most of these fields work collaboratively,
    and all the applications involve at least two of these sections. All these sections
    are described below and TABLE 12 presents various IoT applications in agriculture.
    TABLE 12 Applications of IoT in Agriculture 1) Observation It is also called monitoring
    as the main aim of this section is to discern the working of various models, devices,
    applications, etc. With the incubation of the concept of IoT, it is the first
    and foremost stage to be smeared. In this phase, all the devices and equipment
    that are placed strategically are monitored for their work. Sensors, are the major
    deployment and data collection tools engaged in this phase for data collection
    of various field and non-field parameters. Monitoring the certain parameters,
    like soil salinity, pH value, volumetric water content by using various soil sensors
    and other essential parameters such leaf wetness sensors, color, humidity, etc.
    helps in the development of systems capable of performing following operations
    e.g., calculation of leaf area index, leaf health, leaf color, plant growth and
    aid in the development of automatic plant recognition systems. Other devices like
    water sensors aid in the monitoring of irrigation levels and requirements of the
    fields. Thus with such devices, smart irrigation scheduling systems are developed.
    Also with the gas sensors, remote monitoring devices such as UAV devices or images
    with hyperspectral reflectance properties, help in the estimation of biomass,
    nitrogen, carbon, and other essential gases content. This data can also be used
    to find the vegetative indexes of the filed or large demography. Heavy-duty vehicles
    such as thrashers, tractors, trucks etc., also need supervision and can use data
    analytics for farm management. Robots, autonomous vehicles, agricultural drones
    other equipment also need to be monitored remotely for better farm supervision.
    Livestock monitoring with the aid of IoT is also an important subject for precision
    farming. It includes cattle monitoring remotely using tags. Labour is also a major
    area of concern for precision farming. Since human intervention is generally prone
    to errors due to differences in understanding, decision making, and methodologies
    applied to solve a particular problem. Also the induction of human labor is cost-intensive.
    Therefore, with the application of IoT, human interference can be minimized and
    a network can be set up for monitoring thus reducing the errors and cost. 2) Data
    Collection and Corroboration Data is the main constituent of precision farming.
    It acts as both base and catalyst in the whole process. With IoT, a large number
    of data is collected in varying forms and formats. Sensors, cameras, and various
    other nodes aid in the collection of data. In precision agriculture, based on
    the nature of the problem, the IoT network can be designed and formulated to collect
    different types of data. After the data is collected, the corroboration also called
    documentation of the data is very important for better understanding. Corroboration
    is a natural application of collected data, but certain additions of different
    samples such as manual or machine integration are also seen. Data once collected
    needs to be refined and understood, labeled, and thus documented in a certain
    format. Documentation or corroboration of data helps in formulating statistical
    analysis and developing the decision support systems. Remote sensing charts and
    other crop assessing tools can be employed to understand the total crop yield
    of a particular region. Crop management can also be optimized using corroborating
    data. A yearly or term analysis can be performed on this data to improve precision
    farming. Food chain supply management can use the predictive analysis of this
    data for optimizing and designing new efficient strategies. The major areas where
    its application is seen are yield mapping for fertilization planning, field planning,
    agro-food traceability, site-specific measurements based on soil and water analysis,
    and remote vehicle monitoring for supply chains, etc. 3) Foretelling Also called
    forecasting is one of the major attributes or applications for decision making
    that is brought in agriculture with the introduction of IoT. With the IoT devices
    and network, real-time data analysis along with the comparison to the previously
    available datasets helps in the forecasting of the upcoming events in much advance.
    With this foretelling, various decision support systems can be designed capable
    of taking optimal and real time-decisions. It can also act as a preventive measure
    mechanism for avoiding or dealing with various upcoming unprecedented situations.
    With monitoring, data collection, and corroboration, foretelling can help in early
    disease detection, pest growth, weeding, drought, smart irrigation, and harvesting.
    Artificial intelligence can be employed for designing these learning systems.
    With IoT, a predictive analysis could be made way earlier than the harvest period
    for assessing crop production and consumption. Pre and post-harvest crop monitoring
    along with behavioral sciences and market analysis can also be employed to help
    site-specific farming and production increase in precision agriculture in the
    context of IoT. 4) Governing and Management It is an outcome of the monitoring
    device. Governing helps in controlling the whole system. Foretelling also plays
    a major role in governing. With IoT, it is important to govern the farm. Thresholds
    play a major role in designing a controlling strategy. Controlling is a major
    addendum of IoT in agriculture. Applications of controlling can be easily seen
    in site-specific management, working of smart irrigation models, plant growth
    monitoring models, and early crop analysis models and also in supply chain and
    smart vehicular navigation, interaction, optimization, and logistics control of
    farms. With governing, all the new strategies, formulae, practices and methods
    employed to solve the problems occurring on daily basis in farms can be monitored.
    These strategies can then be compared and analysed with the previous existential
    strategies. Therefore a knowledge base can be maintained. From the data analysis
    of that knowledge base, the best or the optimal strategies that can be employed
    to design or mould the system can be fetched. Various case studies can be performed
    to gather and test such information. From this the redundant techniques can be
    withdrawn and robust ones can be prioritised. With these methodologies and experiments,
    the management can be made more flexible, scalable and reliable. Also governing
    and management can be employed to find the best suited solutions. Due to the growth
    in agriculture sector, various public and private sector projects and startups
    are being started in various countries across the world. All these projects use
    artificial intelligence and IoT concepts to provide support and solutions to the
    growing industry of agriculture. All these projects or startups are explained
    in the TABLE 13. TABLE 13 IoT Based Public and Private Sector Projects/Startups
    for Precision Agriculture E. Our Proposed Work Inspired by the contribution of
    IoT in the field of agriculture, we proposed an architecture for precision farming.
    The layout of the architecture to be designed is proposed and shown in Fig. 8.
    The structure proposed for precision farming in case of farm management will constitute
    of different layers. The first layer would be the sensing layer, in which different
    types of sensors like soil, humidity, water, light, proximity, and conductive
    sensors will be deployed in the region of experimentation. All data from the sensors
    will be sent to the base station. The second layer is the network layer, which
    consists of gateways, internet, and other devices. This layer manages the traffic
    of the whole architecture. This layer collects data from the sensing layer and
    transfers it to the decision layer and the application layer. The third layer
    is the decision layer, which processes the data, manipulates it, and generates
    alerts or actions. The next layer is the application layer, which constitutes
    the firmware and the users. It receives all the inputs from other layers and the
    outputs are made visible to users. It also manages how the whole architecture
    will work or look. FIGURE 8. Proposed layered architecture for Precision Agriculture.
    Show All Our proposed architecture aims to observe and monitor the farm in real-time.
    Optimize the resource utilization, early detection of the diseases, and identification
    of the plant species, optimize irrigation facilities, and make definite use of
    pesticides and other manures. Monitor the growth of plants in each stage and take
    the necessary actions for the betterment of plants. The model to be designed will
    take into consideration the earning and investment of the small scale farmer.
    A scalable and cost efficient model will be designed by considering the reusability
    and recycling of the materials used. From the literature, it is found that the
    issue of interoperability and robustness is still not achieved. So, while designing
    the model these issues will be prioritized. Also, power supply and power consumption
    is a bottleneck for each model. So, from the literature it is found that energy
    harnessing approaches can be used to address this issue. In the proposed model,
    main focus will be on incorporating the concepts of energy harnessing approaches
    like solar energy and wind flow energy for power optimization. Harnessing solar
    energy for regions which have different season’s e.g., Kashmir, which has four
    seasons like spring, summer, autumn and winter throughout the year. So for these
    regions depending only on solar energy will be a bottle neck. Therefore, in the
    proposed work, a hybrid approach based on consumption of both wind and solar energy
    for reducing power consumption will be proposed. Some of the major findings of
    the proposed work will be: A scalable and cost efficient model will be designed
    by considering the reusability and recycling of materials used. The issues of
    interoperability and robustness issues of heterogeneous devices will be targeted.
    Power supply and power consumption being the bottleneck of each model will be
    targeted. To tackle such issues, energy conservation and energy harnessing approaches
    like solar and wind energy will be used. Harnessing solar energy for regions which
    have different season’s e.g., Kashmir, which has four seasons like spring, summer,
    autumn and winter throughout the year. So for these regions depending only on
    solar energy will be a bottle neck. Therefore in the proposed work, a hybrid approach
    based on consumption of both wind and solar energy for reducing power consumption
    will be proposed. Small scale farmers will be targeted for the development of
    sustainable and robust model. SECTION VI. Conclusion The Internet is revolutionizing
    our world. Communication via connective devices has become the countenance of
    survival. Agriculture is growing from precision farming to micro-farming. IoT
    has added more potential to communication by enabling the communication between
    humans and objects along with the environmental aspects. Seeking the vision of
    omnipresence i.e., anytime, anything, anywhere, everywhere, IoT should be considered
    a core for the development of new architectural concepts. Resource scarcity is
    a must address issue in precision agriculture and models should be developed to
    optimize resource utilization. Inclusion of monitoring in food supply chains,
    farms, greenhouses equipped with tags, WSN, etc. at each stage in the growth of
    the product/plant, making automatic reasoning via intelligent analysis and responses
    is moving towards much safer, secure, and trustworthy systems. In the article,
    firstly the agriculture sector along with its challenges and economic importance
    is presented. The domain of IoT along with the communication technologies and
    goals, protocols, architectures are studied and put forward. The various IoT OS,
    their specifications and features with respect to agriculture are discussed. An
    analytic study of various articles in the field of agriculture is presented, highlighting
    their most focused sections and gaps or areas not addressed. The sensors based
    on their field of application are also discussed. A systematic review of different
    articles focusing especially on crop monitoring, irrigation, disease detection,
    and farm management is offered. The articles considered for study range from the
    time frame of the year 2015 to 2020. From the studies, certain issues are put
    forward that demand research and experimentation in the future. Various existing
    public and private sector platforms or start-ups which work for precision farming
    are also presented and discussed with their specifications and applications. Making
    precision farming a base, a layout of an IoT based architecture is proposed. The
    communication technologies and the hardware platforms of IoT are also discussed.
    The applications of IoT in agriculture are also discussed. The issues, challenges,
    and future research directions are also highlighted. As a whole, the in-depth
    description of various aspects of IoT for agriculture has been discussed and how
    these studies should be catered in a way to create efficient and smart agricultural
    scenarios. Authors Figures References Citations Keywords Metrics More Like This
    Internet of Things and Wireless Sensor Networks for Smart Agriculture Applications:
    A Survey IEEE Access Published: 2023 Weighted Connected Vertex Cover Based Energy-Efficient
    Link Monitoring for Wireless Sensor Networks Towards Secure Internet of Things
    IEEE Access Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: null
  journal: IEEE Access
  limitations: The authors do not test the algorithm against existing models or experimental
    data.
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09139962.pdf
  point_content: Types of data most applicable to irrigation management and their
    typical sources
  publication_year: 2020
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  title: 'Recent Developments of the Internet of Things in Agriculture: A Survey'
  verbatim_quote1: '"Among the types of data most applicable to irrigation management
    and their typical sources, soil water sensors, weather stations, and crop water
    use models are the most prevalent. Volumetric water content, soil water potential,
    and soil water salinity are the most common soil water measurements. Crop water
    use is determined by crop reference evapotranspiration (ETo) and crop coefficients
    (Kc)."'
  verbatim_quote2: '"The authors applied these concepts to an algorithm to estimate
    irrigation amounts and timing while meeting farmers'' soil water management objectives.
    The article''s strengths include its clearly defined goal, comprehensive overview
    of relevant concepts, and in-depth description of the algorithm and its components."'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1515/jisys-2022-0046
  analysis: 'The paper presents an IoT-enabled edge computing model for smart irrigation
    system. The model consists of four components: field deployed module, web-based
    interface, web API weather input, and soil moisture prediction mechanism. The
    field deployed module collects data from sensors and actuators, and sends it to
    the edge server. The web-based interface allows farmers to visualize the data
    and interact with the system. The web API weather input collects weather data
    from the internet and sends it to the edge server. The soil moisture prediction
    mechanism uses machine learning to predict soil moisture based on the data from
    the field deployed module and the web API weather input. The paper evaluates the
    performance of the model and shows that it can improve the efficiency of irrigation
    systems.'
  authors:
  - S. Premkumar
  - A. N. Sigappi
  citation_count: 5
  full_citation: S. Premkumar and AN. Sigappi, “IoT-enabled edge computing model for
    smart irrigation system,” Journal of Intelligent Systems, vol. 31, no. 4, pp.
    632–650, 2022, https://doi.org/10.1515/jisys-2022-0046.
  full_text: '>

    Research Article

    S. Premkumar* and AN. Sigappi

    IoT-enabled edge computing model for smart

    irrigation system

    https://doi.org/10.1515/jisys-2022-0046

    received January 10, 2022; accepted March 16, 2022

    Abstract: Precision agriculture is a breakthrough in digital farming technology,
    which facilitates the appli-

    cation of precise and exact amount of input level of water and fertilizer to the
    crop at the required time for

    increasing the yield. Since agriculture relies on direct rainfall than irrigation
    and the prediction of rainfall

    date is easily available from web source, the integration of rainfall prediction
    with precision agriculture

    helps to regulate the water consumption in farms. In this work, an edge computing
    model is developed for

    predicting soil moisture in real time and managing the water usage in accordance
    with rain prediction. A

    soil moisture prediction hybrid algorithm (SMPHA) has been developed that revolves
    around the decision-

    making techniques with live environmental parameters including weather parameters
    for the prediction of

    soil moisture through the impact of precipitation. Numerous algorithms with the
    combination of regression

    + clustering are estimated, and it is inferred that XGBoost + k-means outperforms
    other algorithmic com-

    binations that is deployed in edge model. This model is used as an intermediary
    between the end IoT

    devices and cloud that results in the saving of computationally intensive processing
    performed on cloud

    servers. The servers located on a local edge network perform the developed algorithmic
    computations.

    Avoiding transmission over the cloud results in signiﬁcant latency, response time,
    and computation power

    savings and therefore increases the eﬃciency of data transfer. The proposed edge
    computing model is

    implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes as the
    combination of Pi with

    actuators and sensors. The monitored data from Pi are stored in MongoDB webserver
    that is controlled by

    Web dashboard. Finally, the developed model is implemented in cloud and edge where
    the edge server

    implementation performs better in terms of latency, bandwidth, throughput, response
    time, and CPU

    memory usage.

    Keywords: smart irrigation, edge-based irrigation, edge computing, precision agriculture,
    soil moisture

    prediction, irrigation management system, IoT, oﬄoading mechanism

    1 Introduction

    It is evident that agriculture always has a specialized role in the anthrophonic
    evolution and has been

    serving as an important economic factor for the growth of a country [1]. Around
    58% of the population

    depend on agriculture as the chief source of livelihood in India. The quality
    and productivity of agricultural

    products have declined over these years as several factors have inﬂuenced the
    crop productivity both

    directly and indirectly. Some major factors that aﬀect the crop production are
    climatic changes, global

    warming, and water scarcity [2]. The agricultural land’s productivity is aﬀected
    by the direct and indirect

    

    * Corresponding author: S. Premkumar, Department of Computer Science and Engineering,
    Faculty of Engineering and

    Technology, Annamalai University, Chidambaram - 608002, Tamilnadu, India, e-mail:
    premambal@gmail.com

    AN. Sigappi: Department of Computer Science and Engineering, Faculty of Engineering
    and Technology, Annamalai University,

    Chidambaram - 608002, Tamilnadu, India, e-mail: an.sigappi@gmail.com

    Journal of Intelligent Systems 2022; 31: 632–650

    Open Access. © 2022 S. Premkumar and AN. Sigappi, published by De Gruyter.

    This work is licensed under the Creative

    Commons Attribution 4.0 International License.

    changes in climate [3,4]. The crop growth has been already aﬀected by the changes
    in climate incurred by

    global warming. The nutrition quality of soil, ground water level, sea, and ocean
    are aﬀected by the

    modiﬁcations in average temperature, rainfall, and extreme weather conditions
    such as hail storms, dust

    storms, heatwaves, etc. due to global warming [5,6]. Degradation of soil is primarily
    created by various

    methods including 93.7% by water erosion, 9.5% by wind erosion, 5.9% by salinity
    and alkalinity, etc.

    Further changes in climate would inﬂuence adversely the crop production [7]. Since
    water is an indispen-

    sable requirement for plants and cultivation, the high level of soil is eroded
    and thereby the fertility is also

    declined. Due to the ever-changing climate, water scarcity has become a huge problem.
    Drought-like

    conditions is already formed in several areas and thereby the present and conventional
    farming practices

    are not suitable. New and unique environment preserving techniques are the need
    of the hour [8].

    The conventional approaches in agriculture are enhanced by the advent of several
    advancements in

    technology [9]. These new improved methodologies ensure optimized utilization
    of resources, accurate

    forecast of water needs and environmental parameters, reduction of human intervention,
    etc. [10]. Conse-

    quently, the outcomes of crops in terms of yield and quality are higher with cost-eﬀective
    methods. One

    such booming technology is the Internet of things (IoT) [11].

    IoT is the collection of components embedded in the sensor for measuring and transferring
    data via

    network devices as sensed from pumps and tractors to weather stations. Primarily,
    IoT deals with the

    transmission and reception of data related to farms through devices using the
    Internet for prediction

    and providing decisions to the farmers. IoT-based methodologies has brought a
    changeover in agricultural

    patterns and farming approaches [12]. IoT devices can gather information about
    soil moisture, chemical

    properties, dam levels, livestock health, and weather details in real time. The
    information acquired from IoT

    devices facilitates the farmers in tracking farms periodically. Farmers can save
    time and money by

    responding faster to farm conditions. Cloud computing models integrated with on-ﬁeld
    agricultural sensors

    need to be incorporated for tackling the issue of processing huge voluminous data.

    One of the major challenges of IoT is the processing of huge datasets in a sequential
    way. Some of the

    key factors that need to be focused on this process are as follows: information
    about the type and nature of

    data, the way of acquiring the data, etc. The preliminary stage comprises acquiring
    the data and ingesting

    the data to the system. Substantial cognizance of data are achieved as the data
    pass through all the

    gateways where it is cleansed and transformed before entering into the system.
    In the near future, dynamic

    prediction of soil moisture and precipitation techniques are to be developed for
    smart irrigation systems.

    Therefore, a system is developed for eﬃcient and optimal utilization of fresh
    water in irrigation along with

    drip irrigation system. It aids in ﬁnding which one of the plants fails to get
    suﬃcient water. When the water

    supply is provided the next day, this delay should not disturb the system. It
    becomes important for the

    farmers to understand the optimal usage of water and fertilizers to bring out
    sustenance in the agricultural

    industry. Therefore, processing must be done for analyzing the data, so that patterns
    can be analyzed and

    planning can be done for the long term, accordingly. Hence, it gives a broad vision
    in deciding where the

    processing is to be done exactly. Therefore, it is obvious that not all data are
    crucial, and it provides a clear

    view of which data need to be stored, discarded, and retained for both long-term
    and short-term purposes.

    Thus, all these challenging issues require to be addressed and that is where storage
    technologies are

    actually highlighted. The poor quality of Internet access in developing nations
    makes the implementation

    quite challenging. An applicable solution to solve this problem is through edge
    computing where the

    essential data could be oﬄoaded from the cloud over the edge of the cloud, and
    this is the exact point

    where the approach of smart sensing with edge computing gets in.

    With the purpose of broadening the potential of edge computing and using it in
    the agriculture domain,

    a novel approach using machine learning (ML) methods is proposed for analyzing
    the data acquired by the

    IoT devices deployed at the farm. Here, the data acquired from IoT components
    undergo preprocessing and

    ML models on the edge nodes to analyze and assess the appropriate results for
    providing the best instruc-

    tions for controlling the actuators (e.g., light, pumps at diﬀerent locations)
    in the farms.

    This article presents an automated system, as shown in Figure 1, to predict the
    soil moisture using the

    ﬁeld information acquired from the self-designed sensor node deployed at the ﬁeld
    and the forecast

    information of weather via Internet. A unique algorithm has been developed that
    revolves around the

    IoT-enabled edge computing model for smart irrigation system

    

    633

    machine learning techniques for the prediction of soil moisture. Here, many algorithms
    with the combina-

    tion of regression + clustering was estimated, and it is inferred that XGBoost
    + k-means outperforms other

    algorithmic combinations, and therefore, it is deployed for the prediction of
    soil moisture in the proposed

    work. The proposed algorithm makes eﬀective irrigation decisions with optimized
    usage of water in a more

    accurate and reliable manner. The eﬀective decision-making refers to the process
    of predicting the rainfall,

    thereby reducing the water usage in advance by the proposed algorithm in accordance
    with the predicted

    rainy days. Through this automatic decision-making, over watering is avoided by
    saving the soil. The

    server-side software is developed with node-side connectivity using the information
    for visualization and

    decision support features. This proposed algorithm is implemented in edge to prove
    the eﬃciency of the

    edge server handling the automated system better than the cloud control. The performance
    of the decen-

    tralized edge-based architecture has been evaluated for downloading the hybrid
    algorithm from cloud in

    real time execution. The performance can be enhanced by adopting edge computing
    architecture and

    measured with the help of network parameters like latency, bandwidth, and response
    time. Edge computing

    capacity is also estimated using the CPU processor and memory consumption while
    executing the proposed

    algorithm with irrigation scheduling.

    2 Related work

    In ref. [13], a smart irrigation system not aﬀected by communication disconnection
    and delay is developed

    using edge nodes deployed at the farms. Environmental parameters have an intricate
    impact on the plant

    growth. It becomes necessary for evaluating multiple AI models simultaneously
    in an actual cultivation

    environment for comparing AI models under the same conditions. Due to the working
    of existing irrigation

    systems on the cloud, communication is instable in the concurrent evaluation of
    AI models. However, the

    instability does not induce an edge node in its performance.

    The factors such as type of plant, soil, climate, humidity, temperature, and soil
    moisture need to be

    considered for the irrigation system packed with potential smart decisions. The
    nature and type of plant,

    soil, and climate are queried by ontology (branch of metaphysics dealing with
    the nature of being), whereas

    other factors such as temperature, humidity, and soil moisture are sensed by the
    sensor network. The

    trained ML model predicts the watering decisions based on ontology and other factors
    as mentioned earlier.

    Figure 1: Architecture of the proposed system.

    634

    

    S. Premkumar and AN. Sigappi

    Smart irrigation has three modules: (i) sensor network modules that sense the
    parameters impacting the water

    requirement by using sensors DHT22, light sensor BH1750, and HL-69 hygrometer
    for sensing the temperature,

    soil moisture, light, and humidity in air. (ii) Edge and IoT server’s module to
    send and receive data through

    HTTP requests. (iii) Training module in which KNN is applied on the sample dataset
    for training and decision-

    making regarding the water needs. Based on the input values, the trained model
    categorizes the input into ﬁve

    possible classes: highly not needed, not needed, average, needed, and highly needed
    [14].

    A decentralized smart irrigation approach is proposed for strawberry greenhouses
    in contrast to con-

    ventional cloud-based solutions for keeping the agricultural data at the edge
    of the network. A full-scale

    smart irrigation system in an actual strawberry greenhouse environment is developed
    after a small-scale

    smart irrigation networking prototype system and a reference architecture targeting
    edge data distribution

    for strawberry greenhouse applications are framed. A three-step industrial approach
    is formed for

    designing, implementing, and validating a solution for smart strawberry irrigation
    in greenhouses and

    keeping the corresponding data at the edge of the network at the same time: (i)
    A small-scale smart

    irrigation prototype solution with oﬀ-the-shelf hardware and software equipment
    is tested and evaluated

    on various types of plants for gaining useful insights for deployments on a large
    scale. (ii) A reference

    network architecture is designed for targeting smart irrigation and edge data
    distribution speciﬁcally for

    strawberry greenhouses. (iii) A large-scale system in an actual strawberry greenhouse
    environment is

    developed in Greece, incorporating the proposed reference architecture [15].

    Edge computing is proposed for addressing the issues by taking advantage of computing
    resources in

    the edge of the network. The issues such as an edge mobile device make it easier
    to achieve low end-to-end

    latency, high bandwidth, and low jitter to services located on the edge network.
    An edge can enforce the

    privacy policies of its owner prior to the release of the data to the cloud through
    edge analytics. If a cloud

    service becomes unavailable due to network failure, cloud failure, or a denial-of-service
    attack, a fallback

    service on a nearby edge can temporarily mask the failure. Cloud services, partial
    analysis, and control

    functions are extended to the edge nodes from the cloud data center. Edge nodes
    facilitate the timely

    monitoring of sensors in smart farming by the reduced latency and enhanced data
    transmission. Due to

    these factors, edge computing is applied through farming [16,17]. A three-tier
    open-source software plat-

    form we proposed by authors, and the platform enhanced the precision agriculture
    by introducing edge

    computing and fog computing. An network functions virtualization (NFV)-based approach
    is deployed for

    performing the local operational decisions at the edge level for mitigating the
    inﬂuence of network failures

    while using cloud data centers [18]. For control processing in smart farming,
    a platform enabling cost-

    eﬀective sensor/actuator network based on IoT, utilizes edge computing [19,20].

    The authors in ref. [21] predicted the soil moisture using a mathematical model
    that measures the

    values given by a sensor matrix on the ground. Due to the huge interval in measurements
    (10 minutes), the

    model presented estimated error by more than 10%. This methodology has incorporated
    the online

    approach by making the sensors to send data every minute to edge devices without
    time-based interruption.

    The authors of ref. [22] applied a combinative approach of using ﬁeld sensor network’s
    data along with

    weather forecast station’s data for the management of optimality in water conditions
    for the enhanced

    growth of grapes. The generated data are forwarded to a web server, which displays
    graphics without

    statistical analysis of such data. The analysis must be performed a posteriori
    by the user.

    The watering mechanism for a plant via IoT methodology is devised by the proposed
    smart irrigation

    model without acquiring any pre-processed data. A prototype application is developed,
    which gets adapted

    to the parameters needed in irrigation after a couple of human-made irrigations.
    With the usage of various

    ML algorithms, several tests are devised for manual and automated irrigations
    for the performance evalua-

    tion. After the evaluation using four diﬀerent ML algorithms such as logistic
    regression (LR), K-nearest

    neighbors (KNN), Gaussian naive Bayes (GNB), and gradient boosting regression
    trees (GBRT), it is found

    that GBRT outperforms other algorithms. To analyze the overall performance, a
    test bed for the sensor edge,

    mobile client, and the decision service on the cloud is established. Two diﬀerent
    indoor species are selected

    as test items for the prototype, namely, Peace lily and Sardinia. The outcomes
    were quite good, and it is

    inferred that the prototype has learned the patterns of irrigation and making
    decisions automatically with a

    high rate of accuracy [23].

    IoT-enabled edge computing model for smart irrigation system

    

    635

    The authors from ref. [24] adopted the deep learning methodology for detecting
    the type and the

    category of the plant using an automated plant irrigation system. The water necessity
    of the plant is

    determined using the recognition of predeﬁned set of plant images and data set
    acquired from farm. It

    utilizes the database for fetching the irrigation information after the recognition
    process is completed.

    Modeling the training processes are time consuming as voluminous set of images
    needs to be stored.

    The authors in refs [25,26] incorporated ML methods in the irrigation decision
    support model using a

    pre-processed irrigation data set. A model is developed for learning the irrigation
    needs of any plants

    progressively rather than using a readily available dataset. Several ML algorithms
    are evaluated with their

    precision for concluding the irrigation decisions. Manual irrigations are performed
    two times before making

    precise decisions. Due to the dynamicity in model, data processing is done progressively,
    and it can be

    applied to several plants having varying irrigation conditions. There is a need
    for the learning model that

    can be trained by itself using a comparatively lighter learning process using
    environmental parameters that

    do not need larger storage in the system but need higher computation. From the
    aforementioned survey for

    making a precise decision with instant computation locally, edge computing needs
    to be integrated into the

    irrigation system. This article is directed towards presenting a platform that
    implies IoTs and edge com-

    puting in monitoring soil moisture via sensors, data communication between sensors
    and edge devices, and

    an Analytics-as-a-Service cloud. It analyzes the collected data in the form of
    a density map of soil moisture

    for denoting the areas in need of greater or lesser frequency of irrigation. Here,
    density map does not refer to

    the geographical point data by satellite mapping, and it actually denotes the
    point of dry area and watery

    area through soil moisture detection point. This point is averaged among areas
    of irrigation to be done and

    the irrigation process is controlled with prediction of rainfall using the proposed
    system.

    3 The proposed system

    The proposed learning model for irrigation is implemented in a prototype IoT system
    that has four compo-

    nents: (i) Edge node layer – This layer consists of sensors, actuator, and two
    microcontrollers. In this layer,

    edge node acquires the sensor data from the surroundings and controls the actuator
    for actuating water

    pumps to start irrigation. (ii) Edge server layer – This layer consists of Raspberry
    Pi that act as edge server

    and capable of multitask processing. Here, edge server controls the edge nodes
    for sending signal and

    receiving data at regular interval of time. It is also connected to the cloud
    server for receiving developed and

    trained machine learning model to be deployed and make irrigation decision for
    controlling edge nodes.

    (iii) Edge service layer – This layer is deployed in the edge server and it is
    responsible for controlling the

    whole system through a developed web dashboard. The dashboard has live feed data,
    control of edge

    nodes, and cloud services access. This service layer also has the control access
    of the proposed machine

    learning model. (iv) Cloud server layer – This layer composed of cloud services
    and cloud storage where its

    role is to train the machine learning model and store the data in database. It
    sends the trained proposed

    model to the edge server for decision-making regarding irrigation scheduling.
    The comprehensive inter-

    connections in the system are shown in Figure 2. The proposed IoT-based smart
    irrigation system includes

    ﬁve major components: ﬁeld deployed module, Web-based interface, Web API weather
    input, soil moisture

    prediction mechanism, and edge communication model.

    3.1 Field deployed module

    In the ﬁeld requirements, a wireless sensor network of the sensor nodes needs
    to be deployed as shown in

    Figure 3. Here, ﬁeld data collection device accommodates four diﬀerent sensors:
    Capacitive Soil Moisture

    Sensor V2.0, DS18B20 Water Proof Temperature Sensor Probe for soil temperature,
    ultraviolet (UV) Light

    Radiation, DHT11 – Temperature and Humidity Sensor Module, and GYML8511 Analog
    Output Ultra-Violet

    636

    

    S. Premkumar and AN. Sigappi

    Light Sensor Module. An Arduino Mega connected to Raspberry Pi 4 Model-B read,
    the output of these

    sensors where the program is developed in Python for the Pi model to fetch the
    hourly data from sensors

    and store the data in MongoDB [27] database. It is then synchronized with the
    server database using the

    developed web service. A Wi-Fi-enabled Arduino controls the water pump connected
    to a relay switch.

    Figure 2: Components of the proposed system.

    Figure 3: Real-time prototype of the proposed edge model.

    IoT-enabled edge computing model for smart irrigation system

    

    637

    For the real time monitoring, a trigger is made for controlling the web service
    from the responsive web-

    based interface. The irrigation decisions are checked periodically by the proposed
    model performed in the

    server. The water pump is actuated, and irrigation process is started only if
    the server makes any irrigation

    decision. A wireless sensor network (WSN) [28] scenario with ZigBee [29] technology
    can be implemented

    for a large farming area in which several sensor nodes can be aﬃxed in the speciﬁed
    area and every sensor

    node possesses sensors similar to a standalone device. Then, the Arduino Mega
    reads the sensor output

    connected to ZigBee for transferring data to Gateway Node for aggregating the
    received data and storing it

    in MongoDB locally and also for transferring the data via web service to the edge
    server.

    3.2 Web-based interface

    The proposed framework consists of a web-based application to allow farmers visualize
    the growing data

    and interacting with the garden in real time. In addition, users can also be able
    to examine and analyze the

    historical growing data, if needed, through functionalities such as irrigation
    control, motor control predic-

    tion model deployment, and manual data entry implemented in this web application.
    Here, Node.js was

    chosen for developing the web application [30,31], while MongoDB [27] was utilized
    as the database system.

    Data stored in the database, which is deployed in the cloud, will be used for
    further data analysis in the

    future. The web application’s functions are designed following a software design
    pattern called model-

    view-controller (MVC) as shown in Figure 4. In the frontend, ChartJS is used to
    represent data through

    dynamic charts. The web application is also used as an interface to manage all
    the physical devices/

    actuators in the garden. To deploy the web-server to the cloud, a cloud platform
    as a service (PaaS), namely,

    Heroku, had been utilized. Heroku is a cloud platform that provides platform as
    a service (PaaS), facilitates

    the creation of applications and deploying these online rapidly [32,33]. It also
    enhances scalability and

    functionality by integrating several add-on services. The ﬁeld data are sent to
    the server by Raspberry Pi

    using this web service. This web service manages the network outage/ﬂuctuation
    during data synchroniza-

    tion from the ﬁeld device to the server by taking the help of ﬂag settings at
    the database level. The interface

    facilitates the scheduling of irrigation along with visualizing real time sensors
    and predicted soil moisture

    for upcoming days and precipitation information. By using the denoted threshold
    value of soil moisture

    suggested by agronomists, the irrigation can be scheduled by the user. The system
    maintains the threshold

    value depending on the predicted pattern of soil moisture and precipitation information.
    The process of

    irrigation is initiated automatically and stopped after the speciﬁed threshold
    value generated from the

    proposed algorithm of soil moisture when it is reached.

    Figure 4: Web interface for the irrigation system.

    638

    

    S. Premkumar and AN. Sigappi

    3.3 Web API weather input

    The weather prediction data are collected by a web service developed in Python.
    The forecast data such as

    humidity, temperature, ultra violet index, precipitation, and cloudiness of web
    forecasting portals like

    Open Weather API are aggregated by the developed web service [34]. These portals
    provide the forecasted

    information in HTML, XML, or JSON format. The predicted data with JSON format
    are read by the developed

    web and stored in database at the edge server, which is concerned in the prediction
    algorithm. Also, these

    data are utilized as testing dataset in the ML model for predicting the soil moisture.

    3.4 Soil moisture prediction mechanism

    An algorithm for predicting the soil moisture based on data derived from ﬁeld
    sensors and weather fore-

    casting using the combination of supervised and unsupervised machine learning
    techniques has been

    developed underpinned by regression algorithms and k-means clustering for estimating
    the diﬀerence/

    change in soil moisture owing to weather conditions. Many regression algorithms
    are compared against

    each other and infusing each of them with k-means to check the preciseness in
    mean square error (MSE),

    R2, accuracy and mean absolute percentage error (MAPE) for prediction of soil
    moisture of upcoming days

    with the help of sensor data and weather forecasting days. The information about
    soil moisture for the

    upcoming days and suggestions for irrigation in accordance with the prescribed
    levels of soil moisture and

    predicted precipitation values, thereby saving energy and water, is presented
    by the algorithm. The infor-

    mation generated from the device and the predicted values from the algorithm soil
    moisture prediction

    hybrid algorithm (SMPHA) are stored in the server.

    3.5 Edge communication model

    The communication protocols in the proposed framework are ﬂexible and transparent
    in nature for

    accepting both wired and wireless methodologies. For the maximum utilization of
    potentiality in edge

    computing components, the communication among various components in the edge-IoT
    system requires

    intense probing by using the versatility among the devices in network edges. For
    transferring the data

    gathered from pivot sensors, a communication technology such as Zigbee [35] is
    needed for the irrigation

    systems. Therefore, the communication component in the proposed work is classiﬁed
    into three main areas

    as shown in Figure 5. The Message Query Telemetry Transport (MQTT) protocol is
    used for the

    Figure 5: Proposed edge communication model.

    IoT-enabled edge computing model for smart irrigation system

    

    639

    communication in the proposed system. The analysis in ref. [36] presented seven
    IoT messaging protocols

    (MQTT, CoAP, XMPP, AMQP, DDS, REST-HTTP, and WebSocket) as communication protocols
    that play a

    major role in smart farming. The authors have concluded that MQTT proved to be
    the most secure protocol

    after probing all the protocols with respect to latency, energy and bandwidth
    requirements, throughput,

    reliability, and security. Moreover, MQTT is secure in both end-to-end architecture
    and gateway server

    architecture. In an MQTT setup, a MQTT server termed as MQTT broker executes on
    the IoT solution [37].

    Under a common identiﬁer, a “publisher” and a “subscriber” link among themselves
    to this broker. In the

    IoT solution, publishers and subscribers are the IoT devices and IoT hubs or control
    devices, respectively.

    When the publishers have new data for recording, the data are published to the
    broker. The broker then

    ﬂags that it has new publisher data, and the corresponding data are read by the
    subscriber. Then, the

    subscriber analyzes the data and reacts accordingly.

    The ﬁrst level accomplishes with connecting the end users to system with the help
    of mobile or web-

    based applications through the Internet. The next level (cloud computing server)
    deals with the connection

    of web server and MQTT broker for directing the user requests and other components
    at the edge landscape

    or from the farms to the right cloud-based services like displaying the real time
    status of the farm for the

    users, triggering a new deployment of the updated ML model to the corresponding
    edge node. The third

    level (farming area) is directed toward the deployment of sensors and IoT devices
    (actuators) for commu-

    nicating with other components in the entire system.

    4 Deployment of soil moisture prediction hybrid algorithm

    The watering mechanism of the plant has diﬀerent approaches in the proposed model.
    Primarily, the system

    is trained with manual irrigations datasets during the process of learning with
    respect to suggestions

    deﬁned by agronomists. The model is trained to learn the needs of irrigation in
    the ﬁrst level of deployment

    in cloud without the inclusion of pre-processed data. After acquiring the required
    data and training, the

    proposed system is initiated to grasp the plant’s watering needs by undergoing
    plenty of manual irrigations.

    Thereafter, manual irrigation is not required and the system makes automated decisions
    in watering using

    the gathered data and the application of ML methods. The proposed model then decides
    the irrigation

    strategies automatically using ML methods without the need including collected
    datasets in the automatic

    irrigation process. The proposed model can be improved through the learning process
    when the number of

    precise irrigation inputs is provided to the model at each stage of training.

    The decision-making procedure is developed with two modules for irrigation strategies
    according to the

    soil moisture prediction for upcoming days. The ﬁrst module deals with training
    the model in cloud with

    manual irrigation datasets through steps such as data collection, data preprocessing,
    training, and model

    development. The system acquires values of air temperature (TH), soil temperature
    (SMT), soil moisture

    (SM), humidity (HU), and ultraviolet rays (UV) periodically from the physical
    environment in the data

    collection stage, which is essentially required for arriving at the watering decisions.
    Also, the time of

    performing the manual irrigation is recorded in the database. These data are timestamped
    and stored in

    as datasets to aid in making decisions for knowing the time of irrigation. In
    the next step of pre-processing,

    inconsistencies are eliminated and outliers caused by sensor errors are detected
    from the irrigation dataset,

    thereby helping in the removal of broken data. The training stage involves the
    application of supervised

    machine learning (ML) algorithms. Here the regression algorithms such as support
    vector regression (SVR),

    multiple linear regression (MLR), lasso regression (LR), decision tree regressor
    (DTR), random forest

    regressor (RF), and XG-boost regressor (XB) techniques are used for the deployment.
    The regression algo-

    rithms are trained using the collected datasets. Finally, through training, regression
    models are created,

    namely, SVR model, MLR model, LR model, DTR model, RF model, and XB model that
    are been combined

    with the second module for decision-making.

    The second module caters to the prediction of irrigation for upcoming days by
    infusing the weather data

    as an input to the regression trained models. The live datasets from the weather
    API for future prediction of

    640

    

    S. Premkumar and AN. Sigappi

    soil moisture variable are used. The dependent variables from weather forecast
    data like temperature (TH),

    humidity (HU), ultraviolet (UV), and precipitation (PC) are tested in the aforementioned
    model for soil

    moisture prediction. Then, the regression trained model is evaluated and deployed
    using the weather

    testing data for the prediction of soil moisture in accordance with the precipitation.
    After the prediction

    of data for the upcoming days, these developed regression models are combined
    with unsupervised ML

    algorithm named k-means clustering for estimating the changes incurred in soil
    moisture prediction due to

    the impact of weather conditions. Further, each regression models with k-means
    algorithm are evaluated

    for performances in terms of irrigation decision-making process as shown in Table
    1. The combined algo-

    rithms are estimated through MAPE, MSE, R2, execution speed, power consumption,
    and accuracy. The

    estimation and computation of these parameters are detailed by the authors in
    ref. [38].

    XGBoost + k-means (XB+k-means) approach provides more accuracy with less MSE comparatively
    and

    also the R2 with 98% in soil moisture prediction using combined approach is given
    in Table 1. It is evident

    that the proposed combination performs better when compared to other regression
    + k-means-based

    approaches. XB + k-means-based hybrid machine learning algorithm is applied in
    irrigation planning

    module on account of aforementioned performance metrices of ML. Although it performs
    moderately in

    terms of execution time and power usage, it is selected for the deployment in
    edge computing as it has

    better performed in terms of accuracy, R2, MSE, and MAPE metrices. It is observed
    that the prediction of soil

    moisture for the upcoming days from the proposed algorithm (XB+k-means) is nearer
    to the actual value as

    shown in Table 2, and hence, XB+k-means is selected for the implementation of
    SMPHA in edge-based

    irrigation scheduling.

    4.1 Hardware setup

    IoT system is crucial to handle, collect, and transfer the data to the computing
    nodes at the edge or in the

    cloud. These devices are connected to the edge nodes through wireless communication
    protocols like

    ZigBee. It is used in reducing the latency and loss of data. An Arduino micro-control
    unit controls the

    combined IoT sensors and actuators at the same part of a ﬁeld into a cluster,
    each connected to a Raspberry

    Table 2: Comparison of predicted SM value with actual SM value

    Date

    Average SM value

    from sensor

    Average predicted SM

    value (XB+k-means)

    28-09-2021

    35.23

    34.04

    29-09-2021

    36.41

    37.20

    30-09-2021

    31.57

    30.46

    01-10-2021

    34.66

    33.15

    02-10-2021

    36.73

    37.12

    03-10-2021

    32.88

    33.01

    Table 1: Comparison of performance metrices obtained from various ML algorithms

    Algorithms used

    Accuracy

    R2

    MSE

    MAPE (%)

    Execution time

    Power (J)

    SVR + k-means

    0.96

    0.96

    0.25

    1.98

    0.06078

    1164.85

    MLR + k-means

    0.94

    0.88

    0.31

    2.15

    0.02075

    429.30

    LR + k-means

    0.95

    0.94

    0.32

    2.23

    0.02482

    351.35

    DTR + k-means

    0.93

    0.95

    0.29

    1.62

    0.15687

    914.70

    RF + k-means

    0.95

    0.91

    0.27

    1.57

    0.16745

    1475.13

    XB + k-means

    0.97

    0.98

    0.20

    1.08

    0.03547

    537.87

    IoT-enabled edge computing model for smart irrigation system

    

    641

    Pi that acts as an edge node in processing the gathered data and controlling the
    actuators. For example,

    Figure 2 shows an edge architecture with a Raspberry Pi connected to two components:
    Arduino Uno and

    Arduino Mega units via ZigBee connection. The ﬁrst Arduino Mega node is responsible
    for collecting data

    from sensors and the second one is for controlling the actuators in the ﬁeld.
    Depending on the sensor type

    with collecting Arduino unit, the sensors are connected via analog or digital
    PWM pins while controlling

    Arduino uno joins with actuators in the ﬁeld and controls (turn on/oﬀ) them in
    accordance with upper

    layers (from the edge web server). The trained (cloud) and deployed ML model in
    edge nodes provides the

    necessary instructions to the edge nodes.

    4.2 Web layer setup

    The deployment of web server assists the user in planning and managing the irrigation
    system. It visualizes

    the crucial information of factors like temperature of air and soil, UV, humidity,
    and soil moisture in live

    irrigation with real time updates in the form of various charts. In accordance
    with the selected ﬁeld, the web

    application redirects the user to the ﬁeld’s dashboard as shown in Figure 4. The
    dashboard consists of ﬁeld

    parameters as well as control signals for activating all the physical devices/actuators
    at the garden layer.

    These signals are denoted as switch buttons, and each switch controls (turn on/oﬀ)
    a particular kind of

    actuator (for instance, water pump to start and stop the irrigation). The user
    interface facilitates remote

    controlling of the ﬁeld by just clicking on the buttons as shown in Figure 4.

    4.3 Edge layer setup

    The edge node acts as a computing center where incoming data are analyzed and
    fed as the input vector to

    the ML model for processing and to return the control signals for activating or
    deactivating the actuators

    placed at the farm. Edge node processes the physical data (real time) at every
    end device such as the

    collected and processed data via the Raspberry Pi nodes presented in the proposed
    scheme. The prediction

    model is designed using TensorFlow API and trained, tested on Google Colab in
    this work. Amazon Web

    Service (AWS) oﬀers a library named Boto3 having many APIs to upload and download
    objects. After the

    development of model, it is transferred to Amazon S3, a service provided by AWS.
    The edge node utilizes the

    trained model from S3 for analyzing the sensed data acquired from garden’s sensors.
    The decision is

    delivered based on real time data analysis at the edge node and transmitted to
    Arduino nodes in the ﬁelds

    landscape immediately for controlling the actuators. In another ﬂow, the data
    collected from sensors are

    ﬁltered so as to keep only the modiﬁed data at the edge node before being sent
    back for mitigating the

    communication cost to the database in the cloud. These data are used in the updation
    of the ML model to

    enhance its eﬃciency.

    4.4 Analytics setup

    The main goal of this experiment lies in gathering the various physical parameters
    of a farming land via

    sensors and utilizing the fetched data along with weather forecast information
    for developing an algorithm

    using hybrid machine learning approach to infuse higher accuracy in predicting
    the soil moisture for the

    upcoming days. As discussed in Section 4, for the proper planning and provisioning
    of optimal irrigation,

    the algorithm provides a predictable estimate of soil moisture with the assistance
    of various statistical

    measures as shown in Table 1. The measures are adopted for estimating the appropriateness
    and error rate

    of the proposed algorithm. It is inferred from the experiment that, optimal irrigation
    is feasible using a good

    642

    

    S. Premkumar and AN. Sigappi

    estimation (close to the actual value) of the soil moisture (Table 2), with the
    support of ﬁeld data and

    forecast information, thereby utilizing the natural rain eﬃciently.

    The SMPHA ML model is interdependent on dynamic changes in weather environment
    where the

    models deployed on edge nodes need to change the controls accordingly after model
    gets trained con-

    tinuously. For the process of retraining, the trained model needs to be updated.
    The parameters such as TM,

    HU, ST, UV, SM about grown plants are logged for the training purpose, and these
    generated datasets are

    recorded from the already developed manual mode system [39]. The growth of the
    Indian Mundu Chilli [40]

    is taken for the observation from the ﬁrst stage to the last grown stage for 95
    days. While retraining the

    model, the training is carried in cloud without causing eﬀect to the functionalities
    at edge nodes. A signal is

    transferred to the corresponding edge server for triggering the task of updating
    the SMPHA model from the

    web server. At that time, the newly trained model is downloaded to replace the
    existing one at the con-

    sidering edge server. From then, the ML model at the edge server is called to
    be updated with the real-world

    knowledge and is ready for its garden controlling tasks (to apply in the next
    farming season).

    4.5 Work ﬂow

    The ﬂowchart in Figure 6 depicts the working of the proposed system based on the
    decision support system

    that is beneﬁcial for irrigation needed for the growth of vegetables. The chilli
    plant is grown in a growbag

    attached with sensors and Pi as shown in Figure 3 and monitored for 95 days of
    data collection. To bring out

    optimality in the irrigation system, features relating to climate, soil, crop,
    and ﬁeld infrastructure are to be

    considered. To provide several recommendations in the production of vegetables,
    decision support systems

    (DSSs) are designed, which process voluminous information [39]. This proposed
    work is the extension of

    soil moisture diﬀerences (SMD) model [41] developed for soil moisture prediction.
    The threshold values of

    soil moisture are used in the SMD model where the system schedules the irrigation
    date based on the

    predicted soil moisture and weather forecast (precipitation) information automatically
    using SVR+ k-means

    modeling. Therefore, in the extension of the aforementioned work, further more
    number of sensors are used

    to log soil moisture value, which is averaged in the proposed model. This model
    is developed in two

    divisions of ﬂowchart as shown in Figure 7, where both are interconnected. It
    is observed that the prediction

    of XB + k-mean approach provides better results as presented in Table 2.

    The ﬁrst phase of the ﬂowchart describes the hybrid algorithm for the soil moisture
    prediction (SMPHA)

    using the combination of XB + k-means algorithm. During the data collection step,
    the sensor data for the

    parameters, namely, TM, HU, ST, UV, and SM, are collected. During preprocessing,
    null values and outliers

    are removed and the preprocessed data are used to train the XG-Boost model. The
    developed model is then

    trained with variables of live weather features (TM, HU, UV, PC) obtained from
    Weather API for the

    prediction of SM data. These data are given as input to k-means clustering algorithm
    to predict the soil

    moisture, which is deﬁned as SMPHA value to be infused in the next phase of the
    ﬂowchart. The second

    phase of the ﬂowchart deﬁnes the automatic irrigation planning setup. The setup
    starts obtaining the soil

    moisture maximum (SMMax) and soil moisture minimum (SMMin) values in the dashboard
    for setting the

    maximum and minimum level of soil moisture. Then, the current soil moisture (CuSM)
    is sensed and

    compared against the threshold SMMin. If the resulting value is less than SMMin,
    the process proceeds

    with SMPHA. On the contrary, it stops the irrigation process by sending 0 to the
    relay. In SMPHA, the

    nearest precipitation date is selected and it is assigned to the predicted soil
    moisture (PSM). The SMMax is

    decided by ﬁnding the minimum of (PSM + SMMin, SMMax), and the predicted SMMax
    is further checked

    against CuSM with a condition if SMMax is greater the CuSM then it sends 1 to
    the relay as a signal to start

    irrigation. If the condition fails, then it sends 0 to stop irrigation. The process
    of automatic irrigation ends

    by forecasting the irrigation schedule in accordance with the live weather parameters.

    IoT-enabled edge computing model for smart irrigation system

    

    643

    5 Experimental setup and evaluation

    The test bed is developed and deployed, and the data are collected for the analysis
    in irrigation manage-

    ment. Here, Heroku cloud platform is used to deploy the cloud web server. The
    same cloud is also installed

    at a local edge that is at two Raspberry Pi units equipped with Wi-Fi 802.11n
    connections to denote the edge

    nodes. JMeter application is used to get sequential accesses to the web page from
    various users for eval-

    uating the network parameters. The speciﬁcation of these servers is given in Tables
    3 and 4.

    We evaluated the performance of the proposed IoT-based smart farm on two diﬀerent
    platforms,

    namely, in the cloud and on the local computer to show the feasibility and the
    beneﬁt of the edge com-

    puting scheme. Further many parameters are considered for evaluation and discussed
    in the next section to

    show that edge deployment is better than cloud.

    Figure 6: Flow chart of the proposed edge model.

    644

    

    S. Premkumar and AN. Sigappi

    5.1 Evaluation

    A hybrid machine learning methodology is used in evaluating the ﬁrst stage of
    the proposed model. The

    predicted value of the soil moisture is better in terms of their accuracy and
    error rate. From the comparison

    of the other ML algorithms as shown in Table 2, XB + k-means performs better and
    taken further to be

    deployed in edge and cloud to check its eﬃciency with each other. Therefore, for
    analyzing the eﬃciency of

    the edge server in accordance with the proposed hybrid algorithm SMPHA is evaluated
    in terms of the time

    taken to train the ML model in edge and cloud. In this experiment Raspberry Pi
    is used to train the SMPHA

    model with 196,400 rows, that is, input data sample size and takes around 1,710,000
    ms (approximately

    28.5 min). The same model when it is trained in Google Colab cloud environment,
    it takes 204,000 ms

    (approximately 3.4 min) as depicted in Table 5. The main purpose is to run the
    trained model on edge not to

    train the model at edge. So due to the lack of computing capability at the edge,
    it takes more time to train

    the model, but it can be ignored as it does not aﬀect the purpose of the proposed
    model. Here, edge is

    introduced to obtain the task of computing from the cloud (i.e., oﬄoading the
    task) by making the system

    more edge-oriented deployment. It can be accomplished rapidly as it requires only
    14 s to download a

    trained SMPHA model from the cloud to the edge node with a size of 3,101 kb as
    given in Table 5. The time to

    Figure 7: Average response time with 10 test scenarios.

    Table 3: Conﬁguration of raspberry Pi

    CPU

    Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5 GHz

    RAM

    8 GB LPDDR4-3200 SDRAM

    Network

    2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE, Gigabit Ethernet

    Pinboard

    8 GB LPDDR4-3200 SDRAM

    Operating system, language

    Raspbian , Python 3

    Table 4: Conﬁguration of Heroku cloud

    Country

    United states

    Service

    Amazon web service S3

    Processor

    2.4 GHz Intel Xeon E5-2676 v3 Processor

    CPU Power

    8 GB

    Virtual CPUs

    3–5

    IoT-enabled edge computing model for smart irrigation system

    

    645

    download varies according to the size of the trained model. So, from this process
    it can be inferred that

    downloading the trained model saves time when compared to training the model at
    the edge. Through this

    in real time, deployment of the trained SMPHA model in edge is better compared
    to deployment in cloud

    services. Furthermore, network parameters like latency, throughput, bandwidth,
    and response time are

    adopted to measure the performance improvements in edge computing.

    The performance metrices taken into account are latency, bandwidth, and response
    time [42]. The

    latency of an application is the product of two factors: computing latency and
    transmission latency. The

    time spent on data processing and transmission between end devices to cloud servers
    is termed as com-

    puting latency and transmission latency, respectively. The computational capacity
    of the system decides

    the computing latency as the network servers possess a considerable amount of
    capacity to make the data

    processing faster, whereas the sensors come with limited computing capacity. The
    latency in transmission

    is increased by the end devices and cloud servers. Bandwidth: As large number
    of sensors are deployed in

    IoT, data generated would be huge that consumes an intense range of bandwidth
    and leads to several

    problems such as delay in transmission and loss of packets. It becomes unacceptable
    for the data to be

    transferred directly to cloud servers without applying compression. Therefore,
    data preprocessing and

    aggregation are needed for IoT gateways before redirecting them to remote cloud
    servers. Then, the issue

    to be confronted is to control the traﬃc ﬂow by migrating data processing and
    aggregation tasks optimally

    to decrease the bandwidth needs of the end users while maintaining the data quality.
    Response time: The

    total response time is calculated by adding up transmission and processing time.
    The local deployment of

    the proposed model for controlling IoT-based irrigation are deployed on two modes:
    (i) Cloud mode: The

    developed SMPHA model is implemented in the cloud communicating with IoT sensors
    nodes directly to

    manage the irrigation process. The data are stored and processed at the cloud
    server itself where it uses

    Heroku platform. (ii) Edge mode – Raspberry Pi is deployed as an edge server that
    involves in processing of

    the SMPHA model controlling the IoT sensor nodes. Here, the data are stored and
    processed locally within

    the edge servers. This SMPHA model from both the edge and cloud does the job of
    controlling the actuators

    to initiate and quit the working of water ﬂow motors. Through this deployment
    in both the environments,

    performance of edge server and cloud server can be checked in terms of latency,
    throughput, bandwidth,

    and response time is shown in aforementioned graphs in Figures 6, 8, and 9. This
    performance metrices is

    not feasible to calculate while deploying in real time, so the aforementioned
    scenarios of two modes are

    virtually created by generating many request and response threads between the
    servers. This sampling,

    load test, and distributed testing are conducted through JMeter application [43]
    and also veriﬁed with

    Wireshark [44] in cloud servers. The test scenario is created here by data of
    sending and receiving sampling

    data between cloud to IoT sensors and between Edge to IoT sensors. The sampling
    data considered in this

    work refer to the approximate number of requests generated by Arduino to cloud
    and Arduino to Raspberry

    Pi that are calculated in real time. The test scenario is divided into 10 days
    of sampling data collected for

    each day. The evaluation results are depicted for latency and response times in
    10 days perspective. In

    latency parameter, edge service has decreased by an average of 77.85% time compared
    to the with cloud. In

    the same manner, the response time of edge service is also decreased by 74.09%
    time compared to cloud

    service. In throughput calculation, sampling data are calculated for an hourly
    basis for the 10 hours data in

    a day. From the hourly comparisons of throughput value, edge outperforms with
    67.17% high Mbps usage.

    Through this analysis as shown in Table 6, it is evident that the proposed edge
    computing methodology

    deployed in Raspberry Pi or in local computers outperforms the cloud-oriented
    approach.

    Table 5: Comparison of model training time

    Edge

    Cloud

    Model training time

    28.4 min

    3.4 min

    Downloading time

    Not applicable

    14 s

    646

    

    S. Premkumar and AN. Sigappi

    Finally, to illustrate the eﬃciency of resource management in edge computing,
    CPU and memory

    utilization are considered for the analysis as both factors rely on the service
    execution model and the

    computational needs of the services being ﬁred from oﬀ-loaders. Figure 10 depicts
    the utilization of CPU

    and RAM on the Raspberry Pi acting as an edge node in two cases: with and without
    the deployment of

    SMPHA model on it. As shown in Figure 10, the SMPHA model aﬀects the CPU of the
    Raspberry Pi node

    signiﬁcantly as it consumed around 41.2% of the CPU compared to only 3.5% when
    it does not host the

    Figure 8: Average latency with 10 test scenarios.

    Figure 9: Average throughput value with 10 h test scenarios.

    Table 6: Performance metrices for cloud and edge services

    Performance metrices

    Cloud service

    Edge service

    Throughput (Mbps)

    0.04944

    0.08265

    Latency (ms)

    1415.8

    313.6

    Response time (ms)

    1519.6

    393.8

    Bandwidth (bps)

    86

    1,365

    IoT-enabled edge computing model for smart irrigation system

    

    647

    SMPHA model. However, the memory (RAM) utilization in both the cases (with and
    without deployment of

    an SMPHA model) is nearly the same which is around 31%. Comparatively RAM utilization
    does not have

    much diﬀerence in with and without SMPHA. It is worthwhile to note that, the CPU
    utilization is still much

    lower than the 50% of total CPU capacity in Raspberry Pi. Therefore, it becomes
    feasible for adopting edge

    server implementation in the proposed irrigation system.

    6 Conclusion

    This article proposed a novel approach to edge-based irrigation system to facilitate
    decision-making on

    watering the plants on scheduled time. The proposed approach applying IoT with
    an edge computing

    framework enables the farming system to adapt to the changes in environmental
    conditions automatically

    and eﬃciently. The process of automatic irrigation regulates irrigation according
    to the live weather para-

    meters for forecasting the irrigation process. Soil moisture prediction was performed
    using major regression

    algorithms that are again combined with k-means clustering for estimating the
    changes incurred in soil

    moisture prediction. These techniques were compared through metrics such as MAPE,
    MSE, speed, and

    power consumption from which XB + k-means was found to perform better. The XB
    + k-means algorithm

    was further used for the implementation of decision mechanism on the developed
    edge computing model.

    The proposed edge model saves the data communication cost and reduces the response
    time of IoT services.

    It can be deployed on existing devices on the network edges serving as edge nodes,
    thereby reducing the

    overall implementation cost of a large-scale IoT system. The edge-based approach
    was found to perform

    better than the cloud-based approach in terms of response time, latency, throughput,
    and bandwidth

    usage. Finally, the edge model was analyzed through CPU and memory usage while
    running with and

    without the algorithm. In both cases, the memory utilization is almost lower to
    total available resource of

    the edge device. From this, edge device can allocate its remaining resource for
    other computing services,

    which increases the eﬃciency of edge computing device. The number of end edge
    nodes can be increased

    according to the ﬁeld area and then to check the potency of the system.

    Conﬂict of interest: The authors declare no conﬂict of interest.

    Data availability statement: All data that support the ﬁndings of this study are
    included within the article.

    Figure 10: CPU and memory utilization with and without SMPHA.

    648

    

    S. Premkumar and AN. Sigappi

    References

    [1]

    India: Issues and Priorities for Agriculture, The World Bank, May 17, 2012. https://www.worldbank.org/en/news/feature/

    2012/05/17/india-agriculture-issues-priorities.

    [2]

    India at a glance in Agriculture, FAO in India. https://www.fao.org/india/fao-in-india/india-at-a-glance/en/.

    [3]

    Cavicchioli R, Ripple WJ, Timmis KN, Azam F, Bakken LR, Baylis M, et al. Scientists’
    warning to humanity: Microorganisms

    and climate change. Nature Rev Microbiol. 2019;17(9):569–86. doi: 10.1038/s41579-019-0222-5.

    [4]

    Huong NTL, Bo YS, Fahad S. Economic impact of climate change on agriculture using
    Ricardian approach: A case of

    Northwest Vietnam. J Saudi Society Agricult Sci. 2019;18(4):449–457. doi: 10.1016/j.jssas.2018.02.006.

    [5]

    Fagodiya RK, Pathak H, Bhatia A, Jain N, Kumar A, Malyan SK. Global warming impacts
    of nitrogen use in agriculture: An

    assessment for India since 1960. Carbon Management. 2020;11(3):291–301. doi: 10.1080/17583004.2020.1752061.

    [6]

    Sarkar S, Chatterjee S, Misra S. Assessment of the suitability of fog computing
    in the context of internet of things. IEEE

    Trans Cloud Comput. 2018;6(1):46–59. doi: 10.1109/TCC.2015.2485206.

    [7]

    Porter JR, Xie L, Challinor AJ, Cochrane K, Howden SM, Iqbal MM, et al. Food security
    and food production systems. In: Field

    CB, Barros VR, Dokken DJ, Mach KJ, Mastrandrea MD, Bilir TE, et al., editors.
    Climate Change 2014: Impacts, Adaptation,

    and Vulnerability. Part A: Global and Sectoral Aspects. Contribution of Working
    Group II to the Fifth Assessment Report of

    the Intergovernmental Panel on Climate Change Cambridge, United Kingdom: Cambridge
    University Press and New York,

    NY, USA; 2014. p. 485–533.

    [8]

    Lal R. Adaptation and mitigation of climate change by improving agriculture in
    India. In: S. SherazMahdi (Ed.), Climate

    Change and Agriculture in India: Impact and Adaptation. Cham: Springer International
    Publishing; 2019. p. 217–27.

    [9]

    Saravanan K, Julie G, Robinson H. (Eds.), Handbook of research on implementation
    and deployment of IoT projects in

    smart cities. Hershey: IGI global, 2019.

    [10] Baylis A. Advances in precision farming technologies for crop protection.
    Outlooks Pest Manag. 2017;28(4):158–61.

    [11]

    Mulla D, Khosla R. Historical evolution and recent advances in precision farming.
    Soil-Speciﬁc Farming Precision

    Agriculture. Boca Raton: CRC Press; 2015.

    [12] Dutta L, and Basu TK. Extraction and optimization of leaves images of mango
    tree and classiﬁcation using ANN. IJRAET

    2013;1(3):46–51.

    [13] Kawai T, Mineno H. Evaluation environment using edge computing for artiﬁcial
    intelligence-based irrigation system. 2020

    16th International Conference on Mobility, Sensing and Networking (MSN). Tokyo,
    Japan: IEEE; 2020. p. 214–9.

    [14] Munir MS, Bajwa IS, Ashraf A, Anwar W, Rashid R. Intelligent and smart irrigation
    system using edge computing and IoT.

    Complexity. 2021;2021:1–16.

    [15] Angelopoulos CM, Filios G, Nikoletseas S, Raptis TP. Keeping data at the
    edge of smart irrigation networks: A case study in

    strawberry greenhouses. Comput Netw. 2020;167:107039.

    [16] Satyanarayanan M. The emergence of edge computing. Computer. 2017;50(1):30–9.

    [17] Shi W, Dustdar S. The promise of edge computing. Computer. 2016;49(5):78–81.

    [18] Ramirez Izolan PL, Diniz Rossi F, Hohemberger R, Konzen MP, da Cunha Rodrigues
    G, Saquette LR, et al. Low-cost fog

    computing platform for soil moisture management. In: 2020 International Conference
    on Information Networking (ICOIN).

    Barcelona, Spain: IEEE; 2020. p. 499–504.

    [19] Ferrandez-Pastor F, Garcia-Chamizo, J, Nieto-Hidalgo, M, Mora-Pascual, J,
    Mora-Martínez, J. Developing ubiquitous sensor

    network platform using internet of things: application in precision agriculture.
    Sensors. 2016;16(7):1141.

    [20] Xu X, Liu X, Xu Z, Dai F, Zhang X, Qi L. Trust-oriented IoT service placement
    for smart cities in edge computing. IEEE Internet

    Things J. 2020;7(5):4084–91.

    [21] Wu X, Liu M. In-situ soil moisture sensing: Measurement scheduling and estimation
    using compressive sensing. In: 2012

    ACM/IEEE 11th International Conference on Information Processing in Sensor Networks
    (IPSN). Beijing, China: IEEE; 2012.

    p. 1–11.

    [22] Kameoka T, Nishioka K, Motonaga Y, Kimura Y, Hashimoto A, Watanabe N. Smart
    sensing in a Vineyard for advanced

    viticultural management. In: Proceedings of the 2014 International Workshop on
    Web Intelligence and Smart Sensing.

    Saint Etienne France; 2014. p. 1–4.

    [23] Cagri Serdaroglu K, Onel C, Baydere S. IoT-based smart plant irrigation system
    with enhanced learning. In: 2020 IEEE

    Computing, Communications and IoT Applications (ComComAp.) Beijing, China: IEEE;
    2020. p. 1–6.

    [24] Kwok J, Sun Y. A smart IoT-based irrigation system with automated plant recognition
    using deep learning. In: Proceedings

    of the 10th International Conference on Computer Modeling and Simulation - ICCMS2018.
    Sydney, Australia: ACM Press;

    2018. p. 87–91.

    [25] Goldstein A, Fink L, Meitin A, Bohadana S, Lutenberg O, Ravid G. Applying
    machine learning on sensor data for irrigation

    recommendations: Revealing the agronomist’s tacit knowledge. Precision Agricult.
    2018;19(3):421–44.

    [26] Vij A, Vijendra S, Jain A, Bajaj S, Bassi A, Sharma A. IoT and machine learning
    approaches for automation of farm irrigation

    system. Proc Comput Sci. 2020;167:1250–7.

    [27] Krishnan H, Scholar R. MongoDB – a comparison with NoSQL databases. Int J
    Scientiﬁc Eng Res. 2016;7(5):1035–7.

    IoT-enabled edge computing model for smart irrigation system

    

    649

    [28] Ojha T, Misra S, Raghuwanshi NS. Wireless sensor networks for agriculture:
    The state-of-the-art in practice and future

    challenges. Comput Electr Agricult. 2015;118:66–84.

    [29] Gutierrez J, Villa-Medina JF, Nieto-Garibay A, Porta-Gandara MA. Automated
    irrigation system using a wireless sensor

    network and GPRS module. IEEE Trans Instrument Measurement. 2014;63(1):166–76.

    [30] Chanthakit S, Keeratiwintakorn P, Rattanapoka C. An IoT system design with
    real time stream processing and data ﬂow

    integration. In: 2019 Research, Invention, and Innovation Congress (RI2C.) Bangkok,
    Thailand: IEEE; 2019. p. 1–5.

    [31] Lv H, Wang S. Design and application of IoT microservices based on Seneca.
    USA: DEStech Transactions on Computer

    Science and Engineering, (icte.). 2016.

    [32] Lee B-H, Dewi EK, Wajdi MF. Data security in cloud computing using AES under
    HEROKU cloud. In: 2018 27th Wireless and

    Optical Communication Conference (WOCC). Hualien: IEEE; 2018. p. 1–5.

    [33] Lopez Pena MA, Munoz Fernandez I. SAT-IoT: An architectural model for a high-performance
    fog/edge/cloud IoT platform.

    In: 2019 IEEE 5th world forum on internet of things (WF-IoT.) Limerick, Ireland:
    IEEE; 2019. p. 633–8.

    [34] Weather API. Retrieved from https://openweathermap.org/api.

    [35] Drew Gislason. Zigbee wireless networking, 1st ed. Newnes, London: Elsevier
    Publisher; 2008.

    [36] Tanabe K, Tanabe Y, Hagiya M. Model-based testing for MQTT applications.
    In: Virvou M, Nakagawa H, Jain LC. (Eds.),

    Knowledge-Based Software Engineering: 2020. Cham: Springer International Publishing;
    2020. p. 47–59.

    [37] Babun L, Denney K, Celik ZB, McDaniel P, Uluagac AS. A survey on IoT platforms:
    Communication, security, and privacy

    perspectives. Comput Netw. 2021;192:108040.

    [38] Rastogi K, Lohani D. Edge computing-based internet of things framework for
    indoor occupancy estimation. Int J Ambient

    Comput Intell. 2020;11(4):16–37.

    [39] Premkumar S, Sigappi AN. Functional framework for edge-based agricultural
    system. In: AI, Edge and IoT-based Smart

    Agriculture, 1st ed. USA: Academic Press, Elsevier; 2021. p. 71–100.

    [40] Phani Kumar J, Paramaguru P, Arumugam T, Manikanda Boopathi N, Venkatesan
    K. Genetic divergence among Ramnad

    mundu chilli (Capsicum annuum L.) genotypes for yield and quality. Electr J Plant
    Breeding. 2021;12(1):228–34.

    [41] Goap A, Sharma D, Shukla AK, Rama Krishna C. An IoT-based smart irrigation
    management system using Machine learning

    and open source technologies. Comput Electronic Agricult. 2018;155:41–9.

    [42] Aslanpour MS, Gill SS, Toosi AN. Performance evaluation metrics for cloud,
    fog and edge computing: A review, taxonomy,

    benchmarks and standards for future research. Internet Things. 2020;12:100273.

    [43] Sunardi A, Suharjito MVC architecture: a comparative study between Laravel
    framework and slim framework in freelancer

    project monitoring system web based. Proc Comput Sci. 2019;157:134–41.

    [44] Robert Shimonski. The wireshark ﬁeld guide, 1st ed. New York: Syngress Press,
    Elsevier; 2013.

    650

    

    S. Premkumar and AN. Sigappi

    '
  inline_citation: Premkumar and Sigappi, 2022
  journal: Journal of intelligent systems
  limitations: The paper does not provide any information on the cost of implementing
    the model or the scalability of the model to larger irrigation systems.
  pdf_link: https://www.degruyter.com/document/doi/10.1515/jisys-2022-0046/pdf
  publication_year: 2022
  relevance_score: 0.7
  relevance_score1: 0
  relevance_score2: 0
  title: IoT-enabled edge computing model for smart irrigation system
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: '>'
- DOI: https://doi.org/10.12731/2658-6649-2022-14-6-423-454
  analysis: "This systematic review on automated systems for real-time irrigation\
    \ management discusses the need for such systems and how they can contribute to\
    \ addressing the global food challenge. The review provides a comprehensive overview\
    \ of end-to-end automated irrigation management systems that integrate IoT, machine\
    \ learning, and cloud computing technologies.\n\nThe research has been categorized\
    \ into three main sections:\n\n1. Irrigation Management Data: covers data collected\
    \ during irrigation management and its typical sources.\n2. Real-time processing:\
    \ covers the initial stages of the automated irrigation management pipeline, focusing\
    \ on data collection, transmission protocols and technologies, and challenges\
    \ and solutions associated with real-time data transmission.\n3. Roadblocks in\
    \ digitization of agriculture industry: outlines a series of interconnected hurdles\
    \ to a wider adoption of digital technologies in agriculture. The identified hurdles\
    \ are classified into technical and socioeconomic categories.\n\nThe review suggests\
    \ that digital technologies in agriculture are still largely in the conceptual\
    \ or prototype stages and have yet to be fully commercialized. Several factors\
    \ contribute to this, including:\n\n1. Interoperability: Data collected from various\
    \ sources often uses different formats, making data integration difficult.\n2.\
    \ Lack of Standardization: A lack of standardized devices and applications can\
    \ lead to compatibility issues and hinder the seamless exchange of data and information.\n\
    3. Data quality, security, storage, and openness: Ensuring the quality, security,\
    \ and accessibility of data is critical for producing meaningful outcomes. However,\
    \ current data management systems are often decentralized, which can impact data\
    \ quality and availability.\n4. Reliability: The reliability of devices and software\
    \ applications is essential for accurate data collection, processing, and transmission.\
    \ Unreliable sensing, processing, and transmission can lead to erroneous monitoring\
    \ data reports, significant delays, and even data loss.\n5. Adaptability: Agriculture\
    \ is a complex and dynamic environment, and systems need to adapt to changing\
    \ conditions and respond proactively to unforeseen elements to provide the required\
    \ performance.\n6. Robust wireless architectures: Low-cost, wide-area coverage,\
    \ enough networking flexibility, and high scalability are all advantages of wireless\
    \ networks and communication technologies. However, in a dynamic agriculture environment,\
    \ such as temperature swings, the movement of live objects, and the existence\
    \ of impediments, dependable wireless connection is a major difficulty.\n\nIn\
    \ addition to these technical challenges, there are also socioeconomic barriers\
    \ to the adoption of digital technologies in agriculture. These include:\n\n1.\
    \ Lack of awareness and understanding of digital technologies and their applications\
    \ among farmers.\n2. High costs associated with implementing and maintaining smart\
    \ systems.\n3. Digital divide: Differences in access to technology, connectivity,\
    \ and digital literacy can create disparities in the adoption of digital technologies.\
    \ \n4. Concerns about the return on investment in digital technologies.\n5. Lack\
    \ of trust in the effectiveness of smart technologies in agriculture due to the\
    \ complexity of living subjects and perishable products.\n6. Legal frameworks:\
    \ Different regions and nations have distinct legal frameworks that regulate the\
    \ deployment of digital technologies in agriculture, including resource allocation,\
    \ data privacy, and security.\n7. Poor connectivity infrastructure: In many developing\
    \ nations, connectivity infrastructure is poor, limiting access to advanced digital\
    \ technologies that could help turn data from disparate sources into useful and\
    \ actionable insights.\n\nTo address these challenges and fully harness the potential\
    \ of digital technologies in agriculture, several recommendations are proposed:\n\
    \n1. Governments and industry stakeholders need to invest in research and development\
    \ to address the technical challenges associated with implementing digital technologies\
    \ in agriculture.\n2. Governments and industry stakeholders need to collaborate\
    \ to develop and implement standards for interoperability, data quality, and security.\n\
    3. Governments and industry stakeholders need to invest in education and training\
    \ programs to raise awareness of digital technologies and their applications among\
    \ farmers and other stakeholders in the agriculture industry.\n4. Governments\
    \ and industry stakeholders need to implement policies and programs to support\
    \ the adoption of digital technologies by farmers, particularly smallholder farmers.\n\
    5. Governments and industry stakeholders need to work together to develop and\
    \ implement legal frameworks that support the deployment of digital technologies\
    \ in agriculture while protecting the privacy and security of data.\n6. Governments\
    \ and industry stakeholders need to invest in expanding connectivity infrastructure\
    \ in rural areas to ensure that all farmers have access to the benefits of digital\
    \ technologies.\n\nBy addressing these challenges and implementing these recommendations,\
    \ we can accelerate the adoption of digital technologies in agriculture and unlock\
    \ their full potential to address the global food challenge."
  authors:
  - Gurjeet Singh
  - Naresh Kalra
  - Neetu Yadav
  - Ashwani Sharma
  - Manoj Saini
  citation_count: 16
  full_citation: 'Gurjeet Singh, Naresh Kalra, Neetu Yadav, Ashwani Sharma, Manoj
    Saini, Smart Agriculture: A Review, Siberian Journal of Life Sciences and Agriculture,
    Том 14, №6, 2022, pp. 423-454. DOI: 10.12731/2658-6649-2022-14-6-423-454'
  full_text: ">\n423\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6,\
    \ 2022\nНАУЧНЫЕ ОБЗОРЫ И СООБЩЕНИЯ\n  \nSCIENTIFIC REVIEWS AND REPORTS\nDOI: 10.12731/2658-6649-2022-14-6-423-454\
    \ \nUDC 004:63\nSMART AGRICULTURE: A REVIEW\nGurjeet Singh, Naresh Kalra, Neetu\
    \ Yadav,                                                    \nAshwani Sharma,\
    \ Manoj Saini\nAgriculture is regarded as one of the most crucial sectors in guaranteeing\
    \ food \nsecurity. However, as the world’s population grows, so do agri-food demands,\
    \ \nnecessitating a shift from traditional agricultural practices to smart agriculture\
    \ \npractices, often known as agriculture 4.0. It is critical to recognize and\
    \ handle the \nproblems and challenges related with agriculture 4.0 in order to\
    \ fully profit from \nits promise. As a result, the goal of this research is to\
    \ contribute to the development \nof agriculture 4.0 by looking into the growing\
    \ trends of digital technologies in the \nfield of agriculture. A literature review\
    \ is done to examine the scientific literature \npertaining to crop farming published\
    \ in the previous decade for this goal. This \nthorough examination yielded significant\
    \ information on the existing state of digital \ntechnology in agriculture, as\
    \ well as potential future opportunities.\nKeywords: Smart Agriculture; Artificial\
    \ Intelligence; Machine Learning; IOT; \nEdge Computing; Fog Computing\nFor citation.\
    \ Gurjeet Singh, Naresh Kalra, Neetu Yadav, Ashwani Sharma, Manoj. \nSmart Agriculture:\
    \ A Review. Siberian Journal of Life Sciences and Agriculture, 2022, \nvol. 14,\
    \ no. 6, pp. 423-454. DOI: 10.12731/2658-6649-2022-14-6-423-454 \n1. Introduction\
    \ \n1.1. A worldwide dilemma of food security\nFood security is a multifaceted\
    \ notion that aims to eliminate hunger by \nassuring a steady supply of nutritious\
    \ food. It is defined by a four-pillar para-\ndigm, each of which is necessary\
    \ to provide food security [1]. Food security \nis becoming a severe global concern\
    \ as a result of anthropogenic factors such \nas rapid population expansion, urbanization,\
    \ industrialization, farmland loss, \nfreshwater scarcity, and environmental degradation.\
    \ This is due to the fact that \n424\nSiberian Journal of Life Sciences and Agriculture,\
    \ Vol. 14, №6, 2022\nthese factors have a direct impact on the agricultural industry,\
    \ which is the \nworld’s principal source of agri-food production. By 2050, it\
    \ is expected that \nthe global population will rise from 7.7 billion to 9.2 billion,\
    \ urban population \nwill rise by 66 percent, arable land will decline by approximately\
    \ 50 million \nhectares, global GHG emissions (source of CO 2 – promote crop disease\
    \ and \npest growth) will rise by 50 percent, agri-food production will decline\
    \ by 20%, \nand food demand will rise by 59 to 98 percent, posing an imminent\
    \ threat. To \nmeet rising food demands, agricultural practitioners around the\
    \ world will need \nto increase crop and livestock production to maximize agricultural\
    \ output. The \nemphasis of this review paper is crop farming, which includes\
    \ the production \nof both food and cash crops. \nA typical agri-food value chain\
    \ displaying three key stages in the production \nof agricultural products: pre-field\
    \ (pre-plantation stage), in-field (plantation and \nharvesting stage), and post-field\
    \ (post-harvesting stage). All of the stages are \nimportant in the value chain,\
    \ but in this examination, we will focus on the sec-\nond stage, in-field, which\
    \ includes numerous crop-growing operations such as \nploughing, sowing, spraying,\
    \ and harvesting, among others. Traditional agricul-\ntural approaches are now\
    \ used in these procedures, which are labor-intensive, \nrequire arable land,\
    \ time, and a significant quantity of water (for irrigation), and \nmake it difficult\
    \ to produce enough food [5]. A part of the problem is also due \nto the improper\
    \ application of pesticides and herbicides, as well as the misuse \nof available\
    \ technologies, both of which hurt crops and ultimately result in \nagricultural\
    \ waste [6]. These problems can be solved by combining advanced \ntechnologies\
    \ and computer-based applications that ensure higher crop yields, \nless water\
    \ use, better pesticide/herbicide use, and improved crop quality. This \nis where\
    \ the concept of smart agriculture comes into play.\n1.2. Smart Agriculture\n\
    Every industry is being revolutionized and reshaped by Industry 4.0. It’s a \n\
    strategic initiative that combines emerging disruptive digital technologies like\
    \ \nthe Internet of Things (IoT), big data and analytics (BDA), system integration\
    \ \n(SI), cloud computing (CC), simulation, autonomous robotic systems (ARS),\
    \ \naugmented reality (AR), artificial intelligence (AI), wireless sensor networks\
    \ \n(WSN), cyber-physical systems (CPS), digital twin (DT), and additive manu-\n\
    facturing (AM) to enable the digitization of the industry [7]. \nAgriculture 4.0,\
    \ also known as smart agriculture, smart farming or digital \nfarming [7], is\
    \ the next phase of industrial agriculture, fueled by the integra-\ntion of these\
    \ technologies in agriculture. Farmers can use smart agriculture to \naddress\
    \ a variety of agricultural food production concerns such as farm pro-\n425\n\
    Siberian Journal of Life Sciences and Agriculture, Том 14, №6, 2022\nductivity,\
    \ environmental impact, food security, crop losses, and sustainability. \nFarmers,\
    \ for example, can connect to farms remotely, regardless of location \nor time,\
    \ using IoT-enabled equipment based on WSNs to monitor and control \nfarm operations.\
    \ Drones outfitted with hyper spectral cameras can collect data \nfrom a variety\
    \ of sources on farmlands, while autonomous robots can assist \nor complete repetitive\
    \ chores on farms. Data analytics techniques can be used \nto examine the obtained\
    \ data, and computer programs can be utilized to help \nfarmers make decisions.\n\
    Similarly, smart agriculture can monitor and analyze a wide range of pa-\nrameters\
    \ related to environmental factors, weed control, crop production status, \nwater\
    \ management, soil conditions, irrigation scheduling, herbicides and pes-\nticides,\
    \ and controlled environment agriculture to increase crop yields, reduce \ncosts,\
    \ improve product quality, and maintain process inputs through the use of \nmodern\
    \ systems [8].\n1.3. Research Motivation and Contribution \nThe reason for writing\
    \ this assessment is that digital technologies in agri-\ncultural systems provide\
    \ new strategic solutions for increasing farm output ef-\nficiency and effectiveness.\
    \ Furthermore, digital transformation paves the door \nfor modern farming technologies\
    \ like vertical farming (hydroponics, aquapon-\nics, and aeroponics) to be used,\
    \ which has the potential to solve food security \nissues. However, there are\
    \ a number of issues and restrictions connected with \nthis change from a technological,\
    \ socioeconomic, and management perspective \nthat must be overcome in order to\
    \ fully realise the potential of agricultural 4.0 \n[9].A number of publications\
    \ [9–18] have examined developing trends in the \ndevelopment of agriculture 4.0\
    \ by offering concise information on essential \nuses, benefits, and research\
    \ problems of smart farming. These studies’ research \nfocuses on either explaining\
    \ more general technical aspects while focusing on \nonly one or a few digital\
    \ technologies, or improving agricultural supply chain \nperformance, or developing\
    \ an agriculture 4.0 definition, or achieving sustain-\nable agronomy through\
    \ precision agriculture, or proposing a smart farming \nframework. Nonetheless,\
    \ these studies do not include an explicit discussion of \nthe tools and techniques\
    \ utilized to construct various systems, as well as their \nmaturity level. There\
    \ are also few studies that look at the consequences of dig-\nital technology\
    \ in modern soilless farms including hydroponics, aquaponics, \nand aeroponics\
    \ (indoor/outdoor). As a result, in order to promote conversation \nin this field,\
    \ it is necessary to examine the emergence of agriculture 4.0 from \nmany angles.\
    \ This research seeks to provide a comprehensive overview of dig-\nital technologies\
    \ used in the second stage of the agricultural production value \n426\nSiberian\
    \ Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\nchain (in-field)\
    \ for various farm types as described in section 1.1. The study’s \nkey theoretical\
    \ contribution is the analysis and dissemination of the tools and \ntechniques\
    \ used, as well as the farm type, maturity level of produced systems, \nand potential\
    \ obstacles or inhibiting factors in agriculture 4.0 development. Re-\nsearchers\
    \ and agricultural practitioners will benefit from the review’s insights \nin\
    \ future study on agriculture 4.0. \n1.4. Paper organization \nThe following is\
    \ the structure of the paper after the introduction: \nSection 2 discusses the\
    \ methodology used to collect relevant literature; Sec-\ntion 3 then presents\
    \ the statistical results obtained after a general analysis of the \nselected\
    \ research studies; Section 4 then provides a detailed overview of the \ncore\
    \ technologies used in agricultural digitization; Section 5 then highlights the\
    \ \ntechnical and socio-economic roadblocks to digital integration in agriculture;\
    \ \nand finally, Section 6 outlines a discussion of the research questions.\n\
    2. Research Methodology \nA systematic literature review (SLR) is a technique\
    \ for organizing and iden-\ntifying research related to a specific topic [19].\
    \ SLR is used in this study to look \ninto the state of Industry 4.0 technologies\
    \ in the agricultural industry. Cases \nwhere the phrase ‘agricultural’ occurred\
    \ in the title, abstract, or keywords of \nan article with any of the ‘Industry\
    \ 4.0 technologies’ described in section 1.2 \nare specifically sought. A review\
    \ procedure is established prior to conducting \nthe SLR to ensure a transparent\
    \ and high-quality research process, which are \nthe features that distinguish\
    \ a systematic literature review [20]. By conducting \nthorough literature searches,\
    \ the review methodology also helps to reduce bias. \nThe creation of the research\
    \ questions, the defining of the search method, and \nthe specification of inclusion\
    \ and exclusion criteria are all part of this process. \nTo conduct SLR, this\
    \ paper uses a recommended reporting item for system-\natic reviews and meta-analysis\
    \ (PRISMA) approach. PRISMA is a minimum \ncollection of items based on evidence\
    \ that is used to guide the construction of \nsystematic literature reviews and\
    \ other meta-analyses [19].\n2.1. Review Protocol \nBefore doing the bibliographic\
    \ analysis, a review methodology is estab-\nlished to identify, analyze, and interpret\
    \ data that are relevant to the research \nfocus. To begin, research questions\
    \ are developed in order to provide insight \ninto the study of published studies\
    \ in the research area of interest from many \nperspectives. These are the questions\
    \ that must be addressed in the research. The \nsearch strategy is then created,\
    \ which aids in the identification of appropriate \n427\nSiberian Journal of Life\
    \ Sciences and Agriculture, Том 14, №6, 2022\nkeywords later in the search equation,\
    \ as well as the identification of relevant \ninformation sources, such as academic\
    \ databases and search engines that allow \naccess to vast amounts of digital\
    \ documentation. Science Direct, Scopus, and \nIEEE Xplore are three online research\
    \ archives that are utilized to find relevant \nstudies. Finally, boundaries are\
    \ created by predefining inclusion and exclusion \ncriteria for further inquiry\
    \ and content assessments of selected articles in order \nto narrow the search\
    \ results of each database.\n2.2. Evaluation Process \nIdentification, screening,\
    \ eligibility, and inclusion are the four stages of the \nliterature search process\
    \ that are evaluated. Consolidation is done for the re-\nmoval of duplicate items\
    \ in the identification step after initial metadata filtering \nby the use of\
    \ search expressions. After this phase, the number of publications is \nreduced.\
    \ The titles and abstracts of the papers are reviewed during the screening \n\
    stage, and the most relevant publications are chosen for integral reading. In\
    \ the \nthird stage, full-text screening of these papers is done to ensure that\
    \ they are \neligible for this paper’s goal.\n2.3. Threats to Validity \n(i) SLR\
    \ replication: Because the current search is confined to only three on-\nline\
    \ repositories, the provided SLR is vulnerable to risks to validity. \nAdditional\
    \ sources could potentially lead to the discovery of more pub-\nlications. Validity\
    \ can be regarded satisfactorily addressed because the SLR \nprocess is clearly\
    \ defined in sub-sections 2.1 and 2.2. However, it is possible \nthat slightly\
    \ different publications will be found if this SLR is replicated. This \nvariation\
    \ could be due to various personal choices made throughout the PRIS-\nMA screening\
    \ and eligibility phases, but it’s highly improbable that the overall \nresults\
    \ would alter.\n(ii)The search string used to discover the relevant papers covers\
    \ the entire \nspectrum of SLR; however it’s possible that some important studies\
    \ were over-\nlooked. More research may be found if more keywords and synonyms\
    \ in the \nsearch are included.\n3. Digitization Trends in Agriculture \nAlthough\
    \ the agriculture business is making significant progress in terms \nof digital\
    \ technology adoption, it is still lagging behind other industries such \nas healthcare,\
    \ manufacturing, mining, automotive, energy, and others [15]. The \ncrop farming\
    \ method considered while designing an application or framework \nis referred\
    \ to as the farm type. The farming method, for example, can be soil-\nbased or\
    \ soilless. Open-air fields (conventional outdoor agricultural farms) and \n428\n\
    Siberian Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\ngreenhouse\
    \ farms are included in the soil-based farming category (indoor). The \nsoilless\
    \ farming category, on the other hand, includes modern farming tech-\nniques such\
    \ as aquaponics, aeroponics, and hydroponics (mostly indoor). In \nthe recent\
    \ decade, autonomous robotics systems (including unmanned guided \nvehicles and\
    \ unmanned aerial vehicles (drones)), the internet of things, and \nmachine learning\
    \ appear to be the most commonly used technology in agricul-\nture. Agriculture’s\
    \ growing sectors include big data, wireless sensor networks, \ncyber-physical\
    \ systems, and digital twins. Furthermore, in contrast to indoor \nfarms, open\
    \ air farms are the most usually examined in research investigations. \nFew publications\
    \ exist for soilless farming systems (aquaponics, aeroponics, \nand hydroponics),\
    \ implying that these modern farming practices are still in \ntheir infancy. Similarly,\
    \ each use case’s services are identified and classified \ninto nine service categories:\
    \ I crop management, CM (estimation/harvesting \nperiod and seed plantation/prediction\
    \ of crop yield/ growth rate/harvesting/ \npollination/ spraying (fertilizer/\
    \ pesticide)); ii) crop quality management, CQM \n(fresh weight, green biomass,\
    \ height, length, width, leaf density, piment content \n(chlorophyll), and phytochemical\
    \ composition); iii) water and environmental \nmanagement, WEM (monitoring and\
    \ control of flow rate, water level, water \nquality (nutrients), temperature,\
    \ humidity, CO2, and weather forecasts, among \nother things); iv) irrigation\
    \ management, IM (water stress detection and sched-\nuling); v) farm management,\
    \ FM (monitoring of farm operations, tracking and \ncounting products, determining\
    \ production efficiency, financial analysis, energy \nconsumption analysis, technology\
    \ integration, and decision-making);\nPDM (pest and disease management) is a term\
    \ used to describe the man-\nagement of pests and diseases (pest identification\
    \ and disease detection) SM \n(Soil Management) vii) (moisture content, soil nutrients,\
    \ fertilizer needs and \napplication) WUVM (weed/unknown vegetation mapping, classification,\
    \ and \npesticide application) viii) weed and unwanted vegetation management FDC\
    \ \n(fruit detection and counting), and ix) \nThe role of various digital technologies\
    \ in smart farming is depicted in \nthese categories. Crop management characteristics\
    \ such as crop yield prediction, \ngrowth rate estimation, and harvesting period\
    \ evaluation are the most 4.0 in the \nprevious decade, whereas soil management,\
    \ fruit identification and counting, \nand crop quality management receive very\
    \ less attention. The European Union’s \nTRL scale, which divides system maturity\
    \ into three generic categories [21], is \nused to assess the technology readiness\
    \ level (TRL) of all use cases. The first \nlevel is conceptual, which corresponds\
    \ to European TRL 1–2 (use case is in \nconcept phase), the second level is prototype,\
    \ which corresponds to Europe-\n429\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\nan TRL 3–6 (use case is functional even without all planned\
    \ features), and the \nthird level is deployed, which corresponds to European\
    \ TRL 7–9. (Use case \nis mature with all the possible functions). Each use case’s\
    \ TRL was produced \nin a few experiments. It has been noticed that smart agricultural\
    \ systems have \nmade little progress from the concept and prototype stages to\
    \ the commercial \nstage. The majority of use cases, for example, are still in\
    \ the prototype stage.\n4. Agriculture 4.0 enabling technologies \n4.1. Internet\
    \ of Things driven agricultural systems \nThe Internet of Things (IoT) is a network\
    \ of interconnected computing de-\nvices, sensors, appliances, and machines that\
    \ are all connected to the internet \nand have their own unique identities and\
    \ capacities for remote sensing and \nmonitoring [21]. Network layer (communication),\
    \ perception layer (hardware \ndevices), , middleware layer (device management\
    \ and interoperability), service \nlayer (cloud computing), application layer\
    \ (data integration and analytics), and \nend-user layer are the six layers of\
    \ the IoT reference architecture (user-inter-\nface). IoT devices on the physical\
    \ layer in the agricultural domain collect data \non environmental and crop characteristics\
    \ such as temperature, humidity, pH \nvalue, water level, leaf colour, fresh leaf\
    \ weight, and so on. The network layer is \nresponsible for transmitting this\
    \ information, and its architecture is determined \nby the field size, farm location,\
    \ and type of farming method. ZigBee, LoRa, and \nSigfox, for example, are widely\
    \ utilized and employed in outdoor fields because \nthey are less expensive, have\
    \ low energy consumption, and have a long trans-\nmission range [22, 23]. Bluetooth,\
    \ despite being a secure technology, is only \nemployed in indoor farms due to\
    \ its limited transmission range [22]. Due to its \nhigh costs and high energy\
    \ consumption, Wi-Fi is not a promising technology \nfor agricultural applications\
    \ [22]. On the other hand, RFID (radio frequency \nidentification) and NFC (near\
    \ field communication) technologies are increas-\ningly being used in agricultural\
    \ systems for product tracking [24]. For periodic \nmonitoring of environmental\
    \ and soil characteristics, GPRS or mobile commu-\nnication technology (2G, 3G,\
    \ and 4G) is utilized. Furthermore, HTTP, WWW, \nand SMTP are the most commonly\
    \ utilized communication protocols in agri-\ncultural contexts. Similarly, middleware\
    \ HYDRA and SMEPP are commonly \nused in agricultural systems to enable interoperability\
    \ and system security for \ntheir context-aware functionalities [25]. \nCloud\
    \ computing approaches are used in the service layer to store data. \nThis information\
    \ is then used on the application layer to create smart apps that \nfarmers, agriculture\
    \ experts, and supply chain professionals can use to improve \n430\nSiberian Journal\
    \ of Life Sciences and Agriculture, Vol. 14, №6, 2022\nfarm monitoring and productivity.\
    \ The use of IoT in agriculture is intended to \nprovide farmers with decision-making\
    \ tools and automation technologies that \nallow them to seamlessly integrate\
    \ knowledge, products, and services in order to \nincrease production, quality,\
    \ and profit. A slew of research have been conduct-\ned and presented on the incubation\
    \ of IoT concepts in the agricultural industry. \nThe development of IoT-based\
    \ agricultural systems has addressed a variety of \ntechnological and architectural\
    \ concerns. However, most of these technologies \nare now in the conceptual stage\
    \ or in prototype form (not commercial). Farm \nmanagement, irrigation control,\
    \ crop development, health monitoring, and dis-\nease detection are all priorities.\
    \ \nSome of these studies also explained how IoT is being used in current ag-\n\
    ricultural systems like vertical farming (soilless farming - aquaponics, hydro-\n\
    ponics, and aeroponics) and greenhouse farming (soil-based). Furthermore, the\
    \ \nmajority of studies have been focused on a single issue.\n4.2. Wireless sensor\
    \ networks in agriculture \nA wireless sensor network (WSN) is a technology that\
    \ is utilized in an Inter-\nnet of Things (IoT) system. It is defined as a collection\
    \ of spatially distributed \nsensors for monitoring environmental physical conditions,\
    \ temporarily storing \nobtained data, and transferring the information to a central\
    \ point [22]. A wire-\nless sensor network (WSN) for smart farming is made up\
    \ of multiple sensor \nnodes connected by a wireless connection module. These\
    \ nodes have a variety \nof skills that allow them to self-organize, self-configure,\
    \ and self-diagnose (for \nexample, processing, trans- mission, and feeling).\
    \ There are various varieties of \nWSNs, which are classified based on the environment\
    \ in which they are used. \nTWSNs (terrestrial wireless sensor networks), WUSNs\
    \ (wireless underground \nsensor networks), UWSNs (underwater wireless sensor\
    \ networks), WMSNs \n(wireless multimedia sensor networks), and MWSNs (mobile\
    \ wireless sensor \nnetworks) are a few examples [26]. TWSN and UWSN are commonly\
    \ utilized \nin agricultural applications. TWSN nodes are sensors that collect\
    \ data from \nthe environment and are located above ground. The second type of\
    \ WSN is \nWUSNs, which are WSNs with sensor nodes embedded in the soil. Lower\
    \ fre-\nquencies easily enter the soil in this environment, whereas higher frequencies\
    \ \nare severely attenuated [27]. Because of the limited communication radius,\
    \ the \nnetwork requires a larger number of nodes to cover a big area. Many research\
    \ \npublications on the use of WSN for various outdoor and indoor farm applica-\n\
    tions, such as irrigation management, water quality testing, and environmental\
    \ \nmonitoring, are accessible in the literature. The goal of these experiments\
    \ was \nto create WSN architectures that were simple, low-cost, energy-efficient,\
    \ and \n431\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6, 2022\n\
    scalable. However, several aspects of WSNs, such as minimum maintenance, \nrobust\
    \ and fault-tolerant architecture, and interoperability, require more study. \n\
    4.3. Cloud computing in agriculture \nCloud computing (CC) is defined as a model\
    \ for enabling convenient, ubiq-\nuitous, on-demand network access to a shared\
    \ pool of configurable computing \nresources (e.g., networks, servers, storage,\
    \ applications, and services) that can \nbe rapidly provisioned and released with\
    \ minimal management effort or ser-\nvice provider interaction, according to the\
    \ National Institute of Standards and \nTechnologies (NIST) [28]. The datacenter\
    \ (hardware), infrastructure, platform, \nand application layers make up the primary\
    \ architecture of CC [29]. Each of \nthese layers corresponds to one of three\
    \ cloud service models: SaaS (software \nas a service), PaaS (platform as a service),\
    \ and IaaS (infrastructure as a service) \n(IaaS). In the agriculture sector,\
    \ cloud computing has gotten a lot of attention in \nthe last decade because it\
    \ provides: 1) low-cost storage for data collected from \nvarious domains via\
    \ WSNs and other preconfigured IoT devices, 2) large-scale \ncomputer systems\
    \ to make intelligent decisions by converting raw data into \nusable knowledge,\
    \ and 3) a secure platform for developing agricultural based \nIoT applications\
    \ [30]. \nCC is used to develop various agricultural applications in conjunction\
    \ with \nIoT and WSN. CC technology is also utilized to develop operational farm\
    \ man-\nagement systems (FMSs) that help farmers and farm managers monitor farm\
    \ \nactivities more efficiently. The traceability of agri-product quality is another\
    \ \narea of interest that is being investigated in global research [31]. However,\
    \ only \npreliminary research has been done to see if traceability complies with\
    \ food \nsafety and quality criteria. The usage of cloud-based agricultural systems\
    \ has \nthe potential to address issues such as rising food demand, pollution\
    \ from pes-\nticides and fertilizers, and the safety of agricultural products.\
    \ These FMSs, on \nthe other hand, lack the flexibility to offer run-time customization\
    \ in response \nto specific farmer needs. Furthermore, because most farm data\
    \ is fragmented \nand distributed, recording farm operations accurately in existing\
    \ FMSs systems \nis problematic [32].\n4.4. Edge/fog computing in agriculture\
    \ \nThe rapid expansion of IoT has resulted in an explosion of sensors and smart\
    \ \ndevices, creating massive amounts of data. The processing and analysis of\
    \ such a \nlarge volume of data in real time is difficult since it puts a strain\
    \ on the cloud serv-\ner and slows response times. When dealing with such a massive\
    \ data set, a cloud \nserver alone will not be able to offer real-time responses.\
    \ Furthermore, because \nIoT applications require a constant exchange of information\
    \ between devices and \n432\nSiberian Journal of Life Sciences and Agriculture,\
    \ Vol. 14, №6, 2022\nthe cloud, they are susceptible to network latency, making\
    \ CC unsuitable for these \napplications [23]. The introduction of the edge computing\
    \ idea has the potential \nto overcome the CC issues. This novel computing architecture\
    \ places computa-\ntional and storage resources (such as cloudlets or fog nodes)\
    \ closer to data sources \nlike mobile devices and sensors at the network’s edge.\
    \ This allows for real-time \nanalytics while maintaining data security on the\
    \ device [23]. Although edge com-\nputing has exciting potential for smart agriculture,\
    \ its applications in agricultural \nsystems are still in their infancy. As a\
    \ result, there are limited research studies in \nthis field. The majority of\
    \ the edge computing-based agricultural systems covered \nin these papers are\
    \ prototypes that solve a small number of challenges across a \nvariety of agricultural\
    \ disciplines. Interoperability and scalability issues haven’t \ngotten enough\
    \ attention so yet. Agricultural robots combine emerging technolo-\ngies such\
    \ as computer vision; wireless sensor networks (WSNs), satellite navi-\ngation\
    \ systems (GPS), artificial intelligence (AI), cloud computing (CC), and the \n\
    Internet of Things (IoT) to help farmers improve productivity and quality of ag-\n\
    ricultural products. AARS in smart farming can be mobile or fixed [33]. Mobile\
    \ \nAARS can move around the working field. Unmanned ground vehicles (UGVs) \n\
    and unidentified aerial vehicles (UAVs) are the two types of mobile AARSs, as\
    \ \ndiscussed in the following sections. \n4.5.1. Unmanned ground vehicles in\
    \ agriculture\nUnmanned ground vehicles (UGVs) are agricultural robots that work\
    \ with-\nout the use of a human operator on the ground. A platform for locomotive\
    \ ap-\nparatus and manipulator, navigation sensors, a supervisory control system,\
    \ an \ninterface for the control system, communication links for information exchange\
    \ \nbetween devices, and system architecture for integration between hardware\
    \ and \nsoftware agents are the main components of UGVs [34]. The control architec-\n\
    ture of a UGV can be remote-operated (controlled via an interface by a human \n\
    operator) or totally autonomous (operated without the use of a human control-\n\
    ler using artificial intelligence technology) [34]. Locomotive systems, likewise,\
    \ \ncan be based on wheels, tracks, or legs [34]. Legged robots are uncommon in\
    \ \nagriculture, despite their great terrain flexibility, inherent Omni directionality,\
    \ \nand soil protection. These robots, however, offer a disruptive locomotion\
    \ mech-\nanism for smart farms when paired with wheels (wheel-legged robots).\
    \ UGVs \nshould meet specific requirements, such as small size, maneuverability,\
    \ resil-\nience, efficiency, human-friendly interface, and safety, in addition\
    \ to the nec-\nessary features for infield operations, in order to improve crop\
    \ yields and farm \nproductivity. A 4WD locomotive system is used in the majority\
    \ of agricultural \nrobotic systems due to its ease of manufacture and control.\
    \ \n433\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6, 2022\n\
    The disadvantage of 4WD is that terrains with stone elements and/or voids \nhave\
    \ a significant impact on the wheels [34]. As a result, other mechanisms, \nsuch\
    \ as legged or wheel-legged locomotive systems, should be investigated. \nAlthough\
    \ some robots include computer vision systems, most of these robots \nare designed\
    \ with a low-cost computer vision system, such as traditional RGB \ncameras, due\
    \ to the difficulties of establishing an accurate and dependable sys-\ntem that\
    \ can replace manual labour. Furthermore, the majority of the systems \nmentioned\
    \ above are still in the research phase, with no large-scale commer-\ncial application.\n\
    4.5.2. Unmanned aerial vehicles in agriculture \nUnmanned aerial vehicles (UAVs),\
    \ sometimes known as aerial robots, are \nplanes that do not have a human pilot\
    \ on board. There are many different types \nof UAVs [35] depending on the technology\
    \ used to fly (wing structure) and the \nlevel of autonomy. Fixed-wing (planes),\
    \ single-rotor (helicopter), hybrid system \n(vertical takeoff and landing), and\
    \ multi-rotor UAVs are examples of wing types \n(drone). Drones (multi-rotor technology),\
    \ which are raised and driven by four \n(quad-rotor) or six (hex-rotor) rotors,\
    \ have grown in popularity in the agricul-\nture sector because to their mechanical\
    \ simplicity in comparison to helicopters, \nwhich rely on a much more complex\
    \ plate control mechanism [36]. Similarly, \nUAVs can be tele-operated or tele-commanded,\
    \ depending on their autonomy \nlevel, with the pilot providing references to\
    \ each actuator of the aircraft to con-\ntrol it in the same way that an onboard\
    \ pilot would, or tele-commanded with the \naircraft relying on an automatic controller\
    \ on board to maintain a stable flight \n[35]. Agricultural UAVs with the right\
    \ sensors (vision, infrared, multispectral, \nand hyper spectral cameras, for\
    \ example) can collect data (vegetation, leaf area, \nand reflectance indexes)\
    \ from their fields to monitor dynamic changes in crops \nthat aren’t visible\
    \ from the ground [37]. Farmers can deduce information about \ncrop illnesses,\
    \ nutrient deficits, water level, and other agricultural growth char-\nacteristics\
    \ using this data. Farmers might plan possible cures using this knowl-\nedge (irrigation,\
    \ fertilization, weed control, etc.). \nThe majority of the systems mentioned\
    \ above are still in the research stage, \nwith no large-scale commercial use.\
    \ Other issues with these UAVs include bat-\ntery life and flight time [35]. Lithium-ion\
    \ batteries are currently in use because \ntheir capacity exceeds that of conventional\
    \ batteries. \nHowever, increasing the battery capacity increases the weight of\
    \ the drone, \nand research is currently underway to overcome this issue. \nFurthermore,\
    \ existing UAVs have complicated user interfaces that can only \nbe used by experts\
    \ to accomplish agricultural chores. People who are elderly \n434\nSiberian Journal\
    \ of Life Sciences and Agriculture, Vol. 14, №6, 2022\nor unfamiliar with UAV\
    \ technology will be able to control it more readily if \nthe user interface is\
    \ improved and made more human-centered with multimod-\nal feedback. \n4.6. Big\
    \ data and analytics in agriculture \nRapid advancements in IoT and CC technologies\
    \ have massively expanded \nthe amount of data available. Textual content (structured,\
    \ semi-structured, and un-\nstructured) and multimedia content (e.g., videos,\
    \ photos, and audio) are included \nin this data, also known as Big Data (BD)\
    \ [38]. Big data analytics is the practice \nof analyzing large amounts of data\
    \ to find hidden patterns, unknown relationships, \nmarket trends, client preferences,\
    \ and other important information (BDA). Big \ndata is usually classified into\
    \ five dimensions, each of which is represented by a V. \nThe concept of BD-driven\
    \ smart agriculture is very new, but its trend is \ngood because it has the potential\
    \ to make a dramatic change in the food supply \nchain and boost food security\
    \ through higher productivity. Agricultural big data \nis typically generated\
    \ from a variety of sources in agriculture, including ground \nsensors, aerial\
    \ vehicles, and ground vehicles equipped with special cameras and \nsensors; governmental\
    \ bodies in the form of reports and regulations; private \norganizations through\
    \ online web services; farmers in the form of knowledge \ngained through surveys;\
    \ and social media [39]. Depending on the agricultural \ndomain, the data can\
    \ be environmental (weather, climate, moisture level, etc.), \nbiological (plant\
    \ disease), or geospatial, and it comes in a variety of volumes, \nspeeds, and\
    \ formats [40]. The information is acquired and stored in a computer \ndatabase,\
    \ where it is analyzed using computer algorithms for seed characteris-\ntics,\
    \ weather patterns, soil attributes (such as pH or nutrient content), marketing\
    \ \nand trade management, consumer behaviour, and inventory management. In \n\
    agriculture, a range of strategies and tools are used to examine large data. The\
    \ \nmost often employed techniques include machine learning, cloud-based plat-\n\
    forms, and modelling and simulation. Machine learning technologies are used \n\
    to solve problems like prediction, clustering, and classification, while cloud\
    \ \nplatforms are utilized for large-scale data storage, preprocessing, and visual-\n\
    ization. There are still numerous potential areas where BDA can be used to \n\
    address various agricultural concerns that are not well covered in existing lit-\n\
    erature. For example, data-intensive greenhouses and indoor vertical farming \n\
    systems, quality control and health monitoring of crops in outdoor and indoor\
    \ \nfarms, genetic engineering, decision support platforms to help farmers design\
    \ \nindoor vertical farms, and scientific models for policymakers to help them\
    \ make \ndecisions about the physical ecosystem’s sustainability. Finally, the\
    \ majority of \nsystems are still in the prototype stage.\n435\nSiberian Journal\
    \ of Life Sciences and Agriculture, Том 14, №6, 2022\n4.7. Artificial intelligence\
    \ in agriculture \nArtificial intelligence (AI) is the study of theories and computer\
    \ systems that \ncan perform activities that need human intelligence, such as\
    \ sensory percep-\ntion and decision-making [41]. AI, particularly in the areas\
    \ of machine learning \n(ML) and deep learning (DL), is seen as one of the primary\
    \ forces driving the \ndigitization of agriculture when combined with CC, IoT,\
    \ and big data. These \ntechnologies have the potential to increase crop production,\
    \ harvesting, pro-\ncessing, and marketing in real time [42]. ML and DL algorithms\
    \ are being used \nto determine various parameters such as weed detection, yield\
    \ prediction, and \ndisease identification in a number of intelligent agricultural\
    \ systems. The fol-\nlowing two sub-sections go through these systems.\n4.7.1.\
    \ Machine learning in agriculture \nsupervised learning (linear regression, regression\
    \ trees, non-linear regres-\nsion, Bayesian linear regression, polynomial regression,\
    \ and support vector \nregression), and unsupervised learning (hierarchal clustering,\
    \ k-means cluster-\ning, neural networks (NN) anomaly detection, principal component\
    \ analysis, \nindependent component analysis, a-priori algorithm, and singular\
    \ value decom-\nposition (SVD)). Weed detection, Crop yield prediction, disease\
    \ and weather \nprediction (rainfall), soil properties estimation ( moisture content,\
    \ type, pH, \ntemperature, etc.), water management, fertilizer amount determination,\
    \ and \nlivestock production and management all use machine learning techniques\
    \ and \nalgorithms [2, 43]. According to the study of these publications, “crop\
    \ yield \nprediction” is an extensively researched area, with the most widely\
    \ utilized ML \napproaches to allow smart farming being linear regression [4],\
    \ neural network \n(NN), random forest (RF), and support vector machine (SVM)\
    \ [2]. \nThe presented use cases are still in the research phase, and no commercial\
    \ \nuse has been recorded as of yet. Furthermore, AI and machine learning ap-\n\
    proaches are found to be underutilized in greenhouse and indoor vertical farm-\n\
    ing systems, particularly hydroponics, aquaponics, and aeroponics. There are \n\
    only a handful publications that use machine learning techniques. To enable \n\
    digital farming, new methodologies such as federated learning and privacy \npreserving\
    \ methods are being developed in light of the digital transformation’s \ncyber-security\
    \ and data privacy problems [44]. These methods create machine \nlearning models\
    \ from local parameters rather than sharing private data samples, \nreducing security\
    \ concerns.\n4.7.2. Deep learning in agriculture \nDeep learning (DL) is an extension\
    \ of classical machine learning (ML) \nbecause extra “depth” (complexity) is added\
    \ to the model, it can accomplish \n436\nSiberian Journal of Life Sciences and\
    \ Agriculture, Vol. 14, №6, 2022\ndifficult tasks (predictions and classification)\
    \ extraordinarily well and quick-\nly. DL’s main benefit is feature learning,\
    \ which includes extracting features \n(high-level information) from big datasets\
    \ automatically [45]. Long short term \nmemory (LSTM) networks, convolutional\
    \ neural networks (CNNs), recurrent \nneural (RNN) networks, generative adversarial\
    \ networks (GANs), radial basis \nfunction networks (RBFNs), multilayer perceptron\
    \ (MLPs), feed-forward ar-\ntificial neural network (ANN), self-organizing maps\
    \ (SOMs), deep belief net-\nworks (DBNs), restricted Boltzmann machines (RBMs),\
    \ and autoencoders are \nexamples of deep learning algorithms Various sites [46]\
    \ provide a full overview \nof these methods, popular architectures, and training\
    \ systems. DL algorithms \nare commonly used in agriculture to solve problems\
    \ related to computer vision \napplications that aim to predict key parameters\
    \ such as crop yields, soil mois-\nture content, weather conditions, and crop\
    \ growth conditions; detect diseases, \npests, and weeds; and identify leaf or\
    \ plant species [47]. Computer vision is an \ninterdisciplinary field that has\
    \ exploded in popularity in recent years thanks to \nthe rise of CNNs. It provides\
    \ methods and techniques for accurately process-\ning digital images and allowing\
    \ computers to analyze and comprehend the vi-\nsual world [48]. CNNs, generally\
    \ is known as Convet and its derivatives, are \nthe most widely used deep learning\
    \ algorithms in agricultural applications. \nRegion-based CNNs (RCNN), Fast-RCNN,\
    \ Faster-RCNN, YOLO, and Mask-\nRCNN are some of the CNN variants, with the first\
    \ four being the most typi-\ncally used to address object detection issues. On\
    \ the other side, Mask-RCNN \nis utilized to overcome instance segmentation issues.\
    \ The reader can find a \nthorough explanation of these algorithms and their applications\
    \ in the exist-\ning bibliography [47]. Other DL approaches have been employed\
    \ in a few re-\nsearch. When it comes to datasets, the majority of deep learning\
    \ models are \ntrained on photographs, with only a few trained on sensor data\
    \ collected in the \nfield. This demonstrates that DL can be used on a wide range\
    \ of datasets. It’s \nalso worth noting that the majority of the research is focused\
    \ on outdoor farms, \nwith next-generation farms (environment-controlled) receiving\
    \ less attention. \nThough digital farming has the potential to be enabled by\
    \ DL, most systems \nare still in the prototype stage. Furthermore, the additional\
    \ obstacles created \nby cyber-security and privacy concerns necessitate the improvement\
    \ of current \ndeep learning and computer vision technologies.\n4.8. Agricultural\
    \ decision support systems \nA decision support system (DSS) is a smart system\
    \ that assists stakehold-\ners and potential users in making decisions in response\
    \ to specific needs and \nchallenges by offering operational responses based on\
    \ meaningful informa-\n437\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\ntion retrieved from raw data, documents, personal knowledge,\
    \ and/or models \n[49]. Data-driven, model-driven, communication-driven, document-driven,\
    \ and \nknowledge-driven DSS are all possibilities. The following source [50]\
    \ lists the \nkey features of these DSSs. The volume of farming data has exploded\
    \ as a re-\nsult of the advent of agriculture 4.0. Platforms like agricultural\
    \ decision support \nsystems (ADSS) are necessary to convert this heterogeneous\
    \ data into practical \nknowledge in order to make evidence-based and precise\
    \ judgments about farm \nmanagement and facility layout [51]. ADSSs have gotten\
    \ a lot of interest in the \nagriculture industry over the last few years. A variety\
    \ of agricultural concerns, \nsuch as farm management, water management, and environmental\
    \ management, \nhave been addressed by a number of ADSSs. Most ADSSs have been\
    \ found \nto ignore expert knowledge, which is extremely useful since it enables\
    \ for the \nconstruction of systems that are tailored to the demands of the users.\
    \ Complex \nGUIs, insufficient re-planning components, a lack of prediction and\
    \ forecasting \nabilities, and a lack of ability to adjust to unpredictable and\
    \ dynamic elements \nare some of the other identified faults with some of these\
    \ ADDSs. It’s also worth \nnoting that all of the ADSSs are for outside agriculture\
    \ systems and are still in \ndevelopment. In comparison, the use of ADSS in indoor\
    \ soilless agriculture is \ncurrently underutilized.\n4.9. Agricultural cyber-physical\
    \ systems \nA cyber-physical system (CPS) is an automated distributed system that\
    \ inte-\ngrates physical processes with communication networks and computing infra-\n\
    structures [52], and it is one of the key technologies of Industry 4.0. There\
    \ are \nthree standard CPS reference architecture models: 5C, RAMI 4.0, and IIRA,\
    \ \nwhich may be found in full at the following source [53]. Among these, the\
    \ 5C \nis a well-known and widely used reference model. CPS takes advantage of\
    \ a \nnumber of existing technologies, including agent systems, IoT, CC, augmented\
    \ \nreality, big data, and machine learning (ML) [54]. Scalability, flexibility,\
    \ au-\ntonomy, reliability, resilience, safety, and security are all improved\
    \ as a result \nof its adoption.\nOne of the most difficult domains that can benefit\
    \ from CPS technology is \nagriculture. Agricultural cyber-physical systems (ACPSs)\
    \ combine advanced \nelectronic technology with agricultural infrastructure to\
    \ create integrated farm \nmanagement systems that interact with the physical\
    \ environment to keep crops \ngrowing at their best [55]. ACPSs collect high-accuracy\
    \ data regarding climate, \nsoil, and crops and utilize it to manage watering,\
    \ humidity, and plant health, \namong other things. For the management of various\
    \ services, a range of ACPSs \nhave been created; however, most of these systems\
    \ are still in the prototype and \n438\nSiberian Journal of Life Sciences and\
    \ Agriculture, Vol. 14, №6, 2022\nconceptual stages. Furthermore, the majority\
    \ of studies are for outdoor farms, \nwith only a few publications published on\
    \ soil-based greenhouse systems. There \nhas been no research on indoor soilless\
    \ agricultural methods. Since of its pro-\nspective applications in a variety\
    \ of fields, ACPSs have sparked a lot of academ-\nic interest; nevertheless, deploying\
    \ CPS models in real-world applications is \nstill a difficulty because it requires\
    \ the right hardware and software [56]. When \ndesigning ACPSs, special emphasis\
    \ should be paid to autonomy, robustness, and \nresilience in order to deal with\
    \ the unpredictable nature of the environment and \nthe unknown characteristics\
    \ of agricultural facilities. ACPSs are influenced by \na variety of factors,\
    \ including humans, sensors, robots, crops, and data.. ACPSs \nmust be properly\
    \ and extensively developed to provide a seamless operation \nwhile avoiding conflicts,\
    \ errors, and disturbances.\n4.10. Digital twins in agriculture \nA digital twin\
    \ (DT) is a dynamic virtual replica of a real-life (physical) \nobject that mimics\
    \ its behaviours and states across multiple stages of the ob-\nject’s lifecycle\
    \ by combining real-world data, simulation, and machine learning \nmodels with\
    \ data analytics to enable understanding, learning, and reasoning \n[57]. The\
    \ physical and virtual entities, the physical and virtual environments, \nthe\
    \ metrology, and realization modules that perform the physical to virtual and\
    \ \nvirtual to physical connection or twinning, the twinning and twinning rate,\
    \ and \nthe physical and virtual processes are all required for a complete description\
    \ of \nthe DT concept for any physical system [58]. Because of advancements in\
    \ tech-\nnology such as the Internet of Things, big data, wireless sensor networks,\
    \ and \ncloud computing, the DT concept has gained traction. This is due to the\
    \ fact that \nthese technologies enable real-time monitoring of physical twins\
    \ at high spatial \nresolutions using both small devices and distant sensing,\
    \ which generate ev-\ner-increasing data streams [21]. In comparison to other\
    \ fields, the notion of DT \nin agricultural applications is relatively new, with\
    \ the first references appearing \nin 2017; as a result, its added value has not\
    \ yet been thoroughly studied [21]. \nBecause of its reliance on natural circumstances\
    \ (temperature, soil, humidity), \nas well as the presence of living and non-living\
    \ physical twins (plants and an-\nimals), framing is a very complex and dynamic\
    \ realm (indoor farm buildings, \ngrow beds, outdoor agricultural fields, agricultural\
    \ machinery). \nNon-living physical twins interact directly or indirectly with\
    \ plants and \nanimals (living physical twins), posing more obstacles for DT in\
    \ agriculture, \nwhereas non-living physical twins are the focus of DT in other\
    \ domains such \nas manufacturing. The majority of research has been on open-air\
    \ agricultur-\nal systems. There is just one study that proposes DT for a soil-based\
    \ vertical \n439\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6,\
    \ 2022\nfarming system and one study that implements DT for a soilless vertical\
    \ farm-\ning system (aquaponics). This could be due to the difficulty of designing\
    \ and \nmanaging modern farming systems. Furthermore, the majority of DTs are\
    \ still \nin the research phase, with no commercial deployment planned. Cost savings,\
    \ \ndisaster prevention, clearer decision making, and efficient management oper-\n\
    ations are all reported benefits of DT applications in agriculture, which can\
    \ be \napplied to a variety of agricultural subfields such as plant and animal\
    \ breeding, \naquaponics, vertical farming, cropping systems, and livestock farming.\
    \ While \nDT technology offers a lot of promise, achieving synchronization between\
    \ the \nreal and digital worlds is difficult. Due to the quirks of living physical\
    \ twins, \nthe intricacy of this procedure is magnified in agricultural settings.\
    \ As a result, \nagricultural DT should begin with micro-farms, which can then\
    \ be gradually up-\ngraded to a more intelligent and autonomous form by adding\
    \ more components.\n4.11. Roadblocks in digitization of agriculture industry \n\
    This section outlines a series of interconnected hurdles to a wider adoption of\
    \ \ndigital technologies in agriculture. Following a review of the literature,\
    \ 21 barri-\ners were found, which were divided into technical and socioeconomic\
    \ categories.\n4.12. Technical roadblocks \n•Interoperability: Data is regarded\
    \ as a critical component in the success of \nsmart systems. Agricultural data\
    \ is typically gathered from a variety of sources, \nincluding thousands of individual\
    \ farmlands, animal industries, and business ap-\nplications. Data can be in a\
    \ variety of formats, making data integration difficult. \nAs a result, after\
    \ systematic data collection, storage, processing, and knowledge \nmining, data\
    \ interoperability is critical to increasing the value of this widely \ndistributed\
    \ data [59]. Interconnected and interoperable devices are also required \nfor\
    \ successful communication between heterogeneous devices. The system’s in-\nteroperability\
    \ can be improved through cross-technology communication [60].\n•Standardization:\
    \ Standardization of devices is required to fully use digital \ntechnologies for\
    \ smart farming applications. Differences in output can occur \nas a result of\
    \ misinterpretation and changes over time. Device, application, and \nsystem interoperability\
    \ concerns can also be overcome by standardization [25].\n•Data quality: Data\
    \ quality, as well as data security, storage, and openness, \nare essential for\
    \ producing meaningful outcomes. Another impediment to the \nadoption of smart\
    \ farming technologies is the lack of decentralized data man-\nagement systems\
    \ [9]. Multiple actors’ willingness to exchange farm data is be-\ning harmed as\
    \ a result of this problem.\n•Hardware implementation: It is incredibly difficult\
    \ to establish a smart agri-\ncultural setup in large-scale open areas. This is\
    \ due to the fact that all hardware, \n440\nSiberian Journal of Life Sciences\
    \ and Agriculture, Vol. 14, №6, 2022\nincluding IoT devices, wireless sensor networks,\
    \ sensor nodes, machinery, and \nequipment, is directly exposed to harsh environmental\
    \ conditions such as heavy \nrainfall, extreme temperatures, extreme humidity,\
    \ high wind speeds, and a vari-\nety of other dangers that can destroy electronic\
    \ circuits or disrupt their normal \nfunctionality [61]. A possible answer is\
    \ to construct a sturdy and lasting casing \nfor all of the expensive devices\
    \ that can withstand real-world conditions [62].\n•Adequate power sources: Typically,\
    \ wireless gadgets used on farms func-\ntion for an extended period of time and\
    \ have a limited battery life. \nBecause replacing a battery in the event of a\
    \ failure is difficult, especially in \nopen-air farms where devices are strategically\
    \ located with limited access [61], a \nproper energy-saving system is required.\
    \ Low-power sensors and proper commu-\nnication management are two viable strategies\
    \ for reducing energy consumption \n[24, 63]. Other intriguing technologies to\
    \ eliminate the need for battery renewal by \nrecharging batteries using electromagnetic\
    \ waves include wireless power transfer \nand self-supporting wireless systems.\
    \ In most agricultural applications, however, \nlong-distance wireless charging\
    \ is required [9]. Another potential alternative is to \ncapture ambient energy\
    \ from rivers, fluid flow, vehicle movement, and the ground \nsurface using sensor\
    \ nodes; however the converted electrical energy is current-\nly restricted, necessitating\
    \ the need to enhance power conversion efficiency [64].\n•Reliability: The dependability\
    \ of devices, as well as the software applica-\ntions that run on them, is critical.\
    \ This is due to the fact that IoT devices must \ncollect and transmit data from\
    \ which judgments are made utilizing a variety of \nsoftware packages. Unreliable\
    \ sensing, processing, and transmission can result \nin erroneous monitoring data\
    \ reports, significant delays, and even data loss, all \nof which can have a negative\
    \ impact on agricultural system performance [25].\n •Adaptability: Agriculture\
    \ is a complicated, dynamic, and continuously \nchanging environment. As a result,\
    \ when building a system, it is critical for de-\nvices and applications to react\
    \ proactively with other entities in the face of un-\nknown and dynamic elements\
    \ in order to provide the required performance [65].\n•Robust wireless architectures:\
    \ Low-cost, wide-area coverage, enough net-\nworking flexibility, and high scalability\
    \ are all advantages of wireless networks \nand communication technologies. However,\
    \ in a dynamic agriculture environ-\nment, such as temperature swings, the movement\
    \ of live objects, and the ex-\nistence of impediments, dependable wireless connection\
    \ is a major difficulty. \nFor example, multipath propagation effects cause signal\
    \ strength oscillations, \nresulting in unstable connectivity and insufficient\
    \ data transmission [66]. These \nelements have an impact on the agricultural\
    \ system’s performance. As a result, \nrobust and fault-tolerant wireless architectures\
    \ with proper sensor node place-\n441\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\nment, antenna height, network topology, and communication\
    \ protocols are re-\nquired, as well as low-maintenance wireless systems [11].\n\
    •Interference: Because of the extensive deployment of IoT devices and wire-\n\
    less sensor networks, another difficulty is wireless interference and quality\
    \ of \nservice degradation. Effective channel scheduling between heterogeneous\
    \ sens-\ning devices, cognitive radio-assisted WSNs, and upcoming networking prim-\n\
    itives like concurrent transmission [67] can all help to solve these problems.\
    \ \nBecause agriculture equipment are dispersed in indoor greenhouses, outdoor\
    \ \nfarmlands, underground locations, and even aquatic areas, cross-media com-\n\
    munication between underground, underwater, and air is also necessary for full\
    \ \nintegration of smart technologies [68].\n•Security and privacy: Because smart\
    \ agricultural systems are dispersed, \nthey are vulnerable to cyber-attacks such\
    \ as eavesdropping, data integrity, de-\nnial-of-service assaults, and other sorts\
    \ of disruptions that could jeopardize the \nsystem’s privacy, integrity, and\
    \ availability [69]. With various privacy-preserv-\ning techniques and federated\
    \ learning approaches, cyber-security is a funda-\nmental concern that needs to\
    \ be addressed in the context of smart farming [44].\n•Compatibility: in order\
    \ to meet the fragmentation and scalability standards, \nthe models or software\
    \ applications developed must be adaptable and able to \nrun on any equipment\
    \ in the agricultural system [13]. \n•Resource optimization: To boost farm profitability,\
    \ farmers need a resource op-\ntimization procedure to determine the ideal number\
    \ of IoT devices and gateways, \ncloud storage size, and volume of transmitted\
    \ data. Resource optimization is diffi-\ncult since farms vary in size and require\
    \ different types of sensors to assess different \nvariables [70]. Second, most\
    \ farm management systems do not support run-time \nchanges to match the demands\
    \ of individual farmers. To estimate adequate resource \nallocation, complicated\
    \ mathematical models and algorithms are necessary [32].\n•Scalability: Due to\
    \ technological improvements, the number of gadgets, \ngear, and sensors put on\
    \ farms is continually expanding. \nGateways, network applications, and back-end\
    \ databases should all be de-\npendable and scalable in order to serve these entities\
    \ [71].\n•Human-centered user interfaces: Existing agricultural software and gadgets\
    \ \nhave complicated user interfaces, which are limiting smart farming methods.\
    \ \nThe majority of graphical user interfaces are constructed in such a way that\
    \ \nonly specialists can use them to accomplish agricultural activities. By making\
    \ \nthe user interface more human-centered and providing multimodal feedback,\
    \ a \nbigger group of individuals will be able to use it to complete various agricul-\n\
    tural tasks [35].\n442\nSiberian Journal of Life Sciences and Agriculture, Vol.\
    \ 14, №6, 2022\n4.13. Socio-economic roadblocks \n•Gap between farmers and researchers:\
    \ Farmers’ engagement is critical to \nthe success of the agriculture industry’s\
    \ digitization. Agricultural specialists are \nfrequently unaware of the concerns\
    \ that farmers encounter during the agri-food \nproduction process, which smart\
    \ technologies could solve [16]. Furthermore, it \nis critical to completely comprehend\
    \ the nature of problems in order to create \nan appropriate smart solution. \n\
    As a result, bridging the gap between farmers, agricultural professionals, \n\
    and AI researchers is critical.\n•Expenses connected with smart systems: the costs\
    \ associated with adopt-\ning smart technology and systems are a major impediment\
    \ to the agriculture \nsector’s digitization. These expenses typically include\
    \ deployment, operation, \nand maintenance. Smart system deployment costs are\
    \ typically significant since \nthey include: I hardware installation, such as\
    \ autonomous robots and drones, \nWSNs, gateways, and base station infrastructure,\
    \ and ii) paying trained labour \nto do particular agricultural tasks [72]. Similarly,\
    \ subscriptions to centralized \nnetworks and software packages are necessary\
    \ to support data processing, con-\ntrol of IoT devices and equipment, and knowledge\
    \ exchange, which eventually \nraises operating expenses [73]. Even if service\
    \ providers occasionally provide \nfree subscription packages with limited capabilities,\
    \ storage capacity is limited. \nPeriodic maintenance is essential to ensure the\
    \ proper operation of the smart \nsystem, which adds to the total costs.\nEnvironmental,\
    \ ethical, and societal costs may also be connected with the \nadoption of smart\
    \ devices. Initiatives focusing on cooperative farming are need-\ned to overcome\
    \ cost-related roadblocks by providing: I support services for \nbetter cost management\
    \ and needed investments, and ii) hardware solutions to \ntransform conventional\
    \ equipment into smart farm-ready machinery to reduce \nhigh initial costs [73].\n\
    •Digital division: a lack of awareness of digital technology and their appli-\n\
    cations is another problem limiting the digitalization of the agriculture sector.\
    \ \nThe majority of farmers have no understanding what digital technologies are,\
    \ \nhow to install and utilize them, or which technology is appropriate for their\
    \ farm \nand matches their needs [14]. As a result, farmers must be educated on\
    \ current \nfarming technologies and processes. \nFurthermore, various tactics\
    \ are required to develop tools that use natural \nlanguage and are easily understood\
    \ by farmers with low levels of education [74]. \n•Return on investment: In agriculture,\
    \ like in other industries, the profit \nmargin is critical. When it comes to\
    \ implementing modern technologies, farm-\n443\nSiberian Journal of Life Sciences\
    \ and Agriculture, Том 14, №6, 2022\ners are concerned about the time it will\
    \ take to recoup their investment and the \ndifficulty in assessing the benefits\
    \ [12].\n•Building faith in the effectiveness of smart technology in agriculture\
    \ is \ndifficult, unlike in other disciplines, because many decisions influence\
    \ systems \nthat involve both living and non-living elements, and the results\
    \ can be difficult \nto reverse [16]. In addition, the lack of verification of\
    \ the influence of digital \ntools on farm productivity exacerbates the current\
    \ difficulties.\n•Legal frameworks: different regions and nations have distinct\
    \ legal frame-\nworks that influence the deployment of digital technologies in\
    \ agriculture, par-\nticularly in monitoring and agri-food supply [31]. Similarly,\
    \ laws governing \nresource allocation (spectrum for wireless devices), data privacy,\
    \ and security \ndiffer from country to country [31].\n•Connectivity infrastructure:\
    \ In most developing nations, connectivity in-\nfrastructure is poor, limiting\
    \ access to advanced digital technologies that could \nhelp turn data from disparate\
    \ sources into useful and actionable insights [10].\n4.14. Discussion \nThe goal\
    \ of this study was to describe the new digital technologies that are \nbeing\
    \ used in the agricultural industry in order to predict the future trajectories\
    \ \nof agriculture 4.0. Big data and analytics, wireless sensor networks, cyber-phys-\n\
    ical systems, and digital twins are among the technologies that have yet to be\
    \ \nfully explored in agriculture. This disparity could be due to the fact that\
    \ install-\ning advanced technologies with more complex processes can be costly,\
    \ at least \nin the early stages of their acceptance. The agricultural industry’s\
    \ development \nof these technologies is expected to speed up in the next years.\
    \ The findings of \nSLR also reveal that IoT is widely used in farms. This is\
    \ owing to the IoT’s di-\nverse capabilities, which include monitoring, tracking,\
    \ and tracing, agricultural \nmachinery, and precision agriculture [21]. One of\
    \ the key research aims within \nthe farm 4.0 techniques can be regarded to be\
    \ IoT. Nonetheless, when building \nan intelligent agricultural system, only a\
    \ few researches have examined data \nsecurity and dependability, scalability,\
    \ and interoperability. The outcomes of \nthe study also revealed that the majority\
    \ of use cases are still in the prototype \nstage. The reason for this could be\
    \ that most agricultural activities involve live \nsubjects, such as animals and\
    \ plants, or perishable products, and establish-\ning systems for living subjects\
    \ is more difficult than developing systems for \nnon-living human-made systems.\
    \ Another explanation could be that, due to the \ntrans-disciplinary character\
    \ of agriculture, it is a late adopter of technology. As a \nresult, in order\
    \ to construct intelligent systems, the agricultural community must \nbecome conversant\
    \ with all digital technologies. Finally, differences in plant/\n444\nSiberian\
    \ Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\ncrop species and\
    \ growth conditions complicate agricultural system digitaliza-\ntion [55]. In\
    \ contrast to indoor farms, the majority of the technologies created \nby SLR\
    \ are for open-air soil-based farms (soilless and soil-based). This is owing \n\
    to the complicated design and maintenance of indoor farms, particularly soilless\
    \ \nfarms, where the parameters and elements to be maintained are numerous (pH,\
    \ \nair temperature, humidity, etc.) [5]. However, by incorporating digital technol-\n\
    ogy and data-driven computer applications into indoor farms, a more reliable \n\
    control of the process can be attained. Furthermore, SLR reveals that insufficient\
    \ \nresearch is undertaken in three of the nine service areas described in section\
    \ 3 \n(soil management, fruit detection and counting, and crop quality management).\
    \ \nThis supports the notion that significant research and development is required\
    \ \nin some areas to ensure the successful digitization of the agriculture business\
    \ \nin both developed and developing countries. The agriculture ecosystem’s com-\n\
    plexity creates a set of interrelated hurdles that prevent full integration of\
    \ digital \ntechnology for agriculture 4.0 implementation. As a result, identifying\
    \ possible \nbottlenecks is critical in order to devise strategic strategies to\
    \ overcome them. \nThis research aims to figure out what these stumbling barriers\
    \ are. Following \nthe investigation, 21 barriers were found and characterized\
    \ on both a technical \nand socioeconomic level. These impediments are addressed\
    \ in section 5, which \noutlines what needs to be done on a bigger scale to digitize\
    \ the agricultural \neconomy. However, it is still unknown how much removing or\
    \ mitigating these \nhurdles aids in the successful integration of digital technologies.\
    \ \n4.16. Added value of agricultural digitization \nSeveral benefits that can\
    \ inspire framers and other actors to assist agriculture \nindustry digitization\
    \ have been discovered and outlined based on analysis. The \nbenefits described\
    \ here have the potential to increase farm productivity and im-\nprove product\
    \ quality, but they should not be viewed as a cure for the problems \nthat come\
    \ with smart agriculture [73]. \n•Improved agility: Farm operations can now be\
    \ more agile thanks to digital \ntechnologies. Farmers and agricultural professionals\
    \ can quickly respond to \nany anticipated changes in environmental and water\
    \ conditions using real-time \nsurveillance and forecasting technologies to save\
    \ crops [72].\n•Green process: By lowering the use of in-field fuel, nitrogen\
    \ fertilizers, \npesticides, and herbicides, digital technologies make farming\
    \ more ecologically \nfriendly and climate-resilient [75].\n•Resource efficiency:\
    \ By increasing the quantity and quality of agricultural \noutput while reducing\
    \ the use of water, energy, fertilizers, and pesticides, digital \nplatforms can\
    \ improve resource efficiency [3]. \n445\nSiberian Journal of Life Sciences and\
    \ Agriculture, Том 14, №6, 2022\n•Time and cost savings: By automating various\
    \ tasks such as harvesting, sow-\ning, or irrigation, managing the application\
    \ of fertilizers or pesticides, and sched-\nuling irrigation, digital technologies\
    \ provide significant time and cost savings [76].\n•Asset management: digital\
    \ technologies enable real-time observation of \nfarm holdings and equipment,\
    \ allowing for theft prevention, component re-\nplacement, and routine maintenance\
    \ [10].\n•Product safety: By eliminating fraud [17, 18] linked to adulteration,\
    \ coun-\nterfeiting, and artificial enhancement, digital technologies maintain\
    \ appropriate \nfarm output and ensure a safe and nutritious supply of agri-food\
    \ products [69].\n4.17. Considerations and future prospects \nThe agricultural\
    \ industry would see major benefits as a result of the planned \nmeasures. However,\
    \ the impediments identified in section 5 must be solved first \nin order to make\
    \ things sustainable for small and medium-scale growers. Some \nof the above hurdles\
    \ can be mitigated by awareness campaigns emphasizing the \nimportance of smart\
    \ agriculture at every level of the agricultural value chain and \nencouraging\
    \ novel techniques (such as gamification) to encourage stakeholders \nto take\
    \ an active role in the digital transformation [9]. Initiatives at the federal\
    \ \nlevel, grants and endowments, public-private collaborations, data transparency,\
    \ \nand regional research efforts can all help overcome potential hurdles. Finally,\
    \ \nwhen constructing a smart agriculture system, a roadmap can be used, starting\
    \ \nwith a basic architecture with few components and simpler functionality and\
    \ \ngradually adding components and functionality to develop a sophisticated sys-\n\
    tem with full digitization potential [21]. These issues can pave the road for\
    \ ag-\nriculture 4.0’s successful adoption. The use of explainable artificial\
    \ intelligence \nto monitor crop development, estimate crop biomass, evaluate\
    \ crop health, and \ncontrol pests and diseases is one of the future prospects\
    \ of digital technologies \nin smart agriculture. Explainable AI eliminates the\
    \ old black-box approach of \nmachine learning and allows for a better understanding\
    \ of the reasoning behind \nany given decision [15]. The use of common semantics\
    \ and ontologies to de-\nscribe big data, as well as the adoption of open standards,\
    \ has the potential to \naccelerate research and development in the field of smart\
    \ farming. Similarly, \n5G technology must be thoroughly investigated in order\
    \ to enable improved \nconnectivity and live streaming of crop data [6]. By executing\
    \ precise crop in-\nspections remotely, 5G technology will reduce internet costs\
    \ and enhance the \nentire user experience of farm management and food safety\
    \ [77]. It would also \nhelp to close the gap between stakeholders by keeping\
    \ them informed about \ncrop availability. Finally, blockchain can be used in\
    \ conjunction with IoT and \nother technologies to address data privacy and security\
    \ concerns [78]. \n446\nSiberian Journal of Life Sciences and Agriculture, Vol.\
    \ 14, №6, 2022\n4.18. Transition to Agriculture 5.0 \nThe agriculture sector has\
    \ traditionally had a breakthrough during industri-\nal revolutions. Agriculture\
    \ 4.0 offers significant potential to offset rising food \ndemands and prepare\
    \ for the future by reinforcing agricultural systems with \nWSN, IoT, AI, and\
    \ other technologies, as formally mentioned in preceding \nsections. While agricultural\
    \ 4.0 is still being implemented, agriculture 5.0 is \nalready being discussed.\
    \ \nAgriculture 5.0 builds on agriculture 4.0 by incorporating industry 5.0 prin-\n\
    ciples to provide healthy, affordable food while also ensuring that the environ-\n\
    ments on which life depends are not degraded [79]. Industry 4.0 focuses less \n\
    on the original principles of social fairness and sustainability and more on dig-\n\
    italization and AI-driven technologies for increasing efficiency and flexibility,\
    \ \nthe European Commission formally called for the Fifth Industrial Revolution\
    \ \n(industry 5.0) in 2021 [80]. Industry 5.0 adds to and expands on the industry\
    \ 4.0 \nconcepts by emphasizing human-centricity, sustainability, and resiliency\
    \ [81]. \nIt entails improving human-machine collaboration, decreasing environmental\
    \ \neffect through the circular economy, and designing systems with a high degree\
    \ \nof robustness to reach an ideal balance of efficiency and productivity. Among\
    \ \nthe enabling technologies of industry are cobots (collaborative robots), smart\
    \ \nmaterials with embedded bio-inspired sensors, digital twins, AI, energy efficient\
    \ \nand secure data management, renewable energy sources, and others 5.0[80].\n\
    Farm production efficiency and crop quality can be improved in agriculture \n\
    5.0 settings by delegating repetitive and boring activities to machines and those\
    \ \nthat need critical thinking to humans. For this reason, agricultural cyber\
    \ physical \ncognitive systems (CPCS) that observe/study the environment and conduct\
    \ ap-\npropriate actions, comparable to those established for the manufacturing\
    \ sector, \nshould be developed. This might include collaborative farm robots\
    \ that work in \nthe fields to aid crop growers with time-consuming operations\
    \ like seed sowing \nand harvesting. Similarly, digital twins in agriculture 5.0\
    \ can add substantial value \nby recognizing technical difficulties in agricultural\
    \ systems and resolving them \nmore quickly, detecting crop illnesses, and producing\
    \ more accurate crop output \nestimates. This demonstrates that agriculture 5.0\
    \ has the potential to pave the way \nfor climate-smart, sustainable, and resilient\
    \ agriculture, but it is still in its infancy. \n5. Conclusions \nConcerns about\
    \ global food security have heightened the demand for \nnext-generation industrial\
    \ farms and agricultural intensive production systems. \nDigital technologies,\
    \ such as those given by the Industry 4.0 programme, are at \n447\nSiberian Journal\
    \ of Life Sciences and Agriculture, Том 14, №6, 2022\nthe vanguard of this modern\
    \ agricultural period, providing a wide range of in-\nnovative solutions. Disruptive\
    \ technologies are being integrated into traditional \nagriculture systems by\
    \ scientists and researchers in order to boost crop yields, \ncut costs, reduce\
    \ waste, and sustain process inputs. This report includes an SLR \nthat discusses\
    \ the current state of various technologies in the agriculture sector. \nSeveral\
    \ findings are drawn, including the fact that big data and analytics inte-\ngration,\
    \ wireless sensor networks, cyber-physical systems, and digital twins in \nagriculture\
    \ are still in their infancy, with the majority of use cases still in the \nprototype\
    \ stage. Similarly, 21 technological and socioeconomic impediments \nare found\
    \ and categorized. These impediments must be identified and addressed \nif the\
    \ agriculture industry is to be digitalized. The report also identifies and \n\
    presents the additional value of digital technology in the agriculture industry.\
    \ \nOverall, this research contributes to the ongoing research on agricultural\
    \ 4.0. \nThe review’s principal restriction is twofold: first, only three online\
    \ reposito-\nries (Scopus, IEEE, and Science Direct) are considered for literature\
    \ searches, \nand second, new keywords and synonyms may return more papers. The\
    \ main \nconclusions are highly unlikely to alter in either scenario. Additional\
    \ research \ndatabases and areas can be considered for future study in order to\
    \ provide a \ncomplete overview of the agriculture industry in terms of digitization.\
    \ In addi-\ntion, papers focusing on agriculture 5.0 in general will be featured.\n\
    References\n1. F Schierhorn, M. Elferink, Global Demand for Food Is Rising. Can\
    \ We Meet \nIt? Harv Bus Rev, 2016, 7 (2017). https://hbr.org/2016/04/global-demand-for-\n\
    food-is-rising-can-we-meet-it\n2. Singh, G. Machine Learning Models in Stock Market\
    \ Prediction. International \nJournal of Innovative Technology and Exploring Engineering,\
    \ 2022, vol. 11, \nno. 3, pp. 18-28. https://doi.org/10.35940/ijitee.C9733.0111322\n\
    3. WK Mok, YX Tan, WN. Chen, Technology innovations for food security in \nSingapore:\
    \ A case study of future food systems for an increasingly natural re-\nsource-scarce\
    \ world, Trends Food Sci Technol, 2020, vol. 102, pp. 155–168, \nhttps://doi.org/10.1016/j.tifs.2020.06.013\n\
    4. Nagar, P., & Issar, G. S. Detection of outliers in stock market using regression\
    \ \nanalysis. International Journal of Emerging Technologies in Computational\
    \ and \nApplied Science, 2013. https://doi.org/10.5281/zenodo.6047417\n5. R Abbasi,\
    \ P Martinez, R. Ahmad, An ontology model to represent aquapon-\nics 4.0 system’s\
    \ knowledge, Inf Process Agric, 2021. https://doi.org/10.1016/J.\nINPA.2021.12.001\n\
    448\nSiberian Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\n6.\
    \ R Abbasi, P Martinez, R. Ahmad, An ontology model to support the automat-\n\
    ed design of aquaponic grow beds, Procedia CIRP, 2021, vol. 100, pp. 55–60, \n\
    https://doi.org/10.1016/j.procir.2021.05.009\n7. G Aceto, V Persico, A. Pescapé,\
    \ A Survey on Information and Communication \nTech- nologies for Industry 4.0:\
    \ State-of-the-Art, Taxonomies, Perspectives, \nand Challenges, IEEE Commun Surv\
    \ Tutorials, 2019. https://doi.org/10.1109/\nCOMST.2019.2938259\n8. B. Ozdogan,\
    \ A. Gacar, H. Aktas. Digital agriculture practices in the context of \nagriculture\
    \ 4.0. Journal of Economics, Finance and Accounting (JEFA), 2017, \nvol. 4, iss.\
    \ 2, pp. 184-191. https://doi.org/10.17261/pressacademia.2017.448\n9. Y Liu, X\
    \ Ma, L Shu, GP Hancke, AM. Abu-Mahfouz, From Industry 4.0 to Ag-\nriculture 4.0:\
    \ Current Status, Enabling Technologies, and Research Challenges, \nIEEE Trans\
    \ Ind Informatics, 2021, vol. 17, no. 6, pp. 4322-4334. https://doi.\norg/10.1109/TII.2020.3003910\n\
    10. F da Silveira, FH Lermen, FG. Amaral, An overview of agriculture 4.0 devel-\n\
    opment: Systematic review of descriptions, technologies, barriers, advantag-\n\
    es, and disadvantages, Comput Electron Agric 189 (2021) 106405, https://doi.\n\
    org/10.1016/J.COMPAG.2021.106405\n11. G Idoje, T Dagiuklas, M. Iqbal, Survey for\
    \ smart farming technologies: Chal-\nlenges and issues, Comput Electr Eng, 2021,\
    \ vol. 92, 107104. https://doi.\norg/10.1016/J.COMPELECENG.2021.107104\n12. J\
    \ Miranda, P Ponce, A Molina, P. Wright, Sensing, smart and sustain- able tech-\n\
    nologies for Agri-Food 4.0, Comput Ind, 2019, vol. 108, pp. 21–36. https://doi.\n\
    org/10.1016/J.COMPIND.2019.02.002 \n13. M Lezoche, H Panetto, J Kacprzyk, JE Hernandez,\
    \ Alemany Díaz MME. \nAgri-food 4.0: A survey of the supply chains and technologies\
    \ for the future \nagriculture, Comput Ind, 2020, vol. 117, 103187. https://doi.org/10.1016/J.\n\
    COMPIND.2020.103187\n14. Bhakta I, Phadikar S, Majumder K. State-of-the-art technologies\
    \ in precision \nagriculture: a systematic review. Journal of the Science of Food\
    \ and Agriculture, \n2019, vol. 99, no. 11. pp. 4878-4888. https://doi.org/10.1002/jsfa.9693\n\
    15. SO Araújo, RS Peres, J Barata, F Lidon, JC. Ramalho, Characterising the \n\
    Agriculture 4.0 Landscape — Emerging Trends, Challenges and Opportu-\nnities,\
    \ Agron, 2021, vol. 11, no. 4, 667. https://doi.org/10.3390/AGRONO-\nMY11040667\n\
    16. M Bacco, P Barsocchi, E Ferro, A Gotta, M. Ruggeri, The Digitisation of Agri-\n\
    culture: a Survey of Research Activities on Smart Farming, Array, 2019, 3–4, \n\
    100009. https://doi.org/10.1016/j.array.2019.100009\n449\nSiberian Journal of\
    \ Life Sciences and Agriculture, Том 14, №6, 2022\n17. Singh, G., & Nager, P.\
    \ A case Study on Nutek India Limited Regarding Deep \nFalling in Share Price.\
    \ Researchers World - Journal of Arts, Science & Com-\nmerce, 2012, vol. 3(2),\
    \ 3.\n18. Nager, P., & Singh, G. An Analysis of Outliers For Fraud Detection in\
    \ Indian \nStock Market. Researchers World - Journal of Arts, Science & Commerce,\
    \ 2012, \nvol. 3(4), 4.\n19. MJ Page, JE McKenzie, PM Bossuyt, I Boutron, TC Hoffmann,\
    \ CD Mulrow, et \nal., The PRISMA 2020 statement: An updated guideline for reporting\
    \ systematic \nreviews, BMJ, 2021, 372. https://doi.org/10.1136/BMJ.N71\n20. Ahmed\
    \ MA, Ahsan I, Abbas M. Systematic Literature Review: Ingenious \nSoftware Project\
    \ Management while narrowing the impact aspect. RACS ‘16: \nProceedings of the\
    \ International Conference on Research in Adaptive and Con-\nvergent Systems,\
    \ 2016, pp. 165–168. https://doi.org/10.1145/2987386.2987422\n21. C Pylianidis,\
    \ S Osinga, IN. Athanasiadis, Introducing digital twins to agricul-\nture, Comput\
    \ Electron Agric 184 (2021) 105942, https://doi.org/10.1016/J.\nCOMPAG.2020.105942\
    \ \n22. Shaikh ZA Aqeel-ur-Rehman, NA Shaikh, N Islam, An integrated framework\
    \ \nto de- velop context aware sensor grid for agriculture, Aust J Basic Appl\
    \ Sci, \n2010. \n23. W Shi, J Cao, Q Zhang, Y Li, L. Xu, Edge Computing: Vision\
    \ and Chal-\nlenges, IEEE Internet Things J 3, 2016, 637–646, https://doi.org/10.1109/\n\
    JIOT.2016.2579198\n24. A Tzounis, N Katsoulas, T Bartzanas, C. Kittas, Internet\
    \ of Things in agricul- \nture, recent advances and future challenges, Biosyst\
    \ Eng, 164, 2017, 31–48, \nhttps://doi.org/10.1016/J.BIOSYSTEMSENG.2017.09.007\n\
    25. VP Kour, S. Arora, Recent Developments of the Internet of Things in Agri-\
    \ cul-\nture: A Survey, IEEE Access 8, 2020, 129924–129957, https://doi.org/10.1109/\n\
    AC- CESS.2020.3009298\n26. MU Aftab, O Ashraf, M Irfan, M Majid, A Nisar, MA.\
    \ Habib, A Review Study \nof Wireless Sensor Networks and Its Security, Commun\
    \ Netw, 7, 2015, 172–179, \nhttps://doi.org/10.4236/cn.2015.74016\n27. X Yu, P\
    \ Wu, W Han, Z. Zhang, A survey on wireless sensor network infra-\nstructure for\
    \ agriculture, Comput Stand Interfaces, 1, 2013, 59–64, https://doi.\norg/10.1016/J.CSI.2012.05.001\n\
    28. Mell PM, Grance T. The NIST definition of cloud computing, 2011. https://doi.\n\
    org/10.6028/NIST.SP.800-145\n29. Alwada’n T. Cloud computing and multi-agent system:\
    \ monitoring and services. \n2018. \n450\nSiberian Journal of Life Sciences and\
    \ Agriculture, Vol. 14, №6, 2022\n30. X Shi, X An, Q Zhao, H Liu, L Xia, X Sun,\
    \ et al., State-of-the-art inter- net of \nthings in protected agriculture, Sensors\
    \ (Switzerland), 19, 2019, 1833, https://\ndoi.org/10.3390/s19081833\n31. J Wang,\
    \ H Yue, Z. Zhou, An improved traceability system for food quality assur-\nance\
    \ and evaluation based on fuzzy classification and neural network, Food Con-\n\
    trol, 79, 2017, 363–370, https://doi.org/10.1016/J.FOODCONT.2017.04.013\n32. S\
    \ Fountas, G Carli, CG Sørensen, Z Tsiropoulos, C Cavalaris, A Vatsanidou, et\
    \ \nal., Farm management information systems: Current situation and future per-\n\
    spectives, Comput Electron Agric, 115, 2015, 40–50, https://doi.org/10.1016/J.\n\
    COMPAG.2015.05.011\n33. A Bechar, C. Vigneault, Agricultural robots for field\
    \ operations: Concepts and \ncomponents, Biosyst Eng, 149, 2016, 94–111, https://doi.org/10.1016/J.BIO-\n\
    SYSTEMSENG.2016.06.014\n34. Gonzalez-De-Santos P, Fernández R, Sepúlveda D, Navas\
    \ E, Armada M. Un- \nmanned Ground Vehicles for Smart Farms. Agron - Clim Chang\
    \ Food Secur, \n2020. https://doi.org/10.5772/INTECHOPEN.90683\n35. J del Cerro,\
    \ CC Ulloa, A Barrientos, L. Rivas J de, Unmanned Aerial Vehicles in \nAgri- culture:\
    \ A Survey, Agron, 11, 2021, 203, https://doi.org/10.3390/AGRON-\nOMY11020203\n\
    36. Patel PN, Patel M, Faldu RM, Dave YR. Quadcopter for Agricultural Surveil-\n\
    lance, 2013.\n37. Sylvester G, Food and Agriculture Organization of the United\
    \ Nations., International \nTelecommunication Union. E-agriculture in action:\
    \ drones for agriculture n.d.:112. \n38. U Sivarajah, MM Kamal, Z Irani, V. Weerakkody,\
    \ Critical analysis of Big Data \nchallenges and analytical methods, J Bus Res,\
    \ 70, 2017, 263–286, https://doi.\norg/10.1016/J.JBUSRES.2016.08.001\n39. M Chi,\
    \ A Plaza, JA Benediktsson, Z Sun, J Shen, Y. Zhu, Big Data for Re- \nmote Sensing:\
    \ Challenges and Opportunities, Proc IEEE, 104, 2016, 2207–2219, \nhttps://doi.org/10.1109/JPROC.2016.2598228\
    \ \n40. K Tesfaye, K Sonder, J Caims, C Magorokosho, A Tarekegn, GT Kassie, et\
    \ al. \nTarget- ing drought-tolerant maize varieties in southern Africa: a geospatial\
    \ crop \nmodeling approach using big data, Int Food Agribus Manag Rev, 19, 2016.\
    \ \n41. R Sharma, SS Kamble, A Gunasekaran, V Kumar, A. Kumar, A system- atic\
    \ \nliterature review on machine learning applications for sustainable agri- culture\
    \ \nsupply chain performance, Comput Oper Res, 119, 2020, 104926, https://doi.\n\
    org/10.1016/J.COR.2020.104926\n42. T Talaviya, D Shah, N Patel, H Yagnik, M. Shah,\
    \ Implementation of artifi-\ncial intelli- gence in agriculture for optimisation\
    \ of irrigation and application \n451\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\nof pesticides and herbicides, Artif Intell Agric, 4, 2020,\
    \ 58–73, https://doi.\norg/10.1016/J.AIIA.2020.04.002\n43. KG Liakos, P Busato,\
    \ D Moshou, S Pearson, D. Bochtis, Machine Learn- ing in \nAgriculture: A Review,\
    \ Sensors, 18, 2018, 2674, https://doi.org/10.3390/S18082674\n44. G Xu, H Li,\
    \ S Liu, K Yang, X. Lin, VerifyNet: Secure and Verifiable Federat-\ned Learning,\
    \ IEEE Trans Inf Forensics Secur, 15, 2020, 911–926, https://doi.\norg/10.1109/TIFS.2019.2929409\n\
    45. J. Schmidhuber, Deep Learning in Neural Networks: An Overview, Neural Net-\n\
    works, 61, 2014, 85–117, https://doi.org/10.1016/j.neunet.2014.09.003 \n46. Canziani\
    \ A, Paszke A, Culurciello E. An Analysis of Deep Neural Network \nModels for\
    \ Practical Applications, 2016. \n47. A Kamilaris, FX. Prenafeta-Boldu, Deep learning\
    \ in agriculture: A survey, \nComput Electron Agric, 147, 2018, 70–90, https://doi.org/10.1016/j.com-\n\
    pag.2018.02.016\n48. V Kakani, VH Nguyen, BP Kumar, H Kim, VR. Pasupuleti, A critical\
    \ review on \ncomputer vision and artificial intelligence in food industry, J\
    \ Agric Food Res, 2, \n2020, https://doi.org/10.1016/J.JAFR.2020.100033\n49. F\
    \ Terribile, A Agrillo, A Bonfante, G Buscemi, M Colandrea, A D’Antonio, et al.,\
    \ A \nWeb-based spatial decision supporting system for land management and soil\
    \ con-\nservation, Solid Earth 6 (2015) 903–928, https://doi.org/10.5194/SE-6-903-2015\n\
    50. A Felsberger, B Oberegger, G. Reiner, A Review of Decision Support Systems\
    \ \nfor Manufacturing Systems, Undefined, 2016. \n51. P Taechatanasat, L. Armstrong,\
    \ Decision Support System Data for Farmer De-\ncision Making, ECU Publ Post (2013)\
    \ 2014 . \n52. L Wang, M Törngren, M. Onori, Current status and advancement of\
    \ cyber- phys-\nical systems in manufacturing, J Manuf Syst, 37, 2015), 517–527,\
    \ https://doi.\norg/10.1016/J.JMSY.2015.04.008\n53. DGS Pivoto, LFF de Almeida,\
    \ R da Rosa Righi, JJPC Rodrigues, AB Lugli, \nAM. Al- berti, Cyber-physical systems\
    \ architectures for industrial internet of \nthings appli- cations in Industry\
    \ 4.0: A literature review, J Manuf Syst, 58, 2021, \n176–192, https://doi.org/10.1016/J.JMSY.2020.11.017\n\
    54. AF Jimenez, PF Cardenas, F Jimenez, A Canales, A. López, A cyber-physical\
    \ in-\ntelli- gent agent for irrigation scheduling in horticultural crops, Comput\
    \ Electron \nAgric, 178, 2020, 105777, https://doi.org/10.1016/J.COMPAG.2020.105777\n\
    55. A Selmani, H Oubehar, M Outanoute, A Ed-Dahhak, M Guerbaoui, A Lach- hab,\
    \ \net al., Agricultural cyber-physical system enabled for remote management of\
    \ \nsolar-powered precision irrigation, Biosyst Eng, 177, 2019, 18–30, https://doi.\n\
    org/10.1016/J.BIOSYSTEMSENG.2018.06.007\n452\nSiberian Journal of Life Sciences\
    \ and Agriculture, Vol. 14, №6, 2022\n56. A Nayak, RR Levalle, S Lee, SY. Nof,\
    \ Resource sharing in cyber-physical sys-\ntems: modelling framework and case\
    \ studies, 54, 2016, 6969–6983, https://doi.\norg/10.1080/00207543.2016.1146419\n\
    57. C Verdouw, B Tekinerdogan, A Beulens, S. Wolfert, Digital twins in smart farming,\
    \ \nAgric Syst, 189, 2021, 103046, https://doi.org/10.1016/J.AGSY.2020.103046\n\
    58. D Jones, C Snider, A Nassehi, J Yon, B Hicks, Characterising the Digital Twin:\
    \ \nA systematic literature review, CIRP J Manuf Sci Technol, 29, 2020, 36–52,\
    \ \nhttps://doi.org/10.1016/J.CIRPJ.2020.02.002\n59. S Aydin, MN. Aydin, Semantic\
    \ and syntactic interoperability for agricultural \nopen- data platforms in the\
    \ context of IoT using crop-specific trait ontologies, \nAppl Sci, 10, 2020, https://doi.org/10.3390/app10134460\n\
    60. Y He, J Guo, X. Zheng, From Surveillance to Digital Twin: Challenges and Re-\n\
    cent Advances of Signal Processing for Industrial Internet of Things, IEEE Signal\
    \ \nProcess Mag, 35, 2018, 120–129, https://doi.org/10.1109/MSP.2018.2842228\n\
    61. MS Farooq, S Riaz, A Abid, K Abid, MA. Naeem, A Survey on the Role of IoT\
    \ \nin Agriculture for the Implementation of Smart Farming, IEEE Access, 7, 2019,\
    \ \n156237–156271, https://doi.org/10.1109/ACCESS.2019.2949703\n62. A Villa-Henriksen,\
    \ GTC Edwards, LA Pesonen, O Green, CAG. Sørensen, In-\nternet of Things in arable\
    \ farming: Implementation, applications, challenges and \npotential, Biosyst Eng,\
    \ 191, 2020, 60–84, https://doi.org/10.1016/J.BIOSYSTE-\nMSENG.2019.12.013\n63.\
    \ HM Jawad, R Nordin, SK Gharghan, AM Jawad, M. Ismail, Energy-efficient \nwire-\
    \ less sensor networks for precision agriculture: A review, Sensors (Swit-\nzerland),\
    \ 17, 2017, 1781, https://doi.org/10.3390/s17081781\n64. L Sigrist, N Stricker,\
    \ D Bernath, J Beutel, L. Thiele, Thermoelectric Energy \nHarvesting from Gradients\
    \ in the Earth Surface, IEEE Trans Ind Electron, 67, \n2020, 9460–9470, https://doi.org/10.1109/TIE.2019.2952796\n\
    65. AR Yanes, P Martinez, R. Ahmad, Towards automated aquaponics: A re-\nview\
    \ on monitoring, IoT, and smart systems, J Clean Prod, 2020, https://doi.\norg/10.1016/j.jclepro.2020.121571\n\
    66. N Brinis, LA. Saidane, Context Aware Wireless Sensor Network Suitable \nfor\
    \ Preci- sion Agriculture, Wirel Sens Netw, 2016, https://doi.org/10.4236/\nwsn.2016.81001\n\
    67. M Zimmerling, L Mottola, S. Santini, Synchronous Transmissions in Low-Pow-\n\
    er Wireless: A Survey of Communication Protocols and Network Services, ACM \n\
    Comput Surv, 53 2021, https://doi.org/10.1145/3410159\n68. F Tonolini, F. Adib,\
    \ Networking across boundaries: Enabling wireless com-\nmunica- tion through the\
    \ water-air interface, SIGCOMM 2018 - Proc 2018 \n453\nSiberian Journal of Life\
    \ Sciences and Agriculture, Том 14, №6, 2022\nConf ACM Spec Interes Gr Data Commun,\
    \ 2018, 117–131, https://doi.\norg/10.1145/3230543.3230580\n69. L Chen, S Thombre,\
    \ K Jarvinen, ES Lohan, A Alen-Savikko, H Leppakoski, et al., Ro- \nbustness,\
    \ Security and Privacy in Location-Based Services for Future IoT: A Survey, \n\
    IEEE Access, 5, 2017, 8956–8977, https://doi.org/10.1109/ACCESS.2017.2695525\n\
    70. Y Njah, M. Cheriet, Parallel Route Optimization and Service Assurance in Ener-\n\
    gy- Efficient Software-Defined Industrial IoT Networks, IEEE Access, 9, 2021,\
    \ \n24682–24696, https://doi.org/10.1109/ACCESS.2021.3056931\n71. A Rajput, VB.\
    \ Kumaravelu, Scalable and sustainable wireless sensor networks \nfor agricultural\
    \ application of Internet of things using fuzzy c-means algorithm, \nSustain Comput\
    \ Informatics Syst, 22, 2019, 62–74, https://doi.org/10.1016/J.\nSUSCOM.2019.02.003\n\
    72. BB Sinha, R. Dhanalakshmi, Recent advancements and challenges of Internet\
    \ \nof Things in smart agriculture: A survey, Futur Gener Comput Syst, 126, 2022,\
    \ \n169–184, https://doi.org/10.1016/J.FUTURE.2021.08.006\n73. F Caffaro, E. Cavallo,\
    \ The effects of individual variables, farming system char-\nacter- istics and\
    \ perceived barriers on actual use of smart farming technologies: \nEvidence from\
    \ the piedmont region, northwestern Italy, Agric, 9, 2019, https://\ndoi.org/10.3390/AGRI-\
    \ CULTURE9050111 \n74. Mohit Jain, Pratyush Kumar, Ishita Bhansali, Q. Vera Liao,\
    \ Khai Truong, \nShwetak Patel. FarmChat: A Conversational Agent to Answer Farmer\
    \ Que-\nries. Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiq-\n\
    uitous Technologies, 2018, vol. 2, issue 4, article 170, pp 1–22. https://doi.\n\
    org/10.1145/3287048\n75. Mclaughlan B, Brandli J, Smith F. Toward Sustainable\
    \ High-Yield Agriculture \nvia Intelligent Control Systems, 2015. \n76. RK Kodali,\
    \ S Soratkal, L. Boppana, IOT based control of appliances, in: Pro-\nceeding -\
    \ IEEE Int Conf Comput Commun Autom ICCCA 2016, 2017, pp. \n1293–1297, https://doi.org/10.1109/CCAA.2016.7813918\n\
    77. Abbasi R, Reyes A, Martinez E, Ahmad R. Real-time implementation of digital\
    \ \ntwin for robot based production line n.d.:4–6. \n78. O Bermeo-Almeida, M Cardenas-Rodriguez,\
    \ T Samaniego-Cobo, E Ferruzo-\nla- Gómez, R Cabezas-Cabezas, W. Bazán-Vera, Blockchain\
    \ in Agriculture: A \nSystematic Literature Review, Commun Comput Inf Sci, 883,\
    \ 2018, 44–56, \nhttps://doi.org/10.1007/978-3-030-00940-3_4\n79. V Saiz-Rubio,\
    \ F. Rovira-Más, From Smart Farming towards Agriculture 5.0: \nA Review on Crop\
    \ Data Management, Agron, 10, 2020, 207, https://doi.\norg/10.3390/AGRONOMY10020207\n\
    454\nSiberian Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\n80.\
    \ X Xu, Y Lu, B Vogel-Heuser, L. Wang, Industry 4.0 and Industry 5.0 – Incep-\n\
    tion, conception and perception, J Manuf Syst, 61, 2021, 530–535, https://doi.\n\
    org/10.1016/J.JMSY.2021.10.006\n81. PKR Maddikunta, Q-V Pham, P B, N Deepa, K\
    \ Dev, TR Gadekallu, et al., In-\ndustry 5.0: A survey on enabling technologies\
    \ and potential applications, J Ind \nInf Integr, 2021, 100257, https://doi.org/10.1016/J.JII.2021.100257\n\
    DATA ABOUT THE AUTHORS\nGurjeet Singh, Associate Professor& Dean, Lords School\
    \ of Computer Ap-\nplications & IT\n \nLords University\n \nAlwar-Bhiwadi Highway,\
    \ Chikani, Alwar, 301028, Rajasthan\n \nresearch.gurjeet@gmail.com\nNaresh Kalra,\
    \ Deputy Registrar (Research), Faculty of Pharmacy\n \nLords University\n \nAlwar-Bhiwadi\
    \ Highway, Chikani, Alwar, 301028, Rajasthan\n \nnaresh.kalra@lordsuni.edu.in\n\
    Neetu Yadav, Associate Professor& Dean, Lords School of Social Sciences \n& Humanities\n\
    \ \nLords University\n \nAlwar-Bhiwadi Highway, Chikani, Alwar, 301028, Rajasthan\n\
    \ \nneetu.yadav@lordsuni.edu.in\nAshwani Sharma, Assistant Professor, Lords School\
    \ of Computer Applica-\ntions & IT\n \nLords University\n \nAlwar-Bhiwadi Highway,\
    \ Chikani, Alwar, 301028, Rajasthan\n \nashwani.sharma@lordsuni.edu.in\nAshwani\
    \ Sharma, Assistant Professor, Lords School of Computer Applica-\ntions & IT\n\
    \ \nLords University\n \nAlwar-Bhiwadi Highway, Chikani, Alwar, 301028, Rajasthan\n\
    \ \nmanoj.saini@lordsuni.edu.in \nПоступила 21.05.2022 \nReceived 21.05.2022\n\
    После рецензирования 21.06.2022 \nRevised 21.06.2022\nПринята 03.07.2022 \nAccepted\
    \ 03.07.2022\n"
  inline_citation: 'Singh, G., Kalra, N., Yadav, N., Sharma, A., & Saini, M. (2022).
    Smart Agriculture: A Review. Siberian Journal of Life Sciences and Agriculture,
    14(6), 423-454. https://doi.org/10.12731/2658-6649-2022-14-6-423-454'
  journal: Siberian journal of life sciences and agriculture
  limitations: '>'
  pdf_link: http://discover-journal.ru/jour/index.php/sjlsa/article/download/657/260
  publication_year: 2022
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'SMART AGRICULTURE: A REVIEW'
  verbatim_quote1: null
  verbatim_quote2: null
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2022/8011525
  analysis: "**Types of data most applicable to irrigation management and their typical\
    \ sources**\n\n**Data type** | **Source**\n---|---|---|---\n| Water level in the\
    \ reservoir | Water control board or gauges/sensors in the dam | \n| Precipitation\
    \ (often used as a proxy for the total amount of water coming into the system)\
    \ | rain gauges or radar | \n| Inﬂow rates | gauges/sensors in the dam, or observed\
    \ or rated downstream of the dam.  | \n| Outﬂow rates | Observed or rated downstream\
    \ of the dam | \n| Evapotranspiration (often estimated from local weather data\
    \ & area of water surface) | weather stations, local evaporation pans, satellite\
    \ data | \n| Soil moisture | Sensors | \n| Crop water requirements | Crop coefﬁcients\
    \ & reference crop evapotranspiration from weather stations | \n| Snowpack | manual\
    \ snow courses, snow telemetry (SNOTEL) sites, snow pillows, lidar |"
  authors:
  - Adil El Mane
  - Younes Chihab
  - Khalid Tatane
  - Redouan Korchiyne
  citation_count: 2
  full_citation: '>'
  full_text: ">\nResearch Article\nAgriculture Supply Chain Management Based on Blockchain\n\
    Architecture and Smart Contracts\nAdil El Mane\n,1 Younes Chihab\n,1 Khalid Tatane,2\
    \ and Redouan Korchiyne\n1\n1Computer Research Laboratory, Superior School of\
    \ Technology, Ibn Toufail University, Kenitra 14000, Morocco\n2Computer Science,\
    \ Mathematics and Applications Laboratory, Institute of National School of Applied\
    \ Sciences,\nIbn Zohr University, Agadir 80000, Morocco\nCorrespondence should\
    \ be addressed to Adil El Mane; adil.elmane@uit.ac.ma\nReceived 7 July 2022; Revised\
    \ 23 September 2022; Accepted 30 September 2022; Published 21 October 2022\nAcademic\
    \ Editor: Imran Ashraf\nCopyright © 2022 Adil El Mane et al. Tis is an open access\
    \ article distributed under the Creative Commons Attribution License,\nwhich permits\
    \ unrestricted use, distribution, and reproduction in any medium, provided the\
    \ original work is properly cited.\nSince the commercialization of agriculture\
    \ technology, there has been a surge in interest in agricultural data. However,\
    \ these\ndata are notoriously chaotic, and analysts are concerned about their\
    \ authenticity because there is a big possibility that others\nmay have infuenced\
    \ data quality at various points along the data stream. Tis article suggests a\
    \ new blockchain architecture to\nprotect the integrity of agricultural data.\
    \ Te goal of this architecture is to provide farmers with safe storage. Te agriculture\n\
    data inserted cannot be modifed without some rules. Many procedures are completed\
    \ automatically using smart contracts to\nlimit the danger of manipulation. One\
    \ of the suggested architectures is the proof of concept. It connects a traditional\
    \ farm\nsystem with the blockchain accompanied by smart contracts to facilitate\
    \ the entire agri-supply chain. Te conceptual ar-\nchitecture will eliminate the\
    \ faws discovered in prior studies. Sensors are used in this approach to provide\
    \ us with envi-\nronmental data. As a result, we store our data in blocks using\
    \ the blockchain system. Ten, we built some unique agricultural\nsmart contracts\
    \ to handle all transactions and automatize decisions based on the source code\
    \ of these automated contracts. Tis\nstrategy would be more efcient and secure.\n\
    1. Introduction\nAgriculture is a big part of the economy of any country because\n\
    it helps feed the entire population. It connects and commu-\nnicates with all\
    \ of the related industries. If the agriculture base is\nstrong, it is generally\
    \ regarded as a socially and politically stable\nsociety. Many modern farms make\
    \ use of cutting-edge tech-\nnology and scientifc and technological ideas [1].\n\
    Te following are some of the reasons for food supply\nchain problems and processing\
    \ environment challenges.\nTe maximization of the profts relies on some farmers’\n\
    vegetables and fruits with chemicals. Chemical fertilizers,\ninsecticides, and\
    \ other compounds are used in several plants\nand fruits.\nAs a result, pesticide\
    \ residues in vegetables and fruits\nbecome excessive. It is a signifcant health\
    \ risk.\nFood gets contaminated with heavy metals. Te irriga-\ntion water source\
    \ of crops is polluted by the excessive\nintrusion of heavy metal elements such\
    \ as lead, tin, mercury,\nand zinc, which are dangerous to human health.\nFood\
    \ additives are used excessively in food processing.\nSome nefarious enterprises\
    \ use excessive food additives,\nantibiotics, hormones, and harmful substances\
    \ [2].\nTe following are some of the most common blockchain\napplications [1]:\n\
    (i) Agribusiness insurance.\n(ii) Smart farming.\n(iii) Traceability.\n(iv) Land\
    \ registration.\n(v) Food supply chain.\n(vi) Security and safety farms.\n(vii)\
    \ Agricultural product e-commerce.\nAs a formal defnition, the blockchain is a\
    \ distributed\nledger to share transactions or sensitive data across\nHindawi\n\
    Applied Computational Intelligence and So Computing\nVolume 2022, Article ID\
    \ 8011525, 23 pages\nhttps://doi.org/10.1155/2022/8011525\nuntrusted multiple\
    \ stockholders in a decentralized network.\nTe data are recorded in a sequential\
    \ chain of hash-linked\nblocks that facilitate the data distribution to be more\n\
    manageable than other traditional data storage formats. Te\nblocks are veriﬁed\
    \ and uploaded into the chain-like system\nby selected nodes via an agreed consensus\
    \ protocol. Tis\nconsensus mechanism allows all the parties to engage in the\n\
    monitoring process when adding data ﬂow. In addition, the\nduplicates of these\
    \ data are stored in all involved nodes to\nensure no tampering.\nTo make agricultural\
    \ applications more eﬃcient and\nreliable, we can divide blockchain applications\
    \ into four\ncategories. Te ﬁrst is the provenance of traceability and\nfood authenticity.\
    \ Te second category is smart agricultural\ndata management. Te third category\
    \ is trading ﬁnance in\nsupply chain management. Te last is the category of other\n\
    information management systems [3].\nIn agriculture, collecting data is frequently\
    \ prohibitively\nexpensive. Te blockchain provides a dependable source of\ntruth\
    \ about the state of crops, inventories, and contracts.\nFood provenance is tracked\
    \ using blockchain technology,\nwhich aids in the creation of trustworthy food\
    \ supply chains\nand develops trust between producers and consumers. It also\n\
    enables timely payments among stakeholders generated by\ndata changes when used\
    \ conjointly with smart contracts [4].\nMany characteristics of the blockchain\
    \ make it unique\nand promising for future industrial applications. For example,\n\
    blockchain is decentralized, transparent, immutable, irre-\nversible, autonomous,\
    \ open-source, ownership, provenance\n(authenticity and origin), and task automation.\n\
    Contract automation (smart contracting) eliminates the\nneed for a traditional\
    \ contract while improving security and\nlowering transaction costs. Smart contracts\
    \ are designed\nwith rules and actions that applied to all parties participating\n\
    in the transaction [5].\nE-agriculture, or smart farming, refers to building in-\n\
    novative methods to use modern information and com-\nmunication technologies (ICTs),\
    \ such as the Internet of\nTings (IoT), cloud computing, machine learning, big\
    \ data,\nand blockchain, to move towards more feasible agricultural\nand farming\
    \ practices. Blockchain technology in agriculture\nis gaining traction because\
    \ of its ability to move away from\nthe centralized approach that now governs\
    \ the farm value\nchain. Te new technologies have produced Agriculture 4.0\nor\
    \ smart farming [6].\nSmart contracts help manage the challenges in imple-\nmenting\
    \ the revenue sharing algorithm and improve pro-\nductivity, transparency, security,\
    \ traceability, and full\nintegration between supply chain levels.\nSmart contracts\
    \ are considered a ﬂexible type of plan-\nning because they provide cost metrics\
    \ that get used to\naccomplishing high productivity within plans for producing\n\
    and delivering products in the context of current market\nrestrictions and then\
    \ executing the established programs [7].\nAll innovation results from an attempt\
    \ to solve a\nproblem, and blockchain technology is no exception. After\nlearning\
    \ about the origins of blockchain technology, it is\nevident that blockchain solves\
    \ a ﬂaw in existing centralized\nagricultural systems.\nAt the security level,\
    \ we can never eliminate vulnera-\nbility; it can only be decreased and lessened.\
    \ When parties\nsought to establish an agreement, groups have always\nfunctioned\
    \ as third-party lawmakers to reduce suspicion.\nOne party expects fair goods,\
    \ while the other hopes to re-\nceive the negotiated cash. Even though the buyer\
    \ and seller\nhave no reason to trust one another, they complete the deal\nbecause\
    \ they trust the third party. Blockchain claimed to\novercome these issues by\
    \ helping apps develop in a\ndecentralized and safe way and ensuring some guaranteed\n\
    level. One of the critical reasons for blockchain’s widespread\nadoption was this.\
    \ Implementing blockchain and smart\ncontracts and proﬁting from their advantages\
    \ is a big mo-\ntivation to improve the agricultural system model and make\nit\
    \ more secure.\nOn the blockchain, all transactions are securely recor-\nded.\
    \ Te controller may use this technology with smart\ncontracts and the Internet\
    \ of Tings to control the supply\nchain management, store farm data, and manage\
    \ identity,\namong other things. On the blockchain, personal data are\nmasked\
    \ and need permission control to access them. In-\nformation gets stored over\
    \ multiple computers (distributed\nledger) rather than on a single server; this\
    \ system makes it\nharder for hackers to alter data. By maintaining a track audit,\n\
    blockchain can instantaneously trace commodities or goods,\nassisting in delivering\
    \ proof and revealing weaknesses in any\nsupply chain. Furthermore, smart contracts\
    \ will automate\ntransactions and enhance eﬃciency. Smart contracts elim-\ninate\
    \ the dependence on human intervention and ignore the\nreliance on third parties.\n\
    In our architectural scheme, IoT will play a role of\ncollecting the environmental\
    \ data. Smart contracts will play\nthe role of data science analyzer, which means\
    \ dealing with\ndata for actionable insights, while blockchain records and\nvalidates\
    \ data. Tis scheme uses algorithms created to\ngovern interactions with various\
    \ data segments. Te next\nstep of this system is to create a blockchain system\
    \ auto-\nmated by smart contracts and make the correct predictions\nafter analyzing\
    \ the collected data. Tis project will guarantee\nthe enhancement of farm production.\
    \ Te application\nplatform will allow all the participants on the network\n(providers,\
    \ farmers, customers, and distributors) to visualize\ndata and trace product growth.\
    \ Blockchain validates data\nusing a decentralized consensus algorithm and encryption,\n\
    making it nearly hard to alter owing to the massive amount\nof computer power\
    \ needed. As previously stated, block-\nchain’s validated data are organized,\
    \ comprehensive, and\nimmutable.\nWhen we talk about the tracked product, we discuss\
    \ the\ncollected environmental data in which the goods have\ngrown. Te network\
    \ members will get all the growth hu-\nmidity, temperature, light, and soil pH\
    \ details. Tey have\ncode that says “If x event occurs, perform y action.” Te\n\
    participant will receive the updated data every period. When\nthe customer knows\
    \ all data about the product that he will\nbuy, he will be satisﬁed with all this\
    \ shared information and\nglad to be a part of this commercial deal. Also, when\
    \ the\nfarmer controls all the necessary conditions to grow the\noptimum quality,\
    \ he will build the conﬁdence to share\n2\nApplied Computational Intelligence\
    \ and Soft Computing\ninformation with customers and gain their trust. Another\n\
    example of an advantage for the supply chain management\nprovided by the scheme\
    \ is allocating goods arrived and\nwhich container is in it. Blockchain allows\
    \ tracking and\nstoring information such as order receipts, product status,\n\
    shipment details, and regulatory information to increase\ntransparency and customer\
    \ satisfaction.\nSmart contracts are composed of codes that analyze\ncollected\
    \ data and display to members if the sensor results\nare on the optimum values.\
    \ Tese contracts help track the\nproduct supply chain by keeping eyes on product\
    \ identiﬁ-\ncation and detecting the member that holds the product.\nFurthermore,\
    \ the block cannot store the data until it is\nveriﬁed and validated by control\
    \ members, so the case in\nwhich an entity can be malicious is signiﬁcantly minimized\n\
    compared to other centralized systems. In general, the truth\nis that blockchain\
    \ systems and smart contracts can perform\nmiddleman duties independently.\nConcerning\
    \ the prospective research gap and research\nchallenge, we noticed that many researchers\
    \ built a scheme\nthat consists of a single blockchain that stores data about\n\
    farms, entities, products, ﬁnancial business, deals, and trades\nall in one distributed\
    \ ledger. We reckon that the data in our\nsystem need to be more structured. Te\
    \ research challenge is\nplacing data related to individuals into “the user block-\n\
    chain,” data describing products into “the product info\nblockchain,” and data\
    \ related to deals between entities into\n“the transaction blockchain.”\nAlso,\
    \ the relationship between entities builds on trust,\nand each participant knows\
    \ their responsibilities and rights.\nOn the other hand, we have seen that some\
    \ researchers do\nnot automate speciﬁc tasks, such as detecting environmental\n\
    sensor data without intervention. So after doing some\nstudies, we have decided\
    \ to work with smart contracts as a\nblockchain companion.\nGenerally speaking,\
    \ the blockchain system aids by taking\nadvantage of its solid security-protecting\
    \ approach (simul-\ntaneously dispatching the last version of data to all network\n\
    members). Since agricultural data are sensitive and essential,\nthe blockchain\
    \ helps to entirely transform how the infor-\nmation is seen by adding an end-to-end\
    \ encrypted system to\nthe blocks. It is important to remember that distributed\
    \ data\nguard against fraud and illegal behavior. Participants in the\nnetwork\
    \ get secured data, and their personal information is\nanonymized. Attackers cannot\
    \ access or alter the data be-\ncause the information is not kept on a single\
    \ server and the\nvalidated blocks have a very minimal possibility of being\n\
    reversed.\nBecause\nblockchain\nemploys\na\ndistributed\nledger,\ntransactions\
    \ are recorded identically in many places without\nthe need for synchronization,\
    \ and guaranteeing transpar-\nency is another signiﬁcant beneﬁt (improve speed\
    \ pro-\ncessing). Additionally, this method aids in data tracking for\nanalysis\
    \ and reveals weak links in any supply chain. Smart\ncontracts automate transactions,\
    \ speeding up processing\ntime and minimizing human involvement. In this study,\
    \ the\nsmart contract helps analyze the values, verify environ-\nmental data,\
    \ and identify the crops with optimal growth\nstatus.\nIn the following sections,\
    \ we will discuss how we can\ncombine these technologies to create a robust scheme.\
    \ Of\ncourse, the adoption of IoT is always advantageous since the\ndata collected\
    \ from these sensors are more exact and in real\ntime. All these elements are\
    \ unexplored areas, limit the scope,\nand deﬁne the conceptual boundaries in our\
    \ research ﬁeld,\nwhich will boost our chances of having a better research study.\n\
    We will provide further comparisons between the\nproposed and past approaches.\
    \ Previous work will be listed\nin the upcoming paragraphs for sure. Still, the\
    \ main point we\nare trying to convey is that the smart contracts developed in\n\
    our architecture are innovative and have the potential to\nobtain sensors’ values\
    \ automatically, such as the optimum\ntemperature, humidity, light composure,\
    \ and soil pH values.\nTe components of the smart contract’s Solidity script are\n\
    considered the source of the idea’s novelty. Besides, decent\ndata structure organization\
    \ on the blockchain layer con-\nstantly improves data management. Tese details\
    \ will guide\nus to generate new observations or insights based on pre-\ndiction\
    \ while incorporating other innovative technologies\nlike artiﬁcial intelligence.\n\
    1.1. Comparison between Existing Agricultural Schemes and\nthe Proposed Model.\
    \ Figure 1 shows the diﬀerence between\nthe existing agriculture supply chain\
    \ (using the centralized\ndatabase), a standard blockchain-based agricultural\
    \ supply\nchain, and the proposed blockchain-based agrarian architecture.\nTe\
    \ key reason we chose to work with blockchain and\nincorporate its features into\
    \ our architecture was the absence\nof need for third parties. Additionally, the\
    \ control over a\ndecentralized ledger stays with the user rather than a cen-\n\
    tralized authority.\nAnother beneﬁt of blockchain is that there are no data\n\
    breaches and hacks. However, the scalability of a centralized\nsystem with a single\
    \ server is limited.\nImplementing a blockchain system protects data so it\ncannot\
    \ be changed or erased. But the recorded data in the\nstandard blockchain architecture\
    \ are not well organized, and\nmany previous works did not use smart contracts,\
    \ which\nfacilitate some operations and tasks without the involvement\nof network\
    \ participants.\nTe suggested model includes several blockchain ledgers\nthat\
    \ divide the data into user information, agri product\ninformation, and transaction\
    \ information. Additionally,\nsmart contracts are considered a signiﬁcant factor\
    \ in this\nmodel, which automate many tasks.\nMost blockchain systems implement\
    \ smart contracts\nprovided by the Ethereum platform and its extension\nplatform,\
    \ Quorum: they compile using Solidity or Serpent\ninto Ethereum virtual machine\
    \ (EVM) bytecodes. Hyper-\nledger Fabric and Sawtooth, the most active platforms\
    \ in the\nHyperledger family, use Golong, Java, Python, and Java-\nScript as the\
    \ major programming languages for smart\ncontract development [3].\n1.2. Related\
    \ Work. Te only way to verify and validate\ntransactions in the system is to use\
    \ IoT devices that are\nphysical consortium members. With the RAFT consensus\n\
    Applied Computational Intelligence and Soft Computing\n3\nalgorithm, the proposed\
    \ blockchain platform becomes not\nonly energy-eﬃcient but also faster and scalable\
    \ that can\nrecord thousands of conﬁrmed transactions per second\nacross multiple\
    \ ledgers. Tird, the blockchain with the RAFT\nconsensus mechanism provides a\
    \ transparent, secure, and\ntrusted platform for faster exchange of all types\
    \ of services\namong stakeholders. Te RAFT consensus mechanism\nguarantees integrity\
    \ if more than 50% of transacting nodes\nare honest. Several consensus algorithms\
    \ are proposed for\nreaching a consensus among several action nodes, including\n\
    proof of work (PoW), proof of stake (PoS), practical Byz-\nantine fault tolerance\
    \ (PBFT), and RAFT. Te public\nblockchain generally uses PoW and PoS, although\
    \ they lack\nthe speed of conﬁrmation. As a decision, our consensus\nmechanism\
    \ decreases the use of the blockchain to connect\nvarious agri-based IoTdevices.\
    \ Te RAFTconsensus method\nis more convenient to employ in a private blockchain\
    \ [8].\n“A secure ﬁsh farm platform based on blockchain for\nagriculture data\
    \ integrity” research [9] mentioned that smart\nfarming necessitates scalable\
    \ security. Terefore, various\nstudies have focused on developing new paradigms\
    \ based on\nblockchains.\nTe technology of SkuChain focuses on establishing\n\
    direct contacts while also increasing trust in the supply\nchain. More than half\
    \ of blockchain discussions are around\nretail and agricultural input and output\
    \ tracking.\nWe can get agriculture data from many sources, such as\nsoil sensors,\
    \ weather satellites, drones, and farm equipment.\nIt can be saved in a distributed\
    \ store using the blockchain\nwith secure long-term agriculture progress.\nTe\
    \ distributed ledger records all of the activities of the\nfarm. It is tied to\
    \ the data collected by agricultural sensors.\nFurthermore, smart contracts are\
    \ used to automate agri-\nculture data processing, including outlier ﬁltering,\
    \ before\ngenerating records in the ledger. Smart contracts could\nactivate and\
    \ execute particular actions based on data\nrecorded in the blockchain.\nTe blockchain\
    \ has access control that determines who\ngets permission to reach network resources\
    \ or perform\nactions on them.\nTe blockchain is a continuously expanding collection\
    \ of\ndocuments known as blocks. A block often contained the\nhash value of the\
    \ preceding block, a timestamp, transaction\ndata, and much other information.\
    \ It is impossible to tamper\nwith the data without breaking the hash links. Te\
    \ block-\nchain network contains many peers, each of which has a\nsmart contract.\n\
    A block must include signatures from a certain number\nof people. Tis technology\
    \ eliminates the risk of data dis-\nclosure and guarantees that no unauthorized\
    \ user can\ntamper with a transaction on the blockchain.\nBlockchain\nfunctions\n\
    are\ntransaction\nveriﬁcation,\nidentity validation, and peer-to-peer communication.\
    \ Also,\nsome network services are available as web APIs, allowing\nexternal systems\
    \ or client apps to connect.\nTe smart contract is distributed across a blockchain\n\
    network in a single package. Once the contract is deployed,\nall of the smart\
    \ contracts included inside it are available to\napplications.\nTe smart contract\
    \ deﬁnes a collection of transactions.\nParticipants in the blockchain network\
    \ (for example, a\nfarmer) or assets (anything of value) are used as resources\n\
    (for example, water level data). Te supported operations are\nCREATE, READ, UPDATE,\
    \ and DELETE.\n(i) Te water level sensor can CREATE and Collect the\nWater Level\
    \ transaction.\n(ii) Te farm owner can CREATE many transactions\nsuch as Predict\
    \ Water Level, Energy Consumption,\nUser Management, and Sensor Management.\n\
    The majority of previous works did not own smart\ncontracts, hence we can observe\
    \ a lack of automation\nin various systems. Additionally, we can see more\nhuman\
    \ intervention than the suggested architecture.\nMost works are based on single\
    \ blockchain as a\ndistributed ledger. The BC is quite disorganized and\nmight\
    \ be expensive given the degree of resources\nspent because it contains all of\
    \ the data that has been\nrecorded about all of the members, the farm, and the\n\
    products.\nSensors\nThe Smart contract on the suggested system helps to\nautomate\
    \ various tasks, such as handling the recorded\ndata that has been received from\
    \ the sensors and\ndetermining whether the values are at their optimum\nlevels.The\
    \ Smart contract can organize the\ndistribution process and many other activities.\n\
    Sensors\nThe proposed system contains multiple blockchain \nledgers for more of\
    \ data organization\nUser Information BC : includes all data about\nnetwork members\
    \ like farmers,\ndistributors, costumers...\nAgri Product Information BC : includes\
    \ all data about\nthe farm and the Agri products.\nTransaction Information BC\
    \ : includes every piece of\ninter mediate data, including transactional business,\n\
    logistical data, and other aggregated data.\nTemperature, humidity, light exposure,\
    \ soil pH\nSensors\nThe data get stored in centralized ledger the\nopposite of\
    \ decentralized ledger\n(which is also the opposite of\nblockchain structure).\n\
    Agricultural supply chain with centralized database\nStandard Blockchain-based\
    \ Agricultural supply chain \nThe proposed Blockchain-based Agricultural supply\n\
    Figure 1: Comparison between existing agricultural schemes and the proposed model.\n\
    4\nApplied Computational Intelligence and Soft Computing\n(iii) Te water pump\
    \ has access to ALL operations for\nthe Control Water Pump transaction.\n(iv)\
    \ Te farm owner and the farmer can READ many\ntransactions such as Water Level\
    \ History, Predicted\nWater Level History, Energy Consumption History,\nand Water\
    \ Pump History.\nTe following research represents the article “Blockchain\nand\
    \ smart contract for IoTenabled smart agriculture” [10]. It\nmentioned that seed\
    \ storage, supply stores, producers,\ndistributors, wholesalers, and retailers\
    \ are the main actors in\nthe system. In addition, the contract deployer is another\n\
    actor here. Te interaction method between the actors and\nthe system is accomplished\
    \ through several components.\nTe sections below demonstrate the role of each\
    \ actor.\n(i) Contract Owner. Te contract owner has more\ncontrol over the system\
    \ than anyone else. Te\nowner enters the contract into the system and\nchecks\
    \ to see if the rule gets correctly implemented.\n(ii) Seed Storage. Seed and\
    \ other agricultural products\nare stored in the seed storage.\n(iii) Supply Shops.\
    \ Tey collect and sell a signiﬁcant\nquantity of seed, fertilizer, and other agricultural\n\
    materials to growers.\n(iv) Producers. Te farmers are considered the most\nbasic\
    \ rung in production. Tey are in charge of all\ntasks\nrelating\nto\nagricultural\n\
    planting\nand\nharvesting.\n(v) Distributors. Distributors are in charge of safely\n\
    transporting crops from one location to another.\n(vi) Wholesalers. Wholesalers\
    \ buy a decent quantity of\ncrops and agriproducts and resell them to retailers.\n\
    (vii) Retailers. Retailers buy commodities and products\nfrom wholesalers and\
    \ sell them to consumers on a\nsmall scale in open markets.\n(viii) Consumers.\
    \ Tey are a large group of individuals\nthat rely on agricultural products. Tey\
    \ play a big\npart in the system by constantly creating demand.\nFarMarketplace\
    \ is a novel digital marketplace [6]. It fully\nexploits the advantages of blockchain\
    \ capabilities by pro-\nposing smart contract templates between farmers, con-\n\
    sumers,\nand deliverers. FarMarketplace\nis considered\ninnovative in three aspects.\n\
    FarMarketplace oﬀers three main smart contracts coded in\nSolidity programming\
    \ language. Te ﬁrst smart contract is\n“atomContract.sol.” In this contract, the\
    \ user buys the contract.\nTe funds were added to the balance. Te buyer gets identiﬁed.\n\
    After that, the buyer receives the object of the contract, and the\nseller receives\
    \ the money.\nTe second smart contract is coded in Solidity pro-\ngramming language.\
    \ Tis ﬁle creates the smart contracts, sets\ntheir value, and monitors their status.\
    \ Tis ﬁle can also\nmodify the accessibility from available to unavailable or\
    \ vice\nversa. Some methods determine if the conditions are met\nand, as a result,\
    \ generate an error.\nTe second smart contract is “ownable.sol.”\nTe ownable contract\
    \ has an owner address and provides\nsimple authorization control functions. Tis\
    \ system makes\nuser permissions easier to implement. Te ownable con-\nstructor\
    \ sets the original owner of the contract to the sender\naccount. Tis ﬁle also\
    \ can let the current owner transfer\ncontrol of the smart contract to a new owner.\n\
    Te article “Securing parked vehicle assisted fog com-\nputing with blockchain\
    \ and optimal smart contract design”\n[11] mentioned that the blockchain provides\
    \ complete se-\ncurity for parked vehicle assisted fog computing (PVFC). As\n\
    a result, PVFChain, a speciﬁc blockchain system for com-\nputation oﬄoading, is\
    \ established to record and conﬁrm\ncrucial information about requesters and performers.\n\
    Without any third parties, the decentralized PVFC is built\nby relying on a majority\
    \ of consensus nodes. Smart contracts\norganize the posting of requests, the completion\
    \ of workloads,\nthe grading of tasks, and the distribution of rewards.\nAny registered\
    \ entity to PVFChain is controlled to follow\nthe contact-based agreement via\
    \ smart contract execution.\nDue to the inbuilt transparency and accountability\
    \ of smart\ncontracts, fraudulent requesters and performers are exposed\ncompletely.\
    \ Accessible records regarding the activities of\nrequesters are tamper-resistant\
    \ because of data auditing.\nFinally, PVFChain protects against network vulnerabilities\n\
    by supporting identity authentication, request validation,\ncomputation veriﬁcation,\
    \ and reward integrity.\nTe feasibility of PVFChain depends on the identiﬁca-\n\
    tion of critical network entities. Requester, performer, and\nminer are the three\
    \ main network entities.\nWhen a mobile car runs a compute-intensive application\n\
    on the road, it sends a computing job to PVFChain. Tis\nprevious operation triggers\
    \ a smart contract. PVFChain\nsystem transmits a task to a responsible administrative\
    \ agent.\nAt the vehicular network edge, the agent organizes the\noﬄoading service.\
    \ In the PVFC environment, the agent\nlooks for a fog server near a parking lot\
    \ and uses that to\ncomplete cooperative tasks.\nTere are various business platforms\
    \ available nowadays.\nFor example, Ethereum is a common platform that facilitates\n\
    smart contracts on the blockchain. On the PVFChain, each\nsmart contract has its\
    \ address, allowing us to describe business\nlogic for constraining network behaviors\
    \ in oﬄoading activities.\nIn summary, the operations of the smart contract are\
    \ as\nfollows:\nStep 1. Te requester sends a computing task containing\ntask requirements\
    \ and a deposit to PVFChain. After that,\nthe assignment gets allocated to a particularized\
    \ agent.\nStep 2. Trough the clients, performers can see the\noﬄoading requests\
    \ and the work criteria.\nStep 3. Some performers respond positively to the\n\
    requests and upload basic task execution information\nwith their replies.\nApplied\
    \ Computational Intelligence and Soft Computing\n5\nStep 4. Te agent is authorized\
    \ to recognize and pick\nsuitable performances based on prior knowledge. Te\n\
    agent also assigns various rewards for performers.\nStep 5. Te client of the requester\
    \ oﬀers attractive\ncompensation to the performers.\nStep 6. Te performers select\
    \ a portion of the workload\nto process based on the rewards oﬀered, and the agent\n\
    provides the necessary input data for task execution.\nStep 7. Te actors distribute\
    \ computing resources to\nobtain output outcomes. Te smart contract contains\n\
    their identities, node types, a total of processing\nworkloads, and output results.\n\
    Step 8. A speciﬁc transaction in the smart contract\nauthorizes miners and analyzes\
    \ the output results. Te\nminers choose suitable third-party methods to present\n\
    evaluation ﬁndings.\nStep 9. Te agent collects all the output results and\naggregates\
    \ them into a ﬁnal result before sending it to\nthe requester.\nStep 10. Finally,\
    \ the requester oﬀers additional pay-\nments. Qualiﬁed performers get promising\
    \ prizes.\nTe article “Smart contract-based agricultural food\nsupply chain traceability”\
    \ [12] suggests that tracking and\nexecuting transactions in the agricultural\
    \ food supply chain\nnecessitates applying the Hyperledger Fabric to establish\n\
    consortium chains and smart contracts called Chaincode.\nTe entire process of\
    \ the agricultural food supply chain\nfrom farm to fork is as follows:\n(i) Agricultural\
    \ Bureau. It is an entity that keeps track\nof farmers, seed information, plot\
    \ information, and\nyield data to assure the accuracy of source data. Te\ndata\
    \ are saved in IPFS, and the blockchain con-\nserves the hash value.\n(ii) Farmer.\
    \ He is in charge of sowing crops, utilizing\nsensors to monitor and record crop\
    \ growth in the\ngrowing environment, such as water, air, sunlight,\nand soil\
    \ quality. Te farmer saves the information\nabout the crop growth process in IPFS.\
    \ Further-\nmore, the farmer is responsible for generating\nsmart contracts and\
    \ storing IPFS data hashes.\n(iii) Processor. Te farmer gathers the crop and sells\
    \ it to\nthe processor, who transforms the raw crops into\nproducts for the ﬁnal\
    \ customer and records batch\ninformation, quantity, and other information in\n\
    IPFS. Te data hash is saved in the blockchain, and\nthe data label is created\
    \ and put on the product\npackage.\n(iv) Quality Supervision Bureau. It is in\
    \ charge of\noverseeing qualities and conducting mandatory\ninspections of manufacturing\
    \ companies. All the\ntasks help respect regulations concerning stan-\ndardization\
    \ and quality and penalize rule violators.\n(v) Distributor. Before reaching the\
    \ retailer, the ﬁn-\nished product may go through several tiers of\ndistribution.\
    \ Te distributor is in charge of storing\nand selling processed agricultural products\
    \ to re-\ntailers in batches. Company information, product\nselling times, prices,\
    \ and other data are kept in\nIPFS. Te hash value is stored in the blockchain,\n\
    just as it is for the quality supervision bureau, to\nensure that the succeeding\
    \ data are unchangeable.\n(vi) Retailer. He purchases products from distributors\n\
    and then sells them to consumers in modest\namounts. IPFS stores on the blockchain\
    \ some basic\ninformation about the retailer. For example, it\nstores the time\
    \ of sale, the quantity sold, and the\nhash value.\n(vii) Consumers. Tese are\
    \ the people who buy and eat\nthe ﬁnalized agricultural food, and they can get\
    \ the\ncomplete supply chain information about it by\nscanning the barcode, RFID,\
    \ or QR code on the\nproduct package, which makes tracking food easier.\nTe smart\
    \ contracts interact with the blockchain par-\nticipants. Our network participants\
    \ and their objectives are\nlisted in the “Blockchain-based soybean traceability\
    \ in ag-\nricultural supply chain” research [13].\n(i) Seed company maintains\
    \ local records and pro-\nduces seeds. Tese seeds get labeled by the EAN-\nUCC\
    \ global standard.\n(ii) Farmer purchases recognized seeds from seed\ncompanies,\
    \ harvests the crop, and sets up the smart\ncontract. Data are also saved on the\
    \ decentralized\nﬁle system IPFS by the farmer.\n(iii) Grain elevator: a grain\
    \ elevator is an agricultural\ninstitution. Tese organizations decide the quality\n\
    of the product by managing the sensing data and\nstorage duration of the harvested\
    \ crop.\n(iv) Grain processor purchases grain from the elevator,\nreﬁnes it, removes\
    \ foreign matter, and produces the\nﬁnished product.\n(v) Distributor is in charge\
    \ of the product distribution\nprocedure.\n(vi) Retailer purchases traceable items\
    \ from manufac-\nturers and sells them in small quantities to\nconsumers.\n(vii)\
    \ Customer is the person who uses the product and\nconsumes it.\nAny smart contract\
    \ code can be handled using the\nEthereum virtual machine (EVM). Tis EVM is in\
    \ charge of\ncomprehending every command code and ensuring that the\nsmart contract\
    \ is executed on all nodes.\nTe research employs Ganache as a local Ethereum test\n\
    network rather than the whole Ethereum network. Te\npurpose of this movement is\
    \ to make the test stage easier.\nTe following are some of the most signiﬁcant\
    \ smart\nagriculture notions:\n(i) Sensors and surveillance cameras.\n(ii) Te\
    \ network participants like farmers, suppliers,\ncustomers, and so on.\n6\nApplied\
    \ Computational Intelligence and Soft Computing\n(iii) Computing equipment like\
    \ microcontroller systems\nand cloud computing.\n(iv) Applications and libraries\
    \ include mobile device\napps, machine-to-machine communication, API,\nand a blockchain\
    \ web app.\nTe agricultural zone is equipped with an IoTcontroller,\nsensors,\
    \ and cameras. Te controller will encrypt the en-\nvironmental (sensing) data\
    \ before sending them to the\nblockchain network. At this point, the controller\
    \ will use\nmachine-to-machine communication to connect with the\nblockchain network\
    \ [14].\nPrecise measurement is critical in agriculture. Te soil\ntype and the\
    \ climate inﬂuence the monitored metrics on a\nﬁeld. Te following are a few of\
    \ them [15]:\n(i) Air Temperature and Humidity. Seed germination\ngets relative\
    \ to the optimum temperature because\nthe phases of biochemical mechanisms depend\
    \ on\nenzyme activation and hydration. Also, humidity\ngets deﬁned as the water\
    \ vapor pressure in moist\nair.\n(ii) Soil Temperature and Humidity. As a carbon\
    \ storage\ntank, the soil is a considerable component in irri-\ngation scheduling.\
    \ Te watering period is deter-\nmined\nby\nthe\ndriblet\nirrigation\ntechnology\n\
    employed or the techniques of deep wells.\n(iii) Te fundamental goal of this type\
    \ of irrigation is to\nimprove plant water quality standards. Sunlight and\nhumidity\
    \ have a signiﬁcant impact on soil tem-\nperature. Te temperature of the soil\
    \ is generally\nhigher than that of the air.\n(iv) Evapotranspiration. It is a\
    \ component of the hy-\ndrologic process that is the most elemental. Con-\nsumptive\
    \ usage includes plant transpiration and\nwater evaporation from the soil.\nAgriOnBlock\
    \ [16] ensures non-repudiation and con-\nﬁrms the authenticity by encrypting and\
    \ decrypting the\ntransaction with the private key and public key of a cryp-\n\
    tography mechanism like RSA.\n(1) When a retailer wishes to get a product from\
    \ the\nwarehouse, it communicates with AgriOnBlock and\nthe bank, specifying the\
    \ identity product, the item\ncode, the quantity, and the rate per unit.\n(2)\
    \ Te retailer has adequate funds, and its credentials\nare veriﬁed. Te required\
    \ amount gets transferred\nfrom the account of the retailer to AgriOnBlock.\n\
    (3) Te bank informs AgriOnBlock that the payment\ntransaction was successful.\n\
    (4) Once AgriOnBlock receives the proof of payment\nfrom the bank, it directly\
    \ notiﬁes the warehouse to\ntransfer the requested item in the stated amount to\n\
    the retailer.\n(5) Te transaction gets recorded in the AgriOnBlock.\nTe steps\
    \ for the interactions between some agricultural\nsupply chain entities are as\
    \ follows:\n(1) Te\nfarmer\nlodges\nan\ninsurance\nclaim\nto\nAgriOnBlock.\n(2)\
    \ AgriOnBlock delivers the information to the in-\nsurance carrier when it gets\
    \ veriﬁed.\n(3) Te insurance company sends the claim to a surveyor\nfor physical\
    \ inspection.\n(4) Te surveyor physically visits the site to do the\nsurvey.\n\
    (5) Te surveyor submits a report to the insurance\ncompany, accompanied by the\
    \ amount of the in-\nsurance claim for payment.\n(6) Te insurance company notiﬁes\
    \ the bank to reim-\nburse the farmer after obtaining the report from\nsurveyor.\n\
    (7) Te bank pays the farmer.\n(8) Te insurance company informs AgriOnBlock of\
    \ the\ntransaction.\nSmart contract algorithm for AgriOnBlock supply chain\nmanagement:\n\
    Step 1. If the farmer does not have the ready harvest,\nstay on step 1; otherwise,\
    \ proceed to step 2.\nStep 2. If the farmer prepares a crop invoice and sends\
    \ it\nto the retailer, the request to pick up the crop gets\nforwarded to the\
    \ shipping company.\nStep 3. If the retailer conﬁrms the invoice received from\n\
    the farmer, it will transmit a conﬁrmation to the\nshipping company (and proceed\
    \ to phase 4); otherwise,\nit will go to the error step (error code = 1).\nStep\
    \ 4. Te shipping company picks up the produce\nfrom the farmer and delivers it\
    \ to the retailer and then\nupdates the transaction on the AgriOnBlock after re-\n\
    ceiving the invoice from the farmer and conﬁrmation\nfrom the retailer.\nStep\
    \ 5. If the transaction updated by the shipping\ncompany on AgriOnBlock is veriﬁed,\
    \ the smart con-\ntract between the retailer and the farmer gets executed\nto\
    \ inform the bank to transfer the amount from the\nretailer to the farmer, and\
    \ the transaction gets updated\non AgriOnBlock; otherwise, go to error step (error\n\
    code = 2).\nStep 6. Te retailer creates a crop invoice and sends it to\nthe distributor.\n\
    Step 7. If the distributor conﬁrms the invoice sent by the\nretailer, he submits\
    \ a request to the shipping company,\nand then the transaction gets added to the\
    \ AgriOn-\nBlock. Otherwise, you will be directed to the error step\n(error code\
    \ = 3).\nStep 8. If the shipping company validates the bill received\nfrom the\
    \ distributor, the shipping company produces the\ncrop from the retailer to the\
    \ distributor and updates the\ntransaction on the AgriOnBlock. If the shipping\
    \ com-\npany does not validate the invoice received from the\ndistributor, go\
    \ to the error step (error code = 4).\nStep 9. Go to step 11.\nApplied Computational\
    \ Intelligence and Soft Computing\n7\nStep 10. Error: if the error code is 1,\
    \ the retailer informs\nthe farmer of the reasons for refusing to accept the\n\
    invoice. If the problem code is 2, the retailer and the\nfarmer notify about a\
    \ failed bank transaction. If the\nproblem number is 3, the distributor informs\
    \ the re-\ntailer of the reasons for not accepting the invoice. Fi-\nnally, if\
    \ the problem code is 4, the shipping company\ncontacts the distributor about\
    \ the reasons for not ap-\nproving the invoice.\nStep 11. Stop.\n“Blockchain and\
    \ edge computing technology enabling\norganic agricultural supply chain: a framework\
    \ solution to\ntrust crisis” research proposed that the physical layer, edge\n\
    data layer, smart contract layer, cloud/blockchain layer, and\nuser layer are\
    \ the ﬁve levels that make up the concept. Tis\nviewpoint is from the standpoint\
    \ of data ﬂow [17].\n(i) Physical Layer. A smart contract gets placed in this\n\
    layer, consisting of numerous sensors, controllers,\nand IoT devices. Tese devices\
    \ are either encapsu-\nlated with the smart contract address of the client or\n\
    discovered by a discovery service. Furthermore,\nnumerous wireless protocols such\
    \ as Wi-Fi, Zigbee,\nor LoRa are commonly used in agricultural farms.\n(ii) Edge\
    \ Data Layer. Te edge nodes make up this layer\nfor deploying containerized microservices,\
    \ data\ninfrastructure, IoT devices, and QoS control. Te\nedge data layer takes\
    \ data from the physical layer. It\nanalyzes, compresses, transforms, and splits\
    \ the data\ninto local and cloud ones. Te data rights or the\nidentiﬁcation of\
    \ the data creator is initially com-\npleted by this layer. As a result, this\
    \ layer enables oﬀ-\nchain veriﬁcation of tracking data from a cloud-\nbased blockchain.\
    \ Local servers are in charge of\nstoring oﬀ-chain data. Tis testing overcomes\
    \ the\nblockchain\nimplementation\nproblem,\nprivacy,\ntransmission bandwidth,\
    \ energy usage, and latency,\nto name a few.\n(iii) Smart Contract Layer. Tis\
    \ layer is responsible for\nassembling a group of smart contracts. It enables\n\
    eﬀective, distributed, and heavily automated OASC\nworkﬂows. Smart law contracts,\
    \ decentralized au-\ntonomous organizations (DAO), and application\nlogic contracts\
    \ are included in this tier of smart\ncontracts, which go beyond the transfer\
    \ of simple\ncurrency values. Te law contracts specify strict legal\nremedies\
    \ to prevent contracting parties from car-\nrying out their obligations. DAO is\
    \ a blockchain-\nbased community that can design a list of norms\nexpressed in\
    \ smart contract code. Each participant\nshould respect these rules and have the\
    \ right to seek\nrecourse if the program gets stopped.\n(iv) Cloud/Blockchain\
    \ Layer. Tis layer combines a cloud\nstorage repository with a blockchain-like\
    \ ledger that\nsupports three types of blockchains: public, alliance,\nand private.\
    \ Tis layer takes advantage of the alliance\nchain to include all stakeholders\
    \ in OASCs. Tis type\nof chain combines public and private chains. Cloud/\nblockchain\
    \ layer introduces an InterPlanetary File\nSystem (IPFS) and BigchainDB. IPFS\
    \ is new content-\naddressable storage. On each computer, the same ﬁle\nhas the\
    \ same name, and any change in the data ﬁle\ncauses the modiﬁcation in the ﬁle\
    \ name. Due to data\nstorage constraints, the process only keeps the hash\nvalue\
    \ of the ﬁle content in the cloud blockchain, and\nthe ﬁle itself gets saved at\
    \ the edge. Tis layer also\nutilized BigchainDB, a data storage and search en-\n\
    gine, to suit the query speciﬁcations of ﬁles.\n(v) User Layer. Te user layer\
    \ is the main gateway for\nanyone interested in tracking organic products or\n\
    maintaining OASCs. Te blockchain ecosystem gets\nlinked to this layer via the\
    \ blockchain bridge, which\nresembles an Ethereum bridge Metamask and is\navailable\
    \ as a browser add-on. Furthermore, this\nlayer oﬀers a variety of APIs.\nTe article\
    \ “Blockchain for Internet of Tings: a survey”\n[18] mentioned that the Internet\
    \ of Tings (IoT) is a sig-\nniﬁcant part of this revolutionary transformation\
    \ by\nbridging the gap between the physical industrial system and\nthe cyber-physical\
    \ system (CPS). Because of its increased\nconnectivity, safety, protection, dependability,\
    \ and ﬂexibil-\nity, blockchain is essentially the ideal companion to IoT.\nIoT\
    \ devices are capable to interact with one another\nwithout the assistance of\
    \ a reliable third party. Smart\ncontracts can help us reach this ﬂexibility.\
    \ Contract pro-\nvisions included in smart contracts, in particular, will be\n\
    done automatically in a speciﬁc circumstance.\nMany IoT devices make up the perception\
    \ layer, such as\nsensors, QR code tags, RFID tags, smart meters, actuators,\n\
    regulators, and other wireless tools. Tese gadgets can\nperceive and gather information\
    \ about the zone.\nIoT gateways, Wi-Fi access points, small base stations,\nand\
    \ macro-base stations may link with various wireless\nsensors, RFIDs, regulators,\
    \ and other tags to establish an\nindustrial network at the communication layer.\
    \ Diﬀerent\ncommunication protocols facilitate the connection, in-\ncluding Bluetooth,\
    \ low-power wireless personal area net-\nwork (LoW-PAN), near-ﬁeld communication,\
    \ and wireless\nhighway addressable remote transducers.\nConcerning traceability,\
    \ a timestamp gets appended to\neach transaction stored on the blockchain. After\
    \ examining\nthe blockchain data with matching timestamps, users may\nquickly\
    \ check and track the provenance of the last data.\nIntegrating IoT systems with\
    \ blockchain technologies\n(such as smart contracts) can strengthen the network’s\
    \ se-\ncurity by continuously refreshing IoT device ﬁrmware to ﬁx\nsecurity ﬂaws.\
    \ However, developing smart contracts is dy-\nnamic and involves several agreement\
    \ cycles. Meanwhile, it\nalso involves several groups, including stakeholders,\
    \ regu-\nlators, and software developers.\nSoftware-deﬁned networking (SDN) technology\
    \ can\ndeliver distributed IoTwith adaptability. Networks may now\nbe more agile\
    \ and ﬂexible to serve diﬀerent application and\nperformance needs thanks to SDN\
    \ technology and network\nfunction visualization (NFV). Te mixture of blockchain\
    \ and\n8\nApplied Computational Intelligence and Soft Computing\nSDN can eliminate\
    \ the drawbacks. However, various con-\nditions in the hybrid environment are\
    \ required to enhance\nand deploy network and computer assets.\nOne of China’s\
    \ famous supply chain architectures im-\nplements both RFID and blockchain. Data\
    \ on the food\nsupply chain’s tracing are maintained by this approach. Te\nresearch\
    \ demonstrates how blockchain might sweeten food\nquality by making traceability\
    \ of goods available. Also,\nsituations showed that customers could follow the\
    \ entire\nproduct manufacturing process if blockchain formed in the\nfood supply\
    \ chain.\nTe research “Te performance evaluation of blockchain-\nbased security\
    \ and privacy systems for the Internet of Tings:\na tutorial” [19] discussed security\
    \ levels and how we can\nimplement blockchain systems and IoT in one architecture.\n\
    Te validator gathers new transactions, checks that they\nadhere to the rules,\
    \ and then adds them to the block to\nprepare it. After several durations, the\
    \ network participants\ncan no longer change the information stored in the blocks.\n\
    When a transaction appears in a validated block, it is\nregarded as proved. Each\
    \ block has a unique hash code\nstored in it as its identiﬁcation.\nTe application\
    \ of blockchain technology in IoT agri-\nculture concentrates on three aspects:\n\
    (i) Helping farmers track down the source of their fresh\nproduce.\n(ii) Enabling\
    \ peer-to-peer agro-based transactions via\nsmart contracts.\n(iii) Ensuring the\
    \ integrity of agriculture data by\nboosting sales of fresh vegetables and addressing\
    \ the\nproblem of environmental pollution.\nGiven the overall mobility and group-based\
    \ behavior,\nIoT devices in blockchain applications furnish meaningful\nconﬁdentiality.\n\
    Te four levels that made the software-deﬁned network\n(SDN) architectures and\
    \ network function virtualization\n(NFV) are the perception layer, data plane,\
    \ virtualization\nand control plane, and blockchain layer.\nData collection from\
    \ the environment completes at the\nperception layer. Data ﬂow to and from the\
    \ perception layer\nvia IoT bridges is achieved by the data plane. Resources are\n\
    typically assigned to controllers using the virtualization and\ncontrol plane.\
    \ Te blockchain layer’s duties include data\nstorage, broadcasting transactions,\
    \ and P2P network man-\nagement via a consensus mechanism.\nWe can explain some\
    \ keywords that are required to be\ndeﬁned.\nGanache is a private Ethereum blockchain\
    \ that executes\nscripts and tests, builds smart contracts, and creates apps.\n\
    Te Ganache testbed is a blockchain testing platform\ndesigned to execute data\
    \ trades and assess the charges of\nsmart contracts. Both desktop program and\
    \ command-line\ntool are available.\nA decentralized framework called Ethereum\
    \ Geth uses\nthe Ethereum protocol to operate smart contracts. Te\nprivate blockchain\
    \ network and smart contract deployment\nare carried out via the Geth Ethereum\
    \ client using the Go\nprogramming language. In addition, for calculating the\
    \ time\nrequired to pack data into the blockchain system, Ethereum\nGeth is employed.\n\
    Te Rinkeby Ethereum testnet is a development and\ntesting condition for Ethereum,\
    \ a proof-of-authority con-\nsensus-based platform. Te eﬃcacy of the blockchain-based\n\
    fog computing system is assessed using this testnet.\nFor Ethereum, Truﬄe is a\
    \ development and testing\nenvironment that includes an asset workﬂow and network\n\
    management for deploying public and private networks.\nRemix Ethereum IDE is a\
    \ browser-based compiler that\nhelps users construct Ethereum contracts in the\
    \ Solidity\nprogramming language and inspect transactions.\nTe article “Security\
    \ challenges and opportunities for\nsmart contracts in Internet of Tings: a survey”\
    \ [20] says that\nthe smart contract system is still not advanced or reliable.\n\
    Distributed autonomous organizations (also known as\nDAO), the largest blockchain\
    \ initiative to be crowdfunded\nwith assets worth roughly USD 60 million, are\
    \ responsible\nfor the most well-known smart contract accident. Te DAO\nwas hijacked\
    \ in 2016, causing a signiﬁcant loss because of a\nrecursive call that the attackers\
    \ had cruelly changed its smart\ncontract. Given that research on blockchain-based\
    \ IoT has\nbeen gaining steam recently, it is critical to investigate the\npotential\
    \ threat as soon as attainable.\nAnother frequent security issue with smart contracts\
    \ is\nprogramming vulnerabilities, particularly with a new lan-\nguage like Solidity.\
    \ Hackers would likely use these ﬂaws to\ntarget IoT and smart contract systems.\n\
    For instance, the unchecked call/send functions return a\nBoolean result to represent\
    \ the success or failure of the call.\nTe transaction performing these functions\
    \ will not get\nrolled back if the external call fails, an error will arise, and\n\
    there will not be a rollback if the return value has not yet\nbeen under complete\
    \ veriﬁcation. As a result, the attacker\ngains illegal entry into the smart contract’s\
    \ protected\noperations.\nWhen Solidity types are used for direct calls, the calling\n\
    party must deﬁne the interface of the recipient and cast it to\nthe recipient’s\
    \ address.\nAs an integer variable may only represent a speciﬁc range\nof values,\
    \ the EVM provides a ﬁxed-size data format for\nintegers.\nEvery Ethereum smart\
    \ contract has an address object\nand can contact other addresses. Te address\
    \ of the ac-\ncount that initially made the global variable tx.origin\nreturns\
    \ the query or transaction. Tis variable fully tra-\nverses the call stack. Utilizing\
    \ this variable to approve IoT\nusers is prohibited as it increases the risk of\
    \ phishing\nattacks.\nTrough constructors in smart contracts, programmers\nmay\
    \ initialize contract objects. However, since the con-\nstructor’s name diﬀers\
    \ from the contract’s name and is a\npublic type, anybody may call the absent\
    \ constructor due to\nits vulnerability. Furthermore, constructors get often used\n\
    when initializing the contract to specify the administrator’s\naddress, the number\
    \ of tokens, and other details. As a result,\nseveral parts of the IoTinfrastructure,\
    \ such as network access\nand token control, will be essentially destroyed.\n\
    Applied Computational Intelligence and Soft Computing\n9\nMany owners’ interests\
    \ have been gravely impacted by\nthe abovementioned problems, particularly in\
    \ modern IoT\nsetups. Tankfully, other academics are now looking at ways\nto address\
    \ these problems. Tey looked for solutions such as\nﬁxing block timestamps’ dependence,\
    \ the inherently vul-\nnerable particularities, and security audits for programming\n\
    vulnerabilities (using SCaaS, for example, a smart contract\naudit engine via\
    \ signature matching and machine learning\nalgorithms).\nSmart contract encryption\
    \ is a brilliant concept to ensure\nthe privacy and security of the private data\
    \ used in smart\ncontracts. For IoT service providers and customers, the\ntransaction\
    \ details of the trade entities, the contract code,\nand the blockchain processing\
    \ mechanism are precious.\nTerefore, a more dependable and cost-eﬀective IoT system\n\
    is predicted in the real world due to the adoption of privacy-\npreserving smart\
    \ contracts. Tis kind of security is achieved\nvia various encryption mechanisms,\
    \ including TEEs.\nAdopting appropriate communication protocols is a\nvaluable\
    \ element in increasing the eﬀectiveness of data\ntransmission for sporadic IoT\
    \ networks. Named data net-\nworking (NDN) is a new form of network design that\
    \ in-\ncludes useful features.\nBecause of its unique properties like data immutability\n\
    and transparency, blockchain can accomplish tasks to make\nclinical trials traceable\
    \ and increase public conﬁdence in an\nopen and equitable process, including all\
    \ stakeholders. Te\nsmart contract safely automates these clinical trial processes\n\
    while ensuring traceability and preventing a probability of\nreconstruction. Te\
    \ viability of the intended solution de-\npends on a proof of concept of Hyperledger\
    \ Fabric in clinical\nmanagement research for numerous clinical studies. Tis\n\
    model [21] is a Hyperledger Fabric type of blockchain with\npermissions,\nsmart\n\
    contracts,\nand\ngood\nsecurity\nperformances.\nClinical trials produce sizable\
    \ clinical research data to\nestablish novel medications, devices, and medical\
    \ or surgical\nprocedures. Investigators take vital signs, variations in\nsymptoms,\
    \ and side eﬀects in the study of all these recorded\ndata. In general, evaluating\
    \ the data quality is a diﬃcult task\nand keeping the data quality at an acceptable\
    \ level needs\nknowledge about the business and data modeling.\nMany stakeholders\
    \ are certiﬁed with blockchain tech-\nnology certiﬁcation to ensure secure data\
    \ transformation\nacross many parties. Without a third party, clinical trial\n\
    procedures are automated using a smart contract.\nNumerous clinical trial-related\
    \ service scenarios are\ndemonstrated to show how the smart contract can manage\n\
    tasks such as medical data gathering and audit queries. Using\nHyperledger Fabric,\
    \ a proof of concept shows how well the\nsuggested solution works by carrying\
    \ out the connected\nprocesses to clinical trials among various organizations\
    \ for\nvarious clinical trials. Additionally, a web-based application\nlets users\
    \ communicate with the blockchain platform.\nTe model’s architecture includes\
    \ three layers: the\nphysical layer, which contains all the necessary equipment,\n\
    the medical pillbox, and blood analysis tools. Tis layer is\nconnected to the\
    \ service layer, composed of the blockchain\nnetwork and its services such as\
    \ smart contracts, consensus\nalgorithms, distributed ledger, and certiﬁcate authority.\
    \ Te\nledger maintains replicated and shared data across the whole\nplatform.\
    \ Te smart contract deﬁnes the business logic\nconcerning all operations of clinical\
    \ trials. Te last layer is\nthe application layer, which manages devices, eCRF,\
    \ and\nusers and deals with audit queries.\nAll transactions are generally available\
    \ to apps after the\nsmart contract launches and conﬁgures the network. Re-\n\
    markably, the network administrator can initiate or pause\nthe network and its\
    \ functions. By calling the relevant\ntransaction, it can manage a subject’s proﬁle.\
    \ Additionally,\nthe smart contract provides a speciﬁc rule list to determine\n\
    whether or not a user is permitted to access or alter network\nresources.\nTe\
    \ experiment starts utilizing ten clients in a two-\nchannel network of 8 organizations\
    \ and 12 endorser peer\nnodes using the simulation program Hyperledger Caliper.\n\
    Te ordering service is in solo mode, and the block size sets\nto 10 transactions\
    \ per block, creating a new block every\n250 ms.\nTough it includes the medical\
    \ area, this model is the\nclosest research to my architecture. A multi-blockchain\n\
    system with smart contracts and a physical layer consists of\nthe tools required\
    \ to collect priceless data, such as pillboxes,\nblood pressure monitors, and\
    \ airﬂow sensors. Tis medical\nresearch and our research share many similarities.\
    \ However,\nwhile our research focuses on agriculture, the other is in the\nmedical\
    \ ﬁeld.\nAccording to Hang et al.’s [22] research results, the\nthroughput, latency,\
    \ number of transactions, and scalability\nwere some of the indicators used to\
    \ analyze Hyperledger\nFabric’s eﬃciency. Te increased transaction has a consid-\n\
    erable inﬂuence on network performance, notably latency.\nHowever, the throughput\
    \ closes on zero as the network hits\nits capacity. Te authors tested the eﬀectiveness\
    \ of Hyper-\nledger Fabric in terms of transaction throughput and net-\nwork latency\
    \ using various scenarios. Based on the network\nconﬁgurations, performance constraints\
    \ vary somewhat at\neach level. In these cases, the eﬀects of factors like batch-\n\
    timeout, batch size, and the number of peers are examined.\nNode.js is the programming\
    \ language utilized to develop\nthis blockchain, with smart contract implementations\
    \ and a\nmaximum of 5 clients or network participants. Te block\ncontains a maximum\
    \ of 10 transactions, and its frequency is\na maximum of 250 ms.\nTis study introduces\
    \ a unique fuzzy logic-based\ntransaction traﬃc management method that helps boost\n\
    blockchain speed. Te model automatically carries out\nvarious operations on transactions\
    \ received following cur-\nrent network circumstances; the fuzzy controller gets\
    \ em-\nbedded in the smart contract. Without the involvement of a\nthird party,\
    \ the fuzzy-based transaction traﬃc controller in\nthe smart contract may autonomously\
    \ manage the traﬃc\nﬂow following the observed network circumstances.\nTe system\
    \ architecture comprises the Hyperledger\nFabric network, the admin, a blockchain\
    \ adapter, a\nbenchmark database, and a transaction traﬃc measurement\nanalyzer.\
    \ Te distributed ledger and the smart contract get\nduplicated by diﬀerent peers\
    \ that constitute the Fabric\n10\nApplied Computational Intelligence and Soft\
    \ Computing\nnetwork. Te administrator can set up network ﬁles and\nbenchmarks\
    \ for performance analysis. A network conﬁgu-\nration ﬁle summarizes the tested\
    \ system and the conditions\nfor connecting to the network.\nA benchmark conﬁguration\
    \ ﬁle deﬁnes the user-speci-\nﬁed test ﬁles and the performance benchmark workload.\
    \ Te\nclient where the workload occurs transmits transactions to\nthe blockchain\
    \ adapter, receiving them and sending in-\nstructions to start the blockchain.\
    \ By calling the smart\ncontract functions, many clients can send transactions\
    \ to the\nnetwork and receive replies to those transactions. Te\nbenchmark ﬁndings\
    \ are stored in the benchmark DB by the\ntransaction traﬃc measurement analyzer\
    \ once it has read\npredetermined statistics. Te fuzzy controller modiﬁes the\n\
    transaction approval rate by evaluating the acceptance rate,\ntransaction throughput,\
    \ and transaction delay.\nBoth transaction throughput and latency are the fuzzi-\n\
    ﬁer’s input parameters. Te inference engine assesses rules.\nTe acceptance rate\
    \ is transformed into non-fuzzy values by\nthe defuzziﬁer. Te transaction control\
    \ module obtains the\noutput value, which then modiﬁes the transaction accep-\n\
    tance rate. Te procedure gets repeated, allowing the Fabric\nnetwork to keep a\
    \ proper degree of transaction processing\ncapabilities\ndynamically.\nTransaction\n\
    throughput\nand\ntransaction latency are speciﬁed as the fuzzy variables for\n\
    membership functions on the approach, and the acceptance\nrate is evaluated as\
    \ “low,” “acceptable,” and “high.”\nTe network model of Kumar et al.’s [23] research\
    \ has\neight core elements. Trusted authority, IoT devices, un-\nmanned aerial\
    \ vehicles, intrusion detection systems, cloud\nservers, InterPlanetary File Systems,\
    \ smart contracts, and\nblockchain networks are these eight elements.\nBefore\
    \ installation, the trusted authority must register\nIoT devices, unmanned aerial\
    \ vehicles, and smart contracts.\nUsing the established session keys, the authentication\
    \ and\nkey management phase of the Internet of Tings (IoT)\nbegins with mutual\
    \ authentication and key agreement be-\ntween two IoT devices, between an IoT\
    \ device and any as-\nsociated unmanned aerial vehicle, and between associated\n\
    unmanned aerial vehicles and the cloud server.\nTe safe contact between the involved\
    \ entities is\nmaintained throughout this phase. Te IoT device installed\nin each\
    \ ﬂying zone has the potential to extract agricultural\nvalues. Unmanned aerial\
    \ vehicles (UAVs) are connected to\neach ﬂying area to gather data from IoT devices.\
    \ Te cloud\nserver saves transmitted transactions. In further detail, every\n\
    cloud server mines valid transactions using smart contracts.\nTis process keeps\
    \ them in IPFS and maintains the returned\ntransaction hash in the global blockchain\
    \ network.\nEach miner packs the IPFS hashes of the validated\ntransactions into\
    \ the current block while generating the\nblock hash and Merkle root for the next\
    \ block.\nTis model has speciﬁc veriﬁcation procedures to guard\nagainst diﬀerent\
    \ kinds of threats. Te attackers impersonate a\nreal user by creating a temporary\
    \ identiﬁcation and a partial\nprivate key. However, a session-based technique\
    \ conﬁrms\neach device’s identiﬁcation. Access rights are given if all\ncredentials\
    \ match; connections are also promptly terminated.\nAs a result, this strategy\
    \ guards against spooﬁng attacks.\nTe attackers may be insiders and have access\
    \ to all\ncredentials, including timestamps, pseudo-identities, and\nIoTdevice\
    \ identiﬁcation. However, the model can only grant\naccess following session-based\
    \ entity veriﬁcation. Tus, the\nmethod avoids insider attacks by not allowing\
    \ access without\nauthorization.\nWith the strikes of man-in-the-middle (MITM)\
    \ through\nunsecured channels and communications, the attacker may\nbe able to\
    \ obtain information about IoT devices. Attackers\nmay provide information to\
    \ UAVs, so they can carry out\nspeciﬁc tasks. Te UAVs, however, verify the session\
    \ and\nlook up the timestamp. As a result, the attacker is unable to\nconduct\
    \ the MITM threat.\nFertilizers are crucial in smart agriculture by improving\n\
    proﬁt and decreasing waste. Tis paper [24] discussed the\nresearch diﬃculties\
    \ of monitoring and managing farming\nland by enhancing crop yield and lowering\
    \ resource, energy,\nfertilizer, and human interaction wastage. Information from\n\
    the agricultural ﬁeld is gathered using the multi-modal\nsensor. IoT-based agricultural\
    \ systems assist in minimizing\nhuman contact and developing new valuable methods.\n\
    Any farmer may join the blockchain network without\npermission,\na\ntype\nof\n\
    permission-less\nprogrammable\nblockchain, and they can carry out numerous transactions\
    \ in\na database. Diﬀerent users connect to knowledge support\nsystems through\
    \ an intelligent interface device. Data about\nthe land environment is gathered\
    \ from various sensors and\nsent to the database server in the cloud environment.\
    \ Te\nMYSQL cloud database stores the acquired data. Data are\ncompiled by the\
    \ system at multiple intervals and sent to a\ncloud database. Te machine learning\
    \ algorithm creates\nknowledge patterns.\nEvery edge node in the network has a\
    \ unique identity on\nthe Hyperledger blockchain. Te member service provider\n\
    (MSP), which issues cryptographic certiﬁcates using a public\nkey primitive, issues\
    \ certiﬁcates to every network partici-\npant. Te user of the network receives\
    \ a login and password.\nTe user gets enrollment and transaction certiﬁcates to\
    \ send\ntransactions. In this approach, the chain code includes the\nbusiness\
    \ logic that establishes the state of the transaction.\nTe ledger states that\
    \ matching bock numbers get stored in\nthe state database. Hyperledger oﬀers a\
    \ secure, scalable, and\nadaptable blockchain technology for agricultural knowledge\n\
    systems.\n2. The Research\nAll old concepts are in service of the suggested theoretical\n\
    architecture (see Figure 2). It is a multi-layer design, which is\nthe cause why\
    \ it will be easier to control. Te Internet of\nTings (IoT) layer is the ﬁrst.\
    \ It consists of essential sensors\nlike humidity, temperature, pressure, acceleration,\
    \ and other\nvariables connected to ARDUINO boards. Bluetooth or a\nwireless network\
    \ is used to communicate between the de-\nvices. Te Arduino features will provide\
    \ us with data, which\nwill be exploited in the subsequent layers. Te ﬁrst layer\
    \ can\nsupply us with reliable environmental data.\nTe blockchain layer contains\
    \ three particular block-\nchains, and the agri-product information blockchain\
    \ is the\nApplied Computational Intelligence and Soft Computing\n11\nﬁrst. Te\
    \ user information blockchain is the second one. It\nhas all the information about\
    \ the network participants.\nTe transaction information blockchain is the last\
    \ one on\nthe list. It holds a wealth of information, including user\npersonal\
    \ information, intermediate information, transac-\ntions, logistics, and agricultural\
    \ product data. Smart con-\ntracts are used in this paradigm. Tose automated contracts\n\
    use the highest level of data encryption currently available in\nthe security\
    \ industry. As a result, it will conﬁrm the quality of\nthe decision and guarantee\
    \ clarity and eﬀective communi-\ncation between entities [25].\nMany sides will\
    \ attempt to check the average transaction\nfees because the whole system comprises\
    \ a multi-blockchain\nsystem. But let us see the other meaning of the blockchain\n\
    model. Te suggested architecture concurrently distributes\nsecure data to all\
    \ network participants. It is regarded as\nsigniﬁcant advantage that can increase\
    \ the eﬃcacy agri-\ncultural system.\nTe block will be full of transactions containing\
    \ recorded\ndata, and we will get multiple veriﬁed transactions at once.\nCombining\
    \ numerous transactions into a single block each\nperiod is cost and space-eﬃcient.\
    \ So, batching allows for\nreducing\nper-transaction\nfees\nby\naggregating\n\
    various\ntransactions into one. Following this protocol beneﬁts you\nand keeps\
    \ the fees low across the board for everyone. We can\nuse cryptocurrencies for\
    \ frequent transfers across platforms\nif we want to add crypto money to our model.\
    \ Teir\ntransaction fees are virtually nothing, for example, Ripple or\nLitecoin,\
    \ because generally, cryptocurrencies are con-\nstructed for lowering or eliminating\
    \ fees.\nTe research does not focus on cryptocurrencies or\ntransaction fees because\
    \ the goal of our blockchain is just\nstoring and transmitting data simultaneously\
    \ to members,\nand that is all. But, if it is obligatory to mention some info,\
    \ in\nthis case, everything on Ethereum’s transaction fees was\nbased on “gas,”\
    \ and the payment system will adopt the\nEthereum payment process based on the\
    \ calculated proce-\ndure. In 2021, the average bitcoin fees were between 2 and\
    \ 5\ndollars. Te average ETH transaction fee ranges from 2 to 7\ndollars or 0.00056\
    \ to 0.002 ETH.\nTe block size is crucial because it can signiﬁcantly\nimpact\
    \ the speed and capacity of the network. After dis-\ncovering some related research,\
    \ the average block size\nneeded in our model over 24 hours is between 0.75 and\
    \ 1.25\nmegabytes. Te average transactions per block required in\nour model over\
    \ 24 hours are between 1200 and 2200. Te\naverage number of payments per block\
    \ needed to get seen in\nour model over 24 hours is between 2500 and 5500.\nTe\
    \ members of this system are farmers, providers,\ndistributors, retailers, clients,\
    \ and controllers that help as a\nprocessing node for validating transactions,\
    \ for example, to\nadministrate the data provided by sensors and check if data\n\
    (temperature, humidity, light exposure, and soil pH) are\nreasonable. Tere is\
    \ no problem with hardware devices.\nControllers can check the data traceability\
    \ and the ware-\nhouse stock and quantity.\nBlockchains layer\nSmart Contract\
    \ System\nContract\nGeneration\nContract\nPerformance\nCustomer\nUser Information\
    \ BC\nTransaction Information BC\nAgri Product Information BC\nUser\nInformation\
    \ DB\nTransaction\nInformation DB\nAgri-Product\nInformation DB\nHumidity sensor\n\
    Light sensor\nSENSOR\nTemperature sensor\nSoil pH sensor\nRetailer\nFigure 2:\
    \ Te proposed smart contract and blockchain architecture.\n12\nApplied Computational\
    \ Intelligence and Soft Computing\nTe class diagram in the Uniﬁed Modeling Language\n\
    (UML) (see Figure 3) explains the structures, classes, at-\ntributes, methods,\
    \ and relationships between objects to\nprovide extra information about our model.\
    \ Class user stores\ninformation about the network’s participants, including\n\
    farmers, distributors, and customers. Te members who are\non the blockchain network\
    \ can visualize the database as well\nas place orders for the products they desire.\
    \ Te sensors send\nenvironmental information to ProductStatus, providing\nvalues\
    \ and conditions to determine whether they are at their\noptimum level or not.\
    \ Tese products belong to a unique\ncategory or sub-category. We added a class\
    \ named Order-\nDetails since the order class has a lot of data.\nTis use case\
    \ diagram (see Figure 4) represents the actors\nin the system model. It displays\
    \ the context and require-\nments of our system. It functions as an outsider’s\
    \ perspective\non a system that deﬁnes how users engage with its services.\nTe\
    \ farmer, distributor, and customer types of users are\ndescribed in the ﬁgure.\
    \ For example, farmers may provide a\nproduct that persuades a consumer to place\
    \ an order for it.\nDistributors transported the goods from the farms to the\n\
    consumer. Te user can view a wide range of information on\ncrop growth conditions\
    \ using the soil pH, humidity, tem-\nperature, and light exposure sensors.\nTe\
    \ food supply chain can be used to monitor a product\nfrom its raw material (e.g.,\
    \ tomato) on the farm to the\nﬁnished product (e.g., tomato sauce) on the shelf\
    \ in the retail\nstore. Tis solution depends on many Solidity ﬁles. Te ﬁrst\n\
    ﬁle contains Farmer Struct (Struct types are used to rep-\nresent an organized\
    \ structure). Tis structure is composed of\nthe ID and the name of the farmer.\
    \ Te second struct is the\nexpected yields which contain the location of the land,\
    \ the\ncorps, the amount, the estimated price, and the expiration\ndate. Te deal\
    \ struct is the third one, containing the terms,\nthe amount, and the addresses\
    \ of both the farmer and the\ncustomer. Tis contract can control farmers, manage\
    \ their\nyields, organize deals, and recharge wallets. Te farmer does\nnot need\
    \ to wait for a bank loan or other types of ﬁnancing to\nget started. Te consumers\
    \ could provide the fund with zero\ninterest. Furthermore, the farmers are not\
    \ susceptible to\nlengthy and complicated bank ﬁnancing procedures.\nTe food supply\
    \ chain is controlled by the second ﬁle,\nwhich contains three Solidity structs.\
    \ Te ﬁrst is the goods\nquality report, which includes the address of the inspector,\n\
    the quantity, the sample size, and any remarks about the\ngoods. Te processor\
    \ report is the second struct, containing\nthe notes, shipment data, and the received\
    \ quality report.\nTe last struct is the retailer report, which comprises the\n\
    name of products, the raw material, remarks, the manu-\nfactured date, the quantity\
    \ produced, and the processor\nreport received earlier. Companies can use the\
    \ system to\ntrack unsafe products back to their source and discover\nwhere they\
    \ got dispersed. Tese advantages can save lives\nand money by preventing diseases.\
    \ In addition, no one can\ntamper with the details of the quality reports (which\
    \ get\nstored on the blockchain network) for their gain. Te history\nof some products\
    \ can get tracked in real time from their\ninception to their current state. Consumers\
    \ may obtain high-\nquality items at lower prices because they are sponsoring\
    \ the\ncrops from the start. Consumers in the low-income category\ncan fund crops\
    \ according to their requirements and avoid\nmarket volatility in product costs.\
    \ Tere is no need for vast\nfarmlands. Even small-scale and family farmers can\
    \ sell their\nproducts and make more money.\nOn the distributed public ledger,\
    \ farmers can list their\nprospective crops. Consumers can look over the infor-\n\
    mation and assess the credibility of the farmers based on\nprevious cultivation\
    \ and supply. Tis system establishes a\ntransparent and tamper-proof digital market\
    \ platform for\nfarm products. As a result, the contract can be reached\nbetween\
    \ the farmer and the customer, allowing the\nconsumer to support particular crops\
    \ or ﬁelds and acquire\nthe production or a proﬁt percentage of its market value.\n\
    Based on previous agricultural production experiences, a\nranking system gets\
    \ adopted to enhance farmer and\nconsumer trust. Eventually, the system will create\
    \ a\ndecentralized agro-market where farmers can raise funds\nfor production while\
    \ also having clients buy their pro-\nduce. Alternatively, customers can secure\
    \ quality products\nat a lower cost by investing in crops early. Customers and\n\
    farmers will beneﬁt from establishing a trusting atmo-\nsphere for future collaboration.\
    \ Farmers will make the\nmost money from their produce, and the investors\n(consumers)\
    \ will be able to feed their families high-quality\nfood.\nNext, there is the\
    \ ownable contract, which has an owner\naddress. It provides sample authorization\
    \ control. It makes\nuser permissions easier to implement. Te OWNABLE\nconstructor\
    \ sets the sender as the OWNER (the user who\nowes the product). Te existing owner\
    \ can also transfer the\nownership of his contract to a new owner under this con-\n\
    tract. Te migration ﬁle facilitates the distribution of con-\ntracts to the network\
    \ and serves as a staging area for your\ndeployment activities. Tey get developed\
    \ with the notion\nthat your deployment requirements will evolve simulta-\nneously\
    \ with the blockchain evolution.\nAdditionally, we can embrace the product delivery\
    \ ﬁle\nand drop it on our architecture. Te food delivery ﬁle is a\nsmart contract\
    \ for a decentralized food delivery service.\nTe system uses some features of\
    \ Solidity code, such as\nthe unsigned integer UINT, which corresponds to the\n\
    product ID and cannot have a negative value. Te mapping is\nused to organize the\
    \ order of products. Te contract allows\nfor the creation of products and the\
    \ option of receiving\nthem. Various functions check the contents of the smart\n\
    contract, which the client will review and trigger if it is\ncorrect. Only customers\
    \ will be able to inspect it, and only\ncustomers will queue outside to obtain\
    \ the number of\nproducts. Te contract adds or removes traces from a\nproduct\
    \ and calculates a total of product traces for statistical\npurposes. Te system\
    \ also manages and controls tempera-\nture, retrieves an array of temperatures,\
    \ and returns the\nnumber of traced places.\nWe must not overlook the contract\
    \ that entails self-\nmonitoring the humidity, temperature, soil Ph, and light\n\
    exposure. Also, if these environmental data are beyond the\nthreshold, below the\
    \ threshold, or ideal, this ﬁle detects\nviolations and triggers alarms.\nApplied\
    \ Computational Intelligence and Soft Computing\n13\nTe next step is upgrading\
    \ the model to Ethereum 2.0, an\nupdate to the present Ethereum blockchain. It\
    \ intends to\nimprove the Ethereum network’s speed, eﬀectiveness, and\nsustainability\
    \ by boosting the number of transactions. When\ncompared to the prior version,\
    \ it features several signiﬁcant\nstructural transformations. “Proof of stake”\
    \ and “sharding”\nare these eﬀective modiﬁcations.\nValidators, rather than miners,\
    \ are used in the proof of\nstake consensus method. Teir primary function is to\n\
    propose new blocks and oﬀer computer power, storage, and\nbandwidth for transaction\
    \ validation. Validators are paid in\nETH regularly (deposit contract of 32 ETH\
    \ to validators).\nSharding is the process of breaking up a single block-\nchain\
    \ into numerous shards. As a result, the network be-\ncomes more solid since a\
    \ single validator does not need to\nhandle the entire architecture.\nTe consensus\
    \ process type is the main diﬀerence be-\ntween Ethereum 2.0 and its predecessor.\
    \ Ethereum 2.0\nemploys a proof of stake (PoS) method. In contrast,\nEthereum\
    \ utilizes a proof of work (a power procedure in\nwhich miners decode complicated\
    \ mathematical challenges\nusing high processor quality and computer equipment).\n\
    Because Ethereum 2.0 will use fragment chains, it can\nprocess up to 10,000 transactions\
    \ per second, whereas\nEthereum can only handle 30.\nBecause the cryptographic\
    \ approach is more straight-\nforward in Ethereum 2.0, it consumes signiﬁcantly\
    \ less\nenergy. Furthermore, because of its eﬀectiveness, the im-\nprovement is\
    \ projected to lower transaction fees inside the\nnetwork, allowing for smaller\
    \ transactions.\nAgricultural production is inﬂuenced by various ex-\nternal elements\
    \ such as climate and harvest quality. Te\nsystem links all of these participants\
    \ with the end pur-\nchasers, allowing anyone to intercommunicate in the\nproﬁts\
    \ while ensuring that customers get their healthy\ncrops. Ethereum 2.0 can improve\
    \ supply chain transpar-\nency and assist producers and customers in eliminating\n\
    ineﬃcient workﬂow. Validators can provide a perfect\nenvironment from the farm\
    \ to the market. As a result, the\ngoods’ transaction costs will be decreased.\
    \ Te proof of\nstake can easily locate and track a product from a local\nstore.\
    \ Tis mechanism can also determine the farm that\nprovided a crop as well as the\
    \ date of harvest. Te sharding\nprocess in Ethereum 2.0 can allow us to maximize\
    \ the\nblockchain organization level by classifying user infor-\nmation from product\
    \ information. Te mechanism did not\ndesign validators in Ethereum 2.0 to resolve\
    \ mathematical\nproblems to validate transactions; instead, they must check\n\
    data integrity.\nA technical stack, sometimes referred to as a technology\ninfrastructure\
    \ or solutions stack, is currently crucial for\ncreating scalable, maintainable\
    \ applications. A technology\nstack is a collection of technologies layered on\
    \ top of each\nother to develop any application. Te technology stack in-\nﬂuences\
    \ the sort of apps you may design, the degree of\ncustomization you can make,\
    \ and the resources you require\nto build your application.\nProof of concept\
    \ (PoC) is an essential component of\nevery software project since they reduce\
    \ possible risks and\ndemonstrate the project’s perspective.\nProof of concept\
    \ should be the foundation of every\nsoftware development process since it has\
    \ several beneﬁts for\nprojects. PoC takes care of everything, from reducing failure\n\
    risks to evaluating the possibility of scalability. To improve\nthe overall research,\
    \ we have collected all the advantages of\nthis procedure.\nRisk minimization\
    \ is by far a proof of concept’s most\nsigniﬁcant beneﬁt. Te development team\
    \ analyzes potential\nproblems before beginning the procedure.\nIt is just as\
    \ crucial to plan your scaling approach as it is to\nrelease a top-notch product.\
    \ In the long term, you need to\nknow\nhow\nto\nbuild\nyour\nsolution\ntechnically\n\
    and\ncommercially.\nDuring a seed round, supporting the idea with concrete\nevidence\
    \ of its potential is essential. Nobody pays for ab-\nstract ideas.\n- User Address\
    \ String\n- User Address2:String\n- UserCity:String\n- UserCountry:String\n- UserDescription:String\n\
    - UserEmail:String\n- UserFirstName:String\n- UserID:String\n- UserLastName:String\n\
    - UserMobileNumber:Integer\n- UserPass:String\n- UserRegistrationData:String\n\
    - UserState:String\nUser\n- ClientAddr:String\n- ClientrID:int\n- OrderAmount:int\n\
    - OrderCity:String\n- OrderCountry:String\n- OrderCurrency:String\n- OrderDate:Date\n\
    - OrderEmail:String\n- OrderID:int\n- OrderOfferor:String\n- OrderShipAddr:String\n\
    - OrderShipMethod:String\n- OrderShipped:boolean\n- OrderShipping:String\n- OrderState:String\n\
    - OrderTax:double\n- OderTrackingNbr:int\nOrder\n- CategoryID:int\n- ProdCodeBar:int\n\
    - ProdDescription:String\n- ProdExpirationDate:Date\n- ProdLocation:String\n-\
    \ ProdName:String\n- ProdPrice:double\n- ProdProducerSupplier:String\n- ProdProducerSupplierAddr:String\n\
    - ProdProductionDate:Date\n- ProdQuantity:int\n- ProdRowMaterials:String\n- ProdStatusID:int\n\
    - ProdWeight:double\nProduct\nCategoryProduct\n- CategoryDescription:String\n\
    - CategoryID:int\n- CategoryName:String\nSensors\n+ Check ():void\n+ control ():void\n\
    SoilpHSensor\nLightSensor\nTemperatureSensor\nHumiditySensor\nProductStatus\n\
    - ProdCodeBar:int\n- ProdHumidityStatus:String\n- ProdHumidityValue:double\n-\
    \ ProdLightStatus:String\n- ProdLightValue:double\n- ProdSoilPhStatus:String\n\
    - ProdSoilPhValue:int\n- ProdStatusDescription:String\n- ProdStatusID:int\n- ProdTemperatureStatus:String\n\
    - ProductTemperatureValue:double\nOrderDetails\n- DetailDescription:String\n-\
    \ DetailID:int\n- DetailPrice:double\n- DetailQty:int\n- OrderID:int\n- ProdCodeBar:int\n\
    Farmer\n- FarmerID:String\n- FarmName:String\nCustomer\n- CustomerID:String\n\
    Distributor\n- DistributorID:String\n1\ndata reception\n0..*\n+sub-category\n\
    0..*\n+parent\n0..1\n1\ncontains\n0..*\n1\n1..*\nconstitue\nof\norders\n0..*\n\
    1\nmore details\n1\n1\nstatus\n1\n1..*\nFigure 3: Te class diagram of the proposed\
    \ model.\n14\nApplied Computational Intelligence and Soft Computing\nBuilding\
    \ a PoC to test concepts in actual settings and\nobtain early feedback involves\
    \ selecting the right technology\nstack and creating the architecture.\nFigure\
    \ 5 shows the technology stack of the proposed\nmodel.\nTe physical or infrastructure\
    \ layer assists in gathering\nenvironmental data, such as soil pH, temperature,\
    \ humidity,\nand light exposure measurements. We also have nodes,\nwhich are network\
    \ members. A node is any device that has\npermission to access blockchain network.\n\
    Blockchain, as a concept, organizes data into user data,\nagricultural product\
    \ data, and transaction data. Blockchains\nemploy consensus methods to make sure\
    \ the nodes reach an\nagreement. It is a fantastic procedure to increase the net-\n\
    work’s eﬃciency by introducing a new degree of depend-\nability and achieving\
    \ information security.\nLarge portions of the model are at the level of smart\n\
    contracts. Te middleman got just eliminated. You will not\nhave to worry about\
    \ trust issues since there are standards\nprotecting everyone’s legal rights.\
    \ Since everything gets\ncomputerized, higher authorities cannot have any impact,\n\
    and the procedure is quite open.\nTe Kaleido interface serves as a functional\
    \ testing\nplatform. It assists in facilitating access to the decentralized\n\
    ledger. Te users receive great help from this layer. Tis\nplatform enables access\
    \ to all data. Peer-to-peer server\nnetworks allow users to connect to the blockchain\
    \ network.\nWe have selected the blockchain network and its tools/\nservices.\
    \ Te system software, database, server, and\nframeworks comprise most of the backend\
    \ or server-side\ntechnology stack. Tese technologies are appropriate for\nour\
    \ planned research. For the automation of various\nfunctions, we also have the\
    \ opportunity of dealing with\nsmart contracts.\nTe front end of choice for most\
    \ online apps stays the\nsame. Te research will use a cutting-edge web application\n\
    System One\nRegistration\nAuthentif\n-ication\nInvalid\nCheck product\nstatus\n\
    Ask product\nqueries\nAnswer\nproduct\nqueries\nVisualize Agri-\nProduct info\n\
    Upload data of\ntransport\nDistribute\nproduct\nBuy product\nOﬀer product\nWeather\n\
    details\nIrrigation\ndetails\nEquipment\ndetails\nCorp details\nLight details\n\
    SoilpH details\nProductivity\ndetails\nFarmer\nCustomer\nDistributor\nNetwork\
    \ member\n«include»\n«include»\n«extend»\n«extend»\n«extend»\n«extend»\n«extend»\n\
    «extend»\n«extend»\n«include»\n«extend»\nFigure 4: Use case diagram of the proposed\
    \ model.\nApplied Computational Intelligence and Soft Computing\n15\nbuilt on\
    \ the foundations of HTML, CSS, JavaScript, and\nTypeScript to deliver additional\
    \ functionalities.\nProgramming languages handle the crucial business logic\n\
    required by the applications. It is necessary to utilize the\nSolidity programming\
    \ language and create source code that\nwill automate various functions, such\
    \ as identifying the cir-\ncumstances of crop growth. However, no technology can\n\
    provide complete 100% security. Te blockchain network\nconsistently adheres to\
    \ best practices to guarantee the highest\ndata and transaction protection level\
    \ and reduce risks.\nFuture testing will focus on the new Web 3.0 blockchain\n\
    technology stack, which diﬀers from earlier iterations.\nHowever, transitioning\
    \ from client-server architecture to a\ndecentralized web will not be radical.\
    \ Te changes are sig-\nniﬁcant and distinct.\nWeb 3.0 blockchain technology stacks\
    \ are still devel-\noping and maturing step by step. Even though they are safer,\n\
    they are often a little bit slower. As a result, the transition\nwould initially\
    \ include building a partially decentralized\nnetwork before going decentralized.\n\
    3. Testing and Analysis\nTe ﬁgures depict the tested blockchain system. Te tested\n\
    architecture contains one environment, one member, and\nthree smart contract script\
    \ codes (ﬁnance, storage envi-\nronment, and traceability).\nFigure 6 depicts\
    \ the dashboard system, which allows the\nuser to learn about the testing environment.\
    \ Among these\ndata, we can ﬁnd information about network participants\nlike the\
    \ membership name, the membership ID, the primary\ncontact e-mail, and the joining\
    \ date.\nTe KALEIDO organization issues a membership cer-\ntiﬁcate with a common\
    \ name and a serial code. In this\nsituation, the dashboard shows a list of applications\
    \ directly\nconnecting to our blockchain system, like our smart contract\nscript\
    \ codes.\nFigure 7 shows the current condition of the blockchain\nsystem, such\
    \ as the creation date, block height, network\nparticipants, release version,\
    \ and protocol utilized (Geth/\nPoa). We established two nodes (node 1 and node\
    \ 2) for\ntesting, and one of them is inserted by smart contract codes.\nTere\
    \ is also the node that has the name system monitor.\nTese nodes have all got\
    \ started.\nTe details of the block node injected with the smart\ncontract script\
    \ are shown in Figure 8. Among these details,\nwe can ﬁnd the node name (node\
    \ 1), the node ID, the node\nsize (small), the owner, the status (started or paused),\
    \ and\nthe AWS region because we have used the Amazon Web\nServices, along with\
    \ the date it was formed and the date it\nwas last modiﬁed.\nApp platorm\nSmart\
    \ contracts\nBlockchain\nnetwork\nPhysic layer\nenvironmental\nsensors\nNodes\n\
    Distributed\nledger\nInformation\nsecurity\nData\nOrganization\nVeriﬁcation\n\
    of data\ncorrectness\nPeer to peer\nnetwork\nConsensus\naigorithm\nSolidity\n\
    programming\nlanguage\nAutomation\nVeriﬁcation of\nenviromental\nvalues\nDecision\n\
    helper\nKaleido\ninterface\nKaleido\nAnalysis\nKaleido\nSharts\nFigure 5: Te technical\
    \ stack of the proposed model.\n16\nApplied Computational Intelligence and Soft\
    \ Computing\nTe details include\n(i) Te blockchain node ID.\n(ii) Te consensus\
    \ role (non-signer).\n(iii) Te consensus ID.\n(iv) Te runtime version.\n(v) Te\
    \ user accounts.\nIn general, the ﬁgure represents all of the metadata for\nnode\
    \ 1.\nFigure 9 shows all of the smart contracts added to the\nblockchain. Finance,\
    \ storage environment, and traceability\nare the three aspects of smart contracts.\
    \ Solidity is the\nprogramming language used to create them. Te Solidity\nprogramming\
    \ language exists only to facilitate the creation\nof smart contracts on the Ethereum\
    \ blockchain.\nTe smart contract algorithm is depicted in Figure 10.\nTe blockchain\
    \ system now includes these algorithms. As\nyou can see, this ﬁgure shows some\
    \ functions in the storage\nenvironment Solidity ﬁle. For instance, consider the\n\
    Figure 6: Characteristics of the testing environment.\nFigure 7: Implementing\
    \ the smart contracts on node 1.\nFigure 8: Te metadata of node 1.\nApplied Computational\
    \ Intelligence and Soft Computing\n17\nprogramming method that evaluates light\
    \ exposure, soil pH,\ntemperature, and humidity. Tere are other functions, such\n\
    as the one that identiﬁes environmental violations.\nIn addition, the script code\
    \ displays the current state of\nall these factors and the variety of additional\
    \ features. Tis\nsection is concerned with creating the best possible envi-\n\
    ronment for seeds and products at farms and warehouses.\nTe quantity of resources\
    \ required to run these script\ncodes deﬁnes their complexity. Time and memory\
    \ con-\nstraints are given special attention. Tese processes should\ntake the\
    \ same time on a particular system regardless of the\ninput size. Another resource\
    \ that gets used is the number of\narithmetic operations.\nTese graphs (see Figure\
    \ 11) illustrate that injecting\nsmart contract code has a minor impact on the\
    \ resources.\nTe memory used by the smart contracts was just about 150\nmegabytes.\
    \ In addition, the smart contracts only utilized\nroughly 40 megabytes of disk\
    \ space. Tese numbers boost\neﬃciency speed and have no negative impact on the\
    \ system,\ncomputer nodes, or RAM.\nFigure 12 depicts several successful block\
    \ node trans-\nactions. Tese ﬁndings indicate that smart contracts might\nget\
    \ used on a sensor dataset in the future (temperature, light,\nhumidity, and soil\
    \ pH).\nTe system is divided into three major categories. Te\nﬁrst one is distribution\
    \ and traceability, which encompasses\nall aspects of tracking and tracing a product\
    \ from start to\nﬁnish. Te second category is ﬁnance, which involves all\naspects\
    \ of ﬁnancial transactions. Finally, storage is the third\ncategory, which covers\
    \ all violation management and reg-\nulates the environmental data of the farm\
    \ and the\nwarehouse.\nAfter employing IoT devices to insert product infor-\n\
    mation into the system, the associated authority can verify\nthe real-time temperature,\
    \ humidity, soil pH, and light\nexposure conditions. Te contract self-checks data\
    \ to keep\nFigure 9: Te blockchain includes smart contracts.\nFigure 10: Some\
    \ of the functionalities of the smart contract.\n18\nApplied Computational Intelligence\
    \ and Soft Computing\ntrack of status and violations. Te system displays tem-\n\
    perature, humidity, soil pH, and light exposure values and\nchecks whether or\
    \ not they are close to ideal conditions.\nTe suggested architecture also maintains\
    \ conﬁdence\nbetween entities. Before acquiring a product, it guarantees\nthat\
    \ the consumer is adequately informed about the repu-\ntation of other sides (the\
    \ seller). Furthermore, the early\nwarning feature is added to reduce the usage\
    \ of chemicals\nand establish the safety of agricultural produce.\nTough bitcoin\
    \ popularized blockchain transactions,\nputting it in a real-world use case still\
    \ has various diﬃculties\nand many goals to achieve. Nevertheless, blockchain\
    \ is still\nin its early phases and contains serious ﬂaws. Also, the\napplications\
    \ are a considerable challenge to optimize the\nsolutions and the entire food\
    \ supply chain.\nWe all agree that the procedures are automated and\ndependable\
    \ after these analyses. Smart contracts periodically\nself-check data, keep track\
    \ of all the details, and help save\ndata to the blockchain. When it comes to\
    \ the blockchain, the\ndate, time, and product identiﬁer allow all participants\
    \ to\ntrack products and assure that they have access to infor-\nmation about\
    \ the source of the products. Te integrity is not\nthreatened because the only\
    \ participants authorized were\nthose who could execute operations. Furthermore,\
    \ using\nsmart contracts eliminates the need for an intermediary\nparty, and no\
    \ one can alter the data inside the blockchain\nafter it is veriﬁed.\nSo, it will\
    \ be impossible to change the data if someone\ndoes something wrong or by mistake.\
    \ Also, data collection\nrelies on IoT devices; if they get broken, data collection\
    \ is\nimpossible. Furthermore, IoT devices are sometimes subject\nto security\
    \ vulnerabilities.\nPossibly, some participants cannot comprehend the\nsystem\
    \ or blockchain technology. Tey may have limited\nknowledge or a lack of understanding\
    \ of some functional-\nities. Perhaps we cannot persuade some participants to\
    \ give\ninformation. But, in general, the system oﬀers a radical\nchange in all\
    \ aspects of an existing business.\nTe comparison system (see Table 1) provides\
    \ all the\ndetails we have discussed. It is conceivable that the proof-of-\nwork\
    \ consensus mechanism is the algorithm that operates\nwhen the system employs\
    \ the Ethereum platform. However,\nwe have found that many studies neglect to\
    \ include this\npoint.\n4. Performance Evaluation\nTroughput is probably the most\
    \ misunderstood perfor-\nmance testing principle that beginner testers occasionally\n\
    have trouble mastering. In general, “throughput” refers to\nMemory\nMemory\nTis\
    \ node’s memory (RAM) utilization over the past 24 hours\n200 MB\n150 MB\n100\
    \ MB\n50 MB\n0 MB\nDisk\nDisk\n50 MB\n40 MB\n30 MB\n20 MB\n10 MB\n0 MB\n2 PM\n\
    3 PM\n4 PM\n5 PM\n6 PM\n7 PM\n8 PM\n9 PM\n10 PM 11 PM Dec 29 1 AM\n2 AM\n3 AM\n\
    4 AM\n5 AM\n6 AM\n7 AM\n8 AM\n9 AM 10 AM 11 AM 12 PM\n1 PM\n4 PM\n8 PM\nDec 27\n\
    4 AM\n8 AM\n12 PM\n4 PM\n8 PM\nDec 28\n4 AM\n8 AM\n12 PM\n4 PM\n8 PM\nDec 29\n\
    4 AM\n8 AM\n12 PM\nTime\nTime\nDec 29, 1:00 PM\nDisk: 39 MB\nSystem Monitor\n\
    Dec 29, 6:20 PM\nMemory: 136 MB\nnode 1\nFigure 11: Te minor impact of the smart\
    \ contract script on the machine resources.\nFigure 12: Several successful block\
    \ node transactions.\nApplied Computational Intelligence and Soft Computing\n\
    19\nTable 1: System comparison with existing methods.\nRef\nIoT app\nIoT devices\n\
    Consensus algo.\nSecurity\nanalysis\ntechniques\nEnergy\nand data\nsize tests\n\
    Platform\nEnvironment\ncontrol smart\ncontracts\nTrace and\ndistribution\nsmart\
    \ contract\nFinancing\nsmart\ncontract\nOther smart\ncontracts and notes\n[12]\n\
    Yes\nTemperature sensor,\nwater level sensor,\noxygen sensor, pH\nsensor, and\
    \ water pump\nPBFT\nNot\nmentioned\nYes\nHyperledger\nFabric\nNo\nBasic\nNo\n\
    Records history of\nall transactions and\ndevice\nmanagement\n[13]\nYes\nTemperature\
    \ sensor, light\nsensor, and humidity\nsensor\nNot mentioned\nNot\nmentioned\n\
    Yes\nEthereum\nYes\nYes\nBasic\nStorage smart\ncontracts\n[14]\nNo\nNo IoT app\
    \ mentioned\nPoW\nNot\nmentioned\nYes\nEthereum\nNo\nYes\nYes\nNo other smart\n\
    contracts\n[15]\nNo\nNo IoT app mentioned\nPoW\nYes\nYes\nEthereum\nNo\nNo\nNo\n\
    Te agent\norchestrates\noﬄoading services\n[16]\nYes\nSensors that manage\nwater,\
    \ air, sunlight, and\nsoil quality escarpments\nNot mentioned\nYes\nBasic\nHyperledger\n\
    Fabric\nNo\nYes\nYes\nStorage of planting\nand farm\ninformation\n[17]\nYes\n\
    Sensors, cameras, GPS\nlocator, and 4G\ncommunication\nNot mentioned\nNot\nmentioned\n\
    Basic\nEthereum\nYes\nYes\nYes\nUse case of soybean\nsupply chains\n[20]\nNot\n\
    mentioned\nNo equipment\nmentioned\nNot mentioned\nYes\nNo\nEthereum\nNo\nYes\n\
    Yes\nInsurance claim\n[21]\nYes\nCameras, smart sensors,\nRFID, and GPS\nTeir\
    \ consensus\nmechanism\n(OASCs’\nconsensus\nnetwork)\nYes\nYes\nIt looks like\
    \ an\nEthereum sys.\nNo\nYes\nBasic\nAutomated\nworkﬂows of\nOASCs\nOur\nsurvey\n\
    Yes\nTemperature sensor,\nhumidity sensor, light\nexposure sensor, and soil\n\
    pH sensor\nPoW (in future\nPoS)\nYes\nYes\nEthereum (in\nfuture\nEthereum 2.0)\n\
    Yes\nYes\nBasic\nNo other smart\ncontracts\n20\nApplied Computational Intelligence\
    \ and Soft Computing\nthe volume of transactions generated throughout the test.\
    \ It\nmay also be described as the minimum amount of capacity\nthat an application\
    \ or website can handle.\nAdditionally, it is typical to set a throughput goal\
    \ for the\napplication before beginning a performance test run so that\nit can\
    \ handle a certain number of requests per hour.\nTe suggested model, for instance,\
    \ uses multiple\nblockchains. User information blockchain, agri-product\ninformation\n\
    blockchain,\nand\ntransaction\ninformation\nblockchain are the three blockchains.\
    \ Let us assume that,\nregardless of the volume or quantity of the data, it always\n\
    takes one second to save a new set of three records on each\nblock of the blockchain\
    \ that we have.\nA performance report for this scenario would reveal that\nthe\
    \ throughput is three records per moment. For more\nexplanation, the user information\
    \ blockchain can save the\nﬁrst recording data, the agri-product information block-\n\
    chain can keep the second recording data, and the trans-\naction information blockchain\
    \ can save the third recording\ndata. Tis thinking is our maximum throughput,\
    \ but the goal\nnow is to increase it by updating the programming level of\nsmart\
    \ contracts by incorporating new methods and func-\ntions that reduce execution\
    \ time and work to prevent\nbottlenecks in the blockchain network.\nTe ﬁrst issue\
    \ users have represented in transaction\nlatency is the delay between initiating\
    \ a transaction or\npayment and receiving conﬁrmation that it is valid. You\n\
    would anticipate a ﬂattening of the throughput once all users\nhave logged in,\
    \ begun to work, and sent requests. In our case,\nhowever, we have not added cryptocurrency-based\
    \ ﬁnancial\ntransactions yet, and the project’s goal is to simultaneously\nreceive\
    \ data from sensors and send it to the blockchain\nnetwork. Hence, the automated\
    \ system of smart contracts\nhelps data arrive in any case and in good time for\
    \ analyses.\nWith minimal competition, throughput varies by simply\nadjusting\
    \ the load while latency remains constant. Te\nreason is that whatever comes in\
    \ comes out directly since\nthere is a reasonable minimum cost to complete a trans-\n\
    action, and the queuing time is zero at low congestion.\nEvery newly formed block\
    \ has a timestamp. Te\nblockchain system uses timestamps to count the number of\n\
    blocks added and produced during speciﬁc time intervals,\nsuch as per hour. Te\
    \ transaction latency metric can be\ncalculated by looking up each transaction’s\
    \ timing and\ncomparing the time it got completed to the time it was\napproved\
    \ and saved. Tis measure can also reveal the speed\nat which consensus methods\
    \ got used. Te outcomes of these\ntests provide evaluations of the blockchain\
    \ system’s func-\ntionality and scalability.\nA 3.5 GHz CPU device with 32 GB\
    \ RAM and a 3 TB hard\ndrive\nwill\nexecute\nthe\nmodel\n(Ethereum\nblockchain\n\
    network—8 nodes) with a margin of 100–120 seconds for\nlatency and a margin of\
    \ 235–260 transactions per second\n(TPS) for throughput. Data must wait to get\
    \ transferred\nwhen the local network’s capacity gets exceeded by traﬃc.\nNaturally,\
    \ there will be more delay as a result. Te latency\nwill increase as the network\
    \ becomes more crowded and we\nhave many activities simultaneously. However, solid\
    \ wireless\nsignals make it possible for data to be transported from the\nsource\
    \ to the destination within a short period and decrease\nlatency. Adding more\
    \ controllers or validators who conﬁrm\nblockchain transactions may boost performance.\n\
    Te analyzers must measure a large-scale distributed\nsystem to identify obstacles\
    \ or blockages and predict ex-\npected behavior under pressure.\n4.1. Security\
    \ Analysis. Now we will go on to the security\nanalysis part, where we will list\
    \ all of the model’s compo-\nnents and discuss how they can provide security services\
    \ and\nhow they operate together to secure our data and deliver\naccurate information\
    \ to all network members.\nSmart contracts, apps, and the blockchain environment\n\
    are vulnerable to attacks if the model gets weakly built. Let us\nstart with the\
    \ blockchain-based system, a public ledger of\ndata kept on all nodes, with all\
    \ participants receiving the\nsame version of information and updates in real\
    \ time as data\nchanges. Furthermore, users authenticate using public-key\ncryptography,\
    \ and validators check the data for accuracy\nbefore storing them in blocks; thus,\
    \ all data transactions\nought to have acceptance from all nodes in the network.\n\
    Finally, once transactions get preserved in blocks, no one or\nentity may edit\
    \ or alter the block’s content.\nTe level of security in the blockchain scheme\
    \ is in-\ntriguing, but let us now discuss smart contract security,\nwhich is\
    \ more than simply a software program that gets run\nautomatically. It is a part\
    \ of the system. In our example, it\ncan receive, transmit, and store data about\
    \ the environment,\nsuch as temperature, humidity, light, and soil pH. It can\
    \ also\ntrack down the merchandise and determine which company\nowns it. We must\
    \ not forget that smart contracts specify the\nextent of an agreement between\
    \ business parties by deﬁning\ncriteria that function as a trigger event in the\
    \ contractual\nterms. Te code gets performed, and the results get displayed\n\
    on all of the network’s nodes. Smart contracts get written\nconditionally, using\
    \ if-then expressions, and thus neglect\nmany of the problems caused by regular\
    \ agreements, such as\nfraud. Te use of blockchain to establish these types of\n\
    arrangements eliminates the need for an intermediary. As a\nresult, the total\
    \ expenditures of the company get reduced. To\nprevent losses, professionals make\
    \ timely code optimiza-\ntions, conduct frequent code audits, and monitor the\
    \ ab-\nerrant behavior of implemented deals.\nUnless you install protection, IoT\
    \ devices might be the\nweakest link in terms of security. For example, the IoT\n\
    confronts fake cell tower assaults and threats such as man-\nin-the-middle attacks\
    \ and SMS attempts such as phishing.\nBlockchain technology has been a remarkable\
    \ example of\nproviding safety in transactions and information transfer. It\n\
    oﬀers a unique data structure in addition to integrated se-\ncurity measures.\
    \ Consensus, decentralization, and cryp-\ntography—which ensure the trust of transactions—are\
    \ the\nfoundations of the blockchain.\nHowever, poor technical implementation\
    \ has led to\nseveral security vulnerabilities with blockchain. Although\nblockchain\
    \ has signiﬁcant security ﬂaws, cyber security\nexperts with special analytical\
    \ and technical skills may take\nsome steps to minimize these problems and implement\n\
    Applied Computational Intelligence and Soft Computing\n21\nblockchain in the safest\
    \ possible way. Although the sug-\ngested approach may not stop these attempts,\
    \ it makes it\ndiﬃcult for hackers to carry them out.\nA 51% assault happens when\
    \ one person or group of\nhackers gather more than half of the hash rate and takes\
    \ over\nthe entire system, which may be fatal for blockchains that\nhandle ﬁnancial\
    \ transactions. In this case, hackers can alter\ntransactions and stop the veriﬁcation\
    \ process. In sequence,\nthe entire model will not add the transactions to the\
    \ blocks.\nTe attackers can even undo already ﬁnished transactions,\nwhich leads\
    \ to double-spending. Tankfully, by increasing\nthe hash rate and reducing the\
    \ usage of proof-of-work\ntechniques, we can avoid 51% assaults. Te results conclude\n\
    that this particular threat does not beneﬁt the attacker itself\nbecause the main\
    \ goal of the suggested agricultural model is\nto organize farm environmental\
    \ data, distribute it to all\nnetwork participants, and provide a layer of security\
    \ and\nconﬁdentiality to these data.\nPhishing attacks are seriously impacting\
    \ blockchain\nnetworks. Te purpose of a phishing attack is for the hacker\nto\
    \ obtain the user’s login information. To the owner of the\nwallet key, they may\
    \ send emails that appear to be honest.\nTe user must enter their login information\
    \ into a false\nhyperlink that is connected. A user’s passwords and other\nsensitive\
    \ information may be compromised, which may\ncause harm to both the individual\
    \ and the blockchain\nnetwork. If blockchain network members get an e-mail\nasking\
    \ for login information, they must conﬁrm with the\npartner (other members, for\
    \ example). Additionally, in-\nstalling malicious link detection software might\
    \ aid in\ndefending against this threat. We can point out that con-\nnecting to\
    \ the blockchain through public Wi-Fi could be\nrisky.\nRouting attacks, for example,\
    \ are attacks when a hacker\nuses the anonymity of a user account to intercept\
    \ data as they\nget sent to Internet service providers. Data transfer and\nactivities\
    \ continue as usual in the case of a routing attack, so\nthe participants are\
    \ typically oblivious to the threat. How-\never, establishing a secure routing\
    \ protocol will solve this\nissue. Te users of the network must use strong passwords\n\
    and update them often. In practice, some farms are pretty\nlikely to adopt this\
    \ architecture, and there is a critical need to\nnotify every blockchain participant\
    \ of the risks related to\ndata security.\nUsers connect with the blockchain using\
    \ electronic\ndevices like computers and smartphones, which are the\nendpoints\
    \ of the blockchain network. Hackers can target\ndevices and monitor user activity\
    \ to obtain the user’s key.\nTe participants should not save blockchain keys on\
    \ com-\nputers as text ﬁles by network users. Identifying dangers and\nsecuring\
    \ the device include installing antivirus software.\nHackers could consider creating\
    \ plenty of phony net-\nwork nodes (Sybil attack). Tey can gain majority consensus\n\
    and stop the chain’s transactions using this technique.\nMassive Sybil strikes\
    \ implied a 51% attack. Te suggested\napproach utilizes suitable consensus methods\
    \ and keeps\ntrack of the actions of other nodes.\nSmart contract vulnerabilities\
    \ can be risky because they\ncan lead to security ﬂaws in the source code. In\
    \ this case, the\ncode is straightforward, only analyzes information, detects\n\
    crop growth conditions, and assesses the state of the product.\nOur smart contract\
    \ source code will continually get updated.\nFor instance, we may utilize the\
    \ Oyente Analysis Tool to ﬁnd\nvulnerabilities in contracts built on Ethereum.\
    \ Tis tech-\nnique evaluates the bytecode of the Ethereum blockchain.\nTe goal\
    \ of analyzing and measuring connectivity,\nmonitoring sensors, and making intelligent\
    \ modiﬁcations\nand enhancements is to maximize price and quality. IoT\ndevices\
    \ generally use Linux operating system, typically the\ncustomized version. Data\
    \ are protected when they ﬂow from\nthe local machine to the other scheme stages\
    \ in IoT security\n(blockchain and smart contract layer). IoTdevices frequently\n\
    have a mobile application and are used to connect to devices\nvia the Internet.\
    \ When monitoring the sensors wirelessly,\nuse a VPN to connect to them. Man-in-the-middle\
    \ attacks\nwill never be possible with a VPN solution. Block unneeded\nnetwork\
    \ ports, for example, the Telnet port should be\ndeactivated to prevent further\
    \ Telnet protocol attacks. By\nallowing traceable proof of ownership of products\
    \ and by\nintegrating unique tags (e.g., RFID, NFC, and QR codes) to\ncreate smart\
    \ tags, we can add a few supply chain logistics to\nensure traceability and protect\
    \ the information exchanged\nthrough blockchain.\n5. Conclusion and Future Work\n\
    In conclusion, blockchain and IoT technologies can aid in\ndeveloping a secure,\
    \ transparent, open, and innovative\necological agriculture system that involves\
    \ all participants.\nTis work aims to provide a possible technique to build\n\
    practical blockchain-based applications and change the\nagriculture industry,\
    \ even though the evolution of block-\nchain and agriculture research studies\
    \ is still in its infancy.\nTis model is considered a prototype for reducing ﬁnancial\n\
    loss and agricultural pollution. Te system deﬁnes the three\nprimary entities\
    \ in the agriculture domain: data, process, and\nstakeholders. Adding a cryptocurrency\
    \ process for the in-\nteraction between the entities and registering/tracking\
    \ the\nseller’s land will be a big step for this blockchain system\nmodel.\nData\
    \ Availability\nTe data used to support the ﬁndings of this study are\navailable\
    \ from the corresponding author upon request.\nConflicts of Interest\nTe authors\
    \ declare that they have no conﬂicts of interest.\nReferences\n[1] G. S. Sajja,\
    \ K. P. Rane, K. Phasinam, T. Kassanuk,\nE. Okoronkwo, and P. Prabhue, “Towards\
    \ applicability of\nBlockchain in Agriculture sector,” Materials Today Proceed-\n\
    ings, vol. 5, 2021.\n[2] J. Lin, Z. Shen, A. Zhang, and Y. Chai, “Blockchain and\
    \ IoT\nBased\nFood\nTraceability\nfor\nSmart\nAgriculture,”\nin\n22\nApplied Computational\
    \ Intelligence and Soft Computing\nProceedings of the 3rd International Conference\
    \ on Crowd\nScience and Engineering, Singapore, 2018.\n[3] W. Lin, X. Huang, V.\
    \ Wang et al., “Blockchain technology in\ncurrent agricultural systems: from techniques\
    \ to applica-\ntions,” IEEE Access, vol. 8, pp. 143920–143937, 2020.\n[4] H. Xiong,\
    \ T. Dalhaus, P. Wang, and J. Huang, “Blockchain\ntechnology for agriculture:\
    \ applications and rationale,” IEEE\nAccess, vol. 3, pp. 1–7, 2020.\n[5] P. Dutta,\
    \ T. M. Choi, S. Somani, and R. Butala, “Blockchain\ntechnology in supply chain\
    \ operations: Applications, chal-\nlenges and research opportunities,” Transportation\
    \ Research\nPart E: Logistics and Transportation Review, vol. 142, Article\nID\
    \ 102067, 2020.\n[6] G. Leduc, S. Kubler, and J. P. Georges, “Innovative Block-\n\
    chain-based farming marketplace and Smart contract per-\nformance evaluation,”\
    \ Journal of Cleaner Production, vol. 306,\npp. 1–15, 2021.\n[7] P. Bottoni, N.\
    \ Gessa, G. Massa, R. Pareschi, H. Selim, and\nE. Arcuri, “Intelligent smart contracts\
    \ for innovative supply\nchain management,” Frontiers in Blockchain, vol. 3, no.\
    \ 52,\n2020.\n[8] K. Dey and U. Shekhawat, “Blockchain for sustainable\ne-agriculture:\
    \ literature review,” Architecture for data man-\nagement, and implications, Journal\
    \ of Cleaner Production,\nvol. 316, pp. 1–17, 2021.\n[9] L. Hang, I. Ullah, and\
    \ D. Kim, “A secure ﬁsh farm platform\nbased on Blockchain for agriculture data\
    \ integrity,” Com-\nputers and Electronics in Agriculture, vol. 170, pp. 1–15,\
    \ 2020.\n[10] T. H. Pranto, A. A. Noman, A. Mahmud, and A. K. M. Haque,\n“Blockchain\
    \ and Smart contract for IoT enabled smart agri-\nculture,” 2021, https://arxiv.org/abs/2104.00632.\n\
    [11] X. Huang, D. Ye, and L. Shu, “Securing parked vehicle assisted\nfog computing\
    \ with Blockchain and optimal Smart contract\ndesign,” IEEE/CAA Journal of Automatica\
    \ Sinica, vol. 7, no. 2,\npp. 426–441, 2020.\n[12] L. Wang, L. Xu, S. Liu et al.,\
    \ “Smart contract-based agri-\ncultural food supply chain traceability,” IEEE\
    \ Access, vol. 9,\npp. 9296–9307, 2021.\n[13] K. Salah, N. Nizamuddin, and M.\
    \ Omar, “Blockchain-based\nsoybean traceability in agricultural supply chain,”\
    \ IEEE Ac-\ncess, vol. 7, pp. 73295–73305, 2019.\n[14] I. Widi Widayat and M.\
    \ K¨oppen, Blockchain Simulation\nEnvironment on Multi-Image Encryption for Smart\
    \ Farming\nApplication, Springer International Publishing, Berlin, Ger-\nmany,\
    \ 2021.\n[15] C. M. Balaceanu, I. Marcu, and G. Suciu, “Telemetry System\nfor\n\
    Smart\nAgriculture,”\nBusiness\nInformation\nSystems\nWorkshops, Springer, Berlin,\
    \ germany, 2019.\n[16] H. Patel and B. Shrimali, “AgriOnBlock: Secured data har-\n\
    vesting for agriculture sector using Blockchain technology,”\nICT Express, vol.\
    \ 10, 2021.\n[17] S. Hu, S. Huang, J. Huang, and J. Su, “Blockchain and edge\n\
    computing technology enabling organic agricultural supply\nchain: a framework\
    \ solution to trust crisis,” Computers &\nIndustrial Engineering, vol. 153, pp.\
    \ 1–12, 2021.\n[18] H. N. Dai, Z. Zheng, and Y. Zhang, “Blockchain for internet\
    \ of\nTings: a survey,” IEEE Internet of Tings Journal, vol. 6, no. 5,\npp. 8076–8094,\
    \ 2019.\n[19] M. A. Shu and L. Shu, “Te performance evaluation of\nblockchain-based\
    \ security and privacy systems for the internet\nof Tings: a tutorial,” IEEE Internet\
    \ of Tings Journal, vol. 8,\nno. 24, pp. 17236–17260, 2021.\n[20] K. Peng, M.\
    \ Li, C. Wang, S. Wan, and K.-K. R. Choo, “Security\nchallenges and Opportunities\
    \ for smart contracts in internet\nof Tings: a survey,” IEEE Internet of Tings\
    \ Journal, vol. 8,\nno. 15, pp. 12004–12020, 2021.\n[21] L. Hang, B. Kim, K. Kim,\
    \ and D. Kim, “A permissioned\nblockchain-based clinical trial service platform\
    \ to improve\ntrial data transparency,” BioMed Research International,\nvol. 2021,\
    \ no. 22, 2021.\n[22] L. Hang, B. Kim, and D. Kim, “A transaction traﬃc control\n\
    approach based on fuzzy logic to improve hyperledger fabric\nperformance,” Wireless\
    \ Communications and Mobile Com-\nputing, vol. 2022, Article ID 2032165, 19 pages,\
    \ 2022.\n[23] R. Kumar, P. Kumar, A. Aljuhani, A. K. M. Najmul Islam,\nA. Jolfaei,\
    \ and S. Garg, “Deep learning and smart contract-\nassisted secure data sharing\
    \ for IoT-based intelligent agri-\nculture,” IEEE Intelligent Systems, vol. 99,\
    \ 2022.\n[24] J. DafniRose and J. DafniRose, “Blockchain-enabled smart\nagricultural\
    \ knowledge discovery system using edge com-\nputing,” Procedia Computer Science,\
    \ vol. 202, pp. 73–82, 2022.\n[25] A. E. Mane, M. Chihab, O. Bencharef, and C.\
    \ Younes, “Ar-\nchitectural scheme of a multi-Blockchain in the Agricultural\n\
    ﬁeld,” E3S Web of Conferences, vol. 297, no. 4, 2021.\nApplied Computational Intelligence\
    \ and Soft Computing\n23\n"
  inline_citation: '>'
  journal: Applied Computational Intelligence and Soft Computing
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/acisc/2022/8011525.pdf
  publication_year: 2022
  relevance_score: 0.9070748299319727
  relevance_score1: 0
  relevance_score2: 0
  title: Agriculture Supply Chain Management Based on Blockchain Architecture and
    Smart Contracts
  verbatim_quote1: Water level in the reservoir | Water control board or gauges/sensors
    in the dam
  verbatim_quote2: Precipitation (often used as a proxy for the total amount of water
    coming into the system) | rain gauges or radar
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2023.3281731
  analysis: The paper contributes to addressing the global food challenge by exploring
    the use of automated systems for real-time irrigation management. It presents
    a comprehensive literature review on the current state and future potential of
    AI, IoT, and machine learning technologies in this domain, identifying gaps and
    proposing solutions for seamless integration across the automated irrigation management
    pipeline. The review highlights the role of interoperability and standardization
    in enabling the integration of components within the automated irrigation management
    system and analyzes the attacker models, impacts of the attack, and detection
    and mitigation mechanisms. A taxonomy of various defense mechanisms is redesigned
    based on their objectives and basis. The defense mechanisms were also analyzed
    to identify the most relevant verbatim quotes from the paper.
  authors:
  - Ala Altaweel
  - Hena Mukkath
  - Ibrahim Kamel
  citation_count: 4
  full_citation: 'GPS Spoofing Attacks in FANETs: A Systematic Literature Review'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access
    >Volume: 11 GPS Spoofing Attacks in FANETs: A Systematic Literature Review Publisher:
    IEEE Cite This PDF Ala Altaweel; Hena Mukkath; Ibrahim Kamel All Authors 3 Cites
    in Papers 1620 Full Text Views Open Access Comment(s) Under a Creative Commons
    License Abstract Document Sections I. Introduction II. Fanets: Technical Background
    and Applications III. Methodology IV. State-of-the-Art V. GPS Spoofing in FANETs:
    A Taxonomy Show Full Outline Authors Figures References Citations Keywords Metrics
    Abstract: Flying Ad-Hoc Networks (FANETs) are groups of UAVs connected in an Ad-Hoc
    manner to accomplish a common mission. The widespread acceptance of UAVs due to
    their low cost and high efficiency has attracted malicious security attacks against
    them. These attacks cannot be easily prevented due to UAVs’ limited computational
    power, short battery life, and inability to execute complex algorithms. FANETs
    rely on the Global Positioning System (GPS) for localization. GPS Spoofing, an
    easy-to-launch attack, is one of the main challenges in FANETs. In which, the
    legitimate and not-encrypted civilian GPS signals are overridden by counterfeit
    signals to deceive the UAVs to collide or to be hijacked. Researchers proposed
    various countermeasures to address GPS Spoofing attacks in FANETs. To further
    assist future research, this paper provides a systematic literature review on
    GPS Spoofing attacks in FANETs and their defense mechanisms. After formulating
    eight research questions and applying well-defined inclusion/exclusion criteria
    and quality assessment tools, 70 research articles were extracted. The existing
    defense mechanisms were classified based on their objectives (i.e., detection,
    mitigation, and/or prevention) and according to their basis (i.e., relying on
    readings from various drones’ devices/sensors, processing the signals received
    by various sensors, employing machine learning algorithms, relying on game theory,
    or leveraging cryptographic techniques to authenticate and protect the confidentiality
    of GPS signals). The defense mechanisms were also analyzed to identify the attacker
    models, impacts of the attack, and detection performance. This study found that
    most of the proposed methods are detection approaches, rather than mitigation
    or prevention. Also, almost all papers used simulation experiments rather than
    a proof-of-concept implementation, which does not demonstrate a convincing performance
    under realistic mobility and propagation models. Moreover, most solutions ad...
    (Show More) GPS Spoofing Attack Scenario in FANET: the UAV at the ''Original Location''
    travels to the ''Desired Destination Location'' through the ''Original Path''
    (shown in green). The ...View more Published in: IEEE Access ( Volume: 11) Page(s):
    55233 - 55280 Date of Publication: 31 May 2023 Electronic ISSN: 2169-3536 DOI:
    10.1109/ACCESS.2023.3281731 Publisher: IEEE Funding Agency: SECTION I. Introduction
    The advancements in technology have invaded almost every sphere of human life.
    Human intervention is been getting expelled from the aircraft industry as well.
    The development of autonomous drones or Unmanned Ariel Vehicles (UAVs), popularly
    known as ‘drones’, is a major indication of this fact. The drone market has put
    on huge investments since the beginning of this decade. As per a report from the
    Drone Industry Insights [1], the drone market worth ~ $ 30.6 billion in 2022 and
    is expected to reach ~ $ 55.8 billion by 2030. This is due to the widespread acceptance
    of UAVs for various military and civilian applications such as border surveillance
    [2], disaster monitoring [3], traffic monitoring [4], managing wildfire [5], relay
    for Ad-Hoc networks [6], wind estimation [7], emergency management and high-risk
    situations [8], etc. The deployment of UAVs not only nullifies the risk for human
    operators but also minimizes the probability of human errors. Single large UAVs
    were recently used, yet, they are inadequate in terms of capability [9]. Thus,
    the technologists found it is advantageous to deploy small multiple UAVs that
    work in groups. FANET is a self-organized UAV network, popularly known as UAV
    Swarm, in which UAVs operate together collaboratively to accomplish various missions.
    The UAVs in FANETs communicate with each other by establishing wireless Ad-Hoc
    UAV-to-UAV communication links [10]. That is, no pre-established infrastructure
    is required for FANET deployment. The capability of sharing information, not only
    with the ground station but also among the UAVs, makes FANETs less prone to the
    difficulties of short-range communications and network failures, which might occur
    when a single UAV is deployed. The deployment of multi-UAVs in groups is advantageous
    due to many reasons. The cost [11] of deploying and maintaining small UAVs instead
    of larger ones is more feasible. The scalability [11] of operation also enhances
    with small multi-UAVs. Also, since multiple UAVs work together, the chance of
    Single-Point-of-Failure [12] is minimized. Moreover, multiple UAVs can accomplish
    a task more efficiently [13]. On the other hand, FANETs confront various technical
    and security challenges [14]. The battery with limited capacity poses a major
    challenge in UAV operations by limiting their flight time. UAVs’ computational
    power and storage are also limited. UAVs normally hover in 3-D space with a speed
    range of 30–460 km/h [15], leading to frequent variations in communication distances
    and topology changes. The drones should maintain connectivity within the network
    such that the area covered by individual drones and the swarm as a whole is maximized
    without causing network partitioning. The locational information provided by the
    GPS plays a vital role in this regard. The exchanged GPS information among the
    drones helps in relatively localizing each drone to other drones as well as within
    the swarm area. With the widespread acceptance of FANETs among public and private
    entities, they are also targeted by malicious attackers. The GPS sensors in drones
    are vulnerable to GPS Spoofing and Jamming attacks, which are the most popular
    and easy-to-launch attacks that can be instigated using low-cost Software Defined
    Radio (SDR) [16]. While Jamming intends to deny GPS services in the target area
    by transmitting stronger signals with the same frequency used by genuine GPS signals,
    spoofing attacks intend to redirect the UAVs from their actual path to the attacker’s
    desired path. In December 2012, Iranian army engineers claimed that they hijacked
    a surveillance drone launched by U.S. Central Intelligence Agency (CIA) RQ170
    Sentinel [17]. The first successful spoofing on GPS receivers of drones was demonstrated
    by a research team at the University of Texas [18], [19] as a part of a demonstration
    to raise concerns about civilian drone regulations. The U.S. Customs and Border
    Protection reported that some drug cartels spoofed their drones in 2015 and the
    attacks of the same kind increased afterward [20]. To address the aforesaid research
    challenge, a systematic literature review has been conducted with the aim of pinpointing
    the state-of-the-art of GPS Spoofing attacks in FANET, the attacker capabilities,
    and the detection and mitigation mechanisms. To the best of our knowledge, this
    is the first systematic review on GPS Spoofing attacks in FANETs that followed
    the review guidelines proposed by [21]. These guidelines are widely adopted by
    the research community to conduct unbiased and high-quality surveys. The articles
    published during the tenure from 2017 to 2022 are considered, as GPS Spoofing
    in FANETs is a recently developed research area. This survey was conducted in
    three phases. Specifically, planning, conducting, and reporting. In the planning
    phase, eight Research Questions were formulated. The articles for this survey
    have been collected from five databases, namely, IEEE XPlore®, ACM Digital Library,
    ScienceDirect®, SpringerLink and Google Scholar in the conducting phase. Afterward,
    70 papers including 14 state-of-the-art survey papers and 56 technical papers
    relevant to the survey’s topic were extracted. Among the 56 technical papers,
    37 papers proposed various solutions to defend against GPS spoofing attacks in
    UAVs, nine papers discussed GPS Spoofing attack mechanisms, eight papers discussed
    how GPS spoofing can be used to deter malicious drones from sensitive areas, one
    article conducted an impact study on GPS Spoofing attack in UAVs, and one article
    portrayed the vulnerability of UAVs to GPS Spoofing attack. The extracted technical
    papers were categorized into four groups. Specifically, GPS Spoofing attack mechanisms
    (that discussed the attacker models), GPS Spoofing defense mechanisms, GPS Spoofing
    as a defense mechanism (that leverages GPS Spoofing techniques to defend against
    other attacks), as well as GPS Spoofing impact and vulnerability, which studied
    the impact of and vulnerability to GPS Spoofing attack on drones. Then, a taxonomy
    of various defense mechanisms is redesigned based on their objectives and basis.
    For the objectives, the defense mechanisms are classified into three categories:
    1) detection mechanisms, which sense or alert the presence of attack, 2) mitigation
    mechanisms, which help the drones to recover from the effects of the attack, 3)
    prevention mechanisms, which secure the drones from being attacked. For the basis,
    the defense mechanisms can also be classified into five categories: 1) onboard
    sensor/devices, which compare the readings from the devices on the drones like
    cameras, gyroscopes, accelerometers, barometers, etc. with the readings of GPS
    receivers, 2) signal processing methods, which analyze the received signal parameters
    like the Time of Arrival, Angle of Arrival, Signal Strength, etc., 3) cryptographic
    techniques such as encryption, decryption, authentication, digital signatures,
    etc., which are used to secure and verify the GPS signals received by the drones,
    4) game-theory based methods, which depend on the strategic movements of the attacker
    and the victim during the attack, and 5) machine learning-based methods, which
    leverage the training and learning models designed to defend against the attacks.
    The survey aims to enable the readers to gain insights into the directions of
    research in the field of GPS Spoofing attacks in FANETs. Also, the readers are
    aided to find the research gaps existing in the domain. The major contributions
    of this survey are as follows: Comprehensive guidelines for researchers in terms
    of FANETs’ features, applications, mobility, propagation models, communication
    protocols, and security challenges (in Section II) are provided. GPS Spoofing
    attacks and their impacts are also discussed in detail. Following the guidelines
    of Kitechenham and Charters [21], this survey systematically extracted 70 articles
    that are relevant to GPS Spoofing attacks in UAVs, by applying the planning, conducting,
    and reporting phases recommended by [21] (in Section III). The extracted articles
    were classified into state-of-the-art articles and technical articles. A detailed
    analysis of the state-of-the-art articles in terms of the number of papers surveyed,
    the years of publications considered, and a brief description of the concepts
    discussed in these articles are provided (in Section IV). A summarized table of
    these articles is also provided in Table 11 in the Appendix. The technical articles
    on GPS Spoofing are classified (in Section V) into four main categories as follows:
    GPS Spoofing attack mechanisms: the articles that discussed the attacker models.
    As a part of the attacker model, we discussed: Spoofing tools such as simulators,
    repeaters, etc. Spoofing techniques such as position denial and track break. Spoofer
    location such as remote, onboard, and escort. Defense mechanisms against GPS Spoofing:
    the research articles that discuss various mechanisms to defend against GPS Spoofing
    attacks in UAVs. These articles are further classified based on their objectives
    as follows: Detection of GPS Spoofing attacks. Mitigation the damage caused by
    GPS Spoofing attacks. Prevention of GPS Spoofing. The defense mechanisms are also
    classified according to their basis as follows: The use of devices/sensors on
    the drones. Signal processing techniques applied on various signals received by
    various sensors on the drone. Cryptographic techniques to protect the confidentiality
    of data collected by the drones. Game-theory techniques that are used to defend
    against GPS Spoofing attacks. Machine learning techniques that are used to defend
    against GPS Spoofing attacks. Use of GPS Spoofing as a mechanism to deter malicious
    drones from sensitive infrastructure. Impact and Vulnerability: the articles that
    discussed the impact of the GPS Spoofing attack and the vulnerability of drones
    to it. The above taxonomy is based on a systematic analysis of various approaches
    that deal with GPS Spoofing attacks in UAVs. The diversity in the existing research
    works and the lack of a proper taxonomy is the motivation behind the development
    of the above taxonomy. This survey aims to classify all the existing methods under
    various headers and conduct a comparative survey to identify the open issues for
    future research works. An extensive study of the 37 articles that dealt with defense
    mechanisms against GPS Spoofing attacks is conducted in Section V. The study focused
    on the proposed defense methodology in the existing works to extract the number
    of UAVs considered (i.e., FANET or single UAV environment), the detection performance
    evaluation methodologies (i.e., simulation or proof-of-concept implementation),
    and the performance metrics used. The limitations and open issues in the existing
    research are also identified. A detailed discussion and comparative analysis of
    the extracted results in terms of the datasets used in the experiments, the attacker
    models, the performance evaluation methods, and metrics from all covered articles
    are provided. This analysis is done in order to understand the current state of
    the defense mechanisms, identify the research gaps, and propose recommendations
    for future research works (in Section VI). TABLE 1 Abbreviations Related to FANET
    Environment TABLE 2 Abbreviations Related to Attacker Models TABLE 3 Classification
    of FANET Propagation Models TABLE 4 Communication Technologies Used in FANET TABLE
    5 Symbols and Meanings TABLE 6 Research Questions and Motivations TABLE 7 Database
    and Search Results (2017-2022) Before & After Inclusion/Exclusion Criteria TABLE
    8 Analysis of the Attacker Models TABLE 9 List of Drones that Can Be Used for
    FANET Formation TABLE 10 Overview of Datasets TABLE 11 Comparative Analysis of
    the State-of-Art Articles The rest of this paper is organized as follows: Section
    II briefly describes the technical background of FANETs, which includes a discussion
    of their mobility and propagation models, communication protocols, applications,
    performance evaluation methods and metrics, and security challenges. A special
    focus on GPS Spoofing attacks and their impacts on FANETs is also provided. Section
    III presents the systematic literature review methodology that was applied in
    this study. In Section IV, the state-of-the-art papers are discussed. The technical
    papers on GPS Spoofing attacks, the existing solutions, the application of GPS
    Spoofing attacks (as a defense mechanism), and the impact and vulnerability of
    the GPS Spoofing attack are elaborated in Section V. The results, discussions,
    and research gaps are portrayed in Section VI. The paper is concluded in Section
    VII. SECTION II. Fanets: Technical Background and Applications In this section,
    the acronym ‘FANET’ is introduced in detail with a substantial description of
    the unique characteristics, mobility and propagation models, communication protocols,
    applications, and security issues in FANETs. Furthermore, various performance
    metrics that can be used to evaluate the performance of the FANET environment
    are also discussed. A. Fanets: Flying AD-Hoc Networks FANETs comprise UAVs, connected
    together in an Ad-Hoc manner. The major components of an Unmanned Aerial System
    (UAS) include the UAV, the GCS, and the communication links. The communication
    links include the UAV-to-UAV links, UAV-to-Satellite links, and UAV-to-GCS links
    [11]. The UAVs in FANET utilize GPS and this locational information is exchanged
    within the network for maintaining the FANET topology. Fig. 1 depicts a typical
    FANET environment. The UAVs communicate with each other through Ad-Hoc UAV-to-UAV
    links. The UAVs have onboard GPS receivers and the locational information (via
    UAV-to-Satellite link) received from at least four satellites [22] is used to
    find the UAV position through the process of trilateration [23]. The radio waves
    from the satellite travel at the speed of light and the time of departure of the
    GPS signal from the satellite are obtained from this signal. The speed and time
    obtained are used by the GPS receivers to compute the distance between the satellite
    and the GPS receiver. One (or more) of the UAVs communicate with the GCS for exchanging
    control and other relevant information. Table 1 shows various abbreviations related
    to the FANET environment that are used throughout this paper. Some other common
    abbreviations used in this paper are shown in Table 2. FIGURE 1. A typical FANET
    environment. Show All The UAVs constituting the FANETs are generally low-cost
    commercial off-the-shelf devices with limited computational power and storage.
    Thus, FANETs cannot rely on algorithms requiring complex computations for accomplishing
    their mission or incorporating security features. Due to the size and weight constraints
    of drones in FANETs, it is not possible to leverage powerful computation hardware.
    Also, since complex computations consume lots of energy, the battery gets drained
    faster. In Section II-B below, we provide a detailed discussion of the unique
    characteristic features of FANETs. B. Unique Features of FANET The unique characteristics
    of FANET [24] are depicted in Fig. 2 and are elaborated in the subsequent lines:
    Dynamic Network Topology: The higher mobility and the failure or injection of
    drones in the FANET cause frequent topology changes. The movement of drones and
    the resultant variations in the distance between drones can lead to link outages
    [11]. Mobility Models: The drones in FANET follow either a pre-defined trajectory
    or random paths [11]. A detailed discussion of the mobility models is provided
    in Section II-C. Node Mobility: The drones in FANET move at higher speeds than
    those in a MANET or VANET. Based on the type of flight and mission, this speed
    can range from 30 to 460 km/h. These variations in speed present various communication
    problems [11] such as network partitioning. Node Density: The UAVs in a FANET
    are generally distributed across the entire swarm area so that the coverage area
    of individual drones and the FANET itself are maximized. Thus, the node density
    (number of drones per unit area) is lesser when compared to the other networks
    such as MANET or VANET [11]. Propagation Models: The communication between the
    UAVs (U2U) in the FANET is Line-of-Sight and those between UAV and GCSs are nLos
    (non-Line-of-Sight) [25]. A detailed discussion of the propagation models in FANET
    is provided in Section II-C. Power Consumption: FANETs, with battery-powered,
    drones are energy-limited devices. The power consumption varies with the size
    of the drones, distance to be covered, mission, communication hardware used, etc.
    [11]. Lowering the dependence on power-sensitive devices and complex computational
    algorithms in FANETs can enhance the network lifetime and reduce network outages.
    3-D Space: FANET flies in free space, mostly far above the ground without obstructions
    such as buildings, trees, etc. Thus, there is no significant path loss in the
    signals transmitted among the drones FIGURE 2. Unique features of FANET. Show
    All The frequent topology variations impact the communication and collaboration
    of the drones in a FANET. The movement pattern of the drones is represented (i.e.,
    modeled) using various mobility patterns, which are discussed in Section II-C.
    C. Mobility and Propagation Models in FANETs FANETs are unique in terms of their
    mobility, topology variations, propagation, and energy constraints [11]. In this
    section, some light is thrown on the mobility and propagation models in FANETs,
    which are also part of the Research Questions in this study (Section III-A: RQ6
    and RQ7). The UAVs in FANET move with higher velocity when compared to the ancestral
    networks, namely, MANETs and VANETs. Moreover, the UAVs hover in three-dimensional
    (3-D) space (roll, pitch, and yaw). Hence, more adequate mobility models are employed
    that simulate the motion of FANETs in real-world scenarios. Mobility models describe
    the motion pattern of the UAV including the velocity (speed change and direction)
    and acceleration. Different mobility models have been used in FANET environments
    such as random, group, time-dependant, and path-planned. A classification FANETs
    mobility models based on a study by Wheeb et al. [26] is illustrated in Fig. 3
    and is briefly described below: Random Mobility Model: The drones in this mobility
    model move randomly and freely without any restrictions. Thus, this mobility model
    is not preferable for FANET scenarios as the drones in FANET should move in a
    coordinated manner without network partitioning. Random mobility model is further
    classified into the following four sub-types: Random Walk (RW) in which the drones
    move in a random direction and speed for a fixed interval of time or distance,
    then new speed and direction are calculated. These are memory-less models. Random
    Waypoint (RWP) in which halts are taken upon reaching each waypoint and then move
    to the random direction at a random speed. Random Direction (RD) in which the
    destination is chosen towards the boundary of the simulation area; once it reaches
    the destination, it stops and new destinations are chosen again. Manhattan Grid
    (MG) in which the UAVs follow a grid-structure path layout. These mobility models
    are used in scenarios where paths are well-defined. The UAV randomly chooses to
    move in the same direction or take turns at intersections of the grid. Group Mobility
    Model: This mobility model is deployed in scenarios where drones should move in
    groups, as is the case in FANETs, to accomplish a specific mission. This model
    can be further categorized into the following four sub-types: Column (CLMN) in
    which a point of reference along a straight line will be defined; each node revolves
    around this point in a random direction and speed. Exponential Correlated Random
    (ECR) in which a group of nodes exhibits correlated dynamic motion. Nomadic Community
    (NC) in which every UAV node moves randomly around certain reference points following
    the same path leading to a collision. Pursue (PRS) in which the UAV tracks a particular
    UAV that travels in a specific way. Time-dependent: The sudden changes in speed
    and direction are avoided in this model by considering various parameters like
    prior direction, current time, speed, etc. This model can be further categorized
    into the following three sub-types: Gauss Markov (GM) in which sudden movement
    changes are minimized by adjusting randomness in direction and speed. Smooth Turn
    (ST) in which the accelerations of UAVs are always maintained by adjusting the
    spatial and temporal variables. Enhanced Gauss Markov (EGM) which is most widely
    used in FANETs. The direction deviations are used to reduce sharp turns and stops.
    Path-Planned: A pre-determined trajectory is generated and stored for each UAV.
    This model can be further classified into the following three sub-types: Flight
    Plan (FP) in which UAV’s flight plan is defined in a special file and time-dependent
    flight maps are designed accordingly. Semi Random Circular (SRCM) in which UAVs
    move in curved paths around a central point. Paparazzi Model (PPRZM), a Probabilistic
    model based on state machines with five possible movements, namely, waypoint,
    scan, stay-at, eight, and oval. FIGURE 3. Classification of FANET mobility models.
    Show All Propagation models also occupy a relevant space in FANET communication.
    Propagation model refers to the mathematical modeling of the radio channel through
    which the waves are transmitted (i.e., to simulate the attenuation of the waves
    when propagated [27]). The FANET environment faces several challenges with regard
    to radio propagation. This is due to the frequent differences in communication
    distance between various nodes, the antenna pattern, shadowing from other UAVs,
    fluctuations in the link quality due to UAV attitude (yaw, pitch, and roll), and
    other environmental elements. The deployment of FANETs requires adequate knowledge
    of the radio channel characteristics. The communications between the UAVs (U2U)
    in the FANET are Line-of-Sight. Differently, they are nLos (non-Line-of-Sight)
    between UAV and GCSs. There are three major propagation models studied by Jun
    Peng [25] for UAV networks. Specifically, the free-space model, the two-ray model,
    and the shadowing model. A brief description of the propagation models is summarized
    in Table 3. Another categorization by Antonio et al. [27] modeled the channel
    losses through which the electromagnetic waves (EM) are attenuated. The propagation
    models are divided into three classes. Specifically, theoretical, empirical, and
    semi-empirical models. The antenna structure also has an intense impact on the
    communication architecture of FANET. Directional and Omnidirectional antennas
    are used in FANET communications [15]. D. Communication Protocols in FANETs The
    UAVs in a FANET communicate with each other through Ad-Hoc links established among
    each other without requiring any infrastructure. Setting up and maintaining such
    a network is challenging due to node mobility, high speed, operating environment,
    unstable communication links, and resource limitations. FANET requires efficient
    and secure wireless communication to be established with the ground stations as
    well as with other drones in the network. Short-range unlicensed wireless technologies
    like Wi-Fi (IEEE 802.11), Bluetooth (IEEE 805.15.1), and Zigbee (IEEE 802.15.4)
    are most commonly used for drone communication [28]. LoRaWAN besides licensed
    and infrastructure-based technologies that rely on 5G, Beyond 5G, and 6G are also
    used in FANET for long-range communications (i.e., to enhance coverage and throughput
    demands). Table 4 showcases a summary of these technologies. IEEE 802.11n and
    IEEE 802.15.4 protocols are mostly used for data exchanges in FANETs [29]. IEEE
    802.11n ensures high data delivery no matter the number of UAVs in the network;
    however, it is costlier, consumes more power, and is more complex compared to
    IEEE 802.15.4. Also, due to the frequent fluctuations in the link quality, mesh
    topology (UAVs route messages to the GCS) is preferred over star topology (all
    drones directly communicate with the GCS) in a FANET scenario. Peer-to-peer communication
    is established for collaborative mission completion and collision avoidance. Various
    routing protocols [30] have been proposed to establish robust and reliable communications
    among the drones in FANET. E. Applications of FANETs Multiple UAVs cooperate to
    accomplish various applications in a collaborative manner. These include applications
    in remote sensing, the construction industry, drone delivery services, search
    and rescue operations, and monitoring and surveillance, as shown in Fig. 4. We
    present more details about these applications in the next paragraphs. FIGURE 4.
    Applications of FANETs. Show All 1) Search and Rescue Operations UAVs are widely
    considered nowadays for critical situations such as disaster management, rescue
    operations, and public safety. UAVs offer real-time visual (image/ video) data
    of intended locations. Consequently, a search and rescue team can timely detect
    and decide where accurately the assistance is urgently required. For instance,
    drones can be used to track people who were lost during any mission or to protect
    people lost in remote deserts or forests [31]. 2) Construction Industry UAVs can
    be deployed to monitor the progress and safety of construction and various equipment
    by providing a real-time visual view of the sites. Monitoring construction projects
    from beginning to end ensures the quality of work. The cracks in the buildings,
    pipelines, and other surfaces can also be accurately monitored using UAVs [32].
    3) Precision Agriculture Drones are deployed in precision agriculture for sensing
    water quality, soil properties, pesticide spraying, disease and weed detection,
    and irrigation scheduling. The incorporation of UAVs in precision agriculture
    saved a lot of time and cost, enhancing productivity and crop yields [33]. 4)
    Traffic Monitoring Reliable and smart UAVs can aid in the automation of rescue
    teams, surveyors, and traffic police. UAVs can gather data about traffic conditions
    on highways as they can be deployed to get a vision of road accidents or vehicle
    thefts, to detect vehicle over-speeding, as well as to assist in avoiding traffic
    jams and mass congestion [34]. 5) Military Services UAVs play an integral role
    in military services. Most countries have added UAVs to their defense strategic
    plans to be used for enemy detection, border control, and maritime monitoring
    of critical sea lanes [35]. 6) Disaster Management Drones play significant roles
    in the management of man-made or natural disasters such as terrorist attacks and
    floods. These disasters can severely destruct the telecommunication infrastructure,
    transportation, power, water, and other supplies. UAVs can be deployed to locate
    disasters and provide alerts. For instance, a swarm of drones can be deployed
    to extinguish fires in case of wild or domestic fires, so that human safety is
    not compromised [36]. 7) Delivery Drones UAVs are also prominent nowadays for
    delivering various services including medicines, food, documents, and other services.
    Drones can be deployed to transport medicinal products (e.g., organs for transplantation,
    vaccines, pharmaceuticals, and medical samples) and prepared foods (e.g., pizzas
    and frozen beverages) [37]. 8) Entertainment Purpose Apart from the above applications,
    drones are nowadays prominently used for various entertainment purposes such as
    light shows, airshows, photography, cinema, etc. [38]. F. Performance Metrics
    In this section, various performance metrics that were used to evaluate the performance
    of the proposed systems have been elaborated. Various symbols used in the equations
    to compute these metrics are listed in Table 5. False Positive is the number of
    non-attack cases detected as attacks by the system/algorithm. The False Positive
    Rate (FPR), the ratio of false positives to total non-attack cases, should be
    minimized to avoid the problem of Denial-of-Service (DoS) to legitimate users.
    True Positive is the number of attack cases correctly detected by the system/algorithm.
    The True Positive Rate (TPR), which is the ratio of true positives to the total
    attack cases, should be maximized to discriminate and block the attackers. False
    Negative is the number of attack cases not detected by the system/algorithm. In
    other words, it is the number of attack cases reported as legitimate cases. The
    False Negative Rate (FNR), the ratio of false negatives to total attack cases,
    should be minimized to discriminate against and block the attackers. True Positive
    Rate and False Negative Rate can be related using the following equation: FNR=1−TPR
    (1) View Source In relation to the above three metrics, systems can be also evaluated
    using Recall, Precision, and F1-score metrics as follows: Recall Precision F1−score
    = t p t p + f n = t p t p + f p =avg(Recall,Precision) (2) (3) (4) View Source
    Detection Latency refers to the time delay between the instigation of attack and
    detection of attack by the system/algorithm. Detection latency is a crucial metric
    since it represents the time the attacker has to hijack the UAVs or cause mission
    failure before he/she gets detected. Position Drift refers to the UAV displacement
    caused by spoofed signals from the original trajectory. Root Mean Square Error
    (RMSE) indicates the differences between the values (e.g., position or velocity
    of UAV) predicted by a model and the actual or observed value. RMSE= 1 n ∑ N i=1
    ( P i − A i ) 2 − − − − − − − − − − − − − − − √ (5) View Source Accuracy refers
    to the ratio of correct predictions, both the true and attack signals, to the
    number of cases under consideration. Accuracy= t p + t n t p + f p + t n + f n
    (6) View Source UAV Capture Probability is the probability that a drone gets captured
    or hijacked by an attacker in presence of the proposed algorithm. Power Consumption
    refers to the energy consumed (battery) for the execution of the proposed algorithm.
    This metric should be minimized since drones are battery-limited entities. Memory
    Consumption indicates the storage requirements of the proposed algorithms. The
    value of this metric should be low or negligible since the drones cannot carry
    large storage devices due to their light weightiness. G. Security Issues in FANETs
    FANETs are prone to various cyber-attacks, which are broadly classified into three
    categories by Mohsen et al. [39], namely, Data Interception attacks, Data Manipulation
    attacks, and Denial-of-Service attacks. Data interception attacks such as Eavesdropping
    and Key Logging mainly target the privacy of information transmitted between the
    UAV and the GCS. Data Manipulation attacks such as GPS Spoofing attacks, de-authentication,
    message injection, modification, and deletion mainly aim to hijack or take UAV
    control. Jamming are examples of Denial-of-Service attacks. GPS Spoofing attack
    is one of the most dreadful attacks since it can capture, mislead and/or make
    the UAV collide with other UAVs or objects causing security and safety concerns.
    The ease of availability of low-cost Software Defined Radios (SDR) and the open
    nature of GPS signals have attracted the malicious attackers to exploit the UAV’s
    vulnerabilities. In the following paragraphs, the GPS Spoofing attacks in UAVs
    and their impacts are briefly discussed. GPS is a Global Navigation Satellite
    System (GNSS) that uses positional information broadcasted by satellite constellations.
    Different broadcast frequencies and modulation techniques are used by these satellites.
    The frequency of 1575.42 MHz is used for civilian GPS Signals and is popularly
    known as the L1 band. The Course Acquisition Code (C/A) is a Pseudo Random Number
    (PRN), which identifies the satellite of origin. Generally, a minimum of four
    satellite signals are needed to be identified by the receiver using PRNs to calculate
    its position and time information by correlation. The GPS positioning systems
    apply the principle of three-sphere positioning. That is, the signal propagation
    delay to the GPS receiver is obtained from three satellites and it is multiplied
    with the speed of light. The pseudo-distance obtained from the three satellites
    gives three spherically connected equations. The readings from the fourth satellite
    are used for adjusting the clock differences. GPS Spoofing attacks are launched
    in two ways: 1) The attacker locks the GPS receiver of the target by computing
    the pseudo-distance first. The received signal is jammed, delayed, and then forwarded.
    2) The attacker generates counterfeit signals by analyzing the satellite signal
    characteristics to broadcast in the target located area. Both methods can mislead
    the target with erroneous locational information. As a consequence of GPS Spoofing,
    the entire network operation, and the existence of the network itself is severely
    affected. Fig. 5 illustrates a GPS Spoofing attack scenario in which the UAV at
    the ‘Original Location’ travels to the ‘Desired Destination Location’ through
    the ‘Original Path’ that is shown in green. The spoofer desires to redirect the
    UAV to the position labeled as ‘Attacker Desired Destination’. The spoofer sends
    fake locational information to the UAV such that the UAV perceives that it is
    navigating in the wrong trajectory. However, it is located at the ‘Actual Current
    Location’, the spoofer deceives the UAV that it is located at the position labeled
    as ‘Fake Current Location’. The UAV then follows the ‘Perceived Flight Trajectory’
    shown as the blue arrow in Fig. 5. This movement makes the UAV travel in the ‘Actual
    Flight Trajectory’ shown in the dark red arrow, leading it to the ‘Attacker Desired
    Destination’. FIGURE 5. Illustration of GPS spoofing attack in UAV. Show All Location
    awareness of constituent nodes is required for better performance of FANETs or
    UAV swarms. The current UAV positions are exchanged within the network with other
    UAVs, GCS, and/or other centralized services for topology maintenance. Forging
    the GPS signals, which is the main source of localization in FANETs, and disseminating
    this information in the network has harsh impacts on FANETs missions as follows:
    The absolute or relative locational information of UAVs is required for the successful
    completion of FANET’s mission. So, falsifying this information can lead to mission
    failure. Wrong locational information can cause two UAVs to collide. False location
    information can cause the UAV to enter geofenced areas such as military bases,
    airports, etc. Line-of-Sight (LoS) propagation is used by malicious UAVs to disseminate
    fake locational information. Hence, there is no chance of multi-path fading, which
    can be monitored otherwise using SNR (Signal-to-Noise Ratio) or C/N0 (Carrier-to-Noise
    Power Density, N0 represents the noise spectral density). SNR and C/N0 are vital
    parameters to analyze the performance of GPS receivers. In one aspect, GPS Spoofing
    in drones is relatively simple as multiple low-cost and simple drones are used.
    In another aspect, the spoofer has to counteract the swarm formation, i.e., the
    position of the FANET as a whole as well as the relative positions of UAVs within
    the swarm also has to be taken into account when spoofing attack is launched.
    A fake GPS signal relative to an individual drone will make obvious changes in
    the swarm formation and hence be detected easily. Thus, it can be concluded that
    deeper investigations on the threat of GPS Spoofing attacks in FANETs need to
    be conducted. This paper conducts a systematic literature survey on this topic,
    so future researchers can conceive this survey as a comprehensive guide to propose
    various solutions to secure the FANET environment from the threat of GPS Spoofing
    attacks. In the following section, the methodology adopted for this survey has
    been detailed. Specifically, Research Questions, Search Strategy, Keywords, Databases,
    Selection Criteria, Quality Assessment Tools, Data Extraction, and Data Synthesis.
    SECTION III. Methodology The research methodology in this survey follows the guidelines
    of Kitchenham and Charters [21], which has three phases, namely, planning, conducting,
    and reporting. In the planning phase, a complete plan of how and why to conduct
    this survey is provided. The research questions are also identified; and the search
    strategy, keywords, and resources are determined. In the conducting phase, the
    search strategies are applied to select the research articles to be considered.
    Based on the Inclusion/Exclusion criteria (shown in Section III-E), irrelevant
    articles are filtered out. The selected articles are further refined by a quality
    assessment tool formulated for this survey. In the reporting phase, the synthesized
    data are compiled in the form of facts and figures. In the following sections,
    the aforementioned phases are detailed. A. Research Questions (RQs) The survey
    conducted in this paper aims to address the following Research Questions: RQ1:
    What is GPS Spoofing Attack and its impact in FANETs? RQ2: What are the GPS Spoofing
    Attacker Models in UAVs in terms of Spoofing Strategy, Spoofing Technique, Spoofer
    Location & Number, and Spoofer System? RQ3: What are the attack detection and
    prevention mechanisms presented in the existing literature? RQ4: What are the
    Performance Evaluation Mechanism(s) in terms of Simulation or Proof-of-Concept
    Implementation? RQ5: What are the Performance Metrics used in existing Literature?
    RQ6: What are the Mobility Models used in the detection and prevention mechanisms?
    RQ7: What are the Communication / Propagation Models used in the detection and
    prevention mechanisms? RQ8: What are the Future Directions and Open Issues that
    are unaddressed in GPS Spoofing Attack studies? Table 6 lists the motivations
    that led to raising the above research questions. B. Search Strategy The articles
    published on GPS Spoofing attacks in Unmanned Ariel Vehicles (UAVs) during the
    2017–2022 period were searched in IEEE XPlore®, ACM Digital Library, ScienceDirect®,
    Springer, and Google Scholar databases to conduct this survey. The aim of the
    search is to locate papers that discussed GPS Spoofing attacks in FANETs and/or
    defense mechanisms. In the next section, we present the formulated search words,
    which are also associated with logical “AND” and “OR” operators. C. Search Terms
    or Keywords With the aim of identifying all scientific articles related to GPS
    Spoofing attacks in FANETs, the major search terms identified for this purpose
    are “Unmanned Ariel Vehicle” and its acronym “UAV”, “Flying Ad-Hoc Network” and
    its acronym “FANET”, “Drones” and “Global Positioning System Spoofing” and its
    acronym “GPS Spoofing”. GPS being a subcategory of Global Navigation Satellite
    Systems, the term “Global Navigation Satellite System Spoofing” and its acronym
    “GNSS Spoofing” is also used. Below is the search query used in this survey: (‘‘Unmanned
    Ariel Vehicles’’ OR ‘‘UAV’’ OR ‘‘Drones’’ OR ‘‘Flying Ad-Hoc Network’’ OR ‘‘FANET’’)
    AND (‘‘Global Navigation Satellites Spoofing’’ OR ‘‘GNSS Spoofing’’ OR ‘‘Global
    Positioning System Spoofing’’ OR ‘‘GPS Spoofing’’). The compiled query is pasted
    in the search text field of the resources discussed in the next Section (III-D)
    and are searched in the “Title” and “Abstract” of the results. D. Resources As
    mentioned before, this study explored publications listed in global databases.
    Specifically, IEEE XPlore®, ACM Digital Library, ScienceDirect®, Springer, and
    Google Scholar databases. Selected articles’ bibliography sections are also analyzed
    for literature completion. In the IEEE XPlore® and ACM Digital Library databases,
    the search was conducted for the above query, and a filter was applied to get
    results from the years 2017-2022. In IEEE XPlore®, an advanced search is conducted
    using the ‘Command Search’ option available under the ‘Advanced Search’ menu.
    The ScienceDirect® database, owned by Elsevier Publishers, is also queried in
    the same manner. In SpringerLink, in addition to the above filter, the results
    are further filtered to omit the result-bearing books’ titles using the filtering
    tool in MS Excel (i.e., the results were exported to Excel Spreadsheets). Google
    Scholar database is also searched with the same search query and the year of search
    is selected as 2017–2022 from the options in the sidebar. Recent survey papers
    on GPS Spoofing attacks were collected for reviewing the state-of-art in Section
    IV. The technical papers on GPS Spoofing attacks in existing literature are presented
    in Section V. The following section presents the selection criteria applied in
    this survey. E. Selection Criteria Appropriate criteria have been applied for
    the inclusion/exclusion of identified publications into/from the final corpus.
    The published articles that meet all the inclusion criteria are included in this
    study. Oppositely, if the article has any exclusion criterion, it is omitted.
    The Exclusion Criteria (EC) and Inclusion Criteria (IC) employed in this survey
    are: EC1: The main focus of this study is GPS Spoofing attacks in UAVs and their
    impact on FANETs. So, this study doesn’t consider publications that deal with
    any other security threats in UAVs or FANETs. EC2: The attacks on MANETs/ VANETs
    or any kind of networks other than FANETs are out of the scope of this work. EC3:
    All articles published in languages other than English are not considered. IC1:
    The publications that study GPS Spoofing attacks, which include Surveys and/or
    Detection and/or Prevention of GPS Spoofing attacks in FANETs. IC2: The year of
    publication should be 2017-2022. IC3: The publication should be well-structured
    and well presented in English writing. The results obtained by applying these
    criteria have reduced the number of publications/articles to be considered in
    this survey to 79, which was 428 before. The summary of these results is tabulated
    in Table 7. The articles/publications are then categorized into two groups: 1)
    State-of-the-art Papers and 2) Technical Papers. It is observed that out of 79,
    14 papers were Survey or Review papers and are included in the category ‘State-of-the-art
    Papers’. The ‘Technical Papers’ comprised 56 papers, which include various papers
    that present studies on or propose solutions for GPS Spoofing attacks in UAVs.
    Google Scholar has an overlap of nine papers from other databases. So, a total
    of 70 papers are considered in this study for further refinement. A year-wise
    analysis of this observation is illustrated in Fig. 6. The results are further
    refined based on Quality Assessment Tools, which are presented in the next section.
    FIGURE 6. Year-wise analysis of research publications on GPS Spoofing attacks
    in UAVs. Show All F. Quality Assessment Tools All papers resulted from the searches
    are subjected to a quality check using the tools that will be described in this
    section. This helps to select only the most relevant papers for consideration
    in this survey. “Quality instruments” [21] are used for this purpose, which are
    typically quality assessment questions. The numerical assessment of quality can
    be obtained if these instruments are mapped to numerical values. The ‘State-of-the-art’
    papers are evaluated using the following Quality Checklists (QCs): QC1: Does the
    study contain sufficient information about FANETs and GPS Spoofing attacks in
    FANETs? QC2: Does the survey adhere to any Survey Methodology or Searching Strategy?
    QC3: Does the survey clearly state its motivation? QC4: Does the survey review
    a sufficient number of papers? QC5: Does the survey identify the research gaps?
    The ‘Technical Papers’ are evaluated using the following assessment questions:
    QC6: Does the study present the existing literature on GPS Spoofing attacks in
    FANETs before proposing the solution to defend the attack, if any solution is
    proposed by the authors? QC7: Does the study have clear problem(s) statement?
    QC8: Does the study portray implementation results? QC9: Does the study present
    a discussion on the results? QC10: Does the study clearly indicate the implementation
    tools used, i.e., simulation and/or proof-of-concept and/or datasets? QC11: Does
    the study make a comparison of the proposed system with existing ones and indicated
    how it outperformed them to fill the research gaps? QC12: Does the study addressed
    the research questions presented in Section III-A? QC13: Are the performance metrics
    used in the study valid and reliable? Further, qualitative checklists were framed
    and applied to evaluate both the state-of-the-art papers and the technical papers,
    as follows: QC14: How clear are the links and flow between various sections in
    the paper? QC15: Are there any new insights delivered by the study? QC16: How
    well is the comprehensibility of the language and style used in the paper? Each
    paper is assigned weights as ‘0’, ‘0.5’, or ‘1’, based on the answers to the above
    QCs, that do not meet, partially meet, or clearly/fully meet the quality checklist,
    respectively. These weights are summed up to score the paper. A paper is included
    if its final score is ≥5 out of 8 (for state-of-the-art papers) and ≥8 out of
    11 (for technical papers). G. Data Extraction The results refined after applying
    the criteria in Section III-E and III-F were processed to extract the information
    from the selected studies to answer the Research Questions (RQs) formulated in
    Section III-A. The following points were considered when processing state-of-the-art
    papers: Authors’ details, journal/publication details, year of publication, and
    the years or duration of studies considered in the survey. Concepts or topics
    discussed in the study. Open issues or future directions provided by the study.
    The technical papers are processed with the following points in mind: Authors’
    details, journal/publication details, year of publication. The defense strategy
    applied for the proposed solution. The proposed solution. The implementation details.
    The scenario where the proposed solution is deployed (whether it is FANET or Single
    UAV). If a single UAV, whether the solution is also applicable to FANETs. The
    attacker model. Whether the proposed solution is for detection, mitigation, and/or
    prevention. The performance parameters (methods and metrics) considered in the
    evaluation. H. Data Synthesis The information extracted from the results is summarized,
    tabulated, and/or plotted graphically based on the nature of the information.
    Sections IV and V put light on the ‘State-of-the-Art’ and ‘Technical’ papers,
    respectively, that satisfied the criteria mentioned in Section III-E and passed
    the Quality Checks (QCs) in Section III-F. SECTION IV. State-of-the-Art In this
    section, a review of the state-of-the-art papers identified during this study
    is presented. A total of 12 out of 14 (that passed the Quality Checks) Survey/Review
    papers on GPS Spoofing attacks in FANETs were selected as a part of this study.
    However, it is found that most of the papers reviewed the security issues in Unmanned
    Ariel Vehicles (UAVs). The papers that have some special mention of the GPS Spoofing
    attacks in FANETs along with other attacks are discussed. For instance, Mohsen
    et al. [39] reviewed ~84 articles and presented a study on the cyber attacks on
    UAVs. The attacks on UAVs were analyzed and categorized. The authors also reviewed
    the recent defense mechanisms against various attacks on UAVs. Among these, ~13
    articles (from 2012 to 2019) were technical papers on GPS Spoofing attacks, which
    discussed GPS Spoofing attacks under the category of Data Manipulation attacks.
    They classified GPS Spoofing defense strategies into four categories, namely,
    Cryptography-based, Spatial Processing-based, Machine Learning-based, and Hybrid
    methods. However, only few of these studies addressed the security requirements
    of GPS Spoofing attacks in FANETs. Most of them are generalized defense mechanisms
    for GPS Spoofing attacks. The authors projected the need to develop efficient
    techniques in the future so that UAVs can navigate efficiently in GPS-denied environments.
    Hamza et al. [40] reviewed ~56 articles and discussed the UAV components, vulnerabilities,
    and defense methodologies. The authors created a taxonomy of attacks against UAVs
    based on the UAV components and the GPS Spoofing attacks were categorized under
    ‘Attack against Communication Link’. Various defense techniques were also discussed
    by the authors in ~8 articles (from 2014 to 2016). These include signal processing,
    encrypting GPS signals, and machine learning techniques. It also is observed that
    the GPS Spoofing strategies and defense mechanisms discussed in this paper are
    not specific to FANETs. The authors recommended the need for GPS-independent navigation
    solutions for UAVs so that the missions can be completed successfully during Jamming
    and spoofing attacks. As GPS signals are more prone to spoofing and Jamming attacks,
    the need for proposing effective navigation techniques that are less dependent
    on GPS is recommended as a future direction in this paper. Yueyan et al. [41]
    studied ~29 papers and analyzed the safety aspects of UAVs from three angles,
    namely, sensors, communications, and multi-UAVs. GPS Spoofing attacks were studied
    under the category ‘attack on sensors’. Two types of spoofing threats (Repeater
    type and Generating type) in UAVs are also presented in this paper. The authors
    have cited only one technical paper (published in 2017) specific to GPS Spoofing
    attacks in which attack signals were broadcasted using USRP (Universal Software
    Radio Peripheral). Fazal et al. [28] portrayed a review of communication perspectives
    of FANETs. They reviewed ~73 papers with the goal of providing insights into communication
    technologies in FANETs, applications scenarios, challenges, and open issues in
    the area. Among these, ~4 technical papers (from 2017 to 2019) discussed GPS Spoofing.
    This includes the GPS Spoofing vulnerability of 3-D Robotics commercial drones
    and few solutions to GPS Spoofing attacks in FANETs. However, no detailed discussion
    of these solutions was provided. Aicha et al. [42] presented a comprehensive survey
    (~213 references) on UAV communication protocols, networking systems, architecture,
    and applications. The survey also discussed the technical challenges and open
    research issues. Among these, few technical papers (~3 papers from 2020 to 2022)
    give a brief review of recent GPS Spoofing attack detection techniques in UAVs
    based on Visual Odometry, the fusion of GPS and optical flow raw data, and machine
    learning. No future direction related to GPS Spoofing attacks was discussed in
    this paper. A review on GPS Spoofing vulnerability of UAVs was provided by Eshta
    et al. [43] after reviewing ~41 articles. Among these, ~29 technical papers were
    on GPS Spoofing attacks and only two papers (published in 2014) are specific to
    UAVs. The paper also discussed the spoofing problems, types, and various countermeasures
    in the existing literature. A detailed discussion on the different types of spoofing
    attacks, namely, Covert and Overt as well as based on the threat assessment, namely,
    Simplistic, Intermediate, and Sophisticated were also provided. Moreover, the
    authors discussed different countermeasures and categorized them into several
    groups - encryption-based, Receiver Autonomous Integrity Monitoring (RAIM), Navigation
    Message Authentication, differing spoofed signal and true GNSS signals in space,
    antenna motion or geometry, and signal power. The authors also stated that the
    studied solutions face a common pitfall in that they require specialized hardware,
    which increases the weight and cost of UAVs. This is because the solutions were
    not UAV specific and hence cannot address the GPS Spoofing issues in FANETs. As
    a future direction, the authors recommended conducting more research on improving
    the tools for counteracting GPS Spoofing attacks. They emphasized the adoption
    of cryptographic techniques to safeguard against GPS Spoofing attacks in UAVs.
    Also, the need for drone manufacturers to develop a minimal level of countermeasures
    against GPS Spoofing while manufacturing commercial drones is envisioned. Hassija
    et al. [44] reviewed ~ 165 articles and presented a comprehensive review on drone
    communication. The authors shed light on security-critical drone applications
    and security challenges. Furthermore, the authors discussed solution architectures
    for various attacks based on Blockchain, Software Defined Networks (SDNs), Machine
    Learning, and Fog/Edge Computing. Among various security issues discussed in this
    paper, GPS Spoofing attacks in drones also got a relevant space as discussed in
    ~4 technical papers (from 2018 to 2019). An example of a GPS Spoofing attack on
    an American drone on December 5, 2011, was also showcased. The usage of BladeRFx40
    SDR for generating falsified GPS Signals was also reviewed. Solutions to prevent
    GPS Spoofing attacks in drone environments based on Fog computing were discussed.
    The authors stated that Blockchain technology, SDNs, Fog computing, and machine
    learning techniques are new directions to consider while designing solutions for
    GPS Spoofing attacks in UAVs. Vinay et al. [45] surveyed ~144 articles to showcase
    a comprehensive review of UAV attacks and neutralization techniques. Among these,
    ~7 papers are specific to GPS Spoofing attacks in UAV, which include spoofing
    tools, and solutions to GPS Spoofing attacks based on techniques like deep learning.
    These papers also discussed the misuse of UAVs for illegal surveillance and unmanned
    attacks. Discussion on GPS Spoofing being used as an anti-UAV tool to neutralize
    UAV attacks is also provided as well as the need for future research to address
    various security concerns in UAVs. Faisal et al. [46] studied ~20 recent articles
    to survey the Jamming and Spoofing attacks on UAVs. Among these, ~4 papers (from
    2019 to 2021) are specific to GPS Spoofing attacks in UAVs. The spoofing attacks
    that target the GPS, as well as Automatic Dependable Surveillance-Broadcast (ADS-B),
    are briefly illustrated. The authors observed the three ways of executing GPS
    Spoofing attacks, namely, falsified GPS signal or higher frequency signals, or
    spoofing the high gain antenna. The authors also observed that traditional defense
    mechanisms like GPS signal authentication are not suitable for resource constraint
    UAVs and recommended machine learning as an effective mechanism to defend against
    GPS Spoofing attacks. Rugo et al. [47] collected ~125 papers and presented a systematic
    literature review on drone security. Among these, ~4 technical papers discussed
    GPS Spoofing attacks in UAVs. Along with other security issues studied, the authors
    dug into the history of GPS Spoofing attacks in UAVs. The countermeasures in the
    existing literature to mitigate GPS Spoofing were also discussed. The authors
    showcased sophisticated techniques like comparing the other sensors (such as onboard
    IMUs, signal amplitudes) measurements, vision-based techniques, and machine-learning-based
    methods. Their observation was that the attackers are becoming smarter as the
    defense mechanism are becoming stronger. Furthermore, the authors recommended
    the use of GPS authentication and encryption as the most effective tool to counteract
    the threat of GPS Spoofing in FANETs. The possibility of replay attacks using
    the previously sent signals exists though. Syed et al. [48] surveyed ~126 articles
    and showcased a comprehensive review of UAVs, types, classifications, security
    challenges, applications, and standardization. Apart from a pictorial illustration
    of a GPS Spoofing attack in UAV, there are no further discussions on GPS Spoofing
    attacks in this paper. The author concentrated more on other technical details
    like the types of UAVs, applications, etc. Kai-Yun et al. [49] collected ~200
    papers and identified the cyber security threats and solutions when UAVs collaborate
    to form FANETs. A detailed study on UAV communication architecture, routing protocols,
    and UAV characteristics including the mobility models are also showcased. Each
    paper studied in this survey is analyzed with an eye on security and non-security
    features addressed. A generic view of GPS Spoofing attacks and detection methods
    is given in this paper. The history of GPS spoofing attack is briefly explained
    through a pictorial illustration. As future directions, the authors recommended
    the use of techniques like lightweight encryption, reinforcement learning, and
    SDN to improve the security aspects of resource constraint UAV devices. Table
    11 in the Appendix shows a summary of the comparative analysis of the State-of-Art
    papers discussed in this study and presented how the survey conducted in this
    paper is different compared to them. Conclusion. In this study, 12 out of 14 papers
    were selected after the quality assessment. The papers were considered relevant
    if they had some discussions on GPS Spoofing attacks in UAVs/FANETs. The discussion
    can be on the attacks and/or their impacts, the tools or algorithms for creating
    GPS Spoofing attacks, or the countermeasures. It is observed that most of the
    selected surveys studied the security issues in UAVs or FANETs in general and
    GPS Spoofing has been mentioned as one among many attacks. Some papers have elaborated
    on and viewed GPS Spoofing attacks in a broader sense. However, to the best of
    our knowledge, few studies have been conducted exclusively on GPS Spoofing attacks
    in FANETs. Though few studies exist on GPS Spoofing attacks on a single UAV scenario,
    none of the aforementioned followed any particular search/surveying methodology.
    Only one article followed systematic review guidelines, but that was also a generalized
    view of drone security. Accordingly, the survey presented in this paper on GPS
    Spoofing attacks in FANETs is the first of its kind to conduct a systematic literature
    review following the guidelines of Kitchenham [21]. An overview of this survey
    is shown in Figure 7. FIGURE 7. A taxonomy of GPS spoofing in FANETs. Show All
    SECTION V. GPS Spoofing in FANETs: A Taxonomy During this survey, it is observed
    that GPS Spoofing attack in FANETs is an issue of serious concern, and few research
    works that are specific to this topic have been undertaken. A total of 56 articles
    published between 2017 to 2022 has been considered, which can be classified into
    four categories, as shown in Figure 7. Articles that focus on GPS Spoofing attack
    mechanisms, articles that propose GPS Spoofing defense mechanisms, articles that
    have used GPS Spoofing as a defense mechanism (i.e., against other attacks), and
    articles that investigate the impact and vulnerability of GPS Spoofing attack.
    The following sections present a review of the articles in each category. A. GPS
    Spoofing Attack Mechanisms in UAVs In this section, the articles that studied
    the GPS Spoofing attacker models are discussed in detail. The purpose of these
    articles is to provide guidelines to the research community and cyber experts
    to understand the attacker’s capabilities and how they conduct the attack. Thus,
    to aid the development of novel solutions to defend against the threat of GPS
    Spoofing attack. As presented in Section II-G, the satellites transmit radio signals
    to UAV receivers to be processed in order to obtain the positional information.
    As these radio signals don’t use any encryption or authentication mechanism, the
    positional information can be altered by a spoofer device. The attacker might
    project a mimicked route or trajectory to the GPS receiver in three possible ways:
    Generating fake GPS signals. Sending signals with higher frequency leading to
    a denial of GPS signals. Spoofing high gain antenna. Bethi et al. [50] presented
    GPS Spoofing architecture layers, as shown in Fig. 8. The spoofing strategy and
    techniques are included in the application layer, whereas spoofer location, spoofer
    system, and user-spoofer understanding are placed under the device layer. The
    spoofing strategies adopted by the attackers are either to “mislead” the target
    or to “misreport” the positional information. While “mislead” guides the target
    UAV to a false destination, “misreport” reports false location information. The
    techniques used for implementing these two strategies are “position denial” and
    “track break”. In “position denial” techniques (also called detection denial techniques),
    the receiver is denied from detecting legitimate GPS signals. In “track break”,
    the targets are misled by sending false navigation signals. The spoofers can operate
    from different locations: “stand-off” (remote), “escort” (near but at a distance,
    also called stand-in), and “onboard” (resides along with the target). Distributed
    attackers deploy multiple spoofers at different locations. The spoofer systems
    include “simulators” (software codes to simulate GPS signals and radiate Radio
    Frequency (RF) signals with higher power), “repeaters” (the receiver module within
    the attacker captures the GPS signals, manipulates them, and re-transmits), and
    “hardware injection” systems, where the spoofed signals are combined with the
    receiver’s hardware for intentional misreporting. The user-spoofer understanding
    is the relation between the receiver and the spoofer. It includes “non-cooperative”
    (the receiver is unaware of the spoofer’s presence and always tries to avoid the
    attack) and “cooperative” (the user aims to get spoofed for misreporting its position
    to the base station). FIGURE 8. GPS spoofing attack layers. Show All In FANETs,
    the attacker manipulates UAV’s GPS signals with two main objectives. Either to
    change the routing information leading to a collision of UAVs (or incomplete missions)
    or to capture the UAV. The attacker sends fake GPS signals with higher power to
    UAVs with two basic modes: Covert Attack: the attacker avoids triggering any spoofing
    detection methods. This kind of attack is usually hard to detect. Overt Attack:
    the attacker launches a severe attack without any caution being detected. He et
    al. [51] studied the communication security of UAVs. Security vulnerabilities
    in UAV modules enable attackers to launch GPS Spoofing attacks. A low-cost implementation
    of GPS attacks is discussed in this paper. Since civilian GPS signals are not
    encrypted, they are more vulnerable to attacks. The spoofer system includes a
    repeater-based system. It is a low-cost GPS record-modify-and-replay system, which
    is hardware-based - Ettus USRP [52] radio family and software based on GNU Radio
    [53]. The spoofer location is remote and a track break spoofing technique is used
    in which the signal received from the satellite is recorded and sampled by USRP.
    The signal is then modified and reproduced to create spoofed GPS signals. The
    UAV’s GCS receives different locational information under normal scenarios and
    spoofed scenarios when the UAV was located at the same place. Eric et al. [16]
    developed a GPS Spoofing tool that can attack a DJI Matrice 100 Quadcopter. BladeRFx40
    SDR is used to transmit the spoofed signals to the GPS receiver. The authors showcased
    the overall basics to details of the hardware and software of the DJI Matrice
    100 Quadcopter. An open-source C-based software, GPS-SDR-SIM [54], is fed to the
    BladeRFx40 SDR to generate the spoofed signals. The authors aims to provide the
    research community with a general understanding of the GPS Spoofing concept in
    order to develop efficient defense mechanisms. Guo et al. [55] proposed a covert
    GPS Spoofing tool that generates spoofed signals without being detected. The original
    trajectory of a UAV is first captured using some external devices such as radar
    and is then used to simulate similar counterfeit signals so that the UAV will
    not suffer from bigger shakes during this drift. For that purpose, the acceleration
    of the UAV is made adjusted so that it is moved to the deceptive trajectory. The
    authors have not put much focus on the simulator used and future directions. The
    articles discussed so far have dealt with tools that can create GPS Spoofing attack
    on individual drones. However, the scenario in FANETs is different as swarms are
    formed with multiple drones working towards a common goal. These drones might
    be relatively of low cost and less complex and hence it is easier to instigate
    GPS Spoofing attacks. However, the concept of swarm formation plays a vital role
    in this case as transmitting a signal relative to any individual drone in the
    swarm might create obvious changes in the FANET’s shape. This observation is considered
    by Ceccato et al. [56] in 2020 to design a spoofing tool against FANET to divert
    the routes of the entire swarm without disrupting the formation. This is called
    ‘Spatial Spoofing’, where FANETs move in the spoofed area in formation as if they
    are moving in their real target area. Multidimensional Linear Filters (e.g., Wiener
    Filter) are used for filtering the signals transmitted by the satellites in the
    target area and are further re-transmitted by multiple spoofing ground antennas.
    Ceccato et al. claimed that this releases the attacker from keeping track of each
    individual drone in the swarm. Aru et al. [57] demonstrated the use of GPS-SDR-SIM,
    for generating spoofed signals to test the security vulnerability of DJI Phantom
    3. GPS-SDR-SIM run by Attify 1.3 operating system, which is based on Ubuntu Linux
    and is built on a VirtualBox system. The GPS coordinates are input into the system.
    The tool then generates new coordinates and outputs into a gpssim.bin file. This
    is loaded to the BladeRF X40 device, which is then connected to the virtual machine.
    This system uses a track break mechanism and the attacker is operated from a remote
    position. Wang et al. [58] proposed two spoofing trajectory planning algorithms,
    the extension line and the tangent line. Forward Spoofing Jamming technique is
    used, which generates the spoofed signal by adding a certain time delay to the
    original satellite signals. The authors considered the role of the Inertial Navigation
    System (INS) as well. In the extension line, the next spoofing position is the
    intersection of a circle with the center as the UAV’s previous position and the
    direction vector of the Jamming signal. In the tangent line, the next spoofing
    position is the intersection of the tangent to the circle with the UAV position
    as the center from the actual destination of the UAV. MATLAB simulation experiments
    were conducted to evaluate the performance of the two algorithms. Even though
    both deflected the UAV from its original path, the tangent line algorithm was
    more powerful. The various attacker models applied by GPS Spoofing attack mechanisms
    discussed in this section are summarized in Table 8. B. GPS Spoofing Defense Mechanisms
    in UAVs The proposed taxonomy of the GPS Spoofing defense mechanisms in UAVs is
    depicted in Fig. 7, which are classified under five major categories, based on
    the methodology adopted for or the basis of the defense. Specifically, onboard
    devices, signal processing, cryptographic, game theory-based, and machine or deep
    learning-based methods. The use of onboard navigation systems such as Inertial
    Measurement Units (IMUs) (e.g., Accelerometers, Gyroscopes) and cameras to compare
    with GPS measurements is the basis of defense using onboard devices. In signal
    processing methods, various characteristics of received signals like the Received
    Signal Strength (RSSI) are analyzed to check for any anomaly. Cryptography-based
    methods rely on encryption and authentication techniques. Strategic movements
    based on game theory are applied in game theory-based defense methods. The techniques
    of learning and training the network through various machine and deep learning
    concepts are employed in the machine or deep learning-based methods. In the following
    paragraphs, we discuss the details of the articles for each mechanism. A summarised
    table of these articles is shown in Table 13 in the Appendix. TABLE 12 Detailed
    Analysis of the Attacker Models TABLE 13 Summary of Defense Mechanisms (NA: Not
    Available) Onboard devices or sensors techniques leverage various sensors onboard
    the drones for detecting GPS spoofing attack. The basic strategy is to employ
    the sensors to detect any anomalies or deviations from the expected GPS signals.
    There are several types of sensors that can be used onboard a UAV such as Inertial
    sensors (e.g., accelerometers and gyroscopes), Magnetic sensors (e.g., magnetometers),
    and Vision sensors (e.g., Cameras). Onboard sensors-based GPS spoofing detection
    approaches are advantageous as they can detect spoofing attacks in real-time and
    they are resistant to Jamming and interference. However, these approaches have
    some limitations and challenges like the need for accurate sensor calibration
    and the potential for false alarms due to other factors that might affect the
    sensor readings (e.g., environmental conditions or sensor noise). Fig. 9 depicts
    a high-level description of the methodology of these approaches. In the following
    paragraphs, we discuss the proposed defense solutions that are based on onboard
    devices or sensors. FIGURE 9. GPS spoofing detection using onboard devices or
    sensors. Show All In 2017, Qiao et al. [61] proposed a GPS Spoofing detection
    based on the vision of the UAV. The Monocular Camera, using Lucas-Kanade (LK),
    and the IMU sensors were used to find the velocities of the UAVs. The velocity
    obtained via these two sensors is compared with the corresponding velocity obtained
    using the GPS. RMSE values are computed and spoofing is detected if the RMSE goes
    beyond a specific threshold value more than a pre-set number of times. The aforementioned
    process is performed during fixed time intervals. The proof-of-concept was implemented
    using DJI Phantom 4, which uses a rectangular trajectory. The GPS-spoofed signals
    are simulated at a UAV’s speed of 5m/s and the authors claimed that their method
    is efficient, as it does not require any additional hardware. The detection latency
    is used to evaluate the system. The experimental results show that the proposed
    methods detect GPS Spoofing in an average of 5s . The authors plan to implement
    the proposed system in open-source platforms and outline the steps the UAVs must
    take upon detecting the attack. The above work in [61] has been extended by Daojing
    et al. [62] in 2018 by proposing a method for the safe return of UAVs when spoofing
    is detected. The authors proposed to use the Oriented FAST and Rotated BRIEF (ORB)
    methods for feature detection, which are more precise and faster than their traditional
    counterparts like Scale Invariant Feature Transform (SIFT) and Speeded Up Robust
    Features (SURF). The UAV stores the image frames it captures during every prefixed
    time interval and if spoofing is detected, the UAV moves back in the same line.
    Then, after the same prefixed time interval, the UAV compares the captured image
    for that location with the stored one. If they match, it moves back from that
    location and repeats the same process until it reaches the starting location.
    The authors have not implemented their proposed method and therefore the performance
    is not evaluated. The authors recommended doing more research on decentralized
    approaches to control UAV clusters for decision-making and collision avoidance.
    However, continuous usage of the camera might rapidly drain the battery of the
    drones. Moreover, environmental factors like light, fog, and wind might affect
    the camera’s performance. Feng et al. [63] proposed a drone hijacking detection
    method in which the position of the drone detected by the Gyroscopes and Accelerometers
    sensors and the GPS receiver module are compared. The method avoids accumulated
    errors when the INS is used. The performance of the proposed method is evaluated
    using proof-of-concept implementation with Quadrotor drone (equipped with L3GD20H
    gyroscopes and LSM303D accelerometers) using the PixhawkTMflight control system.
    The GPS system used in these drones is NEO-M8N. Hardware injection attack is conducted
    using an onboard micro-controller that generates fake GPS signals and a timer
    is set to trigger the hijacked mode. Position denial was used to prevents the
    GPS receivers from sensing the original signals. The “Correctness Ratio” (i.e.,
    the ratio of the number of successful detection of hijacks to the total number
    of experiments) was calculated for the proposed method and it was 84% for non-hijacked
    cases and 100% for hijacked cases. At the same time, the systems that used GPS
    versus INS exhibited 0% and 100% correctness ratios, respectively. The authors
    recommend conducting future tests with other drones to generalize the results.
    The authors further improved their scheme in [64] to enhance the detection rate
    in non-hijacked cases. The GPS data (GPS angle) and gyroscope measurement (Yaw
    from the Angular Velocity) are the only factors used. This is because the readings
    from the accelerometers reduce the Accuracy of results in [63]. The authors claim
    that the correctness ratio of the system had become 100%, while it was 84% in
    [63] (DATE method) during non-hijacked curved trajectories. Yet, the method introduced
    subsequent degradation (still 92%) in the correctness ratio during non-hijacked
    line trajectories. Thus, in order to achieve 100% perfection in all scenarios,
    the authors recommended using [63] and [64] methods in fusion. In addition to
    the future direction in [63], the authors plan to extend their work to anti-hijacking
    flight control so that the drones can detect and stay resilient to fake or low-quality
    GPS signals. Sun et al. [65] discuss the GPS Spoofing attack in UAVs that employ
    INS/GPS-integrated navigation systems. The authors state that in order to make
    the UAVs anti-spoof, the spurious GPS signals need to be identified first. For
    this, the system dynamics are based on the centroid motion model and attitude
    motion model. The measurements from INS and GPS are passed through two Extended
    Kalman Filters and are used to find relative estimation errors. Numerical Simulation
    experiments were conducted to evaluate the proposed model. The Estimation Error
    of centroid dynamics parameters Xc , Xy , and Xz with respect to time were used
    as performance parameters. The authors have not mentioned any future direction
    for their work. Majidi et al. [66] proposed an approach to estimate the actual
    location of UAVs, which uses a fusion of INS/GPS data for navigational purposes.
    The spoofing is detected using the hypothesis method and the real trajectory to
    be followed during spoofed situations is estimated using particle filters. The
    authors used a Particle Swarm Optimization Filter (PSOF). The results obtained
    are compared with those of other particle filters such as the Sampling Importance
    Sampling Particle Filter (SIS-PF), Sampling Importance Re-sampling Particle Filter
    (SIR-PF), and Adaptive Unscented Particle File (AUPF). The PSOF is found to have
    a better performance, as it uses the experiences of each particle as well as neighbors
    for trajectory estimations. The performance of the system is evaluated using MATLAB
    simulations and the system has 97% Accuracy in positioning. Root Mean Square tests
    were conducted to validate the proposed method. No future directions were mentioned
    in this article. Zhu et al. [67] proposed a method that involves a human operator
    supervisory control system. The image/video reels captured by onboard cameras
    are compared by a human operator with a pre-defined map. Any inconsistency in
    the correlation suspects a hacking attack and the operator can take control of
    the UAV for safe-return. The experiments to evaluate this concept was conducted
    on the Security-Aware Research Environment for Supervisory Control of Heterogeneous
    Unmanned Vehicles (RESCHU-SA) platform [68], [69]. The experimental results show
    80% success rates. The data is analyzed using ANOVA tests and Pearson correlation.
    The authors recommended that Human Geo-location can be used as a potential tool
    to detect GPS Spoofing if the decision support systems are further enhanced. This
    work has been extended in 2019 using Hidden Markov Model (HMM) to reveal two hacking
    detection strategies (waypoint-oriented and target-oriented) [70]. The inefficiencies
    of these strategies were identified and recommended the need for a better decision
    support system as a future direction. The devices and systems that can provide
    real-time operational guidelines to the operators are other future directions.
    Yet, human operator is not a desirable feature for an autonomous environment.
    Cheng et al. [71] proposed an approach that is based on the fusion of GPS and
    IMU information. The detection task is entrusted to the GCS and the GPS devices
    are relieved of any infrastructural changes. The authors have considered a FANET
    scenario where multiple UAVs interact and collaborate to accomplish a task. The
    locational information is also exchanged among the UAVs and they are compared
    with the locations obtained from GPS. Any mismatch indicates the probability of
    an attack. In case the number of drones in the system is not sufficient, the flight
    characteristics and other positional information from individual drones’ onboard
    sensors are used to compare with GPS information. The Monte Carlo simulation [72]
    experiments claim that the system detects GPS Spoofing attacks within 8s (and
    28s in the worst case) with a 98.6% detection rate. Communication Time Overhead,
    False Positive, and False Negative (miss detection) were the performance evaluation
    metrics used in this paper. No future directions are discussed in this paper.
    However, all drones in a FANET might not be always connected to GCS. Ferrao et
    al. [73] proposed a GPS Spoofing detection mechanism that incorporates the security
    and safety of UAVs as a unified concept. A safety metric that indicates the health
    status of the UAV and the priority of a component for the overall system security
    is computed. Haversine Formula is applied to find the distance between two points.
    The readings of the IMUs are also employed in the detection mechanism. The time
    data and distance are used to find the average speed of the drone. If the distance
    covered in the time range is acceptable (based on 80 Km/h speed), the drone is
    concluded to be in a stable state. Node Criticality Index (NCI) metric, which
    is the average of the health status index and priority, is applied to evaluate
    the performance of the proposed system. If the node is found to be unstable, the
    priority of UAV modules that can help the UAV to return to a safe state is increased.
    The experiments were conducted using 3DR solo drone. Fake GPS location Mobile
    App is employed to simulate spoofed GPS signals. The authors recommended conducting
    more research works on decision-making systems after the spoofing attack is detected.
    Lianxiao et al. [74] proposed an approach that applied the fusion of the GPS and
    optical flow sensors to detect GPS Spoofing attacks in UAVs. The distance obtained
    by GPS coordinates of two positions traversed by a UAV and the pixel distance
    of images collected by optical flow sensors at these locations is compared. If
    the difference exceeds a preset threshold value, the UAV is considered to be spoofed.
    The proof-of-concept experiments have been conducted with a Quadrotor (PX4 Flight
    Control Software). It leverages PX4flow v1.3.1 as the optical flow model and HackRF
    SDR is operated to simulate the spoofed GPS signals. QGroundControl, which is
    a powerful and user-friendly GCS for UAVs, is employed for calibrating the sensors
    before the flight. Detection latency performance metric was measured. The method
    claims to have instantaneous detection of spoofing attacks. The future plan is
    to precisely locate the spoofed sensor and to investigate about the decision UAVs
    have to take after detecting the attack. Varshosaz et al. [75] proposed an approach
    that can detect sophisticated GPS Spoofing attacks employing Visual Odometry.
    The trajectories determined by GPS and those by the onboard camera(s) are locally
    compared with the help of a moving window. The differences between these trajectories
    were estimated by computing the Euclidean Distances between corresponding points,
    Angle of Distance, and Taxicab Distance between Histogram of Oriented Displacements.
    The proof-of-concept evaluation of the proposed method is performed using images
    captured by DJI-FC6520 digital camera at Golgir village. The detection rate and
    latency performance metrics were measured. The method fails to detect the attack
    in certain scenarios like darkness, lack of features or texture in the images,
    etc. The changes in drone velocity might also affect the performance of the system.
    Hacohen et al. [76] proposed a GNSS spoofing detection mechanism in UAV swarms
    that leverage the IMUs and the GNSS (GPS) receivers. Additionally, an onboard
    sensor that estimates the relative distance between the drones (like LoRa Sensor)
    is employed in this scheme. The drones in the swarm exchange their mutual distances
    among each other in the network and an Extended Kalman Filter is used for estimating
    the FANET distribution. The pool-testing method is applied to identify and isolate
    the malicious drones in the swarm. Experimental simulation experiments were conducted
    to evaluate the performance of the method. The method is found to have 90% Accuracy
    when there are at least 10 drones constituting the network. Signal Processing
    based methods can be deployed to detect GPS spoofing attacks in FANETs. GPS spoofing
    detection based on signal processing involves analyzing the received GPS signals
    to detect inconsistencies in the signal characteristics such as carrier-to-noise
    ratio (C/N0) Monitoring, Signal Correlation Analysis, Correlation Analysis, Geometric
    Consistency, Statistical Analysis, etc. If the deviations or inconsistencies exceed
    a prefixed threshold value, spoofing is detected. Figure 10 illustrates a high-level
    diagram of the process. Following paragraphs discuss various proposed solutions
    that leverage the signal processing methods to detect GPS Spoofing attacks in
    UAV environments. FIGURE 10. GPS spoofing detection using signal processing methods.
    Show All Xiao et al. [77] proposed location authentication in drones against illegal
    hijacking by GPS Spoofing. The method named as “WiDrone” in which a WiFi Fingerprint
    location cross-check is performed. The Current WiFi Fingerprint (CWF) is compared
    with the Destination WiFi Fingerprint (DWF), which is already stored in the device.
    If there is any mismatch, spoofing is detected. The drone flies away from that
    location, gets a GPS signal, and then authenticates the destination again by employing
    the same procedure. The experimental evaluation is conducted using DJI Matrice
    100. The system uses MT7601U wireless network card as the WiFi module to perform
    WiFi fingerprint collection. The drone and the Raspberry Pi were connected via
    UART cable. USRP N210 [78] simulates the GPS Spoofing signal, which is operated
    from a remote location. Track break technique was used to attack the drone. The
    WiFi Fingerprint similarity in different environments such as laboratory buildings,
    student dormitories, residential zones, and business districts are used for the
    performance evaluation. It is observed that the distance between CWF and DWF has
    a critical role in influencing the similarity. The authors judge that the distance
    of 50 m is suitable to perform the authentication. The authors recommended that
    instead of comparing RSSI of WiFi signals, other signal parameters can also be
    included, as WiFi works well only in urban/city areas. For mountainous areas without
    enough WiFi signal strength, this method fails. The authors project the possibility
    of introducing a “No-Fly WiFi zone” to overcome the problem of bypassing the no-fly
    zone policies that can lead to terrorist attacks or illegal spying. Javaid et
    al. [79] proposed a method to detect and mitigate GPS Spoofing attacks in UAVs
    leveraging Receiver Autonomous Integrity Monitoring (RAIM). The integrity of the
    signal packet received from the satellites is compared by computing the pseudo-range
    values from different satellites. If any discrepancy is found, the faulty satellites
    have to be isolated. The signals from five satellites are processed in three groups
    to detect the faulty host and the common host in all the groups is isolated to
    mitigate the effects. OMNeT++4.5 simulator [80] (with GPS module, called as UAVSim),
    which is a C++-based discrete event network simulator, is used to test the performance
    of the proposed concept. Jansen et al. [81] proposed a method that leverages the
    periodic GPS position advertisements broadcasted by the aircraft for air traffic
    control purpose to detect GPS Spoofing attack and also to identify the location
    of the spoofer(s). The Time Difference of Arrival (TDoA) of the position advertisements
    at various globally distributed sensors at the OpenSky network [82] is used to
    estimate the position of the aircraft. The sensors are time-synchronized. The
    inconsistencies of these positions with those reported by the GPS receiver is
    used to detect the attack. The location of the spoofer is identified by employing
    the propagation delay in the advertisement traffic broadcasted by the receivers.
    The traffic is analyzed by dedicated infrastructure on the ground. USRP B200 from
    Ettus Research [52] and the software-defined GPS signal simulator, gps-sdr-sim
    [54], were applied to generate spoofed signals. Detection rate, delay, and coverage
    were the performance metrics measured. The detection rate is about 75% with a
    detection latency of fewer than two seconds. The attacker could be located within
    15 minutes of monitoring. Dang et al. [83] proposed a 5G-assisted method for monitoring
    the position of UAVs and hence live detection of GPS Spoofing attack. The method
    relies on the up-link Received Signal Strength (RSS) of signals received at the
    cellular base stations on the ground. The UAVs report their positional information
    to the Unmanned Ariel System Traffic Management (UTM), as per the Federal Aviation
    Administration (FAA) regulations. UAV residence areas and Adaptive Trustable Residence
    Areas (ATRAs) are computed using a trilateration approach. The UTM compares the
    location provided by the UAV with that of ATRA. If the UAV is located outside
    the ATRA, it is spoofed. The performance of the method, evaluated using Python,
    showed that more than 95% of the attacks are detected. True Positive, False Negative,
    and False Positive were used as performance evaluation metrics. The system applies
    the shadowing propagation model. For future works, the authors plan to work on
    LOS/NLOS Path Loss Models. Also, the proposed models would be extended to test
    the performance of the system under conditions where the UAV is not in the vicinity
    of fewer than three base stations. Additionally, the authors give directions to
    use machine learning techniques to access the channel quality. Wan et al. [84]
    proposed a GPS Spoofing attack mitigation mechanism that tracks the attacker’s
    location and estimates the effective range of the spoofing signals using an Extended
    Kalman Filter (EKF). This allows the UAV to move away from this range within the
    escape time and avoid sudden sensor drifts. The performance of the system is evaluated
    using numerical simulations with Julia Programming Language. Tituona et al. [85]
    proposed a method to detect GPS Spoofing attacks in UAV networks leveraging the
    Bayesian Networks. The UAV system is modeled as a Bayesian Network and the GPS
    signals (Signal-to-Noise ratio, pseudo-range, Doppler shift, etc.) were analyzed
    to detect the spoofing attack. When a UAV receives a new GPS signal, the attack
    detector module embedded in the UAV checks the correctness of the signal by propagating
    signals in the network and estimating the conditional probability in the Bayesian
    Network. The performance of the proposed model was evaluated using MATLAB simulations
    and SatGrid datasets were used to generate GPS signals, which includes G22 (genuine
    GPS dataset collected from distributed locations) and S7 (spoofed dataset) [86].
    The Precision, Recall, and FPR were the performance metrics measured. The method
    exhibited a Detection Accuracy of 96.2%. For future works, the authors plan to
    conduct experiments with more variables and compare the performance with other
    existing systems. The method does not work well if the trajectory is not pre-defined
    or if at least two neighbors do not follow the same trajectory. In 2021, Bada
    et al. [87] proposed a trust-based method for detecting colluding GPS Spoofing
    attacks. The nodes in the FANET are classified as targets, active witnesses, and
    passive witnesses. The active witness can locate the spoofer using the angle of
    arrival and PRN code. The method is based on the free space loss factor in signal
    propagation. The free space loss factor is found to be negligible if the distance
    between the target and the satellite changes drastically in the case of authentic
    GPS signals, whereas a slight move can lead to a huge difference if the target
    is very close to the spoofer. The spoofer adjusts its transmission power such
    that the target receives it at almost the same power as received from the satellite.
    The neighboring UAVs (witnesses) can detect this signal with signal power greater
    than the detection threshold, making them aware of the attack. The UAVs in this
    model communicated using LrWPAN (Zigbee) protocol. The active witness detects
    this and communicates to all one-neighbor nodes in its vicinity. The passive witness,
    who can also witness the spoofed signal, confirms the attack and notifies the
    target. WEIBULL distribution is used to model the trust between nodes. The performance
    is evaluated using the NS3 simulator [88] with Random Mobility Model and ITU-R
    1411 LOS propagation model. The detection rate (True Positives) and False Negatives
    were the performance metrics measured. The method detects 99.88% attacks with
    an Accuracy of 98.40%. For future works, the authors plan to integrate machine
    learning solutions with the proposed model, alongside fusing the Byzantine Agreements
    to enhance and optimize the trust model. In 2022, Pardhasaradhi et al. [89] proposed
    a method to detect and mitigate GPS Spoofing attacks in UAV Swarms using Distributed
    Radars. Multiple radars are deployed on the ground and the position, velocity,
    and time estimate of the signals from the targets are fused with GPS position
    estimate by the target in a central node. If both tracks are different, GPS Spoofing
    is detected. Then, the fused data from the radar are fed into the GPS receivers
    to mitigate the attack. Simulation experiments (simulation tool was not mentioned)
    were conducted to evaluate the performance of the system. Position Root Mean Square
    Error (PRMSE) has been used to detect the changes in the fusion node. Though the
    method does not require modifications in the existing GPS receiver infrastructure,
    it incurs high costs and computational overhead. Also, the deployment of multiple
    radars seems to be impractical. The security of the communication link between
    the radar and drones also needs to be ensured. For future works, the authors plan
    to deploy onboard radars instead of ground-based ones. Also, a fusion of IMU track,
    GPS tracking, and Radar track is to be considered. Cryptographic methods are another
    approaches to detect GPS spoofing attacks in FANETs. These techniques involve
    employing cryptographic algorithms to authenticate and/or validate GPS signals.
    However, proper key management and computational overhead can be two hindering
    factors for the widespread adoption of these methods in resource-constrained drones.
    A high-level diagram of the process in these methods is depicted in Fig. 11. The
    following paragraphs discuss various proposed solutions that leverage cryptographic
    techniques. FIGURE 11. GPS spoofing detection using cryptographic methods. Show
    All In 2019, Han et al. [90] proposed a cooperative GNSS spoofing detection system
    for FANETs based on Blockchain technology. Blockchain is deployed as a layer on
    top of the UAVs, which upload their locational information from the GPS to the
    Blockchain. This updating is performed every second and the UAVs compare the locational
    information of the neighbors obtained through their Radio Direction Finding (RDF)
    unit. If any variation is detected, a spoofing attack is suspected and an alert
    is sent over the network to other nodes including the victim. The authors have
    not conducted any experimental study and no future direction was stated. This
    work has been included in this survey since it has given an orientation into GPS
    Spoofing attacks in FANETs whereas most other papers focused only on a single
    UAV. Kara et al. [91] proposed a method to prevent/avoid GPS Spoofing attacks
    in FANETs. Their strategy aims to estimate the real position of UAV using a Leader-follower
    method. One of the UAVs in the FANET is elected as a leader using a consensus
    that is based on mission type, flight quality, etc. The leader gets its GPS position,
    which is then encrypted and sent to other drones. The follower drone decrypts
    the received message to get the leader’s position, which is also appended with
    other parameters like propagation delay to compute its true position. In order
    to ensure the reachability of the leader drone by other drones, each drone sends
    the received message from the leader to all other connected drones. The leader
    is elected for a prefixed time period and then re-elected. The concept has yet
    to be implemented and its performance to be evaluated. The battery constraints
    of the drones for encryption and decryption also need to be considered. Game-theory
    based methods are mathematical frameworks that model the interactions and decision-making
    of multiple entities in a strategic setting. The strategic movements of drones
    and attackers in this model are essential entities to be considered. A high-level
    diagram of the mechanism (or process) in these methods is illustrated in Fig.
    12. The following paragraphs discuss various proposed solutions that are based
    on Game-theory. FIGURE 12. GPS spoofing detection using game-theory based methods.
    Show All In 2017, Tao et al. [92] envisioned the vulnerability of civilian UAVs
    to spoofing. After highlighting the impracticability of encrypting the GPS signals
    in civilian UAVs (due to cost, secrecy, and scalability requirements), the authors
    proposed a strategic defense against GPS Spoofing attacks in these UAVs. The receiver
    strategically infers a new location even if the attacker tries to mislead with
    false signals. A game-theoretic solution is proposed where the strategic interactions
    between UAV and the attacker are used to detect the attack. The game tries to
    attain Perfect Bayesian Equilibrium (PBE) and it is observed that the equilibrium
    has a PLASH (Pooling in Low types And Separating in High types) structure. In
    case of a spoofing attack, the UAV infers its true position during the separating
    part and the strategic move of the UAV in the pooling portion makes it move such
    that the deviation from the true position is minimal. A continuous-kernel signaling
    game model analyzes the equilibrium of the game. Numerical experiments were conducted
    to evaluate the proposed scheme. The positions of UAVs under different scenarios
    were observed and employed as evaluation parameters. The remote spoofer captures
    the GPS signals and generates counterfeit ones for the UAV to track break and
    redirect the UAV to desired locations. In 2020, Eldosouky et al. [93] proposed
    a GPS Spoofing defense mechanism that relies on the cooperative positioning of
    UAVs in the FANET to mitigate the effect of spoofing. A FANET scenario with five
    UAVs is studied in this paper. The authors aimed to capture the strengths of the
    Stackelberg Game Equilibrium to enhance their defense strategy. The optimal routes
    followed by UAVs during normal and attack scenarios were modeled using system
    dynamics. The performance of the proposed system is compared with other two systems
    that use random and deterministic strategies. The simulation results showed that
    the proposed system outperformed the other two systems in terms of UAV capture
    probability and UAV deflections from the planned routes. The authors direct future
    research to find solutions for the problem when more than five UAVs getting targeted
    by multiple simultaneous attackers. The reliability of other UAVs needs to be
    ensured in this scheme. Machine Learning methods to defend against GPS Spoofing
    attacks in UAVs are used to analyze the GPS signals and detect any anomalies or
    deviations from the expected behavior. The system is trained to detect anomalies
    or classify them as legitimate or spoofed based on signal features. These approaches
    require diverse and realistic training datasets. A high-level diagram of the process
    in these methods is depicted in Fig. 13. The following paragraphs discuss the
    proposed solutions that employed machine learning approaches to detect GPS Spoofing
    in a UAV environment. FIGURE 13. GPS spoofing detection using machine learning
    methods. Show All Panice et al. [94] discussed that the civilian GPS system does
    not guarantee authentication, integrity, and confidentiality, thus, it is vulnerable
    to GPS Spoofing attacks. The signal power is computed in many cases to detect
    the attack, however, this might not work for UAVs due to resource constraints.
    The authors proposed employing Support Vector Machines (SVM) to detect anomalies.
    The data fused from different navigation systems are analyzed using SVM. A decision
    boundary is constructed based on the knowledge of data during normal scenarios.
    The system is trained to detect deviation in order to indicate the attack. MATLAB
    simulations were used for performance evaluations. The attacker is considered
    to be located onboard as fake GPS data are injected into the simulation and used
    the track break strategy. FPR, TPR, and Accuracy were measured as the performance
    metrics. The system is found to detect the attacks within 30s . The authors recommend
    conducting real-world experiments as a future direction for their work. However,
    the calibration of INS is done using GPS signals at the receiver. Manesh et al.
    [95] proposed a machine learning-based approach that uses artificial intelligence
    to detect GPS Spoofing attacks in UAVs. The GPS signals are classified based on
    pseudo-range, Doppler Shift, and Signal-to-Noise ratio. The authors captured real
    GPS signals to create a meaconing (repeater-based) attack. RTL-SDR V.3 RTL2832U
    was used to receive the signals. RTKLIB [96] was deployed as a GNSS library. The
    experiments and training were only on the GPS data (i.e., without using any UAV).
    The detection rates, False Positives, and False Negatives were measured as performance
    metrics. The method exhibited an Accuracy of 98.2% and a detection rate of 99.4%.
    For future work, the authors recommended to use online learning to train the network
    when new data arrives. In 2019, Xiao et al. [97] proposed a Recurrent Neural Network
    (RNN) based approach to identify behavioral anomalies in UAVs. Reliable normal
    behaviors are modeled using two scenarios and the UAVs are trained accordingly.
    The model Accuracy is enhanced by estimating the angle of arrival and Normalised
    Root Mean Square Error (NRMSE) that detects the deviation in a real position of
    the UAV and the position provided by the normal behavior models. If the NRMSE
    is greater than a prefixed threshold, abnormal behavior is detected. The experiments
    were simulated using Python and TensorFlow [98] and the Angle of Arrival is obtained
    by analyzing the real-time movement of the Dajiang Mavic Pro UAV and combining
    it with the national standards provided in the ITU-TY.IoT-UAS-Reqts [97]. The
    detection Accuracy of different RNNs in the deployed scenarios was measured and
    compared to the detection Accuracy of SVMs and Multi-Layer Perception (MLPs).
    The proposed method exhibited an Accuracy of 98.7% and a latency of 0.034s . As
    a future direction, the authors projected the need of more optimized results that
    are in line with the real-world scenarios. In 2020, Wang et al. [99] proposed
    a solution for UAVs with fixed routes like surveillance and delivery drones. The
    flight path of the UAV is predicted using the Long Short Term Memory (LSTM) algorithm,
    which relies on previous flight data. If the deviation between the predicted path
    and the GPS path exceeds a preset threshold, the path-based detection method is
    invoked. Path-based detection method uses the position estimated by integrating
    the velocity obtained from IMU. MATLAB simulations were used to evaluate the performance
    of the system using the detection latency and the detection ratio metrics. The
    proposed method showed a detection ratio of 78% and a detection latency of 3 to
    5s . Xue et al. [100] proposed a deep-learning-based approach that compares satellite
    images from Google Earth and images captured by their own UAV to detect GPS Spoofing
    attacks. The satellite images and aerial photos captured by UAV are fed into a
    deep learning model, which can be on-board or on-ground. The model compares the
    satellite and the UAV images. If a mismatch occurs, a spoofing alert is generated.
    The authors constructed a dataset, SatUAV [101], using images captured by DJI
    Phantom 4 with camera DJI FC631 and satellite images obtained from Google Earth.
    SatUAV dataset is further nourished with images obtained from the SenseFly website
    [102]. The performance of the model is evaluated using NVIDIA © Tesla® V100GPU
    (for deep learning), Raspberry Pi 3B+ and Python 3 with Pytorch [103]. Accuracy,
    precision, recall, F1-score (True Positive, False Positive, False Negative), Time
    Complexity, and Power Consumption were measured. The results exhibited a 95% success
    rate in detecting the attack within less than 100 ms. The authors suggested various
    future directions like exploring the probability of detecting the attack in featureless
    or feature-poor areas, parameter optimization or tuning for higher Accuracy, and
    overcoming challenges like detecting attacks at night and dealing with ephemeral
    objects, etc. Also, conducting more real-world experiments under various weather/air
    conditions (e.g., rain, snow, fog, haze, etc.) in more places for further evaluation.
    Fusion with other sensors like IMUs was also recommended. However, the proposed
    method relies on old images to detect the attack. Jason et al. [104] proposed
    an intrusion detection system that detect GPS Spoofing attack in UAVs. The method
    is based on one-class classifiers, which used flight logs as a training dataset.
    A comparative analysis of various one-class classifiers, namely, One-Class Support
    Vector Machine (OC-SVM), Autoencoder Neural Network, and Local Outlier Factor
    (LOF) with the proposed system has been conducted. The authors used original flight
    log data, the UAV Attack Dataset [105], as a training set. The performance of
    the experiments is evaluated using SITL simulator and Gadgets HackRF software-defined
    radio with GPS-SDR-SIM tool for creating the spoofed signal. Keysight EXG N5172B
    signal generator has been used to provide the true coordinates as a location in
    Shanghai, China. Detection rate (precision, recall, and F1-score) and Accuracy
    performance metrics were measured. The system resulted in an average F1-score
    of 94.81% for the Autoencoder classifier, 81.17% for OC-SVM, and 58.93% for the
    LOF. As a future direction, the authors plan to develop classifiers for an onboard
    IDS using other sensors. Feng et al. [106] proposed a machine learning-based method
    to train the UAV based on the GPS and IMU readings. The authors trained the UAVs
    off-board and on-board. XGBoost (XB) machine learning method is used for off-board
    training and the precision of the learning outcome is further fine-tuned using
    Genetic Algorithm (GA). Moreover, drones were trained onboard using real-time
    flight log data from the IMU and GPS receiver. The experiments were conducted
    using real-world Quadrotor drones. The spoofer is operated onboard triggering
    fake signals. The detection Accuracy and latency performance metrics were measured.
    The results show that the proposed method detects 93.3% and 100% of attacks in
    non-hijacked and hijacked cases, respectively, and the detection of the attack
    was within 1s . For future works, the authors plan to conduct experiments in other
    drones with more complex trajectories and to investigate anti-hijacking flight
    control methods to make the drones resistant to low-quality GPS signals. Dang
    et al. [107] proposed a method to detect GPS Spoofing in UAVs that leverages deep
    learning and statistical approaches. The statistical properties of path loss between
    UAV and nearby Base Station (s) are used to train the Multi-Layer Perceptron Model
    (MLP). Three statistical properties were considered (i.e., moment, quartile, and
    probability distribution difference) and three MLP-based models were designed.
    If the difference between the actual path loss (provided by the base station (s))
    and the theoretical path loss (provided by UAV, which increases with distance)
    is greater than a threshold value, a spoofing is suspected. The accurate threshold
    values and selected base stations are given by MLP. The performance of the system
    was evaluated using Python and TensorFlow library. The Spoofer operated from a
    remote location with track break spoofing. The proposed method achieved a 93%
    detection rate if the UAV is in the vicinity of three base stations and an 80%
    detection rate if in the vicinity of one UAV. The future directions are to test
    the system using ensemble machine learning models and real data. Richmond et al.
    [108] developed Deep Learning based models using UAV flight logs and telemetry
    data to detect GPS Spoofing attacks in real-time. The UAV log data for different
    models are generated and used for training. A classification-based training approach
    is adopted using two LSTM classifiers, namely, Binary Classifiers (BC) that use
    benign and spoofed data, and Autoencoder-based One-Class Classifiers (OCC) that
    use only benign data for training. Gazebo Simulator [109] was used for generating
    flight log datasets. PX4 Autopilot firmware with QGroundControl App (as GCS) was
    used to simulate UAVs. The performance and feasibility of the proposed model have
    been validated using Intel Neural Computing Stick (NCS2) [110]. The measured performance
    metrics were recall, precision, Accuracy, and F-1 score. UAV-specific and generalized
    evaluations were performed. UAV-generalized detectors are found to have a detection
    Accuracy of 97.79% using binary classifiers, whereas, 94.98% for one-class classifiers.
    The UAV-specific detectors exhibited a detection Accuracy of 99.56% using binary
    classifiers and ~ 99.24% using one-class classifiers. The authors have evaluated
    the time overhead on the UAVs and found that the average time interference for
    the LSTM-based Autoencoder OCC is 4.32 ms and 3.986 ms for the binary classifier.
    For future works, the authors plan to propose effective methods to address the
    attack after detecting it. Aissou et al. [111] compared several tree-based machine
    learning models, Random Forest (RNF), Gradient Boost (GB), XB, and LightBM (LB),
    to detect GPS Spoofing attacks. The datasets were generated from real-time GPS
    signals using a USRP device and simulated spoofed GPS signals by manipulating
    various features of authentic signals (e.g., Carrier-to-Noise Ratio, Time of the
    Week, etc.). The models were trained and tested using the dataset and the performance
    of the models was evaluated. The probability of detection and misdetection, the
    probability of false alarm, and the Accuracy were measured. XB outperformed other
    algorithms in terms of Accuracy and probability of detection with an Accuracy
    of 95.52% (i.e., compared to 95.23%, 94.07%, and 91.45% for LB, RNF, and GB, respectively).
    RNF models outperformed others in terms of the probability of misdetection and
    false alarms. XB is faster with 2 ms latency compared to RNF: 21.01 ms, GB: 6.99
    ms, and LB: 8.99 ms. XB is also less memory-consuming with 2.63 MB compared to
    RNF: 1.6 MB, GB: 3.19 MB, and LB: 2.0 MB. RNF outperformed in terms of memory
    consumption, however, it has the longest latency. From a UAS perspective, XB was
    the best algorithm. Gasimova et al. [112] conducted a comparative study of three
    Ensemble based machine learning models. Namely, Bagging (Ba.), Boosting (Bo.),
    and Stacking (St.). The datasets were generated using the same approach in [111].
    The performance of the models was evaluated in terms of Accuracy, probability
    of detection/misdetection, probability of false alarm, memory size, processing
    time, and prediction time per sample. The St. model outperformed others in terms
    of Accuracy with 95.43% (versus Ba.: 95.28%, Bo.: 94.61%), detection rate with
    99.56% (versus Ba.: 95.28%, Bo.: 94.61%), FNR with 0.36% (versus Ba.: 0.64%, Bo:
    2.95%), and FPR with 0.03% (versus Ba.: 1.07%, Bo.: 5.08%). However, the St. model
    showcased the worst performance in terms of memory consumption with 191.3 MB (versus
    Ba.: 190.4 MB, Bo.: 190.5 MB), processing time with 13.06s (versus Ba.: 0.74s
    , Bo.: 1.5s ), and prediction time with 0.24s (versus Ba.: 0.02s , Bo.: 0.01s
    ). Tala et al. [113] proposed two techniques (Metric Optimized Dynamic selector
    and Weighted Metric Optimized Dynamic selector) to select the classifier for detecting
    GPS Spoofing attacks in UAVs. The authors compared ten machine learning algorithms
    and measured their performance in terms of Accuracy, detection probability, false
    alarm probability, misdetection probability, and detection latency. Thirteen GPS
    signal features from real-time experiments were used as datasets in MATLAB [114].
    The proposed model showed an Accuracy of 99.6%, a detection probability of 98.9%,
    a false alarm probability of 1.56%, a misdetection probability of 1.09%, and a
    detection latency of 1.24s . C. GPS Spoofing as Defense in UAVs Even though the
    technological innovation brought by UAVs is crucial, their problems are also critical.
    The illegal operations of UAVs make them difficult to manage. Anti-drone services
    that aim to disrupt or incapacitate non-cooperative drone operations are discussed
    in this section. That is, when GPS Spoofing is used as a tool to eliminate the
    security threats caused by UAVs. Shijith et al. [115] proposed GPS Spoofing as
    a defense mechanism to counterfeit the GPS receiver on a drone that tries to enter
    restricted areas. The unencrypted nature of GPS signals is exploited to take over
    the drone to the desired location. The used tools are SatGen [116] simulator (as
    a GPS signal generator) and an SDR tool, USRP N210 [78], to transmit the signals.
    Specifically, to generate National Marine Electronics Association (NMEA) file
    that contains the locational information. This info is then converted to a text
    containing the coordinates of all intermediate locations. Python scripts were
    used to generate signals based on the location information. This signal is then
    transferred to the USRP N210 tool. The spoofer uses a track break technique and
    operates from a remote location, where false signals are generated and sent to
    the target. The targeted drone will be then directed to the desired location in
    the spoofed signal. The authors recommended a real-time implementation of their
    proposed system. Gasper et al. [117], [118] recommended using GPS Spoofing vulnerability
    to divert unauthorized UAVs flying over unauthorized areas. The SDR, bladeGPS
    simulator, was used to generate fake GPS signals. The bladeGPS simulator uses
    NMEA messages that store GPS-related data. This field can be manipulated to make
    false signals. That is, to make the UAV recalculates its present position and
    moves out of the restricted area. The experiments were conducted in indoor and
    outdoor environments. The impact of spoofing in Smartphones, u-blox M8 GNSS evaluation
    kit, and u-blox MAX-7Q (GPS receiver used in most UAVs) were studied. The attacker
    is considered to operate from a remote location with a track breaking technique.
    Li et al. [119] designed a miniature GPS spoofer that is based on Digital Signal
    Processing (DSP), Field-Programmable Gate Array (FPGA), and RF. Several experiments
    were conducted to spoof DJI Phantom Pro 4 using the mini spoofer and the results
    were studied. The DSP and FPGA are the core signal processing modules and the
    RF module up-converts the IF signals to resemble GPS L1 RF signals. The experimental
    results were successful in misleading the target by controlling its position and
    velocity. Also, the UAVs were made to land in the spoofed position. The authors
    claim that their spoofer can be used to control and manage low-altitude UAVs.
    They also recommended further study of the effectiveness of the spoofing strategy
    with real-time measurements from UAV target monitoring systems. Similarly, Sheng
    et al. [120] proposed a Reinforcement based Learning method to control UAVs that
    enter unauthorized areas. The authors suggested the use of GPS Spoofing as one
    example to expel the UAVs from the target estate. Daojing et al. [121] proposed
    GNSS Spoofing as a method to counter non-cooperative UAVs that enter ‘No-Fly Zone’
    areas. The UAVs that entered the restricted area need to be sensed first (using
    some techniques like RADAR) and then jammed. When they convert to auto-pilot mode,
    they are spoofed with counterfeit signals that redirect them to far locations.
    The authors recommended, as a future direction, spoofing a cluster of non-cooperative
    drones. Noh et al. [122] proposed hard spoofing techniques where the receiver
    is jammed with powerful signals for safe-hijacking the consumer drones. The proposed
    method aims to expel the drone safely from the protected area. The effect of GPS
    Spoofing and the behavior of the drones during and after the GPS failure and signal
    recovery were analyzed. Four safe-hijacking strategies have been introduced accordingly.
    Field studies were conducted using prominent consumer drones namely DJI (Phantom
    3 and 4) drones, Parrot Bebop 2, and 3DR Solo. GSG-6 GNSS simulator [123] has
    been used in the experiments to generate spoofed signals and SITL (Software-in-the-Loop)
    [124] simulator was used to evaluate the results. Hosam et al. [125] proposed
    a technique to land the unauthorized drones by transmitting manipulated GPS signals
    using RF-SDR. The technique also determines the launch location of the drones.
    The drones are forced to operate in rescue mode by the manipulated GPS signals
    and return to the launch location. The iterative guesses are made on the latitude
    and longitude of the launch locations using the current coordinate of the drone.
    As the drones return back to the launch location at a constant speed, the x and
    y components of the drone’s speed become zero when it reaches the launch location.
    Experiments were conducted using HackRF SDR to launch spoofed GPS signals into
    Audrino chipset with GPS. Future works aims to minimize the number of guesses
    and evaluate the proposed algorithm on real drones. D. GPS Spoofing Impact and
    Vulnerability Vishal et al. [59] discussed the security vulnerabilities of drones
    such as the GPS Spoofing vulnerability of the DJI Phantom 4 Pro (P4P) drone. Afterwards,
    the architecture details of DJI P4P drones and the experimental studies (i.e.,
    cracking the DJI SDK, reverse-engineering the firmware, and launching GPS Spoofing
    attacks) were discussed. The attacks were conducted using LabSat3 [126] GPS simulator.
    The u-blox NEO 8M GPS receiver of the DJI P4P defends jam-then-spoof attacks.
    However, the experiments were conducted using weak GPS signals. The active antenna
    RLACS198 of the LabSat Kit records the original GPS signals and the SatGen software
    was used to generate fake signals. Mendes et al. [60] studied the impact of GPS
    Spoofing attacks on Quadcopters. The authors observed that increasing the duration
    of tampering will also increase the deviation. However, after short time, the
    UAV does not show any deviation. The spoofer system is a hardware injection system
    in which the ArduCopter flight controller (used for processing and calculations
    purposes) is instrumented with a GPS Spoofing module. This module triggers the
    attack by tampering GPS signal after 45s of the starting time. The spoofer was
    onboard and used the track break technique. The experiments used SITL [124] simulator
    that simulates Quadcopter behavior (i.e., using a Navio2 control board developed
    by Emlid and Raspberry Pi with Raspbian OS). The deviation in UAVs’ positions
    with respect to time was taken as a performance metric. As a future direction,
    the authors plan to conduct real-world experiments with Quadcopter. SECTION VI.
    Results, Discussions, and Research Gaps In this section, our observations, in
    terms of attacker models, defense mechanisms, performance measures, datasets,
    various research gaps, and open issues are discussed. This section aims to address
    RQ2, RQ3, RQ4, RQ5, and RQ8 (raised in Section III-A). A. Attacker Models The
    study conducted in this paper has observed in Section V that the attacker uses
    different attacking strategies and tools that operate from different locations
    to conduct GPS Spoofing attacks. These attacker models are analyzed in this section,
    addressing RQ2 of Section III-A. Table 12 in the Appendix shows a detailed analysis
    of the attacker model used in the articles studied in this survey. It is found
    that the majority (75%) of spoofers operate from remote locations in the existing
    literature and adopted track break spoofing techniques. The spoofer system includes
    GPS simulators, repeater-based systems, and hardware injection methods. A percentage-wise
    analysis of the spoofer systems used in the proposed works is depicted in Fig.
    14. It can be seen that the majority of the works (62%) relied on GPS simulators
    to generate spoofed signals. The low-cost and easy availability of the SDRs can
    be the main reason for this reliance. The repeaters, which capture the real signals,
    manipulate them, and then re-transmit them to the GPS receivers, are used by 23%
    of the works. Rest 15% used hardware injection systems, in which the spoofer device
    is embedded or installed on the GPS receiver. FIGURE 14. Comparative analysis
    of spoofer systems. Show All The GPS simulator-based systems rely mostly on open-source
    GPS simulators like GPS-SDR-SIM [54] to generate fake GPS signals. These signals
    are converted to RF signals with the help of SDRs like HackRF, BladeRF, USRP,
    etc. A percentage-wise analysis of various spoofing tools used in the proposed
    works to spoof GPS signals is shown in Fig. 15. As is clear, BladeRF and HackRF
    were relied on by the majority (31% each) of the works. USRP tools, namely, Ettus
    USRP (19%) and SatGen USRP (7%) were used by some (26%) of the works. Other tools
    used are LabSat3 and GSC-6 GNSS (both by 6%). FIGURE 15. Comparative analysis
    of spoofing tools in simulators. Show All To the best of our knowledge, and based
    on the covered articles, various research gaps exist related to attacker models,
    which are listed below: Other than mentioning the tools used for conducting the
    attack, most of the works failed to consider other attack parameters like the
    minimum distance from which the spoofer operates, the number of drones that can
    be victimized by a single malicious node, and the number of malicious nodes required
    to spoof the entire swarm area. These parameters can have a crucial impact on
    determining the attacker’s capability. The distance from which the spoofer operates
    can affect the number of drones being spoofed. Even though the attacker might
    be targeting to spoof the GPS location information of one drone, other drones
    in its vicinity might also get locked into these spoofed signals. This will affect
    the FANET system itself, which relies on the locational information that gets
    exchanged among the drones. Moreover, any detection system that relies on the
    locational information shared by other drones will also get deceived by the wrong
    locational information provided by neighboring drones, which are also victims
    of the spoofing attack. For example, the solutions proposed in [71] and [87] leverage
    the GPS locational information shared by the neighboring drones. So, if these
    neighboring drones also fall in the spoofed area, the detection system fails.
    Thus, the effect of spoofer-to-target distance on successful GPS Spoofing attack
    instigation needs to be investigated. The possibility that the entire swarm area
    to be spoofed and the minimum number of malicious nodes required for such spoofing
    also needs to be investigated. It is anticipated that defensive mechanisms might
    fail in such scenarios. We recommend that future research works should assess
    these factors also so that a robust defense mechanism can be designed. A comparative
    evaluation of various tools in Fig. 15 can also be conducted. To the best of our
    knowledge, these tools are used to launch the spoofing attack in single UAV scenarios.
    None of the existing works performed an attack on FANET with these tools. So,
    the effectiveness of these tools in launching attacks in the FANET scenario needs
    to be investigated and analyzed in order to understand the attackers capabilities;
    hence, the effectiveness of the proposed detection or defense solutions can be
    accurately evaluated. The power capabilities of the attacker have not been much
    discussed in the covered articles. As per the authors in [87], the spoofer tries
    to adjust its transmission power such that targets that are at a distance ‘D’
    from the spoofer will receive a signal of power −154 dBW. If the power received
    at the target is lesser than −157 dBW, the detection systems detect the presence
    of an attack. More studies need to be conducted in this direction considering
    the different power capabilities of the attacker and their impacts on the effectiveness
    of the proposed detection or defense mechanisms. None of the papers covered in
    this study has investigated the number and type of tools that can be used to simultaneously
    launch the attack. Future studies should thus investigate the number of tools
    that might be required to spoof the FANET. The impact of the collaboration of
    multiple attackers that are equipped with different tools (like HackRF and BladeRF)
    to launch the attacks from various locations also needs to be studied. B. Objective(S)
    and Taxonomy of Proposed Mechanisms The study conducted in this paper has observed
    (as shown in Fig. 7 and detailed in Section V) that the proposed mechanisms can
    be classified into four main categories based on their objectives. Specifically,
    GPS Spoofing Attack Mechanisms, GPS Spoofing Defense Mechanisms, GPS Spoofing
    as-Defense Mechanisms, and GPS Spoofing Impact and vulnerability. Fig. 16 shows
    the statistical analysis of technical papers considered in this study. It can
    be seen that, out of 56 technical papers selected after various filtering, 37
    papers addressed the detection, mitigation, and/or prevention of GPS Spoofing
    attacks in UAVs. Nine papers demonstrated how to instigate GPS Spoofing attacks
    in UAVs, eight papers proposed to use GPS Spoofing as a defense mechanism to deter
    malicious UAVs, and only two papers discussed the impacts and vulnerabilities
    of GPS Spoofing attacks in UAVs. FIGURE 16. GPS spoofing paper categories. Show
    All RQ3 in Section III-A is addressed by providing a taxonomy based on the approaches
    proposed to detect, mitigate and/or prevent GPS Spoofing attacks in UAVs. Following
    the basis or the technique leveraged to defend against GPS Spoofing attacks, the
    methodologies were categorized into onboard devices or sensors, signal processing,
    cryptographic, game theory, and machine learning mechanisms. A comparative analysis
    of the number of articles under various GPS Spoofing defense mechanisms is illustrated
    in Fig. 17. A major observation in Fig. 17 is the number of papers that aimed
    to prevent or mitigate the attack is lesser when compared to the total number
    of papers. Most of the papers aimed at the detection of the attack. Another observation
    is that 14 approaches leverage machine learning techniques and another 14 approaches
    leverage the onboard devices for the detection of GPS Spoofing attacks in UAVs.
    Signal processing approaches have been applied by five detection as well as mitigation
    approaches. Game theoretic solutions were proposed in three works to detect the
    attack and one work used it for mitigation. One approach used a cryptographic
    mechanism to detect and prevent the attack. A percentage-wise analysis of the
    articles according to their defense mechanisms is depicted in Fig. 18. Onboard
    devices and machine learning approaches have been adopted by 38% of the approaches,
    signal processing by 13%, and game theory by 8%. Cryptographic approaches were
    adopted by just 3% of the works. It is later seen that the approaches using cryptography
    were not implemented or not conceptually proved. FIGURE 17. Number of papers based
    on attack defense mechanism’s basis. Show All FIGURE 18. Percentage wise analysis
    of based on basis of defense. Show All A percentage-wise analysis of the type
    of publication is shown in Fig. 19. Out of the 70 articles (14 state-of-the-art
    papers and 56 technical papers) considered in this survey, 40% of the articles
    were conference papers, 46% were articles published in journals, and 14% were
    published in magazines or book chapters. This is an indication that the research
    works on GPS Spoofing attacks in UAVs are still maturing. FIGURE 19. Comparative
    analysis of publication types. Show All The number of papers that considered a
    FANET scenario, where multiple UAVs interact is also analyzed. Fig. 20 depicts
    that out of the 28 publications in conference proceedings, only three were addressing
    the GPS Spoofing attack problem in the FANET scenario. Also, among the 32 journal
    articles, only five dealt with FANET cases. None of the ten papers published in
    magazine/book chapters was on the FANET scenario. This again indicated that the
    area of research on GPS Spoofing attacks in FANET has obtained very little attention
    so far from the research community. FIGURE 20. Papers on FANET scenario. Show
    All To the best of our knowledge, and based on the covered articles, various research
    gaps exist related to the objectives of the proposed mechanisms, which are listed
    below: From Fig. 16, it is noticed that only two articles [59] and [60], have
    studied the vulnerability and impact of GPS Spoofing attacks in UAVs. Future research
    should analyze the vulnerability of various types of drones to GPS Spoofing attacks.
    The existing study was conducted for a particular type of drone only (i.e., DJI
    Phantom 4 Pro). The impact of GPS Spoofing attacks on FANETs with regard to different
    attack parameters such as the attack duration, and attack frequency should also
    be studied. Further to this, various position-based routing protocols such as
    Reactive-Greedy-Reactive protocol (RGR) [127] and Ad-Hoc Routing Protocol for
    Aeronautical MANETs (ARPAM) [128] rely on the knowledge of geographical positions
    that drones obtain through their GPS sensors. The geographical positions are leveraged
    in the data delivery to get the destination’s location as well in cases of network
    disconnections to avoid network partitioning. The geographic positions of UAVs
    in the network are also exploited to select the shortest path between the source
    UAV and the destination UAV. Hence, when this locational information is manipulated,
    the packet delivery rate and routing capabilities are severely affected. Thus,
    it is recommended to conduct simulation experiments or proof-of-concept implementations
    to investigate the impacts of GPS Spoofing attacks on these protocols. Future
    research works should try to propose defense mechanisms that can not only detect,
    but mitigate, and prevent the attack. It is recommended that more research work
    might be conducted to investigate the effectiveness of: Machine Learning-based
    or onboard devices-based defense mechanisms to mitigate or prevent the attacks
    as well rather than to detect the attack. Game-theoretic approaches as well as
    Cryptographic-based approaches in dealing with GPS Spoofing attacks. Hybrid-based
    approaches, which combine (i.e., employ) two or more of the above approaches together
    in dealing with GPS Spoofing attacks. For instance, signal processing approaches
    when combined with the onboard devices to defend against the attack since leveraging
    these methods don’t require any infrastructural modification and hence can be
    cost-effective. Less than 50% of papers were published in journals, indicating
    the immature state-of-the-art of GPS Spoofing research works in FANETs, more research
    needs to be conducted and papers to be published in reputed journals. As per this
    study, out of the 46% journal papers covered, only five articles were on FANETs.
    C. Performance Evaluation Methods In this section, various performance evaluation
    methods (i.e, simulation experiments and proof-of-concept implementations) of
    the papers covered in this study are analyzed, answering RQ4, which was formulated
    in Section III-A. Fig. 21 illustrates the analysis of the number of papers evaluated
    using proof-of-concept implementation. DJI Matrice 100, DJI Phantom Pro, 3DR Solo,
    PX4 Autopilot (Flight Controller), and Holybro S 500 are the major drones used
    in articles considered in this study to evaluate various experiments in a single
    UAV scenario. However, most of these drones are no longer in production as newer
    versions were released recently. For instance, DJI Matrice 100 and Phantom 4 Pro
    drones are no longer in production nowadays and are replaced by DJI Matrice 300
    [129] and DJI Phantom 4 Pro V2.0 [130] drones, respectively. The 3DR Solo has
    been discontinued and is replaced with Aurelia X4 Standard, which is an improved
    quadcopter drone [131]. Moreover, none of the papers that addressed GPS Spoofing
    attacks in FANETs have provided a proof-of-concept implementation. Hence, the
    upgraded drones that are presently available in the market, which are able to
    communicate with each other by forming an Ad-Hoc network, need to be considered
    and involved by future research. A list of the upgraded drones and their communication
    capabilities is shown in Table 9. FIGURE 21. Papers evaluated using proof-of-concept
    implementation. Show All Some of the studied articles conducted simulation experiments.
    All the simulators that were used in the studied articles in this survey are analyzed
    in Fig. 22. Specifically, MATLAB [114], STIL (Software in The Loop) [124], RESCHU-SA
    [69], RTKLIB [96], Monte Carlo [72], Python, TensorFlow [98], Gazebo [109], NS3
    [88], and OMNeT++ [80] were used by the articles for performance evaluations.
    Some articles used numerical simulations and some others, categorized under ‘Others’
    in Fig. 22, have not stated the names of simulators used for performance evaluations.
    It is observed that most of the machine learning-based schemes were evaluated
    using MATLAB [114] followed by TensorFlow [98], as both tools support various
    built-in machine learning libraries. Other simulators are used by one or a maximum
    of two experiments. Another observation is that the cryptography-based schemes
    were not evaluated even using the simulation experiments. Furthermore, Monte Carlo
    [72], NS3, OMNeT++ [80], and MATLAB [114] were used in experiments involving FANETs.
    FIGURE 22. Papers evaluated using simulation experiments. Show All The mobility
    and propagation models of UAVs were neglected in most of the simulation experiments.
    A few articles have mentioned the random mobility model in the experimental details.
    This includes experiments conducted using OMNeT++ [80] and NS3 [88] simulators.
    One article that used NS3 [88] has mentioned the propagation model as ITU-R 1411
    LOS (Line-of-sight). Thus, it is recommended to use either OMNeT++ [80] or NS3
    [88] for future evaluations so that the mobility and propagation models can be
    easily employed and included in the evaluation. Also, this is an indication that
    RQ6 and RQ7 (Section III-A) have not been well addressed in the existing literature.
    Furthermore, since FANETs move in 3-D space, the mobility models that can simulate
    the 3-D movement of UAVs such as the Gauss Markov Model [136] can be used in future
    experiments. That is, the efficiency of the proposed approaches in terms of power
    requirements and/or storage and communication overhead when employing these mobility
    models must be considered. A few methods have used some real and synthetic datasets
    in the experiments. Specifically, SatUAV [137], the senseFly drone dataset [102],
    UAV attack dataset (IEEE Dataports) [105], SatGrid [86], and OpenSky Network [82].
    SatUAV Dataset is a synthetic dataset generated using a collection of images captured
    by a DJI Phantom 4 drone (with camera DJI FC631 and pixel resolution of 5472×3078
    ), which includes 967 SatUAV image pairs combined with the SenseFly dataset. SenseFly
    website has 362 photos available on the Internet [102] taken by eBee drones (with
    a camera resolution of 4608×3456 and 5472×3648 pixel resolution). It includes
    160 photos (using a Canon IXUS125HS camera) of the Swiss village of Merlischachen
    at a flight height of 162 m (531.4 ft), 40 photos (using a Parrot Sequoia camera)
    outskirts of Renens, a municipality in Switzerland at a flight height of 100 m
    (328.1 ft), 113 images (using SenseFly S.O.D.A. camera) of Lausanne, Switzerland
    at a height of 100 m (328.1 ft), and 49 images (using Canon IXUS 125 HS) of Paris
    Le Bourget Airport at the height of 120 m (393.7 ft). UAV attack dataset (IEEE
    Dataports) [105] are flight log files saved by autopilot in ULog format having
    header (the file magic number, log version, and timestamp), definition (logged
    attributes and values), and data sections (contains informational, debug warning,
    and emergency information sent from the autopilot to the GCS) as the contents.
    It contains flight logs during both benign (i.e., normal) and attack (i.e., spoofed)
    scenarios. SatGrid dataset [86] includes SatGrid: G22 (Genuine GPS dataset) and
    SatGrid: S7 (spoofed dataset). These are real-time traces of GPS signals collected
    from different geo-locations, time, and environmental conditions. OpenSky [82]
    provides an Air Traffic Surveillance (ATS) dataset collected with the help of
    over 3000 sensors around the world. Table 10 presents a brief overview of these
    datasets. To the best of our knowledge, and based on the covered articles, various
    research gaps exist in terms of performance evaluation methods, which are listed
    below: Some articles covered in this study have not clarified the method used
    for their performance evaluation experiments, which we stated as ‘Others’ in Fig.
    21 and 22. Future research works should clearly mention the names of drones and
    GPS simulators used in proof-of-concept evaluations. Furthermore, the simulator,
    the mobility model, and the propagation model used in various simulation experiments.
    Simulated experiments generally don’t reflect real-world scenarios. For example,
    environmental factors like wind, light, and fog have a crucial impact on the movement
    and performance of drones, might not be addressed by simulators. However, the
    majority of the experiments in the covered articles in this survey are evaluated
    using simulated experiments. Thus, we recommend that future research works rely
    on real-world experiments or proof-of-concept implementations. D. Performance
    Metrics In this section, various metrics that were used in the performance evaluation
    experiments, discussed in Section VI-C, are analyzed to answer RQ5 (raised in
    Section III-A). Specifically, FPR, TPR, FNR, Detection Latency (Delay), Position
    Drift, Precision, F1-Score, Accuracy, RMSE, UAV Capture Probability, Power Consumption,
    and Memory Overhead. Fig. 23 illustrates the number of articles that used these
    metrics in their evaluations. As shown in this figure, TPR, Accuracy, Detection
    Latency, and FPR are most commonly used in the articles covered in this study.
    To the best of our knowledge, and based on the covered articles, various research
    gaps exist in terms of performance metrics, which are listed below: The FPR, which
    is a major factor that hinders the service delivery to legitimate users of any
    system, has not been extensively evaluated in the existing works. Indeed, the
    detection of the attack is the major goal of the proposed approaches, however,
    higher false alarms can unintentionally lead to Denial-of-Service attack as it
    might prohibit legitimate drones or disable their services. Detection time (latency)
    was not evaluated in some articles that were covered in this study. Also, the
    articles that reported the detection latency haven’t studied the impact of varying
    different attack parameters on it such as the number of victim drones and the
    number of malicious nodes that launch the attack (discussed in Section VI-A).
    The detection latency is a crucial measure that reflects the time taken by the
    proposed algorithms to detect the attack after it is launched by the malicious
    attackers. This metric must be evaluated by future research works as longer detection
    time might cause the UAVs to be hijacked or collide and as a result causes a mission
    failure (i.e., long detection time allows the malicious attackers to cause more
    damage into the system before the detection approach issue warnings/alarms). Only
    few articles of the existing works evaluated the power/energy consumption and
    memory of the proposed algorithms. Since drones are devices with constraints on
    the resources such as low battery power, less memory storage, and limited processing
    capabilities, these resource constraints factors should be considered when designing
    the defensive schemes. Other metrics such as the victim-to-attacker ratio (i.e.,
    the number of drones that can be spoofed by malicious drones), communication overhead
    (i.e., the number and size of messages that are used by the proposed approaches),
    Big O notation (i.e., that represents the worst-case complexity of the proposed
    algorithms) also need to be considered and evaluated by future research works.
    FIGURE 23. Papers evaluated using performance metrics. Show All E. Comparative
    Analysis A detailed comparative analysis of the articles covered in this study
    that proposed solutions to defend against GPS Spoofing attacks in UAV environments
    is depicted in Table 14 in the Appendix. The performance evaluations of the proposed
    systems were compared in terms of the performance metrics used by the majority
    of the articles, which were also observed to be crucial in determining the performance
    of any detection mechanism. Specifically, TPR, FPR, Accuracy, and Latency. The
    prerequisites of the aforementioned articles were also analyzed in terms of any
    additional requirements on hardware devices or sensors, storage, battery, and
    any other specific requirements such as datasets, as shown in Table 14. It can
    be seen that the defensive approaches that are based on Machine Learning algorithms
    outperformed other detection mechanisms in terms of their performance. However,
    it is well known that Machine Learning algorithms require a high amount of computation
    and processing power, which in turn demands battery and storage. Apart from these,
    the requirement for a sufficient amount of diverse and realistic training datasets
    also hinders the acceptance of machine learning algorithms in securing resource-constrained
    drone networks. Signal processing-based methods such as [87] and [83] exhibited
    detection rates of 99.98% and 95% followed by methods that leverage onboard sensors
    [71], which exhibited 98.6% [67], [70]. In terms of Accuracy, signal processing-based
    methods [85], [87] also show relatively high results of 98.4% and 96.2%, respectively.
    The methods that rely on onboard sensors such as [66] and [76] showcased greater
    Accuracy of 97% and 90%, respectively. The methods that rely on signal processing
    and onboard sensors were efficient in terms of detection time (latency) as well,
    which was less than two seconds in [81]. However, the main problems with methods
    that used onboard cameras are the additional storage, battery, and weight requirements.
    Furthermore, these methods require favorable atmospheric conditions such as ambient
    light, fog, wind, and rain free environments. The main limitation of the signal
    processing method, which we suggest to be evaluated and mitigated in future works,
    is the communication overhead with the ground (GCS, Radars, etc.) [81]. TABLE
    14 Comparative Analysis of Performance Evaluations & Additional Requirements for
    Proposed Solutions. (NA: Not Available) F. Summary To summarize, the following
    were the research gaps identified as a result of this study: The minimum spoofer-to-target
    distance, the count of victims as well as the number of malicious nodes that are
    required to launch the attack were not well addressed in the existing works. These
    parameters should be taken into account when designing future research solutions.
    Defense approaches to mitigate and prevent GPS Spoofing attacks in FANETs needs
    more attention. So far, the approaches to detect the attacks have been the main
    focus and proposed most. From Fig. 17, it can be observed that machine learning
    and onboard devices were mostly relied on by the existing approaches to address
    the problem of GPS Spoofing attacks in UAVs, which is then followed by signal
    processing approaches. Since the machine-learning approaches impose high computational
    overhead on drones, they are not desirable for real-time applications; where FANET
    cannot invest considerable resources for complex computations due to its limited
    computational power and battery constraints. Thus, it is recommended that future
    research should focus on onboard devices and signal processing approaches to address
    the problem of GPS Spoofing attacks in FANETs without imposing any additional
    overhead. Leveraging onboard devices is promising as it does not require any infrastructural
    changes in the drones. Researchers should consider publishing more comprehensive
    and thorough articles in reputed journals, that address the threat of GPS Spoofing
    in FANETs. From Fig. 20, it is evident that the research works, which considered
    a FANET environment where multiple UAVs collaborate and exchange information,
    is not well addressed. Thus, future research works should focus on addressing
    GPS Spoofing attacks in the FANET environment by leveraging the unique characteristics
    of FANET such as high mobility, limited battery life, frequent topology change,
    and the information exchanged among the drones. The latest drones that are capable
    of forming Ad-Hoc wireless networks (the list is shown in Table 9) need to be
    investigated to conduct proof-of-concept implementation of future solutions. Existing
    literature lacks such works that used proof-of-concept evaluation in the FANET
    scenario. The defense mechanisms against GPS Spoofing attacks on single drones
    only are evaluated using proof-of-concept implementation. Some articles have conducted
    simulation experiments, however, their simulation experimental setup don’t reflect
    the real-world environment where the drones operate. The names and specs of the
    drones and/or simulators used in the proof-of-concept implementation or simulation
    experiments should be clearly identified and justified. The mobility models and
    communication propagation models that are followed or used by drones are not well
    considered in the proposed solutions. The simulation platforms that can employ
    the mobility and propagation models of drones in FANETs need to be investigated.
    From Fig. 23, TPR, FPR, detection latency, and Accuracy are most widely used in
    the experiments of the proposed solutions. Apart from these, considering the unique
    characteristics of FANET, future works should report as many metrics as possible.
    For example, the ratio of the number of victimized UAVs to the total number of
    UAVs can be one metric to be considered. SECTION VII. Conclusion In this paper,
    a systematic literature survey of the articles that addressed GPS Spoofing attacks
    in FANETs has been conducted. This survey aims to enhance the understanding of
    the existing works and propose future scopes in securing FANETs against GPS Spoofing
    attacks. The GPS Spoofing attacks in FANETs have been viewed from four perspectives,
    namely, GPS Spoofing techniques, GPS Spoofing defense mechanisms, GPS Spoofing
    as-defense mechanisms, and GPS Spoofing Impact and Vulnerability. A taxonomy of
    the mechanisms that addressed the threat of GPS Spoofing attacks in the existing
    literature has been portrayed. Based on the adopted survey methodology, eight
    research questions were formulated. Moreover, 37 research articles on detection,
    mitigation, and prevention of GPS Spoofing attacks in UAVs that were published
    between 2017 and 2022 were extracted for deep investigation. Specifically, in
    terms of the basis of the defense approach, the attacker models, and the performance
    evaluation mechanisms and metrics. The research gaps in the proposed methods were
    identified and future directions for the researchers have been recommended. For
    future works, we aim to address some of the research gap(s) identified in this
    study and propose robust solutions to defend against the threat of GPS Spoofing
    attacks in FANETs. Appendix: Detailed Tables for Articles See Tables 11–14. Authors
    Figures References Citations Keywords Metrics More Like This Performance of Real-Time
    Kinematic Global Positioning System and Automatic Level Surveying for Height Determination
    - A Comparison 2009 International Conference on Signal Acquisition and Processing
    Published: 2009 Miniature Interferometer Terminals for Earth Surveying: Ambiguity
    And Multipath with Global Positioning System IEEE Transactions on Geoscience and
    Remote Sensing Published: 1981 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/10005208/10139317.pdf
  publication_year: 2023
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  title: 'GPS Spoofing Attacks in FANETs: A Systematic Literature Review'
  verbatim_quote1: '"Machine learning techniques, such as supervised learning, unsupervised
    learning, and reinforcement learning, have been widely used in irrigation management
    to improve the efficiency and effectiveness of irrigation systems."'
  verbatim_quote2: '"The defense mechanisms were classified based on their objectives.
    Specifically, detection mechanisms, which sense or alert the presence of attack,
    mitigation mechanisms, which help the drones to recover from the effects of the
    attack, prevention mechanisms, which secure the drones from being attacked."'
  verbatim_quote3: '>'
